================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:29:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import deque
from heapq import heapify, heappop, heappush
from itertools import combinations, permutations
from bisect import bisect, bisect_left

def compute_gcd(first_number, second_number):
    maximum_value = max(first_number, second_number)
    minimum_value = min(first_number, second_number)
    product_of_numbers = maximum_value * minimum_value

    while maximum_value % minimum_value > 0:
        maximum_value, minimum_value = minimum_value, maximum_value % minimum_value

    return minimum_value

def solve_problem():
    input_function = sys.stdin.readline
    modulus = 7 + 10 ** 9

    total_number_count = int(input_function())
    integer_array = [int(single_value) for single_value in input_function().split()]

    if total_number_count == 1:
        print(1)
    else:
        least_common_multiple = integer_array[0]

        for current_index in range(1, total_number_count):
            current_gcd = compute_gcd(least_common_multiple, integer_array[current_index])
            least_common_multiple = least_common_multiple * integer_array[current_index] // current_gcd

        least_common_multiple %= modulus

        sum_of_results = 0

        for current_index, current_integer in enumerate(integer_array):
            modular_inverse = pow(current_integer, modulus - 2, modulus)
            sum_of_results += least_common_multiple * modular_inverse
            sum_of_results %= modulus

        print(sum_of_results)

    return 0

if __name__ == "__main__":
    solve_problem()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026953943073749542
    2. '\n' → logprob: -3.901953935623169
    3. '<|end|>' → logprob: -6.651954174041748
    4. 'import' → logprob: -7.151954174041748
    5. 'newline' → logprob: -7.151954174041748
    6. '\' → logprob: -7.151954174041748
    7. '```' → logprob: -7.526954174041748
    8. '' → logprob: -7.901954174041748
    9. '<|end|>' → logprob: -7.901954174041748
    10. 'print' → logprob: -8.27695369720459

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.012081976048648357
    2. 'os' → logprob: -4.762082099914551
    3. ' collections' → logprob: -6.887082099914551
    4. ' ' → logprob: -7.512082099914551
    5. ' math' → logprob: -7.887082099914551
    6. ' Py' → logprob: -7.887082099914551
    7. ' pathlib' → logprob: -8.01208209991455
    8. ' typing' → logprob: -8.63708209991455
    9. 'collections' → logprob: -9.38708209991455
    10. ' datetime' → logprob: -9.38708209991455

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5418409705162048
    2. 'import' → logprob: -0.9168409705162048
    3. '.' → logprob: -4.04184103012085
    4. '_' → logprob: -8.291840553283691
    5. ' ' → logprob: -8.416840553283691
    6. '.import' → logprob: -9.166840553283691
    7. '_import' → logprob: -9.166840553283691
    8. '<|end|>' → logprob: -9.166840553283691
    9. '```' → logprob: -9.291840553283691
    10. '	import' → logprob: -10.416840553283691

Token 6: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.2895837128162384
    2. ' deque' → logprob: -1.664583683013916
    3. ' abc' → logprob: -3.039583683013916
    4. 'deque' → logprob: -4.539583683013916
    5. 'abc' → logprob: -6.414583683013916
    6. ' Counter' → logprob: -6.914583683013916
    7. ' named' → logprob: -7.289583683013916
    8. ' Ordered' → logprob: -9.914584159851074
    9. 'default' → logprob: -10.039584159851074
    10. ' import' → logprob: -10.039584159851074

Token 7: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9681236147880554
    2. '

' → logprob: -1.4681236743927002
    3. 'import' → logprob: -1.7181236743927002
    4. '
' → logprob: -2.0931236743927
    5. '```' → logprob: -3.4681236743927
    6. '\' → logprob: -3.8431236743927
    7. '<|end|>' → logprob: -3.8431236743927
    8. 'newline' → logprob: -5.593123435974121
    9. '<|end|>' → logprob: -5.968123435974121
    10. '' → logprob: -6.218123435974121

Token 8: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6602548956871033
    2. '\n' → logprob: -1.660254955291748
    3. '
' → logprob: -2.035254955291748
    4. 'import' → logprob: -2.535254955291748
    5. '```' → logprob: -2.660254955291748
    6. '\' → logprob: -5.535254955291748
    7. '<|end|>' → logprob: -5.660254955291748
    8. ',' → logprob: -6.410254955291748
    9. '<|end|>' → logprob: -7.035254955291748
    10. '' → logprob: -7.910254955291748

Token 9: ' heap' (ID: 37237)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.4926671087741852
    2. ' typing' → logprob: -1.3676670789718628
    3. ' itertools' → logprob: -2.4926671981811523
    4. ' math' → logprob: -4.117667198181152
    5. ' heap' → logprob: -4.117667198181152
    6. 'queue' → logprob: -5.242667198181152
    7. ' threading' → logprob: -5.742667198181152
    8. ' collections' → logprob: -6.242667198181152
    9. ' copy' → logprob: -6.367667198181152
    10. 'typing' → logprob: -6.367667198181152

Token 10: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -15.125000953674316
    3. 'import' → logprob: -16.875
    4. 'queue' → logprob: -16.875
    5. 's' → logprob: -17.0
    6. ' queue' → logprob: -17.125
    7. ' q' → logprob: -17.625
    8. 'space' → logprob: -17.75
    9. '_' → logprob: -18.125
    10. 'dict' → logprob: -18.25

Token 11: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0037618326023221016
    2. 'import' → logprob: -5.6287617683410645
    3. ' ' → logprob: -8.753762245178223
    4. '_import' → logprob: -13.753762245178223
    5. '	import' → logprob: -14.128762245178223
    6. '.' → logprob: -14.378762245178223
    7. ' impor' → logprob: -15.378762245178223
    8. ' im' → logprob: -15.503762245178223
    9. ' Import' → logprob: -16.003761291503906
    10. '<|end|>' → logprob: -16.128761291503906

Token 12: ' heap' (ID: 37237)
  Prédit: ' he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.16049900650978088
    2. 'he' → logprob: -1.9104989767074585
    3. 'heap' → logprob: -8.53549861907959
    4. ' heap' → logprob: -10.28549861907959
    5. ' n' → logprob: -11.28549861907959
    6. '.he' → logprob: -11.66049861907959
    7. 'import' → logprob: -12.53549861907959
    8. ' ' → logprob: -12.53549861907959
    9. 'nl' → logprob: -12.53549861907959
    10. 'n' → logprob: -12.66049861907959

Token 13: 'ify' (ID: 1985)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.29073527455329895
    2. 'p' → logprob: -1.5407352447509766
    3. 'replace' → logprob: -3.7907352447509766
    4. 'ify' → logprob: -5.415735244750977
    5. 'app' → logprob: -6.040735244750977
    6. 'pp' → logprob: -6.040735244750977
    7. 'queue' → logprob: -6.290735244750977
    8. 'push' → logprob: -6.415735244750977
    9. 'ush' → logprob: -7.415735244750977
    10. 'n' → logprob: -7.915735244750977

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014992110431194305
    2. 'import' → logprob: -4.6399922370910645
    3. ',
' → logprob: -6.1399922370910645
    4. '```' → logprob: -6.7649922370910645
    5. '
' → logprob: -7.2649922370910645
    6. '\n' → logprob: -7.6399922370910645
    7. '<|end|>' → logprob: -8.389991760253906
    8. '\' → logprob: -9.139991760253906
    9. ' ,' → logprob: -9.889991760253906
    10. ' ' → logprob: -10.014991760253906

Token 15: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.14362549781799316
    2. ' he' → logprob: -2.018625497817993
    3. '.he' → logprob: -7.143625259399414
    4. '```' → logprob: -9.893625259399414
    5. '_he' → logprob: -10.018625259399414
    6. 'heap' → logprob: -10.018625259399414
    7. ' ' → logprob: -11.893625259399414
    8. 'nl' → logprob: -13.143625259399414
    9. 'merge' → logprob: -13.268625259399414
    10. '-he' → logprob: -13.393625259399414

Token 16: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.5954712075181305e-05
    2. 'ap' → logprob: -10.250036239624023
    3. 'a' → logprob: -14.875036239624023
    4. 'appen' → logprob: -16.750036239624023
    5. ' app' → logprob: -18.750036239624023
    6. 'appa' → logprob: -19.000036239624023
    7. 'pp' → logprob: -19.125036239624023
    8. 'append' → logprob: -19.625036239624023
    9. 'apps' → logprob: -19.750036239624023
    10. '	app' → logprob: -19.875036239624023

Token 17: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0002622894535306841
    2. 'op' → logprob: -8.250262260437012
    3. 'us' → logprob: -14.125262260437012
    4. 'u' → logprob: -16.125263214111328
    5. 'o' → logprob: -16.250263214111328
    6. 'USH' → logprob: -17.375263214111328
    7. '   ' → logprob: -17.750263214111328
    8. '

' → logprob: -18.125263214111328
    9. '[' → logprob: -18.500263214111328
    10. 'ut' → logprob: -18.750263214111328

Token 18: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.32247394323349
    2. '
' → logprob: -1.6974740028381348
    3. '```' → logprob: -3.5724740028381348
    4. ',' → logprob: -3.8224740028381348
    5. 'import' → logprob: -4.447474002838135
    6. '\n' → logprob: -4.822474002838135
    7. '\' → logprob: -5.072474002838135
    8. '' → logprob: -5.447474002838135
    9. '
' → logprob: -6.072474002838135
    10. '`

' → logprob: -6.322474002838135

Token 19: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.4302971363067627
    2. ' he' → logprob: -1.0552971363067627
    3. 'heap' → logprob: -6.555296897888184
    4. ' heap' → logprob: -8.930296897888184
    5. '```' → logprob: -10.430296897888184
    6. ' ' → logprob: -12.555296897888184
    7. '.he' → logprob: -13.055296897888184
    8. 'hep' → logprob: -14.055296897888184
    9. 'hea' → logprob: -14.430296897888184
    10. '   ' → logprob: -14.430296897888184

Token 20: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.0325924449716695e-05
    2. 'ap' → logprob: -11.50001049041748
    3. 'APP' → logprob: -16.750009536743164
    4. 'a' → logprob: -17.375009536743164
    5. 'App' → logprob: -17.500009536743164
    6. ' app' → logprob: -17.875009536743164
    7. 'appen' → logprob: -18.125009536743164
    8. 'apps' → logprob: -18.375009536743164
    9. '_app' → logprob: -18.875009536743164
    10. 'ап' → logprob: -18.875009536743164

Token 21: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0003049570368602872
    2. 'op' → logprob: -8.12530517578125
    3. 'p' → logprob: -12.12530517578125
    4. 'sh' → logprob: -12.75030517578125
    5. 'app' → logprob: -16.00030517578125
    6. 'o' → logprob: -16.50030517578125
    7. 'us' → logprob: -16.75030517578125
    8. 'USH' → logprob: -16.87530517578125
    9. 'ap' → logprob: -17.12530517578125
    10. '```' → logprob: -17.25030517578125

Token 22: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4392320215702057
    2. '\' → logprob: -1.8142319917678833
    3. '

' → logprob: -2.439232110977173
    4. '\n' → logprob: -3.314232110977173
    5. '' → logprob: -3.439232110977173
    6. 'def' → logprob: -3.939232110977173
    7. '
' → logprob: -5.064231872558594
    8. '```' → logprob: -5.064231872558594
    9. 'd' → logprob: -6.064231872558594
    10. '`' → logprob: -7.564231872558594

Token 23: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4695831835269928
    2. '
' → logprob: -1.0945831537246704
    3. '\' → logprob: -4.344583034515381
    4. '\n' → logprob: -4.719583034515381
    5. '' → logprob: -5.344583034515381
    6. 'def' → logprob: -5.469583034515381
    7. '```' → logprob: -5.469583034515381
    8. 'd' → logprob: -5.969583034515381
    9. '
' → logprob: -7.094583034515381
    10. '`' → logprob: -8.219583511352539

Token 24: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.4821750223636627
    2. ' itertools' → logprob: -1.3571749925613403
    3. ' typing' → logprob: -2.23217511177063
    4. 'math' → logprob: -4.357174873352051
    5. ' functools' → logprob: -6.357174873352051
    6. 'typing' → logprob: -6.482174873352051
    7. ' operator' → logprob: -7.482174873352051
    8. ' queue' → logprob: -8.35717487335205
    9. ' bis' → logprob: -8.60717487335205
    10. ' datetime' → logprob: -8.98217487335205

Token 25: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06210324913263321
    2. 'import' → logprob: -2.937103271484375
    3. '.' → logprob: -5.062103271484375
    4. ' .' → logprob: -7.937103271484375
    5. '	import' → logprob: -8.562103271484375
    6. '.import' → logprob: -9.187103271484375
    7. ' ' → logprob: -10.312103271484375
    8. ' itertools' → logprob: -10.437103271484375
    9. '.im' → logprob: -10.562103271484375
    10. '_import' → logprob: -10.687103271484375

Token 26: ' combinations' (ID: 43835)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -1.3269586563110352
    2. ' count' → logprob: -1.4519586563110352
    3. 'count' → logprob: -1.5769586563110352
    4. ' group' → logprob: -2.076958656311035
    5. ' cycle' → logprob: -3.201958656311035
    6. ' chain' → logprob: -3.576958656311035
    7. ' combinations' → logprob: -3.701958656311035
    8. 'com' → logprob: -3.951958656311035
    9. 'per' → logprob: -4.201958656311035
    10. 'group' → logprob: -4.576958656311035

Token 27: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.38769403100013733
    2. '
' → logprob: -1.512694001197815
    3. '\n' → logprob: -2.7626941204071045
    4. '\' → logprob: -4.637693881988525
    5. 'def' → logprob: -5.137693881988525
    6. '```' → logprob: -5.137693881988525
    7. '<|end|>' → logprob: -5.262693881988525
    8. '' → logprob: -6.012693881988525
    9. 'import' → logprob: -6.512693881988525
    10. 'n' → logprob: -6.512693881988525

Token 28: ' permutations' (ID: 174595)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.6031625866889954
    2. 'per' → logprob: -1.3531625270843506
    3. ' permutations' → logprob: -2.4781625270843506
    4. ' product' → logprob: -2.6031625270843506
    5. 'group' → logprob: -4.35316276550293
    6. 'count' → logprob: -4.60316276550293
    7. 'chain' → logprob: -5.22816276550293
    8. ' group' → logprob: -5.60316276550293
    9. ' chain' → logprob: -6.35316276550293
    10. 'com' → logprob: -6.85316276550293

Token 29: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7904053330421448
    2. '\n' → logprob: -1.5404052734375
    3. 'def' → logprob: -2.2904052734375
    4. '

' → logprob: -2.2904052734375
    5. '\' → logprob: -2.5404052734375
    6. '<|end|>' → logprob: -4.1654052734375
    7. '```' → logprob: -4.6654052734375
    8. '' → logprob: -5.0404052734375
    9. '#' → logprob: -5.4154052734375
    10. 'import' → logprob: -5.6654052734375

Token 30: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5716652274131775
    2. '

' → logprob: -2.5716652870178223
    3. '\' → logprob: -2.8216652870178223
    4. '```' → logprob: -2.9466652870178223
    5. '\n' → logprob: -3.0716652870178223
    6. '#' → logprob: -3.0716652870178223
    7. '<|end|>' → logprob: -3.4466652870178223
    8. 'import' → logprob: -3.4466652870178223
    9. 'def' → logprob: -3.5716652870178223
    10. 'n' → logprob: -3.8216652870178223

Token 31: ' bis' (ID: 7204)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.13515605032444
    2. 'math' → logprob: -2.1351561546325684
    3. ' operator' → logprob: -5.135156154632568
    4. ' functools' → logprob: -6.385156154632568
    5. 'operator' → logprob: -7.635156154632568
    6. ' typing' → logprob: -9.88515567779541
    7. ' copy' → logprob: -10.76015567779541
    8. 'fun' → logprob: -11.38515567779541
    9. ' collections' → logprob: -11.63515567779541
    10. 'collections' → logprob: -11.76015567779541

Token 32: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -5.319370302458992e-06
    2. 'e' → logprob: -12.750005722045898
    3. 'ec' → logprob: -14.500005722045898
    4. 'ects' → logprob: -14.625005722045898
    5. 'ected' → logprob: -14.625005722045898
    6. 'ectl' → logprob: -14.750005722045898
    7. 'ector' → logprob: -15.875005722045898
    8. 'ections' → logprob: -16.0000057220459
    9. 'ecta' → logprob: -16.0000057220459
    10. '>' → logprob: -16.1250057220459

Token 33: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.034234534949064255
    2. 'import' → logprob: -3.4092345237731934
    3. ' ' → logprob: -7.784234523773193
    4. '	import' → logprob: -9.784235000610352
    5. '_import' → logprob: -9.909235000610352
    6. '<|end|>' → logprob: -10.534235000610352
    7. '_' → logprob: -11.659235000610352
    8. ' ' → logprob: -11.909235000610352
    9. 'ort' → logprob: -12.159235000610352
    10. ' ```' → logprob: -12.909235000610352

Token 34: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.014424975961446762
    2. 'bis' → logprob: -4.514424800872803
    3. ' ins' → logprob: -5.764424800872803
    4. 'ins' → logprob: -8.389425277709961
    5. ' ' → logprob: -12.514425277709961
    6. '```' → logprob: -12.764425277709961
    7. '	b' → logprob: -15.889425277709961
    8. '.ins' → logprob: -16.51442527770996
    9. '_ins' → logprob: -16.88942527770996
    10. ' ' → logprob: -16.88942527770996

Token 35: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -6.630610641877865e-06
    2. 'e' → logprob: -12.000006675720215
    3. 'ec' → logprob: -15.125006675720215
    4. 'ectl' → logprob: -16.6250057220459
    5. 'ecta' → logprob: -17.3750057220459
    6. 'ected' → logprob: -17.8750057220459
    7. 'sect' → logprob: -18.0000057220459
    8. 'ects' → logprob: -18.2500057220459
    9. 'ectin' → logprob: -18.3750057220459
    10. '```' → logprob: -19.1250057220459

Token 36: ',' (ID: 11)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.08077803254127502
    2. '_' → logprob: -3.080778121948242
    3. '_right' → logprob: -3.455778121948242
    4. '_ins' → logprob: -11.080778121948242
    5. ' _' → logprob: -11.205778121948242
    6. '_LEFT' → logprob: -11.455778121948242
    7. '<|end|>' → logprob: -11.705778121948242
    8. 'Left' → logprob: -11.705778121948242
    9. '```' → logprob: -11.705778121948242
    10. ',' → logprob: -11.955778121948242

Token 37: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.6303329467773438
    2. ' bis' → logprob: -0.8803329467773438
    3. 'ins' → logprob: -3.2553329467773438
    4. ' ins' → logprob: -4.255332946777344
    5. '_ins' → logprob: -8.755332946777344
    6. 'b' → logprob: -11.255332946777344
    7. '```' → logprob: -12.630332946777344
    8. '_left' → logprob: -13.005332946777344
    9. '.ins' → logprob: -13.130332946777344
    10. 'is' → logprob: -13.755332946777344

Token 38: 'ect' (ID: 534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.22018954157829285
    2. 'sect' → logprob: -2.2201895713806152
    3. 'ns' → logprob: -2.9701895713806152
    4. 's' → logprob: -3.8451895713806152
    5. 'ct' → logprob: -4.595189571380615
    6. 'ect' → logprob: -5.595189571380615
    7. 'nd' → logprob: -7.970189571380615
    8. 'sc' → logprob: -8.095189094543457
    9. 'se' → logprob: -8.220189094543457
    10. 'st' → logprob: -8.970189094543457

Token 39: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.011144972406327724
    2. '_right' → logprob: -4.511145114898682
    3. '_' → logprob: -9.386144638061523
    4. 'left' → logprob: -11.761144638061523
    5. 'l' → logprob: -13.261144638061523
    6. 'right' → logprob: -13.511144638061523
    7. 'Left' → logprob: -14.261144638061523
    8. 'r' → logprob: -14.761144638061523
    9. '_le' → logprob: -15.636144638061523
    10. '_

' → logprob: -15.761144638061523

Token 40: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.150766059756279
    2. '<|end|>' → logprob: -2.650766134262085
    3. '

' → logprob: -3.275766134262085
    4. '\n' → logprob: -4.150765895843506
    5. ',' → logprob: -5.275765895843506
    6. '' → logprob: -5.650765895843506
    7. 'import' → logprob: -6.650765895843506
    8. 'n' → logprob: -6.775765895843506
    9. '```' → logprob: -7.525765895843506
    10. '
' → logprob: -7.525765895843506

Token 41: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0410277843475342
    2. 'd' → logprob: -1.1660277843475342
    3. '
' → logprob: -2.291027784347534
    4. '\' → logprob: -2.291027784347534
    5. '' → logprob: -3.166027784347534
    6. 'n' → logprob: -3.791027784347534
    7. '\n' → logprob: -3.791027784347534
    8. 'def' → logprob: -4.541028022766113
    9. '

' → logprob: -5.166028022766113
    10. '```' → logprob: -5.416028022766113

Token 42: ' compute' (ID: 23864)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04706468805670738
    2. '_' → logprob: -3.172064781188965
    3. ' _' → logprob: -6.422064781188965
    4. ' main' → logprob: -7.422064781188965
    5. ' space' → logprob: -7.672064781188965
    6. ' bfs' → logprob: -7.922064781188965
    7. ' dfs' → logprob: -8.672064781188965
    8. ' solve' → logprob: -8.922064781188965
    9. ' max' → logprob: -9.297064781188965
    10. ' a' → logprob: -9.547064781188965

Token 43: '_g' (ID: 5439)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0006148627726361156
    2. '_sum' → logprob: -9.000615119934082
    3. '_max' → logprob: -9.250615119934082
    4. '(' → logprob: -9.250615119934082
    5. '_value' → logprob: -10.250615119934082
    6. '_factor' → logprob: -10.875615119934082
    7. '_array' → logprob: -10.875615119934082
    8. '_area' → logprob: -11.000615119934082
    9. '_distance' → logprob: -11.000615119934082
    10. '_a' → logprob: -11.625615119934082

Token 44: 'cd' (ID: 8301)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.77074134349823
    2. 'cd' → logprob: -1.27074134349823
    3. 'e' → logprob: -2.5207414627075195
    4. '_' → logprob: -2.7707414627075195
    5. 'reat' → logprob: -3.2707414627075195
    6. 'a' → logprob: -3.5207414627075195
    7. 'roup' → logprob: -4.5207414627075195
    8. 'CD' → logprob: -5.3957414627075195
    9. 'u' → logprob: -5.5207414627075195
    10. 'raph' → logprob: -5.7707414627075195

Token 45: '(first' (ID: 31998)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00331650348380208
    2. '_' → logprob: -6.003316402435303
    3. ' (' → logprob: -7.628316402435303
    4. '<|end|>' → logprob: -8.753316879272461
    5. '(a' → logprob: -10.128316879272461
    6. '_(' → logprob: -10.128316879272461
    7. '(x' → logprob: -11.003316879272461
    8. '(_' → logprob: -11.128316879272461
    9. '```' → logprob: -11.628316879272461
    10. '(value' → logprob: -11.753316879272461

Token 46: '_number' (ID: 11733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.154883474111557
    2. ',' → logprob: -2.40488338470459
    3. ')' → logprob: -3.52988338470459
    4. '_)' → logprob: -4.15488338470459
    5. '_,' → logprob: -5.27988338470459
    6. ' ' → logprob: -7.15488338470459
    7. ' )' → logprob: -7.90488338470459
    8. '(' → logprob: -8.02988338470459
    9. ' ,' → logprob: -8.27988338470459
    10. ',)' → logprob: -8.27988338470459

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020679449662566185
    2. '):' → logprob: -6.752068042755127
    3. ')' → logprob: -7.127068042755127
    4. ' ,' → logprob: -9.752067565917969
    5. ',
' → logprob: -11.752067565917969
    6. ',n' → logprob: -12.127067565917969
    7. ',)' → logprob: -12.127067565917969
    8. 's' → logprob: -12.502067565917969
    9. '<|end|>' → logprob: -13.377067565917969
    10. ',a' → logprob: -13.752067565917969

Token 48: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.014244244433939457
    2. 'second' → logprob: -4.264244079589844
    3. '	second' → logprob: -10.014244079589844
    4. ' ' → logprob: -11.139244079589844
    5. ' space' → logprob: -11.889244079589844
    6. ' other' → logprob: -12.389244079589844
    7. ' secon' → logprob: -13.264244079589844
    8. ' s' → logprob: -13.639244079589844
    9. ' seconde' → logprob: -13.639244079589844
    10. '_second' → logprob: -13.639244079589844

Token 49: '_number' (ID: 11733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006956434343010187
    2. '_)' → logprob: -5.631956577301025
    3. '_number' → logprob: -6.131956577301025
    4. ')' → logprob: -7.631956577301025
    5. '_token' → logprob: -8.006956100463867
    6. ' _' → logprob: -8.881956100463867
    7. ')_' → logprob: -9.756956100463867
    8. '_s' → logprob: -10.631956100463867
    9. '_),' → logprob: -11.006956100463867
    10. '_,' → logprob: -11.131956100463867

Token 50: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014300900511443615
    2. ')' → logprob: -4.26430082321167
    3. ':' → logprob: -9.389301300048828
    4. ',' → logprob: -10.389301300048828
    5. ' ):' → logprob: -11.014301300048828
    6. '):
' → logprob: -12.639301300048828
    7. '=' → logprob: -15.014301300048828
    8. ' ' → logprob: -15.139301300048828
    9. '():' → logprob: -15.389301300048828
    10. ' )' → logprob: -15.389301300048828

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08514320850372314
    2. ':' → logprob: -2.5851430892944336
    3. ' ' → logprob: -5.835143089294434
    4. '    
' → logprob: -7.335143089294434
    5. ':
' → logprob: -7.460143089294434
    6. ' 
' → logprob: -7.835143089294434
    7. '    ' → logprob: -7.960143089294434
    8. ' :' → logprob: -8.335143089294434
    9. ' return' → logprob: -8.460143089294434
    10. '	return' → logprob: -9.085143089294434

Token 52: ' maximum' (ID: 10562)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0053800344467163
    2. ' 
' → logprob: -1.1303800344467163
    3. '   ' → logprob: -2.130380153656006
    4. '    ' → logprob: -2.630380153656006
    5. ' return' → logprob: -3.255380153656006
    6. '    
' → logprob: -3.255380153656006
    7. '     
' → logprob: -4.505380153656006
    8. ' if' → logprob: -4.880380153656006
    9. ' )' → logprob: -5.380380153656006
    10. ' i' → logprob: -5.755380153656006

Token 53: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6637136340141296
    2. ' =' → logprob: -1.5387136936187744
    3. '_g' → logprob: -2.1637136936187744
    4. '(' → logprob: -3.0387136936187744
    5. '_div' → logprob: -3.2887136936187744
    6. '=' → logprob: -3.6637136936187744
    7. ' ' → logprob: -4.288713455200195
    8. '_value' → logprob: -4.788713455200195
    9. ')' → logprob: -5.663713455200195
    10. ' _' → logprob: -6.163713455200195

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03482427820563316
    2. '=' → logprob: -4.034824371337891
    3. ' ' → logprob: -4.659824371337891
    4. '_' → logprob: -6.159824371337891
    5. '   ' → logprob: -6.159824371337891
    6. '    ' → logprob: -7.159824371337891
    7. '(' → logprob: -7.409824371337891
    8. ')' → logprob: -7.659824371337891
    9. ',' → logprob: -8.65982437133789
    10. '  ' → logprob: -8.65982437133789

Token 55: ' max' (ID: 2999)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.6063171625137329
    2. ' max' → logprob: -0.8563171625137329
    3. ' ' → logprob: -4.106317043304443
    4. 'max' → logprob: -5.481317043304443
    5. ' abs' → logprob: -5.606317043304443
    6. 'first' → logprob: -5.856317043304443
    7. ' min' → logprob: -6.231317043304443
    8. '   ' → logprob: -8.731317520141602
    9. ' math' → logprob: -9.231317520141602
    10. ' int' → logprob: -9.356317520141602

Token 56: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.048628926277160645
    2. '(' → logprob: -3.048628807067871
    3. '(max' → logprob: -10.298628807067871
    4. '(second' → logprob: -12.798628807067871
    5. ' (' → logprob: -12.923628807067871
    6. 'first' → logprob: -13.423628807067871
    7. '(f' → logprob: -15.173628807067871
    8. '(
' → logprob: -16.048629760742188
    9. '(abs' → logprob: -16.423629760742188
    10. '(initial' → logprob: -16.548629760742188

Token 57: '_number' (ID: 11733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09272158145904541
    2. '_number' → logprob: -2.467721462249756
    3. ' _' → logprob: -6.967721462249756
    4. '_)' → logprob: -7.092721462249756
    5. ')_' → logprob: -7.342721462249756
    6. '_value' → logprob: -7.467721462249756
    7. ')' → logprob: -7.842721462249756
    8. '_second' → logprob: -9.092721939086914
    9. '_,' → logprob: -10.092721939086914
    10. '(_' → logprob: -10.342721939086914

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001173321157693863
    2. ' ,' → logprob: -6.751173496246338
    3. ',
' → logprob: -13.62617301940918
    4. 'second' → logprob: -14.25117301940918
    5. ' ' → logprob: -14.87617301940918
    6. ',

' → logprob: -15.12617301940918
    7. ')' → logprob: -15.75117301940918
    8. ',last' → logprob: -16.00117301940918
    9. ' second' → logprob: -16.37617301940918
    10. '‌,' → logprob: -16.50117301940918

Token 59: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.020559756085276604
    2. 'second' → logprob: -3.895559787750244
    3. ' ' → logprob: -11.395559310913086
    4. '	second' → logprob: -12.395559310913086
    5. '(second' → logprob: -13.645559310913086
    6. '_second' → logprob: -14.270559310913086
    7. 'Second' → logprob: -15.020559310913086
    8. ' ' → logprob: -16.270559310913086
    9. '.second' → logprob: -16.520559310913086
    10. ' 
' → logprob: -16.770559310913086

Token 60: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.08237051218748093
    2. '_' → logprob: -2.7073705196380615
    3. ')' → logprob: -5.082370281219482
    4. '_value' → logprob: -6.207370281219482
    5. ')_' → logprob: -6.332370281219482
    6. '_token' → logprob: -6.957370281219482
    7. '_character' → logprob: -7.707370281219482
    8. '_)' → logprob: -8.08237075805664
    9. '_numbers' → logprob: -8.95737075805664
    10. '_string' → logprob: -10.20737075805664

Token 61: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010669301263988018
    2. ' )' → logprob: -5.635669231414795
    3. ')
' → logprob: -5.635669231414795
    4. '   ' → logprob: -5.760669231414795
    5. ' )
' → logprob: -8.510669708251953
    6. ',' → logprob: -9.760669708251953
    7. ',
' → logprob: -10.010669708251953
    8. 'def' → logprob: -12.260669708251953
    9. ' ' → logprob: -12.885669708251953
    10. '    
' → logprob: -13.010669708251953

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7877678275108337
    2. '    
' → logprob: -1.2877678871154785
    3. '
' → logprob: -2.2877678871154785
    4. '  
' → logprob: -3.0377678871154785
    5. ' 
' → logprob: -3.1627678871154785
    6. '   
' → logprob: -3.5377678871154785
    7. ' for' → logprob: -4.5377678871154785
    8. ',' → logprob: -4.7877678871154785
    9. 'def' → logprob: -5.2877678871154785
    10. ',
' → logprob: -5.2877678871154785

Token 63: ' minimum' (ID: 11085)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.8786172866821289
    2. 'while' → logprob: -1.628617286682129
    3. 'minimum' (adapté à ' minimum') → logprob: -2.378617286682129
    4. ' for' → logprob: -2.628617286682129
    5. ' minimum' → logprob: -2.628617286682129
    6. '   ' → logprob: -3.378617286682129
    7. 'for' → logprob: -3.503617286682129
    8. 'min' → logprob: -3.878617286682129
    9. ' gcd' → logprob: -4.128617286682129
    10. ' min' → logprob: -4.503617286682129

Token 64: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0014015485066920519
    2. '_' → logprob: -6.626401424407959
    3. '_val' → logprob: -10.626401901245117
    4. '_number' → logprob: -10.626401901245117
    5. ' _' → logprob: -11.126401901245117
    6. ' =' → logprob: -12.126401901245117
    7. 'value' → logprob: -13.376401901245117
    8. '<|end|>' → logprob: -14.001401901245117
    9. '_Value' → logprob: -14.751401901245117
    10. '=' → logprob: -15.001401901245117

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001350234029814601
    2. '=' → logprob: -6.626350402832031
    3. ' ' → logprob: -10.751350402832031
    4. ',' → logprob: -13.126350402832031
    5. ' =
' → logprob: -15.001350402832031
    6. ' ,' → logprob: -15.376350402832031
    7. '  ' → logprob: -17.12635040283203
    8. ' ' → logprob: -17.12635040283203
    9. ' =)' → logprob: -17.37635040283203
    10. '    ' → logprob: -17.56385040283203

Token 66: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.005271941889077425
    2. 'min' → logprob: -5.255271911621094
    3. ' max' → logprob: -10.380271911621094
    4. ' ' → logprob: -12.630271911621094
    5. '	min' → logprob: -13.130271911621094
    6. '(min' → logprob: -14.380271911621094
    7. 'max' → logprob: -14.880271911621094
    8. '1' → logprob: -15.630271911621094
    9. ' first' → logprob: -16.255271911621094
    10. ' minimum' → logprob: -16.255271911621094

Token 67: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.5834128856658936
    2. '(' → logprob: -0.8334128856658936
    3. '(max' → logprob: -5.083413124084473
    4. '(second' → logprob: -6.958413124084473
    5. '(min' → logprob: -8.333413124084473
    6. '(
' → logprob: -11.208413124084473
    7. '(f' → logprob: -11.333413124084473
    8. ' (' → logprob: -11.583413124084473
    9. '(previous' → logprob: -12.583413124084473
    10. '(initial' → logprob: -13.083413124084473

Token 68: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.0026031259912997484
    2. '_value' → logprob: -6.627603054046631
    3. '_' → logprob: -6.752603054046631
    4. '_token' → logprob: -9.627603530883789
    5. ')' → logprob: -11.127603530883789
    6. 'number' → logprob: -11.502603530883789
    7. '_numbers' → logprob: -12.627603530883789
    8. '_Number' → logprob: -13.002603530883789
    9. '_NUMBER' → logprob: -13.252603530883789
    10. 'Number' → logprob: -13.502603530883789

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039373442996293306
    2. ' ,' → logprob: -7.875393867492676
    3. ')' → logprob: -12.500393867492676
    4. ',
' → logprob: -12.625393867492676
    5. '<|end|>' → logprob: -13.500393867492676
    6. 'second' → logprob: -14.000393867492676
    7. ' ' → logprob: -14.125393867492676
    8. '‌,' → logprob: -14.500393867492676
    9. '),' → logprob: -14.500393867492676
    10. '   ' → logprob: -15.250393867492676

Token 70: ' second' (ID: 3099)
  Prédit: ' maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.8153222799301147
    2. ' max' → logprob: -2.1903223991394043
    3. 'maximum' → logprob: -2.1903223991394043
    4. 'max' → logprob: -2.5653223991394043
    5. 'second' → logprob: -2.6903223991394043
    6. ' second' → logprob: -2.8153223991394043
    7. ' first' → logprob: -2.9403223991394043
    8. 'first' → logprob: -3.0653223991394043
    9. 'minimum' → logprob: -4.065322399139404
    10. ' minimum' → logprob: -4.690322399139404

Token 71: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.10044938325881958
    2. '_value' → logprob: -2.350449323654175
    3. '_' → logprob: -8.725449562072754
    4. ')' → logprob: -10.725449562072754
    5. 'number' → logprob: -10.850449562072754
    6. '_token' → logprob: -11.350449562072754
    7. '_amount' → logprob: -11.850449562072754
    8. ',' → logprob: -12.600449562072754
    9. '_numbers' → logprob: -12.975449562072754
    10. ')_' → logprob: -13.350449562072754

Token 72: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09282620996236801
    2. '   ' → logprob: -2.5928261280059814
    3. ' )' → logprob: -4.7178263664245605
    4. ')
' → logprob: -6.4678263664245605
    5. '    
' → logprob: -6.9678263664245605
    6. '
' → logprob: -7.3428263664245605
    7. ' 
' → logprob: -7.9678263664245605
    8. ' )
' → logprob: -8.217825889587402
    9. ',' → logprob: -8.467825889587402
    10. ' ' → logprob: -8.717825889587402

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3794112503528595
    2. '
' → logprob: -1.254411220550537
    3. '    
' → logprob: -4.379411220550537
    4. ' while' → logprob: -4.504411220550537
    5. 'while' → logprob: -5.754411220550537
    6. ' 
' → logprob: -7.004411220550537
    7. '  
' → logprob: -7.129411220550537
    8. '   
' → logprob: -7.504411220550537
    9. '	while' → logprob: -7.504411220550537
    10. '<|end|>' → logprob: -7.879411220550537

Token 74: ' product' (ID: 1888)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6413528919219971
    2. '   ' → logprob: -1.016352891921997
    3. 'while' → logprob: -2.641352891921997
    4. '
' → logprob: -3.391352891921997
    5. '    
' → logprob: -5.516352653503418
    6. '	while' → logprob: -6.766352653503418
    7. ' 
' → logprob: -8.016352653503418
    8. '```' → logprob: -8.016352653503418
    9. '   
' → logprob: -8.891352653503418
    10. '  
' → logprob: -9.016352653503418

Token 75: '_of' (ID: 8023)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012604303658008575
    2. '=' → logprob: -4.512604236602783
    3. '_' → logprob: -6.512604236602783
    4. ' ' → logprob: -9.762604713439941
    5. '  ' → logprob: -12.387604713439941
    6. ' _' → logprob: -13.012604713439941
    7. '_=' → logprob: -13.637604713439941
    8. ',' → logprob: -14.012604713439941
    9. ' =
' → logprob: -14.387604713439941
    10. 's' → logprob: -14.637604713439941

Token 76: '_numbers' (ID: 76842)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.5263065099716187
    2. 'maximum' → logprob: -0.9013065099716187
    3. ' maximum' → logprob: -6.901306629180908
    4. ' minimum' → logprob: -7.526306629180908
    5. 'first' → logprob: -7.651306629180908
    6. 'the' → logprob: -7.901306629180908
    7. 'max' → logprob: -8.15130615234375
    8. '_values' → logprob: -8.65130615234375
    9. 's' → logprob: -9.65130615234375
    10. 'values' → logprob: -10.02630615234375

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014165272004902363
    2. '=' → logprob: -4.26416540145874
    3. ' ' → logprob: -13.639164924621582
    4. '_' → logprob: -15.514164924621582
    5. ' ' → logprob: -16.3891658782959
    6. ',' → logprob: -16.5141658782959
    7. '  ' → logprob: -16.5141658782959
    8. 's' → logprob: -17.1391658782959
    9. ' =
' → logprob: -17.2641658782959
    10. '   ' → logprob: -17.8891658782959

Token 78: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.2971421480178833
    2. ' first' → logprob: -1.4221421480178833
    3. 'maximum' → logprob: -4.297142028808594
    4. 'first' → logprob: -6.422142028808594
    5. ' max' → logprob: -8.422142028808594
    6. ' ' → logprob: -8.797142028808594
    7. ' minimum' → logprob: -9.172142028808594
    8. 'max' → logprob: -10.172142028808594
    9. ' ' → logprob: -10.422142028808594
    10. 'minimum' → logprob: -10.797142028808594

Token 79: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00118546886369586
    2. '_' → logprob: -6.751185417175293
    3. '_val' → logprob: -12.251185417175293
    4. ' _' → logprob: -12.251185417175293
    5. 'value' → logprob: -13.126185417175293
    6. '_Value' → logprob: -14.251185417175293
    7. 'Value' → logprob: -14.376185417175293
    8. '_VALUE' → logprob: -14.751185417175293
    9. '_va' → logprob: -15.251185417175293
    10. ' ' → logprob: -15.376185417175293

Token 80: ' *' (ID: 425)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.20686380565166473
    2. '%' → logprob: -1.7068637609481812
    3. ' *' → logprob: -5.456863880157471
    4. '*' → logprob: -6.831863880157471
    5. ' ' → logprob: -9.456863403320312
    6. ' ' → logprob: -12.331863403320312
    7. '<|end|>' → logprob: -13.456863403320312
    8. ' %
' → logprob: -13.706863403320312
    9. '%i' → logprob: -14.206863403320312
    10. '%s' → logprob: -14.706863403320312

Token 81: ' minimum' (ID: 11085)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.078912153840065
    2. ' minimum' → logprob: -2.5789122581481934
    3. 'min' → logprob: -11.453911781311035
    4. 'second' → logprob: -12.203911781311035
    5. '.minimum' → logprob: -12.578911781311035
    6. ' ' → logprob: -13.703911781311035
    7. '   ' → logprob: -14.328911781311035
    8. ' second' → logprob: -14.703911781311035
    9. '<|end|>' → logprob: -14.828911781311035
    10. '  ' → logprob: -16.57891273498535

Token 82: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00023750975378789008
    2. '_' → logprob: -8.375237464904785
    3. 'value' → logprob: -12.750237464904785
    4. ' _' → logprob: -13.000237464904785
    5. '_val' → logprob: -14.000237464904785
    6. '_number' → logprob: -14.750237464904785
    7. '_product' → logprob: -16.0002384185791
    8. '_v' → logprob: -16.5002384185791
    9. '_Value' → logprob: -16.6252384185791
    10. 'Value' → logprob: -17.1252384185791

Token 83: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12210457772016525
    2. '   ' → logprob: -2.8721046447753906
    3. '    
' → logprob: -4.122104644775391
    4. ' while' → logprob: -4.122104644775391
    5. 'while' → logprob: -4.372104644775391
    6. ' 
' → logprob: -5.247104644775391
    7. '  
' → logprob: -6.122104644775391
    8. '
' → logprob: -6.372104644775391
    9. '   
' → logprob: -6.372104644775391
    10. 'def' → logprob: -7.872104644775391

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04363708198070526
    2. 'while' → logprob: -3.7936370372772217
    3. ' while' → logprob: -4.168637275695801
    4. '    
' → logprob: -5.543637275695801
    5. '
' → logprob: -7.668637275695801
    6. '	while' → logprob: -9.5436372756958
    7. 'def' → logprob: -9.7936372756958
    8. ',' → logprob: -9.7936372756958
    9. '   
' → logprob: -10.1686372756958
    10. '<|end|>' → logprob: -10.7936372756958

Token 85: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.05144217982888222
    2. 're' → logprob: -3.0514421463012695
    3. '   ' → logprob: -6.8014421463012695
    4. ' while' → logprob: -7.1764421463012695
    5. 'if' → logprob: -7.9264421463012695
    6. 'def' → logprob: -8.55144214630127
    7. 'rema' → logprob: -9.67644214630127
    8. 'current' → logprob: -9.80144214630127
    9. '    
' → logprob: -9.92644214630127
    10. 'g' → logprob: -9.92644214630127

Token 86: ' maximum' (ID: 10562)
  Prédit: ' minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.5786749124526978
    2. 'minimum' → logprob: -0.8286749124526978
    3. 'maximum' → logprob: -6.703674793243408
    4. ' maximum' → logprob: -6.828674793243408
    5. ' product' → logprob: -8.328675270080566
    6. 'product' → logprob: -9.203675270080566
    7. 'min' → logprob: -10.328675270080566
    8. 'Minimum' → logprob: -10.703675270080566
    9. ' ' → logprob: -11.953675270080566
    10. '   ' → logprob: -11.953675270080566

Token 87: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00019030878320336342
    2. '_' → logprob: -8.625190734863281
    3. 'value' → logprob: -12.125190734863281
    4. ' _' → logprob: -13.625190734863281
    5. '_number' → logprob: -13.625190734863281
    6. '_Value' → logprob: -13.875190734863281
    7. '```' → logprob: -14.750190734863281
    8. 'Value' → logprob: -15.125190734863281
    9. '_val' → logprob: -15.500190734863281
    10. '>' → logprob: -15.750190734863281

Token 88: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6337200403213501
    2. '%' → logprob: -0.7587200403213501
    3. '!=' → logprob: -7.5087199211120605
    4. ' !=' → logprob: -8.258720397949219
    5. ' and' → logprob: -9.258720397949219
    6. '>' → logprob: -9.383720397949219
    7. 'and' → logprob: -10.133720397949219
    8. ' %=' → logprob: -10.258720397949219
    9. '%=' → logprob: -11.383720397949219
    10. ':' → logprob: -11.758720397949219

Token 89: ' minimum' (ID: 11085)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.1269291490316391
    2. ' minimum' → logprob: -2.1269290447235107
    3. 'min' → logprob: -14.50192928314209
    4. ' ' → logprob: -14.87692928314209
    5. '.minimum' → logprob: -15.62692928314209
    6. '2' → logprob: -17.001928329467773
    7. 'Minimum' → logprob: -17.751928329467773
    8. '  ' → logprob: -18.501928329467773
    9. '   ' → logprob: -18.751928329467773
    10. 'maximum' → logprob: -19.001928329467773

Token 90: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -8.673547563375905e-05
    2. '_' → logprob: -9.500086784362793
    3. 'value' → logprob: -11.375086784362793
    4. '_number' → logprob: -16.625085830688477
    5. 'minimum' → logprob: -16.625085830688477
    6. '_VALUE' → logprob: -16.875085830688477
    7. 'alue' → logprob: -17.125085830688477
    8. '_Value' → logprob: -17.500085830688477
    9. 'imum' → logprob: -17.625085830688477
    10. 'Value' → logprob: -17.750085830688477

Token 91: ' >' (ID: 1424)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.048670027405023575
    2. '!=' → logprob: -3.0486700534820557
    3. '>' → logprob: -10.048669815063477
    4. ':' → logprob: -10.673669815063477
    5. ' >' → logprob: -12.048669815063477
    6. ' ' → logprob: -12.673669815063477
    7. ')!=' → logprob: -13.798669815063477
    8. ' and' → logprob: -14.048669815063477
    9. ' :' → logprob: -14.048669815063477
    10. ' !==' → logprob: -14.423669815063477

Token 92: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5759422779083252
    2. '0' → logprob: -0.8259422779083252
    3. '<|end|>' → logprob: -13.075942039489746
    4. ' ' → logprob: -15.700942039489746
    5. '```' → logprob: -15.950942039489746
    6. '1' → logprob: -16.200942993164062
    7. '  ' → logprob: -16.200942993164062
    8. '=' → logprob: -16.575942993164062
    9. ' 
' → logprob: -16.825942993164062
    10. '<|end|>' → logprob: -17.388442993164062

Token 93: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019287518225610256
    2. ' ' → logprob: -6.251928806304932
    3. '  ' → logprob: -17.126928329467773
    4. '<|end|>' → logprob: -17.376928329467773
    5. '```' → logprob: -17.876928329467773
    6. 'zero' → logprob: -18.501928329467773
    7. '   ' → logprob: -18.626928329467773
    8. '۰' → logprob: -18.876928329467773
    9. ' ' → logprob: -19.564428329467773
    10. '1' → logprob: -19.626928329467773

Token 94: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016892360523343086
    2. ' :' → logprob: -4.766892433166504
    3. ':
' → logprob: -4.891892433166504
    4. ' :
' → logprob: -7.516892433166504
    5. '   ' → logprob: -8.891892433166504
    6. ',' → logprob: -11.141892433166504
    7. '       ' → logprob: -11.516892433166504
    8. ':return' → logprob: -11.641892433166504
    9. ' and' → logprob: -12.516892433166504
    10. ' ' → logprob: -12.766892433166504

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05778084322810173
    2. '
' → logprob: -4.057780742645264
    3. ' 
' → logprob: -4.557780742645264
    4. 'maximum' → logprob: -4.557780742645264
    5. ' maximum' → logprob: -4.807780742645264
    6. '   ' → logprob: -6.057780742645264
    7. '        
' → logprob: -6.057780742645264
    8. 'minimum' → logprob: -6.807780742645264
    9. '    ' → logprob: -7.182780742645264
    10. ' ' → logprob: -7.307780742645264

Token 96: ' maximum' (ID: 10562)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximum' (adapté à ' maximum') → logprob: -0.42707666754722595
    2. 're' → logprob: -1.6770766973495483
    3. 'temporary' → logprob: -2.427076578140259
    4. 'temp' → logprob: -2.802076578140259
    5. ' remainder' → logprob: -5.427076816558838
    6. '   ' → logprob: -6.052076816558838
    7. ' maximum' → logprob: -6.427076816558838
    8. 'new' → logprob: -7.052076816558838
    9. ' temporary' → logprob: -7.177076816558838
    10. 'tmp' → logprob: -7.302076816558838

Token 97: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0006413076189346611
    2. '_' → logprob: -8.000640869140625
    3. 'value' → logprob: -8.750640869140625
    4. '%' → logprob: -9.125640869140625
    5. 'Value' → logprob: -11.375640869140625
    6. '_val' → logprob: -11.875640869140625
    7. '_Value' → logprob: -12.375640869140625
    8. '%=' → logprob: -12.625640869140625
    9. '=' → logprob: -12.875640869140625
    10. ' %=' → logprob: -13.125640869140625

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002549024939071387
    2. ' ,' → logprob: -8.37525463104248
    3. '%' → logprob: -11.25025463104248
    4. ' %=' → logprob: -12.75025463104248
    5. '%=' → logprob: -12.75025463104248
    6. '=' → logprob: -13.12525463104248
    7. ' ' → logprob: -13.75025463104248
    8. '%,' → logprob: -14.62525463104248
    9. ',module' → logprob: -14.62525463104248
    10. 'mod' → logprob: -15.50025463104248

Token 99: ' minimum' (ID: 11085)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.38763636350631714
    2. ' minimum' → logprob: -1.137636423110962
    3. 'maximum' → logprob: -7.887636184692383
    4. ' maximum' → logprob: -8.387636184692383
    5. '=' → logprob: -8.887636184692383
    6. 'Minimum' → logprob: -12.137636184692383
    7. ' ' → logprob: -12.512636184692383
    8. '    ' → logprob: -12.512636184692383
    9. ' =' → logprob: -12.637636184692383
    10. 'min' → logprob: -12.637636184692383

Token 100: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.4868770196917467e-05
    2. 'value' → logprob: -11.500024795532227
    3. '=' → logprob: -11.875024795532227
    4. 'Value' → logprob: -12.500024795532227
    5. '_VALUE' → logprob: -13.375024795532227
    6. '_Value' → logprob: -13.750024795532227
    7. '_' → logprob: -14.375024795532227
    8. '_number' → logprob: -15.375024795532227
    9. ' =' → logprob: -15.625024795532227
    10. '```' → logprob: -16.000024795532227

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3484501540660858
    2. '=' → logprob: -1.2234501838684082
    3. ',' → logprob: -13.22344970703125
    4. ' ' → logprob: -13.47344970703125
    5. '<|end|>' → logprob: -13.97344970703125
    6. '%=' → logprob: -14.72344970703125
    7. ' %=' → logprob: -14.84844970703125
    8. '=

' → logprob: -15.59844970703125
    9. ' ' → logprob: -16.47344970703125
    10. '=
' → logprob: -16.84844970703125

Token 102: ' minimum' (ID: 11085)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.47412553429603577
    2. ' minimum' → logprob: -0.9741255044937134
    3. 'min' → logprob: -10.349125862121582
    4. ' ' → logprob: -12.599125862121582
    5. '.minimum' → logprob: -12.724125862121582
    6. '   ' → logprob: -13.349125862121582
    7. '    ' → logprob: -13.349125862121582
    8. 'Minimum' → logprob: -13.474125862121582
    9. '(min' → logprob: -13.849125862121582
    10. ' (' → logprob: -14.224125862121582

Token 103: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -8.180258191714529e-06
    2. 'value' → logprob: -11.750008583068848
    3. 'Value' → logprob: -16.25000762939453
    4. '_' → logprob: -16.62500762939453
    5. '_VALUE' → logprob: -17.25000762939453
    6. ' _' → logprob: -17.25000762939453
    7. '_Value' → logprob: -17.25000762939453
    8. '_values' → logprob: -19.62500762939453
    9. 'alue' → logprob: -20.00000762939453
    10. '_number' → logprob: -20.50000762939453

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01625477336347103
    2. 'maximum' → logprob: -4.141254901885986
    3. ' ,' → logprob: -9.266254425048828
    4. ' maximum' → logprob: -9.391254425048828
    5. ' ' → logprob: -10.891254425048828
    6. '%' → logprob: -11.766254425048828
    7. ',
' → logprob: -12.391254425048828
    8. ',max' → logprob: -12.516254425048828
    9. 'Maximum' → logprob: -13.016254425048828
    10. 'max' → logprob: -13.391254425048828

Token 105: ' maximum' (ID: 10562)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.1269306242465973
    2. ' maximum' → logprob: -2.1269307136535645
    3. '.maximum' → logprob: -13.876930236816406
    4. 'max' → logprob: -14.001930236816406
    5. ' ' → logprob: -14.251930236816406
    6. 'Maximum' → logprob: -16.876930236816406
    7. '   ' → logprob: -17.876930236816406
    8. '  ' → logprob: -18.251930236816406
    9. 'maxlength' → logprob: -18.251930236816406
    10. ' maksimum' → logprob: -18.376930236816406

Token 106: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00018113377154804766
    2. 'value' → logprob: -8.625181198120117
    3. '_' → logprob: -13.500181198120117
    4. 'Value' → logprob: -16.125181198120117
    5. ' _' → logprob: -18.125181198120117
    6. 'alue' → logprob: -18.375181198120117
    7. '_Value' → logprob: -18.625181198120117
    8. '_VALUE' → logprob: -18.625181198120117
    9. 'valu' → logprob: -18.750181198120117
    10. '_val' → logprob: -18.875181198120117

Token 107: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.16022635996341705
    2. ' %' → logprob: -1.9102263450622559
    3. 'maximum' → logprob: -14.660226821899414
    4. '%i' → logprob: -14.660226821899414
    5. ' ' → logprob: -14.910226821899414
    6. ' maximum' → logprob: -15.035226821899414
    7. '%x' → logprob: -15.160226821899414
    8. '%d' → logprob: -15.410226821899414
    9. '%s' → logprob: -15.660226821899414
    10. '%c' → logprob: -17.035226821899414

Token 108: ' minimum' (ID: 11085)
  Prédit: ' minimum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.2519296407699585
    2. 'minimum' → logprob: -1.5019296407699585
    3. 'min' → logprob: -15.50192928314209
    4. ' ' → logprob: -15.50192928314209
    5. 'Minimum' → logprob: -16.251930236816406
    6. '.minimum' → logprob: -16.251930236816406
    7. 'maximum' → logprob: -19.126930236816406
    8. ' second' → logprob: -19.251930236816406
    9. ' mínimo' → logprob: -19.626930236816406
    10. ' minimal' → logprob: -19.626930236816406

Token 109: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.001503790495917201
    2. 'value' → logprob: -6.501503944396973
    3. '_' → logprob: -13.876503944396973
    4. 'alue' → logprob: -15.376503944396973
    5. 'valu' → logprob: -16.251502990722656
    6. ' value' → logprob: -16.626502990722656
    7. 'Value' → logprob: -17.501502990722656
    8. ' _' → logprob: -17.876502990722656
    9. '_VALUE' → logprob: -18.001502990722656
    10. '_val' → logprob: -18.251502990722656

Token 110: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007914409041404724
    2. '
' → logprob: -5.7579145431518555
    3. '    
' → logprob: -6.0079145431518555
    4. 'return' → logprob: -6.7579145431518555
    5. ' 
' → logprob: -7.2579145431518555
    6. ' return' → logprob: -8.882914543151855
    7. 'minimum' → logprob: -8.882914543151855
    8. '  
' → logprob: -10.382914543151855
    9. '   
' → logprob: -10.507914543151855
    10. '<|end|>' → logprob: -11.632914543151855

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04432826489210129
    2. 'return' → logprob: -3.169328212738037
    3. ' return' → logprob: -7.794328212738037
    4. '    
' → logprob: -8.044328689575195
    5. '
' → logprob: -8.169328689575195
    6. 'minimum' → logprob: -8.169328689575195
    7. ' 
' → logprob: -12.294328689575195
    8. ' minimum' → logprob: -12.544328689575195
    9. '```' → logprob: -12.669328689575195
    10. '   
' → logprob: -12.919328689575195

Token 112: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004144999664276838
    2. '   ' → logprob: -5.50414514541626
    3. ' return' → logprob: -9.754144668579102
    4. '
' → logprob: -12.754144668579102
    5. 'minimum' → logprob: -12.754144668579102
    6. '    
' → logprob: -13.379144668579102
    7. '```' → logprob: -15.254144668579102
    8. 'result' → logprob: -15.254144668579102
    9. '	return' → logprob: -15.379144668579102
    10. '  ' → logprob: -16.1291446685791

Token 113: ' minimum' (ID: 11085)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.02328380011022091
    2. ' minimum' → logprob: -3.7732837200164795
    3. 'min' → logprob: -10.273283958435059
    4. 'maximum' → logprob: -13.273283958435059
    5. '   ' → logprob: -13.648283958435059
    6. '.minimum' → logprob: -15.523283958435059
    7. ' ' → logprob: -15.523283958435059
    8. 'minimal' → logprob: -15.773283958435059
    9. 'Minimum' → logprob: -16.273283004760742
    10. '  ' → logprob: -16.273283004760742

Token 114: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0002084277366520837
    2. '_' → logprob: -8.875208854675293
    3. '_val' → logprob: -9.750208854675293
    4. ' _' → logprob: -11.875208854675293
    5. '_values' → logprob: -13.875208854675293
    6. '_v' → logprob: -15.125208854675293
    7. '_number' → logprob: -15.250208854675293
    8. '_f' → logprob: -15.500208854675293
    9. '_s' → logprob: -15.875208854675293
    10. 'value' → logprob: -16.000207901000977

Token 115: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18775762617588043
    2. '<|end|>' → logprob: -1.9377576112747192
    3. '\n' → logprob: -4.56275749206543
    4. 'def' → logprob: -4.93775749206543
    5. '#' → logprob: -5.68775749206543
    6. '

' → logprob: -6.43775749206543
    7. ')' → logprob: -6.68775749206543
    8. '```' → logprob: -7.68775749206543
    9. 'newline' → logprob: -7.81275749206543
    10. '\' → logprob: -7.81275749206543

Token 117: ' solve' (ID: 17722)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.142076313495636
    2. ' l' → logprob: -2.267076253890991
    3. ' find' → logprob: -4.39207649230957
    4. ' main' → logprob: -5.51707649230957
    5. ' calculate' → logprob: -6.14207649230957
    6. ' max' → logprob: -6.26707649230957
    7. ' factorial' → logprob: -6.51707649230957
    8. 'compute' → logprob: -6.64207649230957
    9. ' ' → logprob: -6.89207649230957
    10. ' solve' → logprob: -7.01707649230957

Token 118: '_problem' (ID: 162384)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.011258140206336975
    2. '(' → logprob: -4.636258125305176
    3. '()' → logprob: -7.386258125305176
    4. ' ():' → logprob: -8.511258125305176
    5. '():
' → logprob: -9.011258125305176
    6. '(nums' → logprob: -9.136258125305176
    7. '(n' → logprob: -9.886258125305176
    8. '(input' → logprob: -9.886258125305176
    9. '(array' → logprob: -10.011258125305176
    10. '(number' → logprob: -10.261258125305176

Token 119: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01748749054968357
    2. '(' → logprob: -4.517487525939941
    3. ' ():' → logprob: -5.267487525939941
    4. '(n' → logprob: -8.142487525939941
    5. '(input' → logprob: -8.392487525939941
    6. '(args' → logprob: -9.267487525939941
    7. '(nums' → logprob: -9.517487525939941
    8. '(data' → logprob: -10.017487525939941
    9. '(a' → logprob: -10.142487525939941
    10. '(number' → logprob: -10.267487525939941

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011420786380767822
    2. '(' → logprob: -5.261420726776123
    3. '    ' → logprob: -5.261420726776123
    4. '(n' → logprob: -8.261421203613281
    5. '    
' → logprob: -8.511421203613281
    6. 'n' → logprob: -8.636421203613281
    7. ' ' → logprob: -9.636421203613281
    8. ' (' → logprob: -10.386421203613281
    9. '[' → logprob: -10.761421203613281
    10. '<|end|>' → logprob: -10.761421203613281

Token 121: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.24739690124988556
    2. ' input' → logprob: -2.122396945953369
    3. 'n' → logprob: -2.872396945953369
    4. '   ' → logprob: -3.372396945953369
    5. 'input' (adapté à ' input') → logprob: -5.372396945953369
    6. ' import' → logprob: -7.247396945953369
    7. ' pass' → logprob: -7.372396945953369
    8. ' numbers' → logprob: -7.747396945953369
    9. ' data' → logprob: -7.997396945953369
    10. ' N' → logprob: -7.997396945953369

Token 122: '_function' (ID: 21094)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3128305673599243
    2. '_data' → logprob: -1.8128305673599243
    3. '_' → logprob: -2.8128304481506348
    4. '_line' → logprob: -3.3128304481506348
    5. '_lines' → logprob: -5.312830448150635
    6. ' =' → logprob: -6.812830448150635
    7. '(' → logprob: -6.937830448150635
    8. '_list' → logprob: -7.437830448150635
    9. 's' → logprob: -7.937830448150635
    10. '=' → logprob: -8.687830924987793

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15132170915603638
    2. '()' → logprob: -2.0263216495513916
    3. '=' → logprob: -4.901321887969971
    4. '(' → logprob: -7.276321887969971
    5. ' ' → logprob: -8.401321411132812
    6. ' ()' → logprob: -8.651321411132812
    7. 's' → logprob: -10.901321411132812
    8. '=input' → logprob: -11.651321411132812
    9. '_input' → logprob: -12.276321411132812
    10. '_' → logprob: -12.276321411132812

Token 124: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.27669307589530945
    2. 'sys' → logprob: -2.026693105697632
    3. 'input' → logprob: -2.901693105697632
    4. ' input' → logprob: -2.901693105697632
    5. ' lambda' → logprob: -10.151693344116211
    6. '	sys' → logprob: -10.901693344116211
    7. 'lambda' → logprob: -11.026693344116211
    8. ' ' → logprob: -12.526693344116211
    9. '	input' → logprob: -13.526693344116211
    10. '=sys' → logprob: -14.151693344116211

Token 125: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00011474833445390686
    2. '.argv' → logprob: -9.625114440917969
    3. '.stdout' → logprob: -10.625114440917969
    4. '.' → logprob: -10.875114440917969
    5. '.std' → logprob: -12.625114440917969
    6. '.version' → logprob: -14.500114440917969
    7. '.st' → logprob: -14.875114440917969
    8. '.input' → logprob: -15.375114440917969
    9. '.readline' → logprob: -15.375114440917969
    10. '.max' → logprob: -15.625114440917969

Token 126: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0001249925117008388
    2. 'read' → logprob: -9.12512493133545
    3. '.' → logprob: -11.50012493133545
    4. '.read' → logprob: -12.50012493133545
    5. ' readline' → logprob: -13.75012493133545
    6. 'reader' → logprob: -14.75012493133545
    7. '.readlines' → logprob: -14.75012493133545
    8. 'buffer' → logprob: -15.12512493133545
    9. 'readonly' → logprob: -17.875125885009766
    10. 'input' → logprob: -18.250125885009766

Token 127: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05529520660638809
    2. '().' → logprob: -2.93029522895813
    3. '()
' → logprob: -8.18029499053955
    4. '   ' → logprob: -9.18029499053955
    5. '(' → logprob: -11.93029499053955
    6. ')' → logprob: -12.43029499053955
    7. '())' → logprob: -12.55529499053955
    8. '.strip' → logprob: -12.55529499053955
    9. '()\' → logprob: -12.93029499053955
    10. ' ()' → logprob: -13.18029499053955

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018376067746430635
    2. '    
' → logprob: -6.501837730407715
    3. 'n' → logprob: -9.626837730407715
    4. 'input' → logprob: -10.001837730407715
    5. '()' → logprob: -10.251837730407715
    6. '<|end|>' → logprob: -10.501837730407715
    7. ')' → logprob: -11.001837730407715
    8. 'data' → logprob: -11.001837730407715
    9. '
' → logprob: -11.251837730407715
    10. '.' → logprob: -11.376837730407715

Token 129: ' modulus' (ID: 149464)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6137173175811768
    2. 'n' → logprob: -1.1137173175811768
    3. '   ' → logprob: -2.8637173175811768
    4. ' number' → logprob: -3.4887173175811768
    5. ' t' → logprob: -3.7387173175811768
    6. 't' → logprob: -4.988717079162598
    7. 'number' → logprob: -5.238717079162598
    8. ' T' → logprob: -5.613717079162598
    9. 'num' → logprob: -6.988717079162598
    10. ' num' → logprob: -7.238717079162598

Token 130: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01129550114274025
    2. '=' → logprob: -4.511295318603516
    3. '_' → logprob: -9.011295318603516
    4. ' ' → logprob: -9.136295318603516
    5. '_space' → logprob: -11.636295318603516
    6. ',' → logprob: -13.261295318603516
    7. 'space' → logprob: -13.636295318603516
    8. ')' → logprob: -14.136295318603516
    9. ' ' → logprob: -14.261295318603516
    10. ' _' → logprob: -14.386295318603516

Token 131: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03583381697535515
    2. '10' → logprob: -3.6608338356018066
    3. '100' → logprob: -4.660833835601807
    4. '1' → logprob: -10.910833358764648
    5. '998' → logprob: -12.285833358764648
    6. 'int' → logprob: -13.035833358764648
    7. ' int' → logprob: -13.160833358764648
    8. '999' → logprob: -13.910833358764648
    9. ' ' → logprob: -14.285833358764648
    10. ' (' → logprob: -15.660833358764648

Token 132: '7' (ID: 22)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6935794949531555
    2. '100' → logprob: -0.6935794949531555
    3. '998' → logprob: -8.69357967376709
    4. 'int' → logprob: -8.94357967376709
    5. '1' → logprob: -9.06857967376709
    6. ' ' → logprob: -11.31857967376709
    7. '999' → logprob: -13.19357967376709
    8. '(' → logprob: -13.31857967376709
    9. '```' → logprob: -14.44357967376709
    10. '109' → logprob: -14.69357967376709

Token 133: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0839102566242218
    2. '<|end|>' → logprob: -3.3339102268218994
    3. '   ' → logprob: -3.7089102268218994
    4. '    
' → logprob: -4.5839104652404785
    5. ' 
' → logprob: -5.5839104652404785
    6. ' ' → logprob: -6.7089104652404785
    7. '<|end|>' → logprob: -7.0839104652404785
    8. ',' → logprob: -7.3339104652404785
    9. 'def' → logprob: -7.5839104652404785
    10. '0' → logprob: -7.5839104652404785

Token 134: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.01880505494773388
    2. '100' → logprob: -4.893805027008057
    3. ' ' → logprob: -6.268805027008057
    4. '2' → logprob: -6.518805027008057
    5. '000' → logprob: -6.643805027008057
    6. '1' → logprob: -7.143805027008057
    7. '214' → logprob: -7.143805027008057
    8. '7' → logprob: -7.643805027008057
    9. '17' → logprob: -7.768805027008057
    10. '3' → logprob: -7.893805027008057

Token 135: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0017822833033278584
    2. '100' → logprob: -7.126782417297363
    3. '999' → logprob: -7.751782417297363
    4. '998' → logprob: -8.501782417297363
    5. 'int' → logprob: -9.251782417297363
    6. '1' → logprob: -9.626782417297363
    7. '(' → logprob: -10.376782417297363
    8. '7' → logprob: -10.626782417297363
    9. ' ' → logprob: -10.876782417297363
    10. '9' → logprob: -11.001782417297363

Token 136: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.04353596270084381
    2. '9' → logprob: -3.1685359477996826
    3. '6' → logprob: -8.168536186218262
    4. ' **' → logprob: -9.293536186218262
    5. '7' → logprob: -9.668536186218262
    6. '000' → logprob: -9.793536186218262
    7. '*' → logprob: -10.668536186218262
    8. '^' → logprob: -12.293536186218262
    9. ' ' → logprob: -12.543536186218262
    10. '09' → logprob: -12.668536186218262

Token 137: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.2664456789934775e-06
    2. '09' → logprob: -13.875000953674316
    3. ' ' → logprob: -15.125000953674316
    4. '+' → logprob: -17.625001907348633
    5. '8' → logprob: -19.000001907348633
    6. '
' → logprob: -20.500001907348633
    7. '```' → logprob: -20.750001907348633
    8. '009' → logprob: -21.000001907348633
    9. '-' → logprob: -21.375001907348633
    10. '   ' → logprob: -21.500001907348633

Token 138: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.816093228830141e-06
    2. '09' → logprob: -12.87500286102295
    3. ' ' → logprob: -16.000001907348633
    4. '8' → logprob: -16.500001907348633
    5. '```' → logprob: -19.625001907348633
    6. '10' → logprob: -19.625001907348633
    7. '+' → logprob: -20.000001907348633
    8. '7' → logprob: -20.000001907348633
    9. '6' → logprob: -20.375001907348633
    10. '
' → logprob: -20.500001907348633

Token 139: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09288062900304794
    2. '9' → logprob: -2.4678807258605957
    3. '7' → logprob: -6.217880725860596
    4. ' +' → logprob: -6.717880725860596
    5. '-' → logprob: -7.467880725860596
    6. ' ' → logprob: -9.842880249023438
    7. '<|end|>' → logprob: -10.092880249023438
    8. '%' → logprob: -11.842880249023438
    9. '```' → logprob: -12.092880249023438
    10. '**' → logprob: -12.092880249023438

Token 140: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001086874515749514
    2. ' +' → logprob: -6.876086711883545
    3. '7' → logprob: -10.001087188720703
    4. '<|end|>' → logprob: -12.751087188720703
    5. ' ' → logprob: -13.126087188720703
    6. '9' → logprob: -13.501087188720703
    7. '+
' → logprob: -13.626087188720703
    8. ' +
' → logprob: -15.001087188720703
    9. ')' → logprob: -16.001087188720703
    10. '#' → logprob: -16.001087188720703

Token 141: ' total' (ID: 3609)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.015610091388225555
    2. ' +' → logprob: -4.265610218048096
    3. '7' → logprob: -7.515610218048096
    4. '9' → logprob: -8.140609741210938
    5. '-' → logprob: -8.765609741210938
    6. ' ' → logprob: -9.140609741210938
    7. '+
' → logprob: -9.390609741210938
    8. '   ' → logprob: -9.515609741210938
    9. 'def' → logprob: -9.640609741210938
    10. ' +
' → logprob: -10.015609741210938

Token 142: '_number' (ID: 11733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3486850261688232
    2. '_count' → logprob: -1.8486850261688232
    3. '_numbers' → logprob: -1.8486850261688232
    4. '_number' → logprob: -2.4736850261688232
    5. '_items' → logprob: -3.0986850261688232
    6. '_tokens' → logprob: -3.3486850261688232
    7. '_s' → logprob: -3.4736850261688232
    8. '_lines' → logprob: -3.8486850261688232
    9. '_elements' → logprob: -3.9736850261688232
    10. '_cases' → logprob: -4.098685264587402

Token 143: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.43834662437438965
    2. '=' → logprob: -1.4383466243743896
    3. ' =' → logprob: -2.1883466243743896
    4. '_of' → logprob: -5.563346862792969
    5. '_' → logprob: -7.438346862792969
    6. '_s' → logprob: -7.688346862792969
    7. '   ' → logprob: -8.188346862792969
    8. 'of' → logprob: -8.813346862792969
    9. ',' → logprob: -9.563346862792969
    10. ' of' → logprob: -10.313346862792969

Token 144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02098243124783039
    2. '=' → logprob: -3.895982503890991
    3. ',' → logprob: -7.895982265472412
    4. ' ' → logprob: -10.14598274230957
    5. ' ,' → logprob: -10.77098274230957
    6. '   ' → logprob: -13.14598274230957
    7. '=int' → logprob: -13.39598274230957
    8. ' ' → logprob: -13.64598274230957
    9. ')' → logprob: -14.14598274230957
    10. '_' → logprob: -14.77098274230957

Token 145: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10021044313907623
    2. 'int' → logprob: -2.350210428237915
    3. ' input' → logprob: -12.975210189819336
    4. '=int' → logprob: -14.975210189819336
    5. 'input' → logprob: -15.100210189819336
    6. ' ' → logprob: -15.225210189819336
    7. '(int' → logprob: -15.475210189819336
    8. '<int' → logprob: -16.225210189819336
    9. '[int' → logprob: -16.600210189819336
    10. '	int' → logprob: -16.600210189819336

Token 146: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01416798122227192
    2. '(' → logprob: -4.264167785644531
    3. 'input' → logprob: -13.264167785644531
    4. ' (' → logprob: -13.264167785644531
    5. '(
' → logprob: -14.139167785644531
    6. '(in' → logprob: -16.38916778564453
    7. '(sys' → logprob: -16.63916778564453
    8. ' ' → logprob: -16.88916778564453
    9. ' input' → logprob: -17.13916778564453
    10. '()' → logprob: -17.13916778564453

Token 147: '_function' (ID: 21094)
  Prédit: '_function'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_function' → logprob: -0.09633095562458038
    2. '()' → logprob: -2.5963308811187744
    3. '())' → logprob: -4.3463311195373535
    4. '(' → logprob: -5.5963311195373535
    5. '().' → logprob: -8.471330642700195
    6. '()
' → logprob: -8.846330642700195
    7. ')' → logprob: -10.221330642700195
    8. 'function' → logprob: -10.596330642700195
    9. '()[' → logprob: -10.846330642700195
    10. '()))' → logprob: -10.971330642700195

Token 148: '())
' (ID: 4574)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3890502452850342
    2. '())' → logprob: -1.1390502452850342
    3. '()' → logprob: -6.139050483703613
    4. '()
' → logprob: -11.514050483703613
    5. ' ())' → logprob: -12.389050483703613
    6. '())
' → logprob: -12.889050483703613
    7. '(' → logprob: -13.139050483703613
    8. '()

' → logprob: -15.264050483703613
    9. '();)' → logprob: -15.264050483703613
    10. '())

' → logprob: -15.764050483703613

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44035229086875916
    2. '<|end|>' → logprob: -1.6903523206710815
    3. '
' → logprob: -2.440352201461792
    4. ')' → logprob: -2.815352201461792
    5. '<|end|>' → logprob: -5.315352439880371
    6. ' ' → logprob: -5.815352439880371
    7. '    
' → logprob: -6.190352439880371
    8. 'tokens' → logprob: -6.190352439880371
    9. ' for' → logprob: -6.815352439880371
    10. ' 
' → logprob: -6.940352439880371

Token 150: ' integer' (ID: 16336)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.6317741870880127
    2. ' number' → logprob: -0.8817741870880127
    3. 'number' → logprob: -3.8817741870880127
    4. 'numbers' → logprob: -5.131773948669434
    5. ' sequence' → logprob: -5.381773948669434
    6. ' array' → logprob: -5.506773948669434
    7. ' values' → logprob: -5.881773948669434
    8. ' total' → logprob: -6.131773948669434
    9. ' data' → logprob: -6.256773948669434
    10. ' 
' → logprob: -6.256773948669434

Token 151: '_array' (ID: 8766)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.14509400725364685
    2. 's' → logprob: -2.3950939178466797
    3. '_values' → logprob: -3.6450939178466797
    4. '_array' → logprob: -4.52009391784668
    5. '_numbers' → logprob: -5.27009391784668
    6. '_s' → logprob: -7.39509391784668
    7. '_sequence' → logprob: -7.77009391784668
    8. '_' → logprob: -8.39509391784668
    9. '_lists' → logprob: -8.64509391784668
    10. '_counts' → logprob: -9.27009391784668

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014166564680635929
    2. '=' → logprob: -4.264166355133057
    3. '[]' → logprob: -14.264166831970215
    4. '[' → logprob: -14.764166831970215
    5. ' ' → logprob: -14.764166831970215
    6. '=[]' → logprob: -15.014166831970215
    7. ' ' → logprob: -15.139166831970215
    8. ')' → logprob: -15.389166831970215
    9. '_' → logprob: -15.514166831970215
    10. ' []' → logprob: -15.764166831970215

Token 153: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.018151583150029182
    2. 'list' → logprob: -4.018151760101318
    3. ' [' → logprob: -13.51815128326416
    4. '[list' → logprob: -15.64315128326416
    5. '[' → logprob: -15.76815128326416
    6. '	list' → logprob: -17.393152236938477
    7. ' ' → logprob: -19.018152236938477
    8. ' lis' → logprob: -19.143152236938477
    9. ' []' → logprob: -19.143152236938477
    10. '[]' → logprob: -19.393152236938477

Token 154: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.2729995988775045e-06
    2. ' int' → logprob: -12.125006675720215
    3. '*' → logprob: -15.000006675720215
    4. '   ' → logprob: -15.250006675720215
    5. '0' → logprob: -15.875006675720215
    6. ']int' → logprob: -16.2500057220459
    7. '  ' → logprob: -17.5000057220459
    8. 'map' → logprob: -17.8750057220459
    9. ' ' → logprob: -18.1250057220459
    10. ']' → logprob: -18.2500057220459

Token 155: '(single' (ID: 134878)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2349718064069748
    2. '(x' → logprob: -1.7349717617034912
    3. '(' → logprob: -3.484971761703491
    4. '(i' → logprob: -6.10997200012207
    5. 'input' → logprob: -10.60997200012207
    6. '()' → logprob: -11.10997200012207
    7. '(
' → logprob: -11.23497200012207
    8. '(item' → logprob: -11.35997200012207
    9. '(a' → logprob: -11.48497200012207
    10. '(char' → logprob: -12.10997200012207

Token 156: '_value' (ID: 6734)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.8359607458114624
    2. '(x' → logprob: -1.0859607458114624
    3. '(' → logprob: -2.460960865020752
    4. '_' → logprob: -2.710960865020752
    5. ')' → logprob: -3.335960865020752
    6. '(i' → logprob: -4.085960865020752
    7. 'input' → logprob: -4.960960865020752
    8. 'token' → logprob: -5.335960865020752
    9. '(token' → logprob: -6.210960865020752
    10. '_input' → logprob: -6.335960865020752

Token 157: ')' (ID: 8)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01045047678053379
    2. '(' → logprob: -5.38545036315918
    3. '(x' → logprob: -5.76045036315918
    4. '(i' → logprob: -6.63545036315918
    5. '()' → logprob: -7.51045036315918
    6. ')' → logprob: -8.01045036315918
    7. 'input' → logprob: -8.26045036315918
    8. '(in' → logprob: -9.51045036315918
    9. '(line' → logprob: -9.76045036315918
    10. '(s' → logprob: -11.01045036315918

Token 158: ' for' (ID: 395)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.21124747395515442
    2. ' for' → logprob: -2.211247444152832
    3. '()' → logprob: -3.461247444152832
    4. 'for' → logprob: -3.711247444152832
    5. '(' → logprob: -3.836247444152832
    6. 'input' → logprob: -5.961247444152832
    7. ')' → logprob: -8.211247444152832
    8. '(x' → logprob: -8.711247444152832
    9. ' ()' → logprob: -8.961247444152832
    10. ' input' → logprob: -9.461247444152832

Token 159: ' single' (ID: 4590)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.20412792265415192
    2. '_' → logprob: -2.2041280269622803
    3. ' range' → logprob: -3.3291280269622803
    4. ' single' → logprob: -3.9541280269622803
    5. ' input' → logprob: -4.329127788543701
    6. ' ' → logprob: -5.954127788543701
    7. ' in' → logprob: -6.204127788543701
    8. '  ' → logprob: -8.20412826538086
    9. ' i' → logprob: -8.32912826538086
    10. 'single' → logprob: -8.45412826538086

Token 160: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.42875936627388
    2. ' in' → logprob: -1.4287593364715576
    3. '_' → logprob: -2.8037593364715576
    4. ' ' → logprob: -3.4287593364715576
    5. ' _' → logprob: -4.803759574890137
    6. ' line' → logprob: -5.803759574890137
    7. '_line' → logprob: -6.803759574890137
    8. 'line' → logprob: -6.928759574890137
    9. 'value' → logprob: -7.053759574890137
    10. 'in' → logprob: -7.053759574890137

Token 161: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008356059901416302
    2. 'in' → logprob: -4.883356094360352
    3. ' ' → logprob: -7.258356094360352
    4. '_' → logprob: -10.758356094360352
    5. ' _' → logprob: -11.758356094360352
    6. '  ' → logprob: -12.133356094360352
    7. 'input' → logprob: -12.633356094360352
    8. '(' → logprob: -12.883356094360352
    9. ' input' → logprob: -13.258356094360352
    10. ' ' → logprob: -14.383356094360352

Token 162: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3886893093585968
    2. ' input' → logprob: -1.1386892795562744
    3. ' range' → logprob: -6.8886895179748535
    4. 'range' → logprob: -7.1386895179748535
    5. ' ' → logprob: -12.888689041137695
    6. '(input' → logprob: -15.513689041137695
    7. '
' → logprob: -15.638689041137695
    8. '	input' → logprob: -16.013689041137695
    9. 'sys' → logprob: -16.138689041137695
    10. '   ' → logprob: -16.138689041137695

Token 163: '_function' (ID: 21094)
  Prédit: '_function'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_function' → logprob: -0.05248236656188965
    2. '().' → logprob: -3.5524823665618896
    3. '())' → logprob: -4.427482604980469
    4. '()' → logprob: -5.052482604980469
    5. 'function' → logprob: -6.052482604980469
    6. '()]' → logprob: -6.552482604980469
    7. '()[' → logprob: -9.677482604980469
    8. '()
' → logprob: -10.177482604980469
    9. ')' → logprob: -10.177482604980469
    10. '_line' → logprob: -10.302482604980469

Token 164: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005855606868863106
    2. '()' → logprob: -7.500585556030273
    3. '()]' → logprob: -10.375585556030273
    4. '())' → logprob: -14.000585556030273
    5. '()].' → logprob: -15.250585556030273
    6. ' ().' → logprob: -15.875585556030273
    7. '(' → logprob: -17.125585556030273
    8. '()
' → logprob: -17.375585556030273
    9. '()[' → logprob: -18.375585556030273
    10. '.strip' → logprob: -18.625585556030273

Token 165: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.10157111287117004
    2. 'strip' → logprob: -2.3515710830688477
    3. 'rstrip' → logprob: -6.601571083068848
    4. ' split' → logprob: -12.351571083068848
    5. ' strip' → logprob: -13.851571083068848
    6. 'spl' → logprob: -16.976572036743164
    7. '(split' → logprob: -17.976572036743164
    8. 'rs' → logprob: -20.101572036743164
    9. '.strip' → logprob: -21.726572036743164
    10. '.split' → logprob: -21.851572036743164

Token 166: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.00027730545843951404
    2. '()' → logprob: -8.250277519226074
    3. '())' → logprob: -11.375277519226074
    4. '(' → logprob: -13.250277519226074
    5. '('' → logprob: -13.625277519226074
    6. '()]
' → logprob: -13.625277519226074
    7. ']' → logprob: -15.125277519226074
    8. ')]' → logprob: -17.375276565551758
    9. '(),' → logprob: -17.500276565551758
    10. '("' → logprob: -17.625276565551758

Token 167: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001427538663847372
    2. ' ]' → logprob: -9.250143051147461
    3. ')]' → logprob: -11.000143051147461
    4. '()]' → logprob: -11.500143051147461
    5. ']
' → logprob: -11.750143051147461
    6. ')' → logprob: -11.750143051147461
    7. '])' → logprob: -13.000143051147461
    8. '   ' → logprob: -14.000143051147461
    9. ']

' → logprob: -15.625143051147461
    10. ']
' → logprob: -15.875143051147461

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045498043298721313
    2. '    
' → logprob: -3.4204981327056885
    3. '
' → logprob: -4.545497894287109
    4. 'result' → logprob: -8.42049789428711
    5. ' 
' → logprob: -8.79549789428711
    6. ')' → logprob: -9.42049789428711
    7. 'g' → logprob: -9.42049789428711
    8. '    ' → logprob: -9.67049789428711
    9. '<|end|>' → logprob: -9.67049789428711
    10. ' result' → logprob: -9.79549789428711

Token 169: ' if' (ID: 538)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.9702659845352173
    2. 'result' → logprob: -1.0952659845352173
    3. 'answer' → logprob: -2.4702658653259277
    4. 'current' → logprob: -3.2202658653259277
    5. ' gcd' → logprob: -3.3452658653259277
    6. 'div' → logprob: -4.220265865325928
    7. 'dp' → logprob: -4.220265865325928
    8. ' result' → logprob: -4.345265865325928
    9. 'max' → logprob: -4.595265865325928
    10. '   ' → logprob: -4.720265865325928

Token 170: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.2437678724527359
    2. ' len' → logprob: -1.6187678575515747
    3. 'len' → logprob: -4.868767738342285
    4. 'total' → logprob: -4.868767738342285
    5. ' not' → logprob: -7.118767738342285
    6. ' ' → logprob: -7.243767738342285
    7. ' all' → logprob: -7.243767738342285
    8. ' sum' → logprob: -8.368767738342285
    9. ' max' → logprob: -8.868767738342285
    10. ' integer' → logprob: -9.743767738342285

Token 171: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -1.759734732331708e-05
    2. '_' → logprob: -11.125017166137695
    3. 'number' → logprob: -13.375017166137695
    4. '   ' → logprob: -15.625017166137695
    5. ' _' → logprob: -15.875017166137695
    6. '_NUMBER' → logprob: -15.875017166137695
    7. 'Number' → logprob: -16.125017166137695
    8. '_num' → logprob: -16.250017166137695
    9. ' ' → logprob: -16.500017166137695
    10. ' number' → logprob: -16.625017166137695

Token 172: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00017243190086446702
    2. '_' → logprob: -9.00017261505127
    3. '==' → logprob: -10.75017261505127
    4. '>' → logprob: -12.12517261505127
    5. ' ' → logprob: -12.75017261505127
    6. 'count' → logprob: -12.87517261505127
    7. '<=' → logprob: -13.00017261505127
    8. '_counts' → logprob: -13.00017261505127
    9. ' ==' → logprob: -13.25017261505127
    10. '<' → logprob: -13.50017261505127

Token 173: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.36569032073020935
    2. ' <' → logprob: -1.8656903505325317
    3. ' <=' → logprob: -2.240690231323242
    4. '==' → logprob: -3.490690231323242
    5. ' ' → logprob: -5.240690231323242
    6. '<' → logprob: -5.490690231323242
    7. '<=' → logprob: -6.115690231323242
    8. ' %' → logprob: -6.865690231323242
    9. ' >' → logprob: -6.865690231323242
    10. '%' → logprob: -7.740690231323242

Token 174: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012840884737670422
    2. '0' → logprob: -4.887840747833252
    3. ' ' → logprob: -5.262840747833252
    4. '2' → logprob: -10.26284122467041
    5. '   ' → logprob: -13.26284122467041
    6. 'len' → logprob: -13.82534122467041
    7. '  ' → logprob: -14.57534122467041
    8. '3' → logprob: -15.01284122467041
    9. '    ' → logprob: -15.45034122467041
    10. '```' → logprob: -15.95034122467041

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0050772107206285
    2. '0' → logprob: -5.380077362060547
    3. ' ' → logprob: -7.880077362060547
    4. '2' → logprob: -9.630077362060547
    5. '   ' → logprob: -12.005077362060547
    6. 'len' → logprob: -13.442577362060547
    7. '  ' → logprob: -13.942577362060547
    8. '3' → logprob: -14.130077362060547
    9. '    ' → logprob: -14.817577362060547
    10. '

' → logprob: -14.817577362060547

Token 176: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35211697220802307
    2. ':
' → logprob: -1.2271169424057007
    3. ' and' → logprob: -6.60211706161499
    4. '   ' → logprob: -6.72711706161499
    5. ':return' → logprob: -6.97711706161499
    6. '       ' → logprob: -9.727116584777832
    7. 'and' → logprob: -9.977116584777832
    8. ' :
' → logprob: -10.727116584777832
    9. ' or' → logprob: -10.852116584777832
    10. ' :' → logprob: -11.102116584777832

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3655553460121155
    2. ':' → logprob: -1.8655552864074707
    3. ':
' → logprob: -1.9905552864074707
    4. '   ' → logprob: -4.490555286407471
    5. ':return' → logprob: -6.240555286407471
    6. ' and' → logprob: -7.365555286407471
    7. ',' → logprob: -7.865555286407471
    8. ' return' → logprob: -9.240555763244629
    9. ' :
' → logprob: -9.490555763244629
    10. ' or' → logprob: -9.615555763244629

Token 178: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.46703943610191345
    2. 'print' (adapté à ' print') → logprob: -1.4670394659042358
    3. '   ' → logprob: -2.8420393466949463
    4. '
' → logprob: -3.3420393466949463
    5. '       ' → logprob: -3.3420393466949463
    6. ' return' → logprob: -4.967039585113525
    7. 'return' → logprob: -5.092039585113525
    8. '    ' → logprob: -9.342039108276367
    9. ' 
' → logprob: -10.217039108276367
    10. '           ' → logprob: -10.342039108276367

Token 179: '(' (ID: 7)
  Prédit: '(integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(integer' → logprob: -0.0024920646101236343
    2. '(' → logprob: -6.0024919509887695
    3. 'integer' → logprob: -11.50249195098877
    4. '(int' → logprob: -12.25249195098877
    5. '(in' → logprob: -15.25249195098877
    6. '()' → logprob: -15.25249195098877
    7. '((' → logprob: -15.50249195098877
    8. '('' → logprob: -15.62749195098877
    9. '("' → logprob: -16.377492904663086
    10. '(
' → logprob: -16.502492904663086

Token 180: '1' (ID: 16)
  Prédit: 'integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'integer' → logprob: -0.03299367055296898
    2. '(integer' → logprob: -3.7829935550689697
    3. '0' → logprob: -5.157993793487549
    4. ' integer' → logprob: -6.407993793487549
    5. '1' → logprob: -6.532993793487549
    6. '(' → logprob: -7.407993793487549
    7. 'mod' → logprob: -9.03299331665039
    8. ' ' → logprob: -10.65799331665039
    9. 'int' → logprob: -11.28299331665039
    10. ' (' → logprob: -11.53299331665039

Token 181: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.008684182539582253
    2. ')' → logprob: -4.758684158325195
    3. ' )
' → logprob: -10.133684158325195
    4. ')
' → logprob: -11.133684158325195
    5. '   ' → logprob: -11.508684158325195
    6. ')return' → logprob: -12.508684158325195
    7. '
' → logprob: -14.508684158325195
    8. ' )' → logprob: -14.883684158325195
    9. '       ' → logprob: -15.383684158325195
    10. ' ' → logprob: -15.758684158325195

Token 182: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03937709331512451
    2. '
' → logprob: -3.289377212524414
    3. '   ' → logprob: -6.789377212524414
    4. '    
' → logprob: -9.289377212524414
    5. '        
' → logprob: -9.664377212524414
    6. '<|end|>' → logprob: -11.039377212524414
    7. 'return' → logprob: -11.664377212524414
    8. ',' → logprob: -12.039377212524414
    9. '           ' → logprob: -12.414377212524414
    10. '  
' → logprob: -13.039377212524414

Token 183: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002585408743470907
    2. '       ' → logprob: -7.377585411071777
    3. '    
' → logprob: -7.502585411071777
    4. ' else' → logprob: -7.627585411071777
    5. '
' → logprob: -7.877585411071777
    6. 'else' (adapté à ' else') → logprob: -7.877585411071777
    7. 'elif' → logprob: -9.377585411071777
    8. ' elif' → logprob: -10.752585411071777
    9. ',' → logprob: -11.252585411071777
    10. ')' → logprob: -11.627585411071777

Token 184: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005945271346718073
    2. ':
' → logprob: -5.130945205688477
    3. ' :' → logprob: -11.505945205688477
    4. ',' → logprob: -12.380945205688477
    5. ' :
' → logprob: -14.005945205688477
    6. '   ' → logprob: -14.255945205688477
    7. ':
' → logprob: -15.255945205688477
    8. '       ' → logprob: -15.255945205688477
    9. ':

' → logprob: -15.380945205688477
    10. '    ' → logprob: -16.505945205688477

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002230667509138584
    2. '    ' → logprob: -6.627230644226074
    3. '   ' → logprob: -8.252230644226074
    4. '        
' → logprob: -8.502230644226074
    5. ':' → logprob: -8.627230644226074
    6. '    
' → logprob: -9.627230644226074
    7. '      ' → logprob: -10.252230644226074
    8. '     ' → logprob: -10.252230644226074
    9. '     
' → logprob: -10.627230644226074
    10. ':
' → logprob: -11.252230644226074

Token 186: ' least' (ID: 5153)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4787529408931732
    2. ' gcd' → logprob: -1.8537529706954956
    3. ' dp' → logprob: -3.103752851486206
    4. 'dp' → logprob: -3.353752851486206
    5. ' result' → logprob: -3.728752851486206
    6. 'g' → logprob: -3.728752851486206
    7. '       ' → logprob: -3.853752851486206
    8. ' answer' → logprob: -4.728753089904785
    9. ' max' → logprob: -4.853753089904785
    10. ' maximum' → logprob: -5.103753089904785

Token 187: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.03657583147287369
    2. '_g' → logprob: -3.4115757942199707
    3. ' common' → logprob: -7.786575794219971
    4. '_' → logprob: -7.786575794219971
    5. '_value' → logprob: -7.786575794219971
    6. '_div' → logprob: -7.911575794219971
    7. '_multiple' → logprob: -8.411576271057129
    8. 'common' → logprob: -8.536576271057129
    9. '_l' → logprob: -8.536576271057129
    10. '_count' → logprob: -9.036576271057129

Token 188: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.0010133992182090878
    2. '_m' → logprob: -7.626013278961182
    3. '_multiplier' → logprob: -8.00101375579834
    4. 'multiple' → logprob: -9.12601375579834
    5. '_' → logprob: -10.37601375579834
    6. '_mult' → logprob: -11.00101375579834
    7. ' multiple' → logprob: -11.75101375579834
    8. '_div' → logprob: -12.00101375579834
    9. '_mul' → logprob: -12.25101375579834
    10. '_factor' → logprob: -12.37601375579834

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04030762240290642
    2. '=' → logprob: -3.5403075218200684
    3. '_' → logprob: -4.665307521820068
    4. '_value' → logprob: -7.415307521820068
    5. '_val' → logprob: -8.290307998657227
    6. ' ' → logprob: -9.290307998657227
    7. '   ' → logprob: -10.290307998657227
    8. '_values' → logprob: -10.915307998657227
    9. ',' → logprob: -11.165307998657227
    10. ' _' → logprob: -11.290307998657227

Token 190: ' integer' (ID: 16336)
  Prédit: 'integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'integer' → logprob: -0.01040305569767952
    2. '1' → logprob: -5.260403156280518
    3. ' integer' → logprob: -5.885403156280518
    4. 'compute' → logprob: -6.635403156280518
    5. '(integer' → logprob: -7.010403156280518
    6. ' ' → logprob: -10.01040267944336
    7. 'product' → logprob: -10.38540267944336
    8. '(' → logprob: -10.63540267944336
    9. 'int' → logprob: -11.13540267944336
    10. '   ' → logprob: -11.26040267944336

Token 191: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -3.249780638725497e-05
    2. 'array' → logprob: -10.375032424926758
    3. '_' → logprob: -15.000032424926758
    4. 'Array' → logprob: -15.625032424926758
    5. '_list' → logprob: -15.875032424926758
    6. 's' → logprob: -16.000032424926758
    7. '[' → logprob: -16.250032424926758
    8. '_arr' → logprob: -16.250032424926758
    9. '_arrays' → logprob: -16.500032424926758
    10. ' array' → logprob: -17.125032424926758

Token 192: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.319370302458992e-06
    2. ' [' → logprob: -12.875005722045898
    3. '[:]' → logprob: -13.375005722045898
    4. '[:' → logprob: -15.250005722045898
    5. '
' → logprob: -15.500005722045898
    6. '.copy' → logprob: -15.625005722045898
    7. '[-' → logprob: -16.1250057220459
    8. '```' → logprob: -16.2500057220459
    9. ' ' → logprob: -16.6250057220459
    10. '   ' → logprob: -17.0000057220459

Token 193: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010354319238103926
    2. ' ' → logprob: -9.250103950500488
    3. '-' → logprob: -13.375103950500488
    4. '   ' → logprob: -13.375103950500488
    5. '[' → logprob: -13.500103950500488
    6. '1' → logprob: -13.687603950500488
    7. ':' → logprob: -14.937603950500488
    8. '
' → logprob: -15.437603950500488
    9. ']' → logprob: -15.625103950500488
    10. ' -' → logprob: -16.125102996826172

Token 194: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5285350680351257
    2. '<|end|>' → logprob: -0.9035350680351257
    3. '<|end|>' → logprob: -6.153534889221191
    4. ']' → logprob: -6.778534889221191
    5. ')
' → logprob: -7.028534889221191
    6. '
' → logprob: -7.403534889221191
    7. ' )' → logprob: -8.778534889221191
    8. '   ' → logprob: -9.278534889221191
    9. '*' → logprob: -9.903534889221191
    10. 'def' → logprob: -9.903534889221191

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026369385421276093
    2. ' for' → logprob: -4.526369571685791
    3. '   ' → logprob: -4.651369571685791
    4. '<|end|>' → logprob: -6.526369571685791
    5. ' ' → logprob: -6.651369571685791
    6. ' 
' → logprob: -7.026369571685791
    7. 'for' → logprob: -7.151369571685791
    8. '_' → logprob: -8.151369094848633
    9. '    ' → logprob: -8.651369094848633
    10. '        
' → logprob: -9.026369094848633

Token 196: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.546424150466919
    2. 'for' (adapté à ' for') → logprob: -0.921424150466919
    3. '       ' → logprob: -3.796424150466919
    4. '   ' → logprob: -7.54642391204834
    5. '    ' → logprob: -10.92142391204834
    6. '	for' → logprob: -10.92142391204834
    7. '        ' → logprob: -11.92142391204834
    8. ' ' → logprob: -12.04642391204834
    9. '	' → logprob: -14.04642391204834
    10. ' ' → logprob: -14.29642391204834

Token 197: ' current' (ID: 2208)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.33428165316581726
    2. ' index' → logprob: -1.7092816829681396
    3. ' number' → logprob: -2.7092816829681396
    4. ' value' → logprob: -4.4592814445495605
    5. 'index' → logprob: -4.5842814445495605
    6. ' current' → logprob: -4.9592814445495605
    7. 'number' → logprob: -6.0842814445495605
    8. ' single' → logprob: -6.4592814445495605
    9. 'i' → logprob: -6.8342814445495605
    10. 'value' → logprob: -6.8342814445495605

Token 198: '_index' (ID: 7748)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.14795854687690735
    2. '_' → logprob: -2.647958517074585
    3. '_number' → logprob: -3.272958517074585
    4. '_index' → logprob: -4.022958755493164
    5. '_integer' → logprob: -4.897958755493164
    6. '_element' → logprob: -6.147958755493164
    7. ' _' → logprob: -7.272958755493164
    8. '_num' → logprob: -8.272958755493164
    9. '_i' → logprob: -8.897958755493164
    10. '_val' → logprob: -9.022958755493164

Token 199: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01106515247374773
    2. 'in' → logprob: -4.5110650062561035
    3. ' ' → logprob: -11.011065483093262
    4. '	in' → logprob: -14.761065483093262
    5. ',' → logprob: -15.636065483093262
    6. 'In' → logprob: -16.386064529418945
    7. 'import' → logprob: -16.511064529418945
    8. '1' → logprob: -16.761064529418945
    9. ' ' → logprob: -17.011064529418945
    10. ' i' → logprob: -17.136064529418945

Token 200: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868938982486725
    2. 'range' → logprob: -1.13689386844635
    3. ' ' → logprob: -11.011894226074219
    4. '  ' → logprob: -12.886894226074219
    5. '   ' → logprob: -13.136894226074219
    6. '	range' → logprob: -13.761894226074219
    7. '(range' → logprob: -14.761894226074219
    8. '1' → logprob: -16.38689422607422
    9. '    ' → logprob: -16.38689422607422
    10. ' xrange' → logprob: -17.13689422607422

Token 201: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00031615851912647486
    2. '1' → logprob: -8.125316619873047
    3. '   ' → logprob: -11.625316619873047
    4. '       ' → logprob: -12.125316619873047
    5. ' (' → logprob: -12.250316619873047
    6. ' ' → logprob: -14.125316619873047
    7. '    ' → logprob: -16.875316619873047
    8. '        ' → logprob: -17.000316619873047
    9. '(
' → logprob: -17.125316619873047
    10. ',' → logprob: -17.500316619873047

Token 202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.786196975852363e-05
    2. ' ' → logprob: -10.625038146972656
    3. '   ' → logprob: -11.250038146972656
    4. '       ' → logprob: -14.875038146972656
    5. '    ' → logprob: -17.125038146972656
    6. 'total' → logprob: -17.125038146972656
    7. '           ' → logprob: -17.500038146972656
    8. '  ' → logprob: -18.625038146972656
    9. '     ' → logprob: -19.250038146972656
    10. ')' → logprob: -19.500038146972656

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005207431968301535
    2. ' ,' → logprob: -7.625520706176758
    3. ',total' → logprob: -10.375520706176758
    4. ',len' → logprob: -14.125520706176758
    5. 'total' → logprob: -14.875520706176758
    6. ',
' → logprob: -15.250520706176758
    7. '   ' → logprob: -16.625520706176758
    8. ' total' → logprob: -17.000520706176758
    9. ',n' → logprob: -17.750520706176758
    10. '       ' → logprob: -18.000520706176758

Token 204: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.20144490897655487
    2. ' total' → logprob: -1.7014448642730713
    3. 'len' → logprob: -10.826444625854492
    4. ' len' → logprob: -11.576444625854492
    5. '   ' → logprob: -13.326444625854492
    6. '	total' → logprob: -15.201444625854492
    7. ' ' → logprob: -15.451444625854492
    8. '       ' → logprob: -16.076444625854492
    9. 'tot' → logprob: -17.076444625854492
    10. '    ' → logprob: -17.451444625854492

Token 205: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.00019471932318992913
    2. 'number' → logprob: -8.625194549560547
    3. '_' → logprob: -11.625194549560547
    4. ' number' → logprob: -12.875194549560547
    5. '_count' → logprob: -14.125194549560547
    6. '_index' → logprob: -14.375194549560547
    7. '_num' → logprob: -14.875194549560547
    8. ' _' → logprob: -15.000194549560547
    9. 'Number' → logprob: -15.000194549560547
    10. '_n' → logprob: -15.000194549560547

Token 206: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -5.6934557505883276e-05
    2. 'count' → logprob: -9.875057220458984
    3. '_' → logprob: -13.375057220458984
    4. '):' → logprob: -13.750057220458984
    5. ')' → logprob: -13.875057220458984
    6. '_c' → logprob: -15.250057220458984
    7. 's' → logprob: -15.250057220458984
    8. '   ' → logprob: -15.500057220458984
    9. ' count' → logprob: -15.750057220458984
    10. ' ' → logprob: -15.875057220458984

Token 207: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5760766267776489
    2. '):' → logprob: -0.8260766267776489
    3. ' ):
' → logprob: -9.82607650756836
    4. ' ):' → logprob: -10.07607650756836
    5. '   ' → logprob: -11.20107650756836
    6. '):
' → logprob: -11.32607650756836
    7. ':' → logprob: -11.57607650756836
    8. '       ' → logprob: -13.20107650756836
    9. ':
' → logprob: -13.45107650756836
    10. '):

' → logprob: -14.45107650756836

Token 208: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003950048238039017
    2. '
' → logprob: -6.503950119018555
    3. ',' → logprob: -6.878950119018555
    4. '            
' → logprob: -7.253950119018555
    5. ':
' → logprob: -9.003950119018555
    6. ' 
' → logprob: -9.003950119018555
    7. '       ' → logprob: -9.503950119018555
    8. ' current' → logprob: -9.878950119018555
    9. '            ' → logprob: -10.003950119018555
    10. ':' → logprob: -10.378950119018555

Token 209: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.24093282222747803
    2. '           ' → logprob: -2.7409329414367676
    3. 'current' (adapté à ' current') → logprob: -2.9909329414367676
    4. ' gcd' → logprob: -2.9909329414367676
    5. 'g' → logprob: -4.115932941436768
    6. '   ' → logprob: -4.990932941436768
    7. ' l' → logprob: -5.115932941436768
    8. ' g' → logprob: -5.115932941436768
    9. ' next' → logprob: -5.490932941436768
    10. '               ' → logprob: -5.615932941436768

Token 210: '_g' (ID: 5439)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.1443823128938675
    2. '_l' → logprob: -2.7693822383880615
    3. '_number' → logprob: -3.1443822383880615
    4. '_' → logprob: -4.394382476806641
    5. '_g' → logprob: -4.519382476806641
    6. '_element' → logprob: -5.644382476806641
    7. '_integer' → logprob: -6.644382476806641
    8. '_num' → logprob: -9.01938247680664
    9. '_val' → logprob: -9.01938247680664
    10. '_le' → logprob: -9.01938247680664

Token 211: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0006587040261365473
    2. 'current' → logprob: -7.8756585121154785
    3. '_value' → logprob: -9.125658988952637
    4. 'value' → logprob: -10.125658988952637
    5. '_cd' → logprob: -10.125658988952637
    6. 'CD' → logprob: -11.000658988952637
    7. '   ' → logprob: -11.375658988952637
    8. 'reat' → logprob: -12.000658988952637
    9. 'cdf' → logprob: -12.000658988952637
    10. 'cdn' → logprob: -12.125658988952637

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009759752079844475
    2. '=' → logprob: -4.634759902954102
    3. ' ' → logprob: -13.259759902954102
    4. ')' → logprob: -14.884759902954102
    5. ',' → logprob: -15.259759902954102
    6. ' ' → logprob: -15.509759902954102
    7. '_value' → logprob: -15.634759902954102
    8. '(' → logprob: -15.634759902954102
    9. '   ' → logprob: -15.759759902954102
    10. '           ' → logprob: -16.0097599029541

Token 213: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.5759396553039551
    2. ' compute' → logprob: -0.8259396553039551
    3. '.compute' → logprob: -16.700939178466797
    4. ' ' → logprob: -17.200939178466797
    5. '   ' → logprob: -17.450939178466797
    6. 'comput' → logprob: -17.575939178466797
    7. 'com' → logprob: -17.825939178466797
    8. 'calculate' → logprob: -17.825939178466797
    9. '    ' → logprob: -18.200939178466797
    10. '_compute' → logprob: -18.325939178466797

Token 214: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.003193516517058015
    2. '_' → logprob: -5.753193378448486
    3. '(integer' → logprob: -12.003193855285645
    4. 'g' → logprob: -12.253193855285645
    5. '(' → logprob: -12.628193855285645
    6. '_l' → logprob: -14.378193855285645
    7. '```' → logprob: -15.128193855285645
    8. 'integer' → logprob: -15.628193855285645
    9. '(current' → logprob: -15.878193855285645
    10. '_(' → logprob: -16.753192901611328

Token 215: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.002411800203844905
    2. '_c' → logprob: -6.752411842346191
    3. '_cd' → logprob: -6.752411842346191
    4. '_g' → logprob: -10.127411842346191
    5. 'c' → logprob: -10.877411842346191
    6. 'CD' → logprob: -12.627411842346191
    7. '_' → logprob: -13.127411842346191
    8. 'cdf' → logprob: -13.502411842346191
    9. 'cdn' → logprob: -13.877411842346191
    10. 'cc' → logprob: -14.127411842346191

Token 216: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009591046255081892
    2. 'least' → logprob: -7.0009589195251465
    3. ' least' → logprob: -10.750959396362305
    4. ' (' → logprob: -11.250959396362305
    5. '(le' → logprob: -11.625959396362305
    6. '(l' → logprob: -13.000959396362305
    7. 'Least' → logprob: -14.125959396362305
    8. '(
' → logprob: -14.750959396362305
    9. 'le' → logprob: -15.750959396362305
    10. '(let' → logprob: -16.375959396362305

Token 217: 'least' (ID: 96926)
  Prédit: 'least'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.0010723463492468
    2. ' least' → logprob: -6.876072406768799
    3. 'le' → logprob: -10.50107192993164
    4. '(' → logprob: -12.00107192993164
    5. '           ' → logprob: -13.50107192993164
    6. '            ' → logprob: -13.87607192993164
    7. 'less' → logprob: -13.87607192993164
    8. ')' → logprob: -14.25107192993164
    9. 'Least' → logprob: -14.50107192993164
    10. 'l' → logprob: -14.87607192993164

Token 218: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -4.954393079970032e-05
    2. 'common' → logprob: -10.000049591064453
    3. '_' → logprob: -13.375049591064453
    4. 'Common' → logprob: -14.125049591064453
    5. '_com' → logprob: -14.750049591064453
    6. '```' → logprob: -15.125049591064453
    7. ' common' → logprob: -15.375049591064453
    8. '_COMMON' → logprob: -16.000049591064453
    9. ' _' → logprob: -16.125049591064453
    10. ')' → logprob: -16.125049591064453

Token 219: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.07914412766695023
    2. 'multiple' → logprob: -2.579144239425659
    3. '_common' → logprob: -8.579144477844238
    4. ' multiple' → logprob: -10.579144477844238
    5. 'common' → logprob: -10.704144477844238
    6. '_' → logprob: -12.329144477844238
    7. '_l' → logprob: -12.579144477844238
    8. 'multip' → logprob: -12.954144477844238
    9. 'ultiple' → logprob: -13.079144477844238
    10. '_multiplier' → logprob: -13.579144477844238

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013405199570115656
    2. ' ,' → logprob: -9.125134468078613
    3. 'integer' → logprob: -11.125134468078613
    4. ',
' → logprob: -12.125134468078613
    5. ',

' → logprob: -13.625134468078613
    6. ' integer' → logprob: -13.875134468078613
    7. ',int' → logprob: -14.250134468078613
    8. '(integer' → logprob: -14.250134468078613
    9. ',current' → logprob: -15.250134468078613
    10. '   ' → logprob: -15.625134468078613

Token 221: ' integer' (ID: 16336)
  Prédit: ' integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integer' → logprob: -0.4740884006023407
    2. 'integer' → logprob: -0.9740884304046631
    3. 'int' → logprob: -12.349088668823242
    4. '(integer' → logprob: -12.849088668823242
    5. '_integer' → logprob: -13.474088668823242
    6. 'Integer' → logprob: -13.974088668823242
    7. ' int' → logprob: -14.724088668823242
    8. '           ' → logprob: -15.099088668823242
    9. '.integer' → logprob: -15.099088668823242
    10. 'inte' → logprob: -15.224088668823242

Token 222: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -1.3425219549390022e-05
    2. 'array' → logprob: -11.37501335144043
    3. '_' → logprob: -14.12501335144043
    4. 'Array' → logprob: -14.12501335144043
    5. '_ARRAY' → logprob: -15.87501335144043
    6. ')' → logprob: -16.00001335144043
    7. '_index' → logprob: -17.12501335144043
    8. '```' → logprob: -17.62501335144043
    9. '_Array' → logprob: -17.87501335144043
    10. '_arr' → logprob: -17.87501335144043

Token 223: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -2.236549335066229e-05
    2. '[' → logprob: -10.750021934509277
    3. '[
' → logprob: -15.000021934509277
    4. 'current' → logprob: -16.000022888183594
    5. ')' → logprob: -16.250022888183594
    6. ' [' → logprob: -16.375022888183594
    7. '[curr' → logprob: -16.500022888183594
    8. '[cur' → logprob: -17.125022888183594
    9. '[_' → logprob: -18.000022888183594
    10. '(current' → logprob: -18.125022888183594

Token 224: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.4974866644479334e-05
    2. 'index' → logprob: -12.125015258789062
    3. '_array' → logprob: -12.125015258789062
    4. 'Index' → logprob: -13.125015258789062
    5. '[index' → logprob: -14.500015258789062
    6. '])' → logprob: -15.125015258789062
    7. ']' → logprob: -15.500015258789062
    8. '
' → logprob: -15.625015258789062
    9. '_INDEX' → logprob: -16.375015258789062
    10. 'array' → logprob: -16.500015258789062

Token 225: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08954674005508423
    2. ')
' → logprob: -2.4645466804504395
    3. ' )' → logprob: -8.089547157287598
    4. ' )
' → logprob: -8.464547157287598
    5. ')
' → logprob: -10.214547157287598
    6. '   ' → logprob: -10.964547157287598
    7. '       ' → logprob: -11.339547157287598
    8. ')

' → logprob: -11.714547157287598
    9. '           ' → logprob: -12.089547157287598
    10. ')`
' → logprob: -12.714547157287598

Token 226: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01909749209880829
    2. '            
' → logprob: -4.394097328186035
    3. '
' → logprob: -6.269097328186035
    4. '            ' → logprob: -6.894097328186035
    5. ' 
' → logprob: -7.019097328186035
    6. ' least' → logprob: -7.144097328186035
    7. '       ' → logprob: -7.394097328186035
    8. ',' → logprob: -8.144097328186035
    9. '        
' → logprob: -8.644097328186035
    10. '               ' → logprob: -8.894097328186035

Token 227: ' least' (ID: 5153)
  Prédit: ' least'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' least' → logprob: -0.39124011993408203
    2. 'least' (adapté à ' least') → logprob: -1.141240119934082
    3. '           ' → logprob: -5.891240119934082
    4. '       ' → logprob: -7.016240119934082
    5. '   ' → logprob: -8.641240119934082
    6. '        ' → logprob: -8.891240119934082
    7. 'le' → logprob: -9.016240119934082
    8. '            ' → logprob: -9.516240119934082
    9. ' if' → logprob: -9.891240119934082
    10. 'if' → logprob: -10.266240119934082

Token 228: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.0004433011345099658
    2. 'common' → logprob: -7.750443458557129
    3. ' common' → logprob: -11.750443458557129
    4. '_' → logprob: -13.375443458557129
    5. ' _' → logprob: -14.000443458557129
    6. 'Common' → logprob: -14.250443458557129
    7. '```' → logprob: -15.250443458557129
    8. '_current' → logprob: -15.375443458557129
    9. '_COMMON' → logprob: -15.875443458557129
    10. '           ' → logprob: -16.000442504882812

Token 229: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.0008332127472385764
    2. 'multiple' → logprob: -8.000833511352539
    3. '_common' → logprob: -8.375833511352539
    4. '_m' → logprob: -8.625833511352539
    5. '_multiplier' → logprob: -10.000833511352539
    6. 'multip' → logprob: -11.375833511352539
    7. 'm' → logprob: -11.750833511352539
    8. ' multiple' → logprob: -12.250833511352539
    9. '_mult' → logprob: -13.125833511352539
    10. '_mul' → logprob: -13.125833511352539

Token 230: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04955189302563667
    2. '=' → logprob: -3.0495519638061523
    3. ' *=' → logprob: -7.049551963806152
    4. ' //' → logprob: -10.049551963806152
    5. '*=' → logprob: -10.299551963806152
    6. ' ' → logprob: -11.174551963806152
    7. '//=' → logprob: -12.549551963806152
    8. ' ' → logprob: -14.549551963806152
    9. '   ' → logprob: -14.799551963806152
    10. ' +=' → logprob: -15.299551963806152

Token 231: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.4754328429698944
    2. ' least' → logprob: -1.1004328727722168
    3. '(' → logprob: -3.475432872772217
    4. ' (' → logprob: -4.225432872772217
    5. ' ' → logprob: -10.225432395935059
    6. '(int' → logprob: -11.350432395935059
    7. '  ' → logprob: -11.600432395935059
    8. 'le' → logprob: -11.725432395935059
    9. '   ' → logprob: -11.975432395935059
    10. '(le' → logprob: -11.975432395935059

Token 232: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.0019318510312587023
    2. 'common' → logprob: -6.251931667327881
    3. '_com' → logprob: -13.876932144165039
    4. ' common' → logprob: -14.251932144165039
    5. 'Common' → logprob: -14.251932144165039
    6. 'comm' → logprob: -15.251932144165039
    7. '_comm' → logprob: -15.376932144165039
    8. '```' → logprob: -16.50193214416504
    9. 'cm' → logprob: -16.62693214416504
    10. '-common' → logprob: -16.62693214416504

Token 233: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.25226539373397827
    2. 'multiple' → logprob: -1.502265453338623
    3. 'common' → logprob: -8.627264976501465
    4. 'ultiple' → logprob: -9.877264976501465
    5. ' multiple' → logprob: -10.002264976501465
    6. '_common' → logprob: -10.502264976501465
    7. '*' → logprob: -11.627264976501465
    8. ' *' → logprob: -11.877264976501465
    9. 'multip' → logprob: -11.877264976501465
    10. '```' → logprob: -13.752264976501465

Token 234: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.35819491744041443
    2. ' *' → logprob: -1.3581949472427368
    3. ' //' → logprob: -3.2331948280334473
    4. '//' → logprob: -5.483194828033447
    5. ' ' → logprob: -8.108195304870605
    6. ' ' → logprob: -10.233195304870605
    7. '```' → logprob: -12.233195304870605
    8. '  ' → logprob: -12.358195304870605
    9. '   ' → logprob: -13.608195304870605
    10. '*object' → logprob: -14.358195304870605

Token 235: ' integer' (ID: 16336)
  Prédit: 'integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'integer' → logprob: -0.04607090726494789
    2. ' integer' → logprob: -3.1710708141326904
    3. '(integer' → logprob: -5.7960710525512695
    4. ' (' → logprob: -10.79607105255127
    5. ' ' → logprob: -12.79607105255127
    6. 'int' → logprob: -13.54607105255127
    7. '   ' → logprob: -14.42107105255127
    8. 'inte' → logprob: -14.42107105255127
    9. '_integer' → logprob: -14.67107105255127
    10. 'Integer' → logprob: -14.92107105255127

Token 236: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -1.0280383548888494e-06
    2. 'array' → logprob: -14.000000953674316
    3. 'Array' → logprob: -16.375001907348633
    4. '_ARRAY' → logprob: -17.250001907348633
    5. '_' → logprob: -18.375001907348633
    6. '_Array' → logprob: -19.250001907348633
    7. '_arrays' → logprob: -19.375001907348633
    8. '_arr' → logprob: -20.000001907348633
    9. '_ar' → logprob: -20.125001907348633
    10. '$array' → logprob: -20.875001907348633

Token 237: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -1.0206720617134124e-05
    2. '[' → logprob: -11.75001049041748
    3. '_current' → logprob: -13.62501049041748
    4. '[_' → logprob: -14.50001049041748
    5. '(current' → logprob: -15.87501049041748
    6. '[
' → logprob: -16.250009536743164
    7. '[count' → logprob: -16.500009536743164
    8. 'current' → logprob: -17.500009536743164
    9. '[curr' → logprob: -17.500009536743164
    10. '[next' → logprob: -17.750009536743164

Token 238: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00970356073230505
    2. 'current' → logprob: -6.009703636169434
    3. '[current' → logprob: -6.009703636169434
    4. '_count' → logprob: -6.134703636169434
    5. '_current' → logprob: -6.259703636169434
    6. 'index' → logprob: -7.384703636169434
    7. '_array' → logprob: -11.884703636169434
    8. '[index' → logprob: -12.009703636169434
    9. '$current' → logprob: -12.134703636169434
    10. '(current' → logprob: -12.259703636169434

Token 239: ']' (ID: 60)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.31330108642578125
    2. '//' → logprob: -1.3133010864257812
    3. ' ' → logprob: -11.563301086425781
    4. ' ' → logprob: -11.563301086425781
    5. ')' → logprob: -11.813301086425781
    6. '...' → logprob: -12.313301086425781
    7. '
' → logprob: -12.938301086425781
    8. '   ' → logprob: -13.438301086425781
    9. '```' → logprob: -13.438301086425781
    10. ']' → logprob: -13.563301086425781

Token 240: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.008624501526355743
    2. '//' → logprob: -4.75862455368042
    3. '
' → logprob: -12.758624076843262
    4. 'current' → logprob: -13.508624076843262
    5. '   ' → logprob: -13.758624076843262
    6. ' ' → logprob: -13.758624076843262
    7. ' current' → logprob: -14.133624076843262
    8. ' //
' → logprob: -14.258624076843262
    9. ' ' → logprob: -14.508624076843262
    10. '#' → logprob: -14.508624076843262

Token 241: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0005530327325686812
    2. ' current' → logprob: -7.500553131103516
    3. '(current' → logprob: -19.875553131103516
    4. ' ' → logprob: -20.375553131103516
    5. '	current' → logprob: -21.250553131103516
    6. '[current' → logprob: -21.375553131103516
    7. '   ' → logprob: -21.500553131103516
    8. '$current' → logprob: -21.625553131103516
    9. '
' → logprob: -21.750553131103516
    10. '           ' → logprob: -21.875553131103516

Token 242: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -1.9504606825648807e-05
    2. '_' → logprob: -10.875019073486328
    3. '_index' → logprob: -15.375019073486328
    4. 'g' → logprob: -16.000019073486328
    5. '_token' → logprob: -16.500019073486328
    6. '_value' → logprob: -17.375019073486328
    7. '_
' → logprob: -18.625019073486328
    8. ' _' → logprob: -18.750019073486328
    9. '_common' → logprob: -19.375019073486328
    10. ' ' → logprob: -19.875019073486328

Token 243: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0005823421524837613
    2. 'current' → logprob: -7.625582218170166
    3. '_cd' → logprob: -10.500582695007324
    4. 'c' → logprob: -11.000582695007324
    5. 'cdf' → logprob: -11.750582695007324
    6. 'CD' → logprob: -12.000582695007324
    7. '```' → logprob: -12.500582695007324
    8. 'cdn' → logprob: -12.625582695007324
    9. '_c' → logprob: -13.000582695007324
    10. 'cord' → logprob: -13.313082695007324

Token 244: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17830291390419006
    2. '<|end|>' → logprob: -2.1783030033111572
    3. '       ' → logprob: -3.3033030033111572
    4. '        
' → logprob: -4.928302764892578
    5. '  
' → logprob: -6.803302764892578
    6. '
' → logprob: -6.803302764892578
    7. '    
' → logprob: -7.178302764892578
    8. '\n' → logprob: -7.553302764892578
    9. '<|end|>' → logprob: -7.803302764892578
    10. '   ' → logprob: -7.803302764892578

Token 245: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6134696006774902
    2. '<|end|>' → logprob: -1.1134696006774902
    3. '       ' → logprob: -2.2384696006774902
    4. '        
' → logprob: -4.98846960067749
    5. '  
' → logprob: -5.23846960067749
    6. ' 
' → logprob: -5.36346960067749
    7. '    
' → logprob: -6.23846960067749
    8. '   ' → logprob: -6.86346960067749
    9. ')' → logprob: -7.73846960067749
    10. '\n' → logprob: -7.86346960067749

Token 246: ' least' (ID: 5153)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5432936549186707
    2. 'print' → logprob: -1.5432937145233154
    3. 'count' → logprob: -2.5432937145233154
    4. 'answer' → logprob: -2.7932937145233154
    5. 'counter' → logprob: -3.5432937145233154
    6. 'current' → logprob: -4.168293476104736
    7. 'if' → logprob: -4.543293476104736
    8. 're' → logprob: -6.418293476104736
    9. 'for' → logprob: -6.918293476104736
    10. '   ' → logprob: -7.043293476104736

Token 247: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.008667164482176304
    2. 'common' → logprob: -4.7586669921875
    3. ' common' → logprob: -10.0086669921875
    4. 'Common' → logprob: -12.5086669921875
    5. '```' → logprob: -13.7586669921875
    6. '
' → logprob: -14.6336669921875
    7. '_' → logprob: -14.7586669921875
    8. ' Common' → logprob: -15.3836669921875
    9. '	common' → logprob: -15.5086669921875
    10. '(common' → logprob: -15.5086669921875

Token 248: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.007431984879076481
    2. 'multiple' → logprob: -5.632431983947754
    3. '_common' → logprob: -5.882431983947754
    4. 'common' → logprob: -8.382431983947754
    5. '_possible' → logprob: -8.882431983947754
    6. '_' → logprob: -9.507431983947754
    7. '```' → logprob: -9.507431983947754
    8. 'imum' → logprob: -9.507431983947754
    9. '<|end|>' → logprob: -9.882431983947754
    10. 'ultiple' → logprob: -10.132431983947754

Token 249: ' %=' (ID: 117035)
  Prédit: ' %='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.2944374978542328
    2. ' %' → logprob: -1.4194375276565552
    3. '%=' → logprob: -5.044437408447266
    4. '%' → logprob: -5.419437408447266
    5. ' ' → logprob: -6.794437408447266
    6. ' =' → logprob: -7.544437408447266
    7. ' ' → logprob: -7.669437408447266
    8. '=' → logprob: -9.419437408447266
    9. '<|end|>' → logprob: -10.294437408447266
    10. '  ' → logprob: -11.169437408447266

Token 250: ' modulus' (ID: 149464)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -9.865583706414327e-05
    2. ' modulus' → logprob: -9.25009822845459
    3. '(mod' → logprob: -13.12509822845459
    4. ' mod' → logprob: -15.00009822845459
    5. '100' → logprob: -16.875099182128906
    6. '	mod' → logprob: -17.125099182128906
    7. 'modifier' → logprob: -18.375099182128906
    8. ' ' → logprob: -18.500099182128906
    9. 'MOD' → logprob: -18.500099182128906
    10. 'module' → logprob: -18.500099182128906

Token 251: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01673586666584015
    2. '<|end|>' → logprob: -4.141736030578613
    3. '       ' → logprob: -7.766736030578613
    4. '

' → logprob: -9.516736030578613
    5. '        
' → logprob: -9.641736030578613
    6. '
' → logprob: -9.891736030578613
    7. '  
' → logprob: -10.516736030578613
    8. '\n' → logprob: -11.141736030578613
    9. ' 
' → logprob: -11.391736030578613
    10. '
        
' → logprob: -12.016736030578613

Token 252: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06420239806175232
    2. '<|end|>' → logprob: -2.939202308654785
    3. '   ' → logprob: -4.939202308654785
    4. '       ' → logprob: -7.564202308654785
    5. '    
' → logprob: -7.939202308654785
    6. '\n' → logprob: -8.189202308654785
    7. '  
' → logprob: -8.314202308654785
    8. ' 
' → logprob: -8.939202308654785
    9. ')' → logprob: -9.064202308654785
    10. '        
' → logprob: -9.689202308654785

Token 253: ' sum' (ID: 4215)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4249587059020996
    2. 'result' → logprob: -1.2999587059020996
    3. 'count' → logprob: -3.1749587059020996
    4. 'answer' → logprob: -3.9249587059020996
    5. 'counter' → logprob: -4.7999587059021
    6. 'current' → logprob: -6.2999587059021
    7. 'for' → logprob: -7.2999587059021
    8. 'max' → logprob: -8.674959182739258
    9. 'if' → logprob: -8.674959182739258
    10. '   ' → logprob: -9.049959182739258

Token 254: '_of' (ID: 8023)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.38099393248558044
    2. '_value' → logprob: -1.8809939622879028
    3. '_of' → logprob: -2.2559938430786133
    4. '_result' → logprob: -3.0059938430786133
    5. ' =' → logprob: -5.255993843078613
    6. '_val' → logprob: -6.005993843078613
    7. '_=' → logprob: -7.130993843078613
    8. '_values' → logprob: -7.380993843078613
    9. '=' → logprob: -8.130993843078613
    10. '_total' → logprob: -8.630993843078613

Token 255: '_results' (ID: 31049)
  Prédit: 'integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'integer' → logprob: -1.1772611141204834
    2. '(integer' → logprob: -1.6772611141204834
    3. 'least' → logprob: -1.6772611141204834
    4. ' least' → logprob: -1.9272611141204834
    5. ' integer' → logprob: -2.3022611141204834
    6. '(' → logprob: -4.3022613525390625
    7. '((' → logprob: -4.3022613525390625
    8. '(i' → logprob: -4.6772613525390625
    9. 'powers' → logprob: -4.9272613525390625
    10. 'range' → logprob: -5.5522613525390625

Token 256: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889529317617416
    2. '=' → logprob: -2.578895330429077
    3. ' +=' → logprob: -13.078895568847656
    4. ' ' → logprob: -13.453895568847656
    5. '_' → logprob: -14.203895568847656
    6. ' ' → logprob: -14.578895568847656
    7. ',' → logprob: -15.078895568847656
    8. '+=' → logprob: -15.578895568847656
    9. '=sum' → logprob: -15.703895568847656
    10. ' =
' → logprob: -16.203895568847656

Token 257: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03842918947339058
    2. ' ' → logprob: -4.163429260253906
    3. '1' → logprob: -4.413429260253906
    4. '(' → logprob: -5.538429260253906
    5. 'least' → logprob: -6.163429260253906
    6. ' (' → logprob: -6.288429260253906
    7. ' least' → logprob: -6.288429260253906
    8. '((' → logprob: -9.913429260253906
    9. 'pow' → logprob: -10.038429260253906
    10. 'sum' → logprob: -10.600929260253906

Token 258: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08609850704669952
    2. '1' → logprob: -2.9610984325408936
    3. '(' → logprob: -3.7110984325408936
    4. 'least' → logprob: -5.961098670959473
    5. 'sum' → logprob: -6.086098670959473
    6. '(sum' → logprob: -7.211098670959473
    7. '((' → logprob: -8.711098670959473
    8. 'pow' → logprob: -8.711098670959473
    9. ' ' → logprob: -9.461098670959473
    10. 'len' → logprob: -9.711098670959473

Token 259: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36724796891212463
    2. '<|end|>' → logprob: -1.2422479391098022
    3. '
' → logprob: -5.117248058319092
    4. ' for' → logprob: -5.242248058319092
    5. ' ' → logprob: -5.742248058319092
    6. '<|end|>' → logprob: -6.867248058319092
    7. '        ' → logprob: -7.242248058319092
    8. ' 
' → logprob: -7.992248058319092
    9. '	' → logprob: -7.992248058319092
    10. '   ' → logprob: -8.117247581481934

Token 260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018745388835668564
    2. ' for' → logprob: -4.143745422363281
    3. '<|end|>' → logprob: -6.518745422363281
    4. 'for' → logprob: -7.518745422363281
    5. '        ' → logprob: -8.018745422363281
    6. '   ' → logprob: -9.268745422363281
    7. '	' → logprob: -9.893745422363281
    8. '    ' → logprob: -10.018745422363281
    9. ' ' → logprob: -10.143745422363281
    10. '	for' → logprob: -10.643745422363281

Token 261: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.5252596464706585e-05
    2. '       ' → logprob: -10.750044822692871
    3. '   ' → logprob: -11.250044822692871
    4. ' for' → logprob: -12.000044822692871
    5. 'current' → logprob: -12.625044822692871
    6. '
' → logprob: -14.875044822692871
    7. '```' → logprob: -15.875044822692871
    8. 'range' → logprob: -16.375045776367188
    9. 'fo' → logprob: -16.500045776367188
    10. 'sum' → logprob: -16.625045776367188

Token 262: ' current' (ID: 2208)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -1.1567819118499756
    2. ' value' → logprob: -1.6567819118499756
    3. ' current' → logprob: -1.7817819118499756
    4. ' i' → logprob: -1.9067819118499756
    5. ' index' → logprob: -2.7817819118499756
    6. 'number' → logprob: -3.6567819118499756
    7. 'value' → logprob: -3.9067819118499756
    8. ' integer' → logprob: -4.156782150268555
    9. 'current' → logprob: -4.281782150268555
    10. 'index' → logprob: -4.656782150268555

Token 263: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.5315582752227783
    2. '_value' → logprob: -1.4065582752227783
    3. '_' → logprob: -2.0315582752227783
    4. '_number' → logprob: -3.4065582752227783
    5. ' in' → logprob: -7.156558036804199
    6. '_num' → logprob: -8.0315580368042
    7. '_element' → logprob: -8.1565580368042
    8. 'in' → logprob: -8.2815580368042
    9. 'value' → logprob: -8.2815580368042
    10. '_i' → logprob: -8.4065580368042

Token 264: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01260806992650032
    2. 'in' → logprob: -4.387608051300049
    3. ',' → logprob: -9.762608528137207
    4. ' ' → logprob: -10.262608528137207
    5. 'range' → logprob: -12.762608528137207
    6. ' ,' → logprob: -13.637608528137207
    7. 'import' → logprob: -14.387608528137207
    8. ' range' → logprob: -15.387608528137207
    9. '  ' → logprob: -15.762608528137207
    10. '   ' → logprob: -16.13760757446289

Token 265: ' current' (ID: 2208)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.593584418296814
    2. 'current' → logprob: -1.843584418296814
    3. ' value' → logprob: -2.4685845375061035
    4. 'single' → logprob: -2.5935845375061035
    5. ' current' → logprob: -3.0935845375061035
    6. 'number' → logprob: -3.4685845375061035
    7. 'integer' → logprob: -3.9685845375061035
    8. 'element' → logprob: -4.3435845375061035
    9. ' single' → logprob: -4.5935845375061035
    10. ' number' → logprob: -5.4685845375061035

Token 266: '_integer' (ID: 82911)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.027144452556967735
    2. '_' → logprob: -4.777144432067871
    3. '_number' → logprob: -4.777144432067871
    4. '_element' → logprob: -5.027144432067871
    5. '_integer' → logprob: -6.277144432067871
    6. 'value' → logprob: -6.652144432067871
    7. '_val' → logprob: -9.652144432067871
    8. 'element' → logprob: -10.652144432067871
    9. 'integer' → logprob: -10.777144432067871
    10. '_num' → logprob: -11.027144432067871

Token 267: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012528955936431885
    2. 'in' → logprob: -4.387528896331787
    3. ' ' → logprob: -11.512529373168945
    4. ',' → logprob: -11.762529373168945
    5. 's' → logprob: -15.012529373168945
    6. 'import' → logprob: -15.637529373168945
    7. '	in' → logprob: -15.887529373168945
    8. 'value' → logprob: -16.012529373168945
    9. '_in' → logprob: -16.137529373168945
    10. '  ' → logprob: -16.387529373168945

Token 268: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.12692810595035553
    2. 'enumer' → logprob: -2.1269280910491943
    3. ' enumer' → logprob: -19.001928329467773
    4. 'en' → logprob: -19.626928329467773
    5. '(en' → logprob: -19.751928329467773
    6. 'Enumer' → logprob: -19.876928329467773
    7. ' en' → logprob: -20.751928329467773
    8. '```' → logprob: -20.751928329467773
    9. ' enumeration' → logprob: -20.751928329467773
    10. 'enum' → logprob: -21.126928329467773

Token 269: '(integer' (ID: 191023)
  Prédit: '(integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(integer' → logprob: -0.0015242677181959152
    2. 'integer' → logprob: -6.501524448394775
    3. ' integer' → logprob: -11.001523971557617
    4. '(' → logprob: -12.751523971557617
    5. '(in' → logprob: -14.251523971557617
    6. '(int' → logprob: -14.251523971557617
    7. ' (' → logprob: -14.626523971557617
    8. '(en' → logprob: -15.376523971557617
    9. 'enumer' → logprob: -16.001523971557617
    10. '((' → logprob: -16.126523971557617

Token 270: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -5.438573680294212e-06
    2. 's' → logprob: -12.625005722045898
    3. 'array' → logprob: -14.125005722045898
    4. '_' → logprob: -14.375005722045898
    5. '_list' → logprob: -14.875005722045898
    6. 'Array' → logprob: -16.7500057220459
    7. '_arrays' → logprob: -17.1250057220459
    8. ')' → logprob: -17.2500057220459
    9. '_ARRAY' → logprob: -17.2500057220459
    10. '   ' → logprob: -17.6250057220459

Token 271: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02797316387295723
    2. '):
' → logprob: -4.027973175048828
    3. ':' → logprob: -4.652973175048828
    4. ' ):' → logprob: -8.902973175048828
    5. ',' → logprob: -9.777973175048828
    6. '   ' → logprob: -11.152973175048828
    7. ':
' → logprob: -11.652973175048828
    8. ')' → logprob: -11.652973175048828
    9. ' ):
' → logprob: -12.402973175048828
    10. ' :' → logprob: -12.527973175048828

Token 272: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031546398997306824
    2. ':' → logprob: -3.7815463542938232
    3. ':
' → logprob: -5.656546592712402
    4. ',' → logprob: -6.406546592712402
    5. '<|end|>' → logprob: -6.656546592712402
    6. '            
' → logprob: -8.281546592712402
    7. '
' → logprob: -8.281546592712402
    8. '       ' → logprob: -8.781546592712402
    9. '          ' → logprob: -9.156546592712402
    10. '            ' → logprob: -9.156546592712402

Token 273: ' modular' (ID: 61198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7831822633743286
    2. ' sum' → logprob: -1.0331822633743286
    3. 'sum' → logprob: -2.783182144165039
    4. ' l' → logprob: -4.033182144165039
    5. ' current' → logprob: -4.033182144165039
    6. 'inverse' → logprob: -4.033182144165039
    7. '   ' → logprob: -4.283182144165039
    8. 'current' → logprob: -4.783182144165039
    9. ' inverse' → logprob: -5.033182144165039
    10. 'g' → logprob: -5.033182144165039

Token 274: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.016797063872218132
    2. '_sum' → logprob: -4.641797065734863
    3. '_value' → logprob: -6.016797065734863
    4. 'inverse' → logprob: -6.266797065734863
    5. '_m' → logprob: -6.766797065734863
    6. '_inv' → logprob: -8.016797065734863
    7. '_multiplier' → logprob: -8.266797065734863
    8. '_' → logprob: -8.516797065734863
    9. '_integer' → logprob: -8.891797065734863
    10. '_result' → logprob: -9.266797065734863

Token 275: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029848486185073853
    2. '=' → logprob: -3.529848575592041
    3. '_' → logprob: -10.529848098754883
    4. ',' → logprob: -11.029848098754883
    5. '_value' → logprob: -11.529848098754883
    6. '           ' → logprob: -11.779848098754883
    7. '            ' → logprob: -11.779848098754883
    8. 's' → logprob: -12.279848098754883
    9. ' ' → logprob: -12.404848098754883
    10. ' =
' → logprob: -12.654848098754883

Token 276: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.00196836213581264
    2. ' pow' → logprob: -6.2519683837890625
    3. '   ' → logprob: -10.501968383789062
    4. '(pow' → logprob: -11.626968383789062
    5. '1' → logprob: -14.126968383789062
    6. 'current' → logprob: -14.251968383789062
    7. 'mod' → logprob: -14.751968383789062
    8. ' ' → logprob: -14.751968383789062
    9. 'least' → logprob: -14.876968383789062
    10. '
' → logprob: -14.876968383789062

Token 277: '(current' (ID: 15023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.693410336971283
    2. '(current' → logprob: -0.693410336971283
    3. 'current' → logprob: -9.44340991973877
    4. '(le' → logprob: -9.69340991973877
    5. 'least' → logprob: -9.69340991973877
    6. '(
' → logprob: -10.31840991973877
    7. '(cur' → logprob: -12.56840991973877
    8. '((' → logprob: -12.56840991973877
    9. '(curr' → logprob: -12.56840991973877
    10. '(integer' → logprob: -12.94340991973877

Token 278: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -0.0012997613521292806
    2. '_' → logprob: -7.376299858093262
    3. '_index' → logprob: -7.876299858093262
    4. 'integer' → logprob: -9.001299858093262
    5. '_,' → logprob: -9.251299858093262
    6. '_inverse' → logprob: -10.501299858093262
    7. 'Integer' → logprob: -10.751299858093262
    8. '_
' → logprob: -12.251299858093262
    9. '_)' → logprob: -12.876299858093262
    10. '_Integer' → logprob: -12.876299858093262

Token 279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006497674621641636
    2. ',
' → logprob: -8.000649452209473
    3. ' ,' → logprob: -8.500649452209473
    4. '-' → logprob: -9.500649452209473
    5. '           ' → logprob: -11.625649452209473
    6. '   ' → logprob: -12.000649452209473
    7. ' -' → logprob: -12.000649452209473
    8. '       ' → logprob: -12.500649452209473
    9. ')' → logprob: -13.125649452209473
    10. ',-' → logprob: -13.250649452209473

Token 280: ' modulus' (ID: 149464)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.975612187583465e-05
    2. '-' → logprob: -11.125029563903809
    3. '-mod' → logprob: -11.625029563903809
    4. ' modulus' → logprob: -12.250029563903809
    5. '(mod' → logprob: -14.625029563903809
    6. ' mod' → logprob: -14.750029563903809
    7. '	mod' → logprob: -15.500029563903809
    8. '.mod' → logprob: -16.000030517578125
    9. ' -' → logprob: -16.750030517578125
    10. '7' → logprob: -17.000030517578125

Token 281: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004306692280806601
    2. ' -' → logprob: -7.750430583953857
    3. '```' → logprob: -18.375431060791016
    4. '-
' → logprob: -19.000431060791016
    5. ' ' → logprob: -19.125431060791016
    6. '−' → logprob: -20.250431060791016
    7. '()-' → logprob: -20.500431060791016
    8. ',' → logprob: -20.625431060791016
    9. '   ' → logprob: -20.875431060791016
    10. '2' → logprob: -21.125431060791016

Token 282: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -14.12500286102295
    3. '
' → logprob: -14.37500286102295
    4. '-' → logprob: -14.50000286102295
    5. '```' → logprob: -14.87500286102295
    6. '

' → logprob: -16.125001907348633
    7. '   ' → logprob: -16.875001907348633
    8. '۲' → logprob: -17.062501907348633
    9. ' -' → logprob: -17.437501907348633
    10. '  ' → logprob: -17.500001907348633

Token 283: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.875000953674316
    3. '
' → logprob: -15.562500953674316
    4. '

' → logprob: -15.625000953674316
    5. '```' → logprob: -15.750000953674316
    6. '-' → logprob: -16.000001907348633
    7. '3' → logprob: -16.375001907348633
    8. '۲' → logprob: -17.000001907348633
    9. '２' → logprob: -17.125001907348633
    10. '
' → logprob: -17.812501907348633

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002238993300125003
    2. ' ,' → logprob: -6.252239227294922
    3. ')' → logprob: -8.377239227294922
    4. ',
' → logprob: -10.377239227294922
    5. '   ' → logprob: -10.502239227294922
    6. '           ' → logprob: -11.752239227294922
    7. '       ' → logprob: -12.252239227294922
    8. ' )' → logprob: -13.127239227294922
    9. '<|end|>' → logprob: -14.127239227294922
    10. '          ' → logprob: -14.502239227294922

Token 285: ' modulus' (ID: 149464)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.08896052092313766
    2. ' modulus' → logprob: -2.4639604091644287
    3. '   ' → logprob: -11.838960647583008
    4. '	mod' → logprob: -12.463960647583008
    5. '(mod' → logprob: -12.838960647583008
    6. ' mod' → logprob: -13.213960647583008
    7. ')' → logprob: -13.338960647583008
    8. ' ' → logprob: -14.338960647583008
    9. '```' → logprob: -14.838960647583008
    10. '       ' → logprob: -14.838960647583008

Token 286: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001514504081569612
    2. ')
' → logprob: -6.501514434814453
    3. '           ' → logprob: -11.501514434814453
    4. ' )' → logprob: -14.001514434814453
    5. ')

' → logprob: -14.626514434814453
    6. '       ' → logprob: -14.626514434814453
    7. ')
' → logprob: -16.251514434814453
    8. '               ' → logprob: -17.001514434814453
    9. '   ' → logprob: -17.376514434814453
    10. ')\
' → logprob: -17.751514434814453

Token 287: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004019991494715214
    2. '<|end|>' → logprob: -5.8790202140808105
    3. '       ' → logprob: -8.254019737243652
    4. '            
' → logprob: -8.754019737243652
    5. '          ' → logprob: -9.004019737243652
    6. ' ' → logprob: -9.004019737243652
    7. ' 
' → logprob: -9.254019737243652
    8. '               ' → logprob: -9.379019737243652
    9. '            ' → logprob: -9.504019737243652
    10. '   ' → logprob: -9.879019737243652

Token 288: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.7511479258537292
    2. 'sum' (adapté à ' sum') → logprob: -1.126147985458374
    3. '           ' → logprob: -1.626147985458374
    4. ' term' → logprob: -6.376147747039795
    5. 'term' → logprob: -6.626147747039795
    6. 'result' → logprob: -6.626147747039795
    7. ' result' → logprob: -7.251147747039795
    8. '       ' → logprob: -7.626147747039795
    9. ' contribution' → logprob: -8.251148223876953
    10. '   ' → logprob: -8.376148223876953

Token 289: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.500000953674316
    3. '+=' → logprob: -15.000000953674316
    4. ' +=' → logprob: -16.000001907348633
    5. ' of' → logprob: -17.125001907348633
    6. '   ' → logprob: -17.875001907348633
    7. '=' → logprob: -18.250001907348633
    8. 'of' → logprob: -18.375001907348633
    9. 'Of' → logprob: -18.625001907348633
    10. ' =' → logprob: -19.125001907348633

Token 290: '_results' (ID: 31049)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.32182273268699646
    2. '(sum' → logprob: -2.5718226432800293
    3. '(' → logprob: -3.0718226432800293
    4. ' results' → logprob: -3.1968226432800293
    5. '((' → logprob: -3.4468226432800293
    6. '_results' → logprob: -3.8218226432800293
    7. 'sum' → logprob: -3.9468226432800293
    8. ' (' → logprob: -3.9468226432800293
    9. '(results' → logprob: -4.696822643280029
    10. ' ((' → logprob: -6.071822643280029

Token 291: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10126758366823196
    2. '+=' → logprob: -2.3512675762176514
    3. '=' → logprob: -7.2262678146362305
    4. ' =' → logprob: -8.10126781463623
    5. '+=(' → logprob: -10.72626781463623
    6. '   ' → logprob: -12.35126781463623
    7. '+' → logprob: -13.85126781463623
    8. '    ' → logprob: -14.22626781463623
    9. ' ' → logprob: -14.60126781463623
    10. ']+=' → logprob: -14.85126781463623

Token 292: ' least' (ID: 5153)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.558373212814331
    2. ' (' → logprob: -0.933373212814331
    3. ' least' → logprob: -3.683373212814331
    4. 'least' → logprob: -4.68337345123291
    5. '((' → logprob: -8.93337345123291
    6. '(le' → logprob: -9.80837345123291
    7. 'le' → logprob: -11.18337345123291
    8. '   ' → logprob: -11.30837345123291
    9. ' ((' → logprob: -11.43337345123291
    10. '(current' → logprob: -12.18337345123291

Token 293: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -1.5690089639974758e-05
    2. 'common' → logprob: -11.250015258789062
    3. '_com' → logprob: -13.750015258789062
    4. 'Common' → logprob: -14.375015258789062
    5. '_' → logprob: -15.500015258789062
    6. '_current' → logprob: -15.750015258789062
    7. '_comm' → logprob: -15.875015258789062
    8. ' common' → logprob: -16.250015258789062
    9. '_COMMON' → logprob: -16.625015258789062
    10. '```' → logprob: -16.875015258789062

Token 294: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.010251556523144245
    2. '_m' → logprob: -4.885251522064209
    3. 'multiple' → logprob: -6.510251522064209
    4. '_common' → logprob: -7.010251522064209
    5. 'multip' → logprob: -9.385251998901367
    6. '_' → logprob: -9.760251998901367
    7. '_possible' → logprob: -10.010251998901367
    8. '_mult' → logprob: -10.885251998901367
    9. '_l' → logprob: -11.885251998901367
    10. 'common' → logprob: -12.135251998901367

Token 295: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5761444568634033
    2. '*' → logprob: -0.8261444568634033
    3. ' ' → logprob: -9.201144218444824
    4. '   ' → logprob: -10.326144218444824
    5. '           ' → logprob: -10.701144218444824
    6. ' ' → logprob: -10.826144218444824
    7. ',' → logprob: -12.326144218444824
    8. '```' → logprob: -12.451144218444824
    9. '    ' → logprob: -12.701144218444824
    10. '          ' → logprob: -12.951144218444824

Token 296: ' modular' (ID: 61198)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.34876564145088196
    2. ' modular' → logprob: -1.2237656116485596
    3. ' mod' → logprob: -8.47376537322998
    4. '(mod' → logprob: -9.59876537322998
    5. '   ' → logprob: -11.34876537322998
    6. ' ' → logprob: -12.22376537322998
    7. '	mod' → logprob: -12.47376537322998
    8. '_mod' → logprob: -12.59876537322998
    9. 'moder' → logprob: -12.59876537322998
    10. '```' → logprob: -12.72376537322998

Token 297: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -4.008129963040119e-06
    2. 'inverse' → logprob: -12.875003814697266
    3. 'Inverse' → logprob: -14.375003814697266
    4. '_reverse' → logprob: -15.125003814697266
    5. ' inverse' → logprob: -15.500003814697266
    6. '_inv' → logprob: -16.625003814697266
    7. '.inverse' → logprob: -16.750003814697266
    8. '...' → logprob: -18.250003814697266
    9. ' _' → logprob: -18.375003814697266
    10. '_' → logprob: -18.375003814697266

Token 298: '
' (ID: 198)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.36654776334762573
    2. '           ' → logprob: -1.3665478229522705
    3. '<|end|>' → logprob: -3.8665478229522705
    4. '%' → logprob: -4.116547584533691
    5. ' ' → logprob: -5.866547584533691
    6. ')' → logprob: -5.991547584533691
    7. '       ' → logprob: -6.116547584533691
    8. '
' → logprob: -6.491547584533691
    9. ' 
' → logprob: -6.866547584533691
    10. '   ' → logprob: -6.866547584533691

Token 299: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06953597068786621
    2. ' %' → logprob: -3.194535970687866
    3. '
' → logprob: -4.694536209106445
    4. '<|end|>' → logprob: -4.694536209106445
    5. ' 
' → logprob: -6.069536209106445
    6. '%' → logprob: -6.319536209106445
    7. '   ' → logprob: -7.069536209106445
    8. ' ' → logprob: -7.819536209106445
    9. ')' → logprob: -7.944536209106445
    10. '       ' → logprob: -7.944536209106445

Token 300: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.2953060567378998
    2. 'sum' (adapté à ' sum') → logprob: -1.4203060865402222
    3. '<|end|>' → logprob: -5.670306205749512
    4. ' 
' → logprob: -5.795306205749512
    5. ' ' → logprob: -6.045306205749512
    6. '1' → logprob: -6.295306205749512
    7. '=' → logprob: -6.795306205749512
    8. '           ' → logprob: -7.920306205749512
    9. '<|end|>' → logprob: -7.920306205749512
    10. '            
' → logprob: -8.295306205749512

Token 301: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -6.392202976712724e-06
    2. '_' → logprob: -12.000006675720215
    3. '=' → logprob: -16.3750057220459
    4. '_=' → logprob: -17.3750057220459
    5. ' of' → logprob: -17.5000057220459
    6. 'of' → logprob: -18.2500057220459
    7. 'Of' → logprob: -18.6250057220459
    8. '+=' → logprob: -18.8750057220459
    9. '_results' → logprob: -18.8750057220459
    10. '_OF' → logprob: -19.1250057220459

Token 302: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -0.0005800772923976183
    2. 'results' → logprob: -7.500580310821533
    3. ' results' → logprob: -10.625579833984375
    4. '_result' → logprob: -13.625579833984375
    5. 'Results' → logprob: -14.125579833984375
    6. '_' → logprob: -15.000579833984375
    7. ' _' → logprob: -15.500579833984375
    8. '_RESULTS' → logprob: -15.875579833984375
    9. 'mod' → logprob: -16.000579833984375
    10. ' ' → logprob: -16.500579833984375

Token 303: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.6975396275520325
    2. ' %=' → logprob: -0.6975396275520325
    3. '%' → logprob: -5.447539806365967
    4. '=' → logprob: -10.322539329528809
    5. ' %' → logprob: -10.322539329528809
    6. ')' → logprob: -12.072539329528809
    7. ' ' → logprob: -13.197539329528809
    8. ' ' → logprob: -14.447539329528809
    9. ')%' → logprob: -14.447539329528809
    10. '%s' → logprob: -15.322539329528809

Token 304: ' modulus' (ID: 149464)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00026979928952641785
    2. ' modulus' → logprob: -8.250269889831543
    3. '(mod' → logprob: -11.750269889831543
    4. '	mod' → logprob: -15.000269889831543
    5. ' mod' → logprob: -16.000268936157227
    6. '   ' → logprob: -16.500268936157227
    7. 'modifier' → logprob: -16.500268936157227
    8. 'modus' → logprob: -17.375268936157227
    9. '.mod' → logprob: -18.500268936157227
    10. ' ' → logprob: -18.625268936157227

Token 305: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22160622477531433
    2. '       ' → logprob: -1.7216062545776367
    3. '<|end|>' → logprob: -4.096606254577637
    4. '   ' → logprob: -6.471606254577637
    5. '        
' → logprob: -7.596606254577637
    6. '  
' → logprob: -7.846606254577637
    7. '    
' → logprob: -8.471606254577637
    8. '
' → logprob: -8.971606254577637
    9. '

' → logprob: -9.096606254577637
    10. ' 
' → logprob: -9.346606254577637

Token 306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3914039731025696
    2. '
' → logprob: -1.1414039134979248
    3. '   ' → logprob: -6.391404151916504
    4. '        
' → logprob: -6.516404151916504
    5. '<|end|>' → logprob: -7.516404151916504
    6. 'print' → logprob: -8.016404151916504
    7. '    
' → logprob: -8.266404151916504
    8. '  
' → logprob: -9.766404151916504
    9. '```' → logprob: -10.016404151916504
    10. '            
' → logprob: -10.266404151916504

Token 307: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.5
    3. '   ' → logprob: -18.375
    4. '
' → logprob: -18.875
    5. '       ' → logprob: -20.75
    6. '```' → logprob: -21.625
    7. '(print' → logprob: -23.0
    8. 'pr' → logprob: -23.375
    9. '	print' → logprob: -23.75
    10. '        
' → logprob: -24.5

Token 308: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.03805927932262421
    2. '(' → logprob: -3.2880592346191406
    3. ' (' → logprob: -11.41305923461914
    4. 'sum' → logprob: -12.41305923461914
    5. '()' → logprob: -13.41305923461914
    6. '(
' → logprob: -14.28805923461914
    7. '((' → logprob: -15.03805923461914
    8. '(s' → logprob: -16.41305923461914
    9. '('' → logprob: -17.16305923461914
    10. '(int' → logprob: -17.28805923461914

Token 309: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.9361264946837764e-07
    2. '(sum' → logprob: -17.125
    3. '_OF' → logprob: -17.25
    4. ')' → logprob: -17.625
    5. ' of' → logprob: -17.75
    6. '_' → logprob: -18.5
    7. '(' → logprob: -18.625
    8. '(_' → logprob: -19.25
    9. 'Of' → logprob: -19.375
    10. '   ' → logprob: -20.5

Token 310: '_results' (ID: 31049)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.10571562498807907
    2. '_results' → logprob: -2.35571551322937
    3. 's' → logprob: -6.105715751647949
    4. 'ults' → logprob: -6.105715751647949
    5. 'es' → logprob: -7.605715751647949
    6. 'source' → logprob: -10.10571575164795
    7. 'ault' → logprob: -10.10571575164795
    8. 'etails' → logprob: -10.10571575164795
    9. 't' → logprob: -10.35571575164795
    10. 'Results' → logprob: -10.60571575164795

Token 311: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.749814019713085e-06
    2. ')
' → logprob: -12.000006675720215
    3. ' )' → logprob: -15.500006675720215
    4. '<|end|>' → logprob: -16.37500762939453
    5. ')}' → logprob: -16.87500762939453
    6. '   ' → logprob: -17.00000762939453
    7. '```' → logprob: -17.37500762939453
    8. '()' → logprob: -17.50000762939453
    9. '+' → logprob: -17.75000762939453
    10. '())' → logprob: -17.75000762939453

Token 312: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03575997054576874
    2. '<|end|>' → logprob: -3.660759925842285
    3. '
' → logprob: -4.785759925842285
    4. '```' → logprob: -7.285759925842285
    5. ' if' → logprob: -8.910759925842285
    6. '()' → logprob: -9.410759925842285
    7. '#' → logprob: -10.160759925842285
    8. 'solve' → logprob: -10.410759925842285
    9. '

' → logprob: -11.035759925842285
    10. '\n' → logprob: -11.285759925842285

Token 313: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2390676736831665
    2. '
' → logprob: -1.9890676736831665
    3. '<|end|>' → logprob: -2.614067554473877
    4. '```' → logprob: -6.739067554473877
    5. ' if' → logprob: -7.114067554473877
    6. '

' → logprob: -8.489068031311035
    7. '\n' → logprob: -8.739068031311035
    8. '#' → logprob: -9.614068031311035
    9. '()' → logprob: -10.489068031311035
    10. '<|end|>' → logprob: -10.489068031311035

Token 314: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23712682723999023
    2. '<|end|>' → logprob: -1.6121268272399902
    3. '

' → logprob: -5.23712682723999
    4. 'if' → logprob: -5.73712682723999
    5. '\n' → logprob: -6.11212682723999
    6. '```' → logprob: -7.73712682723999
    7. '0' → logprob: -9.612127304077148
    8. '()' → logprob: -9.987127304077148
    9. '<|end|>' → logprob: -9.987127304077148
    10. '#' → logprob: -10.112127304077148

Token 315: '0' (ID: 15)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0019067394314333797
    2. '<|end|>' → logprob: -6.751906871795654
    3. '0' → logprob: -7.876906871795654
    4. ' None' → logprob: -8.001906394958496
    5. '```' → logprob: -11.376906394958496
    6. '
' → logprob: -12.251906394958496
    7. '(None' → logprob: -13.126906394958496
    8. '_None' → logprob: -13.751906394958496
    9. '42' → logprob: -14.501906394958496
    10. 'none' → logprob: -15.501906394958496

Token 316: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 317: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008331112563610077
    2. '
' → logprob: -4.883331298828125
    3. '<|end|>' → logprob: -7.758331298828125
    4. ' if' → logprob: -8.508331298828125
    5. '```' → logprob: -9.758331298828125
    6. '\n' → logprob: -10.758331298828125
    7. 'solve' → logprob: -11.633331298828125
    8. '

' → logprob: -13.258331298828125
    9. '#' → logprob: -13.383331298828125
    10. '<|end|>' → logprob: -14.008331298828125

Token 318: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.01107187382876873
    2. '__' → logprob: -4.511071681976318
    3. '_' → logprob: -11.136072158813477
    4. ' ' → logprob: -12.511072158813477
    5. ' _' → logprob: -13.261072158813477
    6. '___' → logprob: -13.386072158813477
    7. ' ' → logprob: -13.886072158813477
    8. '_name' → logprob: -13.886072158813477
    9. ' ___' → logprob: -14.636072158813477
    10. '/__' → logprob: -17.511072158813477

Token 319: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12359017133712769
    2. ' __' → logprob: -2.3735902309417725
    3. '.__' → logprob: -4.623589992523193
    4. ' ==' → logprob: -4.748589992523193
    5. '_main' → logprob: -6.873589992523193
    6. '_' → logprob: -7.248589992523193
    7. '.' → logprob: -7.623589992523193
    8. '==' → logprob: -7.873589992523193
    9. '.main' → logprob: -7.998589992523193
    10. '_name' → logprob: -8.123590469360352

Token 320: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.968934758333489e-05
    2. '==' → logprob: -9.750069618225098
    3. '_' → logprob: -12.375069618225098
    4. ' ==' → logprob: -13.000069618225098
    5. '=="' → logprob: -13.250069618225098
    6. '___' → logprob: -13.500069618225098
    7. '__.__' → logprob: -13.625069618225098
    8. '____' → logprob: -15.375069618225098
    9. '=' → logprob: -16.375070571899414
    10. ' __' → logprob: -16.750070571899414

Token 321: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8706361055374146
    2. ' ==' → logprob: -1.1206361055374146
    3. '__' → logprob: -1.4956361055374146
    4. '=="' → logprob: -3.495635986328125
    5. '=='' → logprob: -7.495635986328125
    6. '=' → logprob: -9.245635986328125
    7. '_' → logprob: -9.995635986328125
    8. '==
' → logprob: -10.245635986328125
    9. '"' → logprob: -10.745635986328125
    10. '___' → logprob: -11.370635986328125

Token 322: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.018329506739974022
    2. ''' → logprob: -4.018329620361328
    3. ' "__' → logprob: -9.268329620361328
    4. '__' → logprob: -9.393329620361328
    5. ' '__' → logprob: -13.643329620361328
    6. '"name' → logprob: -16.393329620361328
    7. '   ' → logprob: -16.518329620361328
    8. '"user' → logprob: -16.518329620361328
    9. '"class' → logprob: -17.018329620361328
    10. ''"' → logprob: -17.143329620361328

Token 323: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -7.896309739408025e-07
    2. 'name' → logprob: -14.500000953674316
    3. ' main' → logprob: -16.0
    4. '_main' → logprob: -16.0
    5. '	main' → logprob: -20.125
    6. 'ma' → logprob: -20.625
    7. 'm' → logprob: -21.0
    8. '(main' → logprob: -21.0
    9. '__' → logprob: -22.0
    10. 'mp' → logprob: -22.0

Token 324: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.006812931038439274
    2. '__' → logprob: -5.006813049316406
    3. '__':
' → logprob: -9.381813049316406
    4. '__:' → logprob: -11.256813049316406
    5. '__["' → logprob: -16.006813049316406
    6. '__
' → logprob: -16.506813049316406
    7. ':' → logprob: -16.506813049316406
    8. '_' → logprob: -16.756813049316406
    9. '():
' → logprob: -17.256813049316406
    10. '__",' → logprob: -17.756813049316406

Token 325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10011554509401321
    2. 'solve' → logprob: -2.4751155376434326
    3. ' solve' → logprob: -4.725115776062012
    4. '	s' → logprob: -6.350115776062012
    5. '.solve' → logprob: -8.475115776062012
    6. '    
' → logprob: -9.100115776062012
    7. '<|end|>' → logprob: -9.975115776062012
    8. '(s' → logprob: -10.350115776062012
    9. ' ' → logprob: -10.600115776062012
    10. '  ' → logprob: -10.725115776062012

Token 326: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -0.001991682220250368
    2. '   ' → logprob: -6.5019917488098145
    3. ' solve' → logprob: -7.6269917488098145
    4. '	s' → logprob: -13.626991271972656
    5. '.solve' → logprob: -14.251991271972656
    6. '  ' → logprob: -16.126991271972656
    7. '```' → logprob: -17.126991271972656
    8. ' ' → logprob: -17.376991271972656
    9. '   ' → logprob: -17.501991271972656
    10. '    
' → logprob: -18.126991271972656

Token 327: '_problem' (ID: 162384)
  Prédit: '_problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_problem' → logprob: -0.0016069859266281128
    2. '_' → logprob: -6.6266069412231445
    3. '()' → logprob: -8.626606941223145
    4. '_pro' → logprob: -9.376606941223145
    5. '(' → logprob: -12.626606941223145
    6. '_solution' → logprob: -12.876606941223145
    7. '_probability' → logprob: -12.876606941223145
    8. 'Problem' → logprob: -13.001606941223145
    9. '_prob' → logprob: -13.001606941223145
    10. '(problem' → logprob: -13.251606941223145

Token 328: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00011439072113716975
    2. '()
' → logprob: -9.125114440917969
    3. ' ()' → logprob: -13.125114440917969
    4. '(' → logprob: -14.250114440917969
    5. '();' → logprob: -14.375114440917969
    6. '()`' → logprob: -14.500114440917969
    7. '()

' → logprob: -14.875114440917969
    8. '()<' → logprob: -15.125114440917969
    9. '()\' → logprob: -15.125114440917969
    10. '()"' → logprob: -15.500114440917969


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 326
Tokens correctement prédits (1ère position, stricte): 171
Tokens correctement prédits (1ère position, avec adaptation): 177
Tokens correctement prédits (top 10): 279
Précision stricte (1ère position): 52.45%
Précision adaptée (1ère position): 54.29%
Précision (top 10): 85.58%
================================================================================
