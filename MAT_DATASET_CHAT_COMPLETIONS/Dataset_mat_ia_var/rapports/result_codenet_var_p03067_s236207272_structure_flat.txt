================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
l = list(map(int, input().split()))
a = l[0]
b = l[1]
x = l[2]
if a <= x and x <= b:
    print('Yes')
else:
    if b <= x and x <= a:
        print('Yes')
    else:
        print('No')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'l' (ID: 75)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' list' (ID: 1562)
  → Token d'amorce (pas de prédiction)

Token 3: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008245282806456089
    2. '[' → logprob: -5.008245468139648
    3. '.' → logprob: -8.008245468139648
    4. '[(' → logprob: -8.008245468139648
    5. '_' → logprob: -8.258245468139648
    6. '```' → logprob: -9.008245468139648
    7. '(l' → logprob: -9.508245468139648
    8. 's' → logprob: -9.633245468139648
    9. '(
' → logprob: -9.883245468139648
    10. ')' → logprob: -10.258245468139648

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23491553962230682
    2. '(lambda' → logprob: -1.6099154949188232
    3. ')' → logprob: -5.359915733337402
    4. '(str' → logprob: -5.734915733337402
    5. '(int' → logprob: -8.234915733337402
    6. '```' → logprob: -8.859915733337402
    7. '=lambda' → logprob: -8.984915733337402
    8. '[' → logprob: -9.109915733337402
    9. '(eval' → logprob: -9.109915733337402
    10. '))' → logprob: -9.359915733337402

Token 5: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07463722676038742
    2. ')' → logprob: -3.1996371746063232
    3. '))' → logprob: -4.449637413024902
    4. '```' → logprob: -5.574637413024902
    5. '(l' → logprob: -5.699637413024902
    6. '(input' → logprob: -6.324637413024902
    7. '`' → logprob: -6.699637413024902
    8. '(user' → logprob: -6.699637413024902
    9. '<|end|>' → logprob: -6.699637413024902
    10. ',' → logprob: -7.074637413024902

Token 6: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.226084902882576
    2. ' input' → logprob: -1.7260849475860596
    3. '(input' → logprob: -3.7260849475860596
    4. ',input' → logprob: -8.97608470916748
    5. ')' → logprob: -9.60108470916748
    6. '=input' → logprob: -10.35108470916748
    7. ' (' → logprob: -11.47608470916748
    8. '[input' → logprob: -11.97608470916748
    9. 'data' → logprob: -12.60108470916748
    10. '(stdin' → logprob: -12.60108470916748

Token 7: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.9753729701042175
    2. '(' → logprob: -1.6003730297088623
    3. '())' → logprob: -1.8503730297088623
    4. '()' → logprob: -2.2253730297088623
    5. '()));' → logprob: -3.4753730297088623
    6. ')' → logprob: -3.6003730297088623
    7. '())))' → logprob: -3.6003730297088623
    8. '(()' → logprob: -3.8503730297088623
    9. '))' → logprob: -4.600372791290283
    10. '('' → logprob: -4.975372791290283

Token 8: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009199160267598927
    2. 'strip' → logprob: -7.000919818878174
    3. 'rstrip' → logprob: -12.000920295715332
    4. ')' → logprob: -13.875920295715332
    5. ' split' → logprob: -14.125920295715332
    6. 'read' → logprob: -14.750920295715332
    7. 'spl' → logprob: -15.125920295715332
    8. '(split' → logprob: -16.875919342041016
    9. 'replace' → logprob: -18.125919342041016
    10. 'startswith' → logprob: -18.375919342041016

Token 9: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.4311908185482025
    2. '))' → logprob: -1.681190848350525
    3. '())' → logprob: -2.6811907291412354
    4. ')' → logprob: -3.1811907291412354
    5. '(' → logprob: -3.4311907291412354
    6. '()' → logprob: -4.3061909675598145
    7. ')))' → logprob: -5.1811909675598145
    8. '())))' → logprob: -6.1811909675598145
    9. '()));' → logprob: -8.681190490722656
    10. '```' → logprob: -9.681190490722656

Token 10: 'a' (ID: 64)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3807291090488434
    2. '[' → logprob: -1.755729079246521
    3. ')' → logprob: -3.2557291984558105
    4. 'if' → logprob: -3.7557291984558105
    5. '+' → logprob: -3.8807291984558105
    6. '\n' → logprob: -4.2557291984558105
    7. '```' → logprob: -4.6307291984558105
    8. '(' → logprob: -5.0057291984558105
    9. '#' → logprob: -5.0057291984558105
    10. '`' → logprob: -5.3807291984558105

Token 11: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02482011914253235
    2. '.' → logprob: -4.149820327758789
    3. ' =' → logprob: -6.274820327758789
    4. '=' → logprob: -6.649820327758789
    5. 'pp' → logprob: -6.649820327758789
    6. '[p' → logprob: -6.899820327758789
    7. '.append' → logprob: -7.149820327758789
    8. 'p' → logprob: -7.774820327758789
    9. '+' → logprob: -8.024820327758789
    10. '[i' → logprob: -8.024820327758789

Token 12: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4990652799606323
    2. 'l' → logprob: -1.4990652799606323
    3. ' []' → logprob: -2.999065399169922
    4. ' max' → logprob: -3.749065399169922
    5. 'max' → logprob: -4.249065399169922
    6. ' sorted' → logprob: -4.374065399169922
    7. '[]' → logprob: -4.374065399169922
    8. 'sorted' → logprob: -4.374065399169922
    9. ' sum' → logprob: -4.749065399169922
    10. 'sum' → logprob: -4.999065399169922

Token 13: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.40953943133354187
    2. '[:]' → logprob: -1.4095394611358643
    3. '.' → logprob: -2.6595394611358643
    4. '.copy' → logprob: -4.034539222717285
    5. '[:' → logprob: -6.659539222717285
    6. '<|end|>' → logprob: -7.159539222717285
    7. '```' → logprob: -7.909539222717285
    8. '\[' → logprob: -8.034539222717285
    9. '[::-' → logprob: -8.284539222717285
    10. '[]' → logprob: -9.034539222717285

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014847563579678535
    2. '1' → logprob: -8.87514877319336
    3. '-' → logprob: -12.00014877319336
    4. '2' → logprob: -13.87514877319336
    5. ' ' → logprob: -13.87514877319336
    6. ']' → logprob: -14.87514877319336
    7. ')' → logprob: -16.12514877319336
    8. '])' → logprob: -16.87514877319336
    9. '3' → logprob: -17.81264877319336
    10. ' -' → logprob: -18.18764877319336

Token 15: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016385534778237343
    2. '])' → logprob: -4.516385555267334
    3. ')' → logprob: -5.516385555267334
    4. '+' → logprob: -7.016385555267334
    5. ' ]' → logprob: -8.266385078430176
    6. ']+' → logprob: -10.141385078430176
    7. '[' → logprob: -10.391385078430176
    8. ' ])' → logprob: -10.766385078430176
    9. ')]' → logprob: -10.891385078430176
    10. '],' → logprob: -11.516385078430176

Token 16: 'b' (ID: 65)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007761719636619091
    2. '*' → logprob: -6.1327619552612305
    3. '<|end|>' → logprob: -6.7577619552612305
    4. ' ' → logprob: -7.0077619552612305
    5. 'a' → logprob: -7.3827619552612305
    6. '=' → logprob: -7.7577619552612305
    7. '-' → logprob: -7.8827619552612305
    8. ')' → logprob: -7.8827619552612305
    9. '+
' → logprob: -8.00776195526123
    10. ' +' → logprob: -8.13276195526123

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.17597496509552
    2. ' ' → logprob: -1.42597496509552
    3. '=' → logprob: -1.67597496509552
    4. '+' → logprob: -1.80097496509552
    5. '[' → logprob: -2.9259748458862305
    6. ')' → logprob: -3.8009748458862305
    7. ' +' → logprob: -5.0509748458862305
    8. '_' → logprob: -5.0509748458862305
    9. '<|end|>' → logprob: -5.8009748458862305
    10. ' )' → logprob: -6.9259748458862305

Token 18: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.16023895144462585
    2. 'l' → logprob: -1.9102389812469482
    3. ' ' → logprob: -11.910239219665527
    4. 'a' → logprob: -12.785239219665527
    5. ' ' → logprob: -12.785239219665527
    6. ' a' → logprob: -14.035239219665527
    7. '1' → logprob: -14.785239219665527
    8. '0' → logprob: -14.785239219665527
    9. '	l' → logprob: -15.035239219665527
    10. 'b' → logprob: -16.28523826599121

Token 19: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. ' [' → logprob: -14.250001907348633
    3. '```' → logprob: -14.750001907348633
    4. '\[' → logprob: -15.750001907348633
    5. '1' → logprob: -16.125001907348633
    6. '[
' → logprob: -16.500001907348633
    7. ''[' → logprob: -17.625001907348633
    8. '[-' → logprob: -18.250001907348633
    9. '`' → logprob: -18.875001907348633
    10. '>[' → logprob: -19.625001907348633

Token 20: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4378848391061183e-05
    2. '0' → logprob: -11.625014305114746
    3. '])' → logprob: -13.000014305114746
    4. ' ' → logprob: -13.375014305114746
    5. ']' → logprob: -13.625014305114746
    6. '-' → logprob: -15.750014305114746
    7. '+' → logprob: -16.500015258789062
    8. '```' → logprob: -17.000015258789062
    9. ')' → logprob: -17.500015258789062
    10. ']+' → logprob: -18.000015258789062

Token 21: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5297861695289612
    2. ']' → logprob: -0.9047861695289612
    3. '])' → logprob: -5.029786109924316
    4. ')]' → logprob: -9.904786109924316
    5. '）' → logprob: -11.154786109924316
    6. '']' → logprob: -11.904786109924316
    7. '```' → logprob: -12.279786109924316
    8. '}' → logprob: -12.529786109924316
    9. '[' → logprob: -12.529786109924316
    10. ' ]' → logprob: -12.779786109924316

Token 22: 'x' (ID: 87)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14305058121681213
    2. 'c' → logprob: -2.6430506706237793
    3. '+
' → logprob: -3.3930506706237793
    4. '+c' → logprob: -4.268050670623779
    5. 'if' → logprob: -4.893050670623779
    6. '*' → logprob: -6.018050670623779
    7. '\n' → logprob: -7.143050670623779
    8. '#' → logprob: -7.393050670623779
    9. ' +' → logprob: -7.518050670623779
    10. ' if' → logprob: -7.643050670623779

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1192644834518433
    2. '=' → logprob: -1.3692644834518433
    3. '+' → logprob: -1.4942644834518433
    4. ')' → logprob: -2.619264602661133
    5. ' ==' → logprob: -3.494264602661133
    6. '%' → logprob: -3.869264602661133
    7. ' ' → logprob: -3.994264602661133
    8. ' +=' → logprob: -4.869264602661133
    9. '>' → logprob: -5.619264602661133
    10. '**' → logprob: -5.744264602661133

Token 24: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0405216217041016
    2. ' l' → logprob: -1.2905216217041016
    3. ' a' → logprob: -1.2905216217041016
    4. ' b' → logprob: -3.1655216217041016
    5. 'l' → logprob: -3.6655216217041016
    6. 'b' → logprob: -4.040521621704102
    7. ' ' → logprob: -5.165521621704102
    8. ' int' → logprob: -6.165521621704102
    9. '0' → logprob: -6.415521621704102
    10. 'int' → logprob: -7.165521621704102

Token 25: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.618001053633634e-05
    2. '2' → logprob: -11.125025749206543
    3. '[a' → logprob: -12.375025749206543
    4. '[-' → logprob: -13.500025749206543
    5. '[
' → logprob: -13.625025749206543
    6. ' [' → logprob: -13.750025749206543
    7. '```' → logprob: -13.875025749206543
    8. '[len' → logprob: -14.625025749206543
    9. ''[' → logprob: -15.250025749206543
    10. '\[' → logprob: -15.375025749206543

Token 26: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6286106983898208e-05
    2. '0' → logprob: -12.250016212463379
    3. ' ' → logprob: -12.250016212463379
    4. '1' → logprob: -12.375016212463379
    5. ']' → logprob: -13.875016212463379
    6. '-' → logprob: -14.500016212463379
    7. '3' → logprob: -15.000016212463379
    8. '```' → logprob: -15.562516212463379
    9. '  ' → logprob: -16.375017166137695
    10. '])' → logprob: -16.687517166137695

Token 27: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.134509021649137e-05
    2. ']' → logprob: -9.87506103515625
    3. '+' → logprob: -12.62506103515625
    4. ' )' → logprob: -13.50006103515625
    5. '])' → logprob: -13.75006103515625
    6. '')' → logprob: -13.87506103515625
    7. '}' → logprob: -14.37506103515625
    8. '>' → logprob: -14.87506103515625
    9. '）' → logprob: -15.12506103515625
    10. ')
' → logprob: -15.37506103515625

Token 28: 'if' (ID: 366)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5982789397239685
    2. 'if' → logprob: -1.3482789993286133
    3. 'c' → logprob: -3.3482789993286133
    4. ' if' → logprob: -3.3482789993286133
    5. '\n' → logprob: -4.348278999328613
    6. '\' → logprob: -4.723278999328613
    7. 'n' → logprob: -4.723278999328613
    8. '+' → logprob: -4.723278999328613
    9. 'y' → logprob: -4.723278999328613
    10. ',' → logprob: -4.848278999328613

Token 29: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.12108728289604187
    2. ' x' → logprob: -2.6210873126983643
    3. 'a' → logprob: -3.6210873126983643
    4. ' ' → logprob: -4.496087074279785
    5. 'x' → logprob: -5.871087074279785
    6. ' b' → logprob: -8.496087074279785
    7. ' (' → logprob: -8.496087074279785
    8. ' ' → logprob: -9.496087074279785
    9. ' abs' → logprob: -9.621087074279785
    10. '(a' → logprob: -11.496087074279785

Token 30: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.34140172600746155
    2. ' >=' → logprob: -2.2164018154144287
    3. ' +' → logprob: -3.0914018154144287
    4. ' <' → logprob: -3.0914018154144287
    5. '+' → logprob: -3.2164018154144287
    6. ' >' → logprob: -3.9664018154144287
    7. ' ==' → logprob: -4.84140157699585
    8. '<=' → logprob: -5.09140157699585
    9. ' ' → logprob: -5.34140157699585
    10. ' *' → logprob: -5.84140157699585

Token 31: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.033867329359054565
    2. ' x' → logprob: -3.408867359161377
    3. 'b' → logprob: -8.658866882324219
    4. '0' → logprob: -10.533866882324219
    5. ' ' → logprob: -11.533866882324219
    6. ' b' → logprob: -11.533866882324219
    7. '5' → logprob: -15.283866882324219
    8. '100' → logprob: -15.533866882324219
    9. '2' → logprob: -15.658866882324219
    10. '10' → logprob: -15.658866882324219

Token 32: ' and' (ID: 326)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2845255434513092
    2. ' and' → logprob: -1.7845255136489868
    3. ' <' → logprob: -3.6595256328582764
    4. '<=' → logprob: -3.6595256328582764
    5. ':' → logprob: -4.034525394439697
    6. 'and' → logprob: -4.909525394439697
    7. '<' → logprob: -6.659525394439697
    8. ' ' → logprob: -6.909525394439697
    9. ' :' → logprob: -7.784525394439697
    10. '<|end|>' → logprob: -8.784525871276855

Token 33: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.30733808875083923
    2. 'x' → logprob: -1.6823381185531616
    3. ' b' → logprob: -2.932337999343872
    4. 'b' → logprob: -3.682337999343872
    5. ' ' → logprob: -8.682337760925293
    6. ' a' → logprob: -10.682337760925293
    7. 'a' → logprob: -10.682337760925293
    8. 'c' → logprob: -13.307337760925293
    9. ' ' → logprob: -13.432337760925293
    10. '	x' → logprob: -13.932337760925293

Token 34: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.030753443017601967
    2. '<=' → logprob: -4.4057536125183105
    3. ' ' → logprob: -4.7807536125183105
    4. ' <' → logprob: -4.9057536125183105
    5. ' >=' → logprob: -6.7807536125183105
    6. '<' → logprob: -7.7807536125183105
    7. '=' → logprob: -8.530753135681152
    8. '<|end|>' → logprob: -9.030753135681152
    9. ' ==' → logprob: -9.780753135681152
    10. ' ≤' → logprob: -9.905753135681152

Token 35: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03804171830415726
    2. ' b' → logprob: -3.288041830062866
    3. ' ' → logprob: -15.538042068481445
    4. '>b' → logprob: -16.913042068481445
    5. 'a' → logprob: -17.663042068481445
    6. '	b' → logprob: -17.913042068481445
    7. ')b' → logprob: -18.913042068481445
    8. 'x' → logprob: -18.913042068481445
    9. '=b' → logprob: -19.038042068481445
    10. '%b' → logprob: -19.163042068481445

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.4285862057004124e-05
    2. ' :' → logprob: -10.50003433227539
    3. ':
' → logprob: -12.62503433227539
    4. ':**' → logprob: -13.12503433227539
    5. '):' → logprob: -15.00003433227539
    6. '':'' → logprob: -15.37503433227539
    7. '':' → logprob: -15.62503433227539
    8. '>:' → logprob: -16.12503433227539
    9. ' and' → logprob: -16.25003433227539
    10. ',' → logprob: -16.62503433227539

Token 37: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6002511978149414
    2. 'print' → logprob: -1.7252511978149414
    3. '   ' → logprob: -2.3502511978149414
    4. '\n' → logprob: -2.4752511978149414
    5. ':' → logprob: -2.7252511978149414
    6. ' ' → logprob: -4.850251197814941
    7. ' :' → logprob: -5.350251197814941
    8. ' 
' → logprob: -5.475251197814941
    9. ':
' → logprob: -6.100251197814941
    10. '\' → logprob: -6.225251197814941

Token 38: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.2078929990530014
    2. 'print' (adapté à ' print') → logprob: -1.7078930139541626
    3. ' ' → logprob: -6.332892894744873
    4. '   ' → logprob: -6.707892894744873
    5. ' p' → logprob: -6.707892894744873
    6. ' \' → logprob: -7.457892894744873
    7. ''' → logprob: -7.707892894744873
    8. ' prin' → logprob: -8.457893371582031
    9. '    ' → logprob: -8.582893371582031
    10. ' 
' → logprob: -8.832893371582031

Token 39: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11020258069038391
    2. '(x' → logprob: -2.8602025508880615
    3. '("' → logprob: -3.4852025508880615
    4. '(True' → logprob: -4.610202789306641
    5. '("("' → logprob: -5.735202789306641
    6. '('' → logprob: -6.110202789306641
    7. '(a' → logprob: -7.110202789306641
    8. '((' → logprob: -10.11020278930664
    9. '()' → logprob: -10.11020278930664
    10. '"' → logprob: -10.48520278930664

Token 40: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.14310471713542938
    2. 'in' → logprob: -2.2681047916412354
    3. 'YES' → logprob: -4.893104553222656
    4. 'In' → logprob: -5.268104553222656
    5. 'OK' → logprob: -5.518104553222656
    6. '"in' → logprob: -5.643104553222656
    7. 'IN' → logprob: -6.518104553222656
    8. '"' → logprob: -6.643104553222656
    9. 'yes' → logprob: -6.768104553222656
    10. '0' → logprob: -6.768104553222656

Token 41: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.01109721977263689
    2. ')' → logprob: -4.511097431182861
    3. '')
' → logprob: -10.136096954345703
    4. '")' → logprob: -12.386096954345703
    5. '')
' → logprob: -13.136096954345703
    6. '!' → logprob: -13.261096954345703
    7. ''' → logprob: -14.136096954345703
    8. ')
' → logprob: -15.636096954345703
    9. '.')' → logprob: -15.636096954345703
    10. ' ')' → logprob: -15.761096954345703

Token 42: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.02982662059366703
    2. ' else' → logprob: -3.5298266410827637
    3. 'elif' → logprob: -10.529826164245605
    4. 'e' → logprob: -11.279826164245605
    5. 'el' → logprob: -11.904826164245605
    6. 'es' → logprob: -12.154826164245605
    7. 's' → logprob: -12.279826164245605
    8. 'lse' → logprob: -12.529826164245605
    9. '```' → logprob: -12.779826164245605
    10. '<|end|>' → logprob: -12.779826164245605

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.5861724831629544e-05
    2. ':
' → logprob: -9.875056266784668
    3. ' :' → logprob: -12.625056266784668
    4. '   ' → logprob: -13.875056266784668
    5. '):' → logprob: -16.62505531311035
    6. ':

' → logprob: -17.62505531311035
    7. ':return' → logprob: -18.12505531311035
    8. ':
' → logprob: -18.25005531311035
    9. ':**' → logprob: -18.50005531311035
    10. ':def' → logprob: -18.62505531311035

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00034809779026545584
    2. 'print' → logprob: -9.125348091125488
    3. '    ' → logprob: -9.375348091125488
    4. ' print' → logprob: -9.625348091125488
    5. '       ' → logprob: -10.250348091125488
    6. '    
' → logprob: -11.250348091125488
    7. ' ' → logprob: -11.500348091125488
    8. ''' → logprob: -11.625348091125488
    9. '```' → logprob: -12.000348091125488
    10. '<|end|>' → logprob: -12.750348091125488

Token 45: ' if' (ID: 538)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.2117580622434616
    2. 'print' → logprob: -1.711758017539978
    3. '   ' → logprob: -4.586758136749268
    4. '    ' → logprob: -9.46175765991211
    5. ' ' → logprob: -11.33675765991211
    6. '```' → logprob: -12.58675765991211
    7. '	print' → logprob: -12.71175765991211
    8. '(print' → logprob: -13.21175765991211
    9. ' ' → logprob: -13.46175765991211
    10. '\n' → logprob: -14.08675765991211

Token 46: ' b' (ID: 287)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.49011632800102234
    2. ' b' → logprob: -1.6151163578033447
    3. ' a' → logprob: -2.3651163578033447
    4. 'x' → logprob: -2.9901163578033447
    5. 'b' → logprob: -3.7401163578033447
    6. 'a' → logprob: -4.365116119384766
    7. ' ' → logprob: -5.115116119384766
    8. ''' → logprob: -7.490116119384766
    9. '  ' → logprob: -7.990116119384766
    10. ' not' → logprob: -8.115116119384766

Token 47: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.14000065624713898
    2. '<' → logprob: -2.515000581741333
    3. ' <=' → logprob: -3.515000581741333
    4. ' >' → logprob: -4.765000820159912
    5. ' >=' → logprob: -5.140000820159912
    6. '<=' → logprob: -6.140000820159912
    7. '>' → logprob: -6.515000820159912
    8. ' ' → logprob: -7.140000820159912
    9. '+' → logprob: -7.640000820159912
    10. '>=' → logprob: -8.140000343322754

Token 48: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014478793367743492
    2. ' x' → logprob: -4.38947868347168
    3. 'a' → logprob: -6.26447868347168
    4. ' a' → logprob: -9.88947868347168
    5. ' ' → logprob: -11.38947868347168
    6. '0' → logprob: -14.76447868347168
    7. '	x' → logprob: -15.01447868347168
    8. '  ' → logprob: -15.13947868347168
    9. '   ' → logprob: -15.26447868347168
    10. '_' → logprob: -16.07697868347168

Token 49: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2692854702472687
    2. ' and' → logprob: -1.5192854404449463
    3. 'and' → logprob: -4.644285678863525
    4. ':
' → logprob: -5.144285678863525
    5. '   ' → logprob: -6.894285678863525
    6. ' :' → logprob: -8.519285202026367
    7. ' or' → logprob: -9.269285202026367
    8. 'print' → logprob: -9.394285202026367
    9. '+' → logprob: -9.644285202026367
    10. ' <=' → logprob: -10.019285202026367

Token 50: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4642324149608612
    2. ' a' → logprob: -1.3392324447631836
    3. ' b' → logprob: -3.4642324447631836
    4. 'x' → logprob: -3.5892324447631836
    5. ' x' → logprob: -3.5892324447631836
    6. 'b' → logprob: -3.8392324447631836
    7. 'c' → logprob: -7.839232444763184
    8. ' c' → logprob: -7.964232444763184
    9. '   ' → logprob: -8.464232444763184
    10. ' ' → logprob: -8.589232444763184

Token 51: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03869357332587242
    2. '<=' → logprob: -3.28869366645813
    3. ' >=' → logprob: -7.913693428039551
    4. ' ' → logprob: -9.66369342803955
    5. ' <' → logprob: -10.03869342803955
    6. '   ' → logprob: -10.28869342803955
    7. '+' → logprob: -10.53869342803955
    8. '>=' → logprob: -10.78869342803955
    9. ')' → logprob: -11.16369342803955
    10. ':' → logprob: -11.28869342803955

Token 52: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0011038987431675196
    2. 'c' → logprob: -7.00110387802124
    3. ' a' → logprob: -8.626104354858398
    4. '100' → logprob: -11.876104354858398
    5. ' ' → logprob: -13.376104354858398
    6. '10' → logprob: -13.876104354858398
    7. '   ' → logprob: -14.501104354858398
    8. 'b' → logprob: -14.751104354858398
    9. ' c' → logprob: -14.876104354858398
    10. '  ' → logprob: -15.376104354858398

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008632768876850605
    2. ':
' → logprob: -4.758632659912109
    3. '   ' → logprob: -11.25863265991211
    4. '):' → logprob: -13.25863265991211
    5. ' :' → logprob: -13.38363265991211
    6. ':

' → logprob: -14.25863265991211
    7. '       ' → logprob: -14.63363265991211
    8. '):
' → logprob: -15.13363265991211
    9. ' :
' → logprob: -15.25863265991211
    10. ':
' → logprob: -15.38363265991211

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16373376548290253
    2. '   ' → logprob: -2.288733720779419
    3. 'print' → logprob: -3.038733720779419
    4. ' print' → logprob: -6.788733959197998
    5. '
' → logprob: -8.91373348236084
    6. '    
' → logprob: -8.91373348236084
    7. '    ' → logprob: -9.28873348236084
    8. '        
' → logprob: -10.28873348236084
    9. '<|end|>' → logprob: -10.41373348236084
    10. '```' → logprob: -10.53873348236084

Token 55: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4727703630924225
    2. '   ' → logprob: -1.0977703332901
    3. ' print' → logprob: -3.7227704524993896
    4. '       ' → logprob: -3.9727704524993896
    5. '	print' → logprob: -9.972770690917969
    6. ' ' → logprob: -10.847770690917969
    7. '```' → logprob: -10.972770690917969
    8. '           ' → logprob: -11.972770690917969
    9. '   ' → logprob: -11.972770690917969
    10. '  ' → logprob: -12.347770690917969

Token 56: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.011052774265408516
    2. '(' → logprob: -4.51105260848999
    3. '("' → logprob: -12.636053085327148
    4. ' ('' → logprob: -14.261053085327148
    5. '(('' → logprob: -15.636053085327148
    6. '('(' → logprob: -15.761053085327148
    7. '(\'' → logprob: -15.886053085327148
    8. ''' → logprob: -16.13605308532715
    9. '()' → logprob: -16.51105308532715
    10. ' (' → logprob: -16.51105308532715

Token 57: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.04892127960920334
    2. ''' → logprob: -3.0489213466644287
    3. 'No' → logprob: -8.048921585083008
    4. ' Yes' → logprob: -12.048921585083008
    5. '('' → logprob: -13.298921585083008
    6. 'Ye' → logprob: -13.298921585083008
    7. 'Y' → logprob: -13.798921585083008
    8. '   ' → logprob: -14.048921585083008
    9. 'YES' → logprob: -14.173921585083008
    10. ''S' → logprob: -14.673921585083008

Token 58: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -7.266944157890975e-05
    2. ')' → logprob: -10.125072479248047
    3. '')
' → logprob: -10.375072479248047
    4. ''' → logprob: -13.875072479248047
    5. '")' → logprob: -15.750072479248047
    6. '('' → logprob: -16.125072479248047
    7. '')

' → logprob: -16.125072479248047
    8. '')
' → logprob: -16.750072479248047
    9. ' ')' → logprob: -18.250072479248047
    10. '');' → logprob: -18.875072479248047

Token 59: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.004748387262225151
    2. ' else' → logprob: -5.379748344421387
    3. '```' → logprob: -9.629748344421387
    4. '   ' → logprob: -10.504748344421387
    5. '<|end|>' → logprob: -11.129748344421387
    6. 'elif' → logprob: -11.629748344421387
    7. '	else' → logprob: -12.129748344421387
    8. '`' → logprob: -13.504748344421387
    9. ')' → logprob: -14.004748344421387
    10. ' ' → logprob: -14.129748344421387

Token 60: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0055126347579061985
    2. ' else' → logprob: -5.255512714385986
    3. '   ' → logprob: -8.380512237548828
    4. 'elif' → logprob: -10.505512237548828
    5. '```' → logprob: -11.255512237548828
    6. '	else' → logprob: -12.630512237548828
    7. ' ' → logprob: -13.130512237548828
    8. 'print' → logprob: -14.005512237548828
    9. 'e' → logprob: -14.255512237548828
    10. ')' → logprob: -14.755512237548828

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017054134514182806
    2. ':
' → logprob: -6.376705646514893
    3. '   ' → logprob: -13.501705169677734
    4. ' :' → logprob: -14.126705169677734
    5. '       ' → logprob: -14.501705169677734
    6. ':
' → logprob: -15.876705169677734
    7. '):' → logprob: -16.126705169677734
    8. ':

' → logprob: -16.501705169677734
    9. ' :
' → logprob: -16.626705169677734
    10. ':\' → logprob: -17.376705169677734

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027300488203763962
    2. '   ' → logprob: -3.7773005962371826
    3. 'print' → logprob: -5.5273003578186035
    4. ' print' → logprob: -9.902300834655762
    5. ''' → logprob: -11.402300834655762
    6. '     ' → logprob: -13.152300834655762
    7. ' ' → logprob: -13.402300834655762
    8. '('' → logprob: -14.027300834655762
    9. '    ' → logprob: -14.152300834655762
    10. '           ' → logprob: -14.152300834655762

Token 63: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.3458322731312364e-06
    2. '   ' → logprob: -12.750007629394531
    3. '       ' → logprob: -12.750007629394531
    4. ' print' → logprob: -13.500007629394531
    5. '           ' → logprob: -17.50000762939453
    6. ' ' → logprob: -18.75000762939453
    7. '	print' → logprob: -19.25000762939453
    8. 'printf' → logprob: -21.37500762939453
    9. '  ' → logprob: -21.62500762939453
    10. '```' → logprob: -21.75000762939453

Token 64: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.014177612029016018
    2. '(' → logprob: -4.2641777992248535
    3. '()' → logprob: -11.639177322387695
    4. '("' → logprob: -12.764177322387695
    5. '(False' → logprob: -13.264177322387695
    6. '(\'' → logprob: -15.514177322387695
    7. '(None' → logprob: -15.889177322387695
    8. '(True' → logprob: -16.389177322387695
    9. '('(' → logprob: -17.139177322387695
    10. '(('' → logprob: -17.264177322387695

Token 65: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -1.306760805164231e-05
    2. ''' → logprob: -11.25001335144043
    3. ' No' → logprob: -17.25001335144043
    4. '"No' → logprob: -19.25001335144043
    5. '')' → logprob: -19.37501335144043
    6. 'NO' → logprob: -19.87501335144043
    7. ''N' → logprob: -19.87501335144043
    8. '_No' → logprob: -20.37501335144043
    9. 'N' → logprob: -20.50001335144043
    10. '(No' → logprob: -20.87501335144043

Token 66: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00012535012501757592
    2. ')' → logprob: -9.00012493133545
    3. '')
' → logprob: -13.25012493133545
    4. ''' → logprob: -16.625125885009766
    5. '")' → logprob: -17.250125885009766
    6. ''))' → logprob: -17.250125885009766
    7. '')

' → logprob: -18.125125885009766
    8. '')
' → logprob: -18.125125885009766
    9. '}')' → logprob: -18.875125885009766
    10. '`)' → logprob: -19.125125885009766


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 64
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 30
Tokens correctement prédits (top 10): 54
Précision stricte (1ère position): 42.19%
Précision adaptée (1ère position): 46.88%
Précision (top 10): 84.38%
================================================================================
