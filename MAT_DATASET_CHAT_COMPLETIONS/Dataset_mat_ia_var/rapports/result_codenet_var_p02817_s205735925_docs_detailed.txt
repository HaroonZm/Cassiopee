================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    """
    Fonction principale qui lit deux chaînes de caractères de l'utilisateur,
    puis affiche leur concaténation dans l'ordre inversé (deuxième puis première).
    """
    # Lecture d'une ligne de l'entrée standard et séparation en deux chaînes distinctes
    S, T = input().split()
    
    # Concaténation des chaînes dans l'ordre T puis S et affichage du résultat
    print(T + S)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.35815900564193726
    2. '(' → logprob: -1.858159065246582
    3. '   ' → logprob: -3.108159065246582
    4. '\n' → logprob: -3.108159065246582
    5. ''' → logprob: -4.608159065246582
    6. ' 
' → logprob: -4.733159065246582
    7. ' ' → logprob: -4.733159065246582
    8. '    
' → logprob: -4.983159065246582
    9. '```' → logprob: -5.483159065246582
    10. ' return' → logprob: -6.358159065246582

Token 4: ' """
' (ID: 7037)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20469899475574493
    2. 'pass' → logprob: -2.3296990394592285
    3. '   ' → logprob: -2.8296990394592285
    4. 'return' → logprob: -4.0796990394592285
    5. 'p' → logprob: -5.3296990394592285
    6. '#' → logprob: -6.3296990394592285
    7. 'r' → logprob: -6.4546990394592285
    8. 'a' → logprob: -7.3296990394592285
    9. '```' → logprob: -7.3296990394592285
    10. 'n' → logprob: -8.07969856262207

Token 5: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.9128408432006836
    2. 'Calculate' → logprob: -2.1628408432006836
    3. 'This' → logprob: -2.4128408432006836
    4. 'Initialize' → logprob: -2.4128408432006836
    5. 'T' → logprob: -3.7878408432006836
    6. 'Run' → logprob: -3.7878408432006836
    7. '   ' → logprob: -4.037840843200684
    8. 'Initial' → logprob: -4.037840843200684
    9. 'Runs' → logprob: -4.037840843200684
    10. 'Main' → logprob: -4.162840843200684

Token 6: ' Fonction' (ID: 189149)
  Prédit: 'Run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Run' → logprob: -1.3347530364990234
    2. 'This' → logprob: -1.5847530364990234
    3. 'Initialize' → logprob: -1.9597530364990234
    4. 'Calculate' → logprob: -1.9597530364990234
    5. 'Print' → logprob: -2.8347530364990234
    6. 'Main' → logprob: -3.7097530364990234
    7. 'Start' → logprob: -3.9597530364990234
    8. 'Process' → logprob: -4.084753036499023
    9. 'Runs' → logprob: -4.459753036499023
    10. 'Initial' → logprob: -4.584753036499023

Token 7: ' principale' (ID: 68926)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7307078838348389
    2. '   ' → logprob: -1.3557078838348389
    3. ' ' → logprob: -1.8557078838348389
    4. ' d' → logprob: -3.480707883834839
    5. '  ' → logprob: -4.605708122253418
    6. ')' → logprob: -5.355708122253418
    7. ' to' → logprob: -5.355708122253418
    8. '```' → logprob: -5.355708122253418
    9. 'naire' → logprob: -5.480708122253418
    10. '_' → logprob: -5.605708122253418

Token 8: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04385684058070183
    2. '    ' → logprob: -4.793856620788574
    3. '\n' → logprob: -5.043856620788574
    4. ' ' → logprob: -5.168856620788574
    5. '    
' → logprob: -5.543856620788574
    6. '```' → logprob: -5.543856620788574
    7. '\' → logprob: -6.168856620788574
    8. 'def' → logprob: -6.418856620788574
    9. 'n' → logprob: -6.793856620788574
    10. '  ' → logprob: -6.793856620788574

Token 9: ' lit' (ID: 11980)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.087355136871338
    2. 'g' → logprob: -1.462355136871338
    3. ' lance' → logprob: -1.837355136871338
    4. ' g' → logprob: -2.587355136871338
    5. ' appelle' → logprob: -2.587355136871338
    6. ' démar' → logprob: -3.212355136871338
    7. ' initialise' → logprob: -4.462355136871338
    8. 'impl' → logprob: -5.087355136871338
    9. ' permet' → logprob: -5.212355136871338
    10. 'app' → logprob: -5.337355136871338

Token 10: ' deux' (ID: 10301)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9286916255950928
    2. ' le' → logprob: -1.1786916255950928
    3. ' ' → logprob: -1.6786916255950928
    4. 'le' → logprob: -3.5536916255950928
    5. ' les' → logprob: -4.053691864013672
    6. ' un' → logprob: -4.053691864013672
    7. 'l' → logprob: -4.678691864013672
    8. ' l' → logprob: -5.053691864013672
    9. ' et' → logprob: -5.053691864013672
    10. '    ' → logprob: -5.053691864013672

Token 11: ' chaînes' (ID: 179904)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03717639297246933
    2. ' chaînes' → logprob: -3.7871763706207275
    3. ' nombres' → logprob: -4.912176609039307
    4. '   ' → logprob: -6.537176609039307
    5. ' ent' → logprob: -7.287176609039307
    6. ' chain' → logprob: -7.662176609039307
    7. ' lignes' → logprob: -7.787176609039307
    8. ' strings' → logprob: -8.037176132202148
    9. 'n' → logprob: -8.037176132202148
    10. ' mots' → logprob: -8.162176132202148

Token 12: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.19039694964885712
    2. ' et' → logprob: -2.315397024154663
    3. '   ' → logprob: -3.315397024154663
    4. ' en' → logprob: -4.440396785736084
    5. 'de' → logprob: -4.565396785736084
    6. ' ' → logprob: -5.190396785736084
    7. ',' → logprob: -5.315396785736084
    8. ' d' → logprob: -6.440396785736084
    9. 's' → logprob: -7.690396785736084
    10. '\' → logprob: -7.940396785736084

Token 13: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.5280175805091858
    2. ' caractères' → logprob: -0.9030175805091858
    3. 'texte' → logprob: -6.903017520904541
    4. ' caractère' → logprob: -7.028017520904541
    5. ' caracteres' → logprob: -7.028017520904541
    6. ' caract' → logprob: -7.403017520904541
    7. ' ' → logprob: -7.778017520904541
    8. 'char' → logprob: -8.9030179977417
    9. 's' → logprob: -9.0280179977417
    10. 'chars' → logprob: -9.1530179977417

Token 14: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.468852698802948
    2. ',' → logprob: -1.3438527584075928
    3. ' et' → logprob: -2.3438527584075928
    4. ' ' → logprob: -5.343852519989014
    5. ' en' → logprob: -5.843852519989014
    6. '.' → logprob: -6.468852519989014
    7. 'et' → logprob: -6.718852519989014
    8. ' ,' → logprob: -6.843852519989014
    9. 'en' → logprob: -6.968852519989014
    10. ',
' → logprob: -6.968852519989014

Token 15: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.24232281744480133
    2. 'l' → logprob: -1.6173228025436401
    3. ' input' → logprob: -4.99232292175293
    4. 's' → logprob: -6.11732292175293
    5. 'entrée' → logprob: -6.74232292175293
    6. 'de' → logprob: -7.11732292175293
    7. ' la' → logprob: -7.11732292175293
    8. ' ' → logprob: -7.24232292175293
    9. 'ux' → logprob: -7.36732292175293
    10. ' caractères' → logprob: -7.74232292175293

Token 16: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.016434090211987495
    2. 'a' → logprob: -5.141434192657471
    3. '’utilisateur' → logprob: -5.766434192657471
    4. ''entrée' → logprob: -6.016434192657471
    5. ''' → logprob: -6.266434192657471
    6. 'util' → logprob: -6.766434192657471
    7. ' utilisateur' → logprob: -7.391434192657471
    8. ''util' → logprob: -7.891434192657471
    9. 'u' → logprob: -8.641433715820312
    10. '   ' → logprob: -9.641433715820312

Token 17: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18633762001991272
    2. ',' → logprob: -1.8113375902175903
    3. ',
' → logprob: -6.186337471008301
    4. ' et' → logprob: -6.811337471008301
    5. '.' → logprob: -7.061337471008301
    6. ' ,' → logprob: -7.686337471008301
    7. ' ' → logprob: -7.811337471008301
    8. 'et' → logprob: -8.3113374710083
    9. '```' → logprob: -8.5613374710083
    10. '    ' → logprob: -8.8113374710083

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003945179283618927
    2. ' et' → logprob: -6.378945350646973
    3. '    ' → logprob: -6.628945350646973
    4. 'et' → logprob: -7.628945350646973
    5. '       ' → logprob: -8.628945350646973
    6. ' puis' → logprob: -9.253945350646973
    7. '```' → logprob: -10.253945350646973
    8. '    
' → logprob: -11.003945350646973
    9. ' ' → logprob: -11.003945350646973
    10. ',' → logprob: -11.128945350646973

Token 19: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16645090281963348
    2. ' puis' → logprob: -2.4164509773254395
    3. '    ' → logprob: -3.7914509773254395
    4. ' les' → logprob: -3.9164509773254395
    5. ' et' → logprob: -4.6664509773254395
    6. 'et' → logprob: -5.5414509773254395
    7. ' lit' → logprob: -6.6664509773254395
    8. ' retourne' → logprob: -7.1664509773254395
    9. ' ' → logprob: -7.5414509773254395
    10. 'p' → logprob: -7.5414509773254395

Token 20: ' affiche' (ID: 127479)
  Prédit: ' compare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compare' → logprob: -0.45651674270629883
    2. ' les' → logprob: -1.8315167427062988
    3. '   ' → logprob: -2.956516742706299
    4. 'compare' → logprob: -3.206516742706299
    5. 'concat' → logprob: -3.706516742706299
    6. ' concat' → logprob: -3.831516742706299
    7. ' retourne' → logprob: -4.331516742706299
    8. ' affiche' → logprob: -4.456516742706299
    9. 'les' → logprob: -4.581516742706299
    10. 'aff' → logprob: -4.956516742706299

Token 21: ' leur' (ID: 9853)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9263593554496765
    2. ' leur' → logprob: -1.0513594150543213
    3. ' leurs' → logprob: -3.0513594150543213
    4. ' ' → logprob: -3.1763594150543213
    5. '   ' → logprob: -3.3013594150543213
    6. ' le' → logprob: -3.4263594150543213
    7. ' l' → logprob: -3.5513594150543213
    8. ' les' → logprob: -3.8013594150543213
    9. 'leur' → logprob: -4.051359176635742
    10. 's' → logprob: -4.926359176635742

Token 22: ' concat' (ID: 73950)
  Prédit: ' longueur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' longueur' → logprob: -1.1901899576187134
    2. 's' → logprob: -1.4401899576187134
    3. ' concaten' → logprob: -1.8151899576187134
    4. ' somme' → logprob: -2.315189838409424
    5. ' concat' → logprob: -2.690189838409424
    6. ' différence' → logprob: -3.190189838409424
    7. ' ' → logprob: -4.315189838409424
    8. ' comparaison' → logprob: -4.440189838409424
    9. ' similar' → logprob: -4.565189838409424
    10. 'concat' → logprob: -5.065189838409424

Token 23: 'én' (ID: 3289)
  Prédit: 'én'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'én' → logprob: -0.23032502830028534
    2. 'é' → logprob: -1.6053249835968018
    3. 'éna' → logprob: -5.980325222015381
    4. 'éné' → logprob: -7.230325222015381
    5. '   ' → logprob: -8.105324745178223
    6. '```' → logprob: -8.230324745178223
    7. 'étation' → logprob: -8.855324745178223
    8. '"' → logprob: -8.980324745178223
    9. 'ération' → logprob: -9.605324745178223
    10. 'énées' → logprob: -9.980324745178223

Token 24: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -2.4391956685576588e-05
    2. 'a' → logprob: -11.125024795532227
    3. 'é' → logprob: -13.250024795532227
    4. 'at' → logprob: -13.250024795532227
    5. ' at' → logprob: -13.625024795532227
    6. 'ération' → logprob: -13.625024795532227
    7. 'atio' → logprob: -14.250024795532227
    8. '   ' → logprob: -15.000024795532227
    9. 'ati' → logprob: -15.000024795532227
    10. 'ée' → logprob: -15.125024795532227

Token 25: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048049088567495346
    2. '.' → logprob: -3.548048973083496
    3. '\n' → logprob: -4.548048973083496
    4. '\' → logprob: -6.673048973083496
    5. '    
' → logprob: -6.673048973083496
    6. ' ' → logprob: -7.298048973083496
    7. '
' → logprob: -7.298048973083496
    8. ',' → logprob: -7.548048973083496
    9. ')' → logprob: -7.673048973083496
    10. '    ' → logprob: -7.798048973083496

Token 26: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.19915425777435303
    2. ' l' → logprob: -2.5741543769836426
    3. ' le' → logprob: -3.9491543769836426
    4. ' une' → logprob: -4.074154376983643
    5. 'la' → logprob: -4.199154376983643
    6. 'l' → logprob: -4.449154376983643
    7. 'le' → logprob: -4.574154376983643
    8. '   ' → logprob: -4.949154376983643
    9. ' ' → logprob: -5.074154376983643
    10. 'une' → logprob: -5.199154376983643

Token 27: ''ordre' (ID: 124753)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09001759439706802
    2. ''' → logprob: -3.340017557144165
    3. ''utilisateur' → logprob: -4.090017795562744
    4. 'e' → logprob: -4.215017795562744
    5. ''ordre' → logprob: -5.215017795562744
    6. ''espace' → logprob: -5.715017795562744
    7. 'es' → logprob: -6.715017795562744
    8. ''écran' → logprob: -6.715017795562744
    9. ''application' → logprob: -6.840017795562744
    10. 'console' → logprob: -6.840017795562744

Token 28: ' invers' (ID: 38721)
  Prédit: ' inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -1.0693471431732178
    2. ' naturel' → logprob: -1.8193471431732178
    3. ' alph' → logprob: -1.8193471431732178
    4. 'inverse' → logprob: -2.3193471431732178
    5. 'd' → logprob: -2.4443471431732178
    6. 'alph' → logprob: -2.8193471431732178
    7. 'de' → logprob: -3.9443471431732178
    8. 'alphabet' → logprob: -4.444347381591797
    9. '   ' → logprob: -4.944347381591797
    10. ' d' → logprob: -4.944347381591797

Token 29: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.050676774233579636
    2. 'e' → logprob: -3.0506768226623535
    3. 'ée' → logprob: -6.1756768226623535
    4. 'ées' → logprob: -13.425676345825195
    5. 'és' → logprob: -13.925676345825195
    6. 'ê' → logprob: -14.175676345825195
    7. '```' → logprob: -14.300676345825195
    8. 'a' → logprob: -14.675676345825195
    9. 'ed' → logprob: -14.800676345825195
    10. 'è' → logprob: -14.925676345825195

Token 30: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28900688886642456
    2. '\n' → logprob: -1.7890069484710693
    3. '
' → logprob: -3.2890069484710693
    4. '"""' → logprob: -3.9140069484710693
    5. '"""
' → logprob: -5.16400671005249
    6. '"' → logprob: -5.16400671005249
    7. '.' → logprob: -5.53900671005249
    8. '\' → logprob: -5.66400671005249
    9. '"\' → logprob: -6.41400671005249
    10. '    
' → logprob: -6.53900671005249

Token 31: 'de' (ID: 613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1947592943906784
    2. ' la' → logprob: -3.4447593688964844
    3. ' )' → logprob: -4.069759368896484
    4. '   ' → logprob: -4.069759368896484
    5. 'les' → logprob: -4.194759368896484
    6. 'la' → logprob: -4.444759368896484
    7. ').' → logprob: -4.569759368896484
    8. ' les' → logprob: -4.819759368896484
    9. 'e' → logprob: -5.069759368896484
    10. 'l' → logprob: -5.069759368896484

Token 32: 'ux' (ID: 1778)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9294013381004333
    2. 's' → logprob: -1.8044013977050781
    3. ' l' → logprob: -1.8044013977050781
    4. 'l' → logprob: -1.9294013977050781
    5. 'ux' → logprob: -3.304401397705078
    6. 'la' → logprob: -3.554401397705078
    7. 'r' → logprob: -4.304401397705078
    8. ')' → logprob: -5.179401397705078
    9. ' type' → logprob: -5.304401397705078
    10. ' s' → logprob: -6.054401397705078

Token 33: 'ième' (ID: 41126)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.8065813779830933
    2. ' espaces' → logprob: -1.3065813779830933
    3. 'ième' → logprob: -2.181581497192383
    4. ' )' → logprob: -3.181581497192383
    5. ')' → logprob: -3.556581497192383
    6. 's' → logprob: -4.056581497192383
    7. 'e' → logprob: -4.431581497192383
    8. ' ' → logprob: -4.806581497192383
    9. ' ' → logprob: -4.931581497192383
    10. '_' → logprob: -5.056581497192383

Token 34: ' puis' (ID: 18766)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4626396894454956
    2. ' ' → logprob: -2.212639808654785
    3. ' )' → logprob: -2.587639808654785
    4. '+' → logprob: -2.587639808654785
    5. ')' → logprob: -3.462639808654785
    6. ' chaîne' → logprob: -3.712639808654785
    7. '_' → logprob: -3.837639808654785
    8. ' espace' → logprob: -4.337639808654785
    9. 'chaine' → logprob: -5.837639808654785
    10. ' ,' → logprob: -5.962639808654785

Token 35: ' première' (ID: 23423)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.767772376537323
    2. ' la' → logprob: -1.1427724361419678
    3. 'la' → logprob: -2.0177724361419678
    4. 'le' → logprob: -2.8927724361419678
    5. ' premier' → logprob: -4.767772197723389
    6. ' le' → logprob: -4.892772197723389
    7. '   ' → logprob: -5.392772197723389
    8. ' première' → logprob: -6.142772197723389
    9. 'l' → logprob: -6.392772197723389
    10. 's' → logprob: -7.267772197723389

Token 36: ').
' (ID: 6294)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.293886661529541
    2. ')' → logprob: -3.043886661529541
    3. ' )' → logprob: -3.043886661529541
    4. ' ' → logprob: -3.043886661529541
    5. 'chaine' → logprob: -3.168886661529541
    6. ' chaine' → logprob: -3.293886661529541
    7. '   ' → logprob: -4.418886661529541
    8. 'cha' → logprob: -4.793886661529541
    9. '"' → logprob: -5.918886661529541
    10. ' ).' → logprob: -6.668886661529541

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009436474181711674
    2. '"""' → logprob: -4.75943660736084
    3. '```' → logprob: -8.13443660736084
    4. '"""
' → logprob: -8.50943660736084
    5. '""' → logprob: -8.88443660736084
    6. '"' → logprob: -9.13443660736084
    7. '    
' → logprob: -10.75943660736084
    8. '    ' → logprob: -11.75943660736084
    9. ' """' → logprob: -11.75943660736084
    10. ')' → logprob: -11.88443660736084

Token 38: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023472340777516365
    2. '"""' → logprob: -4.023472309112549
    3. '```' → logprob: -5.648472309112549
    4. '"""
' (adapté à ' """
') → logprob: -7.148472309112549
    5. '""' → logprob: -7.273472309112549
    6. '"' → logprob: -9.523472785949707
    7. '    
' → logprob: -10.023472785949707
    8. '`' → logprob: -10.398472785949707
    9. ' ' → logprob: -10.523472785949707
    10. '  ' → logprob: -10.898472785949707

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00045843268162570894
    2. 'input' → logprob: -9.125458717346191
    3. '    
' → logprob: -9.375458717346191
    4. 'a' → logprob: -9.625458717346191
    5. 'n' → logprob: -9.625458717346191
    6. '
' → logprob: -11.000458717346191
    7. 'import' → logprob: -11.000458717346191
    8. '```' → logprob: -11.125458717346191
    9. 's' → logprob: -11.250458717346191
    10. '\n' → logprob: -11.375458717346191

Token 40: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00630166893824935
    2. 'first' → logprob: -6.2563018798828125
    3. 'chaine' → logprob: -6.8813018798828125
    4. 's' → logprob: -7.1313018798828125
    5. 'string' → logprob: -7.6313018798828125
    6. 'input' → logprob: -7.8813018798828125
    7. ' first' → logprob: -8.131301879882812
    8. 'a' → logprob: -8.256301879882812
    9. 'n' → logprob: -8.381301879882812
    10. '```' → logprob: -8.631301879882812

Token 41: ' Lecture' (ID: 106534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0247827768325806
    2. 'first' → logprob: -1.5247827768325806
    3. 'chaine' → logprob: -1.8997827768325806
    4. 's' → logprob: -2.274782657623291
    5. 'str' → logprob: -3.024782657623291
    6. ' first' → logprob: -3.149782657623291
    7. 'a' → logprob: -3.774782657623291
    8. 'string' → logprob: -4.274782657623291
    9. 'input' → logprob: -4.774782657623291
    10. 'text' → logprob: -5.274782657623291

Token 42: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.16135810315608978
    2. '   ' → logprob: -2.286358118057251
    3. ' de' → logprob: -4.161357879638672
    4. ' ' → logprob: -5.036357879638672
    5. '    ' → logprob: -5.411357879638672
    6. 'de' → logprob: -5.536357879638672
    7. '_' → logprob: -5.536357879638672
    8. 'des' → logprob: -5.536357879638672
    9. 's' → logprob: -5.661357879638672
    10. '  ' → logprob: -6.786357879638672

Token 43: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.59391188621521
    2. 'es' → logprob: -1.09391188621521
    3. ''une' → logprob: -3.09391188621521
    4. ' deux' → logprob: -4.593912124633789
    5. 'eux' → logprob: -4.593912124633789
    6. 'de' → logprob: -4.718912124633789
    7. ' ' → logprob: -4.843912124633789
    8. 'a' → logprob: -5.093912124633789
    9. 'u' → logprob: -5.218912124633789
    10. 'une' → logprob: -5.468912124633789

Token 44: ' ligne' (ID: 19583)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.2811189293861389
    2. 'chaine' → logprob: -1.9061188697814941
    3. ' chaine' → logprob: -3.031118869781494
    4. 'cha' → logprob: -4.031118869781494
    5. ' ' → logprob: -4.156118869781494
    6. 's' → logprob: -4.906118869781494
    7. 'prem' → logprob: -6.406118869781494
    8. ' cha' → logprob: -6.906118869781494
    9. 'entrée' → logprob: -7.156118869781494
    10. '_' → logprob: -7.531118869781494

Token 45: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5175502300262451
    2. 's' → logprob: -1.1425502300262451
    3. 'user' → logprob: -3.142550230026245
    4. 'chaine' → logprob: -4.392550468444824
    5. ' s' → logprob: -5.267550468444824
    6. 'a' → logprob: -6.017550468444824
    7. 'input' → logprob: -6.017550468444824
    8. ' user' → logprob: -6.142550468444824
    9. '1' → logprob: -6.142550468444824
    10. 'string' → logprob: -6.392550468444824

Token 46: ' l' (ID: 305)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.7338537573814392
    2. ' input' → logprob: -1.608853816986084
    3. 's' → logprob: -2.233853816986084
    4. 'code' → logprob: -2.858853816986084
    5. ' l' → logprob: -3.108853816986084
    6. 'input' → logprob: -3.233853816986084
    7. 'texte' → logprob: -3.858853816986084
    8. 'l' → logprob: -4.483853816986084
    9. 'entrée' → logprob: -4.733853816986084
    10. ' texte' → logprob: -4.983853816986084

Token 47: ''entrée' (ID: 115820)
  Prédit: ''utilisateur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.07911141961812973
    2. 'util' → logprob: -3.204111337661743
    3. 'input' → logprob: -4.329111576080322
    4. ''entrée' → logprob: -4.329111576080322
    5. ''' → logprob: -5.579111576080322
    6. ''util' → logprob: -6.704111576080322
    7. '’utilisateur' → logprob: -6.829111576080322
    8. 'entrée' → logprob: -7.079111576080322
    9. 'u' → logprob: -7.579111576080322
    10. 'a' → logprob: -7.829111576080322

Token 48: ' standard' (ID: 7024)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.4468708634376526
    2. '   ' → logprob: -1.9468708038330078
    3. 's' → logprob: -2.696870803833008
    4. ' user' → logprob: -2.821870803833008
    5. 'input' → logprob: -3.446870803833008
    6. 'chaine' → logprob: -4.071870803833008
    7. ' input' → logprob: -4.446870803833008
    8. ' utilisateur' → logprob: -4.571870803833008
    9. 'string' → logprob: -5.821870803833008
    10. ' ' → logprob: -5.821870803833008

Token 49: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028061959892511368
    2. 'chaine' → logprob: -4.278061866760254
    3. 's' → logprob: -5.278061866760254
    4. 'a' → logprob: -5.528061866760254
    5. 'first' → logprob: -7.153061866760254
    6. 'input' → logprob: -7.278061866760254
    7. 'string' → logprob: -7.653061866760254
    8. 'user' → logprob: -8.028061866760254
    9. ' first' → logprob: -8.028061866760254
    10. 'n' → logprob: -8.153061866760254

Token 50: ' séparation' (ID: 199055)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.568736732006073
    2. 'stock' → logprob: -2.5687367916107178
    3. ' strip' → logprob: -2.6937367916107178
    4. ' stockage' → logprob: -2.8187367916107178
    5. ' la' → logprob: -3.0687367916107178
    6. 'strip' → logprob: -3.1937367916107178
    7. ' conversion' → logprob: -3.3187367916107178
    8. 's' → logprob: -4.818736553192139
    9. ' storing' → logprob: -4.943736553192139
    10. 'la' → logprob: -5.193736553192139

Token 51: ' en' (ID: 469)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7942643165588379
    2. ' en' → logprob: -1.419264316558838
    3. 's' → logprob: -2.169264316558838
    4. '   ' → logprob: -2.169264316558838
    5. ' s' → logprob: -3.669264316558838
    6. 'en' → logprob: -4.419264316558838
    7. 'des' → logprob: -4.419264316558838
    8. ' ' → logprob: -5.419264316558838
    9. ' input' → logprob: -5.544264316558838
    10. ' par' → logprob: -5.544264316558838

Token 52: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7739445567131042
    2. ' deux' → logprob: -0.7739445567131042
    3. ' tokens' → logprob: -3.648944616317749
    4. ' chaînes' → logprob: -4.52394437789917
    5. ' ' → logprob: -4.64894437789917
    6. ' mots' → logprob: -4.77394437789917
    7. 'tokens' → logprob: -5.02394437789917
    8. ' espaces' → logprob: -5.27394437789917
    9. '2' → logprob: -6.39894437789917
    10. 'cha' → logprob: -6.89894437789917

Token 53: ' chaînes' (ID: 179904)
  Prédit: ' chaînes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -1.2403254508972168
    2. 's' → logprob: -2.490325450897217
    3. ' chain' → logprob: -2.490325450897217
    4. ' mots' → logprob: -2.615325450897217
    5. ' strings' → logprob: -2.990325450897217
    6. ' s' → logprob: -3.115325450897217
    7. 'chain' → logprob: -3.240325450897217
    8. '   ' → logprob: -3.365325450897217
    9. 'strings' → logprob: -3.365325450897217
    10. 'l' → logprob: -3.365325450897217

Token 54: ' distinct' (ID: 16913)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048766765743494034
    2. 's' → logprob: -4.173766613006592
    3. ' input' → logprob: -5.048766613006592
    4. 'input' → logprob: -5.173766613006592
    5. 'user' → logprob: -5.423766613006592
    6. ' s' → logprob: -5.923766613006592
    7. ' user' → logprob: -6.048766613006592
    8. ' line' → logprob: -6.298766613006592
    9. '    
' → logprob: -6.298766613006592
    10. ',' → logprob: -6.798766613006592

Token 55: 'es' (ID: 268)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.597029447555542
    2. '   ' → logprob: -0.972029447555542
    3. 'es' → logprob: -3.597029447555542
    4. ',' → logprob: -4.597029685974121
    5. ' ' → logprob: -4.722029685974121
    6. 'strings' → logprob: -5.722029685974121
    7. 'input' → logprob: -5.972029685974121
    8. ' s' → logprob: -5.972029685974121
    9. 'e' → logprob: -6.347029685974121
    10. ' lines' → logprob: -6.472029685974121

Token 56: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03801910951733589
    2. 'input' → logprob: -4.538019180297852
    3. '    
' → logprob: -4.663019180297852
    4. 's' → logprob: -4.913019180297852
    5. 'user' → logprob: -6.663019180297852
    6. 'a' → logprob: -7.163019180297852
    7. 'chaine' → logprob: -7.163019180297852
    8. 'n' → logprob: -7.288019180297852
    9. ' input' → logprob: -7.288019180297852
    10. '\n' → logprob: -7.288019180297852

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005916231777518988
    2. 's' → logprob: -6.005916118621826
    3. 'input' → logprob: -6.755916118621826
    4. '    
' → logprob: -7.505916118621826
    5. 'n' → logprob: -7.630916118621826
    6. 'a' → logprob: -8.380916595458984
    7. ' ' → logprob: -9.255916595458984
    8. ',' → logprob: -9.380916595458984
    9. '\n' → logprob: -9.380916595458984
    10. 'chaine' → logprob: -9.380916595458984

Token 58: ' S' (ID: 336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9148145318031311
    2. 'chaine' → logprob: -2.0398144721984863
    3. 'input' → logprob: -2.2898144721984863
    4. 'line' → logprob: -2.9148144721984863
    5. 's' → logprob: -2.9148144721984863
    6. ' line' → logprob: -3.0398144721984863
    7. 'str' → logprob: -3.2898144721984863
    8. ' input' → logprob: -3.4148144721984863
    9. 'ligne' → logprob: -4.039814472198486
    10. ' lines' → logprob: -4.414814472198486

Token 59: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28972771763801575
    2. '1' → logprob: -1.4147276878356934
    3. '=input' → logprob: -5.289727687835693
    4. '=' → logprob: -5.789727687835693
    5. 'input' → logprob: -9.039728164672852
    6. ' ' → logprob: -9.039728164672852
    7. '_input' → logprob: -9.789728164672852
    8. 'tring' → logprob: -10.289728164672852
    9. 's' → logprob: -10.789728164672852
    10. 'tr' → logprob: -11.039728164672852

Token 60: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.35673612356185913
    2. ' T' → logprob: -1.231736183166504
    3. 'input' → logprob: -6.606736183166504
    4. 't' → logprob: -6.731736183166504
    5. 's' → logprob: -6.731736183166504
    6. ' input' → logprob: -6.981736183166504
    7. ' t' → logprob: -7.231736183166504
    8. 'S' → logprob: -7.731736183166504
    9. '_' → logprob: -7.731736183166504
    10. ' ' → logprob: -7.856736183166504

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0699819028377533
    2. '=' → logprob: -2.694981813430786
    3. ',' → logprob: -10.194981575012207
    4. '=input' → logprob: -12.194981575012207
    5. ' ' → logprob: -13.819981575012207
    6. '.' → logprob: -14.819981575012207
    7. ' =
' → logprob: -14.944981575012207
    8. ')' → logprob: -15.444981575012207
    9. ' ' → logprob: -15.569981575012207
    10. '  ' → logprob: -15.694981575012207

Token 62: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.02988690510392189
    2. 'input' → logprob: -3.5298869609832764
    3. ' map' → logprob: -9.154887199401855
    4. ' ' → logprob: -11.154887199401855
    5. 'map' → logprob: -11.529887199401855
    6. ' ' → logprob: -12.404887199401855
    7. '	input' → logprob: -14.529887199401855
    8. '   ' → logprob: -14.779887199401855
    9. '(input' → logprob: -15.029887199401855
    10. ' raw' → logprob: -15.279887199401855

Token 63: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.02683859132230282
    2. '()' → logprob: -3.901838541030884
    3. '(' → logprob: -5.151838779449463
    4. '('' → logprob: -8.401838302612305
    5. '("' → logprob: -8.526838302612305
    6. '("("' → logprob: -10.651838302612305
    7. ' ().' → logprob: -10.901838302612305
    8. '("").' → logprob: -11.901838302612305
    9. '.' → logprob: -12.276838302612305
    10. ' ()' → logprob: -13.026838302612305

Token 64: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006726737599819899
    2. 'strip' → logprob: -5.0067267417907715
    3. 'rstrip' → logprob: -11.756726264953613
    4. 'spl' → logprob: -12.631726264953613
    5. ' split' → logprob: -16.13172721862793
    6. 's' → logprob: -16.63172721862793
    7. 'rs' → logprob: -16.75672721862793
    8. 'sp' → logprob: -17.25672721862793
    9. '(split' → logprob: -18.25672721862793
    10. '.split' → logprob: -18.75672721862793

Token 65: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.07727985829114914
    2. '("("' → logprob: -3.202279806137085
    3. '(' → logprob: -3.452279806137085
    4. '("' → logprob: -6.577280044555664
    5. '()' → logprob: -7.452280044555664
    6. ''' → logprob: -11.077280044555664
    7. '('.')' → logprob: -11.077280044555664
    8. '('(' → logprob: -12.202280044555664
    9. '("(' → logprob: -12.577280044555664
    10. '"' → logprob: -12.702280044555664

Token 66: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.66722172498703
    2. '   ' → logprob: -1.2922217845916748
    3. '    
' → logprob: -2.167221784591675
    4. 'print' → logprob: -3.417221784591675
    5. '  
' → logprob: -3.542221784591675
    6. ' 
' → logprob: -4.792221546173096
    7. '\n' → logprob: -5.042221546173096
    8. '   
' → logprob: -5.542221546173096
    9. '```' → logprob: -5.542221546173096
    10. 'return' → logprob: -6.042221546173096

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6501328945159912
    2. 'print' → logprob: -0.7751328945159912
    3. ' print' → logprob: -4.15013313293457
    4. '    
' → logprob: -7.02513313293457
    5. '#' → logprob: -8.40013313293457
    6. 'result' → logprob: -8.90013313293457
    7. '```' → logprob: -8.90013313293457
    8. '  ' → logprob: -10.15013313293457
    9. '#print' → logprob: -10.77513313293457
    10. 'p' → logprob: -10.77513313293457

Token 68: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0018799698445945978
    2. '   ' → logprob: -6.751880168914795
    3. 'result' → logprob: -7.626880168914795
    4. '#' (adapté à ' #') → logprob: -8.751879692077637
    5. ' print' → logprob: -10.001879692077637
    6. 'return' → logprob: -12.376879692077637
    7. 'R' → logprob: -13.126879692077637
    8. 'U' → logprob: -13.251879692077637
    9. 'output' → logprob: -13.251879692077637
    10. 'prin' → logprob: -13.251879692077637

Token 69: ' Con' (ID: 1532)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2889668941497803
    2. ' print' → logprob: -1.7889668941497803
    3. '#' → logprob: -2.6639668941497803
    4. 'result' → logprob: -5.163967132568359
    5. ' #' → logprob: -5.663967132568359
    6. ' result' → logprob: -6.538967132568359
    7. 'Aff' → logprob: -6.913967132568359
    8. '   ' → logprob: -6.913967132568359
    9. 'aff' → logprob: -7.788967132568359
    10. '#print' → logprob: -8.41396713256836

Token 70: 'cat' (ID: 8837)
  Prédit: 'cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -0.060350943356752396
    2. '   ' → logprob: -3.3103508949279785
    3. 'c' → logprob: -4.1853508949279785
    4. 't' → logprob: -6.5603508949279785
    5. 'aten' → logprob: -6.8103508949279785
    6. 'ca' → logprob: -7.5603508949279785
    7. 's' → logprob: -7.5603508949279785
    8. 'at' → logprob: -7.6853508949279785
    9. '```' → logprob: -7.6853508949279785
    10. 'atenate' → logprob: -8.185351371765137

Token 71: 'én' (ID: 3289)
  Prédit: 'én'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'én' → logprob: -0.010603824630379677
    2. 'en' → logprob: -5.260603904724121
    3. 'é' → logprob: -6.260603904724121
    4. 'entation' → logprob: -6.385603904724121
    5. 'éné' → logprob: -7.510603904724121
    6. 'étation' → logprob: -8.635603904724121
    7. 'enação' → logprob: -8.760603904724121
    8. '   ' → logprob: -9.135603904724121
    9. ' én' → logprob: -9.385603904724121
    10. 'èn' → logprob: -9.385603904724121

Token 72: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0009801707929000258
    2. 'nation' → logprob: -8.000980377197266
    3. 's' → logprob: -8.250980377197266
    4. 'tion' → logprob: -9.125980377197266
    5. 'lation' → logprob: -9.250980377197266
    6. 'er' → logprob: -9.625980377197266
    7. 'ration' → logprob: -10.125980377197266
    8. 'cation' → logprob: -11.500980377197266
    9. 'at' → logprob: -11.625980377197266
    10. 'a' → logprob: -11.875980377197266

Token 73: ' des' (ID: 731)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7088786959648132
    2. '   ' → logprob: -2.208878755569458
    3. ' =' → logprob: -2.333878755569458
    4. ' print' → logprob: -2.333878755569458
    5. 'result' → logprob: -2.708878755569458
    6. ' T' → logprob: -3.083878755569458
    7. 'T' → logprob: -3.458878755569458
    8. '(' → logprob: -3.958878755569458
    9. ',' → logprob: -4.833878517150879
    10. ' result' → logprob: -5.208878517150879

Token 74: ' chaînes' (ID: 179904)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.6578366160392761
    2. ' T' → logprob: -1.032836675643921
    3. 'de' → logprob: -2.907836675643921
    4. ' chaînes' → logprob: -3.032836675643921
    5. ' deux' → logprob: -5.282836437225342
    6. ' strings' → logprob: -5.407836437225342
    7. ' ' → logprob: -5.657836437225342
    8. '   ' → logprob: -6.657836437225342
    9. ' chain' → logprob: -6.907836437225342
    10. 't' → logprob: -6.907836437225342

Token 75: ' dans' (ID: 2671)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11046574264764786
    2. '   ' → logprob: -2.9854657649993896
    3. ' print' → logprob: -3.6104657649993896
    4. 'result' → logprob: -4.2354655265808105
    5. ',' → logprob: -5.8604655265808105
    6. 'r' → logprob: -5.9854655265808105
    7. '    
' → logprob: -6.2354655265808105
    8. 'T' → logprob: -6.9854655265808105
    9. ' T' → logprob: -7.3604655265808105
    10. ' result' → logprob: -7.3604655265808105

Token 76: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.008093457669019699
    2. 'l' → logprob: -5.008093357086182
    3. ' T' → logprob: -7.508093357086182
    4. '"' → logprob: -8.13309383392334
    5. 'T' → logprob: -9.25809383392334
    6. ' le' → logprob: -9.50809383392334
    7. ''' → logprob: -9.88309383392334
    8. ''ordre' → logprob: -10.00809383392334
    9. 'ordre' → logprob: -10.38309383392334
    10. '   ' → logprob: -10.50809383392334

Token 77: ''ordre' (ID: 124753)
  Prédit: ''ordre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ordre' → logprob: -0.007332941051572561
    2. ''' → logprob: -5.132332801818848
    3. 'ordre' → logprob: -6.882332801818848
    4. ''''' → logprob: -9.132332801818848
    5. '’ordre' → logprob: -9.382332801818848
    6. 'e' → logprob: -9.507332801818848
    7. '''' → logprob: -10.132332801818848
    8. ''é' → logprob: -11.257332801818848
    9. '')' → logprob: -11.507332801818848
    10. ' ordre' → logprob: -11.882332801818848

Token 78: ' T' (ID: 353)
  Prédit: ' T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.2905823886394501
    2. 'T' → logprob: -1.4155824184417725
    3. '[::-' → logprob: -6.165582180023193
    4. 't' → logprob: -6.665582180023193
    5. ' inverse' → logprob: -7.040582180023193
    6. ' ' → logprob: -7.040582180023193
    7. 'inverse' → logprob: -7.540582180023193
    8. ' invers' → logprob: -7.665582180023193
    9. ' t' → logprob: -7.790582180023193
    10. ' =' → logprob: -8.040582656860352

Token 79: ' puis' (ID: 18766)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.348449170589447
    2. ' +' → logprob: -1.2234492301940918
    3. '＋' → logprob: -14.348448753356934
    4. ' +
' → logprob: -14.598448753356934
    5. '+++' → logprob: -14.598448753356934
    6. ' plus' → logprob: -14.723448753356934
    7. '   ' → logprob: -15.223448753356934
    8. '2' → logprob: -15.473448753356934
    9. '```' → logprob: -15.473448753356934
    10. ' ' → logprob: -15.473448753356934

Token 80: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.19877946376800537
    2. ' S' → logprob: -1.8237794637680054
    3. ' ' → logprob: -4.073779582977295
    4. '  ' → logprob: -7.573779582977295
    5. '"' → logprob: -7.823779582977295
    6. ''' → logprob: -8.323779106140137
    7. '`' → logprob: -8.448779106140137
    8. ',' → logprob: -9.323779106140137
    9. ' ,' → logprob: -9.698779106140137
    10. ' "' → logprob: -10.073779106140137

Token 81: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4850963354110718
    2. 'print' → logprob: -1.1100963354110718
    3. 'return' → logprob: -3.9850964546203613
    4. ' print' → logprob: -4.860096454620361
    5. ',' → logprob: -5.110096454620361
    6. ')' → logprob: -5.235096454620361
    7. '.' → logprob: -5.360096454620361
    8. ' return' → logprob: -5.485096454620361
    9. '    
' → logprob: -5.735096454620361
    10. '+' → logprob: -6.485096454620361

Token 82: ' affich' (ID: 90179)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.06988096237182617
    2. '   ' → logprob: -3.694880962371826
    3. 'print' → logprob: -3.694880962371826
    4. '.' → logprob: -5.319880962371826
    5. '.print' → logprob: -6.319880962371826
    6. ' affich' → logprob: -6.319880962371826
    7. '    ' → logprob: -6.694880962371826
    8. ' ' → logprob: -6.694880962371826
    9. ')' → logprob: -6.944880962371826
    10. ' afficher' → logprob: -7.194880962371826

Token 83: 'age' (ID: 477)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.013267642818391323
    2. 'er' → logprob: -4.638267517089844
    3. 'age' → logprob: -5.763267517089844
    4. 'a' → logprob: -8.888267517089844
    5. '   ' → logprob: -9.763267517089844
    6. 'é' → logprob: -10.013267517089844
    7. 'ent' → logprob: -10.763267517089844
    8. 'le' → logprob: -10.888267517089844
    9. 'ace' → logprob: -11.013267517089844
    10. 'ge' → logprob: -11.638267517089844

Token 84: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7848378419876099
    2. '   ' → logprob: -1.0348378419876099
    3. '(' → logprob: -1.9098378419876099
    4. '()' → logprob: -3.5348377227783203
    5. ' print' → logprob: -5.40983772277832
    6. ')' → logprob: -5.53483772277832
    7. '(
' → logprob: -7.15983772277832
    8. '(print' → logprob: -7.28483772277832
    9. '.' → logprob: -8.15983772277832
    10. ':' → logprob: -8.40983772277832

Token 85: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.10549788922071457
    2. 'rés' → logprob: -3.3554978370666504
    3. 'result' → logprob: -3.6054978370666504
    4. ' result' → logprob: -4.48049783706665
    5. ' resultat' → logprob: -4.60549783706665
    6. 'r' → logprob: -5.35549783706665
    7. ' ' → logprob: -5.48049783706665
    8. 'res' → logprob: -6.48049783706665
    9. ' Rés' → logprob: -7.35549783706665
    10. 'Rés' → logprob: -7.48049783706665

Token 86: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16896647214889526
    2. '   ' → logprob: -1.91896653175354
    3. ' print' → logprob: -5.668966293334961
    4. ')' → logprob: -6.543966293334961
    5. '
' → logprob: -6.543966293334961
    6. '    
' → logprob: -7.168966293334961
    7. '\n' → logprob: -7.543966293334961
    8. '```' → logprob: -8.043966293334961
    9. ',' → logprob: -8.793966293334961
    10. '\' → logprob: -8.793966293334961

Token 87: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03226873278617859
    2. '   ' → logprob: -3.532268762588501
    3. ' print' → logprob: -6.157268524169922
    4. '```' → logprob: -8.532268524169922
    5. ',' → logprob: -9.657268524169922
    6. ')' → logprob: -9.907268524169922
    7. '    
' → logprob: -11.157268524169922
    8. ':' → logprob: -11.282268524169922
    9. '`' → logprob: -11.407268524169922
    10. ')
' → logprob: -11.907268524169922

Token 88: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0028701385017484426
    2. ' print' → logprob: -6.002870082855225
    3. '   ' → logprob: -7.877870082855225
    4. ')' → logprob: -12.377870559692383
    5. 'pr' → logprob: -12.627870559692383
    6. '```' → logprob: -12.627870559692383
    7. 'prin' → logprob: -13.752870559692383
    8. '`' → logprob: -14.627870559692383
    9. ',' → logprob: -14.752870559692383
    10. 'prit' → logprob: -14.752870559692383

Token 89: '(T' (ID: 7014)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02345312386751175
    2. '(T' → logprob: -3.7734532356262207
    3. '("("' → logprob: -9.898452758789062
    4. '((' → logprob: -10.023452758789062
    5. '('' → logprob: -10.023452758789062
    6. '(f' → logprob: -10.148452758789062
    7. '("' → logprob: -11.648452758789062
    8. '(S' → logprob: -11.898452758789062
    9. '()' → logprob: -12.398452758789062
    10. '(t' → logprob: -12.523452758789062

Token 90: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38816362619400024
    2. ' +' → logprob: -1.1381635665893555
    3. ')' → logprob: -7.1381635665893555
    4. ' ' → logprob: -8.263163566589355
    5. ',' → logprob: -8.888163566589355
    6. ' ,' → logprob: -9.888163566589355
    7. ' )' → logprob: -10.263163566589355
    8. '+)' → logprob: -12.513163566589355
    9. '+"' → logprob: -12.763163566589355
    10. '   ' → logprob: -13.513163566589355

Token 91: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.070254847407341
    2. ' S' → logprob: -2.6952548027038574
    3. ' ' → logprob: -8.445255279541016
    4. ')' → logprob: -9.695255279541016
    5. '  ' → logprob: -11.320255279541016
    6. '"' → logprob: -11.445255279541016
    7. ' )' → logprob: -12.320255279541016
    8. '   ' → logprob: -12.695255279541016
    9. '    ' → logprob: -12.820255279541016
    10. '"S' → logprob: -12.820255279541016

Token 92: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.625000953674316
    3. ')
' → logprob: -15.375000953674316
    4. '))' → logprob: -16.375001907348633
    5. '()' → logprob: -16.625001907348633
    6. ')`' → logprob: -17.125001907348633
    7. '")' → logprob: -17.625001907348633
    8. '`)' → logprob: -17.875001907348633
    9. '')' → logprob: -18.125001907348633
    10. '(' → logprob: -18.875001907348633

Token 93: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24344851076602936
    2. ' __' → logprob: -2.493448495864868
    3. ' _' → logprob: -2.868448495864868
    4. '_' → logprob: -3.243448495864868
    5. '  ' → logprob: -3.743448495864868
    6. '__' → logprob: -5.868448734283447
    7. ' main' → logprob: -6.243448734283447
    8. ' ' → logprob: -6.243448734283447
    9. '<|end|>' → logprob: -6.243448734283447
    10. ' ▁' → logprob: -6.493448734283447

Token 95: 'name' (ID: 897)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7058209776878357
    2. '<|end|>' → logprob: -0.8308209776878357
    3. '_' → logprob: -3.7058210372924805
    4. '__' → logprob: -3.9558210372924805
    5. '.__' → logprob: -4.3308210372924805
    6. '<|end|>' → logprob: -5.0808210372924805
    7. '._' → logprob: -6.2058210372924805
    8. '[' → logprob: -6.3308210372924805
    9. '```' → logprob: -6.7058210372924805
    10. '__.__' → logprob: -7.4558210372924805

Token 96: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.3822154111694545e-05
    2. '__.__' → logprob: -10.625043869018555
    3. '___' → logprob: -11.750043869018555
    4. '_' → logprob: -12.500043869018555
    5. '__*/' → logprob: -12.875043869018555
    6. '==' → logprob: -13.500043869018555
    7. '__.' → logprob: -13.875043869018555
    8. '____' → logprob: -13.875043869018555
    9. '__["' → logprob: -14.625043869018555
    10. '__[' → logprob: -14.875043869018555

Token 97: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.001345115713775158
    2. ' ==' → logprob: -7.126345157623291
    3. '==' → logprob: -7.626345157623291
    4. '__.__' → logprob: -10.876344680786133
    5. '_' → logprob: -11.751344680786133
    6. '=="' → logprob: -11.876344680786133
    7. '___' → logprob: -12.626344680786133
    8. '__,' → logprob: -13.251344680786133
    9. '__
' → logprob: -13.251344680786133
    10. '__
' → logprob: -13.376344680786133

Token 98: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5762049555778503
    2. ''' → logprob: -0.8262049555778503
    3. ' "__' → logprob: -8.701205253601074
    4. ' "' → logprob: -10.201205253601074
    5. ' '__' → logprob: -10.826205253601074
    6. '__' → logprob: -10.826205253601074
    7. ' '' → logprob: -10.826205253601074
    8. ''s' → logprob: -14.576205253601074
    9. ''"' → logprob: -14.701205253601074
    10. ' ' → logprob: -15.201205253601074

Token 99: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0005137138650752604
    2. '__' → logprob: -8.875514030456543
    3. 'python' → logprob: -9.125514030456543
    4. 'py' → logprob: -9.125514030456543
    5. 'm' → logprob: -9.500514030456543
    6. 'name' → logprob: -11.125514030456543
    7. 'maine' → logprob: -11.375514030456543
    8. 'ma' → logprob: -11.500514030456543
    9. 'w' → logprob: -12.000514030456543
    10. 'g' → logprob: -12.125514030456543

Token 100: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004079589620232582
    2. '__":
' → logprob: -5.504079818725586
    3. '_' → logprob: -14.879079818725586
    4. '_"' → logprob: -15.004079818725586
    5. '"' → logprob: -15.754079818725586
    6. '__("' → logprob: -15.879079818725586
    7. '__["' → logprob: -16.254079818725586
    8. '__",' → logprob: -16.879079818725586
    9. '__':
' → logprob: -17.754079818725586
    10. '__:' → logprob: -17.879079818725586

Token 101: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0041991365142166615
    2. ' ' → logprob: -6.254199028015137
    3. 'main' → logprob: -6.879199028015137
    4. '	main' → logprob: -7.629199028015137
    5. ' ' → logprob: -7.879199028015137
    6. ' 
' → logprob: -8.754199028015137
    7. '(main' → logprob: -9.129199028015137
    8. '_main' → logprob: -10.879199028015137
    9. '   ' → logprob: -11.004199028015137
    10. '    ' → logprob: -11.379199028015137

Token 102: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.04859452322125435
    2. 'main' (adapté à ' main') → logprob: -3.0485944747924805
    3. '	main' → logprob: -11.92359447479248
    4. ' ' → logprob: -14.67359447479248
    5. '_main' → logprob: -16.798595428466797
    6. '(main' → logprob: -16.923595428466797
    7. ' ' → logprob: -17.173595428466797
    8. '   ' → logprob: -18.423595428466797
    9. ' ma' → logprob: -18.548595428466797
    10. 'maine' → logprob: -18.673595428466797

Token 103: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00410274276509881
    2. '(' → logprob: -5.50410270690918
    3. '()
' → logprob: -11.00410270690918
    4. '(
' → logprob: -12.37910270690918
    5. '()`' → logprob: -14.12910270690918
    6. ' ()' → logprob: -14.37910270690918
    7. '(

' → logprob: -14.37910270690918
    8. '()

' → logprob: -14.62910270690918
    9. '`()' → logprob: -16.00410270690918
    10. '()<' → logprob: -16.12910270690918


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 101
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 28
Tokens correctement prédits (top 10): 66
Précision stricte (1ère position): 26.73%
Précision adaptée (1ère position): 27.72%
Précision (top 10): 65.35%
================================================================================
