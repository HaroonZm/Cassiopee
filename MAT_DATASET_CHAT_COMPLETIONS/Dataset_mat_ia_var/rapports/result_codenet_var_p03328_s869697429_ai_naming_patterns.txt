================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Cohesive and systematic variable naming
start_value, end_value = map(int, input().split())

difference = end_value - start_value
term_count = difference - 1
sum_terms = ((term_count + 1) * term_count) // 2
result = sum_terms - start_value

print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Coh' (ID: 150400)
  → Token d'amorce (pas de prédiction)

Token 2: 'es' (ID: 268)
  → Token d'amorce (pas de prédiction)

Token 3: 'ive' (ID: 585)
  Prédit: 'ive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -0.42489656805992126
    2. 'ion' → logprob: -1.7998965978622437
    3. 's' → logprob: -2.674896478652954
    4. '#' → logprob: -2.924896478652954
    5. 'n' → logprob: -3.799896478652954
    6. 'ent' → logprob: -4.174896717071533
    7. 'nt' → logprob: -4.674896717071533
    8. '```' → logprob: -4.799896717071533
    9. 'e' → logprob: -7.174896717071533
    10. 'i' → logprob: -8.174896240234375

Token 4: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5318154096603394
    2. '#' → logprob: -1.1568154096603394
    3. '```' → logprob: -3.406815528869629
    4. '_' → logprob: -3.656815528869629
    5. '(' → logprob: -5.281815528869629
    6. '.' → logprob: -5.656815528869629
    7. ' and' → logprob: -5.656815528869629
    8. ' ' → logprob: -5.781815528869629
    9. '<|end|>' → logprob: -5.781815528869629
    10. ' #' → logprob: -6.031815528869629

Token 5: ' systematic' (ID: 62813)
  Prédit: 'consistent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'consistent' → logprob: -1.034196138381958
    2. ' modular' → logprob: -1.909196138381958
    3. ' consistent' → logprob: -2.159196138381958
    4. 'mod' → logprob: -2.534196138381958
    5. 'com' → logprob: -3.034196138381958
    6. ' well' → logprob: -3.159196138381958
    7. 'well' → logprob: -3.534196138381958
    8. 'conc' → logprob: -3.534196138381958
    9. ' readable' → logprob: -3.784196138381958
    10. 'clean' → logprob: -4.409195899963379

Token 6: ' variable' (ID: 11076)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8972085118293762
    2. '```' → logprob: -1.0222084522247314
    3. '\n' → logprob: -1.6472084522247314
    4. '<|end|>' → logprob: -4.5222086906433105
    5. '
' → logprob: -4.6472086906433105
    6. ':' → logprob: -4.8972086906433105
    7. '\' → logprob: -5.8972086906433105
    8. '_' → logprob: -6.3972086906433105
    9. 'def' → logprob: -6.3972086906433105
    10. 'import' → logprob: -6.8972086906433105

Token 7: ' naming' (ID: 64882)
  Prédit: '_name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_name' → logprob: -0.29910513758659363
    2. '_' → logprob: -2.299105167388916
    3. '_names' → logprob: -2.924105167388916
    4. '_n' → logprob: -3.174105167388916
    5. 's' → logprob: -3.924105167388916
    6. 'n' → logprob: -4.299105167388916
    7. ' naming' → logprob: -4.424105167388916
    8. ' ' → logprob: -6.049105167388916
    9. ' name' → logprob: -6.049105167388916
    10. '```' → logprob: -6.049105167388916

Token 8: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1360609382390976
    2. '#' → logprob: -3.636060953140259
    3. 'v' → logprob: -3.636060953140259
    4. 'n' → logprob: -4.51106071472168
    5. 's' → logprob: -4.76106071472168
    6. '```' → logprob: -4.76106071472168
    7. 'c' → logprob: -4.88606071472168
    8. 'a' → logprob: -5.01106071472168
    9. 'variable' → logprob: -5.38606071472168
    10. 'def' → logprob: -5.51106071472168

Token 9: 'start' (ID: 5236)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.026091035455465317
    2. 's' → logprob: -4.7760910987854
    3. ':' → logprob: -5.2760910987854
    4. 'a' → logprob: -5.9010910987854
    5. 'n' → logprob: -6.1510910987854
    6. '#' → logprob: -6.1510910987854
    7. '```' → logprob: -6.1510910987854
    8. 'v' → logprob: -7.9010910987854
    9. 'd' → logprob: -8.026090621948242
    10. 'x' → logprob: -8.026090621948242

Token 10: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13704533874988556
    2. '=' → logprob: -3.637045383453369
    3. 'd' → logprob: -3.762045383453369
    4. 's' → logprob: -3.762045383453369
    5. 'v' → logprob: -4.512045383453369
    6. 'c' → logprob: -4.762045383453369
    7. 'i' → logprob: -5.137045383453369
    8. 'm' → logprob: -5.762045383453369
    9. 'def' → logprob: -5.762045383453369
    10. 'result' → logprob: -5.887045383453369

Token 11: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05169409513473511
    2. '=' → logprob: -3.17669415473938
    3. ' =' → logprob: -5.551693916320801
    4. ')' → logprob: -5.926693916320801
    5. '+' → logprob: -7.301693916320801
    6. 's' → logprob: -7.926693916320801
    7. '_space' → logprob: -8.5516939163208
    8. '_s' → logprob: -8.8016939163208
    9. ',' → logprob: -9.1766939163208
    10. ' ' → logprob: -9.4266939163208

Token 12: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.10954015702009201
    2. 'end' → logprob: -2.7345402240753174
    3. ' increment' → logprob: -4.359539985656738
    4. ' step' → logprob: -4.484539985656738
    5. ' current' → logprob: -4.609539985656738
    6. 'increment' → logprob: -6.109539985656738
    7. 'step' → logprob: -7.359539985656738
    8. 'current' → logprob: -7.484539985656738
    9. ' intermediate' → logprob: -8.234539985656738
    10. ' next' → logprob: -8.734539985656738

Token 13: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.12353717535734177
    2. '_' → logprob: -2.248537063598633
    3. '_val' → logprob: -4.623537063598633
    4. '_v' → logprob: -8.123537063598633
    5. '_s' → logprob: -8.748537063598633
    6. ' _' → logprob: -9.998537063598633
    7. '```' → logprob: -10.123537063598633
    8. '_values' → logprob: -10.373537063598633
    9. '_va' → logprob: -10.373537063598633
    10. '_name' → logprob: -10.498537063598633

Token 14: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.103151798248291
    2. '_' → logprob: -1.103151798248291
    3. ' =' → logprob: -1.728151798248291
    4. ',' → logprob: -1.853151798248291
    5. ')' → logprob: -7.478151798248291
    6. '_space' → logprob: -7.728151798248291
    7. 's' → logprob: -8.228151321411133
    8. '_,' → logprob: -8.603151321411133
    9. '_=' → logprob: -8.853151321411133
    10. ' ,' → logprob: -9.603151321411133

Token 15: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07901393622159958
    2. '0' → logprob: -2.5790138244628906
    3. '10' → logprob: -9.70401382446289
    4. ' None' → logprob: -10.57901382446289
    5. '1' → logprob: -10.70401382446289
    6. '100' → logprob: -11.82901382446289
    7. 'None' → logprob: -12.95401382446289
    8. ' start' → logprob: -13.82901382446289
    9. ' ' → logprob: -13.95401382446289
    10. 'start' → logprob: -14.07901382446289

Token 16: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.049167923629283905
    2. '(' → logprob: -3.0491678714752197
    3. '(lambda' → logprob: -8.29916763305664
    4. '(str' → logprob: -8.67416763305664
    5. '(input' → logprob: -9.67416763305664
    6. '(range' → logprob: -10.42416763305664
    7. 'int' → logprob: -10.79916763305664
    8. '(
' → logprob: -11.67416763305664
    9. '<int' → logprob: -11.67416763305664
    10. '()' → logprob: -12.42416763305664

Token 17: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.05333839729428291
    2. ')' → logprob: -3.4283382892608643
    3. '(' → logprob: -4.553338527679443
    4. 'input' → logprob: -4.928338527679443
    5. '('' → logprob: -6.928338527679443
    6. ' input' → logprob: -8.678338050842285
    7. '(user' → logprob: -9.178338050842285
    8. '```' → logprob: -9.303338050842285
    9. ',input' → logprob: -10.303338050842285
    10. '<|end|>' → logprob: -10.428338050842285

Token 18: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4288969039916992
    2. 'input' → logprob: -1.0538969039916992
    3. ')' → logprob: -8.8038969039917
    4. '(input' → logprob: -11.0538969039917
    5. ' )' → logprob: -11.1788969039917
    6. ',input' → logprob: -12.5538969039917
    7. '=input' → logprob: -13.1788969039917
    8. '	input' → logprob: -13.1788969039917
    9. 'range' → logprob: -13.3038969039917
    10. '```' → logprob: -13.9288969039917

Token 19: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15790091454982758
    2. '())' → logprob: -2.657900810241699
    3. '().' → logprob: -3.032900810241699
    4. '(' → logprob: -4.407900810241699
    5. '('' → logprob: -4.782900810241699
    6. '(()' → logprob: -5.782900810241699
    7. '());' → logprob: -6.657900810241699
    8. ')' → logprob: -8.0329008102417
    9. '()))' → logprob: -8.1579008102417
    10. '(""))' → logprob: -8.2829008102417

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0031806828919798136
    2. 'strip' → logprob: -5.753180503845215
    3. 'rstrip' → logprob: -13.003180503845215
    4. ' split' → logprob: -14.378180503845215
    5. '(split' → logprob: -16.75318145751953
    6. 's' → logprob: -17.50318145751953
    7. 'spl' → logprob: -17.87818145751953
    8. ' strip' → logprob: -18.25318145751953
    9. 'startswith' → logprob: -19.25318145751953
    10. 'replace' → logprob: -19.25318145751953

Token 21: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.028659066185355186
    2. ')' → logprob: -4.153658866882324
    3. '()))' → logprob: -4.903658866882324
    4. '()' → logprob: -6.153658866882324
    5. '))' → logprob: -6.528658866882324
    6. '('' → logprob: -7.028658866882324
    7. '(' → logprob: -7.528658866882324
    8. ' ())' → logprob: -10.028658866882324
    9. '(','' → logprob: -11.278658866882324
    10. '(()' → logprob: -11.778658866882324

Token 22: 'difference' (ID: 133489)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.514514684677124
    2. 'if' → logprob: -2.389514684677124
    3. '+' → logprob: -2.514514684677124
    4. ':' → logprob: -2.514514684677124
    5. '#' → logprob: -3.014514684677124
    6. ' for' → logprob: -3.764514684677124
    7. ',' → logprob: -4.264514923095703
    8. '*' → logprob: -4.639514923095703
    9. 'i' → logprob: -4.764514923095703
    10. ')' → logprob: -5.014514923095703

Token 23: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03427208960056305
    2. ' =' → logprob: -3.5342721939086914
    3. '=' → logprob: -5.909272193908691
    4. '(' → logprob: -7.534272193908691
    5. ' _' → logprob: -7.659272193908691
    6. '_space' → logprob: -7.909272193908691
    7. ' ' → logprob: -9.284272193908691
    8. '_=' → logprob: -9.409272193908691
    9. ')' → logprob: -9.534272193908691
    10. 's' → logprob: -10.409272193908691

Token 24: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.11285616457462311
    2. 'end' → logprob: -2.237856149673462
    3. '(end' → logprob: -10.487855911254883
    4. '=end' → logprob: -13.487855911254883
    5. ' ' → logprob: -13.737855911254883
    6. '	end' → logprob: -13.862855911254883
    7. 'abs' → logprob: -13.987855911254883
    8. ' abs' → logprob: -14.112855911254883
    9. '   ' → logprob: -15.737855911254883
    10. ',end' → logprob: -16.112855911254883

Token 25: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0001649220648687333
    2. '_' → logprob: -8.750164985656738
    3. '_val' → logprob: -12.250164985656738
    4. ' _' → logprob: -14.625164985656738
    5. '_Value' → logprob: -14.625164985656738
    6. '_difference' → logprob: -14.875164985656738
    7. '_values' → logprob: -15.875164985656738
    8. '_VALUE' → logprob: -16.750164031982422
    9. '-_' → logprob: -17.125164031982422
    10. '```' → logprob: -17.750164031982422

Token 26: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22552156448364258
    2. '-' → logprob: -1.6005215644836426
    3. ' ' → logprob: -9.350521087646484
    4. '```' → logprob: -11.850521087646484
    5. ')' → logprob: -12.350521087646484
    6. '<|end|>' → logprob: -13.225521087646484
    7. '_' → logprob: -13.350521087646484
    8. '-start' → logprob: -13.475521087646484
    9. '`' → logprob: -14.225521087646484
    10. '  ' → logprob: -14.350521087646484

Token 27: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4740943908691406
    2. ' start' → logprob: -0.9740943908691406
    3. ' ' → logprob: -11.34909439086914
    4. 'star' → logprob: -12.97409439086914
    5. '	start' → logprob: -14.22409439086914
    6. '_start' → logprob: -14.47409439086914
    7. ' star' → logprob: -14.97409439086914
    8. '=start' → logprob: -14.97409439086914
    9. '(start' → logprob: -15.22409439086914
    10. '1' → logprob: -15.47409439086914

Token 28: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0019594402983784676
    2. '_' → logprob: -6.251959323883057
    3. ' _' → logprob: -11.251959800720215
    4. '_val' → logprob: -11.626959800720215
    5. '_difference' → logprob: -12.001959800720215
    6. '_Value' → logprob: -14.126959800720215
    7. '_
' → logprob: -14.501959800720215
    8. '_v' → logprob: -15.001959800720215
    9. '_

' → logprob: -15.501959800720215
    10. '_VALUE' → logprob: -15.626959800720215

Token 29: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: 'term' (ID: 8044)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4902704060077667
    2. '<|end|>' → logprob: -1.1152703762054443
    3. 'print' → logprob: -3.3652703762054443
    4. '.' → logprob: -5.365270614624023
    5. '<|end|>' → logprob: -5.740270614624023
    6. 'if' → logprob: -6.240270614624023
    7. '```' → logprob: -6.365270614624023
    8. '\n' → logprob: -6.365270614624023
    9. ' if' → logprob: -6.490270614624023
    10. ')' → logprob: -6.615270614624023

Token 31: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1932651847600937
    2. '_s' → logprob: -2.318265199661255
    3. '_' → logprob: -2.693265199661255
    4. '_count' → logprob: -5.318264961242676
    5. ' =' → logprob: -6.193264961242676
    6. '=' → logprob: -7.068264961242676
    7. 'inal' → logprob: -7.568264961242676
    8. ' ' → logprob: -7.818264961242676
    9. '_value' → logprob: -8.818264961242676
    10. '1' → logprob: -9.193264961242676

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031840058509260416
    2. '=' → logprob: -5.753183841705322
    3. ' ' → logprob: -13.00318431854248
    4. ',' → logprob: -13.12818431854248
    5. 's' → logprob: -14.12818431854248
    6. '_' → logprob: -14.87818431854248
    7. '=int' → logprob: -15.75318431854248
    8. ' =
' → logprob: -15.87818431854248
    9. ' +=' → logprob: -16.003183364868164
    10. ')' → logprob: -16.128183364868164

Token 33: ' difference' (ID: 9809)
  Prédit: ' difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' difference' → logprob: -0.0756215900182724
    2. 'difference' → logprob: -2.7006216049194336
    3. ' (' → logprob: -6.075621604919434
    4. ' abs' → logprob: -6.700621604919434
    5. ' ' → logprob: -6.700621604919434
    6. '10' → logprob: -8.450621604919434
    7. ' end' → logprob: -8.700621604919434
    8. 'abs' → logprob: -8.950621604919434
    9. '2' → logprob: -9.450621604919434
    10. '1' → logprob: -9.575621604919434

Token 34: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04096291586756706
    2. '+' → logprob: -3.9159629344940186
    3. ' //' → logprob: -4.2909626960754395
    4. ' ' → logprob: -5.1659626960754395
    5. '<|end|>' → logprob: -7.5409626960754395
    6. '//' → logprob: -9.540963172912598
    7. ' /' → logprob: -9.915963172912598
    8. '10' → logprob: -10.665963172912598
    9. '1' → logprob: -10.915963172912598
    10. ' +
' → logprob: -11.165963172912598

Token 35: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04410986602306366
    2. ' ' → logprob: -3.91910982131958
    3. '-' → logprob: -4.04410982131958
    4. ' -' → logprob: -5.91910982131958
    5. '0' → logprob: -6.54410982131958
    6. 'start' → logprob: -7.04410982131958
    7. '2' → logprob: -8.669110298156738
    8. '<|end|>' → logprob: -8.919110298156738
    9. ' start' → logprob: -9.294110298156738
    10. '10' → logprob: -9.669110298156738

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002022258937358856
    2. '-' → logprob: -7.1270222663879395
    3. ' ' → logprob: -7.1270222663879395
    4. '0' → logprob: -8.752021789550781
    5. 'start' → logprob: -9.127021789550781
    6. '2' → logprob: -9.877021789550781
    7. ' -' → logprob: -10.127021789550781
    8. '3' → logprob: -11.502021789550781
    9. '<|end|>' → logprob: -12.002021789550781
    10. '10' → logprob: -12.002021789550781

Token 37: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5843680500984192
    2. '<|end|>' → logprob: -0.8343680500984192
    3. ')' → logprob: -5.8343682289123535
    4. '<|end|>' → logprob: -6.3343682289123535
    5. '+' → logprob: -6.5843682289123535
    6. ' if' → logprob: -7.5843682289123535
    7. ' ' → logprob: -7.8343682289123535
    8. '\n' → logprob: -8.459367752075195
    9. '```' → logprob: -8.709367752075195
    10. '.' → logprob: -9.084367752075195

Token 38: 'sum' (ID: 12298)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: '_terms' (ID: 96676)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01234564371407032
    2. ' =' → logprob: -4.762345790863037
    3. 's' → logprob: -6.637345790863037
    4. '_=' → logprob: -6.887345790863037
    5. '=' → logprob: -7.637345790863037
    6. '_of' → logprob: -8.137345314025879
    7. '_value' → logprob: -8.262345314025879
    8. '_values' → logprob: -9.512345314025879
    9. '_tokens' → logprob: -9.637345314025879
    10. '_terms' → logprob: -10.012345314025879

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05351706221699715
    2. '=' → logprob: -3.0535171031951904
    3. ' ' → logprob: -6.678516864776611
    4. '_' → logprob: -6.678516864776611
    5. ' +=' → logprob: -6.803516864776611
    6. '<|end|>' → logprob: -6.928516864776611
    7. ' +' → logprob: -9.42851734161377
    8. ')' → logprob: -9.55351734161377
    9. 's' → logprob: -10.30351734161377
    10. '+' → logprob: -10.30351734161377

Token 41: ' ((' (ID: 3536)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14649631083011627
    2. ' (' → logprob: -3.271496295928955
    3. ' ' → logprob: -3.646496295928955
    4. 'start' → logprob: -4.021496295928955
    5. '(start' → logprob: -4.146496295928955
    6. 'term' → logprob: -4.271496295928955
    7. '(term' → logprob: -5.271496295928955
    8. ' start' → logprob: -5.396496295928955
    9. ' term' → logprob: -5.521496295928955
    10. '(' → logprob: -5.771496295928955

Token 42: 'term' (ID: 8044)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.05657947435975075
    2. ' start' → logprob: -3.30657958984375
    3. 'term' → logprob: -4.18157958984375
    4. 'end' → logprob: -6.18157958984375
    5. ' term' → logprob: -7.55657958984375
    6. 'difference' → logprob: -8.43157958984375
    7. ' end' → logprob: -9.30657958984375
    8. '2' → logprob: -9.30657958984375
    9. '(start' → logprob: -10.43157958984375
    10. ' ' → logprob: -10.68157958984375

Token 43: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.001140453852713108
    2. '_' → logprob: -7.376140594482422
    3. '1' → logprob: -8.751140594482422
    4. '_c' → logprob: -9.376140594482422
    5. 's' → logprob: -9.876140594482422
    6. 'count' → logprob: -9.876140594482422
    7. '_co' → logprob: -10.501140594482422
    8. '__' → logprob: -10.751140594482422
    9. 'c' → logprob: -10.876140594482422
    10. ')' → logprob: -11.251140594482422

Token 44: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6929601430892944
    2. ')' → logprob: -0.9429601430892944
    3. '*' → logprob: -2.817960262298584
    4. ' +' → logprob: -3.442960262298584
    5. '+' → logprob: -4.692960262298584
    6. ' )' → logprob: -5.192960262298584
    7. ')*(' → logprob: -5.942960262298584
    8. '*(' → logprob: -7.317960262298584
    9. ')*' → logprob: -7.817960262298584
    10. '*)' → logprob: -9.317959785461426

Token 45: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02668003924190998
    2. ' ' → logprob: -3.7766799926757812
    3. '2' → logprob: -6.401679992675781
    4. 'start' → logprob: -7.026679992675781
    5. ' start' → logprob: -7.401679992675781
    6. ')' → logprob: -8.526679992675781
    7. '(start' → logprob: -10.776679992675781
    8. 'end' → logprob: -10.901679992675781
    9. ' end' → logprob: -12.151679992675781
    10. ' (' → logprob: -12.526679992675781

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018910689279437065
    2. 'start' → logprob: -4.518910884857178
    3. '2' → logprob: -5.268910884857178
    4. ' ' → logprob: -6.518910884857178
    5. ' start' → logprob: -7.393910884857178
    6. ')' → logprob: -7.893910884857178
    7. 'end' → logprob: -8.89391040802002
    8. '(start' → logprob: -11.14391040802002
    9. '0' → logprob: -11.39391040802002
    10. '```' → logprob: -11.64391040802002

Token 47: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1690087467432022
    2. ' *' → logprob: -2.169008731842041
    3. '*' → logprob: -3.419008731842041
    4. ' )' → logprob: -4.919008731842041
    5. ')*' → logprob: -7.169008731842041
    6. ' +' → logprob: -8.7940092086792
    7. '*)' → logprob: -9.4190092086792
    8. '+' → logprob: -9.5440092086792
    9. ')*(' → logprob: -10.9190092086792
    10. ' ' → logprob: -11.0440092086792

Token 48: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16237151622772217
    2. '*' → logprob: -1.9123715162277222
    3. ')' → logprob: -6.287371635437012
    4. ' )' → logprob: -9.412371635437012
    5. ' +' → logprob: -9.537371635437012
    6. '+' → logprob: -9.537371635437012
    7. ' ' → logprob: -10.787371635437012
    8. ')*' → logprob: -11.287371635437012
    9. '*)' → logprob: -11.537371635437012
    10. '*(' → logprob: -12.287371635437012

Token 49: ' term' (ID: 2914)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.01759127341210842
    2. '(end' → logprob: -5.26759147644043
    3. '(start' → logprob: -5.26759147644043
    4. '(term' → logprob: -5.64259147644043
    5. 'difference' → logprob: -6.76759147644043
    6. '(' → logprob: -7.76759147644043
    7. 'term' → logprob: -7.76759147644043
    8. ' difference' → logprob: -7.89259147644043
    9. 'start' → logprob: -8.01759147644043
    10. ' term' → logprob: -8.51759147644043

Token 50: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.1270824372768402
    2. '_value' → logprob: -2.127082347869873
    3. '_val' → logprob: -9.377082824707031
    4. '_term' → logprob: -10.377082824707031
    5. '_terms' → logprob: -10.627082824707031
    6. '_difference' → logprob: -12.752082824707031
    7. ' _' → logprob: -12.877082824707031
    8. '_' → logprob: -13.252082824707031
    9. '_values' → logprob: -13.377082824707031
    10. '-' → logprob: -14.002082824707031

Token 51: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10059740394353867
    2. ' )' → logprob: -2.350597381591797
    3. ' //' → logprob: -8.600597381591797
    4. ')//' → logprob: -8.725597381591797
    5. '//' → logprob: -10.475597381591797
    6. ')/' → logprob: -12.475597381591797
    7. '`)' → logprob: -12.475597381591797
    8. ' ' → logprob: -12.725597381591797
    9. '')' → logprob: -13.850597381591797
    10. '```' → logprob: -14.350597381591797

Token 52: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.007745752111077309
    2. ' /' → logprob: -5.507745742797852
    3. '//' → logprob: -6.007745742797852
    4. '<|end|>' → logprob: -7.757745742797852
    5. ' ' → logprob: -8.132745742797852
    6. ' +' → logprob: -9.632745742797852
    7. '/' → logprob: -9.757745742797852
    8. ' #' → logprob: -9.757745742797852
    9. ' *' → logprob: -9.882745742797852
    10. '```' → logprob: -10.007745742797852

Token 53: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.625024795532227
    3. '1' → logprob: -15.125024795532227
    4. '```' → logprob: -17.375024795532227
    5. '۲' → logprob: -18.812524795532227
    6. ' ' → logprob: -19.562524795532227
    7. '２' → logprob: -20.062524795532227
    8. '٢' → logprob: -20.062524795532227
    9. '0' → logprob: -20.187524795532227
    10. '202' → logprob: -20.187524795532227

Token 54: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.054500666621607e-06
    2. '1' → logprob: -13.37500286102295
    3. ' ' → logprob: -13.50000286102295
    4. '```' → logprob: -17.000003814697266
    5. '۲' → logprob: -19.375003814697266
    6. '0' → logprob: -20.312503814697266
    7. '202' → logprob: -20.687503814697266
    8. '٢' → logprob: -20.687503814697266
    9. '２' → logprob: -20.875003814697266
    10. '>' → logprob: -21.000003814697266

Token 55: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08837961405515671
    2. '<|end|>' → logprob: -2.5883796215057373
    3. 'result' → logprob: -5.963379383087158
    4. '+' → logprob: -5.963379383087158
    5. ')' → logprob: -6.838379383087158
    6. '
' → logprob: -7.213379383087158
    7. 'sum' → logprob: -7.588379383087158
    8. '#' → logprob: -7.963379383087158
    9. 'for' → logprob: -8.338379859924316
    10. ' print' → logprob: -8.338379859924316

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020574118942022324
    2. '=' → logprob: -4.64557409286499
    3. '_' → logprob: -5.39557409286499
    4. ' +=' → logprob: -5.77057409286499
    5. ' ' → logprob: -5.89557409286499
    6. ' _' → logprob: -8.770574569702148
    7. '_space' → logprob: -9.645574569702148
    8. ' +' → logprob: -10.145574569702148
    9. '+' → logprob: -10.895574569702148
    10. 'space' → logprob: -11.645574569702148

Token 58: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -1.1489393711090088
    2. ' start' → logprob: -1.3989393711090088
    3. 'sum' → logprob: -1.6489393711090088
    4. ' difference' → logprob: -2.273939371109009
    5. 'start' → logprob: -2.523939371109009
    6. 'difference' → logprob: -2.898939371109009
    7. ' end' → logprob: -5.77393913269043
    8. 'end' → logprob: -7.27393913269043
    9. ' result' → logprob: -7.64893913269043
    10. ' term' → logprob: -7.77393913269043

Token 59: '_terms' (ID: 96676)
  Prédit: '_terms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_terms' → logprob: -2.963691804325208e-05
    2. '_' → logprob: -10.625029563903809
    3. '_tokens' → logprob: -12.500029563903809
    4. '_term' → logprob: -14.625029563903809
    5. ' _' → logprob: -14.875029563903809
    6. '_results' → logprob: -15.750029563903809
    7. '_sum' → logprob: -15.750029563903809
    8. '_tasks' → logprob: -16.375030517578125
    9. '_difference' → logprob: -16.625030517578125
    10. '_steps' → logprob: -16.750030517578125

Token 60: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.05375422164797783
    2. ' start' → logprob: -3.0537543296813965
    3. '1' → logprob: -5.5537543296813965
    4. 'difference' → logprob: -6.8037543296813965
    5. 'end' → logprob: -9.803753852844238
    6. ' difference' → logprob: -10.053753852844238
    7. ' ' → logprob: -10.428753852844238
    8. '0' → logprob: -11.553753852844238
    9. '(start' → logprob: -11.928753852844238
    10. '	start' → logprob: -12.678753852844238

Token 62: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -13.625001907348633
    3. 'value' → logprob: -16.000001907348633
    4. '_val' → logprob: -16.375001907348633
    5. ' _' → logprob: -17.375001907348633
    6. '_VALUE' → logprob: -18.000001907348633
    7. '_Value' → logprob: -18.125001907348633
    8. '_values' → logprob: -18.250001907348633
    9. '_difference' → logprob: -18.625001907348633
    10. '_token' → logprob: -19.500001907348633

Token 63: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25193706154823303
    2. '(result' → logprob: -1.5019370317459106
    3. '()' → logprob: -13.001936912536621
    4. '('' → logprob: -13.876936912536621
    5. '((' → logprob: -14.001936912536621
    6. '("("' → logprob: -14.126936912536621
    7. '(end' → logprob: -14.376936912536621
    8. ' (' → logprob: -14.376936912536621
    9. '(res' → logprob: -15.001936912536621
    10. '(sum' → logprob: -15.376936912536621

Token 66: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. ' )' → logprob: -12.750003814697266
    3. ')`' → logprob: -14.625003814697266
    4. '))' → logprob: -14.750003814697266
    5. '`)' → logprob: -15.500003814697266
    6. ')
' → logprob: -17.250003814697266
    7. '')' → logprob: -18.125003814697266
    8. '```' → logprob: -18.375003814697266
    9. '）' → logprob: -19.000003814697266
    10. '#' → logprob: -19.000003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 64
Tokens correctement prédits (1ère position, stricte): 28
Tokens correctement prédits (1ère position, avec adaptation): 28
Tokens correctement prédits (top 10): 46
Précision stricte (1ère position): 43.75%
Précision adaptée (1ère position): 43.75%
Précision (top 10): 71.88%
================================================================================
