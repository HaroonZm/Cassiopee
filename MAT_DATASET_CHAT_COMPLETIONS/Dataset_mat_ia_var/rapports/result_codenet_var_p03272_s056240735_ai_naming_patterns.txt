================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_first_variable, input_second_variable = map(int, input().split())
output_result = input_first_variable - input_second_variable + 1
print(output_result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_first' (ID: 29347)
  → Token d'amorce (pas de prédiction)

Token 2: '_variable' (ID: 49092)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6193501353263855
    2. '=' → logprob: -1.3693501949310303
    3. '[' → logprob: -2.2443501949310303
    4. '.' → logprob: -3.1193501949310303
    5. '+' → logprob: -3.8693501949310303
    6. ' =' → logprob: -4.369349956512451
    7. '```' → logprob: -4.744349956512451
    8. ')' → logprob: -4.994349956512451
    9. ' ' → logprob: -6.619349956512451
    10. '<|end|>' → logprob: -7.494349956512451

Token 4: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5337478518486023
    2. '_' → logprob: -2.158747911453247
    3. ' ' → logprob: -2.158747911453247
    4. '=' → logprob: -2.533747911453247
    5. ' =' → logprob: -3.033747911453247
    6. ' input' → logprob: -4.158747673034668
    7. ''' → logprob: -5.033747673034668
    8. 'space' → logprob: -5.158747673034668
    9. 'output' → logprob: -5.658747673034668
    10. ' ,' → logprob: -5.783747673034668

Token 5: '_second' (ID: 67724)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.023014256730675697
    2. '.' → logprob: -4.773014068603516
    3. '[' → logprob: -4.898014068603516
    4. ')' → logprob: -5.773014068603516
    5. '=' → logprob: -6.898014068603516
    6. '_name' → logprob: -7.523014068603516
    7. '```' → logprob: -7.523014068603516
    8. ',' → logprob: -8.398014068603516
    9. ' =' → logprob: -9.023014068603516
    10. '._' → logprob: -9.148014068603516

Token 6: '_variable' (ID: 49092)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10872676223516464
    2. '=' → logprob: -2.608726739883423
    3. ',' → logprob: -4.233726978302002
    4. '.' → logprob: -5.358726978302002
    5. ' =' → logprob: -5.483726978302002
    6. ')' → logprob: -5.608726978302002
    7. '+' → logprob: -7.858726978302002
    8. '```' → logprob: -8.233726501464844
    9. '[' → logprob: -8.483726501464844
    10. '_name' → logprob: -8.608726501464844

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39060211181640625
    2. '_' → logprob: -1.3906021118164062
    3. ',' → logprob: -3.5156021118164062
    4. '.' → logprob: -4.390602111816406
    5. ' =' → logprob: -4.390602111816406
    6. ')' → logprob: -4.890602111816406
    7. '+' → logprob: -5.015602111816406
    8. '```' → logprob: -6.140602111816406
    9. '[' → logprob: -7.140602111816406
    10. ' ' → logprob: -7.140602111816406

Token 8: ' map' (ID: 4014)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2706522047519684
    2. 'input' → logprob: -1.520652174949646
    3. ' ' → logprob: -4.5206522941589355
    4. ' map' → logprob: -5.6456522941589355
    5. ' []' → logprob: -6.1456522941589355
    6. ' int' → logprob: -8.020651817321777
    7. 'map' → logprob: -8.020651817321777
    8. '[]' → logprob: -8.270651817321777
    9. ' [' → logprob: -8.395651817321777
    10. ' None' → logprob: -8.895651817321777

Token 9: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31705349683761597
    2. '<|end|>' → logprob: -1.8170535564422607
    3. '(lambda' → logprob: -2.5670535564422607
    4. '(int' → logprob: -4.317053318023682
    5. '```' → logprob: -4.942053318023682
    6. '(str' → logprob: -5.942053318023682
    7. '<|end|>' → logprob: -6.192053318023682
    8. ' (' → logprob: -6.817053318023682
    9. ')' → logprob: -7.067053318023682
    10. '[int' → logprob: -7.192053318023682

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.009826567955315113
    2. ')' → logprob: -5.38482666015625
    3. 'input' → logprob: -5.38482666015625
    4. '(' → logprob: -8.38482666015625
    5. '(user' → logprob: -9.13482666015625
    6. ',input' → logprob: -9.13482666015625
    7. ' input' → logprob: -9.88482666015625
    8. 'user' → logprob: -10.88482666015625
    9. '```' → logprob: -11.00982666015625
    10. '[input' → logprob: -11.25982666015625

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.038078442215919495
    2. ' input' → logprob: -3.288078546524048
    3. '(input' → logprob: -10.538078308105469
    4. ')' → logprob: -11.538078308105469
    5. ',input' → logprob: -15.538078308105469
    6. '	input' → logprob: -16.66307830810547
    7. ' ' → logprob: -16.66307830810547
    8. 'user' → logprob: -16.78807830810547
    9. '```' → logprob: -16.91307830810547
    10. '=input' → logprob: -16.91307830810547

Token 12: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7151556611061096
    2. '())' → logprob: -0.8401556611061096
    3. '(' → logprob: -2.840155601501465
    4. '().' → logprob: -5.215155601501465
    5. ')' → logprob: -5.340155601501465
    6. '(()' → logprob: -5.965155601501465
    7. '('' → logprob: -6.340155601501465
    8. '`()' → logprob: -6.965155601501465
    9. '());' → logprob: -6.965155601501465
    10. '();)' → logprob: -7.465155601501465

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003601336502470076
    2. 'strip' → logprob: -8.000360488891602
    3. 'rstrip' → logprob: -11.000360488891602
    4. ' split' → logprob: -12.000360488891602
    5. 'spl' → logprob: -14.000360488891602
    6. 'read' → logprob: -14.625360488891602
    7. 'startswith' → logprob: -15.875360488891602
    8. 's' → logprob: -16.0003604888916
    9. 'replace' → logprob: -16.1253604888916
    10. ')' → logprob: -16.5003604888916

Token 14: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02330615743994713
    2. ')' → logprob: -4.273306369781494
    3. '()' → logprob: -5.648306369781494
    4. '()))' → logprob: -5.648306369781494
    5. '))' → logprob: -6.398306369781494
    6. '(' → logprob: -8.648305892944336
    7. '('' → logprob: -8.898305892944336
    8. ' ())' → logprob: -10.273305892944336
    9. '(','' → logprob: -12.398305892944336
    10. '`)' → logprob: -12.523305892944336

Token 15: 'output' (ID: 6130)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.37453722953796387
    2. '#' → logprob: -1.4995372295379639
    3. '+
' → logprob: -3.749537229537964
    4. '*' → logprob: -4.124537467956543
    5. 'if' → logprob: -4.249537467956543
    6. ',' → logprob: -4.749537467956543
    7. '.' → logprob: -5.624537467956543
    8. ';' → logprob: -5.624537467956543
    9. '<|end|>' → logprob: -5.749537467956543
    10. ')' → logprob: -5.749537467956543

Token 16: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06895053386688232
    2. '_' → logprob: -2.818950653076172
    3. '[' → logprob: -5.568950653076172
    4. '()' → logprob: -7.193950653076172
    5. ''' → logprob: -7.693950653076172
    6. '```' → logprob: -7.818950653076172
    7. '=' → logprob: -8.068950653076172
    8. '1' → logprob: -8.693950653076172
    9. '"' → logprob: -8.693950653076172
    10. ')' → logprob: -9.068950653076172

Token 17: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17453113198280334
    2. '(' → logprob: -3.0495312213897705
    3. ' =' → logprob: -3.1745312213897705
    4. '<|end|>' → logprob: -3.1745312213897705
    5. ')' → logprob: -4.299530982971191
    6. '+' → logprob: -5.424530982971191
    7. '_' → logprob: -6.049530982971191
    8. '()' → logprob: -6.174530982971191
    9. ' +=' → logprob: -6.799530982971191
    10. '[' → logprob: -7.049530982971191

Token 18: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4741407036781311
    2. 'input' → logprob: -0.9741407036781311
    3. '0' → logprob: -10.599141120910645
    4. ' ' → logprob: -11.224141120910645
    5. '(input' → logprob: -11.849141120910645
    6. 'int' → logprob: -12.099141120910645
    7. 'output' → logprob: -12.724141120910645
    8. ' max' → logprob: -13.099141120910645
    9. ' int' → logprob: -13.224141120910645
    10. 'max' → logprob: -13.599141120910645

Token 19: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.21922597289085388
    2. '_' → logprob: -1.8442260026931763
    3. 'First' → logprob: -4.219225883483887
    4. '_second' → logprob: -4.594225883483887
    5. '(' → logprob: -5.094225883483887
    6. '_First' → logprob: -6.469225883483887
    7. '()' → logprob: -6.719225883483887
    8. '_FIRST' → logprob: -7.094225883483887
    9. '```' → logprob: -7.094225883483887
    10. ')' → logprob: -7.219225883483887

Token 20: '_variable' (ID: 49092)
  Prédit: '_variable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_variable' → logprob: -0.03825940191745758
    2. '_' → logprob: -3.288259506225586
    3. '_output' → logprob: -9.288259506225586
    4. '_variables' → logprob: -10.038259506225586
    5. '_vari' → logprob: -10.163259506225586
    6. '_var' → logprob: -11.413259506225586
    7. '_token' → logprob: -12.538259506225586
    8. '_second' → logprob: -12.788259506225586
    9. ' _' → logprob: -12.913259506225586
    10. ')_' → logprob: -13.288259506225586

Token 21: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09775833785533905
    2. ' +' → logprob: -2.4727582931518555
    3. ' ' → logprob: -5.4727582931518555
    4. '*' → logprob: -6.2227582931518555
    5. ')' → logprob: -7.4727582931518555
    6. '_' → logprob: -7.9727582931518555
    7. '<|end|>' → logprob: -8.222758293151855
    8. ''' → logprob: -8.472758293151855
    9. ' *' → logprob: -8.597758293151855
    10. ' +=' → logprob: -8.847758293151855

Token 22: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3486567735671997
    2. ' input' → logprob: -1.2236567735671997
    3. '1' → logprob: -8.59865665435791
    4. ' ' → logprob: -10.97365665435791
    5. '>' → logprob: -13.09865665435791
    6. '_' → logprob: -13.22365665435791
    7. '0' → logprob: -13.59865665435791
    8. '_input' → logprob: -13.84865665435791
    9. 'output' → logprob: -13.97365665435791
    10. '2' → logprob: -14.47365665435791

Token 23: '_second' (ID: 67724)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7635287642478943
    2. '_second' → logprob: -1.263528823852539
    3. '(' → logprob: -2.263528823852539
    4. ')' → logprob: -3.388528823852539
    5. '_first' → logprob: -3.388528823852539
    6. '"' → logprob: -3.513528823852539
    7. 'Second' → logprob: -4.638528823852539
    8. ''' → logprob: -4.638528823852539
    9. '```' → logprob: -5.013528823852539
    10. 'First' → logprob: -5.138528823852539

Token 24: '_variable' (ID: 49092)
  Prédit: '_variable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_variable' → logprob: -0.09124552458524704
    2. '_' → logprob: -2.466245412826538
    3. '_var' → logprob: -6.716245651245117
    4. ' _' → logprob: -8.466245651245117
    5. '_token' → logprob: -8.841245651245117
    6. '_variables' → logprob: -9.216245651245117
    7. '__' → logprob: -9.216245651245117
    8. '_input' → logprob: -9.591245651245117
    9. ')_' → logprob: -10.091245651245117
    10. '_vari' → logprob: -10.216245651245117

Token 25: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09943746030330658
    2. '1' → logprob: -2.8494374752044678
    3. ' input' → logprob: -3.8494374752044678
    4. '10' → logprob: -5.224437236785889
    5. ' int' → logprob: -5.849437236785889
    6. ' (' → logprob: -5.974437236785889
    7. 'input' → logprob: -6.724437236785889
    8. '2' → logprob: -6.974437236785889
    9. '100' → logprob: -7.349437236785889
    10. '5' → logprob: -8.099437713623047

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15411145985126495
    2. 'input' → logprob: -3.029111385345459
    3. '10' → logprob: -3.529111385345459
    4. '100' → logprob: -3.904111385345459
    5. '2' → logprob: -4.404111385345459
    6. '0' → logprob: -4.404111385345459
    7. 'int' → logprob: -5.279111385345459
    8. '42' → logprob: -5.529111385345459
    9. ' ' → logprob: -5.904111385345459
    10. '5' → logprob: -6.029111385345459

Token 28: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: '(output' (ID: 22485)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03807535022497177
    2. '(output' → logprob: -3.2880754470825195
    3. '(input' → logprob: -11.41307544708252
    4. '(open' → logprob: -12.03807544708252
    5. '("("' → logprob: -12.03807544708252
    6. ' (' → logprob: -12.41307544708252
    7. '('' → logprob: -13.41307544708252
    8. '()' → logprob: -13.91307544708252
    9. '(print' → logprob: -14.16307544708252
    10. '(
' → logprob: -14.41307544708252

Token 31: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.0006429764907807112
    2. ')_' → logprob: -8.125642776489258
    3. '_' → logprob: -9.000642776489258
    4. '_output' → logprob: -9.250642776489258
    5. ')' → logprob: -10.250642776489258
    6. '_res' → logprob: -10.375642776489258
    7. '_results' → logprob: -10.750642776489258
    8. '_)' → logprob: -10.750642776489258
    9. ' _' → logprob: -11.625642776489258
    10. '_r' → logprob: -12.125642776489258

Token 32: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.226628895296017e-06
    2. ' )' → logprob: -12.125007629394531
    3. '))' → logprob: -13.625007629394531
    4. '`)' → logprob: -15.125007629394531
    5. ')`' → logprob: -16.00000762939453
    6. ')
' → logprob: -16.50000762939453
    7. '')' → logprob: -16.62500762939453
    8. '()' → logprob: -18.12500762939453
    9. '#' → logprob: -18.12500762939453
    10. '(' → logprob: -18.25000762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 30
Tokens correctement prédits (1ère position, stricte): 9
Tokens correctement prédits (1ère position, avec adaptation): 9
Tokens correctement prédits (top 10): 19
Précision stricte (1ère position): 30.00%
Précision adaptée (1ère position): 30.00%
Précision (top 10): 63.33%
================================================================================
