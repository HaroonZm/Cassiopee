================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
getIt = lambda: int(__import__('builtins').input())
chr_count = 0
countup = 0
weird_range = lambda a: list(map(lambda x: x+1, range(a)))
for num in weird_range(getIt()):
    if [num][0] % 2:
        chr_count = ~-0
        judge = lambda m: num % m == 0
        for div in weird_range(num):
            chr_count += 1 if judge(div) else 0
        countup += (chr_count == 8)
print(countup)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'get' (ID: 522)
  → Token d'amorce (pas de prédiction)

Token 1: 'It' (ID: 3206)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' lambda' (ID: 27871)
  Prédit: ' require'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' require' → logprob: -1.5012704133987427
    2. ' .' → logprob: -1.6262704133987427
    3. '.get' → logprob: -1.8762704133987427
    4. '.' → logprob: -2.001270294189453
    5. 'require' → logprob: -2.251270294189453
    6. ' get' → logprob: -2.501270294189453
    7. 'get' → logprob: -3.501270294189453
    8. ' new' → logprob: -3.751270294189453
    9. '.require' → logprob: -3.751270294189453
    10. '```' → logprob: -4.501270294189453

Token 4: ':' (ID: 25)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4539215564727783
    2. ' (' → logprob: -1.7039215564727783
    3. ' x' → logprob: -1.9539215564727783
    4. '(' → logprob: -2.7039215564727783
    5. ' a' → logprob: -3.0789215564727783
    6. '.' → logprob: -3.2039215564727783
    7. ' ,' → logprob: -3.3289215564727783
    8. ' s' → logprob: -3.3289215564727783
    9. ' )' → logprob: -3.3289215564727783
    10. ' get' → logprob: -3.4539215564727783

Token 5: ' int' (ID: 677)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.44851911067962646
    2. ' get' → logprob: -1.3235191106796265
    3. 'get' → logprob: -3.448519229888916
    4. ' ' → logprob: -4.323519229888916
    5. 'None' → logprob: -4.448519229888916
    6. ' []' → logprob: -4.573519229888916
    7. ' getattr' → logprob: -4.698519229888916
    8. ' True' → logprob: -5.323519229888916
    9. ' __' → logprob: -5.823519229888916
    10. ' globals' → logprob: -6.448519229888916

Token 6: '(__' (ID: 11782)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017500491812825203
    2. '.' → logprob: -4.142500400543213
    3. '(
' → logprob: -8.017500877380371
    4. ''' → logprob: -8.392500877380371
    5. '40' → logprob: -8.392500877380371
    6. '('' → logprob: -9.142500877380371
    7. '```' → logprob: -9.517500877380371
    8. ' (' → logprob: -9.642500877380371
    9. '()' → logprob: -10.142500877380371
    10. '"' → logprob: -10.267500877380371

Token 7: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.20399394631385803
    2. 'name' → logprob: -2.328994035720825
    3. 'built' → logprob: -2.453994035720825
    4. 'file' → logprob: -7.578993797302246
    5. 'build' → logprob: -8.203993797302246
    6. 'builtin' → logprob: -9.078993797302246
    7. 'code' → logprob: -9.328993797302246
    8. 'version' → logprob: -10.078993797302246
    9. 'stdin' → logprob: -10.078993797302246
    10. '_' → logprob: -10.828993797302246

Token 8: '__('' (ID: 54460)
  Prédit: '__(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__('' → logprob: -0.7184482216835022
    2. '(' → logprob: -0.8434482216835022
    3. '('' → logprob: -3.4684481620788574
    4. '__("' → logprob: -3.7184481620788574
    5. '("("' → logprob: -4.343448162078857
    6. '__' → logprob: -5.343448162078857
    7. '__(
' → logprob: -6.343448162078857
    8. '__(' → logprob: -6.468448162078857
    9. '("' → logprob: -6.968448162078857
    10. '('__' → logprob: -7.593448162078857

Token 9: 'built' (ID: 81936)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.38640132546424866
    2. 'sys' → logprob: -1.6364012956619263
    3. 'math' → logprob: -2.386401414871216
    4. 're' → logprob: -4.011401176452637
    5. 'o' → logprob: -5.136401176452637
    6. 'time' → logprob: -6.261401176452637
    7. 'm' → logprob: -6.761401176452637
    8. 'sy' → logprob: -6.886401176452637
    9. 'built' → logprob: -6.886401176452637
    10. 'random' → logprob: -7.136401176452637

Token 10: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0005575587856583297
    2. 'in' → logprob: -7.5005574226379395
    3. '```' → logprob: -12.875557899475098
    4. 'int' → logprob: -14.125557899475098
    5. 'i' → logprob: -14.875557899475098
    6. '``' → logprob: -15.500557899475098
    7. '-' → logprob: -16.50055694580078
    8. '__' → logprob: -16.62555694580078
    9. 'inspect' → logprob: -16.87555694580078
    10. '`' → logprob: -17.00055694580078

Token 11: '').' (ID: 3426)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.09076446294784546
    2. ')' → logprob: -3.4657645225524902
    3. ').__' → logprob: -3.5907645225524902
    4. '').' → logprob: -4.34076452255249
    5. '.' → logprob: -5.21576452255249
    6. '')' → logprob: -6.34076452255249
    7. ')['' → logprob: -6.46576452255249
    8. '))' → logprob: -6.59076452255249
    9. '.get' → logprob: -7.09076452255249
    10. '')['' → logprob: -7.46576452255249

Token 12: 'input' (ID: 2586)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.5327264666557312
    2. 'input' → logprob: -1.157726526260376
    3. 'int' → logprob: -3.282726526260376
    4. 'eval' → logprob: -3.657726526260376
    5. '__' → logprob: -4.282726287841797
    6. 'abs' → logprob: -4.782726287841797
    7. 'max' → logprob: -5.157726287841797
    8. 'exec' → logprob: -5.907726287841797
    9. 'len' → logprob: -6.532726287841797
    10. 'exit' → logprob: -7.157726287841797

Token 13: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6104471683502197
    2. '())' → logprob: -1.4854471683502197
    3. ')' → logprob: -1.8604471683502197
    4. '()' → logprob: -2.9854471683502197
    5. '('' → logprob: -4.735446929931641
    6. '(()' → logprob: -5.610446929931641
    7. ')(' → logprob: -5.985446929931641
    8. '`' → logprob: -6.110446929931641
    9. '`()' → logprob: -6.235446929931641
    10. '```' → logprob: -6.735446929931641

Token 14: 'chr' (ID: 33902)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015300977975130081
    2. '()' → logprob: -7.251530170440674
    3. '(
' → logprob: -8.001529693603516
    4. '.' → logprob: -8.751529693603516
    5. ')' → logprob: -9.501529693603516
    6. ' (' → logprob: -9.626529693603516
    7. ',' → logprob: -9.876529693603516
    8. ' ' → logprob: -10.876529693603516
    9. '('' → logprob: -11.126529693603516
    10. '\' → logprob: -11.376529693603516

Token 15: '_count' (ID: 7536)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002072586677968502
    2. ')' → logprob: -7.002072811126709
    3. '('' → logprob: -7.877072811126709
    4. '()' → logprob: -8.37707233428955
    5. '(
' → logprob: -9.00207233428955
    6. 'a' → logprob: -10.00207233428955
    7. ' (' → logprob: -10.12707233428955
    8. '(

' → logprob: -10.62707233428955
    9. '\(' → logprob: -10.75207233428955
    10. '("("' → logprob: -11.00207233428955

Token 16: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12627963721752167
    2. '=' → logprob: -2.251279592514038
    3. '[' → logprob: -5.376279830932617
    4. '('' → logprob: -5.876279830932617
    5. ' =' → logprob: -6.126279830932617
    6. '_' → logprob: -6.376279830932617
    7. 's' → logprob: -6.876279830932617
    8. ')' → logprob: -7.626279830932617
    9. ''' → logprob: -9.001279830932617
    10. '['' → logprob: -9.751279830932617

Token 17: ' ' (ID: 220)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.5940691232681274
    2. '{}' → logprob: -0.8440691232681274
    3. 'get' → logprob: -4.719069004058838
    4. ' get' → logprob: -5.344069004058838
    5. ' lambda' → logprob: -6.469069004058838
    6. ' ' → logprob: -7.094069004058838
    7. 'lambda' → logprob: -7.594069004058838
    8. '{' → logprob: -8.219069480895996
    9. ' {' → logprob: -8.469069480895996
    10. ' defaultdict' → logprob: -8.469069480895996

Token 18: '0' (ID: 15)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.013888328336179256
    2. 'get' → logprob: -4.388888359069824
    3. '{' → logprob: -7.138888359069824
    4. 'dict' → logprob: -8.513888359069824
    5. 'lambda' → logprob: -8.638888359069824
    6. '{}
' → logprob: -10.013888359069824
    7. ' {}' → logprob: -10.263888359069824
    8. '0' → logprob: -10.763888359069824
    9. 'default' → logprob: -11.138888359069824
    10. 'chr' → logprob: -11.513888359069824

Token 19: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47226855158805847
    2. '<|end|>' → logprob: -1.3472685813903809
    3. '\n' → logprob: -2.472268581390381
    4. 'newline' → logprob: -4.722268581390381
    5. '\' → logprob: -4.847268581390381
    6. '+' → logprob: -5.222268581390381
    7. '' → logprob: -6.472268581390381
    8. '<|end|>' → logprob: -6.472268581390381
    9. ' 
' → logprob: -7.347268581390381
    10. '```' → logprob: -7.347268581390381

Token 20: 'count' (ID: 5420)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9281318187713623
    2. 'newline' → logprob: -1.9281318187713623
    3. '\n' → logprob: -2.0531318187713623
    4. 'while' → logprob: -2.3031318187713623
    5. 'for' → logprob: -2.9281318187713623
    6. '\' → logprob: -2.9281318187713623
    7. 'c' → logprob: -3.5531318187713623
    8. '' → logprob: -3.6781318187713623
    9. 'chr' → logprob: -4.428132057189941
    10. 'n' → logprob: -4.803132057189941

Token 21: 'up' (ID: 817)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008617881685495377
    2. 's' → logprob: -5.633617877960205
    3. 'er' → logprob: -6.758617877960205
    4. ' =' → logprob: -6.883617877960205
    5. '(' → logprob: -7.258617877960205
    6. '_chars' → logprob: -7.883617877960205
    7. '_=' → logprob: -7.883617877960205
    8. '_chr' → logprob: -8.133618354797363
    9. '=' → logprob: -8.508618354797363
    10. 'ing' → logprob: -9.133618354797363

Token 22: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9252228736877441
    2. '=' → logprob: -1.5502228736877441
    3. ' =' → logprob: -1.8002228736877441
    4. '()' → logprob: -1.8002228736877441
    5. '(' → logprob: -3.050222873687744
    6. '_=' → logprob: -5.300222873687744
    7. '_chr' → logprob: -7.300222873687744
    8. '_char' → logprob: -7.300222873687744
    9. '('' → logprob: -7.425222873687744
    10. '_count' → logprob: -7.675222873687744

Token 23: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.518059492111206
    2. ' ' → logprob: -1.518059492111206
    3. '1' → logprob: -1.893059492111206
    4. 'lambda' → logprob: -3.893059492111206
    5. ' lambda' → logprob: -4.393059730529785
    6. '(lambda' → logprob: -7.018059730529785
    7. 'chr' → logprob: -8.518059730529785
    8. 'int' → logprob: -8.893059730529785
    9. 'range' → logprob: -9.018059730529785
    10. '(' → logprob: -9.643059730529785

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2608908414840698
    2. '1' → logprob: -2.2608909606933594
    3. 'lambda' → logprob: -2.2608909606933594
    4. ' ' → logprob: -4.385890960693359
    5. 'chr' → logprob: -6.010890960693359
    6. ' lambda' → logprob: -6.260890960693359
    7. 'int' → logprob: -7.010890960693359
    8. '100' → logprob: -7.760890960693359
    9. 'range' → logprob: -7.760890960693359
    10. '[' → logprob: -7.760890960693359

Token 25: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26092344522476196
    2. '<|end|>' → logprob: -2.885923385620117
    3. 'while' → logprob: -3.135923385620117
    4. '\n' → logprob: -3.385923385620117
    5. 'for' → logprob: -3.885923385620117
    6. 'c' → logprob: -4.385923385620117
    7. '' → logprob: -5.010923385620117
    8. '\' → logprob: -5.260923385620117
    9. ' while' → logprob: -5.260923385620117
    10. 'i' → logprob: -5.260923385620117

Token 26: 'we' (ID: 854)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0799731016159058
    2. 'for' → logprob: -1.7049731016159058
    3. 'while' → logprob: -2.2049732208251953
    4. '
' → logprob: -2.3299732208251953
    5. 'i' → logprob: -3.0799732208251953
    6. 'n' → logprob: -3.0799732208251953
    7. '\n' → logprob: -3.5799732208251953
    8. '' → logprob: -4.204973220825195
    9. '\' → logprob: -4.329973220825195
    10. ',' → logprob: -4.579973220825195

Token 27: 'ird' (ID: 2716)
  Prédit: 'ek'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ek' → logprob: -0.9600395560264587
    2. 'ight' → logprob: -1.4600396156311035
    3. 'b' → logprob: -1.5850396156311035
    4. 'ak' → logprob: -3.0850396156311035
    5. 'ighted' → logprob: -3.4600396156311035
    6. 'ights' → logprob: -3.7100396156311035
    7. 'l' → logprob: -4.0850396156311035
    8. 'ather' → logprob: -4.9600396156311035
    9. 'igh' → logprob: -4.9600396156311035
    10. 'eks' → logprob: -5.5850396156311035

Token 28: '_range' (ID: 22022)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.515006184577942
    2. '=' → logprob: -1.765006184577942
    3. ' =' → logprob: -1.890006184577942
    4. '_' → logprob: -2.1400060653686523
    5. 'ness' → logprob: -2.2650060653686523
    6. '_var' → logprob: -2.5150060653686523
    7. '_char' → logprob: -3.1400060653686523
    8. '_chars' → logprob: -3.7650060653686523
    9. '_counter' → logprob: -4.015006065368652
    10. 'ly' → logprob: -4.765006065368652

Token 29: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007179918233305216
    2. '=' → logprob: -6.0071797370910645
    3. ' =' → logprob: -6.2571797370910645
    4. '((' → logprob: -7.2571797370910645
    5. ' (' → logprob: -7.6321797370910645
    6. 's' → logprob: -7.8821797370910645
    7. '=(' → logprob: -7.8821797370910645
    8. '_' → logprob: -8.757180213928223
    9. '=lambda' → logprob: -9.132180213928223
    10. '("("' → logprob: -9.132180213928223

Token 30: ' lambda' (ID: 27871)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4433736205101013
    2. ' range' → logprob: -1.068373680114746
    3. ' lambda' → logprob: -5.568373680114746
    4. '(range' → logprob: -5.568373680114746
    5. 'lambda' → logprob: -5.818373680114746
    6. '(' → logprob: -7.568373680114746
    7. '[' → logprob: -7.568373680114746
    8. ' xrange' → logprob: -7.693373680114746
    9. ' ' → logprob: -8.068373680114746
    10. '10' → logprob: -8.318373680114746

Token 31: ' a' (ID: 261)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7376368641853333
    2. 'n' → logprob: -1.3626368045806885
    3. 'start' → logprob: -3.1126368045806885
    4. 's' → logprob: -3.3626368045806885
    5. ' x' → logprob: -3.3626368045806885
    6. 'x' → logprob: -3.3626368045806885
    7. ' start' → logprob: -3.4876368045806885
    8. ' s' → logprob: -3.4876368045806885
    9. 'a' → logprob: -3.8626368045806885
    10. ' a' → logprob: -4.487637042999268

Token 32: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3322315514087677
    2. ' n' → logprob: -2.3322315216064453
    3. ' a' → logprob: -2.4572315216064453
    4. ' ,' → logprob: -3.7072315216064453
    5. 'a' → logprob: -4.082231521606445
    6. ',a' → logprob: -4.332231521606445
    7. ',b' → logprob: -4.332231521606445
    8. ':' → logprob: -4.457231521606445
    9. ',n' → logprob: -4.832231521606445
    10. ' b' → logprob: -5.457231521606445

Token 33: ' list' (ID: 1562)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.23737967014312744
    2. ' range' → logprob: -1.6123796701431274
    3. 'a' → logprob: -5.862379550933838
    4. '(range' → logprob: -5.987379550933838
    5. ' iter' → logprob: -6.612379550933838
    6. ' a' → logprob: -6.737379550933838
    7. '(a' → logprob: -7.362379550933838
    8. 'list' → logprob: -7.612379550933838
    9. ' xrange' → logprob: -7.612379550933838
    10. 'iter' → logprob: -7.612379550933838

Token 34: '(map' (ID: 16946)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.008681466802954674
    2. '(' → logprob: -4.758681297302246
    3. '(filter' → logprob: -9.758681297302246
    4. 'range' → logprob: -12.883681297302246
    5. '```' → logprob: -13.633681297302246
    6. '	range' → logprob: -14.133681297302246
    7. '(__' → logprob: -14.258681297302246
    8. '(

' → logprob: -14.508681297302246
    9. '(
' → logprob: -14.633681297302246
    10. '(`' → logprob: -14.883681297302246

Token 35: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.5034942626953125
    2. '(int' → logprob: -2.0034942626953125
    3. '(chr' → logprob: -2.1284942626953125
    4. '(' → logprob: -2.2534942626953125
    5. '(str' → logprob: -3.3784942626953125
    6. '(ord' → logprob: -7.0034942626953125
    7. '(abs' → logprob: -7.2534942626953125
    8. 'chr' → logprob: -8.378494262695312
    9. '(eval' → logprob: -8.628494262695312
    10. 'str' → logprob: -8.628494262695312

Token 36: ' x' (ID: 1215)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.7036116123199463
    2. 'lambda' → logprob: -1.7036116123199463
    3. ' chr' → logprob: -2.5786116123199463
    4. ' lambda' → logprob: -2.7036116123199463
    5. 'str' → logprob: -2.9536116123199463
    6. 'x' → logprob: -3.4536116123199463
    7. 'int' → logprob: -3.4536116123199463
    8. ' x' → logprob: -4.078611373901367
    9. ' str' → logprob: -4.203611373901367
    10. ' int' → logprob: -5.078611373901367

Token 37: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00758994510397315
    2. ' :' → logprob: -5.632589817047119
    3. ':int' → logprob: -6.257589817047119
    4. ',' → logprob: -6.882589817047119
    5. ':a' → logprob: -8.007590293884277
    6. 'a' → logprob: -8.632590293884277
    7. ':x' → logprob: -8.882590293884277
    8. ',a' → logprob: -9.257590293884277
    9. 'chr' → logprob: -9.882590293884277
    10. ':
' → logprob: -10.132590293884277

Token 38: ' x' (ID: 1215)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -1.346469759941101
    2. 'x' → logprob: -1.471469759941101
    3. 'str' → logprob: -2.2214698791503906
    4. 'int' → logprob: -2.3464698791503906
    5. 'a' → logprob: -2.3464698791503906
    6. ' x' → logprob: -2.5964698791503906
    7. 'lambda' → logprob: -3.3464698791503906
    8. ' str' → logprob: -3.7214698791503906
    9. ' int' → logprob: -3.9714698791503906
    10. ' a' → logprob: -4.221469879150391

Token 39: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3639845550060272
    2. '**' → logprob: -2.4889845848083496
    3. ':' → logprob: -2.6139845848083496
    4. ' +' → logprob: -2.7389845848083496
    5. '-' → logprob: -3.7389845848083496
    6. ',' → logprob: -4.11398458480835
    7. '*' → logprob: -4.11398458480835
    8. '+a' → logprob: -5.61398458480835
    9. '+x' → logprob: -5.86398458480835
    10. '+=' → logprob: -6.11398458480835

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7330929636955261
    2. 'a' → logprob: -1.358093023300171
    3. ' ' → logprob: -2.108093023300171
    4. '0' → logprob: -2.983093023300171
    5. ' a' → logprob: -2.983093023300171
    6. '-' → logprob: -4.608092784881592
    7. '2' → logprob: -5.358092784881592
    8. 'count' → logprob: -5.858092784881592
    9. 'int' → logprob: -5.983092784881592
    10. ' -' → logprob: -6.233092784881592

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02461971715092659
    2. ',a' → logprob: -4.1496195793151855
    3. 'range' → logprob: -5.3996195793151855
    4. ' ,' → logprob: -6.0246195793151855
    5. '(range' → logprob: -6.7746195793151855
    6. ' range' → logprob: -8.649620056152344
    7. '(' → logprob: -9.024620056152344
    8. 'a' → logprob: -10.399620056152344
    9. '(a' → logprob: -10.524620056152344
    10. ',(' → logprob: -10.649620056152344

Token 42: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2528838813304901
    2. ' range' → logprob: -1.5028839111328125
    3. 'a' → logprob: -7.2528839111328125
    4. ' a' → logprob: -9.252883911132812
    5. '(range' → logprob: -9.752883911132812
    6. 'list' → logprob: -10.127883911132812
    7. '	range' → logprob: -10.877883911132812
    8. ' list' → logprob: -11.002883911132812
    9. ' xrange' → logprob: -12.002883911132812
    10. ' ' → logprob: -13.127883911132812

Token 43: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.16142818331718445
    2. '(' → logprob: -1.9114282131195068
    3. '(-' → logprob: -7.411427974700928
    4. '(len' → logprob: -8.536428451538086
    5. '(
' → logprob: -8.786428451538086
    6. ' (' → logprob: -9.286428451538086
    7. '<|end|>' → logprob: -9.661428451538086
    8. 'a' → logprob: -10.786428451538086
    9. '(n' → logprob: -11.161428451538086
    10. '(abs' → logprob: -11.786428451538086

Token 44: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.012720598839223385
    2. '-' → logprob: -5.012720584869385
    3. ')' → logprob: -5.387720584869385
    4. '))' → logprob: -7.262720584869385
    5. '())))' → logprob: -8.637721061706543
    6. ' ' → logprob: -9.012721061706543
    7. ' -' → logprob: -9.012721061706543
    8. '+' → logprob: -9.887721061706543
    9. ')));' → logprob: -10.012721061706543
    10. '(' → logprob: -10.137721061706543

Token 45: 'for' (ID: 1938)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005725062917917967
    2. '(
' → logprob: -6.005724906921387
    3. ')' → logprob: -6.380724906921387
    4. '[' → logprob: -7.505724906921387
    5. ':' → logprob: -8.380724906921387
    6. ',' → logprob: -8.505724906921387
    7. '_' → logprob: -9.505724906921387
    8. '#' → logprob: -9.630724906921387
    9. '<|end|>' → logprob: -9.755724906921387
    10. '
' → logprob: -10.005724906921387

Token 46: ' num' (ID: 2269)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26258108019828796
    2. ' i' → logprob: -1.8875811100006104
    3. '_' → logprob: -3.3875811100006104
    4. ' _' → logprob: -3.3875811100006104
    5. ' weird' → logprob: -5.387580871582031
    6. '  ' → logprob: -6.512580871582031
    7. ' char' → logprob: -6.762580871582031
    8. ' item' → logprob: -7.512580871582031
    9. ' x' → logprob: -7.512580871582031
    10. 'i' → logprob: -7.762580871582031

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026537146419286728
    2. 'in' → logprob: -3.6515371799468994
    3. ' ' → logprob: -8.77653694152832
    4. 's' → logprob: -10.90153694152832
    5. '	in' → logprob: -11.15153694152832
    6. '  ' → logprob: -11.52653694152832
    7. '<|end|>' → logprob: -11.90153694152832
    8. ',' → logprob: -12.02653694152832
    9. '_in' → logprob: -12.52653694152832
    10. 'n' → logprob: -13.15153694152832

Token 48: ' weird' (ID: 28783)
  Prédit: ' weird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weird' → logprob: -0.6510704755783081
    2. 'we' → logprob: -0.9010704755783081
    3. ' range' → logprob: -3.2760705947875977
    4. ' we' → logprob: -4.026070594787598
    5. 'range' → logprob: -4.401070594787598
    6. '(' → logprob: -5.901070594787598
    7. ' strange' → logprob: -7.276070594787598
    8. '(range' → logprob: -8.401070594787598
    9. 'get' → logprob: -8.776070594787598
    10. ' get' → logprob: -8.901070594787598

Token 49: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -13.875001907348633
    3. '_r' → logprob: -14.250001907348633
    4. '_count' → logprob: -14.750001907348633
    5. '_ranges' → logprob: -15.375001907348633
    6. ' _' → logprob: -17.000001907348633
    7. '_rng' → logprob: -18.750001907348633
    8. '_RANGE' → logprob: -19.125001907348633
    9. 'range' → logprob: -19.875001907348633
    10. 'Range' → logprob: -19.875001907348633

Token 50: '(get' (ID: 7119)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024068120401352644
    2. '(len' → logprob: -6.252406597137451
    3. ' (' → logprob: -8.62740707397461
    4. '(num' → logprob: -9.37740707397461
    5. '((' → logprob: -9.62740707397461
    6. '(count' → logprob: -10.25240707397461
    7. '(int' → logprob: -10.25240707397461
    8. '(a' → logprob: -11.25240707397461
    9. '(
' → logprob: -11.37740707397461
    10. '(n' → logprob: -11.50240707397461

Token 51: 'It' (ID: 3206)
  Prédit: 'It'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'It' → logprob: -5.512236498361744e-07
    2. 'it' → logprob: -15.125000953674316
    3. ' It' → logprob: -16.375
    4. '()' → logprob: -17.0
    5. 'I' → logprob: -17.5
    6. 'It's' → logprob: -18.75
    7. '())' → logprob: -18.875
    8. ')' → logprob: -19.125
    9. '```' → logprob: -19.25
    10. ' it' → logprob: -19.75

Token 52: '()):
' (ID: 83536)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.3941671550273895
    2. '()' → logprob: -1.394167184829712
    3. '())' → logprob: -2.769167184829712
    4. '())))' → logprob: -4.894166946411133
    5. '()));' → logprob: -5.894166946411133
    6. '():' → logprob: -7.019166946411133
    7. ' ()' → logprob: -7.394166946411133
    8. '(' → logprob: -7.769166946411133
    9. ' ())' → logprob: -8.019166946411133
    10. '())).' → logprob: -8.269166946411133

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12129911035299301
    2. ':' → logprob: -3.1212990283966064
    3. ' ' → logprob: -3.2462990283966064
    4. '    ' → logprob: -4.2462992668151855
    5. ' if' → logprob: -5.8712992668151855
    6. ' :' → logprob: -6.2462992668151855
    7. '  ' → logprob: -6.4962992668151855
    8. '    
' → logprob: -6.6212992668151855
    9. '1' → logprob: -6.7462992668151855
    10. '4' → logprob: -6.9962992668151855

Token 54: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8293485045433044
    2. '    ' → logprob: -1.7043485641479492
    3. ' count' → logprob: -2.204348564147949
    4. ' chr' → logprob: -2.454348564147949
    5. ' if' → logprob: -2.579348564147949
    6. ' ' → logprob: -3.079348564147949
    7. 'chr' → logprob: -3.454348564147949
    8. 'count' → logprob: -4.204348564147949
    9. '    
' → logprob: -5.704348564147949
    10. ' 
' → logprob: -5.829348564147949

Token 55: ' [' (ID: 723)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.0818149521946907
    2. 'num' → logprob: -2.581815004348755
    3. ' count' → logprob: -7.331814765930176
    4. ' chr' → logprob: -7.456814765930176
    5. 'chr' → logprob: -7.706814765930176
    6. '(num' → logprob: -7.706814765930176
    7. ' not' → logprob: -7.831814765930176
    8. 'count' → logprob: -8.581814765930176
    9. ' (' → logprob: -9.831814765930176
    10. ' int' → logprob: -10.956814765930176

Token 56: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.1570810228586197
    2. ' num' → logprob: -2.032081127166748
    3. 'chr' → logprob: -4.782081127166748
    4. ' chr' → logprob: -6.657081127166748
    5. '   ' → logprob: -7.032081127166748
    6. '(num' → logprob: -7.407081127166748
    7. 'count' → logprob: -7.907081127166748
    8. 'True' → logprob: -7.907081127166748
    9. ' True' → logprob: -8.15708065032959
    10. ' ' → logprob: -8.15708065032959

Token 57: '][' (ID: 2696)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.36265090107917786
    2. ' %' → logprob: -2.7376508712768555
    3. ']' → logprob: -2.8626508712768555
    4. ',' → logprob: -2.9876508712768555
    5. '%' → logprob: -3.3626508712768555
    6. 'for' → logprob: -3.4876508712768555
    7. ' ' → logprob: -4.2376508712768555
    8. ' >' → logprob: -4.4876508712768555
    9. '   ' → logprob: -4.4876508712768555
    10. ' -' → logprob: -5.6126508712768555

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.028282521292567253
    2. ' ' → logprob: -4.653282642364502
    3. '-' → logprob: -5.153282642364502
    4. ']' → logprob: -5.778282642364502
    5. ']==' → logprob: -6.153282642364502
    6. ']>' → logprob: -6.653282642364502
    7. ':' → logprob: -7.028282642364502
    8. '1' → logprob: -7.028282642364502
    9. ' -' → logprob: -7.278282642364502
    10. '   ' → logprob: -7.403282642364502

Token 59: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4444887042045593
    2. ' ]' → logprob: -1.444488763809204
    3. ']>' → logprob: -2.819488763809204
    4. ' >' → logprob: -4.194488525390625
    5. '%' → logprob: -4.444488525390625
    6. '>' → logprob: -4.694488525390625
    7. ' ' → logprob: -4.819488525390625
    8. ' %' → logprob: -4.944488525390625
    9. ']==' → logprob: -5.569488525390625
    10. ']>=' → logprob: -6.819488525390625

Token 60: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.7434265613555908
    2. '%' → logprob: -0.9934265613555908
    3. ' >' → logprob: -2.118426561355591
    4. '>' → logprob: -3.868426561355591
    5. ' ==' → logprob: -5.493426322937012
    6. ' !=' → logprob: -6.118426322937012
    7. ' ' → logprob: -6.368426322937012
    8. '==' → logprob: -6.743426322937012
    9. ' <=' → logprob: -7.118426322937012
    10. '<|end|>' → logprob: -7.118426322937012

Token 61: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.33653390407562256
    2. ' ' → logprob: -1.3365339040756226
    3. '3' → logprob: -3.961534023284912
    4. '4' → logprob: -6.211534023284912
    5. '1' → logprob: -7.586534023284912
    6. '7' → logprob: -7.961534023284912
    7. '5' → logprob: -8.211533546447754
    8. '10' → logprob: -8.211533546447754
    9. '6' → logprob: -8.711533546447754
    10. '<|end|>' → logprob: -9.461533546447754

Token 62: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09472402185201645
    2. '3' → logprob: -2.71972393989563
    3. '10' → logprob: -4.969724178314209
    4. '7' → logprob: -5.219724178314209
    5. '5' → logprob: -5.469724178314209
    6. '4' → logprob: -5.594724178314209
    7. ' ' → logprob: -6.094724178314209
    8. '6' → logprob: -8.09472370147705
    9. '15' → logprob: -8.09472370147705
    10. '8' → logprob: -8.59472370147705

Token 63: ':
' (ID: 734)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31977465748786926
    2. '==' → logprob: -1.3197746276855469
    3. ' !=' → logprob: -5.819774627685547
    4. ' ' → logprob: -6.319774627685547
    5. '=' → logprob: -6.944774627685547
    6. '!=' → logprob: -7.694774627685547
    7. ' =' → logprob: -9.194774627685547
    8. ':' → logprob: -9.694774627685547
    9. '0' → logprob: -10.569774627685547
    10. '>' → logprob: -10.569774627685547

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48500826954841614
    2. '    ' → logprob: -1.4850082397460938
    3. ' ' → logprob: -2.9850082397460938
    4. ' chr' → logprob: -2.9850082397460938
    5. '   ' → logprob: -3.7350082397460938
    6. 'chr' → logprob: -4.735008239746094
    7. '        ' → logprob: -4.985008239746094
    8. 'count' → logprob: -6.110008239746094
    9. ' ' → logprob: -6.360008239746094
    10. '(chr' → logprob: -6.485008239746094

Token 65: ' chr' (ID: 42767)
  Prédit: ' chr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chr' → logprob: -0.14916712045669556
    2. 'chr' (adapté à ' chr') → logprob: -2.274167060852051
    3. ' count' → logprob: -4.149167060852051
    4. '    ' → logprob: -4.774167060852051
    5. '        ' → logprob: -5.524167060852051
    6. 'count' → logprob: -6.149167060852051
    7. ' ' → logprob: -6.649167060852051
    8. '(chr' → logprob: -7.274167060852051
    9. ' ' → logprob: -7.399167060852051
    10. '   ' → logprob: -7.649167060852051

Token 66: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0003977800370194018
    2. '_' → logprob: -8.250397682189941
    3. '_c' → logprob: -9.000397682189941
    4. ' _' → logprob: -12.500397682189941
    5. '_co' → logprob: -13.000397682189941
    6. '_counter' → logprob: -13.125397682189941
    7. '_cnt' → logprob: -13.500397682189941
    8. '_counts' → logprob: -13.500397682189941
    9. '_cont' → logprob: -14.000397682189941
    10. 'count' → logprob: -15.500397682189941

Token 67: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.11315099149942398
    2. '+=' → logprob: -2.2381510734558105
    3. '+' → logprob: -8.238150596618652
    4. ' =' → logprob: -10.488150596618652
    5. ' +' → logprob: -11.238150596618652
    6. '=' → logprob: -11.238150596618652
    7. ' ' → logprob: -13.238150596618652
    8. '<|end|>' → logprob: -13.363150596618652
    9. '+='' → logprob: -13.363150596618652
    10. '   ' → logprob: -13.863150596618652

Token 68: ' ~' (ID: 6574)
  Prédit: ' chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chr' → logprob: -0.14659814536571503
    2. 'chr' → logprob: -2.5215981006622314
    3. ' num' → logprob: -3.0215981006622314
    4. 'num' → logprob: -5.3965983390808105
    5. ' ' → logprob: -6.5215983390808105
    6. '0' → logprob: -7.8965983390808105
    7. '(chr' → logprob: -8.646597862243652
    8. '1' → logprob: -9.021597862243652
    9. '+' → logprob: -9.021597862243652
    10. '2' → logprob: -9.146597862243652

Token 69: '-' (ID: 12)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.08417648077011108
    2. 'num' → logprob: -3.584176540374756
    3. ' chr' → logprob: -3.834176540374756
    4. '(chr' → logprob: -3.959176540374756
    5. '-' → logprob: -5.584176540374756
    6. '0' → logprob: -6.584176540374756
    7. ' num' → logprob: -7.084176540374756
    8. '(' → logprob: -7.084176540374756
    9. '~' → logprob: -7.334176540374756
    10. ' ~' → logprob: -7.584176540374756

Token 70: '0' (ID: 15)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.013728668913245201
    2. ' chr' → logprob: -4.513728618621826
    3. '(chr' → logprob: -7.013728618621826
    4. 'num' → logprob: -7.138728618621826
    5. '1' → logprob: -8.013729095458984
    6. '   ' → logprob: -8.638729095458984
    7. 'count' → logprob: -9.138729095458984
    8. ' ' → logprob: -9.388729095458984
    9. 'ch' → logprob: -9.888729095458984
    10. 'char' → logprob: -10.451229095458984

Token 71: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0416836738586426
    2. '+' → logprob: -1.4166836738586426
    3. '<|end|>' → logprob: -1.9166836738586426
    4. ' +' → logprob: -2.2916836738586426
    5. '1' → logprob: -2.7916836738586426
    6. 'chr' → logprob: -3.1666836738586426
    7. '0' → logprob: -3.6666836738586426
    8. '2' → logprob: -4.416683673858643
    9. ' chr' → logprob: -6.041683673858643
    10. '3' → logprob: -6.166683673858643

Token 72: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ' judge' (ID: 23319)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0267407894134521
    2. 'ment' → logprob: -1.7767407894134521
    3. '=' → logprob: -2.151740789413452
    4. 'er' → logprob: -2.151740789413452
    5. '_' → logprob: -2.901740789413452
    6. '_count' → logprob: -3.026740789413452
    7. 'if' → logprob: -3.401740789413452
    8. 'ed' → logprob: -4.526741027832031
    9. ' if' → logprob: -4.651741027832031
    10. 'ing' → logprob: -5.026741027832031

Token 75: ' lambda' (ID: 27871)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' num' → logprob: -1.8785690069198608
    2. ' [' → logprob: -2.0035691261291504
    3. ' ' → logprob: -2.2535691261291504
    4. 'chr' → logprob: -2.2535691261291504
    5. 'num' → logprob: -2.5035691261291504
    6. ' True' → logprob: -2.5035691261291504
    7. ' chr' → logprob: -2.7535691261291504
    8. '0' → logprob: -3.0035691261291504
    9. '[' → logprob: -3.1285691261291504
    10. '[num' → logprob: -3.7535691261291504

Token 76: ' m' (ID: 284)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7135952711105347
    2. 'x' → logprob: -1.5885952711105347
    3. 'num' → logprob: -2.338595390319824
    4. ' num' → logprob: -2.963595390319824
    5. 'chr' → logprob: -3.588595390319824
    6. ' lambda' → logprob: -3.838595390319824
    7. 'lambda' → logprob: -3.963595390319824
    8. ' n' → logprob: -4.338595390319824
    9. 'a' → logprob: -4.338595390319824
    10. 'n' → logprob: -4.463595390319824

Token 77: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012397211976349354
    2. ',' → logprob: -5.387397289276123
    3. ' :' → logprob: -5.512397289276123
    4. ':m' → logprob: -6.762397289276123
    5. ',m' → logprob: -7.387397289276123
    6. 'm' → logprob: -8.137396812438965
    7. ' m' → logprob: -8.512396812438965
    8. 'x' → logprob: -8.762396812438965
    9. ':x' → logprob: -8.887396812438965
    10. ':
' → logprob: -9.012396812438965

Token 78: ' num' (ID: 2269)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.9497321844100952
    2. 'm' → logprob: -1.6997321844100952
    3. 'chr' → logprob: -1.6997321844100952
    4. ' chr' → logprob: -3.3247323036193848
    5. 'len' → logprob: -4.199732303619385
    6. ' True' → logprob: -4.324732303619385
    7. ' ' → logprob: -4.449732303619385
    8. ' len' → logprob: -4.449732303619385
    9. ' (' → logprob: -4.574732303619385
    10. 'str' → logprob: -4.699732303619385

Token 79: ' %' (ID: 1851)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.684005618095398
    2. ' ' → logprob: -1.684005618095398
    3. ' %' → logprob: -1.809005618095398
    4. '%' → logprob: -1.934005618095398
    5. ' +' → logprob: -2.0590057373046875
    6. '<|end|>' → logprob: -2.1840057373046875
    7. ' ==' → logprob: -4.6840057373046875
    8. '   ' → logprob: -4.8090057373046875
    9. '        ' → logprob: -4.9340057373046875
    10. ' *' → logprob: -5.0590057373046875

Token 80: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.16552583873271942
    2. ' m' → logprob: -2.5405259132385254
    3. '2' → logprob: -2.7905259132385254
    4. ' ' → logprob: -4.790525913238525
    5. '3' → logprob: -6.040525913238525
    6. '4' → logprob: -8.040525436401367
    7. ' (' → logprob: -8.540525436401367
    8. '-' → logprob: -8.915525436401367
    9. '1' → logprob: -9.040525436401367
    10. '7' → logprob: -9.228025436401367

Token 81: ' ==' (ID: 951)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42881229519844055
    2. ' ' → logprob: -1.0538122653961182
    3. '1' → logprob: -9.678812026977539
    4. '<|end|>' → logprob: -11.303812026977539
    5. '   ' → logprob: -11.991312026977539
    6. '  ' → logprob: -12.428812026977539
    7. ' not' → logprob: -12.803812026977539
    8. 'not' → logprob: -13.553812026977539
    9. ' ' → logprob: -13.616312026977539
    10. '    ' → logprob: -13.678812026977539

Token 83: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011164898052811623
    2. ' ' → logprob: -4.511164665222168
    3. '1' → logprob: -9.386164665222168
    4. 'chr' → logprob: -12.386164665222168
    5. '   ' → logprob: -12.511164665222168
    6. '  ' → logprob: -13.136164665222168
    7. '2' → logprob: -13.198664665222168
    8. 'num' → logprob: -13.261164665222168
    9. '3' → logprob: -13.261164665222168
    10. '<|end|>' → logprob: -13.636164665222168

Token 84: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2252868264913559
    2. '<|end|>' → logprob: -2.3502867221832275
    3. '       ' → logprob: -3.3502867221832275
    4. '   ' → logprob: -3.9752867221832275
    5. '    ' → logprob: -4.725286960601807
    6. ')' → logprob: -5.475286960601807
    7. '  ' → logprob: -5.475286960601807
    8. '        ' → logprob: -5.725286960601807
    9. ' 
' → logprob: -5.725286960601807
    10. '0' → logprob: -5.850286960601807

Token 86: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5597541332244873
    2. ' ' → logprob: -2.1847541332244873
    3. ' for' → logprob: -2.9347541332244873
    4. '        ' → logprob: -3.1847541332244873
    5. '           ' → logprob: -3.3097541332244873
    6. '<|end|>' → logprob: -3.4347541332244873
    7. ' if' → logprob: -3.6847541332244873
    8. '   ' → logprob: -4.184754371643066
    9. ' continue' → logprob: -4.809754371643066
    10. '    ' → logprob: -4.809754371643066

Token 87: ' div' (ID: 4223)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6977912187576294
    2. ' m' → logprob: -1.3227912187576294
    3. 'm' → logprob: -2.44779109954834
    4. 'i' → logprob: -2.82279109954834
    5. ' j' → logprob: -3.94779109954834
    6. ' range' → logprob: -4.57279109954834
    7. ' x' → logprob: -5.19779109954834
    8. 'we' → logprob: -5.32279109954834
    9. ' we' → logprob: -5.44779109954834
    10. ' n' → logprob: -5.44779109954834

Token 88: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006233225576579571
    2. 'in' → logprob: -7.8756232261657715
    3. 'isor' → logprob: -9.37562370300293
    4. ' ' → logprob: -9.75062370300293
    5. 'isible' → logprob: -10.50062370300293
    6. 'er' → logprob: -10.75062370300293
    7. 's' → logprob: -11.12562370300293
    8. 'ision' → logprob: -11.75062370300293
    9. 'is' → logprob: -12.00062370300293
    10. '  ' → logprob: -12.75062370300293

Token 89: ' weird' (ID: 28783)
  Prédit: ' weird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weird' → logprob: -0.7529226541519165
    2. ' range' → logprob: -0.8779226541519165
    3. 'we' → logprob: -2.877922534942627
    4. 'range' → logprob: -3.127922534942627
    5. ' we' → logprob: -5.002922534942627
    6. '[' → logprob: -5.627922534942627
    7. ' [' → logprob: -7.127922534942627
    8. ' xrange' → logprob: -7.877922534942627
    9. ' strange' → logprob: -8.252923011779785
    10. ' ' → logprob: -8.315423011779785

Token 90: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.0012411827920004725
    2. 'range' → logprob: -7.876241207122803
    3. '(' → logprob: -8.126240730285645
    4. '_' → logprob: -8.751240730285645
    5. '(range' → logprob: -8.751240730285645
    6. '_count' → logprob: -9.001240730285645
    7. '   ' → logprob: -11.001240730285645
    8. '(_' → logprob: -11.251240730285645
    9. 'ange' → logprob: -11.376240730285645
    10. '	range' → logprob: -11.626240730285645

Token 91: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.12313568592071533
    2. '(' → logprob: -2.373135566711426
    3. ' (' → logprob: -4.748135566711426
    4. '(chr' → logprob: -5.248135566711426
    5. '(int' → logprob: -6.248135566711426
    6. '((' → logprob: -6.623135566711426
    7. '(get' → logprob: -6.748135566711426
    8. '(count' → logprob: -7.123135566711426
    9. ' num' → logprob: -7.748135566711426
    10. '(j' → logprob: -7.873135566711426

Token 92: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0738605186343193
    2. ' ):' → logprob: -3.8238604068756104
    3. '-' → logprob: -3.9488604068756104
    4. '):
' → logprob: -4.4488606452941895
    5. '   ' → logprob: -4.6988606452941895
    6. ' -' → logprob: -5.5738606452941895
    7. ')' → logprob: -7.0738606452941895
    8. ' ' → logprob: -7.0738606452941895
    9. '       ' → logprob: -7.5738606452941895
    10. '[' → logprob: -7.8238606452941895

Token 93: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06510229408740997
    2. '<|end|>' → logprob: -3.1901023387908936
    3. '               ' → logprob: -5.4401021003723145
    4. '	       ' → logprob: -5.4401021003723145
    5. ' if' → logprob: -5.6901021003723145
    6. '<|end|>' → logprob: -6.0651021003723145
    7. ' ' → logprob: -6.8151021003723145
    8. '            ' → logprob: -6.9401021003723145
    9. '	           ' → logprob: -7.4401021003723145
    10. '   ' → logprob: -7.5651021003723145

Token 94: ' chr' (ID: 42767)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2646085023880005
    2. ' ' → logprob: -2.639608383178711
    3. '           ' → logprob: -2.889608383178711
    4. '               ' → logprob: -3.139608383178711
    5. '            ' → logprob: -3.764608383178711
    6. 'if' → logprob: -3.889608383178711
    7. '<|end|>' → logprob: -4.514608383178711
    8. '                ' → logprob: -6.389608383178711
    9. ' ' → logprob: -6.889608383178711
    10. '        ' → logprob: -6.889608383178711

Token 95: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.002038795268163085
    2. '_' → logprob: -6.627038955688477
    3. 'count' → logprob: -8.502038955688477
    4. ' _' → logprob: -8.877038955688477
    5. '_counts' → logprob: -9.502038955688477
    6. 'ount' → logprob: -9.627038955688477
    7. '<|end|>' → logprob: -10.377038955688477
    8. '_div' → logprob: -10.877038955688477
    9. ' ' → logprob: -11.002038955688477
    10. 'div' → logprob: -11.502038955688477

Token 96: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3996450901031494
    2. '+=' → logprob: -1.1496450901031494
    3. ' =' → logprob: -4.89964485168457
    4. '=' → logprob: -5.52464485168457
    5. ' -=' → logprob: -7.52464485168457
    6. '+' → logprob: -8.27464485168457
    7. ' +' → logprob: -9.52464485168457
    8. ' ^=' → logprob: -9.64964485168457
    9. '-=' → logprob: -9.64964485168457
    10. ' ' → logprob: -9.77464485168457

Token 97: ' ' (ID: 220)
  Prédit: ' judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' judge' → logprob: -0.6306822299957275
    2. 'judge' → logprob: -0.8806822299957275
    3. '1' → logprob: -4.130681991577148
    4. ' ' → logprob: -4.380681991577148
    5. ' int' → logprob: -5.005681991577148
    6. 'int' → logprob: -5.130681991577148
    7. '   ' → logprob: -6.005681991577148
    8. ' (' → logprob: -6.755681991577148
    9. '-' → logprob: -6.880681991577148
    10. 'jud' → logprob: -6.880681991577148

Token 98: '1' (ID: 16)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.12472246587276459
    2. ' judge' → logprob: -2.999722480773926
    3. '1' → logprob: -3.249722480773926
    4. 'int' → logprob: -4.999722480773926
    5. ' ' → logprob: -5.124722480773926
    6. '-' → logprob: -5.624722480773926
    7. '(not' → logprob: -6.374722480773926
    8. 'not' → logprob: -6.624722480773926
    9. '(' → logprob: -6.749722480773926
    10. ' int' → logprob: -6.749722480773926

Token 99: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: ' judge' (ID: 23319)
  Prédit: ' judge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' judge' → logprob: -0.22774188220500946
    2. 'judge' → logprob: -1.7277418375015259
    3. ' not' → logprob: -3.9777419567108154
    4. 'not' → logprob: -6.102741718292236
    5. ' ' → logprob: -6.727741718292236
    6. 'jud' → logprob: -6.977741718292236
    7. 'div' → logprob: -7.727741718292236
    8. '(not' → logprob: -7.977741718292236
    9. ' num' → logprob: -8.102742195129395
    10. 'num' → logprob: -8.102742195129395

Token 101: '(div' (ID: 73108)
  Prédit: '(div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(div' → logprob: -0.0005772201111540198
    2. '(' → logprob: -8.125576972961426
    3. 'div' → logprob: -8.750576972961426
    4. ' (' → logprob: -9.250576972961426
    5. ' div' → logprob: -11.250576972961426
    6. '((' → logprob: -12.250576972961426
    7. '	div' → logprob: -13.875576972961426
    8. ' ' → logprob: -14.250576972961426
    9. ')(' → logprob: -14.500576972961426
    10. '(len' → logprob: -14.500576972961426

Token 102: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009862331673502922
    2. ' )' → logprob: -4.759862422943115
    3. ' else' → logprob: -7.509862422943115
    4. ' and' → logprob: -8.009861946105957
    5. ')==' → logprob: -9.634861946105957
    6. 'and' → logprob: -10.009861946105957
    7. 'else' → logprob: -10.259861946105957
    8. '())' → logprob: -10.384861946105957
    9. '   ' → logprob: -10.509861946105957
    10. ' ' → logprob: -10.634861946105957

Token 103: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.016243625432252884
    2. 'else' → logprob: -4.8912434577941895
    3. ' ' → logprob: -5.7662434577941895
    4. '==' → logprob: -5.7662434577941895
    5. ' and' → logprob: -6.8912434577941895
    6. ' ==' → logprob: -7.2662434577941895
    7. '()' → logprob: -9.016243934631348
    8. '0' → logprob: -9.141243934631348
    9. '        ' → logprob: -9.641243934631348
    10. ' or' → logprob: -9.891243934631348

Token 104: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17986035346984863
    2. ' ' → logprob: -1.8048603534698486
    3. ' -' → logprob: -9.80486011505127
    4. '-' → logprob: -9.92986011505127
    5. ' ' → logprob: -12.80486011505127
    6. '  ' → logprob: -13.55486011505127
    7. '   ' → logprob: -13.80486011505127
    8. '1' → logprob: -13.86736011505127
    9. '    ' → logprob: -13.86736011505127
    10. '<|end|>' → logprob: -13.86736011505127

Token 105: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004712426569312811
    2. ' ' → logprob: -5.3797125816345215
    3. '-' → logprob: -9.379712104797363
    4. ' -' → logprob: -12.254712104797363
    5. 'False' → logprob: -13.879712104797363
    6. '  ' → logprob: -14.879712104797363
    7. '1' → logprob: -15.004712104797363
    8. '2' → logprob: -15.504712104797363
    9. '   ' → logprob: -15.754712104797363
    10. ' False' → logprob: -16.06721305847168

Token 106: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5006151795387268
    2. '   ' → logprob: -1.625615119934082
    3. ' if' → logprob: -2.375615119934082
    4. 'if' → logprob: -2.625615119934082
    5. 'print' → logprob: -4.000615119934082
    6. '<|end|>' → logprob: -5.375615119934082
    7. ' ' → logprob: -6.250615119934082
    8. '
' → logprob: -6.625615119934082
    9. '    ' → logprob: -6.750615119934082
    10. '           ' → logprob: -6.875615119934082

Token 109: 'up' (ID: 817)
  Prédit: 'up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -1.8670179997570813e-05
    2. '_up' → logprob: -11.125019073486328
    3. 'u' → logprob: -13.625019073486328
    4. ' up' → logprob: -13.875019073486328
    5. 'upt' → logprob: -14.375019073486328
    6. '	up' → logprob: -15.375019073486328
    7. '+=' → logprob: -15.500019073486328
    8. ' +=' → logprob: -16.000019073486328
    9. 'upp' → logprob: -16.125019073486328
    10. 'count' → logprob: -16.750019073486328

Token 110: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.011349477805197239
    2. '+=' → logprob: -4.511349678039551
    3. ' =' → logprob: -8.51134967803955
    4. ' +' → logprob: -10.01134967803955
    5. '=' → logprob: -10.63634967803955
    6. '+' → logprob: -10.76134967803955
    7. ' ' → logprob: -12.26134967803955
    8. '++' → logprob: -13.76134967803955
    9. ']+=' → logprob: -13.88634967803955
    10. ' -=' → logprob: -14.26134967803955

Token 111: ' (' (ID: 350)
  Prédit: ' chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chr' → logprob: -0.6476754546165466
    2. 'chr' → logprob: -1.3976755142211914
    3. ' ' → logprob: -2.3976755142211914
    4. '1' → logprob: -2.6476755142211914
    5. '(chr' → logprob: -3.0226755142211914
    6. ' (' → logprob: -5.522675514221191
    7. ' int' → logprob: -5.522675514221191
    8. ' num' → logprob: -5.897675514221191
    9. '0' → logprob: -5.897675514221191
    10. 'num' → logprob: -6.272675514221191

Token 112: 'chr' (ID: 33902)
  Prédit: 'chr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.09158410131931305
    2. ' chr' → logprob: -2.9665842056274414
    3. '1' → logprob: -3.5915842056274414
    4. ' ' → logprob: -5.841584205627441
    5. '(chr' → logprob: -6.091584205627441
    6. '0' → logprob: -6.841584205627441
    7. '2' → logprob: -7.341584205627441
    8. '   ' → logprob: -8.091584205627441
    9. 'num' → logprob: -8.091584205627441
    10. 'int' → logprob: -8.341584205627441

Token 113: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -6.749814019713085e-06
    2. '_' → logprob: -13.250006675720215
    3. 'count' → logprob: -13.250006675720215
    4. '_c' → logprob: -13.625006675720215
    5. ')' → logprob: -14.875006675720215
    6. '_co' → logprob: -15.500006675720215
    7. '_cont' → logprob: -15.500006675720215
    8. ')_' → logprob: -15.500006675720215
    9. ' _' → logprob: -16.00000762939453
    10. '__' → logprob: -16.25000762939453

Token 114: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.650238037109375
    2. '==' → logprob: -0.775238037109375
    3. '>' → logprob: -5.150238037109375
    4. ' >' → logprob: -5.400238037109375
    5. ')' → logprob: -6.150238037109375
    6. ' <=' → logprob: -6.275238037109375
    7. '<=' → logprob: -6.775238037109375
    8. ' <' → logprob: -7.525238037109375
    9. '<' → logprob: -8.275238037109375
    10. ' >=' → logprob: -8.525238037109375

Token 115: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04121507331728935
    2. ' ' → logprob: -3.416215181350708
    3. '1' → logprob: -4.916214942932129
    4. '0' → logprob: -9.541214942932129
    5. '   ' → logprob: -10.228714942932129
    6. '3' → logprob: -10.416214942932129
    7. '  ' → logprob: -11.166214942932129
    8. ')' → logprob: -11.666214942932129
    9. '-' → logprob: -11.791214942932129
    10. '    ' → logprob: -12.166214942932129

Token 116: '8' (ID: 23)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00828642025589943
    2. '1' → logprob: -5.508286476135254
    3. ' ' → logprob: -5.508286476135254
    4. '3' → logprob: -10.195786476135254
    5. '0' → logprob: -10.445786476135254
    6. '   ' → logprob: -11.008286476135254
    7. '-' → logprob: -11.320786476135254
    8. ')' → logprob: -11.633286476135254
    9. '  ' → logprob: -12.070786476135254
    10. '    ' → logprob: -12.758286476135254

Token 117: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015518791042268276
    2. ')
' → logprob: -6.876552104949951
    3. ' )' → logprob: -8.001551628112793
    4. ' and' → logprob: -8.751551628112793
    5. ' or' → logprob: -12.001551628112793
    6. ')#' → logprob: -12.876551628112793
    7. '   ' → logprob: -13.001551628112793
    8. '+' → logprob: -13.251551628112793
    9. ')

' → logprob: -13.501551628112793
    10. ')+' → logprob: -13.751551628112793

Token 118: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.09864117950201035
    2. '(' → logprob: -2.5986411571502686
    3. '()' → logprob: -3.9736411571502686
    4. '('' → logprob: -7.473641395568848
    5. '((' → logprob: -9.848641395568848
    6. '("' → logprob: -10.598641395568848
    7. '(sum' → logprob: -10.723641395568848
    8. '("")' → logprob: -10.973641395568848
    9. 'count' → logprob: -10.973641395568848
    10. ' (' → logprob: -11.223641395568848

Token 120: 'up' (ID: 817)
  Prédit: 'up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -1.8624639324116288e-06
    2. '_up' → logprob: -14.000001907348633
    3. 'u' → logprob: -14.625001907348633
    4. ' up' → logprob: -15.625001907348633
    5. ')' → logprob: -16.000001907348633
    6. 'p' → logprob: -16.500001907348633
    7. 'upr' → logprob: -17.000001907348633
    8. 'upt' → logprob: -17.750001907348633
    9. '	up' → logprob: -18.000001907348633
    10. '-up' → logprob: -18.375001907348633

Token 121: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.491498531133402e-06
    2. '))' → logprob: -12.125009536743164
    3. ')`' → logprob: -14.000009536743164
    4. ' )' → logprob: -14.375009536743164
    5. '')' → logprob: -14.500009536743164
    6. '()' → logprob: -14.500009536743164
    7. '())' → logprob: -14.875009536743164
    8. '`)' → logprob: -15.125009536743164
    9. '+' → logprob: -15.500009536743164
    10. ')
' → logprob: -15.750009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 119
Tokens correctement prédits (1ère position, stricte): 48
Tokens correctement prédits (1ère position, avec adaptation): 48
Tokens correctement prédits (top 10): 79
Précision stricte (1ère position): 40.34%
Précision adaptée (1ère position): 40.34%
Précision (top 10): 66.39%
================================================================================
