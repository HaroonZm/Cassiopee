================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Bon, on lit la première ligne et la seconde, on s'en fiche un peu du reste
inp1 = input().split()
m1 = inp1[0] # Prend juste le premier
# Je suppose qu'on fait pareil ici
m2 = input().split()[0]

# On commence par mettre ans à zéro, c'est la base
ans = 0 

if m1 == m2:
    pass # rien à faire, déjà 0
else: ans = 1 # sinon faut mettre 1... logique ?

# Affiche la réponse, voilà.
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Bon' (ID: 12658)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1559932678937912
    2. '```' → logprob: -2.1559932231903076
    3. '  ' → logprob: -4.530993461608887
    4. 'jour' → logprob: -5.530993461608887
    5. '`' → logprob: -5.655993461608887
    6. ' je' → logprob: -6.030993461608887
    7. ''' → logprob: -6.155993461608887
    8. '#' → logprob: -7.530993461608887
    9. ' ```' → logprob: -7.655993461608887
    10. ' j' → logprob: -7.655993461608887

Token 4: ' lit' (ID: 11980)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.284489393234253
    2. ' veut' → logprob: -2.284489393234253
    3. ' va' → logprob: -2.409489393234253
    4. ' continue' → logprob: -2.534489393234253
    5. 't' → logprob: -2.659489393234253
    6. ' a' → logprob: -2.909489393234253
    7. ' y' → logprob: -3.034489393234253
    8. 's' → logprob: -3.534489393234253
    9. ' ' → logprob: -3.784489393234253
    10. 'ne' → logprob: -4.034489631652832

Token 5: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1611806154251099
    2. ' ' → logprob: -1.6611806154251099
    3. 'le' → logprob: -2.0361804962158203
    4. ',' → logprob: -2.5361804962158203
    5. ':' → logprob: -3.0361804962158203
    6. '(' → logprob: -3.1611804962158203
    7. '.' → logprob: -3.4111804962158203
    8. '=' → logprob: -3.5361804962158203
    9. '```' → logprob: -3.6611804962158203
    10. '#' → logprob: -3.7861804962158203

Token 6: ' première' (ID: 23423)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.18954092264175415
    2. 'l' → logprob: -2.3145408630371094
    3. ' ' → logprob: -3.3145408630371094
    4. 'ligne' → logprob: -4.439540863037109
    5. 'd' → logprob: -5.189540863037109
    6. 'suite' → logprob: -5.564540863037109
    7. '#' → logprob: -6.064540863037109
    8. 'data' → logprob: -6.314540863037109
    9. 'prem' → logprob: -6.439540863037109
    10. '.' → logprob: -6.689540863037109

Token 7: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.9478801488876343
    2. ' ' → logprob: -1.0728801488876343
    3. 'ligne' → logprob: -1.4478801488876343
    4. 'l' → logprob: -4.197880268096924
    5. '_' → logprob: -5.447880268096924
    6. ' ' → logprob: -5.947880268096924
    7. '#' → logprob: -5.947880268096924
    8. 'phrase' → logprob: -6.947880268096924
    9. '```' → logprob: -7.197880268096924
    10. ' #' → logprob: -7.447880268096924

Token 8: ' et' (ID: 859)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.17912136018276215
    2. '```' → logprob: -3.054121255874634
    3. '#' → logprob: -3.304121255874634
    4. '\' → logprob: -3.554121255874634
    5. '`' → logprob: -4.554121494293213
    6. 'data' → logprob: -4.804121494293213
    7. 's' → logprob: -5.179121494293213
    8. 'f' → logprob: -5.679121494293213
    9. '``' → logprob: -6.054121494293213
    10. 'input' → logprob: -6.054121494293213

Token 9: ' la' (ID: 557)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.38388505578041077
    2. ' on' → logprob: -1.7588850259780884
    3. '#' → logprob: -3.383885145187378
    4. 'p' → logprob: -3.508885145187378
    5. 'la' → logprob: -3.883885145187378
    6. 'ens' → logprob: -3.883885145187378
    7. 'continue' → logprob: -4.133884906768799
    8. 'contin' → logprob: -5.633884906768799
    9. ' ensuite' → logprob: -5.883884906768799
    10. 'r' → logprob: -5.883884906768799

Token 10: ' seconde' (ID: 66204)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.352959156036377
    2. 's' → logprob: -1.602959156036377
    3. 'n' → logprob: -1.977959156036377
    4. 'ligne' → logprob: -2.977959156036377
    5. ' ' → logprob: -3.102959156036377
    6. 'on' → logprob: -3.102959156036377
    7. ' on' → logprob: -3.102959156036377
    8. ' suivante' → logprob: -3.352959156036377
    9. 'r' → logprob: -3.977959156036377
    10. 'suite' → logprob: -4.102959156036377

Token 11: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6852258443832397
    2. 'l' → logprob: -2.1852259635925293
    3. '```' → logprob: -2.3102259635925293
    4. '#' → logprob: -2.9352259635925293
    5. 's' → logprob: -3.1852259635925293
    6. '\' → logprob: -3.1852259635925293
    7. ',' → logprob: -3.6852259635925293
    8. '`' → logprob: -3.9352259635925293
    9. '.' → logprob: -3.9352259635925293
    10. 'ligne' → logprob: -4.310225963592529

Token 12: ' on' (ID: 402)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0236526727676392
    2. ' puis' → logprob: -1.6486526727676392
    3. ' ' → logprob: -2.3986525535583496
    4. '\n' → logprob: -2.7736525535583496
    5. ' ' → logprob: -3.2736525535583496
    6. '``' → logprob: -3.5236525535583496
    7. ' on' → logprob: -3.6486525535583496
    8. ' #' → logprob: -3.8986525535583496
    9. '`' → logprob: -4.02365255355835
    10. '#' → logprob: -4.02365255355835

Token 13: ' s' (ID: 265)
  Prédit: 'lit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lit' → logprob: -0.6524481773376465
    2. ' lit' → logprob: -1.5274481773376465
    3. ' continue' → logprob: -2.7774481773376465
    4. 'continue' → logprob: -2.7774481773376465
    5. 'l' → logprob: -2.9024481773376465
    6. 'r' → logprob: -4.5274481773376465
    7. '_' → logprob: -4.6524481773376465
    8. 's' → logprob: -5.0274481773376465
    9. '#' → logprob: -5.2774481773376465
    10. ' récup' → logprob: -5.4024481773376465

Token 14: ''en' (ID: 16740)
  Prédit: ''ass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''ass' → logprob: -0.6854730844497681
    2. 'e' → logprob: -1.060473084449768
    3. 'é' → logprob: -2.6854729652404785
    4. ''oc' → logprob: -4.1854729652404785
    5. 'aut' → logprob: -4.5604729652404785
    6. ''é' → logprob: -4.8104729652404785
    7. 'ass' → logprob: -5.3104729652404785
    8. 'ait' → logprob: -5.3104729652404785
    9. 'au' → logprob: -5.5604729652404785
    10. 'a' → logprob: -5.5604729652404785

Token 15: ' fiche' (ID: 96081)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.02878672070801258
    2. 't' → logprob: -4.278786659240723
    3. 'fic' → logprob: -4.903786659240723
    4. '```' → logprob: -5.653786659240723
    5. '   ' → logprob: -7.278786659240723
    6. 'fait' → logprob: -7.528786659240723
    7. 'bat' → logprob: -7.778786659240723
    8. 'sert' → logprob: -8.278786659240723
    9. 'registre' → logprob: -8.278786659240723
    10. 'va' → logprob: -9.028786659240723

Token 16: ' un' (ID: 537)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.032888248562812805
    2. '\' → logprob: -3.907888174057007
    3. '#' → logprob: -5.407888412475586
    4. '```' → logprob: -6.532888412475586
    5. '
' → logprob: -7.032888412475586
    6. '.' → logprob: -7.032888412475586
    7. '' → logprob: -7.407888412475586
    8. '\r' → logprob: -7.532888412475586
    9. '`' → logprob: -7.782888412475586
    10. 'n' → logprob: -7.782888412475586

Token 17: ' peu' (ID: 9235)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8213534951210022
    2. 'e' → logprob: -1.3213534355163574
    3. 's' → logprob: -2.4463534355163574
    4. 'pe' → logprob: -3.3213534355163574
    5. 't' → logprob: -3.3213534355163574
    6. '\' → logprob: -3.8213534355163574
    7. ' ' → logprob: -3.9463534355163574
    8. ' peu' → logprob: -4.071353435516357
    9. '\n' → logprob: -4.196353435516357
    10. '=' → logprob: -4.571353435516357

Token 18: ' du' (ID: 1462)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.23198369145393372
    2. '\' → logprob: -1.9819836616516113
    3. '#' → logprob: -3.4819836616516113
    4. '.' → logprob: -4.481983661651611
    5. ',' → logprob: -4.731983661651611
    6. '```' → logprob: -5.481983661651611
    7. '
' → logprob: -5.731983661651611
    8. '`' → logprob: -6.606983661651611
    9. 'n' → logprob: -6.981983661651611
    10. 's' → logprob: -7.231983661651611

Token 19: ' reste' (ID: 26769)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.780654788017273
    2. 'conten' → logprob: -1.155654788017273
    3. ' fichier' → logprob: -3.4056549072265625
    4. '#' → logprob: -3.6556549072265625
    5. 'texte' → logprob: -3.7806549072265625
    6. 'ent' → logprob: -4.4056549072265625
    7. 'd' → logprob: -4.5306549072265625
    8. ' reste' → logprob: -4.6556549072265625
    9. ' contenu' → logprob: -4.9056549072265625
    10. 'reste' → logprob: -4.9056549072265625

Token 20: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.04585288092494011
    2. '\' → logprob: -3.9208528995513916
    3. '```' → logprob: -4.2958526611328125
    4. ',' → logprob: -6.5458526611328125
    5. 'n' → logprob: -6.6708526611328125
    6. '#' → logprob: -7.1708526611328125
    7. 'x' → logprob: -7.1708526611328125
    8. '`' → logprob: -7.2958526611328125
    9. '``' → logprob: -7.2958526611328125
    10. '\r' → logprob: -7.4208526611328125

Token 21: 'inp' (ID: 74055)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.052807409316301346
    2. '\' → logprob: -3.052807331085205
    3. '#' → logprob: -6.802807331085205
    4. '```' → logprob: -6.802807331085205
    5. 'n' → logprob: -7.427807331085205
    6. 's' → logprob: -8.302807807922363
    7. ',' → logprob: -8.802807807922363
    8. ''\' → logprob: -8.927807807922363
    9. '\r' → logprob: -9.052807807922363
    10. '`' → logprob: -9.302807807922363

Token 22: '1' (ID: 16)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.018195364624261856
    2. 'u' → logprob: -4.018195152282715
    3. '[' → logprob: -10.643195152282715
    4. '```' → logprob: -12.018195152282715
    5. 'uts' → logprob: -12.518195152282715
    6. '=' → logprob: -13.518195152282715
    7. '_' → logprob: -13.643195152282715
    8. ' =' → logprob: -13.643195152282715
    9. '.ut' → logprob: -13.768195152282715
    10. ' ut' → logprob: -13.768195152282715

Token 23: ' =' (ID: 314)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.7001594305038452
    2. '=' → logprob: -1.2001594305038452
    3. ' =' → logprob: -2.0751595497131348
    4. 'u' → logprob: -2.9501595497131348
    5. '[' → logprob: -4.325159549713135
    6. '_ut' → logprob: -5.450159549713135
    7. '[:]' → logprob: -6.325159549713135
    8. '[:' → logprob: -6.575159549713135
    9. '[]' → logprob: -7.700159549713135
    10. ',' → logprob: -7.950159549713135

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6345415115356445
    2. ' input' → logprob: -0.7595415115356445
    3. 'open' → logprob: -7.0095415115356445
    4. ' open' → logprob: -7.0095415115356445
    5. 'int' → logprob: -10.009541511535645
    6. ' ' → logprob: -10.134541511535645
    7. ' int' → logprob: -10.884541511535645
    8. 'inp' → logprob: -12.134541511535645
    9. '(input' → logprob: -12.634541511535645
    10. ' inp' → logprob: -13.009541511535645

Token 25: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.059447359293699265
    2. '()' → logprob: -2.9344472885131836
    3. '("("' → logprob: -6.184447288513184
    4. '('' → logprob: -6.684447288513184
    5. '("' → logprob: -8.309447288513184
    6. '```' → logprob: -8.434447288513184
    7. '("")' → logprob: -8.559447288513184
    8. '(
' → logprob: -8.684447288513184
    9. ')' → logprob: -9.559447288513184
    10. '("(' → logprob: -10.059447288513184

Token 26: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.31349846720695496
    2. 'split' → logprob: -1.3134984970092773
    3. 'rstrip' → logprob: -8.438498497009277
    4. 's' → logprob: -11.313498497009277
    5. 'replace' → logprob: -12.563498497009277
    6. 'read' → logprob: -13.688498497009277
    7. 'startswith' → logprob: -13.813498497009277
    8. 'spl' → logprob: -13.813498497009277
    9. 'rs' → logprob: -14.938498497009277
    10. 'lower' → logprob: -15.313498497009277

Token 27: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.40728500485420227
    2. '('' → logprob: -1.1572849750518799
    3. '("("' → logprob: -3.90728497505188
    4. '()' → logprob: -9.9072847366333
    5. ''' → logprob: -11.2822847366333
    6. '("' → logprob: -11.4072847366333
    7. '(`' → logprob: -11.6572847366333
    8. '(

' → logprob: -12.1572847366333
    9. ' (' → logprob: -12.7822847366333
    10. '((' → logprob: -12.7822847366333

Token 28: 'm' (ID: 76)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6888176798820496
    2. 'inp' → logprob: -1.8138177394866943
    3. ' =' → logprob: -2.0638177394866943
    4. ' ' → logprob: -3.3138177394866943
    5. '#' → logprob: -3.6888177394866943
    6. '```' → logprob: -4.063817501068115
    7. '[:]' → logprob: -4.063817501068115
    8. '_' → logprob: -4.438817501068115
    9. '=' → logprob: -4.438817501068115
    10. '\' → logprob: -5.063817501068115

Token 29: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8462969064712524
    2. 'a' → logprob: -0.9712969064712524
    3. 'e' → logprob: -3.346296787261963
    4. 'ap' → logprob: -3.471296787261963
    5. 'ean' → logprob: -3.596296787261963
    6. '=' → logprob: -3.721296787261963
    7. 'o' → logprob: -3.971296787261963
    8. ',' → logprob: -4.096296787261963
    9. 'p' → logprob: -5.096296787261963
    10. 'ax' → logprob: -5.346296787261963

Token 30: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2248167991638184
    2. ' =' → logprob: -1.2248167991638184
    3. '=' → logprob: -1.4748167991638184
    4. 'a' → logprob: -2.3498167991638184
    5. '.' → logprob: -3.4748167991638184
    6. 'ax' → logprob: -4.349816799163818
    7. ',' → logprob: -4.849816799163818
    8. 'ap' → logprob: -4.849816799163818
    9. '.append' → logprob: -4.974816799163818
    10. 's' → logprob: -5.474816799163818

Token 31: ' inp' (ID: 64450)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.003693658858537674
    2. '[int' → logprob: -6.378693580627441
    3. ' int' → logprob: -7.128693580627441
    4. 'list' → logprob: -7.878693580627441
    5. 'inp' → logprob: -8.253693580627441
    6. 'float' → logprob: -8.253693580627441
    7. 'len' → logprob: -8.628693580627441
    8. 'map' → logprob: -9.628693580627441
    9. '[' → logprob: -11.503693580627441
    10. 'input' → logprob: -11.628693580627441

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016206118743866682
    2. '[' → logprob: -8.750162124633789
    3. '2' → logprob: -13.875162124633789
    4. ' ' → logprob: -14.250162124633789
    5. '```' → logprob: -15.250162124633789
    6. '[:' → logprob: -15.500162124633789
    7. '0' → logprob: -15.625162124633789
    8. '[i' → logprob: -15.875162124633789
    9. '()[' → logprob: -15.875162124633789
    10. '\[' → logprob: -16.31266212463379

Token 33: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003812307259067893
    2. '[:]' → logprob: -5.753812313079834
    3. '[int' → logprob: -8.128811836242676
    4. '[:' → logprob: -9.003811836242676
    5. '+' → logprob: -10.253811836242676
    6. '[-' → logprob: -10.378811836242676
    7. '0' → logprob: -10.878811836242676
    8. ' [' → logprob: -11.003811836242676
    9. ' ' → logprob: -11.253811836242676
    10. '.' → logprob: -11.378811836242676

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.117345684382599e-05
    2. '1' → logprob: -11.125020980834961
    3. ' ' → logprob: -12.000020980834961
    4. '2' → logprob: -15.875020980834961
    5. ']' → logprob: -17.75002098083496
    6. '3' → logprob: -18.00002098083496
    7. '-' → logprob: -18.25002098083496
    8. ')' → logprob: -19.12502098083496
    9. '4' → logprob: -20.00002098083496
    10. '```' → logprob: -20.31252098083496

Token 35: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006124671082943678
    2. ' ]' → logprob: -5.131124496459961
    3. ',' → logprob: -9.756124496459961
    4. ')' → logprob: -10.381124496459961
    5. '])' → logprob: -10.881124496459961
    6. '],' → logprob: -10.881124496459961
    7. '']' → logprob: -11.256124496459961
    8. '].' → logprob: -11.631124496459961
    9. ':' → logprob: -12.006124496459961
    10. ')]' → logprob: -12.006124496459961

Token 36: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43113186955451965
    2. '<|end|>' → logprob: -1.6811318397521973
    3. '.' → logprob: -2.6811318397521973
    4. ')' → logprob: -2.9311318397521973
    5. ',' → logprob: -3.8061318397521973
    6. '=' → logprob: -6.056131839752197
    7. '<|end|>' → logprob: -6.181131839752197
    8. '+' → logprob: -6.306131839752197
    9. '#' → logprob: -6.556131839752197
    10. '```' → logprob: -6.681131839752197

Token 37: ' Pr' (ID: 2284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7743546962738037
    2. '"' → logprob: -1.3993546962738037
    3. ''m' → logprob: -2.2743546962738037
    4. ''i' → logprob: -2.8993546962738037
    5. ' '' → logprob: -3.5243546962738037
    6. 'int' → logprob: -4.024354934692383
    7. ''s' → logprob: -4.149354934692383
    8. ' int' → logprob: -4.774354934692383
    9. 'm' → logprob: -5.024354934692383
    10. 'i' → logprob: -5.399354934692383

Token 38: 'end' (ID: 419)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.08158788084983826
    2. 'em' → logprob: -3.706587791442871
    3. 'és' → logprob: -3.831587791442871
    4. 'e' → logprob: -4.581587791442871
    5. 'i' → logprob: -5.081587791442871
    6. 'im' → logprob: -5.331587791442871
    7. 'o' → logprob: -5.831587791442871
    8. 'om' → logprob: -6.831587791442871
    9. 'emi' → logprob: -7.206587791442871
    10. 'év' → logprob: -7.206587791442871

Token 39: ' juste' (ID: 31553)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20776623487472534
    2. ' le' → logprob: -2.58276629447937
    3. ' la' → logprob: -3.70776629447937
    4. 'le' → logprob: -3.70776629447937
    5. 'l' → logprob: -4.457766056060791
    6. 'm' → logprob: -4.832766056060791
    7. 'space' → logprob: -4.957766056060791
    8. '  ' → logprob: -5.332766056060791
    9. 's' → logprob: -5.457766056060791
    10. ' m' → logprob: -5.582766056060791

Token 40: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.5765000581741333
    2. ' le' → logprob: -1.9515000581741333
    3. ' ' → logprob: -2.3264999389648438
    4. 'l' → logprob: -2.5764999389648438
    5. ' la' → logprob: -3.2014999389648438
    6. 'la' → logprob: -3.5764999389648438
    7. ' ' → logprob: -4.076499938964844
    8. ' l' → logprob: -5.076499938964844
    9. '  ' → logprob: -5.076499938964844
    10. 'm' → logprob: -5.326499938964844

Token 41: ' premier' (ID: 15506)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -1.1829829216003418
    2. 'm' → logprob: -1.4329829216003418
    3. ' nombre' → logprob: -1.9329829216003418
    4. 'prem' → logprob: -1.9329829216003418
    5. ' premier' → logprob: -2.682982921600342
    6. '1' → logprob: -3.682982921600342
    7. 'type' → logprob: -4.057982921600342
    8. ' type' → logprob: -4.932982921600342
    9. 'mot' → logprob: -5.182982921600342
    10. 'temps' → logprob: -5.307982921600342

Token 42: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5652379393577576
    2. 'token' → logprob: -2.9402379989624023
    3. 'es' → logprob: -2.9402379989624023
    4. '_' → logprob: -3.0652379989624023
    5. ' espace' → logprob: -3.1902379989624023
    6. '<|end|>' → logprob: -3.1902379989624023
    7. 'space' → logprob: -3.3152379989624023
    8. ',' → logprob: -3.8152379989624023
    9. '.' → logprob: -3.8152379989624023
    10. '[' → logprob: -4.440237998962402

Token 43: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: ' Je' (ID: 4678)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.2564496994018555
    2. '[' → logprob: -1.6314496994018555
    3. ' ' → logprob: -1.6314496994018555
    4. '=' → logprob: -2.3814496994018555
    5. '.' → logprob: -3.2564496994018555
    6. '#' → logprob: -3.5064496994018555
    7. 'inp' → logprob: -3.5064496994018555
    8. ')' → logprob: -3.6314496994018555
    9. ' 
' → logprob: -4.1314496994018555
    10. ',' → logprob: -4.2564496994018555

Token 45: ' suppose' (ID: 35968)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.5452659130096436
    2. ' prends' → logprob: -1.1702659130096436
    3. ' continue' → logprob: -3.6702659130096436
    4. 'm' → logprob: -3.9202659130096436
    5. ' vais' → logprob: -4.170266151428223
    6. ' pense' → logprob: -4.295266151428223
    7. ' veux' → logprob: -4.920266151428223
    8. ' suppose' → logprob: -5.420266151428223
    9. ' n' → logprob: -5.545266151428223
    10. 'u' → logprob: -6.045266151428223

Token 46: ' qu' (ID: 474)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.138784259557724
    2. '<|end|>' → logprob: -2.638784170150757
    3. ' =' → logprob: -3.513784170150757
    4. 'm' → logprob: -5.388784408569336
    5. ' m' → logprob: -5.763784408569336
    6. '.' → logprob: -5.763784408569336
    7. ',' → logprob: -5.888784408569336
    8. '  ' → logprob: -6.263784408569336
    9. '<|end|>' → logprob: -6.388784408569336
    10. ' that' → logprob: -6.513784408569336

Token 47: ''on' (ID: 25812)
  Prédit: ''on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''on' → logprob: -0.032616786658763885
    2. 'e' → logprob: -4.40761661529541
    3. ''il' → logprob: -4.53261661529541
    4. 'on' → logprob: -5.15761661529541
    5. ' on' → logprob: -6.40761661529541
    6. ''' → logprob: -6.90761661529541
    7. ''ici' → logprob: -8.90761661529541
    8. 'que' → logprob: -9.15761661529541
    9. '’on' → logprob: -9.15761661529541
    10. 'il' → logprob: -9.40761661529541

Token 48: ' fait' (ID: 7473)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7896538376808167
    2. ' veut' → logprob: -2.289653778076172
    3. ' a' → logprob: -2.539653778076172
    4. ' va' → logprob: -2.664653778076172
    5. 'n' → logprob: -3.289653778076172
    6. ' lit' → logprob: -3.789653778076172
    7. 'ne' → logprob: -3.789653778076172
    8. 'do' → logprob: -3.789653778076172
    9. 'va' → logprob: -4.039653778076172
    10. '```' → logprob: -4.164653778076172

Token 49: ' pareil' (ID: 155569)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7633920907974243
    2. ' un' → logprob: -1.6383920907974243
    3. ' =' → logprob: -2.2633919715881348
    4. ' une' → logprob: -2.8883919715881348
    5. ' la' → logprob: -3.5133919715881348
    6. 'un' → logprob: -4.013391971588135
    7. ' ' → logprob: -4.263391971588135
    8. 'l' → logprob: -4.263391971588135
    9. ' m' → logprob: -4.513391971588135
    10. ' pareil' → logprob: -4.638391971588135

Token 50: ' ici' (ID: 27994)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8634596467018127
    2. ' inp' → logprob: -1.863459587097168
    3. 'inp' → logprob: -1.863459587097168
    4. ' for' → logprob: -1.988459587097168
    5. '```' → logprob: -3.363459587097168
    6. '(inp' → logprob: -4.113459587097168
    7. 's' → logprob: -4.363459587097168
    8. ',' → logprob: -4.363459587097168
    9. ' ' → logprob: -4.613459587097168
    10. '<|end|>' → logprob: -4.863459587097168

Token 51: '
' (ID: 198)
  Prédit: 'inp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inp' → logprob: -1.3108748197555542
    2. ' 
' → logprob: -1.5608748197555542
    3. ' inp' → logprob: -1.6858748197555542
    4. ' ' → logprob: -1.6858748197555542
    5. '  
' → logprob: -2.4358749389648438
    6. '<|end|>' → logprob: -3.5608749389648438
    7. ',' → logprob: -5.185874938964844
    8. '(inp' → logprob: -5.435874938964844
    9. '```' → logprob: -5.685874938964844
    10. '
' → logprob: -5.935874938964844

Token 52: 'm' (ID: 76)
  Prédit: ' inp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inp' → logprob: -0.5782687067985535
    2. 'inp' → logprob: -0.8282687067985535
    3. ' ' → logprob: -7.578268527984619
    4. 'in' → logprob: -8.078269004821777
    5. ' in' → logprob: -8.453269004821777
    6. ' 
' → logprob: -8.578269004821777
    7. '```' → logprob: -8.703269004821777
    8. 'i' → logprob: -8.828269004821777
    9. '  
' → logprob: -8.953269004821777
    10. '(inp' → logprob: -8.953269004821777

Token 53: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.240481914370321e-05
    2. '1' → logprob: -9.875052452087402
    3. 'i' → logprob: -15.500052452087402
    4. 'a' → logprob: -15.625052452087402
    5. '0' → logprob: -16.000051498413086
    6. ' =' → logprob: -17.125051498413086
    7. 's' → logprob: -17.375051498413086
    8. '_' → logprob: -17.500051498413086
    9. 'e' → logprob: -17.875051498413086
    10. '=' → logprob: -17.875051498413086

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054883524775505066
    2. '=' → logprob: -2.9298834800720215
    3. '=input' → logprob: -14.42988395690918
    4. ' ' → logprob: -14.80488395690918
    5. ',' → logprob: -15.92988395690918
    6. 's' → logprob: -16.67988395690918
    7. ')' → logprob: -17.05488395690918
    8. ' ' → logprob: -17.30488395690918
    9. '[' → logprob: -18.30488395690918
    10. '=int' → logprob: -18.67988395690918

Token 55: ' input' (ID: 3422)
  Prédit: ' inp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inp' → logprob: -1.2979695796966553
    2. 'inp' → logprob: -1.2979695796966553
    3. 'input' → logprob: -1.4229695796966553
    4. ' input' → logprob: -1.5479695796966553
    5. 'int' → logprob: -10.047969818115234
    6. ' int' → logprob: -10.735469818115234
    7. ' ' → logprob: -11.297969818115234
    8. ' in' → logprob: -11.547969818115234
    9. 'in' → logprob: -11.735469818115234
    10. '(inp' → logprob: -11.860469818115234

Token 56: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10028505325317383
    2. '().' → logprob: -2.350285053253174
    3. '(' → logprob: -10.600284576416016
    4. ' ()' → logprob: -10.850284576416016
    5. '()`' → logprob: -12.350284576416016
    6. '())' → logprob: -12.475284576416016
    7. '()(' → logprob: -12.475284576416016
    8. '`()' → logprob: -12.725284576416016
    9. '()

' → logprob: -12.975284576416016
    10. '();' → logprob: -13.350284576416016

Token 57: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.629921436891891e-05
    2. 'strip' → logprob: -10.75002670288086
    3. ' split' → logprob: -12.87502670288086
    4. 'spl' → logprob: -13.37502670288086
    5. 'read' → logprob: -15.00002670288086
    6. 'rstrip' → logprob: -15.75002670288086
    7. '(split' → logprob: -16.50002670288086
    8. '<|end|>' → logprob: -17.12502670288086
    9. 'input' → logprob: -17.37502670288086
    10. 'startswith' → logprob: -17.50002670288086

Token 58: '()[' (ID: 20778)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0028558745980262756
    2. '(' → logprob: -5.8778557777404785
    3. '()(' → logprob: -11.377856254577637
    4. '`()' → logprob: -11.752856254577637
    5. '()[' → logprob: -12.002856254577637
    6. ' ()' → logprob: -12.127856254577637
    7. '()`' → logprob: -12.127856254577637
    8. '()
' → logprob: -12.627856254577637
    9. '()

' → logprob: -13.252856254577637
    10. '().' → logprob: -13.377856254577637

Token 59: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.292907877039397e-06
    2. '1' → logprob: -13.00000286102295
    3. ' ' → logprob: -13.87500286102295
    4. '۰' → logprob: -18.437503814697266
    5. '```' → logprob: -19.125003814697266
    6. '2' → logprob: -19.187503814697266
    7. '00' → logprob: -19.562503814697266
    8. '-' → logprob: -19.750003814697266
    9. ' ' → logprob: -19.875003814697266
    10. '٠' → logprob: -19.937503814697266

Token 60: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004167202394455671
    2. ')' → logprob: -5.629167079925537
    3. ')]' → logprob: -7.754167079925537
    4. ' ]' → logprob: -9.004167556762695
    5. '']' → logprob: -11.629167556762695
    6. '])' → logprob: -13.129167556762695
    7. '#' → logprob: -13.379167556762695
    8. ']
' → logprob: -13.754167556762695
    9. '`]' → logprob: -14.629167556762695
    10. '}' → logprob: -15.379167556762695

Token 61: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.27081260085105896
    2. '+' → logprob: -2.145812511444092
    3. '=' → logprob: -2.895812511444092
    4. '<|end|>' → logprob: -3.895812511444092
    5. '*' → logprob: -4.895812511444092
    6. ' ' → logprob: -5.145812511444092
    7. ')' → logprob: -5.270812511444092
    8. '
' → logprob: -5.395812511444092
    9. '[' → logprob: -5.395812511444092
    10. 'm' → logprob: -5.645812511444092

Token 62: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9114392399787903
    2. 'if' → logprob: -1.6614391803741455
    3. ' if' → logprob: -2.6614391803741455
    4. ' ' → logprob: -2.7864391803741455
    5. 'for' → logprob: -3.0364391803741455
    6. 'n' → logprob: -3.1614391803741455
    7. 'print' → logprob: -3.6614391803741455
    8. ' #' → logprob: -3.7864391803741455
    9. ' for' → logprob: -4.161439418792725
    10. 'result' → logprob: -4.286439418792725

Token 63: ' commence' (ID: 44755)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1240650415420532
    2. 'continue' → logprob: -1.8740650415420532
    3. ' continue' → logprob: -2.9990649223327637
    4. ' va' → logprob: -3.2490649223327637
    5. 'a' → logprob: -3.3740649223327637
    6. 'compare' → logprob: -3.4990649223327637
    7. 'print' → logprob: -3.4990649223327637
    8. 'def' → logprob: -3.6240649223327637
    9. 'lit' → logprob: -3.6240649223327637
    10. ' veut' → logprob: -3.7490649223327637

Token 64: ' par' (ID: 686)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4908779859542847
    2. 'n' → logprob: -1.7408779859542847
    3. '#' → logprob: -1.8658779859542847
    4. 'i' → logprob: -2.115878105163574
    5. '=' → logprob: -2.490878105163574
    6. ' ' → logprob: -3.115878105163574
    7. ' for' → logprob: -3.115878105163574
    8. ':' → logprob: -3.615878105163574
    9. ' 
' → logprob: -3.615878105163574
    10. 'm' → logprob: -3.865878105163574

Token 65: ' mettre' (ID: 25339)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -1.41660475730896
    2. 'for' → logprob: -2.04160475730896
    3. ' for' → logprob: -2.16660475730896
    4. ' la' → logprob: -2.91660475730896
    5. 'm' → logprob: -3.04160475730896
    6. ' if' → logprob: -3.66660475730896
    7. 'l' → logprob: -3.66660475730896
    8. 'int' → logprob: -3.66660475730896
    9. 'if' → logprob: -3.79160475730896
    10. '#' → logprob: -3.79160475730896

Token 66: ' ans' (ID: 3345)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9126738905906677
    2. ' m' → logprob: -1.5376739501953125
    3. 'm' → logprob: -2.5376739501953125
    4. ' une' → logprob: -3.1626739501953125
    5. ' ' → logprob: -3.5376739501953125
    6. ' un' → logprob: -3.6626739501953125
    7. ' a' → logprob: -3.7876739501953125
    8. ' les' → logprob: -3.9126739501953125
    9. ' l' → logprob: -3.9126739501953125
    10. 'une' → logprob: -4.1626739501953125

Token 67: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07004791498184204
    2. '=' → logprob: -2.6950478553771973
    3. 's' → logprob: -9.320048332214355
    4. 'ans' → logprob: -11.695048332214355
    5. ' ' → logprob: -11.945048332214355
    6. ' =
' → logprob: -13.445048332214355
    7. ' ' → logprob: -13.570048332214355
    8. ',' → logprob: -14.070048332214355
    9. '=

' → logprob: -14.695048332214355
    10. '=""' → logprob: -14.820048332214355

Token 68: ' zéro' (ID: 182040)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3781721293926239
    2. '0' → logprob: -1.2531721591949463
    3. ' m' → logprob: -4.628171920776367
    4. '1' → logprob: -5.003171920776367
    5. ' zero' → logprob: -5.378171920776367
    6. 'm' → logprob: -5.753171920776367
    7. ' zéro' → logprob: -6.503171920776367
    8. ' -' → logprob: -7.253171920776367
    9. '-' → logprob: -7.878171920776367
    10. '  ' → logprob: -8.128171920776367

Token 69: ',' (ID: 11)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5396750569343567
    2. 'a' → logprob: -1.039674997329712
    3. ' ans' → logprob: -3.164674997329712
    4. '=' → logprob: -4.914675235748291
    5. ' =' → logprob: -5.039675235748291
    6. ' 
' → logprob: -5.914675235748291
    7. ' ' → logprob: -6.039675235748291
    8. ' a' → logprob: -7.914675235748291
    9. '
' → logprob: -8.039674758911133
    10. '_ans' → logprob: -8.289674758911133

Token 70: ' c' (ID: 274)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.27099308371543884
    2. 'a' → logprob: -2.0209929943084717
    3. ' ans' → logprob: -2.2709929943084717
    4. ' a' → logprob: -6.770993232727051
    5. ' ' → logprob: -8.89599323272705
    6. ' 
' → logprob: -9.27099323272705
    7. '	ans' → logprob: -9.52099323272705
    8. '_ans' → logprob: -10.14599323272705
    9. '```' → logprob: -10.27099323272705
    10. ' =' → logprob: -11.02099323272705

Token 71: ''est' (ID: 6616)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9066252708435059
    2. '=' → logprob: -1.4066252708435059
    3. ' =' → logprob: -2.156625270843506
    4. 'o' → logprob: -3.031625270843506
    5. 'e' → logprob: -3.031625270843506
    6. ''' → logprob: -3.531625270843506
    7. '_' → logprob: -3.906625270843506
    8. '`' → logprob: -4.281625270843506
    9. 'omme' → logprob: -4.531625270843506
    10. '''' → logprob: -4.781625270843506

Token 72: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.45773282647132874
    2. ' ' → logprob: -1.0827327966690063
    3. ' =' → logprob: -4.082732677459717
    4. '=' → logprob: -5.832732677459717
    5. 'ans' → logprob: -6.207732677459717
    6. ' ans' → logprob: -6.457732677459717
    7. '1' → logprob: -6.832732677459717
    8. '  ' → logprob: -6.957732677459717
    9. ' a' → logprob: -7.707732677459717
    10. '```' → logprob: -7.832732677459717

Token 73: ' base' (ID: 3611)
  Prédit: ' variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' variable' → logprob: -0.9308440089225769
    2. 'ans' → logprob: -1.4308440685272217
    3. 'variable' → logprob: -1.4308440685272217
    4. 'n' → logprob: -3.5558440685272217
    5. 'answer' → logprob: -4.180843830108643
    6. ' ' → logprob: -4.180843830108643
    7. ' answer' → logprob: -4.305843830108643
    8. ' ans' → logprob: -4.680843830108643
    9. 'val' → logprob: -4.930843830108643
    10. 's' → logprob: -5.305843830108643

Token 74: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7205761671066284
    2. 'a' → logprob: -0.8455761671066284
    3. ' ans' → logprob: -2.720576286315918
    4. ' 
' → logprob: -4.345576286315918
    5. '
' → logprob: -7.095576286315918
    6. ' a' → logprob: -7.095576286315918
    7. ' ' → logprob: -7.220576286315918
    8. ' =' → logprob: -7.470576286315918
    9. '=' → logprob: -7.595576286315918
    10. ' 

' → logprob: -7.720576286315918

Token 75: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.05556982383131981
    2. 'a' → logprob: -2.930569887161255
    3. ' ans' → logprob: -7.430569648742676
    4. ' 
' → logprob: -10.680569648742676
    5. '```' → logprob: -10.680569648742676
    6. '`' → logprob: -11.180569648742676
    7. '	ans' → logprob: -12.180569648742676
    8. ' a' → logprob: -12.305569648742676
    9. '
' → logprob: -12.555569648742676
    10. '_ans' → logprob: -12.555569648742676

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04902241751551628
    2. '=' → logprob: -3.0490224361419678
    3. ' ' → logprob: -7.799022197723389
    4. '_' → logprob: -11.174022674560547
    5. ' ' → logprob: -12.299022674560547
    6. 's' → logprob: -13.549022674560547
    7. 'space' → logprob: -13.549022674560547
    8. '  ' → logprob: -13.924022674560547
    9. ',' → logprob: -14.549022674560547
    10. '.' → logprob: -14.799022674560547

Token 77: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.048589639365673065
    2. ' ' → logprob: -3.0485897064208984
    3. 'int' → logprob: -14.298589706420898
    4. ' ' → logprob: -14.423589706420898
    5. '1' → logprob: -15.486089706420898
    6. ' m' → logprob: -15.673589706420898
    7. 'm' → logprob: -15.736089706420898
    8. ' int' → logprob: -15.798589706420898
    9. '  ' → logprob: -16.2985897064209
    10. '   ' → logprob: -16.9860897064209

Token 78: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. 'int' → logprob: -15.875065803527832
    4. '1' → logprob: -18.25006675720215
    5. '"' → logprob: -18.87506675720215
    6. '00' → logprob: -19.43756675720215
    7. '   ' → logprob: -19.56256675720215
    8. '000' → logprob: -19.75006675720215
    9. '=' → logprob: -19.81256675720215
    10. 'm' → logprob: -19.81256675720215

Token 79: ' 

' (ID: 1202)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: 'if' (ID: 366)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7271751165390015
    2. 'for' → logprob: -1.3521751165390015
    3. 'if' → logprob: -2.227175235748291
    4. 'i' → logprob: -2.477175235748291
    5. '<|end|>' → logprob: -3.852175235748291
    6. 'n' → logprob: -4.102175235748291
    7. '.' → logprob: -5.227175235748291
    8. '
' → logprob: -5.477175235748291
    9. 'while' → logprob: -5.477175235748291
    10. '+' → logprob: -6.602175235748291

Token 81: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.010101808235049248
    2. 'm' → logprob: -4.635101795196533
    3. ' ' → logprob: -8.260102272033691
    4. ' ' → logprob: -9.885102272033691
    5. ' inp' → logprob: -11.510102272033691
    6. ' len' → logprob: -11.510102272033691
    7. ' '' → logprob: -12.885102272033691
    8. '  ' → logprob: -12.885102272033691
    9. ' int' → logprob: -13.385102272033691
    10. ' ans' → logprob: -13.635102272033691

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010986098641296849
    2. '2' → logprob: -9.125109672546387
    3. ' ' → logprob: -16.187610626220703
    4. 'a' → logprob: -16.312610626220703
    5. '```' → logprob: -16.375110626220703
    6. '１' → logprob: -16.625110626220703
    7. '=' → logprob: -17.062610626220703
    8. '_' → logprob: -17.187610626220703
    9. '>' → logprob: -17.312610626220703
    10. 'e' → logprob: -17.437610626220703

Token 83: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7011277675628662
    2. ' >' → logprob: -1.7011277675628662
    3. '>' → logprob: -2.201127767562866
    4. '==' → logprob: -2.326127767562866
    5. ' !=' → logprob: -2.451127767562866
    6. '!=' → logprob: -4.576128005981445
    7. ' <' → logprob: -4.951128005981445
    8. '=' → logprob: -5.951128005981445
    9. '<' → logprob: -5.951128005981445
    10. '.' → logprob: -6.701128005981445

Token 84: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.003062319243326783
    2. ' m' → logprob: -6.3780622482299805
    3. '"' → logprob: -7.3780622482299805
    4. ''' → logprob: -7.5030622482299805
    5. ''m' → logprob: -9.50306224822998
    6. ''+' → logprob: -11.25306224822998
    7. '"+"' → logprob: -11.25306224822998
    8. ' ' → logprob: -11.37806224822998
    9. '0' → logprob: -11.37806224822998
    10. '1' → logprob: -11.62806224822998

Token 85: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.42870983481407166
    2. '1' → logprob: -1.053709864616394
    3. '_' → logprob: -12.803709983825684
    4. '"' → logprob: -13.428709983825684
    5. ' ' → logprob: -13.428709983825684
    6. ''' → logprob: -13.928709983825684
    7. '   ' → logprob: -15.491209983825684
    8. '```' → logprob: -15.491209983825684
    9. '₂' → logprob: -15.803709983825684
    10. 's' → logprob: -15.991209983825684

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.180879816180095e-05
    2. ' :' → logprob: -10.000051498413086
    3. ':
' → logprob: -12.000051498413086
    4. ':**' → logprob: -16.375051498413086
    5. ':

' → logprob: -17.500051498413086
    6. ':
' → logprob: -17.625051498413086
    7. '=' → logprob: -17.750051498413086
    8. '):' → logprob: -18.250051498413086
    9. '.' → logprob: -18.625051498413086
    10. ' and' → logprob: -18.750051498413086

Token 87: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043010611087083817
    2. '   ' → logprob: -3.668010711669922
    3. ':
' → logprob: -4.168010711669922
    4. ' :' → logprob: -7.293010711669922
    5. ' :
' → logprob: -9.418010711669922
    6. ' ' → logprob: -9.543010711669922
    7. '.' → logprob: -9.668010711669922
    8. '  ' → logprob: -10.418010711669922
    9. ' and' → logprob: -10.543010711669922
    10. '	ans' → logprob: -11.043010711669922

Token 88: ' pass' (ID: 1853)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.33363765478134155
    2. ' ans' → logprob: -1.3336377143859863
    3. '   ' → logprob: -4.333637714385986
    4. 'print' → logprob: -5.458637714385986
    5. ' print' → logprob: -7.208637714385986
    6. '	ans' → logprob: -7.333637714385986
    7. ' pass' → logprob: -7.458637714385986
    8. 'pass' (adapté à ' pass') → logprob: -7.833637714385986
    9. ' ' → logprob: -8.958637237548828
    10. '(ans' → logprob: -9.333637237548828

Token 89: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3006218671798706
    2. '<|end|>' → logprob: -1.9256218671798706
    3. '
' → logprob: -2.92562198638916
    4. ' else' → logprob: -3.67562198638916
    5. '   ' → logprob: -4.67562198638916
    6. '\n' → logprob: -5.30062198638916
    7. 'elif' → logprob: -5.42562198638916
    8. ':' → logprob: -5.80062198638916
    9. ' ' → logprob: -5.92562198638916
    10. '<|end|>' → logprob: -6.05062198638916

Token 90: ' rien' (ID: 23082)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.572940707206726
    2. 'else' → logprob: -1.572940707206726
    3. '<|end|>' → logprob: -1.697940707206726
    4. '#' → logprob: -2.1979408264160156
    5. ' ' → logprob: -2.5729408264160156
    6. ' else' → logprob: -2.9479408264160156
    7. '\n' → logprob: -3.3229408264160156
    8. '
' → logprob: -3.4479408264160156
    9. 'ans' → logprob: -4.072940826416016
    10. '<|end|>' → logprob: -4.447940826416016

Token 91: ' à' (ID: 1221)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.020842334255576134
    2. 'elif' → logprob: -4.645842552185059
    3. '<|end|>' → logprob: -4.645842552185059
    4. ' else' → logprob: -7.020842552185059
    5. '_else' → logprob: -8.520842552185059
    6. '<|end|>' → logprob: -9.645842552185059
    7. '```' → logprob: -9.770842552185059
    8. '+' → logprob: -10.270842552185059
    9. 'es' → logprob: -10.395842552185059
    10. 'elser' → logprob: -10.770842552185059

Token 92: ' faire' (ID: 8119)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.001356667373329401
    2. 'f' → logprob: -7.251356601715088
    3. ' faire' → logprob: -7.876356601715088
    4. 'changer' → logprob: -8.751357078552246
    5. 'do' → logprob: -9.751357078552246
    6. 'fait' → logprob: -11.126357078552246
    7. 'Faire' → logprob: -11.876357078552246
    8. '```' → logprob: -11.876357078552246
    9. 'fair' → logprob: -12.126357078552246
    10. '   ' → logprob: -12.876357078552246

Token 93: ',' (ID: 11)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.016249842941761017
    2. 'elif' → logprob: -4.516249656677246
    3. ' else' → logprob: -5.391249656677246
    4. '
' → logprob: -8.516249656677246
    5. '<|end|>' → logprob: -8.516249656677246
    6. '\n' → logprob: -9.266249656677246
    7. 's' → logprob: -10.391249656677246
    8. '.' → logprob: -11.141249656677246
    9. '_else' → logprob: -11.516249656677246
    10. ':' → logprob: -11.516249656677246

Token 94: ' déjà' (ID: 21229)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.18646524846553802
    2. 'ans' → logprob: -2.311465263366699
    3. ' else' → logprob: -3.186465263366699
    4. 'elif' → logprob: -4.061465263366699
    5. ' ans' → logprob: -4.936465263366699
    6. '#' → logprob: -6.686465263366699
    7. ' on' → logprob: -7.186465263366699
    8. '   ' → logprob: -7.436465263366699
    9. ' ' → logprob: -7.936465263366699
    10. '
' → logprob: -8.1864652633667

Token 95: ' ' (ID: 220)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.004364490509033203
    2. 'elif' → logprob: -5.629364490509033
    3. ' else' → logprob: -7.254364490509033
    4. '
' → logprob: -10.504364013671875
    5. '_else' → logprob: -11.629364013671875
    6. '#else' → logprob: -12.504364013671875
    7. '```' → logprob: -12.504364013671875
    8. '\n' → logprob: -12.754364013671875
    9. 'ans' → logprob: -13.129364013671875
    10. 'endif' → logprob: -13.879364013671875

Token 96: '0' (ID: 15)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4607880711555481
    2. 'elif' → logprob: -1.9607880115509033
    3. 'continue' → logprob: -2.4607880115509033
    4. 'ans' → logprob: -2.4607880115509033
    5. 'contin' → logprob: -4.835788249969482
    6. 'ici' → logprob: -4.960788249969482
    7. 'fait' → logprob: -5.335788249969482
    8. 'correct' → logprob: -5.585788249969482
    9. 'plus' → logprob: -6.210788249969482
    10. 'if' → logprob: -6.210788249969482

Token 97: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.282021164894104
    2. 'elif' → logprob: -1.407021164894104
    3. ' else' → logprob: -7.1570210456848145
    4. ' elif' → logprob: -9.907021522521973
    5. 'if' → logprob: -10.657021522521973
    6. '<|end|>' → logprob: -12.407021522521973
    7. '```' → logprob: -13.032021522521973
    8. '#' → logprob: -13.032021522521973
    9. 'elseif' → logprob: -13.532021522521973
    10. 'endif' → logprob: -13.657021522521973

Token 98: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.04906703159213066
    2. 'elif' → logprob: -3.0490670204162598
    3. ' else' → logprob: -7.67406702041626
    4. ' elif' → logprob: -12.299067497253418
    5. 'if' → logprob: -12.674067497253418
    6. 'els' → logprob: -13.174067497253418
    7. '```' → logprob: -14.049067497253418
    8. 'e' → logprob: -14.174067497253418
    9. 'el' → logprob: -14.549067497253418
    10. 's' → logprob: -14.924067497253418

Token 99: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02233937568962574
    2. ':
' → logprob: -3.897339344024658
    3. ' :' → logprob: -7.022339344024658
    4. ' if' → logprob: -7.272339344024658
    5. ' :
' → logprob: -9.022339820861816
    6. '   ' → logprob: -9.772339820861816
    7. 'if' → logprob: -10.647339820861816
    8. ':

' → logprob: -12.772339820861816
    9. ':
' → logprob: -13.272339820861816
    10. ',' → logprob: -14.522339820861816

Token 100: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6435524225234985
    2. ' ans' → logprob: -0.8935524225234985
    3. ' if' → logprob: -3.018552303314209
    4. 'ans' → logprob: -4.393552303314209
    5. '    ' → logprob: -7.018552303314209
    6. '	ans' → logprob: -7.143552303314209
    7. ' for' → logprob: -7.518552303314209
    8. ' #' → logprob: -8.143552780151367
    9. '    
' → logprob: -8.143552780151367
    10. 'if' → logprob: -8.393552780151367

Token 101: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2337760478258133
    2. ' =' → logprob: -1.8587760925292969
    3. '+=' → logprob: -3.233776092529297
    4. '=' → logprob: -4.358776092529297
    5. ' ' → logprob: -8.358776092529297
    6. ' -=' → logprob: -9.233776092529297
    7. '1' → logprob: -10.358776092529297
    8. ' ' → logprob: -11.733776092529297
    9. '+' → logprob: -12.108776092529297
    10. '  ' → logprob: -12.483776092529297

Token 102: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01996491104364395
    2. ' ' → logprob: -4.644964694976807
    3. 'abs' → logprob: -4.894964694976807
    4. '2' → logprob: -7.144964694976807
    5. ' abs' → logprob: -7.894964694976807
    6. 'm' → logprob: -8.019965171813965
    7. 'len' → logprob: -8.144965171813965
    8. 'max' → logprob: -8.394965171813965
    9. '3' → logprob: -8.769965171813965
    10. '6' → logprob: -9.144965171813965

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020984651520848274
    2. 'abs' → logprob: -4.020984649658203
    3. '2' → logprob: -6.895984649658203
    4. 'max' → logprob: -7.895984649658203
    5. 'm' → logprob: -8.020984649658203
    6. '3' → logprob: -8.520984649658203
    7. 'len' → logprob: -8.645984649658203
    8. 'int' → logprob: -8.645984649658203
    9. 'min' → logprob: -9.145984649658203
    10. ' ' → logprob: -9.270984649658203

Token 104: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: ' sinon' (ID: 52915)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5629464387893677
    2. 'print' → logprob: -1.0629464387893677
    3. ' #' → logprob: -3.562946319580078
    4. '<|end|>' → logprob: -3.812946319580078
    5. ' ' → logprob: -4.437946319580078
    6. ' print' → logprob: -4.687946319580078
    7. 'if' → logprob: -5.562946319580078
    8. ' if' → logprob: -5.937946319580078
    9. 'pass' → logprob: -6.687946319580078
    10. 'else' → logprob: -6.937946319580078

Token 106: ' faut' (ID: 17821)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' mettre' (ID: 25339)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'increment' → logprob: -1.5670801401138306
    2. ' compter' → logprob: -1.9420801401138306
    3. ' changer' → logprob: -1.9420801401138306
    4. 'changer' → logprob: -2.442080020904541
    5. 'switch' → logprob: -3.192080020904541
    6. ' ajouter' → logprob: -3.317080020904541
    7. ' augmenter' → logprob: -3.567080020904541
    8. ' comparer' → logprob: -3.692080020904541
    9. ' increment' → logprob: -3.817080020904541
    10. ' y' → logprob: -3.942080020904541

Token 108: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7540788054466248
    2. ' ' → logprob: -1.1290788650512695
    3. ' ans' → logprob: -2.7540788650512695
    4. ' un' → logprob: -2.8790788650512695
    5. ' une' → logprob: -3.7540788650512695
    6. 'ans' → logprob: -4.1290788650512695
    7. 'le' → logprob: -4.2540788650512695
    8. 'un' → logprob: -5.2540788650512695
    9. 'une' → logprob: -5.2540788650512695
    10. ' le' → logprob: -5.7540788650512695

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.261942058801651
    2. 'ans' → logprob: -1.6369420289993286
    3. 'le' → logprob: -4.761941909790039
    4. ' ' → logprob: -5.136941909790039
    5. 'à' → logprob: -5.261941909790039
    6. 'un' → logprob: -5.386941909790039
    7. 'la' → logprob: -5.636941909790039
    8. ' ans' → logprob: -6.261941909790039
    9. 'une' → logprob: -6.386941909790039
    10. 'l' → logprob: -7.011941909790039

Token 110: '...' (ID: 1008)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' logique' (ID: 115350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: ' ?

' (ID: 13570)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: ' Aff' (ID: 13741)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: 'iche' (ID: 7509)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.010172023437917233
    2. 'iche' → logprob: -4.760171890258789
    3. 'ichage' → logprob: -6.760171890258789
    4. 'ich' → logprob: -8.260171890258789
    5. '#' → logprob: -9.010171890258789
    6. 'print' → logprob: -12.135171890258789
    7. 'f' → logprob: -12.635171890258789
    8. 'cher' → logprob: -12.760171890258789
    9. 'ic' → logprob: -13.510171890258789
    10. 'ichier' → logprob: -14.010171890258789

Token 116: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.024633800610899925
    2. 'print' → logprob: -3.7746338844299316
    3. '(' → logprob: -6.774633884429932
    4. '(print' → logprob: -8.774633407592773
    5. 'ans' → logprob: -9.399633407592773
    6. ' print' → logprob: -12.774633407592773
    7. '(answer' → logprob: -13.024633407592773
    8. ' (' → logprob: -13.149633407592773
    9. ' ans' → logprob: -14.899633407592773
    10. '(f' → logprob: -16.649633407592773

Token 117: ' réponse' (ID: 50332)
  Prédit: ' réponse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' réponse' → logprob: -0.37684598565101624
    2. 's' → logprob: -2.0018460750579834
    3. ' solution' → logprob: -3.2518460750579834
    4. ' suite' → logprob: -3.2518460750579834
    5. 'suite' → logprob: -3.2518460750579834
    6. 'ré' → logprob: -4.126845836639404
    7. 'solution' → logprob: -4.126845836639404
    8. 'r' → logprob: -5.251845836639404
    9. ' résultat' → logprob: -5.251845836639404
    10. ' valeur' → logprob: -5.626845836639404

Token 118: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5048530030981055e-06
    2. ' print' → logprob: -13.500001907348633
    3. '```' → logprob: -16.750001907348633
    4. '
' → logprob: -18.000001907348633
    5. '``' → logprob: -21.750001907348633
    6. '.print' → logprob: -22.125001907348633
    7. '(print' → logprob: -22.250001907348633
    8. ')
' → logprob: -22.750001907348633
    9. '#print' → logprob: -23.500001907348633
    10. '-print' → logprob: -23.750001907348633

Token 119: ' voilà' (ID: 77612)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00020354038861114532
    2. ' print' → logprob: -8.500203132629395
    3. '```' → logprob: -18.87520408630371
    4. '
' → logprob: -21.62520408630371
    5. 'pr' → logprob: -22.50020408630371
    6. '#print' → logprob: -22.87520408630371
    7. 'ans' → logprob: -23.12520408630371
    8. '#' → logprob: -23.37520408630371
    9. '``' → logprob: -23.87520408630371
    10. '   ' → logprob: -23.87520408630371

Token 120: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.7697225252486533e-06
    2. ' print' → logprob: -13.250003814697266
    3. '
' → logprob: -13.500003814697266
    4. '```' → logprob: -14.250003814697266
    5. '``' → logprob: -18.875003814697266
    6. ')
' → logprob: -19.875003814697266
    7. '
' → logprob: -21.000003814697266
    8. '.print' → logprob: -21.250003814697266
    9. '(print' → logprob: -21.500003814697266
    10. '#print' → logprob: -21.750003814697266

Token 121: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -14.500000953674316
    3. ' print' → logprob: -15.250000953674316
    4. '
' → logprob: -20.375
    5. '``' → logprob: -21.0
    6. '`' → logprob: -24.625
    7. '(print' → logprob: -25.125
    8. '#print' → logprob: -25.5
    9. 'Print' → logprob: -25.5
    10. '
' → logprob: -25.75

Token 122: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0015153385465964675
    2. '(' → logprob: -6.5015153884887695
    3. '()' → logprob: -11.62651538848877
    4. 'ans' → logprob: -12.87651538848877
    5. ' (' → logprob: -14.62651538848877
    6. '(abs' → logprob: -14.87651538848877
    7. '(answer' → logprob: -15.50151538848877
    8. '(
' → logprob: -15.87651538848877
    9. '('' → logprob: -17.001514434814453
    10. '((' → logprob: -17.126514434814453

Token 123: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.875
    3. '))' → logprob: -17.25
    4. ')`' → logprob: -17.25
    5. ')
' → logprob: -19.5
    6. '())' → logprob: -19.75
    7. '()' → logprob: -20.125
    8. '`)' → logprob: -20.5
    9. '')' → logprob: -20.625
    10. ')}' → logprob: -21.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 121
Tokens correctement prédits (1ère position, stricte): 26
Tokens correctement prédits (1ère position, avec adaptation): 26
Tokens correctement prédits (top 10): 56
Précision stricte (1ère position): 21.49%
Précision adaptée (1ère position): 21.49%
Précision (top 10): 46.28%
================================================================================
