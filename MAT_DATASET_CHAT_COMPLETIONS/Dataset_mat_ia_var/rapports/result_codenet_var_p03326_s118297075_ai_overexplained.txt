================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import product  # Importe la fonction 'product' du module 'itertools', qui permet de générer des produits cartésiens d'itérables.

# Utilisation de la fonction 'input' pour lire une ligne depuis l'entrée standard (habituellement le clavier).
# La fonction 'split()' convertit cette chaîne en une liste de sous-chaînes séparées par des espaces.
# La fonction 'map(int, ...)' convertit chaque sous-chaîne en un entier.
# Le résultat est unpacké dans les variables N et M.
N, M = map(int, input().split())

# Création d'une liste 'ABC' qui va contenir N sous-listes, chacune contenant trois entiers.
# On utilise une liste en compréhension pour itérer N fois (i prend les valeurs de 0 à N-1).
# À chaque itération, on lit une ligne, on la découpe en sous-chaînes, on convertit chaque sous-chaîne en un entier, puis on place le résultat dans la sous-liste correspondante.
ABC = [list(map(int, input().split())) for i in range(N)]

# Initialisation de la variable 'ans' à zéro.
# Cette variable servira à garder la valeur maximale trouvée au fil des traitements suivants.
ans = 0

# La boucle suivante utilise 'product' pour générer toutes les combinaisons possibles de signes (-1 et 1) appliqués aux trois coordonnées (x, y, z).
# 'repeat=3' signifie que pour chaque dimension (x, y, z), on considère -1 et 1, soit 2*2*2=8 possibilités au total.
for a, b, c in product([-1, 1], repeat=3):
    # Initialisation d'une liste vide 'score' qui servira à stocker des valeurs calculées pour chaque objet de la liste ABC.
    score = []
    # Pour chaque sous-liste [x, y, z] dans la liste 'ABC', on va appliquer les signes (a, b, c).
    for x, y, z in ABC:
        # On calcule la combinaison pondérée x*a + y*b + z*c pour cet objet.
        # Ceci applique le signe choisi à chaque coordonnée et effectue la somme.
        valeur = x * a + y * b + z * c
        # On ajoute cette valeur (calculée ci-dessus) à la liste 'score'.
        score.append(valeur)
    # On trie la liste 'score' en ordre décroissant pour obtenir les plus grandes valeurs en premier.
    score.sort(reverse=True)
    # On fait la somme des M premiers éléments de la liste 'score' (qui sont les plus grands après le tri).
    somme = sum(score[:M])
    # On met à jour 'ans' pour qu'il garde la plus grande valeur de 'ans' et 'somme'.
    ans = max(ans, somme)

# On affiche la valeur de 'ans', c'est-à-dire la somme maximale trouvée selon les critères du problème.
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' product' (ID: 1888)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.1646274328231812
    2. 'product' → logprob: -1.4146274328231812
    3. 'per' → logprob: -1.7896274328231812
    4. 'count' → logprob: -2.0396275520324707
    5. 'cycle' → logprob: -2.6646275520324707
    6. 'group' → logprob: -3.2896275520324707
    7. 'chain' → logprob: -3.4146275520324707
    8. 'acc' → logprob: -6.039627552032471
    9. 'is' → logprob: -6.539627552032471
    10. 'zip' → logprob: -6.914627552032471

Token 4: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00045319506898522377
    2. '\(' → logprob: -8.125452995300293
    3. '```' → logprob: -9.375452995300293
    4. '`' → logprob: -10.625452995300293
    5. ' (' → logprob: -11.500452995300293
    6. '(
' → logprob: -11.625452995300293
    7. '.' → logprob: -12.000452995300293
    8. ''' → logprob: -12.625452995300293
    9. ',' → logprob: -12.875452995300293
    10. '"' → logprob: -13.125452995300293

Token 5: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003361774142831564
    2. '\(' → logprob: -8.500336647033691
    3. '(
' → logprob: -10.000336647033691
    4. '.' → logprob: -10.000336647033691
    5. '```' → logprob: -11.250336647033691
    6. '`' → logprob: -11.500336647033691
    7. ' (' → logprob: -12.875336647033691
    8. ',' → logprob: -12.875336647033691
    9. 'a' → logprob: -13.250336647033691
    10. '\' → logprob: -13.500336647033691

Token 6: ' Im' (ID: 3133)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0076773688197135925
    2. '_' → logprob: -6.0076775550842285
    3. 'space' → logprob: -6.2576775550842285
    4. '  ' → logprob: -7.0076775550842285
    5. ' space' → logprob: -7.0076775550842285
    6. ' (' → logprob: -7.7576775550842285
    7. '(' → logprob: -8.75767707824707
    8. 'import' → logprob: -9.13267707824707
    9. ' _' → logprob: -9.50767707824707
    10. ' import' → logprob: -9.63267707824707

Token 7: 'porte' (ID: 17761)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.006403654348105192
    2. 'p' → logprob: -5.13140344619751
    3. 'ported' → logprob: -8.756403923034668
    4. 'por' → logprob: -9.631403923034668
    5. 'ports' → logprob: -9.881403923034668
    6. 'import' → logprob: -9.881403923034668
    7. 'porter' → logprob: -10.131403923034668
    8. 'po' → logprob: -10.756403923034668
    9. '```' → logprob: -11.006403923034668
    10. '#' → logprob: -11.381403923034668

Token 8: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.007453876547515392
    2. ' ' → logprob: -5.132453918457031
    3. ' r' → logprob: -7.007453918457031
    4. 's' → logprob: -8.132453918457031
    5. ',' → logprob: -9.757453918457031
    6. 'd' → logprob: -9.882453918457031
    7. 'm' → logprob: -10.382453918457031
    8. 'n' → logprob: -10.507453918457031
    9. 'ur' → logprob: -10.882453918457031
    10. 'space' → logprob: -11.007453918457031

Token 9: ' fonction' (ID: 17610)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09328316152095795
    2. 's' → logprob: -2.718283176422119
    3. ' space' → logprob: -4.843283176422119
    4. ' s' → logprob: -5.093283176422119
    5. ' combin' → logprob: -6.093283176422119
    6. 'space' → logprob: -6.343283176422119
    7. '  ' → logprob: -6.718283176422119
    8. ' itertools' → logprob: -6.718283176422119
    9. '_' → logprob: -7.468283176422119
    10. ' espacio' → logprob: -7.843283176422119

Token 10: ' '' (ID: 461)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015428035520017147
    2. '_' → logprob: -4.515428066253662
    3. ' (' → logprob: -6.265428066253662
    4. ',' → logprob: -7.515428066253662
    5. ''' → logprob: -7.765428066253662
    6. 's' → logprob: -7.765428066253662
    7. '.' → logprob: -8.390427589416504
    8. ')' → logprob: -9.140427589416504
    9. '(s' → logprob: -9.265427589416504
    10. '\' → logprob: -9.265427589416504

Token 11: 'product' (ID: 5260)
  Prédit: 'product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.0008382192463614047
    2. ''' → logprob: -8.000838279724121
    3. 'produ' → logprob: -9.250838279724121
    4. ' product' → logprob: -9.500838279724121
    5. 'import' → logprob: -10.250838279724121
    6. 'com' → logprob: -10.250838279724121
    7. 'producto' → logprob: -10.375838279724121
    8. 'cart' → logprob: -10.625838279724121
    9. 'prod' → logprob: -10.750838279724121
    10. '```' → logprob: -10.875838279724121

Token 12: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17190483212471008
    2. '(' → logprob: -2.4219048023223877
    3. ''' → logprob: -3.2969048023223877
    4. '')' → logprob: -4.296905040740967
    5. '('' → logprob: -4.671905040740967
    6. 'from' → logprob: -5.921905040740967
    7. '(
' → logprob: -6.546905040740967
    8. ' (' → logprob: -7.296905040740967
    9. ',' → logprob: -7.296905040740967
    10. 's' → logprob: -7.546905040740967

Token 13: ' du' (ID: 1462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002655797405168414
    2. '(
' → logprob: -6.377655982971191
    3. '\' → logprob: -8.377655982971191
    4. '\(' → logprob: -8.877655982971191
    5. ',' → logprob: -9.377655982971191
    6. ' (' → logprob: -9.502655982971191
    7. '```' → logprob: -9.502655982971191
    8. '\n' → logprob: -9.627655982971191
    9. '(

' → logprob: -9.627655982971191
    10. '.' → logprob: -9.877655982971191

Token 14: ' module' (ID: 8827)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.07205560058355331
    2. ' module' → logprob: -3.0720555782318115
    3. 'module' → logprob: -3.9470555782318115
    4. 'it' → logprob: -5.947055816650391
    5. 'space' → logprob: -7.947055816650391
    6. ' ' → logprob: -8.57205581665039
    7. ' space' → logprob: -9.07205581665039
    8. ' math' → logprob: -9.32205581665039
    9. '```' → logprob: -9.94705581665039
    10. 'multip' → logprob: -10.07205581665039

Token 15: ' '' (ID: 461)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.006422020960599184
    2. 'it' → logprob: -5.25642204284668
    3. ' ' → logprob: -8.50642204284668
    4. '  ' → logprob: -8.75642204284668
    5. '_' → logprob: -8.75642204284668
    6. ' de' → logprob: -9.25642204284668
    7. '.' → logprob: -9.50642204284668
    8. ' des' → logprob: -9.50642204284668
    9. ''' → logprob: -9.75642204284668
    10. ' .' → logprob: -10.13142204284668

Token 16: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.07898683845996857
    2. ' itertools' → logprob: -2.578986883163452
    3. 'iter' → logprob: -9.703987121582031
    4. '```' → logprob: -11.578987121582031
    5. ' ' → logprob: -11.953987121582031
    6. ' it' → logprob: -12.078987121582031
    7. 'math' → logprob: -12.328987121582031
    8. 'import' → logprob: -12.453987121582031
    9. '`' → logprob: -13.953987121582031
    10. '  ' → logprob: -14.453987121582031

Token 17: 'ertools' (ID: 88385)
  Prédit: 'ertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ertools' → logprob: -0.006046231836080551
    2. 'ert' → logprob: -5.506046295166016
    3. 'er' → logprob: -6.256046295166016
    4. 'erto' → logprob: -10.756046295166016
    5. 'tools' → logprob: -11.131046295166016
    6. 'ools' → logprob: -13.381046295166016
    7. 'r' → logprob: -13.381046295166016
    8. 'erts' → logprob: -13.506046295166016
    9. 'e' → logprob: -13.756046295166016
    10. 'ertu' → logprob: -13.881046295166016

Token 18: '',' (ID: 787)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028114095330238342
    2. '')' → logprob: -7.252811431884766
    3. ' )' → logprob: -8.002811431884766
    4. '\n' → logprob: -8.252811431884766
    5. ',' → logprob: -8.627811431884766
    6. ')

' → logprob: -8.752811431884766
    7. '<|end|>' → logprob: -8.752811431884766
    8. '```' → logprob: -8.877811431884766
    9. '<|end|>' → logprob: -9.127811431884766
    10. ']' → logprob: -9.252811431884766

Token 19: ' qui' (ID: 2780)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1970956325531006
    2. ',' → logprob: -1.8220956325531006
    3. ' ' → logprob: -1.8220956325531006
    4. '\' → logprob: -2.0720956325531006
    5. '
' → logprob: -2.6970956325531006
    6. '<|end|>' → logprob: -3.4470956325531006
    7. 'import' → logprob: -3.8220956325531006
    8. ' 

' → logprob: -4.07209587097168
    9. 'a' → logprob: -4.32209587097168
    10. '

' → logprob: -4.44709587097168

Token 20: ' permet' (ID: 11798)
  Prédit: ' permet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.7447478771209717
    2. ' gén' → logprob: -0.7447478771209717
    3. ' est' → logprob: -3.8697478771209717
    4. ' ' → logprob: -4.619748115539551
    5. ' produit' → logprob: -5.494748115539551
    6. ' crée' → logprob: -5.619748115539551
    7. ' calc' → logprob: -5.994748115539551
    8. 'g' → logprob: -6.119748115539551
    9. 'per' → logprob: -6.369748115539551
    10. ' fournit' → logprob: -6.994748115539551

Token 21: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.27224618196487427
    2. ' d' → logprob: -1.8972461223602295
    3. ' ' → logprob: -2.7722461223602295
    4. 'd' → logprob: -4.772246360778809
    5. 's' → logprob: -5.397246360778809
    6. 'de' → logprob: -5.397246360778809
    7. '<|end|>' → logprob: -6.022246360778809
    8. '  ' → logprob: -6.147246360778809
    9. '_' → logprob: -7.772246360778809
    10. ' à' → logprob: -7.897246360778809

Token 22: ' génér' (ID: 18939)
  Prédit: ' génér'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' génér' → logprob: -0.8521923422813416
    2. ' calcul' → logprob: -1.6021924018859863
    3. 'g' → logprob: -1.9771924018859863
    4. ' créer' → logprob: -2.2271924018859863
    5. 'calcul' → logprob: -2.7271924018859863
    6. ' faire' → logprob: -3.9771924018859863
    7. ' produire' → logprob: -4.227192401885986
    8. ' réaliser' → logprob: -4.852192401885986
    9. 'faire' → logprob: -5.227192401885986
    10. ' effectuer' → logprob: -5.852192401885986

Token 23: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6974789500236511
    2. 'e' → logprob: -1.322479009628296
    3. 'a' → logprob: -1.697479009628296
    4. 'ate' → logprob: -3.322479009628296
    5. 'r' → logprob: -4.197478771209717
    6. '```' → logprob: -7.447478771209717
    7. 'ateur' → logprob: -8.322479248046875
    8. 'at' → logprob: -8.697479248046875
    9. '_' → logprob: -9.447479248046875
    10. 'ator' → logprob: -10.322479248046875

Token 24: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23809395730495453
    2. ' des' → logprob: -1.7380939722061157
    3. 'des' → logprob: -4.363093852996826
    4. '  ' → logprob: -5.488093852996826
    5. ' toutes' → logprob: -5.488093852996826
    6. ' les' → logprob: -5.988093852996826
    7. 's' → logprob: -6.113093852996826
    8. '(' → logprob: -6.238093852996826
    9. 'les' → logprob: -6.238093852996826
    10. ' espaces' → logprob: -7.113093852996826

Token 25: ' produits' (ID: 23489)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -1.0755527019500732
    2. ' ' → logprob: -1.5755527019500732
    3. 'cart' → logprob: -2.0755527019500732
    4. 'comb' → logprob: -2.0755527019500732
    5. ' espaces' → logprob: -2.4505527019500732
    6. 'produ' → logprob: -3.9505527019500732
    7. 'com' → logprob: -4.450552940368652
    8. 't' → logprob: -4.700552940368652
    9. 'it' → logprob: -5.075552940368652
    10. ' sequences' → logprob: -5.075552940368652

Token 26: ' cart' (ID: 8149)
  Prédit: '_cart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cart' → logprob: -0.14750802516937256
    2. 'cart' → logprob: -2.147508144378662
    3. '_' → logprob: -4.772508144378662
    4. ' cart' → logprob: -5.022508144378662
    5. '(cart' → logprob: -5.897508144378662
    6. 'Cartesian' → logprob: -6.397508144378662
    7. ' Cartesian' → logprob: -7.772508144378662
    8. '```' → logprob: -9.272507667541504
    9. 'Cart' → logprob: -10.022507667541504
    10. '(' → logprob: -10.147507667541504

Token 27: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0009046725463122129
    2. 'ési' → logprob: -7.125904560089111
    3. 'esi' → logprob: -9.75090503692627
    4. 'es' → logprob: -10.50090503692627
    5. 'é' → logprob: -11.62590503692627
    6. 'e' → logprob: -14.50090503692627
    7. '\' → logprob: -14.87590503692627
    8. 'ÉS' → logprob: -14.87590503692627
    9. '_' → logprob: -15.00090503692627
    10. '```' → logprob: -15.25090503692627

Token 28: 'iens' (ID: 64394)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.02809673361480236
    2. 'iens' → logprob: -4.778096675872803
    3. 'esi' → logprob: -4.778096675872803
    4. 'i' → logprob: -5.653096675872803
    5. 'es' → logprob: -6.403096675872803
    6. 'é' → logprob: -6.528096675872803
    7. 'si' → logprob: -6.653096675872803
    8. 'ési' → logprob: -7.403096675872803
    9. 'éri' → logprob: -8.278097152709961
    10. 'e' → logprob: -8.278097152709961

Token 29: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02065727300941944
    2. '\' → logprob: -4.645657062530518
    3. '(
' → logprob: -5.395657062530518
    4. ' (' → logprob: -6.645657062530518
    5. '
' → logprob: -6.895657062530518
    6. ',' → logprob: -7.020657062530518
    7. '\(' → logprob: -7.270657062530518
    8. '\n' → logprob: -7.520657062530518
    9. ' ' → logprob: -7.520657062530518
    10. '.' → logprob: -7.895657062530518

Token 30: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.30739083886146545
    2. ''ensemble' → logprob: -1.932390809059143
    3. 'ense' → logprob: -3.1823909282684326
    4. 'e' → logprob: -3.4323909282684326
    5. 'es' → logprob: -4.0573906898498535
    6. ''entre' → logprob: -5.3073906898498535
    7. 'élé' → logprob: -5.6823906898498535
    8. ''entrée' → logprob: -5.8073906898498535
    9. 'u' → logprob: -6.1823906898498535
    10. ''ent' → logprob: -6.3073906898498535

Token 31: 'it' (ID: 278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.28187108039855957
    2. 'ense' → logprob: -1.7818710803985596
    3. 'it' → logprob: -3.5318710803985596
    4. 'élé' → logprob: -4.0318708419799805
    5. '```' → logprob: -4.1568708419799805
    6. 'iter' → logprob: -5.1568708419799805
    7. '`' → logprob: -6.2818708419799805
    8. 'ensemble' → logprob: -7.0318708419799805
    9. 'list' → logprob: -7.2818708419799805
    10. ' it' → logprob: -7.2818708419799805

Token 32: 'ér' (ID: 2156)
  Prédit: 'ér'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ér' → logprob: -0.6565538644790649
    2. 'er' → logprob: -1.406553864479065
    3. 'e' → logprob: -1.531553864479065
    4. 'ertools' → logprob: -4.406553745269775
    5. 'é' → logprob: -5.281553745269775
    6. 'érations' → logprob: -7.156553745269775
    7. '{' → logprob: -8.031554222106934
    8. 'érateur' → logprob: -8.406554222106934
    9. 'éra' → logprob: -8.531554222106934
    10. 'r' → logprob: -8.781554222106934

Token 33: 'ables' (ID: 3232)
  Prédit: 'ables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ables' → logprob: -0.0010544841643422842
    2. 'ateurs' → logprob: -7.251054286956787
    3. 'tools' → logprob: -9.001054763793945
    4. '```' → logprob: -9.376054763793945
    5. 'able' → logprob: -10.376054763793945
    6. 'ators' → logprob: -10.876054763793945
    7. 'bles' → logprob: -11.001054763793945
    8. '-' → logprob: -11.126054763793945
    9. '   ' → logprob: -11.751054763793945
    10. '_' → logprob: -12.251054763793945

Token 34: '.

' (ID: 364)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010935923084616661
    2. '(
' → logprob: -5.7609357833862305
    3. '\' → logprob: -6.2609357833862305
    4. '
' → logprob: -6.7609357833862305
    5. '\(' → logprob: -6.8859357833862305
    6. ' (' → logprob: -7.2609357833862305
    7. ',' → logprob: -7.3859357833862305
    8. ' ' → logprob: -7.7609357833862305
    9. 'a' → logprob: -7.8859357833862305
    10. '\n' → logprob: -8.01093578338623

Token 35: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009363126941025257
    2. '(
' → logprob: -5.509363174438477
    3. 'a' → logprob: -6.759363174438477
    4. ' (' → logprob: -7.009363174438477
    5. '[' → logprob: -7.259363174438477
    6. '\' → logprob: -7.509363174438477
    7. '
' → logprob: -7.634363174438477
    8. ',' → logprob: -7.759363174438477
    9. '\(' → logprob: -8.009363174438477
    10. ' ' → logprob: -9.009363174438477

Token 36: ' Util' (ID: 13564)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5473244190216064
    2. 'def' → logprob: -2.0473244190216064
    3. ' ' → logprob: -2.5473244190216064
    4. ' #' → logprob: -2.7973244190216064
    5. 'for' → logprob: -2.9223244190216064
    6. 'n' → logprob: -3.7973244190216064
    7. ' for' → logprob: -4.297324180603027
    8. 'd' → logprob: -4.422324180603027
    9. ' def' → logprob: -4.797324180603027
    10. 'a' → logprob: -5.422324180603027

Token 37: 'isation' (ID: 6993)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03826146200299263
    2. '#' → logprob: -4.163261413574219
    3. '```' → logprob: -5.413261413574219
    4. 'isation' → logprob: -5.788261413574219
    5. 'ser' → logprob: -6.163261413574219
    6. 'isateur' → logprob: -6.163261413574219
    7. 'a' → logprob: -6.413261413574219
    8. 'iser' → logprob: -6.663261413574219
    9. 'ation' → logprob: -6.663261413574219
    10. 'isant' → logprob: -6.913261413574219

Token 38: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.247330442070961
    2. ':' → logprob: -1.7473304271697998
    3. '[' → logprob: -4.872330665588379
    4. ',' → logprob: -5.122330665588379
    5. 'product' → logprob: -5.372330665588379
    6. '(
' → logprob: -5.622330665588379
    7. '```' → logprob: -5.747330665588379
    8. 'for' → logprob: -5.747330665588379
    9. '(product' → logprob: -5.747330665588379
    10. '#' → logprob: -5.997330665588379

Token 39: ' la' (ID: 557)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.5860898494720459
    2. 'product' → logprob: -0.8360898494720459
    3. ' itertools' → logprob: -5.086090087890625
    4. ' la' → logprob: -7.086090087890625
    5. 'range' → logprob: -7.086090087890625
    6. ' ' → logprob: -7.461090087890625
    7. ' range' → logprob: -8.086090087890625
    8. ' `' → logprob: -8.336090087890625
    9. ' produit' → logprob: -9.336090087890625
    10. 'l' → logprob: -9.586090087890625

Token 40: ' fonction' (ID: 17610)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.7659593224525452
    2. 'product' → logprob: -1.7659592628479004
    3. ' for' → logprob: -2.6409592628479004
    4. 'for' → logprob: -3.0159592628479004
    5. ' range' → logprob: -3.0159592628479004
    6. 'range' → logprob: -3.2659592628479004
    7. ' space' → logprob: -4.1409592628479
    8. ' ' → logprob: -4.1409592628479
    9. ' itertools' → logprob: -4.1409592628479
    10. ' liste' → logprob: -4.3909592628479

Token 41: ' '' (ID: 461)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.8228888511657715
    2. '(' → logprob: -1.5728888511657715
    3. ' product' → logprob: -1.6978888511657715
    4. '(product' → logprob: -2.1978888511657715
    5. '_' → logprob: -3.6978888511657715
    6. ' ' → logprob: -3.8228888511657715
    7. ' (' → logprob: -5.1978888511657715
    8. '_product' → logprob: -5.3228888511657715
    9. 'space' → logprob: -8.07288932800293
    10. '(
' → logprob: -8.19788932800293

Token 42: 'input' (ID: 2586)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.00040481300675310194
    2. ' product' → logprob: -7.8754048347473145
    3. 'prod' → logprob: -12.250404357910156
    4. 'print' → logprob: -12.500404357910156
    5. 'com' → logprob: -13.125404357910156
    6. 'pr' → logprob: -13.375404357910156
    7. 'pro' → logprob: -13.500404357910156
    8. '```' → logprob: -13.875404357910156
    9. 'it' → logprob: -14.000404357910156
    10. '.product' → logprob: -14.062904357910156

Token 43: ''' (ID: 6)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03502458333969116
    2. '('' → logprob: -3.785024642944336
    3. ')' → logprob: -4.910024642944336
    4. '()' → logprob: -6.410024642944336
    5. '("' → logprob: -6.535024642944336
    6. ''' → logprob: -7.660024642944336
    7. '(
' → logprob: -8.035024642944336
    8. '("""' → logprob: -9.035024642944336
    9. 's' → logprob: -9.410024642944336
    10. '')' → logprob: -10.660024642944336

Token 44: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01346572209149599
    2. '()' → logprob: -4.388465881347656
    3. '(
' → logprob: -8.138465881347656
    4. 's' → logprob: -8.638465881347656
    5. '('' → logprob: -9.138465881347656
    6. ',' → logprob: -9.388465881347656
    7. ')' → logprob: -9.888465881347656
    8. '("' → logprob: -10.013465881347656
    9. 'a' → logprob: -10.638465881347656
    10. '#' → logprob: -10.888465881347656

Token 45: ' lire' (ID: 46082)
  Prédit: ' obtenir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' obtenir' → logprob: -0.8212231993675232
    2. ' récupérer' → logprob: -0.8212231993675232
    3. ' saisir' → logprob: -3.446223258972168
    4. ' recue' → logprob: -3.696223258972168
    5. ' collect' → logprob: -3.821223258972168
    6. ' recevoir' → logprob: -4.696223258972168
    7. ' recop' → logprob: -4.946223258972168
    8. '()' → logprob: -5.071223258972168
    9. ' demander' → logprob: -5.196223258972168
    10. 'r' → logprob: -5.446223258972168

Token 46: ' une' (ID: 2463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01632913202047348
    2. '()' → logprob: -4.641329288482666
    3. ' ' → logprob: -6.141329288482666
    4. ')' → logprob: -7.141329288482666
    5. ',' → logprob: -7.391329288482666
    6. 's' → logprob: -7.391329288482666
    7. ' (' → logprob: -7.641329288482666
    8. 'a' → logprob: -7.766329288482666
    9. '('' → logprob: -8.516328811645508
    10. 'user' → logprob: -8.766328811645508

Token 47: ' ligne' (ID: 19583)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.6345854997634888
    2. ' ' → logprob: -0.8845854997634888
    3. ' ligne' → logprob: -4.009585380554199
    4. ' phrase' → logprob: -4.384585380554199
    5. ' chaine' → logprob: -4.884585380554199
    6. ' liste' → logprob: -5.009585380554199
    7. ' string' → logprob: -5.884585380554199
    8. ' valeur' → logprob: -6.009585380554199
    9. 'chaine' → logprob: -6.134585380554199
    10. 's' → logprob: -7.509585380554199

Token 48: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43370339274406433
    2. '(' → logprob: -1.0587034225463867
    3. '(
' → logprob: -6.308703422546387
    4. 's' → logprob: -6.808703422546387
    5. '_' → logprob: -7.433703422546387
    6. 'user' → logprob: -8.433703422546387
    7. ',' → logprob: -9.308703422546387
    8. '('' → logprob: -9.308703422546387
    9. 'r' → logprob: -9.433703422546387
    10. ')' → logprob: -9.433703422546387

Token 49: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3244359791278839
    2. ' l' → logprob: -1.3244359493255615
    3. ' input' → logprob: -5.324436187744141
    4. ' ' → logprob: -5.449436187744141
    5. 'input' → logprob: -7.449436187744141
    6. 'la' → logprob: -7.699436187744141
    7. ' la' → logprob: -8.19943618774414
    8. ' standard' → logprob: -9.32443618774414
    9. '_' → logprob: -9.44943618774414
    10. '```' → logprob: -9.57443618774414

Token 50: ''entrée' (ID: 115820)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0521008968353271
    2. 'a' → logprob: -1.1771008968353271
    3. ''entrée' → logprob: -1.3021008968353271
    4. ''utilisateur' → logprob: -3.052100896835327
    5. 'e' → logprob: -4.552101135253906
    6. 'es' → logprob: -5.302101135253906
    7. 'input' → logprob: -6.427101135253906
    8. ''a' → logprob: -6.802101135253906
    9. 'u' → logprob: -6.927101135253906
    10. ''ent' → logprob: -7.427101135253906

Token 51: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16355320811271667
    2. '(' → logprob: -2.413553237915039
    3. '_' → logprob: -3.788553237915039
    4. 'user' → logprob: -4.413553237915039
    5. 's' → logprob: -4.538553237915039
    6. ')' → logprob: -5.413553237915039
    7. '_util' → logprob: -5.413553237915039
    8. '(
' → logprob: -7.038553237915039
    9. ',' → logprob: -7.163553237915039
    10. '_user' → logprob: -7.288553237915039

Token 52: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17502979934215546
    2. 's' → logprob: -3.425029754638672
    3. 'a' → logprob: -3.675029754638672
    4. 'n' → logprob: -3.675029754638672
    5. 'user' → logprob: -4.050029754638672
    6. ',' → logprob: -4.300029754638672
    7. 'x' → logprob: -4.675029754638672
    8. '#' → logprob: -5.675029754638672
    9. '_' → logprob: -5.675029754638672
    10. 'u' → logprob: -5.800029754638672

Token 53: 'habit' (ID: 183262)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015611659036949277
    2. ').' → logprob: -7.376561164855957
    3. ' )' → logprob: -8.126561164855957
    4. '):' → logprob: -8.751561164855957
    5. '),' → logprob: -9.251561164855957
    6. 'l' → logprob: -9.376561164855957
    7. ' la' → logprob: -10.126561164855957
    8. 'la' → logprob: -10.626561164855957
    9. 'user' → logprob: -10.751561164855957
    10. ' une' → logprob: -10.751561164855957

Token 54: 'uellement' (ID: 36026)
  Prédit: 'uelle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uelle' → logprob: -0.10135085135698318
    2. 'uel' → logprob: -2.601350784301758
    3. 'uellement' → logprob: -4.601350784301758
    4. 'ue' → logprob: -5.101350784301758
    5. 'u' → logprob: -6.476350784301758
    6. 'uée' → logprob: -6.601350784301758
    7. 'elle' → logprob: -7.226350784301758
    8. 'uell' → logprob: -7.476350784301758
    9. 'uele' → logprob: -7.476350784301758
    10. 'ante' → logprob: -8.226350784301758

Token 55: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.19672362506389618
    2. ' l' → logprob: -1.8217235803604126
    3. ' )' → logprob: -4.946723461151123
    4. ')' → logprob: -5.821723461151123
    5. ' la' → logprob: -6.446723461151123
    6. ' utilisateur' → logprob: -6.446723461151123
    7. 'le' → logprob: -6.946723461151123
    8. 'la' → logprob: -7.696723461151123
    9. ' ' → logprob: -7.821723461151123
    10. ' une' → logprob: -8.071723937988281

Token 56: ' clavier' (ID: 187878)
  Prédit: ' utilisateur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisateur' → logprob: -1.382442831993103
    2. ' terminal' → logprob: -1.507442831993103
    3. ' clavier' → logprob: -1.757442831993103
    4. 'terminal' → logprob: -2.1324429512023926
    5. 'util' → logprob: -2.2574429512023926
    6. 'u' → logprob: -2.8824429512023926
    7. 'user' → logprob: -3.5074429512023926
    8. ' user' → logprob: -4.507442951202393
    9. 's' → logprob: -4.882442951202393
    10. ''utilisateur' → logprob: -5.257442951202393

Token 57: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007492328295484185
    2. ' )' → logprob: -7.875749111175537
    3. '')' → logprob: -9.250749588012695
    4. ',' → logprob: -9.375749588012695
    5. '#' → logprob: -9.875749588012695
    6. ')
' → logprob: -10.250749588012695
    7. 'e' → logprob: -10.750749588012695
    8. 'a' → logprob: -10.875749588012695
    9. ').' → logprob: -11.375749588012695
    10. '`)' → logprob: -12.000749588012695

Token 58: '#' (ID: 2)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9412760734558105
    2. 'n' → logprob: -1.3162760734558105
    3. 'user' → logprob: -2.3162760734558105
    4. 's' → logprob: -3.0662760734558105
    5. '\' → logprob: -3.0662760734558105
    6. '#' → logprob: -3.5662760734558105
    7. 'chaine' → logprob: -4.1912760734558105
    8. 'a' → logprob: -4.3162760734558105
    9. '\n' → logprob: -5.0662760734558105
    10. 'u' → logprob: -5.3162760734558105

Token 59: ' La' (ID: 3038)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.6282808184623718
    2. 'input' → logprob: -2.0032808780670166
    3. 'n' → logprob: -2.7532808780670166
    4. 's' → logprob: -2.8782808780670166
    5. 'inputs' → logprob: -3.6282808780670166
    6. 'text' → logprob: -3.8782808780670166
    7. '#' → logprob: -4.1282806396484375
    8. 'chaine' → logprob: -4.1282806396484375
    9. 'prompt' → logprob: -4.5032806396484375
    10. 'comb' → logprob: -4.7532806396484375

Token 60: ' fonction' (ID: 17610)
  Prédit: ' phrase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' phrase' → logprob: -1.5246264934539795
    2. 'input' → logprob: -2.5246264934539795
    3. 'chaine' → logprob: -2.5246264934539795
    4. ' input' → logprob: -2.6496264934539795
    5. ' user' → logprob: -2.6496264934539795
    6. 's' → logprob: -2.7746264934539795
    7. 'user' → logprob: -2.7746264934539795
    8. 'ligne' → logprob: -3.1496264934539795
    9. ' ligne' → logprob: -3.3996264934539795
    10. 'phrase' → logprob: -3.6496264934539795

Token 61: ' '' (ID: 461)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18582624197006226
    2. 'input' → logprob: -2.435826301574707
    3. '(input' → logprob: -3.435826301574707
    4. '()' → logprob: -3.935826301574707
    5. ' input' → logprob: -4.060826301574707
    6. '(
' → logprob: -4.935826301574707
    7. ')' → logprob: -6.310826301574707
    8. ' ' → logprob: -7.435826301574707
    9. 's' → logprob: -7.560826301574707
    10. '=input' → logprob: -7.685826301574707

Token 62: 'split' (ID: 13627)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0010086346883326769
    2. ' input' → logprob: -7.5010085105896
    3. 'print' → logprob: -8.001008987426758
    4. 'int' → logprob: -11.126008987426758
    5. 'eval' → logprob: -11.126008987426758
    6. 'user' → logprob: -11.376008987426758
    7. '#' → logprob: -11.501008987426758
    8. 'prompt' → logprob: -12.001008987426758
    9. '=input' → logprob: -12.126008987426758
    10. 'inp' → logprob: -12.501008987426758

Token 63: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2644709050655365
    2. '('' → logprob: -1.6394709348678589
    3. '(' → logprob: -3.3894708156585693
    4. ''' → logprob: -6.139471054077148
    5. ')' → logprob: -7.389471054077148
    6. '("' → logprob: -7.639471054077148
    7. '(',' → logprob: -8.764471054077148
    8. '())' → logprob: -9.264471054077148
    9. '("("' → logprob: -9.264471054077148
    10. ''''' → logprob: -9.389471054077148

Token 64: ''' (ID: 6)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06734710931777954
    2. ')' → logprob: -3.3173470497131348
    3. '('' → logprob: -3.8173470497131348
    4. '(' → logprob: -6.192347049713135
    5. '())' → logprob: -6.317347049713135
    6. '()`' → logprob: -7.317347049713135
    7. ' )' → logprob: -7.567347049713135
    8. ''' → logprob: -8.192347526550293
    9. '')' → logprob: -8.442347526550293
    10. ')'' → logprob: -8.442347526550293

Token 65: ' convert' (ID: 8452)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0046390993520617485
    2. '(' → logprob: -5.504639148712158
    3. '<|end|>' → logprob: -8.754638671875
    4. '#' → logprob: -9.129638671875
    5. ')' → logprob: -9.754638671875
    6. '())' → logprob: -10.379638671875
    7. ' ()' → logprob: -10.754638671875
    8. '('' → logprob: -11.004638671875
    9. '<|end|>' → logprob: -11.004638671875
    10. '().' → logprob: -11.129638671875

Token 66: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.3004990816116333
    2. '()' → logprob: -1.8004990816116333
    3. 'e' → logprob: -2.5504989624023438
    4. '(' → logprob: -5.425498962402344
    5. 'ise' → logprob: -6.050498962402344
    6. 'u' → logprob: -6.050498962402344
    7. 'ue' → logprob: -6.300498962402344
    8. ' ()' → logprob: -7.050498962402344
    9. 'i' → logprob: -7.300498962402344
    10. 'ie' → logprob: -7.800498962402344

Token 67: ' cette' (ID: 7696)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1148480623960495
    2. 'input' → logprob: -3.6148481369018555
    3. ' la' → logprob: -3.7398481369018555
    4. ' l' → logprob: -3.9898481369018555
    5. 'l' → logprob: -4.1148481369018555
    6. '(input' → logprob: -5.1148481369018555
    7. ' input' → logprob: -5.4898481369018555
    8. '(' → logprob: -5.9898481369018555
    9. ')' → logprob: -6.2398481369018555
    10. 'la' → logprob: -6.3648481369018555

Token 68: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.09871355444192886
    2. ' ligne' → logprob: -2.9737136363983154
    3. 'chaine' → logprob: -4.098713397979736
    4. ' chaine' → logprob: -4.973713397979736
    5. 'entrée' → logprob: -5.473713397979736
    6. 's' → logprob: -5.473713397979736
    7. ' ' → logprob: -5.973713397979736
    8. ' entrée' → logprob: -6.098713397979736
    9. 'ligne' → logprob: -6.348713397979736
    10. ' string' → logprob: -6.473713397979736

Token 69: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5467898845672607
    2. ' des' → logprob: -1.7967898845672607
    3. ' ' → logprob: -2.0467898845672607
    4. ' )' → logprob: -2.1717898845672607
    5. ' en' → logprob: -2.2967898845672607
    6. ')' → logprob: -2.5467898845672607
    7. ' ()' → logprob: -3.5467898845672607
    8. ' de' → logprob: -3.7967898845672607
    9. 'des' → logprob: -3.7967898845672607
    10. '(' → logprob: -4.29679012298584

Token 70: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.044819753617048264
    2. 'une' → logprob: -3.1698198318481445
    3. '[]' → logprob: -7.9198198318481445
    4. ''une' → logprob: -7.9198198318481445
    5. ' des' → logprob: -8.544819831848145
    6. 'a' → logprob: -8.669819831848145
    7. 'tokens' → logprob: -8.669819831848145
    8. '[' → logprob: -9.044819831848145
    9. '['' → logprob: -9.169819831848145
    10. '```' → logprob: -10.044819831848145

Token 71: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.5805047750473022
    2. ' liste' → logprob: -0.8305047750473022
    3. 'list' → logprob: -5.455504894256592
    4. 'Liste' → logprob: -9.205504417419434
    5. 's' → logprob: -9.330504417419434
    6. 'chaine' → logprob: -10.330504417419434
    7. ' list' → logprob: -10.330504417419434
    8. '['' → logprob: -11.955504417419434
    9. ' Liste' → logprob: -12.205504417419434
    10. '[]' → logprob: -12.830504417419434

Token 72: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4737156629562378
    2. '(' → logprob: -1.0987156629562378
    3. ' (' → logprob: -4.973715782165527
    4. '<|end|>' → logprob: -5.098715782165527
    5. 's' → logprob: -5.223715782165527
    6. '[' → logprob: -5.598715782165527
    7. ')' → logprob: -5.598715782165527
    8. ' ()' → logprob: -5.723715782165527
    9. ' ' → logprob: -5.848715782165527
    10. '[]' → logprob: -6.598715782165527

Token 73: ' sous' (ID: 14487)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.12755045294761658
    2. 'cha' → logprob: -3.2525503635406494
    3. 'tokens' → logprob: -4.0025506019592285
    4. 'str' → logprob: -4.1275506019592285
    5. ' tokens' → logprob: -4.3775506019592285
    6. 'm' → logprob: -4.5025506019592285
    7. 'strings' → logprob: -4.6275506019592285
    8. 'chain' → logprob: -5.3775506019592285
    9. ' mots' → logprob: -5.8775506019592285
    10. ' strings' → logprob: -6.5025506019592285

Token 74: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.10777484625577927
    2. 'strings' → logprob: -2.7327747344970703
    3. '_' → logprob: -4.98277473449707
    4. 'chain' → logprob: -5.10777473449707
    5. 'string' → logprob: -5.73277473449707
    6. '-' → logprob: -5.85777473449707
    7. '_strings' → logprob: -6.23277473449707
    8. '_chain' → logprob: -6.35777473449707
    9. 'cha' → logprob: -6.35777473449707
    10. '()' → logprob: -6.48277473449707

Token 75: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -1.0609174966812134
    2. 'nes' → logprob: -1.4359174966812134
    3. 'quences' → logprob: -1.8109174966812134
    4. 'r' → logprob: -2.185917377471924
    5. 'a' → logprob: -3.310917377471924
    6. 'aines' → logprob: -3.560917377471924
    7. 'ries' → logprob: -4.185917377471924
    8. 'strings' → logprob: -4.185917377471924
    9. 'anes' → logprob: -5.560917377471924
    10. 'ques' → logprob: -5.810917377471924

Token 76: ' sépar' (ID: 97160)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.27508974075317383
    2. '(' → logprob: -2.775089740753174
    3. 's' → logprob: -3.150089740753174
    4. ',' → logprob: -3.525089740753174
    5. '[' → logprob: -3.775089740753174
    6. ' (' → logprob: -4.400089740753174
    7. ')' → logprob: -4.900089740753174
    8. '.' → logprob: -5.025089740753174
    9. '[]' → logprob: -5.400089740753174
    10. 'tokens' → logprob: -5.525089740753174

Token 77: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.06860131770372391
    2. 'é' → logprob: -3.443601369857788
    3. 'ée' → logprob: -3.443601369857788
    4. 'par' → logprob: -6.818601131439209
    5. 'és' → logprob: -6.943601131439209
    6. ' par' → logprob: -8.568601608276367
    7. '```' → logprob: -9.693601608276367
    8. 'e' → logprob: -10.068601608276367
    9. '�' → logprob: -11.443601608276367
    10. 'É' → logprob: -11.693601608276367

Token 78: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.3214397132396698
    2. 'par' → logprob: -1.4464397430419922
    3. '()' → logprob: -3.321439743041992
    4. ')' → logprob: -7.446439743041992
    5. '.' → logprob: -7.446439743041992
    6. 's' → logprob: -8.196439743041992
    7. '('' → logprob: -8.446439743041992
    8. '_par' → logprob: -8.446439743041992
    9. '(' → logprob: -8.571439743041992
    10. ' ' → logprob: -8.696439743041992

Token 79: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7118250131607056
    2. 'des' → logprob: -1.3368250131607056
    3. ' espaces' → logprob: -2.086824893951416
    4. ' ' → logprob: -3.461824893951416
    5. 'esp' → logprob: -3.961824893951416
    6. 'les' → logprob: -4.336824893951416
    7. 'un' → logprob: -4.961824893951416
    8. 'es' → logprob: -4.961824893951416
    9. 'spaces' → logprob: -5.086824893951416
    10. ''espace' → logprob: -5.086824893951416

Token 80: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.17553311586380005
    2. ' espaces' → logprob: -2.0505330562591553
    3. ''esp' → logprob: -3.5505330562591553
    4. 'es' → logprob: -7.175533294677734
    5. ''espace' → logprob: -7.175533294677734
    6. 'l' → logprob: -7.675533294677734
    7. ' ' → logprob: -7.800533294677734
    8. 'spaces' → logprob: -7.925533294677734
    9. '’esp' → logprob: -8.175533294677734
    10. ''' → logprob: -9.175533294677734

Token 81: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5975532531738281
    2. 'n' → logprob: -2.097553253173828
    3. ',' → logprob: -2.222553253173828
    4. '[' → logprob: -2.847553253173828
    5. 'a' → logprob: -2.972553253173828
    6. '[
' → logprob: -3.847553253173828
    7. '
' → logprob: -4.097553253173828
    8. '\n' → logprob: -4.472553253173828
    9. '.' → logprob: -4.597553253173828
    10. '#' → logprob: -5.222553253173828

Token 82: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1938280612230301
    2. 'a' → logprob: -2.5688281059265137
    3. 'l' → logprob: -3.1938281059265137
    4. 'x' → logprob: -3.5688281059265137
    5. '#' → logprob: -4.943828105926514
    6. 's' → logprob: -5.693828105926514
    7. 't' → logprob: -5.943828105926514
    8. 'r' → logprob: -6.318828105926514
    9. 'L' → logprob: -6.443828105926514
    10. '\' → logprob: -6.568828105926514

Token 83: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3881174325942993
    2. 'a' → logprob: -1.5131174325942993
    3. 'l' → logprob: -3.3881173133850098
    4. 'x' → logprob: -4.26311731338501
    5. 'N' → logprob: -4.51311731338501
    6. 'A' → logprob: -4.63811731338501
    7. 't' → logprob: -5.38811731338501
    8. 'm' → logprob: -5.63811731338501
    9. 'T' → logprob: -6.01311731338501
    10. '#' → logprob: -6.13811731338501

Token 84: ' fonction' (ID: 17610)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9435148239135742
    2. 'a' → logprob: -1.4435148239135742
    3. 'l' → logprob: -2.818514823913574
    4. ' n' → logprob: -3.068514823913574
    5. 'x' → logprob: -3.193514823913574
    6. '#' → logprob: -3.693514823913574
    7. ' a' → logprob: -3.818514823913574
    8. 'ligne' → logprob: -4.193514823913574
    9. 's' → logprob: -4.568514823913574
    10. 'A' → logprob: -4.756014823913574

Token 85: ' '' (ID: 461)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.4911661446094513
    2. 'map' → logprob: -0.9911661148071289
    3. ' list' → logprob: -4.991166114807129
    4. 'list' → logprob: -5.241166114807129
    5. ' input' → logprob: -6.491166114807129
    6. 's' → logprob: -7.491166114807129
    7. 'input' → logprob: -7.616166114807129
    8. '`' → logprob: -8.616166114807129
    9. '"' → logprob: -8.866166114807129
    10. ''s' → logprob: -9.116166114807129

Token 86: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.002028327202424407
    2. ' map' → logprob: -6.502028465270996
    3. 'list' → logprob: -8.252028465270996
    4. 'int' → logprob: -8.502028465270996
    5. 'input' → logprob: -10.377028465270996
    6. 'print' → logprob: -11.877028465270996
    7. 'm' → logprob: -12.377028465270996
    8. 'str' → logprob: -12.877028465270996
    9. 'range' → logprob: -13.252028465270996
    10. 'strip' → logprob: -13.377028465270996

Token 87: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24205905199050903
    2. '(int' → logprob: -1.8670589923858643
    3. '(lambda' → logprob: -3.3670589923858643
    4. '(str' → logprob: -3.7420589923858643
    5. '(list' → logprob: -7.367059230804443
    6. '(float' → logprob: -7.992059230804443
    7. '(
' → logprob: -8.492058753967285
    8. '<|end|>' → logprob: -8.492058753967285
    9. '(">' → logprob: -8.742058753967285
    10. ')' → logprob: -9.617058753967285

Token 88: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008155853138305247
    2. ')">' → logprob: -7.500815391540527
    3. ' )' → logprob: -9.500815391540527
    4. ')`' → logprob: -9.750815391540527
    5. ')>' → logprob: -10.750815391540527
    6. ')**' → logprob: -11.000815391540527
    7. ')'' → logprob: -11.125815391540527
    8. '')' → logprob: -11.375815391540527
    9. '<|end|>' → logprob: -11.375815391540527
    10. ',' → logprob: -11.375815391540527

Token 89: ' ...' (ID: 2550)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.49844303727149963
    2. 'input' → logprob: -0.9984430074691772
    3. ')' → logprob: -3.873443126678467
    4. ' )' → logprob: -6.248443126678467
    5. '...)' → logprob: -7.123443126678467
    6. '(input' → logprob: -9.123442649841309
    7. '...' → logprob: -9.748442649841309
    8. ' ' → logprob: -10.498442649841309
    9. '<input' → logprob: -10.498442649841309
    10. ' ...)' → logprob: -10.498442649841309

Token 90: ')'' (ID: 45517)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1016821339726448
    2. ')'' → logprob: -2.476682186126709
    3. ' )' → logprob: -5.601682186126709
    4. ')`' → logprob: -5.726682186126709
    5. ')(' → logprob: -6.851682186126709
    6. '(input' → logprob: -6.976682186126709
    7. '')' → logprob: -7.226682186126709
    8. ')...' → logprob: -7.851682186126709
    9. '('' → logprob: -8.10168170928955
    10. '(' → logprob: -8.10168170928955

Token 91: ' convert' (ID: 8452)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1393217146396637
    2. '(' → logprob: -2.139321804046631
    3. ' )' → logprob: -5.139321804046631
    4. ')">' → logprob: -5.764321804046631
    5. '<|end|>' → logprob: -7.889321804046631
    6. ' convert' → logprob: -7.889321804046631
    7. '()' → logprob: -8.014321327209473
    8. '(int' → logprob: -8.139321327209473
    9. ',' → logprob: -8.264321327209473
    10. '(convert' → logprob: -8.389321327209473

Token 92: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.11947982758283615
    2. 'i' → logprob: -2.4944798946380615
    3. '(' → logprob: -4.494479656219482
    4. 'ie' → logprob: -5.619479656219482
    5. 'e' → logprob: -5.744479656219482
    6. 'issez' → logprob: -5.994479656219482
    7. 't' → logprob: -6.244479656219482
    8. ')' → logprob: -6.369479656219482
    9. 'ir' → logprob: -6.494479656219482
    10. 'iert' → logprob: -6.994479656219482

Token 93: ' chaque' (ID: 21194)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7320005893707275
    2. ' les' → logprob: -1.4820005893707275
    3. '(' → logprob: -2.3570005893707275
    4. ' chaque' → logprob: -3.2320005893707275
    5. '(int' → logprob: -3.3570005893707275
    6. '(s' → logprob: -3.7320005893707275
    7. 'l' → logprob: -4.107000350952148
    8. 's' → logprob: -4.232000350952148
    9. ')' → logprob: -4.982000350952148
    10. '<|end|>' → logprob: -5.357000350952148

Token 94: ' sous' (ID: 14487)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4284939169883728
    2. '<|end|>' → logprob: -1.8034939765930176
    3. ' )' → logprob: -2.1784939765930176
    4. 'élé' → logprob: -3.9284939765930176
    5. ' token' → logprob: -4.803493976593018
    6. '(' → logprob: -5.053493976593018
    7. 'token' → logprob: -5.178493976593018
    8. ' ' → logprob: -5.303493976593018
    9. '(token' → logprob: -5.428493976593018
    10. '<|end|>' → logprob: -5.803493976593018

Token 95: '-cha' (ID: 163177)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0009145736694336
    2. 'chaine' → logprob: -1.1259145736694336
    3. ' chaînes' → logprob: -2.0009145736694336
    4. '-chain' → logprob: -2.6259145736694336
    5. ' chaîne' → logprob: -3.6259145736694336
    6. '<|end|>' → logprob: -3.7509145736694336
    7. 'chain' → logprob: -4.250914573669434
    8. '-cha' → logprob: -4.500914573669434
    9. 'élé' → logprob: -5.875914573669434
    10. '-string' → logprob: -6.125914573669434

Token 96: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.04308950901031494
    2. 'î' → logprob: -3.2930893898010254
    3. 'înes' → logprob: -6.043089389801025
    4. 'ïne' → logprob: -6.793089389801025
    5. 'în' → logprob: -7.793089389801025
    6. 'ne' → logprob: -8.543089866638184
    7. 'à' → logprob: -8.668089866638184
    8. 'ine' → logprob: -9.293089866638184
    9. 'ì' → logprob: -9.293089866638184
    10. 'â' → logprob: -9.418089866638184

Token 97: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41567692160606384
    2. ' )' → logprob: -1.4156769514083862
    3. '<|end|>' → logprob: -2.6656768321990967
    4. ' ' → logprob: -4.665677070617676
    5. '(' → logprob: -5.040677070617676
    6. ',' → logprob: -5.540677070617676
    7. ' en' → logprob: -5.665677070617676
    8. ' ,' → logprob: -6.665677070617676
    9. '<|end|>' → logprob: -6.915677070617676
    10. ' into' → logprob: -7.665677070617676

Token 98: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.12741224467754364
    2. ' des' → logprob: -2.1274123191833496
    3. 'un' → logprob: -8.252411842346191
    4. ' entier' → logprob: -9.877411842346191
    5. ' integers' → logprob: -10.127411842346191
    6. ' ' → logprob: -10.627411842346191
    7. 'des' → logprob: -10.752411842346191
    8. ' int' → logprob: -10.752411842346191
    9. 'ent' → logprob: -11.002411842346191
    10. ' une' → logprob: -11.002411842346191

Token 99: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.7043886780738831
    2. ' entier' → logprob: -0.8293886780738831
    3. 'élé' → logprob: -3.3293886184692383
    4. ' nombre' → logprob: -4.329388618469238
    5. ' ent' → logprob: -4.829388618469238
    6. 'int' → logprob: -6.204388618469238
    7. '_ent' → logprob: -6.329388618469238
    8. ''ent' → logprob: -6.329388618469238
    9. ' élément' → logprob: -6.454388618469238
    10. 'nombre' → logprob: -6.704388618469238

Token 100: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33018746972084045
    2. '(' → logprob: -1.330187439918518
    3. '(
' → logprob: -5.4551873207092285
    4. ',' → logprob: -5.5801873207092285
    5. ' )' → logprob: -5.8301873207092285
    6. '()' → logprob: -6.5801873207092285
    7. ' (' → logprob: -7.5801873207092285
    8. '#' → logprob: -7.5801873207092285
    9. ']' → logprob: -7.8301873207092285
    10. 's' → logprob: -8.080187797546387

Token 101: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3386734426021576
    2. 'a' → logprob: -1.58867347240448
    3. 'x' → logprob: -3.0886733531951904
    4. 'N' → logprob: -5.0886735916137695
    5. 'l' → logprob: -5.3386735916137695
    6. 'm' → logprob: -5.3386735916137695
    7. 'A' → logprob: -5.4636735916137695
    8. 'r' → logprob: -6.0886735916137695
    9. '#' → logprob: -6.4636735916137695
    10. 'k' → logprob: -6.8386735916137695

Token 102: ' Le' (ID: 2018)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6681993007659912
    2. 'a' → logprob: -1.0431993007659912
    3. ' n' → logprob: -3.418199300765991
    4. ' a' → logprob: -3.418199300765991
    5. 'A' → logprob: -4.41819953918457
    6. 'x' → logprob: -4.54319953918457
    7. 'N' → logprob: -4.66819953918457
    8. 'm' → logprob: -5.04319953918457
    9. 'l' → logprob: -5.16819953918457
    10. 'r' → logprob: -5.91819953918457

Token 103: ' résultat' (ID: 62556)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7280796766281128
    2. ' a' → logprob: -1.2280796766281128
    3. 'n' → logprob: -2.7280797958374023
    4. ' n' → logprob: -3.1030797958374023
    5. 'x' → logprob: -4.353079795837402
    6. '#' → logprob: -4.353079795837402
    7. 'r' → logprob: -4.853079795837402
    8. ' result' → logprob: -4.978079795837402
    9. ' nombre' → logprob: -4.978079795837402
    10. ' nombres' → logprob: -4.978079795837402

Token 104: ' est' (ID: 893)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3671994209289551
    2. ' =' → logprob: -2.367199420928955
    3. ',' → logprob: -2.492199420928955
    4. ')' → logprob: -3.367199420928955
    5. ' is' → logprob: -3.742199420928955
    6. ' ,' → logprob: -3.992199420928955
    7. ' est' → logprob: -4.242199420928955
    8. '=' → logprob: -4.742199420928955
    9. ' )' → logprob: -4.992199420928955
    10. '[]' → logprob: -5.992199420928955

Token 105: ' unpack' (ID: 61704)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.705342411994934
    2. ' a' → logprob: -1.830342411994934
    3. ' assigned' → logprob: -2.4553422927856445
    4. ' list' → logprob: -2.7053422927856445
    5. ' unpack' → logprob: -2.8303422927856445
    6. ' tuple' → logprob: -3.2053422927856445
    7. ' x' → logprob: -3.2053422927856445
    8. 'n' → logprob: -3.2053422927856445
    9. 'a' → logprob: -3.3303422927856445
    10. 's' → logprob: -3.4553422927856445

Token 106: 'é' (ID: 377)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3513026833534241
    2. 'ing' → logprob: -1.4763026237487793
    3. 'ed' → logprob: -3.7263026237487793
    4. 'e' → logprob: -4.101302623748779
    5. 'i' → logprob: -4.476302623748779
    6. 't' → logprob: -4.726302623748779
    7. 'er' → logprob: -6.226302623748779
    8. 'age' → logprob: -6.601302623748779
    9. 'é' → logprob: -7.101302623748779
    10. '=' → logprob: -8.351303100585938

Token 107: ' dans' (ID: 2671)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5562489032745361
    2. 'n' → logprob: -1.5562489032745361
    3. 'x' → logprob: -3.056248903274536
    4. '*' → logprob: -3.181248903274536
    5. 'A' → logprob: -4.056248664855957
    6. '(*' → logprob: -4.181248664855957
    7. ' a' → logprob: -4.306248664855957
    8. 'm' → logprob: -4.306248664855957
    9. 'N' → logprob: -4.556248664855957
    10. ' n' → logprob: -4.681248664855957

Token 108: ' les' (ID: 1341)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.08780284225940704
    2. ' a' → logprob: -3.9628028869628906
    3. ' m' → logprob: -3.9628028869628906
    4. 'n' → logprob: -4.212802886962891
    5. 'a' → logprob: -4.587802886962891
    6. ' x' → logprob: -4.962802886962891
    7. ' ' → logprob: -6.087802886962891
    8. ' la' → logprob: -6.462802886962891
    9. ' k' → logprob: -6.712802886962891
    10. ' N' → logprob: -6.837802886962891

Token 109: ' variables' (ID: 13955)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0759661197662354
    2. ' variables' → logprob: -1.2009661197662354
    3. ' ' → logprob: -2.4509661197662354
    4. ' nombres' → logprob: -2.4509661197662354
    5. ' trois' → logprob: -2.8259661197662354
    6. ' a' → logprob: -2.9509661197662354
    7. 'a' → logprob: -3.5759661197662354
    8. ' x' → logprob: -4.575965881347656
    9. 'n' → logprob: -5.200965881347656
    10. ' deux' → logprob: -5.575965881347656

Token 110: ' N' (ID: 478)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9574003219604492
    2. 'n' → logprob: -1.0824003219604492
    3. 'a' → logprob: -2.207400321960449
    4. ' a' → logprob: -2.957400321960449
    5. 'm' → logprob: -3.457400321960449
    6. 'x' → logprob: -3.832400321960449
    7. ' m' → logprob: -4.082400321960449
    8. 'N' → logprob: -4.332400321960449
    9. ' N' → logprob: -4.832400321960449
    10. ' x' → logprob: -4.832400321960449

Token 111: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031625106930732727
    2. ' ,' → logprob: -6.003162384033203
    3. ',N' → logprob: -7.753162384033203
    4. ',n' → logprob: -10.003162384033203
    5. '1' → logprob: -10.128162384033203
    6. ',K' → logprob: -10.253162384033203
    7. ',M' → logprob: -10.503162384033203
    8. ' ' → logprob: -11.503162384033203
    9. ',I' → logprob: -11.503162384033203
    10. ',S' → logprob: -11.878162384033203

Token 112: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.3069717586040497
    2. 'M' → logprob: -1.681971788406372
    3. ' K' → logprob: -2.806971788406372
    4. 'K' → logprob: -4.181971549987793
    5. ' ' → logprob: -6.056971549987793
    6. ' T' → logprob: -9.931971549987793
    7. ' P' → logprob: -10.056971549987793
    8. 'P' → logprob: -10.181971549987793
    9. 'T' → logprob: -10.744471549987793
    10. 'X' → logprob: -11.119471549987793

Token 113: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4494454264640808
    2. ' =' → logprob: -3.0744454860687256
    3. ' ' → logprob: -3.0744454860687256
    4. '=' → logprob: -3.1994454860687256
    5. ')' → logprob: -3.3244454860687256
    6. '  
' → logprob: -3.3244454860687256
    7. ' N' → logprob: -3.4494454860687256
    8. 'N' → logprob: -3.9494454860687256
    9. ' 
' → logprob: -4.0744452476501465
    10. 'x' → logprob: -4.5744452476501465

Token 114: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01624644361436367
    2. 'n' → logprob: -4.766246318817139
    3. ',' → logprob: -6.266246318817139
    4. '
' → logprob: -6.391246318817139
    5. 'x' → logprob: -6.391246318817139
    6. ' N' → logprob: -7.266246318817139
    7. ' 
' → logprob: -7.641246318817139
    8. 'a' → logprob: -7.766246318817139
    9. '  
' → logprob: -9.141246795654297
    10. '[N' → logprob: -9.266246795654297

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3676733690081164e-05
    2. ' ,' → logprob: -10.75002384185791
    3. ',M' → logprob: -13.75002384185791
    4. ',N' → logprob: -14.00002384185791
    5. ' ' → logprob: -16.500022888183594
    6. '<|end|>' → logprob: -17.000022888183594
    7. ')' → logprob: -17.125022888183594
    8. ',

' → logprob: -17.375022888183594
    9. ',
' → logprob: -17.625022888183594
    10. ',n' → logprob: -17.875022888183594

Token 116: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.07796550542116165
    2. ' ' → logprob: -2.702965497970581
    3. 'M' → logprob: -5.07796573638916
    4. '<|end|>' → logprob: -6.45296573638916
    5. ' ' → logprob: -9.07796573638916
    6. '  ' → logprob: -10.32796573638916
    7. ')' → logprob: -11.20296573638916
    8. ' 
' → logprob: -12.45296573638916
    9. 'space' → logprob: -12.70296573638916
    10. ' ,' → logprob: -12.95296573638916

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0232770424336195
    2. '=' → logprob: -3.7732770442962646
    3. ',' → logprob: -10.648277282714844
    4. ')' → logprob: -12.773277282714844
    5. '=input' → logprob: -13.023277282714844
    6. ' =
' → logprob: -14.023277282714844
    7. ' ' → logprob: -14.148277282714844
    8. '<|end|>' → logprob: -14.773277282714844
    9. ' =)' → logprob: -15.648277282714844
    10. ' ,' → logprob: -16.023277282714844

Token 118: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.023245826363563538
    2. 'map' → logprob: -3.7732458114624023
    3. ' list' → logprob: -15.648245811462402
    4. '	map' → logprob: -16.14824676513672
    5. ' ' → logprob: -16.64824676513672
    6. 'list' → logprob: -18.02324676513672
    7. ' ' → logprob: -18.27324676513672
    8. 'm' → logprob: -18.52324676513672
    9. ' m' → logprob: -19.27324676513672
    10. ' ma' → logprob: -19.39824676513672

Token 119: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0031871015671640635
    2. '(' → logprob: -5.75318717956543
    3. '<int' → logprob: -13.00318717956543
    4. '(input' → logprob: -13.25318717956543
    5. 'int' → logprob: -13.37818717956543
    6. ' (' → logprob: -13.50318717956543
    7. '[int' → logprob: -14.37818717956543
    8. '(list' → logprob: -14.50318717956543
    9. '(
' → logprob: -14.62818717956543
    10. '(str' → logprob: -15.00318717956543

Token 120: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.008378052152693272
    2. 'input' → logprob: -5.008378028869629
    3. '(' → logprob: -7.383378028869629
    4. ',input' → logprob: -7.633378028869629
    5. ')' → logprob: -7.758378028869629
    6. ',' → logprob: -9.633378028869629
    7. ' input' → logprob: -10.133378028869629
    8. ' (' → logprob: -11.383378028869629
    9. '=input' → logprob: -11.758378028869629
    10. '[input' → logprob: -13.758378028869629

Token 121: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.038042984902858734
    2. ' input' → logprob: -3.2880430221557617
    3. ')' → logprob: -14.288043022155762
    4. '(input' → logprob: -14.413043022155762
    5. ' ' → logprob: -16.288042068481445
    6. '=input' → logprob: -16.413042068481445
    7. ',input' → logprob: -17.038042068481445
    8. '	input' → logprob: -17.038042068481445
    9. '   ' → logprob: -17.663042068481445
    10. '<input' → logprob: -17.913042068481445

Token 122: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.001178439473733306
    2. '()' → logprob: -6.75117826461792
    3. '())' → logprob: -12.376178741455078
    4. ' ().' → logprob: -13.376178741455078
    5. '(' → logprob: -13.626178741455078
    6. ')' → logprob: -14.376178741455078
    7. '('' → logprob: -15.501178741455078
    8. '()).' → logprob: -15.751178741455078
    9. '("' → logprob: -16.126178741455078
    10. ' ()' → logprob: -17.376178741455078

Token 123: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00021390743495430797
    2. 'strip' → logprob: -8.500213623046875
    3. ' split' → logprob: -11.625213623046875
    4. ')' → logprob: -13.875213623046875
    5. '(split' → logprob: -15.125213623046875
    6. 'rstrip' → logprob: -15.500213623046875
    7. 'spl' → logprob: -17.625213623046875
    8. '_split' → logprob: -17.875213623046875
    9. '()' → logprob: -18.250213623046875
    10. '.split' → logprob: -18.500213623046875

Token 124: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005933066830039024
    2. '()' → logprob: -5.8809332847595215
    3. ')' → logprob: -6.1309332847595215
    4. '()))' → logprob: -7.1309332847595215
    5. '))' → logprob: -9.380932807922363
    6. '(' → logprob: -10.505932807922363
    7. '('' → logprob: -10.755932807922363
    8. ' ())' → logprob: -11.755932807922363
    9. '())
' → logprob: -12.505932807922363
    10. '());' → logprob: -13.630932807922363

Token 125: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.016408398747444153
    2. ' 
' → logprob: -5.516408443450928
    3. ')' → logprob: -5.766408443450928
    4. '  
' → logprob: -5.891408443450928
    5. '
' → logprob: -6.641408443450928
    6. '\n' → logprob: -6.891408443450928
    7. ' ' → logprob: -7.391408443450928
    8. ',' → logprob: -7.391408443450928
    9. '#' → logprob: -7.641408443450928
    10. '' → logprob: -7.766408443450928

Token 126: ' Cré' (ID: 109203)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -2.0790903568267822
    2. 'elements' → logprob: -2.2040903568267822
    3. 'letters' → logprob: -2.3290903568267822
    4. 'lst' → logprob: -3.0790903568267822
    5. 'chars' → logprob: -3.2040903568267822
    6. 'A' → logprob: -3.2040903568267822
    7. '#' → logprob: -3.3290903568267822
    8. 'words' → logprob: -3.4540903568267822
    9. 'gr' → logprob: -3.5790903568267822
    10. 'ranges' → logprob: -3.5790903568267822

Token 127: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.025761721655726433
    2. 'er' → logprob: -4.275761604309082
    3. '#' → logprob: -5.025761604309082
    4. 'ate' → logprob: -5.650761604309082
    5. 'e' → logprob: -8.025761604309082
    6. 'a' → logprob: -8.150761604309082
    7. 'at' → logprob: -8.275761604309082
    8. 'é' → logprob: -9.150761604309082
    9. 'tion' → logprob: -9.525761604309082
    10. 'd' → logprob: -9.650761604309082

Token 128: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.00668150931596756
    2. 'd' → logprob: -6.131681442260742
    3. ' de' → logprob: -6.381681442260742
    4. 's' → logprob: -6.881681442260742
    5. ' des' → logprob: -6.881681442260742
    6. ' of' → logprob: -8.381681442260742
    7. '[]' → logprob: -8.756681442260742
    8. ' ' → logprob: -9.506681442260742
    9. ')' → logprob: -9.881681442260742
    10. '[' → logprob: -9.881681442260742

Token 129: ''une' (ID: 13337)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6021477580070496
    2. '[' → logprob: -1.7271478176116943
    3. 'e' → logprob: -2.4771478176116943
    4. 'es' → logprob: -2.7271478176116943
    5. ' []' → logprob: -2.8521478176116943
    6. ' une' → logprob: -3.9771478176116943
    7. 'a' → logprob: -4.352147579193115
    8. 'une' → logprob: -4.602147579193115
    9. ' [' → logprob: -4.602147579193115
    10. ''une' → logprob: -5.852147579193115

Token 130: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.27585557103157043
    2. ' list' → logprob: -2.775855541229248
    3. 'range' → logprob: -2.775855541229248
    4. 'liste' → logprob: -2.775855541229248
    5. ' liste' → logprob: -4.150855541229248
    6. 'product' → logprob: -4.900855541229248
    7. ' range' → logprob: -5.150855541229248
    8. '[' → logprob: -5.275855541229248
    9. '[]' → logprob: -5.525855541229248
    10. 'matrix' → logprob: -5.650855541229248

Token 131: ' '' (ID: 461)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.1889095306396484
    2. 'des' → logprob: -1.4389095306396484
    3. 's' → logprob: -1.6889095306396484
    4. '[]' → logprob: -2.6889095306396484
    5. ' de' → logprob: -3.3139095306396484
    6. 'de' → logprob: -3.8139095306396484
    7. '_lists' → logprob: -3.8139095306396484
    8. '[' → logprob: -4.063909530639648
    9. 'lists' → logprob: -4.188909530639648
    10. '=[]' → logprob: -4.563909530639648

Token 132: 'ABC' (ID: 44197)
  Prédit: 'lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lists' → logprob: -1.8775581121444702
    2. 'gr' → logprob: -2.2525582313537598
    3. 'A' → logprob: -2.3775582313537598
    4. 'mat' → logprob: -3.1275582313537598
    5. 'matrix' → logprob: -3.3775582313537598
    6. 'lst' → logprob: -3.6275582313537598
    7. 'sets' → logprob: -3.7525582313537598
    8. 'all' → logprob: -4.00255823135376
    9. 'cases' → logprob: -4.00255823135376
    10. 'list' → logprob: -4.00255823135376

Token 133: ''' (ID: 6)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15752196311950684
    2. '_lists' → logprob: -2.532521963119507
    3. ' =' → logprob: -3.532521963119507
    4. '_list' → logprob: -3.657521963119507
    5. ''' → logprob: -6.032522201538086
    6. '_s' → logprob: -6.032522201538086
    7. '_sets' → logprob: -7.032522201538086
    8. '_values' → logprob: -7.032522201538086
    9. '=[]' → logprob: -7.532522201538086
    10. '=' → logprob: -8.032522201538086

Token 134: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12254653871059418
    2. '=' → logprob: -2.247546434402466
    3. '=[]' → logprob: -4.872546672821045
    4. 's' → logprob: -6.497546672821045
    5. '[]' → logprob: -8.122546195983887
    6. '=[]
' → logprob: -9.372546195983887
    7. '=[' → logprob: -10.372546195983887
    8. 'es' → logprob: -11.122546195983887
    9. '[' → logprob: -11.372546195983887
    10. ',' → logprob: -11.622546195983887

Token 135: ' va' (ID: 3423)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.5865986347198486
    2. '=' → logprob: -1.3365986347198486
    3. ' =' → logprob: -2.8365986347198486
    4. '[]' → logprob: -3.0865986347198486
    5. ' contient' → logprob: -3.8365986347198486
    6. '=[]
' → logprob: -4.5865983963012695
    7. '[' → logprob: -4.5865983963012695
    8. '=[' → logprob: -4.8365983963012695
    9. ' cont' → logprob: -5.7115983963012695
    10. '_cont' → logprob: -6.0865983963012695

Token 136: ' conten' (ID: 23523)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -1.1488378047943115
    2. '[]' → logprob: -1.2738378047943115
    3. ' conten' → logprob: -1.8988378047943115
    4. 'conten' → logprob: -2.7738378047943115
    5. ' accueillir' → logprob: -3.2738378047943115
    6. ' stock' → logprob: -3.5238378047943115
    7. '[' → logprob: -3.6488378047943115
    8. 'cont' → logprob: -4.023838043212891
    9. 'stock' → logprob: -4.023838043212891
    10. 's' → logprob: -4.648838043212891

Token 137: 'ir' (ID: 380)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4186425805091858
    2. 'ir' → logprob: -1.168642520904541
    3. 't' → logprob: -4.293642520904541
    4. 'r' → logprob: -4.293642520904541
    5. 'uer' → logprob: -6.293642520904541
    6. 'u' → logprob: -7.793642520904541
    7. 'ur' → logprob: -7.918642520904541
    8. 'eer' → logprob: -8.6686429977417
    9. 'ar' → logprob: -8.7936429977417
    10. 'e' → logprob: -8.7936429977417

Token 138: ' N' (ID: 478)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.019383158534765244
    2. '[N' → logprob: -5.019382953643799
    3. '[M' → logprob: -5.519382953643799
    4. ' []' → logprob: -5.644382953643799
    5. '[' → logprob: -6.269382953643799
    6. ' les' → logprob: -6.894382953643799
    7. ' des' → logprob: -7.394382953643799
    8. '=[]' → logprob: -8.769383430480957
    9. ' M' → logprob: -8.894383430480957
    10. '['' → logprob: -8.894383430480957

Token 139: ' sous' (ID: 14487)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.8491804003715515
    2. ' lists' → logprob: -1.9741804599761963
    3. ' =' → logprob: -2.5991804599761963
    4. ' des' → logprob: -3.0991804599761963
    5. ' listes' → logprob: -3.0991804599761963
    6. '=' → logprob: -3.3491804599761963
    7. ' ' → logprob: -3.4741804599761963
    8. '_' → logprob: -4.224180221557617
    9. ' tuples' → logprob: -4.224180221557617
    10. ' []' → logprob: -4.474180221557617

Token 140: '-list' (ID: 18463)
  Prédit: '-list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-list' → logprob: -0.6423502564430237
    2. 'list' → logprob: -0.8923502564430237
    3. '_list' → logprob: -3.017350196838379
    4. '-' → logprob: -4.892350196838379
    5. 'lists' → logprob: -5.892350196838379
    6. ' listes' → logprob: -6.267350196838379
    7. '-l' → logprob: -6.642350196838379
    8. 'listas' → logprob: -7.142350196838379
    9. 'List' → logprob: -8.017350196838379
    10. '_lists' → logprob: -8.017350196838379

Token 141: 'es' (ID: 268)
  Prédit: 'istes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'istes' → logprob: -0.007509144954383373
    2. 'iste' → logprob: -5.757509231567383
    3. 'stes' → logprob: -6.507509231567383
    4. 'es' → logprob: -7.007509231567383
    5. 'ist' → logprob: -8.007509231567383
    6. 'tes' → logprob: -8.132509231567383
    7. '```' → logprob: -8.132509231567383
    8. 'ists' → logprob: -8.507509231567383
    9. '#' → logprob: -9.382509231567383
    10. 'ignes' → logprob: -9.882509231567383

Token 142: ',' (ID: 11)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.28157374262809753
    2. '=' → logprob: -2.28157377243042
    3. '[]' → logprob: -2.53157377243042
    4. ' =' → logprob: -3.03157377243042
    5. ',' → logprob: -5.65657377243042
    6. '([]' → logprob: -5.65657377243042
    7. '=[]
' → logprob: -6.40657377243042
    8. '[' → logprob: -6.65657377243042
    9. '=[' → logprob: -6.90657377243042
    10. '```' → logprob: -7.15657377243042

Token 143: ' chacune' (ID: 127465)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.02186526544392109
    2. ' each' → logprob: -4.646865367889404
    3. 'each' → logprob: -4.771865367889404
    4. ' []' → logprob: -6.021865367889404
    5. ' chacune' → logprob: -7.896865367889404
    6. '[][]' → logprob: -8.521864891052246
    7. '[' → logprob: -8.896864891052246
    8. '=[]' → logprob: -9.521864891052246
    9. '[]>' → logprob: -9.896864891052246
    10. '[['' → logprob: -9.896864891052246

Token 144: ' contenant' (ID: 131049)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.08779039233922958
    2. '=' → logprob: -3.0877904891967773
    3. '[]' → logprob: -4.462790489196777
    4. 'con' → logprob: -4.712790489196777
    5. 'cont' → logprob: -5.087790489196777
    6. 'de' → logprob: -6.087790489196777
    7. '=[]
' → logprob: -6.087790489196777
    8. ' de' → logprob: -6.712790489196777
    9. ' contenant' → logprob: -6.837790489196777
    10. ' =' → logprob: -6.962790489196777

Token 145: ' trois' (ID: 25564)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8111964464187622
    2. '3' → logprob: -0.9361964464187622
    3. 'M' → logprob: -3.1861963272094727
    4. '[M' → logprob: -3.9361963272094727
    5. ' M' → logprob: -4.186196327209473
    6. '[' → logprob: -4.186196327209473
    7. ' trois' → logprob: -4.311196327209473
    8. ' three' → logprob: -4.561196327209473
    9. 'three' → logprob: -4.561196327209473
    10. ' ' → logprob: -4.686196327209473

Token 146: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.6000583171844482
    2. 'ent' → logprob: -0.8500583171844482
    3. ' integers' → logprob: -4.600058555603027
    4. ' éléments' → logprob: -5.600058555603027
    5. '0' → logprob: -6.225058555603027
    6. 'inte' → logprob: -6.225058555603027
    7. ' valeurs' → logprob: -7.225058555603027
    8. 'élé' → logprob: -7.350058555603027
    9. ''ent' → logprob: -7.350058555603027
    10. 'val' → logprob: -7.475058555603027

Token 147: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0011387886479496956
    2. 'ières' → logprob: -7.126138687133789
    3. 'i' → logprob: -8.376138687133789
    4. 't' → logprob: -9.501138687133789
    5. 'ier' → logprob: -11.376138687133789
    6. 'tiers' → logprob: -12.251138687133789
    7. 'ti' → logprob: -12.501138687133789
    8. 'ers' → logprob: -13.251138687133789
    9. 'ière' → logprob: -13.626138687133789
    10. 'ités' → logprob: -14.251138687133789

Token 148: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2773261070251465
    2. '=' → logprob: -2.7773261070251465
    3. 's' → logprob: -3.6523261070251465
    4. '=[]
' → logprob: -3.6523261070251465
    5. '[' → logprob: -3.7773261070251465
    6. '=[]' → logprob: -3.9023261070251465
    7. '=[' → logprob: -4.1523261070251465
    8. 'ABC' → logprob: -4.2773261070251465
    9. 'for' → logprob: -4.4023261070251465
    10. ',' → logprob: -4.9023261070251465

Token 149: '#' (ID: 2)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.01632467284798622
    2. ' ABC' → logprob: -4.516324520111084
    3. ' =' → logprob: -6.141324520111084
    4. 'abc' → logprob: -6.766324520111084
    5. '=' → logprob: -7.016324520111084
    6. '
' → logprob: -7.641324520111084
    7. '=[]
' → logprob: -9.266324996948242
    8. '[' → logprob: -9.266324996948242
    9. '=
' → logprob: -9.266324996948242
    10. ' =
' → logprob: -9.266324996948242

Token 150: ' On' (ID: 2160)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.00012797261297237128
    2. ' ABC' → logprob: -9.500127792358398
    3. 'abc' → logprob: -10.125127792358398
    4. '
' → logprob: -12.375127792358398
    5. 'ABCDE' → logprob: -12.625127792358398
    6. 'AB' → logprob: -13.125127792358398
    7. 'A' → logprob: -13.875127792358398
    8. 'ABCDEFGHI' → logprob: -14.125127792358398
    9. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -15.000127792358398
    10. 'XYZ' → logprob: -15.000127792358398

Token 151: ' utilise' (ID: 70283)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03369710594415665
    2. ' for' → logprob: -3.4086971282958984
    3. '=' → logprob: -10.908697128295898
    4. '_' → logprob: -12.408697128295898
    5. ' a' → logprob: -12.408697128295898
    6. ' continue' → logprob: -12.533697128295898
    7. '
' → logprob: -12.658697128295898
    8. '_for' → logprob: -13.533697128295898
    9. 'continue' → logprob: -13.658697128295898
    10. 'range' → logprob: -13.658697128295898

Token 152: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03516386076807976
    2. ' [' → logprob: -3.6601638793945312
    3. '[
' → logprob: -5.785163879394531
    4. '[N' → logprob: -6.285163879394531
    5. '[n' → logprob: -6.535163879394531
    6. '[list' → logprob: -7.035163879394531
    7. '[int' → logprob: -7.785163879394531
    8. '[i' → logprob: -9.285163879394531
    9. '[input' → logprob: -9.285163879394531
    10. '[array' → logprob: -9.410163879394531

Token 153: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23634184896945953
    2. 'for' → logprob: -1.7363418340682983
    3. 'list' → logprob: -5.236341953277588
    4. ' [' → logprob: -5.486341953277588
    5. '[
' → logprob: -5.611341953277588
    6. '[n' → logprob: -5.736341953277588
    7. ' for' → logprob: -5.986341953277588
    8. 'liste' → logprob: -5.986341953277588
    9. '[int' → logprob: -6.486341953277588
    10. '[list' → logprob: -6.486341953277588

Token 154: ' en' (ID: 469)
  Prédit: 'compr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compr' → logprob: -0.4866916239261627
    2. 'com' → logprob: -1.3616915941238403
    3. ' comprehension' → logprob: -2.86169171333313
    4. 'comp' → logprob: -2.86169171333313
    5. '=[]' → logprob: -5.611691474914551
    6. 'de' → logprob: -6.111691474914551
    7. ' compréhension' → logprob: -7.111691474914551
    8. ' compre' → logprob: -7.236691474914551
    9. ' =' → logprob: -7.236691474914551
    10. 'd' → logprob: -7.236691474914551

Token 155: ' compréhension' (ID: 142333)
  Prédit: 'compr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compr' → logprob: -0.13633067905902863
    2. ' compréhension' → logprob: -2.3863306045532227
    3. 'com' → logprob: -3.8863306045532227
    4. ' comprehension' → logprob: -4.511330604553223
    5. '```' → logprob: -6.511330604553223
    6. ' compre' → logprob: -7.011330604553223
    7. 'comp' → logprob: -7.011330604553223
    8. ' compreensão' → logprob: -9.261330604553223
    9. ' comprensión' → logprob: -9.386330604553223
    10. 'list' → logprob: -9.386330604553223

Token 156: ' pour' (ID: 1930)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.48305168747901917
    2. '[' → logprob: -1.1080516576766968
    3. ' ABC' → logprob: -3.4830517768859863
    4. '[
' → logprob: -4.358051776885986
    5. 'abc' → logprob: -5.358051776885986
    6. '
' → logprob: -7.108051776885986
    7. '[[' → logprob: -7.233051776885986
    8. 's' → logprob: -7.358051776885986
    9. 'for' → logprob: -7.358051776885986
    10. ' [' → logprob: -7.983051776885986

Token 157: ' it' (ID: 480)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.44681182503700256
    2. 'range' → logprob: -1.6968117952346802
    3. ' range' → logprob: -1.9468117952346802
    4. ' [' → logprob: -4.446811676025391
    5. 'for' → logprob: -4.571811676025391
    6. '[
' → logprob: -4.821811676025391
    7. ' for' → logprob: -6.696811676025391
    8. '[N' → logprob: -7.321811676025391
    9. '[int' → logprob: -8.07181167602539
    10. ' ' → logprob: -8.07181167602539

Token 158: 'érer' (ID: 29097)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4455110430717468
    2. 'érer' → logprob: -1.0705111026763916
    3. '[' → logprob: -4.8205108642578125
    4. 'range' → logprob: -6.0705108642578125
    5. 'érés' → logprob: -7.1955108642578125
    6. 'ertools' → logprob: -7.5705108642578125
    7. 'ér' → logprob: -7.6955108642578125
    8. 'éré' → logprob: -7.6955108642578125
    9. 'é' → logprob: -8.070510864257812
    10. 'ers' → logprob: -8.070510864257812

Token 159: ' N' (ID: 478)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9770036935806274
    2. '_' → logprob: -1.3520036935806274
    3. 'for' → logprob: -1.4770036935806274
    4. ' range' → logprob: -2.852003574371338
    5. ' for' → logprob: -2.977003574371338
    6. ' _' → logprob: -4.352003574371338
    7. ' ' → logprob: -5.102003574371338
    8. '(range' → logprob: -6.102003574371338
    9. ' over' → logprob: -6.477003574371338
    10. '_range' → logprob: -6.977003574371338

Token 160: ' fois' (ID: 14697)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9224717617034912
    2. ' for' → logprob: -1.2974717617034912
    3. ' times' → logprob: -1.6724717617034912
    4. ' range' → logprob: -3.422471761703491
    5. ' in' → logprob: -3.797471761703491
    6. ' fois' → logprob: -3.922471761703491
    7. 'range' → logprob: -4.04747200012207
    8. ':' → logprob: -4.29747200012207
    9. ')' → logprob: -5.29747200012207
    10. 'ranges' → logprob: -5.29747200012207

Token 161: ' (' (ID: 350)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.18311525881290436
    2. 'for' → logprob: -2.808115243911743
    3. '[' → logprob: -3.808115243911743
    4. ' ABC' → logprob: -3.933115243911743
    5. 'abc' → logprob: -4.058115482330322
    6. ' for' → logprob: -4.183115482330322
    7. ',' → logprob: -4.308115482330322
    8. ':' → logprob: -4.808115482330322
    9. ':
' → logprob: -5.808115482330322
    10. '
' → logprob: -6.933115482330322

Token 162: 'i' (ID: 72)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7659525871276855
    2. '_' → logprob: -1.5159525871276855
    3. '[' → logprob: -1.7659525871276855
    4. ' range' → logprob: -2.6409525871276855
    5. 'for' → logprob: -4.0159525871276855
    6. '[_' → logprob: -4.1409525871276855
    7. '[i' → logprob: -4.5159525871276855
    8. '
' → logprob: -5.2659525871276855
    9. '[int' → logprob: -5.6409525871276855
    10. 'product' → logprob: -6.0159525871276855

Token 163: ' prend' (ID: 37463)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.026598675176501274
    2. ' in' → logprob: -3.9015986919403076
    3. 'in' → logprob: -5.6515984535217285
    4. ' n' → logprob: -6.2765984535217285
    5. ')' → logprob: -8.651598930358887
    6. 'range' → logprob: -9.151598930358887
    7. '_' → logprob: -9.276598930358887
    8. 'nt' → logprob: -10.401598930358887
    9. '=' → logprob: -10.651598930358887
    10. 'N' → logprob: -10.651598930358887

Token 164: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6234036087989807
    2. 'range' → logprob: -1.123403549194336
    3. ' ' → logprob: -2.623403549194336
    4. ' la' → logprob: -3.873403549194336
    5. ' _' → logprob: -3.998403549194336
    6. ' range' → logprob: -4.373403549194336
    7. ' part' → logprob: -5.248403549194336
    8. ' input' → logprob: -7.123403549194336
    9. 'part' → logprob: -7.373403549194336
    10. '0' → logprob: -7.498403549194336

Token 165: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.04919527471065521
    2. ' valeurs' → logprob: -3.7991952896118164
    3. 'values' → logprob: -4.424195289611816
    4. 'range' → logprob: -5.174195289611816
    5. '0' → logprob: -6.049195289611816
    6. ' values' → logprob: -6.174195289611816
    7. ' val' → logprob: -6.549195289611816
    8. ' range' → logprob: -6.924195289611816
    9. ' ' → logprob: -7.799195289611816
    10. '_' → logprob: -8.549195289611816

Token 166: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.16605022549629211
    2. 'de' → logprob: -2.7910501956939697
    3. 'range' → logprob: -3.2910501956939697
    4. '0' → logprob: -3.6660501956939697
    5. 'from' → logprob: -4.541050434112549
    6. ' range' → logprob: -4.791050434112549
    7. ' ' → logprob: -5.291050434112549
    8. ' from' → logprob: -6.041050434112549
    9. '_' → logprob: -7.041050434112549
    10. ' dans' → logprob: -8.41604995727539

Token 167: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05492899566888809
    2. ' range' → logprob: -2.92992901802063
    3. '0' → logprob: -10.30492877960205
    4. '_' → logprob: -11.92992877960205
    5. '	range' → logprob: -12.92992877960205
    6. '_range' → logprob: -13.55492877960205
    7. '[' → logprob: -13.92992877960205
    8. '(range' → logprob: -14.30492877960205
    9. ' ' → logprob: -14.30492877960205
    10. 'rang' → logprob: -15.17992877960205

Token 168: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005357787013053894
    2. ' range' → logprob: -5.25535774230957
    3. '0' → logprob: -9.00535774230957
    4. 'rang' → logprob: -14.75535774230957
    5. ' ' → logprob: -15.13035774230957
    6. '	range' → logprob: -15.63035774230957
    7. '(range' → logprob: -16.00535774230957
    8. '[' → logprob: -16.38035774230957
    9. '1' → logprob: -16.63035774230957
    10. 'ra' → logprob: -16.75535774230957

Token 169: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.06959234178066254
    2. ' to' → logprob: -3.819592237472534
    3. ' in' → logprob: -4.569592475891113
    4. 'à' → logprob: -4.694592475891113
    5. ',' → logprob: -4.819592475891113
    6. 'range' → logprob: -5.694592475891113
    7. 'to' → logprob: -5.819592475891113
    8. ' range' → logprob: -5.944592475891113
    9. ' ' → logprob: -6.069592475891113
    10. ' jusqu' → logprob: -6.444592475891113

Token 170: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.14041481912136078
    2. ' N' → logprob: -2.1404147148132324
    3. 'range' → logprob: -4.515414714813232
    4. ' range' → logprob: -6.140414714813232
    5. ' ' → logprob: -8.14041519165039
    6. '```' → logprob: -12.89041519165039
    7. 'n' → logprob: -13.01541519165039
    8. '<N' → logprob: -13.51541519165039
    9. '3' → logprob: -14.26541519165039
    10. '1' → logprob: -14.26541519165039

Token 171: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0024728013668209314
    2. ' -' → logprob: -6.127472877502441
    3. ')' → logprob: -8.252472877502441
    4. ' )' → logprob: -11.502472877502441
    5. '1' → logprob: -11.877472877502441
    6. '),' → logprob: -13.252472877502441
    7. '-)' → logprob: -13.377472877502441
    8. ')-' → logprob: -14.252472877502441
    9. '```' → logprob: -14.252472877502441
    10. ',' → logprob: -14.377472877502441

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.052377623040229e-05
    2. ' ' → logprob: -9.750070571899414
    3. 'N' → logprob: -12.250070571899414
    4. '2' → logprob: -12.750070571899414
    5. '-' → logprob: -13.625070571899414
    6. '3' → logprob: -14.250070571899414
    7. ')' → logprob: -14.750070571899414
    8. '```' → logprob: -14.750070571899414
    9. 'range' → logprob: -15.000070571899414
    10. '4' → logprob: -15.750070571899414

Token 173: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09045665711164474
    2. ',' → logprob: -2.71545672416687
    3. '[' → logprob: -5.465456485748291
    4. ']' → logprob: -5.590456485748291
    5. ')
' → logprob: -5.715456485748291
    6. '),' → logprob: -6.215456485748291
    7. ' )' → logprob: -6.465456485748291
    8. '):' → logprob: -6.840456485748291
    9. 'ABC' → logprob: -7.215456485748291
    10. ').' → logprob: -7.715456485748291

Token 174: '#' (ID: 2)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.03227254003286362
    2. ' ABC' → logprob: -3.9072725772857666
    3. '
' → logprob: -5.0322723388671875
    4. 'abc' → logprob: -5.7822723388671875
    5. '[' → logprob: -7.0322723388671875
    6. 's' → logprob: -8.157272338867188
    7. 'A' → logprob: -8.407272338867188
    8. '[
' → logprob: -8.782272338867188
    9. ' 
' → logprob: -9.657272338867188
    10. '#' → logprob: -9.907272338867188

Token 175: ' À' (ID: 27643)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.0727657899260521
    2. ' ABC' → logprob: -2.697765827178955
    3. 'abc' → logprob: -6.447765827178955
    4. '[' → logprob: -7.322765827178955
    5. '
' → logprob: -8.447765350341797
    6. '[
' → logprob: -8.572765350341797
    7. 'A' → logprob: -10.322765350341797
    8. ' [' → logprob: -10.697765350341797
    9. '```' → logprob: -10.697765350341797
    10. ' abc' → logprob: -11.072765350341797

Token 176: ' chaque' (ID: 21194)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8618022799491882
    2. 'for' → logprob: -1.236802339553833
    3. ' [' → logprob: -2.611802339553833
    4. ' chaque' → logprob: -2.861802339553833
    5. ' range' → logprob: -3.236802339553833
    6. 'range' → logprob: -3.361802339553833
    7. ' for' → logprob: -4.111802101135254
    8. '_' → logprob: -4.486802101135254
    9. ' la' → logprob: -4.736802101135254
    10. ' ' → logprob: -4.736802101135254

Token 177: ' it' (ID: 480)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15682698786258698
    2. ' range' → logprob: -2.906826972961426
    3. 'for' → logprob: -3.281826972961426
    4. ' _' → logprob: -3.656826972961426
    5. 'range' → logprob: -4.281826972961426
    6. ' for' → logprob: -5.281826972961426
    7. ' i' → logprob: -5.656826972961426
    8. '=' → logprob: -6.281826972961426
    9. 'i' → logprob: -6.531826972961426
    10. ' ' → logprob: -7.156826972961426

Token 178: 'ération' (ID: 24977)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.3429413437843323
    2. 'ération' → logprob: -1.4679412841796875
    3. 'ér' → logprob: -3.3429412841796875
    4. 'é' → logprob: -4.5929412841796875
    5. 'éra' → logprob: -6.0929412841796875
    6. 'érateur' → logprob: -6.4679412841796875
    7. 'érieur' → logprob: -6.5929412841796875
    8. 'érêt' → logprob: -6.8429412841796875
    9. 'ration' → logprob: -6.9679412841796875
    10. 'érations' → logprob: -7.0929412841796875

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10157456248998642
    2. ' ,' → logprob: -2.476574659347534
    3. '[' → logprob: -4.851574420928955
    4. ')' → logprob: -6.726574420928955
    5. ':' → logprob: -7.101574420928955
    6. 'ABC' → logprob: -7.351574420928955
    7. ' ABC' → logprob: -7.726574420928955
    8. ' [' → logprob: -8.726574897766113
    9. ']' → logprob: -8.851574897766113
    10. ' on' → logprob: -9.226574897766113

Token 180: ' on' (ID: 402)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.26712292432785034
    2. ' ABC' → logprob: -1.5171229839324951
    3. 'abc' → logprob: -4.392122745513916
    4. ' on' → logprob: -6.767122745513916
    5. ' abc' → logprob: -8.017123222351074
    6. ' ' → logprob: -8.517123222351074
    7. 'l' → logprob: -8.767123222351074
    8. '   ' → logprob: -9.017123222351074
    9. ' ' → logprob: -9.142123222351074
    10. '```' → logprob: -9.517123222351074

Token 181: ' lit' (ID: 11980)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.6760212182998657
    2. ' append' → logprob: -1.3010212182998657
    3. '.append' → logprob: -1.6760212182998657
    4. ' ajoute' → logprob: -3.676021099090576
    5. 'ABC' → logprob: -6.426021099090576
    6. ' ABC' → logprob: -6.676021099090576
    7. 'abc' → logprob: -6.801021099090576
    8. 'aj' → logprob: -8.051021575927734
    9. '_append' → logprob: -8.176021575927734
    10. ' crée' → logprob: -8.801021575927734

Token 182: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.566826581954956
    2. ' trois' → logprob: -1.066826581954956
    3. ' three' → logprob: -3.441826581954956
    4. ' ' → logprob: -3.941826581954956
    5. ' la' → logprob: -4.316826820373535
    6. ' les' → logprob: -5.316826820373535
    7. ' un' → logprob: -5.566826820373535
    8. '()' → logprob: -6.066826820373535
    9. ' trip' → logprob: -6.191826820373535
    10. ' a' → logprob: -6.441826820373535

Token 183: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.7590801119804382
    2. 'ligne' → logprob: -1.384080171585083
    3. ' liste' → logprob: -2.009080171585083
    4. 'liste' → logprob: -2.259080171585083
    5. 'l' → logprob: -4.759079933166504
    6. 'entrée' → logprob: -5.634079933166504
    7. 'list' → logprob: -5.884079933166504
    8. ' ' → logprob: -5.884079933166504
    9. 'int' → logprob: -6.134079933166504
    10. ' input' → logprob: -6.384079933166504

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8653355240821838
    2. '
' → logprob: -1.615335464477539
    3. ' =' → logprob: -2.990335464477539
    4. '=' → logprob: -3.365335464477539
    5. 'for' → logprob: -3.365335464477539
    6. '   ' → logprob: -3.365335464477539
    7. 'ABC' → logprob: -3.490335464477539
    8. '#' → logprob: -3.990335464477539
    9. ')' → logprob: -4.115335464477539
    10. '[' → logprob: -4.240335464477539

Token 185: ' on' (ID: 402)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' puis' → logprob: -1.0488178730010986
    2. ' la' → logprob: -1.1738178730010986
    3. ' ab' → logprob: -2.1738178730010986
    4. ' et' → logprob: -3.6738178730010986
    5. ' ' → logprob: -3.7988178730010986
    6. 'ABC' → logprob: -3.9238178730010986
    7. 'abc' → logprob: -4.1738176345825195
    8. ' split' → logprob: -4.2988176345825195
    9. 'split' → logprob: -4.4238176345825195
    10. ' ABC' → logprob: -4.5488176345825195

Token 186: ' la' (ID: 557)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5247889757156372
    2. 'split' → logprob: -1.5247889757156372
    3. ' split' → logprob: -2.6497888565063477
    4. ' continue' → logprob: -3.7747888565063477
    5. 'append' → logprob: -3.7747888565063477
    6. 's' → logprob: -4.774788856506348
    7. '.split' → logprob: -5.024788856506348
    8. ' map' → logprob: -5.024788856506348
    9. ' ajoute' → logprob: -5.149788856506348
    10. ' append' → logprob: -5.274788856506348

Token 187: ' décou' (ID: 68302)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.05003120377659798
    2. ' split' → logprob: -3.6750311851501465
    3. '.split' → logprob: -4.0500311851501465
    4. '.append' → logprob: -6.1750311851501465
    5. 'map' → logprob: -6.6750311851501465
    6. 'plit' → logprob: -7.5500311851501465
    7. 'append' → logprob: -8.175031661987305
    8. 's' → logprob: -8.175031661987305
    9. ' .' → logprob: -8.425031661987305
    10. '.' → logprob: -8.550031661987305

Token 188: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.01751701347529888
    2. 'page' → logprob: -4.76751708984375
    3. 'per' → logprob: -5.26751708984375
    4. 'p' → logprob: -5.89251708984375
    5. 'pte' → logprob: -8.39251708984375
    6. 'pa' → logprob: -8.51751708984375
    7. 'pé' → logprob: -8.51751708984375
    8. 'ppe' → logprob: -10.01751708984375
    9. 'nte' → logprob: -10.14251708984375
    10. 'pie' → logprob: -10.39251708984375

Token 189: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10196498036384583
    2. ' en' → logprob: -3.4769649505615234
    3. ',' → logprob: -3.6019649505615234
    4. 'en' → logprob: -3.7269649505615234
    5. '(),' → logprob: -4.726964950561523
    6. ')' → logprob: -6.101964950561523
    7. 'input' → logprob: -6.601964950561523
    8. ' ,' → logprob: -8.226964950561523
    9. 'into' → logprob: -8.601964950561523
    10. ' into' → logprob: -8.726964950561523

Token 190: ' sous' (ID: 14487)
  Prédit: ' trois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trois' → logprob: -0.16387200355529785
    2. ' trip' → logprob: -2.913872003555298
    3. 'trip' → logprob: -3.913872003555298
    4. 'tro' → logprob: -4.538871765136719
    5. '3' → logprob: -4.663871765136719
    6. ' three' → logprob: -4.788871765136719
    7. ' des' → logprob: -4.913871765136719
    8. 'ent' → logprob: -4.913871765136719
    9. ' ' → logprob: -5.163871765136719
    10. 'three' → logprob: -5.538871765136719

Token 191: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.17571714520454407
    2. '_' → logprob: -3.0507171154022217
    3. '-' → logprob: -3.5507171154022217
    4. '_str' → logprob: -3.9257171154022217
    5. '_chain' → logprob: -4.300717353820801
    6. '-chain' → logprob: -4.550717353820801
    7. '-cha' → logprob: -4.550717353820801
    8. '_list' → logprob: -4.800717353820801
    9. 'chain' → logprob: -5.175717353820801
    10. 'chaine' → logprob: -5.425717353820801

Token 192: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.003553385380655527
    2. 'nes' → logprob: -6.50355339050293
    3. 'î' → logprob: -7.25355339050293
    4. 'r' → logprob: -7.37855339050293
    5. 'ines' → logprob: -8.75355339050293
    6. 'îne' → logprob: -9.37855339050293
    7. 'sses' → logprob: -9.37855339050293
    8. '' → logprob: -10.12855339050293
    9. '	' → logprob: -10.50355339050293
    10. 'Î' → logprob: -10.50355339050293

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03345699980854988
    2. ')' → logprob: -4.533456802368164
    3. ' ,' → logprob: -4.658456802368164
    4. '[' → logprob: -4.908456802368164
    5. '   ' → logprob: -7.158456802368164
    6. '#' → logprob: -7.658456802368164
    7. 'a' → logprob: -8.033456802368164
    8. 'input' → logprob: -8.033456802368164
    9. '),' → logprob: -8.283456802368164
    10. 'et' → logprob: -8.408456802368164

Token 194: ' on' (ID: 402)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -1.035493016242981
    2. 'map' → logprob: -1.285493016242981
    3. ' puis' → logprob: -1.535493016242981
    4. ',' → logprob: -2.9104928970336914
    5. 'et' → logprob: -3.5354928970336914
    6. ' et' → logprob: -4.535492897033691
    7. 'p' → logprob: -4.785492897033691
    8. 'abc' → logprob: -4.785492897033691
    9. '3' → logprob: -4.910492897033691
    10. '[' → logprob: -5.410492897033691

Token 195: ' convert' (ID: 8452)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.16319985687732697
    2. 'map' → logprob: -1.9131999015808105
    3. ' trip' → logprob: -6.7881999015808105
    4. ' continue' → logprob: -8.413199424743652
    5. ' convert' → logprob: -8.788199424743652
    6. ' liste' → logprob: -8.913199424743652
    7. '<|end|>' → logprob: -9.288199424743652
    8. ' applique' → logprob: -9.413199424743652
    9. 'convert' → logprob: -9.538199424743652
    10. ' maps' → logprob: -9.538199424743652

Token 196: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.24434177577495575
    2. 'i' → logprob: -2.9943418502807617
    3. 'e' → logprob: -3.2443418502807617
    4. 't' → logprob: -3.3693418502807617
    5. ')' → logprob: -3.8693418502807617
    6. 'is' → logprob: -3.9943418502807617
    7. 'ie' → logprob: -4.369341850280762
    8. 'int' → logprob: -4.619341850280762
    9. '[int' → logprob: -5.119341850280762
    10. '=' → logprob: -5.494341850280762

Token 197: ' chaque' (ID: 21194)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.0089876651763916
    2. ' chaque' → logprob: -1.6339876651763916
    3. ' ces' → logprob: -1.7589876651763916
    4. ' les' → logprob: -1.8839876651763916
    5. 'ces' → logprob: -3.0089876651763916
    6. '()' → logprob: -4.3839874267578125
    7. ' trois' → logprob: -4.6339874267578125
    8. 'les' → logprob: -4.8839874267578125
    9. 'int' → logprob: -5.2589874267578125
    10. ' la' → logprob: -5.3839874267578125

Token 198: ' sous' (ID: 14487)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2853323221206665
    2. '(int' → logprob: -1.7853323221206665
    3. 'ent' → logprob: -3.160332202911377
    4. ' int' → logprob: -3.660332202911377
    5. ' ent' → logprob: -5.910332202911377
    6. '(ent' → logprob: -6.160332202911377
    7. ' entier' → logprob: -6.535332202911377
    8. '=int' → logprob: -7.035332202911377
    9. '(' → logprob: -7.535332202911377
    10. ' (' → logprob: -7.785332202911377

Token 199: '-cha' (ID: 163177)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.8010329008102417
    2. '()' → logprob: -1.5510329008102417
    3. '_' → logprob: -1.6760329008102417
    4. 'int' → logprob: -2.1760330200195312
    5. '(' → logprob: -4.176033020019531
    6. '=int' → logprob: -5.301033020019531
    7. 'list' → logprob: -5.551033020019531
    8. '[int' → logprob: -5.801033020019531
    9. '_list' → logprob: -6.051033020019531
    10. ')' → logprob: -6.801033020019531

Token 200: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.06804830580949783
    2. 'înes' → logprob: -2.9430482387542725
    3. 'ine' → logprob: -4.693048477172852
    4. 'ïne' → logprob: -6.693048477172852
    5. 'î' → logprob: -6.693048477172852
    6. 'în' → logprob: -7.943048477172852
    7. 'Î' → logprob: -9.068048477172852
    8. 'ne' → logprob: -9.068048477172852
    9. 'ï' → logprob: -9.255548477172852
    10. 'ines' → logprob: -9.505548477172852

Token 201: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.22648067772388458
    2. 'en' → logprob: -1.8514807224273682
    3. ')' → logprob: -3.351480722427368
    4. ',' → logprob: -4.976480484008789
    5. 'int' → logprob: -7.476480484008789
    6. ',en' → logprob: -7.851480484008789
    7. '(en' → logprob: -7.851480484008789
    8. ' ' → logprob: -8.476480484008789
    9. ' )' → logprob: -8.476480484008789
    10. ' ,' → logprob: -8.476480484008789

Token 202: ' un' (ID: 537)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.018399840220808983
    2. 'ent' → logprob: -4.268399715423584
    3. ' int' → logprob: -5.518399715423584
    4. 'ints' → logprob: -9.893400192260742
    5. '<int' → logprob: -10.268400192260742
    6. '(int' → logprob: -10.393400192260742
    7. ' ent' → logprob: -10.518400192260742
    8. 'inte' → logprob: -11.143400192260742
    9. '[int' → logprob: -11.518400192260742
    10. '=int' → logprob: -11.768400192260742

Token 203: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07182363420724869
    2. 'ent' → logprob: -2.6968235969543457
    3. 'map' → logprob: -6.696823596954346
    4. ' int' → logprob: -8.571824073791504
    5. 'inte' → logprob: -9.071824073791504
    6. 'trip' → logprob: -9.196824073791504
    7. ' ent' → logprob: -10.446824073791504
    8. 'list' → logprob: -10.446824073791504
    9. '[int' → logprob: -10.446824073791504
    10. ' map' → logprob: -10.446824073791504

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31869223713874817
    2. ')' → logprob: -1.5686922073364258
    3. 'for' → logprob: -3.318692207336426
    4. ']' → logprob: -4.943692207336426
    5. '),' → logprob: -5.318692207336426
    6. '[' → logprob: -5.443692207336426
    7. 'ABC' → logprob: -5.693692207336426
    8. ' for' → logprob: -6.443692207336426
    9. '))' → logprob: -6.693692207336426
    10. ' ,' → logprob: -7.443692207336426

Token 205: ' puis' (ID: 18766)
  Prédit: ' ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.29201996326446533
    2. 'ABC' → logprob: -1.4170199632644653
    3. ' and' → logprob: -5.792019844055176
    4. '*' → logprob: -5.917019844055176
    5. ' ' → logprob: -7.042019844055176
    6. 'abc' → logprob: -7.167019844055176
    7. '   ' → logprob: -7.167019844055176
    8. ')' → logprob: -8.292019844055176
    9. ' abc' → logprob: -8.417019844055176
    10. ' key' → logprob: -8.417019844055176

Token 206: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.02632015384733677
    2. 'on' → logprob: -4.526319980621338
    3. ' les' → logprob: -4.651319980621338
    4. ' ABC' → logprob: -6.276319980621338
    5. '<|end|>' → logprob: -7.401319980621338
    6. ' ' → logprob: -7.776319980621338
    7. ' ajoute' → logprob: -7.776319980621338
    8. 'ABC' → logprob: -7.901319980621338
    9. '[' → logprob: -8.026320457458496
    10. 'les' → logprob: -8.276320457458496

Token 207: ' place' (ID: 2475)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2769044041633606
    2. 'append' → logprob: -1.9019043445587158
    3. ' list' → logprob: -2.651904344558716
    4. 'map' → logprob: -4.776904582977295
    5. ' append' → logprob: -5.276904582977295
    6. '.append' → logprob: -5.401904582977295
    7. ' map' → logprob: -7.151904582977295
    8. 'tolist' → logprob: -7.151904582977295
    9. '_append' → logprob: -7.401904582977295
    10. '=list' → logprob: -7.526904582977295

Token 208: ' le' (ID: 505)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4231553375720978
    2. '[' → logprob: -1.6731553077697754
    3. '[]' → logprob: -2.4231553077697754
    4. 'les' → logprob: -3.7981553077697754
    5. '[...]' → logprob: -4.673155307769775
    6. '[:]' → logprob: -5.173155307769775
    7. '()' → logprob: -5.298155307769775
    8. '(' → logprob: -5.298155307769775
    9. 'la' → logprob: -5.548155307769775
    10. 'liste' → logprob: -5.673155307769775

Token 209: ' résultat' (ID: 62556)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10589900612831116
    2. ']' → logprob: -2.7308990955352783
    3. '[]' → logprob: -4.730898857116699
    4. 'list' → logprob: -5.105898857116699
    5. '[:]' → logprob: -5.230898857116699
    6. ')' → logprob: -5.730898857116699
    7. '[
' → logprob: -5.980898857116699
    8. '[i' → logprob: -6.230898857116699
    9. '_' → logprob: -6.355898857116699
    10. ' [' → logprob: -7.355898857116699

Token 210: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19947673380374908
    2. 'dans' → logprob: -2.824476718902588
    3. ']' → logprob: -3.324476718902588
    4. ' dans' → logprob: -3.449476718902588
    5. '.append' → logprob: -3.949476718902588
    6. '[:]' → logprob: -5.074476718902588
    7. ' in' → logprob: -5.449476718902588
    8. ' )' → logprob: -5.449476718902588
    9. '[' → logprob: -5.449476718902588
    10. ',' → logprob: -6.074476718902588

Token 211: ' la' (ID: 557)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06432793289422989
    2. '[]' → logprob: -3.1893279552459717
    3. 'une' → logprob: -5.064327716827393
    4. 'ABC' → logprob: -5.064327716827393
    5. 'list' → logprob: -6.189327716827393
    6. '[
' → logprob: -6.564327716827393
    7. ' une' → logprob: -6.564327716827393
    8. 'la' → logprob: -7.189327716827393
    9. ' [' → logprob: -7.564327716827393
    10. 'l' → logprob: -8.18932819366455

Token 212: ' sous' (ID: 14487)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.26956892013549805
    2. '[' → logprob: -2.644568920135498
    3. 'list' → logprob: -2.644568920135498
    4. 'liste' → logprob: -3.519568920135498
    5. '[...]' → logprob: -4.644568920135498
    6. 'abc' → logprob: -4.644568920135498
    7. '[]' → logprob: -4.769568920135498
    8. 'range' → logprob: -4.894568920135498
    9. 'N' → logprob: -5.019568920135498
    10. '...' → logprob: -5.894568920135498

Token 213: '-l' (ID: 2887)
  Prédit: '-l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-l' → logprob: -0.938498854637146
    2. 'liste' → logprob: -1.188498854637146
    3. '_l' → logprob: -2.0634989738464355
    4. '[' → logprob: -2.6884989738464355
    5. 'ABC' → logprob: -3.8134989738464355
    6. 'list' → logprob: -3.9384989738464355
    7. '[]' → logprob: -4.3134989738464355
    8. 'l' → logprob: -4.4384989738464355
    9. '_list' → logprob: -4.6884989738464355
    10. '_' → logprob: -4.9384989738464355

Token 214: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.018177684396505356
    2. 'ist' → logprob: -5.393177509307861
    3. 'igne' → logprob: -5.643177509307861
    4. '#' → logprob: -5.768177509307861
    5. '[' → logprob: -6.518177509307861
    6. '=[]' → logprob: -7.018177509307861
    7. 'a' → logprob: -7.518177509307861
    8. 'is' → logprob: -7.643177509307861
    9. 'ine' → logprob: -7.893177509307861
    10. 'e' → logprob: -8.26817798614502

Token 215: ' correspond' (ID: 11095)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.37983155250549316
    2. ']' → logprob: -1.8798315525054932
    3. 'ABC' → logprob: -3.004831552505493
    4. ',' → logprob: -3.129831552505493
    5. 'for' → logprob: -3.754831552505493
    6. ')' → logprob: -4.504831314086914
    7. '.' → logprob: -4.879831314086914
    8. '[]' → logprob: -5.129831314086914
    9. '[i' → logprob: -5.379831314086914
    10. '#' → logprob: -6.004831314086914

Token 216: 'ante' (ID: 2116)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22104789316654205
    2. 'ée' → logprob: -2.721047878265381
    3. '[]' → logprob: -3.221047878265381
    4. ')' → logprob: -3.846047878265381
    5. 'e' → logprob: -4.096047878265381
    6. '()' → logprob: -4.471047878265381
    7. '[' → logprob: -4.721047878265381
    8. '=[]' → logprob: -4.846047878265381
    9. 'é' → logprob: -5.471047878265381
    10. 'à' → logprob: -5.846047878265381

Token 217: '.
' (ID: 558)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.5709517002105713
    2. '[' → logprob: -1.8209517002105713
    3. ',' → logprob: -2.4459517002105713
    4. '
' → logprob: -2.5709517002105713
    5. 'for' → logprob: -2.5709517002105713
    6. ',
' → logprob: -4.945951461791992
    7. ']' → logprob: -4.945951461791992
    8. ']
' → logprob: -5.820951461791992
    9. '   ' → logprob: -6.070951461791992
    10. '#' → logprob: -6.070951461791992

Token 218: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -8.315936429426074e-05
    2. ' ABC' → logprob: -10.250082969665527
    3. 'abc' → logprob: -10.250082969665527
    4. '
' → logprob: -12.500082969665527
    5. 'AB' → logprob: -12.750082969665527
    6. 'A' → logprob: -13.125082969665527
    7. '[' → logprob: -13.750082969665527
    8. 'ABCDE' → logprob: -14.125082969665527
    9. '```' → logprob: -14.375082969665527
    10. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -15.500082969665527

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133724629878998
    2. '=' → logprob: -1.3133724927902222
    3. '=[]' → logprob: -9.438372611999512
    4. '=[' → logprob: -11.563372611999512
    5. ' =[' → logprob: -11.563372611999512
    6. '[' → logprob: -12.813372611999512
    7. '.append' → logprob: -12.938372611999512
    8. '＝' → logprob: -13.063372611999512
    9. '=[]
' → logprob: -13.188372611999512
    10. '[:]' → logprob: -14.563372611999512

Token 220: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13991358876228333
    2. '[int' → logprob: -2.389913558959961
    3. '[N' → logprob: -4.889913558959961
    4. '[i' → logprob: -4.889913558959961
    5. '[list' → logprob: -4.889913558959961
    6. '[input' → logprob: -4.889913558959961
    7. '[np' → logprob: -6.389913558959961
    8. ' [' → logprob: -6.639913558959961
    9. '[List' → logprob: -6.639913558959961
    10. '[array' → logprob: -6.889913558959961

Token 221: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.3080716346157715e-05
    2. ' list' → logprob: -10.750022888183594
    3. 'tuple' → logprob: -13.875022888183594
    4. 'map' → logprob: -14.375022888183594
    5. '[list' → logprob: -18.625022888183594
    6. '	list' → logprob: -19.375022888183594
    7. '(list' → logprob: -19.875022888183594
    8. '=list' → logprob: -20.375022888183594
    9. '[' → logprob: -20.375022888183594
    10. '   ' → logprob: -21.875022888183594

Token 222: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.3319124011322856e-05
    2. 'map' → logprob: -10.750022888183594
    3. '(' → logprob: -13.250022888183594
    4. '(int' → logprob: -17.875022888183594
    5. ' map' → logprob: -18.500022888183594
    6. '	map' → logprob: -18.875022888183594
    7. '.map' → logprob: -19.250022888183594
    8. '()' → logprob: -19.375022888183594
    9. '(
' → logprob: -19.625022888183594
    10. ',map' → logprob: -19.625022888183594

Token 223: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0007601958932355046
    2. 'int' → logprob: -7.500760078430176
    3. '(' → logprob: -8.625760078430176
    4. '<int' → logprob: -11.375760078430176
    5. ',int' → logprob: -12.125760078430176
    6. '[int' → logprob: -12.625760078430176
    7. '(
' → logprob: -12.750760078430176
    8. ']int' → logprob: -13.125760078430176
    9. ' (' → logprob: -14.125760078430176
    10. ' int' → logprob: -14.500760078430176

Token 224: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.40852081775665283
    2. ',input' → logprob: -1.4085208177566528
    3. ',' → logprob: -2.4085206985473633
    4. 'input' → logprob: -7.158520698547363
    5. '(' → logprob: -9.283520698547363
    6. '(),' → logprob: -10.908520698547363
    7. ' input' → logprob: -11.533520698547363
    8. ' (' → logprob: -12.158520698547363
    9. ' ,' → logprob: -12.408520698547363
    10. '=input' → logprob: -12.908520698547363

Token 225: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019288709154352546
    2. ' input' → logprob: -6.251928806304932
    3. '(input' → logprob: -16.501928329467773
    4. ' ' → logprob: -16.751928329467773
    5. '   ' → logprob: -18.251928329467773
    6. '	input' → logprob: -18.376928329467773
    7. ',input' → logprob: -18.751928329467773
    8. '<input' → logprob: -18.876928329467773
    9. '_input' → logprob: -19.626928329467773
    10. ')' → logprob: -20.001928329467773

Token 226: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.935296834039036e-06
    2. '()' → logprob: -12.87500286102295
    3. ' ().' → logprob: -15.37500286102295
    4. '()
' → logprob: -17.500003814697266
    5. '.split' → logprob: -18.625003814697266
    6. '(' → logprob: -18.750003814697266
    7. '.' → logprob: -19.500003814697266
    8. '()))' → logprob: -19.750003814697266
    9. '()).' → logprob: -19.750003814697266
    10. '>().' → logprob: -20.500003814697266

Token 227: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6240566083070007e-06
    2. ' split' → logprob: -14.000001907348633
    3. 'strip' → logprob: -14.625001907348633
    4. '(split' → logprob: -16.375001907348633
    5. ')' → logprob: -16.750001907348633
    6. '.split' → logprob: -16.750001907348633
    7. 'plit' → logprob: -17.500001907348633
    8. 'rstrip' → logprob: -17.875001907348633
    9. ' ' → logprob: -18.500001907348633
    10. '().' → logprob: -18.875001907348633

Token 228: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00016194197814911604
    2. '))' → logprob: -9.500162124633789
    3. '()' → logprob: -10.000162124633789
    4. '()))
' → logprob: -10.750162124633789
    5. '())))' → logprob: -11.250162124633789
    6. '())' → logprob: -12.375162124633789
    7. '())).' → logprob: -13.625162124633789
    8. '()
' → logprob: -14.625162124633789
    9. '()));' → logprob: -14.750162124633789
    10. '(' → logprob: -14.875162124633789

Token 229: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06439176946878433
    2. 'for' → logprob: -3.439391851425171
    3. ' for' → logprob: -3.814391851425171
    4. ')' → logprob: -4.814391613006592
    5. '   ' → logprob: -10.06439208984375
    6. '())' → logprob: -10.68939208984375
    7. '	for' → logprob: -11.31439208984375
    8. ']' → logprob: -11.43939208984375
    9. ' ()' → logprob: -11.43939208984375
    10. ' ' → logprob: -11.81439208984375

Token 230: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7588053941726685
    2. ' range' → logprob: -0.7588053941726685
    3. 'range' → logprob: -2.758805274963379
    4. '_range' → logprob: -9.383805274963379
    5. ' _' → logprob: -9.508805274963379
    6. '(range' → logprob: -11.508805274963379
    7. ' ' → logprob: -12.133805274963379
    8. 'i' → logprob: -12.383805274963379
    9. '	range' → logprob: -13.133805274963379
    10. ' i' → logprob: -14.258805274963379

Token 231: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3491457402706146
    2. ' in' → logprob: -1.224145770072937
    3. 'range' → logprob: -7.349145889282227
    4. ' range' → logprob: -11.099145889282227
    5. '(' → logprob: -11.224145889282227
    6. ')' → logprob: -11.724145889282227
    7. '(range' → logprob: -11.849145889282227
    8. '(N' → logprob: -12.974145889282227
    9. '_' → logprob: -13.224145889282227
    10. '	in' → logprob: -13.349145889282227

Token 232: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061967797577381134
    2. ' range' → logprob: -2.8119678497314453
    3. '(range' → logprob: -16.186967849731445
    4. '	range' → logprob: -17.311967849731445
    5. ' ' → logprob: -18.811967849731445
    6. 'rang' → logprob: -19.436967849731445
    7. ' xrange' → logprob: -20.811967849731445
    8. ')' → logprob: -21.186967849731445
    9. 'ran' → logprob: -21.311967849731445
    10. '.range' → logprob: -21.561967849731445

Token 233: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0009146820520982146
    2. '(' → logprob: -7.000914573669434
    3. '(
' → logprob: -12.875914573669434
    4. '(n' → logprob: -15.125914573669434
    5. 'N' → logprob: -15.250914573669434
    6. ' (' → logprob: -15.750914573669434
    7. '(

' → logprob: -17.25091552734375
    8. '()' → logprob: -18.50091552734375
    9. '((' → logprob: -19.37591552734375
    10. '(int' → logprob: -19.50091552734375

Token 234: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.60414821645827e-06
    2. ')' → logprob: -13.000004768371582
    3. ' )' → logprob: -13.500004768371582
    4. '))' → logprob: -15.000004768371582
    5. ')]
' → logprob: -15.875004768371582
    6. ')].' → logprob: -16.625003814697266
    7. ']' → logprob: -16.625003814697266
    8. ')])' → logprob: -16.625003814697266
    9. ')}' → logprob: -17.500003814697266
    10. '')]' → logprob: -17.625003814697266

Token 235: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16191478073596954
    2. '
' → logprob: -3.286914825439453
    3. 'result' → logprob: -3.286914825439453
    4. 'answer' → logprob: -4.286914825439453
    5. 'answers' → logprob: -4.911914825439453
    6. '#' → logprob: -4.911914825439453
    7. 'A' → logprob: -5.286914825439453
    8. 'choices' → logprob: -5.661914825439453
    9. 'ans' → logprob: -5.786914825439453
    10. 'res' → logprob: -5.786914825439453

Token 236: ' Initial' (ID: 9209)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5147005319595337
    2. 'answer' → logprob: -1.7647005319595337
    3. 'max' → logprob: -2.139700412750244
    4. 'result' → logprob: -3.389700412750244
    5. 'res' → logprob: -3.639700412750244
    6. 'count' → logprob: -4.139700412750244
    7. 'for' → logprob: -4.139700412750244
    8. 'total' → logprob: -5.139700412750244
    9. 'best' → logprob: -5.389700412750244
    10. 'min' → logprob: -5.889700412750244

Token 237: 'isation' (ID: 6993)
  Prédit: 'ization'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.9629753828048706
    2. '_value' → logprob: -2.46297550201416
    3. 'value' → logprob: -2.58797550201416
    4. '_' → logprob: -2.96297550201416
    5. 'max' → logprob: -2.96297550201416
    6. 'isation' → logprob: -3.33797550201416
    7. '_score' → logprob: -3.46297550201416
    8. '#' → logprob: -3.58797550201416
    9. '_max' → logprob: -3.83797550201416
    10. 's' → logprob: -4.21297550201416

Token 238: ' de' (ID: 334)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.471773624420166
    2. 'ans' → logprob: -1.721773624420166
    3. 'result' → logprob: -1.971773624420166
    4. 'total' → logprob: -2.221773624420166
    5. 'res' → logprob: -2.971773624420166
    6. ' ans' → logprob: -2.971773624420166
    7. 'answer' → logprob: -2.971773624420166
    8. 's' → logprob: -3.221773624420166
    9. ' max' → logprob: -3.596773624420166
    10. 'best' → logprob: -3.721773624420166

Token 239: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4198720157146454
    2. 'max' → logprob: -1.9198720455169678
    3. 'total' → logprob: -2.9198720455169678
    4. 'min' → logprob: -3.1698720455169678
    5. 'res' → logprob: -3.2948720455169678
    6. 'answer' → logprob: -3.4198720455169678
    7. 'result' → logprob: -4.044871807098389
    8. 'score' → logprob: -5.169871807098389
    9. 'best' → logprob: -5.794871807098389
    10. 's' → logprob: -6.919871807098389

Token 240: ' variable' (ID: 11076)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.28449881076812744
    2. 'ans' → logprob: -1.9094988107681274
    3. 'res' → logprob: -3.159498691558838
    4. 'result' → logprob: -4.159498691558838
    5. 'best' → logprob: -4.284498691558838
    6. 'answer' → logprob: -4.534498691558838
    7. 'score' → logprob: -5.034498691558838
    8. 's' → logprob: -5.534498691558838
    9. 'S' → logprob: -6.159498691558838
    10. 'maximum' → logprob: -6.284498691558838

Token 241: ' '' (ID: 461)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.11222505569458
    2. ' ans' → logprob: -1.11222505569458
    3. 'ans' → logprob: -1.48722505569458
    4. ' max' → logprob: -2.86222505569458
    5. 'answer' → logprob: -3.86222505569458
    6. 'result' → logprob: -4.36222505569458
    7. 'res' → logprob: -4.73722505569458
    8. 'score' → logprob: -5.36222505569458
    9. ' answer' → logprob: -5.61222505569458
    10. ' result' → logprob: -5.98722505569458

Token 242: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.33531156182289124
    2. 'max' → logprob: -2.2103116512298584
    3. 'res' → logprob: -2.3353116512298584
    4. 'answer' → logprob: -3.0853116512298584
    5. 'result' → logprob: -3.7103116512298584
    6. 'total' → logprob: -5.710311412811279
    7. 'score' → logprob: -6.585311412811279
    8. 'best' → logprob: -6.710311412811279
    9. 's' → logprob: -7.085311412811279
    10. 'S' → logprob: -7.710311412811279

Token 243: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008644940331578255
    2. '=' → logprob: -4.758645057678223
    3. ' ' → logprob: -11.133645057678223
    4. '_' → logprob: -12.008645057678223
    5. 's' → logprob: -13.133645057678223
    6. ')' → logprob: -13.258645057678223
    7. ',' → logprob: -13.883645057678223
    8. ' ='' → logprob: -14.008645057678223
    9. '`' → logprob: -14.258645057678223
    10. ' ' → logprob: -14.633645057678223

Token 244: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20216721296310425
    2. ' =' → logprob: -1.702167272567749
    3. 'ans' → logprob: -7.32716703414917
    4. ' ans' → logprob: -9.827167510986328
    5. '=-' → logprob: -10.577167510986328
    6. ',' → logprob: -12.077167510986328
    7. '_ans' → logprob: -12.452167510986328
    8. '=
' → logprob: -13.202167510986328
    9. '(ans' → logprob: -13.577167510986328
    10. '=float' → logprob: -13.827167510986328

Token 245: ' zéro' (ID: 182040)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.19200526177883148
    2. '0' → logprob: -2.442005157470703
    3. '-int' → logprob: -3.067005157470703
    4. 'float' → logprob: -3.817005157470703
    5. '-(' → logprob: -4.817005157470703
    6. '-inf' → logprob: -6.192005157470703
    7. '10' → logprob: -6.317005157470703
    8. ' -' → logprob: -6.567005157470703
    9. '-s' → logprob: -6.567005157470703
    10. ' float' → logprob: -7.567005157470703

Token 246: '.
' (ID: 558)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0006033109966665506
    2. ' ans' → logprob: -7.625603199005127
    3. '0' → logprob: -10.125603675842285
    4. 'a' → logprob: -11.000603675842285
    5. '(ans' → logprob: -11.000603675842285
    6. '=' → logprob: -11.250603675842285
    7. '
' → logprob: -11.375603675842285
    8. '	ans' → logprob: -11.625603675842285
    9. '_ans' → logprob: -12.625603675842285
    10. ' =' → logprob: -13.000603675842285

Token 247: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.5776860184123507e-06
    2. ' ans' → logprob: -13.12500286102295
    3. '
' → logprob: -15.50000286102295
    4. '```' → logprob: -16.125001907348633
    5. '	ans' → logprob: -16.125001907348633
    6. '(ans' → logprob: -16.375001907348633
    7. '0' → logprob: -16.625001907348633
    8. 'a' → logprob: -17.125001907348633
    9. 'answer' → logprob: -17.625001907348633
    10. '_ans' → logprob: -18.000001907348633

Token 248: ' Cette' (ID: 27383)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -4.723352049040841e-06
    2. ' ans' → logprob: -12.375004768371582
    3. '0' → logprob: -15.125004768371582
    4. '	ans' → logprob: -17.000003814697266
    5. '(ans' → logprob: -17.000003814697266
    6. '
' → logprob: -17.500003814697266
    7. 'max' → logprob: -17.750003814697266
    8. 'answer' → logprob: -18.000003814697266
    9. 'abs' → logprob: -18.500003814697266
    10. 'import' → logprob: -18.625003814697266

Token 249: ' variable' (ID: 11076)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20339570939540863
    2. '=' → logprob: -1.7033957242965698
    3. ' ans' → logprob: -7.828395843505859
    4. 's' → logprob: -8.20339584350586
    5. 'ans' → logprob: -8.32839584350586
    6. '
' → logprob: -8.70339584350586
    7. ' ' → logprob: -8.82839584350586
    8. ',' → logprob: -9.45339584350586
    9. 'space' → logprob: -9.45339584350586
    10. '_ans' → logprob: -9.45339584350586

Token 250: ' serv' (ID: 2096)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0699860081076622
    2. ' =' → logprob: -2.69498610496521
    3. ' ' → logprob: -11.694986343383789
    4. '=int' → logprob: -11.694986343383789
    5. ',' → logprob: -11.944986343383789
    6. '_ans' → logprob: -12.319986343383789
    7. 'max' → logprob: -12.444986343383789
    8. 'ans' → logprob: -12.444986343383789
    9. '=max' → logprob: -13.194986343383789
    10. ')' → logprob: -13.194986343383789

Token 251: 'ira' (ID: 2633)
  Prédit: 'ira'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ira' → logprob: -0.0071113863959908485
    2. 'ra' → logprob: -5.132111549377441
    3. 'era' → logprob: -6.882111549377441
    4. 'ir' → logprob: -9.757111549377441
    5. 'e' → logprob: -10.507111549377441
    6. 'irà' → logprob: -10.757111549377441
    7. 'a' → logprob: -10.882111549377441
    8. '#' → logprob: -11.382111549377441
    9. 'ant' → logprob: -11.757111549377441
    10. 'i' → logprob: -13.132111549377441

Token 252: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7601231932640076
    2. ' =' → logprob: -1.3851232528686523
    3. ' ans' → logprob: -2.2601232528686523
    4. ' ' → logprob: -2.7601232528686523
    5. ' to' → logprob: -3.5101232528686523
    6. 'ans' → logprob: -3.7601232528686523
    7. '0' → logprob: -4.135123252868652
    8. ' à' → logprob: -4.260123252868652
    9. ' as' → logprob: -4.885123252868652
    10. 'as' → logprob: -5.510123252868652

Token 253: ' garder' (ID: 63069)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5772842764854431
    2. 'max' → logprob: -1.702284336090088
    3. '-max' → logprob: -2.077284336090088
    4. '-' → logprob: -2.202284336090088
    5. 'float' → logprob: -4.327284336090088
    6. '-s' → logprob: -6.577284336090088
    7. '100' → logprob: -6.702284336090088
    8. ' max' → logprob: -6.952284336090088
    9. 'int' → logprob: -7.577284336090088
    10. '-c' → logprob: -7.827284336090088

Token 254: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029705720022320747
    2. 'max' → logprob: -3.904705762863159
    3. ' ' → logprob: -5.52970552444458
    4. '=' → logprob: -6.15470552444458
    5. 'ans' → logprob: -7.27970552444458
    6. '1' → logprob: -7.40470552444458
    7. '-' → logprob: -7.77970552444458
    8. ' max' → logprob: -8.154706001281738
    9. '100' → logprob: -8.904706001281738
    10. 'maximum' → logprob: -9.029706001281738

Token 255: ' valeur' (ID: 41664)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8404719233512878
    2. '-' → logprob: -1.2154719829559326
    3. '0' → logprob: -1.3404719829559326
    4. 'float' → logprob: -5.3404717445373535
    5. 'maximum' → logprob: -5.9654717445373535
    6. ' ' → logprob: -7.3404717445373535
    7. ' max' → logprob: -7.5904717445373535
    8. 'int' → logprob: -7.7154717445373535
    9. '-max' → logprob: -7.9654717445373535
    10. '1' → logprob: -8.715472221374512

Token 256: ' maximale' (ID: 76380)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5701026320457458
    2. ' max' → logprob: -1.8201026916503906
    3. ' maximale' → logprob: -1.9451026916503906
    4. '0' → logprob: -3.0701026916503906
    5. ' ' → logprob: -3.1951026916503906
    6. '_max' → logprob: -4.570102691650391
    7. '_' → logprob: -5.695102691650391
    8. 'ans' → logprob: -5.820102691650391
    9. ' maximum' → logprob: -5.820102691650391
    10. ')' → logprob: -5.820102691650391

Token 257: ' trouv' (ID: 40254)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1629477739334106
    2. ' ans' → logprob: -1.2879477739334106
    3. 'ans' → logprob: -1.7879477739334106
    4. '=' → logprob: -2.037947654724121
    5. '_ans' → logprob: -3.537947654724121
    6. 'max' → logprob: -3.787947654724121
    7. '_' → logprob: -4.162947654724121
    8. '_max' → logprob: -4.412947654724121
    9. ' _' → logprob: -4.412947654724121
    10. '(ans' → logprob: -4.662947654724121

Token 258: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0663684606552124
    2. 'e' → logprob: -4.191368579864502
    3. 'eur' → logprob: -4.191368579864502
    4. '=' → logprob: -4.566368579864502
    5. 'ant' → logprob: -4.691368579864502
    6. 'ee' → logprob: -5.816368579864502
    7. 'er' → logprob: -5.816368579864502
    8. 'ante' → logprob: -6.816368579864502
    9. 'es' → logprob: -6.941368579864502
    10. 'ez' → logprob: -7.066368579864502

Token 259: ' au' (ID: 2791)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0868450328707695
    2. '=' → logprob: -2.7118449211120605
    3. ' ans' → logprob: -5.0868449211120605
    4. ' =' → logprob: -5.3368449211120605
    5. '(ans' → logprob: -6.3368449211120605
    6. ')' → logprob: -6.9618449211120605
    7. ',' → logprob: -7.3368449211120605
    8. 'max' → logprob: -7.4618449211120605
    9. '_ans' → logprob: -7.4618449211120605
    10. '
' → logprob: -8.086845397949219

Token 260: ' fil' (ID: 1620)
  Prédit: 'fil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fil' → logprob: -0.7504278421401978
    2. 'maximum' → logprob: -1.6254278421401978
    3. 'cours' → logprob: -2.125427722930908
    4. 'max' → logprob: -2.500427722930908
    5. '0' → logprob: -2.750427722930908
    6. 'long' → logprob: -4.250427722930908
    7. 'moins' → logprob: -4.375427722930908
    8. 'minimum' → logprob: -4.750427722930908
    9. 'fur' → logprob: -5.000427722930908
    10. ' fil' → logprob: -5.375427722930908

Token 261: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.1206333637237549
    2. 'des' → logprob: -1.2456333637237549
    3. ' de' → logprob: -1.7456333637237549
    4. '=' → logprob: -1.9956333637237549
    5. 'de' → logprob: -2.995633363723755
    6. ' du' → logprob: -4.745633125305176
    7. 'du' → logprob: -4.745633125305176
    8. ' =' → logprob: -5.995633125305176
    9. ' ans' → logprob: -5.995633125305176
    10. '#' → logprob: -7.120633125305176

Token 262: ' traitements' (ID: 158417)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04191699996590614
    2. 'ranges' → logprob: -3.791917085647583
    3. ' range' → logprob: -4.916916847229004
    4. '=' → logprob: -6.416916847229004
    5. 'calcul' → logprob: -6.541916847229004
    6. '1' → logprob: -6.541916847229004
    7. 'enumer' → logprob: -6.791916847229004
    8. '100' → logprob: -7.291916847229004
    9. 'max' → logprob: -7.416916847229004
    10. 'iterations' → logprob: -7.791916847229004

Token 263: ' suivants' (ID: 112219)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0004255508247297257
    2. ' ans' → logprob: -8.375425338745117
    3. '
' → logprob: -9.000425338745117
    4. '(ans' → logprob: -10.000425338745117
    5. '=' → logprob: -11.375425338745117
    6. '	ans' → logprob: -11.875425338745117
    7. '_ans' → logprob: -12.625425338745117
    8. ' =' → logprob: -13.125425338745117
    9. ',' → logprob: -14.250425338745117
    10. 'a' → logprob: -15.000425338745117

Token 264: '.
' (ID: 558)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0042016287334263325
    2. '
' → logprob: -5.504201412200928
    3. ' ans' → logprob: -9.754201889038086
    4. '
' → logprob: -11.004201889038086
    5. '=' → logprob: -11.129201889038086
    6. '(ans' → logprob: -11.379201889038086
    7. '_ans' → logprob: -12.629201889038086
    8. '

' → logprob: -12.629201889038086
    9. '	ans' → logprob: -12.754201889038086
    10. '0' → logprob: -12.879201889038086

Token 265: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.2200749754119897e-06
    2. '0' → logprob: -13.500001907348633
    3. ' ans' → logprob: -15.250001907348633
    4. 'a' → logprob: -15.625001907348633
    5. '
' → logprob: -16.000001907348633
    6. '```' → logprob: -16.625001907348633
    7. '	ans' → logprob: -16.750001907348633
    8. '(ans' → logprob: -16.750001907348633
    9. 'answer' → logprob: -17.250001907348633
    10. '=' → logprob: -18.375001907348633

Token 266: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519305646419525
    2. ' =' → logprob: -1.501930594444275
    3. ',' → logprob: -14.001930236816406
    4. '＝' → logprob: -15.001930236816406
    5. ')' → logprob: -16.751930236816406
    6. '=int' → logprob: -17.001930236816406
    7. '=

' → logprob: -17.126930236816406
    8. '.' → logprob: -17.251930236816406
    9. '=
' → logprob: -17.626930236816406
    10. ' ' → logprob: -17.626930236816406

Token 267: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0076562040485441685
    2. ' ' → logprob: -4.882656097412109
    3. '-' → logprob: -10.13265609741211
    4. 'float' → logprob: -12.00765609741211
    5. ' -' → logprob: -12.63265609741211
    6. ' float' → logprob: -14.13265609741211
    7. '-(' → logprob: -16.38265609741211
    8. '   ' → logprob: -17.25765609741211
    9. '000' → logprob: -17.63265609741211
    10. ' ' → logprob: -17.75765609741211

Token 268: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4259644558478612e-05
    2. '-' → logprob: -11.375014305114746
    3. 'float' → logprob: -13.000014305114746
    4. ' ' → logprob: -15.125014305114746
    5. '-(' → logprob: -15.875014305114746
    6. '-s' → logprob: -19.50001335144043
    7. '０' → logprob: -19.75001335144043
    8. ' float' → logprob: -20.12501335144043
    9. '-int' → logprob: -20.25001335144043
    10. '-f' → logprob: -20.25001335144043

Token 269: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04478750750422478
    2. '
' → logprob: -3.7947874069213867
    3. ' for' → logprob: -3.9197874069213867
    4. ' 
' → logprob: -7.419787406921387
    5. '<|end|>' → logprob: -7.919787406921387
    6. '\n' → logprob: -8.919787406921387
    7. '  
' → logprob: -9.544787406921387
    8. '' → logprob: -9.919787406921387
    9. 'from' → logprob: -10.169787406921387
    10. '#' → logprob: -10.294787406921387

Token 270: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003167545364703983
    2. ' for' → logprob: -8.125316619873047
    3. '#' → logprob: -11.125316619873047
    4. 'from' → logprob: -12.500316619873047
    5. '
' → logprob: -13.750316619873047
    6. '+' → logprob: -14.625316619873047
    7. '

' → logprob: -15.250316619873047
    8. 'dire' → logprob: -16.125316619873047
    9. 'import' → logprob: -16.625316619873047
    10. 'sign' → logprob: -16.750316619873047

Token 271: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.004696090007201e-05
    2. 'from' → logprob: -10.250069618225098
    3. ' for' → logprob: -11.375069618225098
    4. '#' → logprob: -11.500069618225098
    5. 'sign' → logprob: -12.000069618225098
    6. 'options' → logprob: -12.750069618225098
    7. 'dire' → logprob: -13.750069618225098
    8. 'choices' → logprob: -14.000069618225098
    9. 'colors' → logprob: -14.625069618225098
    10. 'symbols' → logprob: -14.625069618225098

Token 272: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38695070147514343
    2. ' for' → logprob: -1.1369507312774658
    3. ' ' → logprob: -11.136950492858887
    4. 's' → logprob: -11.511950492858887
    5. ' range' → logprob: -11.636950492858887
    6. ' choices' → logprob: -12.011950492858887
    7. 'from' → logprob: -12.011950492858887
    8. '#' → logprob: -12.136950492858887
    9. ' directions' → logprob: -12.761950492858887
    10. 'range' → logprob: -13.011950492858887

Token 273: ' suivante' (ID: 107439)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03804183006286621
    2. ' for' → logprob: -3.288041830062866
    3. '#' → logprob: -15.163042068481445
    4. 'from' → logprob: -17.038042068481445
    5. ':' → logprob: -17.538042068481445
    6. 's' → logprob: -17.663042068481445
    7. '
' → logprob: -18.038042068481445
    8. ' ' → logprob: -18.538042068481445
    9. ',' → logprob: -18.538042068481445
    10. 'a' → logprob: -18.913042068481445

Token 274: ' utilise' (ID: 70283)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14338620007038116
    2. 'for' → logprob: -2.018386125564575
    3. ' ' → logprob: -7.518386363983154
    4. ' 
' → logprob: -9.518385887145996
    5. ' ,' → logprob: -10.768385887145996
    6. '
' → logprob: -10.768385887145996
    7. ',' → logprob: -11.018385887145996
    8. '#' → logprob: -11.643385887145996
    9. ':' → logprob: -12.143385887145996
    10. ' in' → logprob: -12.893385887145996

Token 275: ' '' (ID: 461)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.015828941017389297
    2. 'list' → logprob: -4.390829086303711
    3. ' product' → logprob: -6.515829086303711
    4. 'range' → logprob: -7.390829086303711
    5. 'for' → logprob: -7.515829086303711
    6. '[-' → logprob: -7.640829086303711
    7. '[' → logprob: -9.890829086303711
    8. ' list' → logprob: -10.640829086303711
    9. 'com' → logprob: -10.890829086303711
    10. '*' → logprob: -10.890829086303711

Token 276: 'product' (ID: 5260)
  Prédit: 'product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.00032247265335172415
    2. 'list' → logprob: -8.250322341918945
    3. ' product' → logprob: -10.250322341918945
    4. 'range' → logprob: -10.750322341918945
    5. '[-' → logprob: -13.250322341918945
    6. 'for' → logprob: -14.375322341918945
    7. '['' → logprob: -14.500322341918945
    8. '[' → logprob: -15.000322341918945
    9. '(product' → logprob: -15.500322341918945
    10. 'choices' → logprob: -15.750322341918945

Token 277: ''' (ID: 6)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.015118451789021492
    2. '([' → logprob: -4.515118598937988
    3. '(' → logprob: -6.390118598937988
    4. '((' → logprob: -6.765118598937988
    5. '('' → logprob: -7.015118598937988
    6. '(['' → logprob: -8.640118598937988
    7. ' (' → logprob: -9.890118598937988
    8. '("' → logprob: -10.265118598937988
    9. ',' → logprob: -11.140118598937988
    10. '(('' → logprob: -11.265118598937988

Token 278: ' pour' (ID: 1930)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.08731957525014877
    2. '((' → logprob: -2.9623196125030518
    3. '([' → logprob: -3.7123196125030518
    4. '([-' → logprob: -5.587319374084473
    5. '(' → logprob: -6.462319374084473
    6. '((-' → logprob: -6.587319374084473
    7. '(['' → logprob: -7.587319374084473
    8. '('' → logprob: -9.212319374084473
    9. '(('' → logprob: -9.712319374084473
    10. '(["' → logprob: -10.712319374084473

Token 279: ' génér' (ID: 18939)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.06464143842458725
    2. 'range' → logprob: -3.1896414756774902
    3. ' product' → logprob: -4.18964147567749
    4. '[-' → logprob: -5.93964147567749
    5. '[' → logprob: -6.18964147567749
    6. ' range' → logprob: -7.06464147567749
    7. '(product' → logprob: -8.439640998840332
    8. '['' → logprob: -8.689640998840332
    9. '(' → logprob: -9.439640998840332
    10. '([-' → logprob: -9.689640998840332

Token 280: 'er' (ID: 259)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.6094321608543396
    2. 'er' → logprob: -0.9844321608543396
    3. 'product' → logprob: -2.6094322204589844
    4. 'e' → logprob: -5.984432220458984
    5. '['' → logprob: -5.984432220458984
    6. 'range' → logprob: -6.734432220458984
    7. '[-' → logprob: -7.234432220458984
    8. ' product' → logprob: -7.734432220458984
    9. '["' → logprob: -8.484432220458984
    10. '(['' → logprob: -8.484432220458984

Token 281: ' toutes' (ID: 17502)
  Prédit: '([-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([-' → logprob: -0.29262131452560425
    2. '[-' → logprob: -1.667621374130249
    3. '[' → logprob: -3.417621374130249
    4. '([' → logprob: -4.29262113571167
    5. '((-' → logprob: -4.66762113571167
    6. 'range' → logprob: -5.79262113571167
    7. '(-' → logprob: -6.29262113571167
    8. '((' → logprob: -6.79262113571167
    9. '[(' → logprob: -6.91762113571167
    10. '(range' → logprob: -6.91762113571167

Token 282: ' les' (ID: 1341)
  Prédit: '([-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([-' → logprob: -0.6543747782707214
    2. '([' → logprob: -1.0293748378753662
    3. '((' → logprob: -2.654374837875366
    4. '(['' → logprob: -3.904374837875366
    5. '((-' → logprob: -3.904374837875366
    6. '(range' → logprob: -4.904374599456787
    7. '(' → logprob: -6.279374599456787
    8. '(["' → logprob: -6.654374599456787
    9. '(('' → logprob: -7.279374599456787
    10. '[' → logprob: -7.904374599456787

Token 283: ' comb' (ID: 4134)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.6739950776100159
    2. 'product' → logprob: -0.7989950776100159
    3. '[' → logprob: -3.548995018005371
    4. '(-' → logprob: -5.423995018005371
    5. '(' → logprob: -5.548995018005371
    6. 'range' → logprob: -6.423995018005371
    7. '(+' → logprob: -7.673995018005371
    8. '([-' → logprob: -8.048995018005371
    9. ' product' → logprob: -8.173995018005371
    10. '[(' → logprob: -8.298995018005371

Token 284: 'inais' (ID: 42744)
  Prédit: 'inations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inations' → logprob: -0.04830298200249672
    2. 'in' → logprob: -3.6733028888702393
    3. 'inais' → logprob: -4.673303127288818
    4. '[(' → logprob: -5.548303127288818
    5. '(' → logprob: -6.548303127288818
    6. 'binations' → logprob: -6.673303127288818
    7. '((' → logprob: -6.923303127288818
    8. '(['' → logprob: -7.048303127288818
    9. '('' → logprob: -7.173303127288818
    10. 'ination' → logprob: -7.923303127288818

Token 285: 'ons' (ID: 1808)
  Prédit: 'ations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.9287683367729187
    2. 'ons' → logprob: -1.4287683963775635
    3. '(' → logprob: -2.4287683963775635
    4. 'c' → logprob: -2.5537683963775635
    5. 'es' → logprob: -3.0537683963775635
    6. 'ions' → logprob: -3.3037683963775635
    7. 't' → logprob: -3.3037683963775635
    8. 'e' → logprob: -3.5537683963775635
    9. 'n' → logprob: -4.928768157958984
    10. '([' → logprob: -5.053768157958984

Token 286: ' possibles' (ID: 97753)
  Prédit: '([-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([-' → logprob: -0.2721215784549713
    2. '((-' → logprob: -2.1471216678619385
    3. '(range' → logprob: -2.8971216678619385
    4. '((' → logprob: -3.2721216678619385
    5. '([' → logprob: -3.6471216678619385
    6. '(['' → logprob: -6.897121429443359
    7. '(('' → logprob: -7.772121429443359
    8. '(' → logprob: -7.897121429443359
    9. '(("' → logprob: -9.02212142944336
    10. '('' → logprob: -9.14712142944336

Token 287: ' de' (ID: 334)
  Prédit: '([-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([-' → logprob: -0.3791353106498718
    2. '((-' → logprob: -1.8791353702545166
    3. '((' → logprob: -2.3791353702545166
    4. '([' → logprob: -2.8791353702545166
    5. '(range' → logprob: -4.3791351318359375
    6. '(' → logprob: -7.0041351318359375
    7. '(['' → logprob: -8.629135131835938
    8. '(('' → logprob: -8.754135131835938
    9. '(([' → logprob: -9.254135131835938
    10. '(("' → logprob: -9.629135131835938

Token 288: ' signes' (ID: 133923)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.4063888192176819
    2. '[' → logprob: -1.281388759613037
    3. '(' → logprob: -3.281388759613037
    4. '(-' → logprob: -4.156388759613037
    5. '(+' → logprob: -5.906388759613037
    6. '([-' → logprob: -8.656389236450195
    7. 'range' → logprob: -10.156389236450195
    8. '['' → logprob: -10.656389236450195
    9. '[(' → logprob: -10.781389236450195
    10. '([' → logprob: -11.156389236450195

Token 289: ' (-' (ID: 21382)
  Prédit: '([-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([-' → logprob: -0.2120354175567627
    2. '[-' → logprob: -2.8370354175567627
    3. '((-' → logprob: -2.9620354175567627
    4. '([' → logprob: -3.3370354175567627
    5. '((' → logprob: -4.337035179138184
    6. '[' → logprob: -4.587035179138184
    7. '(['' → logprob: -4.837035179138184
    8. '(' → logprob: -5.337035179138184
    9. '('' → logprob: -5.837035179138184
    10. '(-' → logprob: -6.212035179138184

Token 290: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016057245433330536
    2. '(' → logprob: -5.516057014465332
    3. '-' → logprob: -5.766057014465332
    4. ',' → logprob: -6.016057014465332
    5. '[-' → logprob: -6.266057014465332
    6. '[' → logprob: -6.391057014465332
    7. '+' → logprob: -6.641057014465332
    8. '(-' → logprob: -7.141057014465332
    9. '(+' → logprob: -8.016057014465332
    10. '+,' → logprob: -10.016057014465332

Token 291: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029415672179311514
    2. ',-' → logprob: -6.252941608428955
    3. ' ,' → logprob: -7.002941608428955
    4. '-' → logprob: -10.752941131591797
    5. '```' → logprob: -10.877941131591797
    6. ',
' → logprob: -11.252941131591797
    7. '[-' → logprob: -11.502941131591797
    8. 'import' → logprob: -12.002941131591797
    9. '1' → logprob: -12.002941131591797
    10. ')' → logprob: -12.627941131591797

Token 292: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009845096617937088
    2. ' ' → logprob: -4.63484525680542
    3. '+' → logprob: -10.009844779968262
    4. ',' → logprob: -10.759844779968262
    5. ' +' → logprob: -11.134844779968262
    6. '```' → logprob: -12.884844779968262
    7. '
' → logprob: -13.259844779968262
    8. '

' → logprob: -13.509844779968262
    9. ' ,' → logprob: -13.884844779968262
    10. ')' → logprob: -14.009844779968262

Token 293: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020127551397308707
    2. ' ' → logprob: -8.750201225280762
    3. '+' → logprob: -10.625201225280762
    4. ',' → logprob: -11.500201225280762
    5. '[' → logprob: -12.875201225280762
    6. '```' → logprob: -13.500201225280762
    7. '
' → logprob: -13.750201225280762
    8. '

' → logprob: -14.125201225280762
    9. ')' → logprob: -14.250201225280762
    10. ' +' → logprob: -14.875201225280762

Token 294: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003099642461165786
    2. ' ,' → logprob: -6.00309944152832
    3. '[-' → logprob: -8.37809944152832
    4. ')' → logprob: -8.62809944152832
    5. '([-' → logprob: -10.12809944152832
    6. ')]' → logprob: -10.50309944152832
    7. '   ' → logprob: -10.50309944152832
    8. ',[' → logprob: -10.87809944152832
    9. ',-' → logprob: -11.12809944152832
    10. ']' → logprob: -11.50309944152832

Token 295: ' appli' (ID: 25550)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.269804984331131
    2. 'for' → logprob: -1.7698049545288086
    3. '((-' → logprob: -3.5198049545288086
    4. '([-' → logprob: -4.144804954528809
    5. ' for' → logprob: -5.019804954528809
    6. ' ,' → logprob: -5.519804954528809
    7. '(-' → logprob: -5.519804954528809
    8. '(' → logprob: -6.269804954528809
    9. '((' → logprob: -6.269804954528809
    10. '[-' → logprob: -6.894804954528809

Token 296: 'qués' (ID: 70348)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.9459964632987976
    2. '[-' → logprob: -1.8209965229034424
    3. ',' → logprob: -2.3209965229034424
    4. 'à' → logprob: -2.4459965229034424
    5. '(-' → logprob: -2.6959965229034424
    6. '   ' → logprob: -3.4459965229034424
    7. 'a' → logprob: -3.5709965229034424
    8. '=' → logprob: -3.6959965229034424
    9. '=(-' → logprob: -3.9459965229034424
    10. '(' → logprob: -4.070996284484863

Token 297: ' aux' (ID: 5850)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2801978588104248
    2. ' ,' → logprob: -3.155197858810425
    3. ' à' → logprob: -3.155197858810425
    4. '([-' → logprob: -3.155197858810425
    5. ' ' → logprob: -3.780197858810425
    6. ' to' → logprob: -3.780197858810425
    7. 'to' → logprob: -4.155198097229004
    8. ' aux' → logprob: -4.530198097229004
    9. '([' → logprob: -4.530198097229004
    10. '   ' → logprob: -4.905198097229004

Token 298: ' trois' (ID: 25564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6074949502944946
    2. '[' → logprob: -1.1074949502944946
    3. '[-' → logprob: -2.232494831085205
    4. '(-' → logprob: -4.857494831085205
    5. ' (' → logprob: -5.232494831085205
    6. '3' → logprob: -5.982494831085205
    7. ' ' → logprob: -6.982494831085205
    8. ' [' → logprob: -7.607494831085205
    9. ' [-' → logprob: -8.607495307922363
    10. ' (-' → logprob: -8.982495307922363

Token 299: ' coordonnées' (ID: 181895)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1194271370768547
    2. ')' → logprob: -3.74442720413208
    3. '(' → logprob: -4.49442720413208
    4. 'import' → logprob: -4.49442720413208
    5. ']' → logprob: -4.86942720413208
    6. 'sign' → logprob: -4.99442720413208
    7. '<|end|>' → logprob: -5.11942720413208
    8. ' (' → logprob: -5.36942720413208
    9. ' signes' → logprob: -5.36942720413208
    10. '(range' → logprob: -5.49442720413208

Token 300: ' (' (ID: 350)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.4521556496620178
    2. 'for' → logprob: -2.202155590057373
    3. '((-' → logprob: -2.202155590057373
    4. '[-' → logprob: -2.827155590057373
    5. '([-' → logprob: -2.827155590057373
    6. ',' → logprob: -5.077155590057373
    7. ' for' → logprob: -5.202155590057373
    8. ' (-' → logprob: -5.327155590057373
    9. '(' → logprob: -6.202155590057373
    10. '((' → logprob: -6.327155590057373

Token 301: 'x' (ID: 87)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.5997588038444519
    2. '(-' → logprob: -1.0997588634490967
    3. '-' → logprob: -2.8497588634490967
    4. '3' → logprob: -3.4747588634490967
    5. '(' → logprob: -4.224758625030518
    6. '[' → logprob: -4.349758625030518
    7. ' (-' → logprob: -7.349758625030518
    8. ' -' → logprob: -8.474759101867676
    9. ' [-' → logprob: -8.599759101867676
    10. ' ' → logprob: -9.099759101867676

Token 302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021965294145047665
    2. ' ,' → logprob: -6.252196311950684
    3. ',-' → logprob: -9.252196311950684
    4. ',
' → logprob: -10.127196311950684
    5. '1' → logprob: -10.877196311950684
    6. 's' → logprob: -11.252196311950684
    7. ' ' → logprob: -11.252196311950684
    8. ')' → logprob: -11.377196311950684
    9. '[' → logprob: -11.502196311950684
    10. '```' → logprob: -11.877196311950684

Token 303: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6908642649650574
    2. '1' → logprob: -1.0658643245697021
    3. ' y' → logprob: -1.9408643245697021
    4. ' ' → logprob: -4.940864086151123
    5. ')' → logprob: -6.940864086151123
    6. '-' → logprob: -7.440864086151123
    7. ' -' → logprob: -7.440864086151123
    8. ',y' → logprob: -7.690864086151123
    9. ',' → logprob: -8.065864562988281
    10. ')y' → logprob: -8.190864562988281

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005045388825237751
    2. ' ,' → logprob: -8.125504493713379
    3. ',-' → logprob: -9.125504493713379
    4. ')' → logprob: -10.625504493713379
    5. '[-' → logprob: -10.875504493713379
    6. '),' → logprob: -11.375504493713379
    7. '#' → logprob: -11.875504493713379
    8. '[' → logprob: -12.000504493713379
    9. '(-' → logprob: -12.625504493713379
    10. ' ' → logprob: -13.000504493713379

Token 305: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.01819196529686451
    2. ' z' → logprob: -4.018191814422607
    3. '1' → logprob: -10.768192291259766
    4. ' ' → logprob: -11.393192291259766
    5. ')' → logprob: -12.893192291259766
    6. ',' → logprob: -13.143192291259766
    7. '```' → logprob: -13.518192291259766
    8. 'x' → logprob: -14.518192291259766
    9. ''z' → logprob: -14.893192291259766
    10. '	z' → logprob: -15.018192291259766

Token 306: ').
' (ID: 6294)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.029792383313179016
    2. ')' → logprob: -4.029792308807373
    3. '):' → logprob: -4.904792308807373
    4. ')])' → logprob: -6.404792308807373
    5. ',' → logprob: -6.529792308807373
    6. ' )' → logprob: -7.654792308807373
    7. ')]
' → logprob: -8.904792785644531
    8. ' ,' → logprob: -9.279792785644531
    9. '(' → logprob: -9.529792785644531
    10. ')]
' → logprob: -10.404792785644531

Token 307: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014121662825345993
    2. '(-' → logprob: -4.3891215324401855
    3. ' for' → logprob: -7.8891215324401855
    4. '((-' → logprob: -8.014122009277344
    5. '[-' → logprob: -8.514122009277344
    6. '(' → logprob: -8.639122009277344
    7. 'sign' → logprob: -8.889122009277344
    8. '*' → logprob: -9.139122009277344
    9. 'product' → logprob: -9.389122009277344
    10. '(*' → logprob: -10.389122009277344

Token 308: ' '' (ID: 461)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01688099466264248
    2. '(-' → logprob: -4.266880989074707
    3. '[-' → logprob: -7.016880989074707
    4. '-' → logprob: -7.141880989074707
    5. ' for' → logprob: -7.641880989074707
    6. '*' → logprob: -8.641880989074707
    7. 'product' → logprob: -9.516880989074707
    8. '(' → logprob: -9.516880989074707
    9. '
' → logprob: -9.891880989074707
    10. ' (-' → logprob: -10.141880989074707

Token 309: 'repeat' (ID: 63242)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.07167495787143707
    2. 'product' → logprob: -3.4466750621795654
    3. '(-' → logprob: -3.5716750621795654
    4. '-' → logprob: -4.946674823760986
    5. '[' → logprob: -6.571674823760986
    6. '(' → logprob: -8.696675300598145
    7. ' product' → logprob: -8.821675300598145
    8. ' [-' → logprob: -9.821675300598145
    9. '
' → logprob: -10.071675300598145
    10. '([-' → logprob: -10.071675300598145

Token 310: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.512236498361744e-07
    2. ')=' → logprob: -14.875000953674316
    3. '(' → logprob: -16.625
    4. '=
' → logprob: -17.75
    5. ')' → logprob: -18.375
    6. ' =' → logprob: -19.0
    7. '=(' → logprob: -20.125
    8. '=

' → logprob: -20.125
    9. 's' → logprob: -20.25
    10. '3' → logprob: -20.5

Token 311: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '```' → logprob: -16.500036239624023
    4. '
' → logprob: -17.000036239624023
    5. '=' → logprob: -17.500036239624023
    6. '1' → logprob: -17.625036239624023
    7. '(' → logprob: -17.937536239624023
    8. ')' → logprob: -18.312536239624023
    9. '

' → logprob: -18.500036239624023
    10. '   ' → logprob: -18.875036239624023

Token 312: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037794087547808886
    2. ')]' → logprob: -5.628779411315918
    3. '):' → logprob: -9.628779411315918
    4. ' )' → logprob: -10.378779411315918
    5. ')])' → logprob: -10.503779411315918
    6. ')`' → logprob: -11.003779411315918
    7. '))' → logprob: -11.378779411315918
    8. ')
' → logprob: -11.503779411315918
    9. ']' → logprob: -12.378779411315918
    10. '）' → logprob: -13.128779411315918

Token 313: ' signifie' (ID: 81149)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16161786019802094
    2. '):' → logprob: -1.9116178750991821
    3. '):
' → logprob: -8.03661823272705
    4. ':' → logprob: -8.03661823272705
    5. 'for' → logprob: -8.03661823272705
    6. ')
' → logprob: -8.66161823272705
    7. ' )' → logprob: -9.91161823272705
    8. ').' → logprob: -10.28661823272705
    9. ' for' → logprob: -10.53661823272705
    10. ')`' → logprob: -11.28661823272705

Token 314: ' que' (ID: 661)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7812665700912476
    2. '3' → logprob: -1.0312665700912476
    3. '(' → logprob: -2.531266689300537
    4. ' ' → logprob: -2.781266689300537
    5. ' (' → logprob: -4.656266689300537
    6. '=' → logprob: -4.781266689300537
    7. ' that' → logprob: -5.281266689300537
    8. ',' → logprob: -5.531266689300537
    9. ' )' → logprob: -5.531266689300537
    10. '1' → logprob: -5.906266689300537

Token 315: ' pour' (ID: 1930)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.023979106917977333
    2. ' ' → logprob: -3.7739791870117188
    3. '2' → logprob: -7.648979187011719
    4. ')' → logprob: -8.898979187011719
    5. 'product' → logprob: -9.773979187011719
    6. '1' → logprob: -10.648979187011719
    7. '   ' → logprob: -11.898979187011719
    8. '```' → logprob: -12.148979187011719
    9. ' product' → logprob: -12.273979187011719
    10. '=' → logprob: -12.398979187011719

Token 316: ' chaque' (ID: 21194)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.029277224093675613
    2. ' ' → logprob: -4.029277324676514
    3. '_' → logprob: -5.654277324676514
    4. 'sign' → logprob: -6.529277324676514
    5. ' _' → logprob: -6.529277324676514
    6. '[' → logprob: -7.029277324676514
    7. ' signs' → logprob: -7.154277324676514
    8. ')' → logprob: -7.279277324676514
    9. '(' → logprob: -7.904277324676514
    10. 'range' → logprob: -7.904277324676514

Token 317: ' dimension' (ID: 21959)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.012388739734888077
    2. '(' → logprob: -4.762388706207275
    3. 'sign' → logprob: -6.762388706207275
    4. ' ' → logprob: -7.012388706207275
    5. ')' → logprob: -7.137388706207275
    6. ' signs' → logprob: -8.387389183044434
    7. '(-' → logprob: -8.887389183044434
    8. '[' → logprob: -9.762389183044434
    9. '2' → logprob: -9.762389183044434
    10. ' (' → logprob: -9.887389183044434

Token 318: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022377967834472656
    2. '=' → logprob: -4.397377967834473
    3. ',' → logprob: -4.897377967834473
    4. '),' → logprob: -7.272377967834473
    5. '):' → logprob: -7.897377967834473
    6. ')=' → logprob: -8.272377967834473
    7. ' )' → logprob: -8.397377967834473
    8. ')
' → logprob: -8.397377967834473
    9. '):
' → logprob: -9.147377967834473
    10. '(' → logprob: -10.147377967834473

Token 319: 'x' (ID: 87)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.005411146208643913
    2. ')' → logprob: -5.255411148071289
    3. ' ' → logprob: -8.755411148071289
    4. ' )' → logprob: -12.130411148071289
    5. ',' → logprob: -12.255411148071289
    6. ')=' → logprob: -13.130411148071289
    7. '),' → logprob: -13.380411148071289
    8. '=' → logprob: -13.755411148071289
    9. ')>' → logprob: -13.755411148071289
    10. '<|end|>' → logprob: -14.630411148071289

Token 320: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028784746304154396
    2. '=' → logprob: -3.77878475189209
    3. '),' → logprob: -6.15378475189209
    4. ')' → logprob: -6.65378475189209
    5. ' ,' → logprob: -6.90378475189209
    6. ',),' → logprob: -7.77878475189209
    7. 'import' → logprob: -8.65378475189209
    8. ',)' → logprob: -9.15378475189209
    9. ',
' → logprob: -9.77878475189209
    10. ' =' → logprob: -10.15378475189209

Token 321: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2757576107978821
    2. ' y' → logprob: -2.1507575511932373
    3. '3' → logprob: -2.5257575511932373
    4. ')' → logprob: -3.4007575511932373
    5. ' ' → logprob: -5.775757789611816
    6. 'z' → logprob: -5.775757789611816
    7. ',' → logprob: -5.900757789611816
    8. '<|end|>' → logprob: -7.400757789611816
    9. ' )' → logprob: -7.775757789611816
    10. ' z' → logprob: -8.275757789611816

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027345139533281326
    2. '),' → logprob: -4.152345180511475
    3. '=' → logprob: -5.152345180511475
    4. ',
' → logprob: -6.027345180511475
    5. '3' → logprob: -7.277345180511475
    6. ')' → logprob: -7.777345180511475
    7. ',y' → logprob: -7.777345180511475
    8. ' ,' → logprob: -7.902345180511475
    9. '),
' → logprob: -8.777344703674316
    10. '
' → logprob: -9.027344703674316

Token 323: ' z' (ID: 579)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.04197700694203377
    2. 'z' → logprob: -3.2919769287109375
    3. ')' → logprob: -5.9169769287109375
    4. ' ' → logprob: -7.0419769287109375
    5. ' z' → logprob: -8.791976928710938
    6. '=' → logprob: -9.416976928710938
    7. '```' → logprob: -10.291976928710938
    8. '...' → logprob: -11.041976928710938
    9. '),' → logprob: -11.416976928710938
    10. '1' → logprob: -11.416976928710938

Token 324: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2464684545993805
    2. '):' → logprob: -1.871468424797058
    3. '),' → logprob: -2.8714685440063477
    4. '):
' → logprob: -5.121468544006348
    5. '))' → logprob: -7.621468544006348
    6. ')`' → logprob: -8.121468544006348
    7. '),
' → logprob: -8.496468544006348
    8. ')
' → logprob: -8.496468544006348
    9. ' )' → logprob: -9.371468544006348
    10. '):

' → logprob: -9.496468544006348

Token 325: ' on' (ID: 402)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -1.4775044918060303
    2. '[-' → logprob: -1.7275044918060303
    3. '[' → logprob: -1.9775044918060303
    4. ')' → logprob: -2.1025044918060303
    5. ' product' → logprob: -2.2275044918060303
    6. '1' → logprob: -2.7275044918060303
    7. '-' → logprob: -3.3525044918060303
    8. '(' → logprob: -3.4775044918060303
    9. '(-' → logprob: -3.4775044918060303
    10. ' ' → logprob: -4.477504730224609

Token 326: ' considère' (ID: 176437)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1627597063779831
    2. 'for' → logprob: -2.412759780883789
    3. '(' → logprob: -4.287759780883789
    4. 'range' → logprob: -4.662759780883789
    5. ' for' → logprob: -4.912759780883789
    6. '):' → logprob: -5.162759780883789
    7. ' (' → logprob: -5.787759780883789
    8. ' in' → logprob: -6.037759780883789
    9. ' range' → logprob: -6.162759780883789
    10. ',' → logprob: -6.287759780883789

Token 327: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9383531808853149
    2. '[-' → logprob: -1.063353180885315
    3. '[' → logprob: -2.6883530616760254
    4. '(' → logprob: -2.6883530616760254
    5. '2' → logprob: -2.9383530616760254
    6. '(-' → logprob: -3.4383530616760254
    7. ' ' → logprob: -4.063353061676025
    8. ' -' → logprob: -4.563353061676025
    9. ' (' → logprob: -5.563353061676025
    10. ' [-' → logprob: -5.563353061676025

Token 328: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0683535037969705e-05
    2. ',' → logprob: -12.25001049041748
    3. ' ' → logprob: -12.37501049041748
    4. '   ' → logprob: -14.50001049041748
    5. '=' → logprob: -15.37501049041748
    6. ')' → logprob: -16.125011444091797
    7. '(' → logprob: -16.187511444091797
    8. '```' → logprob: -16.187511444091797
    9. ' ,' → logprob: -16.687511444091797
    10. '...' → logprob: -16.687511444091797

Token 329: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031844829209148884
    2. ' ou' → logprob: -6.6281843185424805
    3. ')' → logprob: -7.3781843185424805
    4. ' ,' → logprob: -7.8781843185424805
    5. ' et' → logprob: -8.62818431854248
    6. ' or' → logprob: -8.75318431854248
    7. '<|end|>' → logprob: -9.12818431854248
    8. 'ou' → logprob: -9.25318431854248
    9. 'et' → logprob: -9.62818431854248
    10. '),' → logprob: -10.00318431854248

Token 330: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16356566548347473
    2. ' ' → logprob: -1.9135656356811523
    3. '3' → logprob: -5.788565635681152
    4. '2' → logprob: -8.413565635681152
    5. ',' → logprob: -10.788565635681152
    6. ')' → logprob: -11.413565635681152
    7. '  ' → logprob: -12.788565635681152
    8. '=' → logprob: -13.163565635681152
    9. '   ' → logprob: -13.476065635681152
    10. '<|end|>' → logprob: -13.601065635681152

Token 331: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13100774586200714
    2. '3' → logprob: -2.131007671356201
    3. ' ' → logprob: -5.506007671356201
    4. '2' → logprob: -12.38100814819336
    5. '
' → logprob: -13.25600814819336
    6. '   ' → logprob: -14.00600814819336
    7. ',' → logprob: -14.00600814819336
    8. '  ' → logprob: -15.31850814819336
    9. '```' → logprob: -15.44350814819336
    10. '=' → logprob: -15.69350814819336

Token 332: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07545744627714157
    2. ']' → logprob: -3.3254573345184326
    3. '):' → logprob: -4.075457572937012
    4. ')]' → logprob: -4.075457572937012
    5. '])' → logprob: -6.450457572937012
    6. ')])' → logprob: -7.950457572937012
    7. ']:' → logprob: -8.950457572937012
    8. ').' → logprob: -9.075457572937012
    9. '）' → logprob: -9.200457572937012
    10. 'for' → logprob: -9.325457572937012

Token 333: ' soit' (ID: 17293)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5736873149871826
    2. 'for' → logprob: -1.1986873149871826
    3. ']' → logprob: -2.4486873149871826
    4. '(' → logprob: -3.9486873149871826
    5. ' (' → logprob: -5.198687553405762
    6. ' for' → logprob: -5.323687553405762
    7. '((' → logprob: -5.573687553405762
    8. '])' → logprob: -6.198687553405762
    9. ' )' → logprob: -6.448687553405762
    10. '#' → logprob: -6.573687553405762

Token 334: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4117147922515869
    2. '3' → logprob: -2.036714792251587
    3. ' ' → logprob: -2.036714792251587
    4. 'all' → logprob: -3.536714792251587
    5. '8' → logprob: -3.911714792251587
    6. ' all' → logprob: -4.786714553833008
    7. ')' → logprob: -5.536714553833008
    8. 'product' → logprob: -5.786714553833008
    9. ' two' → logprob: -6.411714553833008
    10. ' )' → logprob: -6.786714553833008

Token 335: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.018822837620973587
    2. 'all' → logprob: -4.64382266998291
    3. ' ' → logprob: -5.76882266998291
    4. '2' → logprob: -6.51882266998291
    5. 'product' → logprob: -6.51882266998291
    6. '8' → logprob: -6.89382266998291
    7. '(' → logprob: -7.26882266998291
    8. ' all' → logprob: -8.26882266998291
    9. '1' → logprob: -8.64382266998291
    10. '```' → logprob: -8.64382266998291

Token 336: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5414392948150635
    2. '**' → logprob: -1.2914392948150635
    3. ',' → logprob: -2.0414392948150635
    4. ')**' → logprob: -4.541439056396484
    5. '<|end|>' → logprob: -7.166439056396484
    6. '```' → logprob: -7.541439056396484
    7. '),' → logprob: -7.791439056396484
    8. '*' → logprob: -8.916439056396484
    9. '^' → logprob: -8.916439056396484
    10. '#' → logprob: -9.291439056396484

Token 337: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4744565188884735
    2. '3' → logprob: -0.9744565486907959
    3. ' ' → logprob: -8.099456787109375
    4. '**' → logprob: -10.849456787109375
    5. '*' → logprob: -10.974456787109375
    6. '```' → logprob: -11.474456787109375
    7. 'product' → logprob: -11.599456787109375
    8. '1' → logprob: -12.099456787109375
    9. ')' → logprob: -13.411956787109375
    10. '^' → logprob: -13.474456787109375

Token 338: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0003497666330076754
    2. '**' → logprob: -8.500349998474121
    3. '=' → logprob: -9.125349998474121
    4. ' *' → logprob: -10.875349998474121
    5. '3' → logprob: -12.000349998474121
    6. '<|end|>' → logprob: -12.250349998474121
    7. '2' → logprob: -13.250349998474121
    8. '*=' → logprob: -13.500349998474121
    9. ',' → logprob: -14.000349998474121
    10. ')' → logprob: -14.125349998474121

Token 339: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005287261446937919
    2. '3' → logprob: -7.625528812408447
    3. ' ' → logprob: -10.125528335571289
    4. '1' → logprob: -15.500528335571289
    5. 'product' → logprob: -16.12552833557129
    6. '<|end|>' → logprob: -16.50052833557129
    7. '```' → logprob: -16.50052833557129
    8. '<|end|>' → logprob: -16.62552833557129
    9. '...' → logprob: -18.25052833557129
    10. 'import' → logprob: -18.37552833557129

Token 340: '=' (ID: 28)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016718693950679153
    2. '):' → logprob: -10.000166893005371
    3. ' )' → logprob: -10.750166893005371
    4. ').' → logprob: -10.750166893005371
    5. '=' → logprob: -11.000166893005371
    6. 'times' → logprob: -11.375166893005371
    7. ')
' → logprob: -11.750166893005371
    8. ')>' → logprob: -12.000166893005371
    9. ')=' → logprob: -12.375166893005371
    10. '#' → logprob: -12.500166893005371

Token 341: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.00017946491425391287
    2. ' ' → logprob: -8.750179290771484
    3. '3' → logprob: -11.250179290771484
    4. '2' → logprob: -12.375179290771484
    5. '1' → logprob: -13.250179290771484
    6. '=' → logprob: -13.875179290771484
    7. '```' → logprob: -14.750179290771484
    8. '
' → logprob: -15.375179290771484
    9. '

' → logprob: -15.625179290771484
    10. '   ' → logprob: -16.250179290771484

Token 342: ' possibilités' (ID: 119756)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016352228820323944
    2. 'sign' → logprob: -5.01635217666626
    3. 'for' → logprob: -5.39135217666626
    4. ').' → logprob: -6.14135217666626
    5. '):' → logprob: -7.64135217666626
    6. ' for' → logprob: -8.016352653503418
    7. ' signes' → logprob: -8.016352653503418
    8. ']' → logprob: -8.141352653503418
    9. ' signs' → logprob: -8.266352653503418
    10. '#' → logprob: -8.766352653503418

Token 343: ' au' (ID: 2791)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02098114974796772
    2. ')' → logprob: -4.520981311798096
    3. ']' → logprob: -5.645981311798096
    4. 'sign' → logprob: -5.895981311798096
    5. ' for' → logprob: -6.520981311798096
    6. '
' → logprob: -7.270981311798096
    7. ')
' → logprob: -8.020980834960938
    8. ']
' → logprob: -8.520980834960938
    9. ':' → logprob: -8.895980834960938
    10. '):
' → logprob: -9.020980834960938

Token 344: ' total' (ID: 3609)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.006391456816345453
    2. ')' → logprob: -5.506391525268555
    3. '<|end|>' → logprob: -7.381391525268555
    4. '```' → logprob: -7.881391525268555
    5. '1' → logprob: -8.131391525268555
    6. '=' → logprob: -8.131391525268555
    7. 'repeat' → logprob: -9.256391525268555
    8. ']' → logprob: -9.506391525268555
    9. 'range' → logprob: -9.631391525268555
    10. '}' → logprob: -9.881391525268555

Token 345: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05193983018398285
    2. ')' → logprob: -3.9269397258758545
    3. ':' → logprob: -4.051939964294434
    4. ':
' → logprob: -5.301939964294434
    5. '):' → logprob: -6.551939964294434
    6. ' for' → logprob: -6.676939964294434
    7. 'sign' → logprob: -6.801939964294434
    8. '.' → logprob: -6.926939964294434
    9. ')
' → logprob: -6.926939964294434
    10. ']' → logprob: -7.051939964294434

Token 346: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00016396844875998795
    2. ' for' → logprob: -9.625164031982422
    3. '
' → logprob: -9.750164031982422
    4. '(-' → logprob: -11.000164031982422
    5. ')' → logprob: -12.125164031982422
    6. '):
' → logprob: -12.875164031982422
    7. ')
' → logprob: -13.000164031982422
    8. ':' → logprob: -13.250164031982422
    9. '  
' → logprob: -13.625164031982422
    10. 'sign' → logprob: -13.625164031982422

Token 347: ' a' (ID: 261)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.2865516245365143
    2. 's' → logprob: -1.911551594734192
    3. ' signs' → logprob: -3.0365517139434814
    4. 'S' → logprob: -4.286551475524902
    5. 'sg' → logprob: -4.911551475524902
    6. 'p' → logprob: -5.036551475524902
    7. ' sign' → logprob: -6.036551475524902
    8. 'sig' → logprob: -6.036551475524902
    9. 'c' → logprob: -6.286551475524902
    10. ' s' → logprob: -6.286551475524902

Token 348: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2839548587799072
    2. 'in' → logprob: -1.4089548587799072
    3. 's' → logprob: -6.408954620361328
    4. ',' → logprob: -7.158954620361328
    5. 'a' → logprob: -8.283954620361328
    6. '_in' → logprob: -10.283954620361328
    7. ' ' → logprob: -10.533954620361328
    8. ' ,' → logprob: -11.408954620361328
    9. 'n' → logprob: -11.783954620361328
    10. 'b' → logprob: -12.408954620361328

Token 349: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.493430894101039e-05
    2. ' b' → logprob: -9.500075340270996
    3. 'a' → logprob: -19.00007438659668
    4. 's' → logprob: -19.25007438659668
    5. 'j' → logprob: -20.25007438659668
    6. ' ' → logprob: -20.50007438659668
    7. '

' → logprob: -20.75007438659668
    8. '
' → logprob: -20.75007438659668
    9. 'c' → logprob: -21.37507438659668
    10. '	b' → logprob: -21.37507438659668

Token 350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013204706832766533
    2. 'in' → logprob: -4.388204574584961
    3. ' in' → logprob: -7.638204574584961
    4. ',c' → logprob: -9.263204574584961
    5. ' ,' → logprob: -9.513204574584961
    6. 'c' → logprob: -10.513204574584961
    7. ',b' → logprob: -11.513204574584961
    8. 'a' → logprob: -13.388204574584961
    9. 'import' → logprob: -13.513204574584961
    10. 'b' → logprob: -14.263204574584961

Token 351: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.836499985889532e-05
    2. ' c' → logprob: -9.7500581741333
    3. '	c' → logprob: -20.250059127807617
    4. 's' → logprob: -21.125059127807617
    5. ',c' → logprob: -21.625059127807617
    6. ' ' → logprob: -22.250059127807617
    7. '*c' → logprob: -22.500059127807617
    8. '.c' → logprob: -22.750059127807617
    9. '_c' → logprob: -23.000059127807617
    10. '(c' → logprob: -23.000059127807617

Token 352: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6326847672462463
    2. ' in' → logprob: -0.7576847672462463
    3. ',' → logprob: -9.882684707641602
    4. ' ' → logprob: -11.132684707641602
    5. ')' → logprob: -11.632684707641602
    6. '   ' → logprob: -13.007684707641602
    7. '  ' → logprob: -13.132684707641602
    8. '	in' → logprob: -13.132684707641602
    9. '```' → logprob: -13.882684707641602
    10. 'import' → logprob: -14.132684707641602

Token 353: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.008616581559181213
    2. ' product' → logprob: -4.7586164474487305
    3. '[-' → logprob: -13.50861644744873
    4. '[' → logprob: -15.13361644744873
    5. '(product' → logprob: -16.508617401123047
    6. '	product' → logprob: -16.508617401123047
    7. ' ' → logprob: -16.633617401123047
    8. '.product' → logprob: -16.883617401123047
    9. '(-' → logprob: -17.008617401123047
    10. '[(' → logprob: -17.383617401123047

Token 354: '([-' (ID: 99080)
  Prédit: '([-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([-' → logprob: -0.029973091557621956
    2. '((-' → logprob: -3.529973030090332
    3. '(-' → logprob: -9.154973030090332
    4. ',' → logprob: -10.779973030090332
    5. '   ' → logprob: -10.779973030090332
    6. '=(-' → logprob: -10.904973030090332
    7. '([' → logprob: -11.154973030090332
    8. '(' → logprob: -11.529973030090332
    9. '[-' → logprob: -11.529973030090332
    10. '((' → logprob: -11.654973030090332

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '<|end|>' → logprob: -17.875
    4. ',' → logprob: -18.625
    5. '```' → logprob: -19.375
    6. '
' → logprob: -20.125
    7. '   ' → logprob: -20.25
    8. '  ' → logprob: -20.4375
    9. '.' → logprob: -20.8125
    10. '１' → logprob: -21.3125

Token 356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010330495424568653
    2. ' ,' → logprob: -6.876032829284668
    3. ',
' → logprob: -16.126033782958984
    4. '1' → logprob: -16.501033782958984
    5. '‌,' → logprob: -17.126033782958984
    6. '<|end|>' → logprob: -18.126033782958984
    7. ' ' → logprob: -18.876033782958984
    8. '```' → logprob: -19.501033782958984
    9. ',

' → logprob: -19.876033782958984
    10. ' ,
' → logprob: -20.251033782958984

Token 357: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002185118617489934
    2. ' ' → logprob: -6.127185344696045
    3. '-' → logprob: -17.627185821533203
    4. ' -' → logprob: -17.627185821533203
    5. ',' → logprob: -18.627185821533203
    6. ']' → logprob: -19.002185821533203
    7. '   ' → logprob: -19.252185821533203
    8. '  ' → logprob: -19.252185821533203
    9. '  
' → logprob: -20.002185821533203
    10. '```' → logprob: -20.627185821533203

Token 358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. ']' → logprob: -19.000045776367188
    4. ',' → logprob: -19.000045776367188
    5. '-' → logprob: -19.625045776367188
    6. '```' → logprob: -19.625045776367188
    7. '],' → logprob: -20.125045776367188
    8. '   ' → logprob: -20.875045776367188
    9. '

' → logprob: -21.000045776367188
    10. '  ' → logprob: -21.125045776367188

Token 359: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -1.0445127372804563e-05
    2. ' ],' → logprob: -11.87501049041748
    3. ']' → logprob: -13.00001049041748
    4. ''],' → logprob: -15.37501049041748
    5. '],[' → logprob: -15.62501049041748
    6. ':],' → logprob: -15.62501049041748
    7. ',' → logprob: -16.000009536743164
    8. '],
' → logprob: -16.375009536743164
    9. '()],' → logprob: -16.375009536743164
    10. '   ' → logprob: -17.500009536743164

Token 360: ' repeat' (ID: 22962)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.5881142616271973
    2. '[-' → logprob: -0.8381142616271973
    3. ' repeat' → logprob: -5.213114261627197
    4. ' ' → logprob: -6.213114261627197
    5. ']' → logprob: -6.463114261627197
    6. '3' → logprob: -6.588114261627197
    7. ' [-' → logprob: -7.588114261627197
    8. '-' → logprob: -7.713114261627197
    9. '[' → logprob: -8.213113784790039
    10. '2' → logprob: -9.088113784790039

Token 361: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009783596731722355
    2. '3' → logprob: -4.634783744812012
    3. '(' → logprob: -10.509783744812012
    4. ',' → logprob: -15.884783744812012
    5. ' ' → logprob: -16.009782791137695
    6. ' =' → logprob: -16.384782791137695
    7. ')' → logprob: -17.384782791137695
    8. '=
' → logprob: -17.884782791137695
    9. ')=' → logprob: -18.384782791137695
    10. ']=' → logprob: -18.509782791137695

Token 362: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -21.000001907348633
    4. '```' → logprob: -21.125001907348633
    5. '
' → logprob: -21.375001907348633
    6. ')' → logprob: -22.000001907348633
    7. '۳' → logprob: -22.000001907348633
    8. '３' → logprob: -22.500001907348633
    9. '  ' → logprob: -23.125001907348633
    10. '³' → logprob: -23.625001907348633

Token 363: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.4617256056226324e-05
    2. '):
' → logprob: -12.125014305114746
    3. ':' → logprob: -12.375014305114746
    4. ')' → logprob: -12.375014305114746
    5. ' ):' → logprob: -14.375014305114746
    6. '():' → logprob: -16.750015258789062
    7. ']:' → logprob: -17.125015258789062
    8. '}:' → logprob: -17.250015258789062
    9. '):
' → logprob: -17.500015258789062
    10. '>):' → logprob: -18.125015258789062

Token 364: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00217857351526618
    2. '    
' → logprob: -6.25217866897583
    3. 'sum' → logprob: -8.877178192138672
    4. ' sum' → logprob: -9.877178192138672
    5. '   ' → logprob: -11.627178192138672
    6. 'max' → logprob: -12.002178192138672
    7. '```' → logprob: -12.127178192138672
    8. 'ans' → logprob: -12.127178192138672
    9. '
' → logprob: -12.502178192138672
    10. ' sums' → logprob: -12.502178192138672

Token 365: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4898543655872345
    2. 's' → logprob: -1.239854335784912
    3. '#' (adapté à ' #') → logprob: -3.614854335784912
    4. 'sum' → logprob: -3.739854335784912
    5. 'S' → logprob: -3.989854335784912
    6. 'total' → logprob: -4.864854335784912
    7. 'tmp' → logprob: -5.364854335784912
    8. 'temp' → logprob: -5.489854335784912
    9. '    
' → logprob: -5.614854335784912
    10. ' s' → logprob: -5.989854335784912

Token 366: ' Initial' (ID: 9209)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -1.1878503561019897
    2. 's' → logprob: -1.3128503561019897
    3. 'S' → logprob: -1.6878503561019897
    4. 'temp' → logprob: -2.4378504753112793
    5. 'total' → logprob: -3.1878504753112793
    6. 'sum' → logprob: -3.3128504753112793
    7. '#' → logprob: -4.187850475311279
    8. 'values' → logprob: -4.562850475311279
    9. '   ' → logprob: -4.812850475311279
    10. 'vals' → logprob: -4.937850475311279

Token 367: 'isation' (ID: 6993)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -1.0354139804840088
    2. 'isation' → logprob: -1.4104139804840088
    3. 'ization' → logprob: -1.6604139804840088
    4. 'is' → logprob: -3.160413980484009
    5. 'e' → logprob: -3.285413980484009
    6. '#' → logprob: -3.910413980484009
    7. '=' → logprob: -4.16041374206543
    8. 'ise' → logprob: -4.28541374206543
    9. 'ialize' → logprob: -4.28541374206543
    10. 'isez' → logprob: -4.53541374206543

Token 368: ' d' (ID: 272)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8586985468864441
    2. '   ' → logprob: -1.2336986064910889
    3. ' sum' → logprob: -2.608698606491089
    4. 's' → logprob: -2.858698606491089
    5. 'sum' → logprob: -3.233698606491089
    6. ' S' → logprob: -3.358698606491089
    7. ' total' → logprob: -3.608698606491089
    8. 'S' → logprob: -4.73369836807251
    9. 'tmp' → logprob: -4.85869836807251
    10. ' tmp' → logprob: -4.85869836807251

Token 369: ''une' (ID: 13337)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5448809266090393
    2. ' s' → logprob: -1.2948808670043945
    3. 'total' → logprob: -3.5448808670043945
    4. 'ans' → logprob: -3.9198808670043945
    5. 'S' → logprob: -4.1698808670043945
    6. ' total' → logprob: -4.2948808670043945
    7. 'tmp' → logprob: -4.2948808670043945
    8. 'sum' → logprob: -4.5448808670043945
    9. ' S' → logprob: -5.1698808670043945
    10. 'temp' → logprob: -5.1698808670043945

Token 370: ' liste' (ID: 31719)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.20417329668998718
    2. 's' → logprob: -2.7041733264923096
    3. 'temp' → logprob: -2.7041733264923096
    4. 'sum' → logprob: -3.3291733264923096
    5. 'total' → logprob: -4.7041730880737305
    6. 'score' → logprob: -6.3291730880737305
    7. 'scores' → logprob: -6.7041730880737305
    8. 'temps' → logprob: -7.0791730880737305
    9. 'S' → logprob: -7.8291730880737305
    10. 'lst' → logprob: -8.32917308807373

Token 371: ' vide' (ID: 21835)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6610127091407776
    2. 's' → logprob: -1.5360126495361328
    3. 'tmp' → logprob: -2.786012649536133
    4. 'dp' → logprob: -2.911012649536133
    5. '   ' → logprob: -3.411012649536133
    6. ' S' → logprob: -3.536012649536133
    7. 'sum' → logprob: -3.911012649536133
    8. ' s' → logprob: -4.286012649536133
    9. 'scores' → logprob: -4.286012649536133
    10. 'd' → logprob: -5.036012649536133

Token 372: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.103049874305725
    2. 'S' → logprob: -1.603049874305725
    3. '   ' → logprob: -1.603049874305725
    4. 'dp' → logprob: -2.2280497550964355
    5. ' s' → logprob: -2.7280497550964355
    6. 'tmp' → logprob: -3.3530497550964355
    7. ' S' → logprob: -3.8530497550964355
    8. 'sum' → logprob: -4.8530497550964355
    9. ' dp' → logprob: -5.4780497550964355
    10. ' sums' → logprob: -5.4780497550964355

Token 373: 'score' (ID: 21200)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6275885105133057
    2. 'tmp' → logprob: -2.1275885105133057
    3. 's' → logprob: -2.2525885105133057
    4. 'scores' → logprob: -3.6275885105133057
    5. 'score' → logprob: -3.7525885105133057
    6. 'vals' → logprob: -4.002588272094727
    7. 'temp' → logprob: -4.002588272094727
    8. 'values' → logprob: -4.002588272094727
    9. 'sum' → logprob: -4.127588272094727
    10. 'points' → logprob: -4.502588272094727

Token 374: ''' (ID: 6)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.26639801263809204
    2. '=' → logprob: -2.0163979530334473
    3. ' =' → logprob: -2.5163979530334473
    4. '=[]' → logprob: -4.641397953033447
    5. '_scores' → logprob: -5.516397953033447
    6. 'scores' → logprob: -5.766397953033447
    7. ']' → logprob: -6.266397953033447
    8. '=[]
' → logprob: -8.266398429870605
    9. '_s' → logprob: -8.516398429870605
    10. '[]' → logprob: -8.766398429870605

Token 375: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07753095775842667
    2. '=' → logprob: -3.327530860900879
    3. ' =' → logprob: -3.577530860900879
    4. '=[]' → logprob: -5.577530860900879
    5. 'scores' → logprob: -6.077530860900879
    6. '[]' → logprob: -6.327530860900879
    7. '[' → logprob: -7.827530860900879
    8. '=[]
' → logprob: -7.827530860900879
    9. ',' → logprob: -7.952530860900879
    10. 'score' → logprob: -8.077530860900879

Token 376: ' serv' (ID: 2096)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009575102478265762
    2. '=[]' → logprob: -4.884574890136719
    3. ' =' → logprob: -6.384574890136719
    4. '[]' → logprob: -9.134574890136719
    5. '=[]
' → logprob: -9.384574890136719
    6. 's' → logprob: -10.884574890136719
    7. '[' → logprob: -11.134574890136719
    8. 'scores' → logprob: -11.384574890136719
    9. '[:]' → logprob: -11.634574890136719
    10. '[]=' → logprob: -11.884574890136719

Token 377: 'ira' (ID: 2633)
  Prédit: 'ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.07480647414922714
    2. 'ira' → logprob: -4.0748066902160645
    3. 'era' → logprob: -4.3248066902160645
    4. 'ent' → logprob: -4.8248066902160645
    5. 'a' → logprob: -4.9498066902160645
    6. 'it' → logprob: -5.0748066902160645
    7. 'ait' → logprob: -5.5748066902160645
    8. '#' → logprob: -5.6998066902160645
    9. 'e' → logprob: -5.9498066902160645
    10. 'er' → logprob: -6.1998066902160645

Token 378: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14967632293701172
    2. '=[]' → logprob: -2.3996763229370117
    3. '   ' → logprob: -4.524676322937012
    4. 'à' → logprob: -4.899676322937012
    5. 'to' → logprob: -5.024676322937012
    6. '[]' → logprob: -5.024676322937012
    7. ' =' → logprob: -5.149676322937012
    8. ' à' → logprob: -5.774676322937012
    9. 'a' → logprob: -6.399676322937012
    10. '=[]
' → logprob: -7.024676322937012

Token 379: ' stock' (ID: 6546)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.016344144940376282
    2. '[' → logprob: -4.14134407043457
    3. 'store' → logprob: -8.64134407043457
    4. ' []' → logprob: -10.76634407043457
    5. '0' → logprob: -11.26634407043457
    6. 'collect' → logprob: -11.51634407043457
    7. '[]}' → logprob: -11.64134407043457
    8. 'acc' → logprob: -11.76634407043457
    9. '[s' → logprob: -11.89134407043457
    10. 'calcul' → logprob: -11.89134407043457

Token 380: 'er' (ID: 259)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.40495431423187256
    2. '[]' → logprob: -1.4049543142318726
    3. '[' → logprob: -3.029954433441162
    4. '   ' → logprob: -4.154954433441162
    5. '=' → logprob: -5.279954433441162
    6. '[:]' → logprob: -5.779954433441162
    7. 'e' → logprob: -6.029954433441162
    8. '=[' → logprob: -6.029954433441162
    9. ' []' → logprob: -6.279954433441162
    10. '  ' → logprob: -6.529954433441162

Token 381: ' des' (ID: 731)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5673475861549377
    2. '[]' → logprob: -1.317347526550293
    3. '[s' → logprob: -2.192347526550293
    4. '[x' → logprob: -3.692347526550293
    5. '[i' → logprob: -4.817347526550293
    6. '[val' → logprob: -5.567347526550293
    7. '[A' → logprob: -6.192347526550293
    8. 's' → logprob: -6.317347526550293
    9. '[p' → logprob: -6.817347526550293
    10. '[len' → logprob: -6.942347526550293

Token 382: ' valeurs' (ID: 73668)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.648938775062561
    2. '[]' → logprob: -0.773938775062561
    3. '[s' → logprob: -5.7739386558532715
    4. '[x' → logprob: -5.8989386558532715
    5. 'scores' → logprob: -6.0239386558532715
    6. '[i' → logprob: -6.6489386558532715
    7. 'points' → logprob: -6.8989386558532715
    8. '[int' → logprob: -7.0239386558532715
    9. 's' → logprob: -7.1489386558532715
    10. '[
' → logprob: -7.2739386558532715

Token 383: ' calcul' (ID: 7559)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9179260730743408
    2. '   ' → logprob: -1.4179260730743408
    3. ' =' → logprob: -1.7929260730743408
    4. '=[]' → logprob: -1.7929260730743408
    5. '[]' → logprob: -5.042925834655762
    6. 'scores' → logprob: -5.542925834655762
    7. 's' → logprob: -5.917925834655762
    8. ',' → logprob: -6.042925834655762
    9. '=[]
' → logprob: -6.167925834655762
    10. 'score' → logprob: -6.292925834655762

Token 384: 'ées' (ID: 5161)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.2562107741832733
    2. '=' → logprob: -2.2562108039855957
    3. '[]' → logprob: -2.5062108039855957
    4. '[' → logprob: -4.131210803985596
    5. '[:]' → logprob: -5.506210803985596
    6. '=[]
' → logprob: -5.881210803985596
    7. '()' → logprob: -5.881210803985596
    8. 'es' → logprob: -6.006210803985596
    9. 'ations' → logprob: -6.131210803985596
    10. '   ' → logprob: -6.256210803985596

Token 385: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008226146455854177
    2. ',' → logprob: -8.000823020935059
    3. '=' → logprob: -8.875823020935059
    4. ' =' → logprob: -9.125823020935059
    5. '[]' → logprob: -9.500823020935059
    6. '  ' → logprob: -10.625823020935059
    7. ')' → logprob: -10.750823020935059
    8. 'scores' → logprob: -11.000823020935059
    9. '[' → logprob: -11.125823020935059
    10. '.' → logprob: -11.500823020935059

Token 386: ' chaque' (ID: 21194)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13334700465202332
    2. 'range' → logprob: -3.2583470344543457
    3. 'each' → logprob: -3.3833470344543457
    4. ' chaque' → logprob: -3.8833470344543457
    5. 'i' → logprob: -4.508347034454346
    6. ' _' → logprob: -5.758347034454346
    7. 'ABC' → logprob: -5.758347034454346
    8. ' range' → logprob: -6.508347034454346
    9. 'j' → logprob: -6.758347034454346
    10. 'l' → logprob: -6.758347034454346

Token 387: ' objet' (ID: 13839)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.861429750919342
    2. 'x' → logprob: -1.2364296913146973
    3. 'point' → logprob: -2.7364296913146973
    4. 'j' → logprob: -2.9864296913146973
    5. '_' → logprob: -2.9864296913146973
    6. 'abc' → logprob: -3.9864296913146973
    7. 's' → logprob: -3.9864296913146973
    8. 'p' → logprob: -4.111429691314697
    9. 'item' → logprob: -4.861429691314697
    10. 'range' → logprob: -5.111429691314697

Token 388: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030347267165780067
    2. ',' → logprob: -4.9053473472595215
    3. ' =' → logprob: -5.1553473472595215
    4. '=' → logprob: -5.5303473472595215
    5. '[]' → logprob: -6.0303473472595215
    6. ')' → logprob: -6.2803473472595215
    7. '=[]' → logprob: -6.6553473472595215
    8. '[' → logprob: -6.7803473472595215
    9. '=[]
' → logprob: -7.1553473472595215
    10. '.' → logprob: -7.1553473472595215

Token 389: ' la' (ID: 557)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.11963128298521042
    2. 'range' → logprob: -2.244631290435791
    3. ' range' → logprob: -5.119631290435791
    4. ' ABC' → logprob: -7.244631290435791
    5. 'abc' → logprob: -10.369630813598633
    6. 'ABCDE' → logprob: -10.869630813598633
    7. 'XYZ' → logprob: -11.119630813598633
    8. ' ' → logprob: -12.369630813598633
    9. '(range' → logprob: -12.369630813598633
    10. 'enumer' → logprob: -12.494630813598633

Token 390: ' liste' (ID: 31719)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.04894023761153221
    2. 'range' → logprob: -3.0489401817321777
    3. ' range' → logprob: -8.423940658569336
    4. ' ABC' → logprob: -9.673940658569336
    5. 'XYZ' → logprob: -10.548940658569336
    6. 'abc' → logprob: -11.423940658569336
    7. 'AB' → logprob: -11.548940658569336
    8. '
' → logprob: -12.423940658569336
    9. 'ABCDE' → logprob: -12.798940658569336
    10. '```' → logprob: -12.923940658569336

Token 391: ' ABC' (ID: 33047)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0284191370010376
    2. 's' → logprob: -2.028419017791748
    3. 'score' → logprob: -2.153419017791748
    4. '=' → logprob: -2.528419017791748
    5. '[]' → logprob: -2.528419017791748
    6. '=[]' → logprob: -2.778419017791748
    7. 'for' → logprob: -3.028419017791748
    8. ' =' → logprob: -3.528419017791748
    9. 'scores' → logprob: -4.028419017791748
    10. ']' → logprob: -4.403419017791748

Token 392: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016278100665658712
    2. 'score' → logprob: -7.1266279220581055
    3. '	score' → logprob: -8.001627922058105
    4. ' score' → logprob: -8.376627922058105
    5. '(score' → logprob: -9.876627922058105
    6. '  ' → logprob: -10.251627922058105
    7. ',' → logprob: -10.376627922058105
    8. ')' → logprob: -10.501627922058105
    9. '    
' → logprob: -10.751627922058105
    10. 'scores' → logprob: -11.126627922058105

Token 393: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04901651293039322
    2. 'score' → logprob: -3.1740164756774902
    3. ' score' → logprob: -5.42401647567749
    4. '    
' → logprob: -7.17401647567749
    5. 'scores' → logprob: -8.674016952514648
    6. '	score' → logprob: -8.674016952514648
    7. '
' → logprob: -8.799016952514648
    8. '[' → logprob: -8.924016952514648
    9. '[]' → logprob: -10.049016952514648
    10. '(score' → logprob: -10.049016952514648

Token 394: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' (adapté à ' score') → logprob: -0.02394232153892517
    2. ' score' → logprob: -4.273942470550537
    3. '   ' → logprob: -4.648942470550537
    4. 'scores' → logprob: -9.148941993713379
    5. '	score' → logprob: -10.523941993713379
    6. ' ' → logprob: -11.273941993713379
    7. ' scores' → logprob: -12.648941993713379
    8. '  ' → logprob: -12.773941993713379
    9. '
' → logprob: -13.648941993713379
    10. '    
' → logprob: -13.773941993713379

Token 395: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03044174797832966
    2. ' =' → logprob: -3.5304417610168457
    3. '=[]' → logprob: -7.280441761016846
    4. ']' → logprob: -14.655441284179688
    5. '=[]
' → logprob: -14.780441284179688
    6. '＝' → logprob: -14.905441284179688
    7. '=[' → logprob: -15.155441284179688
    8. '[]' → logprob: -15.405441284179688
    9. '=[]
' → logprob: -15.530441284179688
    10. ' ' → logprob: -15.905441284179688

Token 396: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0024931374937295914
    2. '[' → logprob: -6.002492904663086
    3. ' []' → logprob: -11.377492904663086
    4. '[]
' → logprob: -13.127492904663086
    5. '[]}' → logprob: -13.627492904663086
    6. '[int' → logprob: -14.127492904663086
    7. '[]>' → logprob: -15.127492904663086
    8. '[list' → logprob: -15.377492904663086
    9. '[],' → logprob: -15.502492904663086
    10. '[i' → logprob: -16.002492904663086

Token 397: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0073923454619944096
    2. 'for' → logprob: -5.257392406463623
    3. ' for' → logprob: -6.257392406463623
    4. '    
' → logprob: -8.882391929626465
    5. '	for' → logprob: -9.382391929626465
    6. '<|end|>' → logprob: -11.757391929626465
    7. '   ' → logprob: -13.257391929626465
    8. '
' → logprob: -13.382391929626465
    9. ' ' → logprob: -14.257391929626465
    10. ')' → logprob: -14.382391929626465

Token 398: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010028046555817127
    2. 'for' → logprob: -4.635027885437012
    3. ' for' → logprob: -8.260027885437012
    4. '    
' → logprob: -11.760027885437012
    5. '	for' → logprob: -12.510027885437012
    6. '   ' → logprob: -14.260027885437012
    7. ' ' → logprob: -14.760027885437012
    8. '  ' → logprob: -14.885027885437012
    9. '       ' → logprob: -15.510027885437012
    10. '    ' → logprob: -16.260028839111328

Token 399: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01914742961525917
    2. '   ' → logprob: -4.3941473960876465
    3. ' for' → logprob: -5.0191473960876465
    4. ' ' → logprob: -12.769147872924805
    5. '	for' → logprob: -13.394147872924805
    6. '    
' → logprob: -14.519147872924805
    7. '  ' → logprob: -14.769147872924805
    8. '
' → logprob: -15.394147872924805
    9. '   ' → logprob: -16.019147872924805
    10. ' ' → logprob: -16.769147872924805

Token 400: ' chaque' (ID: 21194)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.027560178190469742
    2. 'A' → logprob: -4.402560234069824
    3. 'j' → logprob: -5.027560234069824
    4. ' x' → logprob: -5.277560234069824
    5. 'i' → logprob: -6.277560234069824
    6. 'abc' → logprob: -7.652560234069824
    7. 'X' → logprob: -8.027560234069824
    8. ' j' → logprob: -9.402560234069824
    9. 'ABC' → logprob: -9.402560234069824
    10. ' A' → logprob: -9.402560234069824

Token 401: ' sous' (ID: 14487)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03537537902593613
    2. ' x' → logprob: -3.4103753566741943
    3. 'A' → logprob: -7.160375595092773
    4. 'j' → logprob: -8.160375595092773
    5. '(x' → logprob: -8.410375595092773
    6. 'i' → logprob: -8.785375595092773
    7. 'X' → logprob: -9.035375595092773
    8. ' A' → logprob: -10.160375595092773
    9. '[x' → logprob: -10.285375595092773
    10. ' j' → logprob: -10.660375595092773

Token 402: '-l' (ID: 2887)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6763341426849365
    2. '_list' → logprob: -1.9263341426849365
    3. 'list' → logprob: -2.3013341426849365
    4. '_' → logprob: -2.9263341426849365
    5. '   ' → logprob: -3.0513341426849365
    6. ' [' → logprob: -3.0513341426849365
    7. ' ABC' → logprob: -3.0513341426849365
    8. ' A' → logprob: -3.1763341426849365
    9. ' for' → logprob: -3.3013341426849365
    10. ' _' → logprob: -3.9263341426849365

Token 403: 'iste' (ID: 4872)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.40902870893478394
    2. 'ist' → logprob: -1.1590287685394287
    3. 'abc' → logprob: -5.03402853012085
    4. 'st' → logprob: -5.03402853012085
    5. 'i' → logprob: -5.90902853012085
    6. ' ABC' → logprob: -6.78402853012085
    7. 'iste' → logprob: -6.78402853012085
    8. '   ' → logprob: -7.15902853012085
    9. '[' → logprob: -7.28402853012085
    10. '#' → logprob: -7.65902853012085

Token 404: ' [' (ID: 723)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5741340517997742
    2. 'abc' → logprob: -1.699134111404419
    3. ' dans' → logprob: -2.949134111404419
    4. ',' → logprob: -3.074134111404419
    5. '(x' → logprob: -3.199134111404419
    6. ' abc' → logprob: -3.449134111404419
    7. 'xyz' → logprob: -3.824134111404419
    8. ' (' → logprob: -4.32413387298584
    9. 'ABC' → logprob: -4.69913387298584
    10. ' [' → logprob: -5.44913387298584

Token 405: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0014445222914218903
    2. 'A' → logprob: -7.001444339752197
    3. 'X' → logprob: -8.251444816589355
    4. 'a' → logprob: -9.251444816589355
    5. ' x' → logprob: -9.626444816589355
    6. '(x' → logprob: -10.001444816589355
    7. '   ' → logprob: -10.751444816589355
    8. 'abc' → logprob: -11.876444816589355
    9. '[x' → logprob: -12.001444816589355
    10. 'i' → logprob: -12.251444816589355

Token 406: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011439072113716975
    2. ' ,' → logprob: -9.625114440917969
    3. ',x' → logprob: -10.625114440917969
    4. ',y' → logprob: -11.625114440917969
    5. '<|end|>' → logprob: -12.000114440917969
    6. '[' → logprob: -12.750114440917969
    7. ',
' → logprob: -13.750114440917969
    8. '‌,' → logprob: -14.000114440917969
    9. '   ' → logprob: -14.375114440917969
    10. '<|end|>' → logprob: -14.625114440917969

Token 407: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0052432413212955
    2. ' y' → logprob: -5.255243301391602
    3. ',' → logprob: -12.505243301391602
    4. 'x' → logprob: -12.630243301391602
    5. 'j' → logprob: -13.630243301391602
    6. '0' → logprob: -14.630243301391602
    7. ',y' → logprob: -14.630243301391602
    8. '   ' → logprob: -15.755243301391602
    9. '  ' → logprob: -17.1302433013916
    10. 'i' → logprob: -17.3802433013916

Token 408: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011640305165201426
    2. ']' → logprob: -7.376163959503174
    3. ' ,' → logprob: -7.751163959503174
    4. '],' → logprob: -9.501164436340332
    5. ',x' → logprob: -11.626164436340332
    6. ' ' → logprob: -12.751164436340332
    7. ' ]' → logprob: -12.876164436340332
    8. ',y' → logprob: -12.876164436340332
    9. ',z' → logprob: -12.876164436340332
    10. '

' → logprob: -13.751164436340332

Token 409: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0013357169227674603
    2. ' z' → logprob: -6.626335620880127
    3. 'j' → logprob: -12.001336097717285
    4. ',' → logprob: -13.501336097717285
    5. '   ' → logprob: -14.126336097717285
    6. 'y' → logprob: -14.126336097717285
    7. 'x' → logprob: -14.876336097717285
    8. '0' → logprob: -16.00133514404297
    9. 'i' → logprob: -16.25133514404297
    10. ' ' → logprob: -16.87633514404297

Token 410: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009792207274585962
    2. '],' → logprob: -7.750979423522949
    3. ' ]' → logprob: -8.50097942352295
    4. 'in' → logprob: -8.50097942352295
    5. ' in' → logprob: -10.12597942352295
    6. ',' → logprob: -10.25097942352295
    7. '   ' → logprob: -10.50097942352295
    8. ']:' → logprob: -11.87597942352295
    9. '  ' → logprob: -12.25097942352295
    10. ']:
' → logprob: -12.62597942352295

Token 411: ' dans' (ID: 2671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.032304517924785614
    2. 'in' → logprob: -3.657304525375366
    3. '   ' → logprob: -5.907304286956787
    4. ',' → logprob: -6.282304286956787
    5. 'de' → logprob: -8.532304763793945
    6. ' dans' → logprob: -8.657304763793945
    7. '  ' → logprob: -8.657304763793945
    8. ' ' → logprob: -8.782304763793945
    9. 'dans' → logprob: -9.719804763793945
    10. '    ' → logprob: -9.782304763793945

Token 412: ' la' (ID: 557)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.008622609078884125
    2. ' ABC' → logprob: -4.758622646331787
    3. 'abc' → logprob: -11.758622169494629
    4. 'AB' → logprob: -15.883622169494629
    5. 'ABCDE' → logprob: -16.008623123168945
    6. 'XYZ' → logprob: -17.758623123168945
    7. ' abc' → logprob: -17.758623123168945
    8. ' ' → logprob: -17.883623123168945
    9. '   ' → logprob: -18.508623123168945
    10. '
' → logprob: -19.133623123168945

Token 413: ' liste' (ID: 31719)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.00014478032244369388
    2. ' ABC' → logprob: -8.875144958496094
    3. 'abc' → logprob: -12.750144958496094
    4. '
' → logprob: -14.125144958496094
    5. 'AB' → logprob: -14.250144958496094
    6. 'ABCDE' → logprob: -15.250144958496094
    7. '   ' → logprob: -16.250144958496094
    8. 'for' → logprob: -16.625144958496094
    9. 'XYZ' → logprob: -17.250144958496094
    10. 'ABCDEFGHI' → logprob: -17.375144958496094

Token 414: ' '' (ID: 461)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.0006353547796607018
    2. ' ABC' → logprob: -7.375635147094727
    3. 'abc' → logprob: -12.000635147094727
    4. '   ' → logprob: -13.875635147094727
    5. 'XYZ' → logprob: -14.750635147094727
    6. 'AB' → logprob: -15.000635147094727
    7. 'ABCDE' → logprob: -15.000635147094727
    8. '(' → logprob: -15.750635147094727
    9. '
' → logprob: -16.125635147094727
    10. ' ' → logprob: -16.250635147094727

Token 415: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -1.2471589798224159e-05
    2. ' ABC' → logprob: -11.750012397766113
    3. 'abc' → logprob: -12.375012397766113
    4. 'AB' → logprob: -15.875012397766113
    5. 'ABCDE' → logprob: -16.62501335144043
    6. '
' → logprob: -17.62501335144043
    7. '   ' → logprob: -17.62501335144043
    8. 'XYZ' → logprob: -18.12501335144043
    9. 'ABCDEFGHI' → logprob: -18.62501335144043
    10. ',' → logprob: -19.75001335144043

Token 416: '',' (ID: 787)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11165735870599747
    2. ':
' → logprob: -2.6116573810577393
    3. '   ' → logprob: -4.61165714263916
    4. ']:' → logprob: -4.61165714263916
    5. ',' → logprob: -4.86165714263916
    6. ']:
' → logprob: -6.61165714263916
    7. '):' → logprob: -6.86165714263916
    8. ']' → logprob: -6.98665714263916
    9. '):
' → logprob: -7.86165714263916
    10. ' :' → logprob: -8.11165714263916

Token 417: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2791639566421509
    2. 'for' → logprob: -2.5291638374328613
    3. ' for' → logprob: -2.9041638374328613
    4. '       ' → logprob: -2.9041638374328613
    5. 'score' → logprob: -3.5291638374328613
    6. ' score' → logprob: -4.154163837432861
    7. ':' → logprob: -5.029163837432861
    8. ' x' → logprob: -7.404163837432861
    9. '
' → logprob: -8.02916431427002
    10. '    ' → logprob: -8.15416431427002

Token 418: ' va' (ID: 3423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3944285213947296
    2. '   ' → logprob: -2.1444284915924072
    3. ' for' → logprob: -2.5194284915924072
    4. '.append' → logprob: -2.7694284915924072
    5. 'score' → logprob: -3.6444284915924072
    6. 'append' → logprob: -3.7694284915924072
    7. 'calculate' → logprob: -5.394428730010986
    8. ' score' → logprob: -6.019428730010986
    9. '    ' → logprob: -6.019428730010986
    10. ' append' → logprob: -6.394428730010986

Token 419: ' appliquer' (ID: 172872)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6257947087287903
    2. ' x' → logprob: -2.2507946491241455
    3. ' calcul' → logprob: -2.3757946491241455
    4. 'x' → logprob: -3.1257946491241455
    5. 'score' → logprob: -3.3757946491241455
    6. ' score' → logprob: -3.3757946491241455
    7. 'calcul' → logprob: -3.3757946491241455
    8. 'calculate' → logprob: -3.5007946491241455
    9. 'append' → logprob: -3.6257946491241455
    10. ' calculate' → logprob: -4.000794887542725

Token 420: ' les' (ID: 1341)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.9399496912956238
    2. 'ABC' → logprob: -0.9399496912956238
    3. '[' → logprob: -2.5649497509002686
    4. 'abc' → logprob: -3.5649497509002686
    5. ' ABC' → logprob: -3.8149497509002686
    6. 'x' → logprob: -3.8149497509002686
    7. '[(' → logprob: -4.1899495124816895
    8. '   ' → logprob: -4.6899495124816895
    9. 'xyz' → logprob: -4.6899495124816895
    10. '(x' → logprob: -5.3149495124816895

Token 421: ' signes' (ID: 133923)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7936211228370667
    2. '[x' → logprob: -1.4186210632324219
    3. '[
' → logprob: -2.043621063232422
    4. '[' → logprob: -2.918621063232422
    5. 'score' → logprob: -3.543621063232422
    6. ' x' → logprob: -3.543621063232422
    7. '   ' → logprob: -4.293621063232422
    8. 'for' → logprob: -4.543621063232422
    9. 'a' → logprob: -4.543621063232422
    10. '[a' → logprob: -4.793621063232422

Token 422: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6379172801971436
    2. '(x' → logprob: -1.5129172801971436
    3. ' à' → logprob: -3.2629172801971436
    4. '(' → logprob: -3.2629172801971436
    5. ' (' → logprob: -3.3879172801971436
    6. ',' → logprob: -3.5129172801971436
    7. '[' → logprob: -3.6379172801971436
    8. '[x' → logprob: -4.012917518615723
    9. ' to' → logprob: -4.512917518615723
    10. 'a' → logprob: -5.012917518615723

Token 423: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011161833070218563
    2. ' a' → logprob: -5.011161804199219
    3. '   ' → logprob: -5.761161804199219
    4. '[a' → logprob: -7.511161804199219
    5. 'x' → logprob: -8.136161804199219
    6. ')' → logprob: -8.511161804199219
    7. ' ' → logprob: -9.886161804199219
    8. '  ' → logprob: -10.011161804199219
    9. '[' → logprob: -10.261161804199219
    10. ']' → logprob: -11.136161804199219

Token 424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012542768381536007
    2. ' ,' → logprob: -7.251254081726074
    3. ',x' → logprob: -8.376254081726074
    4. ',y' → logprob: -9.876254081726074
    5. '*' → logprob: -9.876254081726074
    6. '*,' → logprob: -10.001254081726074
    7. ',
' → logprob: -10.376254081726074
    8. ',b' → logprob: -10.376254081726074
    9. ')' → logprob: -10.751254081726074
    10. '   ' → logprob: -11.001254081726074

Token 425: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16022585332393646
    2. ' b' → logprob: -1.9102258682250977
    3. ' ' → logprob: -13.785225868225098
    4. '   ' → logprob: -14.785225868225098
    5. '  ' → logprob: -16.16022491455078
    6. ',' → logprob: -16.53522491455078
    7. '    ' → logprob: -16.78522491455078
    8. ',b' → logprob: -17.53522491455078
    9. '       ' → logprob: -18.28522491455078
    10. '     ' → logprob: -18.28522491455078

Token 426: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032712158281356096
    2. ' ,' → logprob: -8.750327110290527
    3. '),' → logprob: -9.125327110290527
    4. ')' → logprob: -10.625327110290527
    5. '*' → logprob: -11.625327110290527
    6. '   ' → logprob: -11.625327110290527
    7. ',x' → logprob: -12.375327110290527
    8. '*,' → logprob: -12.500327110290527
    9. 'x' → logprob: -13.625327110290527
    10. ' ' → logprob: -14.125327110290527

Token 427: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3132634460926056
    2. ' c' → logprob: -1.3132634162902832
    3. ' ' → logprob: -13.938263893127441
    4. ',' → logprob: -14.938263893127441
    5. ')' → logprob: -15.438263893127441
    6. ')c' → logprob: -15.563263893127441
    7. '   ' → logprob: -16.313262939453125
    8. '  ' → logprob: -17.063262939453125
    9. '	c' → logprob: -18.688262939453125
    10. '<|end|>' → logprob: -18.688262939453125

Token 428: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004786461126059294
    2. '):
' → logprob: -6.629786491394043
    3. ')
' → logprob: -6.754786491394043
    4. '):' → logprob: -7.129786491394043
    5. ' )' → logprob: -7.754786491394043
    6. '   ' → logprob: -8.004786491394043
    7. ']' → logprob: -8.379786491394043
    8. '),' → logprob: -8.754786491394043
    9. '])' → logprob: -9.504786491394043
    10. '):

' → logprob: -10.004786491394043

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009765769354999065
    2. 'for' → logprob: -5.009765625
    3. ' for' → logprob: -6.134765625
    4. '
' → logprob: -8.509765625
    5. '[' → logprob: -8.884765625
    6. '    
' → logprob: -8.884765625
    7. ':' → logprob: -9.384765625
    8. ':
' → logprob: -9.884765625
    9. '       ' → logprob: -10.009765625
    10. '(' → logprob: -10.009765625

Token 430: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12876315414905548
    2. 'for' (adapté à ' for') → logprob: -2.503763198852539
    3. ' for' → logprob: -3.253763198852539
    4. '    
' → logprob: -8.503763198852539
    5. '
' → logprob: -9.253763198852539
    6. '	for' → logprob: -9.503763198852539
    7. '       ' → logprob: -11.128763198852539
    8. ' ' → logprob: -12.378763198852539
    9. '  
' → logprob: -12.753763198852539
    10. '```' → logprob: -13.003763198852539

Token 431: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0703880712389946
    2. ' x' → logprob: -2.695388078689575
    3. '[x' → logprob: -7.820387840270996
    4. ' ' → logprob: -10.820387840270996
    5. '   ' → logprob: -11.695387840270996
    6. 'X' → logprob: -11.820387840270996
    7. '(x' → logprob: -12.570387840270996
    8. ' [' → logprob: -12.695387840270996
    9. '	x' → logprob: -12.820387840270996
    10. '  ' → logprob: -13.195387840270996

Token 432: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004147032741457224
    2. ',y' → logprob: -8.000414848327637
    3. ' ,' → logprob: -9.625414848327637
    4. ',x' → logprob: -11.875414848327637
    5. '[' → logprob: -13.875414848327637
    6. '‌,' → logprob: -14.250414848327637
    7. '<|end|>' → logprob: -14.500414848327637
    8. ' in' → logprob: -14.625414848327637
    9. ',b' → logprob: -14.750414848327637
    10. '_,' → logprob: -15.000414848327637

Token 433: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0019286326132714748
    2. ' y' → logprob: -6.251928806304932
    3. ' ' → logprob: -18.126928329467773
    4. ',y' → logprob: -18.501928329467773
    5. ',' → logprob: -19.376928329467773
    6. '  ' → logprob: -20.126928329467773
    7. '   ' → logprob: -20.751928329467773
    8. '	y' → logprob: -21.001928329467773
    9. '    ' → logprob: -21.376928329467773
    10. '

' → logprob: -22.126928329467773

Token 434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001431114797014743
    2. ',z' → logprob: -9.500143051147461
    3. ',y' → logprob: -10.125143051147461
    4. ' ,' → logprob: -11.125143051147461
    5. 'in' → logprob: -12.000143051147461
    6. ',x' → logprob: -12.875143051147461
    7. ',c' → logprob: -13.750143051147461
    8. ' in' → logprob: -14.000143051147461
    9. ',w' → logprob: -14.625143051147461
    10. ',in' → logprob: -14.875143051147461

Token 435: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0004306692280806601
    2. ' z' → logprob: -7.750430583953857
    3. ' ' → logprob: -19.000431060791016
    4. '	z' → logprob: -19.625431060791016
    5. ',z' → logprob: -21.000431060791016
    6. 'Z' → logprob: -21.375431060791016
    7. '  ' → logprob: -21.875431060791016
    8. '    ' → logprob: -22.250431060791016
    9. '   ' → logprob: -22.250431060791016
    10. 'x' → logprob: -22.625431060791016

Token 436: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043018829077482224
    2. 'in' → logprob: -3.1680188179016113
    3. ',' → logprob: -11.29301929473877
    4. ' ' → logprob: -12.79301929473877
    5. '	in' → logprob: -13.29301929473877
    6. ')' → logprob: -14.04301929473877
    7. ']' → logprob: -14.91801929473877
    8. '  ' → logprob: -14.91801929473877
    9. '   ' → logprob: -15.04301929473877
    10. 's' → logprob: -16.043018341064453

Token 437: ' ABC' (ID: 33047)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.0003035266126971692
    2. ' ABC' → logprob: -8.125303268432617
    3. 'abc' → logprob: -11.875303268432617
    4. 'AB' → logprob: -14.875303268432617
    5. 'ABCDE' → logprob: -16.625303268432617
    6. ' ' → logprob: -16.875303268432617
    7. '   ' → logprob: -18.250303268432617
    8. '  ' → logprob: -18.250303268432617
    9. 'XYZ' → logprob: -18.500303268432617
    10. 'A' → logprob: -19.125303268432617

Token 438: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029764730483293533
    2. ':
' → logprob: -3.5297646522521973
    3. '):
' → logprob: -12.654765129089355
    4. '   ' → logprob: -12.654765129089355
    5. '):' → logprob: -13.029765129089355
    6. ':
' → logprob: -13.154765129089355
    7. '       ' → logprob: -13.154765129089355
    8. ':

' → logprob: -14.154765129089355
    9. ',' → logprob: -14.404765129089355
    10. ' :' → logprob: -15.529765129089355

Token 439: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.864272967912257e-05
    2. 'score' → logprob: -9.875088691711426
    3. '   ' → logprob: -11.500088691711426
    4. ' score' → logprob: -11.750088691711426
    5. '        
' → logprob: -11.750088691711426
    6. ',' → logprob: -12.750088691711426
    7. '
' → logprob: -13.125088691711426
    8. '      ' → logprob: -13.625088691711426
    9. '           ' → logprob: -14.125088691711426
    10. '    
' → logprob: -14.250088691711426

Token 440: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7553827166557312
    2. 'score' → logprob: -0.7553827166557312
    3. ' score' → logprob: -2.880382776260376
    4. '           ' → logprob: -6.130382537841797
    5. '        
' → logprob: -7.005382537841797
    6. '
' → logprob: -7.130382537841797
    7. 's' → logprob: -9.255382537841797
    8. '	score' → logprob: -10.005382537841797
    9. '   ' → logprob: -10.380382537841797
    10. '        ' → logprob: -10.630382537841797

Token 441: ' On' (ID: 2160)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.010027342475950718
    2. ' score' → logprob: -4.6350274085998535
    3. '       ' → logprob: -9.385026931762695
    4. 'val' → logprob: -9.635026931762695
    5. 's' → logprob: -9.635026931762695
    6. 'sc' → logprob: -11.135026931762695
    7. 'value' → logprob: -11.510026931762695
    8. '   ' → logprob: -12.010026931762695
    9. 'tmp' → logprob: -12.010026931762695
    10. ' s' → logprob: -12.510026931762695

Token 442: ' calc' (ID: 25691)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.3259302079677582
    2. 'score' → logprob: -1.3259302377700806
    3. 'append' → logprob: -4.450930118560791
    4. ' score' → logprob: -7.450930118560791
    5. '.' → logprob: -8.45093059539795
    6. ' .' → logprob: -9.82593059539795
    7. '       ' → logprob: -10.82593059539795
    8. '   ' → logprob: -10.95093059539795
    9. '.score' → logprob: -11.45093059539795
    10. ' append' → logprob: -11.70093059539795

Token 443: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.01488992664963007
    2. 'cule' → logprob: -4.389889717102051
    3. 'ul' → logprob: -6.514889717102051
    4. 'ulé' → logprob: -8.51488971710205
    5. 'ulate' → logprob: -8.88988971710205
    6. '[' → logprob: -9.26488971710205
    7. '       ' → logprob: -9.38988971710205
    8. '#' → logprob: -10.01488971710205
    9. 'l' → logprob: -10.13988971710205
    10. 'ulte' → logprob: -10.38988971710205

Token 444: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10098250210285187
    2. ' a' → logprob: -2.350982427597046
    3. 'x' → logprob: -8.475982666015625
    4. 'score' → logprob: -8.600982666015625
    5. '(a' → logprob: -8.725982666015625
    6. ' (' → logprob: -9.475982666015625
    7. ' x' → logprob: -10.100982666015625
    8. ' ' → logprob: -10.725982666015625
    9. ' score' → logprob: -10.975982666015625
    10. '   ' → logprob: -11.100982666015625

Token 445: ' combinaison' (ID: 165933)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1330573707818985
    2. 'score' → logprob: -2.1330573558807373
    3. ' a' → logprob: -5.508057594299316
    4. 'x' → logprob: -7.133057594299316
    5. 'abs' → logprob: -7.633057594299316
    6. ' score' → logprob: -7.633057594299316
    7. 's' → logprob: -9.008057594299316
    8. 'val' → logprob: -9.758057594299316
    9. 'value' → logprob: -10.508057594299316
    10. ' abs' → logprob: -10.758057594299316

Token 446: ' pond' (ID: 42367)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7608277797698975
    2. 'a' → logprob: -1.0108277797698975
    3. '=' → logprob: -2.2608277797698975
    4. ' a' → logprob: -3.2608277797698975
    5. '=a' → logprob: -4.510828018188477
    6. 's' → logprob: -4.885828018188477
    7. 'score' → logprob: -6.135828018188477
    8. 'val' → logprob: -6.635828018188477
    9. '.append' → logprob: -7.135828018188477
    10. '(a' → logprob: -7.760828018188477

Token 447: 'érée' (ID: 113219)
  Prédit: 'érée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érée' → logprob: -0.00158056674990803
    2. 'éré' → logprob: -7.001580715179443
    3. 'érées' → logprob: -7.751580715179443
    4. 'érés' → logprob: -8.751580238342285
    5. 'ér' → logprob: -9.876580238342285
    6. 'é' → logprob: -11.126580238342285
    7. 'ération' → logprob: -12.376580238342285
    8. 'érations' → logprob: -13.626580238342285
    9. 'rée' → logprob: -13.751580238342285
    10. 'èr' → logprob: -14.001580238342285

Token 448: ' x' (ID: 1215)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5184274911880493
    2. ' =' → logprob: -1.0184274911880493
    3. 'a' → logprob: -3.3934273719787598
    4. ' a' → logprob: -5.89342737197876
    5. '=a' → logprob: -6.39342737197876
    6. '(a' → logprob: -6.64342737197876
    7. '       ' → logprob: -7.14342737197876
    8. ':' → logprob: -7.51842737197876
    9. ',' → logprob: -7.76842737197876
    10. 'score' → logprob: -7.76842737197876

Token 449: '*a' (ID: 78448)
  Prédit: '*a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*a' → logprob: -0.09373924136161804
    2. ' *' → logprob: -2.8437392711639404
    3. '*' → logprob: -3.4687392711639404
    4. '*x' → logprob: -9.46873950958252
    5. 'a' → logprob: -10.34373950958252
    6. ' a' → logprob: -14.21873950958252
    7. '*object' → logprob: -14.34373950958252
    8. '

' → logprob: -14.71873950958252
    9. '*y' → logprob: -14.84373950958252
    10. ' ' → logprob: -14.96873950958252

Token 450: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20242857933044434
    2. '+' → logprob: -1.7024285793304443
    3. '+x' → logprob: -6.952428817749023
    4. '+y' → logprob: -9.827428817749023
    5. ',' → logprob: -13.577428817749023
    6. 'x' → logprob: -14.202428817749023
    7. ' ' → logprob: -14.327428817749023
    8. ' x' → logprob: -15.077428817749023
    9. '*' → logprob: -15.327428817749023
    10. ' ' → logprob: -15.452428817749023

Token 451: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10020678490400314
    2. ' y' → logprob: -2.3502068519592285
    3. '	y' → logprob: -16.85020637512207
    4. ' ' → logprob: -17.72520637512207
    5. '   ' → logprob: -17.85020637512207
    6. 'x' → logprob: -18.60020637512207
    7. '  ' → logprob: -19.10020637512207
    8. '```' → logprob: -19.22520637512207
    9. ''y' → logprob: -19.47520637512207
    10. '    ' → logprob: -19.47520637512207

Token 452: '*b' (ID: 72162)
  Prédit: '*b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.12756462395191193
    2. '*' → logprob: -2.1275646686553955
    3. ' *' → logprob: -7.377564430236816
    4. '*a' → logprob: -11.502564430236816
    5. '*c' → logprob: -15.377564430236816
    6. '*
' → logprob: -15.752564430236816
    7. '*object' → logprob: -15.877564430236816
    8. '*x' → logprob: -16.127565383911133
    9. '*\' → logprob: -16.627565383911133
    10. '*out' → logprob: -16.752565383911133

Token 453: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519300878047943
    2. '+' → logprob: -1.5019301176071167
    3. ' ' → logprob: -15.126930236816406
    4. '+x' → logprob: -15.376930236816406
    5. '        ' → logprob: -15.626930236816406
    6. '       ' → logprob: -15.876930236816406
    7. ' ' → logprob: -16.751930236816406
    8. '```' → logprob: -16.876930236816406
    9. '+y' → logprob: -17.376930236816406
    10. '    ' → logprob: -17.876930236816406

Token 454: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.16022878885269165
    2. ' z' → logprob: -1.9102287292480469
    3. ' ' → logprob: -12.910228729248047
    4. '   ' → logprob: -13.785228729248047
    5. '  ' → logprob: -15.410228729248047
    6. '	z' → logprob: -15.410228729248047
    7. 'x' → logprob: -15.660228729248047
    8. '    ' → logprob: -16.410228729248047
    9. '```' → logprob: -16.535228729248047
    10. '(z' → logprob: -16.660228729248047

Token 455: '*c' (ID: 83421)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3326732814311981
    2. '*c' → logprob: -1.3326733112335205
    3. ' *' → logprob: -4.082673072814941
    4. '<|end|>' → logprob: -6.082673072814941
    5. 'c' → logprob: -10.957673072814941
    6. '*C' → logprob: -11.332673072814941
    7. '<|end|>' → logprob: -11.582673072814941
    8. '*object' → logprob: -12.207673072814941
    9. ' ' → logprob: -12.457673072814941
    10. ' c' → logprob: -12.457673072814941

Token 456: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.130405455827713
    2. ')' → logprob: -2.7554054260253906
    3. ',' → logprob: -3.0054054260253906
    4. '<|end|>' → logprob: -5.380405426025391
    5. '),' → logprob: -7.380405426025391
    6. '        ' → logprob: -7.505405426025391
    7. '        
' → logprob: -8.13040542602539
    8. ' )' → logprob: -8.25540542602539
    9. ' and' → logprob: -8.38040542602539
    10. '+' → logprob: -8.38040542602539

Token 457: ' cet' (ID: 19505)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.09160248190164566
    2. ' score' → logprob: -2.8416025638580322
    3. 'x' → logprob: -3.8416025638580322
    4. ' x' → logprob: -5.216602325439453
    5. '1' → logprob: -7.716602325439453
    6. ' ' → logprob: -7.841602325439453
    7. '(score' → logprob: -8.091602325439453
    8. ' each' → logprob: -8.841602325439453
    9. 'each' → logprob: -8.841602325439453
    10. ' chaque' → logprob: -9.216602325439453

Token 458: ' objet' (ID: 13839)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6450233459472656
    2. ' ' → logprob: -2.1450233459472656
    3. ' object' → logprob: -2.1450233459472656
    4. 'x' → logprob: -2.7700233459472656
    5. ' objet' → logprob: -2.7700233459472656
    6. ' score' → logprob: -3.7700233459472656
    7. ' item' → logprob: -4.270023345947266
    8. 'object' → logprob: -4.395023345947266
    9. ' obj' → logprob: -5.020023345947266
    10. 'objet' → logprob: -5.020023345947266

Token 459: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051523931324481964
    2. ',' → logprob: -3.6765239238739014
    3. ')' → logprob: -4.0515241622924805
    4. '<|end|>' → logprob: -5.0515241622924805
    5. '),' → logprob: -8.42652416229248
    6. '.' → logprob: -8.67652416229248
    7. '<|end|>' → logprob: -9.05152416229248
    8. ' ,' → logprob: -9.55152416229248
    9. ',
' → logprob: -9.55152416229248
    10. '        
' → logprob: -9.80152416229248

Token 460: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.159337118268013
    2. 'score' → logprob: -2.034337043762207
    3. ' score' → logprob: -4.534337043762207
    4. '        
' → logprob: -5.909337043762207
    5. '<|end|>' → logprob: -7.534337043762207
    6. ' ' → logprob: -7.659337043762207
    7. ',' → logprob: -8.159337043762207
    8. 's' → logprob: -8.284337043762207
    9. '        ' → logprob: -8.409337043762207
    10. '{' → logprob: -8.784337043762207

Token 461: ' #' (ID: 1069)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.0016751834191381931
    2. ' score' → logprob: -6.501675128936768
    3. 's' → logprob: -9.376675605773926
    4. 'val' → logprob: -9.876675605773926
    5. 'value' → logprob: -11.376675605773926
    6. '       ' → logprob: -11.626675605773926
    7. 'sc' → logprob: -12.001675605773926
    8. 'v' → logprob: -13.126675605773926
    9. '
' → logprob: -13.501675605773926
    10. ' s' → logprob: -13.626675605773926

Token 462: ' Ceci' (ID: 144699)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.0020163096487522125
    2. ' score' → logprob: -6.252016544342041
    3. 's' → logprob: -10.127016067504883
    4. '       ' → logprob: -10.627016067504883
    5. 'val' → logprob: -11.377016067504883
    6. 'value' → logprob: -12.252016067504883
    7. '
' → logprob: -13.502016067504883
    8. '	score' → logprob: -13.627016067504883
    9. ' s' → logprob: -13.752016067504883
    10. '        
' → logprob: -14.252016067504883

Token 463: ' applique' (ID: 180579)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5622756481170654
    2. '.' → logprob: -1.6872756481170654
    3. '       ' → logprob: -1.6872756481170654
    4. 'score' → logprob: -3.9372756481170654
    5. 'append' → logprob: -4.5622758865356445
    6. ' .' → logprob: -4.6872758865356445
    7. ')' → logprob: -5.1872758865356445
    8. '=' → logprob: -6.0622758865356445
    9. '#' → logprob: -6.1872758865356445
    10. '<|end|>' → logprob: -6.4372758865356445

Token 464: ' le' (ID: 505)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.15662755072116852
    2. 'a' → logprob: -2.656627655029297
    3. ' x' → logprob: -3.281627655029297
    4. ' the' → logprob: -3.781627655029297
    5. 'x' → logprob: -4.531627655029297
    6. ' ' → logprob: -6.781627655029297
    7. 'the' → logprob: -7.406627655029297
    8. '    ' → logprob: -8.156627655029297
    9. ' la' → logprob: -8.156627655029297
    10. ' l' → logprob: -8.281627655029297

Token 465: ' signe' (ID: 87345)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07689490914344788
    2. 'sign' → logprob: -3.576894998550415
    3. ' a' → logprob: -4.076894760131836
    4. ' signe' → logprob: -4.451894760131836
    5. 's' → logprob: -4.576894760131836
    6. 'score' → logprob: -5.951894760131836
    7. 'x' → logprob: -5.951894760131836
    8. '+' → logprob: -8.076894760131836
    9. '(a' → logprob: -8.326894760131836
    10. ' sign' → logprob: -8.451894760131836

Token 466: ' choisi' (ID: 77245)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 467: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.2028593271970749
    2. ' aux' → logprob: -2.577859401702881
    3. ' *' → logprob: -3.702859401702881
    4. ')' → logprob: -3.952859401702881
    5. '*' → logprob: -3.952859401702881
    6. ' au' → logprob: -4.827859401702881
    7. ',' → logprob: -5.077859401702881
    8. ' )' → logprob: -5.077859401702881
    9. ' a' → logprob: -5.077859401702881
    10. '<|end|>' → logprob: -5.577859401702881

Token 468: ' chaque' (ID: 21194)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03373940661549568
    2. ' x' → logprob: -3.4087393283843994
    3. ' chaque' → logprob: -10.40873908996582
    4. ' ' → logprob: -10.53373908996582
    5. '(x' → logprob: -11.40873908996582
    6. ' each' → logprob: -11.65873908996582
    7. ' (' → logprob: -12.40873908996582
    8. 'each' → logprob: -13.03373908996582
    9. ' chacune' → logprob: -13.15873908996582
    10. 'l' → logprob: -13.28373908996582

Token 469: ' coord' (ID: 25819)
  Prédit: 'coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coordinate' → logprob: -0.945242702960968
    2. ' coord' → logprob: -1.5702426433563232
    3. ' coordinate' → logprob: -1.8202426433563232
    4. 'coord' → logprob: -2.3202426433563232
    5. 'x' → logprob: -2.5702426433563232
    6. ' élément' → logprob: -4.320242881774902
    7. ' variable' → logprob: -4.570242881774902
    8. ' x' → logprob: -4.570242881774902
    9. 'élé' → logprob: -4.820242881774902
    10. 'variable' → logprob: -5.320242881774902

Token 470: 'onnée' (ID: 91161)
  Prédit: 'onnée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onnée' → logprob: -0.01581720821559429
    2. 'onnées' → logprob: -4.515817165374756
    3. 'onné' → logprob: -6.515817165374756
    4. ' x' → logprob: -7.015817165374756
    5. 'onne' → logprob: -7.515817165374756
    6. 'onate' → logprob: -8.015817642211914
    7. 'x' → logprob: -8.390817642211914
    8. 'iante' → logprob: -8.390817642211914
    9. ')' → logprob: -8.515817642211914
    10. '   ' → logprob: -8.765817642211914

Token 471: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24930407106876373
    2. ')' → logprob: -1.7493040561676025
    3. ',' → logprob: -3.6243040561676025
    4. '<|end|>' → logprob: -4.999304294586182
    5. '.' → logprob: -5.499304294586182
    6. ' )' → logprob: -6.374304294586182
    7. '   ' → logprob: -6.749304294586182
    8. '+' → logprob: -6.874304294586182
    9. ').' → logprob: -7.374304294586182
    10. '           ' → logprob: -7.499304294586182

Token 472: ' effect' (ID: 3159)
  Prédit: ' ajoute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ajoute' → logprob: -0.7699869871139526
    2. 'append' → logprob: -1.2699869871139526
    3. ' append' → logprob: -2.394987106323242
    4. ' app' → logprob: -2.769987106323242
    5. ' adds' → logprob: -3.894987106323242
    6. '.append' → logprob: -4.269987106323242
    7. ' add' → logprob: -4.394987106323242
    8. ' sum' → logprob: -4.519987106323242
    9. 'sum' → logprob: -4.644987106323242
    10. 'score' → logprob: -5.394987106323242

Token 473: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.00035751116229221225
    2. 'u' → logprob: -8.000357627868652
    3. 'uera' → logprob: -12.375357627868652
    4. 'e' → logprob: -12.625357627868652
    5. 'ues' → logprob: -12.875357627868652
    6. '=' → logprob: -12.875357627868652
    7. 'uate' → logprob: -13.250357627868652
    8. 'ué' → logprob: -13.750357627868652
    9. 'uez' → logprob: -13.875357627868652
    10. 'uent' → logprob: -13.875357627868652

Token 474: ' la' (ID: 557)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1247179508209229
    2. 'x' → logprob: -1.6247179508209229
    3. ' x' → logprob: -1.6247179508209229
    4. ' une' → logprob: -2.499717950820923
    5. ' l' → logprob: -2.999717950820923
    6. ' la' → logprob: -3.124717950820923
    7. ' un' → logprob: -3.874717950820923
    8. 'l' → logprob: -4.249717712402344
    9. 'une' → logprob: -4.499717712402344
    10. ' ' → logprob: -4.624717712402344

Token 475: ' somme' (ID: 64484)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.26650723814964294
    2. '+' → logprob: -2.391507148742676
    3. 'sum' → logprob: -2.641507148742676
    4. ' score' → logprob: -2.891507148742676
    5. 's' → logprob: -4.891507148742676
    6. ' sum' → logprob: -5.641507148742676
    7. ' somme' → logprob: -6.141507148742676
    8. 'val' → logprob: -7.266507148742676
    9. '+=' → logprob: -7.641507148742676
    10. ' +' → logprob: -7.891507148742676

Token 476: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2049930095672607
    2. ',' → logprob: -1.4549930095672607
    3. '+' → logprob: -1.8299930095672607
    4. '<|end|>' → logprob: -2.0799930095672607
    5. ' +' → logprob: -3.2049930095672607
    6. ')' → logprob: -3.8299930095672607
    7. 'score' → logprob: -3.9549930095672607
    8. '   ' → logprob: -4.20499324798584
    9. ' +=' → logprob: -4.45499324798584
    10. '.' → logprob: -4.82999324798584

Token 477: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18434233963489532
    2. 'score' → logprob: -1.809342384338379
    3. ' score' → logprob: -5.934342384338379
    4. ',' → logprob: -7.934342384338379
    5. '           ' → logprob: -8.434342384338379
    6. 's' → logprob: -8.684342384338379
    7. ')' → logprob: -8.934342384338379
    8. ' ,' → logprob: -8.934342384338379
    9. '        
' → logprob: -9.184342384338379
    10. 'space' → logprob: -9.434342384338379

Token 478: ' valeur' (ID: 41664)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.0004833425919059664
    2. ' score' → logprob: -8.875483512878418
    3. 'val' → logprob: -9.125483512878418
    4. 's' → logprob: -9.250483512878418
    5. '       ' → logprob: -9.375483512878418
    6. 'value' → logprob: -10.125483512878418
    7. 'tmp' → logprob: -12.875483512878418
    8. 'sc' → logprob: -13.125483512878418
    9. '           ' → logprob: -13.125483512878418
    10. 'result' → logprob: -13.375483512878418

Token 479: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023996472358704
    2. '=' → logprob: -1.9102399349212646
    3. 's' → logprob: -11.410240173339844
    4. ' +=' → logprob: -13.035240173339844
    5. '+=' → logprob: -14.660240173339844
    6. '＝' → logprob: -14.660240173339844
    7. ' ' → logprob: -14.785240173339844
    8. '.append' → logprob: -15.285240173339844
    9. '=s' → logprob: -15.785240173339844
    10. ')' → logprob: -15.785240173339844

Token 480: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3868744373321533
    2. 'x' → logprob: -1.1368744373321533
    3. 'a' → logprob: -12.886874198913574
    4. ' a' → logprob: -14.386874198913574
    5. ' ' → logprob: -15.511874198913574
    6. ' ' → logprob: -16.51187515258789
    7. '	x' → logprob: -17.01187515258789
    8. '   ' → logprob: -17.63687515258789
    9. '(x' → logprob: -17.76187515258789
    10. '    ' → logprob: -19.13687515258789

Token 481: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6382719874382019
    2. '*a' → logprob: -1.1382720470428467
    3. '*' → logprob: -1.8882720470428467
    4. '*object' → logprob: -10.138272285461426
    5. '*A' → logprob: -11.263272285461426
    6. '*b' → logprob: -12.263272285461426
    7. '*out' → logprob: -12.263272285461426
    8. '*u' → logprob: -12.263272285461426
    9. '*c' → logprob: -12.388272285461426
    10. '**' → logprob: -12.388272285461426

Token 482: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4855663721391466e-05
    2. ' a' → logprob: -11.125015258789062
    3. '	a' → logprob: -18.750015258789062
    4. '*a' → logprob: -21.000015258789062
    5. '   ' → logprob: -21.875015258789062
    6. '_a' → logprob: -22.000015258789062
    7. ' ' → logprob: -22.000015258789062
    8. 'а' → logprob: -22.500015258789062
    9. '
' → logprob: -22.500015258789062
    10. '(a' → logprob: -22.500015258789062

Token 483: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16023977100849152
    2. '+' → logprob: -1.910239815711975
    3. '<|end|>' → logprob: -11.410240173339844
    4. '+y' → logprob: -13.785240173339844
    5. ' +
' → logprob: -13.910240173339844
    6. ' ' → logprob: -14.410240173339844
    7. '+
' → logprob: -14.535240173339844
    8. ' ' → logprob: -15.035240173339844
    9. ',' → logprob: -15.410240173339844
    10. '
' → logprob: -15.660240173339844

Token 484: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014163628220558167
    2. ' y' → logprob: -4.264163494110107
    3. '<|end|>' → logprob: -15.889163970947266
    4. '	y' → logprob: -17.889163970947266
    5. ' ' → logprob: -18.514163970947266
    6. '   ' → logprob: -19.389163970947266
    7. ''y' → logprob: -19.389163970947266
    8. '    ' → logprob: -19.889163970947266
    9. '(y' → logprob: -20.139163970947266
    10. '  ' → logprob: -20.139163970947266

Token 485: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3896678388118744
    2. '*' → logprob: -1.1396678686141968
    3. ' b' → logprob: -6.764667987823486
    4. 'b' → logprob: -6.889667987823486
    5. '*b' → logprob: -7.389667987823486
    6. ' ' → logprob: -13.514667510986328
    7. '*c' → logprob: -14.014667510986328
    8. '`' → logprob: -15.139667510986328
    9. '<|end|>' → logprob: -16.139667510986328
    10. 'c' → logprob: -16.264667510986328

Token 486: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.014163628220558167
    2. ' b' → logprob: -4.264163494110107
    3. 'c' → logprob: -16.014163970947266
    4. '<|end|>' → logprob: -18.639163970947266
    5. ' c' → logprob: -18.889163970947266
    6. '*b' → logprob: -19.139163970947266
    7. ' ' → logprob: -19.639163970947266
    8. ')b' → logprob: -20.014163970947266
    9. '	b' → logprob: -20.514163970947266
    10. '$b' → logprob: -21.389163970947266

Token 487: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12692831456661224
    2. '+' → logprob: -2.1269283294677734
    3. ' ' → logprob: -16.126928329467773
    4. '```' → logprob: -18.001928329467773
    5. ' ' → logprob: -18.126928329467773
    6. ' +
' → logprob: -18.126928329467773
    7. '*' → logprob: -18.126928329467773
    8. '+
' → logprob: -18.751928329467773
    9. '<|end|>' → logprob: -18.876928329467773
    10. '[' → logprob: -18.876928329467773

Token 488: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0380416102707386
    2. ' z' → logprob: -3.288041591644287
    3. '	z' → logprob: -16.538042068481445
    4. '   ' → logprob: -17.413042068481445
    5. ' ' → logprob: -17.538042068481445
    6. 'x' → logprob: -17.913042068481445
    7. ''z' → logprob: -19.288042068481445
    8. '       ' → logprob: -19.413042068481445
    9. '    ' → logprob: -19.413042068481445
    10. '  ' → logprob: -19.538042068481445

Token 489: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.25213414430618286
    2. '*' → logprob: -1.502134084701538
    3. '*c' → logprob: -8.502134323120117
    4. 'c' → logprob: -13.877134323120117
    5. '<|end|>' → logprob: -14.752134323120117
    6. ' c' → logprob: -15.252134323120117
    7. ' ' → logprob: -15.752134323120117
    8. '**' → logprob: -16.877134323120117
    9. '*object' → logprob: -17.377134323120117
    10. '*C' → logprob: -17.752134323120117

Token 490: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00012368128227535635
    2. ' c' → logprob: -9.000123977661133
    3. '	c' → logprob: -16.125123977661133
    4. ')c' → logprob: -17.625123977661133
    5. '*c' → logprob: -18.625123977661133
    6. 'с' → logprob: -19.250123977661133
    7. '$c' → logprob: -19.500123977661133
    8. '<|end|>' → logprob: -20.250123977661133
    9. '```' → logprob: -20.625123977661133
    10. '_c' → logprob: -20.875123977661133

Token 491: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015272604301571846
    2. '<|end|>' → logprob: -4.515272617340088
    3. ',' → logprob: -6.390272617340088
    4. ')' → logprob: -6.640272617340088
    5. '
' → logprob: -7.265272617340088
    6. '        
' → logprob: -8.01527214050293
    7. '<|end|>' → logprob: -9.64027214050293
    8. '   ' → logprob: -10.89027214050293
    9. '#' → logprob: -11.01527214050293
    10. ',
' → logprob: -11.26527214050293

Token 492: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00037919526221230626
    2. 'score' → logprob: -8.00037956237793
    3. '   ' → logprob: -10.25037956237793
    4. ' score' → logprob: -13.00037956237793
    5. '           ' → logprob: -13.37537956237793
    6. '
' → logprob: -13.50037956237793
    7. '        
' → logprob: -14.25037956237793
    8. '	score' → logprob: -14.50037956237793
    9. '```' → logprob: -14.87537956237793
    10. ',' → logprob: -15.00037956237793

Token 493: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5292144417762756
    2. 'score' → logprob: -0.9042144417762756
    3. ' score' → logprob: -5.279214382171631
    4. '   ' → logprob: -7.029214382171631
    5. '	score' → logprob: -9.654214859008789
    6. '
' → logprob: -11.779214859008789
    7. '           ' → logprob: -12.154214859008789
    8. 'scores' → logprob: -12.529214859008789
    9. '        
' → logprob: -13.029214859008789
    10. '(score' → logprob: -13.904214859008789

Token 494: ' On' (ID: 2160)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -5.512236498361744e-07
    2. ' score' → logprob: -15.125000953674316
    3. '   ' → logprob: -15.750000953674316
    4. '       ' → logprob: -15.875000953674316
    5. '
' → logprob: -19.125
    6. '	score' → logprob: -19.625
    7. 'Score' → logprob: -21.0
    8. '        
' → logprob: -21.375
    9. '#' → logprob: -21.625
    10. ' ' → logprob: -21.875

Token 495: ' ajoute' (ID: 91611)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.007476956117898226
    2. ' score' → logprob: -5.382476806640625
    3. '.append' → logprob: -6.007476806640625
    4. '       ' → logprob: -8.507476806640625
    5. '.score' → logprob: -9.507476806640625
    6. 'append' → logprob: -10.257476806640625
    7. '   ' → logprob: -10.382476806640625
    8. '.' → logprob: -10.382476806640625
    9. '	score' → logprob: -11.882476806640625
    10. ' .' → logprob: -12.507476806640625

Token 496: ' cette' (ID: 7696)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.08929820358753204
    2. '(val' → logprob: -2.5892982482910156
    3. 'score' → logprob: -5.089298248291016
    4. '(score' → logprob: -6.214298248291016
    5. ' valeur' → logprob: -6.589298248291016
    6. ' val' → logprob: -7.589298248291016
    7. '(' → logprob: -9.089298248291016
    8. ' score' → logprob: -9.089298248291016
    9. ' (' → logprob: -9.839298248291016
    10. '   ' → logprob: -12.214298248291016

Token 497: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7025409936904907
    2. 'score' → logprob: -0.7025409936904907
    3. ' score' → logprob: -4.702540874481201
    4. ' val' → logprob: -8.82754135131836
    5. ' valeur' → logprob: -9.57754135131836
    6. 'value' → logprob: -10.20254135131836
    7. '.' → logprob: -12.32754135131836
    8. 'valu' → logprob: -12.45254135131836
    9. '
' → logprob: -12.82754135131836
    10. ')' → logprob: -13.32754135131836

Token 498: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6392650604248047
    2. '.append' → logprob: -0.8892650604248047
    3. ',' → logprob: -3.3892650604248047
    4. '(score' → logprob: -4.139265060424805
    5. 'score' → logprob: -5.514265060424805
    6. '       ' → logprob: -6.139265060424805
    7. '   ' → logprob: -6.514265060424805
    8. 'to' → logprob: -7.514265060424805
    9. '),' → logprob: -7.889265060424805
    10. ').' → logprob: -7.889265060424805

Token 499: 'calcul' (ID: 157994)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3079630434513092
    2. 'score' → logprob: -1.4329630136489868
    3. ',' → logprob: -3.9329631328582764
    4. 'val' → logprob: -5.432962894439697
    5. ')
' → logprob: -7.307962894439697
    6. '),' → logprob: -8.307963371276855
    7. ' score' → logprob: -8.307963371276855
    8. '(score' → logprob: -8.557963371276855
    9. '
' → logprob: -8.682963371276855
    10. ',val' → logprob: -8.807963371276855

Token 500: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.013336347416043282
    2. ')' → logprob: -4.388336181640625
    3. 'é' → logprob: -8.638336181640625
    4. '   ' → logprob: -8.763336181640625
    5. '[' → logprob: -9.013336181640625
    6. 'e' → logprob: -9.138336181640625
    7. '       ' → logprob: -9.888336181640625
    8. '=' → logprob: -10.138336181640625
    9. ',' → logprob: -10.388336181640625
    10. ']' → logprob: -10.513336181640625

Token 501: ' ci' (ID: 7405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03407440334558487
    2. ',' → logprob: -4.284074306488037
    3. '(score' → logprob: -4.284074306488037
    4. ',val' → logprob: -6.534074306488037
    5. ' )' → logprob: -6.784074306488037
    6. 'score' → logprob: -6.909074306488037
    7. '(' → logprob: -7.284074306488037
    8. '.append' → logprob: -8.159074783325195
    9. 'val' → logprob: -8.409074783325195
    10. '(val' → logprob: -8.534074783325195

Token 502: '-dessus' (ID: 74812)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8667281270027161
    2. '       ' → logprob: -0.8667281270027161
    3. 'score' → logprob: -2.9917280673980713
    4. ' à' → logprob: -3.6167280673980713
    5. '   ' → logprob: -3.9917280673980713
    6. '        ' → logprob: -4.11672830581665
    7. 'à' → logprob: -4.36672830581665
    8. '.append' → logprob: -4.86672830581665
    9. '_score' → logprob: -5.74172830581665
    10. '           ' → logprob: -5.99172830581665

Token 503: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017806299030780792
    2. ',' → logprob: -4.142806529998779
    3. '       ' → logprob: -6.892806529998779
    4. ')
' → logprob: -8.142806053161621
    5. ' )' → logprob: -8.767806053161621
    6. ' ,' → logprob: -9.517806053161621
    7. '.append' → logprob: -9.517806053161621
    8. '),' → logprob: -10.017806053161621
    9. '           ' → logprob: -10.642806053161621
    10. '   ' → logprob: -11.017806053161621

Token 504: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09262324124574661
    2. ',' → logprob: -2.717623233795166
    3. '.append' → logprob: -4.342623233795166
    4. 'to' → logprob: -5.842623233795166
    5. ')' → logprob: -5.967623233795166
    6. '   ' → logprob: -6.592623233795166
    7. 'score' → logprob: -7.217623233795166
    8. ' to' → logprob: -7.217623233795166
    9. '           ' → logprob: -8.217623710632324
    10. '.' → logprob: -8.717623710632324

Token 505: ' la' (ID: 557)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -1.306760805164231e-05
    2. ' score' → logprob: -11.25001335144043
    3. 'la' → logprob: -17.87501335144043
    4. 's' → logprob: -18.87501335144043
    5. '	score' → logprob: -20.12501335144043
    6. '(score' → logprob: -21.00001335144043
    7. '   ' → logprob: -21.50001335144043
    8. '`' → logprob: -21.75001335144043
    9. 'l' → logprob: -22.12501335144043
    10. '
' → logprob: -22.37501335144043

Token 506: ' liste' (ID: 31719)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -5.512236498361744e-07
    2. ' score' → logprob: -15.875000953674316
    3. '[' → logprob: -16.375
    4. '```' → logprob: -17.0
    5. 's' → logprob: -17.125
    6. 'list' → logprob: -17.625
    7. '	score' → logprob: -17.625
    8. 'liste' → logprob: -17.75
    9. '
' → logprob: -17.75
    10. '`' → logprob: -18.0

Token 507: ' '' (ID: 461)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.10026588290929794
    2. '(score' → logprob: -2.3502659797668457
    3. ' score' → logprob: -9.975265502929688
    4. '(' → logprob: -11.475265502929688
    5. '	score' → logprob: -13.350265502929688
    6. '(
' → logprob: -15.475265502929688
    7. 'scores' → logprob: -15.600265502929688
    8. '   ' → logprob: -16.100265502929688
    9. '_score' → logprob: -16.350265502929688
    10. '.score' → logprob: -17.475265502929688

Token 508: 'score' (ID: 21200)
  Prédit: 'score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: 0.0
    2. ' score' → logprob: -17.125
    3. 'scores' → logprob: -21.125
    4. 's' → logprob: -21.375
    5. '(score' → logprob: -21.75
    6. 'Score' → logprob: -23.25
    7. 'sc' → logprob: -23.5
    8. '_score' → logprob: -23.5
    9. '	score' → logprob: -23.5
    10. '`' → logprob: -25.25

Token 509: ''.
' (ID: 49980)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006895582191646099
    2. ')' → logprob: -5.256895542144775
    3. '.' → logprob: -6.506895542144775
    4. '       ' → logprob: -9.006896018981934
    5. ').' → logprob: -10.881896018981934
    6. '   ' → logprob: -11.256896018981934
    7. ' .' → logprob: -12.381896018981934
    8. 'append' → logprob: -13.131896018981934
    9. '.score' → logprob: -13.756896018981934
    10. '.add' → logprob: -14.131896018981934

Token 510: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04055479168891907
    2. 'score' → logprob: -3.2905547618865967
    3. '   ' → logprob: -6.540555000305176
    4. ' score' → logprob: -6.915555000305176
    5. '	score' → logprob: -10.040555000305176
    6. '           ' → logprob: -11.540555000305176
    7. '(score' → logprob: -12.415555000305176
    8. '      ' → logprob: -13.040555000305176
    9. '```' → logprob: -13.040555000305176
    10. '        
' → logprob: -13.165555000305176

Token 511: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' (adapté à ' score') → logprob: -0.002644144929945469
    2. '       ' → logprob: -6.502644062042236
    3. ' score' → logprob: -7.252644062042236
    4. '   ' → logprob: -7.752644062042236
    5. '	score' → logprob: -12.752644538879395
    6. '           ' → logprob: -15.377644538879395
    7. '  ' → logprob: -16.377643585205078
    8. '(score' → logprob: -17.127643585205078
    9. ' ' → logprob: -17.377643585205078
    10. '_score' → logprob: -17.502643585205078

Token 512: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0019298245897516608
    2. '.' → logprob: -6.251929759979248
    3. ' .' → logprob: -14.251930236816406
    4. '.app' → logprob: -14.876930236816406
    5. '.ap' → logprob: -16.376930236816406
    6. '.extend' → logprob: -17.376930236816406
    7. '.add' → logprob: -18.626930236816406
    8. '.Append' → logprob: -18.751930236816406
    9. 'append' → logprob: -19.001930236816406
    10. '.push' → logprob: -19.251930236816406

Token 513: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.25000286102295
    3. 'val' → logprob: -14.62500286102295
    4. '(v' → logprob: -16.625001907348633
    5. '(valor' → logprob: -17.250001907348633
    6. '[val' → logprob: -17.250001907348633
    7. ' (' → logprob: -18.000001907348633
    8. '((' → logprob: -18.000001907348633
    9. ',val' → logprob: -18.875001907348633
    10. '(value' → logprob: -19.250001907348633

Token 514: 'eur' (ID: 8671)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.28627705574035645
    2. 'alue' → logprob: -2.2862770557403564
    3. 'ale' → logprob: -2.4112770557403564
    4. 'ue' → logprob: -3.4112770557403564
    5. '(score' → logprob: -4.536276817321777
    6. 'val' → logprob: -5.036276817321777
    7. 'score' → logprob: -5.411276817321777
    8. 'age' → logprob: -7.411276817321777
    9. 'ude' → logprob: -7.661276817321777
    10. 'value' → logprob: -7.786276817321777

Token 515: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006201092153787613
    2. '   ' → logprob: -5.131201267242432
    3. ')
' → logprob: -8.881200790405273
    4. ' )' → logprob: -9.381200790405273
    5. '       ' → logprob: -11.631200790405273
    6. ' ' → logprob: -11.881200790405273
    7. '+' → logprob: -11.881200790405273
    8. '
' → logprob: -12.256200790405273
    9. '  ' → logprob: -12.381200790405273
    10. '<|end|>' → logprob: -12.381200790405273

Token 516: '   ' (ID: 271)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -1.759734732331708e-05
    2. '   ' → logprob: -11.750017166137695
    3. ' score' → logprob: -12.375017166137695
    4. '#' → logprob: -13.125017166137695
    5. 'scores' → logprob: -13.375017166137695
    6. '	score' → logprob: -14.250017166137695
    7. '    
' → logprob: -14.875017166137695
    8. '```' → logprob: -15.125017166137695
    9. '(score' → logprob: -15.750017166137695
    10. 'sum' → logprob: -16.250017166137695

Token 517: ' #' (ID: 1069)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.00015097891446202993
    2. '   ' → logprob: -9.125150680541992
    3. '#' (adapté à ' #') → logprob: -10.500150680541992
    4. '    
' → logprob: -11.875150680541992
    5. ' score' → logprob: -12.375150680541992
    6. 'ans' → logprob: -13.375150680541992
    7. '
' → logprob: -15.000150680541992
    8. '```' → logprob: -15.125150680541992
    9. '	score' → logprob: -15.250150680541992
    10. 'sorted' → logprob: -15.375150680541992

Token 518: ' On' (ID: 2160)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -5.9795445849886164e-05
    2. 'ans' → logprob: -10.000060081481934
    3. '   ' → logprob: -12.250060081481934
    4. '#' → logprob: -12.375060081481934
    5. ' score' → logprob: -13.625060081481934
    6. 'sorted' → logprob: -14.000060081481934
    7. 'answer' → logprob: -14.375060081481934
    8. 'sum' → logprob: -14.500060081481934
    9. 'scores' → logprob: -14.500060081481934
    10. '    
' → logprob: -14.625060081481934

Token 519: ' trie' (ID: 139428)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.05888399854302406
    2. '.sort' → logprob: -2.9338839054107666
    3. '.' → logprob: -6.933884143829346
    4. 'ans' → logprob: -7.058884143829346
    5. '.score' → logprob: -7.683884143829346
    6. 'sorted' → logprob: -8.058883666992188
    7. '#' → logprob: -8.308883666992188
    8. 'sort' → logprob: -8.433883666992188
    9. ' .' → logprob: -8.433883666992188
    10. ' score' → logprob: -8.683883666992188

Token 520: ' la' (ID: 557)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -4.8351892473874614e-05
    2. '   ' → logprob: -11.125048637390137
    3. '(score' → logprob: -11.125048637390137
    4. ' score' → logprob: -11.250048637390137
    5. 'sorted' → logprob: -12.625048637390137
    6. 'scores' → logprob: -13.125048637390137
    7. '	score' → logprob: -15.000048637390137
    8. 'sort' → logprob: -17.00004768371582
    9. '_score' → logprob: -17.25004768371582
    10. 'sc' → logprob: -17.50004768371582

Token 521: ' liste' (ID: 31719)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -5.512236498361744e-07
    2. 'sorted' → logprob: -15.250000953674316
    3. ' score' → logprob: -15.625000953674316
    4. 'sort' → logprob: -17.125
    5. 'scores' → logprob: -17.375
    6. '   ' → logprob: -17.875
    7. '    
' → logprob: -19.125
    8. 's' → logprob: -19.75
    9. '(score' → logprob: -20.125
    10. '	score' → logprob: -20.375

Token 522: ' '' (ID: 461)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.001468557515181601
    2. '   ' → logprob: -7.001468658447266
    3. '(score' → logprob: -7.751468658447266
    4. 'sorted' → logprob: -9.751468658447266
    5. '=' → logprob: -10.001468658447266
    6. ' score' → logprob: -11.626468658447266
    7. '	score' → logprob: -12.126468658447266
    8. '_score' → logprob: -12.251468658447266
    9. 'scores' → logprob: -13.251468658447266
    10. ' =' → logprob: -14.376468658447266

Token 523: 'score' (ID: 21200)
  Prédit: 'score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -1.6240566083070007e-06
    2. 'sorted' → logprob: -13.500001907348633
    3. ' score' → logprob: -16.125001907348633
    4. 'sort' → logprob: -16.500001907348633
    5. 'scores' → logprob: -17.000001907348633
    6. '(score' → logprob: -18.000001907348633
    7. 's' → logprob: -19.000001907348633
    8. 'sc' → logprob: -19.500001907348633
    9. '	score' → logprob: -19.500001907348633
    10. '```' → logprob: -19.875001907348633

Token 524: ''' (ID: 6)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.009129500947892666
    2. '   ' → logprob: -4.759129524230957
    3. '=' → logprob: -8.259129524230957
    4. '.' → logprob: -9.009129524230957
    5. ',' → logprob: -10.384129524230957
    6. '.reverse' → logprob: -10.509129524230957
    7. ' =' → logprob: -10.759129524230957
    8. ')' → logprob: -11.259129524230957
    9. 'sort' → logprob: -11.509129524230957
    10. 'score' → logprob: -11.884129524230957

Token 525: ' en' (ID: 469)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0071918657049536705
    2. '   ' → logprob: -5.0071916580200195
    3. '.' → logprob: -7.7571916580200195
    4. '=' → logprob: -11.13219165802002
    5. '.score' → logprob: -11.63219165802002
    6. 'score' → logprob: -11.75719165802002
    7. 'sort' → logprob: -12.38219165802002
    8. '.sorted' → logprob: -13.00719165802002
    9. 'sorted' → logprob: -13.25719165802002
    10. ')' → logprob: -13.38219165802002

Token 526: ' ordre' (ID: 103061)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.03606036305427551
    2. 'descending' → logprob: -3.536060333251953
    3. 'score' → logprob: -5.161060333251953
    4. 'desc' → logprob: -8.536060333251953
    5. 'sorted' → logprob: -8.786060333251953
    6. ' reverse' → logprob: -9.036060333251953
    7. 'dec' → logprob: -10.286060333251953
    8. ' descending' → logprob: -10.536060333251953
    9. 'de' → logprob: -11.161060333251953
    10. '```' → logprob: -13.161060333251953

Token 527: ' décro' (ID: 176854)
  Prédit: 'descending'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'descending' → logprob: -0.9155234098434448
    2. 'desc' → logprob: -1.2905234098434448
    3. 'score' → logprob: -1.4155234098434448
    4. '=' → logprob: -2.9155235290527344
    5. '.reverse' → logprob: -4.540523529052734
    6. 'reverse' → logprob: -5.290523529052734
    7. '.sort' → logprob: -5.790523529052734
    8. 'sorted' → logprob: -6.165523529052734
    9. 'de' → logprob: -6.290523529052734
    10. ' descending' → logprob: -6.415523529052734

Token 528: 'issant' (ID: 31359)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.2359398901462555
    2. 's' → logprob: -3.2359399795532227
    3. 'sent' → logprob: -3.4859399795532227
    4. 'desc' → logprob: -3.8609399795532227
    5. 'issante' → logprob: -3.9859399795532227
    6. 'tr' → logprob: -4.110939979553223
    7. 'c' → logprob: -4.360939979553223
    8. 'nant' → logprob: -4.610939979553223
    9. 'descending' → logprob: -4.860939979553223
    10. 'issant' → logprob: -4.860939979553223

Token 529: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002219841815531254
    2. '.sort' → logprob: -7.1272196769714355
    3. 'score' → logprob: -7.2522196769714355
    4. ',' → logprob: -8.377220153808594
    5. '
' → logprob: -8.752220153808594
    6. '    
' → logprob: -9.377220153808594
    7. '.' → logprob: -9.752220153808594
    8. 'sorted' → logprob: -10.627220153808594
    9. '(score' → logprob: -11.002220153808594
    10. '	score' → logprob: -11.002220153808594

Token 530: ' obtenir' (ID: 54423)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.008216788992285728
    2. ' score' → logprob: -4.883216857910156
    3. 'reverse' → logprob: -7.883216857910156
    4. 'sort' → logprob: -9.633216857910156
    5. 'desc' → logprob: -10.133216857910156
    6. 'sorted' → logprob: -11.008216857910156
    7. ' reverse' → logprob: -11.133216857910156
    8. ')' → logprob: -11.383216857910156
    9. 'scores' → logprob: -11.508216857910156
    10. 's' → logprob: -11.633216857910156

Token 531: ' les' (ID: 1341)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.00148177077062428
    2. 'sorted' → logprob: -7.001481533050537
    3. ' score' → logprob: -7.501481533050537
    4. 'scores' → logprob: -12.126482009887695
    5. 'reverse' → logprob: -12.751482009887695
    6. 'sort' → logprob: -12.876482009887695
    7. '   ' → logprob: -13.251482009887695
    8. ' sorted' → logprob: -13.376482009887695
    9. '	score' → logprob: -13.876482009887695
    10. '(score' → logprob: -14.001482009887695

Token 532: ' plus' (ID: 2932)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.00013154871703591198
    2. 'M' → logprob: -9.250131607055664
    3. 'sorted' → logprob: -10.750131607055664
    4. ' score' → logprob: -11.500131607055664
    5. 'scores' → logprob: -12.875131607055664
    6. '```' → logprob: -14.375131607055664
    7. 'sort' → logprob: -15.875131607055664
    8. 'sum' → logprob: -16.125131607055664
    9. '	score' → logprob: -16.250131607055664
    10. '-score' → logprob: -17.000131607055664

Token 533: ' grandes' (ID: 16325)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.3696548044681549
    2. 'gr' → logprob: -1.8696547746658325
    3. 'large' → logprob: -2.494654893875122
    4. 'scores' → logprob: -3.494654893875122
    5. 'grand' → logprob: -3.869654893875122
    6. 'sorted' → logprob: -4.744654655456543
    7. 'larg' → logprob: -6.244654655456543
    8. 's' → logprob: -6.494654655456543
    9. 'top' → logprob: -6.494654655456543
    10. 'tr' → logprob: -6.619654655456543

Token 534: ' valeurs' (ID: 73668)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.6183894872665405
    2. 'score' → logprob: -0.8683894872665405
    3. 'values' → logprob: -3.36838960647583
    4. 'val' → logprob: -5.86838960647583
    5. ' scores' → logprob: -6.74338960647583
    6. 's' → logprob: -7.36838960647583
    7. '<|end|>' → logprob: -7.74338960647583
    8. '(score' → logprob: -7.86838960647583
    9. ' score' → logprob: -7.99338960647583
    10. '.' → logprob: -8.368389129638672

Token 535: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04503105580806732
    2. 'score' → logprob: -3.1700310707092285
    3. ' score' → logprob: -6.4200310707092285
    4. '	score' → logprob: -8.67003059387207
    5. '(score' → logprob: -9.42003059387207
    6. ',' → logprob: -10.17003059387207
    7. '    
' → logprob: -10.92003059387207
    8. '.sort' → logprob: -11.29503059387207
    9. '_score' → logprob: -11.42003059387207
    10. '.' → logprob: -11.67003059387207

Token 536: ' premier' (ID: 15506)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.06417211145162582
    2. 'reverse' → logprob: -2.8141720294952393
    3. 'descending' → logprob: -6.439172267913818
    4. ' score' → logprob: -7.814172267913818
    5. 'sorted' → logprob: -9.43917179107666
    6. ' reverse' → logprob: -10.31417179107666
    7. '```' → logprob: -10.93917179107666
    8. 'scores' → logprob: -11.06417179107666
    9. '[::-' → logprob: -11.56417179107666
    10. 'desc' → logprob: -11.68917179107666

Token 537: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029379211366176605
    2. 'score' → logprob: -3.65437912940979
    3. '
' → logprob: -6.529379367828369
    4. '    
' → logprob: -7.779379367828369
    5. ',' → logprob: -7.904379367828369
    6. '.' → logprob: -8.779378890991211
    7. ' score' → logprob: -8.904378890991211
    8. '	score' → logprob: -9.029378890991211
    9. '(score' → logprob: -9.154378890991211
    10. '.sort' → logprob: -9.279378890991211

Token 538: '   ' (ID: 271)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.10080274194478989
    2. '   ' → logprob: -2.3508026599884033
    3. '    
' → logprob: -8.350802421569824
    4. '
' → logprob: -8.725802421569824
    5. ' score' → logprob: -9.600802421569824
    6. 'scores' → logprob: -9.600802421569824
    7. '```' → logprob: -10.600802421569824
    8. '	score' → logprob: -10.975802421569824
    9. '(score' → logprob: -11.725802421569824
    10. 'sorted' → logprob: -12.475802421569824

Token 539: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' (adapté à ' score') → logprob: -6.897412822581828e-05
    2. '   ' → logprob: -9.625068664550781
    3. ' score' → logprob: -13.250068664550781
    4. '
' → logprob: -14.500068664550781
    5. '    
' → logprob: -14.625068664550781
    6. 'scores' → logprob: -16.62506866455078
    7. '	score' → logprob: -16.75006866455078
    8. 'sorted' → logprob: -17.62506866455078
    9. '```' → logprob: -18.50006866455078
    10. '_score' → logprob: -19.12506866455078

Token 540: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0002019907406065613
    2. '.' → logprob: -8.750202178955078
    3. '=' → logprob: -10.125202178955078
    4. ' .' → logprob: -13.375202178955078
    5. 'sort' → logprob: -13.750202178955078
    6. ' =' → logprob: -15.250202178955078
    7. '	sort' → logprob: -15.500202178955078
    8. '.reverse' → logprob: -15.875202178955078
    9. '.=' → logprob: -17.250202178955078
    10. '   ' → logprob: -17.750202178955078

Token 541: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.02978948876261711
    2. 'reverse' → logprob: -3.529789447784424
    3. ' reverse' → logprob: -10.404789924621582
    4. '.reverse' → logprob: -12.154789924621582
    5. '_reverse' → logprob: -13.029789924621582
    6. 'Reverse' → logprob: -13.904789924621582
    7. '()' → logprob: -15.654789924621582
    8. '(' → logprob: -16.154788970947266
    9. ',' → logprob: -17.529788970947266
    10. '()
' → logprob: -18.279788970947266

Token 542: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.47388261556625366
    2. '())' → logprob: -1.2238826751708984
    3. ')' → logprob: -2.9738826751708984
    4. '()' → logprob: -3.7238826751708984
    5. '(True' → logprob: -4.973882675170898
    6. '=' → logprob: -6.973882675170898
    7. 'True' → logprob: -9.848882675170898
    8. '())
' → logprob: -9.973882675170898
    9. '();)' → logprob: -10.098882675170898
    10. '(' → logprob: -10.598882675170898

Token 543: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021248914301395416
    2. '   ' → logprob: -3.8962488174438477
    3. ')
' → logprob: -7.771248817443848
    4. '[:' → logprob: -8.646248817443848
    5. ' )' → logprob: -10.271248817443848
    6. '[' → logprob: -10.396248817443848
    7. '  ' → logprob: -11.646248817443848
    8. ' ' → logprob: -12.396248817443848
    9. '    
' → logprob: -12.521248817443848
    10. '[::-' → logprob: -12.771248817443848

Token 544: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.028114931657910347
    2. '+' → logprob: -4.9031147956848145
    3. ' ans' → logprob: -5.1531147956848145
    4. '   ' → logprob: -5.7781147956848145
    5. 'sum' → logprob: -5.9031147956848145
    6. 'for' → logprob: -6.0281147956848145
    7. 'total' → logprob: -6.1531147956848145
    8. 'print' → logprob: -6.5281147956848145
    9. '```' → logprob: -7.0281147956848145
    10. '    
' → logprob: -8.153115272521973

Token 545: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0001843485952122137
    2. ' ans' → logprob: -9.250184059143066
    3. 'total' → logprob: -10.375184059143066
    4. 'for' → logprob: -10.625184059143066
    5. 'sum' → logprob: -11.875184059143066
    6. 'answer' → logprob: -12.000184059143066
    7. '(ans' → logprob: -12.250184059143066
    8. '   ' → logprob: -13.125184059143066
    9. '    
' → logprob: -13.125184059143066
    10. '+' → logprob: -13.250184059143066

Token 546: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.017229050397872925
    2. 'total' → logprob: -4.267229080200195
    3. 'current' → logprob: -6.267229080200195
    4. 's' → logprob: -7.142229080200195
    5. 'temp' → logprob: -9.017229080200195
    6. 'sum' → logprob: -9.267229080200195
    7. 'result' → logprob: -10.142229080200195
    8. 'tmp' → logprob: -10.517229080200195
    9. 'answer' → logprob: -10.642229080200195
    10. 'val' → logprob: -11.017229080200195

Token 547: ' fait' (ID: 7473)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0012833295622840524
    2. '
' → logprob: -8.001283645629883
    3. ' ans' → logprob: -8.376283645629883
    4. '[' → logprob: -8.626283645629883
    5. '+=' → logprob: -8.751283645629883
    6. '   ' → logprob: -9.251283645629883
    7. '=' → logprob: -9.751283645629883
    8. '	ans' → logprob: -10.001283645629883
    9. 'sum' → logprob: -10.126283645629883
    10. '(ans' → logprob: -10.251283645629883

Token 548: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0590878501534462
    2. 'for' → logprob: -3.1840877532958984
    3. ' ans' → logprob: -4.809087753295898
    4. '   ' → logprob: -5.559087753295898
    5. 'sum' → logprob: -6.559087753295898
    6. '(ans' → logprob: -7.059087753295898
    7. '	ans' → logprob: -7.184087753295898
    8. '_ans' → logprob: -8.684087753295898
    9. ' for' → logprob: -9.059087753295898
    10. '    
' → logprob: -9.309087753295898

Token 549: ' somme' (ID: 64484)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00015169414109550416
    2. 'sum' → logprob: -9.250151634216309
    3. 'total' → logprob: -10.625151634216309
    4. ' ans' → logprob: -11.750151634216309
    5. 'print' → logprob: -12.125151634216309
    6. 'answer' → logprob: -12.375151634216309
    7. 's' → logprob: -12.500151634216309
    8. '
' → logprob: -12.750151634216309
    9. 'for' → logprob: -13.125151634216309
    10. '#' → logprob: -13.125151634216309

Token 550: ' des' (ID: 731)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.17536577582359314
    2. '(score' → logprob: -2.175365686416626
    3. 'sum' → logprob: -3.425365686416626
    4. '(sum' → logprob: -4.675365924835205
    5. '=sum' → logprob: -6.300365924835205
    6. 'of' → logprob: -6.550365924835205
    7. '=' → logprob: -6.925365924835205
    8. '_score' → logprob: -8.550365447998047
    9. '(' → logprob: -8.675365447998047
    10. 'ans' → logprob: -8.925365447998047

Token 551: ' M' (ID: 391)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -9.13388703338569e-06
    2. ' score' → logprob: -11.875009536743164
    3. 'M' → logprob: -13.125009536743164
    4. 'scores' → logprob: -16.375009536743164
    5. '[M' → logprob: -17.375009536743164
    6. '	score' → logprob: -18.250009536743164
    7. '(score' → logprob: -18.750009536743164
    8. 'sum' → logprob: -19.750009536743164
    9. ' M' → logprob: -20.625009536743164
    10. '[' → logprob: -20.875009536743164

Token 552: ' premiers' (ID: 59140)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.008115214295685291
    2. 'prem' → logprob: -5.258115291595459
    3. ' score' → logprob: -5.883115291595459
    4. '[' → logprob: -10.2581148147583
    5. 'first' → logprob: -11.2581148147583
    6. 'scores' → logprob: -11.5081148147583
    7. '[:' → logprob: -11.7581148147583
    8. ' premiers' → logprob: -12.0081148147583
    9. ' premières' → logprob: -12.3831148147583
    10. '(score' → logprob: -12.6331148147583

Token 553: ' éléments' (ID: 57375)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.022338682785630226
    2. 'elements' → logprob: -4.5223388671875
    3. 'scores' → logprob: -5.2723388671875
    4. ' éléments' → logprob: -6.2723388671875
    5. 'élé' → logprob: -6.5223388671875
    6. ' score' → logprob: -6.6473388671875
    7. '(score' → logprob: -7.0223388671875
    8. ' elements' → logprob: -7.7723388671875
    9. ' scores' → logprob: -10.3973388671875
    10. 'items' → logprob: -11.0223388671875

Token 554: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09183871001005173
    2. 'score' → logprob: -2.8418385982513428
    3. 'sum' → logprob: -4.341838836669922
    4. '(score' → logprob: -4.591838836669922
    5. ',' → logprob: -6.466838836669922
    6. '=sum' → logprob: -6.716838836669922
    7. '(sum' → logprob: -7.341838836669922
    8. '=' → logprob: -7.591838836669922
    9. 'ans' → logprob: -8.341838836669922
    10. '+=' → logprob: -8.466838836669922

Token 555: ' la' (ID: 557)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -4.5491004129871726e-05
    2. ' score' → logprob: -10.000045776367188
    3. '(score' → logprob: -18.000045776367188
    4. '	score' → logprob: -19.375045776367188
    5. 'scores' → logprob: -19.500045776367188
    6. '`' → logprob: -19.625045776367188
    7. '
' → logprob: -20.625045776367188
    8. '```' → logprob: -20.625045776367188
    9. '_score' → logprob: -20.750045776367188
    10. 'Score' → logprob: -21.375045776367188

Token 556: ' liste' (ID: 31719)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -1.1472419600977446e-06
    2. ' score' → logprob: -13.875000953674316
    3. 'scores' → logprob: -16.500001907348633
    4. 'list' → logprob: -19.000001907348633
    5. '`' → logprob: -19.750001907348633
    6. 's' → logprob: -20.000001907348633
    7. '(score' → logprob: -20.000001907348633
    8. 'liste' → logprob: -20.125001907348633
    9. '	score' → logprob: -20.125001907348633
    10. '_score' → logprob: -20.250001907348633

Token 557: ' '' (ID: 461)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.0002800471556838602
    2. '(score' → logprob: -8.250280380249023
    3. ' score' → logprob: -11.000280380249023
    4. '   ' → logprob: -13.500280380249023
    5. 'scores' → logprob: -15.750280380249023
    6. '`' → logprob: -16.250280380249023
    7. '	score' → logprob: -16.375280380249023
    8. '[' → logprob: -16.375280380249023
    9. '(' → logprob: -16.500280380249023
    10. '_score' → logprob: -16.625280380249023

Token 558: 'score' (ID: 21200)
  Prédit: 'score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -1.9361264946837764e-07
    2. ' score' → logprob: -15.75
    3. 'scores' → logprob: -21.0
    4. '_score' → logprob: -21.375
    5. '(score' → logprob: -21.875
    6. '	score' → logprob: -22.0
    7. '`' → logprob: -22.5
    8. '
' → logprob: -22.875
    9. '```' → logprob: -22.875
    10. 'Score' → logprob: -23.375

Token 559: ''' (ID: 6)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018636813387274742
    2. '[:' → logprob: -4.893636703491211
    3. ')' → logprob: -5.768636703491211
    4. 'sum' → logprob: -5.768636703491211
    5. ',' → logprob: -6.768636703491211
    6. '[' → logprob: -6.893636703491211
    7. 'ans' → logprob: -7.518636703491211
    8. ' ans' → logprob: -7.893636703491211
    9. '    
' → logprob: -7.893636703491211
    10. 'score' → logprob: -8.518636703491211

Token 560: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39597728848457336
    2. 'ans' → logprob: -1.145977258682251
    3. 'sum' → logprob: -5.14597749710083
    4. ' ans' → logprob: -6.14597749710083
    5. '	ans' → logprob: -8.145977020263672
    6. '    
' → logprob: -8.395977020263672
    7. '(ans' → logprob: -8.770977020263672
    8. '
' → logprob: -9.020977020263672
    9. 'total' → logprob: -9.145977020263672
    10. 's' → logprob: -9.770977020263672

Token 561: 'qui' (ID: 22771)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.5317605137825012
    2. 'sum' → logprob: -0.9067605137825012
    3. ':' → logprob: -5.7817606925964355
    4. ' score' → logprob: -6.6567606925964355
    5. ' sum' → logprob: -6.6567606925964355
    6. '[:' → logprob: -6.6567606925964355
    7. '   ' → logprob: -7.2817606925964355
    8. ')' → logprob: -7.5317606925964355
    9. '0' → logprob: -8.406760215759277
    10. '=sum' → logprob: -10.156760215759277

Token 562: ' sont' (ID: 5242)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.03801555559039116
    2. 'sum' → logprob: -4.413015365600586
    3. '#' → logprob: -5.163015365600586
    4. '[' → logprob: -5.413015365600586
    5. ')' → logprob: -5.663015365600586
    6. ':' → logprob: -6.038015365600586
    7. ' are' → logprob: -6.163015365600586
    8. '][:' → logprob: -6.663015365600586
    9. '
' → logprob: -7.288015365600586
    10. '=' → logprob: -7.413015365600586

Token 563: ' les' (ID: 1341)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.017028898000717163
    2. ' score' → logprob: -4.26702880859375
    3. 'sum' → logprob: -5.89202880859375
    4. ' sum' → logprob: -9.64202880859375
    5. '   ' → logprob: -11.26702880859375
    6. '	score' → logprob: -11.39202880859375
    7. ' ' → logprob: -12.39202880859375
    8. '(score' → logprob: -12.89202880859375
    9. '  ' → logprob: -13.39202880859375
    10. '
' → logprob: -13.76702880859375

Token 564: ' plus' (ID: 2932)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.023281700909137726
    2. 'M' → logprob: -3.8982818126678467
    3. ' score' → logprob: -6.648281574249268
    4. 'sum' → logprob: -7.523281574249268
    5. 'scores' → logprob: -7.648281574249268
    6. '[:' → logprob: -9.023282051086426
    7. ' M' → logprob: -9.398282051086426
    8. '[M' → logprob: -9.898282051086426
    9. '[' → logprob: -10.148282051086426
    10. '+' → logprob: -10.523282051086426

Token 565: ' grands' (ID: 43085)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.04106898605823517
    2. ' grandes' → logprob: -3.7910690307617188
    3. 'grand' → logprob: -4.666069030761719
    4. 'larg' → logprob: -5.541069030761719
    5. ' grands' → logprob: -6.416069030761719
    6. 'large' → logprob: -6.666069030761719
    7. 'import' → logprob: -8.041069030761719
    8. 'élé' → logprob: -8.541069030761719
    9. 'm' → logprob: -8.666069030761719
    10. 'é' → logprob: -8.666069030761719

Token 566: ' après' (ID: 16460)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019316868856549263
    2. 'scores' → logprob: -4.894316673278809
    3. '<|end|>' → logprob: -5.769316673278809
    4. ').' → logprob: -6.019316673278809
    5. 'elements' → logprob: -6.644316673278809
    6. 'indices' → logprob: -6.894316673278809
    7. ')
' → logprob: -7.019316673278809
    8. ' elements' → logprob: -7.519316673278809
    9. ' )' → logprob: -8.019316673278809
    10. ' scores' → logprob: -8.144316673278809

Token 567: ' le' (ID: 505)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.11466088891029358
    2. 'tr' → logprob: -2.9896609783172607
    3. 'sorting' → logprob: -3.7396609783172607
    4. 'tri' → logprob: -3.9896609783172607
    5. 'sort' → logprob: -4.489660739898682
    6. 'la' → logprob: -6.364660739898682
    7. 'le' → logprob: -6.864660739898682
    8. '   ' → logprob: -7.489660739898682
    9. '```' → logprob: -8.36466121673584
    10. ' tr' → logprob: -8.73966121673584

Token 568: ' tri' (ID: 12665)
  Prédit: 'tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tri' → logprob: -0.5382643938064575
    2. 'sort' → logprob: -1.0382643938064575
    3. 'score' → logprob: -3.413264274597168
    4. '.sort' → logprob: -4.038264274597168
    5. ' tri' → logprob: -5.163264274597168
    6. 'tris' → logprob: -5.413264274597168
    7. 'tr' → logprob: -7.038264274597168
    8. 'sorting' → logprob: -8.413264274597168
    9. '#' → logprob: -9.163264274597168
    10. 'sorted' → logprob: -10.413264274597168

Token 569: ').
' (ID: 6294)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.255923330783844
    2. ')' → logprob: -2.005923271179199
    3. '[:' → logprob: -2.630923271179199
    4. ')
' → logprob: -4.005923271179199
    5. '[' → logprob: -8.1309232711792
    6. '#' → logprob: -8.8809232711792
    7. 'score' → logprob: -9.0059232711792
    8. ')
' → logprob: -9.5059232711792
    9. ',' → logprob: -9.6309232711792
    10. '
' → logprob: -10.1309232711792

Token 570: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7705585956573486
    2. 'total' → logprob: -1.0205585956573486
    3. 's' → logprob: -2.2705585956573486
    4. 'temp' → logprob: -3.8955585956573486
    5. '   ' → logprob: -4.1455583572387695
    6. 'sum' → logprob: -4.1455583572387695
    7. 'tmp' → logprob: -4.3955583572387695
    8. 'current' → logprob: -5.0205583572387695
    9. 'tot' → logprob: -7.2705583572387695
    10. 'res' → logprob: -7.3955583572387695

Token 571: ' somme' (ID: 64484)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.643608033657074
    2. 'ans' → logprob: -1.7686080932617188
    3. 'tmp' → logprob: -1.8936080932617188
    4. 'temp' → logprob: -2.7686080932617188
    5. 's' → logprob: -3.1436080932617188
    6. 'current' → logprob: -3.2686080932617188
    7. 'sum' → logprob: -5.268608093261719
    8. 'tot' → logprob: -6.768608093261719
    9. 'cur' → logprob: -6.893608093261719
    10. 'res' → logprob: -7.518608093261719

Token 572: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009290617890655994
    2. ' =' → logprob: -4.75929069519043
    3. '=sum' → logprob: -8.00929069519043
    4. '_score' → logprob: -9.13429069519043
    5. '(score' → logprob: -9.63429069519043
    6. 's' → logprob: -10.00929069519043
    7. 'score' → logprob: -10.00929069519043
    8. '=s' → logprob: -10.25929069519043
    9. '_' → logprob: -11.50929069519043
    10. '_=' → logprob: -11.50929069519043

Token 573: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.004078401252627373
    2. ' sum' → logprob: -5.504078388214111
    3. '(sum' → logprob: -18.504077911376953
    4. '=sum' → logprob: -19.254077911376953
    5. '	sum' → logprob: -19.754077911376953
    6. '   ' → logprob: -20.129077911376953
    7. ' ' → logprob: -21.754077911376953
    8. '
' → logprob: -22.754077911376953
    9. ',sum' → logprob: -23.004077911376953
    10. 's' → logprob: -23.004077911376953

Token 574: '(score' (ID: 70244)
  Prédit: '(score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -5.676981345459353e-06
    2. 'score' → logprob: -12.250005722045898
    3. '(' → logprob: -14.125005722045898
    4. '(scores' → logprob: -16.5000057220459
    5. ' (' → logprob: -19.5000057220459
    6. '	score' → logprob: -20.1250057220459
    7. ' score' → logprob: -20.1250057220459
    8. '(
' → logprob: -20.3750057220459
    9. '(sc' → logprob: -20.6250057220459
    10. '(s' → logprob: -20.7500057220459

Token 575: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.750000953674316
    3. ' [:' → logprob: -15.875000953674316
    4. ')' → logprob: -16.5
    5. '   ' → logprob: -18.25
    6. '[:]' → logprob: -18.625
    7. '][:' → logprob: -19.25
    8. '[:-' → logprob: -19.375
    9. ')
' → logprob: -19.75
    10. '[
' → logprob: -20.375

Token 576: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -5.512236498361744e-07
    2. ' M' → logprob: -14.625000953674316
    3. '   ' → logprob: -20.25
    4. 'Ｍ' → logprob: -23.0
    5. '	M' → logprob: -23.125
    6. '(M' → logprob: -23.25
    7. '[M' → logprob: -23.75
    8. '
' → logprob: -24.0
    9. ')' → logprob: -24.5
    10. '<M' → logprob: -24.625

Token 577: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -7.827200897736475e-05
    2. '])
' → logprob: -9.625078201293945
    3. ')' → logprob: -11.375078201293945
    4. '])
' → logprob: -15.000078201293945
    5. '))' → logprob: -15.625078201293945
    6. ' ])' → logprob: -15.750078201293945
    7. ')])' → logprob: -16.875078201293945
    8. '])

' → logprob: -17.000078201293945
    9. ''])' → logprob: -17.000078201293945
    10. ')]' → logprob: -17.375078201293945

Token 578: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018750891089439392
    2. 'if' → logprob: -4.6437506675720215
    3. 'ans' → logprob: -5.5187506675720215
    4. ' if' → logprob: -5.7687506675720215
    5. '
' → logprob: -7.2687506675720215
    6. '    
' → logprob: -7.3937506675720215
    7. '```' → logprob: -8.39375114440918
    8. '	ans' → logprob: -9.89375114440918
    9. '(ans' → logprob: -10.26875114440918
    10. '<|end|>' → logprob: -10.39375114440918

Token 579: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3363319933414459
    2. '   ' → logprob: -1.8363319635391235
    3. 'ans' → logprob: -2.086332082748413
    4. ' if' → logprob: -6.211331844329834
    5. '	if' → logprob: -10.836332321166992
    6. '    
' → logprob: -11.086332321166992
    7. '	ans' → logprob: -11.086332321166992
    8. ' ans' → logprob: -12.461332321166992
    9. '(ans' → logprob: -12.461332321166992
    10. '```' → logprob: -13.086332321166992

Token 580: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3873644769191742
    2. 'if' → logprob: -1.1373645067214966
    3. '   ' → logprob: -7.637364387512207
    4. ' if' → logprob: -11.887364387512207
    5. ' ans' → logprob: -13.262364387512207
    6. '	ans' → logprob: -14.512364387512207
    7. '(ans' → logprob: -15.012364387512207
    8. ' ' → logprob: -15.012364387512207
    9. '```' → logprob: -15.012364387512207
    10. '       ' → logprob: -15.387364387512207

Token 581: ' met' (ID: 1421)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5770561099052429
    2. 'ans' → logprob: -0.8270561099052429
    3. ' if' → logprob: -7.202055931091309
    4. ' ans' → logprob: -8.077055931091309
    5. '   ' → logprob: -10.577055931091309
    6. '#' → logprob: -10.952055931091309
    7. '=' → logprob: -12.077055931091309
    8. '
' → logprob: -12.577055931091309
    9. '       ' → logprob: -12.952055931091309
    10. 'answer' → logprob: -13.577055931091309

Token 582: ' à' (ID: 1221)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.007631589658558369
    2. '   ' → logprob: -5.507631778717041
    3. 'à' → logprob: -6.632631778717041
    4. 'aj' → logprob: -7.382631778717041
    5. 'if' → logprob: -7.507631778717041
    6. '```' → logprob: -7.632631778717041
    7. '	ans' → logprob: -9.007631301879883
    8. 'a' → logprob: -9.382631301879883
    9. '  ' → logprob: -9.632631301879883
    10. ' ans' → logprob: -9.757631301879883

Token 583: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0012716623023152351
    2. '```' → logprob: -7.126271724700928
    3. 'jours' → logprob: -8.12627124786377
    4. 'ans' → logprob: -10.12627124786377
    5. ' jour' → logprob: -10.50127124786377
    6. 'day' → logprob: -10.50127124786377
    7. 'jou' → logprob: -11.00127124786377
    8. '``' → logprob: -11.12627124786377
    9. 'Jour' → logprob: -11.37627124786377
    10. '   ' → logprob: -12.00127124786377

Token 584: ' '' (ID: 461)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -4.7755875129951164e-05
    2. ' ans' → logprob: -10.00004768371582
    3. '(ans' → logprob: -13.00004768371582
    4. '	ans' → logprob: -17.12504768371582
    5. 'answer' → logprob: -18.50004768371582
    6. '   ' → logprob: -18.50004768371582
    7. '_ans' → logprob: -20.25004768371582
    8. 'max' → logprob: -21.00004768371582
    9. '
' → logprob: -21.37504768371582
    10. 'anst' → logprob: -21.87504768371582

Token 585: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: 0.0
    2. ' ans' → logprob: -18.25
    3. '(ans' → logprob: -20.0
    4. '	ans' → logprob: -20.125
    5. 'answer' → logprob: -20.875
    6. 'if' → logprob: -21.25
    7. '   ' → logprob: -22.75
    8. '_ans' → logprob: -23.0
    9. '```' → logprob: -23.0
    10. 'a' → logprob: -23.25

Token 586: ''' (ID: 6)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08245909959077835
    2. ' =' → logprob: -2.5824592113494873
    3. '=max' → logprob: -5.707458972930908
    4. 'max' → logprob: -8.332459449768066
    5. 'if' → logprob: -14.332459449768066
    6. ' max' → logprob: -16.45745849609375
    7. '(max' → logprob: -16.58245849609375
    8. 's' → logprob: -16.58245849609375
    9. '＝' → logprob: -16.70745849609375
    10. 'ans' → logprob: -16.95745849609375

Token 587: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006747343111783266
    2. ' =' → logprob: -5.006747245788574
    3. '=max' → logprob: -10.381747245788574
    4. '   ' → logprob: -14.506747245788574
    5. 'max' → logprob: -14.881747245788574
    6. 'if' → logprob: -16.38174819946289
    7. 'ans' → logprob: -17.25674819946289
    8. '=
' → logprob: -19.25674819946289
    9. '=

' → logprob: -19.25674819946289
    10. '=int' → logprob: -19.38174819946289

Token 588: ' qu' (ID: 474)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.000574836041778326
    2. ' max' → logprob: -7.500575065612793
    3. 'ans' → logprob: -11.125575065612793
    4. '=max' → logprob: -12.000575065612793
    5. 'maximum' → logprob: -15.750575065612793
    6. '(max' → logprob: -15.875575065612793
    7. '```' → logprob: -15.875575065612793
    8. '	max' → logprob: -16.500574111938477
    9. ' ans' → logprob: -16.500574111938477
    10. '   ' → logprob: -16.625574111938477

Token 589: ''il' (ID: 14683)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5090044736862183
    2. ' ans' → logprob: -2.259004592895508
    3. '(ans' → logprob: -2.759004592895508
    4. ' =' → logprob: -3.259004592895508
    5. '=' → logprob: -3.259004592895508
    6. ''être' → logprob: -3.384004592895508
    7. '   ' → logprob: -3.759004592895508
    8. 'être' → logprob: -4.134004592895508
    9. ''elle' → logprob: -4.259004592895508
    10. '#' → logprob: -4.384004592895508

Token 590: ' garde' (ID: 65309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0902080088853836
    2. '=max' → logprob: -2.590208053588867
    3. ' =' → logprob: -4.965208053588867
    4. 'max' → logprob: -5.465208053588867
    5. 'ans' → logprob: -10.090208053588867
    6. '=min' → logprob: -13.590208053588867
    7. 'maximize' → logprob: -14.090208053588867
    8. ' max' → logprob: -14.090208053588867
    9. 'maximum' → logprob: -14.840208053588867
    10. 's' → logprob: -14.965208053588867

Token 591: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.008391520008444786
    2. 'la' → logprob: -5.008391380310059
    3. ' max' → logprob: -6.758391380310059
    4. 'le' → logprob: -8.633391380310059
    5. 's' → logprob: -9.133391380310059
    6. '(max' → logprob: -9.758391380310059
    7. ' la' → logprob: -9.758391380310059
    8. '=max' → logprob: -9.758391380310059
    9. 'l' → logprob: -11.008391380310059
    10. '[max' → logprob: -11.383391380310059

Token 592: ' plus' (ID: 2932)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0019305398454889655
    2. 'maximum' → logprob: -6.2519307136535645
    3. ' max' → logprob: -13.501930236816406
    4. 'ans' → logprob: -15.001930236816406
    5. ' maximum' → logprob: -16.126930236816406
    6. '```' → logprob: -16.501930236816406
    7. '=max' → logprob: -17.751930236816406
    8. '	max' → logprob: -17.876930236816406
    9. '(max' → logprob: -18.001930236816406
    10. '最大' → logprob: -18.501930236816406

Token 593: ' grande' (ID: 10094)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2830130457878113
    2. 'gr' → logprob: -2.158013105392456
    3. 'large' → logprob: -3.158013105392456
    4. 'grand' → logprob: -3.158013105392456
    5. ' grande' → logprob: -3.283013105392456
    6. 'ans' → logprob: -6.783012866973877
    7. '=max' → logprob: -6.908012866973877
    8. ' large' → logprob: -7.033012866973877
    9. 'b' → logprob: -7.283012866973877
    10. ' grandes' → logprob: -7.408012866973877

Token 594: ' valeur' (ID: 41664)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10750724375247955
    2. 'val' → logprob: -2.3575072288513184
    3. 's' → logprob: -6.482507228851318
    4. ' valeur' → logprob: -6.857507228851318
    5. '(ans' → logprob: -7.232507228851318
    6. 'value' → logprob: -7.232507228851318
    7. 'de' → logprob: -7.482507228851318
    8. 'if' → logprob: -7.482507228851318
    9. ' ans' → logprob: -7.732507228851318
    10. 'entre' → logprob: -7.732507228851318

Token 595: ' de' (ID: 334)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8041678667068481
    2. '   ' → logprob: -0.9291678667068481
    3. 'possible' → logprob: -2.3041677474975586
    4. 'entre' → logprob: -3.4291677474975586
    5. ' possible' → logprob: -5.054167747497559
    6. '(ans' → logprob: -5.054167747497559
    7. 'if' → logprob: -5.679167747497559
    8. 'max' → logprob: -6.054167747497559
    9. ' entre' → logprob: -6.804167747497559
    10. 's' → logprob: -6.804167747497559

Token 596: ' '' (ID: 461)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04381828382611275
    2. 's' → logprob: -3.168818235397339
    3. '(ans' → logprob: -7.293818473815918
    4. ' ans' → logprob: -9.668818473815918
    5. '```' → logprob: -11.168818473815918
    6. 'som' → logprob: -11.293818473815918
    7. '(s' → logprob: -11.293818473815918
    8. 'sou' → logprob: -11.918818473815918
    9. 'max' → logprob: -12.418818473815918
    10. '	ans' → logprob: -12.418818473815918

Token 597: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.16037634015083313
    2. 's' → logprob: -1.9103763103485107
    3. '(ans' → logprob: -9.91037654876709
    4. '```' → logprob: -10.41037654876709
    5. 'som' → logprob: -10.66037654876709
    6. ' ans' → logprob: -10.91037654876709
    7. 'sou' → logprob: -12.03537654876709
    8. 'anse' → logprob: -12.28537654876709
    9. '	ans' → logprob: -12.66037654876709
    10. 'sum' → logprob: -13.03537654876709

Token 598: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004324722103774548
    2. ' ,' → logprob: -6.254324913024902
    3. ',s' → logprob: -6.504324913024902
    4. 's' → logprob: -7.629324913024902
    5. ',max' → logprob: -8.129324913024902
    6. 'max' → logprob: -10.129324913024902
    7. ' et' → logprob: -10.754324913024902
    8. 'entre' → logprob: -11.504324913024902
    9. 'et' → logprob: -11.629324913024902
    10. '   ' → logprob: -11.879324913024902

Token 599: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039214685559272766
    2. 'max' → logprob: -4.539214611053467
    3. '   ' → logprob: -4.664214611053467
    4. 'if' → logprob: -5.789214611053467
    5. 'entre' → logprob: -5.789214611053467
    6. ',max' → logprob: -6.039214611053467
    7. 'et' → logprob: -6.164214611053467
    8. 's' → logprob: -6.414214611053467
    9. ' =' → logprob: -7.039214611053467
    10. ' et' → logprob: -7.164214611053467

Token 600: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.003653764259070158
    2. ' somme' → logprob: -5.628653526306152
    3. 'ans' → logprob: -11.378653526306152
    4. 'sou' → logprob: -11.378653526306152
    5. '```' → logprob: -11.628653526306152
    6. 'som' → logprob: -12.378653526306152
    7. 'sum' → logprob: -12.503653526306152
    8. '   ' → logprob: -12.753653526306152
    9. '(s' → logprob: -12.878653526306152
    10. ' soma' → logprob: -13.128653526306152

Token 601: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.641841820150148e-05
    2. ' somme' → logprob: -10.62502670288086
    3. '   ' → logprob: -14.25002670288086
    4. 'sum' → logprob: -14.62502670288086
    5. 'som' → logprob: -14.75002670288086
    6. '```' → logprob: -15.25002670288086
    7. 'sou' → logprob: -15.87502670288086
    8. ' ' → logprob: -16.87502670288086
    9. ' s' → logprob: -17.12502670288086
    10. '(s' → logprob: -17.50002670288086

Token 602: 'omme' (ID: 30420)
  Prédit: 'omme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omme' → logprob: -0.00033760786755010486
    2. 's' → logprob: -8.125337600708008
    3. 'ome' → logprob: -11.125337600708008
    4. 'om' → logprob: -11.750337600708008
    5. 'omm' → logprob: -12.125337600708008
    6. 'umme' → logprob: -12.125337600708008
    7. 'o' → logprob: -13.375337600708008
    8. '#' → logprob: -13.750337600708008
    9. 'onne' → logprob: -14.125337600708008
    10. 'ans' → logprob: -14.500337600708008

Token 603: ''.
' (ID: 49980)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.041083574295044
    2. '   ' → logprob: -1.166083574295044
    3. ',' → logprob: -2.166083574295044
    4. '=max' → logprob: -2.166083574295044
    5. '=' → logprob: -3.041083574295044
    6. ')' → logprob: -4.041083335876465
    7. 'max' → logprob: -4.041083335876465
    8. ' if' → logprob: -4.291083335876465
    9. 'if' → logprob: -5.791083335876465
    10. '(ans' → logprob: -6.791083335876465

Token 604: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3930862843990326
    2. '   ' → logprob: -1.143086314201355
    3. ' ans' → logprob: -5.1430864334106445
    4. '	ans' → logprob: -8.518086433410645
    5. '(ans' → logprob: -9.143086433410645
    6. 'if' → logprob: -10.643086433410645
    7. ' if' → logprob: -12.393086433410645
    8. '       ' → logprob: -12.518086433410645
    9. '  ' → logprob: -12.643086433410645
    10. '    
' → logprob: -12.768086433410645

Token 605: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.014433437027037144
    2. '   ' → logprob: -4.26443338394165
    3. ' ans' → logprob: -8.264433860778809
    4. '	ans' → logprob: -11.639433860778809
    5. '(ans' → logprob: -13.139433860778809
    6. 'if' → logprob: -13.639433860778809
    7. '  ' → logprob: -16.264432907104492
    8. ' ' → logprob: -16.264432907104492
    9. 'anst' → logprob: -16.389432907104492
    10. '_ans' → logprob: -16.389432907104492

Token 606: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01818072982132435
    2. ' =' → logprob: -4.018180847167969
    3. '=max' → logprob: -10.393180847167969
    4. 'max' → logprob: -16.39318084716797
    5. '＝' → logprob: -18.51818084716797
    6. '   ' → logprob: -19.64318084716797
    7. ' max' → logprob: -20.01818084716797
    8. '.=' → logprob: -20.76818084716797
    9. '=

' → logprob: -21.01818084716797
    10. ',max' → logprob: -21.14318084716797

Token 607: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.01814994215965271
    2. 'max' → logprob: -4.0181498527526855
    3. '	max' → logprob: -17.143150329589844
    4. '=max' → logprob: -17.393150329589844
    5. '(max' → logprob: -18.518150329589844
    6. ',max' → logprob: -20.143150329589844
    7. ' maxi' → logprob: -20.393150329589844
    8. ' ' → logprob: -20.518150329589844
    9. '[max' → logprob: -20.518150329589844
    10. ' ' → logprob: -20.643150329589844

Token 608: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -7.896309739408025e-07
    2. 'ans' → logprob: -14.250000953674316
    3. '(' → logprob: -17.25
    4. '(s' → logprob: -18.375
    5. '	ans' → logprob: -20.375
    6. '(an' → logprob: -22.0
    7. '```' → logprob: -22.125
    8. '(answer' → logprob: -22.25
    9. ' ans' → logprob: -23.125
    10. 'Ans' → logprob: -23.125

Token 609: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008899023523554206
    2. ',s' → logprob: -7.250889778137207
    3. ' ,' → logprob: -8.625889778137207
    4. 's' → logprob: -15.000889778137207
    5. ',
' → logprob: -16.000890731811523
    6. ',sum' → logprob: -18.000890731811523
    7. ',
' → logprob: -18.750890731811523
    8. '   ' → logprob: -18.875890731811523
    9. '，' → logprob: -20.625890731811523
    10. ',max' → logprob: -20.875890731811523

Token 610: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0024820810649544
    2. ' somme' → logprob: -6.002481937408447
    3. 'sum' → logprob: -12.127482414245605
    4. 'som' → logprob: -14.627482414245605
    5. 'sou' → logprob: -15.752482414245605
    6. '   ' → logprob: -15.877482414245605
    7. ' ' → logprob: -16.50248146057129
    8. ' sum' → logprob: -17.75248146057129
    9. '	s' → logprob: -18.00248146057129
    10. ' s' → logprob: -18.25248146057129

Token 611: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.723973582556937e-05
    2. ')
' → logprob: -11.500017166137695
    3. ' )' → logprob: -11.875017166137695
    4. '   ' → logprob: -16.250017166137695
    5. ')}' → logprob: -18.875017166137695
    6. ')

' → logprob: -18.875017166137695
    7. '))' → logprob: -19.125017166137695
    8. ')
' → logprob: -19.250017166137695
    9. ')`' → logprob: -19.250017166137695
    10. ' ' → logprob: -19.375017166137695

Token 612: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.125
    3. '```' → logprob: -18.0
    4. '
' → logprob: -20.625
    5. 'pr' → logprob: -21.25
    6. '#print' → logprob: -21.5
    7. '-print' → logprob: -21.5
    8. 'prin' → logprob: -22.75
    9. '.print' → logprob: -22.875
    10. '(print' → logprob: -23.25

Token 613: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.0
    3. '```' → logprob: -23.25
    4. '#print' → logprob: -24.625
    5. '
' → logprob: -25.0
    6. 'Print' → logprob: -26.0
    7. '-print' → logprob: -26.5
    8. '(print' → logprob: -26.75
    9. 'pr' → logprob: -26.875
    10. '#' → logprob: -27.375

Token 614: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002346488763578236
    2. ' print' → logprob: -8.375234603881836
    3. '#print' → logprob: -13.375234603881836
    4. '#' → logprob: -14.125234603881836
    5. 'pr' → logprob: -14.250234603881836
    6. '
' → logprob: -15.000234603881836
    7. 'prin' → logprob: -15.125234603881836
    8. '.print' → logprob: -15.250234603881836
    9. '(print' → logprob: -15.875234603881836
    10. '_print' → logprob: -16.750234603881836

Token 615: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0380416102707386
    2. 'ans' → logprob: -3.288041591644287
    3. ' ans' → logprob: -16.538042068481445
    4. 'print' → logprob: -18.038042068481445
    5. '	ans' → logprob: -18.788042068481445
    6. '(' → logprob: -19.413042068481445
    7. '_ans' → logprob: -21.163042068481445
    8. 'ANS' → logprob: -21.413042068481445
    9. 'Ans' → logprob: -22.038042068481445
    10. 'answer' → logprob: -22.413042068481445

Token 616: ' valeur' (ID: 41664)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.029752103611826897
    2. '(ans' → logprob: -3.529752016067505
    3. ' ans' → logprob: -14.029751777648926
    4. 'answer' → logprob: -14.404751777648926
    5. 'print' → logprob: -16.154752731323242
    6. '	ans' → logprob: -16.779752731323242
    7. '(' → logprob: -18.529752731323242
    8. 'ANS' → logprob: -19.029752731323242
    9. 'result' → logprob: -19.154752731323242
    10. '_ans' → logprob: -19.279752731323242

Token 617: ' de' (ID: 334)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0007231564959511161
    2. 'ans' → logprob: -7.250723361968994
    3. '(' → logprob: -11.250722885131836
    4. 'print' → logprob: -16.250722885131836
    5. '(
' → logprob: -16.875722885131836
    6. '(answer' → logprob: -18.625722885131836
    7. ' ans' → logprob: -19.250722885131836
    8. '(an' → logprob: -19.750722885131836
    9. '	ans' → logprob: -20.125722885131836
    10. '(

' → logprob: -20.625722885131836

Token 618: ' '' (ID: 461)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -9.162282367469743e-05
    2. '(ans' → logprob: -9.500091552734375
    3. ' ans' → logprob: -11.000091552734375
    4. '	ans' → logprob: -17.750091552734375
    5. 'answer' → logprob: -19.000091552734375
    6. 'ANS' → logprob: -20.000091552734375
    7. '```' → logprob: -20.000091552734375
    8. 'anst' → logprob: -20.375091552734375
    9. '_ans' → logprob: -20.625091552734375
    10. 'ann' → logprob: -20.875091552734375

Token 619: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -6.704273118884885e-07
    2. '(ans' → logprob: -14.250000953674316
    3. ' ans' → logprob: -19.0
    4. '	ans' → logprob: -21.375
    5. '```' → logprob: -23.25
    6. 'print' → logprob: -23.375
    7. 'a' → logprob: -23.875
    8. '`' → logprob: -23.875
    9. 'ANS' → logprob: -25.0
    10. 'anst' → logprob: -25.125

Token 620: '',' (ID: 787)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04430569335818291
    2. 'print' → logprob: -3.2943058013916016
    3. '(ans' → logprob: -5.294305801391602
    4. '(' → logprob: -7.544305801391602
    5. '()' → logprob: -7.794305801391602
    6. '(print' → logprob: -9.294305801391602
    7. ',' → logprob: -9.669305801391602
    8. ')
' → logprob: -9.794305801391602
    9. ' )' → logprob: -10.419305801391602
    10. 'ans' → logprob: -10.919305801391602

Token 621: ' c' (ID: 274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00015920029545668513
    2. 'ans' → logprob: -8.75015926361084
    3. ' print' → logprob: -14.50015926361084
    4. ')' → logprob: -15.87515926361084
    5. '(ans' → logprob: -17.750158309936523
    6. '```' → logprob: -17.875158309936523
    7. 'end' → logprob: -18.500158309936523
    8. ' ans' → logprob: -18.750158309936523
    9. '#print' → logprob: -19.000158309936523
    10. ')
' → logprob: -19.250158309936523

Token 622: ''est' (ID: 6616)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5935700535774231
    2. '```' → logprob: -1.8435699939727783
    3. 'ons' → logprob: -2.8435699939727783
    4. 'a' → logprob: -3.0935699939727783
    5. 'ont' → logprob: -3.0935699939727783
    6. '#' → logprob: -3.8435699939727783
    7. 'omme' → logprob: -3.9685699939727783
    8. '`' → logprob: -4.593570232391357
    9. 'omp' → logprob: -4.593570232391357
    10. ''est' → logprob: -4.593570232391357

Token 623: '-à' (ID: 56297)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.13395483791828156
    2. 'ans' → logprob: -2.1339547634124756
    3. '()' → logprob: -5.008955001831055
    4. '(' → logprob: -8.258955001831055
    5. ')' → logprob: -10.758955001831055
    6. '	ans' → logprob: -11.633955001831055
    7. 'a' → logprob: -11.883955001831055
    8. '```' → logprob: -12.008955001831055
    9. '("' → logprob: -12.758955001831055
    10. ' ans' → logprob: -12.883955001831055

Token 624: '-dire' (ID: 76064)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.45239681005477905
    2. '-dire' → logprob: -1.9523968696594238
    3. 'à' → logprob: -2.202396869659424
    4. 'l' → logprob: -2.952396869659424
    5. 'la' → logprob: -3.702396869659424
    6. '-à' → logprob: -4.577396869659424
    7. '#' → logprob: -5.202396869659424
    8. 'a' → logprob: -5.327396869659424
    9. '```' → logprob: -6.077396869659424
    10. '`' → logprob: -6.577396869659424

Token 625: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.005250006448477507
    2. '(ans' → logprob: -5.255249977111816
    3. 'la' → logprob: -11.380249977111816
    4. ' ans' → logprob: -12.380249977111816
    5. '	ans' → logprob: -15.005249977111816
    6. 'l' → logprob: -15.630249977111816
    7. 'le' → logprob: -16.630250930786133
    8. 'max' → logprob: -17.380250930786133
    9. 'answer' → logprob: -18.380250930786133
    10. 'print' → logprob: -18.755250930786133

Token 626: ' somme' (ID: 64484)
  Prédit: 'me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.09253966808319092
    2. 'ans' → logprob: -3.2175397872924805
    3. 'result' → logprob: -3.7175397872924805
    4. 'maximum' → logprob: -4.2175397872924805
    5. 'max' → logprob: -4.8425397872924805
    6. 'answer' → logprob: -7.5925397872924805
    7. 'print' → logprob: -8.09253978729248
    8. 'rés' → logprob: -8.34253978729248
    9. 'plus' → logprob: -9.34253978729248
    10. ' maximum' → logprob: -9.71753978729248

Token 627: ' maximale' (ID: 76380)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.04925212636590004
    2. 'print' → logprob: -3.0492520332336426
    3. 'ans' → logprob: -7.549252033233643
    4. '(print' → logprob: -9.5492525100708
    5. '(' → logprob: -9.6742525100708
    6. '(answer' → logprob: -12.9242525100708
    7. '#' → logprob: -14.9242525100708
    8. '```' → logprob: -15.4242525100708
    9. ' print' → logprob: -15.6742525100708
    10. '(max' → logprob: -15.6742525100708

Token 628: ' trouv' (ID: 40254)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6959986686706543
    2. '(ans' → logprob: -0.6959986686706543
    3. 'ans' → logprob: -6.320998668670654
    4. '(' → logprob: -7.195998668670654
    5. '(print' → logprob: -8.195999145507812
    6. '```' → logprob: -11.570999145507812
    7. '(
' → logprob: -11.945999145507812
    8. '()' → logprob: -12.695999145507812
    9. '(answer' → logprob: -13.320999145507812
    10. ' print' → logprob: -14.570999145507812

Token 629: 'ée' (ID: 2894)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.7334262132644653
    2. 'ée' → logprob: -1.6084262132644653
    3. 'e' → logprob: -1.7334262132644653
    4. 'ie' → logprob: -1.9834262132644653
    5. 'ee' → logprob: -6.233426094055176
    6. 'é' → logprob: -6.608426094055176
    7. ')' → logprob: -7.108426094055176
    8. 'print' → logprob: -8.108426094055176
    9. '#' → logprob: -8.233426094055176
    10. 'enue' → logprob: -8.733426094055176

Token 630: ' selon' (ID: 27571)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02074076235294342
    2. '(ans' → logprob: -4.020740985870361
    3. '(print' → logprob: -6.395740985870361
    4. '(' → logprob: -7.270740985870361
    5. ' print' → logprob: -9.145740509033203
    6. 'ans' → logprob: -10.145740509033203
    7. '()
' → logprob: -10.770740509033203
    8. '()' → logprob: -11.145740509033203
    9. '(
' → logprob: -11.270740509033203
    10. '
' → logprob: -11.645740509033203

Token 631: ' les' (ID: 1341)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.047828756272792816
    2. '()' → logprob: -4.172828674316406
    3. 'print' → logprob: -4.672828674316406
    4. '(ans' → logprob: -4.672828674316406
    5. 'les' → logprob: -5.672828674316406
    6. ' la' → logprob: -5.922828674316406
    7. 'l' → logprob: -6.297828674316406
    8. 'ans' → logprob: -6.797828674316406
    9. 'le' → logprob: -6.797828674316406
    10. '```' → logprob: -7.172828674316406

Token 632: ' critères' (ID: 105569)
  Prédit: ' critères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' critères' → logprob: -1.0338785648345947
    2. 'criter' → logprob: -1.6588785648345947
    3. 'instructions' → logprob: -2.0338785648345947
    4. 'conditions' → logprob: -2.2838785648345947
    5. 'criteria' → logprob: -3.0338785648345947
    6. ' instructions' → logprob: -3.0338785648345947
    7. 'sign' → logprob: -3.4088785648345947
    8. ' conditions' → logprob: -3.9088785648345947
    9. 'crit' → logprob: -4.658878326416016
    10. ' cons' → logprob: -5.033878326416016

Token 633: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0037604167591780424
    2. '(ans' → logprob: -5.75376033782959
    3. '(' → logprob: -7.87876033782959
    4. '(print' → logprob: -9.12876033782959
    5. 'ans' → logprob: -9.87876033782959
    6. '()' → logprob: -10.25376033782959
    7. ' print' → logprob: -12.75376033782959
    8. ')' → logprob: -13.25376033782959
    9. '```' → logprob: -13.62876033782959
    10. '(
' → logprob: -13.87876033782959

Token 634: ' problème' (ID: 35630)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.07540106773376465
    2. 'proble' → logprob: -3.7004010677337646
    3. 'programme' → logprob: -4.075401306152344
    4. 'problem' → logprob: -4.450401306152344
    5. 'code' → logprob: -4.450401306152344
    6. ' problème' → logprob: -5.325401306152344
    7. 'ex' → logprob: -7.200401306152344
    8. 'print' → logprob: -7.450401306152344
    9. 'calcul' → logprob: -7.575401306152344
    10. 'program' → logprob: -8.075401306152344

Token 635: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00195384887047112
    2. '
' → logprob: -6.251954078674316
    3. ' print' → logprob: -11.126954078674316
    4. '```' → logprob: -12.126954078674316
    5. ')
' → logprob: -12.501954078674316
    6. '
' → logprob: -14.876954078674316
    7. '  
' → logprob: -15.376954078674316
    8. ')' → logprob: -15.626954078674316
    9. '\n' → logprob: -16.251953125
    10. '``' → logprob: -16.376953125

Token 636: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.0
    3. ' print' → logprob: -20.5
    4. '``' → logprob: -23.25
    5. '
' → logprob: -25.625
    6. '`' → logprob: -25.875
    7. 'println' → logprob: -27.875
    8. '#print' → logprob: -28.0
    9. 'Print' → logprob: -28.625
    10. '-print' → logprob: -28.625

Token 637: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0009118211455643177
    2. '(' → logprob: -7.000911712646484
    3. '()' → logprob: -16.375911712646484
    4. 'ans' → logprob: -16.625911712646484
    5. ' (' → logprob: -16.625911712646484
    6. '(answer' → logprob: -16.750911712646484
    7. '(max' → logprob: -17.500911712646484
    8. '(
' → logprob: -17.875911712646484
    9. '(an' → logprob: -18.750911712646484
    10. '(abs' → logprob: -19.125911712646484

Token 638: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.75
    3. '))' → logprob: -16.5
    4. ')`' → logprob: -16.75
    5. '())' → logprob: -17.0
    6. '()' → logprob: -17.625
    7. ')
' → logprob: -19.375
    8. ')}' → logprob: -19.5
    9. ')#' → logprob: -20.125
    10. '')' → logprob: -20.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 636
Tokens correctement prédits (1ère position, stricte): 156
Tokens correctement prédits (1ère position, avec adaptation): 160
Tokens correctement prédits (top 10): 330
Précision stricte (1ère position): 24.53%
Précision adaptée (1ère position): 25.16%
Précision (top 10): 51.89%
================================================================================
