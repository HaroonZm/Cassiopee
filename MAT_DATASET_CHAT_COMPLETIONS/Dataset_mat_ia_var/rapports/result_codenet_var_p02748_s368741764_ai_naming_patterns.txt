================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:22:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
num_type_a, num_type_b, num_coupon = map(int, input().split())
price_type_a_list = list(map(int, input().split()))
price_type_b_list = list(map(int, input().split()))
coupon_info_list = [list(map(int, input().split())) for _ in range(num_coupon)]

min_price_no_coupon = min(price_type_a_list) + min(price_type_b_list)
price_combo_with_coupon_list = [
    price_type_a_list[coupon_a_idx-1] + price_type_b_list[coupon_b_idx-1] - coupon_discount
    for coupon_a_idx, coupon_b_idx, coupon_discount in coupon_info_list
]
min_price_with_coupon = min(price_combo_with_coupon_list) if price_combo_with_coupon_list else float('inf')
print(min(min_price_no_coupon, min_price_with_coupon))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'num' (ID: 4571)
  → Token d'amorce (pas de prédiction)

Token 1: '_type' (ID: 3804)
  → Token d'amorce (pas de prédiction)

Token 2: '_a' (ID: 10852)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.31308677792549133
    2. '[' → logprob: -1.688086748123169
    3. '=' → logprob: -2.938086748123169
    4. '+' → logprob: -4.313086986541748
    5. ' =' → logprob: -5.063086986541748
    6. '```' → logprob: -5.438086986541748
    7. '[]' → logprob: -6.813086986541748
    8. '.' → logprob: -7.313086986541748
    9. ')' → logprob: -7.438086986541748
    10. '*' → logprob: -7.563086986541748

Token 4: ' num' (ID: 2269)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42304152250289917
    2. '_' → logprob: -2.173041582107544
    3. '=' → logprob: -2.173041582107544
    4. 'num' → logprob: -2.673041582107544
    5. '_num' → logprob: -4.048041343688965
    6. ',num' → logprob: -4.798041343688965
    7. ':' → logprob: -5.173041343688965
    8. '```' → logprob: -5.173041343688965
    9. '_,' → logprob: -5.423041343688965
    10. '_type' → logprob: -6.798041343688965

Token 5: '_type' (ID: 3804)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006667770445346832
    2. ')' → logprob: -5.881667613983154
    3. ',' → logprob: -6.756667613983154
    4. '=' → logprob: -7.006667613983154
    5. ' =' → logprob: -8.131668090820312
    6. '[' → logprob: -8.381668090820312
    7. '_,' → logprob: -8.381668090820312
    8. ' _' → logprob: -8.631668090820312
    9. '```' → logprob: -8.631668090820312
    10. '.' → logprob: -9.006668090820312

Token 6: '_b' (ID: 1535)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.1707824319601059
    2. '_' → logprob: -2.2957823276519775
    3. '_b' → logprob: -3.6707823276519775
    4. 's' → logprob: -4.045782566070557
    5. '_a' → logprob: -4.420782566070557
    6. '```' → logprob: -7.045782566070557
    7. '_,' → logprob: -9.670782089233398
    8. ' _' → logprob: -10.170782089233398
    9. '_c' → logprob: -10.170782089233398
    10. ')' → logprob: -10.295782089233398

Token 7: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8859305381774902
    2. '_' → logprob: -0.8859305381774902
    3. '=' → logprob: -2.0109305381774902
    4. '```' → logprob: -3.5109305381774902
    5. '<|end|>' → logprob: -5.76093053817749
    6. ' =' → logprob: -5.88593053817749
    7. '_,' → logprob: -6.13593053817749
    8. '+' → logprob: -6.76093053817749
    9. ')' → logprob: -7.38593053817749
    10. '*' → logprob: -8.635931015014648

Token 8: ' num' (ID: 2269)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6974502801895142
    2. ',' → logprob: -0.8224502801895142
    3. 'num' → logprob: -4.072450160980225
    4. '_' → logprob: -4.322450160980225
    5. ',num' → logprob: -4.697450160980225
    6. ' =' → logprob: -4.822450160980225
    7. '```' → logprob: -5.322450160980225
    8. '_num' → logprob: -5.447450160980225
    9. ')' → logprob: -6.822450160980225
    10. ' ' → logprob: -7.197450160980225

Token 9: '_coupon' (ID: 197395)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003919530194252729
    2. '=' → logprob: -5.87891960144043
    3. ' =' → logprob: -7.50391960144043
    4. ')' → logprob: -8.75391960144043
    5. ' _' → logprob: -9.25391960144043
    6. '_=' → logprob: -9.25391960144043
    7. '```' → logprob: -9.75391960144043
    8. ',' → logprob: -10.62891960144043
    9. '[' → logprob: -10.62891960144043
    10. '_a' → logprob: -10.75391960144043

Token 10: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12680692970752716
    2. '=' → logprob: -2.5018069744110107
    3. ',' → logprob: -4.251806735992432
    4. '```' → logprob: -4.376806735992432
    5. ' =' → logprob: -5.626806735992432
    6. ')' → logprob: -6.126806735992432
    7. '+' → logprob: -6.251806735992432
    8. '*' → logprob: -7.001806735992432
    9. '**' → logprob: -8.00180721282959
    10. '_,' → logprob: -8.50180721282959

Token 11: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4786394238471985
    2. '0' → logprob: -0.9786394238471985
    3. ' map' → logprob: -5.728639602661133
    4. 'map' → logprob: -7.228639602661133
    5. ' [' → logprob: -8.478639602661133
    6. 'num' → logprob: -9.103639602661133
    7. '[' → logprob: -9.353639602661133
    8. ' num' → logprob: -10.103639602661133
    9. '10' → logprob: -10.353639602661133
    10. ' (' → logprob: -10.853639602661133

Token 12: '(int' (ID: 2742)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 13: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.703937292098999
    2. '(input' → logprob: -1.328937292098999
    3. ')' → logprob: -2.078937292098999
    4. '(user' → logprob: -2.453937292098999
    5. '(num' → logprob: -5.328937530517578
    6. '('' → logprob: -5.328937530517578
    7. '(int' → logprob: -6.203937530517578
    8. '(range' → logprob: -6.328937530517578
    9. '<|end|>' → logprob: -6.328937530517578
    10. '(raw' → logprob: -6.828937530517578

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12693408131599426
    2. ' input' → logprob: -2.126934051513672
    3. '(input' → logprob: -12.626934051513672
    4. ')' → logprob: -13.126934051513672
    5. ',input' → logprob: -15.376934051513672
    6. '<input' → logprob: -15.876934051513672
    7. '=input' → logprob: -16.376934051513672
    8. '	input' → logprob: -16.501934051513672
    9. '```' → logprob: -16.751934051513672
    10. ' ' → logprob: -17.001934051513672

Token 15: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8667891025543213
    2. '())' → logprob: -1.4917891025543213
    3. '(' → logprob: -1.8667891025543213
    4. ')' → logprob: -1.9917891025543213
    5. '(()' → logprob: -3.7417891025543213
    6. '().' → logprob: -4.616788864135742
    7. '('' → logprob: -5.491788864135742
    8. '<|end|>' → logprob: -5.616788864135742
    9. '();)' → logprob: -5.866788864135742
    10. '());' → logprob: -6.366788864135742

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00012570773833431304
    2. 'strip' → logprob: -9.000125885009766
    3. 'rstrip' → logprob: -13.750125885009766
    4. ' split' → logprob: -14.250125885009766
    5. ')' → logprob: -15.500125885009766
    6. '(split' → logprob: -15.625125885009766
    7. 'read' → logprob: -16.625125885009766
    8. 'spl' → logprob: -16.875125885009766
    9. 'startswith' → logprob: -17.625125885009766
    10. '```' → logprob: -17.750125885009766

Token 17: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1931469589471817
    2. ')' → logprob: -1.8181469440460205
    3. '()' → logprob: -4.4431471824646
    4. '(' → logprob: -7.3181471824646
    5. '`)' → logprob: -7.8181471824646
    6. '))' → logprob: -8.818146705627441
    7. '('' → logprob: -9.443146705627441
    8. '()))' → logprob: -9.443146705627441
    9. '`()' → logprob: -10.193146705627441
    10. ' ())' → logprob: -10.693146705627441

Token 18: 'price' (ID: 7629)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.638910174369812
    2. 'if' → logprob: -1.638910174369812
    3. '\n' → logprob: -1.638910174369812
    4. '#' → logprob: -2.8889102935791016
    5. '```' → logprob: -2.8889102935791016
    6. '<|end|>' → logprob: -2.8889102935791016
    7. '+' → logprob: -3.1389102935791016
    8. 'num' → logprob: -3.3889102935791016
    9. ')' → logprob: -3.6389102935791016
    10. 'for' → logprob: -3.6389102935791016

Token 19: '_type' (ID: 3804)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0452306866645813
    2. 's' → logprob: -3.2952306270599365
    3. '_' → logprob: -6.045230865478516
    4. ')' → logprob: -6.170230865478516
    5. '[s' → logprob: -6.420230865478516
    6. '[]' → logprob: -8.670230865478516
    7. '(' → logprob: -8.920230865478516
    8. '```' → logprob: -9.170230865478516
    9. '_s' → logprob: -9.295230865478516
    10. '=' → logprob: -10.045230865478516

Token 20: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.023352161049842834
    2. '_' → logprob: -3.7733521461486816
    3. '_s' → logprob: -10.14835262298584
    4. 's' → logprob: -10.39835262298584
    5. '```' → logprob: -11.64835262298584
    6. 'a' → logprob: -11.89835262298584
    7. '_b' → logprob: -12.14835262298584
    8. ' _' → logprob: -12.27335262298584
    9. '_A' → logprob: -12.52335262298584
    10. '"_' → logprob: -14.14835262298584

Token 21: '_list' (ID: 4162)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.37962058186531067
    2. ')' → logprob: -1.2546205520629883
    3. ',' → logprob: -4.629620552062988
    4. '*' → logprob: -4.754620552062988
    5. '_' → logprob: -6.004620552062988
    6. ']' → logprob: -6.879620552062988
    7. ' ' → logprob: -6.879620552062988
    8. '<|end|>' → logprob: -6.879620552062988
    9. '_prices' → logprob: -7.004620552062988
    10. '_price' → logprob: -7.254620552062988

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31031396985054016
    2. '=' → logprob: -1.4353139400482178
    3. '[' → logprob: -4.685314178466797
    4. '.' → logprob: -4.935314178466797
    5. '.append' → logprob: -5.435314178466797
    6. ',' → logprob: -6.060314178466797
    7. ')' → logprob: -6.185314178466797
    8. '[:]' → logprob: -6.560314178466797
    9. '=[]' → logprob: -7.310314178466797
    10. '<|end|>' → logprob: -7.810314178466797

Token 23: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.17458340525627136
    2. ' list' → logprob: -1.9245834350585938
    3. '[]' → logprob: -4.799583435058594
    4. '[list' → logprob: -5.924583435058594
    5. ' []' → logprob: -6.174583435058594
    6. ' [' → logprob: -7.174583435058594
    7. '[' → logprob: -7.674583435058594
    8. 'map' → logprob: -11.549583435058594
    9. '[int' → logprob: -11.674583435058594
    10. '[input' → logprob: -12.174583435058594

Token 24: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6358480453491211
    2. '(map' → logprob: -0.8858480453491211
    3. '(int' → logprob: -2.885848045349121
    4. '(input' → logprob: -7.260848045349121
    5. '(range' → logprob: -7.260848045349121
    6. '()' → logprob: -8.135848045349121
    7. '(filter' → logprob: -8.885848045349121
    8. '(eval' → logprob: -9.135848045349121
    9. '(
' → logprob: -9.760848045349121
    10. '(

' → logprob: -9.885848045349121

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00017982252757064998
    2. '(' → logprob: -8.7501802444458
    3. 'int' → logprob: -11.6251802444458
    4. '<int' → logprob: -11.6251802444458
    5. '=int' → logprob: -13.3751802444458
    6. '[int' → logprob: -14.3751802444458
    7. '```' → logprob: -15.1251802444458
    8. ',int' → logprob: -15.1251802444458
    9. '(
' → logprob: -15.3751802444458
    10. ' (' → logprob: -16.000179290771484

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42310190200805664
    2. ',input' → logprob: -1.2981019020080566
    3. '(input' → logprob: -2.6731019020080566
    4. '(' → logprob: -6.298101902008057
    5. 'input' → logprob: -7.173101902008057
    6. '(),' → logprob: -8.298101425170898
    7. ' ,' → logprob: -11.048101425170898
    8. '),' → logprob: -11.548101425170898
    9. ' input' → logprob: -12.798101425170898
    10. '```' → logprob: -12.798101425170898

Token 27: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10020763427019119
    2. ' input' → logprob: -2.350207567214966
    3. '	input' → logprob: -15.350207328796387
    4. '(input' → logprob: -15.600207328796387
    5. ',input' → logprob: -15.600207328796387
    6. ' ' → logprob: -15.850207328796387
    7. '=input' → logprob: -16.225208282470703
    8. '<input' → logprob: -16.350208282470703
    9. '[input' → logprob: -16.975208282470703
    10. '_input' → logprob: -18.350208282470703

Token 28: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008678716840222478
    2. '()' → logprob: -7.12586784362793
    3. '()))' → logprob: -10.75086784362793
    4. '())' → logprob: -10.87586784362793
    5. '()).' → logprob: -11.87586784362793
    6. '()));' → logprob: -12.75086784362793
    7. '())).' → logprob: -13.25086784362793
    8. '()),' → logprob: -13.37586784362793
    9. '()>' → logprob: -13.50086784362793
    10. '().__' → logprob: -13.62586784362793

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.173704271830502e-06
    2. 'strip' → logprob: -12.75000286102295
    3. ' split' → logprob: -15.87500286102295
    4. 'rstrip' → logprob: -17.000003814697266
    5. '(split' → logprob: -18.125003814697266
    6. 'spl' → logprob: -19.000003814697266
    7. ')' → logprob: -20.500003814697266
    8. '.split' → logprob: -21.625003814697266
    9. 's' → logprob: -22.625003814697266
    10. 'plit' → logprob: -22.750003814697266

Token 30: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.060600608587265015
    2. '())' → logprob: -3.560600519180298
    3. '))' → logprob: -3.685600519180298
    4. '()' → logprob: -5.560600757598877
    5. ')' → logprob: -6.685600757598877
    6. '(' → logprob: -8.935600280761719
    7. '()))
' → logprob: -11.185600280761719
    8. '()),' → logprob: -11.310600280761719
    9. '()));' → logprob: -11.310600280761719
    10. '()))

' → logprob: -12.060600280761719

Token 31: 'price' (ID: 7629)
  Prédit: 'price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.2286052703857422
    2. 'num' → logprob: -1.6036052703857422
    3. 'for' → logprob: -6.728605270385742
    4. 'count' → logprob: -7.728605270385742
    5. 'total' → logprob: -8.353605270385742
    6. ' price' → logprob: -8.478605270385742
    7. 'if' → logprob: -8.603605270385742
    8. 'coupon' → logprob: -8.603605270385742
    9. 'prices' → logprob: -8.853605270385742
    10. '```' → logprob: -8.978605270385742

Token 32: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -6.790129555156454e-05
    2. '_' → logprob: -10.875067710876465
    3. '_typ' → logprob: -11.625067710876465
    4. '_types' → logprob: -11.750067710876465
    5. ')_' → logprob: -11.875067710876465
    6. '```' → logprob: -12.000067710876465
    7. 'Type' → logprob: -13.250067710876465
    8. 'type' → logprob: -13.875067710876465
    9. '_tipo' → logprob: -14.000067710876465
    10. '_price' → logprob: -14.125067710876465

Token 33: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.01429783832281828
    2. '_b' → logprob: -4.264297962188721
    3. '_c' → logprob: -10.014297485351562
    4. '_' → logprob: -10.139297485351562
    5. '```' → logprob: -10.764297485351562
    6. '_s' → logprob: -11.514297485351562
    7. 'a' → logprob: -12.514297485351562
    8. ' _' → logprob: -12.764297485351562
    9. '_f' → logprob: -12.889297485351562
    10. '"_' → logprob: -13.014297485351562

Token 34: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.001462619286030531
    2. '_lst' → logprob: -6.751462459564209
    3. ')_' → logprob: -9.501462936401367
    4. '_s' → logprob: -10.376462936401367
    5. '_lists' → logprob: -10.376462936401367
    6. '_li' → logprob: -10.626462936401367
    7. '_lista' → logprob: -10.751462936401367
    8. '_ls' → logprob: -11.126462936401367
    9. ' _' → logprob: -11.626462936401367
    10. '_' → logprob: -11.626462936401367

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062334008514881134
    2. '=' → logprob: -2.8123340606689453
    3. ')' → logprob: -8.062334060668945
    4. ')=' → logprob: -11.687334060668945
    5. '_' → logprob: -11.812334060668945
    6. '.' → logprob: -12.062334060668945
    7. '[' → logprob: -12.187334060668945
    8. '(' → logprob: -12.437334060668945
    9. '.append' → logprob: -12.562334060668945
    10. '<|end|>' → logprob: -12.937334060668945

Token 36: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2016357183456421
    2. ' list' → logprob: -1.701635718345642
    3. 'map' → logprob: -8.701635360717773
    4. ' map' → logprob: -10.076635360717773
    5. '(list' → logprob: -11.201635360717773
    6. '(map' → logprob: -15.451635360717773
    7. 'int' → logprob: -16.326635360717773
    8. 'List' → logprob: -17.326635360717773
    9. '(' → logprob: -17.451635360717773
    10. '	list' → logprob: -18.326635360717773

Token 37: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06745967268943787
    2. '(map' → logprob: -3.3174595832824707
    3. '(price' → logprob: -3.8174595832824707
    4. '(list' → logprob: -6.317459583282471
    5. '(int' → logprob: -6.317459583282471
    6. '(lambda' → logprob: -6.692459583282471
    7. '((' → logprob: -7.567459583282471
    8. '(
' → logprob: -8.942460060119629
    9. '(.' → logprob: -9.067460060119629
    10. '(

' → logprob: -9.192460060119629

Token 38: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.5570885807392187e-05
    2. 'int' → logprob: -12.000015258789062
    3. ' (' → logprob: -12.625015258789062
    4. '(' → logprob: -12.750015258789062
    5. '<int' → logprob: -13.125015258789062
    6. '=int' → logprob: -14.750015258789062
    7. '[int' → logprob: -14.875015258789062
    8. ',int' → logprob: -15.750015258789062
    9. '```' → logprob: -16.000015258789062
    10. ' int' → logprob: -16.125015258789062

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022990626748651266
    2. ',input' → logprob: -6.752298831939697
    3. ',int' → logprob: -7.002298831939697
    4. '(int' → logprob: -9.002299308776855
    5. ' ,' → logprob: -10.502299308776855
    6. 'int' → logprob: -10.877299308776855
    7. '(input' → logprob: -10.877299308776855
    8. '(),' → logprob: -11.752299308776855
    9. '```' → logprob: -11.752299308776855
    10. '`,' → logprob: -12.127299308776855

Token 40: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.697622537612915
    2. 'input' → logprob: -0.697622537612915
    3. ' input' → logprob: -5.572622299194336
    4. ' int' → logprob: -7.322622299194336
    5. '(int' → logprob: -12.947622299194336
    6. '(input' → logprob: -13.697622299194336
    7. '[int' → logprob: -14.822622299194336
    8. '<int' → logprob: -15.947622299194336
    9. ',int' → logprob: -15.947622299194336
    10. '<input' → logprob: -16.072622299194336

Token 41: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.226628895296017e-06
    2. '()' → logprob: -12.000007629394531
    3. '.' → logprob: -14.250007629394531
    4. ' ().' → logprob: -15.500007629394531
    5. '(' → logprob: -16.87500762939453
    6. ' .' → logprob: -18.37500762939453
    7. '().__' → logprob: -18.37500762939453
    8. '(.' → logprob: -18.87500762939453
    9. '```' → logprob: -19.25000762939453
    10. '()[' → logprob: -20.12500762939453

Token 42: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. '(split' → logprob: -15.500000953674316
    3. 'spl' → logprob: -15.875000953674316
    4. ' split' → logprob: -16.5
    5. 'strip' → logprob: -16.5
    6. ')' → logprob: -17.0
    7. 'input' → logprob: -17.375
    8. '```' → logprob: -17.5
    9. '.split' → logprob: -18.125
    10. 'read' → logprob: -18.625

Token 43: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.05573614686727524
    2. '())' → logprob: -3.5557360649108887
    3. '))' → logprob: -3.9307360649108887
    4. '()' → logprob: -5.305736064910889
    5. ')' → logprob: -7.555736064910889
    6. '()))
' → logprob: -7.680736064910889
    7. '(' → logprob: -10.805736541748047
    8. '()))

' → logprob: -11.180736541748047
    9. '()));' → logprob: -11.180736541748047
    10. '())
' → logprob: -12.180736541748047

Token 44: 'coupon' (ID: 81500)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.8642851710319519
    2. 'total' → logprob: -1.8642852306365967
    3. 'min' → logprob: -2.6142852306365967
    4. 'discount' → logprob: -2.6142852306365967
    5. 'result' → logprob: -2.8642852306365967
    6. 'coupon' → logprob: -2.9892852306365967
    7. 'for' → logprob: -3.4892852306365967
    8. 'sum' → logprob: -4.239284992218018
    9. 'answer' → logprob: -4.364284992218018
    10. 'max' → logprob: -4.364284992218018

Token 45: '_info' (ID: 6744)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5764572024345398
    2. '_s' → logprob: -1.2014572620391846
    3. '_list' → logprob: -3.0764572620391846
    4. '_' → logprob: -3.9514572620391846
    5. '_type' → logprob: -4.2014570236206055
    6. '_price' → logprob: -4.3264570236206055
    7. '_discount' → logprob: -4.4514570236206055
    8. '_prices' → logprob: -4.8264570236206055
    9. '_use' → logprob: -5.4514570236206055
    10. '_counts' → logprob: -5.9514570236206055

Token 46: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6173579096794128
    2. ' =' → logprob: -1.2423579692840576
    3. '_list' → logprob: -2.2423579692840576
    4. '=' → logprob: -3.1173579692840576
    5. '[' → logprob: -4.6173577308654785
    6. '_s' → logprob: -5.1173577308654785
    7. '_' → logprob: -5.9923577308654785
    8. ')' → logprob: -6.1173577308654785
    9. '[]' → logprob: -8.117358207702637
    10. '=[]' → logprob: -9.867358207702637

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011181510984897614
    2. '=' → logprob: -4.511181354522705
    3. '_' → logprob: -9.886181831359863
    4. '[' → logprob: -10.636181831359863
    5. 's' → logprob: -10.886181831359863
    6. ')' → logprob: -10.886181831359863
    7. '<|end|>' → logprob: -12.386181831359863
    8. '.' → logprob: -12.886181831359863
    9. '[]' → logprob: -13.011181831359863
    10. '(' → logprob: -13.511181831359863

Token 48: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.11519233137369156
    2. '[' → logprob: -3.365192413330078
    3. 'list' → logprob: -3.490192413330078
    4. ' [' → logprob: -3.740192413330078
    5. ' list' → logprob: -4.615192413330078
    6. '[]' → logprob: -5.240192413330078
    7. ' []' → logprob: -6.115192413330078
    8. '[int' → logprob: -6.865192413330078
    9. '[input' → logprob: -7.365192413330078
    10. '[List' → logprob: -8.865192413330078

Token 49: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.11645437777042389
    2. 'map' → logprob: -2.3664543628692627
    3. 'tuple' → logprob: -4.241454601287842
    4. ' list' → logprob: -6.991454601287842
    5. 'int' → logprob: -8.366454124450684
    6. ']' → logprob: -8.741454124450684
    7. ' map' → logprob: -8.991454124450684
    8. ' tuple' → logprob: -9.241454124450684
    9. ')' → logprob: -10.116454124450684
    10. 'dict' → logprob: -10.616454124450684

Token 50: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -6.146429223008454e-05
    2. 'map' → logprob: -10.37506103515625
    3. '(' → logprob: -10.50006103515625
    4. '(int' → logprob: -13.37506103515625
    5. ' map' → logprob: -15.00006103515625
    6. ',map' → logprob: -15.00006103515625
    7. '	map' → logprob: -15.75006103515625
    8. '()' → logprob: -16.25006103515625
    9. '(
' → logprob: -16.25006103515625
    10. ' (' → logprob: -16.75006103515625

Token 51: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005855550989508629
    2. 'int' → logprob: -5.255855560302734
    3. ',int' → logprob: -8.255855560302734
    4. '[int' → logprob: -8.755855560302734
    5. '<int' → logprob: -9.255855560302734
    6. ']int' → logprob: -10.130855560302734
    7. '=int' → logprob: -10.505855560302734
    8. ')' → logprob: -11.130855560302734
    9. ' int' → logprob: -11.130855560302734
    10. '```' → logprob: -12.505855560302734

Token 52: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.565007209777832
    2. ',' → logprob: -1.440007209777832
    3. '(input' → logprob: -1.690007209777832
    4. 'input' → logprob: -4.690007209777832
    5. ')' → logprob: -7.565007209777832
    6. ' input' → logprob: -9.190007209777832
    7. ',int' → logprob: -9.315007209777832
    8. '(' → logprob: -9.440007209777832
    9. '=input' → logprob: -9.690007209777832
    10. '),' → logprob: -10.190007209777832

Token 53: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.038043782114982605
    2. ' input' → logprob: -3.288043737411499
    3. ',input' → logprob: -13.913043975830078
    4. ')' → logprob: -14.413043975830078
    5. '(input' → logprob: -15.038043975830078
    6. ' ' → logprob: -15.788043975830078
    7. ',' → logprob: -15.913043975830078
    8. '	input' → logprob: -16.663043975830078
    9. '=input' → logprob: -16.913043975830078
    10. '<input' → logprob: -16.913043975830078

Token 54: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.786196975852363e-05
    2. '()' → logprob: -10.250038146972656
    3. '.' → logprob: -14.125038146972656
    4. ' ().' → logprob: -14.250038146972656
    5. '(' → logprob: -15.625038146972656
    6. ')' → logprob: -15.875038146972656
    7. '().__' → logprob: -16.125038146972656
    8. '))' → logprob: -16.125038146972656
    9. '[].' → logprob: -16.125038146972656
    10. '()))' → logprob: -16.500038146972656

Token 55: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.054500666621607e-06
    2. 'strip' → logprob: -12.87500286102295
    3. ' split' → logprob: -15.12500286102295
    4. 'rstrip' → logprob: -15.50000286102295
    5. '(split' → logprob: -16.375003814697266
    6. 'spl' → logprob: -18.375003814697266
    7. ')' → logprob: -18.625003814697266
    8. 'read' → logprob: -18.875003814697266
    9. '.split' → logprob: -21.000003814697266
    10. '```' → logprob: -21.250003814697266

Token 56: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0036695559974759817
    2. '()' → logprob: -6.003669738769531
    3. '())' → logprob: -7.503669738769531
    4. '))' → logprob: -7.503669738769531
    5. '()))
' → logprob: -10.253669738769531
    6. '())).' → logprob: -11.003669738769531
    7. '()));' → logprob: -11.128669738769531
    8. '())))' → logprob: -11.628669738769531
    9. '()),' → logprob: -12.503669738769531
    10. '()))

' → logprob: -13.003669738769531

Token 57: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1749870628118515
    2. ')' → logprob: -2.9249870777130127
    3. 'for' → logprob: -3.1749870777130127
    4. '(' → logprob: -3.4249870777130127
    5. '()]' → logprob: -4.049986839294434
    6. ' for' → logprob: -4.799986839294434
    7. '())' → logprob: -5.674986839294434
    8. ']' → logprob: -6.424986839294434
    9. ')]' → logprob: -6.549986839294434
    10. '(i' → logprob: -9.299986839294434

Token 58: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7272005677223206
    2. ' range' → logprob: -0.7272005677223206
    3. 'range' → logprob: -4.352200508117676
    4. ' _' → logprob: -4.352200508117676
    5. '_range' → logprob: -5.227200508117676
    6. '(' → logprob: -7.102200508117676
    7. '(range' → logprob: -7.102200508117676
    8. ' in' → logprob: -7.977200508117676
    9. ' ' → logprob: -8.102200508117676
    10. ' i' → logprob: -10.227200508117676

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0395025871694088
    2. 'in' → logprob: -3.2895026206970215
    3. 'range' → logprob: -6.7895026206970215
    4. ' range' → logprob: -8.039502143859863
    5. ' ' → logprob: -12.164502143859863
    6. '_' → logprob: -12.789502143859863
    7. 's' → logprob: -13.914502143859863
    8. '<|end|>' → logprob: -14.914502143859863
    9. ')' → logprob: -15.289502143859863
    10. '  ' → logprob: -15.289502143859863

Token 60: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003177952254191041
    2. ' range' → logprob: -5.753178119659424
    3. '	range' → logprob: -15.628177642822266
    4. '(range' → logprob: -16.878177642822266
    5. ' ' → logprob: -17.253177642822266
    6. 'r' → logprob: -17.378177642822266
    7. '  ' → logprob: -17.628177642822266
    8. '   ' → logprob: -18.628177642822266
    9. '[' → logprob: -18.628177642822266
    10. 'rang' → logprob: -18.753177642822266

Token 61: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.00039111197111196816
    2. '(' → logprob: -7.875391006469727
    3. ' (' → logprob: -11.625391006469727
    4. '(n' → logprob: -13.500391006469727
    5. '(
' → logprob: -15.750391006469727
    6. '(len' → logprob: -15.875391006469727
    7. '(int' → logprob: -16.625391006469727
    8. '(number' → logprob: -16.625391006469727
    9. 'num' → logprob: -16.625391006469727
    10. '(c' → logprob: -16.750391006469727

Token 62: '_coupon' (ID: 197395)
  Prédit: '_coupon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coupon' → logprob: -8.923874702304602e-05
    2. '_type' → logprob: -9.500089645385742
    3. '_' → logprob: -12.250089645385742
    4. 'coupon' → logprob: -12.500089645385742
    5. '_c' → logprob: -12.625089645385742
    6. '_num' → logprob: -14.125089645385742
    7. '_discount' → logprob: -14.750089645385742
    8. '(c' → logprob: -15.250089645385742
    9. 'Coupon' → logprob: -15.500089645385742
    10. '(' → logprob: -16.500089645385742

Token 63: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00012070851516909897
    2. ')' → logprob: -9.250121116638184
    3. ']' → logprob: -10.750121116638184
    4. ')])' → logprob: -13.375121116638184
    5. '])]' → logprob: -15.000121116638184
    6. ' )' → logprob: -15.000121116638184
    7. '))' → logprob: -15.375121116638184
    8. ')],' → logprob: -15.500121116638184
    9. '')]' → logprob: -15.875121116638184
    10. ')]
' → logprob: -16.000120162963867

Token 64: 'min' (ID: 1493)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.0717118978500366
    2. 'result' → logprob: -1.8217118978500366
    3. 'max' → logprob: -2.071712017059326
    4. 'min' → logprob: -2.446712017059326
    5. 'discount' → logprob: -2.821712017059326
    6. 'num' → logprob: -3.321712017059326
    7. 'best' → logprob: -3.446712017059326
    8. '#' → logprob: -3.821712017059326
    9. 'dp' → logprob: -3.821712017059326
    10. 'sorted' → logprob: -3.946712017059326

Token 65: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.4339175522327423
    2. '_' → logprob: -1.05891752243042
    3. '_prices' → logprob: -5.80891752243042
    4. '_total' → logprob: -6.80891752243042
    5. '_sum' → logprob: -8.183917999267578
    6. '_cost' → logprob: -8.683917999267578
    7. '_val' → logprob: -8.933917999267578
    8. '_p' → logprob: -9.058917999267578
    9. '_value' → logprob: -9.308917999267578
    10. '(' → logprob: -9.683917999267578

Token 66: '_no' (ID: 13575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.012748016975820065
    2. 's' → logprob: -5.0127482414245605
    3. ' =' → logprob: -5.6377482414245605
    4. '=' → logprob: -7.1377482414245605
    5. '(' → logprob: -7.6377482414245605
    6. '_price' → logprob: -8.387747764587402
    7. '_=' → logprob: -8.637747764587402
    8. '_sum' → logprob: -9.137747764587402
    9. '_a' → logprob: -9.387747764587402
    10. '_s' → logprob: -9.762747764587402

Token 67: '_coupon' (ID: 197395)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03416530042886734
    2. '_coupon' → logprob: -3.784165382385254
    3. '_discount' → logprob: -4.909165382385254
    4. '_use' → logprob: -6.284165382385254
    5. '_purchase' → logprob: -8.159165382385254
    6. '_space' → logprob: -8.659165382385254
    7. '_change' → logprob: -9.034165382385254
    8. '_cut' → logprob: -9.159165382385254
    9. '_w' → logprob: -9.284165382385254
    10. ' =' → logprob: -9.284165382385254

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04974677786231041
    2. '=' → logprob: -3.0497467517852783
    3. '_' → logprob: -6.924746990203857
    4. ' ' → logprob: -9.1747465133667
    5. ',' → logprob: -10.5497465133667
    6. 's' → logprob: -10.7997465133667
    7. '_=' → logprob: -12.1747465133667
    8. '_space' → logprob: -12.6747465133667
    9. ')' → logprob: -12.7997465133667
    10. ' _' → logprob: -12.9247465133667

Token 69: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.416429340839386
    2. ' min' → logprob: -1.5414292812347412
    3. 'sum' → logprob: -2.166429281234741
    4. ' sum' → logprob: -4.54142951965332
    5. 'float' → logprob: -7.91642951965332
    6. '(min' → logprob: -8.29142951965332
    7. 'max' → logprob: -8.79142951965332
    8. '[min' → logprob: -9.16642951965332
    9. 'price' → logprob: -9.29142951965332
    10. ' float' → logprob: -9.29142951965332

Token 70: '(price' (ID: 81279)
  Prédit: '(price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(price' → logprob: -0.008704513311386108
    2. '(' → logprob: -4.758704662322998
    3. '(min' → logprob: -9.75870418548584
    4. 'price' → logprob: -11.13370418548584
    5. '(pr' → logprob: -11.75870418548584
    6. '(max' → logprob: -12.88370418548584
    7. '(
' → logprob: -13.25870418548584
    8. '(type' → logprob: -13.38370418548584
    9. '()' → logprob: -13.63370418548584
    10. '((' → logprob: -14.63370418548584

Token 71: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -8.554343366995454e-05
    2. '_price' → logprob: -9.375085830688477
    3. '_' → logprob: -14.500085830688477
    4. ')_' → logprob: -16.750085830688477
    5. '```' → logprob: -17.500085830688477
    6. ' _' → logprob: -17.875085830688477
    7. ')' → logprob: -18.000085830688477
    8. 'type' → logprob: -18.375085830688477
    9. '_ty' → logprob: -18.625085830688477
    10. '_value' → logprob: -19.500085830688477

Token 72: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -9.317247167928144e-05
    2. 'a' → logprob: -9.875093460083008
    3. '_b' → logprob: -10.500093460083008
    4. '_type' → logprob: -11.250093460083008
    5. '_' → logprob: -14.750093460083008
    6. '_price' → logprob: -15.250093460083008
    7. ')_' → logprob: -15.875093460083008
    8. ')' → logprob: -16.500093460083008
    9. '```' → logprob: -16.750093460083008
    10. '_)' → logprob: -17.375093460083008

Token 73: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.6087021473795176e-05
    2. '_price' → logprob: -11.000045776367188
    3. ')' → logprob: -11.125045776367188
    4. ')_' → logprob: -11.375045776367188
    5. '[' → logprob: -13.500045776367188
    6. '_' → logprob: -14.250045776367188
    7. '_l' → logprob: -15.500045776367188
    8. '[_' → logprob: -16.125045776367188
    9. '_)' → logprob: -16.125045776367188
    10. 'list' → logprob: -16.250045776367188

Token 74: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00872412882745266
    2. ' )' → logprob: -4.758724212646484
    3. ')+' → logprob: -10.133724212646484
    4. ' +' → logprob: -10.633724212646484
    5. ')
' → logprob: -11.258724212646484
    6. '+' → logprob: -11.758724212646484
    7. '[' → logprob: -12.133724212646484
    8. '),' → logprob: -12.633724212646484
    9. ' ' → logprob: -12.883724212646484
    10. ')*' → logprob: -12.883724212646484

Token 75: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8317989706993103
    2. '<|end|>' → logprob: -1.456799030303955
    3. ' +' → logprob: -1.581799030303955
    4. '*' → logprob: -2.581799030303955
    5. ' *' → logprob: -3.331799030303955
    6. ')' → logprob: -5.456799030303955
    7. ' ' → logprob: -5.456799030303955
    8. 'min' → logprob: -6.706799030303955
    9. 'price' → logprob: -6.831799030303955
    10. '```' → logprob: -7.331799030303955

Token 76: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.029756972566246986
    2. 'min' → logprob: -3.529757022857666
    3. ' max' → logprob: -12.154756546020508
    4. 'max' → logprob: -14.529756546020508
    5. ' ' → logprob: -15.029756546020508
    6. '(min' → logprob: -15.654756546020508
    7. '	min' → logprob: -16.154756546020508
    8. '  ' → logprob: -16.529756546020508
    9. ' ' → logprob: -17.904756546020508
    10. '[min' → logprob: -17.904756546020508

Token 77: '(price' (ID: 81279)
  Prédit: '(price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(price' → logprob: -0.1602286994457245
    2. '(' → logprob: -1.9102287292480469
    3. '(_' → logprob: -13.535228729248047
    4. '_price' → logprob: -13.910228729248047
    5. '(type' → logprob: -14.660228729248047
    6. 'price' → logprob: -14.785228729248047
    7. '	price' → logprob: -14.910228729248047
    8. '(pr' → logprob: -15.410228729248047
    9. '(
' → logprob: -15.410228729248047
    10. ' (' → logprob: -15.785228729248047

Token 78: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -7.703443770878948e-06
    2. '_price' → logprob: -12.000007629394531
    3. '_' → logprob: -13.875007629394531
    4. 'type' → logprob: -15.500007629394531
    5. ')_' → logprob: -16.62500762939453
    6. 'price' → logprob: -16.75000762939453
    7. '_typ' → logprob: -17.12500762939453
    8. 'Type' → logprob: -17.37500762939453
    9. '(' → logprob: -17.50000762939453
    10. ')' → logprob: -17.75000762939453

Token 79: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.007770478259772062
    2. '_type' → logprob: -4.882770538330078
    3. 'b' → logprob: -9.007770538330078
    4. '_a' → logprob: -10.632770538330078
    5. '_price' → logprob: -12.132770538330078
    6. 'type' → logprob: -12.257770538330078
    7. '_list' → logprob: -12.257770538330078
    8. 'a' → logprob: -14.007770538330078
    9. '_c' → logprob: -14.382770538330078
    10. ')_' → logprob: -15.257770538330078

Token 80: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.226628895296017e-06
    2. ')_' → logprob: -12.250007629394531
    3. '_price' → logprob: -13.750007629394531
    4. ')' → logprob: -14.375007629394531
    5. 'list' → logprob: -15.375007629394531
    6. 'List' → logprob: -16.12500762939453
    7. '_type' → logprob: -16.50000762939453
    8. '_lists' → logprob: -16.62500762939453
    9. '_lst' → logprob: -16.87500762939453
    10. '[' → logprob: -16.87500762939453

Token 81: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ' )' → logprob: -13.500001907348633
    3. '))' → logprob: -15.250001907348633
    4. ')
' → logprob: -15.375001907348633
    5. '()' → logprob: -15.375001907348633
    6. '`)' → logprob: -16.750001907348633
    7. '),' → logprob: -17.000001907348633
    8. '())' → logprob: -17.125001907348633
    9. '}' → logprob: -17.250001907348633
    10. '')' → logprob: -17.375001907348633

Token 82: 'price' (ID: 7629)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.03363659232854843
    2. 'result' → logprob: -4.283636569976807
    3. 'max' → logprob: -4.908636569976807
    4. 'ans' → logprob: -6.033636569976807
    5. '\' → logprob: -6.283636569976807
    6. '\n' → logprob: -6.533636569976807
    7. 'answer' → logprob: -6.658636569976807
    8. 'possible' → logprob: -6.908636569976807
    9. 'best' → logprob: -7.033636569976807
    10. 'total' → logprob: -7.283636569976807

Token 83: '_combo' (ID: 117933)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47658446431159973
    2. '_type' → logprob: -1.2265844345092773
    3. '_with' → logprob: -2.6015844345092773
    4. '_coupon' → logprob: -5.351584434509277
    5. '_under' → logprob: -6.726584434509277
    6. '_discount' → logprob: -7.601584434509277
    7. '_total' → logprob: -7.976584434509277
    8. '_types' → logprob: -7.976584434509277
    9. '_list' → logprob: -8.101584434509277
    10. '_lower' → logprob: -8.101584434509277

Token 84: '_with' (ID: 14161)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.05802362412214279
    2. 's' → logprob: -3.433023691177368
    3. '_' → logprob: -3.933023691177368
    4. ' =' → logprob: -6.058023452758789
    5. '_s' → logprob: -7.183023452758789
    6. '_sum' → logprob: -7.808023452758789
    7. '=' → logprob: -8.308023452758789
    8. '_lists' → logprob: -8.683023452758789
    9. '_lst' → logprob: -9.433023452758789
    10. '_idx' → logprob: -9.808023452758789

Token 85: '_coupon' (ID: 197395)
  Prédit: '_coupon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coupon' → logprob: -0.0030971430242061615
    2. 'coupon' → logprob: -7.003097057342529
    3. '_c' → logprob: -7.253097057342529
    4. '_' → logprob: -7.253097057342529
    5. ' coupon' → logprob: -8.503097534179688
    6. 'Coupon' → logprob: -9.003097534179688
    7. 'in' → logprob: -9.378097534179688
    8. '=' → logprob: -9.378097534179688
    9. 'out' → logprob: -9.378097534179688
    10. ' =' → logprob: -10.253097534179688

Token 86: '_list' (ID: 4162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4805135130882263
    2. '=' → logprob: -0.9805135130882263
    3. 's' → logprob: -5.230513572692871
    4. '_' → logprob: -7.480513572692871
    5. '_list' → logprob: -7.980513572692871
    6. '=[]' → logprob: -9.355513572692871
    7. '[' → logprob: -10.855513572692871
    8. '_=' → logprob: -11.355513572692871
    9. '[]' → logprob: -12.105513572692871
    10. '＝' → logprob: -12.355513572692871

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023566193878650665
    2. '=' → logprob: -3.773566246032715
    3. '=[]' → logprob: -8.148566246032715
    4. ' =[' → logprob: -11.023566246032715
    5. ' ' → logprob: -12.148566246032715
    6. '.append' → logprob: -13.273566246032715
    7. '=[' → logprob: -13.398566246032715
    8. '_' → logprob: -13.773566246032715
    9. '<|end|>' → logprob: -14.023566246032715
    10. '.' → logprob: -14.148566246032715

Token 88: ' [
' (ID: 4240)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.39377808570861816
    2. '[]' → logprob: -1.1437780857086182
    3. '[min' → logprob: -5.518777847290039
    4. '[list' → logprob: -7.268777847290039
    5. '[int' → logprob: -7.643777847290039
    6. '[c' → logprob: -7.768777847290039
    7. '[max' → logprob: -8.268777847290039
    8. '[p' → logprob: -8.393777847290039
    9. '[num' → logprob: -8.518777847290039
    10. ' []' → logprob: -9.393777847290039

Token 89: '   ' (ID: 271)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5121400952339172
    2. 'price' → logprob: -1.2621400356292725
    3. 'coupon' → logprob: -3.0121400356292725
    4. ' min' → logprob: -3.8871400356292725
    5. 'max' → logprob: -4.137140274047852
    6. '(min' → logprob: -4.637140274047852
    7. '(price' → logprob: -5.512140274047852
    8. ' price' → logprob: -5.637140274047852
    9. 'c' → logprob: -6.012140274047852
    10. '   ' → logprob: -6.137140274047852

Token 90: ' price' (ID: 3911)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7851567268371582
    2. 'price' (adapté à ' price') → logprob: -0.9101567268371582
    3. 'coupon' → logprob: -2.535156726837158
    4. 'max' → logprob: -3.785156726837158
    5. ' min' → logprob: -4.785156726837158
    6. 'a' → logprob: -5.160156726837158
    7. '(min' → logprob: -5.160156726837158
    8. 'c' → logprob: -5.535156726837158
    9. '(price' → logprob: -5.535156726837158
    10. ' price' → logprob: -6.285156726837158

Token 91: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.0001847062085289508
    2. '_' → logprob: -9.000185012817383
    3. '_combo' → logprob: -10.125185012817383
    4. '_info' → logprob: -12.375185012817383
    5. '_coupon' → logprob: -12.625185012817383
    6. 'type' → logprob: -12.625185012817383
    7. '_a' → logprob: -14.000185012817383
    8. 'for' → logprob: -14.000185012817383
    9. 'combo' → logprob: -14.250185012817383
    10. '_item' → logprob: -14.375185012817383

Token 92: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00012451570364646614
    2. 'a' → logprob: -9.00012493133545
    3. '_b' → logprob: -14.00012493133545
    4. '[a' → logprob: -17.000123977661133
    5. '_type' → logprob: -17.250123977661133
    6. ' _' → logprob: -17.250123977661133
    7. 's' → logprob: -17.375123977661133
    8. '_' → logprob: -17.375123977661133
    9. '[_' → logprob: -17.500123977661133
    10. '_c' → logprob: -17.750123977661133

Token 93: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0001414426224073395
    2. '[_' → logprob: -9.250141143798828
    3. '[' → logprob: -10.875141143798828
    4. '[i' → logprob: -12.000141143798828
    5. '_' → logprob: -12.125141143798828
    6. '_price' → logprob: -13.250141143798828
    7. 'list' → logprob: -13.375141143798828
    8. ' _' → logprob: -13.375141143798828
    9. '_lst' → logprob: -13.875141143798828
    10. '[a' → logprob: -14.000141143798828

Token 94: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.020556017756462097
    2. '[' → logprob: -4.2705559730529785
    3. '[i' → logprob: -5.5205559730529785
    4. '[idx' → logprob: -7.0205559730529785
    5. '[p' → logprob: -7.8955559730529785
    6. '[index' → logprob: -8.520556449890137
    7. '[x' → logprob: -8.895556449890137
    8. '[id' → logprob: -9.020556449890137
    9. '[min' → logprob: -9.020556449890137
    10. '[a' → logprob: -9.270556449890137

Token 95: 'oupon' (ID: 31421)
  Prédit: 'oupon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oupon' → logprob: -0.004093242809176445
    2. 'o' → logprob: -7.004093170166016
    3. 'oup' → logprob: -7.004093170166016
    4. 'ou' → logprob: -7.379093170166016
    5. ']' → logprob: -7.754093170166016
    6. '[' → logprob: -8.254093170166016
    7. '][' → logprob: -8.754093170166016
    8. '_' → logprob: -9.004093170166016
    9. '_coupon' → logprob: -9.004093170166016
    10. 'p' → logprob: -9.004093170166016

Token 96: '_a' (ID: 10852)
  Prédit: '_info'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_info' → logprob: -0.009925724007189274
    2. '[' → logprob: -4.634925842285156
    3. '-' → logprob: -9.884925842285156
    4. '[i' → logprob: -10.134925842285156
    5. '_i' → logprob: -11.134925842285156
    6. '_' → logprob: -11.384925842285156
    7. '[-' → logprob: -11.509925842285156
    8. 'info' → logprob: -11.634925842285156
    9. '[_' → logprob: -11.759925842285156
    10. 'Info' → logprob: -12.509925842285156

Token 97: '_idx' (ID: 15257)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1581411212682724
    2. ' -' → logprob: -2.7831411361694336
    3. '[' → logprob: -2.9081411361694336
    4. '_idx' → logprob: -4.533141136169434
    5. '_id' → logprob: -5.408141136169434
    6. ']' → logprob: -5.783141136169434
    7. '_index' → logprob: -6.408141136169434
    8. '_info' → logprob: -6.408141136169434
    9. '][' → logprob: -6.658141136169434
    10. '_coupon' → logprob: -7.033141136169434

Token 98: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13186462223529816
    2. '[c' → logprob: -2.506864547729492
    3. ' -' → logprob: -3.756864547729492
    4. '-' → logprob: -4.631864547729492
    5. ']+' → logprob: -5.631864547729492
    6. '][' → logprob: -6.506864547729492
    7. ']-' → logprob: -6.631864547729492
    8. '[' → logprob: -7.131864547729492
    9. ']*' → logprob: -7.881864547729492
    10. ' ]' → logprob: -8.506864547729492

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '<|end|>' → logprob: -16.50000762939453
    4. ']' → logprob: -18.50000762939453
    5. '```' → logprob: -19.12500762939453
    6. '１' → logprob: -19.12500762939453
    7. '  ' → logprob: -19.25000762939453
    8. '   ' → logprob: -19.50000762939453
    9. ')' → logprob: -20.00000762939453
    10. '2' → logprob: -20.62500762939453

Token 100: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005079229362308979
    2. ']+' → logprob: -5.88007926940918
    3. ' ]' → logprob: -6.13007926940918
    4. '+' → logprob: -10.00507926940918
    5. ' +' → logprob: -10.63007926940918
    6. '   ' → logprob: -11.50507926940918
    7. ' ' → logprob: -12.13007926940918
    8. ']*' → logprob: -12.63007926940918
    9. ')' → logprob: -13.25507926940918
    10. '][' → logprob: -13.63007926940918

Token 101: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07896050810813904
    2. '+' → logprob: -2.578960418701172
    3. ' +
' → logprob: -9.828960418701172
    4. '+
' → logprob: -11.328960418701172
    5. ' ' → logprob: -13.453960418701172
    6. ' +
' → logprob: -14.078960418701172
    7. ' plus' → logprob: -14.203960418701172
    8. ' +

' → logprob: -15.078960418701172
    9. ' ' → logprob: -15.203960418701172
    10. '   ' → logprob: -15.203960418701172

Token 102: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.5759687423706055
    2. 'price' → logprob: -0.8259687423706055
    3. ' coupon' → logprob: -11.450968742370605
    4. '   ' → logprob: -11.700968742370605
    5. 'coupon' → logprob: -12.450968742370605
    6. '	price' → logprob: -12.950968742370605
    7. ' ' → logprob: -13.075968742370605
    8. '(price' → logprob: -13.950968742370605
    9. '    ' → logprob: -14.575968742370605
    10. '  ' → logprob: -14.950968742370605

Token 103: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -2.2200749754119897e-06
    2. 'type' → logprob: -13.875001907348633
    3. '_coupon' → logprob: -14.125001907348633
    4. 'a' → logprob: -16.375001907348633
    5. '```' → logprob: -16.500001907348633
    6. '_' → logprob: -16.500001907348633
    7. '[' → logprob: -16.875001907348633
    8. '[_' → logprob: -17.000001907348633
    9. '_b' → logprob: -17.125001907348633
    10. '_code' → logprob: -17.750001907348633

Token 104: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0007556661730632186
    2. '_type' → logprob: -7.250755786895752
    3. 'b' → logprob: -10.625755310058594
    4. '_a' → logprob: -11.250755310058594
    5. 'type' → logprob: -12.125755310058594
    6. 'a' → logprob: -13.375755310058594
    7. '_list' → logprob: -14.375755310058594
    8. '```' → logprob: -15.125755310058594
    9. '_c' → logprob: -15.375755310058594
    10. '[b' → logprob: -16.375755310058594

Token 105: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.531315314830863e-06
    2. 'list' → logprob: -13.875003814697266
    3. '[' → logprob: -14.000003814697266
    4. '[_' → logprob: -14.125003814697266
    5. '_lists' → logprob: -15.250003814697266
    6. 'List' → logprob: -15.750003814697266
    7. '[c' → logprob: -15.875003814697266
    8. '```' → logprob: -16.250003814697266
    9. '_LIST' → logprob: -16.625003814697266
    10. '_' → logprob: -16.750003814697266

Token 106: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -6.704273118884885e-07
    2. '[
' → logprob: -15.000000953674316
    3. '[' → logprob: -15.500000953674316
    4. '[(' → logprob: -16.875
    5. '   ' → logprob: -17.375
    6. ' [' → logprob: -18.125
    7. '       ' → logprob: -19.75
    8. '```' → logprob: -20.0
    9. '(c' → logprob: -20.5
    10. '[C' → logprob: -20.75

Token 107: 'oupon' (ID: 31421)
  Prédit: 'oupon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oupon' → logprob: -0.002935148775577545
    2. 'coupon' → logprob: -5.87793493270874
    3. '_coupon' → logprob: -9.502935409545898
    4. 'upon' → logprob: -10.252935409545898
    5. 'ou' → logprob: -11.877935409545898
    6. 'oup' → logprob: -13.002935409545898
    7. 'on' → logprob: -13.502935409545898
    8. 'c' → logprob: -13.502935409545898
    9. 'oun' → logprob: -13.502935409545898
    10. ' coupon' → logprob: -13.627935409545898

Token 108: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00011808603449026123
    2. 'b' → logprob: -9.250118255615234
    3. '_a' → logprob: -11.125118255615234
    4. '_coupon' → logprob: -13.500118255615234
    5. '_c' → logprob: -13.625118255615234
    6. 'a' → logprob: -13.750118255615234
    7. '```' → logprob: -14.125118255615234
    8. '[_' → logprob: -14.750118255615234
    9. 'coupon' → logprob: -15.125118255615234
    10. '_info' → logprob: -15.250118255615234

Token 109: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0006508402875624597
    2. 'idx' → logprob: -7.625650882720947
    3. '-' → logprob: -8.750650405883789
    4. '_idxs' → logprob: -14.000650405883789
    5. 'x' → logprob: -14.125650405883789
    6. '_IDX' → logprob: -14.625650405883789
    7. 'Idx' → logprob: -14.750650405883789
    8. 'c' → logprob: -15.375650405883789
    9. '_' → logprob: -15.625650405883789
    10. 'index' → logprob: -15.750650405883789

Token 110: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.7848862373502925e-05
    2. ' -' → logprob: -10.500027656555176
    3. ']' → logprob: -16.500028610229492
    4. '[' → logprob: -16.750028610229492
    5. ' ' → logprob: -16.875028610229492
    6. ']-' → logprob: -16.875028610229492
    7. '   ' → logprob: -18.125028610229492
    8. '1' → logprob: -18.250028610229492
    9. '  ' → logprob: -19.375028610229492
    10. '()-' → logprob: -19.500028610229492

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.968312951968983e-06
    2. ' ' → logprob: -12.000009536743164
    3. '-' → logprob: -12.750009536743164
    4. '```' → logprob: -15.937509536743164
    5. '１' → logprob: -15.937509536743164
    6. '2' → logprob: -16.125009536743164
    7. '   ' → logprob: -16.375009536743164
    8. '11' → logprob: -17.062509536743164
    9. 'b' → logprob: -17.500009536743164
    10. '

' → logprob: -18.000009536743164

Token 112: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007137782406061888
    2. ' ]' → logprob: -6.382137775421143
    3. ' for' → logprob: -6.507137775421143
    4. 'for' → logprob: -7.007137775421143
    5. ']
' → logprob: -7.132137775421143
    6. '-' → logprob: -7.507137775421143
    7. ' -' → logprob: -7.507137775421143
    8. ' ' → logprob: -8.0071382522583
    9. '   ' → logprob: -8.1321382522583
    10. ')' → logprob: -8.3821382522583

Token 113: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3581101596355438
    2. ' for' → logprob: -1.2331101894378662
    3. '   ' → logprob: -4.983109951019287
    4. '+' → logprob: -6.233109951019287
    5. '
' → logprob: -7.733109951019287
    6. ' ' → logprob: -8.358110427856445
    7. ' +' → logprob: -9.983110427856445
    8. '	for' → logprob: -10.983110427856445
    9. 'if' → logprob: -11.233110427856445
    10. '  ' → logprob: -11.233110427856445

Token 114: ' coupon' (ID: 28009)
  Prédit: 'coupon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coupon' → logprob: -0.5326107144355774
    2. 'discount' → logprob: -1.6576106548309326
    3. ' coupon' → logprob: -1.7826106548309326
    4. ' discount' → logprob: -3.0326106548309326
    5. 'c' → logprob: -5.782610893249512
    6. 'price' → logprob: -6.907610893249512
    7. '   ' → logprob: -7.157610893249512
    8. ' c' → logprob: -8.407610893249512
    9. ' price' → logprob: -8.657610893249512
    10. ' ' → logprob: -8.907610893249512

Token 115: '_discount' (ID: 104401)
  Prédit: '_amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -1.0818052291870117
    2. '_value' → logprob: -1.4568052291870117
    3. '_price' → logprob: -1.7068052291870117
    4. '_info' → logprob: -2.2068052291870117
    5. '_discount' → logprob: -2.2068052291870117
    6. '_amt' → logprob: -4.206805229187012
    7. '_list' → logprob: -5.456805229187012
    8. 'discount' → logprob: -6.581805229187012
    9. '_rate' → logprob: -6.956805229187012
    10. 's' → logprob: -6.956805229187012

Token 116: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6372056007385254
    2. '
' → logprob: -1.5122056007385254
    3. '[' → logprob: -2.1372056007385254
    4. ' for' → logprob: -2.2622056007385254
    5. '_amount' → logprob: -4.137205600738525
    6. ' ' → logprob: -5.887205600738525
    7. 'amount' → logprob: -6.262205600738525
    8. ' 
' → logprob: -6.387205600738525
    9. '   ' → logprob: -6.387205600738525
    10. '[c' → logprob: -7.012205600738525

Token 117: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3153114318847656
    2. 'for' → logprob: -1.3153114318847656
    3. '   ' → logprob: -6.315311431884766
    4. '
' → logprob: -9.065311431884766
    5. ' ' → logprob: -9.565311431884766
    6. '	for' → logprob: -10.690311431884766
    7. ' 
' → logprob: -11.190311431884766
    8. ')' → logprob: -11.940311431884766
    9. '    
' → logprob: -12.440311431884766
    10. ']' → logprob: -13.690311431884766

Token 118: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5799472332000732
    2. 'for' (adapté à ' for') → logprob: -0.8299472332000732
    3. '   ' → logprob: -5.579947471618652
    4. ' ' → logprob: -9.079947471618652
    5. '
' → logprob: -9.329947471618652
    6. '	for' → logprob: -11.329947471618652
    7. ' 
' → logprob: -12.704947471618652
    8. ',' → logprob: -12.829947471618652
    9. ')' → logprob: -12.954947471618652
    10. '    
' → logprob: -13.704947471618652

Token 119: ' coupon' (ID: 28009)
  Prédit: 'coupon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coupon' → logprob: -0.07029518485069275
    2. ' coupon' → logprob: -2.6952950954437256
    3. '(c' → logprob: -8.070295333862305
    4. '_coupon' → logprob: -10.820295333862305
    5. 'c' → logprob: -11.570295333862305
    6. ' (' → logprob: -12.445295333862305
    7. ' ' → logprob: -12.695295333862305
    8. '[c' → logprob: -12.695295333862305
    9. '   ' → logprob: -13.070295333862305
    10. '_,' → logprob: -13.820295333862305

Token 120: '_a' (ID: 10852)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6595662832260132
    2. '_info' → logprob: -0.7845662832260132
    3. '_' → logprob: -4.284566402435303
    4. '_coupon' → logprob: -4.659566402435303
    5. '_a' → logprob: -6.784566402435303
    6. '_in' → logprob: -7.159566402435303
    7. 'in' → logprob: -7.284566402435303
    8. ' ' → logprob: -8.784565925598145
    9. 'info' → logprob: -9.034565925598145
    10. '_inf' → logprob: -9.534565925598145

Token 121: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -1.5332478142227046e-05
    2. 'idx' → logprob: -11.875015258789062
    3. '_index' → logprob: -12.500015258789062
    4. '_a' → logprob: -13.000015258789062
    5. '_idxs' → logprob: -14.250015258789062
    6. 'a' → logprob: -14.875015258789062
    7. '_i' → logprob: -14.875015258789062
    8. '_' → logprob: -15.250015258789062
    9. '_id' → logprob: -15.750015258789062
    10. '_x' → logprob: -16.750015258789062

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15684422850608826
    2. ' in' → logprob: -2.406844139099121
    3. ',c' → logprob: -3.281844139099121
    4. 'in' → logprob: -4.156844139099121
    5. ' ,' → logprob: -6.781844139099121
    6. ',in' → logprob: -8.281844139099121
    7. ',num' → logprob: -8.406844139099121
    8. ',user' → logprob: -9.406844139099121
    9. ',_' → logprob: -10.656844139099121
    10. ',
' → logprob: -11.031844139099121

Token 123: ' coupon' (ID: 28009)
  Prédit: 'coupon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coupon' → logprob: -0.07892217487096786
    2. ' coupon' → logprob: -2.5789222717285156
    3. 'c' → logprob: -10.828922271728516
    4. 'cou' → logprob: -12.203922271728516
    5. '_coupon' → logprob: -12.578922271728516
    6. ' ' → logprob: -13.578922271728516
    7. '   ' → logprob: -14.203922271728516
    8. ',c' → logprob: -14.578922271728516
    9. '(c' → logprob: -14.578922271728516
    10. '	c' → logprob: -14.953922271728516

Token 124: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.6333893537521362
    2. '_b' → logprob: -0.7583893537521362
    3. ',_' → logprob: -8.258389472961426
    4. ',' → logprob: -8.508389472961426
    5. 'a' → logprob: -9.008389472961426
    6. 'b' → logprob: -9.633389472961426
    7. '_info' → logprob: -10.133389472961426
    8. ',b' → logprob: -11.008389472961426
    9. '_,' → logprob: -11.133389472961426
    10. '_discount' → logprob: -11.258389472961426

Token 125: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -7.465036105713807e-06
    2. 'idx' → logprob: -12.125007629394531
    3. 'x' → logprob: -14.750007629394531
    4. '_idxs' → logprob: -14.750007629394531
    5. 'dx' → logprob: -14.875007629394531
    6. '_IDX' → logprob: -15.250007629394531
    7. '_' → logprob: -15.875007629394531
    8. '_id' → logprob: -17.00000762939453
    9. '_ix' → logprob: -17.00000762939453
    10. '_in' → logprob: -17.12500762939453

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006318732164800167
    2. ',c' → logprob: -5.13131856918335
    3. ',num' → logprob: -8.131319046020508
    4. 'in' → logprob: -10.506319046020508
    5. ' ,' → logprob: -11.131319046020508
    6. ',user' → logprob: -11.131319046020508
    7. ',_' → logprob: -11.381319046020508
    8. ',in' → logprob: -11.881319046020508
    9. 'price' → logprob: -12.131319046020508
    10. ',
' → logprob: -13.006319046020508

Token 127: ' coupon' (ID: 28009)
  Prédit: 'coupon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coupon' → logprob: -0.07889540493488312
    2. ' coupon' → logprob: -2.578895330429077
    3. 'c' → logprob: -13.078895568847656
    4. 'cou' → logprob: -13.328895568847656
    5. '_coupon' → logprob: -14.578895568847656
    6. '   ' → logprob: -14.578895568847656
    7. ' ' → logprob: -14.828895568847656
    8. 'discount' → logprob: -15.203895568847656
    9. '	c' → logprob: -16.578895568847656
    10. '  ' → logprob: -16.578895568847656

Token 128: '_discount' (ID: 104401)
  Prédit: '_discount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_discount' → logprob: -0.000611763505730778
    2. 'discount' → logprob: -7.750611782073975
    3. '_price' → logprob: -9.625611305236816
    4. '_' → logprob: -10.000611305236816
    5. '_amount' → logprob: -10.625611305236816
    6. 'in' → logprob: -11.000611305236816
    7. ' in' → logprob: -11.375611305236816
    8. 'Discount' → logprob: -12.250611305236816
    9. '_in' → logprob: -13.125611305236816
    10. '_info' → logprob: -13.500611305236816

Token 129: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.47407954931259155
    2. ' in' → logprob: -0.9740795493125916
    3. ',' → logprob: -14.349079132080078
    4. ' ' → logprob: -14.849079132080078
    5. 'from' → logprob: -14.974079132080078
    6. 'inthe' → logprob: -15.474079132080078
    7. 'import' → logprob: -15.849079132080078
    8. 'for' → logprob: -16.224079132080078
    9. 'user' → logprob: -16.349079132080078
    10. ']' → logprob: -16.474079132080078

Token 130: ' coupon' (ID: 28009)
  Prédit: 'coupon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coupon' → logprob: -0.06196858361363411
    2. ' coupon' → logprob: -2.8119685649871826
    3. 'c' → logprob: -14.811968803405762
    4. 'cou' → logprob: -14.936968803405762
    5. '_coupon' → logprob: -16.436967849731445
    6. '   ' → logprob: -16.686967849731445
    7. ' ' → logprob: -17.561967849731445
    8. 'Coupon' → logprob: -17.561967849731445
    9. 'coin' → logprob: -18.561967849731445
    10. 'cookie' → logprob: -19.061967849731445

Token 131: '_info' (ID: 6744)
  Prédit: '_info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_info' → logprob: -4.320199877838604e-07
    2. 'info' → logprob: -14.75
    3. 'Info' → logprob: -18.875
    4. '_' → logprob: -19.125
    5. '_INFO' → logprob: -19.875
    6. '_inf' → logprob: -20.125
    7. '_infos' → logprob: -20.625
    8. '_in' → logprob: -21.125
    9. 'for' → logprob: -21.125
    10. 's' → logprob: -21.25

Token 132: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.896309739408025e-07
    2. ']' → logprob: -15.750000953674316
    3. 's' → logprob: -16.0
    4. '_lst' → logprob: -16.25
    5. 'list' → logprob: -16.375
    6. 'List' → logprob: -16.75
    7. '_lists' → logprob: -17.125
    8. ']_' → logprob: -17.375
    9. ')' → logprob: -17.5
    10. '_List' → logprob: -18.0

Token 133: '
' (ID: 198)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -4.842555426876061e-06
    2. ' ]' → logprob: -12.375004768371582
    3. ']
' → logprob: -14.875004768371582
    4. ')' → logprob: -16.6250057220459
    5. ')]' → logprob: -17.1250057220459
    6. '   ' → logprob: -17.7500057220459
    7. ']

' → logprob: -18.1250057220459
    8. '()]' → logprob: -19.0000057220459
    9. '`]' → logprob: -19.1250057220459
    10. '']' → logprob: -19.5000057220459

Token 134: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.3782830137643032e-05
    2. ' ]' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.12501335144043
    4. ']
' → logprob: -15.50001335144043
    5. ')' → logprob: -16.12501335144043
    6. ')]' → logprob: -17.12501335144043
    7. '`]' → logprob: -18.50001335144043
    8. ' ' → logprob: -18.75001335144043
    9. ']

' → logprob: -18.75001335144043
    10. '']' → logprob: -18.87501335144043

Token 135: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.020617449656128883
    2. 'print' → logprob: -4.270617485046387
    3. 'if' → logprob: -5.520617485046387
    4. 'result' → logprob: -7.145617485046387
    5. 'answer' → logprob: -7.770617485046387
    6. '_min' → logprob: -7.770617485046387
    7. ' min' → logprob: -7.770617485046387
    8. 'price' → logprob: -9.145617485046387
    9. '[min' → logprob: -9.270617485046387
    10. 'ans' → logprob: -9.770617485046387

Token 136: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -5.490809417096898e-05
    2. '_' → logprob: -9.875055313110352
    3. 'price' → logprob: -13.125055313110352
    4. '_prices' → logprob: -15.125055313110352
    5. '_value' → logprob: -15.250055313110352
    6. '_score' → logprob: -16.25005531311035
    7. ' _' → logprob: -16.25005531311035
    8. '(price' → logprob: -16.25005531311035
    9. '\' → logprob: -16.25005531311035
    10. '(_' → logprob: -16.50005531311035

Token 137: '_with' (ID: 14161)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31517279148101807
    2. ' =' → logprob: -1.940172791481018
    3. '_with' → logprob: -2.5651726722717285
    4. '_no' → logprob: -3.4401726722717285
    5. '_' → logprob: -4.1901726722717285
    6. '_=' → logprob: -6.5651726722717285
    7. '_without' → logprob: -7.1901726722717285
    8. '=_' → logprob: -8.440173149108887
    9. 'with' → logprob: -9.940173149108887
    10. '＝' → logprob: -10.815173149108887

Token 138: '_coupon' (ID: 197395)
  Prédit: '_coupon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coupon' → logprob: -1.1994775377388578e-05
    2. '_discount' → logprob: -12.500012397766113
    3. '_combo' → logprob: -13.000012397766113
    4. '_' → logprob: -13.000012397766113
    5. '_price' → logprob: -13.125012397766113
    6. 'coupon' → logprob: -14.750012397766113
    7. '_coin' → logprob: -15.125012397766113
    8. '_c' → logprob: -15.250012397766113
    9. ' _' → logprob: -16.375011444091797
    10. '```' → logprob: -16.500011444091797

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193390250205994
    2. '=' → logprob: -1.5019339323043823
    3. '=min' → logprob: -12.626934051513672
    4. '_' → logprob: -14.126934051513672
    5. '_=' → logprob: -15.876934051513672
    6. ')' → logprob: -16.001934051513672
    7. 'min' → logprob: -16.001934051513672
    8. '＝' → logprob: -16.126934051513672
    9. ' ' → logprob: -16.376934051513672
    10. 's' → logprob: -16.626934051513672

Token 140: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.07888978719711304
    2. ' min' → logprob: -2.578889846801758
    3. '	min' → logprob: -18.453889846801758
    4. '(min' → logprob: -18.703889846801758
    5. '   ' → logprob: -18.828889846801758
    6. 'max' → logprob: -19.078889846801758
    7. ' ' → logprob: -20.078889846801758
    8. '[min' → logprob: -20.578889846801758
    9. 'minimum' → logprob: -20.828889846801758
    10. '  ' → logprob: -21.328889846801758

Token 141: '(price' (ID: 81279)
  Prédit: '(price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(price' → logprob: -8.41866585687967e-06
    2. '(' → logprob: -11.750008583068848
    3. 'price' → logprob: -14.625008583068848
    4. '	price' → logprob: -17.75000762939453
    5. '_price' → logprob: -18.50000762939453
    6. ' price' → logprob: -18.75000762939453
    7. ' (' → logprob: -19.37500762939453
    8. '(
' → logprob: -19.87500762939453
    9. '(password' → logprob: -20.12500762939453
    10. '(_' → logprob: -20.62500762939453

Token 142: '_combo' (ID: 117933)
  Prédit: '_combo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_combo' → logprob: -0.0005773392622359097
    2. '_price' → logprob: -7.625577449798584
    3. 'combo' → logprob: -10.375576972961426
    4. '_coupon' → logprob: -10.375576972961426
    5. 'Combo' → logprob: -11.875576972961426
    6. ')_' → logprob: -12.250576972961426
    7. 'price' → logprob: -12.375576972961426
    8. '(price' → logprob: -13.250576972961426
    9. '_coin' → logprob: -13.500576972961426
    10. '(_' → logprob: -13.625576972961426

Token 143: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -1.0325924449716695e-05
    2. 'with' → logprob: -11.75001049041748
    3. '_price' → logprob: -13.75001049041748
    4. ')' → logprob: -14.50001049041748
    5. '_list' → logprob: -15.25001049041748
    6. ')_' → logprob: -16.000009536743164
    7. 'price' → logprob: -16.750009536743164
    8. '__' → logprob: -17.000009536743164
    9. '_without' → logprob: -17.000009536743164
    10. '   ' → logprob: -17.000009536743164

Token 144: '_coupon' (ID: 197395)
  Prédit: '_coupon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coupon' → logprob: -0.020655402913689613
    2. 'coupon' → logprob: -3.895655393600464
    3. 'price' → logprob: -9.770655632019043
    4. '_price' → logprob: -10.645655632019043
    5. ' coupon' → logprob: -10.645655632019043
    6. 'Coupon' → logprob: -12.520655632019043
    7. 'oupon' → logprob: -13.020655632019043
    8. '_list' → logprob: -13.770655632019043
    9. ')' → logprob: -15.020655632019043
    10. '_discount' → logprob: -15.145655632019043

Token 145: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.735893965815194e-05
    2. '_price' → logprob: -11.625017166137695
    3. 'price' → logprob: -12.375017166137695
    4. 'list' → logprob: -12.500017166137695
    5. 'List' → logprob: -15.625017166137695
    6. ')' → logprob: -16.875017166137695
    7. 'ist' → logprob: -17.250017166137695
    8. '_lst' → logprob: -17.625017166137695
    9. 's' → logprob: -17.750017166137695
    10. 'l' → logprob: -18.375017166137695

Token 146: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002668192028068006
    2. ',' → logprob: -8.625267028808594
    3. ' )' → logprob: -9.875267028808594
    4. ' if' → logprob: -10.500267028808594
    5. 'if' → logprob: -12.125267028808594
    6. ' or' → logprob: -14.250267028808594
    7. ' ,' → logprob: -14.375267028808594
    8. ')
' → logprob: -14.625267028808594
    9. '))' → logprob: -15.500267028808594
    10. '}' → logprob: -15.500267028808594

Token 147: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008934690617024899
    2. 'if' → logprob: -5.508934497833252
    3. 'min' → logprob: -5.883934497833252
    4. 'result' → logprob: -6.758934497833252
    5. '
' → logprob: -7.133934497833252
    6. 'answer' → logprob: -10.13393497467041
    7. ' print' → logprob: -10.88393497467041
    8. '#' → logprob: -11.00893497467041
    9. 'ans' → logprob: -12.00893497467041
    10. 'output' → logprob: -12.38393497467041

Token 148: ' price' (ID: 3911)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.01283735316246748
    2. ' price' → logprob: -4.7628374099731445
    3. 'coupon' → logprob: -5.5128374099731445
    4. ' coupon' → logprob: -8.762837409973145
    5. 'len' → logprob: -11.137837409973145
    6. ' len' → logprob: -12.887837409973145
    7. ' ' → logprob: -13.387837409973145
    8. '	price' → logprob: -13.762837409973145
    9. 'num' → logprob: -13.887837409973145
    10. '(price' → logprob: -14.512837409973145

Token 149: '_combo' (ID: 117933)
  Prédit: '_combo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_combo' → logprob: -0.00028374246903695166
    2. '_coupon' → logprob: -8.250284194946289
    3. '_type' → logprob: -10.875284194946289
    4. '_price' → logprob: -13.125284194946289
    5. 'combo' → logprob: -14.000284194946289
    6. '_comb' → logprob: -15.625284194946289
    7. '_' → logprob: -16.00028419494629
    8. '_com' → logprob: -16.62528419494629
    9. '_code' → logprob: -16.87528419494629
    10. '_discount' → logprob: -17.00028419494629

Token 150: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -2.339278580620885e-06
    2. 'with' → logprob: -13.500001907348633
    3. '_' → logprob: -14.625001907348633
    4. '_combo' → logprob: -15.375001907348633
    5. '_WITH' → logprob: -16.000001907348633
    6. '_list' → logprob: -16.125001907348633
    7. '__' → logprob: -18.125001907348633
    8. 'With' → logprob: -18.375001907348633
    9. '_no' → logprob: -18.375001907348633
    10. 'a' → logprob: -18.375001907348633

Token 151: '_coupon' (ID: 197395)
  Prédit: '_coupon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coupon' → logprob: -0.0002286886883666739
    2. 'coupon' → logprob: -8.875228881835938
    3. 'oupon' → logprob: -9.375228881835938
    4. 'Coupon' → logprob: -13.125228881835938
    5. ' coupon' → logprob: -14.125228881835938
    6. '_price' → logprob: -14.750228881835938
    7. 'cou' → logprob: -15.625228881835938
    8. '_discount' → logprob: -16.625228881835938
    9. '_c' → logprob: -16.625228881835938
    10. 'if' → logprob: -16.750228881835938

Token 152: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.000763510703109e-05
    2. 'ist' → logprob: -10.625040054321289
    3. 'list' → logprob: -11.375040054321289
    4. 'else' → logprob: -12.750040054321289
    5. 'is' → logprob: -15.125040054321289
    6. 'List' → logprob: -15.375040054321289
    7. '_' → logprob: -15.375040054321289
    8. 'with' → logprob: -16.50004005432129
    9. 'if' → logprob: -16.62504005432129
    10. 'st' → logprob: -16.75004005432129

Token 153: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.47407761216163635
    2. 'else' → logprob: -0.974077582359314
    3. '!=' → logprob: -15.474077224731445
    4. '	else' → logprob: -15.724077224731445
    5. '_else' → logprob: -16.224077224731445
    6. ' els' → logprob: -16.849077224731445
    7. ' ' → logprob: -17.599077224731445
    8. 'e' → logprob: -17.724077224731445
    9. '```' → logprob: -18.224077224731445
    10. 'elsen' → logprob: -18.224077224731445

Token 154: ' float' (ID: 4428)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -2.451116051815916e-05
    2. ' min' → logprob: -10.875024795532227
    3. 'float' → logprob: -12.125024795532227
    4. 'None' → logprob: -17.000024795532227
    5. 'm' → logprob: -18.375024795532227
    6. 'max' → logprob: -18.875024795532227
    7. '(min' → logprob: -19.250024795532227
    8. '	min' → logprob: -19.500024795532227
    9. '0' → logprob: -19.625024795532227
    10. 'num' → logprob: -20.125024795532227

Token 155: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.906711546937004e-05
    2. '(' → logprob: -10.875048637390137
    3. ''' → logprob: -11.500048637390137
    4. '("' → logprob: -12.125048637390137
    5. ''in' → logprob: -12.125048637390137
    6. ''s' → logprob: -12.875048637390137
    7. '(in' → logprob: -13.125048637390137
    8. 'inf' → logprob: -13.375048637390137
    9. '('.' → logprob: -14.250048637390137
    10. '.infinity' → logprob: -14.375048637390137

Token 156: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: 0.0
    2. ''' → logprob: -16.875
    3. ' inf' → logprob: -17.5
    4. '0' → logprob: -19.625
    5. '-inf' → logprob: -19.875
    6. 'info' → logprob: -20.125
    7. 'in' → logprob: -20.375
    8. ''in' → logprob: -21.0
    9. '_inf' → logprob: -21.125
    10. 'Inf' → logprob: -21.25

Token 157: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. '()' → logprob: -14.250001907348633
    3. ' )' → logprob: -14.625001907348633
    4. '))' → logprob: -15.250001907348633
    5. '')' → logprob: -15.875001907348633
    6. '())' → logprob: -16.750001907348633
    7. ')
' → logprob: -17.250001907348633
    8. ')`' → logprob: -18.250001907348633
    9. '`)' → logprob: -18.500001907348633
    10. '),' → logprob: -18.875001907348633

Token 158: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01007597055286169
    2. 'result' → logprob: -5.01007604598999
    3. '
' → logprob: -5.88507604598999
    4. 'min' → logprob: -8.010075569152832
    5. 'answer' → logprob: -9.135075569152832
    6. 'if' → logprob: -10.135075569152832
    7. '\' → logprob: -11.010075569152832
    8. 'output' → logprob: -11.260075569152832
    9. '\n' → logprob: -11.385075569152832
    10. '
' → logprob: -11.385075569152832

Token 159: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.47408145666122437
    2. '(' → logprob: -0.9740814566612244
    3. '(max' → logprob: -13.224081039428711
    4. '(
' → logprob: -13.224081039428711
    5. 'min' → logprob: -15.349081039428711
    6. '()' → logprob: -15.349081039428711
    7. '((' → logprob: -15.974081039428711
    8. ' (' → logprob: -16.59908103942871
    9. '(

' → logprob: -16.59908103942871
    10. '(m' → logprob: -16.84908103942871

Token 160: '(min' (ID: 26035)
  Prédit: '_price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -1.4974866644479334e-05
    2. '(' → logprob: -12.000015258789062
    3. '_prices' → logprob: -12.625015258789062
    4. ')' → logprob: -12.875015258789062
    5. '_' → logprob: -13.250015258789062
    6. '_score' → logprob: -15.375015258789062
    7. ')_' → logprob: -15.500015258789062
    8. '(_' → logprob: -15.625015258789062
    9. '(min' → logprob: -15.750015258789062
    10. '_min' → logprob: -16.125015258789062

Token 161: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -1.5048530030981055e-06
    2. '(min' → logprob: -14.750001907348633
    3. '(price' → logprob: -15.250001907348633
    4. '_prices' → logprob: -15.250001907348633
    5. 'price' → logprob: -15.500001907348633
    6. '_pr' → logprob: -16.000001907348633
    7. '(_' → logprob: -16.625001907348633
    8. '(' → logprob: -17.750001907348633
    9. 'Price' → logprob: -18.000001907348633
    10. '_PRICE' → logprob: -18.125001907348633

Token 162: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -3.531315314830863e-06
    2. '_with' → logprob: -13.000003814697266
    3. 'no' → logprob: -14.500003814697266
    4. '_price' → logprob: -14.875003814697266
    5. '_without' → logprob: -15.750003814697266
    6. '_min' → logprob: -16.125003814697266
    7. 'No' → logprob: -17.000003814697266
    8. '(no' → logprob: -17.750003814697266
    9. '_n' → logprob: -18.000003814697266
    10. '_NO' → logprob: -19.375003814697266

Token 163: '_coupon' (ID: 197395)
  Prédit: '_coupon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coupon' → logprob: -0.004478662274777889
    2. '_price' → logprob: -5.504478454589844
    3. '_with' → logprob: -8.379478454589844
    4. '_no' → logprob: -8.754478454589844
    5. '_coin' → logprob: -12.879478454589844
    6. '_' → logprob: -13.129478454589844
    7. '_without' → logprob: -13.254478454589844
    8. '_discount' → logprob: -13.254478454589844
    9. ',_' → logprob: -13.879478454589844
    10. '_cost' → logprob: -14.129478454589844

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014253536239266396
    2. ',min' → logprob: -4.264253616333008
    3. ' ,' → logprob: -9.389253616333008
    4. '_min' → logprob: -12.639253616333008
    5. 'min' → logprob: -13.264253616333008
    6. '_,' → logprob: -14.764253616333008
    7. ',_' → logprob: -15.139253616333008
    8. ',m' → logprob: -15.639253616333008
    9. '(min' → logprob: -16.139253616333008
    10. ' min' → logprob: -16.139253616333008

Token 165: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.575939953327179
    2. ' min' → logprob: -0.825939953327179
    3. '_min' → logprob: -14.450940132141113
    4. '(min' → logprob: -18.325939178466797
    5. '	min' → logprob: -18.575939178466797
    6. '[min' → logprob: -19.700939178466797
    7. ',min' → logprob: -19.825939178466797
    8. ' ' → logprob: -20.825939178466797
    9. ')' → logprob: -20.950939178466797
    10. 'max' → logprob: -21.075939178466797

Token 166: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: 0.0
    2. '_prices' → logprob: -18.125
    3. 'price' → logprob: -18.25
    4. 'Price' → logprob: -21.125
    5. '_' → logprob: -21.125
    6. '_pr' → logprob: -21.25
    7. '_PRICE' → logprob: -21.25
    8. '_min' → logprob: -21.625
    9. ' _' → logprob: -21.75
    10. '\' → logprob: -21.875

Token 167: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -2.1008713702030946e-06
    2. 'with' → logprob: -13.125001907348633
    3. '_WITH' → logprob: -17.875001907348633
    4. '_price' → logprob: -18.500001907348633
    5. '_without' → logprob: -18.875001907348633
    6. 'With' → logprob: -19.375001907348633
    7. ')' → logprob: -19.875001907348633
    8. '_w' → logprob: -20.125001907348633
    9. '_' → logprob: -20.750001907348633
    10. '_using' → logprob: -21.250001907348633

Token 168: '_coupon' (ID: 197395)
  Prédit: '_coupon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coupon' → logprob: -0.0007586462306790054
    2. 'coupon' → logprob: -7.250758647918701
    3. 'oupon' → logprob: -10.000758171081543
    4. 'Coupon' → logprob: -13.375758171081543
    5. ' coupon' → logprob: -14.000758171081543
    6. '_price' → logprob: -14.500758171081543
    7. 'with' → logprob: -16.25075912475586
    8. '_discount' → logprob: -16.50075912475586
    9. '_with' → logprob: -17.12575912475586
    10. 'cou' → logprob: -17.62575912475586

Token 169: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47407880425453186
    2. '))' → logprob: -0.9740787744522095
    3. ')))' → logprob: -13.849079132080078
    4. ' )' → logprob: -15.224079132080078
    5. '))
' → logprob: -15.974079132080078
    6. ')
' → logprob: -15.974079132080078
    7. ')`' → logprob: -16.599079132080078
    8. '())' → logprob: -16.849079132080078
    9. '})' → logprob: -16.849079132080078
    10. ')}' → logprob: -16.974079132080078


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 167
Tokens correctement prédits (1ère position, stricte): 93
Tokens correctement prédits (1ère position, avec adaptation): 93
Tokens correctement prédits (top 10): 143
Précision stricte (1ère position): 55.69%
Précision adaptée (1ère position): 55.69%
Précision (top 10): 85.63%
================================================================================
