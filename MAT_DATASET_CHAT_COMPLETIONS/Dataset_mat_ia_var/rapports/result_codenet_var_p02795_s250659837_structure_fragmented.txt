================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:30:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_H():
    return int(input())

def read_W():
    return int(input())

def read_N():
    return int(input())

def is_W_greater_equal_H(W, H):
    return W >= H

def compute_division(a, b):
    return a // b

def has_no_remainder(a, b):
    return a % b == 0

def print_result(value):
    print(value)

def process_case_divisible(div):
    print_result(div)

def process_case_not_divisible(div):
    print_result(div + 1)

def handle_W_greater_equal_H(N, W):
    div = compute_division(N, W)
    if has_no_remainder(N, W):
        process_case_divisible(div)
    else:
        process_case_not_divisible(div)

def handle_W_less_H(N, H):
    div = compute_division(N, H)
    if has_no_remainder(N, H):
        process_case_divisible(div)
    else:
        process_case_not_divisible(div)

def main():
    H = read_H()
    W = read_W()
    N = read_N()
    if is_W_greater_equal_H(W, H):
        handle_W_greater_equal_H(N, W)
    else:
        handle_W_less_H(N, H)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_H' (ID: 4391)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6539517641067505
    2. 'e' → logprob: -1.4039517641067505
    3. '_' → logprob: -1.9039517641067505
    4. '():' → logprob: -3.528951644897461
    5. 'T' → logprob: -4.653951644897461
    6. '(e' → logprob: -4.903951644897461
    7. 'andler' → logprob: -5.028951644897461
    8. 'andle' → logprob: -5.153951644897461
    9. 'ello' → logprob: -5.778951644897461
    10. '_e' → logprob: -6.153951644897461

Token 4: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4535830616950989
    2. '\' → logprob: -1.703583002090454
    3. ':' → logprob: -2.828583002090454
    4. '```' → logprob: -2.828583002090454
    5. '   ' → logprob: -3.203583002090454
    6. ''\' → logprob: -5.578583240509033
    7. ''' → logprob: -5.953583240509033
    8. '    
' → logprob: -6.203583240509033
    9. '
' → logprob: -6.328583240509033
    10. 'newline' → logprob: -6.578583240509033

Token 5: ' return' (ID: 622)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.20254714787006378
    2. 'return' (adapté à ' return') → logprob: -1.9525471925735474
    3. '   ' → logprob: -4.327547073364258
    4. 'x' → logprob: -5.077547073364258
    5. '```' → logprob: -5.077547073364258
    6. 'n' → logprob: -5.827547073364258
    7. ' ' → logprob: -6.202547073364258
    8. 'pass' → logprob: -6.452547073364258
    9. ' return' → logprob: -6.827547073364258
    10. '    ' → logprob: -6.827547073364258

Token 6: ' int' (ID: 677)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.8420856595039368
    2. ' ' → logprob: -0.9670856595039368
    3. '"' → logprob: -2.092085599899292
    4. '  ' → logprob: -4.342085838317871
    5. ''' → logprob: -4.467085838317871
    6. ' None' → logprob: -4.717085838317871
    7. ' "' → logprob: -5.092085838317871
    8. '[]' → logprob: -5.092085838317871
    9. '_' → logprob: -5.217085838317871
    10. ' _' → logprob: -5.467085838317871

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007423263159580529
    2. '('' → logprob: -7.750742435455322
    3. '(input' → logprob: -8.250741958618164
    4. 'input' → logprob: -11.250741958618164
    5. '(
' → logprob: -12.250741958618164
    6. ''' → logprob: -12.250741958618164
    7. '_' → logprob: -12.250741958618164
    8. ' (' → logprob: -12.625741958618164
    9. '("("' → logprob: -12.750741958618164
    10. ')' → logprob: -13.125741958618164

Token 8: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2617872655391693
    2. '()' → logprob: -1.8867872953414917
    3. '())' → logprob: -2.886787176132202
    4. '('' → logprob: -4.511787414550781
    5. ')' → logprob: -4.636787414550781
    6. '("("' → logprob: -7.011787414550781
    7. '(""))' → logprob: -7.761787414550781
    8. '()))' → logprob: -8.261787414550781
    9. '))' → logprob: -9.261787414550781
    10. '")' → logprob: -9.636787414550781

Token 9: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3337428569793701
    2. '\n' → logprob: -2.58374285697937
    3. 'd' → logprob: -2.83374285697937
    4. '#' → logprob: -3.58374285697937
    5. '```' → logprob: -3.83374285697937
    6. '
' → logprob: -3.95874285697937
    7. 'x' → logprob: -4.583743095397949
    8. '(' → logprob: -4.708743095397949
    9. 'r' → logprob: -5.208743095397949
    10. 'n' → logprob: -5.208743095397949

Token 10: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.03873635083436966
    2. ' write' → logprob: -3.413736343383789
    3. ' space' → logprob: -6.538736343383789
    4. ' ' → logprob: -6.913736343383789
    5. ' calculate' → logprob: -6.913736343383789
    6. ' process' → logprob: -8.038736343383789
    7. ' main' → logprob: -8.038736343383789
    8. ' compute' → logprob: -8.663736343383789
    9. 'read' → logprob: -8.788736343383789
    10. '_' → logprob: -8.788736343383789

Token 11: '_W' (ID: 5493)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03577974811196327
    2. '_H' → logprob: -4.03577995300293
    3. '_A' → logprob: -5.28577995300293
    4. '_S' → logprob: -5.66077995300293
    5. '_I' → logprob: -6.03577995300293
    6. ' _' → logprob: -7.16077995300293
    7. '_T' → logprob: -7.41077995300293
    8. '__' → logprob: -7.41077995300293
    9. '_C' → logprob: -7.53577995300293
    10. '_P' → logprob: -7.66077995300293

Token 12: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.006288283504545689
    2. '(' → logprob: -5.881288051605225
    3. '_' → logprob: -6.131288051605225
    4. '()' → logprob: -6.881288051605225
    5. ' ():' → logprob: -9.006288528442383
    6. '()>' → logprob: -9.506288528442383
    7. '()">' → logprob: -11.631288528442383
    8. ':' → logprob: -11.881288528442383
    9. 'def' → logprob: -12.006288528442383
    10. '```' → logprob: -12.131288528442383

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.7372048862162046e-05
    2. ' return' → logprob: -11.250027656555176
    3. '    ' → logprob: -12.250027656555176
    4. '(' → logprob: -13.125027656555176
    5. '       ' → logprob: -13.250027656555176
    6. ')' → logprob: -13.750027656555176
    7. ' ' → logprob: -13.750027656555176
    8. '   ' → logprob: -14.125027656555176
    9. ' def' → logprob: -14.875027656555176
    10. '  ' → logprob: -14.875027656555176

Token 14: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.04970708116889
    2. 'return' (adapté à ' return') → logprob: -3.5497071743011475
    3. '   ' → logprob: -3.9247071743011475
    4. ' ' → logprob: -12.174707412719727
    5. 'int' → logprob: -13.174707412719727
    6. ' int' → logprob: -13.674707412719727
    7. ' ' → logprob: -13.799707412719727
    8. '  ' → logprob: -14.299707412719727
    9. '    ' → logprob: -14.549707412719727
    10. '	return' → logprob: -15.549707412719727

Token 15: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5759825706481934
    2. ' int' → logprob: -0.8259825706481934
    3. ' ' → logprob: -10.825983047485352
    4. '   ' → logprob: -11.825983047485352
    5. '(int' → logprob: -12.200983047485352
    6. '<int' → logprob: -12.825983047485352
    7. '  ' → logprob: -13.200983047485352
    8. 'input' → logprob: -13.450983047485352
    9. '[int' → logprob: -13.450983047485352
    10. ' input' → logprob: -14.075983047485352

Token 16: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25211235880851746
    2. '(input' → logprob: -1.5021123886108398
    3. ' (' → logprob: -9.00211238861084
    4. '(

' → logprob: -11.00211238861084
    5. '(
' → logprob: -11.37711238861084
    6. '('' → logprob: -12.75211238861084
    7. '(read' → logprob: -12.87711238861084
    8. '(_' → logprob: -13.12711238861084
    9. '(open' → logprob: -13.25211238861084
    10. '(eval' → logprob: -13.37711238861084

Token 17: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007841432467103004
    2. '()' → logprob: -5.38284158706665
    3. ')' → logprob: -5.75784158706665
    4. ' ())' → logprob: -10.507841110229492
    5. '()))' → logprob: -10.632841110229492
    6. '))' → logprob: -12.882841110229492
    7. '(' → logprob: -13.632841110229492
    8. '())
' → logprob: -13.632841110229492
    9. '())

' → logprob: -14.882841110229492
    10. '();)' → logprob: -15.007841110229492

Token 18: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001613769680261612
    2. 'W' → logprob: -7.126613616943359
    3. '```' → logprob: -8.25161361694336
    4. '

' → logprob: -8.75161361694336
    5. '
' → logprob: -9.37661361694336
    6. 'H' → logprob: -9.50161361694336
    7. '\' → logprob: -10.00161361694336
    8. 'N' → logprob: -10.12661361694336
    9. '<|end|>' → logprob: -10.75161361694336
    10. 'd' → logprob: -11.00161361694336

Token 19: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.1845773607492447
    2. ' main' → logprob: -1.8095773458480835
    3. ' solve' → logprob: -6.184577465057373
    4. 'read' → logprob: -7.184577465057373
    5. ' ' → logprob: -7.184577465057373
    6. ' input' → logprob: -8.434576988220215
    7. ' process' → logprob: -8.809576988220215
    8. ' get' → logprob: -9.059576988220215
    9. ' A' → logprob: -9.184576988220215
    10. ' print' → logprob: -9.434576988220215

Token 20: '_N' (ID: 3080)
  Prédit: '_N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_N' → logprob: -1.102693796157837
    2. '_K' → logprob: -1.227693796157837
    3. '_A' → logprob: -2.102693796157837
    4. '_' → logprob: -3.102693796157837
    5. '_T' → logprob: -3.227693796157837
    6. '_D' → logprob: -3.352693796157837
    7. '_H' → logprob: -3.477693796157837
    8. '_S' → logprob: -3.852693796157837
    9. '_X' → logprob: -4.102693557739258
    10. '_C' → logprob: -4.227693557739258

Token 21: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0007992653991095722
    2. '(' → logprob: -7.375799179077148
    3. '()' → logprob: -9.375799179077148
    4. '_' → logprob: -9.750799179077148
    5. '()>' → logprob: -12.250799179077148
    6. ' ():' → logprob: -12.625799179077148
    7. '()">' → logprob: -12.625799179077148
    8. ':' → logprob: -12.750799179077148
    9. '():
' → logprob: -13.000799179077148
    10. '()(' → logprob: -13.000799179077148

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038196721579879522
    2. ' return' → logprob: -5.753819465637207
    3. '    ' → logprob: -7.878819465637207
    4. ' ' → logprob: -9.003819465637207
    5. '(' → logprob: -9.878819465637207
    6. 'return' → logprob: -10.253819465637207
    7. '  ' → logprob: -10.378819465637207
    8. ' (' → logprob: -12.253819465637207
    9. '```' → logprob: -12.753819465637207
    10. ' ' → logprob: -13.003819465637207

Token 23: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5810442566871643
    2. ' return' → logprob: -0.8310442566871643
    3. 'int' → logprob: -6.0810441970825195
    4. '   ' → logprob: -6.0810441970825195
    5. ' int' → logprob: -7.5810441970825195
    6. ' ' → logprob: -11.83104419708252
    7. '(int' → logprob: -13.83104419708252
    8. '  ' → logprob: -13.83104419708252
    9. '(return' → logprob: -15.45604419708252
    10. 'eturn' → logprob: -15.70604419708252

Token 24: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.11297819763422012
    2. 'int' → logprob: -2.237978219985962
    3. ' ' → logprob: -9.112977981567383
    4. '(int' → logprob: -11.362977981567383
    5. '[int' → logprob: -11.612977981567383
    6. '   ' → logprob: -11.862977981567383
    7. '  ' → logprob: -11.862977981567383
    8. '<int' → logprob: -12.987977981567383
    9. ' in' → logprob: -13.487977981567383
    10. '	int' → logprob: -13.612977981567383

Token 25: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2016957551240921
    2. '(' → logprob: -1.7016957998275757
    3. '()' → logprob: -8.326695442199707
    4. ' (' → logprob: -11.201695442199707
    5. '(
' → logprob: -11.701695442199707
    6. 'input' → logprob: -12.326695442199707
    7. '("("' → logprob: -12.951695442199707
    8. '(

' → logprob: -13.326695442199707
    9. '('' → logprob: -13.451695442199707
    10. '   ' → logprob: -13.451695442199707

Token 26: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3520171046257019
    2. '()' → logprob: -1.6020171642303467
    3. ')' → logprob: -2.3520171642303467
    4. ' ())' → logprob: -10.852017402648926
    5. '(' → logprob: -11.352017402648926
    6. '())
' → logprob: -12.102017402648926
    7. '();)' → logprob: -12.102017402648926
    8. '()))' → logprob: -12.727017402648926
    9. '()]' → logprob: -13.227017402648926
    10. '()
' → logprob: -13.352017402648926

Token 27: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006313162390142679
    2. 'H' → logprob: -6.631313323974609
    3. 'class' → logprob: -6.631313323974609
    4. 'd' → logprob: -6.881313323974609
    5. 'h' → logprob: -7.881313323974609
    6. 'x' → logprob: -8.00631332397461
    7. 'S' → logprob: -8.75631332397461
    8. 'A' → logprob: -8.75631332397461
    9. 'n' → logprob: -9.25631332397461
    10. 'N' → logprob: -9.38131332397461

Token 28: ' is' (ID: 382)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.008188173174858093
    2. ' main' → logprob: -5.258188247680664
    3. ' solve' → logprob: -6.508188247680664
    4. 'read' → logprob: -6.883188247680664
    5. ' ' → logprob: -9.508188247680664
    6. ' create' → logprob: -9.633188247680664
    7. ' build' → logprob: -9.883188247680664
    8. ' input' → logprob: -10.258188247680664
    9. ' A' → logprob: -11.133188247680664
    10. ' resolve' → logprob: -11.258188247680664

Token 29: '_W' (ID: 5493)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3376365900039673
    2. ' _' → logprob: -1.5876365900039673
    3. '_pal' → logprob: -3.8376364707946777
    4. '_valid' → logprob: -4.462636470794678
    5. '_prime' → logprob: -4.462636470794678
    6. '_space' → logprob: -4.712636470794678
    7. '_square' → logprob: -5.837636470794678
    8. '_empty' → logprob: -6.087636470794678
    9. ' ' → logprob: -6.212636470794678
    10. '_in' → logprob: -6.587636470794678

Token 30: '_g' (ID: 5439)
  Prédit: 'idth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idth' → logprob: -1.3010348081588745
    2. '_' → logprob: -1.5510348081588745
    3. '_h' → logprob: -1.8010348081588745
    4. '_i' → logprob: -2.801034927368164
    5. 'h' → logprob: -3.176034927368164
    6. 'i' → logprob: -3.426034927368164
    7. 'ith' → logprob: -3.426034927368164
    8. 'id' → logprob: -3.551034927368164
    9. '()' → logprob: -3.926034927368164
    10. '_in' → logprob: -4.176034927368164

Token 31: 'reater' (ID: 110926)
  Prédit: 'reater'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reater' → logprob: -0.010554760694503784
    2. 't' → logprob: -5.135554790496826
    3. '_equal' → logprob: -6.385554790496826
    4. 'te' → logprob: -6.885554790496826
    5. 'reate' → logprob: -8.260554313659668
    6. '():' → logprob: -8.635554313659668
    7. '```' → logprob: -8.635554313659668
    8. 'r' → logprob: -9.135554313659668
    9. '_re' → logprob: -9.135554313659668
    10. '_' → logprob: -9.260554313659668

Token 32: '_equal' (ID: 27882)
  Prédit: '_than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_than' → logprob: -0.10686501860618591
    2. '_' → logprob: -2.9818649291992188
    3. '(' → logprob: -3.3568649291992188
    4. '_equal' → logprob: -5.106864929199219
    5. '_or' → logprob: -5.356864929199219
    6. '_THAN' → logprob: -6.481864929199219
    7. '(_' → logprob: -6.606864929199219
    8. 'than' → logprob: -7.981864929199219
    9. '(_)' → logprob: -8.106864929199219
    10. '_(' → logprob: -8.356864929199219

Token 33: '_H' (ID: 4391)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6241308450698853
    2. '(W' → logprob: -1.6241308450698853
    3. '_than' → logprob: -2.1241307258605957
    4. '(H' → logprob: -2.6241307258605957
    5. '_' → logprob: -3.6241307258605957
    6. '(_' → logprob: -4.374130725860596
    7. '_W' → logprob: -4.999130725860596
    8. '(s' → logprob: -5.249130725860596
    9. '(_)' → logprob: -5.999130725860596
    10. 'than' → logprob: -6.124130725860596

Token 34: '(W' (ID: 26031)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027933519333600998
    2. '_' → logprob: -3.7779335975646973
    3. '():' → logprob: -5.652933597564697
    4. '(_' → logprob: -7.527933597564697
    5. '(_)' → logprob: -8.652933120727539
    6. '(_:' → logprob: -9.402933120727539
    7. '()' → logprob: -9.902933120727539
    8. '_(' → logprob: -10.027933120727539
    9. '_:' → logprob: -10.152933120727539
    10. ':' → logprob: -10.402933120727539

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2597162127494812
    2. ' >=' → logprob: -2.634716272354126
    3. '):' → logprob: -2.634716272354126
    4. ' ,' → logprob: -3.384716272354126
    5. '>=' → logprob: -3.509716272354126
    6. ')' → logprob: -4.134716033935547
    7. ')>=' → logprob: -6.384716033935547
    8. '   ' → logprob: -6.509716033935547
    9. ' ):' → logprob: -7.634716033935547
    10. ' )' → logprob: -7.634716033935547

Token 36: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0700157880783081
    2. ' H' → logprob: -2.6950159072875977
    3. '   ' → logprob: -10.195015907287598
    4. ' ' → logprob: -10.445015907287598
    5. 'W' → logprob: -12.320015907287598
    6. '  ' → logprob: -13.195015907287598
    7. ')' → logprob: -13.320015907287598
    8. ' ' → logprob: -13.445015907287598
    9. '	H' → logprob: -14.382515907287598
    10. '):' → logprob: -14.757515907287598

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00011093381908722222
    2. ')' → logprob: -9.250110626220703
    3. ' ):' → logprob: -12.000110626220703
    4. ',' → logprob: -12.750110626220703
    5. ':' → logprob: -13.125110626220703
    6. '=' → logprob: -13.500110626220703
    7. '):
' → logprob: -13.750110626220703
    8. '>:' → logprob: -15.500110626220703
    9. ' ' → logprob: -16.125110626220703
    10. '   ' → logprob: -16.125110626220703

Token 38: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.039184994995594025
    2. ':' → logprob: -3.789185047149658
    3. '   ' → logprob: -5.289185047149658
    4. '():' → logprob: -5.289185047149658
    5. '<|end|>' → logprob: -6.039185047149658
    6. ' (' → logprob: -7.039185047149658
    7. '(
' → logprob: -7.539185047149658
    8. '):' → logprob: -7.789185047149658
    9. ' ' → logprob: -8.2891845703125
    10. ':return' → logprob: -8.5391845703125

Token 39: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10001912713050842
    2. ' return' → logprob: -2.6000192165374756
    3. 'return' (adapté à ' return') → logprob: -4.2250189781188965
    4. ' ' → logprob: -5.9750189781188965
    5. '(' → logprob: -6.3500189781188965
    6. '    ' → logprob: -6.7250189781188965
    7. ' (' → logprob: -8.225019454956055
    8. '  ' → logprob: -8.725019454956055
    9. ')' → logprob: -9.850019454956055
    10. '       ' → logprob: -10.350019454956055

Token 40: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.08900774270296097
    2. 'W' → logprob: -2.46400785446167
    3. ' ' → logprob: -10.964007377624512
    4. '   ' → logprob: -11.339007377624512
    5. '(W' → logprob: -11.839007377624512
    6. '	W' → logprob: -11.839007377624512
    7. ' (' → logprob: -11.964007377624512
    8. '(' → logprob: -12.089007377624512
    9. ' ' → logprob: -12.339007377624512
    10. '  ' → logprob: -13.214007377624512

Token 41: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.22561204433441162
    2. '>=' → logprob: -1.6006120443344116
    3. '>' → logprob: -8.850611686706543
    4. '   ' → logprob: -10.975611686706543
    5. ' ' → logprob: -11.600611686706543
    6. ')>=' → logprob: -11.725611686706543
    7. ' >' → logprob: -11.975611686706543
    8. '">' → logprob: -12.600611686706543
    9. ']>=' → logprob: -13.100611686706543
    10. '  ' → logprob: -13.350611686706543

Token 42: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.009757505729794502
    2. ' H' → logprob: -4.6347575187683105
    3. '   ' → logprob: -14.009757041931152
    4. ' ' → logprob: -14.509757041931152
    5. '_H' → logprob: -15.759757041931152
    6. '	H' → logprob: -16.63475799560547
    7. ' ' → logprob: -16.88475799560547
    8. '  ' → logprob: -17.50975799560547
    9. '```' → logprob: -18.25975799560547
    10. '`' → logprob: -18.63475799560547

Token 43: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09004047513008118
    2. '

' → logprob: -2.465040445327759
    3. '
' → logprob: -7.215040683746338
    4. '\n' → logprob: -9.34004020690918
    5. ' def' → logprob: -9.59004020690918
    6. '\' → logprob: -9.96504020690918
    7. '<|end|>' → logprob: -10.09004020690918
    8. '```' → logprob: -10.59004020690918
    9. '#' → logprob: -11.21504020690918
    10. ' 

' → logprob: -11.59004020690918

Token 44: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0022234106436371803
    2. '
' → logprob: -6.752223491668701
    3. '

' → logprob: -7.127223491668701
    4. '<|end|>' → logprob: -8.877223014831543
    5. '```' → logprob: -10.627223014831543
    6. '\' → logprob: -11.002223014831543
    7. '\n' → logprob: -11.002223014831543
    8. '  
' → logprob: -11.627223014831543
    9. '<|end|>' → logprob: -11.877223014831543
    10. ' 

' → logprob: -12.377223014831543

Token 45: ' compute' (ID: 23864)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.7881282567977905
    2. ' main' → logprob: -1.2881282567977905
    3. 'is' → logprob: -2.28812837600708
    4. ' is' → logprob: -3.41312837600708
    5. 'max' → logprob: -3.41312837600708
    6. 'read' → logprob: -3.78812837600708
    7. 'solve' → logprob: -4.28812837600708
    8. 'min' → logprob: -4.91312837600708
    9. 'calculate' → logprob: -5.16312837600708
    10. ' max' → logprob: -5.16312837600708

Token 46: '_div' (ID: 36926)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.9458159804344177
    2. '_area' → logprob: -1.3208160400390625
    3. '_result' → logprob: -2.6958160400390625
    4. '_min' → logprob: -3.1958160400390625
    5. '_answer' → logprob: -3.8208160400390625
    6. '_A' → logprob: -4.0708160400390625
    7. '_' → logprob: -4.3208160400390625
    8. '_S' → logprob: -4.3208160400390625
    9. '_sum' → logprob: -4.3208160400390625
    10. '_W' → logprob: -4.6958160400390625

Token 47: 'ision' (ID: 3625)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1506279557943344
    2. 'ide' → logprob: -2.400627851486206
    3. 'ision' → logprob: -3.650627851486206
    4. '_mod' → logprob: -4.900628089904785
    5. '_' → logprob: -5.025628089904785
    6. 'isor' → logprob: -5.400628089904785
    7. 'isions' → logprob: -6.650628089904785
    8. 'ider' → logprob: -7.775628089904785
    9. '_floor' → logprob: -8.275628089904785
    10. 'is' → logprob: -8.275628089904785

Token 48: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12282544374465942
    2. '(n' → logprob: -3.2478253841400146
    3. '(a' → logprob: -3.4978253841400146
    4. '(W' → logprob: -3.8728253841400146
    5. '(x' → logprob: -4.372825622558594
    6. '(value' → logprob: -5.997825622558594
    7. '_' → logprob: -6.247825622558594
    8. '_result' → logprob: -6.747825622558594
    9. '(A' → logprob: -6.872825622558594
    10. '(div' → logprob: -6.997825622558594

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004328402690589428
    2. ',b' → logprob: -6.37932825088501
    3. ' ,' → logprob: -7.00432825088501
    4. ')' → logprob: -7.75432825088501
    5. ' /' → logprob: -8.629328727722168
    6. 'by' → logprob: -8.629328727722168
    7. '//' → logprob: -8.879328727722168
    8. ' //' → logprob: -8.879328727722168
    9. ',a' → logprob: -9.254328727722168
    10. '_' → logprob: -9.629328727722168

Token 50: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04871987923979759
    2. ' b' → logprob: -3.048719882965088
    3. '   ' → logprob: -9.92371940612793
    4. ' ' → logprob: -9.92371940612793
    5. 'div' → logprob: -11.42371940612793
    6. '  ' → logprob: -11.92371940612793
    7. '    ' → logprob: -12.79871940612793
    8. 'n' → logprob: -13.29871940612793
    9. '```' → logprob: -13.29871940612793
    10. '	b' → logprob: -13.54871940612793

Token 51: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00018780550453811884
    2. '):
' → logprob: -9.125187873840332
    3. ')' → logprob: -9.625187873840332
    4. ':' → logprob: -12.375187873840332
    5. '):
' → logprob: -12.875187873840332
    6. '():' → logprob: -13.000187873840332
    7. ' ):' → logprob: -13.875187873840332
    8. '   ' → logprob: -14.125187873840332
    9. ',' → logprob: -14.500187873840332
    10. '+' → logprob: -15.000187873840332

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013971085660159588
    2. 'a' → logprob: -4.888970851898193
    3. ' return' → logprob: -5.638970851898193
    4. ' a' → logprob: -6.138970851898193
    5. 'return' → logprob: -8.263971328735352
    6. ' (' → logprob: -8.513971328735352
    7. '(a' → logprob: -10.138971328735352
    8. '    ' → logprob: -10.513971328735352
    9. '       ' → logprob: -11.263971328735352
    10. ')' → logprob: -11.388971328735352

Token 53: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1865649223327637
    2. 'return' (adapté à ' return') → logprob: -1.1865649223327637
    3. ' return' → logprob: -1.3115649223327637
    4. ' a' → logprob: -2.5615649223327637
    5. ' (' → logprob: -3.6865649223327637
    6. '   ' → logprob: -4.186564922332764
    7. '(' → logprob: -6.811564922332764
    8. '(a' → logprob: -7.061564922332764
    9. ' if' → logprob: -8.936565399169922
    10. 'if' → logprob: -9.561565399169922

Token 54: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11293815821409225
    2. ' a' → logprob: -2.237938165664673
    3. ' (' → logprob: -9.362937927246094
    4. '   ' → logprob: -11.487937927246094
    5. '(a' → logprob: -11.737937927246094
    6. ' ' → logprob: -12.737937927246094
    7. '(' → logprob: -12.987937927246094
    8. '0' → logprob: -13.487937927246094
    9. ' -' → logprob: -13.487937927246094
    10. 'int' → logprob: -14.362937927246094

Token 55: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.08436976373195648
    2. '//' → logprob: -2.834369659423828
    3. '/' → logprob: -4.459369659423828
    4. ' /' → logprob: -4.584369659423828
    5. ' ' → logprob: -8.209369659423828
    6. ' ' → logprob: -11.084369659423828
    7. '/b' → logprob: -11.084369659423828
    8. '%' → logprob: -11.334369659423828
    9. '   ' → logprob: -11.834369659423828
    10. '`' → logprob: -11.959369659423828

Token 56: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.306760805164231e-05
    2. ' b' → logprob: -11.25001335144043
    3. ' ' → logprob: -19.50001335144043
    4. '  ' → logprob: -20.87501335144043
    5. '   ' → logprob: -21.37501335144043
    6. '	b' → logprob: -21.62501335144043
    7. '_b' → logprob: -23.62501335144043
    8. ')b' → logprob: -23.62501335144043
    9. '>b' → logprob: -23.75001335144043
    10. ' б' → logprob: -24.87501335144043

Token 57: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0027871690690517426
    2. '<|end|>' → logprob: -6.627787113189697
    3. '```' → logprob: -7.752787113189697
    4. '\' → logprob: -8.127787590026855
    5. '<|end|>' → logprob: -8.502787590026855
    6. '
' → logprob: -9.002787590026855
    7. '

' → logprob: -9.252787590026855
    8. '\n' → logprob: -9.877787590026855
    9. '#' → logprob: -10.377787590026855
    10. 'W' → logprob: -10.377787590026855

Token 58: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006576312007382512
    2. '```' → logprob: -8.37565803527832
    3. '

' → logprob: -9.50065803527832
    4. '\' → logprob: -10.00065803527832
    5. 'for' → logprob: -10.12565803527832
    6. '#' → logprob: -10.50065803527832
    7. 'a' → logprob: -10.50065803527832
    8. 'W' → logprob: -10.75065803527832
    9. 'class' → logprob: -10.87565803527832
    10. 'print' → logprob: -10.87565803527832

Token 59: ' has' (ID: 853)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4487384259700775
    2. 'main' → logprob: -1.0737384557724
    3. 'compute' → logprob: -4.9487385749816895
    4. ' compute' → logprob: -5.5737385749816895
    5. 'read' → logprob: -6.5737385749816895
    6. 'solve' → logprob: -6.9487385749816895
    7. ' read' → logprob: -7.1987385749816895
    8. ' max' → logprob: -7.4487385749816895
    9. 'def' → logprob: -7.5737385749816895
    10. 'max' → logprob: -7.5737385749816895

Token 60: '_no' (ID: 13575)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.6130532622337341
    2. '_' → logprob: -2.113053321838379
    3. '_div' → logprob: -2.863053321838379
    4. '_more' → logprob: -3.363053321838379
    5. '_key' → logprob: -3.613053321838379
    6. '_input' → logprob: -3.988053321838379
    7. '_value' → logprob: -4.238053321838379
    8. '_mod' → logprob: -4.488053321838379
    9. '_W' → logprob: -4.488053321838379
    10. '_N' → logprob: -4.613053321838379

Token 61: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.005688206758350134
    2. '_' → logprob: -6.130688190460205
    3. '_mod' → logprob: -6.505688190460205
    4. '_div' → logprob: -7.130688190460205
    5. '_over' → logprob: -9.130688667297363
    6. '_t' → logprob: -9.255688667297363
    7. '_error' → logprob: -9.380688667297363
    8. 're' → logprob: -9.380688667297363
    9. '_rem' → logprob: -9.380688667297363
    10. '_overlap' → logprob: -9.380688667297363

Token 62: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.22337301075458527
    2. 'm' → logprob: -2.2233729362487793
    3. 'st' → logprob: -2.5983729362487793
    4. 'main' → logprob: -4.348372936248779
    5. '_' → logprob: -6.348372936248779
    6. 's' → logprob: -6.723372936248779
    7. 'ma' → logprob: -7.473372936248779
    8. 'turn' → logprob: -8.098373413085938
    9. '_main' → logprob: -9.098373413085938
    10. '(main' → logprob: -9.098373413085938

Token 63: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.40498656034469604
    2. '(' → logprob: -1.2799866199493408
    3. ' (' → logprob: -2.904986619949341
    4. ' ' → logprob: -9.529986381530762
    5. '(n' → logprob: -9.904986381530762
    6. '(x' → logprob: -10.904986381530762
    7. '((' → logprob: -10.904986381530762
    8. '(num' → logprob: -11.404986381530762
    9. '_(' → logprob: -11.654986381530762
    10. '(A' → logprob: -11.904986381530762

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007008640095591545
    2. ' ,' → logprob: -5.1320085525512695
    3. ' %' → logprob: -7.5070085525512695
    4. '%' → logprob: -8.13200855255127
    5. ')' → logprob: -8.88200855255127
    6. '%,' → logprob: -10.50700855255127
    7. ' %,' → logprob: -10.50700855255127
    8. ',a' → logprob: -11.63200855255127
    9. ' ' → logprob: -11.75700855255127
    10. ' )' → logprob: -12.25700855255127

Token 65: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.6326057314872742
    2. 'b' → logprob: -0.7576057314872742
    3. ' ' → logprob: -13.38260555267334
    4. ')' → logprob: -13.38260555267334
    5. ')b' → logprob: -13.38260555267334
    6. ' ' → logprob: -14.13260555267334
    7. 'a' → logprob: -14.63260555267334
    8. ' )' → logprob: -15.75760555267334
    9. ' б' → logprob: -15.88260555267334
    10. '	b' → logprob: -16.007606506347656

Token 66: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001017551330733113
    2. ')' → logprob: -9.250102043151855
    3. '):
' → logprob: -12.875102043151855
    4. ' ):' → logprob: -13.250102043151855
    5. ':' → logprob: -14.000102043151855
    6. '():' → logprob: -15.625102043151855
    7. '   ' → logprob: -16.50010108947754
    8. ')：' → logprob: -16.50010108947754
    9. '):
' → logprob: -17.25010108947754
    10. '=' → logprob: -17.75010108947754

Token 67: '   ' (ID: 271)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.393786758184433
    2. 'a' → logprob: -1.8937867879867554
    3. '   ' → logprob: -1.8937867879867554
    4. ' return' → logprob: -3.768786668777466
    5. '(a' → logprob: -7.393786907196045
    6. ' (' → logprob: -8.018786430358887
    7. 'return' → logprob: -8.143786430358887
    8. '(' → logprob: -9.768786430358887
    9. ' ' → logprob: -9.893786430358887
    10. '    ' → logprob: -10.143786430358887

Token 68: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4926132261753082
    2. ' return' → logprob: -1.4926131963729858
    3. ' a' → logprob: -2.1176133155822754
    4. 'return' (adapté à ' return') → logprob: -3.2426133155822754
    5. '   ' → logprob: -5.367613315582275
    6. '(a' → logprob: -9.117612838745117
    7. ' (' → logprob: -11.242612838745117
    8. ' ' → logprob: -11.617612838745117
    9. '	return' → logprob: -12.992612838745117
    10. '	a' → logprob: -13.117612838745117

Token 69: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47411665320396423
    2. ' a' → logprob: -0.9741166830062866
    3. '(a' → logprob: -10.724116325378418
    4. ' (' → logprob: -11.349116325378418
    5. '(' → logprob: -12.849116325378418
    6. ' ' → logprob: -13.724116325378418
    7. '	a' → logprob: -13.724116325378418
    8. '   ' → logprob: -14.724116325378418
    9. '0' → logprob: -15.099116325378418
    10. ' ' → logprob: -15.349116325378418

Token 70: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6931925415992737
    2. ' %' → logprob: -0.6931925415992737
    3. ' ' → logprob: -10.193192481994629
    4. ' ' → logprob: -12.318192481994629
    5. '%b' → logprob: -13.193192481994629
    6. '%s' → logprob: -15.068192481994629
    7. '％' → logprob: -15.193192481994629
    8. '[' → logprob: -15.818192481994629
    9. '%i' → logprob: -15.943192481994629
    10. '```' → logprob: -16.068193435668945

Token 71: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023245712742209435
    2. ' b' → logprob: -3.7732458114624023
    3. '	b' → logprob: -15.898245811462402
    4. ' ' → logprob: -16.148244857788086
    5. ' ' → logprob: -19.023244857788086
    6. '_b' → logprob: -19.523244857788086
    7. '<|end|>' → logprob: -19.648244857788086
    8. '2' → logprob: -20.398244857788086
    9. ' б' → logprob: -20.648244857788086
    10. '  ' → logprob: -20.773244857788086

Token 72: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.21914352476596832
    2. '==' → logprob: -1.7191435098648071
    3. '=' → logprob: -4.344143390655518
    4. ' ' → logprob: -5.469143390655518
    5. ' =' → logprob: -9.219143867492676
    6. ' ' → logprob: -9.219143867492676
    7. '()==' → logprob: -9.719143867492676
    8. '(' → logprob: -10.594143867492676
    9. '0' → logprob: -10.969143867492676
    10. '_' → logprob: -11.469143867492676

Token 73: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. ' ' → logprob: -19.378177642822266
    4. '   ' → logprob: -19.628177642822266
    5. '۰' → logprob: -20.003177642822266
    6. '<|end|>' → logprob: -20.503177642822266
    7. '  ' → logprob: -21.003177642822266
    8. ' ' → logprob: -21.003177642822266
    9. '０' → logprob: -21.128177642822266
    10. '```' → logprob: -21.503177642822266

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '０' → logprob: -19.125
    4. '۰' → logprob: -19.25
    5. '000' → logprob: -20.5
    6. '00' → logprob: -20.5
    7. '०' → logprob: -20.5
    8. '০' → logprob: -20.625
    9. '٠' → logprob: -20.75
    10. '<|end|>' → logprob: -20.875

Token 75: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.12974689900875092
    2. 'def' → logprob: -2.254746913909912
    3. '
' → logprob: -4.254746913909912
    4. '<|end|>' → logprob: -6.629746913909912
    5. '```' → logprob: -7.379746913909912
    6. '\n' → logprob: -8.504746437072754
    7. '


' → logprob: -9.754746437072754
    8. '[' → logprob: -9.879746437072754
    9. '<|end|>' → logprob: -10.004746437072754
    10. 'newline' → logprob: -10.129746437072754

Token 76: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010258516296744347
    2. '

' → logprob: -4.885258674621582
    3. '```' → logprob: -6.760258674621582
    4. '
' → logprob: -6.885258674621582
    5. '<|end|>' → logprob: -8.260258674621582
    6. '\' → logprob: -9.760258674621582
    7. '\n' → logprob: -10.010258674621582
    8. '[' → logprob: -10.760258674621582
    9. '(def' → logprob: -12.010258674621582
    10. ' def' → logprob: -12.010258674621582

Token 77: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.45931276679039
    2. 'main' → logprob: -1.0843127965927124
    3. 'compute' → logprob: -5.084312915802002
    4. 'calculate' → logprob: -5.334312915802002
    5. ' compute' → logprob: -5.584312915802002
    6. 'solve' → logprob: -5.709312915802002
    7. ' calculate' → logprob: -6.334312915802002
    8. ' solve' → logprob: -6.709312915802002
    9. ' get' → logprob: -6.709312915802002
    10. 'get' → logprob: -6.709312915802002

Token 78: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018200045451521873
    2. '()' → logprob: -4.893199920654297
    3. '_result' → logprob: -5.518199920654297
    4. '_' → logprob: -5.643199920654297
    5. '("")' → logprob: -7.643199920654297
    6. '('' → logprob: -8.518199920654297
    7. '_results' → logprob: -8.518199920654297
    8. '_s' → logprob: -8.518199920654297
    9. '_output' → logprob: -8.643199920654297
    10. ' (' → logprob: -8.643199920654297

Token 79: '(value' (ID: 6333)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015283049084246159
    2. '(result' → logprob: -4.390283107757568
    3. '(s' → logprob: -7.640283107757568
    4. '(a' → logprob: -7.890283107757568
    5. '(value' → logprob: -8.14028263092041
    6. '(data' → logprob: -8.26528263092041
    7. '("("' → logprob: -8.39028263092041
    8. '()' → logprob: -8.51528263092041
    9. '(x' → logprob: -8.76528263092041
    10. '('' → logprob: -9.39028263092041

Token 80: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012836175039410591
    2. ')' → logprob: -4.76283597946167
    3. '):
' → logprob: -5.63783597946167
    4. '(value' → logprob: -7.38783597946167
    5. ')value' → logprob: -11.512836456298828
    6. ' ):' → logprob: -11.887836456298828
    7. ':' → logprob: -12.637836456298828
    8. ',value' → logprob: -12.762836456298828
    9. '):
' → logprob: -13.012836456298828
    10. '(' → logprob: -13.137836456298828

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020497082732617855
    2. ' print' → logprob: -8.500205039978027
    3. 'print' → logprob: -14.125205039978027
    4. '   ' → logprob: -14.750205039978027
    5. '```' → logprob: -15.000205039978027
    6. '    
' → logprob: -17.62520408630371
    7. '       ' → logprob: -18.62520408630371
    8. '    ' → logprob: -18.87520408630371
    9. '	print' → logprob: -19.12520408630371
    10. '   ' → logprob: -19.12520408630371

Token 82: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.31354743242263794
    2. ' print' → logprob: -1.3135473728179932
    3. '   ' → logprob: -8.188547134399414
    4. '```' → logprob: -11.813547134399414
    5. '	print' → logprob: -15.938547134399414
    6. 'pass' → logprob: -16.813547134399414
    7. 'def' → logprob: -16.938547134399414
    8. ' ' → logprob: -16.938547134399414
    9. '``' → logprob: -17.188547134399414
    10. ' pass' → logprob: -17.313547134399414

Token 83: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.06197429448366165
    2. '(' → logprob: -2.811974287033081
    3. ' (' → logprob: -12.43697452545166
    4. 'value' → logprob: -13.56197452545166
    5. '()' → logprob: -14.31197452545166
    6. '(f' → logprob: -15.06197452545166
    7. '(
' → logprob: -15.93697452545166
    8. '(result' → logprob: -16.311973571777344
    9. '(Value' → logprob: -16.936973571777344
    10. ')value' → logprob: -16.936973571777344

Token 84: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.0
    3. ' )' → logprob: -18.5
    4. '))' → logprob: -20.375
    5. ')

' → logprob: -20.625
    6. ')}' → logprob: -20.75
    7. ')`' → logprob: -20.75
    8. '')' → logprob: -21.0
    9. '}' → logprob: -21.125
    10. '   ' → logprob: -21.375

Token 85: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011640305165201426
    2. 'if' → logprob: -7.251163959503174
    3. 'H' → logprob: -7.876163959503174
    4. '```' → logprob: -10.001164436340332
    5. 'W' → logprob: -10.876164436340332
    6. 'N' → logprob: -12.626164436340332
    7. ' def' → logprob: -13.376164436340332
    8. 'from' → logprob: -13.626164436340332
    9. 'import' → logprob: -14.251164436340332
    10. '``' → logprob: -14.501164436340332

Token 86: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2014816552400589
    2. 'main' → logprob: -1.7014816999435425
    3. '_main' → logprob: -10.201481819152832
    4. 'def' → logprob: -10.701481819152832
    5. ' def' → logprob: -12.326481819152832
    6. 'process' → logprob: -14.076481819152832
    7. ' process' → logprob: -14.201481819152832
    8. 'solve' → logprob: -14.201481819152832
    9. '	main' → logprob: -14.701481819152832
    10. ' run' → logprob: -15.076481819152832

Token 87: '_case' (ID: 43667)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16409975290298462
    2. '(' → logprob: -2.03909969329834
    3. '_(' → logprob: -4.16409969329834
    4. '(_' → logprob: -6.66409969329834
    5. '_input' → logprob: -7.28909969329834
    6. '(W' → logprob: -7.53909969329834
    7. '_line' → logprob: -7.66409969329834
    8. ' _' → logprob: -8.16409969329834
    9. '```' → logprob: -8.16409969329834
    10. '(_)' → logprob: -8.16409969329834

Token 88: '_div' (ID: 36926)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005306689068675041
    2. '(W' → logprob: -5.880306720733643
    3. '(H' → logprob: -6.880306720733643
    4. ' (' → logprob: -8.005306243896484
    5. '_' → logprob: -8.505306243896484
    6. '(_' → logprob: -8.505306243896484
    7. '(N' → logprob: -8.755306243896484
    8. '(C' → logprob: -9.005306243896484
    9. '()' → logprob: -9.255306243896484
    10. '(case' → logprob: -9.505306243896484

Token 89: 'isible' (ID: 181386)
  Prédit: 'ision'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ision' → logprob: -0.05260520428419113
    2. 'ide' → logprob: -3.677605152130127
    3. '(' → logprob: -4.677605152130127
    4. '_' → logprob: -5.552605152130127
    5. 'isible' → logprob: -5.552605152130127
    6. 'iding' → logprob: -7.177605152130127
    7. '(is' → logprob: -7.427605152130127
    8. 'ison' → logprob: -7.677605152130127
    9. 'ided' → logprob: -7.677605152130127
    10. '()' → logprob: -7.677605152130127

Token 90: '(div' (ID: 73108)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5543820261955261
    2. '(W' → logprob: -1.429382085800171
    3. '():' → logprob: -2.554382085800171
    4. '(H' → logprob: -3.054382085800171
    5. '(a' → logprob: -3.554382085800171
    6. '_by' → logprob: -5.054381847381592
    7. '(_' → logprob: -5.179381847381592
    8. '()' → logprob: -5.179381847381592
    9. ' (' → logprob: -5.429381847381592
    10. '_' → logprob: -6.179381847381592

Token 91: '):
' (ID: 1883)
  Prédit: 'isible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'isible' → logprob: -0.025628920644521713
    2. 'ision' → logprob: -4.525629043579102
    3. 'isor' → logprob: -4.650629043579102
    4. 'isable' → logprob: -7.275629043579102
    5. 'idend' → logprob: -7.525629043579102
    6. 'idable' → logprob: -7.525629043579102
    7. 'iding' → logprob: -7.650629043579102
    8. ')' → logprob: -7.650629043579102
    9. 'ided' → logprob: -8.150629043579102
    10. 'ide' → logprob: -8.275629043579102

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6809077858924866
    2. ':' → logprob: -0.8059077858924866
    3. '():' → logprob: -3.305907726287842
    4. '):' → logprob: -5.180907726287842
    5. '(' → logprob: -6.180907726287842
    6. ' :' → logprob: -7.055907726287842
    7. ',' → logprob: -7.930907726287842
    8. ')' → logprob: -8.430908203125
    9. '```' → logprob: -8.680908203125
    10. '       ' → logprob: -8.930908203125

Token 93: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04925473406910896
    2. ' return' → logprob: -4.174254894256592
    3. ' print' → logprob: -4.174254894256592
    4. 'print' (adapté à ' print') → logprob: -5.174254894256592
    5. ' result' → logprob: -5.299254894256592
    6. 'return' → logprob: -5.924254894256592
    7. 'result' → logprob: -6.799254894256592
    8. ' pass' → logprob: -6.799254894256592
    9. ' for' → logprob: -7.549254894256592
    10. '    
' → logprob: -8.174254417419434

Token 94: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.6792610883712769
    2. '(div' → logprob: -0.8042610883712769
    3. '(' → logprob: -3.1792612075805664
    4. '_' → logprob: -6.179261207580566
    5. '_div' → logprob: -7.304261207580566
    6. '_(' → logprob: -7.929261207580566
    7. '(_' → logprob: -8.554261207580566
    8. '("_' → logprob: -8.679261207580566
    9. '(f' → logprob: -9.054261207580566
    10. 'result' → logprob: -9.304261207580566

Token 95: '(div' (ID: 73108)
  Prédit: '(div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(div' → logprob: -3.166338137816638e-05
    2. '(' → logprob: -10.375031471252441
    3. 'div' → logprob: -16.375032424926758
    4. '((' → logprob: -16.375032424926758
    5. ' (' → logprob: -16.500032424926758
    6. '(dev' → logprob: -16.750032424926758
    7. '(di' → logprob: -16.750032424926758
    8. '(dist' → logprob: -17.875032424926758
    9. '(f' → logprob: -18.000032424926758
    10. '(int' → logprob: -18.250032424926758

Token 96: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001917214714922011
    2. '+' → logprob: -6.876917362213135
    3. '*' → logprob: -7.501917362213135
    4. ' +' → logprob: -9.126916885375977
    5. '   ' → logprob: -9.251916885375977
    6. ' )' → logprob: -10.126916885375977
    7. ' *' → logprob: -10.251916885375977
    8. ')
' → logprob: -10.626916885375977
    9. '-' → logprob: -11.251916885375977
    10. '))' → logprob: -12.626916885375977

Token 97: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.128163257315464e-07
    2. '<|end|>' → logprob: -15.625
    3. ' def' → logprob: -17.0
    4. '
' → logprob: -17.25
    5. '```' → logprob: -18.375
    6. 'ndef' → logprob: -19.25
    7. 'else' → logprob: -20.125
    8. '    
' → logprob: -20.25
    9. 'elif' → logprob: -20.25
    10. '  
' → logprob: -20.375

Token 98: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.3134807050228119
    2. 'process' → logprob: -1.3134807348251343
    3. ' def' → logprob: -8.813480377197266
    4. 'def' → logprob: -9.813480377197266
    5. '_process' → logprob: -12.313480377197266
    6. ' not' → logprob: -12.688480377197266
    7. 'not' → logprob: -13.563480377197266
    8. ' is' → logprob: -13.813480377197266
    9. ' main' → logprob: -14.063480377197266
    10. ' proces' → logprob: -14.063480377197266

Token 99: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -0.000528606993611902
    2. '_non' → logprob: -7.875528812408447
    3. '_not' → logprob: -9.500528335571289
    4. '_' → logprob: -10.500528335571289
    5. '_div' → logprob: -11.250528335571289
    6. 'case' → logprob: -11.250528335571289
    7. '_n' → logprob: -12.000528335571289
    8. '_else' → logprob: -13.375528335571289
    9. '_code' → logprob: -13.500528335571289
    10. '__' → logprob: -13.500528335571289

Token 100: '_not' (ID: 17599)
  Prédit: '_not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_not' → logprob: -0.0997617244720459
    2. '_non' → logprob: -2.599761724472046
    3. '_div' → logprob: -4.474761962890625
    4. '_n' → logprob: -5.474761962890625
    5. 'not' → logprob: -6.599761962890625
    6. '_else' → logprob: -6.724761962890625
    7. '(div' → logprob: -7.599761962890625
    8. '(' → logprob: -8.224761962890625
    9. '(not' → logprob: -8.599761962890625
    10. '_ind' → logprob: -8.599761962890625

Token 101: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -4.3464544432936236e-05
    2. 'div' → logprob: -10.500043869018555
    3. '_' → logprob: -11.625043869018555
    4. '_def' → logprob: -12.250043869018555
    5. '_equal' → logprob: -14.500043869018555
    6. '(div' → logprob: -15.000043869018555
    7. ' _' → logprob: -15.125043869018555
    8. '_dis' → logprob: -15.625043869018555
    9. '<div' → logprob: -15.875043869018555
    10. '_d' → logprob: -15.875043869018555

Token 102: 'isible' (ID: 181386)
  Prédit: 'isible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isible' → logprob: -5.228561349213123e-05
    2. 'is' → logprob: -10.250052452087402
    3. 'isable' → logprob: -11.375052452087402
    4. '(div' → logprob: -12.875052452087402
    5. 'ISIBLE' → logprob: -14.125052452087402
    6. 'idable' → logprob: -14.625052452087402
    7. '(is' → logprob: -14.625052452087402
    8. '(' → logprob: -14.875052452087402
    9. 'ible' → logprob: -15.500052452087402
    10. 'div' → logprob: -15.625052452087402

Token 103: '(div' (ID: 73108)
  Prédit: '(div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(div' → logprob: -0.029649117961525917
    2. '():' → logprob: -4.279649257659912
    3. '(' → logprob: -4.404649257659912
    4. '(def' → logprob: -6.779649257659912
    5. '(_' → logprob: -7.654649257659912
    6. '(not' → logprob: -8.279648780822754
    7. '(n' → logprob: -8.654648780822754
    8. '()' → logprob: -8.779648780822754
    9. '(rest' → logprob: -8.779648780822754
    10. '(d' → logprob: -9.154648780822754

Token 104: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.961907148361206
    2. '):' → logprob: -1.086907148361206
    3. ' +' → logprob: -1.711907148361206
    4. '+' → logprob: -2.836907148361206
    5. '   ' → logprob: -4.086907386779785
    6. '):
' → logprob: -4.086907386779785
    7. ' ,' → logprob: -5.461907386779785
    8. ' ):' → logprob: -6.086907386779785
    9. ' ' → logprob: -8.336907386779785
    10. ')' → logprob: -8.461907386779785

Token 105: '   ' (ID: 271)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.2626347839832306
    2. 'print' → logprob: -1.7626347541809082
    3. '   ' → logprob: -2.887634754180908
    4. ' div' → logprob: -6.137634754180908
    5. 'process' → logprob: -6.637634754180908
    6. '	div' → logprob: -9.262635231018066
    7. ' print' → logprob: -10.012635231018066
    8. '(div' → logprob: -10.262635231018066
    9. 'pass' → logprob: -12.262635231018066
    10. ' process' → logprob: -12.387635231018066

Token 106: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5839135050773621
    2. 'div' → logprob: -0.8339135050773621
    3. 'process' → logprob: -4.958913326263428
    4. '   ' → logprob: -7.833913326263428
    5. ' div' → logprob: -7.833913326263428
    6. ' print' → logprob: -9.458913803100586
    7. 'pass' → logprob: -10.833913803100586
    8. ' process' → logprob: -11.583913803100586
    9. 'def' → logprob: -12.208913803100586
    10. '	div' → logprob: -12.458913803100586

Token 107: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -2.6656825866666622e-05
    2. '_value' → logprob: -11.12502670288086
    3. '(' → logprob: -12.37502670288086
    4. '('_' → logprob: -13.12502670288086
    5. '("_' → logprob: -13.12502670288086
    6. 'Result' → logprob: -13.50002670288086
    7. '_results' → logprob: -14.25002670288086
    8. 'result' → logprob: -15.25002670288086
    9. '_RESULT' → logprob: -15.75002670288086
    10. '(_)' → logprob: -15.87502670288086

Token 108: '(div' (ID: 73108)
  Prédit: '(div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(div' → logprob: -0.006728395354002714
    2. '(' → logprob: -5.006728172302246
    3. ' (' → logprob: -11.881728172302246
    4. 'div' → logprob: -12.756728172302246
    5. '((' → logprob: -14.131728172302246
    6. '(dev' → logprob: -14.631728172302246
    7. '()' → logprob: -15.006728172302246
    8. '(int' → logprob: -15.006728172302246
    9. ' div' → logprob: -15.631728172302246
    10. '(dist' → logprob: -15.756728172302246

Token 109: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25198087096214294
    2. ' +' → logprob: -1.5019809007644653
    3. ')' → logprob: -10.001980781555176
    4. '1' → logprob: -13.376980781555176
    5. '+)' → logprob: -13.376980781555176
    6. '   ' → logprob: -13.501980781555176
    7. ' plus' → logprob: -14.376980781555176
    8. ')+' → logprob: -15.126980781555176
    9. ' )' → logprob: -15.251980781555176
    10. ' ' → logprob: -15.501980781555176

Token 110: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004886920796707273
    2. ' ' → logprob: -7.625488758087158
    3. '   ' → logprob: -14.12548828125
    4. '  ' → logprob: -17.50048828125
    5. ')' → logprob: -18.50048828125
    6. '１' → logprob: -19.12548828125
    7. '+' → logprob: -19.50048828125
    8. ' ' → logprob: -19.50048828125
    9. ' one' → logprob: -19.50048828125
    10. '	' → logprob: -19.62548828125

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -15.375035285949707
    4. '  ' → logprob: -17.625036239624023
    5. '```' → logprob: -18.375036239624023
    6. '<|end|>' → logprob: -18.375036239624023
    7. ')' → logprob: -20.250036239624023
    8. '１' → logprob: -20.375036239624023
    9. '`' → logprob: -20.625036239624023
    10. '
' → logprob: -20.750036239624023

Token 112: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -13.500001907348633
    3. ' )' → logprob: -17.250001907348633
    4. ')

' → logprob: -18.125001907348633
    5. '')' → logprob: -18.500001907348633
    6. '`)' → logprob: -19.125001907348633
    7. ')return' → logprob: -19.750001907348633
    8. '}' → logprob: -19.750001907348633
    9. '<|end|>' → logprob: -19.875001907348633
    10. ')`' → logprob: -20.000001907348633

Token 113: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1875571544806007e-05
    2. '
' → logprob: -11.750011444091797
    3. '```' → logprob: -13.125011444091797
    4. ' def' → logprob: -14.000011444091797
    5. '<|end|>' → logprob: -15.000011444091797
    6. 'if' → logprob: -15.250011444091797
    7. '

' → logprob: -15.750011444091797
    8. '    
' → logprob: -16.375011444091797
    9. '  
' → logprob: -16.500011444091797
    10. 'W' → logprob: -16.500011444091797

Token 114: ' handle' (ID: 5318)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.11413831263780594
    2. ' main' → logprob: -2.23913836479187
    3. 'process' → logprob: -7.364138126373291
    4. 'solve' → logprob: -7.864138126373291
    5. 'def' → logprob: -8.61413860321045
    6. ' process' → logprob: -9.98913860321045
    7. ' solve' → logprob: -10.86413860321045
    8. 'run' → logprob: -10.98913860321045
    9. 'calculate' → logprob: -12.48913860321045
    10. 'Main' → logprob: -12.48913860321045

Token 115: '_W' (ID: 5493)
  Prédit: '_W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_W' → logprob: -0.6869795322418213
    2. '_' → logprob: -1.3119795322418213
    3. '(W' → logprob: -2.5619795322418213
    4. '_case' → logprob: -2.5619795322418213
    5. '_div' → logprob: -4.061979293823242
    6. '_input' → logprob: -4.311979293823242
    7. '_(' → logprob: -4.436979293823242
    8. '(' → logprob: -4.561979293823242
    9. '_H' → logprob: -4.936979293823242
    10. '(H' → logprob: -5.186979293823242

Token 116: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.022259168326854706
    2. '_(' → logprob: -5.02225923538208
    3. '_' → logprob: -5.27225923538208
    4. '_equal' → logprob: -5.39725923538208
    5. '(' → logprob: -6.39725923538208
    6. '_equals' → logprob: -6.77225923538208
    7. '_is' → logprob: -6.89725923538208
    8. '(W' → logprob: -7.52225923538208
    9. '_ge' → logprob: -7.64725923538208
    10. '_less' → logprob: -8.522258758544922

Token 117: 'reater' (ID: 110926)
  Prédit: 'reater'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reater' → logprob: -0.00014442270912695676
    2. 'reate' → logprob: -9.250144004821777
    3. 'reat' → logprob: -10.750144004821777
    4. 'greater' → logprob: -11.750144004821777
    5. 're' → logprob: -12.000144004821777
    6. '_re' → logprob: -12.375144004821777
    7. '>=' → logprob: -13.000144004821777
    8. '_equal' → logprob: -14.000144004821777
    9. '_' → logprob: -14.000144004821777
    10. '```' → logprob: -14.250144004821777

Token 118: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.00020413640595506877
    2. 'equal' → logprob: -8.625204086303711
    3. '_or' → logprob: -11.125204086303711
    4. '_than' → logprob: -12.500204086303711
    5. 'Equal' → logprob: -13.250204086303711
    6. '_equals' → logprob: -13.375204086303711
    7. '_EQUAL' → logprob: -13.875204086303711
    8. '_eq' → logprob: -15.000204086303711
    9. '_equ' → logprob: -15.250204086303711
    10. '=_' → logprob: -15.375204086303711

Token 119: '_H' (ID: 4391)
  Prédit: '_H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_H' → logprob: -0.0006324975984171033
    2. 'H' → logprob: -7.625632286071777
    3. '(H' → logprob: -9.375632286071777
    4. 'def' → logprob: -11.000632286071777
    5. '_W' → logprob: -11.125632286071777
    6. '```' → logprob: -12.000632286071777
    7. '_than' → logprob: -12.250632286071777
    8. '_or' → logprob: -12.875632286071777
    9. '(_' → logprob: -13.125632286071777
    10. '_' → logprob: -13.250632286071777

Token 120: '(N' (ID: 10564)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.008314440958201885
    2. '(' → logprob: -4.883314609527588
    3. ' (' → logprob: -7.758314609527588
    4. '(_' → logprob: -8.88331413269043
    5. '_(' → logprob: -9.75831413269043
    6. '_' → logprob: -11.13331413269043
    7. '():' → logprob: -11.13331413269043
    8. '(w' → logprob: -11.50831413269043
    9. '(H' → logprob: -11.75831413269043
    10. '_W' → logprob: -12.13331413269043

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009820901788771152
    2. ' ,' → logprob: -4.634820938110352
    3. ',W' → logprob: -10.134820938110352
    4. '   ' → logprob: -11.509820938110352
    5. '_,' → logprob: -12.509820938110352
    6. '):' → logprob: -12.759820938110352
    7. ' ' → logprob: -13.384820938110352
    8. 'W' → logprob: -13.884820938110352
    9. ',H' → logprob: -13.884820938110352
    10. ' W' → logprob: -14.009820938110352

Token 122: ' W' (ID: 486)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.02139628864824772
    2. ' H' → logprob: -4.146396160125732
    3. 'W' → logprob: -5.271396160125732
    4. ' W' → logprob: -9.27139663696289
    5. ')' → logprob: -9.89639663696289
    6. '   ' → logprob: -11.02139663696289
    7. '<|end|>' → logprob: -11.14639663696289
    8. 'def' → logprob: -11.39639663696289
    9. ' ' → logprob: -11.64639663696289
    10. 'N' → logprob: -12.64639663696289

Token 123: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003037962829694152
    2. '):' → logprob: -5.878037929534912
    3. ' ,' → logprob: -8.75303840637207
    4. '):
' → logprob: -9.75303840637207
    5. ')' → logprob: -12.12803840637207
    6. '   ' → logprob: -12.75303840637207
    7. ',H' → logprob: -12.87803840637207
    8. ' ):' → logprob: -13.25303840637207
    9. ',
' → logprob: -13.37803840637207
    10. '_,' → logprob: -13.87803840637207

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21238376200199127
    2. ':' → logprob: -1.71238374710083
    3. ':
' → logprob: -5.71238374710083
    4. '):
' → logprob: -5.96238374710083
    5. '):' → logprob: -6.08738374710083
    6. 'div' → logprob: -6.58738374710083
    7. '	div' → logprob: -7.96238374710083
    8. ' div' → logprob: -8.337384223937988
    9. ',' → logprob: -8.962384223937988
    10. '       ' → logprob: -9.212384223937988

Token 125: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' (adapté à ' div') → logprob: -0.01596081629395485
    2. 'if' → logprob: -4.390960693359375
    3. '   ' → logprob: -6.265960693359375
    4. 'quot' → logprob: -8.390960693359375
    5. 'lines' → logprob: -8.890960693359375
    6. 'rows' → logprob: -8.890960693359375
    7. 'num' → logprob: -9.140960693359375
    8. 'return' → logprob: -9.515960693359375
    9. 'H' → logprob: -9.640960693359375
    10. 'result' → logprob: -9.890960693359375

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16252535581588745
    2. '=' → logprob: -1.9125254154205322
    3. 'ision' → logprob: -6.162525177001953
    4. '   ' → logprob: -8.662525177001953
    5. 'isible' → logprob: -11.912525177001953
    6. 'isions' → logprob: -12.537525177001953
    7. '=W' → logprob: -13.787525177001953
    8. '=N' → logprob: -13.787525177001953
    9. '=int' → logprob: -14.037525177001953
    10. '  ' → logprob: -14.162525177001953

Token 127: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.002241727663204074
    2. ' compute' → logprob: -6.627241611480713
    3. 'N' → logprob: -7.002241611480713
    4. ' N' → logprob: -12.627242088317871
    5. 'W' → logprob: -13.752242088317871
    6. 'comput' → logprob: -15.752242088317871
    7. 'calculate' → logprob: -15.877242088317871
    8. '  ' → logprob: -16.002241134643555
    9. '   ' → logprob: -16.002241134643555
    10. '.compute' → logprob: -16.127241134643555

Token 128: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -8.061054359131958e-06
    2. 'div' → logprob: -12.125007629394531
    3. 'division' → logprob: -12.875007629394531
    4. ' division' → logprob: -18.12500762939453
    5. '_' → logprob: -18.37500762939453
    6. '_DIV' → logprob: -18.50000762939453
    7. 'Division' → logprob: -18.75000762939453
    8. 's' → logprob: -19.00000762939453
    9. 'ion' → logprob: -19.50000762939453
    10. '_di' → logprob: -19.87500762939453

Token 129: 'ision' (ID: 3625)
  Prédit: 'ision'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ision' → logprob: -0.0004585518909152597
    2. '_div' → logprob: -8.250458717346191
    3. 's' → logprob: -9.250458717346191
    4. 'division' → logprob: -10.125458717346191
    5. 'ison' → logprob: -11.250458717346191
    6. 'div' → logprob: -11.750458717346191
    7. '_' → logprob: -11.875458717346191
    8. 'vision' → logprob: -12.000458717346191
    9. 'is' → logprob: -12.000458717346191
    10. 'ion' → logprob: -12.750458717346191

Token 130: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00016074994346126914
    2. '(' → logprob: -8.875161170959473
    3. 'N' → logprob: -11.125161170959473
    4. ' (' → logprob: -12.250161170959473
    5. '(
' → logprob: -14.500161170959473
    6. '   ' → logprob: -14.500161170959473
    7. '(W' → logprob: -15.625161170959473
    8. ' ' → logprob: -16.875160217285156
    9. ' N' → logprob: -17.000160217285156
    10. '(n' → logprob: -17.375160217285156

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023720813915133476
    2. ',W' → logprob: -6.2523722648620605
    3. ' ,' → logprob: -7.7523722648620605
    4. 'W' → logprob: -11.877371788024902
    5. ',
' → logprob: -12.502371788024902
    6. ' W' → logprob: -13.877371788024902
    7. ',w' → logprob: -14.127371788024902
    8. '   ' → logprob: -14.502371788024902
    9. ')' → logprob: -16.00237274169922
    10. '(W' → logprob: -16.00237274169922

Token 132: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.47408992052078247
    2. ' W' → logprob: -0.9740899205207825
    3. '	W' → logprob: -12.224089622497559
    4. '   ' → logprob: -12.349089622497559
    5. ' ' → logprob: -13.224089622497559
    6. '(W' → logprob: -14.724089622497559
    7. ' ' → logprob: -14.724089622497559
    8. ')' → logprob: -15.099089622497559
    9. ',W' → logprob: -15.974089622497559
    10. '<W' → logprob: -15.974089622497559

Token 133: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25198718905448914
    2. ')
' → logprob: -1.5019872188568115
    3. ')
' → logprob: -10.00198745727539
    4. ')

' → logprob: -11.87698745727539
    5. ' )' → logprob: -12.87698745727539
    6. ' )
' → logprob: -13.00198745727539
    7. '   ' → logprob: -14.50198745727539
    8. ' ' → logprob: -16.25198745727539
    9. '),' → logprob: -16.62698745727539
    10. ')`
' → logprob: -16.75198745727539

Token 134: '   ' (ID: 271)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.29378706216812134
    2. '   ' → logprob: -1.6687870025634766
    3. 'if' → logprob: -2.9187870025634766
    4. 'return' → logprob: -5.293787002563477
    5. 'print' → logprob: -5.918787002563477
    6. ' process' → logprob: -6.043787002563477
    7. ' if' → logprob: -6.418787002563477
    8. 'def' → logprob: -8.418787002563477
    9. 'handle' → logprob: -10.418787002563477
    10. '<|end|>' → logprob: -10.668787002563477

Token 135: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6338188052177429
    2. 'process' → logprob: -0.7588188052177429
    3. 'return' → logprob: -7.758818626403809
    4. ' if' → logprob: -7.883818626403809
    5. ' process' → logprob: -8.258818626403809
    6. '   ' → logprob: -9.508818626403809
    7. 'div' → logprob: -10.633818626403809
    8. 'print' → logprob: -11.133818626403809
    9. '
' → logprob: -11.383818626403809
    10. '(process' → logprob: -11.633818626403809

Token 136: ' has' (ID: 853)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.02325386554002762
    2. ' has' → logprob: -3.773253917694092
    3. '(has' → logprob: -12.023253440856934
    4. '	has' → logprob: -13.648253440856934
    5. '   ' → logprob: -15.148253440856934
    6. 'not' → logprob: -15.148253440856934
    7. 'ha' → logprob: -15.523253440856934
    8. '.has' → logprob: -16.02325439453125
    9. '_has' → logprob: -16.02325439453125
    10. 'is' → logprob: -16.77325439453125

Token 137: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -7.896309739408025e-07
    2. '_not' → logprob: -14.500000953674316
    3. 'no' → logprob: -16.0
    4. '_n' → logprob: -17.125
    5. '_' → logprob: -17.5
    6. 'No' → logprob: -17.625
    7. '_No' → logprob: -18.375
    8. '_NO' → logprob: -18.625
    9. '__' → logprob: -19.0
    10. '_to' → logprob: -19.125

Token 138: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.0019362468738108873
    2. 're' → logprob: -6.251936435699463
    3. '_r' → logprob: -12.501935958862305
    4. '_' → logprob: -13.251935958862305
    5. 'r' → logprob: -14.001935958862305
    6. '_rem' → logprob: -14.876935958862305
    7. 'R' → logprob: -15.751935958862305
    8. '(re' → logprob: -16.001935958862305
    9. '__' → logprob: -16.376935958862305
    10. '	re' → logprob: -16.751935958862305

Token 139: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.0009500489104539156
    2. 'm' → logprob: -7.250949859619141
    3. 'ma' → logprob: -9.00094985961914
    4. 'div' → logprob: -9.25094985961914
    5. 'main' → logprob: -11.25094985961914
    6. 's' → logprob: -13.25094985961914
    7. 'a' → logprob: -13.37594985961914
    8. 're' → logprob: -14.12594985961914
    9. '(' → logprob: -14.62594985961914
    10. 'st' → logprob: -14.87594985961914

Token 140: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -9.436450636712834e-05
    2. ' (' → logprob: -9.750094413757324
    3. '(' → logprob: -10.250094413757324
    4. '(n' → logprob: -15.500094413757324
    5. ' ' → logprob: -16.000093460083008
    6. '((' → logprob: -16.375093460083008
    7. '```' → logprob: -17.250093460083008
    8. '(
' → logprob: -17.375093460083008
    9. '   ' → logprob: -17.375093460083008
    10. 'div' → logprob: -17.625093460083008

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004708276130259037
    2. ',W' → logprob: -5.629708290100098
    3. ' ,' → logprob: -6.879708290100098
    4. 'W' → logprob: -10.129708290100098
    5. ')' → logprob: -11.379708290100098
    6. ',
' → logprob: -11.879708290100098
    7. '(W' → logprob: -12.004708290100098
    8. '(' → logprob: -12.504708290100098
    9. ' W' → logprob: -13.004708290100098
    10. '```' → logprob: -13.629708290100098

Token 142: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.08900173753499985
    2. ' W' → logprob: -2.4640016555786133
    3. '   ' → logprob: -10.214001655578613
    4. '	W' → logprob: -11.589001655578613
    5. ')' → logprob: -12.214001655578613
    6. ' ' → logprob: -12.339001655578613
    7. '(W' → logprob: -13.589001655578613
    8. '  ' → logprob: -13.839001655578613
    9. ',W' → logprob: -14.089001655578613
    10. '=W' → logprob: -14.214001655578613

Token 143: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025134736206382513
    2. '):
' → logprob: -6.002513408660889
    3. ':' → logprob: -10.752513885498047
    4. ')' → logprob: -11.377513885498047
    5. ' ):' → logprob: -12.752513885498047
    6. '   ' → logprob: -13.627513885498047
    7. '):

' → logprob: -15.252513885498047
    8. '):
' → logprob: -15.627513885498047
    9. '():' → logprob: -15.752513885498047
    10. '}:' → logprob: -16.752513885498047

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007989393547177315
    2. 'process' → logprob: -5.757989406585693
    3. ':
' → logprob: -6.132989406585693
    4. ':' → logprob: -6.257989406585693
    5. ' process' → logprob: -7.507989406585693
    6. '   ' → logprob: -9.132988929748535
    7. '(process' → logprob: -10.757988929748535
    8. '):
' → logprob: -11.257988929748535
    9. '	process' → logprob: -12.382988929748535
    10. ',' → logprob: -12.757988929748535

Token 145: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.005472925025969744
    2. ' process' → logprob: -5.2554731369018555
    3. '
' → logprob: -9.630473136901855
    4. '	process' → logprob: -9.630473136901855
    5. '       ' → logprob: -10.005473136901855
    6. '   ' → logprob: -10.130473136901855
    7. '(process' → logprob: -11.005473136901855
    8. '           ' → logprob: -13.255473136901855
    9. '_process' → logprob: -13.755473136901855
    10. '.process' → logprob: -14.005473136901855

Token 146: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -3.128163257315464e-07
    2. 'case' → logprob: -15.5
    3. '_' → logprob: -17.5
    4. '_code' → logprob: -19.125
    5. '_process' → logprob: -19.5
    6. '```' → logprob: -20.875
    7. '"_' → logprob: -21.125
    8. '_c' → logprob: -21.75
    9. ''_' → logprob: -22.125
    10. '\' → logprob: -22.25

Token 147: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -2.0100624169572257e-05
    2. '_not' → logprob: -11.375020027160645
    3. 'div' → logprob: -12.000020027160645
    4. '_case' → logprob: -13.375020027160645
    5. '<div' → logprob: -15.000020027160645
    6. '(div' → logprob: -15.750020027160645
    7. '_dist' → logprob: -16.62502098083496
    8. '_' → logprob: -16.75002098083496
    9. '```' → logprob: -16.87502098083496
    10. '_def' → logprob: -17.12502098083496

Token 148: 'isible' (ID: 181386)
  Prédit: 'isible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isible' → logprob: -1.8624639324116288e-06
    2. 'is' → logprob: -14.250001907348633
    3. 'isable' → logprob: -14.250001907348633
    4. 'ISIBLE' → logprob: -14.750001907348633
    5. 'ible' → logprob: -16.750001907348633
    6. 'visible' → logprob: -17.625001907348633
    7. '(' → logprob: -18.875001907348633
    8. '(is' → logprob: -19.125001907348633
    9. '_visible' → logprob: -19.750001907348633
    10. 'ensible' → logprob: -19.875001907348633

Token 149: '(div' (ID: 73108)
  Prédit: '(div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(div' → logprob: -2.5107177862082608e-05
    2. '(' → logprob: -10.625024795532227
    3. ' (' → logprob: -14.875024795532227
    4. '(def' → logprob: -16.000024795532227
    5. '(
' → logprob: -16.500024795532227
    6. 'div' → logprob: -16.625024795532227
    7. '(dev' → logprob: -17.375024795532227
    8. '(di' → logprob: -18.000024795532227
    9. '(dec' → logprob: -18.250024795532227
    10. '(dis' → logprob: -18.500024795532227

Token 150: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5458381772041321
    2. ')' → logprob: -1.2958381175994873
    3. ')
' → logprob: -1.9208381175994873
    4. 'else' → logprob: -7.670838356018066
    5. ' else' → logprob: -11.045838356018066
    6. ' )' → logprob: -13.170838356018066
    7. ' )
' → logprob: -13.795838356018066
    8. ')

' → logprob: -14.170838356018066
    9. ')
' → logprob: -14.170838356018066
    10. '):
' → logprob: -14.170838356018066

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023303711786866188
    2. 'else' → logprob: -3.773303747177124
    3. ' else' → logprob: -9.773303985595703
    4. '	else' → logprob: -14.273303985595703
    5. 'def' → logprob: -14.773303985595703
    6. '       ' → logprob: -17.273303985595703
    7. '    
' → logprob: -17.273303985595703
    8. '<|end|>' → logprob: -17.523303985595703
    9. '_else' → logprob: -17.648303985595703
    10. ' ' → logprob: -18.273303985595703

Token 152: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.04926415905356407
    2. '   ' → logprob: -3.0492641925811768
    3. ' else' → logprob: -7.299263954162598
    4. '	else' → logprob: -14.924263954162598
    5. ' ' → logprob: -17.174264907836914
    6. '    
' → logprob: -17.549264907836914
    7. '       ' → logprob: -18.174264907836914
    8. '  ' → logprob: -18.174264907836914
    9. '```' → logprob: -18.424264907836914
    10. '_else' → logprob: -19.674264907836914

Token 153: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030899707227945328
    2. ':
' → logprob: -3.5308997631073
    3. '       ' → logprob: -6.780899524688721
    4. '   ' → logprob: -12.030900001525879
    5. ':

' → logprob: -13.655900001525879
    6. ':
' → logprob: -13.780900001525879
    7. '    ' → logprob: -13.780900001525879
    8. ' :
' → logprob: -13.905900001525879
    9. ' :' → logprob: -14.405900001525879
    10. '<|end|>' → logprob: -14.655900001525879

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015502817404922098
    2. 'process' → logprob: -9.125155448913574
    3. ' process' → logprob: -10.000155448913574
    4. '	process' → logprob: -14.875155448913574
    5. '   ' → logprob: -15.500155448913574
    6. '           ' → logprob: -17.000154495239258
    7. '```' → logprob: -17.000154495239258
    8. ' ' → logprob: -18.250154495239258
    9. '	' → logprob: -18.250154495239258
    10. '     ' → logprob: -18.375154495239258

Token 155: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.6932104229927063
    2. 'process' (adapté à ' process') → logprob: -0.6932104229927063
    3. '       ' → logprob: -9.94321060180664
    4. '	process' → logprob: -11.19321060180664
    5. '   ' → logprob: -14.81821060180664
    6. '.process' → logprob: -15.06821060180664
    7. '_process' → logprob: -15.19321060180664
    8. 'rocess' → logprob: -15.94321060180664
    9. '(process' → logprob: -16.06821060180664
    10. ' proces' → logprob: -16.44321060180664

Token 156: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -6.704273118884885e-07
    2. 'case' → logprob: -14.375000953674316
    3. '_code' → logprob: -17.25
    4. '_' → logprob: -18.625
    5. '```' → logprob: -19.375
    6. '_not' → logprob: -19.5
    7. '_c' → logprob: -19.625
    8. ' case' → logprob: -19.875
    9. ' _' → logprob: -20.25
    10. '_process' → logprob: -20.75

Token 157: '_not' (ID: 17599)
  Prédit: '_not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_not' → logprob: -0.00044914212776347995
    2. 'not' → logprob: -7.750449180603027
    3. '_div' → logprob: -11.875449180603027
    4. '```' → logprob: -12.875449180603027
    5. '_' → logprob: -13.125449180603027
    6. 'div' → logprob: -13.625449180603027
    7. 'Not' → logprob: -14.250449180603027
    8. 's' → logprob: -14.375449180603027
    9. '_NOT' → logprob: -14.625449180603027
    10. '__' → logprob: -14.625449180603027

Token 158: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.029787179082632065
    2. 'div' → logprob: -3.529787063598633
    3. '(div' → logprob: -10.779787063598633
    4. '_not' → logprob: -12.279787063598633
    5. '<div' → logprob: -12.904787063598633
    6. '_' → logprob: -12.904787063598633
    7. '	div' → logprob: -14.154787063598633
    8. '_dis' → logprob: -14.279787063598633
    9. ' divisible' → logprob: -14.279787063598633
    10. '_def' → logprob: -14.779787063598633

Token 159: 'isible' (ID: 181386)
  Prédit: 'isible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isible' → logprob: -2.1054253011243418e-05
    2. 'isable' → logprob: -11.250020980834961
    3. 'is' → logprob: -11.875020980834961
    4. 'div' → logprob: -14.625020980834961
    5. 'ISIBLE' → logprob: -15.125020980834961
    6. 'visible' → logprob: -15.625020980834961
    7. 'ensible' → logprob: -17.00002098083496
    8. 'licable' → logprob: -17.37502098083496
    9. '(div' → logprob: -18.37502098083496
    10. 'sible' → logprob: -18.50002098083496

Token 160: '(div' (ID: 73108)
  Prédit: '(div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(div' → logprob: -1.7432603272027336e-06
    2. 'div' → logprob: -13.375001907348633
    3. '(' → logprob: -16.875001907348633
    4. ' (' → logprob: -18.625001907348633
    5. '(def' → logprob: -18.625001907348633
    6. '	div' → logprob: -18.625001907348633
    7. ' div' → logprob: -18.750001907348633
    8. '(dist' → logprob: -19.250001907348633
    9. '(di' → logprob: -19.875001907348633
    10. '(dev' → logprob: -19.875001907348633

Token 161: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.2994620242971e-06
    2. '   ' → logprob: -12.625008583068848
    3. ' )' → logprob: -13.000008583068848
    4. ')
' → logprob: -13.125008583068848
    5. ')return' → logprob: -15.750008583068848
    6. '))' → logprob: -16.12500762939453
    7. '+' → logprob: -16.37500762939453
    8. ')

' → logprob: -16.50000762939453
    9. ')}' → logprob: -16.62500762939453
    10. '       ' → logprob: -16.75000762939453

Token 162: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.158350151963532e-05
    2. '<|end|>' → logprob: -9.750061988830566
    3. '```' → logprob: -14.250061988830566
    4. ' def' → logprob: -14.375061988830566
    5. '#' → logprob: -14.500061988830566
    6. '
' → logprob: -14.875061988830566
    7. 'ndef' → logprob: -15.125061988830566
    8. '<|end|>' → logprob: -15.750061988830566
    9. '\' → logprob: -15.875061988830566
    10. '[' → logprob: -16.37506103515625

Token 163: ' handle' (ID: 5318)
  Prédit: 'handle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handle' → logprob: -0.22206313908100128
    2. ' handle' → logprob: -2.3470630645751953
    3. 'main' → logprob: -2.7220630645751953
    4. ' main' → logprob: -3.3470630645751953
    5. '_handle' → logprob: -6.722063064575195
    6. '_main' → logprob: -7.847063064575195
    7. 'process' → logprob: -7.972063064575195
    8. 'solve' → logprob: -8.222063064575195
    9. ' solve' → logprob: -8.972063064575195
    10. ' process' → logprob: -9.347063064575195

Token 164: '_W' (ID: 5493)
  Prédit: '_H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_H' → logprob: -0.29662594199180603
    2. 'H' → logprob: -1.9216259717941284
    3. '_W' → logprob: -2.296625852584839
    4. 'W' → logprob: -4.671626091003418
    5. '_' → logprob: -9.046626091003418
    6. 'not' → logprob: -9.921626091003418
    7. '_not' → logprob: -10.046626091003418
    8. 'is' → logprob: -10.421626091003418
    9. '_is' → logprob: -10.671626091003418
    10. '_N' → logprob: -10.921626091003418

Token 165: '_less' (ID: 154196)
  Prédit: '_less'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_less' → logprob: -0.4746241271495819
    2. '_g' → logprob: -0.9746241569519043
    3. '_sm' → logprob: -8.224623680114746
    4. '_l' → logprob: -8.849623680114746
    5. 'greater' → logprob: -10.224623680114746
    6. '_equal' → logprob: -10.224623680114746
    7. 'less' → logprob: -10.474623680114746
    8. '_not' → logprob: -11.349623680114746
    9. '_lower' → logprob: -11.474623680114746
    10. '_lt' → logprob: -12.974623680114746

Token 166: '_H' (ID: 4391)
  Prédit: '_equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.4916454553604126
    2. '_than' → logprob: -0.9916454553604126
    3. '_H' → logprob: -4.116645336151123
    4. 'than' → logprob: -7.866645336151123
    5. '_' → logprob: -8.241645812988281
    6. 'def' → logprob: -8.366645812988281
    7. 'equal' → logprob: -10.116645812988281
    8. 'H' → logprob: -10.491645812988281
    9. '(H' → logprob: -10.741645812988281
    10. '_then' → logprob: -10.866645812988281

Token 167: '(N' (ID: 10564)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.018529511988162994
    2. '(W' → logprob: -4.393529415130615
    3. '(N' → logprob: -5.768529415130615
    4. '(' → logprob: -5.893529415130615
    5. ' (' → logprob: -9.768529891967773
    6. '_(' → logprob: -10.893529891967773
    7. 'def' → logprob: -11.768529891967773
    8. '_H' → logprob: -12.018529891967773
    9. '(_' → logprob: -12.268529891967773
    10. '_' → logprob: -12.268529891967773

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.847109812544659e-05
    2. ' ,' → logprob: -10.250048637390137
    3. ',W' → logprob: -11.375048637390137
    4. ',
' → logprob: -14.250048637390137
    5. ',H' → logprob: -16.12504768371582
    6. '```' → logprob: -16.25004768371582
    7. '):' → logprob: -16.25004768371582
    8. 'W' → logprob: -16.37504768371582
    9. '   ' → logprob: -16.37504768371582
    10. ',

' → logprob: -16.50004768371582

Token 169: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.39211133122444153
    2. 'W' → logprob: -1.1421113014221191
    3. ' H' → logprob: -6.017111301422119
    4. ' W' → logprob: -6.267111301422119
    5. 'N' → logprob: -7.142111301422119
    6. '   ' → logprob: -10.392111778259277
    7. 'def' → logprob: -11.142111778259277
    8. ' ' → logprob: -11.892111778259277
    9. 'w' → logprob: -12.267111778259277
    10. 'handle' → logprob: -12.267111778259277

Token 170: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014415701851248741
    2. '):
' → logprob: -4.264415740966797
    3. '   ' → logprob: -8.514415740966797
    4. ')' → logprob: -11.139415740966797
    5. ',' → logprob: -11.139415740966797
    6. '):
' → logprob: -11.139415740966797
    7. ' ):' → logprob: -12.639415740966797
    8. ':' → logprob: -12.889415740966797
    9. 'def' → logprob: -14.139415740966797
    10. '):

' → logprob: -14.139415740966797

Token 171: '   ' (ID: 271)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.1839766651391983
    2. ' div' → logprob: -2.308976650238037
    3. '   ' → logprob: -2.683976650238037
    4. 'def' → logprob: -8.058977127075195
    5. '	div' → logprob: -10.058977127075195
    6. ' ' → logprob: -11.058977127075195
    7. '  ' → logprob: -11.683977127075195
    8. ' def' → logprob: -12.933977127075195
    9. '<div' → logprob: -14.558977127075195
    10. '(div' → logprob: -14.683977127075195

Token 172: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' (adapté à ' div') → logprob: -0.0004996551433578134
    2. ' div' → logprob: -7.750499725341797
    3. 'def' → logprob: -10.250499725341797
    4. '   ' → logprob: -10.875499725341797
    5. 'rows' → logprob: -12.625499725341797
    6. 'mod' → logprob: -12.875499725341797
    7. 'row' → logprob: -13.000499725341797
    8. '	div' → logprob: -13.375499725341797
    9. ' ' → logprob: -13.500499725341797
    10. 'quot' → logprob: -14.625499725341797

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750604182481766
    2. '=' → logprob: -3.5297505855560303
    3. ' ' → logprob: -16.90475082397461
    4. ' ' → logprob: -18.02975082397461
    5. 's' → logprob: -18.15475082397461
    6. '_' → logprob: -18.77975082397461
    7. '   ' → logprob: -19.02975082397461
    8. '＝' → logprob: -19.40475082397461
    9. '=int' → logprob: -19.65475082397461
    10. ')' → logprob: -19.77975082397461

Token 174: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0005530327325686812
    2. ' compute' → logprob: -7.500553131103516
    3. '   ' → logprob: -18.875553131103516
    4. 'computer' → logprob: -18.875553131103516
    5. 'comput' → logprob: -20.250553131103516
    6. 'com' → logprob: -20.625553131103516
    7. '.compute' → logprob: -20.750553131103516
    8. 'calculate' → logprob: -21.125553131103516
    9. 'process' → logprob: -21.250553131103516
    10. 'int' → logprob: -21.875553131103516

Token 175: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.01144447736442089
    2. 'division' → logprob: -4.511444568634033
    3. 'div' → logprob: -7.886444568634033
    4. 'Division' → logprob: -10.886444091796875
    5. '(N' → logprob: -14.011444091796875
    6. ' division' → logprob: -14.886444091796875
    7. 'a' → logprob: -15.261444091796875
    8. 'ation' → logprob: -15.886444091796875
    9. 'divide' → logprob: -16.136444091796875
    10. '<div' → logprob: -16.636444091796875

Token 176: 'ision' (ID: 3625)
  Prédit: 'ision'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ision' → logprob: -0.00011427151912357658
    2. 'division' → logprob: -9.500114440917969
    3. 's' → logprob: -11.125114440917969
    4. 'ion' → logprob: -11.375114440917969
    5. '_div' → logprob: -12.000114440917969
    6. 'Division' → logprob: -12.875114440917969
    7. 'ison' → logprob: -13.625114440917969
    8. 'vision' → logprob: -14.250114440917969
    9. 'div' → logprob: -14.250114440917969
    10. 'ition' → logprob: -14.375114440917969

Token 177: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.250000953674316
    3. 'N' → logprob: -15.625000953674316
    4. ' (' → logprob: -17.625
    5. '(n' → logprob: -17.625
    6. 'div' → logprob: -17.875
    7. 'def' → logprob: -18.125
    8. '   ' → logprob: -18.125
    9. '```' → logprob: -19.375
    10. '((' → logprob: -19.5

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004402055055834353
    2. ',H' → logprob: -8.00044059753418
    3. ' ,' → logprob: -10.00044059753418
    4. 'H' → logprob: -10.12544059753418
    5. ' H' → logprob: -11.25044059753418
    6. ',
' → logprob: -12.87544059753418
    7. ')' → logprob: -13.75044059753418
    8. '(H' → logprob: -14.00044059753418
    9. '   ' → logprob: -14.25044059753418
    10. '(' → logprob: -14.75044059753418

Token 179: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0052650682628154755
    2. ' H' → logprob: -5.255265235900879
    3. '   ' → logprob: -10.630265235900879
    4. ' ' → logprob: -13.130265235900879
    5. ')' → logprob: -14.005265235900879
    6. ' ' → logprob: -14.130265235900879
    7. ',' → logprob: -14.380265235900879
    8. 'h' → logprob: -14.380265235900879
    9. '	H' → logprob: -14.505265235900879
    10. '  ' → logprob: -14.817765235900879

Token 180: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38713744282722473
    2. ')' → logprob: -1.1371374130249023
    3. '   ' → logprob: -8.387137413024902
    4. 'def' → logprob: -10.887137413024902
    5. ' )
' → logprob: -11.512137413024902
    6. ')
' → logprob: -12.262137413024902
    7. ' )' → logprob: -12.762137413024902
    8. ')

' → logprob: -14.137137413024902
    9. ' ' → logprob: -14.262137413024902
    10. ' def' → logprob: -15.012137413024902

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2840261161327362
    2. 'if' → logprob: -1.4090261459350586
    3. ' if' → logprob: -6.409026145935059
    4. 'def' → logprob: -7.409026145935059
    5. '
' → logprob: -8.034026145935059
    6. 'process' → logprob: -9.159026145935059
    7. 'print' → logprob: -9.159026145935059
    8. '    
' → logprob: -10.784026145935059
    9. ' ' → logprob: -11.284026145935059
    10. '+' → logprob: -11.659026145935059

Token 182: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0016667309682816267
    2. 'print' → logprob: -6.75166654586792
    3. '   ' → logprob: -8.251667022705078
    4. ' if' → logprob: -9.001667022705078
    5. 'process' → logprob: -9.376667022705078
    6. '
' → logprob: -11.751667022705078
    7. 'div' → logprob: -12.001667022705078
    8. '```' → logprob: -12.251667022705078
    9. 'def' → logprob: -12.876667022705078
    10. 'has' → logprob: -13.751667022705078

Token 183: ' has' (ID: 853)
  Prédit: ' has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.25213420391082764
    2. 'has' → logprob: -1.5021342039108276
    3. ' not' → logprob: -8.627134323120117
    4. 'not' → logprob: -11.002134323120117
    5. '	has' → logprob: -12.877134323120117
    6. '(has' → logprob: -13.252134323120117
    7. ' is' → logprob: -14.127134323120117
    8. '   ' → logprob: -14.127134323120117
    9. ' ' → logprob: -14.252134323120117
    10. 'ha' → logprob: -14.502134323120117

Token 184: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -1.1160349458805285e-05
    2. 'no' → logprob: -11.625011444091797
    3. '_not' → logprob: -13.375011444091797
    4. 'No' → logprob: -14.750011444091797
    5. ' no' → logprob: -17.000011444091797
    6. 'not' → logprob: -17.000011444091797
    7. '_NO' → logprob: -17.750011444091797
    8. '_' → logprob: -18.125011444091797
    9. '_No' → logprob: -18.125011444091797
    10. '(no' → logprob: -18.250011444091797

Token 185: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.10023148357868195
    2. 're' → logprob: -2.350231409072876
    3. '_no' → logprob: -11.600231170654297
    4. 'R' → logprob: -11.600231170654297
    5. 'no' → logprob: -12.725231170654297
    6. '_rem' → logprob: -14.100231170654297
    7. 'rema' → logprob: -14.350231170654297
    8. 'not' → logprob: -14.350231170654297
    9. ' remainder' → logprob: -15.100231170654297
    10. '...' → logprob: -15.475231170654297

Token 186: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.0005749551928602159
    2. 'm' → logprob: -7.750575065612793
    3. 'ma' → logprob: -9.125575065612793
    4. 'main' → logprob: -11.000575065612793
    5. 're' → logprob: -11.750575065612793
    6. 'div' → logprob: -12.125575065612793
    7. 'inder' → logprob: -13.875575065612793
    8. 's' → logprob: -14.375575065612793
    9. 'rem' → logprob: -14.625575065612793
    10. 'mand' → logprob: -14.750575065612793

Token 187: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -4.723352049040841e-06
    2. '(' → logprob: -12.625004768371582
    3. 'N' → logprob: -13.875004768371582
    4. ' (' → logprob: -15.625004768371582
    5. '(n' → logprob: -16.625003814697266
    6. '```' → logprob: -17.375003814697266
    7. '(
' → logprob: -17.750003814697266
    8. '((' → logprob: -19.000003814697266
    9. ' ' → logprob: -19.250003814697266
    10. '(H' → logprob: -19.375003814697266

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017832369776442647
    2. '(H' → logprob: -6.62678337097168
    3. ',H' → logprob: -8.00178337097168
    4. '(' → logprob: -9.75178337097168
    5. ' ,' → logprob: -10.12678337097168
    6. ')' → logprob: -11.25178337097168
    7. ',
' → logprob: -12.75178337097168
    8. 'H' → logprob: -13.00178337097168
    9. '(N' → logprob: -13.62678337097168
    10. '   ' → logprob: -13.75178337097168

Token 189: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.043064847588539124
    2. ' H' → logprob: -3.168064832687378
    3. '   ' → logprob: -10.043065071105957
    4. ' ' → logprob: -11.668065071105957
    5. ')' → logprob: -13.293065071105957
    6. '  ' → logprob: -13.293065071105957
    7. 'def' → logprob: -13.543065071105957
    8. 'h' → logprob: -13.855565071105957
    9. '```' → logprob: -13.855565071105957
    10. ' ' → logprob: -14.168065071105957

Token 190: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10045520961284637
    2. '):
' → logprob: -2.3504552841186523
    3. ':' → logprob: -8.475455284118652
    4. '():' → logprob: -11.100455284118652
    5. '():
' → logprob: -11.725455284118652
    6. '   ' → logprob: -11.975455284118652
    7. ' ):' → logprob: -12.725455284118652
    8. '):

' → logprob: -13.225455284118652
    9. '       ' → logprob: -13.350455284118652
    10. ')' → logprob: -13.475455284118652

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15169012546539307
    2. 'process' → logprob: -2.0266900062561035
    3. '   ' → logprob: -4.9016900062561035
    4. ' process' → logprob: -6.5266900062561035
    5. 'handle' → logprob: -10.026690483093262
    6. 'def' → logprob: -11.151690483093262
    7. '
' → logprob: -11.776690483093262
    8. '	process' → logprob: -12.776690483093262
    9. '```' → logprob: -13.526690483093262
    10. '      ' → logprob: -13.901690483093262

Token 192: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.018390128389000893
    2. ' process' → logprob: -4.01839017868042
    3. '       ' → logprob: -8.643389701843262
    4. '   ' → logprob: -9.893389701843262
    5. '	process' → logprob: -11.393389701843262
    6. '  ' → logprob: -15.018389701843262
    7. '.process' → logprob: -15.018389701843262
    8. 'def' → logprob: -15.143389701843262
    9. 'print' → logprob: -15.143389701843262
    10. ' ' → logprob: -15.393389701843262

Token 193: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -3.054500666621607e-06
    2. 'case' → logprob: -12.75000286102295
    3. '_process' → logprob: -16.250003814697266
    4. ' case' → logprob: -18.125003814697266
    5. 'Case' → logprob: -18.375003814697266
    6. '_result' → logprob: -18.750003814697266
    7. '_code' → logprob: -18.875003814697266
    8. 'process' → logprob: -19.125003814697266
    9. '(case' → logprob: -19.875003814697266
    10. '_' → logprob: -20.500003814697266

Token 194: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.0015129582025110722
    2. 'div' → logprob: -6.5015130043029785
    3. '_not' → logprob: -11.87651252746582
    4. '(div' → logprob: -12.75151252746582
    5. '<div' → logprob: -15.00151252746582
    6. '_def' → logprob: -16.50151252746582
    7. '_' → logprob: -16.62651252746582
    8. '_dist' → logprob: -17.25151252746582
    9. '_less' → logprob: -17.50151252746582
    10. '	div' → logprob: -17.62651252746582

Token 195: 'isible' (ID: 181386)
  Prédit: 'isible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isible' → logprob: -7.803360495017841e-05
    2. 'isable' → logprob: -9.625078201293945
    3. 'is' → logprob: -11.625078201293945
    4. 'ible' → logprob: -13.250078201293945
    5. 'ISIBLE' → logprob: -14.500078201293945
    6. '```' → logprob: -15.750078201293945
    7. 'sible' → logprob: -15.750078201293945
    8. 'idable' → logprob: -16.000078201293945
    9. 'ision' → logprob: -16.500078201293945
    10. 'visible' → logprob: -17.625078201293945

Token 196: '(div' (ID: 73108)
  Prédit: '(div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(div' → logprob: -4.127333340875339e-06
    2. 'div' → logprob: -12.500003814697266
    3. '(def' → logprob: -15.625003814697266
    4. '(' → logprob: -16.875003814697266
    5. ' div' → logprob: -16.875003814697266
    6. ' (' → logprob: -17.625003814697266
    7. '<div' → logprob: -17.875003814697266
    8. '	div' → logprob: -18.625003814697266
    9. '(di' → logprob: -19.125003814697266
    10. '(dev' → logprob: -19.125003814697266

Token 197: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6382087469100952
    2. ')
' → logprob: -1.1382087469100952
    3. '   ' → logprob: -1.8882087469100952
    4. 'def' → logprob: -11.013208389282227
    5. ')

' → logprob: -13.263208389282227
    6. 'else' → logprob: -13.513208389282227
    7. ')
' → logprob: -13.513208389282227
    8. ' ' → logprob: -13.513208389282227
    9. ' )
' → logprob: -13.763208389282227
    10. '):
' → logprob: -14.013208389282227

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03807638958096504
    2. 'else' → logprob: -3.288076400756836
    3. ' else' → logprob: -10.663076400756836
    4. 'def' → logprob: -11.413076400756836
    5. '	else' → logprob: -15.538076400756836
    6. '  ' → logprob: -16.163076400756836
    7. '       ' → logprob: -16.538076400756836
    8. '```' → logprob: -16.538076400756836
    9. ' ' → logprob: -17.038076400756836
    10. '    
' → logprob: -17.788076400756836

Token 199: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0033031930215656757
    2. '   ' → logprob: -5.753303050994873
    3. ' else' → logprob: -9.003303527832031
    4. 'def' → logprob: -13.503303527832031
    5. ' ' → logprob: -14.378303527832031
    6. '  ' → logprob: -14.753303527832031
    7. '       ' → logprob: -16.50330352783203
    8. '	else' → logprob: -17.25330352783203
    9. '```' → logprob: -19.12830352783203
    10. 'process' → logprob: -19.50330352783203

Token 200: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4361896216869354
    2. '       ' → logprob: -1.1861896514892578
    3. ':
' → logprob: -3.061189651489258
    4. '   ' → logprob: -6.686189651489258
    5. 'process' → logprob: -11.061189651489258
    6. ' process' → logprob: -12.311189651489258
    7. '           ' → logprob: -13.061189651489258
    8. ':

' → logprob: -13.061189651489258
    9. '      ' → logprob: -13.186189651489258
    10. '{
' → logprob: -13.311189651489258

Token 201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005113297956995666
    2. 'process' → logprob: -8.125511169433594
    3. '   ' → logprob: -8.500511169433594
    4. ' process' → logprob: -11.375511169433594
    5. '           ' → logprob: -15.875511169433594
    6. 'def' → logprob: -16.125511169433594
    7. '	process' → logprob: -16.500511169433594
    8. '     ' → logprob: -16.750511169433594
    9. '      ' → logprob: -17.000511169433594
    10. '    ' → logprob: -18.000511169433594

Token 202: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.0015023599844425917
    2. ' process' → logprob: -6.501502513885498
    3. '   ' → logprob: -17.751502990722656
    4. '	process' → logprob: -17.751502990722656
    5. '       ' → logprob: -19.001502990722656
    6. 'proces' → logprob: -20.876502990722656
    7. '_process' → logprob: -22.251502990722656
    8. '.process' → logprob: -22.251502990722656
    9. 'print' → logprob: -22.251502990722656
    10. '
' → logprob: -23.126502990722656

Token 203: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -1.9027791495318525e-05
    2. 'case' → logprob: -10.875019073486328
    3. '_' → logprob: -17.875019073486328
    4. ' case' → logprob: -18.125019073486328
    5. '_code' → logprob: -19.125019073486328
    6. 'Case' → logprob: -19.250019073486328
    7. '	case' → logprob: -19.375019073486328
    8. '_not' → logprob: -19.750019073486328
    9. '__' → logprob: -20.000019073486328
    10. '_process' → logprob: -20.000019073486328

Token 204: '_not' (ID: 17599)
  Prédit: '_not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_not' → logprob: -8.828512363834307e-05
    2. 'not' → logprob: -9.500088691711426
    3. '_div' → logprob: -11.875088691711426
    4. 'div' → logprob: -12.750088691711426
    5. 'Not' → logprob: -14.375088691711426
    6. '```' → logprob: -14.750088691711426
    7. '_' → logprob: -15.000088691711426
    8. ' not' → logprob: -15.250088691711426
    9. '_NOT' → logprob: -15.375088691711426
    10. '_no' → logprob: -15.500088691711426

Token 205: '_div' (ID: 36926)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.04858918860554695
    2. '_div' → logprob: -3.0485892295837402
    3. '<div' → logprob: -14.048588752746582
    4. 'Div' → logprob: -14.673588752746582
    5. ' divisible' → logprob: -16.0485897064209
    6. '(div' → logprob: -16.2985897064209
    7. '	div' → logprob: -16.2985897064209
    8. 'process' → logprob: -16.5485897064209
    9. '-div' → logprob: -16.5485897064209
    10. 'def' → logprob: -17.1735897064209

Token 206: 'isible' (ID: 181386)
  Prédit: 'isible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isible' → logprob: -4.0126840758603066e-05
    2. 'isable' → logprob: -10.250040054321289
    3. 'is' → logprob: -12.875040054321289
    4. 'sible' → logprob: -14.125040054321289
    5. 'ISIBLE' → logprob: -14.500040054321289
    6. 'ible' → logprob: -14.625040054321289
    7. 'izable' → logprob: -15.625040054321289
    8. 'visible' → logprob: -16.12504005432129
    9. 'idable' → logprob: -17.12504005432129
    10. 'os' → logprob: -17.25004005432129

Token 207: '(div' (ID: 73108)
  Prédit: '(div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(div' → logprob: -1.981667537620524e-06
    2. 'div' → logprob: -13.250001907348633
    3. '(' → logprob: -16.000001907348633
    4. ' div' → logprob: -17.750001907348633
    5. '(def' → logprob: -17.875001907348633
    6. '	div' → logprob: -19.125001907348633
    7. ' (' → logprob: -19.625001907348633
    8. '(dist' → logprob: -19.750001907348633
    9. '<div' → logprob: -20.000001907348633
    10. '(di' → logprob: -20.625001907348633

Token 208: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.13388703338569e-06
    2. ')
' → logprob: -11.625009536743164
    3. 'def' → logprob: -16.875009536743164
    4. ')return' → logprob: -16.875009536743164
    5. ' )' → logprob: -17.000009536743164
    6. '   ' → logprob: -17.250009536743164
    7. ')

' → logprob: -17.500009536743164
    8. ')}' → logprob: -17.750009536743164
    9. '}' → logprob: -18.000009536743164
    10. '()' → logprob: -18.500009536743164

Token 209: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.5577775128767826e-06
    2. 'if' → logprob: -12.750005722045898
    3. 'H' → logprob: -12.875005722045898
    4. 'N' → logprob: -17.2500057220459
    5. ' def' → logprob: -17.2500057220459
    6. 'W' → logprob: -18.0000057220459
    7. '```' → logprob: -19.1250057220459
    8. '#' → logprob: -19.8750057220459
    9. 'for' → logprob: -20.5000057220459
    10. 'ndef' → logprob: -22.0000057220459

Token 210: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.014344729483127594
    2. ' main' → logprob: -4.264344692230225
    3. 'def' → logprob: -8.639345169067383
    4. 'solve' → logprob: -12.889345169067383
    5. 'process' → logprob: -14.514345169067383
    6. ' def' → logprob: -14.639345169067383
    7. '_main' → logprob: -15.389345169067383
    8. '	main' → logprob: -15.889345169067383
    9. 'run' → logprob: -16.139345169067383
    10. 'Main' → logprob: -17.139345169067383

Token 211: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -5.200166469876422e-06
    2. ' ():' → logprob: -12.625004768371582
    3. '():
' → logprob: -13.375004768371582
    4. '()' → logprob: -15.625004768371582
    5. '_' → logprob: -16.8750057220459
    6. '(' → logprob: -17.1250057220459
    7. '():
' → logprob: -18.6250057220459
    8. '()>' → logprob: -19.0000057220459
    9. '(":' → logprob: -19.3750057220459
    10. ':' → logprob: -19.5000057220459

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1305396854877472
    2. 'H' → logprob: -2.130539655685425
    3. ' H' → logprob: -5.630539894104004
    4. '	H' → logprob: -11.505539894104004
    5. '   ' → logprob: -12.505539894104004
    6. '_H' → logprob: -14.005539894104004
    7. '```' → logprob: -14.130539894104004
    8. ' ' → logprob: -14.255539894104004
    9. '(H' → logprob: -14.755539894104004
    10. 'def' → logprob: -14.755539894104004

Token 213: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' (adapté à ' H') → logprob: -8.061054359131958e-06
    2. ' H' → logprob: -11.875007629394531
    3. '   ' → logprob: -13.750007629394531
    4. 'h' → logprob: -18.50000762939453
    5. ' ' → logprob: -18.75000762939453
    6. '	H' → logprob: -19.25000762939453
    7. '
' → logprob: -19.50000762939453
    8. '_H' → logprob: -20.12500762939453
    9. '  ' → logprob: -20.25000762939453
    10. '#' → logprob: -20.37500762939453

Token 214: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10024247318506241
    2. '=' → logprob: -2.3502423763275146
    3. ',' → logprob: -10.350242614746094
    4. ' ' → logprob: -12.850242614746094
    5. '   ' → logprob: -14.100242614746094
    6. ')' → logprob: -16.225242614746094
    7. ' ' → logprob: -16.350242614746094
    8. '()' → logprob: -16.475242614746094
    9. ' =
' → logprob: -16.725242614746094
    10. '=int' → logprob: -16.725242614746094

Token 215: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.07898607105016708
    2. ' read' → logprob: -2.578986167907715
    3. 'int' → logprob: -9.328986167907715
    4. ' int' → logprob: -11.828986167907715
    5. '	read' → logprob: -16.2039852142334
    6. '  ' → logprob: -17.3289852142334
    7. '(read' → logprob: -17.8289852142334
    8. '   ' → logprob: -17.9539852142334
    9. ' ' → logprob: -17.9539852142334
    10. '_read' → logprob: -19.8289852142334

Token 216: '_H' (ID: 4391)
  Prédit: '_H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_H' → logprob: -0.0008077251841314137
    2. '_' → logprob: -7.625807762145996
    3. '()' → logprob: -8.250807762145996
    4. '_W' → logprob: -10.500807762145996
    5. '(' → logprob: -11.250807762145996
    6. 'H' → logprob: -12.500807762145996
    7. '_S' → logprob: -12.750807762145996
    8. '_HT' → logprob: -13.250807762145996
    9. ' _' → logprob: -13.625807762145996
    10. ')' → logprob: -14.000807762145996

Token 217: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.44787395000457764
    2. '   ' → logprob: -1.3228739500045776
    3. '
' → logprob: -2.572874069213867
    4. '()' → logprob: -4.072874069213867
    5. 'W' → logprob: -7.197874069213867
    6. '    
' → logprob: -8.572874069213867
    7. ' W' → logprob: -8.572874069213867
    8. '  
' → logprob: -10.697874069213867
    9. ' ' → logprob: -10.947874069213867
    10. '	W' → logprob: -10.947874069213867

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23562943935394287
    2. 'W' → logprob: -1.6106294393539429
    3. ' W' → logprob: -4.735629558563232
    4. '
' → logprob: -6.735629558563232
    5. '	W' → logprob: -9.360629081726074
    6. '    
' → logprob: -9.985629081726074
    7. '\n' → logprob: -11.110629081726074
    8. ' ' → logprob: -11.360629081726074
    9. '  ' → logprob: -11.485629081726074
    10. ',W' → logprob: -12.485629081726074

Token 219: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' (adapté à ' W') → logprob: -0.016235651448369026
    2. ' W' → logprob: -4.516235828399658
    3. '   ' → logprob: -5.266235828399658
    4. '
' → logprob: -12.0162353515625
    5. '	W' → logprob: -12.2662353515625
    6. ' ' → logprob: -15.7662353515625
    7. ' ' → logprob: -16.0162353515625
    8. '  ' → logprob: -16.0162353515625
    9. '   ' → logprob: -16.2662353515625
    10. '\n' → logprob: -17.1412353515625

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07924710959196091
    2. '=' → logprob: -2.579246997833252
    3. '()' → logprob: -7.954246997833252
    4. '   ' → logprob: -12.20424747467041
    5. ',' → logprob: -14.70424747467041
    6. ' ()' → logprob: -15.70424747467041
    7. '	' → logprob: -15.70424747467041
    8. ' ' → logprob: -16.204246520996094
    9. '＝' → logprob: -16.329246520996094
    10. ')' → logprob: -17.079246520996094

Token 221: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.2519298195838928
    2. ' read' → logprob: -1.501929759979248
    3. '	read' → logprob: -15.126930236816406
    4. 'int' → logprob: -15.501930236816406
    5. ' ' → logprob: -16.376930236816406
    6. '(read' → logprob: -17.001930236816406
    7. '   ' → logprob: -17.251930236816406
    8. ' int' → logprob: -17.376930236816406
    9. '  ' → logprob: -17.626930236816406
    10. '    ' → logprob: -18.376930236816406

Token 222: '_W' (ID: 5493)
  Prédit: '_W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_W' → logprob: -6.630610641877865e-06
    2. 'W' → logprob: -12.500006675720215
    3. '()' → logprob: -12.875006675720215
    4. '(W' → logprob: -15.875006675720215
    5. '(' → logprob: -16.5000057220459
    6. '_w' → logprob: -17.2500057220459
    7. '_' → logprob: -17.3750057220459
    8. '```' → logprob: -18.0000057220459
    9. '()
' → logprob: -18.1250057220459
    10. '(_' → logprob: -18.7500057220459

Token 223: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11404907703399658
    2. '   ' → logprob: -2.239048957824707
    3. 'N' → logprob: -6.989048957824707
    4. '    
' → logprob: -8.614048957824707
    5. '  
' → logprob: -10.364048957824707
    6. ' N' → logprob: -10.739048957824707
    7. '
' → logprob: -10.739048957824707
    8. '	N' → logprob: -11.114048957824707
    9. '\n' → logprob: -12.239048957824707
    10. '   
' → logprob: -12.239048957824707

Token 224: '   ' (ID: 271)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04884521663188934
    2. '   ' → logprob: -3.0488452911376953
    3. ' N' → logprob: -8.298845291137695
    4. '	N' → logprob: -12.173845291137695
    5. '
' → logprob: -13.048845291137695
    6. '```' → logprob: -14.048845291137695
    7. '  ' → logprob: -15.173845291137695
    8. ' ' → logprob: -15.423845291137695
    9. '    
' → logprob: -16.548845291137695
    10. 'def' → logprob: -16.923845291137695

Token 225: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -2.45848218582978e-06
    2. ' N' → logprob: -13.25000286102295
    3. '   ' → logprob: -14.37500286102295
    4. 'def' → logprob: -17.000001907348633
    5. 'if' → logprob: -17.500001907348633
    6. '#' → logprob: -18.250001907348633
    7. '	N' → logprob: -18.875001907348633
    8. '```' → logprob: -19.125001907348633
    9. '
' → logprob: -19.250001907348633
    10. '  ' → logprob: -20.000001907348633

Token 226: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132622241973877
    2. '=' → logprob: -1.3132622241973877
    3. ' ' → logprob: -15.813261985778809
    4. '=int' → logprob: -15.938261985778809
    5. '   ' → logprob: -16.188262939453125
    6. '＝' → logprob: -16.438262939453125
    7. '=input' → logprob: -17.938262939453125
    8. ' ' → logprob: -18.063262939453125
    9. '=
' → logprob: -18.188262939453125
    10. ' =
' → logprob: -18.438262939453125

Token 227: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.011047814972698689
    2. 'read' → logprob: -4.511047840118408
    3. '	read' → logprob: -18.01104736328125
    4. ' ' → logprob: -19.38604736328125
    5. '(read' → logprob: -19.63604736328125
    6. '.read' → logprob: -19.63604736328125
    7. '_read' → logprob: -19.76104736328125
    8. ' ' → logprob: -20.76104736328125
    9. ' reads' → logprob: -21.26104736328125
    10. '    ' → logprob: -22.26104736328125

Token 228: '_N' (ID: 3080)
  Prédit: '_N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_N' → logprob: -1.9361264946837764e-07
    2. 'N' → logprob: -15.875
    3. '```' → logprob: -18.875
    4. '_' → logprob: -19.0
    5. '(N' → logprob: -19.625
    6. '()' → logprob: -20.5
    7. '_A' → logprob: -20.75
    8. '(' → logprob: -21.25
    9. '_H' → logprob: -21.5
    10. 'int' → logprob: -21.875

Token 229: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027775738388299942
    2. '
' → logprob: -4.402775764465332
    3. 'if' → logprob: -4.402775764465332
    4. ' if' → logprob: -5.902775764465332
    5. '    
' → logprob: -8.777775764465332
    6. '```' → logprob: -11.527775764465332
    7. '	if' → logprob: -12.527775764465332
    8. '<|end|>' → logprob: -13.777775764465332
    9. '  
' → logprob: -14.027775764465332
    10. ',' → logprob: -14.277775764465332

Token 230: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08996257930994034
    2. ' if' → logprob: -2.8399624824523926
    3. '   ' → logprob: -3.5899624824523926
    4. ' ' → logprob: -13.21496295928955
    5. '	if' → logprob: -13.96496295928955
    6. '    ' → logprob: -14.21496295928955
    7. '    
' → logprob: -14.21496295928955
    8. '
' → logprob: -14.33996295928955
    9. '  ' → logprob: -14.46496295928955
    10. '```' → logprob: -14.46496295928955

Token 231: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00016778295685071498
    2. '   ' → logprob: -9.125167846679688
    3. ' if' → logprob: -9.750167846679688
    4. '```' → logprob: -14.625167846679688
    5. 'i' → logprob: -18.000167846679688
    6. 'is' → logprob: -18.625167846679688
    7. '
' → logprob: -19.000167846679688
    8. '	if' → logprob: -19.000167846679688
    9. ' ' → logprob: -19.625167846679688
    10. 'If' → logprob: -19.875167846679688

Token 232: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.048603612929582596
    2. 'is' → logprob: -3.0486035346984863
    3. '   ' → logprob: -11.548604011535645
    4. '(is' → logprob: -12.173604011535645
    5. ' W' → logprob: -15.048604011535645
    6. ' (' → logprob: -15.423604011535645
    7. '	is' → logprob: -15.423604011535645
    8. '_' → logprob: -15.548604011535645
    9. '(' → logprob: -15.923604011535645
    10. '    ' → logprob: -16.173603057861328

Token 233: '_W' (ID: 5493)
  Prédit: '_W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_W' → logprob: -9.610702363715973e-06
    2. '(W' → logprob: -11.875009536743164
    3. 'W' → logprob: -13.125009536743164
    4. '(_' → logprob: -15.125009536743164
    5. '```' → logprob: -15.625009536743164
    6. 'is' → logprob: -16.500009536743164
    7. '_' → logprob: -16.625009536743164
    8. '_w' → logprob: -17.625009536743164
    9. '_V' → logprob: -17.875009536743164
    10. '\' → logprob: -18.125009536743164

Token 234: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -7.52919222577475e-05
    2. 'greater' → logprob: -9.500075340270996
    3. 'g' → logprob: -15.500075340270996
    4. ' greater' → logprob: -17.12507438659668
    5. '_ge' → logprob: -17.12507438659668
    6. 'Greater' → logprob: -17.37507438659668
    7. 'reater' → logprob: -17.62507438659668
    8. '_' → logprob: -17.62507438659668
    9. '_w' → logprob: -17.75007438659668
    10. '_less' → logprob: -17.75007438659668

Token 235: 'reater' (ID: 110926)
  Prédit: 'reater'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reater' → logprob: -0.0019293478690087795
    2. 'greater' → logprob: -6.25192928314209
    3. 'reate' → logprob: -14.75192928314209
    4. 're' → logprob: -16.376930236816406
    5. '_g' → logprob: -16.376930236816406
    6. 'reat' → logprob: -16.626930236816406
    7. 'r' → logprob: -16.876930236816406
    8. 'Greater' → logprob: -17.126930236816406
    9. '>=' → logprob: -17.251930236816406
    10. ' greater' → logprob: -17.751930236816406

Token 236: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -4.727905979962088e-05
    2. 'equal' → logprob: -10.00004768371582
    3. '_eq' → logprob: -14.50004768371582
    4. 'Equal' → logprob: -15.00004768371582
    5. '_equ' → logprob: -15.00004768371582
    6. '_EQUAL' → logprob: -15.25004768371582
    7. 'reater' → logprob: -15.62504768371582
    8. '_than' → logprob: -15.75004768371582
    9. '_equals' → logprob: -17.00004768371582
    10. '(H' → logprob: -17.25004768371582

Token 237: '_H' (ID: 4391)
  Prédit: '_H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_H' → logprob: -0.0029010437428951263
    2. '_W' → logprob: -6.002901077270508
    3. '(H' → logprob: -8.377901077270508
    4. '(W' → logprob: -8.877901077270508
    5. '_' → logprob: -10.377901077270508
    6. 'H' → logprob: -11.252901077270508
    7. '_(' → logprob: -12.252901077270508
    8. '```' → logprob: -13.002901077270508
    9. '   ' → logprob: -14.377901077270508
    10. 'W' → logprob: -14.377901077270508

Token 238: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.0001625379954930395
    2. '(' → logprob: -9.375162124633789
    3. ' (' → logprob: -9.500162124633789
    4. '(H' → logprob: -13.500162124633789
    5. '   ' → logprob: -15.000162124633789
    6. '(
' → logprob: -15.125162124633789
    7. '((' → logprob: -15.375162124633789
    8. ' ' → logprob: -15.750162124633789
    9. '(N' → logprob: -16.00016212463379
    10. '(w' → logprob: -16.25016212463379

Token 239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030762290116399527
    2. ' ,' → logprob: -5.878076076507568
    3. ',H' → logprob: -8.253076553344727
    4. ',W' → logprob: -12.378076553344727
    5. '   ' → logprob: -13.003076553344727
    6. ',
' → logprob: -13.253076553344727
    7. 'H' → logprob: -14.253076553344727
    8. ' H' → logprob: -14.628076553344727
    9. '(H' → logprob: -14.753076553344727
    10. ')' → logprob: -15.378076553344727

Token 240: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -8.494741632603109e-05
    2. ' H' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.500085830688477
    4. ')' → logprob: -19.500085830688477
    5. ' ' → logprob: -19.625085830688477
    6. '(H' → logprob: -19.625085830688477
    7. '	H' → logprob: -20.625085830688477
    8. '
' → logprob: -21.625085830688477
    9. ' ' → logprob: -21.875085830688477
    10. '  ' → logprob: -22.000085830688477

Token 241: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015066476771607995
    2. '):
' → logprob: -6.501506805419922
    3. ':' → logprob: -13.251506805419922
    4. ' ):' → logprob: -13.751506805419922
    5. ')' → logprob: -14.376506805419922
    6. '():' → logprob: -15.001506805419922
    7. '   ' → logprob: -15.126506805419922
    8. '):
' → logprob: -16.001506805419922
    9. '):

' → logprob: -16.876506805419922
    10. ' ' → logprob: -18.501506805419922

Token 242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014889227226376534
    2. 'handle' → logprob: -4.264889240264893
    3. ' handle' → logprob: -7.389889240264893
    4. '   ' → logprob: -9.764888763427734
    5. '(handle' → logprob: -10.889888763427734
    6. '
' → logprob: -11.514888763427734
    7. '_handle' → logprob: -11.639888763427734
    8. '	handle' → logprob: -12.264888763427734
    9. '.handle' → logprob: -12.764888763427734
    10. '        
' → logprob: -13.764888763427734

Token 243: ' handle' (ID: 5318)
  Prédit: 'handle'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handle' (adapté à ' handle') → logprob: -0.0001882823125924915
    2. ' handle' → logprob: -8.750187873840332
    3. '       ' → logprob: -10.500187873840332
    4. '   ' → logprob: -13.500187873840332
    5. '	handle' → logprob: -14.125187873840332
    6. '
' → logprob: -16.37518882751465
    7. '.handle' → logprob: -17.00018882751465
    8. '_handle' → logprob: -17.00018882751465
    9. '(handle' → logprob: -18.00018882751465
    10. '           ' → logprob: -18.87518882751465

Token 244: '_W' (ID: 5493)
  Prédit: '_W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_W' → logprob: -5.5577775128767826e-06
    2. 'W' → logprob: -12.125005722045898
    3. '```' → logprob: -18.2500057220459
    4. '	W' → logprob: -18.8750057220459
    5. '_V' → logprob: -19.0000057220459
    6. '_' → logprob: -19.0000057220459
    7. '_H' → logprob: -19.3750057220459
    8. 's' → logprob: -20.0000057220459
    9. '(W' → logprob: -20.0000057220459
    10. ' W' → logprob: -20.0000057220459

Token 245: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.006719520781189203
    2. 'greater' → logprob: -5.006719589233398
    3. '_gr' → logprob: -12.881719589233398
    4. '_ge' → logprob: -14.381719589233398
    5. ' greater' → logprob: -14.506719589233398
    6. 'Greater' → logprob: -15.631719589233398
    7. '_less' → logprob: -16.8817195892334
    8. 'g' → logprob: -17.1317195892334
    9. 'reater' → logprob: -17.3817195892334
    10. 'great' → logprob: -17.6317195892334

Token 246: 'reater' (ID: 110926)
  Prédit: 'reater'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reater' → logprob: -0.0001613459608051926
    2. 'greater' → logprob: -8.750161170959473
    3. 'reate' → logprob: -13.375161170959473
    4. 're' → logprob: -14.250161170959473
    5. 'reat' → logprob: -14.750161170959473
    6. '```' → logprob: -16.50016212463379
    7. 'ather' → logprob: -16.87516212463379
    8. 'r' → logprob: -17.37516212463379
    9. 'rea' → logprob: -17.62516212463379
    10. ' greater' → logprob: -18.00016212463379

Token 247: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.00016158436483237892
    2. 'equal' → logprob: -8.750161170959473
    3. '_eq' → logprob: -14.375161170959473
    4. '_equ' → logprob: -14.375161170959473
    5. '_e' → logprob: -15.125161170959473
    6. '_less' → logprob: -15.125161170959473
    7. 'Equal' → logprob: -15.250161170959473
    8. '_EQUAL' → logprob: -15.500161170959473
    9. '_equals' → logprob: -15.500161170959473
    10. '_than' → logprob: -15.625161170959473

Token 248: '_H' (ID: 4391)
  Prédit: '_H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_H' → logprob: -0.3133193850517273
    2. 'H' → logprob: -1.313319444656372
    3. '(H' → logprob: -9.813319206237793
    4. '	H' → logprob: -14.188319206237793
    5. '```' → logprob: -14.563319206237793
    6. ' H' → logprob: -15.063319206237793
    7. 'W' → logprob: -15.313319206237793
    8. 'HN' → logprob: -15.688319206237793
    9. '   ' → logprob: -15.938319206237793
    10. '.H' → logprob: -16.43832015991211

Token 249: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.951771421066951e-05
    2. '(' → logprob: -10.625029563903809
    3. ' (' → logprob: -12.250029563903809
    4. ' ' → logprob: -16.125028610229492
    5. '(
' → logprob: -16.625028610229492
    6. '   ' → logprob: -17.000028610229492
    7. '(n' → logprob: -17.375028610229492
    8. '((' → logprob: -18.000028610229492
    9. 'N' → logprob: -18.125028610229492
    10. '```' → logprob: -18.875028610229492

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011236425780225545
    2. ',W' → logprob: -9.375112533569336
    3. ' ,' → logprob: -10.750112533569336
    4. ',
' → logprob: -13.000112533569336
    5. 'W' → logprob: -13.000112533569336
    6. ')' → logprob: -15.250112533569336
    7. '```' → logprob: -15.375112533569336
    8. '   ' → logprob: -15.375112533569336
    9. ' W' → logprob: -16.125112533569336
    10. ' ' → logprob: -16.250112533569336

Token 251: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.001929228543303907
    2. ' W' → logprob: -6.25192928314209
    3. '   ' → logprob: -14.37692928314209
    4. '	W' → logprob: -16.876928329467773
    5. ' ' → logprob: -17.126928329467773
    6. '
' → logprob: -17.626928329467773
    7. ')' → logprob: -18.876928329467773
    8. '  ' → logprob: -19.001928329467773
    9. '```' → logprob: -19.251928329467773
    10. '       ' → logprob: -19.376928329467773

Token 252: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21300998330116272
    2. ')
' → logprob: -1.7130099534988403
    3. '   ' → logprob: -4.463009834289551
    4. ')
' → logprob: -13.58800983428955
    5. ')

' → logprob: -14.58800983428955
    6. ' )' → logprob: -16.088010787963867
    7. ' )
' → logprob: -16.713010787963867
    8. ')`
' → logprob: -17.088010787963867
    9. ' ' → logprob: -18.213010787963867
    10. '),' → logprob: -18.338010787963867

Token 253: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011341582983732224
    2. 'else' → logprob: -4.511341571807861
    3. ' else' → logprob: -8.13634204864502
    4. '	else' → logprob: -15.01134204864502
    5. '```' → logprob: -15.26134204864502
    6. '    
' → logprob: -15.76134204864502
    7. '<|end|>' → logprob: -15.76134204864502
    8. 'elif' → logprob: -16.636341094970703
    9. ' ' → logprob: -16.886341094970703
    10. '  ' → logprob: -17.011341094970703

Token 254: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4794486463069916
    2. 'else' (adapté à ' else') → logprob: -0.979448676109314
    3. ' else' → logprob: -5.2294487953186035
    4. '	else' → logprob: -14.604448318481445
    5. ' ' → logprob: -16.354448318481445
    6. '```' → logprob: -16.854448318481445
    7. '
' → logprob: -16.979448318481445
    8. 'elif' → logprob: -17.104448318481445
    9. '  ' → logprob: -17.229448318481445
    10. '    
' → logprob: -17.979448318481445

Token 255: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9438539147377014
    2. ':' → logprob: -1.0688538551330566
    3. '       ' → logprob: -1.3188538551330566
    4. '():
' → logprob: -11.193854331970215
    5. '   ' → logprob: -12.443854331970215
    6. ',' → logprob: -13.193854331970215
    7. 'handle' → logprob: -13.318854331970215
    8. '_handle' → logprob: -13.318854331970215
    9. '):
' → logprob: -13.693854331970215
    10. '(' → logprob: -13.693854331970215

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47464776039123535
    2. 'handle' → logprob: -0.9746477603912354
    3. ' handle' → logprob: -7.599647521972656
    4. '   ' → logprob: -9.974647521972656
    5. '	handle' → logprob: -10.849647521972656
    6. '_handle' → logprob: -12.849647521972656
    7. '.handle' → logprob: -14.599647521972656
    8. '(handle' → logprob: -15.224647521972656
    9. '     ' → logprob: -15.724647521972656
    10. '           ' → logprob: -15.849647521972656

Token 257: ' handle' (ID: 5318)
  Prédit: 'handle'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handle' (adapté à ' handle') → logprob: -7.941850526549388e-06
    2. ' handle' → logprob: -11.750007629394531
    3. '       ' → logprob: -19.62500762939453
    4. '	handle' → logprob: -19.87500762939453
    5. '.handle' → logprob: -20.75000762939453
    6. '_handle' → logprob: -21.25000762939453
    7. '   ' → logprob: -22.00000762939453
    8. '(handle' → logprob: -22.50000762939453
    9. 'handler' → logprob: -23.62500762939453
    10. '           ' → logprob: -24.00000762939453

Token 258: '_W' (ID: 5493)
  Prédit: '_W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_W' → logprob: -5.200166469876422e-06
    2. 'W' → logprob: -12.250004768371582
    3. 'handle' → logprob: -15.250004768371582
    4. '_handle' → logprob: -16.1250057220459
    5. '```' → logprob: -17.6250057220459
    6. '_V' → logprob: -18.7500057220459
    7. '_H' → logprob: -18.8750057220459
    8. '_Handle' → logprob: -19.1250057220459
    9. '`' → logprob: -19.6250057220459
    10. '\' → logprob: -20.1250057220459

Token 259: '_less' (ID: 154196)
  Prédit: '_less'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_less' → logprob: -8.2994620242971e-06
    2. 'less' → logprob: -12.250008583068848
    3. '_g' → logprob: -12.750008583068848
    4. '_l' → logprob: -14.750008583068848
    5. '_' → logprob: -16.75000762939453
    6. 'Less' → logprob: -18.12500762939453
    7. '```' → logprob: -18.87500762939453
    8. '_le' → logprob: -19.00000762939453
    9. '-less' → logprob: -19.12500762939453
    10. '_lower' → logprob: -20.00000762939453

Token 260: '_H' (ID: 4391)
  Prédit: '_H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_H' → logprob: -7.941850526549388e-06
    2. 'H' → logprob: -11.750007629394531
    3. '<H' → logprob: -17.87500762939453
    4. '	H' → logprob: -18.00000762939453
    5. '```' → logprob: -19.50000762939453
    6. '_HPP' → logprob: -19.50000762939453
    7. ' H' → logprob: -20.50000762939453
    8. '_HT' → logprob: -20.75000762939453
    9. '<|end|>' → logprob: -20.75000762939453
    10. '-H' → logprob: -20.87500762939453

Token 261: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0007115975022315979
    2. 'N' → logprob: -7.250711441040039
    3. '(' → logprob: -13.875711441040039
    4. '```' → logprob: -15.125711441040039
    5. ' (' → logprob: -15.500711441040039
    6. '   ' → logprob: -16.62571144104004
    7. ' N' → logprob: -17.12571144104004
    8. '	N' → logprob: -17.87571144104004
    9. '(n' → logprob: -17.87571144104004
    10. ' ' → logprob: -18.37571144104004

Token 262: ',' (ID: 11)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -7.135819760151207e-05
    2. '(' → logprob: -10.25007152557373
    3. ' (' → logprob: -11.00007152557373
    4. ')' → logprob: -12.00007152557373
    5. ',' → logprob: -12.12507152557373
    6. '   ' → logprob: -12.37507152557373
    7. ',N' → logprob: -13.75007152557373
    8. 'N' → logprob: -14.12507152557373
    9. '(
' → logprob: -14.87507152557373
    10. ' ' → logprob: -15.37507152557373

Token 263: ' H' (ID: 487)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0009617198375053704
    2. ' N' → logprob: -7.500961780548096
    3. 'H' → logprob: -7.875961780548096
    4. 'W' → logprob: -10.500961303710938
    5. '   ' → logprob: -14.750961303710938
    6. ' H' → logprob: -15.125961303710938
    7. ' ' → logprob: -15.500961303710938
    8. '  ' → logprob: -15.875961303710938
    9. '	N' → logprob: -16.000961303710938
    10. '(N' → logprob: -16.500961303710938

Token 264: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.129266067640856e-05
    2. ')
' → logprob: -11.000020980834961
    3. '())' → logprob: -12.500020980834961
    4. '()' → logprob: -15.000020980834961
    5. ' )' → logprob: -16.00002098083496
    6. '   ' → logprob: -16.12502098083496
    7. ')

' → logprob: -16.25002098083496
    8. ')#' → logprob: -16.75002098083496
    9. '))' → logprob: -16.87502098083496
    10. '```' → logprob: -17.75002098083496

Token 265: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6934757232666016
    2. 'main' → logprob: -0.6934757232666016
    3. '```' → logprob: -9.068475723266602
    4. '
' → logprob: -9.443475723266602
    5. '#' → logprob: -9.693475723266602
    6. ' main' → logprob: -10.443475723266602
    7. '\n' → logprob: -10.943475723266602
    8. '(main' → logprob: -11.818475723266602
    9. 'print' → logprob: -12.068475723266602
    10. '<|end|>' → logprob: -12.693475723266602

Token 266: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 264
Tokens correctement prédits (1ère position, stricte): 137
Tokens correctement prédits (1ère position, avec adaptation): 155
Tokens correctement prédits (top 10): 238
Précision stricte (1ère position): 51.89%
Précision adaptée (1ère position): 58.71%
Précision (top 10): 90.15%
================================================================================
