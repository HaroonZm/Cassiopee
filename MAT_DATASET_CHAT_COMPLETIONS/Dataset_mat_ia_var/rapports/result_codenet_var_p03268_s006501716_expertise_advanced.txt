================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin

def main():
    N, K = map(int, stdin.readline().split())
    q, r = divmod(K, 2)
    if r:
        print(pow(N // K, 3))
    else:
        n_k = N // K
        n_hk = N // (K // 2)
        print(pow(n_k, 3) + pow(n_hk - n_k, 3))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.051410701125860214
    2. ' argv' → logprob: -3.426410675048828
    3. 'exit' → logprob: -4.176410675048828
    4. ' exit' → logprob: -6.801410675048828
    5. 'stdout' → logprob: -7.301410675048828
    6. 'stdin' → logprob: -8.426410675048828
    7. 'path' → logprob: -8.926410675048828
    8. 'import' → logprob: -10.176410675048828
    9. 'stderr' → logprob: -10.426410675048828
    10. 'version' → logprob: -10.676410675048828

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006422612932510674
    2. '.readline' → logprob: -8.250641822814941
    3. '\n' → logprob: -8.500641822814941
    4. '.
' → logprob: -10.125641822814941
    5. 'import' → logprob: -10.250641822814941
    6. '\' → logprob: -10.500641822814941
    7. '```' → logprob: -10.875641822814941
    8. '.read' → logprob: -10.875641822814941
    9. '' → logprob: -12.000641822814941
    10. ',' → logprob: -12.125641822814941

Token 5: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026680389419198036
    2. '.readline' → logprob: -3.9016804695129395
    3. '.read' → logprob: -6.2766804695129395
    4. '\n' → logprob: -7.0266804695129395
    5. ',' → logprob: -7.4016804695129395
    6. 'for' → logprob: -7.5266804695129395
    7. 'print' → logprob: -7.7766804695129395
    8. 'import' → logprob: -7.9016804695129395
    9. '
' → logprob: -8.151679992675781
    10. '```' → logprob: -8.276679992675781

Token 6: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.52972811460495
    2. ' read' → logprob: -1.4047281742095947
    3. ' process' → logprob: -2.0297281742095947
    4. ' parse' → logprob: -4.779727935791016
    5. ' space' → logprob: -4.779727935791016
    6. ' main' → logprob: -5.904727935791016
    7. ' readline' → logprob: -5.904727935791016
    8. ' ' → logprob: -6.654727935791016
    9. '_read' → logprob: -7.029727935791016
    10. 'read' → logprob: -7.154727935791016

Token 7: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11979860067367554
    2. '():' → logprob: -2.3697986602783203
    3. ':' → logprob: -4.24479866027832
    4. '(:' → logprob: -5.36979866027832
    5. '```' → logprob: -9.61979866027832
    6. '):' → logprob: -9.74479866027832
    7. '(":' → logprob: -9.74479866027832
    8. ' (' → logprob: -9.86979866027832
    9. '(
' → logprob: -10.36979866027832
    10. ' ():' → logprob: -10.49479866027832

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006648583337664604
    2. ':' → logprob: -5.881648540496826
    3. '(' → logprob: -6.756648540496826
    4. '    ' → logprob: -7.506648540496826
    5. 'print' → logprob: -7.756648540496826
    6. '    
' → logprob: -8.506649017333984
    7. ' ' → logprob: -8.506649017333984
    8. '(stdin' → logprob: -8.506649017333984
    9. '\' → logprob: -8.631649017333984
    10. '```' → logprob: -8.756649017333984

Token 9: ' N' (ID: 478)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7047300934791565
    2. '   ' → logprob: -1.2047300338745117
    3. 'n' → logprob: -3.0797300338745117
    4. ' for' → logprob: -3.2047300338745117
    5. 'data' → logprob: -3.2047300338745117
    6. 'line' → logprob: -3.3297300338745117
    7. 'i' → logprob: -4.829730033874512
    8. 'input' → logprob: -5.204730033874512
    9. ' line' → logprob: -5.329730033874512
    10. ' ' → logprob: -5.329730033874512

Token 10: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08699508011341095
    2. '=' → logprob: -2.5869951248168945
    3. ' ' → logprob: -5.0869951248168945
    4. ',' → logprob: -7.0869951248168945
    5. '  ' → logprob: -7.9619951248168945
    6. '.' → logprob: -8.711995124816895
    7. ')' → logprob: -8.836995124816895
    8. '   ' → logprob: -9.461995124816895
    9. ' ,' → logprob: -9.586995124816895
    10. '_' → logprob: -9.836995124816895

Token 11: ' K' (ID: 658)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3010278642177582
    2. ' M' → logprob: -1.6760278940200806
    3. 'input' → logprob: -4.051027774810791
    4. ' K' → logprob: -4.051027774810791
    5. 'M' → logprob: -4.301027774810791
    6. ' input' → logprob: -5.176027774810791
    7. '    ' → logprob: -5.426027774810791
    8. '  ' → logprob: -5.676027774810791
    9. 'space' → logprob: -6.426027774810791
    10. '_' → logprob: -6.551027774810791

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029760213568806648
    2. '=' → logprob: -3.5297601222991943
    3. ',' → logprob: -12.154760360717773
    4. ' ' → logprob: -12.654760360717773
    5. ' =",' → logprob: -15.779760360717773
    6. ' =
' → logprob: -15.904760360717773
    7. ')' → logprob: -16.154760360717773
    8. '=int' → logprob: -16.154760360717773
    9. '   ' → logprob: -16.279760360717773
    10. ' ,' → logprob: -16.404760360717773

Token 13: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0015071245143190026
    2. 'map' → logprob: -6.50150728225708
    3. ' list' → logprob: -13.126506805419922
    4. ' ' → logprob: -13.501506805419922
    5. ' stdin' → logprob: -14.626506805419922
    6. ' [' → logprob: -15.126506805419922
    7. '[' → logprob: -15.626506805419922
    8. '	map' → logprob: -15.751506805419922
    9. '   ' → logprob: -15.876506805419922
    10. ' tuple' → logprob: -16.251506805419922

Token 14: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8058856725692749
    2. '(str' → logprob: -1.180885672569275
    3. '(int' → logprob: -1.555885672569275
    4. '(lambda' → logprob: -3.4308857917785645
    5. '(stdin' → logprob: -6.1808857917785645
    6. '(input' → logprob: -7.6808857917785645
    7. 'str' → logprob: -9.805885314941406
    8. '(eval' → logprob: -10.180885314941406
    9. '(len' → logprob: -10.305885314941406
    10. '(list' → logprob: -10.430885314941406

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47837045788764954
    2. '(stdin' → logprob: -0.9783704280853271
    3. '(' → logprob: -6.353370666503906
    4. '(input' → logprob: -6.728370666503906
    5. ')' → logprob: -6.978370666503906
    6. ',input' → logprob: -8.103370666503906
    7. 'stdin' → logprob: -10.853370666503906
    8. '(),' → logprob: -10.978370666503906
    9. '),' → logprob: -11.103370666503906
    10. '(st' → logprob: -11.228370666503906

Token 16: ' stdin' (ID: 75143)
  Prédit: ' stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stdin' → logprob: -0.20202668011188507
    2. 'stdin' → logprob: -1.7020267248153687
    3. '(stdin' → logprob: -7.452026844024658
    4. ')' → logprob: -11.5770263671875
    5. ' input' → logprob: -11.7020263671875
    6. 'input' → logprob: -11.8270263671875
    7. '.stdin' → logprob: -11.8270263671875
    8. ' readline' → logprob: -14.9520263671875
    9. ' )' → logprob: -15.5770263671875
    10. ' ' → logprob: -16.8270263671875

Token 17: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0006963504129089415
    2. '.read' → logprob: -7.625696182250977
    3. '.' → logprob: -8.500696182250977
    4. '.readlines' → logprob: -12.375696182250977
    5. ').' → logprob: -15.000696182250977
    6. ' .' → logprob: -16.250696182250977
    7. '().' → logprob: -16.875696182250977
    8. '.write' → logprob: -17.000696182250977
    9. ')' → logprob: -17.250696182250977
    10. '.buffer' → logprob: -17.375696182250977

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0004411591507960111
    2. '())' → logprob: -7.875441074371338
    3. '()' → logprob: -9.750441551208496
    4. ')' → logprob: -13.625441551208496
    5. '()))' → logprob: -14.000441551208496
    6. ' ().' → logprob: -14.375441551208496
    7. '(' → logprob: -16.87544059753418
    8. '()).' → logprob: -17.87544059753418
    9. ' ())' → logprob: -18.00044059753418
    10. '.readline' → logprob: -18.25044059753418

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.580825924873352
    2. 'strip' → logprob: -0.830825924873352
    3. 'rstrip' → logprob: -5.3308258056640625
    4. ')' → logprob: -10.705825805664062
    5. 'read' → logprob: -11.580825805664062
    6. '())' → logprob: -14.455825805664062
    7. '()' → logprob: -14.580825805664062
    8. '```' → logprob: -14.955825805664062
    9. ' split' → logprob: -15.080825805664062
    10. 'replace' → logprob: -15.830825805664062

Token 20: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05096263810992241
    2. '))' → logprob: -3.0509626865386963
    3. '())' → logprob: -6.175962448120117
    4. '()' → logprob: -8.425962448120117
    5. '()))' → logprob: -9.675962448120117
    6. ')))' → logprob: -12.300962448120117
    7. ')
' → logprob: -13.050962448120117
    8. '(' → logprob: -13.425962448120117
    9. '),' → logprob: -13.800962448120117
    10. ' )' → logprob: -14.675962448120117

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15708856284618378
    2. '
' → logprob: -2.5320885181427
    3. '    
' → logprob: -3.4070885181427
    4. ' 
' → logprob: -4.657088756561279
    5. ')' → logprob: -5.407088756561279
    6. '```' → logprob: -5.407088756561279
    7. '\n' → logprob: -5.657088756561279
    8. '\' → logprob: -6.032088756561279
    9. '`' → logprob: -6.282088756561279
    10. '   
' → logprob: -6.407088756561279

Token 22: ' q' (ID: 2335)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.623691201210022
    2. '   ' → logprob: -1.623691201210022
    3. ')' → logprob: -3.1236910820007324
    4. '`' → logprob: -3.6236910820007324
    5. 'a' → logprob: -3.8736910820007324
    6. ' 
' → logprob: -3.8736910820007324
    7. 'd' → logprob: -3.9986910820007324
    8. 'r' → logprob: -4.498691082000732
    9. 's' → logprob: -4.623691082000732
    10. '    ' → logprob: -4.748691082000732

Token 23: ',' (ID: 11)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.3525611460208893
    2. 'u' → logprob: -2.2275612354278564
    3. ' =' → logprob: -2.3525612354278564
    4. 'uer' → logprob: -2.4775612354278564
    5. '=' → logprob: -5.102560997009277
    6. ',' → logprob: -6.977560997009277
    7. 'ual' → logprob: -7.102560997009277
    8. '=[]' → logprob: -8.102560997009277
    9. 'uel' → logprob: -8.227560997009277
    10. 'uest' → logprob: -8.602560997009277

Token 24: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1427316814661026
    2. ' r' → logprob: -2.0177316665649414
    3. '_' → logprob: -11.142731666564941
    4. 'K' → logprob: -11.142731666564941
    5. ' ' → logprob: -11.142731666564941
    6. ' K' → logprob: -12.892731666564941
    7. 'mod' → logprob: -13.267731666564941
    8. '=' → logprob: -13.392731666564941
    9. '   ' → logprob: -13.767731666564941
    10. 'k' → logprob: -13.767731666564941

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023271916434168816
    2. '=' → logprob: -3.7732717990875244
    3. ' ' → logprob: -11.148271560668945
    4. ',' → logprob: -11.398271560668945
    5. '  ' → logprob: -15.398271560668945
    6. ' =
' → logprob: -15.398271560668945
    7. ' ,' → logprob: -15.898271560668945
    8. ')' → logprob: -15.898271560668945
    9. ' ' → logprob: -17.148271560668945
    10. '=int' → logprob: -17.523271560668945

Token 26: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.5791258215904236
    2. ' div' → logprob: -0.8291258215904236
    3. ' N' → logprob: -5.954125881195068
    4. 'N' → logprob: -7.704125881195068
    5. ' ' → logprob: -10.20412540435791
    6. '   ' → logprob: -10.45412540435791
    7. '(div' → logprob: -10.45412540435791
    8. ' (' → logprob: -11.32912540435791
    9. ' K' → logprob: -11.45412540435791
    10. '	div' → logprob: -12.95412540435791

Token 27: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.700132997939363e-05
    2. 'ision' → logprob: -11.875017166137695
    3. 'q' → logprob: -12.625017166137695
    4. 'ide' → logprob: -13.125017166137695
    5. '(q' → logprob: -13.125017166137695
    6. '(mod' → logprob: -14.500017166137695
    7. '(' → logprob: -14.875017166137695
    8. '_mod' → logprob: -15.000017166137695
    9. 's' → logprob: -15.750017166137695
    10. '-mod' → logprob: -15.875017166137695

Token 28: '(K' (ID: 28797)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.013836014084517956
    2. '(K' → logprob: -4.763835906982422
    3. '(' → logprob: -5.388835906982422
    4. 'N' → logprob: -7.513835906982422
    5. '(n' → logprob: -10.513835906982422
    6. 'K' → logprob: -10.888835906982422
    7. ' (' → logprob: -11.013835906982422
    8. ' N' → logprob: -11.888835906982422
    9. '((' → logprob: -12.013835906982422
    10. '(Q' → logprob: -12.388835906982422

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016289016231894493
    2. ',N' → logprob: -4.766289234161377
    3. ' ,' → logprob: -4.891289234161377
    4. '-' → logprob: -10.141288757324219
    5. '   ' → logprob: -10.891288757324219
    6. 'N' → logprob: -11.391288757324219
    7. ',n' → logprob: -11.391288757324219
    8. ' ' → logprob: -11.516288757324219
    9. ')' → logprob: -11.766288757324219
    10. '1' → logprob: -12.016288757324219

Token 30: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3134312033653259
    2. ' N' → logprob: -1.3134312629699707
    3. ')' → logprob: -9.688430786132812
    4. ' ' → logprob: -10.063430786132812
    5. '2' → logprob: -11.813430786132812
    6. '	N' → logprob: -11.938430786132812
    7. '10' → logprob: -12.063430786132812
    8. '1' → logprob: -12.188430786132812
    9. ' ' → logprob: -12.375930786132812
    10. 'n' → logprob: -12.563430786132812

Token 31: '2' (ID: 17)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.001219643629156053
    2. ' N' → logprob: -6.751219749450684
    3. '10' → logprob: -11.376219749450684
    4. ')' → logprob: -11.501219749450684
    5. '2' → logprob: -11.751219749450684
    6. ' ' → logprob: -12.251219749450684
    7. '   ' → logprob: -13.251219749450684
    8. '100' → logprob: -13.376219749450684
    9. '3' → logprob: -13.626219749450684
    10. '9' → logprob: -13.751219749450684

Token 32: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.77627644513268e-06
    2. ')
' → logprob: -12.250008583068848
    3. ' )' → logprob: -12.750008583068848
    4. '+' → logprob: -15.500008583068848
    5. ')

' → logprob: -15.625008583068848
    6. '))' → logprob: -16.000009536743164
    7. '0' → logprob: -16.250009536743164
    8. '`)' → logprob: -16.250009536743164
    9. '1' → logprob: -17.000009536743164
    10. '**' → logprob: -17.125009536743164

Token 33: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6814613938331604
    2. '\n' → logprob: -1.5564613342285156
    3. '\' → logprob: -2.4314613342285156
    4. '<|end|>' → logprob: -2.5564613342285156
    5. '   ' → logprob: -3.6814613342285156
    6. ')' → logprob: -3.8064613342285156
    7. '
' → logprob: -3.9314613342285156
    8. '*' → logprob: -4.181461334228516
    9. ' ' → logprob: -5.306461334228516
    10. ' 
' → logprob: -5.556461334228516

Token 34: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0432190895080566
    2. '\n' → logprob: -1.2932190895080566
    3. '\' → logprob: -1.5432190895080566
    4. ' 
' → logprob: -2.7932190895080566
    5. '<|end|>' → logprob: -3.2932190895080566
    6. 'n' → logprob: -4.043219089508057
    7. ' \' → logprob: -4.168219089508057
    8. ' )' → logprob: -5.168219089508057
    9. ')' → logprob: -5.168219089508057
    10. '    ' → logprob: -5.418219089508057

Token 35: ' r' (ID: 428)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.9369499087333679
    2. ' r' → logprob: -1.0619499683380127
    3. ' N' → logprob: -1.8119499683380127
    4. ' q' → logprob: -2.5619499683380127
    5. 'r' → logprob: -4.311949729919434
    6. ' ' → logprob: -5.936949729919434
    7. 'K' → logprob: -6.311949729919434
    8. 'N' → logprob: -6.311949729919434
    9. 'q' → logprob: -6.686949729919434
    10. ' (' → logprob: -7.561949729919434

Token 36: ':
' (ID: 734)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5081541538238525
    2. ':' → logprob: -1.5081541538238525
    3. '==' → logprob: -1.8831541538238525
    4. ' :' → logprob: -3.8831541538238525
    5. ' !=' → logprob: -5.758153915405273
    6. '!=' → logprob: -8.008153915405273
    7. '>' → logprob: -8.008153915405273
    8. '=' → logprob: -8.133153915405273
    9. ' >' → logprob: -9.383153915405273
    10. ' =' → logprob: -9.633153915405273

Token 37: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.6749743223190308
    2. ' ' → logprob: -2.1749744415283203
    3. '     
' → logprob: -2.2999744415283203
    4. '       ' → logprob: -2.4249744415283203
    5. ' 
' → logprob: -2.4249744415283203
    6. '   ' → logprob: -3.1749744415283203
    7. '    
' → logprob: -3.6749744415283203
    8. ':' → logprob: -5.29997444152832
    9. '\n' → logprob: -5.42497444152832
    10. '        
' → logprob: -5.67497444152832

Token 38: ' print' (ID: 2123)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.9978806376457214
    2. ' ' → logprob: -1.4978806972503662
    3. '    ' → logprob: -2.747880697250366
    4. '\n' → logprob: -2.997880697250366
    5. 'n' → logprob: -3.122880697250366
    6. ' print' → logprob: -3.372880697250366
    7. '       ' → logprob: -3.497880697250366
    8. 'print' (adapté à ' print') → logprob: -3.497880697250366
    9. '\' → logprob: -3.747880697250366
    10. '   ' → logprob: -3.872880697250366

Token 39: '(pow' (ID: 189160)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5566774606704712
    2. '("' → logprob: -1.1816774606704712
    3. '(q' → logprob: -2.9316773414611816
    4. '('' → logprob: -3.8066773414611816
    5. '(K' → logprob: -3.9316773414611816
    6. '(N' → logprob: -4.681677341461182
    7. '((' → logprob: -4.681677341461182
    8. '("("' → logprob: -6.306677341461182
    9. '(True' → logprob: -7.056677341461182
    10. '()' → logprob: -7.056677341461182

Token 40: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.03067968785762787
    2. '(' → logprob: -3.530679702758789
    3. '(K' → logprob: -7.155679702758789
    4. '2' → logprob: -10.155679702758789
    5. 'N' → logprob: -10.280679702758789
    6. '(
' → logprob: -11.030679702758789
    7. '(q' → logprob: -11.530679702758789
    8. '(Q' → logprob: -12.155679702758789
    9. ')' → logprob: -12.280679702758789
    10. '10' → logprob: -12.405679702758789

Token 41: ' //' (ID: 602)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36111342906951904
    2. ',q' → logprob: -1.486113429069519
    3. ',K' → logprob: -2.8611135482788086
    4. ' ,' → logprob: -4.236113548278809
    5. 'q' → logprob: -5.986113548278809
    6. 'K' → logprob: -6.986113548278809
    7. '2' → logprob: -7.986113548278809
    8. 'pow' → logprob: -8.111113548278809
    9. ',k' → logprob: -8.361113548278809
    10. ' q' → logprob: -8.861113548278809

Token 42: ' K' (ID: 658)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20586363971233368
    2. 'q' → logprob: -2.3308637142181396
    3. 'K' → logprob: -2.4558637142181396
    4. ' ' → logprob: -6.7058634757995605
    5. ' q' → logprob: -7.0808634757995605
    6. ' K' → logprob: -7.4558634757995605
    7. 'pow' → logprob: -8.955863952636719
    8. '3' → logprob: -9.955863952636719
    9. '(' → logprob: -10.080863952636719
    10. '1' → logprob: -10.455863952636719

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0867428407073021
    2. '2' → logprob: -2.836742877960205
    3. ' ,' → logprob: -4.461742877960205
    4. ',q' → logprob: -4.711742877960205
    5. '3' → logprob: -6.461742877960205
    6. 'q' → logprob: -7.461742877960205
    7. '))' → logprob: -7.836742877960205
    8. ' ' → logprob: -7.961742877960205
    9. ')' → logprob: -8.211742401123047
    10. ' q' → logprob: -9.211742401123047

Token 44: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8341142535209656
    2. 'q' → logprob: -1.2091143131256104
    3. '2' → logprob: -1.3341143131256104
    4. ' q' → logprob: -6.209114074707031
    5. ' ' → logprob: -6.959114074707031
    6. '1' → logprob: -7.709114074707031
    7. 'K' → logprob: -8.584114074707031
    8. ')' → logprob: -9.834114074707031
    9. 'pow' → logprob: -10.084114074707031
    10. 'N' → logprob: -10.084114074707031

Token 45: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6110767722129822
    2. '2' → logprob: -0.9860767722129822
    3. 'q' → logprob: -2.486076831817627
    4. '1' → logprob: -8.111076354980469
    5. ' ' → logprob: -8.111076354980469
    6. ' q' → logprob: -9.361076354980469
    7. 'K' → logprob: -9.861076354980469
    8. '(' → logprob: -10.486076354980469
    9. ')' → logprob: -10.611076354980469
    10. 'pow' → logprob: -10.798576354980469

Token 46: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.35219690203666687
    2. ')' → logprob: -1.2271969318389893
    3. ',' → logprob: -6.60219669342041
    4. '+' → logprob: -7.22719669342041
    5. '))
' → logprob: -7.22719669342041
    6. ' ))' → logprob: -8.47719669342041
    7. ')))' → logprob: -8.85219669342041
    8. ')+' → logprob: -9.10219669342041
    9. '),' → logprob: -9.35219669342041
    10. '   ' → logprob: -9.85219669342041

Token 47: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3786090910434723
    2. '   ' → logprob: -1.50360906124115
    3. ' else' → logprob: -3.1286091804504395
    4. '<|end|>' → logprob: -3.6286091804504395
    5. 'elif' → logprob: -4.6286091804504395
    6. ')' → logprob: -4.8786091804504395
    7. '    
' → logprob: -6.7536091804504395
    8. '\n' → logprob: -7.0036091804504395
    9. '
' → logprob: -7.6286091804504395
    10. '```' → logprob: -7.8786091804504395

Token 48: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.35419777035713196
    2. ' else' → logprob: -1.3541977405548096
    3. '   ' → logprob: -3.3541977405548096
    4. 'elif' → logprob: -5.604197978973389
    5. ' elif' → logprob: -7.479197978973389
    6. '<|end|>' → logprob: -7.979197978973389
    7. ' ' → logprob: -8.47919750213623
    8. '	else' → logprob: -9.10419750213623
    9. ')' → logprob: -10.10419750213623
    10. 'e' → logprob: -10.22919750213623

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014527325984090567
    2. ':
' → logprob: -6.626452922821045
    3. '       ' → logprob: -9.376452445983887
    4. ' :' → logprob: -10.376452445983887
    5. '   ' → logprob: -11.876452445983887
    6. ',' → logprob: -13.501452445983887
    7. ' :
' → logprob: -13.876452445983887
    8. '):' → logprob: -14.876452445983887
    9. '    ' → logprob: -15.376452445983887
    10. ':

' → logprob: -15.751452445983887

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012507044011726975
    2. 'print' → logprob: -7.376250743865967
    3. ' print' → logprob: -8.001250267028809
    4. '    ' → logprob: -9.126250267028809
    5. '   ' → logprob: -9.751250267028809
    6. '```' → logprob: -10.126250267028809
    7. '        ' → logprob: -10.751250267028809
    8. '     ' → logprob: -11.376250267028809
    9. '        
' → logprob: -11.751250267028809
    10. '           ' → logprob: -12.001250267028809

Token 51: ' n' (ID: 297)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6549109816551208
    2. ' print' → logprob: -1.0299110412597656
    3. ' ans' → logprob: -3.5299110412597656
    4. 's' → logprob: -4.029911041259766
    5. ' s' → logprob: -4.029911041259766
    6. ' x' → logprob: -4.279911041259766
    7. 'x' → logprob: -5.154911041259766
    8. 'ans' → logprob: -5.654911041259766
    9. ' result' → logprob: -5.779911041259766
    10. 'result' → logprob: -5.904911041259766

Token 52: '_k' (ID: 11637)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6274026036262512
    2. ',' → logprob: -0.8774026036262512
    3. 'o' → logprob: -4.1274027824401855
    4. '=' → logprob: -4.5024027824401855
    5. '_' → logprob: -5.2524027824401855
    6. ' ' → logprob: -5.2524027824401855
    7. '1' → logprob: -5.2524027824401855
    8. '0' → logprob: -6.5024027824401855
    9. ' ,' → logprob: -6.6274027824401855
    10. '   ' → logprob: -6.8774027824401855

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28495344519615173
    2. '=' → logprob: -1.4099534749984741
    3. '//' → logprob: -6.159953594207764
    4. ' ' → logprob: -7.284953594207764
    5. ' //' → logprob: -7.659953594207764
    6. '   ' → logprob: -9.284953117370605
    7. '```' → logprob: -9.409953117370605
    8. 'w' → logprob: -9.534953117370605
    9. ',' → logprob: -10.034953117370605
    10. '/' → logprob: -10.534953117370605

Token 54: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3760003447532654
    2. ' N' → logprob: -1.3760004043579102
    3. ' (' → logprob: -3.37600040435791
    4. '(N' → logprob: -3.87600040435791
    5. '(' → logprob: -5.37600040435791
    6. '   ' → logprob: -8.37600040435791
    7. ' ' → logprob: -8.75100040435791
    8. 'pow' → logprob: -8.87600040435791
    9. '(K' → logprob: -9.00100040435791
    10. '(n' → logprob: -9.00100040435791

Token 55: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.023653630167245865
    2. '//' → logprob: -3.773653745651245
    3. ' ' → logprob: -9.523653984069824
    4. ' #' → logprob: -9.523653984069824
    5. '#' → logprob: -10.023653984069824
    6. '=' → logprob: -10.523653984069824
    7. 'div' → logprob: -10.648653984069824
    8. '//=' → logprob: -10.648653984069824
    9. ' =' → logprob: -11.148653984069824
    10. '   ' → logprob: -11.273653984069824

Token 56: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.04218708351254463
    2. '(' → logprob: -3.917186975479126
    3. '(K' → logprob: -3.917186975479126
    4. ' K' → logprob: -7.167187213897705
    5. ' (' → logprob: -7.792187213897705
    6. 'k' → logprob: -8.917186737060547
    7. '2' → logprob: -9.542186737060547
    8. 'q' → logprob: -10.542186737060547
    9. '(q' → logprob: -11.292186737060547
    10. '(k' → logprob: -11.417186737060547

Token 57: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03191144019365311
    2. '
' → logprob: -4.031911373138428
    3. 'n' → logprob: -5.906911373138428
    4. ',' → logprob: -6.031911373138428
    5. '        
' → logprob: -6.781911373138428
    6. '-' → logprob: -7.031911373138428
    7. 'q' → logprob: -7.281911373138428
    8. '+' → logprob: -7.281911373138428
    9. '```' → logprob: -7.281911373138428
    10. '**' → logprob: -7.531911373138428

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011287963949143887
    2. '   ' → logprob: -5.261288166046143
    3. ',' → logprob: -5.761288166046143
    4. '        
' → logprob: -7.511288166046143
    5. 'print' → logprob: -8.511287689208984
    6. '
' → logprob: -8.636287689208984
    7. '```' → logprob: -8.636287689208984
    8. '+' → logprob: -8.636287689208984
    9. ' +' → logprob: -8.761287689208984
    10. '    
' → logprob: -8.886287689208984

Token 59: ' n' (ID: 297)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01026961486786604
    2. '       ' → logprob: -5.760269641876221
    3. 'if' → logprob: -5.885269641876221
    4. 'result' → logprob: -6.635269641876221
    5. ' print' → logprob: -6.760269641876221
    6. 'ans' → logprob: -7.760269641876221
    7. 's' → logprob: -8.385269165039062
    8. 'answer' → logprob: -8.635269165039062
    9. 'res' → logprob: -8.760269165039062
    10. 'count' → logprob: -9.260269165039062

Token 60: '_h' (ID: 3434)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.034072328358888626
    2. '_' → logprob: -3.4090723991394043
    3. 'k' → logprob: -8.534071922302246
    4. '_i' → logprob: -10.409071922302246
    5. '_=' → logprob: -10.659071922302246
    6. '_x' → logprob: -10.784071922302246
    7. '_j' → logprob: -10.909071922302246
    8. '_a' → logprob: -11.534071922302246
    9. '1' → logprob: -11.659071922302246
    10. '_o' → logprob: -11.659071922302246

Token 61: 'k' (ID: 74)
  Prédit: 'alf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'alf' → logprob: -0.016445811837911606
    2. '=' → logprob: -4.766445636749268
    3. ' =' → logprob: -5.891445636749268
    4. 'al' → logprob: -6.016445636749268
    5. 'a' → logprob: -6.766445636749268
    6. 'i' → logprob: -7.266445636749268
    7. '   ' → logprob: -7.766445636749268
    8. '//' → logprob: -8.891446113586426
    9. '2' → logprob: -10.516446113586426
    10. ',' → logprob: -10.891446113586426

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05504623427987099
    2. '=' → logprob: -2.930046319961548
    3. ' ' → logprob: -9.430046081542969
    4. ',' → logprob: -9.805046081542969
    5. '   ' → logprob: -11.555046081542969
    6. '    ' → logprob: -11.680046081542969
    7. '  ' → logprob: -13.180046081542969
    8. '       ' → logprob: -13.180046081542969
    9. ' ,' → logprob: -13.180046081542969
    10. '        ' → logprob: -14.055046081542969

Token 63: ' N' (ID: 478)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.17264074087142944
    2. 'n' → logprob: -1.9226408004760742
    3. ' (' → logprob: -5.047640800476074
    4. '(n' → logprob: -5.672640800476074
    5. ' N' → logprob: -6.422640800476074
    6. 'N' → logprob: -7.422640800476074
    7. '(' → logprob: -8.797640800476074
    8. ' ' → logprob: -10.047640800476074
    9. ' K' → logprob: -11.047640800476074
    10. '   ' → logprob: -11.547640800476074

Token 64: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5235288739204407
    2. '//' → logprob: -0.8985288739204407
    3. ' ' → logprob: -9.273529052734375
    4. '//=' → logprob: -9.773529052734375
    5. ' /' → logprob: -10.273529052734375
    6. ' //(' → logprob: -10.398529052734375
    7. '2' → logprob: -10.523529052734375
    8. '```' → logprob: -10.648529052734375
    9. '/' → logprob: -10.773529052734375
    10. '       ' → logprob: -10.898529052734375

Token 65: ' (' (ID: 350)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.08354605734348297
    2. ' (' → logprob: -3.4585461616516113
    3. '(q' → logprob: -3.8335461616516113
    4. '(' → logprob: -4.208546161651611
    5. '(k' → logprob: -4.458546161651611
    6. '(Q' → logprob: -8.458545684814453
    7. '(int' → logprob: -9.083545684814453
    8. ' ' → logprob: -9.958545684814453
    9. '(H' → logprob: -10.208545684814453
    10. '{' → logprob: -10.583545684814453

Token 66: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.3086869716644287
    2. '2' → logprob: -1.5586869716644287
    3. '(K' → logprob: -3.4336869716644287
    4. '(' → logprob: -4.558687210083008
    5. ' K' → logprob: -4.558687210083008
    6. ' ' → logprob: -6.808687210083008
    7. ' (' → logprob: -7.683687210083008
    8. '   ' → logprob: -9.308687210083008
    9. 'k' → logprob: -9.433687210083008
    10. 'q' → logprob: -9.933687210083008

Token 67: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.4603239893913269
    2. '2' → logprob: -1.2103240489959717
    3. '*' → logprob: -2.9603240489959717
    4. ' //' → logprob: -4.210323810577393
    5. '4' → logprob: -6.585323810577393
    6. ' ' → logprob: -6.710323810577393
    7. ' *' → logprob: -7.710323810577393
    8. '/' → logprob: -7.835323810577393
    9. '   ' → logprob: -8.33532428741455
    10. ')' → logprob: -8.83532428741455

Token 68: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.682846287731081e-05
    2. ' ' → logprob: -9.625066757202148
    3. ')' → logprob: -14.375066757202148
    4. '   ' → logprob: -16.37506675720215
    5. '```' → logprob: -16.87506675720215
    6. '4' → logprob: -18.00006675720215
    7. '  ' → logprob: -18.00006675720215
    8. '3' → logprob: -18.37506675720215
    9. '۲' → logprob: -18.62506675720215
    10. '(' → logprob: -18.75006675720215

Token 69: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1041145626222715e-05
    2. ' ' → logprob: -11.500011444091797
    3. ')' → logprob: -14.375011444091797
    4. '   ' → logprob: -15.500011444091797
    5. '```' → logprob: -17.125011444091797
    6. '4' → logprob: -17.250011444091797
    7. '  ' → logprob: -17.500011444091797
    8. '２' → logprob: -18.125011444091797
    9. '۲' → logprob: -18.312511444091797
    10. '3' → logprob: -18.312511444091797

Token 70: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014630933292210102
    2. ')
' → logprob: -4.2646307945251465
    3. ' )' → logprob: -8.514631271362305
    4. '       ' → logprob: -8.764631271362305
    5. '))' → logprob: -10.139631271362305
    6. ')
' → logprob: -10.389631271362305
    7. '   ' → logprob: -11.639631271362305
    8. ' )
' → logprob: -12.014631271362305
    9. ')

' → logprob: -12.264631271362305
    10. '+' → logprob: -12.264631271362305

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005140539258718491
    2. '
' → logprob: -5.88014030456543
    3. '        
' → logprob: -6.88014030456543
    4. '<|end|>' → logprob: -7.38014030456543
    5. '```' → logprob: -9.00514030456543
    6. ')' → logprob: -9.25514030456543
    7. '        ' → logprob: -9.50514030456543
    8. ',' → logprob: -9.63014030456543
    9. '   ' → logprob: -10.38014030456543
    10. 'print' → logprob: -10.38014030456543

Token 72: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.18764567375183105
    2. '       ' → logprob: -2.312645673751831
    3. ' print' → logprob: -2.937645673751831
    4. 'result' → logprob: -4.68764591217041
    5. 'res' → logprob: -5.93764591217041
    6. 's' → logprob: -6.68764591217041
    7. 'max' → logprob: -6.81264591217041
    8. ' result' → logprob: -7.31264591217041
    9. 'count' → logprob: -7.56264591217041
    10. ' ans' → logprob: -7.56264591217041

Token 73: '(pow' (ID: 189160)
  Prédit: '(pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.48787039518356323
    2. '(n' → logprob: -1.862870454788208
    3. '(max' → logprob: -2.112870454788208
    4. '((' → logprob: -2.362870454788208
    5. '(' → logprob: -4.737870216369629
    6. '(min' → logprob: -5.112870216369629
    7. '(((' → logprob: -7.987870216369629
    8. 'pow' → logprob: -8.237870216369629
    9. '(abs' → logprob: -8.612870216369629
    10. '(
' → logprob: -9.737870216369629

Token 74: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0003314129135105759
    2. '(' → logprob: -8.75033187866211
    3. '(max' → logprob: -9.00033187866211
    4. 'n' → logprob: -11.00033187866211
    5. '((' → logprob: -11.00033187866211
    6. '(min' → logprob: -11.37533187866211
    7. '(int' → logprob: -13.62533187866211
    8. '(
' → logprob: -14.12533187866211
    9. 'max' → logprob: -14.37533187866211
    10. '2' → logprob: -14.50033187866211

Token 75: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.011444831266999245
    2. '_h' → logprob: -4.511445045471191
    3. 'k' → logprob: -7.886445045471191
    4. 'h' → logprob: -11.636445045471191
    5. '_' → logprob: -12.886445045471191
    6. '//' → logprob: -13.011445045471191
    7. 'kh' → logprob: -14.073945045471191
    8. 'hk' → logprob: -14.323945045471191
    9. '```' → logprob: -14.698945045471191
    10. '_n' → logprob: -14.761445045471191

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007527955342084169
    2. ' ,' → logprob: -5.382527828216553
    3. '3' → logprob: -5.882527828216553
    4. '   ' → logprob: -10.132528305053711
    5. '           ' → logprob: -10.757528305053711
    6. '**' → logprob: -11.507528305053711
    7. ' ' → logprob: -11.882528305053711
    8. '       ' → logprob: -12.007528305053711
    9. '2' → logprob: -12.257528305053711
    10. ')' → logprob: -12.382528305053711

Token 77: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.005480267573148012
    2. '2' → logprob: -5.2554802894592285
    3. ' ' → logprob: -8.38047981262207
    4. '   ' → logprob: -11.88047981262207
    5. '1' → logprob: -12.63047981262207
    6. '

' → logprob: -13.69297981262207
    7. '  ' → logprob: -13.81797981262207
    8. ')' → logprob: -13.88047981262207
    9. '```' → logprob: -14.56797981262207
    10. ' ' → logprob: -14.88047981262207

Token 78: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.020558468997478485
    2. '2' → logprob: -3.8955583572387695
    3. ' ' → logprob: -12.02055835723877
    4. '1' → logprob: -12.77055835723877
    5. '

' → logprob: -13.27055835723877
    6. '   ' → logprob: -13.39555835723877
    7. ')' → logprob: -14.14555835723877
    8. '```' → logprob: -14.27055835723877
    9. '{' → logprob: -14.77055835723877
    10. '  ' → logprob: -15.58305835723877

Token 79: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032927326392382383
    2. '))' → logprob: -6.753292560577393
    3. ' )' → logprob: -7.128292560577393
    4. '-' → logprob: -7.628292560577393
    5. ' -' → logprob: -7.753292560577393
    6. '-)' → logprob: -8.37829303741455
    7. ')-' → logprob: -9.75329303741455
    8. '+' → logprob: -10.50329303741455
    9. ')+' → logprob: -10.87829303741455
    10. '   ' → logprob: -11.00329303741455

Token 80: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6047328114509583
    2. ' +' → logprob: -1.1047327518463135
    3. '+' → logprob: -2.4797327518463135
    4. '-' → logprob: -3.4797327518463135
    5. ')' → logprob: -5.104732990264893
    6. ' ' → logprob: -7.979732990264893
    7. ' )' → logprob: -8.104732513427734
    8. '+)' → logprob: -8.104732513427734
    9. '-)' → logprob: -8.229732513427734
    10. '    ' → logprob: -8.354732513427734

Token 81: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.02026764303445816
    2. '4' → logprob: -4.395267486572266
    3. '3' → logprob: -5.520267486572266
    4. '2' → logprob: -6.645267486572266
    5. '(pow' → logprob: -7.270267486572266
    6. ' pow' → logprob: -7.395267486572266
    7. ' ' → logprob: -7.395267486572266
    8. '   ' → logprob: -8.520267486572266
    9. '6' → logprob: -9.395267486572266
    10. '(' → logprob: -10.270267486572266

Token 82: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00027849749312736094
    2. '(' → logprob: -8.25027847290039
    3. '((' → logprob: -11.37527847290039
    4. 'n' → logprob: -12.25027847290039
    5. '2' → logprob: -14.50027847290039
    6. '(
' → logprob: -15.37527847290039
    7. ' (' → logprob: -16.00027847290039
    8. '```' → logprob: -17.12527847290039
    9. '(abs' → logprob: -17.12527847290039
    10. '(pow' → logprob: -17.12527847290039

Token 83: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.003219899022951722
    2. '_k' → logprob: -5.753220081329346
    3. '(n' → logprob: -10.878219604492188
    4. '//' → logprob: -12.128219604492188
    5. '(' → logprob: -12.503219604492188
    6. '/' → logprob: -12.628219604492188
    7. '_n' → logprob: -12.878219604492188
    8. 'h' → logprob: -13.128219604492188
    9. 'n' → logprob: -13.503219604492188
    10. '(_' → logprob: -13.878219604492188

Token 84: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6332891583442688
    2. '_k' → logprob: -0.7582891583442688
    3. ')' → logprob: -8.633289337158203
    4. '_h' → logprob: -9.383289337158203
    5. '2' → logprob: -9.883289337158203
    6. ' ' → logprob: -10.008289337158203
    7. '/' → logprob: -10.133289337158203
    8. '```' → logprob: -10.133289337158203
    9. '   ' → logprob: -10.508289337158203
    10. 'h' → logprob: -11.008289337158203

Token 85: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002173816319555044
    2. ' ,' → logprob: -6.502173900604248
    3. '//' → logprob: -8.50217342376709
    4. '2' → logprob: -8.62717342376709
    5. '3' → logprob: -9.12717342376709
    6. ' //' → logprob: -9.50217342376709
    7. ')' → logprob: -10.25217342376709
    8. '(),' → logprob: -10.62717342376709
    9. '   ' → logprob: -10.87717342376709
    10. ' ' → logprob: -11.50217342376709

Token 86: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3495723307132721
    2. ' n' → logprob: -1.2245723009109497
    3. 'pow' → logprob: -7.72457218170166
    4. '2' → logprob: -7.72457218170166
    5. '	n' → logprob: -9.47457218170166
    6. '1' → logprob: -10.34957218170166
    7. ' ' → logprob: -10.47457218170166
    8. ')n' → logprob: -10.59957218170166
    9. '<|end|>' → logprob: -10.97457218170166
    10. '    ' → logprob: -10.97457218170166

Token 87: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.7432603272027336e-06
    2. '_h' → logprob: -14.250001907348633
    3. 'k' → logprob: -14.375001907348633
    4. '_' → logprob: -14.500001907348633
    5. '	k' → logprob: -17.875001907348633
    6. '```' → logprob: -19.125001907348633
    7. ' к' → logprob: -19.500001907348633
    8. '_x' → logprob: -19.625001907348633
    9. ' k' → logprob: -19.875001907348633
    10. ')' → logprob: -19.875001907348633

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010247125755995512
    2. ' ,' → logprob: -7.0010247230529785
    3. '3' → logprob: -9.62602424621582
    4. '2' → logprob: -10.25102424621582
    5. ')' → logprob: -12.12602424621582
    6. '   ' → logprob: -13.12602424621582
    7. '```' → logprob: -13.75102424621582
    8. '),' → logprob: -13.87602424621582
    9. '(),' → logprob: -14.50102424621582
    10. ',
' → logprob: -14.87602424621582

Token 89: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00318912067450583
    2. ' ' → logprob: -5.7531890869140625
    3. '2' → logprob: -12.128189086914062
    4. '   ' → logprob: -13.378189086914062
    5. '  ' → logprob: -13.628189086914062
    6. ')' → logprob: -13.628189086914062
    7. '    ' → logprob: -15.440689086914062
    8. ' )' → logprob: -15.565689086914062
    9. '1' → logprob: -15.753189086914062
    10. '         ' → logprob: -15.878189086914062

Token 90: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.6656825866666622e-05
    2. ' ' → logprob: -11.25002670288086
    3. '2' → logprob: -11.37502670288086
    4. '   ' → logprob: -14.12502670288086
    5. ')' → logprob: -15.06252670288086
    6. '  ' → logprob: -15.75002670288086
    7. '```' → logprob: -15.93752670288086
    8. '{' → logprob: -16.18752670288086
    9. '	' → logprob: -16.25002670288086
    10. '1' → logprob: -16.50002670288086

Token 91: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0060033369809389114
    2. '))' → logprob: -5.131003379821777
    3. ')
' → logprob: -9.631003379821777
    4. ')))' → logprob: -12.381003379821777
    5. '))
' → logprob: -12.881003379821777
    6. '   ' → logprob: -13.631003379821777
    7. ')

' → logprob: -15.631003379821777
    8. '()' → logprob: -16.00600242614746
    9. ' )' → logprob: -16.00600242614746
    10. '`)' → logprob: -16.13100242614746

Token 92: 'if' (ID: 366)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.133791208267212
    2. '<|end|>' → logprob: -1.133791208267212
    3. '
' → logprob: -1.883791208267212
    4. 'if' → logprob: -2.383791208267212
    5. '```' → logprob: -2.508791208267212
    6. '#' → logprob: -4.758790969848633
    7. ')' → logprob: -4.758790969848633
    8. '\' → logprob: -5.258790969848633
    9. '<|end|>' → logprob: -6.883790969848633
    10. '' → logprob: -7.258790969848633

Token 93: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2520095109939575
    2. '__' → logprob: -1.5020095109939575
    3. '_' → logprob: -9.627009391784668
    4. ' ' → logprob: -11.752009391784668
    5. 'name' → logprob: -13.252009391784668
    6. ' ' → logprob: -13.502009391784668
    7. '_name' → logprob: -13.752009391784668
    8. '___' → logprob: -14.377009391784668
    9. '  ' → logprob: -15.127009391784668
    10. ' name' → logprob: -15.252009391784668

Token 94: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0008159428252838552
    2. '__.__' → logprob: -8.250816345214844
    3. ' __' → logprob: -8.875816345214844
    4. '==' → logprob: -9.000816345214844
    5. '.__' → logprob: -9.250816345214844
    6. '_' → logprob: -9.750816345214844
    7. ' ==' → logprob: -9.875816345214844
    8. '__.' → logprob: -10.125816345214844
    9. '.' → logprob: -11.375816345214844
    10. '___' → logprob: -11.375816345214844

Token 95: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.9981420336989686e-05
    2. '_' → logprob: -11.000020027160645
    3. '==' → logprob: -14.000020027160645
    4. '__.__' → logprob: -14.000020027160645
    5. '___' → logprob: -14.125020027160645
    6. '____' → logprob: -14.750020027160645
    7. '__
' → logprob: -16.375019073486328
    8. '__
' → logprob: -16.750019073486328
    9. 'name' → logprob: -17.250019073486328
    10. '__

' → logprob: -17.250019073486328

Token 96: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.49188271164894104
    2. '==' → logprob: -1.1168826818466187
    3. '__' → logprob: -2.866882801055908
    4. '=="' → logprob: -5.616882801055908
    5. '=='' → logprob: -8.61688232421875
    6. '[' → logprob: -8.61688232421875
    7. '_' → logprob: -9.61688232421875
    8. ' =="' → logprob: -10.24188232421875
    9. '["' → logprob: -10.36688232421875
    10. '==
' → logprob: -10.36688232421875

Token 97: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3868878483772278
    2. ''' → logprob: -1.136887788772583
    3. ' "__' → logprob: -12.011887550354004
    4. '__' → logprob: -12.261887550354004
    5. ' "' → logprob: -12.636887550354004
    6. '"user' → logprob: -13.636887550354004
    7. ' '__' → logprob: -14.511887550354004
    8. '`' → logprob: -14.636887550354004
    9. ' '' → logprob: -15.761887550354004
    10. ''user' → logprob: -16.76188850402832

Token 98: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0015733062755316496
    2. '__' → logprob: -6.501573085784912
    3. 'name' → logprob: -10.25157356262207
    4. '"' → logprob: -10.75157356262207
    5. ''' → logprob: -12.62657356262207
    6. '__":
' → logprob: -12.75157356262207
    7. '```' → logprob: -13.50157356262207
    8. 'ma' → logprob: -13.75157356262207
    9. '_main' → logprob: -14.00157356262207
    10. 'm' → logprob: -14.00157356262207

Token 99: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.3870370090007782
    2. '__' → logprob: -1.1370370388031006
    3. '__':
' → logprob: -9.26203727722168
    4. '_' → logprob: -10.51203727722168
    5. '__.' → logprob: -11.13703727722168
    6. '__["' → logprob: -11.51203727722168
    7. '__.__' → logprob: -11.63703727722168
    8. '__:' → logprob: -12.26203727722168
    9. '"' → logprob: -13.01203727722168
    10. '__
' → logprob: -13.88703727722168

Token 100: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.42981645464897156
    2. '   ' → logprob: -1.929816484451294
    3. '	main' → logprob: -2.179816484451294
    4. 'main' → logprob: -2.429816484451294
    5. '    
' → logprob: -6.054816246032715
    6. '_main' → logprob: -8.804816246032715
    7. ' 
' → logprob: -9.554816246032715
    8. ' ' → logprob: -9.554816246032715
    9. '<|end|>' → logprob: -9.679816246032715
    10. '(main' → logprob: -10.179816246032715

Token 101: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.008620958775281906
    2. ' main' → logprob: -4.758620738983154
    3. '	main' → logprob: -12.008621215820312
    4. '   ' → logprob: -15.258621215820312
    5. '_main' → logprob: -17.258621215820312
    6. '(main' → logprob: -17.508621215820312
    7. '.main' → logprob: -17.758621215820312
    8. ' ' → logprob: -17.883621215820312
    9. 'm' → logprob: -18.508621215820312
    10. '  ' → logprob: -18.508621215820312

Token 102: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001971457852050662
    2. '(' → logprob: -6.251971244812012
    3. '()
' → logprob: -10.376971244812012
    4. '(
' → logprob: -13.001971244812012
    5. '()`' → logprob: -13.126971244812012
    6. '()

' → logprob: -13.501971244812012
    7. ')' → logprob: -13.626971244812012
    8. ' ()' → logprob: -13.751971244812012
    9. '```' → logprob: -14.251971244812012
    10. '`()' → logprob: -14.501971244812012


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 100
Tokens correctement prédits (1ère position, stricte): 42
Tokens correctement prédits (1ère position, avec adaptation): 45
Tokens correctement prédits (top 10): 81
Précision stricte (1ère position): 42.00%
Précision adaptée (1ère position): 45.00%
Précision (top 10): 81.00%
================================================================================
