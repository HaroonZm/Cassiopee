================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:53:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    N, K = map(int, input().split())
    return N, K

def read_edges(N):
    if N - 1:
        a, b = zip(*(map(int, input().split()) for _ in range(N - 1)))
        return a, b
    else:
        return (), ()

def build_graph(N, a, b):
    G = [set() for _ in range(N + 1)]
    for x, y in zip(a, b):
        G[x].add(y)
        G[y].add(x)
    return G

def create_visited(N):
    return [False for _ in range(N + 1)]

def init_queue():
    from heapq import heappush
    q = []
    heappush(q, (1, 1))
    return q

def process_node(G, v, q, ans, K, MOD):
    from heapq import heappush, heappop
    while q:
        i, c = heappop(q)
        X = get_unvisited_neighbors(G, v, i)
        ans = visit_neighbors(X, G, v, q, ans, K, MOD, c)
    return ans

def get_unvisited_neighbors(G, v, i):
    return {x for x in G[i] if not v[x]}

def visit_neighbors(X, G, v, q, ans, K, MOD, c):
    from heapq import heappush
    for l, j in enumerate(X):
        heappush(q, (j, 2))
        ans = update_answer(ans, K, c, l, MOD)
        v[j] = mark_visited()
    return ans

def update_answer(ans, K, c, l, MOD):
    return (ans * (K - c - l)) % MOD

def mark_visited():
    return True

def main():
    MOD = 10 ** 9 + 7
    N, K = read_input()
    a, b = read_edges(N)
    G = build_graph(N, a, b)
    q = init_queue()
    v = create_visited(N)
    ans = K
    set_root_visited(v)
    ans = process_node(G, v, q, ans, K, MOD)
    print(ans)

def set_root_visited(v):
    v[1] = True

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004457178059965372
    2. '_' → logprob: -5.754456996917725
    3. '():' → logprob: -7.629456996917725
    4. '(:' → logprob: -8.004457473754883
    5. '```' → logprob: -9.004457473754883
    6. '(_:' → logprob: -9.004457473754883
    7. ':' → logprob: -9.504457473754883
    8. ' (' → logprob: -9.879457473754883
    9. '(_' → logprob: -10.629457473754883
    10. '_:' → logprob: -12.004457473754883

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7243372797966003
    2. '\n' → logprob: -0.9743372797966003
    3. '\' → logprob: -2.599337339401245
    4. '   ' → logprob: -3.224337339401245
    5. ':' → logprob: -5.224337100982666
    6. '``' → logprob: -5.974337100982666
    7. ''\' → logprob: -5.974337100982666
    8. '    
' → logprob: -5.974337100982666
    9. '
' → logprob: -6.349337100982666
    10. 'newline' → logprob: -6.474337100982666

Token 5: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41146060824394226
    2. '```' → logprob: -2.1614606380462646
    3. 'return' → logprob: -2.6614606380462646
    4. '    ' → logprob: -3.4114606380462646
    5. 'input' → logprob: -3.6614606380462646
    6. 'r' → logprob: -3.6614606380462646
    7. 'x' → logprob: -4.2864603996276855
    8. '\' → logprob: -4.2864603996276855
    9. '       ' → logprob: -4.6614603996276855
    10. '`' → logprob: -5.1614603996276855

Token 6: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2454560995101929
    2. '_' → logprob: -1.3704560995101929
    3. ' =' → logprob: -1.7454560995101929
    4. ',' → logprob: -1.9954560995101929
    5. ')' → logprob: -3.2454562187194824
    6. '  ' → logprob: -3.7454562187194824
    7. '.' → logprob: -3.8704562187194824
    8. ' ' → logprob: -3.9954562187194824
    9. 'u' → logprob: -4.120456218719482
    10. '   ' → logprob: -4.370456218719482

Token 7: ' K' (ID: 658)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5235061049461365
    2. ' M' → logprob: -1.6485061645507812
    3. 'input' → logprob: -1.8985061645507812
    4. ' K' → logprob: -3.3985061645507812
    5. 'M' → logprob: -4.898506164550781
    6. ' data' → logprob: -5.148506164550781
    7. ' ' → logprob: -5.398506164550781
    8. 'data' → logprob: -6.398506164550781
    9. ' =' → logprob: -6.773506164550781
    10. ' a' → logprob: -7.023506164550781

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5232248306274414
    2. '=' → logprob: -0.8982248306274414
    3. ',' → logprob: -9.273224830627441
    4. ')' → logprob: -12.898224830627441
    5. ' ' → logprob: -14.023224830627441
    6. '<|end|>' → logprob: -14.023224830627441
    7. '=

' → logprob: -14.648224830627441
    8. ' =
' → logprob: -14.648224830627441
    9. ' ,' → logprob: -14.898224830627441
    10. '  ' → logprob: -15.148224830627441

Token 9: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.006808568723499775
    2. 'map' → logprob: -5.006808757781982
    3. ' input' → logprob: -9.506808280944824
    4. ' list' → logprob: -11.631808280944824
    5. 'input' → logprob: -12.631808280944824
    6. ' ' → logprob: -13.006808280944824
    7. ' int' → logprob: -13.256808280944824
    8. ' [' → logprob: -14.006808280944824
    9. ' tuple' → logprob: -14.631808280944824
    10. 'int' → logprob: -14.756808280944824

Token 10: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14923107624053955
    2. '(int' → logprob: -2.77423095703125
    3. '(lambda' → logprob: -3.27423095703125
    4. '(str' → logprob: -3.64923095703125
    5. '<|end|>' → logprob: -4.64923095703125
    6. '```' → logprob: -7.39923095703125
    7. '<|end|>' → logprob: -7.89923095703125
    8. 'int' → logprob: -8.77423095703125
    9. '('' → logprob: -8.89923095703125
    10. '()' → logprob: -9.14923095703125

Token 11: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1268129050731659
    2. '(input' → logprob: -2.7518129348754883
    3. ',' → logprob: -3.5018129348754883
    4. 'input' → logprob: -4.501812934875488
    5. '(' → logprob: -4.876812934875488
    6. ',input' → logprob: -5.501812934875488
    7. '```' → logprob: -7.376812934875488
    8. '<|end|>' → logprob: -7.876812934875488
    9. ' input' → logprob: -8.126812934875488
    10. '(str' → logprob: -9.126812934875488

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0266308281570673
    2. ' input' → logprob: -3.6516308784484863
    3. ')' → logprob: -8.026630401611328
    4. ' )' → logprob: -13.776630401611328
    5. '(input' → logprob: -14.401630401611328
    6. 'raw' → logprob: -14.401630401611328
    7. '),' → logprob: -15.151630401611328
    8. '	input' → logprob: -15.276630401611328
    9. ',input' → logprob: -15.276630401611328
    10. '=input' → logprob: -15.901630401611328

Token 13: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6740177869796753
    2. '().' → logprob: -1.1740177869796753
    3. '()' → logprob: -2.299017906188965
    4. ')' → logprob: -2.549017906188965
    5. '()))' → logprob: -6.674017906188965
    6. '(' → logprob: -7.799017906188965
    7. '('' → logprob: -7.799017906188965
    8. '))' → logprob: -8.799017906188965
    9. '());' → logprob: -9.174017906188965
    10. ' ())' → logprob: -9.799017906188965

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015047440538182855
    2. 'strip' → logprob: -6.501504898071289
    3. 'rstrip' → logprob: -13.251504898071289
    4. ')' → logprob: -14.501504898071289
    5. ' split' → logprob: -15.876504898071289
    6. 'read' → logprob: -17.62650489807129
    7. 'spl' → logprob: -17.75150489807129
    8. 'replace' → logprob: -18.25150489807129
    9. '(split' → logprob: -18.50150489807129
    10. '())' → logprob: -20.12650489807129

Token 15: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10466168820858002
    2. '))' → logprob: -2.479661703109741
    3. '())' → logprob: -4.229661464691162
    4. '()))' → logprob: -7.229661464691162
    5. '()' → logprob: -8.35466194152832
    6. '(' → logprob: -10.35466194152832
    7. '`)' → logprob: -11.22966194152832
    8. ')))' → logprob: -11.85466194152832
    9. ')`' → logprob: -12.22966194152832
    10. '('' → logprob: -12.35466194152832

Token 16: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1706777811050415
    2. '   ' → logprob: -1.2956777811050415
    3. 'return' → logprob: -2.295677661895752
    4. '
' → logprob: -2.420677661895752
    5. '`' → logprob: -2.795677661895752
    6. '```' → logprob: -2.795677661895752
    7. '    
' → logprob: -3.295677661895752
    8. ' return' → logprob: -4.170677661895752
    9. '\' → logprob: -4.420677661895752
    10. ')' → logprob: -5.045677661895752

Token 17: ' return' (ID: 622)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.8794681429862976
    2. 'return' (adapté à ' return') → logprob: -1.3794682025909424
    3. '   ' → logprob: -2.0044682025909424
    4. 'result' → logprob: -3.1294682025909424
    5. 'r' → logprob: -3.3794682025909424
    6. '`' → logprob: -4.004467964172363
    7. ' return' → logprob: -4.379467964172363
    8. '    
' → logprob: -4.879467964172363
    9. '```' → logprob: -4.879467964172363
    10. ' data' → logprob: -4.879467964172363

Token 18: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.23455356061458588
    2. 'N' → logprob: -1.609553575515747
    3. ' ' → logprob: -5.609553337097168
    4. ' (' → logprob: -5.734553337097168
    5. '(' → logprob: -7.234553337097168
    6. '[' → logprob: -7.609553337097168
    7. '(N' → logprob: -8.234553337097168
    8. '[N' → logprob: -8.234553337097168
    9. ' [' → logprob: -8.984553337097168
    10. ' ' → logprob: -9.609553337097168

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008483609184622765
    2. '<|end|>' → logprob: -4.883483409881592
    3. ' ,' → logprob: -7.883483409881592
    4. ',N' → logprob: -8.75848388671875
    5. ',
' → logprob: -8.75848388671875
    6. ',K' → logprob: -10.13348388671875
    7. ',n' → logprob: -10.75848388671875
    8. '```' → logprob: -11.00848388671875
    9. ')' → logprob: -11.25848388671875
    10. '<|end|>' → logprob: -11.25848388671875

Token 20: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.026370316743850708
    2. 'K' → logprob: -3.6513702869415283
    3. ' ' → logprob: -10.90137004852295
    4. ' ' → logprob: -11.15137004852295
    5. ''' → logprob: -11.52637004852295
    6. '_' → logprob: -12.27637004852295
    7. 'space' → logprob: -12.52637004852295
    8. ')' → logprob: -12.65137004852295
    9. '`' → logprob: -12.65137004852295
    10. '  ' → logprob: -13.27637004852295

Token 21: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4257693886756897
    2. '\n' → logprob: -1.675769329071045
    3. '```' → logprob: -2.800769329071045
    4. 'newline' → logprob: -3.300769329071045
    5. '' → logprob: -3.925769329071045
    6. '<|end|>' → logprob: -4.550769329071045
    7. '\' → logprob: -4.925769329071045
    8. '#' → logprob: -5.300769329071045
    9. '    
' → logprob: -5.550769329071045
    10. '

' → logprob: -5.925769329071045

Token 22: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.3348276615142822
    2. '
' → logprob: -1.5848276615142822
    3. '```' → logprob: -1.5848276615142822
    4. '\' → logprob: -2.7098276615142822
    5. '' → logprob: -2.8348276615142822
    6. '#' → logprob: -3.2098276615142822
    7. '*' → logprob: -3.4598276615142822
    8. '<|end|>' → logprob: -3.4598276615142822
    9. 'newline' → logprob: -4.084827423095703
    10. 'def' → logprob: -4.209827423095703

Token 23: ' read' (ID: 1729)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.7138327360153198
    2. ' space' → logprob: -2.0888328552246094
    3. ' process' → logprob: -2.2138328552246094
    4. ' solve' → logprob: -2.3388328552246094
    5. ' main' → logprob: -2.4638328552246094
    6. ' read' → logprob: -3.5888328552246094
    7. ' compute' → logprob: -3.7138328552246094
    8. ' find' → logprob: -4.463832855224609
    9. ' count' → logprob: -4.713832855224609
    10. ' write' → logprob: -5.713832855224609

Token 24: '_edges' (ID: 68870)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.36414840817451477
    2. '_input' → logprob: -1.4891483783721924
    3. '_array' → logprob: -2.8641483783721924
    4. '_data' → logprob: -5.1141486167907715
    5. '_line' → logprob: -5.3641486167907715
    6. '_output' → logprob: -5.3641486167907715
    7. '_list' → logprob: -5.7391486167907715
    8. '(' → logprob: -8.114148139953613
    9. '_values' → logprob: -8.239148139953613
    10. '_value' → logprob: -8.489148139953613

Token 25: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07010594010353088
    2. '():' → logprob: -3.070106029510498
    3. '_' → logprob: -4.320106029510498
    4. '(_' → logprob: -6.570106029510498
    5. '```' → logprob: -7.070106029510498
    6. '(:' → logprob: -7.195106029510498
    7. '("("' → logprob: -7.695106029510498
    8. '_list' → logprob: -7.695106029510498
    9. '(_:' → logprob: -7.695106029510498
    10. ':' → logprob: -8.19510555267334

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005828189896419644
    2. ')' → logprob: -8.250582695007324
    3. ',' → logprob: -8.250582695007324
    4. ' ):' → logprob: -10.250582695007324
    5. '):
' → logprob: -10.750582695007324
    6. ':' → logprob: -12.875582695007324
    7. '   ' → logprob: -15.125582695007324
    8. '):
' → logprob: -15.750582695007324
    9. ')：' → logprob: -16.00058364868164
    10. '=' → logprob: -16.37558364868164

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10278966277837753
    2. ' edges' → logprob: -2.6027896404266357
    3. 'edges' → logprob: -3.8527896404266357
    4. '_edges' → logprob: -6.727789878845215
    5. '(edges' → logprob: -7.477789878845215
    6. '	graph' → logprob: -9.102789878845215
    7. '    ' → logprob: -9.227789878845215
    8. '<|end|>' → logprob: -9.477789878845215
    9. '```' → logprob: -9.727789878845215
    10. ' graph' → logprob: -10.102789878845215

Token 28: ' if' (ID: 538)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.04152492806315422
    2. '   ' → logprob: -3.916524887084961
    3. 'edges' → logprob: -3.916524887084961
    4. ' graph' → logprob: -7.666524887084961
    5. ' return' → logprob: -9.041524887084961
    6. ' edge' → logprob: -9.666524887084961
    7. 'graph' → logprob: -9.791524887084961
    8. '(edges' → logprob: -10.166524887084961
    9. '_edges' → logprob: -11.041524887084961
    10. ' result' → logprob: -11.041524887084961

Token 29: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.007444413378834724
    2. 'N' → logprob: -6.007444381713867
    3. '_' → logprob: -6.382444381713867
    4. ' ' → logprob: -6.507444381713867
    5. ' K' → logprob: -7.757444381713867
    6. 'or' → logprob: -7.882444381713867
    7. 'alse' → logprob: -8.382444381713867
    8. '_edges' → logprob: -8.757444381713867
    9. ' edges' → logprob: -9.132444381713867
    10. 'edges' → logprob: -10.007444381713867

Token 30: ' -' (ID: 533)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.13362084329128265
    2. '>' → logprob: -2.6336207389831543
    3. ' <' → logprob: -3.8836207389831543
    4. ' ==' → logprob: -4.258620738983154
    5. ' <=' → logprob: -4.258620738983154
    6. '==' → logprob: -6.133620738983154
    7. '<' → logprob: -7.008620738983154
    8. '<=' → logprob: -7.383620738983154
    9. ' ' → logprob: -7.633620738983154
    10. ' >=' → logprob: -9.008621215820312

Token 31: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04929877072572708
    2. '1' → logprob: -3.0492987632751465
    3. '>' → logprob: -7.9242987632751465
    4. '2' → logprob: -8.549299240112305
    5. '=' → logprob: -9.299299240112305
    6. ' >' → logprob: -11.049299240112305
    7. '0' → logprob: -11.299299240112305
    8. '...' → logprob: -11.799299240112305
    9. '-' → logprob: -12.299299240112305
    10. '```' → logprob: -13.111799240112305

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009253957541659474
    2. ' ' → logprob: -7.000925540924072
    3. '2' → logprob: -11.375925064086914
    4. '0' → logprob: -13.125925064086914
    5. '>' → logprob: -15.500925064086914
    6. '=' → logprob: -16.125925064086914
    7. '   ' → logprob: -17.125925064086914
    8. '```' → logprob: -17.375925064086914
    9. '  ' → logprob: -17.500925064086914
    10. '4' → logprob: -18.563425064086914

Token 33: ':
' (ID: 734)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8848704695701599
    2. ' <=' → logprob: -1.2598705291748047
    3. ' >' → logprob: -1.5098705291748047
    4. '==' → logprob: -3.6348705291748047
    5. ':' → logprob: -4.134870529174805
    6. ')' → logprob: -4.634870529174805
    7. '>' → logprob: -4.634870529174805
    8. '<=' → logprob: -5.009870529174805
    9. ' <' → logprob: -5.259870529174805
    10. ' >=' → logprob: -5.759870529174805

Token 34: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6668572425842285
    2. '   ' → logprob: -1.4168572425842285
    3. '<|end|>' → logprob: -2.5418572425842285
    4. '       ' → logprob: -3.0418572425842285
    5. ' :' → logprob: -3.1668572425842285
    6. '    ' → logprob: -3.2918572425842285
    7. '<|end|>' → logprob: -4.5418572425842285
    8. ':
' → logprob: -5.0418572425842285
    9. ',' → logprob: -5.1668572425842285
    10. ' :
' → logprob: -5.5418572425842285

Token 35: ' a' (ID: 261)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.8079617023468018
    2. '   ' → logprob: -1.8079617023468018
    3. ' for' → logprob: -1.9329617023468018
    4. ':' → logprob: -2.3079617023468018
    5. '       ' → logprob: -2.4329617023468018
    6. ' return' → logprob: -2.8079617023468018
    7. ' :' → logprob: -3.0579617023468018
    8. ' 
' → logprob: -3.3079617023468018
    9. '    
' → logprob: -3.8079617023468018
    10. ':
' → logprob: -3.9329617023468018

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3946554958820343
    2. ' ,' → logprob: -1.144655466079712
    3. ' ' → logprob: -5.144655704498291
    4. 'd' → logprob: -8.144655227661133
    5. '=' → logprob: -8.394655227661133
    6. 'rray' → logprob: -8.519655227661133
    7. 'r' → logprob: -8.644655227661133
    8. '   ' → logprob: -8.894655227661133
    9. '  ' → logprob: -9.019655227661133
    10. ' =' → logprob: -9.019655227661133

Token 37: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7758472561836243
    2. ' b' → logprob: -1.1508471965789795
    3. 'b' → logprob: -2.7758471965789795
    4. ',' → logprob: -2.9008471965789795
    5. '=' → logprob: -3.2758471965789795
    6. ' =' → logprob: -3.7758471965789795
    7. '_' → logprob: -3.9008471965789795
    8. ' ,' → logprob: -4.650847434997559
    9. ' _' → logprob: -6.150847434997559
    10. '  ' → logprob: -6.275847434997559

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0700281411409378
    2. '=' → logprob: -2.695028066635132
    3. ',' → logprob: -9.445028305053711
    4. ' ' → logprob: -12.195028305053711
    5. ')' → logprob: -12.570028305053711
    6. ' ,' → logprob: -13.070028305053711
    7. '  ' → logprob: -14.820028305053711
    8. '   ' → logprob: -14.945028305053711
    9. '    ' → logprob: -15.070028305053711
    10. ' =
' → logprob: -15.695028305053711

Token 39: ' zip' (ID: 16216)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.006382687482982874
    2. 'map' → logprob: -5.131382465362549
    3. ' ' → logprob: -9.131382942199707
    4. ' list' → logprob: -9.131382942199707
    5. ' input' → logprob: -9.506382942199707
    6. ' [' → logprob: -9.756382942199707
    7. ' int' → logprob: -10.756382942199707
    8. '	map' → logprob: -11.006382942199707
    9. ' []' → logprob: -11.256382942199707
    10. '    ' → logprob: -11.506382942199707

Token 40: '(*(' (ID: 103513)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.314561665058136
    2. '(*' → logprob: -1.3145616054534912
    3. '(*(' → logprob: -7.06456184387207
    4. '(*)' → logprob: -8.18956184387207
    5. '((*' → logprob: -10.06456184387207
    6. '(range' → logprob: -10.56456184387207
    7. '(-' → logprob: -10.81456184387207
    8. '(
' → logprob: -10.81456184387207
    9. '((' → logprob: -11.06456184387207
    10. '（' → logprob: -11.31456184387207

Token 41: 'map' (ID: 3726)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7723585367202759
    2. 'map' → logprob: -0.8973585367202759
    3. 'tuple' → logprob: -3.0223584175109863
    4. '[int' → logprob: -3.5223584175109863
    5. '(map' → logprob: -4.022358417510986
    6. '(tuple' → logprob: -4.522358417510986
    7. '(int' → logprob: -4.647358417510986
    8. 'int' → logprob: -5.147358417510986
    9. ' [' → logprob: -6.147358417510986
    10. 'list' → logprob: -6.897358417510986

Token 42: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.026488276198506355
    2. '(' → logprob: -3.6514883041381836
    3. '(lambda' → logprob: -9.151488304138184
    4. 'int' → logprob: -10.026488304138184
    5. '<int' → logprob: -11.151488304138184
    6. '(
' → logprob: -11.651488304138184
    7. '<|end|>' → logprob: -11.776488304138184
    8. '[int' → logprob: -12.776488304138184
    9. '```' → logprob: -13.901488304138184
    10. ',int' → logprob: -14.026488304138184

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11447134613990784
    2. '(input' → logprob: -3.239471435546875
    3. '<|end|>' → logprob: -3.364471435546875
    4. ',input' → logprob: -4.239471435546875
    5. '(' → logprob: -4.364471435546875
    6. ')' → logprob: -5.239471435546875
    7. ' ,' → logprob: -7.239471435546875
    8. 'input' → logprob: -7.739471435546875
    9. '(),' → logprob: -8.739471435546875
    10. '),' → logprob: -8.739471435546875

Token 44: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1135205402970314
    2. ' input' → logprob: -2.238520622253418
    3. ')' → logprob: -7.363520622253418
    4. ',input' → logprob: -10.988520622253418
    5. '(input' → logprob: -11.488520622253418
    6. '	input' → logprob: -11.988520622253418
    7. '=input' → logprob: -12.238520622253418
    8. '<input' → logprob: -12.238520622253418
    9. ' ' → logprob: -12.488520622253418
    10. ',' → logprob: -12.738520622253418

Token 45: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0007432799902744591
    2. '()' → logprob: -7.750743389129639
    3. ')' → logprob: -8.75074291229248
    4. '())' → logprob: -9.12574291229248
    5. '()
' → logprob: -11.75074291229248
    6. '(' → logprob: -12.00074291229248
    7. '()))' → logprob: -12.12574291229248
    8. '())))' → logprob: -12.25074291229248
    9. '()).' → logprob: -12.37574291229248
    10. '   ' → logprob: -12.62574291229248

Token 46: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.534558552724775e-05
    2. 'strip' → logprob: -10.875025749206543
    3. 'rstrip' → logprob: -12.125025749206543
    4. ' split' → logprob: -15.000025749206543
    5. 'spl' → logprob: -15.375025749206543
    6. ')' → logprob: -15.750025749206543
    7. 'read' → logprob: -16.000024795532227
    8. '(split' → logprob: -16.250024795532227
    9. '```' → logprob: -18.000024795532227
    10. '   ' → logprob: -18.750024795532227

Token 47: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4087725877761841
    2. '())))' → logprob: -1.783772587776184
    3. ')' → logprob: -2.5337724685668945
    4. '()' → logprob: -2.9087724685668945
    5. ')))' → logprob: -3.9087724685668945
    6. '()))' → logprob: -4.6587724685668945
    7. '()),' → logprob: -5.9087724685668945
    8. '())))
' → logprob: -8.283772468566895
    9. '),' → logprob: -8.533772468566895
    10. '))))' → logprob: -8.533772468566895

Token 48: ' for' (ID: 395)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.39693883061408997
    2. '()))' → logprob: -1.8969388008117676
    3. ')' → logprob: -2.2719388008117676
    4. '()' → logprob: -3.1469388008117676
    5. '())' → logprob: -3.6469388008117676
    6. ')))' → logprob: -6.146938800811768
    7. '   ' → logprob: -6.896938800811768
    8. 'for' → logprob: -7.396938800811768
    9. '()))
' → logprob: -7.771938800811768
    10. '))
' → logprob: -8.521939277648926

Token 49: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.3869515359401703
    2. '_' → logprob: -1.1369515657424927
    3. ' i' → logprob: -10.136951446533203
    4. ' ' → logprob: -10.386951446533203
    5. ' ' → logprob: -11.761951446533203
    6. 'i' → logprob: -14.261951446533203
    7. ' in' → logprob: -14.636951446533203
    8. ')' → logprob: -15.136951446533203
    9. '_i' → logprob: -15.261951446533203
    10. ' ▁' → logprob: -15.886951446533203

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03412853926420212
    2. 'in' → logprob: -3.409128427505493
    3. 'range' → logprob: -8.159128189086914
    4. ' ' → logprob: -8.659128189086914
    5. ' range' → logprob: -11.784128189086914
    6. '  ' → logprob: -12.034128189086914
    7. 'i' → logprob: -12.409128189086914
    8. ')' → logprob: -13.534128189086914
    9. '	in' → logprob: -14.534128189086914
    10. '   ' → logprob: -14.534128189086914

Token 51: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00023274161503650248
    2. ' range' → logprob: -8.375232696533203
    3. '	range' → logprob: -14.125232696533203
    4. ')' → logprob: -14.750232696533203
    5. ' ' → logprob: -15.125232696533203
    6. '(range' → logprob: -15.375232696533203
    7. '   ' → logprob: -15.750232696533203
    8. 'rang' → logprob: -15.875232696533203
    9. '  ' → logprob: -16.125232696533203
    10. '[' → logprob: -17.250232696533203

Token 52: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.012550621293485165
    2. '(' → logprob: -4.3875508308410645
    3. '(n' → logprob: -11.262550354003906
    4. ' (' → logprob: -11.262550354003906
    5. '(
' → logprob: -11.387550354003906
    6. ')' → logprob: -13.012550354003906
    7. '((' → logprob: -14.137550354003906
    8. ' N' → logprob: -15.887550354003906
    9. '(

' → logprob: -16.012550354003906
    10. 'N' → logprob: -16.137550354003906

Token 53: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3893238604068756
    2. ' -' → logprob: -1.1393238306045532
    3. ')' → logprob: -7.014323711395264
    4. ')))' → logprob: -7.639323711395264
    5. '))' → logprob: -7.764323711395264
    6. '   ' → logprob: -7.889323711395264
    7. ' ' → logprob: -9.014324188232422
    8. '1' → logprob: -9.139324188232422
    9. '       ' → logprob: -12.389324188232422
    10. ' )' → logprob: -12.389324188232422

Token 54: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002215084619820118
    2. ' ' → logprob: -6.1272149085998535
    3. '   ' → logprob: -11.127215385437012
    4. '<|end|>' → logprob: -11.502215385437012
    5. ')' → logprob: -13.127215385437012
    6. '       ' → logprob: -14.377215385437012
    7. '```' → logprob: -14.377215385437012
    8. '2' → logprob: -14.502215385437012
    9. '<|end|>' → logprob: -15.064715385437012
    10. '  ' → logprob: -15.127215385437012

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011152983643114567
    2. ' ' → logprob: -9.12511157989502
    3. '```' → logprob: -14.12511157989502
    4. ')' → logprob: -14.25011157989502
    5. '   ' → logprob: -14.37511157989502
    6. '2' → logprob: -15.93761157989502
    7. '<|end|>' → logprob: -16.312610626220703
    8. '１' → logprob: -16.625110626220703
    9. '`' → logprob: -16.875110626220703
    10. '       ' → logprob: -17.375110626220703

Token 56: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.008683117106556892
    2. '))' → logprob: -4.883683204650879
    3. ')))
' → logprob: -7.508683204650879
    4. ')' → logprob: -7.633683204650879
    5. '))))' → logprob: -10.633683204650879
    6. '   ' → logprob: -12.383683204650879
    7. '))
' → logprob: -12.508683204650879
    8. ')));' → logprob: -12.883683204650879
    9. ' ' → logprob: -13.008683204650879
    10. ')))

' → logprob: -13.383683204650879

Token 57: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43138769268989563
    2. ')' → logprob: -1.5563876628875732
    3. '       ' → logprob: -2.0563876628875732
    4. ')
' → logprob: -5.056387901306152
    5. '
' → logprob: -6.056387901306152
    6. ' )' → logprob: -7.181387901306152
    7. '    
' → logprob: -8.056387901306152
    8. '	return' → logprob: -8.431387901306152
    9. ' return' → logprob: -8.556387901306152
    10. ' ' → logprob: -8.681387901306152

Token 58: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8942000865936279
    2. '   ' → logprob: -1.144200086593628
    3. '       ' → logprob: -1.519200086593628
    4. ' return' → logprob: -3.019200086593628
    5. ')' → logprob: -6.019200325012207
    6. '
' → logprob: -7.144200325012207
    7. ' ' → logprob: -7.644200325012207
    8. '	return' → logprob: -8.394200325012207
    9. '    
' → logprob: -8.644200325012207
    10. '        
' → logprob: -8.894200325012207

Token 59: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11522462218999863
    2. 'list' → logprob: -3.115224599838257
    3. ' a' → logprob: -3.240224599838257
    4. ' list' → logprob: -3.990224599838257
    5. '[a' → logprob: -5.240224838256836
    6. '(a' → logprob: -7.490224838256836
    7. ' (' → logprob: -7.740224838256836
    8. '[(' → logprob: -9.115224838256836
    9. ' [' → logprob: -9.240224838256836
    10. '(list' → logprob: -9.365224838256836

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01619788631796837
    2. ',b' → logprob: -4.141197681427002
    3. ' ,' → logprob: -9.01619815826416
    4. '<|end|>' → logprob: -10.39119815826416
    5. ',
' → logprob: -12.14119815826416
    6. ',n' → logprob: -13.51619815826416
    7. 'b' → logprob: -13.89119815826416
    8. ',B' → logprob: -14.14119815826416
    9. ',a' → logprob: -14.14119815826416
    10. ',None' → logprob: -14.64119815826416

Token 61: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.31326788663864136
    2. 'b' → logprob: -1.3132679462432861
    3. ' ' → logprob: -12.813267707824707
    4. ' ' → logprob: -13.438267707824707
    5. 's' → logprob: -14.438267707824707
    6. '_b' → logprob: -14.813267707824707
    7. 'space' → logprob: -15.563267707824707
    8. '	b' → logprob: -16.000768661499023
    9. '_' → logprob: -16.125768661499023
    10. ' _' → logprob: -16.625768661499023

Token 62: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27043309807777405
    2. '<|end|>' → logprob: -2.270433187484741
    3. '    
' → logprob: -2.645433187484741
    4. '\n' → logprob: -3.770433187484741
    5. '
' → logprob: -3.895433187484741
    6. 'else' → logprob: -6.020432949066162
    7. '  
' → logprob: -6.270432949066162
    8. '```' → logprob: -6.645432949066162
    9. '<|end|>' → logprob: -6.645432949066162
    10. ')' → logprob: -6.770432949066162

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37507501244544983
    2. '<|end|>' → logprob: -1.2500749826431274
    3. '    
' → logprob: -4.625074863433838
    4. ')' → logprob: -5.500074863433838
    5. '```' → logprob: -5.750074863433838
    6. '
' → logprob: -6.000074863433838
    7. 'else' → logprob: -6.750074863433838
    8. '<|end|>' → logprob: -6.750074863433838
    9. '\n' → logprob: -6.875074863433838
    10. '  
' → logprob: -7.625074863433838

Token 64: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39096498489379883
    2. '   ' → logprob: -1.8909649848937988
    3. ' :' → logprob: -2.890964984893799
    4. ':' → logprob: -3.015964984893799
    5. ' None' → logprob: -3.265964984893799
    6. ' []' → logprob: -4.265964984893799
    7. ' ' → logprob: -5.890964984893799
    8. 'None' → logprob: -6.015964984893799
    9. '[]' → logprob: -6.140964984893799
    10. '    ' → logprob: -6.390964984893799

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8569666147232056
    2. ' []' → logprob: -1.3569666147232056
    3. ' None' → logprob: -1.7319666147232056
    4. '   ' → logprob: -2.856966495513916
    5. ' ()' → logprob: -3.606966495513916
    6. '[]' → logprob: -3.731966495513916
    7. ' return' → logprob: -4.356966495513916
    8. 'None' → logprob: -5.106966495513916
    9. 'return' → logprob: -5.731966495513916
    10. ' ' → logprob: -6.106966495513916

Token 67: ' return' (ID: 622)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6617963910102844
    2. 'return' (adapté à ' return') → logprob: -1.5367963314056396
    3. '[]' → logprob: -2.5367963314056396
    4. ' ()' → logprob: -2.6617963314056396
    5. 'None' → logprob: -3.0367963314056396
    6. ' None' → logprob: -3.7867963314056396
    7. ' return' → logprob: -4.286796569824219
    8. '       ' → logprob: -4.536796569824219
    9. '   ' → logprob: -4.661796569824219
    10. ' []' → logprob: -5.036796569824219

Token 68: ' (),' (ID: 88655)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.3752164840698242
    2. 'None' → logprob: -1.5002164840698242
    3. '[]' → logprob: -1.6252164840698242
    4. ' ()' → logprob: -1.7502164840698242
    5. ' None' → logprob: -2.500216484069824
    6. ' []' → logprob: -2.750216484069824
    7. '<|end|>' → logprob: -5.625216484069824
    8. '(None' → logprob: -6.750216484069824
    9. ' ' → logprob: -6.875216484069824
    10. '([],' → logprob: -8.000216484069824

Token 69: ' ()

' (ID: 77757)
  Prédit: ' ()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ()' → logprob: -0.866208553314209
    2. '()' → logprob: -0.991208553314209
    3. '<|end|>' → logprob: -2.116208553314209
    4. ' ' → logprob: -3.116208553314209
    5. ')' → logprob: -3.241208553314209
    6. ' )' → logprob: -6.741208553314209
    7. '[]' → logprob: -7.491208553314209
    8. ' ())' → logprob: -7.491208553314209
    9. 'None' → logprob: -7.991208553314209
    10. ' ()
' → logprob: -8.241209030151367

Token 70: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07498011738061905
    2. '
' → logprob: -3.1999800205230713
    3. 'a' → logprob: -4.57498025894165
    4. '#' → logprob: -4.94998025894165
    5. '```' → logprob: -5.19998025894165
    6. '

' → logprob: -6.32498025894165
    7. '\n' → logprob: -6.69998025894165
    8. '<|end|>' → logprob: -6.94998025894165
    9. '    
' → logprob: -7.19998025894165
    10. '\' → logprob: -7.19998025894165

Token 71: ' build' (ID: 3024)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5474307537078857
    2. ' solve' → logprob: -1.4224307537078857
    3. ' dfs' → logprob: -2.2974307537078857
    4. 'main' → logprob: -3.9224307537078857
    5. ' count' → logprob: -4.422430992126465
    6. ' max' → logprob: -4.672430992126465
    7. 'solve' → logprob: -4.797430992126465
    8. ' is' → logprob: -5.172430992126465
    9. ' bfs' → logprob: -5.422430992126465
    10. 'dfs' → logprob: -5.547430992126465

Token 72: '_graph' (ID: 33441)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.5065852999687195
    2. '_graph' → logprob: -1.0065853595733643
    3. '_' → logprob: -3.5065853595733643
    4. '(' → logprob: -7.131585121154785
    5. '_edges' → logprob: -8.506585121154785
    6. '```' → logprob: -8.881585121154785
    7. '_adj' → logprob: -9.131585121154785
    8. '_edge' → logprob: -9.131585121154785
    9. '(_' → logprob: -9.381585121154785
    10. '_ad' → logprob: -9.381585121154785

Token 73: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.14513926208019257
    2. '(' → logprob: -2.020139217376709
    3. ' (' → logprob: -6.145139217376709
    4. '(n' → logprob: -8.270139694213867
    5. '(
' → logprob: -10.895139694213867
    6. '((' → logprob: -11.020139694213867
    7. '```' → logprob: -12.270139694213867
    8. '(a' → logprob: -12.520139694213867
    9. ' ' → logprob: -12.770139694213867
    10. 'def' → logprob: -13.020139694213867

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006855439394712448
    2. '):' → logprob: -5.006855487823486
    3. ' ,' → logprob: -9.131855010986328
    4. ')' → logprob: -11.131855010986328
    5. '   ' → logprob: -12.006855010986328
    6. ' ):' → logprob: -12.131855010986328
    7. ':' → logprob: -14.006855010986328
    8. ',a' → logprob: -14.131855010986328
    9. ',N' → logprob: -14.256855010986328
    10. ',b' → logprob: -14.256855010986328

Token 75: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06998778879642487
    2. ' a' → logprob: -2.6949877738952637
    3. ' edges' → logprob: -10.569988250732422
    4. 'edges' → logprob: -11.069988250732422
    5. '	a' → logprob: -12.819988250732422
    6. '   ' → logprob: -13.319988250732422
    7. ')' → logprob: -13.319988250732422
    8. '_a' → logprob: -14.194988250732422
    9. ')a' → logprob: -14.319988250732422
    10. ' ' → logprob: -14.819988250732422

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024934951215982437
    2. ',b' → logprob: -6.002493381500244
    3. ' ,' → logprob: -11.002493858337402
    4. 'b' → logprob: -15.502493858337402
    5. ',s' → logprob: -15.502493858337402
    6. ',a' → logprob: -15.627493858337402
    7. ',K' → logprob: -16.752492904663086
    8. ',
' → logprob: -16.877492904663086
    9. ' b' → logprob: -16.877492904663086
    10. ',B' → logprob: -17.002492904663086

Token 77: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2014201581478119
    2. 'b' → logprob: -1.7014201879501343
    3. ' ' → logprob: -12.701419830322266
    4. '	b' → logprob: -13.951419830322266
    5. ',' → logprob: -14.326419830322266
    6. ',b' → logprob: -14.451419830322266
    7. ')b' → logprob: -14.576419830322266
    8. ')' → logprob: -14.701419830322266
    9. '_b' → logprob: -15.576419830322266
    10. '   ' → logprob: -16.076419830322266

Token 78: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005686411168426275
    2. '):
' → logprob: -8.000568389892578
    3. ')' → logprob: -8.500568389892578
    4. ' ):' → logprob: -10.625568389892578
    5. ':' → logprob: -13.250568389892578
    6. '   ' → logprob: -13.375568389892578
    7. '):
' → logprob: -13.500568389892578
    8. ')：' → logprob: -15.125568389892578
    9. ',' → logprob: -16.000568389892578
    10. '):

' → logprob: -16.625568389892578

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0322823524475098
    2. ':' → logprob: -1.2822823524475098
    3. ' graph' → logprob: -1.6572823524475098
    4. 'graph' → logprob: -3.0322823524475098
    5. ' :' → logprob: -3.9072823524475098
    6. ':
' → logprob: -4.15728235244751
    7. '    ' → logprob: -4.15728235244751
    8. '	graph' → logprob: -4.15728235244751
    9. ' :
' → logprob: -4.40728235244751
    10. ' 
' → logprob: -4.53228235244751

Token 80: ' G' (ID: 499)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.06006551533937454
    2. 'graph' → logprob: -2.935065507888794
    3. '	graph' → logprob: -6.685065746307373
    4. '   ' → logprob: -7.060065746307373
    5. ' 
' → logprob: -7.060065746307373
    6. '    ' → logprob: -7.185065746307373
    7. ' g' → logprob: -7.560065746307373
    8. ' ' → logprob: -7.935065746307373
    9. ' from' → logprob: -8.560065269470215
    10. 'g' → logprob: -9.560065269470215

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17977668344974518
    2. '=' → logprob: -1.804776668548584
    3. '[' → logprob: -11.304777145385742
    4. ' ' → logprob: -11.304777145385742
    5. '=[]' → logprob: -13.429777145385742
    6. ' =[' → logprob: -13.429777145385742
    7. '.' → logprob: -14.179777145385742
    8. ')' → logprob: -14.554777145385742
    9. '   ' → logprob: -14.554777145385742
    10. ' =
' → logprob: -15.054777145385742

Token 82: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4809153974056244
    2. ' [[]' → logprob: -0.9809154272079468
    3. ' [' → logprob: -5.605915546417236
    4. '{' → logprob: -5.855915546417236
    5. ' {' → logprob: -8.730915069580078
    6. ' defaultdict' → logprob: -9.730915069580078
    7. 'default' → logprob: -10.105915069580078
    8. '{}' → logprob: -12.730915069580078
    9. '   ' → logprob: -12.980915069580078
    10. ' [{}' → logprob: -13.480915069580078

Token 83: 'set' (ID: 977)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.02982812002301216
    2. ' []' → logprob: -3.5298280715942383
    3. 'set' → logprob: -9.654828071594238
    4. ']' → logprob: -12.154828071594238
    5. ' set' → logprob: -12.904828071594238
    6. '[]
' → logprob: -13.279828071594238
    7. '[' → logprob: -13.654828071594238
    8. '[]}' → logprob: -13.779828071594238
    9. '[]

' → logprob: -13.904828071594238
    10. '[])' → logprob: -15.029828071594238

Token 84: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0015042672166600823
    2. '()]' → logprob: -6.501504421234131
    3. '()
' → logprob: -13.876503944396973
    4. ' ()' → logprob: -14.876503944396973
    5. ']()' → logprob: -16.00150489807129
    6. '()

' → logprob: -16.00150489807129
    7. '（）' → logprob: -16.25150489807129
    8. '())' → logprob: -16.75150489807129
    9. '()\' → logprob: -16.87650489807129
    10. '()}' → logprob: -17.00150489807129

Token 85: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.5014188799541444e-05
    2. '()]' → logprob: -10.625044822692871
    3. ' for' → logprob: -11.625044822692871
    4. ')' → logprob: -12.375044822692871
    5. ' ()' → logprob: -12.750044822692871
    6. ']' → logprob: -13.000044822692871
    7. 'for' → logprob: -13.625044822692871
    8. '(' → logprob: -14.500044822692871
    9. ']()' → logprob: -15.125044822692871
    10. '()
' → logprob: -16.125045776367188

Token 86: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.15857651829719543
    2. ' _' → logprob: -2.283576488494873
    3. '_' → logprob: -3.283576488494873
    4. 'range' → logprob: -5.533576488494873
    5. ' ' → logprob: -6.158576488494873
    6. '_range' → logprob: -7.533576488494873
    7. '(range' → logprob: -7.908576488494873
    8. '<|end|>' → logprob: -9.283576965332031
    9. ' xrange' → logprob: -10.408576965332031
    10. ' in' → logprob: -10.408576965332031

Token 87: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0425720252096653
    2. 'in' → logprob: -3.667572021484375
    3. ' ' → logprob: -5.042572021484375
    4. 'range' → logprob: -5.667572021484375
    5. ' range' → logprob: -5.792572021484375
    6. ' i' → logprob: -6.042572021484375
    7. '_' → logprob: -8.542572021484375
    8. ' _' → logprob: -9.042572021484375
    9. 'n' → logprob: -9.167572021484375
    10. ' n' → logprob: -9.792572021484375

Token 88: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.004102504346519709
    2. 'range' → logprob: -5.50410270690918
    3. ' ran' → logprob: -11.75410270690918
    4. ' ' → logprob: -12.50410270690918
    5. ' ra' → logprob: -12.50410270690918
    6. ' rang' → logprob: -12.50410270690918
    7. ' xrange' → logprob: -13.25410270690918
    8. '	range' → logprob: -13.50410270690918
    9. ' r' → logprob: -14.00410270690918
    10. 'rang' → logprob: -14.50410270690918

Token 89: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.11537928879261017
    2. '(' → logprob: -2.2403793334960938
    3. '(range' → logprob: -6.615379333496094
    4. ' range' → logprob: -6.865379333496094
    5. ' (' → logprob: -9.365379333496094
    6. 'range' → logprob: -9.740379333496094
    7. ' ' → logprob: -11.615379333496094
    8. ')' → logprob: -12.240379333496094
    9. '(n' → logprob: -12.990379333496094
    10. '(
' → logprob: -13.365379333496094

Token 90: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00036394817288964987
    2. ')' → logprob: -8.875364303588867
    3. ' )' → logprob: -8.875364303588867
    4. ')]
' → logprob: -10.000364303588867
    5. ']' → logprob: -11.000364303588867
    6. '   ' → logprob: -11.625364303588867
    7. ' ]' → logprob: -12.875364303588867
    8. ')]
' → logprob: -13.125364303588867
    9. ')
' → logprob: -13.375364303588867
    10. '+' → logprob: -13.875364303588867

Token 91: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04860859736800194
    2. ' ' → logprob: -3.0486085414886475
    3. ' )' → logprob: -11.423608779907227
    4. ')' → logprob: -11.548608779907227
    5. ')]' → logprob: -14.673608779907227
    6. ' ' → logprob: -16.548608779907227
    7. '2' → logprob: -16.673608779907227
    8. '```' → logprob: -17.548608779907227
    9. '(' → logprob: -17.673608779907227
    10. ' 
' → logprob: -17.798608779907227

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013290488859638572
    2. ' ' → logprob: -6.626328945159912
    3. ')' → logprob: -12.87632942199707
    4. '0' → logprob: -15.87632942199707
    5. '2' → logprob: -15.87632942199707
    6. ' )' → logprob: -15.87632942199707
    7. 'N' → logprob: -16.50132942199707
    8. ')]' → logprob: -17.37632942199707
    9. ' N' → logprob: -17.75132942199707
    10. '```' → logprob: -17.75132942199707

Token 93: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0025062207132577896
    2. ')' → logprob: -6.377506256103516
    3. ']' → logprob: -7.752506256103516
    4. ' )' → logprob: -8.002506256103516
    5. ' ]' → logprob: -10.877506256103516
    6. ')]
' → logprob: -12.127506256103516
    7. ')])' → logprob: -12.127506256103516
    8. '   ' → logprob: -12.377506256103516
    9. ' ' → logprob: -13.877506256103516
    10. '])' → logprob: -14.252506256103516

Token 94: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.027328556403517723
    2. '   ' → logprob: -4.9023284912109375
    3. '' → logprob: -5.0273284912109375
    4. ' 
' → logprob: -5.4023284912109375
    5. ' for' → logprob: -6.0273284912109375
    6. '  
' → logprob: -6.0273284912109375
    7. '    
' → logprob: -6.6523284912109375
    8. '
' → logprob: -7.4023284912109375
    9. 'for' → logprob: -7.4023284912109375
    10. ' ' → logprob: -8.027328491210938

Token 95: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7087466716766357
    2. '
' → logprob: -1.7087466716766357
    3. 'for' (adapté à ' for') → logprob: -1.8337466716766357
    4. '   ' → logprob: -1.9587466716766357
    5. ' 
' → logprob: -4.708746910095215
    6. '    
' → logprob: -4.958746910095215
    7. '	for' → logprob: -5.083746910095215
    8. '' → logprob: -6.333746910095215
    9. ' ' → logprob: -7.458746910095215
    10. '  
' → logprob: -7.458746910095215

Token 96: ' x' (ID: 1215)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6727944612503052
    2. ' a' → logprob: -1.0477944612503052
    3. ' i' → logprob: -2.5477943420410156
    4. ' _' → logprob: -3.7977943420410156
    5. ' ' → logprob: -4.172794342041016
    6. 'range' → logprob: -4.297794342041016
    7. 'a' → logprob: -5.672794342041016
    8. ' zip' → logprob: -6.422794342041016
    9. '_' → logprob: -6.922794342041016
    10. 'i' → logprob: -7.422794342041016

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30109164118766785
    2. ' in' → logprob: -1.5510916709899902
    3. 'in' → logprob: -3.1760916709899902
    4. ' ,' → logprob: -5.42609167098999
    5. ',y' → logprob: -6.67609167098999
    6. 'y' → logprob: -9.426091194152832
    7. 'i' → logprob: -9.676091194152832
    8. ',in' → logprob: -9.676091194152832
    9. ',_' → logprob: -9.676091194152832
    10. ' ' → logprob: -10.051091194152832

Token 98: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10023622214794159
    2. ' y' → logprob: -2.350236177444458
    3. '(y' → logprob: -11.100235939025879
    4. '_y' → logprob: -12.600235939025879
    5. '	y' → logprob: -12.725235939025879
    6. 'z' → logprob: -13.100235939025879
    7. ',y' → logprob: -13.225235939025879
    8. 'x' → logprob: -13.600235939025879
    9. ' ' → logprob: -13.850235939025879
    10. ' (' → logprob: -15.100235939025879

Token 99: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008710895664989948
    2. 'in' → logprob: -4.758710861206055
    3. ',' → logprob: -9.633710861206055
    4. ' ' → logprob: -10.883710861206055
    5. ' ,' → logprob: -12.758710861206055
    6. '	in' → logprob: -12.883710861206055
    7. 's' → logprob: -13.383710861206055
    8. '  ' → logprob: -13.633710861206055
    9. ' i' → logprob: -14.133710861206055
    10. '_in' → logprob: -15.071210861206055

Token 100: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.03805239871144295
    2. 'zip' → logprob: -3.2880523204803467
    3. '(zip' → logprob: -11.913052558898926
    4. 'z' → logprob: -13.288052558898926
    5. ' z' → logprob: -13.413052558898926
    6. ' ' → logprob: -14.788052558898926
    7. '.zip' → logprob: -15.413052558898926
    8. 'zi' → logprob: -16.03805160522461
    9. '_zip' → logprob: -16.16305160522461
    10. 'b' → logprob: -16.78805160522461

Token 101: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00029685118352063
    2. '(' → logprob: -8.125296592712402
    3. ' (' → logprob: -14.375296592712402
    4. '(
' → logprob: -16.00029754638672
    5. '(x' → logprob: -16.62529754638672
    6. '((' → logprob: -17.12529754638672
    7. '(A' → logprob: -17.25029754638672
    8. '(s' → logprob: -17.50029754638672
    9. '(b' → logprob: -17.62529754638672
    10. '(zip' → logprob: -18.12529754638672

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011994586326181889
    2. ' ,' → logprob: -4.511994361877441
    3. ',b' → logprob: -7.011994361877441
    4. ',y' → logprob: -10.011994361877441
    5. ' ' → logprob: -16.136995315551758
    6. ' b' → logprob: -16.386995315551758
    7. ',
' → logprob: -16.511995315551758
    8. '‌,' → logprob: -17.261995315551758
    9. 'b' → logprob: -17.511995315551758
    10. ' ,
' → logprob: -18.011995315551758

Token 103: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.20142501592636108
    2. 'b' → logprob: -1.7014250755310059
    3. ' ' → logprob: -11.451424598693848
    4. ' 
' → logprob: -14.701424598693848
    5. ')b' → logprob: -15.326424598693848
    6. '	b' → logprob: -15.576424598693848
    7. ' y' → logprob: -16.076425552368164
    8. ' ' → logprob: -16.326425552368164
    9. ' )' → logprob: -16.576425552368164
    10. '    ' → logprob: -16.951425552368164

Token 104: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00022165567497722805
    2. '):
' → logprob: -8.625221252441406
    3. ' ):' → logprob: -10.875221252441406
    4. ')' → logprob: -11.125221252441406
    5. ':' → logprob: -11.750221252441406
    6. '   ' → logprob: -15.750221252441406
    7. '):
' → logprob: -16.500221252441406
    8. '():' → logprob: -16.500221252441406
    9. ']:' → logprob: -16.750221252441406
    10. '}:' → logprob: -17.375221252441406

Token 105: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11949209868907928
    2. '       ' → logprob: -2.3694920539855957
    3. ':
' → logprob: -4.744492053985596
    4. '   ' → logprob: -4.744492053985596
    5. '):' → logprob: -6.869492053985596
    6. ' :' → logprob: -8.244492530822754
    7. '):
' → logprob: -8.994492530822754
    8. ')' → logprob: -9.369492530822754
    9. ' :
' → logprob: -9.369492530822754
    10. ' ' → logprob: -10.869492530822754

Token 106: ' G' (ID: 499)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.7738863825798035
    2. ' G' → logprob: -0.8988863825798035
    3. 'G' (adapté à ' G') → logprob: -2.1488864421844482
    4. '
' → logprob: -4.773886203765869
    5. ' ' → logprob: -5.773886203765869
    6. '    
' → logprob: -6.398886203765869
    7. '        
' → logprob: -7.273886203765869
    8. '       ' → logprob: -8.023886680603027
    9. '  
' → logprob: -8.773886680603027
    10. '   
' → logprob: -9.148886680603027

Token 107: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -5.88418151892256e-05
    2. '[' → logprob: -9.750059127807617
    3. ' [' → logprob: -15.625059127807617
    4. '[y' → logprob: -16.000059127807617
    5. '   ' → logprob: -17.000059127807617
    6. '[
' → logprob: -18.000059127807617
    7. ' ' → logprob: -18.125059127807617
    8. '```' → logprob: -18.125059127807617
    9. '\[' → logprob: -18.375059127807617
    10. '[int' → logprob: -18.625059127807617

Token 108: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.16213303804397583
    2. ').' → logprob: -1.912132978439331
    3. ')' → logprob: -7.41213321685791
    4. ']' → logprob: -7.66213321685791
    5. '.' → logprob: -7.91213321685791
    6. '.add' → logprob: -8.16213321685791
    7. '[' → logprob: -9.66213321685791
    8. '   ' → logprob: -9.91213321685791
    9. ' ].' → logprob: -10.16213321685791
    10. ')].' → logprob: -12.03713321685791

Token 109: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -6.704273118884885e-07
    2. 'append' → logprob: -14.625000953674316
    3. ' add' → logprob: -15.875000953674316
    4. '.add' → logprob: -17.625
    5. '	add' → logprob: -18.875
    6. ' ' → logprob: -19.25
    7. '_add' → logprob: -20.25
    8. '   ' → logprob: -20.25
    9. 'ad' → logprob: -20.5
    10. ')add' → logprob: -20.5

Token 110: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0005537479883059859
    2. '(' → logprob: -7.500553607940674
    3. '(
' → logprob: -14.375554084777832
    4. ' (' → logprob: -16.625553131103516
    5. 'y' → logprob: -18.125553131103516
    6. '(b' → logprob: -19.125553131103516
    7. '(

' → logprob: -19.125553131103516
    8. ' y' → logprob: -19.375553131103516
    9. '(Y' → logprob: -19.500553131103516
    10. '(x' → logprob: -19.750553131103516

Token 111: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002987448126077652
    2. ')
' → logprob: -5.877987384796143
    3. ' )' → logprob: -8.7529878616333
    4. ')
' → logprob: -11.6279878616333
    5. '       ' → logprob: -11.8779878616333
    6. ' )
' → logprob: -12.2529878616333
    7. '   ' → logprob: -13.3779878616333
    8. ')

' → logprob: -14.0029878616333
    9. '<|end|>' → logprob: -14.8779878616333
    10. ')y' → logprob: -15.3779878616333

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.024604277219623e-05
    2. '   ' → logprob: -10.500040054321289
    3. ' G' → logprob: -12.500040054321289
    4. '        
' → logprob: -13.250040054321289
    5. '<|end|>' → logprob: -13.375040054321289
    6. 'G' → logprob: -13.625040054321289
    7. ' ' → logprob: -14.000040054321289
    8. ' 
' → logprob: -14.000040054321289
    9. '	G' → logprob: -14.625040054321289
    10. '    
' → logprob: -14.750040054321289

Token 113: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.04967236518859863
    2. ' G' → logprob: -3.0496723651885986
    3. ' 
' → logprob: -8.04967212677002
    4. ' ' → logprob: -8.42467212677002
    5. '   ' → logprob: -8.92467212677002
    6. ')' → logprob: -9.04967212677002
    7. '       ' → logprob: -9.42467212677002
    8. '    ' → logprob: -9.67467212677002
    9. '    
' → logprob: -10.17467212677002
    10. '        ' → logprob: -11.42467212677002

Token 114: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.001145814312621951
    2. '[' → logprob: -7.001145839691162
    3. '[x' → logprob: -8.376145362854004
    4. 'y' → logprob: -13.376145362854004
    5. '```' → logprob: -14.376145362854004
    6. ' [' → logprob: -14.876145362854004
    7. '[
' → logprob: -15.501145362854004
    8. ' ' → logprob: -15.751145362854004
    9. '[s' → logprob: -16.00114631652832
    10. '][' → logprob: -16.12614631652832

Token 115: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.11350340396165848
    2. '].' → logprob: -2.2385034561157227
    3. ')' → logprob: -8.113503456115723
    4. '.' → logprob: -8.113503456115723
    5. '}.' → logprob: -10.113503456115723
    6. '.add' → logprob: -11.238503456115723
    7. ']' → logprob: -11.863503456115723
    8. '   ' → logprob: -11.863503456115723
    9. ' ].' → logprob: -12.113503456115723
    10. ' ).' → logprob: -12.613503456115723

Token 116: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -2.339278580620885e-06
    2. ' add' → logprob: -13.125001907348633
    3. 'x' → logprob: -16.375001907348633
    4. '   ' → logprob: -16.750001907348633
    5. ' ' → logprob: -17.375001907348633
    6. 'append' → logprob: -17.750001907348633
    7. '	add' → logprob: -18.000001907348633
    8. '.add' → logprob: -18.375001907348633
    9. '  ' → logprob: -18.625001907348633
    10. '```' → logprob: -18.625001907348633

Token 117: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0380457378923893
    2. '(' → logprob: -3.288045644760132
    3. '(
' → logprob: -12.413045883178711
    4. 'x' → logprob: -16.41304588317871
    5. ' (' → logprob: -16.53804588317871
    6. '(

' → logprob: -17.41304588317871
    7. '(s' → logprob: -17.78804588317871
    8. '(
' → logprob: -18.16304588317871
    9. ')' → logprob: -18.53804588317871
    10. '()' → logprob: -19.03804588317871

Token 118: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014187720604240894
    2. ')
' → logprob: -4.264187812805176
    3. ')
' → logprob: -11.139187812805176
    4. ' )' → logprob: -12.139187812805176
    5. ')return' → logprob: -13.514187812805176
    6. ')

' → logprob: -14.139187812805176
    7. '   ' → logprob: -14.264187812805176
    8. ' )
' → logprob: -14.889187812805176
    9. '<|end|>' → logprob: -15.264187812805176
    10. ')`' → logprob: -15.514187812805176

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004648945759981871
    2. '    
' → logprob: -6.0046491622924805
    3. '
' → logprob: -6.7546491622924805
    4. 'return' → logprob: -7.7546491622924805
    5. '\n' → logprob: -8.75464916229248
    6. ' return' → logprob: -9.00464916229248
    7. '	return' → logprob: -9.25464916229248
    8. '<|end|>' → logprob: -9.87964916229248
    9. ' 
' → logprob: -10.50464916229248
    10. ' ' → logprob: -10.75464916229248

Token 120: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4456302225589752
    2. 'return' (adapté à ' return') → logprob: -1.9456301927566528
    3. ' return' → logprob: -2.3206303119659424
    4. '
' → logprob: -2.4456303119659424
    5. ' 
' → logprob: -4.695630073547363
    6. '    
' → logprob: -4.695630073547363
    7. '\n' → logprob: -5.695630073547363
    8. '	return' → logprob: -5.695630073547363
    9. ':return' → logprob: -6.195630073547363
    10. ' ' → logprob: -6.445630073547363

Token 121: ' G' (ID: 499)
  Prédit: ' G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' G' → logprob: -0.20141597092151642
    2. 'G' → logprob: -1.701416015625
    3. '	G' → logprob: -13.576416015625
    4. ' ' → logprob: -14.326416015625
    5. ' ' → logprob: -14.451416015625
    6. '(G' → logprob: -15.701416015625
    7. '_G' → logprob: -16.076416015625
    8. '<G' → logprob: -17.576416015625
    9. 'Ｇ' → logprob: -17.701416015625
    10. '   ' → logprob: -18.201416015625

Token 122: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13143837451934814
    2. '
' → logprob: -2.1314382553100586
    3. '<|end|>' → logprob: -7.006438255310059
    4. '```' → logprob: -7.256438255310059
    5. '

' → logprob: -7.506438255310059
    6. 'd' → logprob: -7.506438255310059
    7. '[' → logprob: -8.256438255310059
    8. '#' → logprob: -8.506438255310059
    9. '' → logprob: -8.631438255310059
    10. '  
' → logprob: -8.631438255310059

Token 123: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4847322702407837
    2. 'd' → logprob: -1.2347322702407837
    3. '
' → logprob: -2.484732151031494
    4. '

' → logprob: -5.234732151031494
    5. '' → logprob: -6.359732151031494
    6. '```' → logprob: -6.609732151031494
    7. '
' → logprob: -7.734732151031494
    8. '\' → logprob: -8.859732627868652
    9. ' 
' → logprob: -9.109732627868652
    10. '[' → logprob: -9.109732627868652

Token 124: ' create' (ID: 2501)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.439780056476593
    2. ' bfs' → logprob: -1.3147799968719482
    3. ' main' → logprob: -3.0647799968719482
    4. ' solve' → logprob: -4.189780235290527
    5. ' def' → logprob: -4.314780235290527
    6. ' count' → logprob: -5.564780235290527
    7. 'dfs' → logprob: -5.564780235290527
    8. ' color' → logprob: -6.814780235290527
    9. ' find' → logprob: -7.439780235290527
    10. 'def' → logprob: -8.314780235290527

Token 125: '_' (ID: 62)
  Prédit: '_queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.5768222212791443
    2. '_d' → logprob: -2.576822280883789
    3. '_dp' → logprob: -2.826822280883789
    4. '_graph' → logprob: -3.076822280883789
    5. '_counter' → logprob: -3.201822280883789
    6. '_' → logprob: -3.576822280883789
    7. '_tree' → logprob: -4.076822280883789
    8. '_nodes' → logprob: -4.076822280883789
    9. '_stack' → logprob: -4.076822280883789
    10. '_path' → logprob: -4.451822280883789

Token 126: 'visited' (ID: 52453)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.40056636929512024
    2. 'queue' → logprob: -1.9005663394927979
    3. 'tree' → logprob: -3.150566339492798
    4. 'color' → logprob: -3.525566339492798
    5. 'dp' → logprob: -4.275566577911377
    6. 'colors' → logprob: -4.400566577911377
    7. 'dfs' → logprob: -4.400566577911377
    8. 'adj' → logprob: -4.775566577911377
    9. 'visited' → logprob: -4.900566577911377
    10. 'path' → logprob: -5.525566577911377

Token 127: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5407114028930664
    2. '_list' → logprob: -1.9157114028930664
    3. '():' → logprob: -2.1657114028930664
    4. '(N' → logprob: -2.6657114028930664
    5. '_array' → logprob: -2.7907114028930664
    6. '_' → logprob: -5.165711402893066
    7. '()' → logprob: -5.665711402893066
    8. '_mask' → logprob: -6.290711402893066
    9. '_states' → logprob: -6.415711402893066
    10. '_lists' → logprob: -6.415711402893066

Token 128: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002533213933929801
    2. '):
' → logprob: -6.377533435821533
    3. ')' → logprob: -7.377533435821533
    4. ' ):' → logprob: -9.127532958984375
    5. '():' → logprob: -9.627532958984375
    6. '_' → logprob: -11.127532958984375
    7. '()' → logprob: -12.002532958984375
    8. '):
' → logprob: -12.627532958984375
    9. ',' → logprob: -13.252532958984375
    10. '_list' → logprob: -14.002532958984375

Token 129: '   ' (ID: 271)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5863951444625854
    2. '[' → logprob: -0.8363951444625854
    3. '   ' → logprob: -4.586395263671875
    4. ' return' → logprob: -8.586395263671875
    5. 'return' → logprob: -11.711395263671875
    6. '[n' → logprob: -11.961395263671875
    7. '[N' → logprob: -12.711395263671875
    8. '[]' → logprob: -13.336395263671875
    9. ' ' → logprob: -13.711395263671875
    10. '[a' → logprob: -14.586395263671875

Token 130: ' return' (ID: 622)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.009795283898711205
    2. '[' → logprob: -4.634795188903809
    3. ' ' → logprob: -10.759795188903809
    4. '   ' → logprob: -11.884795188903809
    5. ' return' → logprob: -12.384795188903809
    6. '[n' → logprob: -13.759795188903809
    7. ' 
' → logprob: -13.884795188903809
    8. '    ' → logprob: -14.134795188903809
    9. ' ' → logprob: -14.509795188903809
    10. 'return' (adapté à ' return') → logprob: -14.759795188903809

Token 131: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01815767213702202
    2. ' [' → logprob: -4.018157482147217
    3. '[N' → logprob: -12.393157958984375
    4. '[n' → logprob: -13.893157958984375
    5. '[int' → logprob: -14.268157958984375
    6. '[node' → logprob: -14.393157958984375
    7. '[name' → logprob: -15.518157958984375
    8. 'set' → logprob: -15.643157958984375
    9. '[a' → logprob: -15.768157958984375
    10. '[start' → logprob: -15.893157958984375

Token 132: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -9.758300438988954e-05
    2. ' False' → logprob: -9.250097274780273
    3. '0' → logprob: -13.500097274780273
    4. '(False' → logprob: -17.250097274780273
    5. 'True' → logprob: -17.875097274780273
    6. '   ' → logprob: -19.000097274780273
    7. '[' → logprob: -19.375097274780273
    8. 'F' → logprob: -20.000097274780273
    9. '-' → logprob: -20.250097274780273
    10. '=False' → logprob: -20.500097274780273

Token 133: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013337520882487297
    2. ' for' → logprob: -4.3883376121521
    3. 'for' → logprob: -7.8883376121521
    4. ' ]' → logprob: -8.513337135314941
    5. ']*(' → logprob: -8.763337135314941
    6. ')' → logprob: -9.763337135314941
    7. ']*' → logprob: -10.638337135314941
    8. ']+' → logprob: -12.388337135314941
    9. '   ' → logprob: -12.513337135314941
    10. ' ' → logprob: -13.638337135314941

Token 134: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.3331698775291443
    2. ' range' → logprob: -1.583169937133789
    3. ' ' → logprob: -2.958169937133789
    4. '_' → logprob: -3.708169937133789
    5. ' in' → logprob: -6.958169937133789
    6. 'range' → logprob: -7.458169937133789
    7. '_range' → logprob: -10.083169937133789
    8. ' i' → logprob: -11.208169937133789
    9. ' xrange' → logprob: -12.708169937133789
    10. '(range' → logprob: -13.083169937133789

Token 135: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2685287892818451
    2. 'range' → logprob: -1.7685288190841675
    3. ' in' → logprob: -2.768528699874878
    4. 'in' → logprob: -6.518528938293457
    5. ' ' → logprob: -7.393528938293457
    6. ' xrange' → logprob: -11.143528938293457
    7. ' _' → logprob: -11.518528938293457
    8. '(range' → logprob: -11.643528938293457
    9. 'ange' → logprob: -12.018528938293457
    10. 'n' → logprob: -12.018528938293457

Token 136: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2014286369085312
    2. 'range' → logprob: -1.7014286518096924
    3. '(range' → logprob: -12.201428413391113
    4. '	range' → logprob: -12.201428413391113
    5. ' ' → logprob: -13.201428413391113
    6. ' xrange' → logprob: -13.326428413391113
    7. 'ange' → logprob: -15.326428413391113
    8. '_range' → logprob: -15.326428413391113
    9. 'rang' → logprob: -15.451428413391113
    10. '   ' → logprob: -15.701428413391113

Token 137: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.006236860994249582
    2. '(' → logprob: -5.131237030029297
    3. ' (' → logprob: -8.131237030029297
    4. '(n' → logprob: -11.756237030029297
    5. '((' → logprob: -12.881237030029297
    6. ' N' → logprob: -13.881237030029297
    7. '(
' → logprob: -14.506237030029297
    8. ' ' → logprob: -14.631237030029297
    9. 'N' → logprob: -15.381237030029297
    10. ']' → logprob: -15.506237030029297

Token 138: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16564513742923737
    2. ')]' → logprob: -2.415645122528076
    3. ' +' → logprob: -2.790645122528076
    4. ' )' → logprob: -6.290645122528076
    5. ')' → logprob: -9.790645599365234
    6. '   ' → logprob: -11.290645599365234
    7. ' ]' → logprob: -11.540645599365234
    8. '1' → logprob: -11.790645599365234
    9. ' ' → logprob: -11.790645599365234
    10. ')]
' → logprob: -12.165645599365234

Token 139: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016074607148766518
    2. ' ' → logprob: -4.1410746574401855
    3. '(' → logprob: -11.141074180603027
    4. ')' → logprob: -11.516074180603027
    5. ')]' → logprob: -11.516074180603027
    6. '+' → logprob: -13.641074180603027
    7. '   ' → logprob: -13.766074180603027
    8. '2' → logprob: -13.766074180603027
    9. ' )' → logprob: -14.641074180603027
    10. ')])' → logprob: -15.141074180603027

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007320931763388216
    2. ' ' → logprob: -7.375731945037842
    3. ')]' → logprob: -10.125732421875
    4. ')' → logprob: -10.625732421875
    5. '+' → logprob: -11.125732421875
    6. '   ' → logprob: -11.500732421875
    7. '(' → logprob: -11.500732421875
    8. ')])' → logprob: -13.125732421875
    9. '```' → logprob: -13.750732421875
    10. '       ' → logprob: -14.750732421875

Token 141: ')]

' (ID: 56882)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31331852078437805
    2. ')]' → logprob: -1.3133184909820557
    3. '])' → logprob: -10.313318252563477
    4. ')' → logprob: -11.438318252563477
    5. ' ]' → logprob: -12.438318252563477
    6. ']
' → logprob: -12.563318252563477
    7. '])]' → logprob: -13.438318252563477
    8. '()]' → logprob: -13.813318252563477
    9. '}]' → logprob: -13.938318252563477
    10. ']}' → logprob: -14.438318252563477

Token 142: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05015388876199722
    2. '
' → logprob: -3.300153970718384
    3. '

' → logprob: -4.675153732299805
    4. 'd' → logprob: -6.925153732299805
    5. '\' → logprob: -7.675153732299805
    6. '' → logprob: -7.800153732299805
    7. '\n' → logprob: -8.425153732299805
    8. '
' → logprob: -8.675153732299805
    9. '```' → logprob: -8.800153732299805
    10. '<|end|>' → logprob: -9.800153732299805

Token 143: ' init' (ID: 6327)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.3983606994152069
    2. ' bfs' → logprob: -1.1483607292175293
    3. ' solve' → logprob: -5.273360729217529
    4. 'dfs' → logprob: -6.148360729217529
    5. ' main' → logprob: -6.273360729217529
    6. ' def' → logprob: -7.148360729217529
    7. ' count' → logprob: -7.523360729217529
    8. ' ' → logprob: -8.398360252380371
    9. 'b' → logprob: -8.523360252380371
    10. ' find' → logprob: -8.773360252380371

Token 144: '_queue' (ID: 25622)
  Prédit: 'ialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ialize' → logprob: -0.483573317527771
    2. '_queue' → logprob: -1.733573317527771
    3. '_' → logprob: -1.858573317527771
    4. '_stack' → logprob: -4.1085734367370605
    5. '_i' → logprob: -5.1085734367370605
    6. 'ia' → logprob: -5.3585734367370605
    7. '_counter' → logprob: -5.4835734367370605
    8. '_distance' → logprob: -6.1085734367370605
    9. 'ial' → logprob: -6.2335734367370605
    10. '_dist' → logprob: -6.4835734367370605

Token 145: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0016762561863288283
    2. '()' → logprob: -7.376676082611084
    3. ' ():' → logprob: -7.376676082611084
    4. '(N' → logprob: -8.626676559448242
    5. '(' → logprob: -9.126676559448242
    6. '():
' → logprob: -9.501676559448242
    7. '(K' → logprob: -10.751676559448242
    8. ' ()' → logprob: -11.001676559448242
    9. '()(' → logprob: -12.251676559448242
    10. '():
' → logprob: -12.626676559448242

Token 146: '   ' (ID: 271)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4965682327747345
    2. 'deque' → logprob: -1.371568202972412
    3. 'from' → logprob: -2.121568202972412
    4. ' []' → logprob: -5.121568202972412
    5. '   ' → logprob: -5.371568202972412
    6. ' deque' → logprob: -5.496568202972412
    7. ' from' → logprob: -6.746568202972412
    8. 'import' → logprob: -7.121568202972412
    9. 'return' → logprob: -7.496568202972412
    10. 'collections' → logprob: -8.37156867980957

Token 147: ' from' (ID: 591)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.8154242038726807
    2. '[]' → logprob: -1.1904242038726807
    3. 'from' (adapté à ' from') → logprob: -1.5654242038726807
    4. ' []' → logprob: -3.4404242038726807
    5. ' deque' → logprob: -4.815423965454102
    6. ' from' → logprob: -6.190423965454102
    7. 'import' → logprob: -6.690423965454102
    8. 'collections' → logprob: -7.440423965454102
    9. '   ' → logprob: -8.690423965454102
    10. ' ' → logprob: -9.565423965454102

Token 148: ' heap' (ID: 37237)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -6.027225754223764e-05
    2. 'collections' → logprob: -9.750060081481934
    3. ' queue' → logprob: -13.750060081481934
    4. ' collection' → logprob: -14.250060081481934
    5. ' ' → logprob: -16.00006103515625
    6. ' colle' → logprob: -17.87506103515625
    7. '_' → logprob: -18.25006103515625
    8. ' cole' → logprob: -18.25006103515625
    9. '.collections' → logprob: -18.25006103515625
    10. ' heap' → logprob: -18.62506103515625

Token 149: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.5094070477061905e-05
    2. 'queue' → logprob: -11.125015258789062
    3. 'import' → logprob: -15.250015258789062
    4. 'que' → logprob: -16.875015258789062
    5. ' queue' → logprob: -18.000015258789062
    6. 'dict' → logprob: -18.125015258789062
    7. 'u' → logprob: -19.000015258789062
    8. 'ify' → logprob: -19.625015258789062
    9. 'qu' → logprob: -20.500015258789062
    10. 'lib' → logprob: -20.875015258789062

Token 150: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0008072483469732106
    2. 'import' → logprob: -7.125807285308838
    3. ' ' → logprob: -13.37580680847168
    4. ' im' → logprob: -14.37580680847168
    5. '	import' → logprob: -14.50080680847168
    6. ' impor' → logprob: -16.12580680847168
    7. ' importar' → logprob: -16.87580680847168
    8. ' ' → logprob: -17.12580680847168
    9. ' imports' → logprob: -17.75080680847168
    10. '<|end|>' → logprob: -18.12580680847168

Token 151: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.5776036977767944
    2. 'he' → logprob: -0.8276036977767944
    3. 'heap' → logprob: -6.452603816986084
    4. '.he' → logprob: -9.952603340148926
    5. ' heap' → logprob: -10.952603340148926
    6. 'import' → logprob: -11.327603340148926
    7. ' ' → logprob: -12.702603340148926
    8. '_he' → logprob: -13.327603340148926
    9. '.heap' → logprob: -14.077603340148926
    10. '  ' → logprob: -14.452603340148926

Token 152: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00026300468016415834
    2. 'ap' → logprob: -8.250263214111328
    3. 'a' → logprob: -13.750263214111328
    4. '```' → logprob: -14.875263214111328
    5. ' app' → logprob: -15.875263214111328
    6. '	app' → logprob: -17.375263214111328
    7. 'ап' → logprob: -17.500263214111328
    8. 'appen' → logprob: -17.500263214111328
    9. '  ' → logprob: -17.875263214111328
    10. 'apput' → logprob: -17.875263214111328

Token 153: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00023107275774236768
    2. 'op' → logprob: -8.37523078918457
    3. 'push' → logprob: -15.87523078918457
    4. '```' → logprob: -16.12523078918457
    5. 'u' → logprob: -16.25023078918457
    6. 'ut' → logprob: -16.50023078918457
    7. '   ' → logprob: -17.25023078918457
    8. 'us' → logprob: -18.25023078918457
    9. '[' → logprob: -18.50023078918457
    10. 'p' → logprob: -18.62523078918457

Token 154: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -9.639096970204264e-05
    2. ' ,' → logprob: -9.750096321105957
    3. ' ' → logprob: -10.500096321105957
    4. ',
' → logprob: -12.500096321105957
    5. '   ' → logprob: -13.250096321105957
    6. '<|end|>' → logprob: -13.625096321105957
    7. 'import' → logprob: -13.750096321105957
    8. ' and' → logprob: -14.375096321105957
    9. ',h' → logprob: -14.875096321105957
    10. '  ' → logprob: -14.875096321105957

Token 155: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012070851516909897
    2. '<|end|>' → logprob: -9.500121116638184
    3. ' ,' → logprob: -10.625121116638184
    4. ',h' → logprob: -11.875121116638184
    5. ',
' → logprob: -12.375121116638184
    6. '<|end|>' → logprob: -13.000121116638184
    7. ' ' → logprob: -13.125121116638184
    8. '
' → logprob: -13.500121116638184
    9. 'import' → logprob: -14.125121116638184
    10. '   ' → logprob: -14.625121116638184

Token 156: ' q' (ID: 2335)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7985458970069885
    2. 'def' → logprob: -0.7985458970069885
    3. ' def' → logprob: -2.9235458374023438
    4. 'import' → logprob: -4.173545837402344
    5. ',' → logprob: -4.423545837402344
    6. 'he' → logprob: -5.673545837402344
    7. ' ' → logprob: -5.673545837402344
    8. '
' → logprob: -5.923545837402344
    9. '<|end|>' → logprob: -6.298545837402344
    10. ' heap' → logprob: -6.673545837402344

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8389630317687988
    2. '=' → logprob: -1.0889630317687988
    3. 'ue' → logprob: -1.5889630317687988
    4. ',' → logprob: -3.838963031768799
    5. 'e' → logprob: -6.463963031768799
    6. 'u' → logprob: -6.463963031768799
    7. 'uer' → logprob: -7.213963031768799
    8. '=[]' → logprob: -7.838963031768799
    9. '   ' → logprob: -8.46396255493164
    10. '_' → logprob: -8.58896255493164

Token 158: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.038076501339673996
    2. '[]' → logprob: -3.288076400756836
    3. ' []
' → logprob: -10.413076400756836
    4. '[]
' → logprob: -13.413076400756836
    5. ' [];' → logprob: -13.538076400756836
    6. ' [],' → logprob: -14.538076400756836
    7. ' []
' → logprob: -15.288076400756836
    8. ' [' → logprob: -15.413076400756836
    9. '[],' → logprob: -15.538076400756836
    10. '=[]' → logprob: -15.663076400756836

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004654287826269865
    2. '<|end|>' → logprob: -5.879654407501221
    3. '
' → logprob: -7.254654407501221
    4. '    
' → logprob: -8.004653930664062
    5. ' ' → logprob: -8.629653930664062
    6. ' he' → logprob: -9.004653930664062
    7. 'he' → logprob: -9.129653930664062
    8. '	return' → logprob: -9.254653930664062
    9. '<|end|>' → logprob: -9.379653930664062
    10. '  ' → logprob: -10.379653930664062

Token 160: ' he' (ID: 501)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006443457677960396
    2. 'he' (adapté à ' he') → logprob: -5.506443500518799
    3. 'return' → logprob: -6.256443500518799
    4. ' return' → logprob: -8.13144302368164
    5. ' he' → logprob: -9.75644302368164
    6. 'def' → logprob: -10.63144302368164
    7. '    ' → logprob: -10.88144302368164
    8. '	return' → logprob: -11.38144302368164
    9. ' ' → logprob: -12.00644302368164
    10. '   ' → logprob: -12.00644302368164

Token 161: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.005284865386784077
    2. 'ap' → logprob: -5.255284786224365
    3. 'a' → logprob: -10.380285263061523
    4. 'ап' → logprob: -11.880285263061523
    5. ' app' → logprob: -12.630285263061523
    6. 'appen' → logprob: -13.130285263061523
    7. 'aps' → logprob: -13.755285263061523
    8. 'p' → logprob: -14.130285263061523
    9. '	app' → logprob: -14.255285263061523
    10. 'append' → logprob: -14.255285263061523

Token 162: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -3.750436007976532e-05
    2. 'op' → logprob: -10.25003719329834
    3. 'push' → logprob: -13.25003719329834
    4. 'ut' → logprob: -16.000038146972656
    5. 'sh' → logprob: -16.500038146972656
    6. 'u' → logprob: -16.875038146972656
    7. 'USH' → logprob: -18.250038146972656
    8. 'q' → logprob: -18.750038146972656
    9. 'end' → logprob: -19.000038146972656
    10. '```' → logprob: -19.000038146972656

Token 163: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.056014034897089005
    2. '(' → logprob: -3.056014060974121
    3. '<|end|>' → logprob: -4.931014060974121
    4. '<|end|>' → logprob: -9.681014060974121
    5. '(
' → logprob: -10.181014060974121
    6. ' (' → logprob: -10.306014060974121
    7. ' ' → logprob: -11.431014060974121
    8. '(queue' → logprob: -11.556014060974121
    9. '(s' → logprob: -11.681014060974121
    10. ')' → logprob: -11.806014060974121

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023688094690442085
    2. '(' → logprob: -4.898688316345215
    3. ',(' → logprob: -5.148688316345215
    4. '<|end|>' → logprob: -5.523688316345215
    5. ',q' → logprob: -6.148688316345215
    6. ')' → logprob: -6.398688316345215
    7. ' ,' → logprob: -6.773688316345215
    8. '(q' → logprob: -7.398688316345215
    9. ' (' → logprob: -9.023688316345215
    10. ' ' → logprob: -9.648688316345215

Token 165: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12599359452724457
    2. '0' → logprob: -2.250993490219116
    3. '1' → logprob: -4.750993728637695
    4. ' (' → logprob: -5.500993728637695
    5. ' ' → logprob: -8.250993728637695
    6. ')' → logprob: -9.750993728637695
    7. '   ' → logprob: -11.500993728637695
    8. '(
' → logprob: -12.250993728637695
    9. '(None' → logprob: -12.375993728637695
    10. '2' → logprob: -13.000993728637695

Token 166: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1273564100265503
    2. '1' → logprob: -2.12735652923584
    3. ' ' → logprob: -8.00235652923584
    4. '(' → logprob: -9.75235652923584
    5. ')' → logprob: -11.00235652923584
    6. '-' → logprob: -11.87735652923584
    7. '   ' → logprob: -12.62735652923584
    8. ',' → logprob: -12.87735652923584
    9. '  ' → logprob: -13.37735652923584
    10. 'K' → logprob: -14.43985652923584

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025966696557588875
    2. '))' → logprob: -8.750259399414062
    3. ',)' → logprob: -9.875259399414062
    4. ')' → logprob: -11.125259399414062
    5. '0' → logprob: -11.375259399414062
    6. ' ,' → logprob: -11.500259399414062
    7. ',
' → logprob: -12.750259399414062
    8. ',))
' → logprob: -13.000259399414062
    9. '```' → logprob: -13.375259399414062
    10. ',

' → logprob: -13.875259399414062

Token 168: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14605121314525604
    2. ' ' → logprob: -2.5210511684417725
    3. '0' → logprob: -2.8960511684417725
    4. ')' → logprob: -9.271051406860352
    5. '[' → logprob: -9.771051406860352
    6. ' [' → logprob: -10.021051406860352
    7. '-' → logprob: -11.833551406860352
    8. '[]' → logprob: -11.896051406860352
    9. ' )' → logprob: -11.896051406860352
    10. ' -' → logprob: -11.958551406860352

Token 169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10195237398147583
    2. '0' → logprob: -2.351952314376831
    3. ' ' → logprob: -7.10195255279541
    4. '[' → logprob: -7.35195255279541
    5. ')' → logprob: -9.22695255279541
    6. '-' → logprob: -9.35195255279541
    7. '[]' → logprob: -10.47695255279541
    8. ' [' → logprob: -11.35195255279541
    9. '[])' → logprob: -11.85195255279541
    10. ' -' → logprob: -12.03945255279541

Token 170: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00915064848959446
    2. '))
' → logprob: -4.884150505065918
    3. ')' → logprob: -6.509150505065918
    4. ')
' → logprob: -11.259150505065918
    5. ' ))' → logprob: -11.259150505065918
    6. '))
' → logprob: -11.634150505065918
    7. '))

' → logprob: -11.884150505065918
    8. ',' → logprob: -12.384150505065918
    9. '   ' → logprob: -13.009150505065918
    10. '));' → logprob: -13.134150505065918

Token 171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004846853669732809
    2. '
' → logprob: -5.504847049713135
    3. 'return' → logprob: -8.379846572875977
    4. '<|end|>' → logprob: -8.754846572875977
    5. '	return' → logprob: -9.004846572875977
    6. ' return' → logprob: -9.254846572875977
    7. 'def' → logprob: -9.629846572875977
    8. ',' → logprob: -10.254846572875977
    9. ')' → logprob: -10.629846572875977
    10. '    
' → logprob: -11.254846572875977

Token 172: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16124995052814484
    2. '   ' → logprob: -1.9112499952316284
    3. ' return' → logprob: -7.036250114440918
    4. 'def' → logprob: -9.286250114440918
    5. '	return' → logprob: -9.911250114440918
    6. 'import' → logprob: -14.411250114440918
    7. 'from' → logprob: -14.661250114440918
    8. '   ' → logprob: -14.911250114440918
    9. 'eturn' → logprob: -15.411250114440918
    10. '    ' → logprob: -15.411250114440918

Token 173: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.061968810856342316
    2. ' q' → logprob: -2.8119688034057617
    3. '	q' → logprob: -13.811968803405762
    4. ' ' → logprob: -15.811968803405762
    5. '[q' → logprob: -18.061969757080078
    6. '(q' → logprob: -18.436969757080078
    7. ',q' → logprob: -18.561969757080078
    8. '   ' → logprob: -19.186969757080078
    9. '*q' → logprob: -19.436969757080078
    10. '?q' → logprob: -19.436969757080078

Token 174: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 175: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015382491983473301
    2. 'from' → logprob: -4.265382289886475
    3. 'import' → logprob: -7.265382289886475
    4. '<|end|>' → logprob: -7.765382289886475
    5. '```' → logprob: -10.265382766723633
    6. ')' → logprob: -10.515382766723633
    7. '<|end|>' → logprob: -11.890382766723633
    8. '
' → logprob: -12.015382766723633
    9. ',' → logprob: -12.015382766723633
    10. ' from' → logprob: -12.765382766723633

Token 176: ' process' (ID: 2273)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -1.328249454498291
    2. ' d' → logprob: -1.453249454498291
    3. ' bfs' → logprob: -1.578249454498291
    4. ' pop' → logprob: -1.703249454498291
    5. ' main' → logprob: -3.328249454498291
    6. ' dfs' → logprob: -4.203249454498291
    7. 'pop' → logprob: -4.328249454498291
    8. ' process' → logprob: -4.453249454498291
    9. 'solve' → logprob: -4.453249454498291
    10. 'd' → logprob: -4.703249454498291

Token 177: '_node' (ID: 11390)
  Prédit: '_queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.008072642609477043
    2. '_' → logprob: -5.258072853088379
    3. '_node' → logprob: -6.758072853088379
    4. '_nodes' → logprob: -7.758072853088379
    5. '_q' → logprob: -7.883072853088379
    6. '_query' → logprob: -8.508072853088379
    7. '_input' → logprob: -8.633072853088379
    8. '(' → logprob: -8.758072853088379
    9. '(_' → logprob: -9.758072853088379
    10. '_graph' → logprob: -9.883072853088379

Token 178: '(G' (ID: 12449)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.012958443723618984
    2. '(' → logprob: -5.262958526611328
    3. '(queue' → logprob: -5.637958526611328
    4. '():' → logprob: -5.887958526611328
    5. '(G' → logprob: -7.387958526611328
    6. '(node' → logprob: -7.637958526611328
    7. '(N' → logprob: -8.762958526611328
    8. ' (' → logprob: -10.012958526611328
    9. '()' → logprob: -11.262958526611328
    10. '(Q' → logprob: -11.762958526611328

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001940040965564549
    2. ' ,' → logprob: -8.62519359588623
    3. ',q' → logprob: -12.25019359588623
    4. ',node' → logprob: -13.50019359588623
    5. '[' → logprob: -13.62519359588623
    6. ',n' → logprob: -14.00019359588623
    7. 'q' → logprob: -14.12519359588623
    8. '[q' → logprob: -14.12519359588623
    9. '[],' → logprob: -14.37519359588623
    10. ')' → logprob: -14.50019359588623

Token 180: ' v' (ID: 323)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.4419509768486023
    2. ' q' → logprob: -1.191951036453247
    3. 'visited' → logprob: -3.691951036453247
    4. ' visited' → logprob: -3.941951036453247
    5. ' node' → logprob: -5.316950798034668
    6. 'node' → logprob: -6.816950798034668
    7. 'K' → logprob: -6.941950798034668
    8. 'u' → logprob: -7.441950798034668
    9. ' K' → logprob: -7.691950798034668
    10. 'N' → logprob: -8.316950798034668

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008427416905760765
    2. '):' → logprob: -7.250842571258545
    3. ' ,' → logprob: -9.250843048095703
    4. '):
' → logprob: -10.750843048095703
    5. ',
' → logprob: -12.750843048095703
    6. '_,' → logprob: -13.750843048095703
    7. 'e' → logprob: -13.750843048095703
    8. ')' → logprob: -13.875843048095703
    9. ' ):' → logprob: -14.000843048095703
    10. ',k' → logprob: -14.250843048095703

Token 182: ' q' (ID: 2335)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.636999249458313
    2. ' visited' → logprob: -1.136999249458313
    3. 'q' → logprob: -3.0119991302490234
    4. ' q' → logprob: -3.1369991302490234
    5. ' K' → logprob: -3.5119991302490234
    6. 'K' → logprob: -3.6369991302490234
    7. '   ' → logprob: -7.761999130249023
    8. 'queue' → logprob: -7.886999130249023
    9. ' queue' → logprob: -8.636999130249023
    10. ' ' → logprob: -9.261999130249023

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027099132421426475
    2. '):' → logprob: -9.00027084350586
    3. 'u' → logprob: -9.50027084350586
    4. ' ,' → logprob: -10.25027084350586
    5. 'ue' → logprob: -11.37527084350586
    6. '):
' → logprob: -11.50027084350586
    7. ',u' → logprob: -12.25027084350586
    8. 'e' → logprob: -13.00027084350586
    9. ',
' → logprob: -13.12527084350586
    10. '_,' → logprob: -13.50027084350586

Token 184: ' ans' (ID: 3345)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3545745611190796
    2. ' visited' → logprob: -1.2295745611190796
    3. 'K' → logprob: -5.604574680328369
    4. ' K' → logprob: -6.479574680328369
    5. 'vis' → logprob: -8.479574203491211
    6. 'v' → logprob: -8.604574203491211
    7. 'V' → logprob: -8.979574203491211
    8. 'Visited' → logprob: -10.604574203491211
    9. ' dist' → logprob: -10.667074203491211
    10. ' ' → logprob: -10.667074203491211

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.047113023698329926
    2. '):' → logprob: -3.5471129417419434
    3. 'u' → logprob: -4.297112941741943
    4. ' ,' → logprob: -6.672112941741943
    5. 'ue' → logprob: -7.172112941741943
    6. '):
' → logprob: -7.547112941741943
    7. ',u' → logprob: -8.047113418579102
    8. 'ues' → logprob: -8.797113418579102
    9. ' ):' → logprob: -9.297113418579102
    10. ')' → logprob: -9.297113418579102

Token 186: ' K' (ID: 658)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.2043265551328659
    2. ' visited' → logprob: -1.7043265104293823
    3. 'K' → logprob: -6.579326629638672
    4. ' K' → logprob: -7.329326629638672
    5. 'vis' → logprob: -7.954326629638672
    6. 'visit' → logprob: -9.641826629638672
    7. '   ' → logprob: -9.766826629638672
    8. 'V' → logprob: -9.829326629638672
    9. 'v' → logprob: -10.079326629638672
    10. ' ' → logprob: -10.266826629638672

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6940883994102478
    2. '):' → logprob: -0.6940883994102478
    3. ')' → logprob: -7.319088459014893
    4. '):
' → logprob: -8.694087982177734
    5. ' ):' → logprob: -10.069087982177734
    6. ' ,' → logprob: -10.694087982177734
    7. '):
' → logprob: -11.444087982177734
    8. ':' → logprob: -11.569087982177734
    9. '   ' → logprob: -11.944087982177734
    10. '=' → logprob: -13.381587982177734

Token 188: ' MOD' (ID: 32868)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.1298980712890625
    2. 'visited' → logprob: -2.1298980712890625
    3. ' ' → logprob: -6.6298980712890625
    4. ')' → logprob: -8.004898071289062
    5. '   ' → logprob: -8.004898071289062
    6. ' visit' → logprob: -9.379898071289062
    7. ' dist' → logprob: -9.504898071289062
    8. '  ' → logprob: -9.629898071289062
    9. ' )' → logprob: -9.879898071289062
    10. ' depth' → logprob: -9.942398071289062

Token 189: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025128775741904974
    2. ',' → logprob: -6.7525129318237305
    3. ')' → logprob: -7.0025129318237305
    4. ' ):' → logprob: -8.50251293182373
    5. '):
' → logprob: -9.00251293182373
    6. '=' → logprob: -10.00251293182373
    7. ':' → logprob: -10.62751293182373
    8. '):
' → logprob: -11.00251293182373
    9. ' ' → logprob: -13.00251293182373
    10. '**' → logprob: -13.25251293182373

Token 190: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04641612619161606
    2. '):' → logprob: -3.1714160442352295
    3. ',' → logprob: -6.546416282653809
    4. '   ' → logprob: -7.046416282653809
    5. ':
' → logprob: -7.421416282653809
    6. '():' → logprob: -8.546416282653809
    7. ')' → logprob: -9.046416282653809
    8. ' :' → logprob: -9.296416282653809
    9. '):
' → logprob: -10.671416282653809
    10. ':def' → logprob: -10.671416282653809

Token 191: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31360799074172974
    2. ' while' → logprob: -2.438607931137085
    3. ' from' → logprob: -2.438607931137085
    4. ' if' → logprob: -3.313607931137085
    5. 'from' (adapté à ' from') → logprob: -4.063608169555664
    6. ' for' → logprob: -4.313608169555664
    7. 'while' → logprob: -4.938608169555664
    8. 'if' → logprob: -5.813608169555664
    9. 'import' → logprob: -5.813608169555664
    10. ' visited' → logprob: -5.813608169555664

Token 192: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.0008636995335109532
    2. 'heap' → logprob: -7.125863552093506
    3. ' collections' → logprob: -10.250864028930664
    4. '_' → logprob: -11.625864028930664
    5. '_heap' → logprob: -11.625864028930664
    6. ' ' → logprob: -12.875864028930664
    7. ' math' → logprob: -13.500864028930664
    8. 'collections' → logprob: -14.000864028930664
    9. ' queue' → logprob: -15.125864028930664
    10. '  ' → logprob: -15.250864028930664

Token 193: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.128163257315464e-07
    2. 'import' → logprob: -16.25
    3. 'p' → logprob: -16.5
    4. 'u' → logprob: -18.25
    5. 'queue' → logprob: -18.625
    6. 'app' → logprob: -18.875
    7. '<|end|>' → logprob: -19.625
    8. 'a' → logprob: -20.125
    9. 'n' → logprob: -20.25
    10. 'op' → logprob: -20.5

Token 194: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.08911077678203583
    2. ' import' → logprob: -2.464110851287842
    3. ' ' → logprob: -8.964110374450684
    4. '<|end|>' → logprob: -10.839110374450684
    5. '_import' → logprob: -11.964110374450684
    6. '	import' → logprob: -11.964110374450684
    7. '   ' → logprob: -12.589110374450684
    8. '_IMPORT' → logprob: -13.839110374450684
    9. ' im' → logprob: -13.964110374450684
    10. 'im' → logprob: -14.339110374450684

Token 195: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.3133595585823059
    2. ' he' → logprob: -1.3133594989776611
    3. '.he' → logprob: -9.938359260559082
    4. 'heap' → logprob: -10.813359260559082
    5. ' ' → logprob: -11.938359260559082
    6. 'import' → logprob: -12.063359260559082
    7. '_he' → logprob: -12.188359260559082
    8. ' heap' → logprob: -12.563359260559082
    9. 'h' → logprob: -12.688359260559082
    10. ' import' → logprob: -13.313359260559082

Token 196: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -7.107425062713446e-06
    2. 'ap' → logprob: -12.000006675720215
    3. 'pp' → logprob: -14.625006675720215
    4. 'a' → logprob: -15.125006675720215
    5. 'appe' → logprob: -17.00000762939453
    6. '```' → logprob: -17.00000762939453
    7. 'q' → logprob: -17.37500762939453
    8. 'appa' → logprob: -17.87500762939453
    9. ' app' → logprob: -18.12500762939453
    10. '

' → logprob: -18.37500762939453

Token 197: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0013286912580952048
    2. 'op' → logprob: -6.626328468322754
    3. 'sh' → logprob: -13.376328468322754
    4. '   ' → logprob: -14.376328468322754
    5. 'p' → logprob: -16.00132942199707
    6. 'push' → logprob: -16.50132942199707
    7. '```' → logprob: -16.50132942199707
    8. '

' → logprob: -16.62632942199707
    9. 'u' → logprob: -16.75132942199707
    10. '
' → logprob: -16.87632942199707

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34714147448539734
    2. '   ' → logprob: -1.3471415042877197
    3. '
' → logprob: -3.5971415042877197
    4. '    
' → logprob: -5.347141265869141
    5. ',
' → logprob: -7.972141265869141
    6. '  
' → logprob: -8.59714126586914
    7. ' 
' → logprob: -8.72214126586914
    8. ' ,' → logprob: -8.97214126586914
    9. '   
' → logprob: -9.59714126586914
    10. ' and' → logprob: -9.72214126586914

Token 199: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0182265043258667
    2. ' he' → logprob: -4.018226623535156
    3. 'heap' → logprob: -9.643226623535156
    4. '.he' → logprob: -12.393226623535156
    5. ' ' → logprob: -13.143226623535156
    6. 'hev' → logprob: -13.768226623535156
    7. '_he' → logprob: -14.393226623535156
    8. '```' → logprob: -14.393226623535156
    9. ' heap' → logprob: -14.518226623535156
    10. 'hep' → logprob: -14.643226623535156

Token 200: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00023750975378789008
    2. 'ap' → logprob: -8.375237464904785
    3. 'pp' → logprob: -12.125237464904785
    4. 'a' → logprob: -13.750237464904785
    5. ' app' → logprob: -16.2502384185791
    6. '	app' → logprob: -16.5002384185791
    7. '_app' → logprob: -17.1252384185791
    8. '```' → logprob: -17.2502384185791
    9. '   ' → logprob: -17.3752384185791
    10. '[' → logprob: -17.3752384185791

Token 201: 'op' (ID: 467)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.3193349838256836
    2. 'ap' → logprob: -2.3193349838256836
    3. 'pp' → logprob: -2.5693349838256836
    4. 'ush' → logprob: -3.5693349838256836
    5. 'mp' → logprob: -3.8193349838256836
    6. 'p' → logprob: -3.9443349838256836
    7. 'push' → logprob: -4.569334983825684
    8. 'replace' → logprob: -5.694334983825684
    9. 'nd' → logprob: -5.694334983825684
    10. 'pop' → logprob: -6.069334983825684

Token 202: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007940782234072685
    2. '<|end|>' → logprob: -5.132940769195557
    3. '   ' → logprob: -6.882940769195557
    4. '    
' → logprob: -8.132941246032715
    5. '  
' → logprob: -8.632941246032715
    6. ',' → logprob: -8.757941246032715
    7. '<|end|>' → logprob: -9.382941246032715
    8. '' → logprob: -9.632941246032715
    9. ' 
' → logprob: -9.757941246032715
    10. ',
' → logprob: -10.382941246032715

Token 203: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002344969194382429
    2. '<|end|>' → logprob: -6.627345085144043
    3. '   ' → logprob: -7.377345085144043
    4. '    
' → logprob: -8.627345085144043
    5. '  
' → logprob: -9.502345085144043
    6. ',' → logprob: -9.752345085144043
    7. '
' → logprob: -10.627345085144043
    8. ' 
' → logprob: -11.377345085144043
    9. ',
' → logprob: -11.377345085144043
    10. '<|end|>' → logprob: -11.752345085144043

Token 204: ' while' (ID: 2049)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09886917471885681
    2. '   ' → logprob: -2.7238690853118896
    3. '    
' → logprob: -4.723869323730469
    4. '<|end|>' → logprob: -4.848869323730469
    5. ' 
' → logprob: -5.473869323730469
    6. 'v' → logprob: -6.098869323730469
    7. ' while' → logprob: -6.473869323730469
    8. 'n' → logprob: -7.223869323730469
    9. '  
' → logprob: -7.473869323730469
    10. '    ' → logprob: -7.598869323730469

Token 205: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5233122706413269
    2. ' q' → logprob: -0.8983122706413269
    3. ' len' → logprob: -9.52331256866455
    4. 'len' → logprob: -10.27331256866455
    5. '	q' → logprob: -10.89831256866455
    6. ' True' → logprob: -11.02331256866455
    7. 'True' → logprob: -11.27331256866455
    8. '   ' → logprob: -11.27331256866455
    9. ' ' → logprob: -11.89831256866455
    10. '(q' → logprob: -12.64831256866455

Token 206: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5454968214035034
    2. ' and' → logprob: -0.9204968214035034
    3. 'and' → logprob: -3.920496940612793
    4. ':
' → logprob: -6.420496940612793
    5. '):' → logprob: -7.920496940612793
    6. ')' → logprob: -9.295496940612793
    7. '):
' → logprob: -9.545496940612793
    8. '>' → logprob: -9.670496940612793
    9. '>:' → logprob: -10.670496940612793
    10. '[' → logprob: -11.045496940612793

Token 207: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6532562375068665
    2. ':' → logprob: -0.7782562375068665
    3. '       ' → logprob: -4.028256416320801
    4. ':
' → logprob: -7.153256416320801
    5. '<|end|>' → logprob: -7.278256416320801
    6. '):' → logprob: -7.653256416320801
    7. '   ' → logprob: -9.0282564163208
    8. ',
' → logprob: -9.1532564163208
    9. ')' → logprob: -9.4032564163208
    10. ' and' → logprob: -9.5282564163208

Token 208: ' i' (ID: 575)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.5113223791122437
    2. 'v' → logprob: -1.3863223791122437
    3. ',' → logprob: -3.011322498321533
    4. '_,' → logprob: -3.386322498321533
    5. '       ' → logprob: -4.261322498321533
    6. ' ,' → logprob: -4.511322498321533
    7. ' (' → logprob: -4.886322498321533
    8. ' k' → logprob: -5.261322498321533
    9. ' c' → logprob: -5.261322498321533
    10. ' _,' → logprob: -5.886322498321533

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6252405643463135
    2. 'f' → logprob: -1.0002405643463135
    3. 'tem' → logprob: -3.1252405643463135
    4. ' =' → logprob: -4.000240325927734
    5. 'n' → logprob: -4.875240325927734
    6. ' ,' → logprob: -5.500240325927734
    7. 'nd' → logprob: -6.000240325927734
    8. 'dx' → logprob: -6.125240325927734
    9. 's' → logprob: -6.375240325927734
    10. 'nt' → logprob: -6.375240325927734

Token 210: ' c' (ID: 274)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.23438458144664764
    2. ' v' → logprob: -2.234384536743164
    3. 'u' → logprob: -3.359384536743164
    4. 'node' → logprob: -3.484384536743164
    5. ' node' → logprob: -3.859384536743164
    6. ' u' → logprob: -4.734384536743164
    7. 'x' → logprob: -5.734384536743164
    8. 'current' → logprob: -7.234384536743164
    9. 'cur' → logprob: -7.609384536743164
    10. ' current' → logprob: -7.734384536743164

Token 211: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09223567694425583
    2. '=' → logprob: -2.967235565185547
    3. 'ost' → logprob: -3.467235565185547
    4. 'ur' → logprob: -6.342235565185547
    5. 'urr' → logprob: -6.842235565185547
    6. 'urrent' → logprob: -7.092235565185547
    7. 'ount' → logprob: -7.717235565185547
    8. '   ' → logprob: -7.717235565185547
    9. 'nt' → logprob: -8.092235565185547
    10. 'u' → logprob: -8.967235565185547

Token 212: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.006715728435665369
    2. 'he' → logprob: -5.006715774536133
    3. ' ' → logprob: -15.506715774536133
    4. 'q' → logprob: -16.756715774536133
    5. ' ' → logprob: -17.631715774536133
    6. ' heap' → logprob: -17.631715774536133
    7. ' q' → logprob: -17.756715774536133
    8. 'heap' → logprob: -17.756715774536133
    9. 'h' → logprob: -17.881715774536133
    10. '   ' → logprob: -18.006715774536133

Token 213: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -4.127333340875339e-06
    2. 'ap' → logprob: -12.750003814697266
    3. 'pp' → logprob: -14.250003814697266
    4. 'q' → logprob: -15.750003814697266
    5. ' app' → logprob: -15.875003814697266
    6. '[' → logprob: -17.250003814697266
    7. 'a' → logprob: -17.250003814697266
    8. 'sp' → logprob: -17.875003814697266
    9. '```' → logprob: -18.000003814697266
    10. 'pop' → logprob: -18.125003814697266

Token 214: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -5.824579784530215e-05
    2. 'p' → logprob: -10.0000581741333
    3. 'pop' → logprob: -11.3750581741333
    4. 'оп' → logprob: -14.2500581741333
    5. 'ush' → logprob: -15.7500581741333
    6. 'o' → logprob: -15.8750581741333
    7. 'pp' → logprob: -16.125059127807617
    8. 'opleft' → logprob: -16.625059127807617
    9. 'ap' → logprob: -16.750059127807617
    10. '   ' → logprob: -17.500059127807617

Token 215: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.500001907348633
    3. ',q' → logprob: -16.500001907348633
    4. '[q' → logprob: -17.125001907348633
    5. ' (' → logprob: -17.625001907348633
    6. '(queue' → logprob: -17.750001907348633
    7. 'q' → logprob: -17.875001907348633
    8. ')' → logprob: -18.625001907348633
    9. '(
' → logprob: -18.750001907348633
    10. ',' → logprob: -18.750001907348633

Token 216: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03807385638356209
    2. ')
' → logprob: -3.288073778152466
    3. ')
' → logprob: -10.413073539733887
    4. ')

' → logprob: -13.538073539733887
    5. ')`' → logprob: -14.663073539733887
    6. '   ' → logprob: -15.538073539733887
    7. ')`
' → logprob: -15.538073539733887
    8. ' )' → logprob: -16.913074493408203
    9. '),' → logprob: -17.038074493408203
    10. ');' → logprob: -17.538074493408203

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17497406899929047
    2. '<|end|>' → logprob: -1.9249740839004517
    3. '
' → logprob: -4.549973964691162
    4. ' if' → logprob: -6.424973964691162
    5. ' 
' → logprob: -7.799973964691162
    6. '        
' → logprob: -7.799973964691162
    7. 'if' → logprob: -8.17497444152832
    8. '   ' → logprob: -8.54997444152832
    9. ',' → logprob: -8.54997444152832
    10. ')' → logprob: -8.79997444152832

Token 218: ' X' (ID: 2127)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.19048573076725006
    2. 'if' → logprob: -1.9404857158660889
    3. ' ans' → logprob: -3.690485715866089
    4. 'ans' → logprob: -6.565485954284668
    5. '   ' → logprob: -6.815485954284668
    6. ' for' → logprob: -7.815485954284668
    7. ' yield' → logprob: -7.815485954284668
    8. ' c' → logprob: -8.315485954284668
    9. '
' → logprob: -8.690485954284668
    10. '       ' → logprob: -8.690485954284668

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013234108686447144
    2. '=' → logprob: -4.7632341384887695
    3. ',' → logprob: -6.1382341384887695
    4. '   ' → logprob: -7.3882341384887695
    5. '=c' → logprob: -7.5132341384887695
    6. ' if' → logprob: -8.26323413848877
    7. 'if' → logprob: -8.51323413848877
    8. ' c' → logprob: -9.13823413848877
    9. ' ==' → logprob: -9.26323413848877
    10. '=i' → logprob: -9.26323413848877

Token 220: ' get' (ID: 717)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.4601294994354248
    2. '(ans' → logprob: -1.5851294994354248
    3. 'len' → logprob: -1.8351294994354248
    4. 'ans' → logprob: -1.9601294994354248
    5. '(len' → logprob: -3.210129499435425
    6. '(G' → logprob: -3.335129499435425
    7. '(c' → logprob: -3.585129499435425
    8. 'K' → logprob: -3.585129499435425
    9. 'G' → logprob: -3.710129499435425
    10. '(K' → logprob: -4.085129737854004

Token 221: '_un' (ID: 11119)
  Prédit: '(G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(G' → logprob: -0.714840829372406
    2. '_neighbors' → logprob: -1.4648408889770508
    3. '_' → logprob: -2.089840888977051
    4. 'neighbors' → logprob: -3.714840888977051
    5. 'attr' → logprob: -4.089840888977051
    6. 'X' → logprob: -4.464840888977051
    7. ' _' → logprob: -4.714840888977051
    8. '(' → logprob: -5.089840888977051
    9. '(i' → logprob: -5.089840888977051
    10. ' neighbors' → logprob: -5.214840888977051

Token 222: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.007656319532543421
    2. 'used' → logprob: -5.632656097412109
    3. 'processed' → logprob: -5.757656097412109
    4. 'expl' → logprob: -8.50765609741211
    5. 'vis' → logprob: -8.63265609741211
    6. 'v' → logprob: -8.63265609741211
    7. 'ique' → logprob: -9.75765609741211
    8. ' visited' → logprob: -9.88265609741211
    9. 'connected' → logprob: -10.25765609741211
    10. 'checked' → logprob: -10.63265609741211

Token 223: '_neighbors' (ID: 142549)
  Prédit: '_neighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbors' → logprob: -0.147854283452034
    2. '(G' → logprob: -2.3978543281555176
    3. '_nodes' → logprob: -3.3978543281555176
    4. 'neighbors' → logprob: -5.022854328155518
    5. '_ne' → logprob: -6.272854328155518
    6. 'ighbors' → logprob: -7.147854328155518
    7. 'adj' → logprob: -7.272854328155518
    8. '_children' → logprob: -7.397854328155518
    9. '_vertices' → logprob: -7.647854328155518
    10. '_neighbor' → logprob: -7.647854328155518

Token 224: '(G' (ID: 12449)
  Prédit: '(G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(G' → logprob: -0.0009635079186409712
    2. '(' → logprob: -7.0009636878967285
    3. ' (' → logprob: -11.00096321105957
    4. '(v' → logprob: -11.25096321105957
    5. '(
' → logprob: -11.37596321105957
    6. '((' → logprob: -12.75096321105957
    7. '(i' → logprob: -13.50096321105957
    8. '(g' → logprob: -13.87596321105957
    9. 'v' → logprob: -14.00096321105957
    10. '   ' → logprob: -14.50096321105957

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003948267549276352
    2. '[v' → logprob: -6.503948211669922
    3. ',v' → logprob: -6.628948211669922
    4. '(v' → logprob: -7.378948211669922
    5. ' ,' → logprob: -7.878948211669922
    6. 'v' → logprob: -9.878948211669922
    7. '(' → logprob: -10.628948211669922
    8. '[' → logprob: -11.628948211669922
    9. ')' → logprob: -12.003948211669922
    10. ',G' → logprob: -12.128948211669922

Token 226: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.023836055770516396
    2. ' v' → logprob: -4.148836135864258
    3. 'i' → logprob: -5.023836135864258
    4. ' i' → logprob: -7.148836135864258
    5. ' ans' → logprob: -9.148836135864258
    6. 'G' → logprob: -9.648836135864258
    7. 'c' → logprob: -9.648836135864258
    8. 'ans' → logprob: -10.023836135864258
    9. '
' → logprob: -10.523836135864258
    10. ',' → logprob: -10.898836135864258

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005776392761617899
    2. '[i' → logprob: -5.255776405334473
    3. ')' → logprob: -8.630776405334473
    4. ' ,' → logprob: -8.755776405334473
    5. '[c' → logprob: -9.505776405334473
    6. ',i' → logprob: -9.755776405334473
    7. '[v' → logprob: -11.130776405334473
    8. ')[' → logprob: -11.255776405334473
    9. '   ' → logprob: -11.630776405334473
    10. '[' → logprob: -11.630776405334473

Token 228: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0919132232666016
    2. ' i' → logprob: -1.0919132232666016
    3. ' c' → logprob: -2.0919132232666016
    4. 'c' → logprob: -2.0919132232666016
    5. 'q' → logprob: -3.8419132232666016
    6. ' q' → logprob: -4.091913223266602
    7. ' ans' → logprob: -4.216913223266602
    8. ' visited' → logprob: -5.216913223266602
    9. ' K' → logprob: -5.341913223266602
    10. 'ans' → logprob: -5.341913223266602

Token 229: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021994952112436295
    2. ')' → logprob: -3.8969950675964355
    3. ' ,' → logprob: -6.8969950675964355
    4. ')
' → logprob: -8.146994590759277
    5. ' )' → logprob: -10.021994590759277
    6. '   ' → logprob: -10.271994590759277
    7. ',c' → logprob: -11.146994590759277
    8. '))' → logprob: -11.646994590759277
    9. '  ' → logprob: -11.896994590759277
    10. 'c' → logprob: -12.021994590759277

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7114331126213074
    2. '<|end|>' → logprob: -0.8364331126213074
    3. '
' → logprob: -3.086433172225952
    4. ' ' → logprob: -4.836432933807373
    5. ',' → logprob: -5.336432933807373
    6. ')' → logprob: -5.461432933807373
    7. ' if' → logprob: -5.711432933807373
    8. '<|end|>' → logprob: -6.336432933807373
    9. '[' → logprob: -6.461432933807373
    10. '        
' → logprob: -6.461432933807373

Token 231: ' ans' (ID: 3345)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28541243076324463
    2. ' if' → logprob: -1.9104124307632446
    3. '       ' → logprob: -3.035412311553955
    4. 'for' → logprob: -3.160412311553955
    5. 'if' → logprob: -4.910412311553955
    6. ' X' → logprob: -7.660412311553955
    7. '   ' → logprob: -7.785412311553955
    8. '        ' → logprob: -8.410412788391113
    9. ' x' → logprob: -8.535412788391113
    10. ' return' → logprob: -9.035412788391113

Token 232: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.0307729244232178
    2. '+=' → logprob: -1.5307729244232178
    3. '[' → logprob: -1.9057729244232178
    4. '.append' → logprob: -1.9057729244232178
    5. '[c' → logprob: -3.1557729244232178
    6. '+' → logprob: -3.6557729244232178
    7. '[i' → logprob: -4.280773162841797
    8. '.extend' → logprob: -4.280773162841797
    9. '=' → logprob: -4.655773162841797
    10. '.' → logprob: -4.780773162841797

Token 233: ' visit' (ID: 4030)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.014353299513459206
    2. ' (' → logprob: -4.264353275299072
    3. ' ans' → logprob: -9.51435375213623
    4. 'ans' → logprob: -10.13935375213623
    5. '(' → logprob: -10.26435375213623
    6. '(answer' → logprob: -11.51435375213623
    7. '(c' → logprob: -12.76435375213623
    8. '(arr' → logprob: -12.76435375213623
    9. '   ' → logprob: -13.01435375213623
    10. '(max' → logprob: -13.13935375213623

Token 234: '_neighbors' (ID: 142549)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.4780427813529968
    2. '(ans' → logprob: -1.1030428409576416
    3. '(' → logprob: -4.2280426025390625
    4. '(v' → logprob: -4.7280426025390625
    5. '_node' → logprob: -5.2280426025390625
    6. '_neighbors' → logprob: -5.2280426025390625
    7. '(G' → logprob: -5.6030426025390625
    8. '_' → logprob: -6.1030426025390625
    9. '(X' → logprob: -6.2280426025390625
    10. '_ans' → logprob: -6.4780426025390625

Token 235: '(X' (ID: 17061)
  Prédit: '(G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(G' → logprob: -0.10555999726057053
    2. '(ans' → logprob: -2.355560064315796
    3. '(' → logprob: -5.480559825897217
    4. ' (' → logprob: -7.730559825897217
    5. '(v' → logprob: -7.980559825897217
    6. '(X' → logprob: -8.105560302734375
    7. '(
' → logprob: -9.980560302734375
    8. '(q' → logprob: -11.480560302734375
    9. 'ans' → logprob: -12.355560302734375
    10. '((' → logprob: -12.730560302734375

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016194197814911604
    2. ' ,' → logprob: -8.875162124633789
    3. ',v' → logprob: -11.750162124633789
    4. ')' → logprob: -11.875162124633789
    5. ',q' → logprob: -12.750162124633789
    6. ',K' → logprob: -13.625162124633789
    7. '   ' → logprob: -14.000162124633789
    8. ',i' → logprob: -14.875162124633789
    9. ',
' → logprob: -15.000162124633789
    10. 'v' → logprob: -15.750162124633789

Token 237: ' G' (ID: 499)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5233705043792725
    2. ' q' → logprob: -2.0233705043792725
    3. 'v' → logprob: -2.7733705043792725
    4. 'c' → logprob: -2.8983705043792725
    5. 'K' → logprob: -3.1483705043792725
    6. 'ans' → logprob: -3.5233705043792725
    7. ' ans' → logprob: -3.7733705043792725
    8. ' v' → logprob: -3.8983705043792725
    9. ' c' → logprob: -4.148370742797852
    10. ' K' → logprob: -4.148370742797852

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028274620417505503
    2. '[v' → logprob: -6.6278276443481445
    3. ',v' → logprob: -7.0028276443481445
    4. ' ,' → logprob: -8.002827644348145
    5. 'v' → logprob: -8.627827644348145
    6. '[' → logprob: -11.127827644348145
    7. ')' → logprob: -11.252827644348145
    8. ' v' → logprob: -11.502827644348145
    9. '   ' → logprob: -11.877827644348145
    10. ',
' → logprob: -12.002827644348145

Token 239: ' v' (ID: 323)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -1.1159934997558594
    2. 'q' → logprob: -1.2409934997558594
    3. ' v' → logprob: -1.6159934997558594
    4. 'v' → logprob: -1.9909934997558594
    5. ' ans' → logprob: -4.490993499755859
    6. ' i' → logprob: -4.990993499755859
    7. ' c' → logprob: -5.115993499755859
    8. ' K' → logprob: -5.115993499755859
    9. 'K' → logprob: -5.240993499755859
    10. 'i' → logprob: -5.365993499755859

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002602629829198122
    2. ' ,' → logprob: -9.000260353088379
    3. ')' → logprob: -9.750260353088379
    4. ',q' → logprob: -10.000260353088379
    5. '[q' → logprob: -12.125260353088379
    6. '   ' → logprob: -12.375260353088379
    7. '       ' → logprob: -12.625260353088379
    8. 'q' → logprob: -12.625260353088379
    9. '[i' → logprob: -12.750260353088379
    10. '[' → logprob: -12.750260353088379

Token 241: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.11147116869688034
    2. ' q' → logprob: -3.236471176147461
    3. 'c' → logprob: -3.611471176147461
    4. 'K' → logprob: -3.611471176147461
    5. 'ans' → logprob: -5.236471176147461
    6. ' K' → logprob: -6.111471176147461
    7. ' c' → logprob: -6.361471176147461
    8. ' ans' → logprob: -6.611471176147461
    9. 'i' → logprob: -7.486471176147461
    10. '   ' → logprob: -7.611471176147461

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.983476436696947e-05
    2. ' ,' → logprob: -9.500089645385742
    3. ')' → logprob: -12.250089645385742
    4. ',K' → logprob: -12.250089645385742
    5. '   ' → logprob: -13.250089645385742
    6. ',
' → logprob: -13.375089645385742
    7. '),' → logprob: -14.125089645385742
    8. '       ' → logprob: -15.250089645385742
    9. '
' → logprob: -15.375089645385742
    10. 'K' → logprob: -16.125089645385742

Token 243: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.32252299785614014
    2. 'K' → logprob: -1.6975229978561401
    3. 'c' → logprob: -2.9475231170654297
    4. ' ans' → logprob: -3.6975231170654297
    5. ' K' → logprob: -4.57252311706543
    6. ' c' → logprob: -5.69752311706543
    7. 'i' → logprob: -7.44752311706543
    8. '   ' → logprob: -8.32252311706543
    9. 'a' → logprob: -8.94752311706543
    10. '
' → logprob: -9.57252311706543

Token 244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.572941179503687e-05
    2. ' ,' → logprob: -10.625045776367188
    3. ')' → logprob: -10.875045776367188
    4. ',K' → logprob: -13.125045776367188
    5. 'K' → logprob: -16.125045776367188
    6. '   ' → logprob: -16.250045776367188
    7. ',
' → logprob: -16.875045776367188
    8. ',k' → logprob: -17.375045776367188
    9. '_,' → logprob: -17.500045776367188
    10. ' K' → logprob: -17.750045776367188

Token 245: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.2536696195602417
    2. ' K' → logprob: -1.5036696195602417
    3. 'c' → logprob: -7.003669738769531
    4. ' c' → logprob: -7.628669738769531
    5. ')' → logprob: -9.628669738769531
    6. ' ' → logprob: -9.878669738769531
    7. 'N' → logprob: -9.878669738769531
    8. '
' → logprob: -10.503669738769531
    9. 'i' → logprob: -10.753669738769531
    10. ' i' → logprob: -11.066169738769531

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.32392441527918e-05
    2. ')' → logprob: -10.125053405761719
    3. ' ,' → logprob: -11.375053405761719
    4. ',
' → logprob: -14.000053405761719
    5. 'MOD' → logprob: -15.500053405761719
    6. ',)' → logprob: -15.625053405761719
    7. '   ' → logprob: -15.750053405761719
    8. 'import' → logprob: -17.25005340576172
    9. '),' → logprob: -17.37505340576172
    10. ' ' → logprob: -17.62505340576172

Token 247: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.12695519626140594
    2. ' MOD' → logprob: -2.126955270767212
    3. '   ' → logprob: -12.376955032348633
    4. ')' → logprob: -12.376955032348633
    5. ' ' → logprob: -12.376955032348633
    6. '
' → logprob: -12.626955032348633
    7. 'M' → logprob: -13.126955032348633
    8. '_MOD' → logprob: -13.376955032348633
    9. 'MO' → logprob: -13.376955032348633
    10. '.MOD' → logprob: -14.001955032348633

Token 248: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018446780450176448
    2. ')
' → logprob: -8.750184059143066
    3. ',' → logprob: -10.625184059143066
    4. ' )' → logprob: -14.250184059143066
    5. ',)' → logprob: -14.625184059143066
    6. '))' → logprob: -15.875184059143066
    7. '),' → logprob: -16.375185012817383
    8. ')

' → logprob: -16.500185012817383
    9. ')
' → logprob: -16.625185012817383
    10. '   ' → logprob: -16.875185012817383

Token 249: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.22318316996097565
    2. 'c' → logprob: -1.8481831550598145
    3. ' i' → logprob: -3.4731831550598145
    4. 'i' → logprob: -4.7231831550598145
    5. ')' → logprob: -6.8481831550598145
    6. ' ' → logprob: -6.8481831550598145
    7. ' )' → logprob: -8.473183631896973
    8. ' v' → logprob: -10.098183631896973
    9. '   ' → logprob: -10.473183631896973
    10. '1' → logprob: -10.973183631896973

Token 250: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010620702058076859
    2. '+' → logprob: -4.760620594024658
    3. ',' → logprob: -6.510620594024658
    4. ')
' → logprob: -8.510621070861816
    5. ' +' → logprob: -8.635621070861816
    6. ' )' → logprob: -9.635621070861816
    7. '-' → logprob: -10.885621070861816
    8. '   ' → logprob: -11.260621070861816
    9. '+)' → logprob: -11.260621070861816
    10. ',)' → logprob: -11.510621070861816

Token 251: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 252: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 253: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12695321440696716
    2. ' ans' → logprob: -2.126953125
    3. '(ans' → logprob: -10.751953125
    4. '	ans' → logprob: -12.751953125
    5. 'None' → logprob: -14.626953125
    6. ' None' → logprob: -16.126953125
    7. 'answer' → logprob: -16.376953125
    8. ' ' → logprob: -17.251953125
    9. ' ' → logprob: -17.376953125
    10. '_ans' → logprob: -18.001953125

Token 254: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6074029207229614
    2. '
' → logprob: -0.9824029207229614
    3. '<|end|>' → logprob: -2.607402801513672
    4. ' def' → logprob: -6.107402801513672
    5. ' 
' → logprob: -6.607402801513672
    6. '\n' → logprob: -7.482402801513672
    7. '    
' → logprob: -7.732402801513672
    8. '

' → logprob: -7.857402801513672
    9. '  
' → logprob: -7.982402801513672
    10. '   ' → logprob: -8.357402801513672

Token 255: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7075148820877075
    2. '_' → logprob: -1.0825148820877075
    3. '
' → logprob: -3.082514762878418
    4. ' def' → logprob: -3.207514762878418
    5. '<|end|>' → logprob: -3.957514762878418
    6. ',' → logprob: -4.082514762878418
    7. ' 
' → logprob: -4.207514762878418
    8. ':' → logprob: -4.957514762878418
    9. ' ' → logprob: -5.082514762878418
    10. '[' → logprob: -5.457514762878418

Token 256: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.07657717913389206
    2. 'get' → logprob: -2.7015771865844727
    3. ' main' → logprob: -5.951577186584473
    4. ' dfs' → logprob: -6.826577186584473
    5. ' bfs' → logprob: -7.076577186584473
    6. ' visit' → logprob: -7.201577186584473
    7. 'dfs' → logprob: -8.201577186584473
    8. '_get' → logprob: -8.701577186584473
    9. ' def' → logprob: -8.826577186584473
    10. 'def' → logprob: -8.826577186584473

Token 257: '_un' (ID: 11119)
  Prédit: '_un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_un' → logprob: -2.5776860184123507e-06
    2. '_' → logprob: -13.12500286102295
    3. '_uns' → logprob: -15.25000286102295
    4. '_unc' → logprob: -16.500001907348633
    5. '_unref' → logprob: -16.750001907348633
    6. '_u' → logprob: -17.000001907348633
    7. 'un' → logprob: -17.375001907348633
    8. '_unused' → logprob: -17.375001907348633
    9. '_neighbors' → logprob: -17.750001907348633
    10. '_UN' → logprob: -17.875001907348633

Token 258: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -3.173704271830502e-06
    2. 'v' → logprob: -14.00000286102295
    3. 'def' → logprob: -14.75000286102295
    4. '_' → logprob: -14.75000286102295
    5. 'vised' → logprob: -14.87500286102295
    6. ' visited' → logprob: -15.00000286102295
    7. 'vis' → logprob: -15.00000286102295
    8. '```' → logprob: -16.250003814697266
    9. 'finished' → logprob: -16.750003814697266
    10. 'processed' → logprob: -16.750003814697266

Token 259: '_neighbors' (ID: 142549)
  Prédit: '_neighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbors' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -13.50000286102295
    3. '_ne' → logprob: -14.12500286102295
    4. '_neighbor' → logprob: -15.12500286102295
    5. 'neighbors' → logprob: -15.37500286102295
    6. '_n' → logprob: -16.375001907348633
    7. ' _' → logprob: -17.375001907348633
    8. '```' → logprob: -17.375001907348633
    9. '_nodes' → logprob: -17.500001907348633
    10. '_children' → logprob: -18.875001907348633

Token 260: '(G' (ID: 12449)
  Prédit: '(G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(G' → logprob: -0.0001246348983841017
    2. '(' → logprob: -9.00012493133545
    3. ' (' → logprob: -14.37512493133545
    4. '(g' → logprob: -15.25012493133545
    5. '(v' → logprob: -15.75012493133545
    6. '(graph' → logprob: -15.87512493133545
    7. '(
' → logprob: -16.625123977661133
    8. '((' → logprob: -17.125123977661133
    9. '(Graph' → logprob: -17.500123977661133
    10. '(V' → logprob: -18.125123977661133

Token 261: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.696889623621246e-06
    2. ' ,' → logprob: -13.00000286102295
    3. ',v' → logprob: -14.87500286102295
    4. ',
' → logprob: -18.375001907348633
    5. 'v' → logprob: -19.250001907348633
    6. ',user' → logprob: -19.875001907348633
    7. '‌,' → logprob: -20.000001907348633
    8. ',

' → logprob: -20.375001907348633
    9. '[],' → logprob: -20.375001907348633
    10. ',G' → logprob: -20.750001907348633

Token 262: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.16023753583431244
    2. ' v' → logprob: -1.9102375507354736
    3. 'visited' → logprob: -12.035237312316895
    4. ' visited' → logprob: -13.535237312316895
    5. '<|end|>' → logprob: -13.535237312316895
    6. ')' → logprob: -13.660237312316895
    7. ' ' → logprob: -13.785237312316895
    8. ')v' → logprob: -14.910237312316895
    9. ',' → logprob: -15.035237312316895
    10. '	v' → logprob: -15.035237312316895

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1756367712223437e-05
    2. ' ,' → logprob: -11.500011444091797
    3. ',v' → logprob: -14.125011444091797
    4. '[' → logprob: -15.125011444091797
    5. 'v' → logprob: -16.250011444091797
    6. ',
' → logprob: -16.375011444091797
    7. '[],' → logprob: -16.625011444091797
    8. '[v' → logprob: -16.875011444091797
    9. 'def' → logprob: -17.125011444091797
    10. ' ' → logprob: -17.375011444091797

Token 264: ' i' (ID: 575)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3723115026950836
    2. 'i' → logprob: -1.2473114728927612
    3. ' i' → logprob: -4.872311592102051
    4. 'c' → logprob: -5.122311592102051
    5. ' v' → logprob: -5.247311592102051
    6. ')' → logprob: -6.497311592102051
    7. 'G' → logprob: -6.747311592102051
    8. 'q' → logprob: -7.872311592102051
    9. ' c' → logprob: -8.12231159210205
    10. ' G' → logprob: -8.12231159210205

Token 265: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021927160560153425
    2. '):' → logprob: -8.625219345092773
    3. ' ,' → logprob: -10.375219345092773
    4. '):
' → logprob: -12.125219345092773
    5. ',v' → logprob: -13.500219345092773
    6. ')' → logprob: -14.750219345092773
    7. ',
' → logprob: -15.000219345092773
    8. ':' → logprob: -16.250219345092773
    9. ' ):' → logprob: -16.250219345092773
    10. '):
' → logprob: -16.812719345092773

Token 266: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6528167724609375
    2. ' return' → logprob: -1.1528167724609375
    3. '   ' → logprob: -2.9028167724609375
    4. ' [' → logprob: -3.1528167724609375
    5. '[v' → logprob: -3.1528167724609375
    6. '[x' → logprob: -5.1528167724609375
    7. '[n' → logprob: -5.1528167724609375
    8. '[' → logprob: -6.2778167724609375
    9. '[u' → logprob: -6.5278167724609375
    10. '[node' → logprob: -6.5278167724609375

Token 267: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.36813032627105713
    2. '[v' → logprob: -1.8681303262710571
    3. '[x' → logprob: -2.9931302070617676
    4. ' return' → logprob: -3.6181302070617676
    5. '[n' → logprob: -3.8681302070617676
    6. '{' → logprob: -4.243130207061768
    7. '[G' → logprob: -4.493130207061768
    8. ' [' → logprob: -5.243130207061768
    9. 'G' → logprob: -5.618130207061768
    10. '[u' → logprob: -5.743130207061768

Token 268: ' {' (ID: 354)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.038441777229309
    2. ' [' → logprob: -1.163441777229309
    3. '[G' → logprob: -1.413441777229309
    4. '{' → logprob: -2.5384416580200195
    5. ' {' → logprob: -5.5384416580200195
    6. '[' → logprob: -5.7884416580200195
    7. 'G' → logprob: -6.5384416580200195
    8. '[x' → logprob: -6.6634416580200195
    9. '[i' → logprob: -7.6634416580200195
    10. ' G' → logprob: -7.6634416580200195

Token 269: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10875210165977478
    2. 'w' → logprob: -3.3587520122528076
    3. 'u' → logprob: -3.4837520122528076
    4. 'node' → logprob: -3.9837520122528076
    5. 'n' → logprob: -4.483752250671387
    6. 'nbr' → logprob: -5.733752250671387
    7. 'neighbor' → logprob: -6.233752250671387
    8. 'j' → logprob: -7.233752250671387
    9. 'nx' → logprob: -7.858752250671387
    10. 'k' → logprob: -8.358752250671387

Token 270: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16023977100849152
    2. 'for' → logprob: -1.910239815711975
    3. ' ' → logprob: -11.410240173339844
    4. '	for' → logprob: -13.035240173339844
    5. '
' → logprob: -13.660240173339844
    6. 'x' → logprob: -14.660240173339844
    7. ' ' → logprob: -15.410240173339844
    8. '   ' → logprob: -15.660240173339844
    9. '}' → logprob: -16.160240173339844
    10. ':' → logprob: -16.410240173339844

Token 271: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5301293730735779
    2. ' x' → logprob: -0.9051293730735779
    3. 'G' → logprob: -5.405129432678223
    4. ' G' → logprob: -6.030129432678223
    5. ' in' → logprob: -9.780129432678223
    6. 'v' → logprob: -12.030129432678223
    7. ' ' → logprob: -12.030129432678223
    8. ' v' → logprob: -12.280129432678223
    9. 'in' → logprob: -12.655129432678223
    10. '(G' → logprob: -13.280129432678223

Token 272: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34909504652023315
    2. 'in' → logprob: -1.224095106124878
    3. 'x' → logprob: -8.224095344543457
    4. 'n' → logprob: -8.724095344543457
    5. ' ' → logprob: -9.474095344543457
    6. 'v' → logprob: -9.724095344543457
    7. 'G' → logprob: -11.349095344543457
    8. ',' → logprob: -11.849095344543457
    9. '
' → logprob: -11.849095344543457
    10. 'In' → logprob: -11.974095344543457

Token 273: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.02326551079750061
    2. ' G' → logprob: -3.7732656002044678
    3. '(G' → logprob: -11.023265838623047
    4. '	G' → logprob: -13.398265838623047
    5. '[G' → logprob: -14.398265838623047
    6. '<G' → logprob: -15.023265838623047
    7. ' ' → logprob: -15.273265838623047
    8. '   ' → logprob: -15.273265838623047
    9. ' range' → logprob: -15.648265838623047
    10. '_G' → logprob: -15.648265838623047

Token 274: '[i' (ID: 1768)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.02095441333949566
    2. '[i' → logprob: -3.8959543704986572
    3. 'v' → logprob: -8.645954132080078
    4. '[x' → logprob: -9.145954132080078
    5. '[' → logprob: -9.270954132080078
    6. ' [' → logprob: -11.895954132080078
    7. 'i' → logprob: -12.145954132080078
    8. '
' → logprob: -12.645954132080078
    9. '```' → logprob: -13.145954132080078
    10. '[G' → logprob: -13.145954132080078

Token 275: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007284072693437338
    2. '}' → logprob: -5.257284164428711
    3. ' if' → logprob: -6.382284164428711
    4. 'if' → logprob: -8.882284164428711
    5. 'v' → logprob: -9.382284164428711
    6. '[' → logprob: -10.132284164428711
    7. ' ]' → logprob: -10.257284164428711
    8. ']}' → logprob: -10.632284164428711
    9. '[v' → logprob: -10.882284164428711
    10. '[i' → logprob: -12.632284164428711

Token 276: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2014189064502716
    2. 'if' → logprob: -1.7014188766479492
    3. '   ' → logprob: -12.82641887664795
    4. ' ' → logprob: -13.45141887664795
    5. '}' → logprob: -14.45141887664795
    6. '
' → logprob: -15.07641887664795
    7. '	if' → logprob: -15.32641887664795
    8. '[' → logprob: -16.201419830322266
    9. 'v' → logprob: -16.201419830322266
    10. 'not' → logprob: -17.201419830322266

Token 277: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2521646022796631
    2. ' not' → logprob: -1.502164602279663
    3. 'x' → logprob: -8.877164840698242
    4. 'v' → logprob: -10.127164840698242
    5. ' x' → logprob: -10.877164840698242
    6. '	not' → logprob: -10.877164840698242
    7. '(not' → logprob: -11.377164840698242
    8. '   ' → logprob: -13.002164840698242
    9. ' v' → logprob: -13.252164840698242
    10. '
' → logprob: -14.377164840698242

Token 278: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.048594068735837936
    2. ' v' → logprob: -3.0485939979553223
    3. '(v' → logprob: -12.29859447479248
    4. '
' → logprob: -14.42359447479248
    5. '[v' → logprob: -14.42359447479248
    6. ')v' → logprob: -14.92359447479248
    7. 'visited' → logprob: -15.29859447479248
    8. '	v' → logprob: -15.54859447479248
    9. '   ' → logprob: -16.548593521118164
    10. '_v' → logprob: -16.673593521118164

Token 279: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.6166903151315637e-05
    2. '[' → logprob: -11.500016212463379
    3. '[i' → logprob: -12.750016212463379
    4. 'x' → logprob: -13.125016212463379
    5. ' [' → logprob: -14.375016212463379
    6. '[v' → logprob: -15.750016212463379
    7. '```' → logprob: -16.000015258789062
    8. ' x' → logprob: -16.625015258789062
    9. '[
' → logprob: -17.500015258789062
    10. '(x' → logprob: -17.500015258789062

Token 280: ']' (ID: 60)
  Prédit: ']}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']}' → logprob: -0.0005899675306864083
    2. ']' → logprob: -7.500589847564697
    3. ' ]' → logprob: -10.375590324401855
    4. ']}
' → logprob: -12.750590324401855
    5. '}' → logprob: -13.375590324401855
    6. '']}' → logprob: -15.250590324401855
    7. ']},' → logprob: -15.500590324401855
    8. ']}"' → logprob: -15.625590324401855
    9. ']]' → logprob: -15.875590324401855
    10. ']==' → logprob: -16.25058937072754

Token 281: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -8.625866030342877e-05
    2. ' }' → logprob: -9.500085830688477
    3. ']}' → logprob: -11.750085830688477
    4. ' and' → logprob: -14.000085830688477
    5. ']' → logprob: -14.375085830688477
    6. '}
' → logprob: -14.500085830688477
    7. '()}' → logprob: -15.000085830688477
    8. ')}' → logprob: -15.250085830688477
    9. '}

' → logprob: -15.375085830688477
    10. '`}' → logprob: -15.375085830688477

Token 282: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007918547838926315
    2. '<|end|>' → logprob: -4.882918357849121
    3. ' def' → logprob: -8.882918357849121
    4. ')' → logprob: -9.507918357849121
    5. '<|end|>' → logprob: -9.632918357849121
    6. '[' → logprob: -11.382918357849121
    7. '[]' → logprob: -12.507918357849121
    8. '```' → logprob: -12.757918357849121
    9. '.' → logprob: -13.007918357849121
    10. '...' → logprob: -13.132918357849121

Token 283: ' visit' (ID: 4030)
  Prédit: ' visit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visit' → logprob: -0.062296364456415176
    2. 'visit' → logprob: -2.8122963905334473
    3. ' def' → logprob: -8.562295913696289
    4. 'def' → logprob: -10.812295913696289
    5. ' vist' → logprob: -10.937295913696289
    6. ' visite' → logprob: -11.312295913696289
    7. '_visit' → logprob: -11.312295913696289
    8. ' ' → logprob: -11.687295913696289
    9. ' visits' → logprob: -11.687295913696289
    10. ' process' → logprob: -11.687295913696289

Token 284: '_neighbors' (ID: 142549)
  Prédit: '_neighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbors' → logprob: -0.00023035754566080868
    2. '_' → logprob: -8.50023078918457
    3. '_ne' → logprob: -10.87523078918457
    4. ' _' → logprob: -12.75023078918457
    5. '_neighbor' → logprob: -13.00023078918457
    6. '```' → logprob: -13.87523078918457
    7. '_n' → logprob: -14.37523078918457
    8. '_nodes' → logprob: -15.62523078918457
    9. '_
' → logprob: -15.75023078918457
    10. '_helpers' → logprob: -15.87523078918457

Token 285: '(X' (ID: 17061)
  Prédit: '(G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(G' → logprob: -0.26679110527038574
    2. '(' → logprob: -1.7667911052703857
    3. '(X' → logprob: -2.7667911052703857
    4. ' (' → logprob: -9.516791343688965
    5. '(
' → logprob: -9.641791343688965
    6. '(x' → logprob: -9.766791343688965
    7. 'def' → logprob: -10.516791343688965
    8. '(N' → logprob: -10.516791343688965
    9. '(M' → logprob: -10.766791343688965
    10. '(S' → logprob: -10.891791343688965

Token 286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.702754474943504e-05
    2. ' ,' → logprob: -10.25003719329834
    3. ',G' → logprob: -14.12503719329834
    4. ',X' → logprob: -14.25003719329834
    5. ',
' → logprob: -16.125036239624023
    6. ')' → logprob: -17.500036239624023
    7. '   ' → logprob: -17.625036239624023
    8. '

' → logprob: -17.875036239624023
    9. '
' → logprob: -18.125036239624023
    10. '):' → logprob: -18.250036239624023

Token 287: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.14275039732456207
    2. ' G' → logprob: -2.0177505016326904
    3. ' ' → logprob: -11.14275074005127
    4. 'v' → logprob: -11.39275074005127
    5. '<|end|>' → logprob: -11.39275074005127
    6. 'X' → logprob: -11.76775074005127
    7. ',' → logprob: -12.26775074005127
    8. ')' → logprob: -12.76775074005127
    9. ',G' → logprob: -12.76775074005127
    10. '   ' → logprob: -12.76775074005127

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026872646412812173
    2. ',v' → logprob: -8.750268936157227
    3. ' ,' → logprob: -9.125268936157227
    4. 'v' → logprob: -14.500268936157227
    5. '<|end|>' → logprob: -14.625268936157227
    6. ',
' → logprob: -16.750268936157227
    7. '   ' → logprob: -16.875268936157227
    8. 'def' → logprob: -17.000268936157227
    9. '‌,' → logprob: -17.000268936157227
    10. ' v' → logprob: -17.250268936157227

Token 289: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.016045041382312775
    2. ' v' → logprob: -4.141045093536377
    3. '<|end|>' → logprob: -11.766044616699219
    4. ',' → logprob: -14.391044616699219
    5. '   ' → logprob: -14.641044616699219
    6. 'x' → logprob: -14.891044616699219
    7. '	v' → logprob: -14.891044616699219
    8. ')v' → logprob: -15.016044616699219
    9. 'b' → logprob: -15.391044616699219
    10. ',v' → logprob: -15.516044616699219

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0683535037969705e-05
    2. ' ,' → logprob: -11.50001049041748
    3. ',
' → logprob: -15.00001049041748
    4. 'def' → logprob: -16.625011444091797
    5. ',x' → logprob: -17.000011444091797
    6. ',q' → logprob: -17.750011444091797
    7. '‌,' → logprob: -17.750011444091797
    8. ',v' → logprob: -18.250011444091797
    9. ',

' → logprob: -18.250011444091797
    10. '   ' → logprob: -18.375011444091797

Token 291: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.01251376885920763
    2. ' q' → logprob: -4.387513637542725
    3. '   ' → logprob: -13.387514114379883
    4. ' ' → logprob: -14.512514114379883
    5. '	q' → logprob: -14.512514114379883
    6. '    ' → logprob: -14.637514114379883
    7. '  ' → logprob: -15.512514114379883
    8. 'x' → logprob: -15.512514114379883
    9. ',' → logprob: -15.637514114379883
    10. '
' → logprob: -15.762514114379883

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.650518920039758e-06
    2. ' ,' → logprob: -12.625003814697266
    3. ',K' → logprob: -15.375003814697266
    4. ',
' → logprob: -16.875003814697266
    5. '   ' → logprob: -17.750003814697266
    6. '‌,' → logprob: -18.750003814697266
    7. ',k' → logprob: -19.000003814697266
    8. 'def' → logprob: -19.125003814697266
    9. ',int' → logprob: -19.375003814697266
    10. 's' → logprob: -19.500003814697266

Token 293: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07927606999874115
    2. ' ans' → logprob: -2.5792760848999023
    3. 'K' → logprob: -8.204276084899902
    4. ' K' → logprob: -10.079276084899902
    5. ' ' → logprob: -10.954276084899902
    6. 'a' → logprob: -11.204276084899902
    7. '	ans' → logprob: -11.704276084899902
    8. '   ' → logprob: -12.204276084899902
    9. '(ans' → logprob: -12.204276084899902
    10. '
' → logprob: -12.204276084899902

Token 294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2352385965641588e-05
    2. ' ,' → logprob: -11.375012397766113
    3. ',K' → logprob: -14.250012397766113
    4. '   ' → logprob: -16.375011444091797
    5. ',
' → logprob: -17.500011444091797
    6. '_,' → logprob: -18.250011444091797
    7. '):' → logprob: -18.375011444091797
    8. 'def' → logprob: -18.625011444091797
    9. '‌,' → logprob: -18.750011444091797
    10. ',int' → logprob: -18.875011444091797

Token 295: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.3869764506816864
    2. ' K' → logprob: -1.1369764804840088
    3. ' ' → logprob: -10.01197624206543
    4. '   ' → logprob: -10.63697624206543
    5. '	K' → logprob: -12.51197624206543
    6. 'N' → logprob: -12.63697624206543
    7. '  ' → logprob: -12.76197624206543
    8. '    ' → logprob: -12.76197624206543
    9. '
' → logprob: -12.76197624206543
    10. ',' → logprob: -12.94947624206543

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.694766489090398e-05
    2. ' ,' → logprob: -9.625066757202148
    3. ',
' → logprob: -15.000066757202148
    4. '   ' → logprob: -16.50006675720215
    5. '_,' → logprob: -16.62506675720215
    6. '‌,' → logprob: -16.62506675720215
    7. ',

' → logprob: -17.25006675720215
    8. ')' → logprob: -17.37506675720215
    9. '<|end|>' → logprob: -17.37506675720215
    10. 'def' → logprob: -17.56256675720215

Token 297: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.08897654712200165
    2. ' MOD' → logprob: -2.4639766216278076
    3. ' ' → logprob: -10.838976860046387
    4. 'MO' → logprob: -12.338976860046387
    5. '   ' → logprob: -12.463976860046387
    6. 'M' → logprob: -13.213976860046387
    7. '  ' → logprob: -13.588976860046387
    8. '
' → logprob: -13.588976860046387
    9. '    ' → logprob: -13.838976860046387
    10. 'mod' → logprob: -14.463976860046387

Token 298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.755678961984813e-05
    2. ' ,' → logprob: -9.625077247619629
    3. ',c' → logprob: -12.250077247619629
    4. '   ' → logprob: -12.875077247619629
    5. ',
' → logprob: -13.000077247619629
    6. '):' → logprob: -15.625077247619629
    7. ',

' → logprob: -15.625077247619629
    8. '_,' → logprob: -15.625077247619629
    9. ',int' → logprob: -15.875077247619629
    10. 'c' → logprob: -16.375078201293945

Token 299: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.25239264965057373
    2. ' c' → logprob: -1.5023926496505737
    3. 'i' → logprob: -8.752392768859863
    4. ' i' → logprob: -9.752392768859863
    5. ' ' → logprob: -9.752392768859863
    6. ')' → logprob: -10.127392768859863
    7. '   ' → logprob: -10.814892768859863
    8. '1' → logprob: -10.877392768859863
    9. '(c' → logprob: -11.127392768859863
    10. 'x' → logprob: -11.564892768859863

Token 300: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014581474475562572
    2. '):
' → logprob: -4.389581680297852
    3. ',' → logprob: -6.264581680297852
    4. '):
' → logprob: -9.889581680297852
    5. ')' → logprob: -10.014581680297852
    6. ' ):' → logprob: -10.014581680297852
    7. '   ' → logprob: -11.264581680297852
    8. '):

' → logprob: -11.889581680297852
    9. ':' → logprob: -13.014581680297852
    10. ' ' → logprob: -13.514581680297852

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15754446387290955
    2. 'for' → logprob: -2.5325443744659424
    3. ' for' → logprob: -3.1575443744659424
    4. 'ans' → logprob: -4.7825446128845215
    5. 'res' → logprob: -5.6575446128845215
    6. ' ans' → logprob: -5.7825446128845215
    7. 'result' → logprob: -6.5325446128845215
    8. ' res' → logprob: -6.6575446128845215
    9. 'v' → logprob: -6.6575446128845215
    10. 'if' → logprob: -7.4075446128845215

Token 302: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36480167508125305
    2. 'ans' → logprob: -1.9898016452789307
    3. 'res' → logprob: -2.6148016452789307
    4. 'v' → logprob: -3.6148016452789307
    5. '   ' → logprob: -3.6148016452789307
    6. ' for' → logprob: -3.9898016452789307
    7. 'result' → logprob: -4.98980188369751
    8. 'if' → logprob: -5.86480188369751
    9. ' ans' → logprob: -5.98980188369751
    10. ' res' → logprob: -6.23980188369751

Token 303: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0006192696164362133
    2. ' heap' → logprob: -7.500619411468506
    3. 'math' → logprob: -9.750618934631348
    4. 'collections' → logprob: -12.875618934631348
    5. 'operator' → logprob: -13.250618934631348
    6. '_heap' → logprob: -13.625618934631348
    7. 'queue' → logprob: -14.000618934631348
    8. ' ' → logprob: -14.875618934631348
    9. ' math' → logprob: -15.125618934631348
    10. '_' → logprob: -15.750618934631348

Token 304: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'p' → logprob: -17.75
    3. 'import' → logprob: -21.375
    4. 'Q' → logprob: -21.625
    5. 'app' → logprob: -21.75
    6. 'queue' → logprob: -21.75
    7. 'u' → logprob: -22.375
    8. 'op' → logprob: -22.375
    9. 'v' → logprob: -22.375
    10. 'qs' → logprob: -23.375

Token 305: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4741863012313843
    2. ' import' → logprob: -0.9741863012313843
    3. '	import' → logprob: -9.349185943603516
    4. '_import' → logprob: -11.224185943603516
    5. '<|end|>' → logprob: -12.974185943603516
    6. ' ' → logprob: -13.599185943603516
    7. ' impor' → logprob: -13.849185943603516
    8. '   ' → logprob: -14.099185943603516
    9. 'im' → logprob: -14.099185943603516
    10. '_IMPORT' → logprob: -14.349185943603516

Token 306: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.20142026245594025
    2. ' he' → logprob: -1.7014203071594238
    3. 'h' → logprob: -12.951419830322266
    4. '.he' → logprob: -13.326419830322266
    5. '_he' → logprob: -13.576419830322266
    6. ' ' → logprob: -14.951419830322266
    7. 'heap' → logprob: -15.451419830322266
    8. 'hee' → logprob: -15.826419830322266
    9. 'hev' → logprob: -15.951419830322266
    10. 'hei' → logprob: -16.201419830322266

Token 307: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -8.959636033978313e-05
    2. 'push' → logprob: -9.625089645385742
    3. 'ap' → logprob: -11.125089645385742
    4. 'pp' → logprob: -12.125089645385742
    5. 'p' → logprob: -13.750089645385742
    6. 'a' → logprob: -13.875089645385742
    7. 'append' → logprob: -14.125089645385742
    8. '```' → logprob: -15.750089645385742
    9. 'ush' → logprob: -16.000089645385742
    10. 'appen' → logprob: -16.375089645385742

Token 308: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -1.2352385965641588e-05
    2. 'push' → logprob: -11.375012397766113
    3. 'op' → logprob: -14.750012397766113
    4. 'sh' → logprob: -15.000012397766113
    5. 'u' → logprob: -16.750011444091797
    6. 'p' → logprob: -17.750011444091797
    7. 'Push' → logprob: -18.125011444091797
    8. 'app' → logprob: -18.250011444091797
    9. '   ' → logprob: -18.500011444091797
    10. '```' → logprob: -18.750011444091797

Token 309: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06475496292114258
    2. '
' → logprob: -3.3147549629211426
    3. '    
' → logprob: -3.9397549629211426
    4. ' for' → logprob: -5.939754962921143
    5. '	
' → logprob: -6.814754962921143
    6. '	for' → logprob: -7.314754962921143
    7. 'for' → logprob: -7.439754962921143
    8. ',' → logprob: -7.439754962921143
    9. '    ' → logprob: -8.189754486083984
    10. '' → logprob: -8.689754486083984

Token 310: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020568285137414932
    2. 'for' → logprob: -4.520568370819092
    3. ' for' → logprob: -4.895568370819092
    4. '
' → logprob: -7.395568370819092
    5. '    
' → logprob: -8.020567893981934
    6. 'ans' → logprob: -8.270567893981934
    7. ' ans' → logprob: -8.395567893981934
    8. 'v' → logprob: -8.895567893981934
    9. 'count' → logprob: -9.770567893981934
    10. 'c' → logprob: -10.020567893981934

Token 311: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.15221884846687317
    2. 'ans' → logprob: -2.902218818664551
    3. 'res' → logprob: -3.277218818664551
    4. 'result' → logprob: -4.152218818664551
    5. '   ' → logprob: -4.652218818664551
    6. ' for' → logprob: -5.277218818664551
    7. 'v' → logprob: -5.402218818664551
    8. 'if' → logprob: -5.902218818664551
    9. 'global' → logprob: -6.277218818664551
    10. 'new' → logprob: -6.777218818664551

Token 312: ' l' (ID: 305)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03442804887890816
    2. ' x' → logprob: -3.409428119659424
    3. 'n' → logprob: -8.909427642822266
    4. 'u' → logprob: -9.284427642822266
    5. 'node' → logprob: -9.409427642822266
    6. 'nx' → logprob: -9.409427642822266
    7. 'neighbor' → logprob: -9.534427642822266
    8. 'j' → logprob: -9.659427642822266
    9. 'w' → logprob: -9.909427642822266
    10. 'e' → logprob: -10.659427642822266

Token 313: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018428632989525795
    2. 'in' → logprob: -4.018428802490234
    3. ',' → logprob: -8.643428802490234
    4. 'i' → logprob: -10.518428802490234
    5. '	in' → logprob: -11.393428802490234
    6. 'n' → logprob: -11.768428802490234
    7. ' ' → logprob: -11.768428802490234
    8. ' i' → logprob: -12.143428802490234
    9. 'etter' → logprob: -12.143428802490234
    10. 'x' → logprob: -12.268428802490234

Token 314: ' j' (ID: 441)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03794187307357788
    2. ' x' → logprob: -3.9129419326782227
    3. ' in' → logprob: -5.537941932678223
    4. 'node' → logprob: -6.037941932678223
    5. 'neighbor' → logprob: -6.162941932678223
    6. 'in' → logprob: -6.162941932678223
    7. 'i' → logprob: -6.287941932678223
    8. 'j' → logprob: -7.162941932678223
    9. 'l' → logprob: -7.412941932678223
    10. ' node' → logprob: -7.787941932678223

Token 315: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20150397717952728
    2. 'in' → logprob: -1.7015039920806885
    3. 'n' → logprob: -9.82650375366211
    4. ',' → logprob: -11.07650375366211
    5. ' ' → logprob: -11.82650375366211
    6. 's' → logprob: -12.70150375366211
    7. '	in' → logprob: -13.32650375366211
    8. ')' → logprob: -13.45150375366211
    9. '_in' → logprob: -14.32650375366211
    10. 'In' → logprob: -14.45150375366211

Token 316: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.5263605117797852
    2. ' enumerate' → logprob: -0.9013605117797852
    3. 'sorted' → logprob: -5.901360511779785
    4. 'X' → logprob: -8.901360511779785
    5. '(en' → logprob: -9.276360511779785
    6. ' sorted' → logprob: -9.276360511779785
    7. 'en' → logprob: -9.901360511779785
    8. 'zip' → logprob: -10.526360511779785
    9. 'enum' → logprob: -10.651360511779785
    10. '(sorted' → logprob: -11.526360511779785

Token 317: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.10252362489700317
    2. '(sorted' → logprob: -2.4775235652923584
    3. 'X' → logprob: -4.4775238037109375
    4. 'sorted' → logprob: -6.7275238037109375
    5. '(' → logprob: -7.1025238037109375
    6. ' X' → logprob: -10.352523803710938
    7. ' sorted' → logprob: -10.602523803710938
    8. '(list' → logprob: -10.602523803710938
    9. ' (' → logprob: -12.227523803710938
    10. '((' → logprob: -12.602523803710938

Token 318: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01279815286397934
    2. '):' → logprob: -4.387798309326172
    3. ' ,' → logprob: -8.762798309326172
    4. '):
' → logprob: -9.262798309326172
    5. '   ' → logprob: -11.012798309326172
    6. ')' → logprob: -11.637798309326172
    7. '(),' → logprob: -12.762798309326172
    8. ':' → logprob: -13.137798309326172
    9. ',start' → logprob: -13.137798309326172
    10. '       ' → logprob: -13.637798309326172

Token 319: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2924613356590271
    2. ':' → logprob: -1.6674613952636719
    3. ',' → logprob: -3.542461395263672
    4. '   ' → logprob: -4.167461395263672
    5. 'he' → logprob: -5.042461395263672
    6. ' he' → logprob: -5.167461395263672
    7. '        
' → logprob: -6.542461395263672
    8. '<|end|>' → logprob: -6.792461395263672
    9. '    ' → logprob: -7.042461395263672
    10. ' if' → logprob: -7.167461395263672

Token 320: ' he' (ID: 501)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.8629152178764343
    2. ' if' → logprob: -1.237915277481079
    3. ' v' → logprob: -2.362915277481079
    4. 'if' → logprob: -2.862915277481079
    5. '       ' → logprob: -2.987915277481079
    6. 'he' (adapté à ' he') → logprob: -3.362915277481079
    7. ' he' → logprob: -3.862915277481079
    8. '   ' → logprob: -3.987915277481079
    9. 'ans' → logprob: -5.4879150390625
    10. '    ' → logprob: -6.1129150390625

Token 321: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.580929347255733e-05
    2. 'ap' → logprob: -11.375016212463379
    3. 'pp' → logprob: -12.750016212463379
    4. 'push' → logprob: -14.375016212463379
    5. ' app' → logprob: -15.125016212463379
    6. 'a' → logprob: -15.625016212463379
    7. 'p' → logprob: -16.625015258789062
    8. 'append' → logprob: -16.750015258789062
    9. '_app' → logprob: -17.250015258789062
    10. 'APP' → logprob: -17.500015258789062

Token 322: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -9.448370838072151e-05
    2. 'sh' → logprob: -9.875094413757324
    3. 'push' → logprob: -10.125094413757324
    4. 'p' → logprob: -13.500094413757324
    5. 'op' → logprob: -13.875094413757324
    6. '   ' → logprob: -15.875094413757324
    7. 'u' → logprob: -15.875094413757324
    8. '```' → logprob: -17.00009536743164
    9. 'l' → logprob: -17.50009536743164
    10. ' push' → logprob: -17.50009536743164

Token 323: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.00012630375567823648
    2. '(' → logprob: -9.000125885009766
    3. ' (' → logprob: -12.750125885009766
    4. '(
' → logprob: -18.125125885009766
    5. '(j' → logprob: -18.750125885009766
    6. 'q' → logprob: -18.875125885009766
    7. ',q' → logprob: -19.625125885009766
    8. ')' → logprob: -20.000125885009766
    9. '[q' → logprob: -20.000125885009766
    10. ' ' → logprob: -20.125125885009766

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.042762335389852524
    2. '(' → logprob: -3.792762279510498
    3. '(j' → logprob: -4.542762279510498
    4. ' (' → logprob: -5.167762279510498
    5. '(q' → logprob: -6.667762279510498
    6. ',(' → logprob: -7.417762279510498
    7. ' ,' → logprob: -7.917762279510498
    8. '((' → logprob: -8.042762756347656
    9. ',j' → logprob: -8.292762756347656
    10. ')' → logprob: -9.167762756347656

Token 325: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08891395479440689
    2. '(c' → logprob: -3.213913917541504
    3. '(' → logprob: -3.838913917541504
    4. '(j' → logprob: -3.838913917541504
    5. '(l' → logprob: -6.588913917541504
    6. '((' → logprob: -8.463913917541504
    7. ' ((' → logprob: -8.838913917541504
    8. '(s' → logprob: -10.463913917541504
    9. ')' → logprob: -11.213913917541504
    10. ' ' → logprob: -11.213913917541504

Token 326: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06006832420825958
    2. 'c' → logprob: -2.935068368911743
    3. ' j' → logprob: -6.685068130493164
    4. 'ans' → logprob: -6.810068130493164
    5. '(c' → logprob: -7.310068130493164
    6. '(j' → logprob: -7.435068130493164
    7. 'K' → logprob: -8.185068130493164
    8. '1' → logprob: -8.185068130493164
    9. ' c' → logprob: -8.810068130493164
    10. '   ' → logprob: -8.810068130493164

Token 327: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0047547840513288975
    2. ' ,' → logprob: -5.379755020141602
    3. ',c' → logprob: -9.504755020141602
    4. '   ' → logprob: -11.129755020141602
    5. '),' → logprob: -11.504755020141602
    6. ',
' → logprob: -11.629755020141602
    7. 'c' → logprob: -11.879755020141602
    8. '+' → logprob: -12.129755020141602
    9. ' +' → logprob: -13.129755020141602
    10. '
' → logprob: -13.254755020141602

Token 328: ' ' (ID: 220)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.22839781641960144
    2. '(c' → logprob: -2.103397846221924
    3. ' c' → logprob: -2.728397846221924
    4. ' (' → logprob: -4.478397846221924
    5. '((' → logprob: -6.728397846221924
    6. '   ' → logprob: -6.978397846221924
    7. '(K' → logprob: -7.103397846221924
    8. 'K' → logprob: -7.353397846221924
    9. '(' → logprob: -7.978397846221924
    10. ' ' → logprob: -8.103397369384766

Token 329: '2' (ID: 17)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.044964730739593506
    2. '(c' → logprob: -3.9199647903442383
    3. 'K' → logprob: -4.794964790344238
    4. 'l' → logprob: -4.919964790344238
    5. ' c' → logprob: -6.044964790344238
    6. 'max' → logprob: -6.794964790344238
    7. 'min' → logprob: -6.919964790344238
    8. '(K' → logprob: -7.419964790344238
    9. '(l' → logprob: -7.544964790344238
    10. 'j' → logprob: -7.544964790344238

Token 330: '))
' (ID: 2210)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.48096880316734314
    2. '))' → logprob: -1.1059688329696655
    3. '+c' → logprob: -3.980968713760376
    4. '+' → logprob: -4.105968952178955
    5. ' if' → logprob: -4.855968952178955
    6. ' *' → logprob: -6.230968952178955
    7. ' ))' → logprob: -6.480968952178955
    8. '*c' → logprob: -6.480968952178955
    9. '*' → logprob: -7.105968952178955
    10. '+l' → logprob: -7.355968952178955

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06349202245473862
    2. '   ' → logprob: -2.9384920597076416
    3. '
' → logprob: -5.6884918212890625
    4. 'v' → logprob: -5.9384918212890625
    5. ',' → logprob: -7.6884918212890625
    6. ' v' → logprob: -8.063491821289062
    7. '        
' → logprob: -8.313491821289062
    8. 'return' → logprob: -8.438491821289062
    9. ',v' → logprob: -8.563491821289062
    10. '<|end|>' → logprob: -9.063491821289062

Token 332: ' ans' (ID: 3345)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.09730234742164612
    2. 'ans' (adapté à ' ans') → logprob: -2.4723024368286133
    3. 'if' → logprob: -5.347302436828613
    4. '   ' → logprob: -5.972302436828613
    5. '       ' → logprob: -7.597302436828613
    6. 'for' → logprob: -9.097302436828613
    7. ' v' → logprob: -9.597302436828613
    8. 'c' → logprob: -10.222302436828613
    9. ' ans' → logprob: -10.222302436828613
    10. '           ' → logprob: -10.347302436828613

Token 333: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.6879444718360901
    2. ' *=' → logprob: -1.4379444122314453
    3. ' =' → logprob: -2.0629444122314453
    4. '=' → logprob: -2.0629444122314453
    5. '*' → logprob: -5.312944412231445
    6. '%=' → logprob: -7.812944412231445
    7. '+=' → logprob: -8.562944412231445
    8. ' +=' → logprob: -9.687944412231445
    9. ' %=' → logprob: -9.812944412231445
    10. '[' → logprob: -10.187944412231445

Token 334: ' update' (ID: 4027)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.005434031132608652
    2. 'ans' → logprob: -5.255434036254883
    3. ' ans' → logprob: -9.005434036254883
    4. ' (' → logprob: -9.880434036254883
    5. '(' → logprob: -12.130434036254883
    6. '	ans' → logprob: -12.630434036254883
    7. '(answer' → logprob: -12.755434036254883
    8. '   ' → logprob: -12.880434036254883
    9. '(an' → logprob: -13.005434036254883
    10. '(a' → logprob: -13.505434036254883

Token 335: '_answer' (ID: 65702)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.007368680089712143
    2. ' (' → logprob: -5.507368564605713
    3. 'ans' → logprob: -6.007368564605713
    4. ' ans' → logprob: -7.382368564605713
    5. '_ans' → logprob: -9.257369041442871
    6. 'pow' → logprob: -10.257369041442871
    7. '(answer' → logprob: -11.382369041442871
    8. '(' → logprob: -11.507369041442871
    9. '	ans' → logprob: -11.507369041442871
    10. 'answer' → logprob: -11.882369041442871

Token 336: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.002930514281615615
    2. ' (' → logprob: -6.252930641174316
    3. '((' → logprob: -7.502930641174316
    4. '(' → logprob: -8.002930641174316
    5. '(
' → logprob: -10.377930641174316
    6. '*' → logprob: -10.752930641174316
    7. '(answer' → logprob: -11.252930641174316
    8. '(pow' → logprob: -11.627930641174316
    9. ' *' → logprob: -11.752930641174316
    10. 'ans' → logprob: -12.002930641174316

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20227590203285217
    2. ' *' → logprob: -1.9522758722305298
    3. '*' → logprob: -3.8272759914398193
    4. ' ,' → logprob: -4.20227575302124
    5. ')' → logprob: -6.45227575302124
    6. '+' → logprob: -6.82727575302124
    7. ' +' → logprob: -7.32727575302124
    8. '%' → logprob: -7.95227575302124
    9. ' %' → logprob: -8.077276229858398
    10. ',j' → logprob: -9.202276229858398

Token 338: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.385549783706665
    2. 'j' → logprob: -1.635549783706665
    3. 'MOD' → logprob: -2.385549783706665
    4. '(K' → logprob: -2.635549783706665
    5. '(ans' → logprob: -2.635549783706665
    6. 'c' → logprob: -2.885549783706665
    7. 'ans' → logprob: -3.010549783706665
    8. 'l' → logprob: -3.135549783706665
    9. '(l' → logprob: -3.635549783706665
    10. '(' → logprob: -3.635549783706665

Token 339: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009236076730303466
    2. ')' → logprob: -7.6259236335754395
    3. ' ,' → logprob: -8.000923156738281
    4. '   ' → logprob: -10.000923156738281
    5. '+' → logprob: -10.750923156738281
    6. ',
' → logprob: -11.750923156738281
    7. '-' → logprob: -12.125923156738281
    8. '%' → logprob: -12.750923156738281
    9. '*' → logprob: -13.125923156738281
    10. '       ' → logprob: -13.250923156738281

Token 340: ' c' (ID: 274)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.4289816915988922
    2. ' MOD' → logprob: -1.8039816617965698
    3. 'c' → logprob: -2.3039817810058594
    4. ' c' → logprob: -2.9289817810058594
    5. 'l' → logprob: -4.553981781005859
    6. ' l' → logprob: -4.928981781005859
    7. 'j' → logprob: -6.178981781005859
    8. ' ' → logprob: -6.803981781005859
    9. '2' → logprob: -6.928981781005859
    10. '(M' → logprob: -6.928981781005859

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04549235850572586
    2. ')' → logprob: -3.17049241065979
    3. '+' → logprob: -6.420492172241211
    4. ' ,' → logprob: -8.045492172241211
    5. ')
' → logprob: -8.170492172241211
    6. ' +' → logprob: -9.420492172241211
    7. ' )' → logprob: -9.545492172241211
    8. '*' → logprob: -11.170492172241211
    9. '   ' → logprob: -11.295492172241211
    10. '%' → logprob: -11.420492172241211

Token 342: ' l' (ID: 305)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.3872670531272888
    2. 'l' → logprob: -1.2622671127319336
    3. 'j' → logprob: -4.012267112731934
    4. '2' → logprob: -5.012267112731934
    5. ' MOD' → logprob: -5.387267112731934
    6. 'len' → logprob: -5.762267112731934
    7. ' l' → logprob: -6.137267112731934
    8. 'K' → logprob: -7.387267112731934
    9. '3' → logprob: -7.762267112731934
    10. ')' → logprob: -8.012267112731934

Token 343: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10590565204620361
    2. '+' → logprob: -2.605905532836914
    3. ',' → logprob: -4.480905532836914
    4. ' +' → logprob: -4.730905532836914
    5. ')
' → logprob: -5.105905532836914
    6. ' )' → logprob: -7.980905532836914
    7. '+)' → logprob: -10.980905532836914
    8. ' ,' → logprob: -11.355905532836914
    9. ' )
' → logprob: -11.355905532836914
    10. '   ' → logprob: -11.355905532836914

Token 344: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.035040583461523056
    2. ' MOD' → logprob: -3.4100406169891357
    3. 'len' → logprob: -7.285040378570557
    4. ' len' → logprob: -8.535040855407715
    5. '2' → logprob: -9.035040855407715
    6. ')' → logprob: -9.660040855407715
    7. ' ' → logprob: -10.035040855407715
    8. '3' → logprob: -10.035040855407715
    9. 'j' → logprob: -10.035040855407715
    10. '1' → logprob: -10.160040855407715

Token 345: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1358775794506073
    2. ')' → logprob: -2.1358776092529297
    3. '   ' → logprob: -4.76087760925293
    4. '       ' → logprob: -8.88587760925293
    5. ')
' → logprob: -9.26087760925293
    6. '+' → logprob: -10.01087760925293
    7. ' )
' → logprob: -10.38587760925293
    8. ',' → logprob: -10.88587760925293
    9. ' ' → logprob: -11.88587760925293
    10. ')

' → logprob: -12.38587760925293

Token 346: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014496371150016785
    2. ' return' → logprob: -7.6264495849609375
    3. 'return' → logprob: -8.001449584960938
    4. '    
' → logprob: -8.376449584960938
    5. '
' → logprob: -9.251449584960938
    6. ',' → logprob: -9.376449584960938
    7. ')' → logprob: -9.501449584960938
    8. '<|end|>' → logprob: -10.001449584960938
    9. ' ' → logprob: -10.751449584960938
    10. '  
' → logprob: -11.001449584960938

Token 347: ' v' (ID: 323)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.26579129695892334
    2. ' return' → logprob: -1.8907912969589233
    3. '   ' → logprob: -2.890791416168213
    4. ' 
' → logprob: -4.265791416168213
    5. '
' → logprob: -4.640791416168213
    6. ' ' → logprob: -6.890791416168213
    7. ')
' → logprob: -7.265791416168213
    8. '    
' → logprob: -7.390791416168213
    9. ')' → logprob: -8.390790939331055
    10. '  
' → logprob: -8.640790939331055

Token 348: '[j' (ID: 7895)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2813543379306793
    2. '[j' → logprob: -1.531354308128357
    3. '[x' → logprob: -3.6563544273376465
    4. '[v' → logprob: -6.5313544273376465
    5. '[X' → logprob: -7.2813544273376465
    6. '[i' → logprob: -7.5313544273376465
    7. '[l' → logprob: -8.531353950500488
    8. '[...]' → logprob: -9.406353950500488
    9. '[:]' → logprob: -9.906353950500488
    10. '[c' → logprob: -10.281353950500488

Token 349: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.9424725148128346e-05
    2. ']=' → logprob: -10.000049591064453
    3. ' ]' → logprob: -12.500049591064453
    4. '=' → logprob: -15.875049591064453
    5. '=True' → logprob: -17.250049591064453
    6. 'True' → logprob: -17.500049591064453
    7. ']
' → logprob: -18.125049591064453
    8. ' =' → logprob: -18.500049591064453
    9. '[' → logprob: -18.625049591064453
    10. ' True' → logprob: -19.375049591064453

Token 350: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519896924495697
    2. ' =' → logprob: -1.501989722251892
    3. '=True' → logprob: -10.251989364624023
    4. '[' → logprob: -10.626989364624023
    5. ']' → logprob: -14.501989364624023
    6. ' ' → logprob: -15.126989364624023
    7. ']=' → logprob: -15.751989364624023
    8. '＝' → logprob: -16.751989364624023
    9. '=False' → logprob: -16.876989364624023
    10. '=
' → logprob: -17.126989364624023

Token 351: ' mark' (ID: 1983)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.000553151941858232
    2. ' True' → logprob: -7.500553131103516
    3. '1' → logprob: -16.500553131103516
    4. 'False' → logprob: -17.125553131103516
    5. '(True' → logprob: -19.250553131103516
    6. '=True' → logprob: -19.625553131103516
    7. 'Tr' → logprob: -20.375553131103516
    8. '   ' → logprob: -20.500553131103516
    9. '	' → logprob: -20.625553131103516
    10. ' ' → logprob: -20.625553131103516

Token 352: '_' (ID: 62)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.16022950410842896
    2. ' True' → logprob: -1.9102294445037842
    3. '=True' → logprob: -12.660229682922363
    4. '(True' → logprob: -13.285229682922363
    5. '[' → logprob: -14.660229682922363
    6. '.True' → logprob: -18.285228729248047
    7. '_true' → logprob: -18.410228729248047
    8. '
' → logprob: -18.660228729248047
    9. ' ' → logprob: -18.910228729248047
    10. ' ' → logprob: -19.410228729248047

Token 353: 'visited' (ID: 52453)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00020401719666551799
    2. ' True' → logprob: -8.500204086303711
    3. 'true' → logprob: -15.625204086303711
    4. '=True' → logprob: -16.37520408630371
    5. '_true' → logprob: -16.62520408630371
    6. 'ed' → logprob: -16.87520408630371
    7. '(True' → logprob: -16.87520408630371
    8. '[' → logprob: -17.37520408630371
    9. 'visited' → logprob: -17.50020408630371
    10. 'False' → logprob: -18.00020408630371

Token 354: '()
' (ID: 1234)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.015107996761798859
    2. ' True' → logprob: -4.265108108520508
    3. '(True' → logprob: -7.015108108520508
    4. '=True' → logprob: -10.390108108520508
    5. '[' → logprob: -11.140108108520508
    6. '1' → logprob: -15.640108108520508
    7. '.True' → logprob: -16.140108108520508
    8. '_true' → logprob: -16.515108108520508
    9. ' =' → logprob: -16.640108108520508
    10. '(' → logprob: -16.890108108520508

Token 355: '   ' (ID: 271)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3276483416557312
    2. ' True' → logprob: -1.327648401260376
    3. 'False' → logprob: -4.452648162841797
    4. '(True' → logprob: -6.327648162841797
    5. ' False' → logprob: -7.702648162841797
    6. '=True' → logprob: -7.952648162841797
    7. '(False' → logprob: -10.702648162841797
    8. '1' → logprob: -11.452648162841797
    9. '   ' → logprob: -12.202648162841797
    10. '0' → logprob: -13.452648162841797

Token 356: ' return' (ID: 622)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.029318563640117645
    2. ' True' → logprob: -3.6543185710906982
    3. '1' → logprob: -6.154318332672119
    4. 'False' → logprob: -7.154318332672119
    5. '(True' → logprob: -10.404318809509277
    6. '=True' → logprob: -10.654318809509277
    7. '   ' → logprob: -10.904318809509277
    8. '2' → logprob: -11.529318809509277
    9. '0' → logprob: -11.529318809509277
    10. ' ' → logprob: -12.029318809509277

Token 357: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.008626633323729038
    2. ' ans' → logprob: -4.758626461029053
    3. '(ans' → logprob: -11.383626937866211
    4. '	ans' → logprob: -14.133626937866211
    5. '_ans' → logprob: -18.13362693786621
    6. 'answer' → logprob: -18.50862693786621
    7. ' ' → logprob: -19.38362693786621
    8. 'ann' → logprob: -19.50862693786621
    9. '   ' → logprob: -20.25862693786621
    10. '
' → logprob: -20.75862693786621

Token 358: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03641044348478317
    2. 'def' → logprob: -3.911410331726074
    3. '(' → logprob: -5.161410331726074
    4. '()
' → logprob: -5.536410331726074
    5. '(True' → logprob: -6.661410331726074
    6. '1' → logprob: -6.786410331726074
    7. '0' → logprob: -7.286410331726074
    8. 'True' → logprob: -7.786410331726074
    9. '<|end|>' → logprob: -8.036410331726074
    10. '
' → logprob: -8.036410331726074

Token 359: 'def' (ID: 1314)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.100886344909668
    2. '0' → logprob: -1.475886344909668
    3. 'def' → logprob: -1.725886344909668
    4. 'True' → logprob: -1.850886344909668
    5. '1' → logprob: -2.725886344909668
    6. '()' → logprob: -3.600886344909668
    7. 'lambda' → logprob: -5.100886344909668
    8. '(' → logprob: -6.850886344909668
    9. '(True' → logprob: -6.850886344909668
    10. 'None' → logprob: -7.475886344909668

Token 360: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.918610692024231
    2. 'mark' → logprob: -1.043610692024231
    3. ' update' → logprob: -2.0436105728149414
    4. ' mark' → logprob: -2.1686105728149414
    5. 'main' → logprob: -5.793610572814941
    6. ' main' → logprob: -6.793610572814941
    7. 'read' → logprob: -8.418610572814941
    8. 'solve' → logprob: -9.293610572814941
    9. 'get' → logprob: -10.418610572814941
    10. ' read' → logprob: -10.418610572814941

Token 361: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -7.600714161526412e-05
    2. 'answer' → logprob: -10.125076293945312
    3. '_' → logprob: -10.750076293945312
    4. '_ans' → logprob: -11.375076293945312
    5. 'Answer' → logprob: -13.875076293945312
    6. ' _' → logprob: -14.000076293945312
    7. '_answers' → logprob: -15.125076293945312
    8. '_question' → logprob: -15.875076293945312
    9. '_an' → logprob: -16.500076293945312
    10. 'def' → logprob: -16.500076293945312

Token 362: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00017505438881926239
    2. '(' → logprob: -8.750175476074219
    3. '(answer' → logprob: -11.125175476074219
    4. ' (' → logprob: -13.500175476074219
    5. '_ans' → logprob: -15.375175476074219
    6. '(
' → logprob: -17.25017547607422
    7. '(a' → logprob: -17.50017547607422
    8. '	ans' → logprob: -18.00017547607422
    9. ' ans' → logprob: -18.50017547607422
    10. '(acc' → logprob: -18.75017547607422

Token 363: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016599490481894463
    2. ' ,' → logprob: -8.750165939331055
    3. ',K' → logprob: -11.875165939331055
    4. ' ans' → logprob: -16.125165939331055
    5. ',k' → logprob: -16.500165939331055
    6. ',int' → logprob: -16.750165939331055
    7. '‌,' → logprob: -17.125165939331055
    8. ',
' → logprob: -17.500165939331055
    9. '<|end|>' → logprob: -17.500165939331055
    10. '_,' → logprob: -17.625165939331055

Token 364: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.474155068397522
    2. 'K' → logprob: -0.974155068397522
    3. ' ' → logprob: -9.97415542602539
    4. ')' → logprob: -11.84915542602539
    5. ',' → logprob: -11.97415542602539
    6. '   ' → logprob: -13.22415542602539
    7. 'def' → logprob: -13.22415542602539
    8. '    ' → logprob: -13.47415542602539
    9. '	K' → logprob: -13.47415542602539
    10. '  ' → logprob: -13.53665542602539

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014036978245712817
    2. ' ,' → logprob: -8.875140190124512
    3. ',
' → logprob: -15.750140190124512
    4. ',c' → logprob: -16.000141143798828
    5. ',int' → logprob: -16.875141143798828
    6. ',k' → logprob: -17.000141143798828
    7. ',K' → logprob: -17.500141143798828
    8. 'def' → logprob: -17.750141143798828
    9. '‌,' → logprob: -18.000141143798828
    10. ',

' → logprob: -18.000141143798828

Token 366: ' c' (ID: 274)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.38635143637657166
    2. ' MOD' → logprob: -1.261351466178894
    3. ' c' → logprob: -3.8863513469696045
    4. 'c' → logprob: -4.261351585388184
    5. ' ' → logprob: -7.011351585388184
    6. '2' → logprob: -8.011351585388184
    7. ' K' → logprob: -8.511351585388184
    8. ' ans' → logprob: -8.636351585388184
    9. '1' → logprob: -9.386351585388184
    10. 'K' → logprob: -9.511351585388184

Token 367: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.64839569455944e-05
    2. ' ,' → logprob: -9.500076293945312
    3. ',
' → logprob: -14.000076293945312
    4. ',int' → logprob: -15.500076293945312
    5. '+,' → logprob: -16.625076293945312
    6. ',c' → logprob: -16.750076293945312
    7. '   ' → logprob: -16.750076293945312
    8. ',

' → logprob: -17.000076293945312
    9. '_,' → logprob: -17.250076293945312
    10. ',k' → logprob: -17.500076293945312

Token 368: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4287688434123993
    2. ' l' → logprob: -1.0537688732147217
    3. ' ' → logprob: -11.4287691116333
    4. 'i' → logprob: -11.8037691116333
    5. '```' → logprob: -12.3037691116333
    6. 'index' → logprob: -12.4287691116333
    7. '   ' → logprob: -12.5537691116333
    8. ' i' → logprob: -12.6787691116333
    9. 'x' → logprob: -12.9287691116333
    10. '_l' → logprob: -13.1787691116333

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.840432565193623e-05
    2. ' ,' → logprob: -9.375088691711426
    3. ',
' → logprob: -13.125088691711426
    4. '_,' → logprob: -14.625088691711426
    5. '   ' → logprob: -14.750088691711426
    6. ',

' → logprob: -16.00008773803711
    7. ' ' → logprob: -16.62508773803711
    8. '1' → logprob: -16.87508773803711
    9. '+,' → logprob: -17.06258773803711
    10. ',
' → logprob: -17.12508773803711

Token 370: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.4300521910190582
    2. ' MOD' → logprob: -1.0550521612167358
    3. ' ' → logprob: -6.930052280426025
    4. '   ' → logprob: -9.055051803588867
    5. ')' → logprob: -10.055051803588867
    6. '_MOD' → logprob: -10.180051803588867
    7. '  ' → logprob: -10.680051803588867
    8. ' M' → logprob: -11.305051803588867
    9. ' K' → logprob: -11.305051803588867
    10. '    ' → logprob: -11.305051803588867

Token 371: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002767786616459489
    2. ',' → logprob: -6.127767562866211
    3. '):
' → logprob: -7.627767562866211
    4. ' ):' → logprob: -10.002767562866211
    5. ')' → logprob: -10.127767562866211
    6. ':' → logprob: -12.502767562866211
    7. '   ' → logprob: -12.752767562866211
    8. '):
' → logprob: -13.252767562866211
    9. '):

' → logprob: -14.252767562866211
    10. ' ,' → logprob: -15.002767562866211

Token 372: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6014458537101746
    2. 'return' → logprob: -1.8514459133148193
    3. '(ans' → logprob: -1.9764459133148193
    4. ' return' → logprob: -2.1014459133148193
    5. ' ans' → logprob: -3.4764459133148193
    6. 'ans' → logprob: -6.22644567489624
    7. '	ans' → logprob: -7.72644567489624
    8. ' (' → logprob: -7.97644567489624
    9. '	return' → logprob: -8.726446151733398
    10. '(' → logprob: -9.226446151733398

Token 373: ' return' (ID: 622)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.1058417484164238
    2. ' ans' → logprob: -2.730841636657715
    3. 'ans' → logprob: -3.480841636657715
    4. ' (' → logprob: -6.230841636657715
    5. 'return' (adapté à ' return') → logprob: -6.355841636657715
    6. ' return' → logprob: -7.480841636657715
    7. '   ' → logprob: -9.105841636657715
    8. '(' → logprob: -9.855841636657715
    9. '	ans' → logprob: -10.855841636657715
    10. 'pow' → logprob: -11.855841636657715

Token 374: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00495076272636652
    2. ' (' → logprob: -5.879951000213623
    3. ' ans' → logprob: -6.629951000213623
    4. 'ans' → logprob: -7.129951000213623
    5. '(' → logprob: -11.754950523376465
    6. '(answer' → logprob: -12.504950523376465
    7. '   ' → logprob: -12.879950523376465
    8. '	ans' → logprob: -13.004950523376465
    9. '(an' → logprob: -13.879950523376465
    10. '_ans' → logprob: -14.004950523376465

Token 375: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.005415181163698435
    2. '(ans' → logprob: -5.255414962768555
    3. ' ans' → logprob: -8.630414962768555
    4. '	ans' → logprob: -13.505414962768555
    5. 'answer' → logprob: -14.255414962768555
    6. '_ans' → logprob: -14.755414962768555
    7. 'Ans' → logprob: -15.880414962768555
    8. 'ANS' → logprob: -16.755414962768555
    9. '   ' → logprob: -16.755414962768555
    10. ' (' → logprob: -17.005414962768555

Token 376: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04301539808511734
    2. '*' → logprob: -3.168015480041504
    3. ' ' → logprob: -12.043015480041504
    4. '*K' → logprob: -12.418015480041504
    5. ' ' → logprob: -13.043015480041504
    6. '*(' → logprob: -13.418015480041504
    7. ' *
' → logprob: -14.418015480041504
    8. ')' → logprob: -14.918015480041504
    9. '+' → logprob: -15.043015480041504
    10. ' +' → logprob: -15.418015480041504

Token 377: ' (' (ID: 350)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.6550694704055786
    2. 'K' → logprob: -0.7800694704055786
    3. ' (' → logprob: -4.530069351196289
    4. ' K' → logprob: -5.905069351196289
    5. 'pow' → logprob: -6.030069351196289
    6. '((' → logprob: -6.155069351196289
    7. '(' → logprob: -6.405069351196289
    8. '(c' → logprob: -6.905069351196289
    9. 'c' → logprob: -7.155069351196289
    10. '(pow' → logprob: -8.780069351196289

Token 378: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.03403671458363533
    2. '(K' → logprob: -3.409036636352539
    3. ' K' → logprob: -8.784036636352539
    4. 'c' → logprob: -9.409036636352539
    5. 'pow' → logprob: -10.159036636352539
    6. ' (' → logprob: -10.409036636352539
    7. 'max' → logprob: -10.409036636352539
    8. '(' → logprob: -10.534036636352539
    9. '(c' → logprob: -11.659036636352539
    10. '((' → logprob: -11.909036636352539

Token 379: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.43538910150527954
    2. '-' → logprob: -1.0603890419006348
    3. '-c' → logprob: -5.060389041900635
    4. ' ' → logprob: -8.685389518737793
    5. ' c' → logprob: -9.935389518737793
    6. '-(' → logprob: -10.810389518737793
    7. '  ' → logprob: -11.185389518737793
    8. 'c' → logprob: -11.310389518737793
    9. '-
' → logprob: -11.560389518737793
    10. '   ' → logprob: -11.935389518737793

Token 380: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.13835260272026062
    2. '(c' → logprob: -2.388352632522583
    3. '1' → logprob: -4.138352394104004
    4. ' c' → logprob: -4.513352394104004
    5. ' (' → logprob: -4.763352394104004
    6. '(' → logprob: -7.013352394104004
    7. '2' → logprob: -8.013352394104004
    8. 'l' → logprob: -8.388352394104004
    9. ' ' → logprob: -8.763352394104004
    10. '(l' → logprob: -8.888352394104004

Token 381: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.022660737857222557
    2. '-' → logprob: -3.897660732269287
    3. ' +' → logprob: -6.272660732269287
    4. '+' → logprob: -8.522661209106445
    5. ' ' → logprob: -11.147661209106445
    6. '+l' → logprob: -11.772661209106445
    7. ')' → logprob: -12.772661209106445
    8. '-l' → logprob: -12.897661209106445
    9. ' l' → logprob: -13.147661209106445
    10. 'l' → logprob: -15.397661209106445

Token 382: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0322890467941761
    2. '1' → logprob: -3.5322890281677246
    3. ' l' → logprob: -6.032289028167725
    4. '
' → logprob: -9.407289505004883
    5. ' ' → logprob: -10.657289505004883
    6. ')' → logprob: -11.407289505004883
    7. '   ' → logprob: -12.407289505004883
    8. '2' → logprob: -13.032289505004883
    9. '
' → logprob: -13.032289505004883
    10. '	l' → logprob: -13.969789505004883

Token 383: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3156105577945709
    2. ')' → logprob: -1.3156105279922485
    3. ' ))' → logprob: -6.315610408782959
    4. ' )' → logprob: -7.940610408782959
    5. ')%' → logprob: -9.065610885620117
    6. '+' → logprob: -10.690610885620117
    7. ' +' → logprob: -10.690610885620117
    8. '%' → logprob: -11.940610885620117
    9. ')
' → logprob: -12.190610885620117
    10. '1' → logprob: -12.690610885620117

Token 384: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.47410863637924194
    2. '%' → logprob: -0.9741086363792419
    3. ')' → logprob: -10.474108695983887
    4. ')%' → logprob: -12.724108695983887
    5. ' ' → logprob: -16.09910774230957
    6. ' )' → logprob: -16.59910774230957
    7. '%A' → logprob: -17.22410774230957
    8. '%D' → logprob: -17.47410774230957
    9. ' ' → logprob: -17.59910774230957
    10. '%B' → logprob: -17.97410774230957

Token 385: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.011047935113310814
    2. ' MOD' → logprob: -4.511047840118408
    3. '_MOD' → logprob: -17.13604736328125
    4. 'MO' → logprob: -17.76104736328125
    5. '.MOD' → logprob: -18.51104736328125
    6. '(M' → logprob: -19.38604736328125
    7. 'M' → logprob: -20.76104736328125
    8. 'MODE' → logprob: -20.88604736328125
    9. ' ' → logprob: -21.01104736328125
    10. 'mod' → logprob: -21.01104736328125

Token 386: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 387: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 388: ' mark' (ID: 1983)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.7950431108474731
    2. ' main' → logprob: -0.9200431108474731
    3. 'mark' → logprob: -2.4200429916381836
    4. ' mark' → logprob: -2.9200429916381836
    5. 'def' → logprob: -5.795042991638184
    6. 'solve' → logprob: -6.545042991638184
    7. ' solve' → logprob: -7.045042991638184
    8. ' def' → logprob: -7.420042991638184
    9. 'm' → logprob: -8.795042991638184
    10. ' ' → logprob: -9.170042991638184

Token 389: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.128163257315464e-07
    2. 'visited' → logprob: -16.375
    3. '_used' → logprob: -17.625
    4. '_completed' → logprob: -17.75
    5. '_un' → logprob: -17.875
    6. '_v' → logprob: -18.0
    7. ' _' → logprob: -18.375
    8. '_visible' → logprob: -18.5
    9. '_initialized' → logprob: -18.5
    10. '_vis' → logprob: -18.875

Token 390: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.07571199536323547
    2. '_' → logprob: -2.825711965560913
    3. 'True' → logprob: -4.325712203979492
    4. 'False' → logprob: -8.450712203979492
    5. 'Visited' → logprob: -8.700712203979492
    6. ' visited' → logprob: -10.450712203979492
    7. '_true' → logprob: -11.950712203979492
    8. ' True' → logprob: -12.325712203979492
    9. 'def' → logprob: -13.200712203979492
    10. 'v' → logprob: -13.950712203979492

Token 391: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14409656822681427
    2. '():' → logprob: -2.144096612930298
    3. '=' → logprob: -4.394096374511719
    4. '():
' → logprob: -5.644096374511719
    5. '(' → logprob: -8.144096374511719
    6. ' =' → logprob: -8.394096374511719
    7. ' ()' → logprob: -8.519096374511719
    8. '=True' → logprob: -9.394096374511719
    9. '(True' → logprob: -9.644096374511719
    10. '()[' → logprob: -10.144096374511719

Token 392: '   ' (ID: 271)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -2.7848862373502925e-05
    2. ' True' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.125028610229492
    4. '=True' → logprob: -16.375028610229492
    5. 'return' → logprob: -18.000028610229492
    6. '(True' → logprob: -18.125028610229492
    7. '1' → logprob: -20.125028610229492
    8. '
' → logprob: -21.000028610229492
    9. 'False' → logprob: -21.000028610229492
    10. 'TRUE' → logprob: -21.500028610229492

Token 393: ' return' (ID: 622)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -6.2729995988775045e-06
    2. ' True' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.3750057220459
    4. 'return' (adapté à ' return') → logprob: -18.5000057220459
    5. '=True' → logprob: -19.5000057220459
    6. '(True' → logprob: -19.7500057220459
    7. 'False' → logprob: -21.0000057220459
    8. 'true' → logprob: -21.6250057220459
    9. '1' → logprob: -22.3750057220459
    10. 'TRUE' → logprob: -23.0000057220459

Token 394: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.7697225252486533e-06
    2. ' True' → logprob: -12.500003814697266
    3. '(True' → logprob: -19.500003814697266
    4. '   ' → logprob: -20.000003814697266
    5. '=True' → logprob: -20.500003814697266
    6. 'False' → logprob: -21.375003814697266
    7. 'TRUE' → logprob: -22.250003814697266
    8. 'true' → logprob: -22.625003814697266
    9. '1' → logprob: -23.125003814697266
    10. '[' → logprob: -23.750003814697266

Token 395: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 396: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020572954788804054
    2. '<|end|>' → logprob: -4.145573139190674
    3. '```' → logprob: -6.020573139190674
    4. ')' → logprob: -8.020572662353516
    5. ' ' → logprob: -8.520572662353516
    6. 'if' → logprob: -8.645572662353516
    7. '...' → logprob: -8.770572662353516
    8. 'v' → logprob: -8.895572662353516
    9. '[' → logprob: -8.895572662353516
    10. '()' → logprob: -8.895572662353516

Token 397: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.11319155246019363
    2. 'main' → logprob: -2.238191604614258
    3. ' solve' → logprob: -8.613191604614258
    4. ' dfs' → logprob: -9.363191604614258
    5. ' bfs' → logprob: -9.988191604614258
    6. 'solve' → logprob: -10.613191604614258
    7. 'dfs' → logprob: -11.113191604614258
    8. 'def' → logprob: -12.863191604614258
    9. ' run' → logprob: -12.863191604614258
    10. 'b' → logprob: -13.238191604614258

Token 398: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00018327576981391758
    2. '():
' → logprob: -8.75018310546875
    3. '_' → logprob: -11.00018310546875
    4. ' ():' → logprob: -12.37518310546875
    5. '()' → logprob: -12.62518310546875
    6. '():
' → logprob: -14.87518310546875
    7. '(' → logprob: -16.25018310546875
    8. '_:' → logprob: -17.12518310546875
    9. 'def' → logprob: -18.00018310546875
    10. '():

' → logprob: -18.37518310546875

Token 399: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01459428109228611
    2. 'N' → logprob: -4.264594078063965
    3. ' N' → logprob: -7.764594078063965
    4. '	N' → logprob: -12.764594078063965
    5. '(N' → logprob: -13.389594078063965
    6. ',N' → logprob: -14.639594078063965
    7. 'import' → logprob: -14.889594078063965
    8. 'def' → logprob: -15.139594078063965
    9. 'n' → logprob: -15.639594078063965
    10. '()' → logprob: -15.764594078063965

Token 400: ' MOD' (ID: 32868)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0002469158498570323
    2. '   ' → logprob: -8.62524700164795
    3. ' N' → logprob: -9.62524700164795
    4. 'if' → logprob: -15.12524700164795
    5. 'def' → logprob: -15.12524700164795
    6. '	N' → logprob: -15.50024700164795
    7. ' ' → logprob: -16.125246047973633
    8. '(N' → logprob: -16.125246047973633
    9. '    
' → logprob: -16.250246047973633
    10. '```' → logprob: -16.750246047973633

Token 401: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005930693820118904
    2. '=' → logprob: -5.1309309005737305
    3. ',' → logprob: -13.75593090057373
    4. ' =
' → logprob: -14.38093090057373
    5. ' ' → logprob: -15.25593090057373
    6. ' =
' → logprob: -16.630929946899414
    7. '   ' → logprob: -17.005929946899414
    8. '  ' → logprob: -17.380929946899414
    9. ' ,' → logprob: -17.880929946899414
    10. ' ' → logprob: -18.005929946899414

Token 402: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004112473223358393
    2. '100' → logprob: -5.504112243652344
    3. ' ' → logprob: -10.754112243652344
    4. '998' → logprob: -11.504112243652344
    5. 'int' → logprob: -13.754112243652344
    6. '   ' → logprob: -14.629112243652344
    7. '1' → logprob: -14.629112243652344
    8. '(' → logprob: -14.754112243652344
    9. 'pow' → logprob: -15.879112243652344
    10. '１０' → logprob: -17.004112243652344

Token 403: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0024808887392282486
    2. '100' → logprob: -6.002480983734131
    3. 'pow' → logprob: -13.127480506896973
    4. '998' → logprob: -13.627480506896973
    5. 'int' → logprob: -13.752480506896973
    6. '(' → logprob: -14.752480506896973
    7. ' ' → logprob: -15.127480506896973
    8. '1' → logprob: -16.12748146057129
    9. '１０' → logprob: -16.25248146057129
    10. '   ' → logprob: -17.50248146057129

Token 404: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0002286886883666739
    2. '**' → logprob: -8.750228881835938
    3. '09' → logprob: -9.625228881835938
    4. ' ' → logprob: -13.000228881835938
    5. '```' → logprob: -13.500228881835938
    6. '_' → logprob: -15.375228881835938
    7. '7' → logprob: -15.750228881835938
    8. '   ' → logprob: -16.375228881835938
    9. '+' → logprob: -17.250228881835938
    10. '000' → logprob: -17.375228881835938

Token 405: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.704273118884885e-07
    2. '09' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.625
    4. '+' → logprob: -18.375
    5. '
' → logprob: -18.75
    6. ' ' → logprob: -18.75
    7. '９' → logprob: -19.125
    8. '

' → logprob: -19.5
    9. '```' → logprob: -19.5
    10. '_' → logprob: -19.625

Token 406: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -15.125
    3. '+' → logprob: -18.125
    4. '９' → logprob: -18.5
    5. '8' → logprob: -19.125
    6. '10' → logprob: -19.25
    7. '   ' → logprob: -19.5
    8. '

' → logprob: -19.75
    9. '18' → logprob: -19.75
    10. '```' → logprob: -19.75

Token 407: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001441303757019341
    2. '7' → logprob: -6.626441478729248
    3. ' +' → logprob: -9.12644100189209
    4. '+
' → logprob: -12.62644100189209
    5. '```' → logprob: -13.00144100189209
    6. '   ' → logprob: -15.12644100189209
    7. '9' → logprob: -15.12644100189209
    8. '
' → logprob: -15.87644100189209
    9. '＋' → logprob: -16.251441955566406
    10. 'plus' → logprob: -16.376441955566406

Token 408: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '07' → logprob: -20.5
    4. '   ' → logprob: -21.0
    5. '```' → logprob: -21.375
    6. '
' → logprob: -21.75
    7. '

' → logprob: -21.75
    8. '9' → logprob: -22.125
    9. '+' → logprob: -22.25
    10. '７' → logprob: -23.125

Token 409: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -19.5
    3. '07' → logprob: -21.125
    4. '
' → logprob: -21.25
    5. '

' → logprob: -21.25
    6. '   ' → logprob: -21.5
    7. '```' → logprob: -22.0
    8. '9' → logprob: -22.625
    9. '７' → logprob: -23.0
    10. '+' → logprob: -23.25

Token 410: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14684487879276276
    2. '   ' → logprob: -2.0218448638916016
    3. '    
' → logprob: -5.771844863891602
    4. '
' → logprob: -8.521844863891602
    5. '```' → logprob: -8.521844863891602
    6. '  
' → logprob: -9.021844863891602
    7. '<|end|>' → logprob: -9.021844863891602
    8. ' 
' → logprob: -9.021844863891602
    9. ',' → logprob: -10.021844863891602
    10. ',
' → logprob: -10.146844863891602

Token 411: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05509846657514572
    2. 'N' → logprob: -2.930098533630371
    3. ' N' → logprob: -9.180098533630371
    4. ',' → logprob: -9.680098533630371
    5. '    
' → logprob: -10.680098533630371
    6. '
' → logprob: -11.680098533630371
    7. '	N' → logprob: -12.180098533630371
    8. 'def' → logprob: -12.430098533630371
    9. 'n' → logprob: -12.805098533630371
    10. ',N' → logprob: -13.055098533630371

Token 412: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.0005557744298130274
    2. '   ' → logprob: -7.500555992126465
    3. ' N' → logprob: -12.875555992126465
    4. 'if' → logprob: -15.625555992126465
    5. 'def' → logprob: -17.75055503845215
    6. '	N' → logprob: -17.87555503845215
    7. '  ' → logprob: -18.75055503845215
    8. '    
' → logprob: -18.87555503845215
    9. 'n' → logprob: -18.87555503845215
    10. ' ' → logprob: -19.37555503845215

Token 413: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011784763046307489
    2. ',K' → logprob: -9.250118255615234
    3. ' ,' → logprob: -10.875118255615234
    4. '=' → logprob: -13.000118255615234
    5. ',
' → logprob: -15.125118255615234
    6. ',k' → logprob: -16.125118255615234
    7. '‌,' → logprob: -16.625118255615234
    8. 'K' → logprob: -17.375118255615234
    9. ' =' → logprob: -17.375118255615234
    10. '<|end|>' → logprob: -17.625118255615234

Token 414: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.5759403705596924
    2. ' K' → logprob: -0.8259403705596924
    3. ' ' → logprob: -14.700940132141113
    4. ',K' → logprob: -15.450940132141113
    5. '<|end|>' → logprob: -15.950940132141113
    6. ',' → logprob: -16.20094108581543
    7. ' 
' → logprob: -17.07594108581543
    8. '	K' → logprob: -17.32594108581543
    9. '  ' → logprob: -17.70094108581543
    10. '   ' → logprob: -17.95094108581543

Token 415: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133074641227722
    2. ' =' → logprob: -1.313307523727417
    3. ',' → logprob: -10.063307762145996
    4. '   ' → logprob: -13.813307762145996
    5. '=input' → logprob: -14.188307762145996
    6. ' ' → logprob: -15.313307762145996
    7. ')' → logprob: -15.813307762145996
    8. '<|end|>' → logprob: -16.06330680847168
    9. '=N' → logprob: -16.18830680847168
    10. ' =
' → logprob: -16.43830680847168

Token 416: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.01814994215965271
    2. 'read' → logprob: -4.0181498527526855
    3. '	read' → logprob: -16.643150329589844
    4. '(read' → logprob: -19.893150329589844
    5. ' map' → logprob: -20.393150329589844
    6. '_read' → logprob: -20.643150329589844
    7. '.read' → logprob: -22.268150329589844
    8. '   ' → logprob: -22.393150329589844
    9. ' ' → logprob: -22.643150329589844
    10. ' reading' → logprob: -22.768150329589844

Token 417: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.001222966704517603
    2. '_' → logprob: -6.876223087310791
    3. '_inputs' → logprob: -9.501222610473633
    4. '_line' → logprob: -10.126222610473633
    5. '()' → logprob: -10.751222610473633
    6. ' _' → logprob: -11.376222610473633
    7. '_space' → logprob: -11.626222610473633
    8. '_in' → logprob: -11.751222610473633
    9. '_output' → logprob: -12.001222610473633
    10. 'input' → logprob: -13.001222610473633

Token 418: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4428769648075104
    2. '   ' → logprob: -1.067876935005188
    3. '()
' → logprob: -5.317876815795898
    4. '()' → logprob: -5.817876815795898
    5. '    
' → logprob: -5.817876815795898
    6. '<|end|>' → logprob: -6.567876815795898
    7. '```' → logprob: -6.942876815795898
    8. '  
' → logprob: -8.317876815795898
    9. '
' → logprob: -8.817876815795898
    10. ')' → logprob: -9.067876815795898

Token 419: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31888872385025024
    2. '   ' → logprob: -1.3188886642456055
    3. ' a' → logprob: -5.1938886642456055
    4. ' ' → logprob: -11.068888664245605
    5. 'G' → logprob: -11.193888664245605
    6. '	a' → logprob: -11.818888664245605
    7. '  ' → logprob: -11.943888664245605
    8. 'N' → logprob: -12.568888664245605
    9. '```' → logprob: -12.818888664245605
    10. '    ' → logprob: -13.568888664245605

Token 420: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.00010127831774298102
    2. ' a' → logprob: -9.875101089477539
    3. '   ' → logprob: -10.000101089477539
    4. 'if' → logprob: -12.375101089477539
    5. 'v' → logprob: -16.37510108947754
    6. 'G' → logprob: -16.87510108947754
    7. ' if' → logprob: -17.25010108947754
    8. '(a' → logprob: -17.87510108947754
    9. '	a' → logprob: -18.37510108947754
    10. '    
' → logprob: -18.50010108947754

Token 421: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.491498531133402e-06
    2. ',b' → logprob: -12.000009536743164
    3. ' ,' → logprob: -12.875009536743164
    4. 'b' → logprob: -14.625009536743164
    5. '_,' → logprob: -16.875009536743164
    6. '‌,' → logprob: -17.125009536743164
    7. '=' → logprob: -17.875009536743164
    8. ',
' → logprob: -18.250009536743164
    9. 's' → logprob: -18.375009536743164
    10. 'a' → logprob: -18.625009536743164

Token 422: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0028048718813806772
    2. ' b' → logprob: -5.877804756164551
    3. '<|end|>' → logprob: -17.377805709838867
    4. '   ' → logprob: -18.377805709838867
    5. '=' → logprob: -18.752805709838867
    6. '_b' → logprob: -19.377805709838867
    7. '	b' → logprob: -19.502805709838867
    8. ' ' → logprob: -19.627805709838867
    9. ' =' → logprob: -19.627805709838867
    10. 'N' → logprob: -19.627805709838867

Token 423: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196802109479904
    2. ' =' → logprob: -2.8119680881500244
    3. ')' → logprob: -14.811967849731445
    4. ',' → logprob: -17.436967849731445
    5. '=

' → logprob: -17.436967849731445
    6. ' ' → logprob: -17.561967849731445
    7. '=
' → logprob: -18.061967849731445
    8. '   ' → logprob: -18.811967849731445
    9. '=create' → logprob: -19.311967849731445
    10. '<|end|>' → logprob: -19.436967849731445

Token 424: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.07888978719711304
    2. ' read' → logprob: -2.578889846801758
    3. '	read' → logprob: -17.578889846801758
    4. '(read' → logprob: -18.203889846801758
    5. ' ' → logprob: -19.203889846801758
    6. '   ' → logprob: -19.703889846801758
    7. '_read' → logprob: -19.828889846801758
    8. '.read' → logprob: -20.703889846801758
    9. '
' → logprob: -21.828889846801758
    10. '  ' → logprob: -22.078889846801758

Token 425: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.00040183294913731515
    2. '_input' → logprob: -8.375401496887207
    3. 'edges' → logprob: -9.625401496887207
    4. '(N' → logprob: -9.750401496887207
    5. '_nodes' → logprob: -11.250401496887207
    6. 'input' → logprob: -11.250401496887207
    7. 's' → logprob: -12.875401496887207
    8. 'split' → logprob: -12.875401496887207
    9. '_vertices' → logprob: -13.000401496887207
    10. '_(' → logprob: -13.000401496887207

Token 426: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.081584716506768e-05
    2. '(' → logprob: -11.125020980834961
    3. ' (' → logprob: -12.250020980834961
    4. 'N' → logprob: -14.875020980834961
    5. '   ' → logprob: -15.000020980834961
    6. '(
' → logprob: -15.250020980834961
    7. ',' → logprob: -16.12502098083496
    8. 'def' → logprob: -16.62502098083496
    9. '```' → logprob: -17.00002098083496
    10. '=' → logprob: -17.62502098083496

Token 427: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004384174826554954
    2. ')
' → logprob: -7.750438213348389
    3. '   ' → logprob: -12.125438690185547
    4. '())' → logprob: -14.125438690185547
    5. ' )' → logprob: -14.375438690185547
    6. '()' → logprob: -14.375438690185547
    7. ')
' → logprob: -16.125438690185547
    8. ')

' → logprob: -16.750438690185547
    9. '))' → logprob: -16.875438690185547
    10. ')`' → logprob: -17.125438690185547

Token 428: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4368945062160492
    2. 'G' → logprob: -1.0618945360183716
    3. ' G' → logprob: -4.811894416809082
    4. '```' → logprob: -11.311894416809082
    5. '<|end|>' → logprob: -11.811894416809082
    6. '  ' → logprob: -13.686894416809082
    7. '	G' → logprob: -13.811894416809082
    8. ' ' → logprob: -13.936894416809082
    9. '
' → logprob: -14.061894416809082
    10. '#' → logprob: -14.436894416809082

Token 429: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.0053733219392597675
    2. ' G' → logprob: -5.255373477935791
    3. '   ' → logprob: -8.880373001098633
    4. '```' → logprob: -15.255373001098633
    5. ' ' → logprob: -16.755373001098633
    6. '  ' → logprob: -16.755373001098633
    7. '	G' → logprob: -17.130373001098633
    8. '    ' → logprob: -17.630373001098633
    9. 'v' → logprob: -17.755373001098633
    10. '`' → logprob: -18.380373001098633

Token 430: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407805919647217
    2. ' =' → logprob: -0.9740780591964722
    3. ',' → logprob: -14.224078178405762
    4. '=N' → logprob: -16.099077224731445
    5. '[' → logprob: -16.474077224731445
    6. ' =
' → logprob: -16.724077224731445
    7. '＝' → logprob: -16.974077224731445
    8. '=
' → logprob: -17.099077224731445
    9. '   ' → logprob: -17.724077224731445
    10. ' ' → logprob: -17.849077224731445

Token 431: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.5759396553039551
    2. ' build' → logprob: -0.8259396553039551
    3. '(build' → logprob: -15.200939178466797
    4. '	build' → logprob: -17.950939178466797
    5. '_build' → logprob: -18.450939178466797
    6. ' ' → logprob: -18.700939178466797
    7. 'b' → logprob: -18.825939178466797
    8. '.build' → logprob: -18.950939178466797
    9. 'Build' → logprob: -20.325939178466797
    10. '   ' → logprob: -20.950939178466797

Token 432: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -1.9504606825648807e-05
    2. 'graph' → logprob: -11.000019073486328
    3. 'Graph' → logprob: -13.250019073486328
    4. '(G' → logprob: -15.000019073486328
    5. '_G' → logprob: -15.500019073486328
    6. '_GRAPH' → logprob: -16.250019073486328
    7. '(Graph' → logprob: -16.375019073486328
    8. ' graph' → logprob: -16.500019073486328
    9. '(graph' → logprob: -16.500019073486328
    10. 'raph' → logprob: -17.125019073486328

Token 433: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00011200665176147595
    2. '(' → logprob: -9.12511157989502
    3. ' (' → logprob: -13.00011157989502
    4. '(
' → logprob: -14.25011157989502
    5. '```' → logprob: -17.250112533569336
    6. '((' → logprob: -18.000112533569336
    7. '\(' → logprob: -18.500112533569336
    8. 'N' → logprob: -18.500112533569336
    9. ')(' → logprob: -19.375112533569336
    10. 'def' → logprob: -19.375112533569336

Token 434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.191489642835222e-05
    2. ',a' → logprob: -10.375041961669922
    3. ' ,' → logprob: -11.625041961669922
    4. ',
' → logprob: -13.875041961669922
    5. '   ' → logprob: -14.750041961669922
    6. 'a' → logprob: -15.250041961669922
    7. ',G' → logprob: -16.500041961669922
    8. ')' → logprob: -17.000041961669922
    9. ',A' → logprob: -18.125041961669922
    10. '‌,' → logprob: -18.375041961669922

Token 435: ' a' (ID: 261)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0003595376620069146
    2. ' N' → logprob: -8.000359535217285
    3. 'K' → logprob: -11.750359535217285
    4. ')' → logprob: -12.125359535217285
    5. 'len' → logprob: -12.625359535217285
    6. 'a' → logprob: -12.875359535217285
    7. ' ' → logprob: -13.750359535217285
    8. '```' → logprob: -13.750359535217285
    9. '(N' → logprob: -14.000359535217285
    10. ' len' → logprob: -15.375359535217285

Token 436: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.97155623533763e-05
    2. ' ,' → logprob: -10.000089645385742
    3. ',b' → logprob: -10.125089645385742
    4. ',
' → logprob: -13.625089645385742
    5. '<|end|>' → logprob: -13.750089645385742
    6. ')' → logprob: -14.125089645385742
    7. 'b' → logprob: -15.375089645385742
    8. '‌,' → logprob: -15.625089645385742
    9. '),' → logprob: -15.875089645385742
    10. ',G' → logprob: -15.875089645385742

Token 437: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009114635176956654
    2. ' b' → logprob: -7.000911235809326
    3. ')b' → logprob: -19.000911712646484
    4. '<|end|>' → logprob: -19.750911712646484
    5. ' ' → logprob: -20.750911712646484
    6. '	b' → logprob: -20.875911712646484
    7. ',' → logprob: -21.375911712646484
    8. '   ' → logprob: -22.000911712646484
    9. ',b' → logprob: -22.125911712646484
    10. '>b' → logprob: -22.375911712646484

Token 438: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1602563112974167
    2. ')
' → logprob: -1.910256266593933
    3. ')
' → logprob: -10.410256385803223
    4. '   ' → logprob: -13.660256385803223
    5. ')

' → logprob: -14.910256385803223
    6. ' )' → logprob: -15.910256385803223
    7. ' )
' → logprob: -16.410255432128906
    8. ')#' → logprob: -16.410255432128906
    9. ')`
' → logprob: -17.035255432128906
    10. ')`' → logprob: -17.410255432128906

Token 439: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.18173934519290924
    2. '   ' → logprob: -2.181739330291748
    3. ' v' → logprob: -2.931739330291748
    4. '```' → logprob: -11.056739807128906
    5. '	v' → logprob: -11.181739807128906
    6. '
' → logprob: -13.556739807128906
    7. ' ' → logprob: -15.556739807128906
    8. '   ' → logprob: -16.306739807128906
    9. '  ' → logprob: -16.431739807128906
    10. '_v' → logprob: -16.556739807128906

Token 440: ' q' (ID: 2335)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.339278580620885e-06
    2. '   ' → logprob: -13.250001907348633
    3. 'visited' → logprob: -15.000001907348633
    4. ' v' → logprob: -15.625001907348633
    5. '```' → logprob: -18.250001907348633
    6. '    
' → logprob: -19.875001907348633
    7. '	v' → logprob: -20.000001907348633
    8. '
' → logprob: -20.875001907348633
    9. '  ' → logprob: -22.250001907348633
    10. 'visit' → logprob: -22.500001907348633

Token 441: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06357413530349731
    2. '=' → logprob: -2.8135740756988525
    3. ',' → logprob: -6.438574314117432
    4. ' ,' → logprob: -12.563573837280273
    5. ' ' → logprob: -13.938573837280273
    6. ')' → logprob: -14.063573837280273
    7. '	' → logprob: -15.313573837280273
    8. '   ' → logprob: -15.438573837280273
    9. '  ' → logprob: -15.688573837280273
    10. '.' → logprob: -15.813573837280273

Token 442: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.002817358821630478
    2. ' init' → logprob: -5.877817153930664
    3. '[]' → logprob: -11.627817153930664
    4. '(init' → logprob: -13.127817153930664
    5. '	init' → logprob: -14.752817153930664
    6. ' ' → logprob: -15.752817153930664
    7. '_init' → logprob: -15.877817153930664
    8. ' []' → logprob: -15.877817153930664
    9. 'initialize' → logprob: -16.002817153930664
    10. '[' → logprob: -16.002817153930664

Token 443: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -1.2664456789934775e-06
    2. 'queue' → logprob: -14.875000953674316
    3. '_q' → logprob: -15.000000953674316
    4. '(queue' → logprob: -15.250000953674316
    5. 'q' → logprob: -15.875000953674316
    6. '_' → logprob: -16.000001907348633
    7. '(q' → logprob: -17.000001907348633
    8. '_QUEUE' → logprob: -17.875001907348633
    9. 'Queue' → logprob: -18.250001907348633
    10. ' queue' → logprob: -19.125001907348633

Token 444: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015146627090871334
    2. 'v' → logprob: -4.515146732330322
    3. '
' → logprob: -5.765146732330322
    4. '    
' → logprob: -7.890146732330322
    5. '()' → logprob: -8.640146255493164
    6. '	v' → logprob: -8.890146255493164
    7. '()
' → logprob: -9.515146255493164
    8. '(v' → logprob: -9.890146255493164
    9. ' v' → logprob: -10.015146255493164
    10. '  ' → logprob: -10.765146255493164

Token 445: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.023405609652400017
    2. '   ' → logprob: -3.7734055519104004
    3. ' v' → logprob: -8.773406028747559
    4. '	v' → logprob: -12.898406028747559
    5. '```' → logprob: -13.398406028747559
    6. '
' → logprob: -14.648406028747559
    7. '  ' → logprob: -15.273406028747559
    8. '    
' → logprob: -15.523406028747559
    9. 'visited' → logprob: -16.023405075073242
    10. 'def' → logprob: -16.273405075073242

Token 446: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -1.5570885807392187e-05
    2. ' v' → logprob: -11.125015258789062
    3. '   ' → logprob: -14.625015258789062
    4. '
' → logprob: -15.750015258789062
    5. 'ans' → logprob: -16.500015258789062
    6. '```' → logprob: -17.125015258789062
    7. '    
' → logprob: -18.375015258789062
    8. 'visited' → logprob: -18.500015258789062
    9. '#' → logprob: -19.625015258789062
    10. '	v' → logprob: -19.625015258789062

Token 447: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023123264312744
    2. '=' → logprob: -1.9102312326431274
    3. '=create' → logprob: -11.910231590270996
    4. '=v' → logprob: -16.28523063659668
    5. '＝' → logprob: -16.66023063659668
    6. ' ' → logprob: -16.91023063659668
    7. ',' → logprob: -17.28523063659668
    8. '   ' → logprob: -17.78523063659668
    9. 'v' → logprob: -18.41023063659668
    10. '[' → logprob: -18.91023063659668

Token 448: ' create' (ID: 2501)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.029750604182481766
    2. ' create' → logprob: -3.5297505855560303
    3. '(create' → logprob: -16.90475082397461
    4. '=create' → logprob: -17.40475082397461
    5. '[' → logprob: -18.52975082397461
    6. '   ' → logprob: -19.15475082397461
    7. '.create' → logprob: -19.40475082397461
    8. '	create' → logprob: -19.52975082397461
    9. ' ' → logprob: -19.90475082397461
    10. ' [' → logprob: -20.52975082397461

Token 449: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.650518920039758e-06
    2. '_vis' → logprob: -13.375003814697266
    3. 'visited' → logprob: -13.625003814697266
    4. ' _' → logprob: -15.250003814697266
    5. '_queue' → logprob: -15.875003814697266
    6. '(_' → logprob: -16.125003814697266
    7. '(' → logprob: -16.375003814697266
    8. '_v' → logprob: -16.500003814697266
    9. '_visit' → logprob: -16.625003814697266
    10. '```' → logprob: -17.125003814697266

Token 450: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.9361264946837764e-07
    2. ' visited' → logprob: -15.875
    3. 'Visited' → logprob: -18.375
    4. 'v' → logprob: -19.25
    5. '```' → logprob: -20.875
    6. '(N' → logprob: -21.0
    7. 'visible' → logprob: -21.375
    8. '(' → logprob: -21.375
    9. '_' → logprob: -22.0
    10. '
' → logprob: -22.375

Token 451: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -4.2987729102605954e-05
    2. '(' → logprob: -10.125042915344238
    3. ' (' → logprob: -13.125042915344238
    4. '<|end|>' → logprob: -14.875042915344238
    5. '```' → logprob: -15.625042915344238
    6. '\(' → logprob: -16.375043869018555
    7. '(len' → logprob: -16.500043869018555
    8. '(
' → logprob: -16.875043869018555
    9. 'N' → logprob: -17.125043869018555
    10. '
' → logprob: -17.125043869018555

Token 452: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4741685092449188
    2. ')
' → logprob: -0.9741685390472412
    3. '()
' → logprob: -10.72416877746582
    4. '()' → logprob: -10.97416877746582
    5. '())
' → logprob: -11.09916877746582
    6. '())' → logprob: -11.22416877746582
    7. '   ' → logprob: -11.84916877746582
    8. ')
' → logprob: -11.84916877746582
    9. ')

' → logprob: -11.97416877746582
    10. ')v' → logprob: -13.22416877746582

Token 453: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10366276651620865
    2. '   ' → logprob: -2.4786627292633057
    3. ' v' → logprob: -4.228662967681885
    4. '```' → logprob: -11.228662490844727
    5. 'ans' → logprob: -11.853662490844727
    6. ' ans' → logprob: -11.853662490844727
    7. '
' → logprob: -12.728662490844727
    8. '	v' → logprob: -12.728662490844727
    9. ' for' → logprob: -12.853662490844727
    10. '  ' → logprob: -13.478662490844727

Token 454: ' ans' (ID: 3345)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00012451570364646614
    2. '   ' → logprob: -9.50012493133545
    3. 'ans' (adapté à ' ans') → logprob: -10.25012493133545
    4. ' v' → logprob: -11.50012493133545
    5. '
' → logprob: -13.25012493133545
    6. '```' → logprob: -14.37512493133545
    7. '    
' → logprob: -14.50012493133545
    8. 'for' → logprob: -15.00012493133545
    9. 'q' → logprob: -15.87512493133545
    10. '#' → logprob: -16.250123977661133

Token 455: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741114377975464
    2. '=' → logprob: -0.9741114377975464
    3. ',' → logprob: -10.349111557006836
    4. ' =
' → logprob: -13.849111557006836
    5. ' ' → logprob: -14.974111557006836
    6. '=
' → logprob: -15.849111557006836
    7. '   ' → logprob: -16.099111557006836
    8. ')' → logprob: -16.474111557006836
    9. '=

' → logprob: -16.599111557006836
    10. ' =)' → logprob: -16.599111557006836

Token 456: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.009411437436938286
    2. ' K' → logprob: -5.384411334991455
    3. '1' → logprob: -5.509411334991455
    4. '(K' → logprob: -7.509411334991455
    5. '(' → logprob: -9.384411811828613
    6. '   ' → logprob: -9.509411811828613
    7. ' (' → logprob: -11.509411811828613
    8. ' ' → logprob: -12.134411811828613
    9. '0' → logprob: -12.884411811828613
    10. '```' → logprob: -13.634411811828613

Token 457: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11963996291160583
    2. '   ' → logprob: -2.2446398735046387
    3. '<|end|>' → logprob: -5.494639873504639
    4. '    
' → logprob: -6.744639873504639
    5. '
' → logprob: -7.619639873504639
    6. 'v' → logprob: -7.744639873504639
    7. '  
' → logprob: -8.744640350341797
    8. '<|end|>' → logprob: -9.244640350341797
    9. ' 
' → logprob: -9.619640350341797
    10. '```' → logprob: -10.119640350341797

Token 458: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7109082341194153
    2. '   ' → logprob: -0.7109082341194153
    3. ' v' → logprob: -4.46090841293335
    4. 'ans' → logprob: -6.08590841293335
    5. ' for' → logprob: -6.33590841293335
    6. 'for' → logprob: -6.96090841293335
    7. ' ans' → logprob: -7.21090841293335
    8. '
' → logprob: -9.210907936096191
    9. '  ' → logprob: -10.460907936096191
    10. '	v' → logprob: -10.460907936096191

Token 459: ' set' (ID: 920)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.017108941450715065
    2. '   ' → logprob: -4.392108917236328
    3. 'ans' → logprob: -5.767108917236328
    4. ' v' → logprob: -7.267108917236328
    5. 'while' → logprob: -8.017108917236328
    6. 'for' → logprob: -8.142108917236328
    7. 'q' → logprob: -10.267108917236328
    8. ' ans' → logprob: -10.892108917236328
    9. '
' → logprob: -11.142108917236328
    10. '    
' → logprob: -11.142108917236328

Token 460: '_root' (ID: 29989)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7071269750595093
    2. ' v' → logprob: -1.2071269750595093
    3. 'attr' → logprob: -2.707127094268799
    4. '(v' → logprob: -3.082127094268799
    5. '[v' → logprob: -3.457127094268799
    6. 'item' → logprob: -3.957127094268799
    7. 'tlement' → logprob: -4.207127094268799
    8. 'default' → logprob: -4.957127094268799
    9. 't' → logprob: -5.332127094268799
    10. '=v' → logprob: -6.207127094268799

Token 461: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9440754055976868
    2. 'visited' → logprob: -1.444075345993042
    3. '(v' → logprob: -1.694075345993042
    4. '_root' → logprob: -3.319075345993042
    5. 'attr' → logprob: -3.444075345993042
    6. '_v' → logprob: -4.069075584411621
    7. 't' → logprob: -4.319075584411621
    8. 'v' → logprob: -4.444075584411621
    9. ' =' → logprob: -4.569075584411621
    10. '(' → logprob: -4.819075584411621

Token 462: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.024708706885576248
    2. 'v' → logprob: -3.7747087478637695
    3. '(' → logprob: -7.3997087478637695
    4. '(v' → logprob: -8.27470874786377
    5. 'True' → logprob: -8.39970874786377
    6. ' visited' → logprob: -9.27470874786377
    7. 'Visited' → logprob: -9.27470874786377
    8. 'root' → logprob: -9.89970874786377
    9. '[v' → logprob: -10.64970874786377
    10. 'index' → logprob: -11.64970874786377

Token 463: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.06776583194732666
    2. '[v' → logprob: -2.942765712738037
    3. '(' → logprob: -5.067765712738037
    4. '[' → logprob: -5.442765712738037
    5. '(q' → logprob: -6.442765712738037
    6. '[q' → logprob: -8.317766189575195
    7. ' (' → logprob: -8.567766189575195
    8. ' =' → logprob: -10.067766189575195
    9. 'v' → logprob: -10.817766189575195
    10. '()' → logprob: -10.942766189575195

Token 464: ')
' (ID: 446)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5766181349754333
    2. '[' → logprob: -0.8266181349754333
    3. ',' → logprob: -8.076618194580078
    4. ')' → logprob: -8.576618194580078
    5. ' (' → logprob: -9.076618194580078
    6. ')(' → logprob: -10.326618194580078
    7. ' [' → logprob: -11.826618194580078
    8. ')[' → logprob: -11.951618194580078
    9. '   ' → logprob: -12.326618194580078
    10. '0' → logprob: -12.951618194580078

Token 465: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046256907284259796
    2. 'v' → logprob: -3.2962570190429688
    3. '
' → logprob: -5.296257019042969
    4. ' v' → logprob: -6.921257019042969
    5. '[' → logprob: -7.671257019042969
    6. '    
' → logprob: -7.671257019042969
    7. '```' → logprob: -7.796257019042969
    8. 'def' → logprob: -7.921257019042969
    9. '[v' → logprob: -8.046257019042969
    10. '	v' → logprob: -9.796257019042969

Token 466: ' ans' (ID: 3345)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2216239869594574
    2. '   ' → logprob: -2.3466238975524902
    3. 'def' → logprob: -2.3466238975524902
    4. '
' → logprob: -5.72162389755249
    5. ' v' → logprob: -5.97162389755249
    6. '    
' → logprob: -7.34662389755249
    7. ' 
' → logprob: -7.84662389755249
    8. '```' → logprob: -8.096624374389648
    9. ' def' → logprob: -9.721624374389648
    10. '	v' → logprob: -10.096624374389648

Token 467: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36200758814811707
    2. ' =' → logprob: -1.7370076179504395
    3. '=' → logprob: -2.2370076179504395
    4. ' *=' → logprob: -5.4870076179504395
    5. '   ' → logprob: -5.8620076179504395
    6. '[' → logprob: -6.1120076179504395
    7. ' +=' → logprob: -6.4870076179504395
    8. ' ,' → logprob: -6.6120076179504395
    9. '(' → logprob: -6.7370076179504395
    10. '<|end|>' → logprob: -6.7370076179504395

Token 468: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.0788901224732399
    2. 'process' → logprob: -2.578890085220337
    3. '(process' → logprob: -15.328889846801758
    4. '	process' → logprob: -15.953889846801758
    5. '   ' → logprob: -17.203889846801758
    6. ' proces' → logprob: -17.703889846801758
    7. '.process' → logprob: -18.453889846801758
    8. 'rocess' → logprob: -18.828889846801758
    9. '_process' → logprob: -19.328889846801758
    10. ' ' → logprob: -19.453889846801758

Token 469: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.9266199160483666e-05
    2. '_' → logprob: -12.000019073486328
    3. '_nodes' → logprob: -12.250019073486328
    4. '(_' → logprob: -13.375019073486328
    5. '(node' → logprob: -13.375019073486328
    6. 'node' → logprob: -13.500019073486328
    7. '_ans' → logprob: -13.625019073486328
    8. '(' → logprob: -14.125019073486328
    9. '_answer' → logprob: -15.125019073486328
    10. '(Node' → logprob: -15.375019073486328

Token 470: '(G' (ID: 12449)
  Prédit: '(G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(G' → logprob: -5.32392441527918e-05
    2. '(' → logprob: -9.875053405761719
    3. '```' → logprob: -14.000053405761719
    4. '(
' → logprob: -14.625053405761719
    5. ' (' → logprob: -15.125053405761719
    6. '((' → logprob: -17.50005340576172
    7. '\(' → logprob: -17.87505340576172
    8. ')' → logprob: -18.25005340576172
    9. '<|end|>' → logprob: -19.00005340576172
    10. '(Graph' → logprob: -19.00005340576172

Token 471: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043805985478684306
    2. ',v' → logprob: -7.750438213348389
    3. ' ,' → logprob: -12.25043773651123
    4. 'v' → logprob: -13.37543773651123
    5. ' v' → logprob: -14.37543773651123
    6. '   ' → logprob: -15.37543773651123
    7. ',
' → logprob: -16.125438690185547
    8. '(v' → logprob: -16.625438690185547
    9. ')' → logprob: -17.125438690185547
    10. '‌,' → logprob: -17.500438690185547

Token 472: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0008045066497288644
    2. ' v' → logprob: -7.125804424285889
    3. '	v' → logprob: -16.500804901123047
    4. ')v' → logprob: -17.750804901123047
    5. '1' → logprob: -18.375804901123047
    6. '[v' → logprob: -18.750804901123047
    7. '
' → logprob: -19.125804901123047
    8. ',v' → logprob: -19.250804901123047
    9. '<v' → logprob: -19.375804901123047
    10. 'vq' → logprob: -19.375804901123047

Token 473: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015050210640765727
    2. ' ,' → logprob: -8.875150680541992
    3. '   ' → logprob: -12.375150680541992
    4. ',q' → logprob: -12.750150680541992
    5. ',
' → logprob: -14.375150680541992
    6. '`,' → logprob: -14.500150680541992
    7. ')' → logprob: -14.500150680541992
    8. 'q' → logprob: -15.125150680541992
    9. ',,' → logprob: -15.250150680541992
    10. '[' → logprob: -15.375150680541992

Token 474: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0002973280206788331
    2. ' q' → logprob: -8.375297546386719
    3. '1' → logprob: -9.625297546386719
    4. '
' → logprob: -14.875297546386719
    5. '	q' → logprob: -15.625297546386719
    6. '   ' → logprob: -16.00029754638672
    7. ' ' → logprob: -16.87529754638672
    8. '```' → logprob: -17.75029754638672
    9. ')' → logprob: -18.50029754638672
    10. '0' → logprob: -18.87529754638672

Token 475: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5120287066092715e-05
    2. ' ,' → logprob: -10.375035285949707
    3. ',K' → logprob: -12.750035285949707
    4. ',
' → logprob: -14.875035285949707
    5. '   ' → logprob: -15.125035285949707
    6. '`,' → logprob: -16.50003433227539
    7. '‌,' → logprob: -16.62503433227539
    8. '```' → logprob: -16.87503433227539
    9. ')' → logprob: -17.00003433227539
    10. '),' → logprob: -17.25003433227539

Token 476: ' ans' (ID: 3345)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.07615914195775986
    2. 'ans' → logprob: -2.8261592388153076
    3. ' K' → logprob: -4.5761590003967285
    4. ' ans' → logprob: -5.5761590003967285
    5. '(ans' → logprob: -12.826159477233887
    6. ' ' → logprob: -12.826159477233887
    7. '   ' → logprob: -13.826159477233887
    8. ')' → logprob: -14.326159477233887
    9. '	ans' → logprob: -14.701159477233887
    10. '```' → logprob: -14.951159477233887

Token 477: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001532401074655354
    2. ' ,' → logprob: -8.875153541564941
    3. ',K' → logprob: -11.250153541564941
    4. '   ' → logprob: -15.125153541564941
    5. ',
' → logprob: -16.500152587890625
    6. 'K' → logprob: -17.000152587890625
    7. '```' → logprob: -17.250152587890625
    8. ',k' → logprob: -18.375152587890625
    9. '`,' → logprob: -18.375152587890625
    10. '‌,' → logprob: -19.125152587890625

Token 478: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.011048054322600365
    2. ' K' → logprob: -4.511047840118408
    3. '   ' → logprob: -15.511048316955566
    4. ' ' → logprob: -17.13604736328125
    5. '
' → logprob: -17.63604736328125
    6. ')' → logprob: -18.26104736328125
    7. '	K' → logprob: -18.63604736328125
    8. '    ' → logprob: -18.76104736328125
    9. '  ' → logprob: -19.63604736328125
    10. '
' → logprob: -19.76104736328125

Token 479: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.3213025744771585e-05
    2. ' ,' → logprob: -10.375033378601074
    3. '`,' → logprob: -14.250033378601074
    4. '   ' → logprob: -14.500033378601074
    5. ',
' → logprob: -15.375033378601074
    6. ')' → logprob: -15.375033378601074
    7. '),' → logprob: -16.375032424926758
    8. '```' → logprob: -16.375032424926758
    9. '‌,' → logprob: -17.375032424926758
    10. '',' → logprob: -17.750032424926758

Token 480: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0019287518225610256
    2. ' MOD' → logprob: -6.251928806304932
    3. '_MOD' → logprob: -16.876928329467773
    4. ' ' → logprob: -17.876928329467773
    5. '   ' → logprob: -18.376928329467773
    6. '
' → logprob: -18.876928329467773
    7. '.MOD' → logprob: -18.876928329467773
    8. 'mod' → logprob: -18.876928329467773
    9. 'MO' → logprob: -19.001928329467773
    10. '10' → logprob: -19.126928329467773

Token 481: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.13388703338569e-06
    2. ')
' → logprob: -11.750009536743164
    3. '   ' → logprob: -13.875009536743164
    4. ' )' → logprob: -16.500009536743164
    5. ')#' → logprob: -17.125009536743164
    6. ')`' → logprob: -17.250009536743164
    7. ')

' → logprob: -18.125009536743164
    8. '#' → logprob: -18.500009536743164
    9. ',' → logprob: -19.000009536743164
    10. '))' → logprob: -19.125009536743164

Token 482: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.699009895324707
    2. 'def' → logprob: -0.699009895324707
    3. '
' → logprob: -5.574009895324707
    4. 'v' → logprob: -7.199009895324707
    5. '    
' → logprob: -7.574009895324707
    6. 'set' → logprob: -7.949009895324707
    7. '<|end|>' → logprob: -8.949009895324707
    8. ')' → logprob: -9.199009895324707
    9. '```' → logprob: -9.449009895324707
    10. ' def' → logprob: -10.074009895324707

Token 483: ' print' (ID: 2123)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01487031765282154
    2. 'print' (adapté à ' print') → logprob: -4.6398701667785645
    3. 'return' → logprob: -6.1398701667785645
    4. 'set' → logprob: -7.0148701667785645
    5. 'v' → logprob: -7.1398701667785645
    6. '   ' → logprob: -7.2648701667785645
    7. '
' → logprob: -8.014870643615723
    8. 'if' → logprob: -8.764870643615723
    9. '    
' → logprob: -10.639870643615723
    10. '```' → logprob: -11.264870643615723

Token 484: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00045009577297605574
    2. '(' → logprob: -7.750450134277344
    3. '()' → logprob: -11.375450134277344
    4. '(answer' → logprob: -12.625450134277344
    5. 'ans' → logprob: -12.875450134277344
    6. ' (' → logprob: -13.500450134277344
    7. '(
' → logprob: -15.500450134277344
    8. '('' → logprob: -16.625450134277344
    9. '(`' → logprob: -16.750450134277344
    10. '(len' → logprob: -16.875450134277344

Token 485: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. '()' → logprob: -13.375004768371582
    3. ')
' → logprob: -13.875004768371582
    4. ' )' → logprob: -14.125004768371582
    5. '())' → logprob: -14.750004768371582
    6. '))' → logprob: -14.750004768371582
    7. ')`' → logprob: -16.500003814697266
    8. '`)' → logprob: -17.000003814697266
    9. ')}' → logprob: -17.000003814697266
    10. '')' → logprob: -17.250003814697266

Token 486: 'def' (ID: 1314)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.48529356718063354
    2. '()' → logprob: -1.3602936267852783
    3. 'def' → logprob: -2.9852936267852783
    4. '()
' → logprob: -3.7352936267852783
    5. '(' → logprob: -4.235293388366699
    6. '(v' → logprob: -4.485293388366699
    7. '   ' → logprob: -4.985293388366699
    8. '[' → logprob: -4.985293388366699
    9. '(
' → logprob: -4.985293388366699
    10. '
' → logprob: -6.485293388366699

Token 487: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.029754657298326492
    2. ' set' → logprob: -3.529754638671875
    3. '_set' → logprob: -12.529754638671875
    4. '	set' → logprob: -16.154754638671875
    5. ')set' → logprob: -16.529754638671875
    6. '=set' → logprob: -16.779754638671875
    7. 's' → logprob: -16.904754638671875
    8. '__' → logprob: -17.154754638671875
    9. '_' → logprob: -17.279754638671875
    10. 'main' → logprob: -17.404754638671875

Token 488: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -1.7432603272027336e-06
    2. 'root' → logprob: -13.750001907348633
    3. '_' → logprob: -14.625001907348633
    4. '_ro' → logprob: -16.875001907348633
    5. '```' → logprob: -17.625001907348633
    6. '__' → logprob: -18.250001907348633
    7. ' _' → logprob: -18.375001907348633
    8. ')_' → logprob: -18.375001907348633
    9. '_ROOT' → logprob: -18.750001907348633
    10. '_r' → logprob: -19.250001907348633

Token 489: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.8624639324116288e-06
    2. '_vis' → logprob: -14.000001907348633
    3. 'visited' → logprob: -15.125001907348633
    4. '```' → logprob: -15.875001907348633
    5. '##_' → logprob: -16.250001907348633
    6. '(' → logprob: -16.375001907348633
    7. '(_' → logprob: -16.375001907348633
    8. '\' → logprob: -16.625001907348633
    9. '_v' → logprob: -17.250001907348633
    10. '_visible' → logprob: -17.250001907348633

Token 490: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: 0.0
    2. ' visited' → logprob: -17.5
    3. 'v' → logprob: -18.625
    4. 'Visited' → logprob: -20.125
    5. 'vis' → logprob: -22.125
    6. 'vist' → logprob: -22.375
    7. '```' → logprob: -22.5
    8. 'visible' → logprob: -22.625
    9. 'visi' → logprob: -22.625
    10. 'occupied' → logprob: -22.875

Token 491: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0004311460361350328
    2. '(' → logprob: -7.750431060791016
    3. '():' → logprob: -15.750431060791016
    4. ' (' → logprob: -15.750431060791016
    5. '(V' → logprob: -16.375431060791016
    6. '(
' → logprob: -16.625431060791016
    7. '(q' → logprob: -18.000431060791016
    8. '   ' → logprob: -18.875431060791016
    9. '(s' → logprob: -19.500431060791016
    10. '(u' → logprob: -19.500431060791016

Token 492: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018555138260126114
    2. '):
' → logprob: -4.018555164337158
    3. ')' → logprob: -8.5185546875
    4. '(v' → logprob: -8.6435546875
    5. '):
' → logprob: -11.7685546875
    6. 'v' → logprob: -12.0185546875
    7. '(' → logprob: -12.2685546875
    8. '):

' → logprob: -12.7685546875
    9. ' ):' → logprob: -12.8935546875
    10. '[v' → logprob: -13.5185546875

Token 493: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0068730865605175495
    2. '   ' → logprob: -5.00687313079834
    3. ' v' → logprob: -8.75687313079834
    4. '	v' → logprob: -15.75687313079834
    5. '```' → logprob: -15.75687313079834
    6. '  ' → logprob: -18.631872177124023
    7. ' ' → logprob: -19.631872177124023
    8. '    ' → logprob: -20.256872177124023
    9. '    
' → logprob: -20.756872177124023
    10. '`' → logprob: -20.881872177124023

Token 494: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -4.008129963040119e-06
    2. ' v' → logprob: -12.500003814697266
    3. '   ' → logprob: -15.625003814697266
    4. '```' → logprob: -21.875003814697266
    5. '	v' → logprob: -22.000003814697266
    6. '`' → logprob: -24.625003814697266
    7. '    
' → logprob: -25.125003814697266
    8. ' ' → logprob: -25.250003814697266
    9. '  ' → logprob: -25.625003814697266
    10. '
' → logprob: -26.875003814697266

Token 495: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. ' [' → logprob: -14.375000953674316
    3. '```' → logprob: -15.375000953674316
    4. '\[' → logprob: -16.000001907348633
    5. 'def' → logprob: -18.250001907348633
    6. 'v' → logprob: -18.250001907348633
    7. '[
' → logprob: -18.250001907348633
    8. '[v' → logprob: -19.125001907348633
    9. '   ' → logprob: -19.125001907348633
    10. '=' → logprob: -19.125001907348633

Token 496: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '   ' → logprob: -19.25
    4. '[' → logprob: -22.0
    5. '１' → logprob: -22.625
    6. ')' → logprob: -22.75
    7. '۱' → logprob: -23.125
    8. ']' → logprob: -23.25
    9. '```' → logprob: -23.625
    10. '  ' → logprob: -23.75

Token 497: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.6240566083070007e-06
    2. ']=' → logprob: -13.875001907348633
    3. ' ]' → logprob: -14.250001907348633
    4. ']
' → logprob: -19.875001907348633
    5. ')' → logprob: -21.625001907348633
    6. '=' → logprob: -22.000001907348633
    7. '']' → logprob: -22.375001907348633
    8. '`]' → logprob: -22.625001907348633
    9. '[' → logprob: -22.750001907348633
    10. ']

' → logprob: -23.000001907348633

Token 498: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002702760975807905
    2. ' =' → logprob: -8.250269889831543
    3. '=True' → logprob: -11.625269889831543
    4. '＝' → logprob: -19.37527084350586
    5. '=False' → logprob: -20.37527084350586
    6. '[' → logprob: -20.62527084350586
    7. ')=' → logprob: -20.75027084350586
    8. '.=' → logprob: -21.00027084350586
    9. '=
' → logprob: -21.00027084350586
    10. '_=' → logprob: -21.00027084350586

Token 499: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -2.7610454708337784e-05
    2. ' True' → logprob: -10.500027656555176
    3. 'mark' → logprob: -17.75002670288086
    4. '(True' → logprob: -18.75002670288086
    5. '=True' → logprob: -19.12502670288086
    6. 'true' → logprob: -20.75002670288086
    7. 'False' → logprob: -20.87502670288086
    8. '   ' → logprob: -21.50002670288086
    9. '1' → logprob: -21.62502670288086
    10. 'TRUE' → logprob: -21.87502670288086

Token 500: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12749043107032776
    2. '<|end|>' → logprob: -3.002490520477295
    3. '
' → logprob: -3.127490520477295
    4. 'main' → logprob: -3.752490520477295
    5. '```' → logprob: -6.252490520477295
    6. ' if' → logprob: -8.377490043640137
    7. '#' → logprob: -9.127490043640137
    8. '<|end|>' → logprob: -9.127490043640137
    9. '(main' → logprob: -9.502490043640137
    10. '  
' → logprob: -9.627490043640137

Token 501: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.575965940952301
    2. 'main' → logprob: -0.825965940952301
    3. '<|end|>' → logprob: -11.700965881347656
    4. ' if' → logprob: -11.950965881347656
    5. '```' → logprob: -12.200965881347656
    6. '#' → logprob: -12.825965881347656
    7. ' main' → logprob: -12.950965881347656
    8. '(main' → logprob: -13.950965881347656
    9. '...' → logprob: -15.825965881347656
    10. '	main' → logprob: -15.950965881347656

Token 502: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 500
Tokens correctement prédits (1ère position, stricte): 221
Tokens correctement prédits (1ère position, avec adaptation): 231
Tokens correctement prédits (top 10): 431
Précision stricte (1ère position): 44.20%
Précision adaptée (1ère position): 46.20%
Précision (top 10): 86.20%
================================================================================
