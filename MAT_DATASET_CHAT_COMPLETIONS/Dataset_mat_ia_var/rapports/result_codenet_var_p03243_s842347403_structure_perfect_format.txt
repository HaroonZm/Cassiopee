================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())

for i in range(N, 1000):
    i_str = str(i)
    if i_str[0] == i_str[1] and i_str[1] == i_str[2]:
        ans = i_str
        break

print(i)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001967457792488858
    2. '```' → logprob: -9.50019645690918
    3. '(N' → logprob: -10.37519645690918
    4. '`' → logprob: -10.87519645690918
    5. '(
' → logprob: -11.00019645690918
    6. ')' → logprob: -11.62519645690918
    7. '("("' → logprob: -11.62519645690918
    8. ''' → logprob: -11.62519645690918
    9. '()' → logprob: -11.87519645690918
    10. '('' → logprob: -12.25019645690918

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4827296733856201
    2. ')' → logprob: -0.9827296733856201
    3. '()' → logprob: -5.107729911804199
    4. '())' → logprob: -6.732729911804199
    5. '(
' → logprob: -7.732729911804199
    6. '```' → logprob: -8.7327299118042
    7. '))' → logprob: -9.1077299118042
    8. '")' → logprob: -9.3577299118042
    9. '')' → logprob: -9.4827299118042
    10. '(

' → logprob: -9.9827299118042

Token 5: 'for' (ID: 1938)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7085900902748108
    2. 'for' → logprob: -1.083590030670166
    3. 'i' → logprob: -2.208590030670166
    4. 's' → logprob: -3.583590030670166
    5. 'f' → logprob: -4.083590030670166
    6. 'x' → logprob: -5.458590030670166
    7. 'sum' → logprob: -6.208590030670166
    8. 'total' → logprob: -6.708590030670166
    9. 'result' → logprob: -6.833590030670166
    10. 'factor' → logprob: -6.833590030670166

Token 6: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.015219069086015224
    2. '  ' → logprob: -4.890219211578369
    3. ' i' → logprob: -4.890219211578369
    4. ' N' → logprob: -10.765218734741211
    5. '_' → logprob: -11.390218734741211
    6. ' _' → logprob: -12.390218734741211
    7. ' ‌' → logprob: -12.640218734741211
    8. ' ' → logprob: -12.765218734741211
    9. 'i' → logprob: -13.140218734741211
    10. ' ,' → logprob: -13.140218734741211

Token 7: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.054071731865406036
    2. 'in' → logprob: -3.6790716648101807
    3. ' ' → logprob: -3.8040716648101807
    4. '  ' → logprob: -6.17907190322876
    5. 'n' → logprob: -6.55407190322876
    6. ' n' → logprob: -7.30407190322876
    7. ')' → logprob: -8.054071426391602
    8. ' i' → logprob: -8.929071426391602
    9. '+' → logprob: -9.554071426391602
    10. '   ' → logprob: -9.679071426391602

Token 8: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20221446454524994
    2. 'range' → logprob: -1.9522144794464111
    3. ' ' → logprob: -3.202214479446411
    4. ' in' → logprob: -8.702214241027832
    5. ' N' → logprob: -9.577214241027832
    6. '  ' → logprob: -9.702214241027832
    7. '	range' → logprob: -10.952214241027832
    8. '_range' → logprob: -11.077214241027832
    9. '(range' → logprob: -11.077214241027832
    10. ')' → logprob: -11.202214241027832

Token 9: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008663378655910492
    2. '(N' → logprob: -4.758663177490234
    3. '(i' → logprob: -10.383663177490234
    4. '(len' → logprob: -12.133663177490234
    5. '(n' → logprob: -12.258663177490234
    6. ' (' → logprob: -12.508663177490234
    7. '(`' → logprob: -14.008663177490234
    8. '(
' → logprob: -14.133663177490234
    9. '(range' → logprob: -14.133663177490234
    10. '((' → logprob: -14.133663177490234

Token 10: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026005071122199297
    2. ')' → logprob: -6.00260066986084
    3. ':' → logprob: -9.37760066986084
    4. '+' → logprob: -10.87760066986084
    5. ' ):' → logprob: -11.75260066986084
    6. '):
' → logprob: -12.12760066986084
    7. ',' → logprob: -12.87760066986084
    8. '   ' → logprob: -13.87760066986084
    9. ''):' → logprob: -14.37760066986084
    10. '+:' → logprob: -14.75260066986084

Token 11: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4945862293243408
    2. ' ' → logprob: -1.1195862293243408
    3. '-' → logprob: -3.244586229324341
    4. ' -' → logprob: -3.744586229324341
    5. '1' → logprob: -6.994585990905762
    6. '2' → logprob: -8.869585990905762
    7. ')' → logprob: -11.244585990905762
    8. '10' → logprob: -11.744585990905762
    9. ' )' → logprob: -12.119585990905762
    10. '   ' → logprob: -12.182085990905762

Token 12: '100' (ID: 1353)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0466776005923748
    2. '-' → logprob: -3.171677589416504
    3. ' ' → logprob: -6.171677589416504
    4. '1' → logprob: -6.796677589416504
    5. ' -' → logprob: -7.921677589416504
    6. '2' → logprob: -9.546677589416504
    7. '10' → logprob: -11.671677589416504
    8. '-i' → logprob: -12.046677589416504
    9. '```' → logprob: -12.921677589416504
    10. '100' → logprob: -13.046677589416504

Token 13: '0' (ID: 15)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.039032984524965286
    2. '+' → logprob: -3.4140329360961914
    3. ')' → logprob: -5.914032936096191
    4. ',' → logprob: -6.664032936096191
    5. '0' → logprob: -7.914032936096191
    6. ')):' → logprob: -8.039032936096191
    7. ':' → logprob: -8.289032936096191
    8. '+:' → logprob: -8.414032936096191
    9. ' ):' → logprob: -9.414032936096191
    10. ' +' → logprob: -10.789032936096191

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011703446507453918
    2. ':' → logprob: -7.5011701583862305
    3. ')' → logprob: -7.8761701583862305
    4. ',' → logprob: -9.25117015838623
    5. ' ):' → logprob: -9.62617015838623
    6. '+' → logprob: -9.87617015838623
    7. '):
' → logprob: -11.87617015838623
    8. '+:' → logprob: -12.37617015838623
    9. ')):' → logprob: -12.37617015838623
    10. ':)' → logprob: -13.62617015838623

Token 15: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021308181807398796
    2. '):' → logprob: -4.271307945251465
    3. ' :' → logprob: -5.771307945251465
    4. '   ' → logprob: -6.021307945251465
    5. ')' → logprob: -7.396307945251465
    6. ',' → logprob: -8.271307945251465
    7. '():' → logprob: -8.396307945251465
    8. '    ' → logprob: -9.396307945251465
    9. '':' → logprob: -9.521307945251465
    10. '+:' → logprob: -9.896307945251465

Token 16: ' i' (ID: 575)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.9708890318870544
    2. '   ' → logprob: -1.2208890914916992
    3. ' ' → logprob: -2.095889091491699
    4. ' print' → logprob: -2.595889091491699
    5. 'print' → logprob: -2.595889091491699
    6. ')' → logprob: -3.970889091491699
    7. ' if' → logprob: -4.345889091491699
    8. ':' → logprob: -4.845889091491699
    9. ' )' → logprob: -5.595889091491699
    10. 'if' → logprob: -5.845889091491699

Token 17: '_str' (ID: 6182)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3012416660785675
    2. '+' → logprob: -1.5512416362762451
    3. ':' → logprob: -3.926241636276245
    4. '<|end|>' → logprob: -4.426241874694824
    5. ' ' → logprob: -5.676241874694824
    6. '%' → logprob: -5.801241874694824
    7. '```' → logprob: -5.801241874694824
    8. '   ' → logprob: -6.551241874694824
    9. '    ' → logprob: -6.801241874694824
    10. '\' → logprob: -7.676241874694824

Token 18: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6654910445213318
    2. ' =' → logprob: -0.9154910445213318
    3. '.' → logprob: -2.7904911041259766
    4. '[' → logprob: -4.790491104125977
    5. '+' → logprob: -5.290491104125977
    6. '.startswith' → logprob: -5.790491104125977
    7. '[:]' → logprob: -6.290491104125977
    8. ' +=' → logprob: -6.790491104125977
    9. '+=' → logprob: -7.290491104125977
    10. 's' → logprob: -7.540491104125977

Token 19: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.6938707828521729
    2. ' str' → logprob: -0.6938707828521729
    3. ' f' → logprob: -7.693870544433594
    4. ' ' → logprob: -8.693870544433594
    5. 'f' → logprob: -10.318870544433594
    6. '	str' → logprob: -10.818870544433594
    7. '   ' → logprob: -11.068870544433594
    8. '(str' → logprob: -11.818870544433594
    9. '=str' → logprob: -12.568870544433594
    10. '`' → logprob: -12.693870544433594

Token 20: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.003603394143283367
    2. '(' → logprob: -5.628603458404541
    3. ' (' → logprob: -13.253602981567383
    4. '(
' → logprob: -14.503602981567383
    5. 'i' → logprob: -14.753602981567383
    6. '(I' → logprob: -15.878602981567383
    7. '   ' → logprob: -16.253602981567383
    8. ' ' → logprob: -16.628602981567383
    9. '(int' → logprob: -16.628602981567383
    10. '()' → logprob: -17.003602981567383

Token 21: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010509284038562328
    2. ')
' → logprob: -10.375104904174805
    3. ').' → logprob: -10.375104904174805
    4. '   ' → logprob: -11.125104904174805
    5. '+' → logprob: -11.500104904174805
    6. ' )' → logprob: -12.375104904174805
    7. '))' → logprob: -12.875104904174805
    8. ')+' → logprob: -13.125104904174805
    9. '[i' → logprob: -13.250104904174805
    10. '[' → logprob: -13.625104904174805

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010317382402718067
    2. '    ' → logprob: -8.126031875610352
    3. ')' → logprob: -8.251031875610352
    4. ' if' → logprob: -8.751031875610352
    5. ':' → logprob: -9.626031875610352
    6. ' ' → logprob: -9.876031875610352
    7. 'if' → logprob: -10.251031875610352
    8. '[' → logprob: -10.376031875610352
    9. '.' → logprob: -10.876031875610352
    10. ',' → logprob: -11.126031875610352

Token 23: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5984545350074768
    2. '   ' → logprob: -1.473454475402832
    3. ' if' → logprob: -1.598454475402832
    4. 'for' → logprob: -5.098454475402832
    5. '_' → logprob: -5.723454475402832
    6. 'd' → logprob: -6.223454475402832
    7. ')' → logprob: -6.848454475402832
    8. 's' → logprob: -6.973454475402832
    9. '    ' → logprob: -7.098454475402832
    10. ' for' → logprob: -7.223454475402832

Token 24: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5094989538192749
    2. ' len' → logprob: -2.2594990730285645
    3. ' i' → logprob: -2.3844990730285645
    4. ' '' → logprob: -2.7594990730285645
    5. ''' → logprob: -2.8844990730285645
    6. '"' → logprob: -3.6344990730285645
    7. ' any' → logprob: -4.3844990730285645
    8. 'len' → logprob: -4.6344990730285645
    9. ' "' → logprob: -4.6344990730285645
    10. ' all' → logprob: -4.8844990730285645

Token 25: '_str' (ID: 6182)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.0258755683898926
    2. '_' → logprob: -1.6508755683898926
    3. ' %' → logprob: -2.0258755683898926
    4. '+' → logprob: -2.4008755683898926
    5. '_str' → logprob: -2.6508755683898926
    6. ' ' → logprob: -3.1508755683898926
    7. ' in' → logprob: -3.7758755683898926
    8. '>' → logprob: -4.025875568389893
    9. ' ==' → logprob: -4.650875568389893
    10. ' _' → logprob: -4.900875568389893

Token 26: '[' (ID: 58)
  Prédit: '.endswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.endswith' → logprob: -0.9585334062576294
    2. '.' → logprob: -1.2085334062576294
    3. '.startswith' → logprob: -1.2085334062576294
    4. '.count' → logprob: -4.58353328704834
    5. ' in' → logprob: -5.83353328704834
    6. '[' → logprob: -6.08353328704834
    7. '[::-' → logprob: -6.83353328704834
    8. '.is' → logprob: -7.20853328704834
    9. '.find' → logprob: -7.58353328704834
    10. '==' → logprob: -7.70853328704834

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23218189179897308
    2. '-' → logprob: -1.6071819067001343
    3. '1' → logprob: -5.482182025909424
    4. ' ' → logprob: -7.232182025909424
    5. ']' → logprob: -7.482182025909424
    6. '2' → logprob: -7.607182025909424
    7. ' -' → logprob: -8.107181549072266
    8. '3' → logprob: -8.607181549072266
    9. ':' → logprob: -8.857181549072266
    10. 'len' → logprob: -10.482181549072266

Token 28: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.058915577828884125
    2. '>' → logprob: -4.183915615081787
    3. ']==' → logprob: -4.683915615081787
    4. '==' → logprob: -4.933915615081787
    5. ')' → logprob: -4.933915615081787
    6. ':' → logprob: -5.558915615081787
    7. '!=' → logprob: -6.183915615081787
    8. '+' → logprob: -6.183915615081787
    9. '=' → logprob: -6.308915615081787
    10. ' ]' → logprob: -6.433915615081787

Token 29: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.779093861579895
    2. ' ==' → logprob: -0.904093861579895
    3. '>' → logprob: -3.5290937423706055
    4. ' !=' → logprob: -3.6540937423706055
    5. '!=' → logprob: -3.9040937423706055
    6. ' in' → logprob: -4.0290937423706055
    7. '=' → logprob: -4.1540937423706055
    8. '<' → logprob: -4.5290937423706055
    9. '+' → logprob: -5.1540937423706055
    10. ' >' → logprob: -5.5290937423706055

Token 30: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5909343361854553
    2. ''i' → logprob: -1.5909342765808105
    3. ''' → logprob: -1.7159342765808105
    4. ' i' → logprob: -2.9659342765808105
    5. ' '' → logprob: -4.8409342765808105
    6. '"' → logprob: -6.0909342765808105
    7. ' ' → logprob: -8.215934753417969
    8. ''s' → logprob: -8.840934753417969
    9. '   ' → logprob: -9.215934753417969
    10. 'str' → logprob: -9.840934753417969

Token 31: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -3.810037742368877e-05
    2. '_' → logprob: -10.750038146972656
    3. '_s' → logprob: -12.250038146972656
    4. 'str' → logprob: -12.375038146972656
    5. ''_' → logprob: -13.125038146972656
    6. '_i' → logprob: -14.500038146972656
    7. '_r' → logprob: -14.500038146972656
    8. 'Str' → logprob: -14.625038146972656
    9. '```' → logprob: -14.750038146972656
    10. '+' → logprob: -15.125038146972656

Token 32: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3501094877719879
    2. '[' → logprob: -1.2251094579696655
    3. '2' → logprob: -7.225109577178955
    4. '[-' → logprob: -7.850109577178955
    5. ']' → logprob: -8.600109100341797
    6. '-' → logprob: -8.600109100341797
    7. ' ' → logprob: -9.725109100341797
    8. ' [' → logprob: -9.725109100341797
    9. '```' → logprob: -11.100109100341797
    10. '][' → logprob: -11.850109100341797

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004509273450821638
    2. '-' → logprob: -6.129509449005127
    3. '0' → logprob: -6.129509449005127
    4. '2' → logprob: -9.254508972167969
    5. ']' → logprob: -11.129508972167969
    6. ' ' → logprob: -11.254508972167969
    7. '])' → logprob: -11.879508972167969
    8. ' -' → logprob: -12.817008972167969
    9. '3' → logprob: -13.317008972167969
    10. '::-' → logprob: -13.442008972167969

Token 34: ']' (ID: 60)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9027939438819885
    2. ' and' → logprob: -1.4027938842773438
    3. ':' → logprob: -1.7777938842773438
    4. ')' → logprob: -2.5277938842773438
    5. ']' → logprob: -3.2777938842773438
    6. ']:' → logprob: -3.4027938842773438
    7. 'and' → logprob: -4.402793884277344
    8. ' or' → logprob: -4.402793884277344
    9. '==' → logprob: -6.777793884277344
    10. '<|end|>' → logprob: -7.402793884277344

Token 35: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.21945630013942719
    2. ':' → logprob: -2.094456195831299
    3. 'and' → logprob: -2.844456195831299
    4. ' or' → logprob: -4.344456195831299
    5. '==' → logprob: -6.844456195831299
    6. '=' → logprob: -7.594456195831299
    7. ' ==' → logprob: -7.719456195831299
    8. '<|end|>' → logprob: -7.969456195831299
    9. ' ' → logprob: -9.344456672668457
    10. 'or' → logprob: -9.469456672668457

Token 36: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008481362834572792
    2. 'i' → logprob: -5.008481502532959
    3. ' ' → logprob: -6.383481502532959
    4. '    ' → logprob: -10.3834810256958
    5. ' ' → logprob: -11.0084810256958
    6. '   ' → logprob: -11.7584810256958
    7. '  ' → logprob: -12.1334810256958
    8. '	i' → logprob: -13.0084810256958
    9. '<|end|>' → logprob: -13.5084810256958
    10. ' '' → logprob: -13.5084810256958

Token 37: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.700132997939363e-05
    2. 'str' → logprob: -11.375017166137695
    3. '_' → logprob: -12.875017166137695
    4. '_STR' → logprob: -14.375017166137695
    5. '<|end|>' → logprob: -14.750017166137695
    6. '_s' → logprob: -15.125017166137695
    7. '[str' → logprob: -15.375017166137695
    8. '[' → logprob: -15.625017166137695
    9. 'Str' → logprob: -15.625017166137695
    10. '<|end|>' → logprob: -15.875017166137695

Token 38: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2352385965641588e-05
    2. '<|end|>' → logprob: -12.375012397766113
    3. ']' → logprob: -13.625012397766113
    4. '<|end|>' → logprob: -13.750012397766113
    5. '][' → logprob: -13.875012397766113
    6. '```' → logprob: -14.500012397766113
    7. ')' → logprob: -14.625012397766113
    8. '[
' → logprob: -14.625012397766113
    9. '...' → logprob: -14.625012397766113
    10. '#' → logprob: -14.750012397766113

Token 39: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0771782174706459
    2. '1' → logprob: -2.7021782398223877
    3. '0' → logprob: -4.952178001403809
    4. ' ' → logprob: -9.452178001403809
    5. '3' → logprob: -10.577178001403809
    6. '```' → logprob: -10.577178001403809
    7. '-' → logprob: -11.952178001403809
    8. '[' → logprob: -12.577178001403809
    9. ']' → logprob: -12.952178001403809
    10. '   ' → logprob: -13.014678001403809

Token 40: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011545010842382908
    2. ']==' → logprob: -4.761545181274414
    3. '==' → logprob: -6.386545181274414
    4. ' ==' → logprob: -6.761545181274414
    5. '<|end|>' → logprob: -10.761545181274414
    6. 's' → logprob: -11.136545181274414
    7. '}' → logprob: -11.386545181274414
    8. ' ]' → logprob: -11.636545181274414
    9. ')' → logprob: -12.136545181274414
    10. ' ' → logprob: -12.136545181274414

Token 41: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20197339355945587
    2. ' ==' → logprob: -1.7019734382629395
    3. '=' → logprob: -8.576972961425781
    4. '[' → logprob: -9.076972961425781
    5. '<|end|>' → logprob: -9.826972961425781
    6. ' ' → logprob: -10.201972961425781
    7. ']==' → logprob: -10.326972961425781
    8. '...' → logprob: -10.701972961425781
    9. '!=' → logprob: -11.076972961425781
    10. ')' → logprob: -11.076972961425781

Token 42: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.28126490116119385
    2. 'i' → logprob: -1.4062649011611938
    3. ' ' → logprob: -9.156265258789062
    4. ''i' → logprob: -12.531265258789062
    5. ' ' → logprob: -13.906265258789062
    6. 's' → logprob: -14.031265258789062
    7. '	i' → logprob: -14.031265258789062
    8. ''' → logprob: -14.656265258789062
    9. ' '' → logprob: -14.781265258789062
    10. '[i' → logprob: -15.281265258789062

Token 43: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.3544423381972592e-05
    2. 'str' → logprob: -11.25001335144043
    3. '_' → logprob: -15.37501335144043
    4. 'Str' → logprob: -16.00001335144043
    5. '_STR' → logprob: -17.12501335144043
    6. '```' → logprob: -17.50001335144043
    7. 's' → logprob: -17.62501335144043
    8. '_s' → logprob: -17.62501335144043
    9. ''_' → logprob: -18.37501335144043
    10. '_Str' → logprob: -18.62501335144043

Token 44: '[' (ID: 58)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0028243737760931253
    2. '[' → logprob: -5.877824306488037
    3. 'str' → logprob: -11.502824783325195
    4. 'Str' → logprob: -12.002824783325195
    5. '2' → logprob: -13.252824783325195
    6. '```' → logprob: -14.252824783325195
    7. '_STR' → logprob: -15.002824783325195
    8. '_[' → logprob: -15.752824783325195
    9. '_' → logprob: -16.002824783325195
    10. '_Str' → logprob: -17.002824783325195

Token 45: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011367550177965313
    2. '0' → logprob: -9.125113487243652
    3. '3' → logprob: -13.125113487243652
    4. '1' → logprob: -14.000113487243652
    5. '```' → logprob: -14.125113487243652
    6. ' ' → logprob: -14.937613487243652
    7. ']' → logprob: -15.125113487243652
    8. '-' → logprob: -15.750113487243652
    9. '``' → logprob: -16.31261444091797
    10. '۲' → logprob: -17.12511444091797

Token 46: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1643974483013153
    2. ']:' → logprob: -2.2893974781036377
    3. ')' → logprob: -3.5393974781036377
    4. ']' → logprob: -4.164397239685059
    5. ':' → logprob: -5.539397239685059
    6. ']):' → logprob: -7.539397239685059
    7. ''):' → logprob: -8.289397239685059
    8. ' ):' → logprob: -8.414397239685059
    9. ' and' → logprob: -8.664397239685059
    10. '']:' → logprob: -9.164397239685059

Token 47: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021197665482759476
    2. '       ' → logprob: -4.27119779586792
    3. '   ' → logprob: -5.64619779586792
    4. ':
' → logprob: -5.77119779586792
    5. ' :' → logprob: -8.396197319030762
    6. '    ' → logprob: -10.021197319030762
    7. ' :
' → logprob: -11.396197319030762
    8. '):' → logprob: -11.646197319030762
    9. ':return' → logprob: -11.771197319030762
    10. ' and' → logprob: -11.771197319030762

Token 48: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15557776391506195
    2. '       ' → logprob: -2.0305776596069336
    3. 'print' → logprob: -4.905577659606934
    4. ' print' → logprob: -5.905577659606934
    5. ' continue' → logprob: -6.780577659606934
    6. 'continue' → logprob: -7.405577659606934
    7. '```' → logprob: -7.905577659606934
    8. '           ' → logprob: -8.905577659606934
    9. '\n' → logprob: -9.280577659606934
    10. '    
' → logprob: -9.405577659606934

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026341291144490242
    2. '=' → logprob: -3.651341199874878
    3. ' +=' → logprob: -10.651341438293457
    4. ' ' → logprob: -11.651341438293457
    5. ' =
' → logprob: -12.026341438293457
    6. '.' → logprob: -14.526341438293457
    7. ' =)' → logprob: -14.776341438293457
    8. '+=' → logprob: -15.526341438293457
    9. ' |=' → logprob: -15.651341438293457
    10. ')' → logprob: -15.651341438293457

Token 50: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1005893275141716
    2. ' i' → logprob: -2.3505892753601074
    3. '   ' → logprob: -8.225589752197266
    4. ' ' → logprob: -10.475589752197266
    5. 'int' → logprob: -10.600589752197266
    6. 'True' → logprob: -11.100589752197266
    7. 'str' → logprob: -11.475589752197266
    8. ' True' → logprob: -11.850589752197266
    9. '"' → logprob: -12.100589752197266
    10. ' str' → logprob: -12.850589752197266

Token 51: '_str' (ID: 6182)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11107942461967468
    2. '
' → logprob: -3.236079454421997
    3. '       ' → logprob: -3.236079454421997
    4. '+' → logprob: -4.736079216003418
    5. 'print' → logprob: -6.111079216003418
    6. '\n' → logprob: -6.236079216003418
    7. '    
' → logprob: -6.236079216003418
    8. '           ' → logprob: -6.236079216003418
    9. '    ' → logprob: -6.611079216003418
    10. ' ' → logprob: -6.736079216003418

Token 52: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5613837838172913
    2. '   ' → logprob: -1.0613837242126465
    3. '           ' → logprob: -3.0613837242126465
    4. '
' → logprob: -4.3113837242126465
    5. '.' → logprob: -5.6863837242126465
    6. '\n' → logprob: -5.8113837242126465
    7. '               ' → logprob: -6.4363837242126465
    8. '    ' → logprob: -6.6863837242126465
    9. '    
' → logprob: -6.6863837242126465
    10. '[' → logprob: -6.8113837242126465

Token 53: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6987095475196838
    2. '       ' → logprob: -0.6987095475196838
    3. 'print' → logprob: -6.448709487915039
    4. '           ' → logprob: -6.698709487915039
    5. '    
' → logprob: -7.448709487915039
    6. '.' → logprob: -8.198709487915039
    7. '    ' → logprob: -8.198709487915039
    8. '\n' → logprob: -8.573709487915039
    9. '     ' → logprob: -8.698709487915039
    10. '<|end|>' → logprob: -8.698709487915039

Token 54: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005129626952111721
    2. '   ' → logprob: -5.505129814147949
    3. ' break' → logprob: -8.13012981414795
    4. 'print' → logprob: -8.25512981414795
    5. 'break' (adapté à ' break') → logprob: -8.63012981414795
    6. '\n' → logprob: -9.88012981414795
    7. '           ' → logprob: -10.13012981414795
    8. '.' → logprob: -10.13012981414795
    9. '	break' → logprob: -10.50512981414795
    10. ' ' → logprob: -10.75512981414795

Token 55: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5697441101074219
    2. '#' → logprob: -1.6947441101074219
    3. 'print' → logprob: -1.6947441101074219
    4. '<|end|>' → logprob: -3.444744110107422
    5. '```' → logprob: -4.819744110107422
    6. '[' → logprob: -5.069744110107422
    7. ':' → logprob: -5.194744110107422
    8. ' ' → logprob: -6.069744110107422
    9. '
' → logprob: -6.194744110107422
    10. '+' → logprob: -6.694744110107422

Token 57: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1284276247024536
    2. '(ans' → logprob: -2.128427505493164
    3. '('' → logprob: -7.003427505493164
    4. '("("' → logprob: -7.503427505493164
    5. '()' → logprob: -10.503427505493164
    6. '("' → logprob: -13.253427505493164
    7. '((' → logprob: -13.503427505493164
    8. '(f' → logprob: -13.753427505493164
    9. '(answer' → logprob: -13.878427505493164
    10. '("(' → logprob: -14.128427505493164

Token 58: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.980854959692806e-05
    2. '))' → logprob: -10.000069618225098
    3. '_str' → logprob: -11.000069618225098
    4. '_)' → logprob: -12.500069618225098
    5. ' )' → logprob: -13.500069618225098
    6. '})' → logprob: -14.000069618225098
    7. ')))' → logprob: -14.875069618225098
    8. ')_' → logprob: -15.250069618225098
    9. '}' → logprob: -15.750069618225098
    10. ')`' → logprob: -15.750069618225098


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 56
Tokens correctement prédits (1ère position, stricte): 18
Tokens correctement prédits (1ère position, avec adaptation): 19
Tokens correctement prédits (top 10): 47
Précision stricte (1ère position): 32.14%
Précision adaptée (1ère position): 33.93%
Précision (top 10): 83.93%
================================================================================
