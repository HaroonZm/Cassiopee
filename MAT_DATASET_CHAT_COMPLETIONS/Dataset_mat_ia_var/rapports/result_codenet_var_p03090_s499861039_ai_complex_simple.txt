================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import combinations, chain, repeat, islice

N = int(input())

K = (lambda n: n // 2 if n % 2 == 0 else (n - 1) // 2)(N)
F = lambda n: n * (n - 1) // 2
M = F(N) - K

S = (N + 1, N)[N % 2]

# indices à exclure : sum = S
P = ((i, j) for i, j in combinations(range(1, N + 1), 2) if i + j != S)
L = list(P)
ans = '{}\n{}'.format(M, '\n'.join(map(lambda t: '{} {}'.format(*t), L)))
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.6123510599136353
    2. 'wrap' → logprob: -0.8623510599136353
    3. 'reduce' → logprob: -3.4873509407043457
    4. 'l' → logprob: -6.112350940704346
    5. ' wraps' → logprob: -6.362350940704346
    6. 'cached' → logprob: -7.612350940704346
    7. 'cache' → logprob: -7.987350940704346
    8. 'cmp' → logprob: -9.112351417541504
    9. '```' → logprob: -9.237351417541504
    10. ' partial' → logprob: -9.487351417541504

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010288605466485023
    2. '(lambda' → logprob: -4.760288715362549
    3. ' (' → logprob: -7.385288715362549
    4. ',' → logprob: -7.885288715362549
    5. 'def' → logprob: -8.13528823852539
    6. '.' → logprob: -8.76028823852539
    7. '```' → logprob: -10.13528823852539
    8. '(
' → logprob: -10.51028823852539
    9. 'lambda' → logprob: -10.63528823852539
    10. 'a' → logprob: -10.76028823852539

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01442087721079588
    2. '(
' → logprob: -5.139420986175537
    3. '(lambda' → logprob: -5.389420986175537
    4. 'def' → logprob: -6.639420986175537
    5. ',' → logprob: -7.139420986175537
    6. '\' → logprob: -8.139420509338379
    7. ' ' → logprob: -8.264420509338379
    8. ' (' → logprob: -8.389420509338379
    9. '' → logprob: -9.139420509338379
    10. '
' → logprob: -9.139420509338379

Token 6: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.5442676544189453
    2. ' itertools' → logprob: -1.4192676544189453
    3. ' math' → logprob: -2.0442676544189453
    4. ' collections' → logprob: -3.1692676544189453
    5. 'operator' → logprob: -5.544267654418945
    6. ' os' → logprob: -6.669267654418945
    7. ' typing' → logprob: -8.044267654418945
    8. 'math' → logprob: -8.044267654418945
    9. 'collections' → logprob: -8.669267654418945
    10. ' ' → logprob: -8.919267654418945

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.14618541300296783
    2. 'import' → logprob: -2.2711853981018066
    3. '.' → logprob: -3.5211853981018066
    4. ' .' → logprob: -6.396185398101807
    5. '.import' → logprob: -6.771185398101807
    6. ' ' → logprob: -8.521185874938965
    7. '	import' → logprob: -9.771185874938965
    8. '<|end|>' → logprob: -9.771185874938965
    9. '_import' → logprob: -10.271185874938965
    10. '.im' → logprob: -10.896185874938965

Token 8: ' combinations' (ID: 43835)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.8675806522369385
    2. 'chain' → logprob: -1.7425806522369385
    3. 'acc' → logprob: -1.8675806522369385
    4. 'count' → logprob: -1.9925806522369385
    5. 'cycle' → logprob: -2.8675806522369385
    6. 'com' → logprob: -3.3675806522369385
    7. 'is' → logprob: -4.992580413818359
    8. 'product' → logprob: -5.367580413818359
    9. ' group' → logprob: -5.492580413818359
    10. 'per' → logprob: -5.867580413818359

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09979884326457977
    2. '(
' → logprob: -2.4747989177703857
    3. '\' → logprob: -5.349798679351807
    4. 'def' → logprob: -5.849798679351807
    5. '(

' → logprob: -6.849798679351807
    6. '\n' → logprob: -6.974798679351807
    7. '```' → logprob: -8.849799156188965
    8. '.' → logprob: -8.849799156188965
    9. ',' → logprob: -9.099799156188965
    10. 'import' → logprob: -9.224799156188965

Token 10: ' chain' (ID: 13464)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.2045811414718628
    2. 'product' → logprob: -2.4545812606811523
    3. ' permutations' → logprob: -2.5795812606811523
    4. 'chain' → logprob: -5.079581260681152
    5. ' product' → logprob: -5.079581260681152
    6. 'group' → logprob: -5.454581260681152
    7. ' chain' → logprob: -6.454581260681152
    8. 'count' → logprob: -6.579581260681152
    9. 'com' → logprob: -6.704581260681152
    10. ' group' → logprob: -6.954581260681152

Token 11: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5510215163230896
    2. '(
' → logprob: -1.8010215759277344
    3. '(' → logprob: -2.5510215759277344
    4. '\n' → logprob: -2.8010215759277344
    5. '\' → logprob: -3.1760215759277344
    6. '
' → logprob: -3.1760215759277344
    7. ',' → logprob: -4.426021575927734
    8. '```' → logprob: -5.176021575927734
    9. '

' → logprob: -5.926021575927734
    10. 'import' → logprob: -6.051021575927734

Token 12: ' repeat' (ID: 22962)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.39943379163742065
    2. ' product' → logprob: -1.3994338512420654
    3. ' permutations' → logprob: -3.7744338512420654
    4. 'per' → logprob: -3.8994338512420654
    5. 'com' → logprob: -4.024433612823486
    6. 'count' → logprob: -5.149433612823486
    7. 'group' → logprob: -5.274433612823486
    8. 'filter' → logprob: -5.899433612823486
    9. 'acc' → logprob: -6.024433612823486
    10. ' group' → logprob: -6.524433612823486

Token 13: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6547459959983826
    2. '\' → logprob: -1.7797460556030273
    3. '\n' → logprob: -2.5297460556030273
    4. ',' → logprob: -2.9047460556030273
    5. '(' → logprob: -3.2797460556030273
    6. '(
' → logprob: -3.4047460556030273
    7. '
' → logprob: -3.5297460556030273
    8. '#' → logprob: -4.154746055603027
    9. '```' → logprob: -4.279746055603027
    10. '`' → logprob: -4.529746055603027

Token 14: ' is' (ID: 382)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.26324543356895447
    2. 'acc' → logprob: -2.7632453441619873
    3. ' product' → logprob: -3.0132453441619873
    4. 'st' → logprob: -3.7632453441619873
    5. 'count' → logprob: -4.013245582580566
    6. 'per' → logprob: -4.138245582580566
    7. 'group' → logprob: -4.263245582580566
    8. 'cycle' → logprob: -4.388245582580566
    9. 'com' → logprob: -4.763245582580566
    10. 'is' → logprob: -5.013245582580566

Token 15: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -3.5120287066092715e-05
    2. 'lic' → logprob: -10.500035285949707
    3. 'l' → logprob: -12.250035285949707
    4. 'licing' → logprob: -14.625035285949707
    5. '```' → logprob: -14.750035285949707
    6. 'liced' → logprob: -14.875035285949707
    7. 'li' → logprob: -14.875035285949707
    8. 'lices' → logprob: -15.500035285949707
    9. 'a' → logprob: -16.12503433227539
    10. '_' → logprob: -16.12503433227539

Token 16: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8650609254837036
    2. 'def' → logprob: -1.7400609254837036
    3. '

' → logprob: -2.115060806274414
    4. ',' → logprob: -2.365060806274414
    5. 'import' → logprob: -2.365060806274414
    6. '\n' → logprob: -3.740060806274414
    7. ',
' → logprob: -4.115060806274414
    8. '```' → logprob: -4.115060806274414
    9. '\' → logprob: -4.365060806274414
    10. ',

' → logprob: -5.740060806274414

Token 17: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22167785465717316
    2. '\' → logprob: -2.721677780151367
    3. 'd' → logprob: -2.846677780151367
    4. '(' → logprob: -3.596677780151367
    5. '```' → logprob: -4.096677780151367
    6. '#' → logprob: -4.846677780151367
    7. '`' → logprob: -4.971677780151367
    8. '(
' → logprob: -5.096677780151367
    9. ',' → logprob: -5.971677780151367
    10. '.' → logprob: -6.471677780151367

Token 18: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9825162887573242
    2. '=' → logprob: -1.3575162887573242
    3. ',' → logprob: -1.4825162887573242
    4. ' =' → logprob: -2.482516288757324
    5. 'umber' → logprob: -4.232516288757324
    6. '.' → logprob: -4.357516288757324
    7. 'o' → logprob: -5.232516288757324
    8. 'E' → logprob: -5.482516288757324
    9. '(' → logprob: -5.607516288757324
    10. 'T' → logprob: -6.357516288757324

Token 19: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2799571752548218
    2. '10' → logprob: -1.7799571752548218
    3. '5' → logprob: -3.2799572944641113
    4. '100' → logprob: -4.404957294464111
    5. '0' → logprob: -4.779957294464111
    6. '3' → logprob: -5.404957294464111
    7. '20' → logprob: -5.779957294464111
    8. '1' → logprob: -6.154957294464111
    9. 'int' → logprob: -6.404957294464111
    10. '4' → logprob: -6.779957294464111

Token 20: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000719222822226584
    2. '('' → logprob: -7.50071907043457
    3. '(
' → logprob: -10.25071907043457
    4. '(N' → logprob: -10.87571907043457
    5. '(`' → logprob: -10.87571907043457
    6. '```' → logprob: -10.87571907043457
    7. '(input' → logprob: -11.00071907043457
    8. '("' → logprob: -11.75071907043457
    9. ' (' → logprob: -11.87571907043457
    10. ''' → logprob: -11.87571907043457

Token 21: '())

' (ID: 27654)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.34297239780426025
    2. '(' → logprob: -1.9679723978042603
    3. '())' → logprob: -1.9679723978042603
    4. ')' → logprob: -4.592972278594971
    5. '(
' → logprob: -8.092972755432129
    6. '('' → logprob: -8.842972755432129
    7. '(

' → logprob: -9.842972755432129
    8. '(()' → logprob: -10.342972755432129
    9. '().' → logprob: -10.717972755432129
    10. '()))' → logprob: -10.842972755432129

Token 22: 'K' (ID: 42)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2293124198913574
    2. 'for' → logprob: -2.3543124198913574
    3. 'result' → logprob: -2.4793124198913574
    4. 'data' → logprob: -2.4793124198913574
    5. 'def' → logprob: -2.8543124198913574
    6. 'numbers' → logprob: -2.8543124198913574
    7. 'a' → logprob: -3.1043124198913574
    8. 's' → logprob: -3.3543124198913574
    9. 'nums' → logprob: -3.4793124198913574
    10. '[' → logprob: -3.8543124198913574

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25730040669441223
    2. '=' → logprob: -1.5073003768920898
    3. ' ' → logprob: -6.63230037689209
    4. 's' → logprob: -6.63230037689209
    5. '_' → logprob: -6.75730037689209
    6. ')' → logprob: -7.75730037689209
    7. ',' → logprob: -7.75730037689209
    8. '.' → logprob: -7.88230037689209
    9. '[' → logprob: -9.75730037689209
    10. ' ,' → logprob: -10.38230037689209

Token 24: ' (' (ID: 350)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.48607927560806274
    2. 'int' → logprob: -0.9860792756080627
    3. ' N' → logprob: -4.736079216003418
    4. '[int' → logprob: -7.236079216003418
    5. 'N' → logprob: -7.361079216003418
    6. '0' → logprob: -7.986079216003418
    7. ' ' → logprob: -8.111079216003418
    8. ' list' → logprob: -8.361079216003418
    9. '1' → logprob: -8.486079216003418
    10. 'list' → logprob: -8.611079216003418

Token 25: 'lambda' (ID: 35280)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.025821665301918983
    2. ' N' → logprob: -4.650821685791016
    3. '1' → logprob: -5.025821685791016
    4. '2' → logprob: -6.400821685791016
    5. 'i' → logprob: -6.525821685791016
    6. ' ' → logprob: -7.150821685791016
    7. ')' → logprob: -7.275821685791016
    8. 'lambda' → logprob: -7.275821685791016
    9. 'len' → logprob: -7.525821685791016
    10. '(N' → logprob: -7.900821685791016

Token 26: ' n' (ID: 297)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.48157569766044617
    2. ' n' → logprob: -1.3565757274627686
    3. 'x' → logprob: -2.6065757274627686
    4. 'n' → logprob: -3.9815757274627686
    5. ' s' → logprob: -4.6065754890441895
    6. ' a' → logprob: -5.2315754890441895
    7. ' k' → logprob: -5.4815754890441895
    8. 'a' → logprob: -6.2315754890441895
    9. ' i' → logprob: -6.3565754890441895
    10. ' f' → logprob: -6.4815754890441895

Token 27: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01568390615284443
    2. ' :' → logprob: -4.640684127807617
    3. ',' → logprob: -5.265684127807617
    4. ':n' → logprob: -7.890684127807617
    5. ' n' → logprob: -8.890684127807617
    6. 'n' → logprob: -9.515684127807617
    7. ',n' → logprob: -10.015684127807617
    8. '=' → logprob: -11.015684127807617
    9. ' ,' → logprob: -11.640684127807617
    10. 's' → logprob: -11.890684127807617

Token 28: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.1173861026763916
    2. 'n' → logprob: -1.8673861026763916
    3. '(n' → logprob: -1.9923861026763916
    4. ' (' → logprob: -2.9923861026763916
    5. 'lambda' → logprob: -2.9923861026763916
    6. ' ' → logprob: -3.4923861026763916
    7. ' lambda' → logprob: -3.7423861026763916
    8. 'range' → logprob: -3.8673861026763916
    9. 'sum' → logprob: -3.8673861026763916
    10. 'reduce' → logprob: -3.8673861026763916

Token 29: ' //' (ID: 602)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*(' → logprob: -1.1937366724014282
    2. ':' → logprob: -1.3187366724014282
    3. ' *' → logprob: -1.9437366724014282
    4. '+' → logprob: -2.6937365531921387
    5. '*' → logprob: -2.8187365531921387
    6. ' if' → logprob: -3.0687365531921387
    7. '-' → logprob: -3.1937365531921387
    8. ' +' → logprob: -3.6937365531921387
    9. '**' → logprob: -4.193736553192139
    10. ' -' → logprob: -5.068736553192139

Token 30: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2438596934080124
    2. '3' → logprob: -1.9938596487045288
    3. '10' → logprob: -3.4938597679138184
    4. '5' → logprob: -3.8688597679138184
    5. '4' → logprob: -4.868859767913818
    6. '1' → logprob: -5.618859767913818
    7. ' ' → logprob: -5.618859767913818
    8. '6' → logprob: -5.743859767913818
    9. '7' → logprob: -5.868859767913818
    10. '100' → logprob: -6.243859767913818

Token 31: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2679748833179474
    2. '3' → logprob: -2.017974853515625
    3. '10' → logprob: -2.767974853515625
    4. '5' → logprob: -4.267974853515625
    5. '4' → logprob: -4.892974853515625
    6. '100' → logprob: -5.642974853515625
    7. '1' → logprob: -5.767974853515625
    8. '7' → logprob: -5.892974853515625
    9. '6' → logprob: -6.142974853515625
    10. '26' → logprob: -7.142974853515625

Token 32: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019137614872306585
    2. ')(' → logprob: -7.376913547515869
    3. ' )' → logprob: -8.001914024353027
    4. '+' → logprob: -8.001914024353027
    5. ')n' → logprob: -8.751914024353027
    6. ',' → logprob: -8.876914024353027
    7. '))' → logprob: -9.751914024353027
    8. ' +' → logprob: -10.376914024353027
    9. '(n' → logprob: -10.376914024353027
    10. '),' → logprob: -10.501914024353027

Token 33: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2525201737880707
    2. 'n' → logprob: -1.502520203590393
    3. ' ' → logprob: -8.127520561218262
    4. ' not' → logprob: -9.877520561218262
    5. '(n' → logprob: -10.252520561218262
    6. ' (' → logprob: -10.377520561218262
    7. ' True' → logprob: -10.377520561218262
    8. 'True' → logprob: -10.502520561218262
    9. '  ' → logprob: -10.627520561218262
    10. '2' → logprob: -11.315020561218262

Token 34: ' %' (ID: 1851)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2064106464385986
    2. ' >' → logprob: -1.3314106464385986
    3. '>' → logprob: -1.5814106464385986
    4. ' >=' → logprob: -2.7064106464385986
    5. '%' → logprob: -2.8314106464385986
    6. ' %' → logprob: -3.4564106464385986
    7. '>=' → logprob: -3.7064106464385986
    8. ' <=' → logprob: -4.0814104080200195
    9. ' <' → logprob: -4.3314104080200195
    10. '<=' → logprob: -5.2064104080200195

Token 35: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03365515172481537
    2. ' ' → logprob: -3.4086551666259766
    3. '```' → logprob: -12.533655166625977
    4. '  ' → logprob: -13.533655166625977
    5. '3' → logprob: -13.658655166625977
    6. '4' → logprob: -14.408655166625977
    7. '1' → logprob: -14.783655166625977
    8. '   ' → logprob: -15.096155166625977
    9. '>' → logprob: -15.221155166625977
    10. '==' → logprob: -15.283655166625977

Token 36: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001830410328693688
    2. ' ' → logprob: -8.62518310546875
    3. '4' → logprob: -13.87518310546875
    4. '3' → logprob: -14.00018310546875
    5. '```' → logprob: -14.37518310546875
    6. '1' → logprob: -15.81268310546875
    7. '  ' → logprob: -15.87518310546875
    8. '10' → logprob: -15.93768310546875
    9. '6' → logprob: -16.25018310546875
    10. '   ' → logprob: -16.62518310546875

Token 37: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4040946364402771
    2. ' ==' → logprob: -1.1540946960449219
    3. ' else' → logprob: -4.154094696044922
    4. 'else' → logprob: -7.154094696044922
    5. ' ' → logprob: -8.154094696044922
    6. '0' → logprob: -8.404094696044922
    7. '==
' → logprob: -11.154094696044922
    8. '!=' → logprob: -11.279094696044922
    9. ' !=' → logprob: -11.279094696044922
    10. '=' → logprob: -11.529094696044922

Token 38: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04896680265665054
    2. ' ' → logprob: -3.048966884613037
    3. '2' → logprob: -7.923966884613037
    4. '1' → logprob: -11.423966407775879
    5. '==' → logprob: -12.798966407775879
    6. '=' → logprob: -13.486466407775879
    7. '```' → logprob: -14.548966407775879
    8. '  ' → logprob: -14.861466407775879
    9. ')' → logprob: -15.923966407775879
    10. ' ' → logprob: -16.111467361450195

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006151442416012287
    2. '2' → logprob: -5.2561516761779785
    3. ' ' → logprob: -7.0061516761779785
    4. '1' → logprob: -11.75615119934082
    5. '```' → logprob: -14.75615119934082
    6. '==' → logprob: -15.06865119934082
    7. '4' → logprob: -15.19365119934082
    8. '3' → logprob: -15.31865119934082
    9. '=' → logprob: -15.50615119934082
    10. '6' → logprob: -16.06865119934082

Token 40: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.06994854658842087
    2. 'else' → logprob: -2.694948434829712
    3. ' ' → logprob: -12.194948196411133
    4. ' ' → logprob: -12.944948196411133
    5. '+' → logprob: -14.069948196411133
    6. '```' → logprob: -14.444948196411133
    7. '	else' → logprob: -14.694948196411133
    8. '        ' → logprob: -15.069948196411133
    9. '-' → logprob: -15.069948196411133
    10. ' and' → logprob: -15.069948196411133

Token 41: ' (' (ID: 350)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6144105195999146
    2. ' (' → logprob: -1.4894105195999146
    3. 'n' → logprob: -1.9894105195999146
    4. '(n' → logprob: -2.364410400390625
    5. '   ' → logprob: -7.114410400390625
    6. ' ' → logprob: -7.239410400390625
    7. '(' → logprob: -7.489410400390625
    8. '3' → logprob: -8.489410400390625
    9. '((' → logprob: -9.614410400390625
    10. '1' → logprob: -9.801910400390625

Token 42: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6405172944068909
    2. ' n' → logprob: -1.140517234802246
    3. '(n' → logprob: -2.140517234802246
    4. ' (' → logprob: -3.390517234802246
    5. '   ' → logprob: -7.390517234802246
    6. '3' → logprob: -7.390517234802246
    7. ' ' → logprob: -8.015517234802246
    8. '(' → logprob: -9.015517234802246
    9. ')n' → logprob: -10.078017234802246
    10. '  ' → logprob: -10.140517234802246

Token 43: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7956465482711792
    2. '-' → logprob: -1.7956465482711792
    3. ' +' → logprob: -1.7956465482711792
    4. ' //' → logprob: -2.0456466674804688
    5. ' -' → logprob: -2.5456466674804688
    6. '//' → logprob: -4.920646667480469
    7. ' ' → logprob: -6.920646667480469
    8. '*' → logprob: -8.545646667480469
    9. ' *' → logprob: -8.795646667480469
    10. '1' → logprob: -9.920646667480469

Token 44: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004653691779822111
    2. ' ' → logprob: -5.379653453826904
    3. '2' → logprob: -10.879653930664062
    4. '3' → logprob: -11.254653930664062
    5. '  ' → logprob: -14.817153930664062
    6. '   ' → logprob: -15.067153930664062
    7. ')' → logprob: -15.942153930664062
    8. '```' → logprob: -16.004653930664062
    9. '5' → logprob: -16.254653930664062
    10. '7' → logprob: -16.442153930664062

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.264322317088954e-05
    2. ' ' → logprob: -10.375052452087402
    3. '3' → logprob: -11.250052452087402
    4. '2' → logprob: -12.125052452087402
    5. '5' → logprob: -14.250052452087402
    6. '   ' → logprob: -14.937552452087402
    7. '7' → logprob: -15.000052452087402
    8. '4' → logprob: -15.500052452087402
    9. '```' → logprob: -15.562552452087402
    10. '  ' → logprob: -15.625052452087402

Token 46: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001221774611622095
    2. ')//' → logprob: -6.876221656799316
    3. ' )' → logprob: -8.626221656799316
    4. '//' → logprob: -12.501221656799316
    5. '))' → logprob: -13.251221656799316
    6. ' ' → logprob: -13.376221656799316
    7. '```' → logprob: -14.626221656799316
    8. '）' → logprob: -14.626221656799316
    9. ')))' → logprob: -15.126221656799316
    10. '   ' → logprob: -15.376221656799316

Token 47: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3336922526359558
    2. ' //' → logprob: -1.3336923122406006
    3. '//' → logprob: -4.2086920738220215
    4. ' )' → logprob: -5.9586920738220215
    5. ' ' → logprob: -6.4586920738220215
    6. ')//' → logprob: -7.4586920738220215
    7. '```' → logprob: -8.20869255065918
    8. '   ' → logprob: -9.83369255065918
    9. '))' → logprob: -10.08369255065918
    10. '),' → logprob: -10.08369255065918

Token 48: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01815778948366642
    2. ' ' → logprob: -4.018157958984375
    3. '1' → logprob: -12.393157958984375
    4. '3' → logprob: -13.018157958984375
    5. '
' → logprob: -14.768157958984375
    6. '```' → logprob: -15.455657958984375
    7. ')' → logprob: -16.205657958984375
    8. '   ' → logprob: -16.205657958984375
    9. '

' → logprob: -16.580657958984375
    10. '  ' → logprob: -16.643157958984375

Token 49: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.333223139634356e-05
    2. ' ' → logprob: -10.625033378601074
    3. '1' → logprob: -12.125033378601074
    4. '3' → logprob: -12.875033378601074
    5. '```' → logprob: -15.687533378601074
    6. '   ' → logprob: -16.125032424926758
    7. '

' → logprob: -16.375032424926758
    8. '  ' → logprob: -16.625032424926758
    9. '	' → logprob: -16.812532424926758
    10. '4' → logprob: -16.875032424926758

Token 50: ')(' (ID: 4898)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005551762878894806
    2. ')(' → logprob: -6.380551815032959
    3. '+' → logprob: -6.630551815032959
    4. ')n' → logprob: -6.755551815032959
    5. ' )' → logprob: -7.755551815032959
    6. '))' → logprob: -8.2555513381958
    7. ' +' → logprob: -8.6305513381958
    8. '(n' → logprob: -8.7555513381958
    9. ' ' → logprob: -10.0055513381958
    10. ')))' → logprob: -10.1305513381958

Token 51: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -5.860340752406046e-05
    2. ' N' → logprob: -9.7500581741333
    3. 'n' → logprob: -15.3750581741333
    4. ' ' → logprob: -17.250059127807617
    5. ')' → logprob: -17.625059127807617
    6. '	N' → logprob: -19.500059127807617
    7. '(N' → logprob: -19.750059127807617
    8. '   ' → logprob: -19.875059127807617
    9. '  ' → logprob: -20.500059127807617
    10. 'K' → logprob: -22.125059127807617

Token 52: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8193366486229934e-05
    2. '))' → logprob: -12.000018119812012
    3. '+' → logprob: -12.125018119812012
    4. ' )' → logprob: -12.250018119812012
    5. ')))' → logprob: -14.000018119812012
    6. ')
' → logprob: -15.500018119812012
    7. '),' → logprob: -16.125019073486328
    8. ')+' → logprob: -16.125019073486328
    9. ')`' → logprob: -16.250019073486328
    10. '+)' → logprob: -16.625019073486328

Token 53: 'F' (ID: 37)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21438369154930115
    2. ')' → logprob: -2.464383602142334
    3. 'for' → logprob: -3.339383602142334
    4. 'print' → logprob: -3.964383602142334
    5. '*' → logprob: -4.839383602142334
    6. 'result' → logprob: -4.964383602142334
    7. '+' → logprob: -4.964383602142334
    8. '#' → logprob: -5.089383602142334
    9. '\n' → logprob: -5.339383602142334
    10. '<|end|>' → logprob: -5.464383602142334

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43205034732818604
    2. '(' → logprob: -2.5570502281188965
    3. 'or' → logprob: -2.8070502281188965
    4. '=' → logprob: -2.8070502281188965
    5. 'ull' → logprob: -3.5570502281188965
    6. 'R' → logprob: -4.0570502281188965
    7. 'rom' → logprob: -4.1820502281188965
    8. 'r' → logprob: -4.4320502281188965
    9. 'L' → logprob: -4.6820502281188965
    10. 'requencies' → logprob: -5.0570502281188965

Token 55: ' lambda' (ID: 27871)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8234052658081055
    2. 'lambda' → logprob: -1.1984052658081055
    3. ' list' → logprob: -2.3234052658081055
    4. '(lambda' → logprob: -2.5734052658081055
    5. ' lambda' → logprob: -3.0734052658081055
    6. 'repeat' → logprob: -4.6984052658081055
    7. 'range' → logprob: -5.0734052658081055
    8. 'reduce' → logprob: -5.1984052658081055
    9. '[' → logprob: -5.4484052658081055
    10. '(re' → logprob: -6.0734052658081055

Token 56: ' n' (ID: 297)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9617335796356201
    2. ' n' → logprob: -1.5867335796356201
    3. 'x' → logprob: -1.7117335796356201
    4. ' lambda' → logprob: -2.21173357963562
    5. 'n' → logprob: -2.58673357963562
    6. 'lambda' → logprob: -4.086733818054199
    7. ' i' → logprob: -4.211733818054199
    8. ' f' → logprob: -5.711733818054199
    9. 'i' → logprob: -5.836733818054199
    10. ' k' → logprob: -6.211733818054199

Token 57: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009145212359726429
    2. ',' → logprob: -5.259145259857178
    3. ' :' → logprob: -5.634145259857178
    4. ',:' → logprob: -9.63414478302002
    5. '=' → logprob: -9.88414478302002
    6. 'n' → logprob: -9.88414478302002
    7. ',n' → logprob: -10.25914478302002
    8. ' n' → logprob: -10.25914478302002
    9. ':n' → logprob: -11.00914478302002
    10. '_:' → logprob: -11.00914478302002

Token 58: ' n' (ID: 297)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.6885678768157959
    2. '1' → logprob: -0.9385678768157959
    3. 'n' → logprob: -2.938567876815796
    4. ' ' → logprob: -3.938567876815796
    5. ' reduce' → logprob: -3.938567876815796
    6. '0' → logprob: -5.313568115234375
    7. ' n' → logprob: -5.438568115234375
    8. '(n' → logprob: -6.563568115234375
    9. 'factor' → logprob: -6.938568115234375
    10. '(' → logprob: -6.938568115234375

Token 59: ' *' (ID: 425)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.1703864336013794
    2. '+' → logprob: -1.4203864336013794
    3. '(' → logprob: -2.17038631439209
    4. '*' → logprob: -2.42038631439209
    5. '**' → logprob: -2.67038631439209
    6. ' if' → logprob: -2.79538631439209
    7. ' +' → logprob: -3.79538631439209
    8. '-' → logprob: -3.92038631439209
    9. ' *' → logprob: -4.04538631439209
    10. '!' → logprob: -4.29538631439209

Token 60: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07024595141410828
    2. ' (' → logprob: -3.3202459812164307
    3. '2' → logprob: -4.570245742797852
    4. '(N' → logprob: -4.945245742797852
    5. 'F' → logprob: -5.445245742797852
    6. '(' → logprob: -5.945245742797852
    7. '(F' → logprob: -5.945245742797852
    8. 'n' → logprob: -6.320245742797852
    9. '1' → logprob: -6.570245742797852
    10. ' ' → logprob: -7.695245742797852

Token 61: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01834484189748764
    2. '(n' → logprob: -4.143344879150391
    3. ' n' → logprob: -6.143344879150391
    4. ' (' → logprob: -9.14334487915039
    5. '1' → logprob: -11.26834487915039
    6. '(' → logprob: -11.64334487915039
    7. '2' → logprob: -11.64334487915039
    8. ' ' → logprob: -12.01834487915039
    9. '-' → logprob: -12.39334487915039
    10. '	n' → logprob: -12.39334487915039

Token 62: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25811976194381714
    2. ' +' → logprob: -1.633119821548462
    3. ' -' → logprob: -4.133119583129883
    4. '-' → logprob: -4.133119583129883
    5. '1' → logprob: -10.008119583129883
    6. '+)' → logprob: -10.258119583129883
    7. ')' → logprob: -11.383119583129883
    8. ' ' → logprob: -11.508119583129883
    9. '+-' → logprob: -13.820619583129883
    10. '>' → logprob: -13.883119583129883

Token 63: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04858918860554695
    2. ' ' → logprob: -3.0485892295837402
    3. '  ' → logprob: -15.173588752746582
    4. '   ' → logprob: -15.173588752746582
    5. ')' → logprob: -15.486088752746582
    6. '<|end|>' → logprob: -15.673588752746582
    7. '    ' → logprob: -15.923588752746582
    8. '2' → logprob: -16.3610897064209
    9. ' ' → logprob: -16.3610897064209
    10. '
' → logprob: -16.4235897064209

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.803360495017841e-05
    2. ' ' → logprob: -9.500078201293945
    3. ')' → logprob: -14.312578201293945
    4. '2' → logprob: -14.750078201293945
    5. '```' → logprob: -15.312578201293945
    6. '

' → logprob: -15.437578201293945
    7. '۱' → logprob: -15.937578201293945
    8. '...' → logprob: -16.125078201293945
    9. '  ' → logprob: -16.187578201293945
    10. '0' → logprob: -16.312578201293945

Token 65: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00423059705644846
    2. ' )' → logprob: -6.129230499267578
    3. ')//' → logprob: -6.254230499267578
    4. ')/' → logprob: -10.254230499267578
    5. '//' → logprob: -10.629230499267578
    6. ' //' → logprob: -11.129230499267578
    7. ')>>' → logprob: -11.879230499267578
    8. '```' → logprob: -12.004230499267578
    9. '`)' → logprob: -12.629230499267578
    10. '")' → logprob: -12.754230499267578

Token 66: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.3929719924926758
    2. ' //' → logprob: -1.2679719924926758
    3. '/' → logprob: -4.017971992492676
    4. ' /' → logprob: -4.892971992492676
    5. ')' → logprob: -5.017971992492676
    6. ' ' → logprob: -5.642971992492676
    7. '<|end|>' → logprob: -5.892971992492676
    8. '(' → logprob: -6.767971992492676
    9. '*' → logprob: -7.642971992492676
    10. 'def' → logprob: -7.767971992492676

Token 67: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.64970643306151e-05
    2. '1' → logprob: -9.500086784362793
    3. ' ' → logprob: -11.375086784362793
    4. '4' → logprob: -16.750085830688477
    5. '3' → logprob: -17.625085830688477
    6. '```' → logprob: -17.875085830688477
    7. '   ' → logprob: -18.750085830688477
    8. '

' → logprob: -19.062585830688477
    9. '' → logprob: -19.375085830688477
    10. ' ' → logprob: -19.562585830688477

Token 68: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.3358446166384965e-05
    2. '1' → logprob: -10.125053405761719
    3. ' ' → logprob: -11.250053405761719
    4. '```' → logprob: -16.56255340576172
    5. '4' → logprob: -17.31255340576172
    6. '3' → logprob: -17.75005340576172
    7. '{' → logprob: -18.37505340576172
    8. '   ' → logprob: -18.68755340576172
    9. '۲' → logprob: -18.75005340576172
    10. '(' → logprob: -18.87505340576172

Token 69: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1575440615415573
    2. 'def' → logprob: -3.4075441360473633
    3. 'result' → logprob: -3.5325441360473633
    4. ')' → logprob: -4.157544136047363
    5. 'n' → logprob: -4.532544136047363
    6. '<|end|>' → logprob: -4.907544136047363
    7. '\n' → logprob: -5.282544136047363
    8. '#' → logprob: -5.532544136047363
    9. '
' → logprob: -5.657544136047363
    10. 'for' → logprob: -5.657544136047363

Token 70: 'M' (ID: 44)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.7199705839157104
    2. 'def' → logprob: -1.8449705839157104
    3. 'for' → logprob: -1.9699705839157104
    4. 'print' → logprob: -2.469970703125
    5. 'M' → logprob: -2.969970703125
    6. 'S' → logprob: -3.219970703125
    7. 'C' → logprob: -3.469970703125
    8. '#' → logprob: -3.719970703125
    9. '_' → logprob: -3.719970703125
    10. 'A' → logprob: -4.219970703125

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29324111342430115
    2. '=' → logprob: -1.4182411432266235
    3. '_' → logprob: -5.293241024017334
    4. 'ax' → logprob: -6.293241024017334
    5. 'a' → logprob: -6.418241024017334
    6. ' ' → logprob: -6.418241024017334
    7. 'A' → logprob: -7.668241024017334
    8. ',' → logprob: -7.918241024017334
    9. 'ap' → logprob: -8.043241500854492
    10. '_a' → logprob: -9.418241500854492

Token 72: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.8767103552818298
    2. ' F' → logprob: -1.3767104148864746
    3. ' ' → logprob: -3.0017104148864746
    4. ' sum' → logprob: -3.3767104148864746
    5. ' [' → logprob: -3.5017104148864746
    6. ' lambda' → logprob: -3.6267104148864746
    7. ' N' → logprob: -4.001710414886475
    8. 'lambda' → logprob: -4.001710414886475
    9. 'sum' → logprob: -4.126710414886475
    10. '[' → logprob: -4.126710414886475

Token 73: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.49677348136901855
    2. '(K' → logprob: -1.6217734813690186
    3. '(' → logprob: -1.9967734813690186
    4. '(F' → logprob: -3.9967734813690186
    5. 'K' → logprob: -4.246773719787598
    6. 'N' → logprob: -5.496773719787598
    7. '<|end|>' → logprob: -5.621773719787598
    8. 'F' → logprob: -5.746773719787598
    9. '(range' → logprob: -5.871773719787598
    10. 'def' → logprob: -6.121773719787598

Token 74: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007607918814755976
    2. '-' → logprob: -8.000761032104492
    3. '+' → logprob: -9.125761032104492
    4. '))' → logprob: -9.125761032104492
    5. ' )' → logprob: -9.375761032104492
    6. ')
' → logprob: -10.875761032104492
    7. ')+' → logprob: -11.000761032104492
    8. ')-' → logprob: -11.500761032104492
    9. '//' → logprob: -11.625761032104492
    10. ' -' → logprob: -11.625761032104492

Token 75: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' K' (ID: 658)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.004547726828604937
    2. 'K' → logprob: -5.504547595977783
    3. ' F' → logprob: -8.004548072814941
    4. 'N' → logprob: -10.004548072814941
    5. '1' → logprob: -10.254548072814941
    6. '(' → logprob: -11.379548072814941
    7. ' ' → logprob: -11.379548072814941
    8. '(F' → logprob: -11.629548072814941
    9. '2' → logprob: -12.004548072814941
    10. ' K' → logprob: -12.379548072814941

Token 77: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28401562571525574
    2. '+' → logprob: -2.534015655517578
    3. '<|end|>' → logprob: -2.784015655517578
    4. '\n' → logprob: -3.534015655517578
    5. '*' → logprob: -3.659015655517578
    6. ')' → logprob: -4.534015655517578
    7. '```' → logprob: -4.659015655517578
    8. '
' → logprob: -5.159015655517578
    9. '**' → logprob: -5.284015655517578
    10. '+
' → logprob: -5.784015655517578

Token 78: 'S' (ID: 50)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.7655760049819946
    2. '#' → logprob: -1.8905760049819946
    3. ')' → logprob: -2.015575885772705
    4. 'print' → logprob: -2.265575885772705
    5. 'for' → logprob: -2.390575885772705
    6. '<|end|>' → logprob: -2.640575885772705
    7. '\n' → logprob: -3.015575885772705
    8. 'def' → logprob: -3.390575885772705
    9. '\' → logprob: -3.515575885772705
    10. 'result' → logprob: -3.515575885772705

Token 79: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7276021242141724
    2. ' =' → logprob: -0.7276021242141724
    3. '_' → logprob: -3.477602005004883
    4. 'PACE' → logprob: -7.102602005004883
    5. 'paces' → logprob: -7.852602005004883
    6. '(' → logprob: -8.227602005004883
    7. 'um' → logprob: -8.727602005004883
    8. ' ' → logprob: -8.727602005004883
    9. ',' → logprob: -8.727602005004883
    10. 'p' → logprob: -9.227602005004883

Token 80: ' (' (ID: 350)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.6386812925338745
    2. 'list' → logprob: -1.6386812925338745
    3. 'sum' → logprob: -3.138681411743164
    4. '{' → logprob: -3.138681411743164
    5. 'chain' → logprob: -3.263681411743164
    6. ' list' → logprob: -3.513681411743164
    7. ' set' → logprob: -3.513681411743164
    8. 'range' → logprob: -3.513681411743164
    9. 'reduce' → logprob: -4.138681411743164
    10. '[]' → logprob: -4.888681411743164

Token 81: 'N' (ID: 45)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.6371471285820007
    2. 'range' → logprob: -1.5121471881866455
    3. 'set' → logprob: -2.1371471881866455
    4. 'list' → logprob: -2.6371471881866455
    5. 'com' → logprob: -4.137146949768066
    6. 'repeat' → logprob: -4.762146949768066
    7. 'lambda' → logprob: -5.137146949768066
    8. 'fro' → logprob: -5.762146949768066
    9. ' chain' → logprob: -6.012146949768066
    10. 'tuple' → logprob: -6.012146949768066

Token 82: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7779387831687927
    2. '-' → logprob: -1.9029388427734375
    3. ' -' → logprob: -1.9029388427734375
    4. ',)' → logprob: -2.5279388427734375
    5. ' +' → logprob: -3.1529388427734375
    6. '+' → logprob: -3.1529388427734375
    7. ' *' → logprob: -4.0279388427734375
    8. ')' → logprob: -4.4029388427734375
    9. '*(' → logprob: -4.4029388427734375
    10. '*' → logprob: -4.9029388427734375

Token 83: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6005569100379944
    2. '1' → logprob: -0.8505569100379944
    3. ' K' → logprob: -3.9755568504333496
    4. 'K' → logprob: -6.22555685043335
    5. '2' → logprob: -6.85055685043335
    6. '"' → logprob: -7.97555685043335
    7. ' M' → logprob: -8.100557327270508
    8. ' (' → logprob: -8.225557327270508
    9. '7' → logprob: -8.475557327270508
    10. ' "' → logprob: -8.600557327270508

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06459439545869827
    2. ' ' → logprob: -3.0645945072174072
    3. 'K' → logprob: -4.814594268798828
    4. ' K' → logprob: -5.689594268798828
    5. 'M' → logprob: -6.189594268798828
    6. ' M' → logprob: -7.064594268798828
    7. '2' → logprob: -7.689594268798828
    8. '-' → logprob: -8.689594268798828
    9. '3' → logprob: -8.689594268798828
    10. 'N' → logprob: -9.064594268798828

Token 85: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031178221106529236
    2. ' )' → logprob: -6.12811803817749
    3. ')//' → logprob: -7.25311803817749
    4. '-' → logprob: -9.628117561340332
    5. ')>>' → logprob: -10.378117561340332
    6. '//' → logprob: -10.753117561340332
    7. '```' → logprob: -10.878117561340332
    8. ' -' → logprob: -11.003117561340332
    9. '`)' → logprob: -11.128117561340332
    10. '")' → logprob: -11.378117561340332

Token 86: ' N' (ID: 478)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5936436653137207
    2. '0' → logprob: -1.8436436653137207
    3. 'N' → logprob: -1.9686436653137207
    4. ' ' → logprob: -3.2186436653137207
    5. ' N' → logprob: -3.8436436653137207
    6. '1' → logprob: -3.9686436653137207
    7. 'M' → logprob: -4.093643665313721
    8. 'K' → logprob: -4.593643665313721
    9. '2' → logprob: -4.593643665313721
    10. 'F' → logprob: -4.718643665313721

Token 87: ')[' (ID: 13637)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06478367745876312
    2. '+' → logprob: -3.5647835731506348
    3. '-' → logprob: -4.564783573150635
    4. '//' → logprob: -5.064783573150635
    5. ' +' → logprob: -5.189783573150635
    6. ' -' → logprob: -5.314783573150635
    7. ',' → logprob: -5.689783573150635
    8. ' )' → logprob: -6.439783573150635
    9. ' //' → logprob: -7.064783573150635
    10. '))' → logprob: -7.314783573150635

Token 88: 'N' (ID: 45)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4471590518951416
    2. ' ' → logprob: -1.9471590518951416
    3. '%' → logprob: -2.0721590518951416
    4. ' ==' → logprob: -3.6971590518951416
    5. ' >' → logprob: -3.6971590518951416
    6. ' <' → logprob: -4.3221588134765625
    7. '>' → logprob: -5.1971588134765625
    8. ' <=' → logprob: -5.3221588134765625
    9. '==' → logprob: -5.4471588134765625
    10. ' N' → logprob: -5.4471588134765625

Token 89: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6171468496322632
    2. '%' → logprob: -0.8671468496322632
    3. '==' → logprob: -4.367146968841553
    4. ' ==' → logprob: -4.742146968841553
    5. ' ' → logprob: -5.367146968841553
    6. '>' → logprob: -5.492146968841553
    7. ' <' → logprob: -5.867146968841553
    8. ' <=' → logprob: -6.117146968841553
    9. '<=' → logprob: -6.242146968841553
    10. '<' → logprob: -6.492146968841553

Token 90: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1428876370191574
    2. ' ' → logprob: -2.017887592315674
    3. '1' → logprob: -9.142888069152832
    4. '4' → logprob: -9.767888069152832
    5. '3' → logprob: -11.392888069152832
    6. '==' → logprob: -11.892888069152832
    7. '%' → logprob: -12.517888069152832
    8. '8' → logprob: -12.517888069152832
    9. '```' → logprob: -12.767888069152832
    10. '6' → logprob: -12.830388069152832

Token 91: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013071446446701884
    2. ' ' → logprob: -6.751307010650635
    3. '1' → logprob: -10.001307487487793
    4. '3' → logprob: -10.251307487487793
    5. '4' → logprob: -11.001307487487793
    6. '6' → logprob: -11.876307487487793
    7. '0' → logprob: -12.001307487487793
    8. '10' → logprob: -12.376307487487793
    9. '7' → logprob: -12.813807487487793
    10. '5' → logprob: -13.063807487487793

Token 92: ']

' (ID: 3144)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22840900719165802
    2. ' ==' → logprob: -1.6034090518951416
    3. ' ' → logprob: -6.7284088134765625
    4. '!=' → logprob: -7.1034088134765625
    5. ' !=' → logprob: -8.103408813476562
    6. '=' → logprob: -8.353408813476562
    7. '0' → logprob: -8.728408813476562
    8. ']' → logprob: -9.353408813476562
    9. '>' → logprob: -9.978408813476562
    10. ']==' → logprob: -9.978408813476562

Token 93: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2117536067962646
    2. '=' → logprob: -1.3367536067962646
    3. ' =' → logprob: -2.5867536067962646
    4. ')' → logprob: -2.9617536067962646
    5. 'def' → logprob: -3.4617536067962646
    6. 'n' → logprob: -3.4617536067962646
    7. ',' → logprob: -3.5867536067962646
    8. '_' → logprob: -3.9617536067962646
    9. '(' → logprob: -4.086753845214844
    10. 'x' → logprob: -4.211753845214844

Token 94: ' indices' (ID: 30378)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7025954723358154
    2. ' for' → logprob: -1.2025954723358154
    3. 'result' → logprob: -3.0775954723358154
    4. 'S' → logprob: -3.4525954723358154
    5. 'def' → logprob: -3.9525954723358154
    6. '_' → logprob: -4.5775957107543945
    7. 'range' → logprob: -4.7025957107543945
    8. 's' → logprob: -4.9525957107543945
    9. 'print' → logprob: -4.9525957107543945
    10. ' S' → logprob: -5.0775957107543945

Token 95: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23097360134124756
    2. '=' → logprob: -1.6059736013412476
    3. '_' → logprob: -5.730973720550537
    4. ',' → logprob: -7.105973720550537
    5. 's' → logprob: -7.355973720550537
    6. ' ' → logprob: -8.105973243713379
    7. '[' → logprob: -9.355973243713379
    8. ':' → logprob: -9.605973243713379
    9. '=[]' → logprob: -9.855973243713379
    10. '_list' → logprob: -10.480973243713379

Token 96: ' excl' (ID: 57282)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.3390577435493469
    2. 'tr' → logprob: -2.964057683944702
    3. 'par' → logprob: -3.089057683944702
    4. ' partir' → logprob: -3.089057683944702
    5. 'sup' → logprob: -3.214057683944702
    6. 'trait' → logprob: -3.589057683944702
    7. 'partition' → logprob: -4.464057922363281
    8. 'comb' → logprob: -4.714057922363281
    9. 'comp' → logprob: -4.964057922363281
    10. 'prendre' → logprob: -5.214057922363281

Token 97: 'ure' (ID: 627)
  Prédit: 'ure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.015175977721810341
    2. 'uire' → logprob: -4.265175819396973
    3. 're' → logprob: -7.515175819396973
    4. 'ur' → logprob: -9.140175819396973
    5. 'ures' → logprob: -9.265175819396973
    6. 'dre' → logprob: -9.765175819396973
    7. 'u' → logprob: -9.890175819396973
    8. 'user' → logprob: -10.015175819396973
    9. 'ud' → logprob: -10.765175819396973
    10. 'sure' → logprob: -11.140175819396973

Token 98: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12926128506660461
    2. '=' → logprob: -2.1292612552642822
    3. ':' → logprob: -6.629261493682861
    4. '_' → logprob: -7.879261493682861
    5. ' ' → logprob: -7.879261493682861
    6. ',' → logprob: -8.754261016845703
    7. '[:]' → logprob: -10.879261016845703
    8. ' :' → logprob: -11.254261016845703
    9. '=[]' → logprob: -11.379261016845703
    10. 's' → logprob: -11.629261016845703

Token 99: ' sum' (ID: 4215)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.619439423084259
    2. ' {' → logprob: -1.8694393634796143
    3. ' range' → logprob: -1.9944393634796143
    4. 'set' → logprob: -2.4944393634796143
    5. '{' → logprob: -3.2444393634796143
    6. 'range' → logprob: -3.4944393634796143
    7. ' list' → logprob: -5.494439601898193
    8. ' ' → logprob: -5.744439601898193
    9. ' [' → logprob: -6.119439601898193
    10. 'list' → logprob: -6.369439601898193

Token 100: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8359683752059937
    2. 's' → logprob: -1.2109683752059937
    3. '_indices' → logprob: -1.7109683752059937
    4. '(' → logprob: -4.210968494415283
    5. '_indexes' → logprob: -4.835968494415283
    6. 'indices' → logprob: -5.085968494415283
    7. '_s' → logprob: -5.085968494415283
    8. 'range' → logprob: -5.460968494415283
    9. 'sum' → logprob: -5.835968494415283
    10. '_range' → logprob: -5.960968494415283

Token 101: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5677611231803894
    2. ' S' → logprob: -1.3177611827850342
    3. ' K' → logprob: -3.067761182785034
    4. 'K' → logprob: -3.192761182785034
    5. 'M' → logprob: -4.442760944366455
    6. 'N' → logprob: -4.442760944366455
    7. ' M' → logprob: -4.567760944366455
    8. '0' → logprob: -4.817760944366455
    9. ' N' → logprob: -4.942760944366455
    10. 'F' → logprob: -4.942760944366455

Token 102: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9394816160202026
    2. '<|end|>' → logprob: -1.5644816160202026
    3. ' ' → logprob: -1.8144816160202026
    4. ':' → logprob: -2.689481735229492
    5. ')' → logprob: -3.064481735229492
    6. ',' → logprob: -3.564481735229492
    7. ']' → logprob: -4.189481735229492
    8. '.' → logprob: -4.314481735229492
    9. 'indices' → logprob: -4.439481735229492
    10. '=' → logprob: -4.564481735229492

Token 103: 'P' (ID: 47)
  Prédit: 'excluded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'excluded' → logprob: -0.14925727248191833
    2. '#' → logprob: -3.024257183074951
    3. 'exclude' → logprob: -3.524257183074951
    4. 'indices' → logprob: -3.774257183074951
    5. 'for' → logprob: -4.899257183074951
    6. 'ex' → logprob: -5.149257183074951
    7. '[' → logprob: -5.524257183074951
    8. ' excluded' → logprob: -5.524257183074951
    9. ')' → logprob: -5.899257183074951
    10. ']' → logprob: -6.399257183074951

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010406476445496082
    2. '=' → logprob: -4.760406494140625
    3. 'r' → logprob: -7.135406494140625
    4. '=set' → logprob: -8.385406494140625
    5. 'airs' → logprob: -8.635406494140625
    6. '_ex' → logprob: -9.510406494140625
    7. 's' → logprob: -9.635406494140625
    8. 'ro' → logprob: -9.760406494140625
    9. 'erms' → logprob: -9.760406494140625
    10. ' ' → logprob: -10.135406494140625

Token 105: ' ((' (ID: 3536)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.334267497062683
    2. '{' → logprob: -1.459267497062683
    3. 'list' → logprob: -1.584267497062683
    4. '[i' → logprob: -2.0842676162719727
    5. 'chain' → logprob: -2.9592676162719727
    6. '[' → logprob: -3.4592676162719727
    7. '{i' → logprob: -3.8342676162719727
    8. '[(' → logprob: -4.459267616271973
    9. '[n' → logprob: -4.584267616271973
    10. '[x' → logprob: -4.709267616271973

Token 106: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0616498738527298
    2. 'a' → logprob: -3.811649799346924
    3. 'x' → logprob: -4.061649799346924
    4. '(i' → logprob: -5.186649799346924
    5. 'j' → logprob: -6.061649799346924
    6. 'r' → logprob: -6.186649799346924
    7. 'k' → logprob: -6.561649799346924
    8. 'n' → logprob: -6.936649799346924
    9. 'S' → logprob: -6.936649799346924
    10. ' i' → logprob: -7.061649799346924

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02171643264591694
    2. ',j' → logprob: -4.271716594696045
    3. ' for' → logprob: -5.396716594696045
    4. 'for' → logprob: -6.646716594696045
    5. ' ,' → logprob: -7.396716594696045
    6. '+' → logprob: -8.021716117858887
    7. ',i' → logprob: -8.021716117858887
    8. 'j' → logprob: -8.896716117858887
    9. ',)' → logprob: -9.646716117858887
    10. ' +' → logprob: -9.896716117858887

Token 108: ' j' (ID: 441)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.03262405842542648
    2. ' S' → logprob: -3.6576240062713623
    3. 'j' → logprob: -5.657624244689941
    4. 'N' → logprob: -6.282624244689941
    5. '(S' → logprob: -8.532624244689941
    6. ' ' → logprob: -8.782624244689941
    7. ')' → logprob: -8.782624244689941
    8. ' j' → logprob: -9.032624244689941
    9. ' N' → logprob: -9.782624244689941
    10. '(' → logprob: -9.907624244689941

Token 109: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0069055212661623955
    2. 'for' → logprob: -5.381905555725098
    3. ' for' → logprob: -6.131905555725098
    4. ')
' → logprob: -9.756905555725098
    5. ' )' → logprob: -10.131905555725098
    6. '
' → logprob: -12.256905555725098
    7. ',' → logprob: -13.131905555725098
    8. '))' → logprob: -13.881905555725098
    9. ',)' → logprob: -13.881905555725098
    10. ' ' → logprob: -14.006905555725098

Token 110: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1428978592157364
    2. 'for' → logprob: -2.017897844314575
    3. ')' → logprob: -8.767897605895996
    4. '	for' → logprob: -10.142897605895996
    5. ' in' → logprob: -11.517897605895996
    6. ' ' → logprob: -11.517897605895996
    7. '
' → logprob: -12.642897605895996
    8. '   ' → logprob: -13.517897605895996
    9. 'in' → logprob: -13.892897605895996
    10. '  ' → logprob: -14.517897605895996

Token 111: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5431140065193176
    2. ' i' → logprob: -0.9181140065193176
    3. 'j' → logprob: -4.543114185333252
    4. ' j' → logprob: -4.793114185333252
    5. ' ' → logprob: -7.918114185333252
    6. ' (' → logprob: -9.043113708496094
    7. ')' → logprob: -9.543113708496094
    8. ' ' → logprob: -10.043113708496094
    9. '   ' → logprob: -10.168113708496094
    10. ' in' → logprob: -10.293113708496094

Token 112: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3456774652004242
    2. ',' → logprob: -1.3456774950027466
    3. 'in' → logprob: -3.470677375793457
    4. ',j' → logprob: -7.720677375793457
    5. ' ,' → logprob: -9.470677375793457
    6. ' i' → logprob: -9.720677375793457
    7. 'i' → logprob: -10.095677375793457
    8. ' ' → logprob: -10.345677375793457
    9. ',i' → logprob: -10.345677375793457
    10. ')' → logprob: -10.470677375793457

Token 113: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.20562714338302612
    2. ' j' → logprob: -1.705627202987671
    3. 'i' → logprob: -5.955626964569092
    4. ' i' → logprob: -7.080626964569092
    5. ' (' → logprob: -7.705626964569092
    6. ' in' → logprob: -9.08062744140625
    7. '(j' → logprob: -9.95562744140625
    8. '<|end|>' → logprob: -9.95562744140625
    9. '(' → logprob: -10.45562744140625
    10. '(i' → logprob: -10.58062744140625

Token 114: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2519839406013489
    2. 'in' → logprob: -1.501983880996704
    3. ')' → logprob: -10.501983642578125
    4. ' ' → logprob: -12.251983642578125
    5. ',' → logprob: -12.251983642578125
    6. '<|end|>' → logprob: -12.501983642578125
    7. '	in' → logprob: -12.626983642578125
    8. ' i' → logprob: -12.876983642578125
    9. 'In' → logprob: -13.751983642578125
    10. 'import' → logprob: -14.064483642578125

Token 115: ' combinations' (ID: 43835)
  Prédit: ' combinations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combinations' → logprob: -0.04529118165373802
    2. 'com' → logprob: -3.1702911853790283
    3. ' chain' → logprob: -6.545290946960449
    4. 'chain' → logprob: -7.920290946960449
    5. ' range' → logprob: -9.04529094696045
    6. '(com' → logprob: -9.67029094696045
    7. 'range' → logprob: -9.67029094696045
    8. ' product' → logprob: -9.67029094696045
    9. ')' → logprob: -10.17029094696045
    10. ' is' → logprob: -10.29529094696045

Token 116: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -7.896309739408025e-07
    2. 'range' → logprob: -14.625000953674316
    3. '(' → logprob: -16.125
    4. ' (' → logprob: -16.875
    5. '(chain' → logprob: -17.125
    6. ' range' → logprob: -17.625
    7. ')' → logprob: -18.875
    8. '((' → logprob: -19.125
    9. '(list' → logprob: -20.0
    10. '   ' → logprob: -20.25

Token 117: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.004637553822249174
    2. '(' → logprob: -5.379637718200684
    3. 'N' → logprob: -11.379637718200684
    4. '(n' → logprob: -12.879637718200684
    5. ' (' → logprob: -13.879637718200684
    6. ')' → logprob: -14.504637718200684
    7. '(
' → logprob: -14.504637718200684
    8. '(S' → logprob: -14.879637718200684
    9. '```' → logprob: -15.879637718200684
    10. '(M' → logprob: -16.004636764526367

Token 118: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0036608832888305187
    2. '1' → logprob: -5.753660678863525
    3. '(N' → logprob: -8.003661155700684
    4. '(' → logprob: -9.253661155700684
    5. ' N' → logprob: -10.128661155700684
    6. ' ' → logprob: -12.503661155700684
    7. '   ' → logprob: -12.753661155700684
    8. ')' → logprob: -13.628661155700684
    9. ',N' → logprob: -13.628661155700684
    10. 'S' → logprob: -13.878661155700684

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00506048696115613
    2. ',N' → logprob: -5.88006067276001
    3. ' ,' → logprob: -6.50506067276001
    4. 'N' → logprob: -7.38006067276001
    5. '1' → logprob: -9.505060195922852
    6. '(N' → logprob: -10.255060195922852
    7. '(' → logprob: -11.380060195922852
    8. ' N' → logprob: -12.630060195922852
    9. ' ' → logprob: -12.755060195922852
    10. '),' → logprob: -13.880060195922852

Token 120: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0010332842357456684
    2. ' N' → logprob: -6.876033306121826
    3. ' ' → logprob: -15.626032829284668
    4. '	N' → logprob: -16.251033782958984
    5. '(N' → logprob: -16.376033782958984
    6. '```' → logprob: -17.001033782958984
    7. '1' → logprob: -17.501033782958984
    8. '   ' → logprob: -17.626033782958984
    9. ' ' → logprob: -17.751033782958984
    10. 'S' → logprob: -18.001033782958984

Token 121: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03805112838745117
    2. ' +' → logprob: -3.288051128387451
    3. '),' → logprob: -11.66305160522461
    4. ' ' → logprob: -15.28805160522461
    5. '```' → logprob: -15.41305160522461
    6. '-' → logprob: -16.41305160522461
    7. ')' → logprob: -16.66305160522461
    8. ',' → logprob: -16.66305160522461
    9. '   ' → logprob: -16.91305160522461
    10. 'N' → logprob: -17.16305160522461

Token 122: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.277553620748222e-05
    2. ' ' → logprob: -9.750062942504883
    3. '2' → logprob: -12.875062942504883
    4. 'N' → logprob: -14.625062942504883
    5. '   ' → logprob: -14.750062942504883
    6. '

' → logprob: -15.625062942504883
    7. '
' → logprob: -15.875062942504883
    8. '```' → logprob: -16.250062942504883
    9. 'S' → logprob: -16.312562942504883
    10. '+' → logprob: -16.312562942504883

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. 'N' → logprob: -12.375014305114746
    3. '+' → logprob: -12.625014305114746
    4. '2' → logprob: -12.750014305114746
    5. ' ' → logprob: -12.750014305114746
    6. '```' → logprob: -15.625014305114746
    7. '),' → logprob: -16.75001335144043
    8. '   ' → logprob: -16.87501335144043
    9. '3' → logprob: -17.25001335144043
    10. '(' → logprob: -17.25001335144043

Token 124: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -3.726595241460018e-05
    2. ')' → logprob: -11.25003719329834
    3. ' ),' → logprob: -11.37503719329834
    4. ',' → logprob: -13.00003719329834
    5. '()),' → logprob: -13.25003719329834
    6. '   ' → logprob: -13.62503719329834
    7. '},' → logprob: -13.75003719329834
    8. '),(' → logprob: -13.87503719329834
    9. ')),' → logprob: -14.00003719329834
    10. ',),' → logprob: -14.00003719329834

Token 125: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011048882268369198
    2. ' ' → logprob: -4.511048793792725
    3. '   ' → logprob: -14.761049270629883
    4. '  ' → logprob: -15.636049270629883
    5. ')' → logprob: -15.886049270629883
    6. '```' → logprob: -16.386049270629883
    7. '           ' → logprob: -16.761049270629883
    8. '         ' → logprob: -17.136049270629883
    9. '    ' → logprob: -17.386049270629883
    10. ' ' → logprob: -17.448549270629883

Token 126: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014168102643452585
    2. ' ' → logprob: -8.875142097473145
    3. ')' → logprob: -14.500142097473145
    4. '   ' → logprob: -14.500142097473145
    5. '  ' → logprob: -15.750142097473145
    6. '           ' → logprob: -16.125141143798828
    7. '    ' → logprob: -16.625141143798828
    8. '```' → logprob: -16.750141143798828
    9. '     ' → logprob: -17.062641143798828
    10. '1' → logprob: -17.187641143798828

Token 127: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002048551570624113
    2. ' if' → logprob: -6.252048492431641
    3. 'if' → logprob: -9.37704849243164
    4. ' )' → logprob: -10.62704849243164
    5. '))' → logprob: -11.87704849243164
    6. '()' → logprob: -13.37704849243164
    7. '   ' → logprob: -13.87704849243164
    8. ')
' → logprob: -14.50204849243164
    9. '	if' → logprob: -15.00204849243164
    10. ' ' → logprob: -15.12704849243164

Token 128: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3132867217063904
    2. ' if' → logprob: -1.3132867813110352
    3. ')' → logprob: -11.188286781311035
    4. '   ' → logprob: -11.688286781311035
    5. '       ' → logprob: -13.938286781311035
    6. '	if' → logprob: -14.563286781311035
    7. ' ' → logprob: -14.938286781311035
    8. '           ' → logprob: -15.438286781311035
    9. '    ' → logprob: -15.813286781311035
    10. 'i' → logprob: -15.813286781311035

Token 129: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5772908329963684
    2. ' i' → logprob: -0.8272908329963684
    3. '(i' → logprob: -7.327291011810303
    4. ' (' → logprob: -7.702291011810303
    5. ' ' → logprob: -9.827290534973145
    6. '	i' → logprob: -9.952290534973145
    7. 'j' → logprob: -10.577290534973145
    8. '   ' → logprob: -10.702290534973145
    9. ' ' → logprob: -10.827290534973145
    10. '(' → logprob: -10.827290534973145

Token 130: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.45095959305763245
    2. ' +' → logprob: -1.07595956325531
    3. '+j' → logprob: -4.0759596824646
    4. '!=' → logprob: -5.7009596824646
    5. ' !=' → logprob: -6.9509596824646
    6. '<' → logprob: -8.325959205627441
    7. ' ' → logprob: -8.950959205627441
    8. ' <' → logprob: -9.700959205627441
    9. ' j' → logprob: -9.950959205627441
    10. '>' → logprob: -10.075959205627441

Token 131: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.014181364327669144
    2. ' j' → logprob: -4.264181137084961
    3. ' ' → logprob: -11.139181137084961
    4. 'S' → logprob: -14.139181137084961
    5. '	j' → logprob: -14.639181137084961
    6. '   ' → logprob: -15.014181137084961
    7. '  ' → logprob: -15.264181137084961
    8. ' ' → logprob: -15.264181137084961
    9. '
' → logprob: -15.264181137084961
    10. '```' → logprob: -15.389181137084961

Token 132: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5051206946372986
    2. ' !=' → logprob: -1.0051207542419434
    3. '==' → logprob: -3.8801207542419434
    4. ' ==' → logprob: -4.755120754241943
    5. '<' → logprob: -7.505120754241943
    6. '<=' → logprob: -8.505120277404785
    7. ' ' → logprob: -8.630120277404785
    8. ' <=' → logprob: -8.755120277404785
    9. ' <' → logprob: -9.005120277404785
    10. '=' → logprob: -10.380120277404785

Token 133: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.01815076172351837
    2. ' S' → logprob: -4.018150806427002
    3. ' ' → logprob: -14.268150329589844
    4. 's' → logprob: -16.768150329589844
    5. '	S' → logprob: -18.268150329589844
    6. ' ' → logprob: -18.393150329589844
    7. ')' → logprob: -18.518150329589844
    8. ''S' → logprob: -18.893150329589844
    9. '  ' → logprob: -19.018150329589844
    10. '_S' → logprob: -19.143150329589844

Token 134: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5928495486150496e-05
    2. '))' → logprob: -11.125016212463379
    3. ' )' → logprob: -14.375016212463379
    4. ')))' → logprob: -15.875016212463379
    5. ')
' → logprob: -16.125015258789062
    6. '),' → logprob: -16.500015258789062
    7. '})' → logprob: -16.625015258789062
    8. ')}' → logprob: -17.125015258789062
    9. ')#' → logprob: -17.125015258789062
    10. ')...' → logprob: -17.375015258789062

Token 135: 'L' (ID: 43)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30029064416885376
    2. ')' → logprob: -2.050290584564209
    3. '<|end|>' → logprob: -2.425290584564209
    4. 'result' → logprob: -4.675290584564209
    5. 'print' → logprob: -4.800290584564209
    6. ' for' → logprob: -5.425290584564209
    7. '#' → logprob: -5.425290584564209
    8. 'pairs' → logprob: -5.675290584564209
    9. 'rest' → logprob: -6.175290584564209
    10. 'list' → logprob: -6.550290584564209

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43259209394454956
    2. '=' → logprob: -1.0575921535491943
    3. 'ist' → logprob: -5.557591915130615
    4. '=[]' → logprob: -11.932592391967773
    5. '=list' → logprob: -12.682592391967773
    6. 'IST' → logprob: -12.682592391967773
    7. 'st' → logprob: -13.057592391967773
    8. ',' → logprob: -13.307592391967773
    9. ' =
' → logprob: -13.432592391967773
    10. ' ' → logprob: -13.932592391967773

Token 137: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.12923918664455414
    2. ' list' → logprob: -2.129239082336426
    3. 'set' → logprob: -7.629239082336426
    4. 'sorted' → logprob: -7.629239082336426
    5. 'tuple' → logprob: -8.004239082336426
    6. ' tuple' → logprob: -8.379239082336426
    7. ' sorted' → logprob: -9.129239082336426
    8. ' [' → logprob: -9.254239082336426
    9. '[list' → logprob: -9.379239082336426
    10. ' set' → logprob: -9.504239082336426

Token 138: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.0009236076730303466
    2. '(' → logprob: -7.2509236335754395
    3. '(chain' → logprob: -8.500923156738281
    4. '(p' → logprob: -12.250923156738281
    5. '(filter' → logprob: -14.250923156738281
    6. '(com' → logprob: -14.375923156738281
    7. 'chain' → logprob: -14.500923156738281
    8. '((' → logprob: -14.625923156738281
    9. '(S' → logprob: -14.875923156738281
    10. '(Py' → logprob: -14.875923156738281

Token 139: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. '))' → logprob: -12.375006675720215
    3. ' )' → logprob: -13.875006675720215
    4. '())' → logprob: -14.250006675720215
    5. ')
' → logprob: -14.500006675720215
    6. ')`' → logprob: -16.2500057220459
    7. '()' → logprob: -16.5000057220459
    8. '(' → logprob: -16.7500057220459
    9. ')))' → logprob: -18.0000057220459
    10. ' ' → logprob: -18.2500057220459

Token 140: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.27242356538772583
    2. 'L' → logprob: -2.272423505783081
    3. 'for' → logprob: -2.647423505783081
    4. '<|end|>' → logprob: -3.647423505783081
    5. 'len' → logprob: -4.14742374420166
    6. '[' → logprob: -5.27242374420166
    7. ')' → logprob: -5.27242374420166
    8. 'M' → logprob: -5.89742374420166
    9. 'sum' → logprob: -6.27242374420166
    10. '#' → logprob: -6.77242374420166

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02781086042523384
    2. '=' → logprob: -3.65281081199646
    3. 's' → logprob: -6.527811050415039
    4. '_' → logprob: -11.277811050415039
    5. '=[]' → logprob: -11.652811050415039
    6. ' ' → logprob: -11.902811050415039
    7. ',' → logprob: -12.527811050415039
    8. ')' → logprob: -12.902811050415039
    9. '[:]' → logprob: -13.152811050415039
    10. '1' → logprob: -13.652811050415039

Token 142: ' '{}' (ID: 76993)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.4136383533477783
    2. 'sum' → logprob: -1.6636383533477783
    3. '0' → logprob: -1.9136383533477783
    4. 'F' → logprob: -1.9136383533477783
    5. 'reduce' → logprob: -1.9136383533477783
    6. '[]' → logprob: -3.0386383533477783
    7. 'max' → logprob: -4.163638114929199
    8. ' len' → logprob: -4.163638114929199
    9. ' sum' → logprob: -4.288638114929199
    10. ' F' → logprob: -5.413638114929199

Token 143: '\' (ID: 59)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.6480219960212708
    2. '(' → logprob: -1.773021936416626
    3. '(L' → logprob: -1.773021936416626
    4. '.format' → logprob: -3.648021936416626
    5. '(sum' → logprob: -3.773021936416626
    6. '('' → logprob: -4.023022174835205
    7. '((' → logprob: -4.773022174835205
    8. '('\' → logprob: -4.773022174835205
    9. '(format' → logprob: -4.898022174835205
    10. '(range' → logprob: -4.898022174835205

Token 144: 'n' (ID: 77)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.4517972767353058
    2. '.' → logprob: -1.8267972469329834
    3. 'join' → logprob: -2.0767972469329834
    4. ''.' → logprob: -3.4517972469329834
    5. '.format' → logprob: -4.4517974853515625
    6. '{' → logprob: -5.0767974853515625
    7. '\n' → logprob: -5.2017974853515625
    8. ''' → logprob: -5.3267974853515625
    9. 'len' → logprob: -5.9517974853515625
    10. '.join' → logprob: -5.9517974853515625

Token 145: '{}'.' (ID: 97327)
  Prédit: '{}\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}\' → logprob: -0.690150260925293
    2. ''' → logprob: -1.190150260925293
    3. 'print' → logprob: -3.190150260925293
    4. 'len' → logprob: -3.315150260925293
    5. '{}'.' → logprob: -3.440150260925293
    6. ''\' → logprob: -3.815150260925293
    7. 'str' → logprob: -3.940150260925293
    8. '{}' → logprob: -4.190150260925293
    9. 'f' → logprob: -4.440150260925293
    10. ''.' → logprob: -5.190150260925293

Token 146: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -7.941850526549388e-06
    2. '(format' → logprob: -12.500007629394531
    3. ' format' → logprob: -12.625007629394531
    4. '	format' → logprob: -14.875007629394531
    5. 'form' → logprob: -16.12500762939453
    6. '.format' → logprob: -16.50000762939453
    7. 'ormat' → logprob: -16.87500762939453
    8. '```' → logprob: -16.87500762939453
    9. 'f' → logprob: -18.62500762939453
    10. '=format' → logprob: -19.12500762939453

Token 147: '(M' (ID: 6103)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.08606164157390594
    2. '(M' → logprob: -3.211061716079712
    3. 'len' → logprob: -3.336061716079712
    4. '(N' → logprob: -5.336061477661133
    5. 'M' → logprob: -6.711061477661133
    6. 'N' → logprob: -7.836061477661133
    7. '(F' → logprob: -10.336061477661133
    8. '(' → logprob: -10.586061477661133
    9. '(L' → logprob: -10.711061477661133
    10. '(K' → logprob: -11.086061477661133

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014981299638748169
    2. ',len' → logprob: -4.389981269836426
    3. 'len' → logprob: -6.264981269836426
    4. ',
' → logprob: -8.264981269836426
    5. ''\' → logprob: -8.514981269836426
    6. '[len' → logprob: -10.014981269836426
    7. '(len' → logprob: -11.264981269836426
    8. ',N' → logprob: -11.389981269836426
    9. '\n' → logprob: -11.889981269836426
    10. '',' → logprob: -12.264981269836426

Token 149: ' '\' (ID: 10855)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.0018877071561291814
    2. ' '\' → logprob: -7.251887798309326
    3. '''.' → logprob: -7.376887798309326
    4. ''' → logprob: -7.876887798309326
    5. 'len' → logprob: -8.876887321472168
    6. '"\' → logprob: -10.876887321472168
    7. ' ''.' → logprob: -12.751887321472168
    8. '('\' → logprob: -12.876887321472168
    9. '*' → logprob: -13.501887321472168
    10. '','.' → logprob: -13.626887321472168

Token 150: 'n' (ID: 77)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.0032197798136621714
    2. ''' → logprob: -6.5032196044921875
    3. '''.' → logprob: -6.5032196044921875
    4. '"\' → logprob: -9.003219604492188
    5. '\n' → logprob: -10.253219604492188
    6. ''.' → logprob: -10.503219604492188
    7. ' '\' → logprob: -11.253219604492188
    8. '
' → logprob: -11.628219604492188
    9. 'join' → logprob: -12.753219604492188
    10. '('\' → logprob: -13.378219604492188

Token 151: ''.' (ID: 6120)
  Prédit: '.join'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.join' → logprob: -0.012112011201679707
    2. ''.' → logprob: -5.012112140655518
    3. '.' → logprob: -5.512112140655518
    4. 'join' → logprob: -7.012112140655518
    5. ' .' → logprob: -8.01211166381836
    6. '''.' → logprob: -9.26211166381836
    7. '".' → logprob: -11.88711166381836
    8. '.j' → logprob: -12.63711166381836
    9. ' join' → logprob: -13.13711166381836
    10. ').' → logprob: -13.38711166381836

Token 152: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.2948405128554441e-05
    2. 'str' → logprob: -11.87501335144043
    3. ' join' → logprob: -12.50001335144043
    4. 'format' → logprob: -13.37501335144043
    5. 'sep' → logprob: -14.87501335144043
    6. '.join' → logprob: -16.25001335144043
    7. 'ans' → logprob: -16.25001335144043
    8. 'j' → logprob: -17.37501335144043
    9. '(join' → logprob: -17.50001335144043
    10. 'string' → logprob: -18.50001335144043

Token 153: '(map' (ID: 16946)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.35689806938171387
    2. '('{}' → logprob: -1.2318980693817139
    3. ''' → logprob: -5.481898307800293
    4. '(f' → logprob: -5.731898307800293
    5. '(map' → logprob: -7.981898307800293
    6. '('{' → logprob: -8.606898307800293
    7. '(' → logprob: -8.856898307800293
    8. 'map' → logprob: -9.481898307800293
    9. '(['' → logprob: -9.481898307800293
    10. 'f' → logprob: -9.731898307800293

Token 154: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.7267552018165588
    2. '('' → logprob: -0.9767552018165588
    3. '(str' → logprob: -1.976755142211914
    4. '('{}' → logprob: -6.851755142211914
    5. '(' → logprob: -8.476755142211914
    6. '("' → logprob: -9.351755142211914
    7. '('{' → logprob: -9.976755142211914
    8. '(',' → logprob: -10.726755142211914
    9. '('[' → logprob: -11.101755142211914
    10. '(('' → logprob: -11.976755142211914

Token 155: ' t' (ID: 260)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.10015705972909927
    2. '(lambda' → logprob: -2.4751570224761963
    3. '('' → logprob: -4.600157260894775
    4. 'str' → logprob: -7.225157260894775
    5. '(' → logprob: -8.600156784057617
    6. '('{}' → logprob: -9.850156784057617
    7. 'lambda' → logprob: -10.350156784057617
    8. '('{' → logprob: -10.475156784057617
    9. '(tuple' → logprob: -10.975156784057617
    10. '('[' → logprob: -10.975156784057617

Token 156: ':' (ID: 25)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.2665731906890869
    2. '(lambda' → logprob: -1.891573190689087
    3. ' lambda' → logprob: -3.391573190689087
    4. ''' → logprob: -4.391572952270508
    5. ':'' → logprob: -4.641572952270508
    6. '('' → logprob: -4.641572952270508
    7. ':' → logprob: -5.016572952270508
    8. 'str' → logprob: -5.641572952270508
    9. ' (' → logprob: -6.266572952270508
    10. ' ('' → logprob: -7.141572952270508

Token 157: ' '{}' (ID: 76993)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6141071319580078
    2. 'lambda' → logprob: -0.8641071319580078
    3. ' lambda' → logprob: -3.739107131958008
    4. '(lambda' → logprob: -5.614107131958008
    5. ' '{}' → logprob: -5.739107131958008
    6. ' '' → logprob: -5.864107131958008
    7. '   ' → logprob: -6.364107131958008
    8. 'str' → logprob: -6.989107131958008
    9. '"' → logprob: -7.739107131958008
    10. ' ' → logprob: -8.364107131958008

Token 158: ' {}'.' (ID: 62777)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.11975354701280594
    2. ''' → logprob: -2.36975359916687
    3. ' t' → logprob: -5.494753360748291
    4. '(t' → logprob: -6.119753360748291
    5. '{}' → logprob: -6.119753360748291
    6. '(' → logprob: -6.619753360748291
    7. ' ' → logprob: -6.619753360748291
    8. '*' → logprob: -7.119753360748291
    9. 't' → logprob: -7.119753360748291
    10. ',' → logprob: -7.369753360748291

Token 159: 'format' (ID: 4078)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2782585024833679
    2. '(*' → logprob: -1.6532585620880127
    3. 'format' → logprob: -3.5282585620880127
    4. '.format' → logprob: -4.528258323669434
    5. '(t' → logprob: -5.028258323669434
    6. 'str' → logprob: -6.028258323669434
    7. ' t' → logprob: -7.278258323669434
    8. '.' → logprob: -7.903258323669434
    9. ',' → logprob: -8.403258323669434
    10. '().' → logprob: -8.528258323669434

Token 160: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.38406458497047424
    2. 't' → logprob: -1.3840645551681519
    3. '(t' → logprob: -3.3840646743774414
    4. '*t' → logprob: -3.3840646743774414
    5. '*' → logprob: -7.634064674377441
    6. ' t' → logprob: -10.759064674377441
    7. '(' → logprob: -11.384064674377441
    8. ')t' → logprob: -12.134064674377441
    9. '	t' → logprob: -12.384064674377441
    10. ')' → logprob: -13.259064674377441

Token 161: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0002615742268972099
    2. ' t' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.375261306762695
    4. 'tuple' → logprob: -16.875261306762695
    5. ' ' → logprob: -17.375261306762695
    6. '  ' → logprob: -17.875261306762695
    7. ')t' → logprob: -18.125261306762695
    8. '(t' → logprob: -18.125261306762695
    9. '	t' → logprob: -18.375261306762695
    10. ')' → logprob: -18.750261306762695

Token 162: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0060505010187625885
    2. ',L' → logprob: -5.1310505867004395
    3. ' ,' → logprob: -9.631050109863281
    4. 'L' → logprob: -10.006050109863281
    5. '),' → logprob: -11.756050109863281
    6. ' L' → logprob: -13.256050109863281
    7. ')' → logprob: -14.506050109863281
    8. ')L' → logprob: -15.256050109863281
    9. ',List' → logprob: -15.256050109863281
    10. '   ' → logprob: -16.00605010986328

Token 163: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.005929393693804741
    2. ' L' → logprob: -5.130929470062256
    3. '(L' → logprob: -15.630928993225098
    4. '   ' → logprob: -15.630928993225098
    5. '	L' → logprob: -16.130929946899414
    6. '[L' → logprob: -16.255929946899414
    7. ')L' → logprob: -16.505929946899414
    8. ')' → logprob: -16.880929946899414
    9. ' ' → logprob: -17.255929946899414
    10. ',L' → logprob: -18.130929946899414

Token 164: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4740968942642212
    2. ')))' → logprob: -0.9740968942642212
    3. '))))' → logprob: -11.84909725189209
    4. ')' → logprob: -11.97409725189209
    5. '))
' → logprob: -12.47409725189209
    6. ')))
' → logprob: -13.34909725189209
    7. ' ))' → logprob: -14.97409725189209
    8. '}))' → logprob: -15.09909725189209
    9. ')));' → logprob: -16.224096298217773
    10. '))

' → logprob: -17.099096298217773

Token 165: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0016134120523929596
    2. '\n' → logprob: -6.876613616943359
    3. ')' → logprob: -8.37661361694336
    4. '<|end|>' → logprob: -8.50161361694336
    5. ' print' → logprob: -9.50161361694336
    6. '
' → logprob: -10.12661361694336
    7. '```' → logprob: -11.75161361694336
    8. '#' → logprob: -11.87661361694336
    9. '\' → logprob: -12.25161361694336
    10. '#print' → logprob: -13.00161361694336

Token 166: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0007201764383353293
    2. '(' → logprob: -7.250720024108887
    3. 'ans' → logprob: -11.875720024108887
    4. '()' → logprob: -12.875720024108887
    5. '(
' → logprob: -15.000720024108887
    6. ' (' → logprob: -15.500720024108887
    7. '(answer' → logprob: -15.875720024108887
    8. '('' → logprob: -17.375720977783203
    9. '(

' → logprob: -17.375720977783203
    10. '	ans' → logprob: -18.500720977783203

Token 167: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012809180771000683
    2. '))' → logprob: -9.000127792358398
    3. ')`' → logprob: -13.125127792358398
    4. ')
' → logprob: -13.875127792358398
    5. '')' → logprob: -14.375127792358398
    6. '`)' → logprob: -14.750127792358398
    7. ' )' → logprob: -15.250127792358398
    8. ')")' → logprob: -16.0001277923584
    9. ')))' → logprob: -16.3751277923584
    10. '})' → logprob: -16.6251277923584


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 165
Tokens correctement prédits (1ère position, stricte): 55
Tokens correctement prédits (1ère position, avec adaptation): 55
Tokens correctement prédits (top 10): 125
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 33.33%
Précision (top 10): 75.76%
================================================================================
