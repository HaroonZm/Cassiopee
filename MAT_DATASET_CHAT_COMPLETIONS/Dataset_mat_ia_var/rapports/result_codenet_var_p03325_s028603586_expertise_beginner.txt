================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
a = input().split()
for i in range(N):
    a[i] = int(a[i])
count = 0
for i in range(N):
    n = a[i]
    while n % 2 == 0:
        count = count + 1
        n = n // 2
print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001967457792488858
    2. '```' → logprob: -9.50019645690918
    3. '(N' → logprob: -10.37519645690918
    4. '`' → logprob: -10.87519645690918
    5. '(
' → logprob: -11.00019645690918
    6. ')' → logprob: -11.62519645690918
    7. '("("' → logprob: -11.62519645690918
    8. ''' → logprob: -11.62519645690918
    9. '()' → logprob: -11.87519645690918
    10. '('' → logprob: -12.25019645690918

Token 4: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5295335650444031
    2. '(' → logprob: -0.9045335650444031
    3. '()' → logprob: -5.779533386230469
    4. '())' → logprob: -6.154533386230469
    5. '(
' → logprob: -8.154533386230469
    6. '```' → logprob: -8.779533386230469
    7. '")' → logprob: -9.279533386230469
    8. '))' → logprob: -9.404533386230469
    9. '<|end|>' → logprob: -9.779533386230469
    10. '')' → logprob: -9.904533386230469

Token 5: 'a' (ID: 64)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8320107460021973
    2. 'for' → logprob: -1.8320107460021973
    3. 'a' → logprob: -2.0820107460021973
    4. 's' → logprob: -2.2070107460021973
    5. '*' → logprob: -2.5820107460021973
    6. ''' → logprob: -2.8320107460021973
    7. '#' → logprob: -3.2070107460021973
    8. ')' → logprob: -3.2070107460021973
    9. 'i' → logprob: -3.3320107460021973
    10. 'x' → logprob: -3.3320107460021973

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0161666851490736
    2. ' =' → logprob: -5.266166687011719
    3. 'r' → logprob: -5.766166687011719
    4. '=' → logprob: -6.266166687011719
    5. '[i' → logprob: -6.641166687011719
    6. 'rr' → logprob: -7.016166687011719
    7. 'rray' → logprob: -7.391166687011719
    8. '[a' → logprob: -7.516166687011719
    9. 'a' → logprob: -7.641166687011719
    10. '[:]' → logprob: -7.891166687011719

Token 7: ' input' (ID: 3422)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5684943199157715
    2. ' []' → logprob: -1.1934943199157715
    3. 'list' → logprob: -2.6934943199157715
    4. '[input' → logprob: -4.1934943199157715
    5. ' list' → logprob: -4.4434943199157715
    6. ' [' → logprob: -4.5684943199157715
    7. '[' → logprob: -4.6934943199157715
    8. 'input' → logprob: -4.6934943199157715
    9. '[int' → logprob: -5.3184943199157715
    10. ' input' → logprob: -7.3184943199157715

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002262186724692583
    2. ''' → logprob: -7.002262115478516
    3. '('' → logprob: -7.002262115478516
    4. '"' → logprob: -8.877262115478516
    5. '("("' → logprob: -9.252262115478516
    6. '(
' → logprob: -9.627262115478516
    7. '()' → logprob: -10.002262115478516
    8. ')' → logprob: -10.627262115478516
    9. '[' → logprob: -11.252262115478516
    10. ' (' → logprob: -11.752262115478516

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005259491503238678
    2. 'strip' → logprob: -5.2552595138549805
    3. 'spl' → logprob: -11.75525951385498
    4. 's' → logprob: -11.88025951385498
    5. 'rstrip' → logprob: -11.88025951385498
    6. 'replace' → logprob: -13.00525951385498
    7. 'sp' → logprob: -14.00525951385498
    8. ' split' → logprob: -14.38025951385498
    9. 'rs' → logprob: -15.88025951385498
    10. 'lower' → logprob: -16.380258560180664

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05383295565843582
    2. '()' → logprob: -3.1788330078125
    3. '('' → logprob: -4.9288330078125
    4. '("("' → logprob: -5.8038330078125
    5. '(
' → logprob: -9.0538330078125
    6. '(`' → logprob: -9.1788330078125
    7. '("' → logprob: -9.4288330078125
    8. '(

' → logprob: -9.5538330078125
    9. ' (' → logprob: -10.6788330078125
    10. '((' → logprob: -11.0538330078125

Token 11: 'for' (ID: 1938)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3006225526332855
    2. 'for' → logprob: -1.800622582435608
    3. 'c' → logprob: -3.1756224632263184
    4. 'b' → logprob: -3.4256224632263184
    5. 'result' → logprob: -5.175622463226318
    6. 's' → logprob: -5.175622463226318
    7. 'count' → logprob: -5.800622463226318
    8. '[' → logprob: -6.300622463226318
    9. 'counts' → logprob: -7.550622463226318
    10. 'ans' → logprob: -7.550622463226318

Token 12: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5317220091819763
    2. ' i' → logprob: -0.9067220091819763
    3. '  ' → logprob: -5.906722068786621
    4. '_' → logprob: -5.906722068786621
    5. 'i' → logprob: -5.906722068786621
    6. ' _' → logprob: -8.906722068786621
    7. ' ‌' → logprob: -9.281722068786621
    8. ' a' → logprob: -10.406722068786621
    9. '`' → logprob: -10.906722068786621
    10. ' )' → logprob: -11.281722068786621

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4718162715435028
    2. 'in' → logprob: -1.3468163013458252
    3. ' ' → logprob: -2.471816301345825
    4. '  ' → logprob: -4.596816062927246
    5. 'n' → logprob: -4.721816062927246
    6. '_' → logprob: -5.096816062927246
    7. ' n' → logprob: -6.721816062927246
    8. ')' → logprob: -7.096816062927246
    9. '   ' → logprob: -7.096816062927246
    10. '=' → logprob: -7.221816062927246

Token 14: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38716569542884827
    2. 'range' → logprob: -1.1371656656265259
    3. 'a' → logprob: -8.762166023254395
    4. ' a' → logprob: -9.012166023254395
    5. ' ' → logprob: -11.512166023254395
    6. '(range' → logprob: -13.387166023254395
    7. '	range' → logprob: -13.512166023254395
    8. '_range' → logprob: -14.512166023254395
    9. ' xrange' → logprob: -14.512166023254395
    10. '  ' → logprob: -14.637166023254395

Token 15: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0034019285812973976
    2. '(N' → logprob: -5.878401756286621
    3. ' (' → logprob: -8.003401756286621
    4. '(len' → logprob: -8.753401756286621
    5. '(n' → logprob: -9.753401756286621
    6. '(range' → logprob: -11.003401756286621
    7. '```' → logprob: -11.878401756286621
    8. ' ' → logprob: -12.128401756286621
    9. '(i' → logprob: -12.253401756286621
    10. '(
' → logprob: -12.503401756286621

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2576506435871124
    2. ')' → logprob: -1.50765061378479
    3. '[' → logprob: -5.257650852203369
    4. '[i' → logprob: -8.132650375366211
    5. '+' → logprob: -9.507650375366211
    6. ')[' → logprob: -10.632650375366211
    7. ':' → logprob: -10.757650375366211
    8. ']:' → logprob: -11.882650375366211
    9. '):
' → logprob: -11.882650375366211
    10. '[a' → logprob: -11.882650375366211

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1458098441362381
    2. ' ' → logprob: -2.5208098888397217
    3. '    ' → logprob: -4.020809650421143
    4. ' a' → logprob: -4.270809650421143
    5. ' if' → logprob: -4.645809650421143
    6. 'a' → logprob: -5.395809650421143
    7. '    
' → logprob: -6.145809650421143
    8. ' print' → logprob: -6.395809650421143
    9. 'if' → logprob: -7.520809650421143
    10. 'print' → logprob: -7.645809650421143

Token 18: ' a' (ID: 261)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8405674695968628
    2. '   ' → logprob: -1.7155674695968628
    3. 'print' → logprob: -2.0905675888061523
    4. 'if' → logprob: -2.2155675888061523
    5. ' print' → logprob: -3.0905675888061523
    6. ' a' → logprob: -3.2155675888061523
    7. 'a' (adapté à ' a') → logprob: -3.4655675888061523
    8. '    ' → logprob: -3.7155675888061523
    9. ' ' → logprob: -5.090567588806152
    10. ' for' → logprob: -5.465567588806152

Token 19: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06273926049470901
    2. '[i' → logprob: -2.812739372253418
    3. '[a' → logprob: -7.687739372253418
    4. '[int' → logprob: -8.937739372253418
    5. '\[' → logprob: -9.312739372253418
    6. '[I' → logprob: -10.937739372253418
    7. '```' → logprob: -11.187739372253418
    8. '[...]' → logprob: -11.187739372253418
    9. '[]' → logprob: -12.062739372253418
    10. '[N' → logprob: -12.687739372253418

Token 20: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02000359073281288
    2. ')' → logprob: -4.145003795623779
    3. ' ]' → logprob: -6.770003795623779
    4. '])' → logprob: -6.895003795623779
    5. ']=' → logprob: -7.020003795623779
    6. '].' → logprob: -8.270003318786621
    7. ')]' → logprob: -8.645003318786621
    8. '[' → logprob: -8.895003318786621
    9. ']==' → logprob: -9.020003318786621
    10. '][' → logprob: -9.770003318786621

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06905901432037354
    2. '+' → logprob: -3.944058895111084
    3. '[' → logprob: -4.069058895111084
    4. ' =' → logprob: -4.069058895111084
    5. ')' → logprob: -5.444058895111084
    6. '+=' → logprob: -5.569058895111084
    7. '<|end|>' → logprob: -6.569058895111084
    8. ' +=' → logprob: -6.944058895111084
    9. '```' → logprob: -7.694058895111084
    10. ' ' → logprob: -8.319059371948242

Token 22: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031784253660589457
    2. ' int' → logprob: -5.753178596496582
    3. 'float' → logprob: -15.503178596496582
    4. '(int' → logprob: -15.878178596496582
    5. 'a' → logprob: -16.003177642822266
    6. '[int' → logprob: -16.003177642822266
    7. '=int' → logprob: -16.503177642822266
    8. '   ' → logprob: -16.878177642822266
    9. 'i' → logprob: -17.378177642822266
    10. ']int' → logprob: -17.378177642822266

Token 23: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759512782096863
    2. '(a' → logprob: -0.8259512782096863
    3. '('' → logprob: -12.32595157623291
    4. '(
' → logprob: -12.70095157623291
    5. '(

' → logprob: -13.70095157623291
    6. 'a' → logprob: -14.20095157623291
    7. '("("' → logprob: -14.45095157623291
    8. ' (' → logprob: -15.07595157623291
    9. '(A' → logprob: -15.20095157623291
    10. '((' → logprob: -15.45095157623291

Token 24: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.013841184787452221
    2. '[' → logprob: -4.388841152191162
    3. ')' → logprob: -7.263841152191162
    4. '[a' → logprob: -7.513841152191162
    5. '[
' → logprob: -10.51384162902832
    6. ' [' → logprob: -10.76384162902832
    7. '[I' → logprob: -11.76384162902832
    8. 'a' → logprob: -12.51384162902832
    9. '[N' → logprob: -12.51384162902832
    10. ')[' → logprob: -12.51384162902832

Token 25: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029940009117126465
    2. '))' → logprob: -3.529940128326416
    3. '])' → logprob: -8.654939651489258
    4. ')))' → logprob: -12.654939651489258
    5. ']' → logprob: -13.029939651489258
    6. ')])' → logprob: -13.029939651489258
    7. ')]' → logprob: -13.529939651489258
    8. ' )' → logprob: -13.529939651489258
    9. ')
' → logprob: -13.654939651489258
    10. '})' → logprob: -14.279939651489258

Token 26: 'count' (ID: 5420)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3673028945922852
    2. '[' → logprob: -1.6173028945922852
    3. '\' → logprob: -2.617302894592285
    4. '#' → logprob: -2.742302894592285
    5. ')' → logprob: -3.117302894592285
    6. '+' → logprob: -3.242302894592285
    7. 'print' → logprob: -3.367302894592285
    8. '```' → logprob: -3.617302894592285
    9. '\n' → logprob: -3.742302894592285
    10. 'a' → logprob: -3.742302894592285

Token 27: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003209084505215287
    2. '[' → logprob: -6.503209114074707
    3. '_' → logprob: -6.628209114074707
    4. 's' → logprob: -8.253209114074707
    5. 'a' → logprob: -10.003209114074707
    6. '('' → logprob: -10.628209114074707
    7. '(a' → logprob: -11.878209114074707
    8. '=' → logprob: -12.128209114074707
    9. '(
' → logprob: -12.503209114074707
    10. ' (' → logprob: -12.503209114074707

Token 28: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17826180160045624
    2. ' ' → logprob: -2.3032617568969727
    3. '{}' → logprob: -2.8032617568969727
    4. ' {}' → logprob: -6.053261756896973
    5. '{' → logprob: -8.053261756896973
    6. '[' → logprob: -10.553261756896973
    7. ' [' → logprob: -11.678261756896973
    8. ' {' → logprob: -11.928261756896973
    9. '1' → logprob: -12.553261756896973
    10. '  ' → logprob: -12.553261756896973

Token 29: '0' (ID: 15)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.47511664032936096
    2. '0' → logprob: -0.9751166105270386
    3. '{' → logprob: -6.975116729736328
    4. 'dict' → logprob: -10.100116729736328
    5. '[' → logprob: -10.475116729736328
    6. '{}
' → logprob: -11.100116729736328
    7. ' {}' → logprob: -11.975116729736328
    8. 'len' → logprob: -12.600116729736328
    9. '1' → logprob: -12.975116729736328
    10. '{}\' → logprob: -13.475116729736328

Token 30: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7239766120910645
    2. '<|end|>' → logprob: -1.4739766120910645
    3. 'for' → logprob: -1.7239766120910645
    4. ' for' → logprob: -2.5989766120910645
    5. ' 
' → logprob: -3.9739766120910645
    6. ' ' → logprob: -5.4739766120910645
    7. '\n' → logprob: -5.8489766120910645
    8. ')' → logprob: -6.3489766120910645
    9. '\' → logprob: -6.3489766120910645
    10. '<|end|>' → logprob: -6.7239766120910645

Token 31: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.100556880235672
    2. '
' → logprob: -2.9755568504333496
    3. ' for' → logprob: -3.3505568504333496
    4. '<|end|>' → logprob: -5.10055685043335
    5. ' 
' → logprob: -5.97555685043335
    6. 'if' → logprob: -8.475557327270508
    7. '\n' → logprob: -8.600557327270508
    8. '```' → logprob: -9.100557327270508
    9. ' ' → logprob: -9.225557327270508
    10. '  
' → logprob: -9.725557327270508

Token 32: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16266193985939026
    2. ' ' → logprob: -2.1626620292663574
    3. '  ' → logprob: -3.9126620292663574
    4. 'i' → logprob: -4.537662029266357
    5. '_' → logprob: -6.287662029266357
    6. ' _' → logprob: -7.537662029266357
    7. ')' → logprob: -8.0376615524292
    8. '<|end|>' → logprob: -8.2876615524292
    9. ' ‌' → logprob: -8.4126615524292
    10. ' range' → logprob: -8.4126615524292

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2274899035692215
    2. 'in' → logprob: -1.727489948272705
    3. ' ' → logprob: -4.102489948272705
    4. '<|end|>' → logprob: -5.477489948272705
    5. '  ' → logprob: -5.727489948272705
    6. '+' → logprob: -7.477489948272705
    7. '[' → logprob: -7.977489948272705
    8. ' <' → logprob: -8.227489471435547
    9. ')' → logprob: -9.102489471435547
    10. '<' → logprob: -9.352489471435547

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.054891426116228104
    2. 'range' → logprob: -2.929891347885132
    3. ' ' → logprob: -12.304891586303711
    4. ' a' → logprob: -13.054891586303711
    5. '(range' → logprob: -14.054891586303711
    6. 'a' → logprob: -14.804891586303711
    7. '	range' → logprob: -14.804891586303711
    8. '   ' → logprob: -15.304891586303711
    9. '  ' → logprob: -15.429891586303711
    10. ')' → logprob: -15.804891586303711

Token 35: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38830944895744324
    2. '(N' → logprob: -1.1383094787597656
    3. ' (' → logprob: -6.763309478759766
    4. '(len' → logprob: -8.638309478759766
    5. '(n' → logprob: -9.888309478759766
    6. '(count' → logprob: -10.138309478759766
    7. '(
' → logprob: -12.763309478759766
    8. '()' → logprob: -13.388309478759766
    9. ' ' → logprob: -13.638309478759766
    10. '(s' → logprob: -13.763309478759766

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11809270083904266
    2. '-' → logprob: -2.2430927753448486
    3. ')' → logprob: -5.4930925369262695
    4. ' -' → logprob: -7.6180925369262695
    5. '):
' → logprob: -8.11809253692627
    6. ' ):' → logprob: -8.49309253692627
    7. '   ' → logprob: -9.86809253692627
    8. ':' → logprob: -10.24309253692627
    9. '+' → logprob: -10.86809253692627
    10. ' ' → logprob: -10.99309253692627

Token 37: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36032629013061523
    2. '   ' → logprob: -1.9853262901306152
    3. ' for' → logprob: -2.1103262901306152
    4. '    ' → logprob: -3.7353262901306152
    5. '<|end|>' → logprob: -4.610326290130615
    6. 'for' → logprob: -4.985326290130615
    7. '  ' → logprob: -7.735326290130615
    8. ' 
' → logprob: -7.985326290130615
    9. ',' → logprob: -7.985326290130615
    10. ')' → logprob: -8.235326766967773

Token 38: ' n' (ID: 297)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15792912244796753
    2. 'for' → logprob: -2.1579291820526123
    3. '   ' → logprob: -3.6579291820526123
    4. ' ' → logprob: -5.532928943634033
    5. '    ' → logprob: -7.782928943634033
    6. ' a' → logprob: -8.782929420471191
    7. 'a' → logprob: -10.282929420471191
    8. '```' → logprob: -10.657929420471191
    9. '  ' → logprob: -10.782929420471191
    10. '	for' → logprob: -10.907929420471191

Token 39: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1425328254699707
    2. ' ' → logprob: -1.3925328254699707
    3. '-' → logprob: -1.5175328254699707
    4. 'o' → logprob: -2.1425328254699707
    5. 'u' → logprob: -3.5175328254699707
    6. '   ' → logprob: -4.642532825469971
    7. 'ot' → logprob: -4.767532825469971
    8. 'e' → logprob: -4.892532825469971
    9. '[' → logprob: -5.017532825469971
    10. 'a' → logprob: -5.017532825469971

Token 40: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10939250141382217
    2. ' a' → logprob: -2.3593924045562744
    3. 'i' → logprob: -5.7343926429748535
    4. ' ' → logprob: -6.3593926429748535
    5. ' i' → logprob: -6.8593926429748535
    6. '0' → logprob: -6.8593926429748535
    7. 'N' → logprob: -7.4843926429748535
    8. '1' → logprob: -7.7343926429748535
    9. 'len' → logprob: -7.8593926429748535
    10. ' N' → logprob: -8.484392166137695

Token 41: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.264322317088954e-05
    2. '[' → logprob: -10.875052452087402
    3. '```' → logprob: -11.750052452087402
    4. '.count' → logprob: -12.000052452087402
    5. '\[' → logprob: -12.875052452087402
    6. 'i' → logprob: -12.875052452087402
    7. '[I' → logprob: -13.000052452087402
    8. '[N' → logprob: -13.250052452087402
    9. ' [' → logprob: -13.375052452087402
    10. '[a' → logprob: -13.375052452087402

Token 42: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4024178087711334
    2. '+' → logprob: -1.402417778968811
    3. ']' → logprob: -3.4024178981781006
    4. '-' → logprob: -3.6524178981781006
    5. ' +' → logprob: -5.1524176597595215
    6. ' )' → logprob: -5.4024176597595215
    7. '])' → logprob: -5.5274176597595215
    8. ')+' → logprob: -5.9024176597595215
    9. ']+' → logprob: -6.0274176597595215
    10. ' -' → logprob: -6.5274176597595215

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6589710712432861
    2. ' ' → logprob: -1.6589710712432861
    3. ' for' → logprob: -1.9089710712432861
    4. 'for' → logprob: -2.908971071243286
    5. '<|end|>' → logprob: -3.408971071243286
    6. '    ' → logprob: -3.908971071243286
    7. '
' → logprob: -4.908970832824707
    8. '  ' → logprob: -5.033970832824707
    9. ' if' → logprob: -5.283970832824707
    10. ')' → logprob: -6.158970832824707

Token 44: ' while' (ID: 2049)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.29750528931617737
    2. 'for' → logprob: -1.672505259513855
    3. '   ' → logprob: -3.2975053787231445
    4. ' if' → logprob: -4.4225053787231445
    5. ' while' → logprob: -5.2975053787231445
    6. ' ' → logprob: -5.4225053787231445
    7. '    ' → logprob: -5.5475053787231445
    8. 'if' → logprob: -6.2975053787231445
    9. ':' → logprob: -7.2975053787231445
    10. '<|end|>' → logprob: -7.4225053787231445

Token 45: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.02985404059290886
    2. 'n' → logprob: -3.5298540592193604
    3. '(n' → logprob: -9.779853820800781
    4. ' ' → logprob: -10.654853820800781
    5. ' (' → logprob: -11.779853820800781
    6. '(' → logprob: -12.529853820800781
    7. ' a' → logprob: -13.279853820800781
    8. '>' → logprob: -13.529853820800781
    9. ' ' → logprob: -13.529853820800781
    10. ')n' → logprob: -13.904853820800781

Token 46: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.2676197290420532
    2. '>' → logprob: -1.3926197290420532
    3. ' >' → logprob: -1.3926197290420532
    4. ' %' → logprob: -1.5176197290420532
    5. ' !=' → logprob: -7.017619609832764
    6. '!=' → logprob: -7.017619609832764
    7. ' ' → logprob: -8.392620086669922
    8. '>=' → logprob: -8.892620086669922
    9. ' >=' → logprob: -9.267620086669922
    10. ' ' → logprob: -10.517620086669922

Token 47: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02259010635316372
    2. ' ' → logprob: -4.522590160369873
    3. '3' → logprob: -4.772590160369873
    4. '5' → logprob: -6.272590160369873
    5. '10' → logprob: -7.397590160369873
    6. '4' → logprob: -8.772589683532715
    7. '7' → logprob: -9.272589683532715
    8. '6' → logprob: -9.397589683532715
    9. '26' → logprob: -9.897589683532715
    10. '11' → logprob: -10.272589683532715

Token 48: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002908415859565139
    2. '3' → logprob: -6.377908229827881
    3. '5' → logprob: -7.502908229827881
    4. '10' → logprob: -7.752908229827881
    5. '6' → logprob: -9.627908706665039
    6. '7' → logprob: -9.877908706665039
    7. ' ' → logprob: -10.377908706665039
    8. '26' → logprob: -10.752908706665039
    9. '11' → logprob: -10.877908706665039
    10. '4' → logprob: -11.127908706665039

Token 49: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2833792567253113
    2. ' ==' → logprob: -1.408379316329956
    3. '=' → logprob: -6.783379077911377
    4. '0' → logprob: -7.033379077911377
    5. ' ' → logprob: -8.783379554748535
    6. ' =' → logprob: -10.908379554748535
    7. '===' → logprob: -11.658379554748535
    8. '```' → logprob: -11.783379554748535
    9. ')==' → logprob: -12.408379554748535
    10. ')' → logprob: -12.533379554748535

Token 50: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.042999427765607834
    2. ' ' → logprob: -3.167999505996704
    3. '==' → logprob: -16.917999267578125
    4. ' ==' → logprob: -17.542999267578125
    5. '=' → logprob: -17.667999267578125
    6. ' ' → logprob: -17.792999267578125
    7. '  ' → logprob: -17.917999267578125
    8. '۰' → logprob: -18.042999267578125
    9. '```' → logprob: -18.167999267578125
    10. '2' → logprob: -18.167999267578125

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013261953135952353
    2. ' ' → logprob: -6.626326084136963
    3. '2' → logprob: -15.876326560974121
    4. '  ' → logprob: -17.501325607299805
    5. '   ' → logprob: -17.751325607299805
    6. '۰' → logprob: -18.001325607299805
    7. ')' → logprob: -18.563825607299805
    8. '    ' → logprob: -18.688825607299805
    9. '=' → logprob: -18.876325607299805
    10. '```' → logprob: -18.938825607299805

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001532401074655354
    2. ':
' → logprob: -9.125153541564941
    3. ' :' → logprob: -10.250153541564941
    4. ' and' → logprob: -12.625153541564941
    5. '):' → logprob: -12.625153541564941
    6. '   ' → logprob: -13.750153541564941
    7. 'and' → logprob: -14.250153541564941
    8. ':**' → logprob: -16.000152587890625
    9. '>:' → logprob: -16.250152587890625
    10. '():' → logprob: -16.250152587890625

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01734902709722519
    2. ' ' → logprob: -5.0173492431640625
    3. '   ' → logprob: -5.3923492431640625
    4. ' n' → logprob: -6.8923492431640625
    5. '    ' → logprob: -6.8923492431640625
    6. ' 
' → logprob: -7.0173492431640625
    7. '
' → logprob: -7.1423492431640625
    8. 'n' → logprob: -7.3923492431640625
    9. '<|end|>' → logprob: -7.3923492431640625
    10. '        
' → logprob: -7.6423492431640625

Token 54: ' count' (ID: 3605)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6426868438720703
    2. '       ' → logprob: -1.3926868438720703
    3. 'n' → logprob: -1.6426868438720703
    4. 'count' (adapté à ' count') → logprob: -3.8926868438720703
    5. ' count' → logprob: -4.89268684387207
    6. '   ' → logprob: -6.51768684387207
    7. '           ' → logprob: -6.64268684387207
    8. ' ' → logprob: -7.64268684387207
    9. '        ' → logprob: -7.89268684387207
    10. '```' → logprob: -8.26768684387207

Token 55: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.018189044669270515
    2. '+=' → logprob: -4.018188953399658
    3. '+' → logprob: -11.268189430236816
    4. '=' → logprob: -11.393189430236816
    5. ' =' → logprob: -12.018189430236816
    6. ' ' → logprob: -12.518189430236816
    7. ' +' → logprob: -13.643189430236816
    8. ')' → logprob: -13.893189430236816
    9. '   ' → logprob: -14.268189430236816
    10. ']+=' → logprob: -14.268189430236816

Token 56: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.31332942843437195
    2. 'count' → logprob: -1.3133294582366943
    3. '1' → logprob: -10.938329696655273
    4. '        ' → logprob: -11.563329696655273
    5. '+' → logprob: -11.563329696655273
    6. '	count' → logprob: -11.688329696655273
    7. ' ' → logprob: -11.813329696655273
    8. '(count' → logprob: -12.438329696655273
    9. '0' → logprob: -12.813329696655273
    10. '<count' → logprob: -13.438329696655273

Token 57: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3133862316608429
    2. '+' → logprob: -1.3133862018585205
    3. ' ' → logprob: -9.313385963439941
    4. ' +
' → logprob: -10.813385963439941
    5. ' +=' → logprob: -11.438385963439941
    6. '<|end|>' → logprob: -14.313385963439941
    7. '        ' → logprob: -14.438385963439941
    8. '+=' → logprob: -14.938385963439941
    9. '1' → logprob: -15.188385963439941
    10. '+
' → logprob: -15.313385963439941

Token 58: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033645812422037125
    2. ' ' → logprob: -3.4086458683013916
    3. '   ' → logprob: -16.533645629882812
    4. ' ' → logprob: -17.783645629882812
    5. '  ' → logprob: -18.033645629882812
    6. '    ' → logprob: -18.283645629882812
    7. '2' → logprob: -18.471145629882812
    8. '```' → logprob: -18.596145629882812
    9. '<|end|>' → logprob: -18.658645629882812
    10. '１' → logprob: -18.783645629882812

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -18.50010871887207
    4. '１' → logprob: -20.00010871887207
    5. '  ' → logprob: -20.12510871887207
    6. '2' → logprob: -20.25010871887207
    7. '<|end|>' → logprob: -20.25010871887207
    8. '```' → logprob: -20.62510871887207
    9. '۱' → logprob: -20.93760871887207
    10. '१' → logprob: -21.50010871887207

Token 60: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45694422721862793
    2. '       ' → logprob: -1.581944227218628
    3. 'n' → logprob: -2.581944227218628
    4. ' 
' → logprob: -3.456944227218628
    5. '        
' → logprob: -3.956944227218628
    6. ' n' → logprob: -4.581944465637207
    7. '    
' → logprob: -4.831944465637207
    8. '   ' → logprob: -5.706944465637207
    9. '\n' → logprob: -5.956944465637207
    10. '
' → logprob: -5.956944465637207

Token 61: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06793659925460815
    2. '       ' → logprob: -2.942936658859253
    3. ' n' → logprob: -5.067936420440674
    4. '   ' → logprob: -5.442936420440674
    5. '	n' → logprob: -7.067936420440674
    6. '```' → logprob: -7.192936420440674
    7. '
' → logprob: -8.942936897277832
    8. ' ' → logprob: -9.192936897277832
    9. '``' → logprob: -9.317936897277832
    10. '        
' → logprob: -9.442936897277832

Token 62: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.007053864188492298
    2. ' n' → logprob: -5.007053852081299
    3. '       ' → logprob: -8.507054328918457
    4. '   ' → logprob: -9.132054328918457
    5. '	n' → logprob: -11.507054328918457
    6. '```' → logprob: -11.507054328918457
    7. '           ' → logprob: -12.132054328918457
    8. ' ' → logprob: -13.882054328918457
    9. '``' → logprob: -14.132054328918457
    10. '    ' → logprob: -15.257054328918457

Token 63: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24044863879680634
    2. ' =' → logprob: -1.8654485940933228
    3. '//=' → logprob: -2.8654487133026123
    4. ' //' → logprob: -7.240448474884033
    5. ' /=' → logprob: -7.365448474884033
    6. '/=' → logprob: -7.990448474884033
    7. '//' → logprob: -8.740448951721191
    8. ' ' → logprob: -10.365448951721191
    9. '/' → logprob: -10.365448951721191
    10. '```' → logprob: -11.865448951721191

Token 64: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.47407880425453186
    2. 'n' → logprob: -0.9740787744522095
    3. 'int' → logprob: -13.849079132080078
    4. '	n' → logprob: -14.724079132080078
    5. ' ' → logprob: -15.349079132080078
    6. ' ' → logprob: -16.849079132080078
    7. '/' → logprob: -17.099079132080078
    8. ')n' → logprob: -17.099079132080078
    9. '<|end|>' → logprob: -17.974079132080078
    10. ' int' → logprob: -18.224079132080078

Token 65: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -1.0615254640579224
    2. '//' → logprob: -1.1865254640579224
    3. ' ' → logprob: -1.9365254640579224
    4. '/' → logprob: -2.311525344848633
    5. '`' → logprob: -3.686525344848633
    6. ' ' → logprob: -3.811525344848633
    7. '2' → logprob: -4.311525344848633
    8. '<|end|>' → logprob: -4.561525344848633
    9. ' /' → logprob: -5.436525344848633
    10. 'n' → logprob: -5.686525344848633

Token 66: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.375001907348633
    4. '```' → logprob: -16.750001907348633
    5. '２' → logprob: -18.625001907348633
    6. '۲' → logprob: -19.125001907348633
    7. '  ' → logprob: -19.875001907348633
    8. '<|end|>' → logprob: -20.000001907348633
    9. '>' → logprob: -20.500001907348633
    10. '`' → logprob: -20.687501907348633

Token 67: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '<|end|>' → logprob: -16.875003814697266
    4. '   ' → logprob: -17.375003814697266
    5. '```' → logprob: -17.375003814697266
    6. '２' → logprob: -18.375003814697266
    7. '۲' → logprob: -19.125003814697266
    8. '  ' → logprob: -19.687503814697266
    9. '>' → logprob: -19.750003814697266
    10. '`' → logprob: -20.125003814697266

Token 68: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00038872790173627436
    2. '<|end|>' → logprob: -8.375389099121094
    3. ' print' → logprob: -9.625389099121094
    4. '```' → logprob: -10.000389099121094
    5. '\n' → logprob: -10.875389099121094
    6. ')' → logprob: -11.375389099121094
    7. '
' → logprob: -12.125389099121094
    8. '#print' → logprob: -12.375389099121094
    9. '#' → logprob: -13.250389099121094
    10. '(print' → logprob: -14.125389099121094

Token 69: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.696889623621246e-06
    2. ' print' → logprob: -13.12500286102295
    3. '```' → logprob: -14.50000286102295
    4. 'for' → logprob: -17.750001907348633
    5. ')' → logprob: -18.000001907348633
    6. '#print' → logprob: -18.375001907348633
    7. 'if' → logprob: -18.625001907348633
    8. 'count' → logprob: -18.625001907348633
    9. '<|end|>' → logprob: -18.875001907348633
    10. '
' → logprob: -19.375001907348633

Token 70: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048785049468278885
    2. '(count' → logprob: -3.0487849712371826
    3. '('' → logprob: -9.298785209655762
    4. '()' → logprob: -9.673785209655762
    5. '("' → logprob: -11.048785209655762
    6. '(sum' → logprob: -11.798785209655762
    7. ' (' → logprob: -11.923785209655762
    8. '((' → logprob: -12.423785209655762
    9. '(
' → logprob: -12.798785209655762
    10. '("("' → logprob: -13.423785209655762

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ' )' → logprob: -16.75
    3. ')
' → logprob: -18.5
    4. ')`' → logprob: -18.5
    5. '))' → logprob: -19.25
    6. '),' → logprob: -20.75
    7. '）' → logprob: -20.75
    8. '')' → logprob: -20.75
    9. ')#' → logprob: -21.0
    10. ')**' → logprob: -21.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 69
Tokens correctement prédits (1ère position, stricte): 26
Tokens correctement prédits (1ère position, avec adaptation): 27
Tokens correctement prédits (top 10): 59
Précision stricte (1ère position): 37.68%
Précision adaptée (1ère position): 39.13%
Précision (top 10): 85.51%
================================================================================
