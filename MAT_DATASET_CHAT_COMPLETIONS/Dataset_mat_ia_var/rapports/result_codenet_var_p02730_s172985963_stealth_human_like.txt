================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:20:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

# Je suppose qu'on doit vérifier des trucs avec des palindromes
str_ = input() # lol j'aime pas trop les noms courts
rev_str = "".join(reversed(str_))
length = len(str_)

if str_ == rev_str:
    half_rev = ''.join(reversed(str_[:length//2]))
    # ici, c'est pour la première moitié ?
    if str_[:length//2] == half_rev:
        right_rev = ''.join(reversed(str_[(length+2)//2:]))
        # une autre vérification bizarre...
        if str_[(length+2)//2:] == right_rev:
            print("Yes")
            sys.exit(0)
# pas trouvé donc non
print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18268179893493652
    2. '\n' → logprob: -2.1826817989349365
    3. 'import' → logprob: -3.5576817989349365
    4. '<|end|>' → logprob: -4.932682037353516
    5. '' → logprob: -5.807682037353516
    6. 'newline' → logprob: -5.932682037353516
    7. '\' → logprob: -6.057682037353516
    8. 'print' → logprob: -6.432682037353516
    9. '[' → logprob: -6.557682037353516
    10. '<|end|>' → logprob: -6.807682037353516

Token 4: ' Je' (ID: 4678)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009553728625178337
    2. 'def' → logprob: -5.884553909301758
    3. '#' → logprob: -6.384553909301758
    4. ' def' → logprob: -7.009553909301758
    5. 'import' → logprob: -7.259553909301758
    6. '  ' → logprob: -7.509553909301758
    7. ' #' → logprob: -7.509553909301758
    8. ' argparse' → logprob: -7.884553909301758
    9. '!' → logprob: -8.509553909301758
    10. ' is' → logprob: -8.759553909301758

Token 5: ' suppose' (ID: 35968)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.23027823865413666
    2. 'r' → logprob: -2.730278253555298
    3. 'b' → logprob: -2.980278253555298
    4. 'ct' → logprob: -4.230278015136719
    5. 'st' → logprob: -4.480278015136719
    6. 'm' → logprob: -4.730278015136719
    7. 'f' → logprob: -5.230278015136719
    8. '```' → logprob: -5.230278015136719
    9. 'ctor' → logprob: -5.355278015136719
    10. '#' → logprob: -5.480278015136719

Token 6: ' qu' (ID: 474)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.018987193703651428
    2. '_' → logprob: -4.89398717880249
    3. ' que' → logprob: -5.64398717880249
    4. '```' → logprob: -6.26898717880249
    5. 'space' → logprob: -6.76898717880249
    6. ''' → logprob: -7.01898717880249
    7. ' that' → logprob: -7.01898717880249
    8. ' ```' → logprob: -7.14398717880249
    9. ' ' → logprob: -8.143987655639648
    10. ' space' → logprob: -8.268987655639648

Token 7: ''on' (ID: 25812)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06423023343086243
    2. ''' → logprob: -2.81423020362854
    3. 'a' → logprob: -7.314230442047119
    4. '```' → logprob: -8.064229965209961
    5. ' e' → logprob: -8.439229965209961
    6. '   ' → logprob: -8.814229965209961
    7. ''ai' → logprob: -8.939229965209961
    8. ''a' → logprob: -9.064229965209961
    9. ''é' → logprob: -9.189229965209961
    10. 's' → logprob: -9.564229965209961

Token 8: ' doit' (ID: 21822)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4535118043422699
    2. ' continue' → logprob: -1.4535118341445923
    3. 'a' → logprob: -3.2035117149353027
    4. ' ' → logprob: -4.328511714935303
    5. ' veut' → logprob: -4.328511714935303
    6. 've' → logprob: -4.828511714935303
    7. ' souhaite' → logprob: -5.078511714935303
    8. 'continue' → logprob: -5.453511714935303
    9. ' va' → logprob: -5.453511714935303
    10. ''' → logprob: -5.453511714935303

Token 9: ' vérifier' (ID: 93671)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.26867204904556274
    2. 'util' → logprob: -3.018671989440918
    3. ' utiliser' → logprob: -3.018671989440918
    4. 'contin' → logprob: -3.268671989440918
    5. ' continuer' → logprob: -3.768671989440918
    6. 'faire' → logprob: -4.393671989440918
    7. ' import' → logprob: -4.393671989440918
    8. 'mettre' → logprob: -4.393671989440918
    9. '_' → logprob: -5.143671989440918
    10. ' faire' → logprob: -5.518671989440918

Token 10: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11031339317560196
    2. ' si' → logprob: -2.9853134155273438
    3. '_' → logprob: -4.360313415527344
    4. 'l' → logprob: -4.610313415527344
    5. 'si' → logprob: -4.860313415527344
    6. ',' → logprob: -5.860313415527344
    7. ' l' → logprob: -5.860313415527344
    8. ' que' → logprob: -5.985313415527344
    9. ' la' → logprob: -5.985313415527344
    10. '```' → logprob: -5.985313415527344

Token 11: ' trucs' (ID: 151878)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -1.0975860357284546
    2. 'arguments' → logprob: -2.472586154937744
    3. ' fichiers' → logprob: -2.472586154937744
    4. 'd' → logprob: -2.847586154937744
    5. ' arguments' → logprob: -2.847586154937744
    6. 'f' → logprob: -3.222586154937744
    7. ' erreurs' → logprob: -3.222586154937744
    8. 'import' → logprob: -3.597586154937744
    9. ' entr' → logprob: -3.597586154937744
    10. 'modules' → logprob: -4.097586154937744

Token 12: ' avec' (ID: 3937)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7083695530891418
    2. ',' → logprob: -1.333369493484497
    3. '.' → logprob: -2.083369493484497
    4. 'import' → logprob: -2.958369493484497
    5. '\' → logprob: -3.708369493484497
    6. '_' → logprob: -4.708369731903076
    7. ' ' → logprob: -4.833369731903076
    8. '```' → logprob: -5.208369731903076
    9. '\n' → logprob: -5.333369731903076
    10. ':' → logprob: -5.333369731903076

Token 13: ' des' (ID: 731)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3857938051223755
    2. ' sys' → logprob: -1.7607938051223755
    3. '.' → logprob: -2.635793685913086
    4. ' ' → logprob: -3.635793685913086
    5. 'import' → logprob: -4.760793685913086
    6. '_' → logprob: -5.510793685913086
    7. ' `' → logprob: -5.760793685913086
    8. '#' → logprob: -5.760793685913086
    9. 'l' → logprob: -5.885793685913086
    10. 'input' → logprob: -5.885793685913086

Token 14: ' pal' (ID: 5337)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7344324588775635
    2. 'import' → logprob: -2.2344324588775635
    3. 'arguments' → logprob: -2.6094324588775635
    4. 'arg' → logprob: -3.2344324588775635
    5. 'assert' → logprob: -3.2344324588775635
    6. 'argv' → logprob: -3.2344324588775635
    7. 'd' → logprob: -3.2344324588775635
    8. 'sys' → logprob: -3.3594324588775635
    9. 'try' → logprob: -3.7344324588775635
    10. 'if' → logprob: -4.359432220458984

Token 15: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.04633520543575287
    2. 'indrome' → logprob: -3.671335220336914
    3. '```' → logprob: -4.546335220336914
    4. 'ynd' → logprob: -5.796335220336914
    5. '``' → logprob: -6.171335220336914
    6. '#' → logprob: -7.671335220336914
    7. 'in' → logprob: -8.046335220336914
    8. '_' → logprob: -8.046335220336914
    9. '()' → logprob: -8.046335220336914
    10. '**' → logprob: -8.421335220336914

Token 16: 'romes' (ID: 159600)
  Prédit: 'romes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'romes' → logprob: -0.2569376826286316
    2. 'r' → logprob: -1.5069377422332764
    3. 'rome' → logprob: -5.756937503814697
    4. 'rom' → logprob: -7.131937503814697
    5. 'ro' → logprob: -7.131937503814697
    6. '#' → logprob: -9.881937980651855
    7. '`' → logprob: -10.381937980651855
    8. '```' → logprob: -10.506937980651855
    9. '()' → logprob: -11.631937980651855
    10. ',' → logprob: -11.631937980651855

Token 17: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10868655145168304
    2. '\' → logprob: -3.1086864471435547
    3. '#' → logprob: -3.8586864471435547
    4. ':' → logprob: -4.108686447143555
    5. ',' → logprob: -4.858686447143555
    6. '.' → logprob: -5.108686447143555
    7. '\n' → logprob: -6.358686447143555
    8. 'import' → logprob: -6.858686447143555
    9. '
' → logprob: -7.483686447143555
    10. '_' → logprob: -7.483686447143555

Token 18: 'str' (ID: 689)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06959690153598785
    2. '#' → logprob: -3.944597005844116
    3. ',' → logprob: -3.944597005844116
    4. '.' → logprob: -4.319596767425537
    5. ':' → logprob: -5.444596767425537
    6. '_' → logprob: -5.819596767425537
    7. 'e' → logprob: -5.944596767425537
    8. ' ' → logprob: -7.069596767425537
    9. '\' → logprob: -7.194596767425537
    10. 'de' → logprob: -7.694596767425537

Token 19: '_' (ID: 62)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.04345551133155823
    2. '_' → logprob: -3.4184556007385254
    3. 'i' → logprob: -5.543455600738525
    4. 's' → logprob: -6.043455600738525
    5. 'e' → logprob: -6.793455600738525
    6. ' =' → logprob: -7.293455600738525
    7. 'in' → logprob: -7.418455600738525
    8. '(' → logprob: -8.293455123901367
    9. '_ing' → logprob: -8.293455123901367
    10. ' ' → logprob: -9.418455123901367

Token 20: ' =' (ID: 314)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -1.0448120832443237
    2. ' =' → logprob: -1.1698120832443237
    3. 'e' → logprob: -2.0448122024536133
    4. '_' → logprob: -2.7948122024536133
    5. '=' → logprob: -3.0448122024536133
    6. 's' → logprob: -3.2948122024536133
    7. 'input' → logprob: -3.9198122024536133
    8. '_input' → logprob: -3.9198122024536133
    9. '1' → logprob: -5.294812202453613
    10. 'i' → logprob: -5.544812202453613

Token 21: ' input' (ID: 3422)
  Prédit: ' ""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ""' → logprob: -0.6883218884468079
    2. ' "' → logprob: -1.813321828842163
    3. ' ''' → logprob: -1.813321828842163
    4. '""' → logprob: -2.563321828842163
    5. '"' → logprob: -2.688321828842163
    6. '''' → logprob: -4.563322067260742
    7. ''' → logprob: -4.938322067260742
    8. ' '' → logprob: -5.188322067260742
    9. ' ' → logprob: -6.188322067260742
    10. ''s' → logprob: -7.938322067260742

Token 22: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013973800232633948
    2. '('' → logprob: -6.751397609710693
    3. '("("' → logprob: -9.001397132873535
    4. ' (' → logprob: -10.751397132873535
    5. '(
' → logprob: -10.876397132873535
    6. '()' → logprob: -10.876397132873535
    7. '("")' → logprob: -11.376397132873535
    8. ' ' → logprob: -12.251397132873535
    9. '(

' → logprob: -12.376397132873535
    10. '(`' → logprob: -12.501397132873535

Token 23: ' #' (ID: 1069)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.18579506874084473
    2. 'if' → logprob: -2.4357950687408447
    3. ' if' → logprob: -4.185794830322266
    4. ' ' → logprob: -4.560794830322266
    5. '
' → logprob: -4.810794830322266
    6. '[:]' → logprob: -4.935794830322266
    7. '=' → logprob: -5.060794830322266
    8. ' =' → logprob: -5.060794830322266
    9. '.strip' → logprob: -5.310794830322266
    10. '.' → logprob: -5.310794830322266

Token 24: ' lol' (ID: 27504)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.45480889081954956
    2. 'if' → logprob: -1.2048089504241943
    3. '[::-' → logprob: -3.7048089504241943
    4. ' ' → logprob: -3.9548089504241943
    5. 's' → logprob: -4.579808712005615
    6. ' 
' → logprob: -5.454808712005615
    7. ' =' → logprob: -6.454808712005615
    8. '#' → logprob: -6.704808712005615
    9. '  
' → logprob: -6.829808712005615
    10. '.' → logprob: -7.329808712005615

Token 25: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8034378290176392
    2. 'if' → logprob: -1.5534378290176392
    3. ' if' → logprob: -2.3034377098083496
    4. '.' → logprob: -2.4284377098083496
    5. '[::-' → logprob: -3.8034377098083496
    6. ' =' → logprob: -3.9284377098083496
    7. '=' → logprob: -3.9284377098083496
    8. ':' → logprob: -4.05343770980835
    9. '
' → logprob: -4.30343770980835
    10. ')' → logprob: -4.55343770980835

Token 26: ''aime' (ID: 57963)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.22559423744678497
    2. 'uste' → logprob: -1.7255942821502686
    3. ''aime' → logprob: -4.6005940437316895
    4. 'ust' → logprob: -4.8505940437316895
    5. 'a' → logprob: -6.3505940437316895
    6. ''adore' → logprob: -6.9755940437316895
    7. ''espère' → logprob: -6.9755940437316895
    8. ''ai' → logprob: -7.6005940437316895
    9. '```' → logprob: -8.725594520568848
    10. ''arrive' → logprob: -8.725594520568848

Token 27: ' pas' (ID: 2173)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5299621820449829
    2. '
' → logprob: -2.0299620628356934
    3. 'if' → logprob: -2.2799620628356934
    4. ' if' → logprob: -3.0299620628356934
    5. '[::-' → logprob: -3.6549620628356934
    6. ' =' → logprob: -4.279962062835693
    7. ':' → logprob: -4.404962062835693
    8. 's' → logprob: -4.654962062835693
    9. '.' → logprob: -4.654962062835693
    10. '=' → logprob: -4.779962062835693

Token 28: ' trop' (ID: 14765)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4308704435825348
    2. ' if' → logprob: -1.5558704137802124
    3. ' ' → logprob: -2.805870532989502
    4. '
' → logprob: -3.680870532989502
    5. 's' → logprob: -4.555870532989502
    6. '[::-' → logprob: -4.555870532989502
    7. '.' → logprob: -4.930870532989502
    8. ' 
' → logprob: -5.055870532989502
    9. '#' → logprob: -5.305870532989502
    10. '  
' → logprob: -6.055870532989502

Token 29: ' les' (ID: 1341)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9869649410247803
    2. ' ' → logprob: -1.2369649410247803
    3. ' if' → logprob: -2.1119649410247803
    4. '.' → logprob: -2.6119649410247803
    5. '
' → logprob: -3.1119649410247803
    6. 's' → logprob: -3.7369649410247803
    7. ':' → logprob: -4.736965179443359
    8. '#' → logprob: -4.861965179443359
    9. 'def' → logprob: -4.861965179443359
    10. '[::-' → logprob: -5.111965179443359

Token 30: ' noms' (ID: 97041)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.9154183864593506
    2. 'pal' → logprob: -1.0404183864593506
    3. ' pal' → logprob: -1.9154183864593506
    4. ' ' → logprob: -3.5404183864593506
    5. '_pal' → logprob: -3.9154183864593506
    6. 'esp' → logprob: -4.29041862487793
    7. '_' → logprob: -4.54041862487793
    8. ' strings' → logprob: -5.79041862487793
    9. 'strings' → logprob: -6.04041862487793
    10. 'spaces' → logprob: -6.16541862487793

Token 31: ' courts' (ID: 33374)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7003409266471863
    2. 'if' → logprob: -1.325340986251831
    3. 's' → logprob: -2.575340986251831
    4. ' if' → logprob: -3.075340986251831
    5. '#' → logprob: -3.950340986251831
    6. 'i' → logprob: -3.950340986251831
    7. '
' → logprob: -4.450340747833252
    8. '=' → logprob: -4.700340747833252
    9. 'def' → logprob: -4.825340747833252
    10. '_' → logprob: -4.950340747833252

Token 32: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6747233867645264
    2. '
' → logprob: -1.9247233867645264
    3. ' if' → logprob: -2.0497233867645264
    4. ' ' → logprob: -2.4247233867645264
    5. 's' → logprob: -3.0497233867645264
    6. ' 
' → logprob: -3.1747233867645264
    7. '#' → logprob: -4.7997236251831055
    8. '  
' → logprob: -5.0497236251831055
    9. 'i' → logprob: -5.1747236251831055
    10. '<|end|>' → logprob: -5.7997236251831055

Token 33: 'rev' (ID: 25656)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4320531487464905
    2. '
' → logprob: -1.3070530891418457
    3. ' if' → logprob: -3.0570530891418457
    4. 's' → logprob: -4.807053089141846
    5. '#' → logprob: -5.307053089141846
    6. ' ' → logprob: -5.557053089141846
    7. '[::-' → logprob: -5.682053089141846
    8. 'def' → logprob: -6.182053089141846
    9. ' 
' → logprob: -6.307053089141846
    10. '  
' → logprob: -6.807053089141846

Token 34: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.2761692702770233
    2. '_' → logprob: -1.6511693000793457
    3. 'str' → logprob: -3.0261693000793457
    4. '_=' → logprob: -8.026168823242188
    5. 's' → logprob: -8.276168823242188
    6. 'Str' → logprob: -8.776168823242188
    7. 'rs' → logprob: -9.526168823242188
    8. 'r' → logprob: -10.026168823242188
    9. '=' → logprob: -10.401168823242188
    10. '=str' → logprob: -10.651168823242188

Token 35: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6126166582107544
    2. '=' → logprob: -0.8626166582107544
    3. ' =' → logprob: -3.362616539001465
    4. '_=' → logprob: -6.612616539001465
    5. ' ' → logprob: -11.362616539001465
    6. '=_' → logprob: -13.237616539001465
    7. '```' → logprob: -13.237616539001465
    8. 'u' → logprob: -13.487616539001465
    9. '=

' → logprob: -13.987616539001465
    10. 'e' → logprob: -14.487616539001465

Token 36: ' "".' (ID: 94734)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.47409912943840027
    2. 'str' → logprob: -0.9740991592407227
    3. ' ' → logprob: -11.099099159240723
    4. 's' → logprob: -13.099099159240723
    5. ' s' → logprob: -13.099099159240723
    6. '	str' → logprob: -14.474099159240723
    7. 'stri' → logprob: -14.849099159240723
    8. ' ' → logprob: -15.474099159240723
    9. '_str' → logprob: -15.474099159240723
    10. '  ' → logprob: -15.599099159240723

Token 37: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.1472419600977446e-06
    2. ' join' → logprob: -14.125000953674316
    3. 'j' → logprob: -16.750001907348633
    4. 'strip' → logprob: -16.875001907348633
    5. 'str' → logprob: -17.000001907348633
    6. 'reverse' → logprob: -17.125001907348633
    7. '(join' → logprob: -17.250001907348633
    8. '```' → logprob: -17.375001907348633
    9. 'jo' → logprob: -18.000001907348633
    10. '[::-' → logprob: -18.125001907348633

Token 38: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.050428688526153564
    2. '(' → logprob: -3.675428628921509
    3. 're' → logprob: -3.800428628921509
    4. '(list' → logprob: -7.675428867340088
    5. '(sorted' → logprob: -7.675428867340088
    6. '(str' → logprob: -7.800428867340088
    7. '([' → logprob: -9.17542839050293
    8. '(
' → logprob: -10.67542839050293
    9. ' reversed' → logprob: -13.05042839050293
    10. 'sorted' → logprob: -13.55042839050293

Token 39: 'versed' (ID: 76479)
  Prédit: 'versed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versed' → logprob: -0.061983149498701096
    2. 'v' → logprob: -2.811983108520508
    3. '[' → logprob: -12.311983108520508
    4. 'verse' → logprob: -12.811983108520508
    5. 'str' → logprob: -13.311983108520508
    6. 've' → logprob: -13.686983108520508
    7. 'ver' → logprob: -13.686983108520508
    8. '[v' → logprob: -13.811983108520508
    9. 'st' → logprob: -15.061983108520508
    10. 's' → logprob: -15.061983108520508

Token 40: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.006732422858476639
    2. '(' → logprob: -5.00673246383667
    3. '(
' → logprob: -11.631731986999512
    4. 'str' → logprob: -12.381731986999512
    5. ' (' → logprob: -13.131731986999512
    6. '(s' → logprob: -14.256731986999512
    7. '(

' → logprob: -14.381731986999512
    8. ' str' → logprob: -15.256731986999512
    9. '_str' → logprob: -15.506731986999512
    10. ')' → logprob: -15.631731986999512

Token 41: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1398757123970427e-05
    2. '_str' → logprob: -11.625011444091797
    3. '))' → logprob: -14.000011444091797
    4. '_)' → logprob: -14.000011444091797
    5. '__))' → logprob: -14.500011444091797
    6. '_-' → logprob: -16.500011444091797
    7. 'str' → logprob: -17.875011444091797
    8. '_),' → logprob: -18.000011444091797
    9. '()))' → logprob: -18.125011444091797
    10. '_s' → logprob: -18.125011444091797

Token 42: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003380846756044775
    2. ')' → logprob: -8.500338554382324
    3. ')))' → logprob: -9.125338554382324
    4. '))
' → logprob: -11.125338554382324
    5. '()))' → logprob: -12.500338554382324
    6. ' ))' → logprob: -12.750338554382324
    7. '))

' → logprob: -14.125338554382324
    8. ''))' → logprob: -14.625338554382324
    9. '"))' → logprob: -14.750338554382324
    10. '_' → logprob: -14.875338554382324

Token 43: 'length' (ID: 7914)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6070156693458557
    2. '
' → logprob: -1.482015609741211
    3. '<|end|>' → logprob: -2.107015609741211
    4. ' if' → logprob: -3.107015609741211
    5. '\n' → logprob: -3.232015609741211
    6. ')' → logprob: -4.607015609741211
    7. ' ' → logprob: -5.732015609741211
    8. '#' → logprob: -5.982015609741211
    9. '  
' → logprob: -6.857015609741211
    10. '```' → logprob: -6.982015609741211

Token 44: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02655317448079586
    2. '=' → logprob: -5.026553153991699
    3. '_str' → logprob: -5.151553153991699
    4. ' =' → logprob: -5.276553153991699
    5. '(' → logprob: -5.651553153991699
    6. 's' → logprob: -6.151553153991699
    7. '(str' → logprob: -6.401553153991699
    8. '=str' → logprob: -7.526553153991699
    9. 'str' → logprob: -8.2765531539917
    10. '_=' → logprob: -9.0265531539917

Token 45: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0015031944494694471
    2. 'len' → logprob: -6.501502990722656
    3. '(len' → logprob: -14.001502990722656
    4. ' ' → logprob: -16.751502990722656
    5. '[len' → logprob: -18.626502990722656
    6. '=len' → logprob: -18.626502990722656
    7. '	len' → logprob: -19.126502990722656
    8. ' str' → logprob: -19.251502990722656
    9. ' ' → logprob: -20.751502990722656
    10. '<len' → logprob: -21.126502990722656

Token 46: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.16041523218154907
    2. '(' → logprob: -1.9104151725769043
    3. 'str' → logprob: -9.285415649414062
    4. '(re' → logprob: -9.535415649414062
    5. '(s' → logprob: -11.660415649414062
    6. ' (' → logprob: -11.910415649414062
    7. '(
' → logprob: -12.410415649414062
    8. 'rev' → logprob: -12.785415649414062
    9. '(

' → logprob: -14.035415649414062
    10. '(st' → logprob: -14.785415649414062

Token 47: '_' (ID: 62)
  Prédit: '_)'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_)' → logprob: -0.048739973455667496
    2. '_' → logprob: -3.0487399101257324
    3. '_)
' → logprob: -9.04874038696289
    4. '_str' → logprob: -10.42374038696289
    5. ')' → logprob: -12.54874038696289
    6. '_]' → logprob: -14.29874038696289
    7. 'str' → logprob: -14.67374038696289
    8. '_),' → logprob: -15.29874038696289
    9. '_

' → logprob: -15.79874038696289
    10. '_
' → logprob: -16.17374038696289

Token 48: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9981420336989686e-05
    2. ')
' → logprob: -11.750020027160645
    3. ' )' → logprob: -11.875020027160645
    4. '#' → logprob: -13.125020027160645
    5. '))' → logprob: -13.500020027160645
    6. ')

' → logprob: -14.375020027160645
    7. 'if' → logprob: -15.250020027160645
    8. ')#' → logprob: -15.250020027160645
    9. '()' → logprob: -16.375019073486328
    10. '**' → logprob: -16.625019073486328

Token 49: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.049097783863544464
    2. 'if' → logprob: -3.424097776412964
    3. '\n' → logprob: -4.674098014831543
    4. ' if' → logprob: -6.174098014831543
    5. '```' → logprob: -6.549098014831543
    6. '<|end|>' → logprob: -6.924098014831543
    7. ' 
' → logprob: -8.049098014831543
    8. '
' → logprob: -8.299098014831543
    9. 'newline' → logprob: -8.424098014831543
    10. '\' → logprob: -9.049098014831543

Token 50: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.03524637594819069
    2. ' ' → logprob: -3.5352463722229004
    3. 'str' → logprob: -5.4102463722229
    4. ' length' → logprob: -7.0352463722229
    5. ' len' → logprob: -10.035246849060059
    6. ' (' → logprob: -10.535246849060059
    7. ' ' → logprob: -10.785246849060059
    8. ' rev' → logprob: -11.160246849060059
    9. 'length' → logprob: -12.160246849060059
    10. '  ' → logprob: -12.285246849060059

Token 51: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5928495486150496e-05
    2. '_[' → logprob: -11.375016212463379
    3. '_=' → logprob: -12.875016212463379
    4. '_.' → logprob: -14.250016212463379
    5. '_]' → logprob: -14.625016212463379
    6. '_<' → logprob: -16.000015258789062
    7. '__' → logprob: -16.125015258789062
    8. '==' → logprob: -16.125015258789062
    9. '_

' → logprob: -16.500015258789062
    10. '_)' → logprob: -16.500015258789062

Token 52: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08910784870386124
    2. '==' → logprob: -2.4641077518463135
    3. ' ' → logprob: -9.214107513427734
    4. '=' → logprob: -10.839107513427734
    5. '[' → logprob: -11.214107513427734
    6. '[:]' → logprob: -11.464107513427734
    7. ' !=' → logprob: -11.714107513427734
    8. ')' → logprob: -12.464107513427734
    9. '[::-' → logprob: -12.714107513427734
    10. ' =' → logprob: -13.339107513427734

Token 53: ' rev' (ID: 10808)
  Prédit: ' rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rev' → logprob: -0.038042180240154266
    2. 'rev' → logprob: -3.2880420684814453
    3. '_rev' → logprob: -14.913042068481445
    4. '.rev' → logprob: -15.413042068481445
    5. ' ' → logprob: -15.913042068481445
    6. ' ' → logprob: -16.288042068481445
    7. 'Rev' → logprob: -17.288042068481445
    8. '"' → logprob: -18.538042068481445
    9. ' Rev' → logprob: -19.663042068481445
    10. ''' → logprob: -19.788042068481445

Token 54: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00012844942102674395
    2. 'str' → logprob: -9.000128746032715
    3. '_' → logprob: -12.625128746032715
    4. 'estr' → logprob: -15.000128746032715
    5. '```' → logprob: -15.500128746032715
    6. '_STR' → logprob: -15.625128746032715
    7. '_s' → logprob: -15.875128746032715
    8. ' str' → logprob: -15.875128746032715
    9. '$str' → logprob: -16.1251277923584
    10. 's' → logprob: -16.2501277923584

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038038729690015316
    2. ' :' → logprob: -8.000380516052246
    3. ' and' → logprob: -10.500380516052246
    4. ':
' → logprob: -11.125380516052246
    5. ':**' → logprob: -14.125380516052246
    6. 'and' → logprob: -14.625380516052246
    7. '):' → logprob: -15.000380516052246
    8. ' or' → logprob: -15.625380516052246
    9. ':def' → logprob: -16.00037956237793
    10. ',' → logprob: -16.12537956237793

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03455714136362076
    2. ' print' → logprob: -3.6595571041107178
    3. 'print' → logprob: -5.909557342529297
    4. ':' → logprob: -6.034557342529297
    5. '    
' → logprob: -6.909557342529297
    6. '\n' → logprob: -7.034557342529297
    7. '	print' → logprob: -8.409557342529297
    8. ' :' → logprob: -8.534557342529297
    9. ':
' → logprob: -8.784557342529297
    10. ' ' → logprob: -8.784557342529297

Token 57: ' half' (ID: 6375)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.07563783973455429
    2. 'print' → logprob: -2.8256378173828125
    3. '   ' → logprob: -4.3256378173828125
    4. ' pass' → logprob: -9.075637817382812
    5. ' ' → logprob: -9.450637817382812
    6. ' ' → logprob: -10.575637817382812
    7. '    ' → logprob: -10.575637817382812
    8. ' #' → logprob: -10.950637817382812
    9. ' if' → logprob: -11.075637817382812
    10. '    
' → logprob: -11.075637817382812

Token 58: '_rev' (ID: 99394)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.04788682982325554
    2. '_len' → logprob: -3.547886848449707
    3. ' =' → logprob: -4.922886848449707
    4. '=' → logprob: -5.297886848449707
    5. '_' → logprob: -5.297886848449707
    6. '_point' → logprob: -8.547886848449707
    7. '_index' → logprob: -8.797886848449707
    8. '_l' → logprob: -9.297886848449707
    9. 'way' → logprob: -9.422886848449707
    10. '_idx' → logprob: -10.172886848449707

Token 59: ' =' (ID: 314)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.13718336820602417
    2. '_len' → logprob: -2.512183427810669
    3. '_length' → logprob: -3.387183427810669
    4. ' =' → logprob: -4.88718318939209
    5. '=' → logprob: -6.26218318939209
    6. '_' → logprob: -6.63718318939209
    7. '_l' → logprob: -7.51218318939209
    8. '_s' → logprob: -8.13718318939209
    9. '_strlen' → logprob: -8.63718318939209
    10. 'ength' → logprob: -8.63718318939209

Token 60: ' ''.' (ID: 105941)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.2852737307548523
    2. ' rev' → logprob: -1.660273790359497
    3. 'str' → logprob: -3.660273790359497
    4. 'length' → logprob: -4.285273551940918
    5. ' str' → logprob: -4.785273551940918
    6. ' length' → logprob: -5.035273551940918
    7. 'len' → logprob: -6.910273551940918
    8. '"' → logprob: -7.285273551940918
    9. ' ' → logprob: -7.535273551940918
    10. ' "".' → logprob: -7.660273551940918

Token 61: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.696889623621246e-06
    2. 'jo' → logprob: -13.50000286102295
    3. ' join' → logprob: -14.87500286102295
    4. 'startswith' → logprob: -15.25000286102295
    5. 'slice' → logprob: -15.37500286102295
    6. 'strip' → logprob: -16.500001907348633
    7. 'joins' → logprob: -16.625001907348633
    8. '(join' → logprob: -16.750001907348633
    9. 'j' → logprob: -16.875001907348633
    10. 'concat' → logprob: -17.000001907348633

Token 62: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.039388787001371384
    2. '([' → logprob: -4.039388656616211
    3. '(list' → logprob: -4.289388656616211
    4. '(str' → logprob: -5.289388656616211
    5. '(sorted' → logprob: -7.039388656616211
    6. '(' → logprob: -7.414388656616211
    7. 'rev' → logprob: -8.039388656616211
    8. '((' → logprob: -9.039388656616211
    9. '(reverse' → logprob: -9.914388656616211
    10. '()' → logprob: -10.039388656616211

Token 63: 'versed' (ID: 76479)
  Prédit: 'versed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versed' → logprob: -0.11375430971384048
    2. 'v' → logprob: -2.2387542724609375
    3. 'ved' → logprob: -7.8637542724609375
    4. 'ver' → logprob: -8.613754272460938
    5. 'str' → logprob: -8.613754272460938
    6. '[' → logprob: -10.238754272460938
    7. 'verse' → logprob: -10.363754272460938
    8. 'st' → logprob: -10.988754272460938
    9. 've' → logprob: -11.113754272460938
    10. 'ves' → logprob: -11.363754272460938

Token 64: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0024522303137928247
    2. '(' → logprob: -6.127452373504639
    3. '(re' → logprob: -9.00245189666748
    4. 'str' → logprob: -9.37745189666748
    5. '(s' → logprob: -10.75245189666748
    6. 'rev' → logprob: -11.62745189666748
    7. ')' → logprob: -12.25245189666748
    8. ' (' → logprob: -12.25245189666748
    9. ' str' → logprob: -12.37745189666748
    10. '((' → logprob: -12.50245189666748

Token 65: '_' (ID: 62)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.04864811152219772
    2. '_' → logprob: -3.0486481189727783
    3. 'str' → logprob: -10.6736478805542
    4. '_rev' → logprob: -11.4236478805542
    5. '_)' → logprob: -11.5486478805542
    6. '_[' → logprob: -11.7986478805542
    7. '_

' → logprob: -13.5486478805542
    8. '))' → logprob: -13.7986478805542
    9. '_(' → logprob: -13.7986478805542
    10. '_STR' → logprob: -14.4236478805542

Token 66: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.055936701595783234
    2. '[length' → logprob: -2.930936813354492
    3. '[' → logprob: -7.055936813354492
    4. '[int' → logprob: -9.930936813354492
    5. '[(' → logprob: -10.180936813354492
    6. 'length' → logprob: -10.680936813354492
    7. '))' → logprob: -10.930936813354492
    8. '[len' → logprob: -11.555936813354492
    9. '[
' → logprob: -11.680936813354492
    10. ')' → logprob: -11.680936813354492

Token 67: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.008295765146613121
    2. ' length' → logprob: -5.00829553604126
    3. '(length' → logprob: -6.50829553604126
    4. '(' → logprob: -9.633296012878418
    5. ' (' → logprob: -11.383296012878418
    6. ' ' → logprob: -12.133296012878418
    7. 'len' → logprob: -12.883296012878418
    8. '	length' → logprob: -14.133296012878418
    9. '[length' → logprob: -14.383296012878418
    10. '   ' → logprob: -14.508296012878418

Token 68: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.04300685599446297
    2. ' //' → logprob: -3.1680068969726562
    3. ' ' → logprob: -12.293006896972656
    4. '   ' → logprob: -14.168006896972656
    5. '#' → logprob: -14.543006896972656
    6. ')//' → logprob: -14.543006896972656
    7. 'length' → logprob: -14.918006896972656
    8. '2' → logprob: -15.793006896972656
    9. '(length' → logprob: -15.918006896972656
    10. ']' → logprob: -15.918006896972656

Token 69: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.15441757265944e-05
    2. ' ' → logprob: -10.375031471252441
    3. ')' → logprob: -16.000032424926758
    4. '   ' → logprob: -16.250032424926758
    5. '```' → logprob: -17.500032424926758
    6. '3' → logprob: -17.750032424926758
    7. '  ' → logprob: -18.000032424926758
    8. '])' → logprob: -18.437532424926758
    9. '1' → logprob: -18.500032424926758
    10. '２' → logprob: -18.687532424926758

Token 70: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.0016017447924241424
    2. ']' → logprob: -6.876601696014404
    3. ']))
' → logprob: -8.626602172851562
    4. '))' → logprob: -9.376602172851562
    5. '']))' → logprob: -9.376602172851562
    6. '])' → logprob: -9.626602172851562
    7. '+' → logprob: -10.251602172851562
    8. '])))' → logprob: -10.626602172851562
    9. '"]))' → logprob: -10.876602172851562
    10. '   ' → logprob: -10.876602172851562

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8287481069564819
    2. '<|end|>' → logprob: -1.203748106956482
    3. ')' → logprob: -1.703748106956482
    4. ' ' → logprob: -3.8287482261657715
    5. '#' → logprob: -4.4537482261657715
    6. ' if' → logprob: -4.7037482261657715
    7. ':' → logprob: -4.8287482261657715
    8. ' 
' → logprob: -5.2037482261657715
    9. 'if' → logprob: -5.3287482261657715
    10. '    
' → logprob: -5.5787482261657715

Token 72: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6442935466766357
    2. '
' → logprob: -1.2692935466766357
    3. 'if' → logprob: -2.3942935466766357
    4. '<|end|>' → logprob: -3.1442935466766357
    5. 'print' → logprob: -3.7692935466766357
    6. '    
' → logprob: -4.269293785095215
    7. ' if' → logprob: -4.269293785095215
    8. ' 
' → logprob: -6.394293785095215
    9. '  
' → logprob: -6.519293785095215
    10. '#' (adapté à ' #') → logprob: -6.894293785095215

Token 73: ' ici' (ID: 27994)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5437491536140442
    2. 'if' → logprob: -1.5437490940093994
    3. ' print' → logprob: -2.1687490940093994
    4. 'print' → logprob: -2.7937490940093994
    5. ' for' → logprob: -5.0437493324279785
    6. ' half' → logprob: -5.0437493324279785
    7. '   ' → logprob: -5.1687493324279785
    8. ' ' → logprob: -6.2937493324279785
    9. 'for' → logprob: -6.7937493324279785
    10. ' str' → logprob: -6.7937493324279785

Token 74: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8480154871940613
    2. ' if' → logprob: -1.098015546798706
    3. 'print' → logprob: -2.223015546798706
    4. 'if' → logprob: -3.098015546798706
    5. ' print' → logprob: -3.348015546798706
    6. ':' → logprob: -3.848015546798706
    7. '<|end|>' → logprob: -4.348015308380127
    8. ')' → logprob: -5.348015308380127
    9. ' :' → logprob: -5.973015308380127
    10. ' ' → logprob: -6.098015308380127

Token 75: ' c' (ID: 274)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23870998620986938
    2. 'if' → logprob: -2.3637099266052246
    3. ' print' → logprob: -2.7387099266052246
    4. 'print' → logprob: -4.113709926605225
    5. ' for' → logprob: -4.863709926605225
    6. ' second' → logprob: -4.988709926605225
    7. ' half' → logprob: -5.488709926605225
    8. ' length' → logprob: -5.488709926605225
    9. 'second' → logprob: -5.988709926605225
    10. ' on' → logprob: -6.113709926605225

Token 76: ''est' (ID: 6616)
  Prédit: 'ode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ode' → logprob: -1.2487308979034424
    2. 'ont' → logprob: -1.8737308979034424
    3. ''est' → logprob: -2.4987308979034424
    4. 'e' → logprob: -2.8737308979034424
    5. 'r' → logprob: -3.2487308979034424
    6. 'f' → logprob: -3.3737308979034424
    7. ''' → logprob: -3.3737308979034424
    8. '  ' → logprob: -3.3737308979034424
    9. 'on' → logprob: -3.4987308979034424
    10. ' ' → logprob: -3.4987308979034424

Token 77: ' pour' (ID: 1930)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.2432868480682373
    2. ' la' → logprob: -2.2432868480682373
    3. 'le' → logprob: -2.3682868480682373
    4. '...' → logprob: -2.7432868480682373
    5. ' if' → logprob: -2.9932868480682373
    6. ' un' → logprob: -3.4932868480682373
    7. ' l' → logprob: -3.4932868480682373
    8. ' =' → logprob: -3.6182868480682373
    9. ' une' → logprob: -3.6182868480682373
    10. 'la' → logprob: -3.7432868480682373

Token 78: ' la' (ID: 557)
  Prédit: ' vérifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vérifier' → logprob: -0.18292446434497833
    2. 'v' → logprob: -2.932924509048462
    3. ' verifier' → logprob: -3.432924509048462
    4. 'voir' → logprob: -4.682924270629883
    5. ' check' → logprob: -4.807924270629883
    6. ' voir' → logprob: -4.932924270629883
    7. ' continuer' → logprob: -5.057924270629883
    8. ' checker' → logprob: -5.432924270629883
    9. 'le' → logprob: -5.557924270629883
    10. ' comparer' → logprob: -5.682924270629883

Token 79: ' première' (ID: 23423)
  Prédit: ' deuxième'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deuxième' → logprob: -1.3588624000549316
    2. ' seconde' → logprob: -1.4838624000549316
    3. ' fin' → logprob: -2.3588624000549316
    4. ' suite' → logprob: -2.4838624000549316
    5. ' partie' → logprob: -2.9838624000549316
    6. ' moitié' → logprob: -3.2338624000549316
    7. ' ' → logprob: -3.3588624000549316
    8. ' second' → logprob: -3.4838624000549316
    9. 'suite' → logprob: -3.6088624000549316
    10. 's' → logprob: -3.8588624000549316

Token 80: ' moitié' (ID: 93216)
  Prédit: 'mo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mo' → logprob: -0.699613094329834
    2. ' moitié' → logprob: -0.949613094329834
    3. ' mo' → logprob: -2.824613094329834
    4. 'part' → logprob: -3.324613094329834
    5. ' partie' → logprob: -4.699613094329834
    6. 'half' → logprob: -5.324613094329834
    7. 'fois' → logprob: -7.074613094329834
    8. 'dem' → logprob: -7.074613094329834
    9. 'mot' → logprob: -7.449613094329834
    10. ' half' → logprob: -7.574613094329834

Token 81: ' ?
' (ID: 19740)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2787511646747589
    2. '<|end|>' → logprob: -1.9037511348724365
    3. ' ' → logprob: -3.0287511348724365
    4. ')' → logprob: -4.528751373291016
    5. '  ' → logprob: -4.653751373291016
    6. '    
' → logprob: -5.153751373291016
    7. '    ' → logprob: -5.278751373291016
    8. '  
' → logprob: -6.028751373291016
    9. ' 
' → logprob: -6.153751373291016
    10. '...' → logprob: -6.528751373291016

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3353569209575653
    2. '<|end|>' → logprob: -1.7103569507598877
    3. ' ' → logprob: -3.0853569507598877
    4. '    
' → logprob: -4.335356712341309
    5. '\n' → logprob: -4.460356712341309
    6. '  ' → logprob: -5.085356712341309
    7. ')' → logprob: -5.085356712341309
    8. '_' → logprob: -5.210356712341309
    9. '    ' → logprob: -5.335356712341309
    10. '  
' → logprob: -5.960356712341309

Token 83: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3219543397426605
    2. '\n' → logprob: -2.3219542503356934
    3. ' ' → logprob: -2.8219542503356934
    4. '    
' → logprob: -3.4469542503356934
    5. '<|end|>' → logprob: -3.4469542503356934
    6. '  
' → logprob: -4.571954250335693
    7. ' 
' → logprob: -4.696954250335693
    8. '
' → logprob: -4.946954250335693
    9. '    ' → logprob: -5.321954250335693
    10. 'if' (adapté à ' if') → logprob: -5.571954250335693

Token 84: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.19919313490390778
    2. ' half' → logprob: -2.074193239212036
    3. 'str' → logprob: -3.199193239212036
    4. ' length' → logprob: -5.324193000793457
    5. 'half' → logprob: -5.699193000793457
    6. ' rev' → logprob: -5.824193000793457
    7. ' len' → logprob: -6.574193000793457
    8. ' ' → logprob: -7.324193000793457
    9. 'rev' → logprob: -8.324193000793457
    10. 'length' → logprob: -8.574193000793457

Token 85: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0005725711234845221
    2. '_[' → logprob: -7.500572681427002
    3. '[:' → logprob: -11.375572204589844
    4. '__' → logprob: -12.250572204589844
    5. '_:' → logprob: -14.875572204589844
    6. '_.' → logprob: -15.000572204589844
    7. '___' → logprob: -15.000572204589844
    8. '_<' → logprob: -15.125572204589844
    9. '_

' → logprob: -15.125572204589844
    10. '_##' → logprob: -15.375572204589844

Token 86: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.005866459105163813
    2. '[length' → logprob: -5.880866527557373
    3. '[' → logprob: -6.380866527557373
    4. ' [:' → logprob: -6.755866527557373
    5. '==' → logprob: -9.380866050720215
    6. '[:]' → logprob: -9.880866050720215
    7. '[len' → logprob: -11.130866050720215
    8. ' [' → logprob: -11.255866050720215
    9. ' ==' → logprob: -11.380866050720215
    10. '.startswith' → logprob: -12.505866050720215

Token 87: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -2.3915141355246305e-05
    2. '(length' → logprob: -11.37502384185791
    3. ' length' → logprob: -11.62502384185791
    4. 'len' → logprob: -13.12502384185791
    5. '(' → logprob: -14.62502384185791
    6. 'leng' → logprob: -14.87502384185791
    7. '	length' → logprob: -16.250024795532227
    8. 'ength' → logprob: -16.250024795532227
    9. ':length' → logprob: -16.500024795532227
    10. '[length' → logprob: -16.750024795532227

Token 88: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.00045307583059184253
    2. '2' → logprob: -7.750452995300293
    3. ' //' → logprob: -11.375452995300293
    4. '//=' → logprob: -12.750452995300293
    5. '']//' → logprob: -13.250452995300293
    6. '```' → logprob: -13.500452995300293
    7. ' ' → logprob: -13.875452995300293
    8. ']' → logprob: -14.000452995300293
    9. '   ' → logprob: -14.625452995300293
    10. '/' → logprob: -14.875452995300293

Token 89: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.703443770878948e-06
    2. ' ' → logprob: -11.875007629394531
    3. '1' → logprob: -15.375007629394531
    4. '```' → logprob: -16.06250762939453
    5. ')' → logprob: -16.81250762939453
    6. '   ' → logprob: -16.87500762939453
    7. '<|end|>' → logprob: -17.12500762939453
    8. '>' → logprob: -17.12500762939453
    9. '۲' → logprob: -17.68750762939453
    10. '२' → logprob: -17.75000762939453

Token 90: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11444083601236343
    2. ' ]' → logprob: -2.98944091796875
    3. ']==' → logprob: -3.11444091796875
    4. ' ==' → logprob: -4.61444091796875
    5. '==' → logprob: -5.73944091796875
    6. ':]' → logprob: -9.48944091796875
    7. ' ' → logprob: -10.11444091796875
    8. ' :]' → logprob: -10.11444091796875
    9. ')' → logprob: -10.61444091796875
    10. '   ' → logprob: -10.73944091796875

Token 91: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02636498026549816
    2. '==' → logprob: -3.651365041732788
    3. ' !=' → logprob: -10.776365280151367
    4. ' ' → logprob: -10.901365280151367
    5. ' in' → logprob: -12.151365280151367
    6. '=' → logprob: -12.401365280151367
    7. ' <=' → logprob: -12.901365280151367
    8. ' =' → logprob: -12.901365280151367
    9. ')' → logprob: -13.526365280151367
    10. '+' → logprob: -13.776365280151367

Token 92: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.16024312376976013
    2. ' half' → logprob: -1.9102431535720825
    3. 'str' → logprob: -11.285243034362793
    4. 'hal' → logprob: -12.910243034362793
    5. ' ' → logprob: -13.785243034362793
    6. ' str' → logprob: -13.910243034362793
    7. 'rev' → logprob: -14.535243034362793
    8. '_half' → logprob: -14.535243034362793
    9. ' ' → logprob: -15.535243034362793
    10. '
' → logprob: -15.910243034362793

Token 93: '_rev' (ID: 99394)
  Prédit: '_rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rev' → logprob: -4.000763510703109e-05
    2. '_' → logprob: -11.125040054321289
    3. '_re' → logprob: -11.250040054321289
    4. 'rev' → logprob: -12.000040054321289
    5. '_str' → logprob: -12.625040054321289
    6. '_reverse' → logprob: -14.250040054321289
    7. '_REV' → logprob: -15.125040054321289
    8. '_rep' → logprob: -15.250040054321289
    9. '[::-' → logprob: -15.500040054321289
    10. '_ref' → logprob: -15.625040054321289

Token 94: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000504658033605665
    2. ' :' → logprob: -7.875504493713379
    3. ' and' → logprob: -9.750504493713379
    4. ':
' → logprob: -10.250504493713379
    5. '):' → logprob: -10.625504493713379
    6. ':**' → logprob: -13.375504493713379
    7. 'and' → logprob: -14.000504493713379
    8. ' or' → logprob: -14.000504493713379
    9. '=' → logprob: -14.875504493713379
    10. '.' → logprob: -14.875504493713379

Token 95: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27626651525497437
    2. '       ' → logprob: -1.5262665748596191
    3. '<|end|>' → logprob: -4.151266574859619
    4. '):' → logprob: -5.776266574859619
    5. '   ' → logprob: -5.901266574859619
    6. ':
' → logprob: -7.526266574859619
    7. ')' → logprob: -7.776266574859619
    8. '\n' → logprob: -8.151266098022461
    9. ' :' → logprob: -8.526266098022461
    10. '
' → logprob: -8.651266098022461

Token 96: ' right' (ID: 1849)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007300159893929958
    2. ' print' → logprob: -5.00730037689209
    3. '   ' → logprob: -7.50730037689209
    4. '       ' → logprob: -11.00730037689209
    5. '           ' → logprob: -11.38230037689209
    6. 'pass' → logprob: -12.25730037689209
    7. 'pr' → logprob: -14.13230037689209
    8. '	print' → logprob: -14.63230037689209
    9. ' ' → logprob: -14.75730037689209
    10. 'prit' → logprob: -15.38230037689209

Token 97: '_rev' (ID: 99394)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1601603478193283
    2. '_half' → logprob: -2.0351603031158447
    3. '_str' → logprob: -4.410160541534424
    4. 'half' → logprob: -6.160160541534424
    5. '_side' → logprob: -6.910160541534424
    6. '_part' → logprob: -7.910160541534424
    7. 'str' → logprob: -8.160160064697266
    8. '_s' → logprob: -8.535160064697266
    9. '_hal' → logprob: -9.035160064697266
    10. ' half' → logprob: -9.160160064697266

Token 98: ' =' (ID: 314)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.6060854196548462
    2. ' =' → logprob: -1.1060854196548462
    3. '_' → logprob: -2.6060853004455566
    4. '=' → logprob: -3.1060853004455566
    5. 'ed' → logprob: -5.981085300445557
    6. '_half' → logprob: -7.231085300445557
    7. 'str' → logprob: -7.856085300445557
    8. '_s' → logprob: -8.106085777282715
    9. 'al' → logprob: -8.606085777282715
    10. '=str' → logprob: -9.106085777282715

Token 99: ' ''.' (ID: 105941)
  Prédit: ' ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ''.' → logprob: -0.05537731945514679
    2. '''.' → logprob: -2.930377244949341
    3. '''' → logprob: -8.680377006530762
    4. 'str' → logprob: -9.555377006530762
    5. ' str' → logprob: -9.930377006530762
    6. ' "".' → logprob: -10.055377006530762
    7. ' rev' → logprob: -10.430377006530762
    8. ''' → logprob: -10.555377006530762
    9. ' '' → logprob: -10.680377006530762
    10. 'rev' → logprob: -10.680377006530762

Token 100: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.981667537620524e-06
    2. 'oin' → logprob: -13.500001907348633
    3. '(join' → logprob: -15.625001907348633
    4. 'jo' → logprob: -15.875001907348633
    5. '```' → logprob: -16.125001907348633
    6. 'str' → logprob: -16.750001907348633
    7. ' join' → logprob: -17.125001907348633
    8. '.join' → logprob: -17.250001907348633
    9. 'strip' → logprob: -17.750001907348633
    10. 'split' → logprob: -18.125001907348633

Token 101: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.0007020648336037993
    2. 're' → logprob: -7.375701904296875
    3. '(' → logprob: -9.500701904296875
    4. '(reverse' → logprob: -15.625701904296875
    5. '	re' → logprob: -16.375701904296875
    6. '<|end|>' → logprob: -16.625701904296875
    7. '_re' → logprob: -16.875701904296875
    8. '()' → logprob: -17.375701904296875
    9. '=re' → logprob: -17.375701904296875
    10. '(s' → logprob: -17.500701904296875

Token 102: 'versed' (ID: 76479)
  Prédit: 'versed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versed' → logprob: -9.9728669738397e-05
    2. 'v' → logprob: -10.000100135803223
    3. 'ves' → logprob: -11.000100135803223
    4. 'ver' → logprob: -11.125100135803223
    5. 'ved' → logprob: -11.125100135803223
    6. 'vers' → logprob: -12.250100135803223
    7. 'vised' → logprob: -13.750100135803223
    8. 'verted' → logprob: -13.750100135803223
    9. 've' → logprob: -14.750100135803223
    10. 'str' → logprob: -14.875100135803223

Token 103: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -8.041768160182983e-05
    2. 'str' → logprob: -9.750080108642578
    3. '(' → logprob: -10.875080108642578
    4. ' (' → logprob: -13.250080108642578
    5. ' str' → logprob: -14.125080108642578
    6. '(s' → logprob: -14.750080108642578
    7. '((' → logprob: -16.000080108642578
    8. ')' → logprob: -16.750080108642578
    9. '(string' → logprob: -17.125080108642578
    10. '[str' → logprob: -17.375080108642578

Token 104: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5762413740158081
    2. '_[' → logprob: -0.8262413740158081
    3. '[length' → logprob: -8.701241493225098
    4. '_)' → logprob: -9.951241493225098
    5. '__[' → logprob: -11.076241493225098
    6. '_(' → logprob: -11.326241493225098
    7. '__' → logprob: -11.451241493225098
    8. '(length' → logprob: -11.701241493225098
    9. '_-' → logprob: -12.201241493225098
    10. '[' → logprob: -12.826241493225098

Token 105: '[(' (ID: 20542)
  Prédit: '[length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[length' → logprob: -0.0002787359117064625
    2. '[-' → logprob: -8.25027847290039
    3. '[len' → logprob: -11.75027847290039
    4. '[(' → logprob: -11.87527847290039
    5. '[' → logprob: -13.12527847290039
    6. 'length' → logprob: -16.25027847290039
    7. '(length' → logprob: -16.37527847290039
    8. '[int' → logprob: -16.50027847290039
    9. '[size' → logprob: -16.62527847290039
    10. '[:' → logprob: -17.25027847290039

Token 106: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.002214488573372364
    2. '(length' → logprob: -6.127214431762695
    3. ' length' → logprob: -10.627214431762695
    4. '(' → logprob: -13.502214431762695
    5. '[length' → logprob: -14.127214431762695
    6. '-length' → logprob: -14.252214431762695
    7. 'leng' → logprob: -14.252214431762695
    8. 'len' → logprob: -14.752214431762695
    9. '2' → logprob: -14.877214431762695
    10. ' (' → logprob: -15.502214431762695

Token 107: '+' (ID: 10)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0006688326830044389
    2. ')//' → logprob: -7.375669002532959
    3. ' //' → logprob: -10.7506685256958
    4. '2' → logprob: -11.5006685256958
    5. '://' → logprob: -12.7506685256958
    6. ')' → logprob: -13.1256685256958
    7. '```' → logprob: -13.8756685256958
    8. '']//' → logprob: -14.1256685256958
    9. '[' → logprob: -14.3756685256958
    10. '   ' → logprob: -14.3756685256958

Token 108: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06326757371425629
    2. '2' → logprob: -2.813267469406128
    3. '//' → logprob: -6.688267707824707
    4. ' ' → logprob: -9.938267707824707
    5. ' //' → logprob: -13.438267707824707
    6. '```' → logprob: -13.438267707824707
    7. ')//' → logprob: -13.813267707824707
    8. '3' → logprob: -14.688267707824707
    9. ')' → logprob: -15.063267707824707
    10. '(' → logprob: -15.563267707824707

Token 109: ')//' (ID: 60375)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0014777252217754722
    2. ')//' → logprob: -6.6264777183532715
    3. ' //' → logprob: -9.00147819519043
    4. '://' → logprob: -11.25147819519043
    5. ')' → logprob: -12.37647819519043
    6. '2' → logprob: -12.75147819519043
    7. '']//' → logprob: -13.25147819519043
    8. '-' → logprob: -13.37647819519043
    9. '//=' → logprob: -14.25147819519043
    10. '1' → logprob: -14.25147819519043

Token 110: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7372048862162046e-05
    2. ' ' → logprob: -10.625027656555176
    3. '1' → logprob: -13.875027656555176
    4. '3' → logprob: -14.250027656555176
    5. '/' → logprob: -14.625027656555176
    6. ')' → logprob: -15.125027656555176
    7. '```' → logprob: -15.125027656555176
    8. '//' → logprob: -15.875027656555176
    9. '   ' → logprob: -16.50002670288086
    10. '4' → logprob: -16.56252670288086

Token 111: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005569779314100742
    2. ':]' → logprob: -5.255569934844971
    3. ']))' → logprob: -8.505569458007812
    4. ' :' → logprob: -9.255569458007812
    5. ':)' → logprob: -11.005569458007812
    6. ']:' → logprob: -12.130569458007812
    7. '):' → logprob: -13.255569458007812
    8. '+' → logprob: -13.255569458007812
    9. ' :]' → logprob: -13.380569458007812
    10. ':].' → logprob: -13.380569458007812

Token 112: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.10217174887657166
    2. 'length' → logprob: -2.3521716594696045
    3. ']' → logprob: -6.977171897888184
    4. ' length' → logprob: -7.727171897888184
    5. ' ]' → logprob: -8.102171897888184
    6. ']))
' → logprob: -9.477171897888184
    7. '])' → logprob: -9.727171897888184
    8. ']))

' → logprob: -10.102171897888184
    9. 'len' → logprob: -10.352171897888184
    10. '])))' → logprob: -10.852171897888184

Token 113: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6361382007598877
    2. '<|end|>' → logprob: -1.1361382007598877
    3. '       ' → logprob: -2.7611382007598877
    4. ')' → logprob: -3.1361382007598877
    5. '   ' → logprob: -3.7611382007598877
    6. '):' → logprob: -4.636137962341309
    7. ' ' → logprob: -5.386137962341309
    8. ' and' → logprob: -6.886137962341309
    9. ' :' → logprob: -7.136137962341309
    10. '  ' → logprob: -7.261137962341309

Token 114: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004776857327669859
    2. ' if' → logprob: -5.879776954650879
    3. '   ' → logprob: -6.879776954650879
    4. 'if' → logprob: -7.629776954650879
    5. '<|end|>' → logprob: -8.754776954650879
    6. ' ' → logprob: -8.879776954650879
    7. ' ' → logprob: -10.129776954650879
    8. '           ' → logprob: -10.129776954650879
    9. '\' → logprob: -11.379776954650879
    10. '        
' → logprob: -11.754776954650879

Token 115: ' une' (ID: 2463)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.43127185106277466
    2. 'if' → logprob: -1.0562717914581299
    3. '       ' → logprob: -6.556272029876709
    4. '        ' → logprob: -8.30627155303955
    5. '   ' → logprob: -8.43127155303955
    6. '    ' → logprob: -9.05627155303955
    7. ' ' → logprob: -9.43127155303955
    8. ' right' → logprob: -9.43127155303955
    9. '#' → logprob: -9.80627155303955
    10. 'print' → logprob: -9.93127155303955

Token 116: ' autre' (ID: 20278)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16686372458934784
    2. ' if' → logprob: -3.1668636798858643
    3. 'space' → logprob: -3.6668636798858643
    4. '   ' → logprob: -4.291863918304443
    5. 's' → logprob: -4.541863918304443
    6. 'f' → logprob: -4.791863918304443
    7. ' ' → logprob: -4.916863918304443
    8. '<|end|>' → logprob: -5.291863918304443
    9. '#' → logprob: -5.416863918304443
    10. '    ' → logprob: -5.541863918304443

Token 117: ' vér' (ID: 42524)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.48022714257240295
    2. ' if' → logprob: -0.9802271127700806
    3. ' condition' → logprob: -6.230226993560791
    4. '   ' → logprob: -6.605226993560791
    5. 'condition' → logprob: -6.855226993560791
    6. '<|end|>' → logprob: -7.480226993560791
    7. ' ' → logprob: -7.855226993560791
    8. '    ' → logprob: -8.35522747039795
    9. ' line' → logprob: -9.35522747039795
    10. ' check' → logprob: -9.73022747039795

Token 118: 'ification' (ID: 3166)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.027202226221561432
    2. 'f' → logprob: -4.777202129364014
    3. 'ification' → logprob: -4.902202129364014
    4. '   ' → logprob: -5.777202129364014
    5. ' if' → logprob: -5.902202129364014
    6. 'ication' → logprob: -6.152202129364014
    7. '       ' → logprob: -7.402202129364014
    8. ' ' → logprob: -8.152202606201172
    9. 'ion' → logprob: -8.152202606201172
    10. '  ' → logprob: -8.277202606201172

Token 119: ' bizarre' (ID: 61150)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47291427850723267
    2. '   ' → logprob: -1.222914218902588
    3. '<|end|>' → logprob: -3.097914218902588
    4. ':' → logprob: -4.722914218902588
    5. ' if' → logprob: -4.847914218902588
    6. '        
' → logprob: -5.847914218902588
    7. ' ' → logprob: -6.222914218902588
    8. '           ' → logprob: -6.472914218902588
    9. '  
' → logprob: -6.472914218902588
    10. '```' → logprob: -6.722914218902588

Token 120: '...
' (ID: 4908)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31303560733795166
    2. '   ' → logprob: -2.063035488128662
    3. '<|end|>' → logprob: -2.563035488128662
    4. '       ' → logprob: -3.063035488128662
    5. ' :' → logprob: -5.313035488128662
    6. ' if' → logprob: -5.813035488128662
    7. '\n' → logprob: -6.563035488128662
    8. ':
' → logprob: -6.813035488128662
    9. ' ' → logprob: -7.063035488128662
    10. ' and' → logprob: -7.313035488128662

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08447571098804474
    2. '<|end|>' → logprob: -2.7094757556915283
    3. '   ' → logprob: -5.334475517272949
    4. '        
' → logprob: -5.959475517272949
    5. ' ' → logprob: -6.709475517272949
    6. '\n' → logprob: -7.084475517272949
    7. ' 
' → logprob: -7.209475517272949
    8. '\' → logprob: -7.334475517272949
    9. '  
' → logprob: -7.584475517272949
    10. '
' → logprob: -7.584475517272949

Token 122: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1567244827747345
    2. ' if' → logprob: -2.031724452972412
    3. '       ' → logprob: -4.281724452972412
    4. '   ' → logprob: -9.15672492980957
    5. ')' → logprob: -12.40672492980957
    6. ' ' → logprob: -12.53172492980957
    7. '	if' → logprob: -13.03172492980957
    8. 'If' → logprob: -13.03172492980957
    9. '```' → logprob: -13.03172492980957
    10. '<|end|>' → logprob: -13.03172492980957

Token 123: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.1273045539855957
    2. 'str' → logprob: -2.1273045539855957
    3. ' right' → logprob: -8.252304077148438
    4. 'right' → logprob: -9.627304077148438
    5. '   ' → logprob: -10.752304077148438
    6. '    ' → logprob: -11.252304077148438
    7. '       ' → logprob: -12.377304077148438
    8. ' ' → logprob: -12.627304077148438
    9. '	str' → logprob: -13.252304077148438
    10. '_str' → logprob: -13.377304077148438

Token 124: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0008068907191045582
    2. '_[' → logprob: -7.12580680847168
    3. '_##' → logprob: -14.37580680847168
    4. '_^(' → logprob: -14.37580680847168
    5. '_<' → logprob: -14.75080680847168
    6. '_]' → logprob: -15.37580680847168
    7. '_)' → logprob: -15.50080680847168
    8. '_

' → logprob: -16.50080680847168
    9. '[' → logprob: -16.62580680847168
    10. '__' → logprob: -16.87580680847168

Token 125: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.009580538608133793
    2. '[length' → logprob: -4.759580612182617
    3. '[' → logprob: -8.009580612182617
    4. '==' → logprob: -8.009580612182617
    5. '[:' → logprob: -9.259580612182617
    6. '[((' → logprob: -9.509580612182617
    7. '==(' → logprob: -10.634580612182617
    8. '[right' → logprob: -10.759580612182617
    9. '[-' → logprob: -10.759580612182617
    10. '[len' → logprob: -11.259580612182617

Token 126: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.02978694438934326
    2. '(length' → logprob: -3.529787063598633
    3. '[length' → logprob: -11.154787063598633
    4. ' length' → logprob: -11.654787063598633
    5. 'len' → logprob: -12.154787063598633
    6. 'leng' → logprob: -12.529787063598633
    7. ' (' → logprob: -13.279787063598633
    8. ',length' → logprob: -14.154787063598633
    9. '-length' → logprob: -14.404787063598633
    10. 'right' → logprob: -15.154787063598633

Token 127: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.013002339750528336
    2. '//' → logprob: -4.388002395629883
    3. ' +' → logprob: -8.388002395629883
    4. ')//' → logprob: -9.013002395629883
    5. '-' → logprob: -9.138002395629883
    6. ')' → logprob: -11.888002395629883
    7. '   ' → logprob: -11.888002395629883
    8. '://' → logprob: -12.138002395629883
    9. '```' → logprob: -12.638002395629883
    10. ' //' → logprob: -12.638002395629883

Token 128: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001093841710826382
    2. '1' → logprob: -9.250109672546387
    3. ' ' → logprob: -12.250109672546387
    4. '```' → logprob: -13.000109672546387
    5. '0' → logprob: -13.250109672546387
    6. '//' → logprob: -13.375109672546387
    7. '   ' → logprob: -14.500109672546387
    8. '3' → logprob: -14.500109672546387
    9. '

' → logprob: -14.750109672546387
    10. '(' → logprob: -14.875109672546387

Token 129: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.0012080918531864882
    2. '//' → logprob: -6.751208305358887
    3. ')' → logprob: -10.376208305358887
    4. ' )' → logprob: -12.501208305358887
    5. '}//' → logprob: -13.751208305358887
    6. '   ' → logprob: -14.376208305358887
    7. '://' → logprob: -14.876208305358887
    8. '>//' → logprob: -15.001208305358887
    9. '){//' → logprob: -15.501208305358887
    10. ' ' → logprob: -16.12620735168457

Token 130: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3544423381972592e-05
    2. ' ' → logprob: -11.62501335144043
    3. '```' → logprob: -13.50001335144043
    4. '   ' → logprob: -14.62501335144043
    5. '/' → logprob: -14.87501335144043
    6. 'length' → logprob: -14.93751335144043
    7. '(' → logprob: -15.06251335144043
    8. '//' → logprob: -15.06251335144043
    9. '-' → logprob: -15.50001335144043
    10. '1' → logprob: -15.68751335144043

Token 131: ':]' (ID: 67377)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3500756323337555
    2. ':]' → logprob: -1.475075602531433
    3. ']==' → logprob: -2.7250757217407227
    4. ':' → logprob: -7.475075721740723
    5. '==' → logprob: -8.475075721740723
    6. ' ]' → logprob: -8.850075721740723
    7. ' :]' → logprob: -9.225075721740723
    8. ']!=' → logprob: -11.725075721740723
    9. ']=='' → logprob: -12.100075721740723
    10. '']==' → logprob: -12.975075721740723

Token 132: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12694554030895233
    2. '==' → logprob: -2.1269454956054688
    3. ')' → logprob: -11.876945495605469
    4. '=' → logprob: -12.501945495605469
    5. ')==' → logprob: -12.501945495605469
    6. ']==' → logprob: -14.126945495605469
    7. '[::-' → logprob: -14.126945495605469
    8. ' =' → logprob: -14.876945495605469
    9. ' ' → logprob: -15.126945495605469
    10. ' ' → logprob: -15.251945495605469

Token 133: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0019286326132714748
    2. ' right' → logprob: -6.251928806304932
    3. '[right' → logprob: -19.251928329467773
    4. '	right' → logprob: -19.501928329467773
    5. ' ' → logprob: -21.001928329467773
    6. '(right' → logprob: -21.376928329467773
    7. 'r' → logprob: -21.501928329467773
    8. '   ' → logprob: -21.876928329467773
    9. 'rig' → logprob: -22.126928329467773
    10. '.right' → logprob: -22.626928329467773

Token 134: '_rev' (ID: 99394)
  Prédit: '_rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rev' → logprob: -2.816093228830141e-06
    2. 'rev' → logprob: -13.00000286102295
    3. '_ref' → logprob: -16.375001907348633
    4. '_rep' → logprob: -16.750001907348633
    5. 'right' → logprob: -16.875001907348633
    6. '_right' → logprob: -17.000001907348633
    7. '_' → logprob: -17.625001907348633
    8. '_re' → logprob: -17.750001907348633
    9. 'r' → logprob: -17.875001907348633
    10. '​' → logprob: -17.875001907348633

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018816311785485595
    2. ':
' → logprob: -8.625187873840332
    3. '):' → logprob: -11.875187873840332
    4. ' :' → logprob: -14.750187873840332
    5. ':**' → logprob: -15.000187873840332
    6. ':

' → logprob: -15.250187873840332
    7. ')' → logprob: -16.12518882751465
    8. ':return' → logprob: -16.37518882751465
    9. '<|end|>' → logprob: -16.62518882751465
    10. '>' → logprob: -17.00018882751465

Token 136: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05336766317486763
    2. ':' → logprob: -3.0533676147460938
    3. 'print' → logprob: -5.553367614746094
    4. ' print' → logprob: -8.053367614746094
    5. ':
' → logprob: -8.178367614746094
    6. '       ' → logprob: -9.553367614746094
    7. '):' → logprob: -10.553367614746094
    8. '               ' → logprob: -10.553367614746094
    9. '```' → logprob: -10.553367614746094
    10. '<|end|>' → logprob: -10.928367614746094

Token 137: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04883625730872154
    2. ' print' → logprob: -3.0488362312316895
    3. '   ' → logprob: -8.673836708068848
    4. ' sys' → logprob: -10.423836708068848
    5. 'sys' → logprob: -10.423836708068848
    6. '           ' → logprob: -11.298836708068848
    7. '       ' → logprob: -12.923836708068848
    8. '	print' → logprob: -13.923836708068848
    9. '
' → logprob: -14.173836708068848
    10. 'pass' → logprob: -14.798836708068848

Token 138: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.05786321312189102
    2. '(' → logprob: -2.932863235473633
    3. '('' → logprob: -6.182863235473633
    4. '(str' → logprob: -7.432863235473633
    5. '(":' → logprob: -9.557863235473633
    6. '(True' → logprob: -9.932863235473633
    7. '(len' → logprob: -10.557863235473633
    8. '(-' → logprob: -10.682863235473633
    9. '("("' → logprob: -10.682863235473633
    10. '("")' → logprob: -10.932863235473633

Token 139: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.8044546246528625
    2. 'YES' → logprob: -1.3044545650482178
    3. 'OK' → logprob: -2.0544545650482178
    4. 'Oui' → logprob: -2.9294545650482178
    5. 'O' → logprob: -4.179454803466797
    6. 'Palindrome' → logprob: -4.304454803466797
    7. 'a' → logprob: -4.929454803466797
    8. '"' → logprob: -4.929454803466797
    9. 'True' → logprob: -5.054454803466797
    10. 'true' → logprob: -5.554454803466797

Token 140: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.007225131615996361
    2. '")
' → logprob: -5.007225036621094
    3. '!")' → logprob: -7.632225036621094
    4. ')' → logprob: -11.507225036621094
    5. '!")
' → logprob: -12.132225036621094
    6. ')")' → logprob: -12.632225036621094
    7. '")
' → logprob: -12.757225036621094
    8. '"' → logprob: -13.257225036621094
    9. '")

' → logprob: -14.882225036621094
    10. ' ")' → logprob: -15.007225036621094

Token 141: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0005075189401395619
    2. ' else' → logprob: -7.625507354736328
    3. '       ' → logprob: -11.250507354736328
    4. 'elif' → logprob: -12.875507354736328
    5. '```' → logprob: -14.000507354736328
    6. '<|end|>' → logprob: -14.125507354736328
    7. '   ' → logprob: -14.250507354736328
    8. ')' → logprob: -14.750507354736328
    9. '	else' → logprob: -14.875507354736328
    10. '
' → logprob: -16.125507354736328

Token 142: ' sys' (ID: 12228)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056705642491579056
    2. 'else' → logprob: -3.4317057132720947
    3. '           ' → logprob: -3.8067057132720947
    4. 'exit' → logprob: -8.681705474853516
    5. ' else' → logprob: -9.056705474853516
    6. '   ' → logprob: -9.056705474853516
    7. 'elif' → logprob: -9.681705474853516
    8. '
' → logprob: -10.431705474853516
    9. '<|end|>' → logprob: -10.931705474853516
    10. 'sys' (adapté à ' sys') → logprob: -11.056705474853516

Token 143: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.0007476831669919193
    2. '.' → logprob: -7.2507476806640625
    3. '.stdout' → logprob: -11.125747680664062
    4. 'exit' → logprob: -11.375747680664062
    5. '.ex' → logprob: -12.125747680664062
    6. ' exit' → logprob: -12.625747680664062
    7. '	exit' → logprob: -14.000747680664062
    8. '.Exit' → logprob: -14.375747680664062
    9. '.EXIT' → logprob: -15.000747680664062
    10. '_exit' → logprob: -15.125747680664062

Token 144: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759928822517395
    2. '()' → logprob: -0.8259928822517395
    3. '()(' → logprob: -10.450992584228516
    4. '()
' → logprob: -11.825992584228516
    5. '(
' → logprob: -11.950992584228516
    6. '0' → logprob: -12.325992584228516
    7. '(

' → logprob: -13.700992584228516
    8. '("("' → logprob: -14.325992584228516
    9. '()`' → logprob: -14.575992584228516
    10. '(()' → logprob: -14.575992584228516

Token 145: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ')' → logprob: -14.250000953674316
    3. ' ' → logprob: -14.750000953674316
    4. '1' → logprob: -18.750001907348633
    5. 'True' → logprob: -19.625001907348633
    6. '()' → logprob: -19.875001907348633
    7. '(' → logprob: -20.000001907348633
    8. '۰' → logprob: -20.125001907348633
    9. '٠' → logprob: -20.500001907348633
    10. '```' → logprob: -20.687501907348633

Token 146: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017067246371880174
    2. ')
' → logprob: -6.376706600189209
    3. '   ' → logprob: -13.751707077026367
    4. '       ' → logprob: -14.001707077026367
    5. '")' → logprob: -14.251707077026367
    6. ' )' → logprob: -14.376707077026367
    7. ')

' → logprob: -15.126707077026367
    8. '))' → logprob: -15.501707077026367
    9. '`)' → logprob: -16.001707077026367
    10. ')**' → logprob: -16.251707077026367

Token 147: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005426656571216881
    2. 'else' → logprob: -7.625542640686035
    3. '
' → logprob: -10.125542640686035
    4. '```' → logprob: -11.750542640686035
    5. '    
' → logprob: -13.000542640686035
    6. ' print' → logprob: -13.000542640686035
    7. '  
' → logprob: -14.375542640686035
    8. '   ' → logprob: -14.375542640686035
    9. '#print' → logprob: -15.875542640686035
    10. '            
' → logprob: -16.00054359436035

Token 148: ' pas' (ID: 2173)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006727214436978102
    2. 'No' → logprob: -5.00672721862793
    3. ' print' → logprob: -12.13172721862793
    4. 'Print' → logprob: -12.38172721862793
    5. 'else' → logprob: -13.75672721862793
    6. ')' → logprob: -15.38172721862793
    7. '
' → logprob: -15.50672721862793
    8. '```' → logprob: -15.63172721862793
    9. 'no' → logprob: -16.00672721862793
    10. '#print' → logprob: -16.13172721862793

Token 149: ' trouvé' (ID: 60081)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.641841820150148e-05
    2. ' print' → logprob: -10.87502670288086
    3. 'prin' → logprob: -13.62502670288086
    4. '#' → logprob: -13.75002670288086
    5. '   ' → logprob: -13.87502670288086
    6. 'else' → logprob: -14.12502670288086
    7. 'Print' → logprob: -14.37502670288086
    8. 'pr' → logprob: -14.87502670288086
    9. 'prit' → logprob: -14.87502670288086
    10. 'sys' → logprob: -15.12502670288086

Token 150: ' donc' (ID: 14206)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.339278580620885e-06
    2. ' print' → logprob: -13.625001907348633
    3. '
' → logprob: -14.625001907348633
    4. 'else' → logprob: -15.250001907348633
    5. 'Print' → logprob: -16.250001907348633
    6. '```' → logprob: -16.250001907348633
    7. '(print' → logprob: -16.875001907348633
    8. '#print' → logprob: -17.000001907348633
    9. ')' → logprob: -17.875001907348633
    10. '    
' → logprob: -18.125001907348633

Token 151: ' non' (ID: 2893)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.5
    3. 'Print' → logprob: -19.375
    4. '```' → logprob: -19.375
    5. 'prin' → logprob: -20.5
    6. '#print' → logprob: -20.875
    7. '	print' → logprob: -21.75
    8. 'prit' → logprob: -21.875
    9. '
' → logprob: -22.25
    10. 'pr' → logprob: -22.625

Token 152: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. ' print' → logprob: -15.000000953674316
    3. '```' → logprob: -15.875000953674316
    4. '
' → logprob: -16.5
    5. 'Print' → logprob: -16.875
    6. '#print' → logprob: -19.875
    7. '    
' → logprob: -19.875
    8. '	print' → logprob: -19.875
    9. '  
' → logprob: -20.25
    10. 'p' → logprob: -20.875

Token 153: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.625
    3. 'Print' → logprob: -17.0
    4. 'prin' → logprob: -17.5
    5. '```' → logprob: -18.0
    6. 'pr' → logprob: -18.625
    7. 'prit' → logprob: -19.75
    8. '
' → logprob: -20.75
    9. '#print' → logprob: -21.125
    10. 'pri' → logprob: -21.25

Token 154: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0004317420825827867
    2. '(' → logprob: -7.750431537628174
    3. '('' → logprob: -15.000432014465332
    4. '("("' → logprob: -15.375432014465332
    5. '("")' → logprob: -16.125431060791016
    6. '(
' → logprob: -17.000431060791016
    7. ' ("' → logprob: -17.000431060791016
    8. '("(' → logprob: -17.750431060791016
    9. '"' → logprob: -17.875431060791016
    10. '()' → logprob: -18.375431060791016

Token 155: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -5.5577775128767826e-06
    2. '"No' → logprob: -12.250005722045898
    3. 'NO' → logprob: -14.125005722045898
    4. ' No' → logprob: -17.6250057220459
    5. 'Yes' → logprob: -17.7500057220459
    6. '"' → logprob: -18.6250057220459
    7. '(No' → logprob: -19.2500057220459
    8. '“No' → logprob: -19.6250057220459
    9. '.No' → logprob: -19.6250057220459
    10. '_No' → logprob: -19.8750057220459

Token 156: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -6.670925358776003e-05
    2. ')' → logprob: -9.750066757202148
    3. ')")' → logprob: -11.750066757202148
    4. '")
' → logprob: -15.625066757202148
    5. '"' → logprob: -15.875066757202148
    6. '')' → logprob: -17.50006675720215
    7. '!")' → logprob: -18.12506675720215
    8. ' ")' → logprob: -18.25006675720215
    9. '}")' → logprob: -18.50006675720215
    10. '"))' → logprob: -18.75006675720215


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 154
Tokens correctement prédits (1ère position, stricte): 65
Tokens correctement prédits (1ère position, avec adaptation): 67
Tokens correctement prédits (top 10): 104
Précision stricte (1ère position): 42.21%
Précision adaptée (1ère position): 43.51%
Précision (top 10): 67.53%
================================================================================
