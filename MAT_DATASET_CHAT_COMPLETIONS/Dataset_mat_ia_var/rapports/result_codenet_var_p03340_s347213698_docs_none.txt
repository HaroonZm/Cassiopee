================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n=int(input())
a=list(map(int,input().split()))
ans=n
s=a[0]
r=0
for l in range(n-1):
    while r<n-1 and not(s&a[r+1]):
        s^=a[r+1]
        r+=1
    ans+=r-l
    s^=a[l]
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2955889403820038
    2. '(' → logprob: -1.4205889701843262
    3. '())' → logprob: -5.295588970184326
    4. '()' → logprob: -5.420588970184326
    5. '```' → logprob: -6.170588970184326
    6. '<|end|>' → logprob: -7.295588970184326
    7. '(
' → logprob: -7.795588970184326
    8. '")' → logprob: -7.920588970184326
    9. '`)' → logprob: -8.545588493347168
    10. '')' → logprob: -8.670588493347168

Token 4: 'a' (ID: 64)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.5210232734680176
    2. '+' → logprob: -1.5210232734680176
    3. '#' → logprob: -2.0210232734680176
    4. ')' → logprob: -2.1460232734680176
    5. ' ' → logprob: -2.3960232734680176
    6. ''' → logprob: -2.7710232734680176
    7. 'i' → logprob: -3.0210232734680176
    8. 's' → logprob: -3.8960232734680176
    9. 'a' → logprob: -4.521023273468018
    10. '\n' → logprob: -4.521023273468018

Token 5: '=list' (ID: 93413)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0034089400433003902
    2. '+' → logprob: -5.878408908843994
    3. '[a' → logprob: -8.628409385681152
    4. '=' → logprob: -8.878409385681152
    5. '\[' → logprob: -9.253409385681152
    6. '.' → logprob: -9.253409385681152
    7. 'a' → logprob: -10.628409385681152
    8. '[i' → logprob: -11.753409385681152
    9. '[:]' → logprob: -11.753409385681152
    10. '[]' → logprob: -12.003409385681152

Token 6: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0034047786612063646
    2. '(a' → logprob: -5.75340461730957
    3. '(range' → logprob: -8.75340461730957
    4. '(input' → logprob: -11.25340461730957
    5. '(
' → logprob: -11.37840461730957
    6. 'a' → logprob: -11.75340461730957
    7. '((' → logprob: -12.75340461730957
    8. '[' → logprob: -12.75340461730957
    9. '(

' → logprob: -12.87840461730957
    10. '()' → logprob: -13.00340461730957

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10324227809906006
    2. '(int' → logprob: -2.9782423973083496
    3. '(lambda' → logprob: -3.4782423973083496
    4. '(str' → logprob: -4.85324239730835
    5. ')' → logprob: -5.60324239730835
    6. '(input' → logprob: -6.47824239730835
    7. '<|end|>' → logprob: -6.72824239730835
    8. '(eval' → logprob: -7.72824239730835
    9. '(range' → logprob: -8.228241920471191
    10. '```' → logprob: -9.228241920471191

Token 8: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.05234016478061676
    2. '(' → logprob: -3.302340269088745
    3. ')' → logprob: -4.552340030670166
    4. '))' → logprob: -6.302340030670166
    5. ',input' → logprob: -8.177340507507324
    6. '<|end|>' → logprob: -8.302340507507324
    7. '(eval' → logprob: -8.677340507507324
    8. '(user' → logprob: -9.177340507507324
    9. '[input' → logprob: -9.177340507507324
    10. '=input' → logprob: -9.427340507507324

Token 9: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2840815782546997
    2. '()' → logprob: -1.6590815782546997
    3. '()))' → logprob: -3.15908145904541
    4. '().' → logprob: -4.78408145904541
    5. ')' → logprob: -6.28408145904541
    6. '()));' → logprob: -6.90908145904541
    7. '()>' → logprob: -7.03408145904541
    8. '(' → logprob: -7.53408145904541
    9. '());' → logprob: -8.15908145904541
    10. '()-' → logprob: -8.53408145904541

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.893480243277736e-05
    2. 'strip' → logprob: -10.375039100646973
    3. ' split' → logprob: -12.125039100646973
    4. 'rstrip' → logprob: -13.250039100646973
    5. '(split' → logprob: -15.125039100646973
    6. 'spl' → logprob: -16.000038146972656
    7. ')' → logprob: -17.625038146972656
    8. 'replace' → logprob: -20.000038146972656
    9. 'plit' → logprob: -20.125038146972656
    10. '.split' → logprob: -20.125038146972656

Token 11: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.43114781379699707
    2. '()))' → logprob: -1.806147813796997
    3. ')' → logprob: -1.931147813796997
    4. '())' → logprob: -3.806147813796997
    5. '(' → logprob: -4.181147575378418
    6. ')))' → logprob: -6.306147575378418
    7. '()' → logprob: -7.056147575378418
    8. '('' → logprob: -8.431147575378418
    9. '())))' → logprob: -8.681147575378418
    10. ''))' → logprob: -9.431147575378418

Token 12: 'ans' (ID: 616)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5049104690551758
    2. 'c' → logprob: -1.7549104690551758
    3. 'a' → logprob: -2.379910469055176
    4. 'for' → logprob: -2.754910469055176
    5. 'b' → logprob: -3.504910469055176
    6. 'm' → logprob: -4.379910469055176
    7. 'count' → logprob: -5.254910469055176
    8. 'd' → logprob: -5.629910469055176
    9. 'sum' → logprob: -5.754910469055176
    10. 'x' → logprob: -6.004910469055176

Token 13: '=n' (ID: 47985)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29099562764167786
    2. '[' → logprob: -1.6659955978393555
    3. '.' → logprob: -3.4159955978393555
    4. '+' → logprob: -4.4159955978393555
    5. '+=' → logprob: -5.1659955978393555
    6. '_' → logprob: -5.4159955978393555
    7. '.append' → logprob: -5.5409955978393555
    8. ' =' → logprob: -6.1659955978393555
    9. '[:]' → logprob: -7.0409955978393555
    10. '=[]' → logprob: -7.9159955978393555

Token 14: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.983091413974762
    2. '*' → logprob: -1.6080913543701172
    3. '-' → logprob: -1.7330913543701172
    4. ' ' → logprob: -2.358091354370117
    5. '<|end|>' → logprob: -2.608091354370117
    6. ')' → logprob: -3.983091354370117
    7. ' for' → logprob: -3.983091354370117
    8. '+' → logprob: -4.233091354370117
    9. '%' → logprob: -5.233091354370117
    10. '_' → logprob: -5.483091354370117

Token 15: 's' (ID: 82)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01687747612595558
    2. ' for' → logprob: -4.2668776512146
    3. '-' → logprob: -6.8918776512146
    4. ' ' → logprob: -7.2668776512146
    5. ')' → logprob: -8.266877174377441
    6. '<|end|>' → logprob: -8.641877174377441
    7. '```' → logprob: -8.641877174377441
    8. '_' → logprob: -9.141877174377441
    9. '\n' → logprob: -9.391877174377441
    10. ' 
' → logprob: -10.766877174377441

Token 16: '=a' (ID: 53088)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7102632522583008
    2. 'et' → logprob: -0.8352632522583008
    3. 'um' → logprob: -3.710263252258301
    4. 'u' → logprob: -4.210263252258301
    5. '-' → logprob: -4.710263252258301
    6. ' =' → logprob: -4.710263252258301
    7. '-=' → logprob: -4.835263252258301
    8. '=set' → logprob: -5.585263252258301
    9. 'e' → logprob: -6.710263252258301
    10. '_' → logprob: -6.835263252258301

Token 17: '[' (ID: 58)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.14400304853916168
    2. '[' → logprob: -2.89400315284729
    3. '[::-' → logprob: -3.01900315284729
    4. '.copy' → logprob: -4.644002914428711
    5. '<|end|>' → logprob: -5.144002914428711
    6. '[:' → logprob: -5.269002914428711
    7. '.' → logprob: -5.394002914428711
    8. '.sort' → logprob: -6.019002914428711
    9. '[:-' → logprob: -7.394002914428711
    10. '+' → logprob: -7.519002914428711

Token 18: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00125570734962821
    2. '-' → logprob: -7.001255512237549
    3. 'i' → logprob: -8.751255989074707
    4. ' ' → logprob: -8.876255989074707
    5. '1' → logprob: -10.376255989074707
    6. 'n' → logprob: -12.251255989074707
    7. ' -' → logprob: -13.001255989074707
    8. 'ans' → logprob: -13.001255989074707
    9. ':' → logprob: -13.376255989074707
    10. ' i' → logprob: -14.376255989074707

Token 19: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.45800262689590454
    2. ']+' → logprob: -1.2080025672912598
    3. '])' → logprob: -3.7080025672912598
    4. '+' → logprob: -3.9580025672912598
    5. ']^' → logprob: -4.95800256729126
    6. ':' → logprob: -5.08300256729126
    7. '-' → logprob: -5.45800256729126
    8. ']==' → logprob: -6.20800256729126
    9. ']-' → logprob: -6.58300256729126
    10. ')' → logprob: -6.95800256729126

Token 20: 'r' (ID: 81)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14232924580574036
    2. '-' → logprob: -2.517329216003418
    3. 'for' → logprob: -3.392329216003418
    4. '=' → logprob: -5.517329216003418
    5. ' for' → logprob: -5.517329216003418
    6. '>' → logprob: -5.517329216003418
    7. ' ' → logprob: -6.392329216003418
    8. '*' → logprob: -7.392329216003418
    9. 'i' → logprob: -7.392329216003418
    10. '<|end|>' → logprob: -8.017329216003418

Token 21: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03621616214513779
    2. ' =' → logprob: -3.6612162590026855
    3. 'a' → logprob: -6.5362162590026855
    4. '=a' → logprob: -6.6612162590026855
    5. '=i' → logprob: -6.7862162590026855
    6. ' ' → logprob: -7.1612162590026855
    7. 'e' → logprob: -7.5362162590026855
    8. '=s' → logprob: -7.6612162590026855
    9. 'ight' → logprob: -7.7862162590026855
    10. 'i' → logprob: -7.7862162590026855

Token 22: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12407403439283371
    2. '1' → logprob: -2.7490739822387695
    3. 's' → logprob: -3.6240739822387695
    4. 'a' → logprob: -3.7490739822387695
    5. 'n' → logprob: -6.2490739822387695
    6. '-' → logprob: -8.24907398223877
    7. ' ' → logprob: -9.12407398223877
    8. 'ans' → logprob: -9.62407398223877
    9. '2' → logprob: -10.12407398223877
    10. '[' → logprob: -11.37407398223877

Token 23: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8139694929122925
    2. ' ' → logprob: -1.0639694929122925
    3. '+' → logprob: -2.188969612121582
    4. 'for' → logprob: -3.188969612121582
    5. '<|end|>' → logprob: -3.313969612121582
    6. ' while' → logprob: -5.438969612121582
    7. ',' → logprob: -5.563969612121582
    8. ')' → logprob: -5.688969612121582
    9. ';' → logprob: -6.063969612121582
    10. ' ,' → logprob: -6.563969612121582

Token 24: 'for' (ID: 1938)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3701213598251343
    2. '<|end|>' → logprob: -1.7451213598251343
    3. 'for' → logprob: -2.620121479034424
    4. ' ' → logprob: -3.370121479034424
    5. '+' → logprob: -3.745121479034424
    6. ')' → logprob: -7.245121479034424
    7. '<|end|>' → logprob: -7.620121479034424
    8. ' )' → logprob: -8.120121002197266
    9. '>' → logprob: -8.120121002197266
    10. ',' → logprob: -8.370121002197266

Token 25: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39023569226264954
    2. ' i' → logprob: -1.1402356624603271
    3. ' r' → logprob: -6.390235900878906
    4. ' _' → logprob: -7.265235900878906
    5. 'i' → logprob: -7.515235900878906
    6. '_' → logprob: -8.015235900878906
    7. '  ' → logprob: -10.140235900878906
    8. ' in' → logprob: -10.390235900878906
    9. 'r' → logprob: -11.140235900878906
    10. ' range' → logprob: -12.015235900878906

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043212246149778366
    2. 'in' → logprob: -3.1682121753692627
    3. ' ' → logprob: -8.543211936950684
    4. ',' → logprob: -12.293211936950684
    5. '+' → logprob: -12.543211936950684
    6. ',in' → logprob: -12.668211936950684
    7. '	in' → logprob: -12.668211936950684
    8. 'range' → logprob: -14.168211936950684
    9. ' ,' → logprob: -14.293211936950684
    10. '  ' → logprob: -14.918211936950684

Token 27: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6327477097511292
    2. 'range' → logprob: -0.7577477097511292
    3. '0' → logprob: -9.632747650146484
    4. ' ' → logprob: -9.632747650146484
    5. 'in' → logprob: -12.757747650146484
    6. ' in' → logprob: -12.882747650146484
    7. '	range' → logprob: -12.882747650146484
    8. '(range' → logprob: -13.132747650146484
    9. ' r' → logprob: -13.632747650146484
    10. ')' → logprob: -13.882747650146484

Token 28: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10128471255302429
    2. '(' → logprob: -2.3512847423553467
    3. ' (' → logprob: -7.226284503936768
    4. '(len' → logprob: -8.601284980773926
    5. '(s' → logprob: -9.226284980773926
    6. ' n' → logprob: -10.226284980773926
    7. 'n' → logprob: -11.476284980773926
    8. '(r' → logprob: -11.476284980773926
    9. ' ' → logprob: -11.976284980773926
    10. '(a' → logprob: -13.226284980773926

Token 29: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07610578835010529
    2. ' ):' → logprob: -3.201105833053589
    3. ')' → logprob: -3.701105833053589
    4. ',' → logprob: -5.57610559463501
    5. ':' → logprob: -6.32610559463501
    6. '+' → logprob: -6.82610559463501
    7. ' ' → logprob: -7.45110559463501
    8. ' )' → logprob: -8.576106071472168
    9. ',r' → logprob: -8.701106071472168
    10. '):
' → logprob: -9.201106071472168

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004384174826554954
    2. ' ' → logprob: -7.750438213348389
    3. '2' → logprob: -12.500438690185547
    4. '-' → logprob: -12.500438690185547
    5. '１' → logprob: -16.625438690185547
    6. '```' → logprob: -16.625438690185547
    7. '   ' → logprob: -16.812938690185547
    8. ' -' → logprob: -16.875438690185547
    9. '  ' → logprob: -16.937938690185547
    10. '+' → logprob: -17.500438690185547

Token 31: '):
' (ID: 1883)
  Prédit: ' ):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ):' → logprob: -0.8677473068237305
    2. ',' → logprob: -1.1177473068237305
    3. '):' → logprob: -1.8677473068237305
    4. '+' → logprob: -2.9927473068237305
    5. ' ,' → logprob: -3.3677473068237305
    6. ')' → logprob: -5.1177473068237305
    7. ' )' → logprob: -5.4927473068237305
    8. ' +' → logprob: -6.6177473068237305
    9. ' ' → logprob: -7.2427473068237305
    10. ',r' → logprob: -7.3677473068237305

Token 32: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.35773226618766785
    2. ' ' → logprob: -1.4827322959899902
    3. '<|end|>' → logprob: -3.3577322959899902
    4. ' +' → logprob: -4.10773229598999
    5. '   ' → logprob: -5.10773229598999
    6. ' if' → logprob: -5.23273229598999
    7. ' r' → logprob: -5.35773229598999
    8. '    ' → logprob: -6.60773229598999
    9. ' 
' → logprob: -6.85773229598999
    10. ' s' → logprob: -7.10773229598999

Token 33: ' while' (ID: 2049)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.269805669784546
    2. ' r' → logprob: -1.769805669784546
    3. '<|end|>' → logprob: -1.769805669784546
    4. ' while' → logprob: -1.894805669784546
    5. ' if' → logprob: -2.144805669784546
    6. ' 
' → logprob: -3.019805669784546
    7. ' s' → logprob: -3.894805669784546
    8. '   ' → logprob: -4.269805908203125
    9. '    ' → logprob: -4.644805908203125
    10. 'r' → logprob: -5.394805908203125

Token 34: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8782399892807007
    2. ' r' → logprob: -0.8782399892807007
    3. ' s' → logprob: -2.1282401084899902
    4. 's' → logprob: -3.0032401084899902
    5. ' ' → logprob: -9.503239631652832
    6. '(r' → logprob: -9.878239631652832
    7. '(s' → logprob: -10.003239631652832
    8. '   ' → logprob: -10.503239631652832
    9. 'a' → logprob: -10.753239631652832
    10. ' a' → logprob: -11.128239631652832

Token 35: '<n' (ID: 33872)
  Prédit: '<n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<n' → logprob: -0.24656851589679718
    2. '+' → logprob: -1.6215685606002808
    3. '<' → logprob: -4.37156867980957
    4. '<len' → logprob: -5.37156867980957
    5. ' <' → logprob: -5.74656867980957
    6. ' +' → logprob: -7.99656867980957
    7. '+n' → logprob: -9.74656867980957
    8. '<size' → logprob: -10.62156867980957
    9. '<num' → logprob: -11.37156867980957
    10. '<s' → logprob: -11.99656867980957

Token 36: '-' (ID: 12)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3133354187011719
    2. 'and' → logprob: -1.3133354187011719
    3. ' ' → logprob: -9.813335418701172
    4. '   ' → logprob: -11.813335418701172
    5. '-' → logprob: -12.063335418701172
    6. '>' → logprob: -13.313335418701172
    7. '    ' → logprob: -14.063335418701172
    8. '	and' → logprob: -14.313335418701172
    9. '1' → logprob: -14.438335418701172
    10. '  ' → logprob: -14.813335418701172

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005986657342873514
    2. ' ' → logprob: -7.500598430633545
    3. '0' → logprob: -10.500598907470703
    4. 'r' → logprob: -12.250598907470703
    5. '-' → logprob: -12.625598907470703
    6. '<|end|>' → logprob: -13.000598907470703
    7. 'l' → logprob: -13.125598907470703
    8. '```' → logprob: -13.375598907470703
    9. '   ' → logprob: -13.750598907470703
    10. ')' → logprob: -14.250598907470703

Token 38: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1427866667509079
    2. 'and' → logprob: -2.017786741256714
    3. ' ' → logprob: -9.517786979675293
    4. '+' → logprob: -11.642786979675293
    5. '   ' → logprob: -12.142786979675293
    6. '    ' → logprob: -12.267786979675293
    7. '>' → logprob: -12.642786979675293
    8. '<|end|>' → logprob: -12.642786979675293
    9. '	and' → logprob: -13.017786979675293
    10. ' и' → logprob: -13.517786979675293

Token 39: ' not' (ID: 625)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8860882520675659
    2. 's' → logprob: -1.011088252067566
    3. 'a' → logprob: -1.886088252067566
    4. ' a' → logprob: -2.6360883712768555
    5. ' abs' → logprob: -8.386088371276855
    6. ' ' → logprob: -9.011088371276855
    7. 'abs' → logprob: -9.761088371276855
    8. '(a' → logprob: -9.886088371276855
    9. ' (' → logprob: -10.386088371276855
    10. '(s' → logprob: -10.636088371276855

Token 40: '(s' (ID: 1858)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.2061033248901367
    2. ' a' → logprob: -1.3311033248901367
    3. ' s' → logprob: -1.7061033248901367
    4. '(a' → logprob: -2.0811033248901367
    5. 'a' → logprob: -2.8311033248901367
    6. 's' → logprob: -3.5811033248901367
    7. '(s' → logprob: -3.9561033248901367
    8. '(' → logprob: -3.9561033248901367
    9. ' ' → logprob: -6.331103324890137
    10. ' any' → logprob: -6.456103324890137

Token 41: '&a' (ID: 72030)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.03454195335507393
    2. ' &' → logprob: -3.6595418453216553
    3. '%' → logprob: -5.159542083740234
    4. '&a' → logprob: -7.659542083740234
    5. '&s' → logprob: -7.784542083740234
    6. ' ' → logprob: -8.159542083740234
    7. '>' → logprob: -8.284542083740234
    8. ')' → logprob: -8.784542083740234
    9. '&r' → logprob: -8.909542083740234
    10. '%e' → logprob: -9.409542083740234

Token 42: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.01119176484644413
    2. '[' → logprob: -5.0111918449401855
    3. '[l' → logprob: -5.7611918449401855
    4. '[a' → logprob: -7.6361918449401855
    5. 'r' → logprob: -8.011191368103027
    6. '(r' → logprob: -9.261191368103027
    7. 'a' → logprob: -9.511191368103027
    8. ')' → logprob: -9.886191368103027
    9. '[n' → logprob: -10.261191368103027
    10. '   ' → logprob: -10.636191368103027

Token 43: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012427947483956814
    2. '])' → logprob: -4.762427806854248
    3. ']):' → logprob: -6.512427806854248
    4. ']' → logprob: -6.762427806854248
    5. '+r' → logprob: -8.012428283691406
    6. ']&' → logprob: -8.262428283691406
    7. ']==' → logprob: -8.887428283691406
    8. ' +' → logprob: -9.262428283691406
    9. ']):
' → logprob: -9.387428283691406
    10. '+]' → logprob: -10.387428283691406

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027591601014137268
    2. '+' → logprob: -4.277591705322266
    3. 'r' → logprob: -4.402591705322266
    4. ' ' → logprob: -7.902591705322266
    5. '])' → logprob: -8.527591705322266
    6. ']' → logprob: -8.902591705322266
    7. '0' → logprob: -9.527591705322266
    8. '+r' → logprob: -9.652591705322266
    9. ']==' → logprob: -9.902591705322266
    10. '   ' → logprob: -10.277591705322266

Token 45: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5531206727027893
    2. ')' → logprob: -1.0531206130981445
    3. ']):' → logprob: -3.5531206130981445
    4. ' ):' → logprob: -3.8031206130981445
    5. ')==' → logprob: -4.3031206130981445
    6. ' )' → logprob: -5.9281206130981445
    7. '==' → logprob: -6.1781206130981445
    8. ')):' → logprob: -6.4281206130981445
    9. '):
' → logprob: -7.3031206130981445
    10. '>):' → logprob: -7.5531206130981445

Token 46: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1270314455032349
    2. '+' → logprob: -1.7520314455032349
    3. '):' → logprob: -2.5020313262939453
    4. '   ' → logprob: -2.6270313262939453
    5. ' +=' → logprob: -2.7520313262939453
    6. ' :' → logprob: -2.7520313262939453
    7. ' &' → logprob: -2.8770313262939453
    8. ' ' → logprob: -3.2520313262939453
    9. '    ' → logprob: -4.377031326293945
    10. '=' → logprob: -4.377031326293945

Token 47: ' s' (ID: 265)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.6677291393280029
    2. 'r' → logprob: -0.7927291393280029
    3. ' ' → logprob: -4.292729377746582
    4. '    ' → logprob: -5.167729377746582
    5. '   ' → logprob: -5.292729377746582
    6. '       ' → logprob: -5.417729377746582
    7. '+' → logprob: -6.667729377746582
    8. '        ' → logprob: -7.042729377746582
    9. ' +=' → logprob: -7.167729377746582
    10. ' s' → logprob: -7.417729377746582

Token 48: '^' (ID: 61)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.004099058452993631
    2. ' &=' → logprob: -5.879098892211914
    3. '|' → logprob: -7.504098892211914
    4. '^' → logprob: -8.754098892211914
    5. '&s' → logprob: -9.004098892211914
    6. ' &' → logprob: -9.129098892211914
    7. '&r' → logprob: -9.504098892211914
    8. '=&' → logprob: -9.629098892211914
    9. '&i' → logprob: -10.254098892211914
    10. ' |=' → logprob: -10.504098892211914

Token 49: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000284696085145697
    2. '=r' → logprob: -8.250285148620605
    3. '=s' → logprob: -11.625285148620605
    4. '=`' → logprob: -12.625285148620605
    5. '=

' → logprob: -13.125285148620605
    6. '=b' → logprob: -13.750285148620605
    7. '=
' → logprob: -14.375285148620605
    8. '=int' → logprob: -14.500285148620605
    9. '=q' → logprob: -14.500285148620605
    10. '=}' → logprob: -14.500285148620605

Token 50: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00026181264547631145
    2. ' a' → logprob: -8.250262260437012
    3. '	a' → logprob: -15.500262260437012
    4. '>a' → logprob: -15.875262260437012
    5. '_a' → logprob: -16.500261306762695
    6. ' ' → logprob: -17.250261306762695
    7. '=a' → logprob: -17.250261306762695
    8. '<|end|>' → logprob: -17.375261306762695
    9. '&a' → logprob: -18.000261306762695
    10. '   ' → logprob: -18.000261306762695

Token 51: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00027706706896424294
    2. '[' → logprob: -8.250277519226074
    3. '[++' → logprob: -11.500277519226074
    4. 'r' → logprob: -12.875277519226074
    5. '   ' → logprob: -13.500277519226074
    6. ' [' → logprob: -14.375277519226074
    7. '[
' → logprob: -14.875277519226074
    8. '\[' → logprob: -15.875277519226074
    9. ' ' → logprob: -16.375276565551758
    10. '[a' → logprob: -16.750276565551758

Token 52: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.796184723294573e-06
    2. '+r' → logprob: -12.500005722045898
    3. '+
' → logprob: -14.125005722045898
    4. ' +' → logprob: -14.125005722045898
    5. '1' → logprob: -15.500005722045898
    6. '++' → logprob: -16.8750057220459
    7. '+</' → logprob: -17.3750057220459
    8. ''+' → logprob: -17.6250057220459
    9. '+]' → logprob: -17.7500057220459
    10. '+

' → logprob: -17.7500057220459

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.081584716506768e-05
    2. ' ' → logprob: -11.250020980834961
    3. '+' → logprob: -12.125020980834961
    4. '   ' → logprob: -13.500020980834961
    5. '2' → logprob: -14.500020980834961
    6. 'r' → logprob: -16.00002098083496
    7. '    ' → logprob: -17.12502098083496
    8. '[' → logprob: -17.43752098083496
    9. ' +' → logprob: -17.62502098083496
    10. '  ' → logprob: -17.68752098083496

Token 54: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04917746037244797
    2. ')' → logprob: -3.049177408218384
    3. ')
' → logprob: -7.799177646636963
    4. '   ' → logprob: -9.424177169799805
    5. 'r' → logprob: -10.174177169799805
    6. ' )
' → logprob: -10.299177169799805
    7. ')

' → logprob: -11.799177169799805
    8. '')
' → logprob: -12.799177169799805
    9. '       ' → logprob: -13.174177169799805
    10. '
' → logprob: -13.424177169799805

Token 55: '       ' (ID: 309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4075250029563904
    2. '       ' → logprob: -1.7825250625610352
    3. '   ' → logprob: -2.282525062561035
    4. ' r' → logprob: -3.657525062561035
    5. '+' → logprob: -4.907525062561035
    6. '<|end|>' → logprob: -5.032525062561035
    7. '++' → logprob: -5.157525062561035
    8. '	r' → logprob: -5.157525062561035
    9. '    ' → logprob: -6.282525062561035
    10. '
' → logprob: -6.407525062561035

Token 56: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.02650766260921955
    2. ' r' → logprob: -3.901507616043091
    3. '       ' → logprob: -5.15150785446167
    4. '   ' → logprob: -9.401507377624512
    5. '```' → logprob: -11.276507377624512
    6. '	r' → logprob: -11.401507377624512
    7. '           ' → logprob: -11.401507377624512
    8. '_r' → logprob: -11.651507377624512
    9. '
' → logprob: -11.901507377624512
    10. ' ' → logprob: -12.026507377624512

Token 57: '+=' (ID: 18287)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07892989367246628
    2. '+=' → logprob: -2.578929901123047
    3. ' +=' → logprob: -11.328929901123047
    4. '++' → logprob: -11.453929901123047
    5. '=' → logprob: -11.828929901123047
    6. '+='' → logprob: -12.203929901123047
    7. '+
' → logprob: -13.078929901123047
    8. '+)' → logprob: -13.953929901123047
    9. '+="' → logprob: -14.453929901123047
    10. ']+=' → logprob: -14.703929901123047

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.250017166137695
    4. '+' → logprob: -16.750017166137695
    5. '```' → logprob: -18.750017166137695
    6. '  ' → logprob: -19.000017166137695
    7. '<|end|>' → logprob: -19.125017166137695
    8. '１' → logprob: -19.625017166137695
    9. '       ' → logprob: -19.937517166137695
    10. '۱' → logprob: -20.437517166137695

Token 59: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7277323603630066
    2. '```' → logprob: -1.8527324199676514
    3. '<|end|>' → logprob: -2.3527324199676514
    4. ' else' → logprob: -2.7277324199676514
    5. 'r' → logprob: -2.8527324199676514
    6. 'else' → logprob: -3.1027324199676514
    7. ' 
' → logprob: -3.8527324199676514
    8. ' ' → logprob: -4.227732181549072
    9. 'print' → logprob: -4.727732181549072
    10. ')' → logprob: -4.977732181549072

Token 60: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' ans' (ID: 3345)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.43841752409935
    2. 'ans' (adapté à ' ans') → logprob: -1.1884175539016724
    3. 'if' → logprob: -3.438417434692383
    4. '   ' → logprob: -4.563417434692383
    5. ' ans' → logprob: -5.438417434692383
    6. ' if' → logprob: -7.063417434692383
    7. 'while' → logprob: -7.063417434692383
    8. ' s' → logprob: -7.188417434692383
    9. ' ' → logprob: -8.688417434692383
    10. '	ans' → logprob: -9.188417434692383

Token 62: '+=' (ID: 18287)
  Prédit: '=min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=min' → logprob: -0.26462534070014954
    2. '=' → logprob: -1.6396253108978271
    3. '=max' → logprob: -3.514625310897827
    4. ' =' → logprob: -4.889625549316406
    5. '-=' → logprob: -6.889625549316406
    6. '-' → logprob: -10.389625549316406
    7. '+=' → logprob: -11.014625549316406
    8. '>' → logprob: -11.014625549316406
    9. '=Math' → logprob: -11.014625549316406
    10. 'min' → logprob: -11.639625549316406

Token 63: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001025662524625659
    2. '(r' → logprob: -7.001025676727295
    3. ' r' → logprob: -9.126025199890137
    4. 'n' → logprob: -13.501025199890137
    5. '   ' → logprob: -13.501025199890137
    6. '1' → logprob: -14.251025199890137
    7. ' (' → logprob: -14.501025199890137
    8. '[r' → logprob: -14.501025199890137
    9. '(' → logprob: -15.126025199890137
    10. 'max' → logprob: -15.876025199890137

Token 64: '-l' (ID: 2887)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11648748070001602
    2. '-l' → logprob: -2.866487503051758
    3. ' -' → logprob: -2.991487503051758
    4. '<|end|>' → logprob: -7.616487503051758
    5. '−' → logprob: -7.741487503051758
    6. '-r' → logprob: -7.741487503051758
    7. '-n' → logprob: -7.991487503051758
    8. '-ra' → logprob: -8.866487503051758
    9. '-python' → logprob: -9.116487503051758
    10. '-output' → logprob: -9.866487503051758

Token 65: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0163749847561121
    2. ' print' → logprob: -4.3913750648498535
    3. '   ' → logprob: -6.5163750648498535
    4. '```' → logprob: -7.0163750648498535
    5. '<|end|>' → logprob: -7.5163750648498535
    6. '
' → logprob: -8.141374588012695
    7. '    
' → logprob: -8.891374588012695
    8. '\n' → logprob: -9.266374588012695
    9. 's' → logprob: -9.266374588012695
    10. 'n' → logprob: -9.766374588012695

Token 66: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2761320173740387
    2. '   ' → logprob: -2.026132106781006
    3. 'r' → logprob: -3.276132106781006
    4. 'print' → logprob: -3.651132106781006
    5. '```' → logprob: -3.776132106781006
    6. '<|end|>' → logprob: -4.651132106781006
    7. 'if' → logprob: -5.151132106781006
    8. '\' → logprob: -6.401132106781006
    9. '    
' → logprob: -7.026132106781006
    10. 'l' → logprob: -7.026132106781006

Token 67: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.004392609931528568
    2. 'if' → logprob: -5.629392623901367
    3. '```' → logprob: -7.629392623901367
    4. '   ' → logprob: -8.379392623901367
    5. ' s' → logprob: -10.129392623901367
    6. '``' → logprob: -10.629392623901367
    7. ' if' → logprob: -12.379392623901367
    8. ' ' → logprob: -13.754392623901367
    9. '#' → logprob: -13.879392623901367
    10. '`s' → logprob: -14.004392623901367

Token 68: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.005342974793165922
    2. '&' → logprob: -5.255342960357666
    3. ' ^=' → logprob: -9.380343437194824
    4. ''^' → logprob: -10.880343437194824
    5. '_^' → logprob: -12.630343437194824
    6. '=' → logprob: -14.130343437194824
    7. '>>' → logprob: -15.005343437194824
    8. '^^' → logprob: -15.380343437194824
    9. '-' → logprob: -15.630343437194824
    10. ' &=' → logprob: -15.630343437194824

Token 69: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5427858233451843
    2. '^' → logprob: -0.9177858233451843
    3. '_^' → logprob: -4.41778564453125
    4. ' ^=' → logprob: -5.29278564453125
    5. '=a' → logprob: -6.29278564453125
    6. '_=' → logprob: -8.04278564453125
    7. ''^' → logprob: -9.41778564453125
    8. 'a' → logprob: -9.79278564453125
    9. '-=' → logprob: -11.54278564453125
    10. '(a' → logprob: -11.66778564453125

Token 70: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.704273118884885e-07
    2. ' a' → logprob: -14.375000953674316
    3. '	a' → logprob: -19.0
    4. '   ' → logprob: -19.5
    5. '#a' → logprob: -20.25
    6. '```' → logprob: -20.625
    7. '[a' → logprob: -21.0
    8. ')a' → logprob: -21.5
    9. '&a' → logprob: -21.5
    10. '_a' → logprob: -21.75

Token 71: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -2.093505099765025e-05
    2. '[' → logprob: -11.500020980834961
    3. 'l' → logprob: -11.875020980834961
    4. '```' → logprob: -12.750020980834961
    5. '\[' → logprob: -15.500020980834961
    6. '	l' → logprob: -15.625020980834961
    7. '   ' → logprob: -16.25002098083496
    8. '[left' → logprob: -16.25002098083496
    9. '[r' → logprob: -16.75002098083496
    10. '[
' → logprob: -17.12502098083496

Token 72: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019209683523513377
    2. ')
' → logprob: -9.125191688537598
    3. ' )' → logprob: -10.375191688537598
    4. '```' → logprob: -10.875191688537598
    5. '<|end|>' → logprob: -12.125191688537598
    6. '`)' → logprob: -12.125191688537598
    7. ')

' → logprob: -12.250191688537598
    8. ']' → logprob: -12.500191688537598
    9. ')`' → logprob: -12.750191688537598
    10. '）' → logprob: -13.125191688537598

Token 73: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.062080174684524536
    2. '(' → logprob: -2.812080144882202
    3. '()' → logprob: -9.187080383300781
    4. ' (' → logprob: -13.062080383300781
    5. 'ans' → logprob: -13.187080383300781
    6. '(answer' → logprob: -13.187080383300781
    7. '(a' → logprob: -13.687080383300781
    8. '(len' → logprob: -14.062080383300781
    9. '(
' → logprob: -14.687080383300781
    10. '('' → logprob: -14.937080383300781

Token 75: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. '))' → logprob: -15.250000953674316
    3. ' )' → logprob: -15.375000953674316
    4. ')
' → logprob: -15.500000953674316
    5. ')`' → logprob: -15.625000953674316
    6. '`)' → logprob: -16.625001907348633
    7. '')' → logprob: -17.125001907348633
    8. '）' → logprob: -18.000001907348633
    9. ')**' → logprob: -18.125001907348633
    10. ')}' → logprob: -18.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 73
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 29
Tokens correctement prédits (top 10): 50
Précision stricte (1ère position): 36.99%
Précision adaptée (1ère position): 39.73%
Précision (top 10): 68.49%
================================================================================
