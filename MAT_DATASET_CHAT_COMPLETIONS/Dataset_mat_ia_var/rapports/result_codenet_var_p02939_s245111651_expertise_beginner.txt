================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s = input()
count = 1
i = 1
while i < len(s):
    if s[i] != s[i-1]:
        count = count + 1
        i = i + 1
    elif i < len(s) - 1 and s[i] == s[i-1]:
        count = count + 1
        i = i + 2
    else:
        break
print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0039759352803230286
    2. ''' → logprob: -6.753975868225098
    3. '()' → logprob: -7.128975868225098
    4. '('' → logprob: -7.128975868225098
    5. '`' → logprob: -7.253975868225098
    6. '"' → logprob: -8.878975868225098
    7. '```' → logprob: -8.878975868225098
    8. '("("' → logprob: -9.378975868225098
    9. '(
' → logprob: -9.753975868225098
    10. '(`' → logprob: -10.753975868225098

Token 4: 'count' (ID: 5420)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02072043903172016
    2. '.strip' → logprob: -4.520720481872559
    3. 'if' → logprob: -5.520720481872559
    4. '+' → logprob: -6.270720481872559
    5. '[' → logprob: -7.020720481872559
    6. 'print' → logprob: -7.645720481872559
    7. '.split' → logprob: -7.770720481872559
    8. '=' → logprob: -8.020720481872559
    9. '.lower' → logprob: -8.145720481872559
    10. ' if' → logprob: -8.520720481872559

Token 5: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22321586310863495
    2. '(' → logprob: -1.9732158184051514
    3. '[' → logprob: -3.2232158184051514
    4. 's' → logprob: -3.9732158184051514
    5. '=' → logprob: -6.7232160568237305
    6. '.' → logprob: -8.59821605682373
    7. ''' → logprob: -8.72321605682373
    8. ')' → logprob: -8.72321605682373
    9. '```' → logprob: -9.34821605682373
    10. '('' → logprob: -9.47321605682373

Token 6: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2649620771408081
    2. ' ' → logprob: -2.1399621963500977
    3. '{}' → logprob: -2.2649621963500977
    4. ' {}' → logprob: -4.514962196350098
    5. '{' → logprob: -8.514962196350098
    6. 's' → logprob: -9.764962196350098
    7. '1' → logprob: -10.639962196350098
    8. ' s' → logprob: -11.514962196350098
    9. ' {' → logprob: -11.639962196350098
    10. '{'' → logprob: -12.639962196350098

Token 7: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38909831643104553
    2. '{}' → logprob: -1.1390982866287231
    3. '{' → logprob: -6.139098167419434
    4. ' {}' → logprob: -10.514098167419434
    5. ' ' → logprob: -11.514098167419434
    6. '{'' → logprob: -12.139098167419434
    7. '1' → logprob: -12.514098167419434
    8. 's' → logprob: -12.514098167419434
    9. '{}
' → logprob: -12.514098167419434
    10. 'dict' → logprob: -12.764098167419434

Token 8: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8334928750991821
    2. '_' → logprob: -1.0834928750991821
    3. '```' → logprob: -2.4584927558898926
    4. 'i' → logprob: -3.2084927558898926
    5. ' for' → logprob: -3.4584927558898926
    6. ',' → logprob: -3.9584927558898926
    7. '=' → logprob: -4.958492755889893
    8. '#' → logprob: -4.958492755889893
    9. 'n' → logprob: -5.333492755889893
    10. '*' → logprob: -5.333492755889893

Token 9: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07936592400074005
    2. 'while' → logprob: -3.4543659687042236
    3. 'i' → logprob: -3.5793659687042236
    4. 'c' → logprob: -5.4543657302856445
    5. '```' → logprob: -5.4543657302856445
    6. ' for' → logprob: -5.8293657302856445
    7. 'if' → logprob: -6.8293657302856445
    8. 'prev' → logprob: -6.9543657302856445
    9. '`' → logprob: -7.0793657302856445
    10. 'char' → logprob: -7.5793657302856445

Token 10: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9496062994003296
    2. 'f' → logprob: -0.9496062994003296
    3. 'n' → logprob: -2.074606418609619
    4. '=' → logprob: -2.699606418609619
    5. '[' → logprob: -4.324606418609619
    6. ' ' → logprob: -5.574606418609619
    7. ' =' → logprob: -5.574606418609619
    8. 's' → logprob: -5.699606418609619
    9. ' +=' → logprob: -5.824606418609619
    10. 'nt' → logprob: -7.199606418609619

Token 11: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6474066376686096
    2. '1' → logprob: -1.0224065780639648
    3. '0' → logprob: -2.147406578063965
    4. '2' → logprob: -9.897406578063965
    5. 's' → logprob: -11.022406578063965
    6. ' s' → logprob: -11.522406578063965
    7. '```' → logprob: -12.397406578063965
    8. ' ' → logprob: -13.772406578063965
    9. ' len' → logprob: -14.522406578063965
    10. 'len' → logprob: -15.022406578063965

Token 12: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5780026316642761
    2. '1' → logprob: -0.8280026316642761
    3. ' ' → logprob: -6.203002452850342
    4. '2' → logprob: -10.4530029296875
    5. 's' → logprob: -12.2030029296875
    6. 'len' → logprob: -13.3280029296875
    7. '```' → logprob: -14.2030029296875
    8. ' len' → logprob: -14.4530029296875
    9. '`' → logprob: -15.5780029296875
    10. '-' → logprob: -15.8280029296875

Token 13: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5749773979187012
    2. ':' → logprob: -1.6999773979187012
    3. ' while' → logprob: -1.8249773979187012
    4. '<|end|>' → logprob: -3.324977397918701
    5. '```' → logprob: -3.699977397918701
    6. '
' → logprob: -3.824977397918701
    7. 's' → logprob: -6.199977397918701
    8. ',' → logprob: -6.199977397918701
    9. ':
' → logprob: -6.574977397918701
    10. '<' → logprob: -7.824977397918701

Token 14: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.11656821519136429
    2. ' while' → logprob: -2.4915683269500732
    3. '```' → logprob: -3.8665683269500732
    4. '<|end|>' → logprob: -6.241568088531494
    5. '
' → logprob: -6.616568088531494
    6. ':' → logprob: -7.491568088531494
    7. 'While' → logprob: -7.991568088531494
    8. ',' → logprob: -8.116568565368652
    9. '\n' → logprob: -8.491568565368652
    10. '``' → logprob: -8.616568565368652

Token 15: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3909494876861572
    2. ' s' → logprob: -1.2659494876861572
    3. 's' → logprob: -3.8909494876861572
    4. 'i' → logprob: -4.390949249267578
    5. ' ' → logprob: -5.140949249267578
    6. ' count' → logprob: -6.640949249267578
    7. ' len' → logprob: -6.765949249267578
    8. ' ' → logprob: -8.265949249267578
    9. 'count' → logprob: -9.015949249267578
    10. ' (' → logprob: -10.640949249267578

Token 16: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.02105223573744297
    2. '<' → logprob: -3.896052122116089
    3. ' <=' → logprob: -8.396052360534668
    4. ' ' → logprob: -8.646052360534668
    5. 's' → logprob: -10.146052360534668
    6. '<|end|>' → logprob: -10.896052360534668
    7. '<len' → logprob: -11.271052360534668
    8. ' s' → logprob: -11.396052360534668
    9. ' <
' → logprob: -11.896052360534668
    10. '<size' → logprob: -12.396052360534668

Token 17: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.25193196535110474
    2. 'len' → logprob: -1.50193190574646
    3. '(len' → logprob: -12.876932144165039
    4. '=len' → logprob: -16.50193214416504
    5. '<len' → logprob: -16.62693214416504
    6. ' ' → logprob: -17.12693214416504
    7. ' n' → logprob: -17.37693214416504
    8. ' s' → logprob: -18.25193214416504
    9. '[len' → logprob: -18.37693214416504
    10. '	len' → logprob: -18.37693214416504

Token 18: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0011783202644437551
    2. '(' → logprob: -6.75117826461792
    3. 's' → logprob: -11.751178741455078
    4. '(
' → logprob: -16.001178741455078
    5. ' (' → logprob: -17.001178741455078
    6. '(count' → logprob: -17.626178741455078
    7. ')' → logprob: -18.501178741455078
    8. '(n' → logprob: -18.751178741455078
    9. '(i' → logprob: -18.876178741455078
    10. '(

' → logprob: -18.876178741455078

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13539545238018036
    2. ')' → logprob: -2.6353955268859863
    3. ' and' → logprob: -3.0103955268859863
    4. 'and' → logprob: -6.010395526885986
    5. '):
' → logprob: -6.635395526885986
    6. ' ):' → logprob: -6.635395526885986
    7. ':' → logprob: -8.010395050048828
    8. ' )' → logprob: -9.260395050048828
    9. 's' → logprob: -9.635395050048828
    10. ' s' → logprob: -11.135395050048828

Token 20: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8021852374076843
    2. '   ' → logprob: -1.052185297012329
    3. ' ' → logprob: -2.052185297012329
    4. '```' → logprob: -3.052185297012329
    5. 'if' → logprob: -4.92718505859375
    6. ' and' → logprob: -5.05218505859375
    7. ':' → logprob: -5.67718505859375
    8. '<|end|>' → logprob: -5.80218505859375
    9. '    ' → logprob: -6.05218505859375
    10. '       ' → logprob: -7.42718505859375

Token 21: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13007748126983643
    2. 'if' (adapté à ' if') → logprob: -2.130077362060547
    3. 's' → logprob: -6.755077362060547
    4. '   ' → logprob: -7.005077362060547
    5. ' ' → logprob: -8.130077362060547
    6. '```' → logprob: -8.255077362060547
    7. ' s' → logprob: -8.380077362060547
    8. '    ' → logprob: -8.505077362060547
    9. ' while' → logprob: -10.755077362060547
    10. ' ```' → logprob: -11.505077362060547

Token 22: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.1269506812095642
    2. 's' → logprob: -2.126950740814209
    3. ' ' → logprob: -10.75195026397705
    4. '(s' → logprob: -14.37695026397705
    5. '_s' → logprob: -15.37695026397705
    6. ' ' → logprob: -15.75195026397705
    7. ')' → logprob: -16.501951217651367
    8. '_' → logprob: -17.001951217651367
    9. '<s' → logprob: -17.126951217651367
    10. '	s' → logprob: -17.376951217651367

Token 23: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0046258182264864445
    2. '[' → logprob: -5.3796257972717285
    3. '==' → logprob: -14.004626274108887
    4. '```' → logprob: -14.004626274108887
    5. ' ==' → logprob: -14.379626274108887
    6. '[s' → logprob: -14.379626274108887
    7. '[int' → logprob: -14.629626274108887
    8. '   ' → logprob: -15.129626274108887
    9. '[]' → logprob: -15.129626274108887
    10. '[count' → logprob: -15.129626274108887

Token 24: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8160865306854248
    2. ']' → logprob: -0.9410865306854248
    3. ' ==' → logprob: -2.316086530685425
    4. ']==' → logprob: -2.816086530685425
    5. '=' → logprob: -5.566086769104004
    6. ')' → logprob: -6.191086769104004
    7. ' ]' → logprob: -6.816086769104004
    8. '!=' → logprob: -7.441086769104004
    9. ' ' → logprob: -7.941086769104004
    10. '[' → logprob: -8.441086769104004

Token 25: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6334969401359558
    2. '==' → logprob: -0.7584969401359558
    3. '=' → logprob: -7.8834967613220215
    4. ' ' → logprob: -8.75849723815918
    5. '!=' → logprob: -9.00849723815918
    6. ' !=' → logprob: -9.13349723815918
    7. ')' → logprob: -10.13349723815918
    8. ']==' → logprob: -10.75849723815918
    9. '[' → logprob: -11.25849723815918
    10. '```' → logprob: -11.25849723815918

Token 26: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10025638341903687
    2. ' s' → logprob: -2.3502564430236816
    3. ' ' → logprob: -9.975255966186523
    4. '   ' → logprob: -13.350255966186523
    5. '	s' → logprob: -14.350255966186523
    6. '  ' → logprob: -14.725255966186523
    7. '(s' → logprob: -15.975255966186523
    8. '    ' → logprob: -16.100255966186523
    9. ' ' → logprob: -16.350255966186523
    10. '     ' → logprob: -16.600255966186523

Token 27: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.125001907348633
    3. ' [' → logprob: -16.000001907348633
    4. '[s' → logprob: -16.125001907348633
    5. 'i' → logprob: -17.125001907348633
    6. '[j' → logprob: -17.875001907348633
    7. '[I' → logprob: -18.250001907348633
    8. '[
' → logprob: -18.375001907348633
    9. '```' → logprob: -18.625001907348633
    10. 's' → logprob: -18.875001907348633

Token 28: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0010380487656220794
    2. ' -' → logprob: -6.876038074493408
    3. '1' → logprob: -13.12603759765625
    4. ' ' → logprob: -13.62603759765625
    5. ']' → logprob: -14.37603759765625
    6. '[i' → logprob: -14.75103759765625
    7. '   ' → logprob: -15.00103759765625
    8. '```' → logprob: -15.50103759765625
    9. '−' → logprob: -16.37603759765625
    10. '[' → logprob: -16.37603759765625

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -11.750009536743164
    3. ']' → logprob: -14.250009536743164
    4. '```' → logprob: -14.500009536743164
    5. 'i' → logprob: -16.250009536743164
    6. '   ' → logprob: -16.437509536743164
    7. ')' → logprob: -16.687509536743164
    8. '`' → logprob: -17.250009536743164
    9. 'count' → logprob: -17.500009536743164
    10. '  ' → logprob: -17.625009536743164

Token 30: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08074074983596802
    2. '):' → logprob: -2.5807406902313232
    3. ']:' → logprob: -7.080740928649902
    4. '       ' → logprob: -7.955740928649902
    5. ' :' → logprob: -8.830740928649902
    6. '):
' → logprob: -9.205740928649902
    7. ':
' → logprob: -9.205740928649902
    8. ')' → logprob: -9.580740928649902
    9. '   ' → logprob: -9.955740928649902
    10. ' ):' → logprob: -10.080740928649902

Token 31: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018850335851311684
    2. '   ' → logprob: -4.393850326538086
    3. '    ' → logprob: -6.268850326538086
    4. 'count' → logprob: -6.643850326538086
    5. '+' → logprob: -7.018850326538086
    6. ' ' → logprob: -7.893850326538086
    7. ':' → logprob: -8.143850326538086
    8. '	' → logprob: -8.143850326538086
    9. '     ' → logprob: -8.268850326538086
    10. '	count' → logprob: -8.893850326538086

Token 32: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.007942555472254753
    2. ' count' → logprob: -4.8829426765441895
    3. '
' → logprob: -8.757942199707031
    4. '       ' → logprob: -9.757942199707031
    5. '   ' → logprob: -10.257942199707031
    6. '```' → logprob: -10.757942199707031
    7. 'print' → logprob: -11.257942199707031
    8. '\n' → logprob: -11.507942199707031
    9. '	count' → logprob: -11.632942199707031
    10. ' 
' → logprob: -11.757942199707031

Token 33: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1493338644504547
    2. ' =' → logprob: -2.274333953857422
    3. '=' → logprob: -3.649333953857422
    4. '+=' → logprob: -4.649333953857422
    5. '+' → logprob: -8.899333953857422
    6. ' ' → logprob: -9.149333953857422
    7. ' +' → logprob: -11.149333953857422
    8. ' *=' → logprob: -11.524333953857422
    9. ' -=' → logprob: -13.024333953857422
    10. 'space' → logprob: -13.649333953857422

Token 34: ' count' (ID: 3605)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00122379744425416
    2. ' ' → logprob: -6.751223564147949
    3. '0' → logprob: -10.00122356414795
    4. 'count' → logprob: -12.25122356414795
    5. '   ' → logprob: -13.00122356414795
    6. '+' → logprob: -14.87622356414795
    7. '```' → logprob: -15.12622356414795
    8. '2' → logprob: -16.376224517822266
    9. '`' → logprob: -16.501224517822266
    10. ' count' → logprob: -16.688724517822266

Token 35: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10652545839548111
    2. ' +' → logprob: -2.481525421142578
    3. '1' → logprob: -4.106525421142578
    4. ' ' → logprob: -6.981525421142578
    5. '2' → logprob: -11.231525421142578
    6. '0' → logprob: -11.606525421142578
    7. ' plus' → logprob: -12.231525421142578
    8. '+
' → logprob: -12.231525421142578
    9. '```' → logprob: -13.606525421142578
    10. '+i' → logprob: -14.356525421142578

Token 36: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004620241466909647
    2. ' ' → logprob: -5.37962007522583
    3. '   ' → logprob: -17.379619598388672
    4. '<|end|>' → logprob: -18.254619598388672
    5. ' ' → logprob: -18.629619598388672
    6. '  ' → logprob: -18.754619598388672
    7. '１' → logprob: -19.754619598388672
    8. '१' → logprob: -19.817119598388672
    9. '۱' → logprob: -19.817119598388672
    10. '+' → logprob: -19.942119598388672

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '-' → logprob: -19.000015258789062
    4. '۱' → logprob: -19.250015258789062
    5. '   ' → logprob: -19.250015258789062
    6. '१' → logprob: -19.500015258789062
    7. '+' → logprob: -19.625015258789062
    8. '```' → logprob: -19.625015258789062
    9. '１' → logprob: -19.875015258789062
    10. '  ' → logprob: -20.187515258789062

Token 38: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5648494958877563
    2. '   ' → logprob: -0.9398494958877563
    3. '<|end|>' → logprob: -4.564849376678467
    4. ' 
' → logprob: -5.439849376678467
    5. '    
' → logprob: -5.439849376678467
    6. '```' → logprob: -5.439849376678467
    7. 'i' → logprob: -5.564849376678467
    8. '\n' → logprob: -5.939849376678467
    9. '  
' → logprob: -6.189849376678467
    10. '       ' → logprob: -6.314849376678467

Token 39: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01374488789588213
    2. '
' → logprob: -4.638744831085205
    3. '       ' → logprob: -6.638744831085205
    4. '```' → logprob: -6.638744831085205
    5. '\n' → logprob: -7.763744831085205
    6. '    
' → logprob: -8.138745307922363
    7. 'i' → logprob: -8.638745307922363
    8. ' i' → logprob: -9.513745307922363
    9. '	i' → logprob: -9.763745307922363
    10. '``' → logprob: -9.763745307922363

Token 40: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.02034403197467327
    2. '   ' → logprob: -4.145344257354736
    3. ' i' → logprob: -5.520344257354736
    4. '```' → logprob: -8.645343780517578
    5. '	i' → logprob: -9.770343780517578
    6. '       ' → logprob: -11.395343780517578
    7. '    
' → logprob: -11.520343780517578
    8. ' ' → logprob: -11.770343780517578
    9. '    ' → logprob: -11.895343780517578
    10. ')' → logprob: -12.020343780517578

Token 41: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14780236780643463
    2. '+=' → logprob: -2.0228023529052734
    3. ' +=' → logprob: -5.522802352905273
    4. '=' → logprob: -7.647802352905273
    5. '++' → logprob: -7.647802352905273
    6. '<|end|>' → logprob: -9.522802352905273
    7. '+++' → logprob: -10.397802352905273
    8. ' ' → logprob: -10.647802352905273
    9. ' +' → logprob: -10.897802352905273
    10. '```' → logprob: -12.272802352905273

Token 42: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00527241500094533
    2. ' i' → logprob: -5.255272388458252
    3. '1' → logprob: -10.38027286529541
    4. '0' → logprob: -12.38027286529541
    5. ' ' → logprob: -13.38027286529541
    6. '	i' → logprob: -14.00527286529541
    7. 'count' → logprob: -15.00527286529541
    8. '   ' → logprob: -15.75527286529541
    9. '```' → logprob: -15.75527286529541
    10. '+' → logprob: -16.255271911621094

Token 43: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0023805228993296623
    2. ' +' → logprob: -6.25238037109375
    3. ' ' → logprob: -8.12738037109375
    4. '1' → logprob: -8.87738037109375
    5. 'i' → logprob: -11.37738037109375
    6. '+i' → logprob: -12.75238037109375
    7. ' i' → logprob: -13.50238037109375
    8. '+
' → logprob: -14.50238037109375
    9. ' plus' → logprob: -15.50238037109375
    10. '2' → logprob: -15.50238037109375

Token 44: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.37501335144043
    3. '2' → logprob: -13.75001335144043
    4. '   ' → logprob: -15.25001335144043
    5. '```' → logprob: -16.25001335144043
    6. '  ' → logprob: -16.62501335144043
    7. '
' → logprob: -18.00001335144043
    8. '' → logprob: -18.18751335144043
    9. '+' → logprob: -18.31251335144043
    10. 's' → logprob: -18.37501335144043

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.550411151489243e-05
    2. '2' → logprob: -10.125055313110352
    3. ' ' → logprob: -11.125055313110352
    4. '' → logprob: -16.37505531311035
    5. '10' → logprob: -16.75005531311035
    6. '   ' → logprob: -16.75005531311035
    7. '```' → logprob: -16.87505531311035
    8. '  ' → logprob: -16.93755531311035
    9. '11' → logprob: -17.37505531311035
    10. '0' → logprob: -17.43755531311035

Token 46: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.26113471388816833
    2. ' else' → logprob: -1.8861347436904907
    3. '   ' → logprob: -2.886134624481201
    4. '<|end|>' → logprob: -4.386134624481201
    5. '```' → logprob: -5.136134624481201
    6. '	else' → logprob: -6.636134624481201
    7. ')' → logprob: -7.136134624481201
    8. '#' → logprob: -7.636134624481201
    9. 'elif' → logprob: -7.761134624481201
    10. ' ' → logprob: -8.01113510131836

Token 47: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3613870441913605
    2. '   ' → logprob: -1.361387014389038
    3. ' else' → logprob: -3.111387014389038
    4. '<|end|>' → logprob: -6.986387252807617
    5. '```' → logprob: -7.236387252807617
    6. '	else' → logprob: -8.111387252807617
    7. 'elif' → logprob: -8.361387252807617
    8. ')' → logprob: -8.861387252807617
    9. ' ' → logprob: -10.486387252807617
    10. '       ' → logprob: -10.736387252807617

Token 48: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.004311668686568737
    2. ' else' → logprob: -5.504311561584473
    3. '```' → logprob: -8.754311561584473
    4. 'elif' (adapté à ' elif') → logprob: -10.129311561584473
    5. '<|end|>' → logprob: -11.504311561584473
    6. '   ' → logprob: -11.754311561584473
    7. '	else' → logprob: -12.129311561584473
    8. ')' → logprob: -12.379311561584473
    9. '#' → logprob: -13.004311561584473
    10. '_else' → logprob: -13.879311561584473

Token 49: ' i' (ID: 575)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7314426898956299
    2. 's' → logprob: -1.3564426898956299
    3. 'i' → logprob: -2.60644268989563
    4. ' i' → logprob: -2.60644268989563
    5. 'count' → logprob: -3.48144268989563
    6. ' True' → logprob: -3.60644268989563
    7. ' count' → logprob: -4.106442451477051
    8. ' ' → logprob: -4.231442451477051
    9. 'True' → logprob: -4.606442451477051
    10. ' not' → logprob: -4.981442451477051

Token 50: ' <' (ID: 464)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7171976566314697
    2. '+' → logprob: -0.9671976566314697
    3. ' <' → logprob: -2.8421976566314697
    4. ' ==' → logprob: -3.3421976566314697
    5. ' ' → logprob: -4.592197418212891
    6. ' <=' → logprob: -4.592197418212891
    7. ' >=' → logprob: -5.342197418212891
    8. '-' → logprob: -5.842197418212891
    9. ' >' → logprob: -6.217197418212891
    10. ' +=' → logprob: -6.342197418212891

Token 51: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10110092163085938
    2. ' len' → logprob: -2.3511009216308594
    3. ' ' → logprob: -7.601100921630859
    4. '1' → logprob: -8.22610092163086
    5. '2' → logprob: -9.22610092163086
    6. '(len' → logprob: -11.85110092163086
    7. '3' → logprob: -12.10110092163086
    8. '0' → logprob: -12.85110092163086
    9. '5' → logprob: -13.10110092163086
    10. '6' → logprob: -13.22610092163086

Token 52: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.014204051345586777
    2. '(' → logprob: -4.389204025268555
    3. 's' → logprob: -6.639204025268555
    4. '-' → logprob: -7.889204025268555
    5. ' -' → logprob: -12.639204025268555
    6. '()' → logprob: -13.514204025268555
    7. ' (' → logprob: -13.764204025268555
    8. ' ' → logprob: -14.014204025268555
    9. '(
' → logprob: -14.264204025268555
    10. ')' → logprob: -14.389204025268555

Token 53: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05666610226035118
    2. '-' → logprob: -3.556666135787964
    3. ' and' → logprob: -4.556665897369385
    4. 'and' → logprob: -4.806665897369385
    5. ')-' → logprob: -5.056665897369385
    6. ' )' → logprob: -7.181665897369385
    7. ' -' → logprob: -7.681665897369385
    8. ' ' → logprob: -8.931666374206543
    9. '   ' → logprob: -9.806666374206543
    10. '[' → logprob: -10.806666374206543

Token 54: ' -' (ID: 533)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7861172556877136
    2. ' -' → logprob: -1.4111173152923584
    3. '-' → logprob: -1.7861173152923584
    4. 'and' → logprob: -2.2861173152923584
    5. ' ' → logprob: -3.6611173152923584
    6. ':' → logprob: -6.661117076873779
    7. '+' → logprob: -6.661117076873779
    8. '   ' → logprob: -7.161117076873779
    9. ' :' → logprob: -7.161117076873779
    10. ' +' → logprob: -7.786117076873779

Token 55: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.062142904847860336
    2. ' ' → logprob: -2.812142848968506
    3. '2' → logprob: -8.687143325805664
    4. '0' → logprob: -13.687143325805664
    5. '3' → logprob: -13.687143325805664
    6. '  ' → logprob: -14.187143325805664
    7. '   ' → logprob: -14.562143325805664
    8. '4' → logprob: -14.687143325805664
    9. '100' → logprob: -14.874643325805664
    10. '10' → logprob: -14.937143325805664

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.864272967912257e-05
    2. '2' → logprob: -9.500088691711426
    3. ' ' → logprob: -11.500088691711426
    4. '3' → logprob: -13.562588691711426
    5. '```' → logprob: -15.062588691711426
    6. '   ' → logprob: -15.250088691711426
    7. '4' → logprob: -15.250088691711426
    8. '10' → logprob: -15.750088691711426
    9. '-' → logprob: -16.18758773803711
    10. '5' → logprob: -16.18758773803711

Token 57: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025869762524962425
    2. ' and' → logprob: -3.900869846343994
    3. '       ' → logprob: -5.900869846343994
    4. ':
' → logprob: -6.275869846343994
    5. '   ' → logprob: -8.275869369506836
    6. 'and' → logprob: -8.400869369506836
    7. ' :' → logprob: -9.150869369506836
    8. ',' → logprob: -11.025869369506836
    9. '=' → logprob: -11.150869369506836
    10. '    ' → logprob: -11.400869369506836

Token 58: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2813265323638916
    2. 's' → logprob: -1.4063265323638916
    3. '(s' → logprob: -9.406326293945312
    4. ' ' → logprob: -10.156326293945312
    5. ' (' → logprob: -11.281326293945312
    6. '(' → logprob: -11.281326293945312
    7. ' i' → logprob: -11.906326293945312
    8. '	s' → logprob: -12.281326293945312
    9. 'i' → logprob: -12.531326293945312
    10. ' not' → logprob: -12.906326293945312

Token 59: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.523948907968588e-05
    2. '[' → logprob: -10.375035285949707
    3. '[I' → logprob: -13.250035285949707
    4. ' [' → logprob: -13.625035285949707
    5. '```' → logprob: -15.500035285949707
    6. '[j' → logprob: -15.875035285949707
    7. 'i' → logprob: -16.12503433227539
    8. '==' → logprob: -16.37503433227539
    9. '[
' → logprob: -16.37503433227539
    10. ']' → logprob: -16.87503433227539

Token 60: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06661954522132874
    2. ']==' → logprob: -3.066619634628296
    3. ' ]' → logprob: -4.316619396209717
    4. '+' → logprob: -5.816619396209717
    5. ' ' → logprob: -7.816619396209717
    6. '[' → logprob: -8.066619873046875
    7. ' ==' → logprob: -8.191619873046875
    8. '==' → logprob: -8.316619873046875
    9. ']=' → logprob: -9.941619873046875
    10. '[i' → logprob: -9.941619873046875

Token 61: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38905173540115356
    2. ' ==' → logprob: -1.1390516757965088
    3. '=' → logprob: -7.389051914215088
    4. ' ' → logprob: -7.764051914215088
    5. '[' → logprob: -8.13905143737793
    6. '!=' → logprob: -8.13905143737793
    7. '+' → logprob: -8.63905143737793
    8. ' !=' → logprob: -9.13905143737793
    9. '.' → logprob: -10.38905143737793
    10. ']==' → logprob: -10.63905143737793

Token 62: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002233401872217655
    2. ' s' → logprob: -6.252233505249023
    3. ''s' → logprob: -8.877233505249023
    4. ' ' → logprob: -9.377233505249023
    5. ''' → logprob: -9.752233505249023
    6. ' '' → logprob: -12.502233505249023
    7. '"' → logprob: -12.627233505249023
    8. '"s' → logprob: -13.002233505249023
    9. '  ' → logprob: -13.127233505249023
    10. '   ' → logprob: -13.127233505249023

Token 63: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.85104202805087e-05
    2. '[' → logprob: -10.000078201293945
    3. '[j' → logprob: -11.750078201293945
    4. '[
' → logprob: -11.875078201293945
    5. '[s' → logprob: -12.250078201293945
    6. 'i' → logprob: -12.750078201293945
    7. ']' → logprob: -13.625078201293945
    8. '[I' → logprob: -13.750078201293945
    9. '```' → logprob: -14.125078201293945
    10. '[next' → logprob: -14.125078201293945

Token 64: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4365881085395813
    2. '-' → logprob: -1.0615880489349365
    3. ']' → logprob: -4.936588287353516
    4. ' +' → logprob: -8.061588287353516
    5. ' -' → logprob: -9.186588287353516
    6. ']+' → logprob: -9.686588287353516
    7. '[' → logprob: -9.811588287353516
    8. '[i' → logprob: -10.061588287353516
    9. '+]' → logprob: -10.311588287353516
    10. '   ' → logprob: -11.311588287353516

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016086915275081992
    2. '-' → logprob: -9.250161170959473
    3. ' ' → logprob: -9.750161170959473
    4. '2' → logprob: -13.500161170959473
    5. '   ' → logprob: -13.625161170959473
    6. ']' → logprob: -14.312661170959473
    7. ')' → logprob: -14.437661170959473
    8. '0' → logprob: -14.500161170959473
    9. ' -' → logprob: -15.125161170959473
    10. '```' → logprob: -15.625161170959473

Token 66: ']:
' (ID: 22152)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.41106852889060974
    2. ':' → logprob: -1.6610685586929321
    3. 'and' → logprob: -2.1610684394836426
    4. ']' → logprob: -4.161068439483643
    5. ']:' → logprob: -4.911068439483643
    6. '):' → logprob: -5.286068439483643
    7. ')' → logprob: -6.911068439483643
    8. ' ' → logprob: -7.286068439483643
    9. '>' → logprob: -7.661068439483643
    10. '=' → logprob: -7.786068439483643

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.042950987815857
    2. ':' → logprob: -1.167950987815857
    3. ' and' → logprob: -1.167950987815857
    4. ':
' → logprob: -4.4179511070251465
    5. 'and' → logprob: -5.6679511070251465
    6. '   ' → logprob: -6.1679511070251465
    7. ' :' → logprob: -6.2929511070251465
    8. ':i' → logprob: -6.6679511070251465
    9. 'i' → logprob: -7.0429511070251465
    10. ' i' → logprob: -7.0429511070251465

Token 68: ' count' (ID: 3605)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.606612503528595
    2. 'count' (adapté à ' count') → logprob: -1.1066124439239502
    3. ' i' → logprob: -2.85661244392395
    4. ' count' → logprob: -3.35661244392395
    5. '   ' → logprob: -3.98161244392395
    6. '       ' → logprob: -5.106612682342529
    7. 'if' → logprob: -6.231612682342529
    8. 'while' → logprob: -6.481612682342529
    9. ' while' → logprob: -7.231612682342529
    10. 's' → logprob: -7.481612682342529

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0950314849615097
    2. ' +=' → logprob: -2.845031499862671
    3. '=' → logprob: -3.470031499862671
    4. ' ' → logprob: -7.095031261444092
    5. '+=' → logprob: -8.59503173828125
    6. ' +' → logprob: -8.59503173828125
    7. ' -=' → logprob: -9.59503173828125
    8. '+' → logprob: -10.47003173828125
    9. '   ' → logprob: -10.47003173828125
    10. '    ' → logprob: -10.59503173828125

Token 70: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4471642076969147
    2. ' count' → logprob: -1.4471641778945923
    3. ' ' → logprob: -2.197164297103882
    4. '0' → logprob: -4.697164058685303
    5. '1' → logprob: -5.447164058685303
    6. '2' → logprob: -8.322164535522461
    7. '	count' → logprob: -8.822164535522461
    8. ' max' → logprob: -10.072164535522461
    9. '<count' → logprob: -10.072164535522461
    10. '10' → logprob: -10.197164535522461

Token 71: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14427550137043
    2. '+' → logprob: -2.019275426864624
    3. ' ' → logprob: -6.769275665283203
    4. '<|end|>' → logprob: -8.644275665283203
    5. ' -' → logprob: -8.769275665283203
    6. '-' → logprob: -10.394275665283203
    7. '<|end|>' → logprob: -10.519275665283203
    8. '   ' → logprob: -11.519275665283203
    9. ' +
' → logprob: -11.519275665283203
    10. '  ' → logprob: -11.769275665283203

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029493920505046844
    2. '2' → logprob: -3.779493808746338
    3. ' ' → logprob: -5.154493808746338
    4. 's' → logprob: -8.904494285583496
    5. '0' → logprob: -9.279494285583496
    6. 'int' → logprob: -9.404494285583496
    7. '3' → logprob: -10.029494285583496
    8. 'len' → logprob: -10.279494285583496
    9. '10' → logprob: -10.779494285583496
    10. ' s' → logprob: -11.279494285583496

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04982968792319298
    2. '2' → logprob: -3.0498297214508057
    3. '0' → logprob: -7.299829483032227
    4. 's' → logprob: -8.674829483032227
    5. 'int' → logprob: -9.174829483032227
    6. '3' → logprob: -9.299829483032227
    7. 'len' → logprob: -9.549829483032227
    8. '10' → logprob: -9.674829483032227
    9. ' ' → logprob: -10.799829483032227
    10. '(' → logprob: -11.799829483032227

Token 74: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24074485898017883
    2. 'i' → logprob: -1.8657448291778564
    3. ' i' → logprob: -3.9907448291778564
    4. '       ' → logprob: -4.3657450675964355
    5. '	i' → logprob: -4.6157450675964355
    6. '   ' → logprob: -4.7407450675964355
    7. '           ' → logprob: -6.6157450675964355
    8. '    
' → logprob: -6.8657450675964355
    9. '[i' → logprob: -7.1157450675964355
    10. '<|end|>' → logprob: -7.1157450675964355

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0961594432592392
    2. '
' → logprob: -2.9711594581604004
    3. 'i' → logprob: -3.5961594581604004
    4. '   ' → logprob: -5.4711594581604
    5. ' i' → logprob: -5.5961594581604
    6. '           ' → logprob: -6.5961594581604
    7. '        
' → logprob: -7.3461594581604
    8. '	i' → logprob: -7.5961594581604
    9. '```' → logprob: -7.7211594581604
    10. '[i' → logprob: -7.9711594581604

Token 76: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.05680588260293007
    2. 'while' → logprob: -2.9318058490753174
    3. 'break' → logprob: -6.6818060874938965
    4. 'count' → logprob: -8.306805610656738
    5. '```' → logprob: -8.931805610656738
    6. 'if' → logprob: -9.681805610656738
    7. ' while' → logprob: -9.931805610656738
    8. '   ' → logprob: -9.931805610656738
    9. ' i' → logprob: -10.431805610656738
    10. 'j' → logprob: -10.431805610656738

Token 77: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4324033260345459
    2. ' =' → logprob: -1.807403326034546
    3. '+' → logprob: -1.932403326034546
    4. ' +=' → logprob: -3.682403326034546
    5. '+=' → logprob: -4.557403564453125
    6. ' +' → logprob: -5.182403564453125
    7. ' ' → logprob: -7.057403564453125
    8. ')' → logprob: -10.432403564453125
    9. '-' → logprob: -12.307403564453125
    10. ',' → logprob: -13.182403564453125

Token 78: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6931696534156799
    2. ' i' → logprob: -0.6931696534156799
    3. ' ' → logprob: -11.818169593811035
    4. '2' → logprob: -11.943169593811035
    5. 'len' → logprob: -12.943169593811035
    6. '	i' → logprob: -13.443169593811035
    7. ' len' → logprob: -13.818169593811035
    8. '1' → logprob: -14.193169593811035
    9. '   ' → logprob: -14.443169593811035
    10. '```' → logprob: -14.818169593811035

Token 79: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.34858280420303345
    2. '+' → logprob: -1.2235827445983887
    3. ' ' → logprob: -9.098583221435547
    4. ' +
' → logprob: -11.098583221435547
    5. '2' → logprob: -12.223583221435547
    6. '+
' → logprob: -13.598583221435547
    7. '1' → logprob: -14.223583221435547
    8. ' -' → logprob: -14.223583221435547
    9. '-' → logprob: -14.348583221435547
    10. '   ' → logprob: -14.973583221435547

Token 80: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17064595222473145
    2. '1' → logprob: -2.5456459522247314
    3. ' ' → logprob: -2.5456459522247314
    4. '3' → logprob: -10.420645713806152
    5. '4' → logprob: -13.170645713806152
    6. '5' → logprob: -14.483145713806152
    7. ' ' → logprob: -14.608145713806152
    8. '0' → logprob: -14.733145713806152
    9. ' 
' → logprob: -15.170645713806152
    10. '```' → logprob: -15.295645713806152

Token 81: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004334575962275267
    2. '1' → logprob: -5.504334449768066
    3. '3' → logprob: -8.754334449768066
    4. ' ' → logprob: -9.254334449768066
    5. '   ' → logprob: -14.941834449768066
    6. '4' → logprob: -15.066834449768066
    7. '  ' → logprob: -15.816834449768066
    8. '0' → logprob: -15.879334449768066
    9. '5' → logprob: -16.004335403442383
    10. '	' → logprob: -16.004335403442383

Token 82: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5702423453330994
    2. 'else' → logprob: -1.0702424049377441
    3. ' else' → logprob: -2.445242404937744
    4. '	else' → logprob: -6.695242404937744
    5. '<|end|>' → logprob: -6.695242404937744
    6. 'i' → logprob: -6.945242404937744
    7. ')' → logprob: -7.945242404937744
    8. ' ' → logprob: -8.070241928100586
    9. 'elif' → logprob: -8.320241928100586
    10. '```' → logprob: -8.320241928100586

Token 83: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2136395275592804
    2. '   ' → logprob: -1.838639497756958
    3. ' else' → logprob: -3.463639497756958
    4. 'i' → logprob: -7.088639736175537
    5. '```' → logprob: -7.213639736175537
    6. ')' → logprob: -9.088639259338379
    7. 'elif' → logprob: -9.338639259338379
    8. '	else' → logprob: -9.463639259338379
    9. '<|end|>' → logprob: -9.963639259338379
    10. ' ' → logprob: -10.588639259338379

Token 84: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.053550850600004196
    2. 'i' → logprob: -3.303550958633423
    3. ' else' → logprob: -4.428550720214844
    4. '```' → logprob: -6.553550720214844
    5. ')' → logprob: -7.303550720214844
    6. 's' → logprob: -8.053550720214844
    7. 'e' → logprob: -8.053550720214844
    8. '   ' → logprob: -8.303550720214844
    9. 'elif' → logprob: -8.303550720214844
    10. '#' → logprob: -9.928550720214844

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001440353924408555
    2. ':
' → logprob: -6.626440525054932
    3. '       ' → logprob: -9.751440048217773
    4. '   ' → logprob: -10.126440048217773
    5. ' :' → logprob: -11.501440048217773
    6. '    ' → logprob: -13.626440048217773
    7. ':return' → logprob: -13.626440048217773
    8. ':
' → logprob: -14.376440048217773
    9. '      ' → logprob: -14.626440048217773
    10. ',' → logprob: -15.001440048217773

Token 86: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.732305109500885
    2. '       ' → logprob: -0.732305109500885
    3. ' break' → logprob: -4.10730504989624
    4. 'break' → logprob: -4.60730504989624
    5. ' i' → logprob: -5.23230504989624
    6. '    ' → logprob: -5.73230504989624
    7. 'i' → logprob: -7.48230504989624
    8. '     ' → logprob: -7.48230504989624
    9. '	break' → logprob: -7.48230504989624
    10. '           ' → logprob: -7.73230504989624

Token 87: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.030819956213235855
    2. ' break' → logprob: -4.155819892883301
    3. '   ' → logprob: -4.280819892883301
    4. 'i' → logprob: -8.2808198928833
    5. 'count' → logprob: -8.5308198928833
    6. 'b' → logprob: -8.9058198928833
    7. '```' → logprob: -8.9058198928833
    8. '	break' → logprob: -10.1558198928833
    9. ' i' → logprob: -10.5308198928833
    10. '       ' → logprob: -10.7808198928833

Token 88: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06219231337308884
    2. 'i' → logprob: -3.18719220161438
    3. ')' → logprob: -5.062192440032959
    4. '
' → logprob: -5.687192440032959
    5. '#' → logprob: -5.812192440032959
    6. '```' → logprob: -6.937192440032959
    7. '<|end|>' → logprob: -7.062192440032959
    8. ' print' → logprob: -7.062192440032959
    9. ' ' → logprob: -7.312192440032959
    10. '   ' → logprob: -7.687192440032959

Token 89: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.48530104756355286
    2. ')' → logprob: -1.4853010177612305
    3. 'i' → logprob: -2.7353010177612305
    4. '#' → logprob: -3.1103010177612305
    5. ' ' → logprob: -4.3603010177612305
    6. '```' → logprob: -4.8603010177612305
    7. '
' → logprob: -4.9853010177612305
    8. ' 
' → logprob: -5.6103010177612305
    9. '<|end|>' → logprob: -5.6103010177612305
    10. '   ' → logprob: -5.9853010177612305

Token 90: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011266500689089298
    2. '('' → logprob: -5.136266708374023
    3. '(count' → logprob: -5.386266708374023
    4. '("("' → logprob: -7.761266708374023
    5. '(s' → logprob: -8.511266708374023
    6. '()' → logprob: -9.636266708374023
    7. '(len' → logprob: -10.886266708374023
    8. '("' → logprob: -11.011266708374023
    9. '((' → logprob: -11.886266708374023
    10. '(`' → logprob: -13.011266708374023

Token 91: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ' )' → logprob: -12.75000286102295
    3. ')
' → logprob: -16.125003814697266
    4. ')`' → logprob: -18.250003814697266
    5. ')#' → logprob: -19.125003814697266
    6. '')' → logprob: -19.125003814697266
    7. '))' → logprob: -19.125003814697266
    8. ']' → logprob: -19.250003814697266
    9. '`)' → logprob: -19.500003814697266
    10. '}' → logprob: -19.875003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 89
Tokens correctement prédits (1ère position, stricte): 34
Tokens correctement prédits (1ère position, avec adaptation): 39
Tokens correctement prédits (top 10): 80
Précision stricte (1ère position): 38.20%
Précision adaptée (1ère position): 43.82%
Précision (top 10): 89.89%
================================================================================
