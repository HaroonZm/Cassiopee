================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def swap_and_concatenate():
    """
    Demande à l'utilisateur de saisir une chaîne de caractères,
    sépare cette chaîne en utilisant les espaces comme séparateurs,
    puis affiche la concaténation du deuxième élément et du premier élément de la liste résultante.
    """
    # Demander à l'utilisateur de saisir une chaîne de caractères
    a = input("Veuillez saisir des mots séparés par des espaces : ")

    # Séparer la chaîne saisie en une liste de mots, découpés sur les espaces
    aa = a.split()

    # Concaténer le deuxième élément (indice 1) et le premier élément (indice 0) de la liste
    # Supposer que l'utilisateur saisit au moins deux mots, sinon cela lèvera une exception
    result = aa[1] + aa[0]

    # Afficher le résultat obtenu
    print(result)

# Appel de la fonction principale
swap_and_concatenate()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' swap' (ID: 25489)
  → Token d'amorce (pas de prédiction)

Token 2: '_and' (ID: 18645)
  → Token d'amorce (pas de prédiction)

Token 3: '_con' (ID: 7531)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.013538404367864132
    2. 'replace' → logprob: -5.013538360595703
    3. 'reverse' → logprob: -6.263538360595703
    4. 'remove' → logprob: -6.513538360595703
    5. ' return' → logprob: -6.638538360595703
    6. '_return' → logprob: -7.138538360595703
    7. 'append' → logprob: -7.388538360595703
    8. 'assign' → logprob: -9.013538360595703
    9. 'copy' → logprob: -9.388538360595703
    10. 'compare' → logprob: -9.388538360595703

Token 4: 'c' (ID: 66)
  Prédit: 'cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -0.43479540944099426
    2. 't' → logprob: -1.4347953796386719
    3. 'vert' → logprob: -2.934795379638672
    4. 'nect' → logprob: -3.059795379638672
    5. 'cate' → logprob: -4.684795379638672
    6. 'atenate' → logprob: -6.059795379638672
    7. 'tent' → logprob: -6.934795379638672
    8. '```' → logprob: -7.184795379638672
    9. 'c' → logprob: -8.434795379638672
    10. 'ct' → logprob: -8.559795379638672

Token 5: 'atenate' (ID: 63439)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.5763580203056335
    2. 'atenate' → logprob: -0.8263580203056335
    3. 'aten' → logprob: -7.951357841491699
    4. 'ate' → logprob: -9.9513578414917
    5. '(at' → logprob: -11.8263578414917
    6. '_at' → logprob: -12.4513578414917
    7. '```' → logprob: -12.4513578414917
    8. '_' → logprob: -14.4513578414917
    9. '(' → logprob: -14.5763578414917
    10. '(a' → logprob: -14.7013578414917

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007914882153272629
    2. '():' → logprob: -5.132915019989014
    3. '(:' → logprob: -7.507915019989014
    4. '(_:' → logprob: -7.632915019989014
    5. '(_' → logprob: -8.132914543151855
    6. '(a' → logprob: -9.132914543151855
    7. '```' → logprob: -9.757914543151855
    8. '(":' → logprob: -10.007914543151855
    9. '(args' → logprob: -10.132914543151855
    10. '(parent' → logprob: -10.132914543151855

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3608611822128296
    2. '(' → logprob: -2.360861301422119
    3. '\' → logprob: -2.735861301422119
    4. '```' → logprob: -2.860861301422119
    5. '\n' → logprob: -2.985861301422119
    6. '(
' → logprob: -5.235861301422119
    7. '()' → logprob: -5.235861301422119
    8. '    
' → logprob: -5.235861301422119
    9. '    ' → logprob: -5.985861301422119
    10. ''' → logprob: -6.235861301422119

Token 8: ' """
' (ID: 7037)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.039102233946323395
    2. 'x' → logprob: -4.539102077484131
    3. 'return' → logprob: -4.914102077484131
    4. '   ' → logprob: -5.414102077484131
    5. ' a' → logprob: -5.664102077484131
    6. ' ' → logprob: -6.164102077484131
    7. 'r' → logprob: -6.289102077484131
    8. '```' → logprob: -6.414102077484131
    9. 'b' → logprob: -6.914102077484131
    10. 'result' → logprob: -7.039102077484131

Token 9: '   ' (ID: 271)
  Prédit: 'Swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Swap' → logprob: -0.456123024225235
    2. '"""' → logprob: -1.8311229944229126
    3. 'Sw' → logprob: -2.331123113632202
    4. 'Returns' → logprob: -3.456123113632202
    5. 'Return' → logprob: -3.581123113632202
    6. 'Conc' → logprob: -4.081122875213623
    7. 'T' → logprob: -4.456122875213623
    8. 'Replace' → logprob: -5.581122875213623
    9. 'Per' → logprob: -6.081122875213623
    10. ''''' → logprob: -6.081122875213623

Token 10: ' Dem' (ID: 9458)
  Prédit: 'Sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sw' → logprob: -0.7077944874763489
    2. 'Swap' → logprob: -0.9577944874763489
    3. 'Returns' → logprob: -3.332794427871704
    4. 'Return' → logprob: -3.457794427871704
    5. 'Conc' → logprob: -4.082794666290283
    6. 'Take' → logprob: -4.707794666290283
    7. 'T' → logprob: -4.707794666290283
    8. '"""' → logprob: -5.457794666290283
    9. '   ' → logprob: -5.582794666290283
    10. 'Re' → logprob: -5.707794666290283

Token 11: 'ande' (ID: 4102)
  Prédit: 'onstr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'onstr' → logprob: -0.12853549420833588
    2. 'on' → logprob: -2.128535509109497
    3. 'and' → logprob: -7.628535270690918
    4. 'ons' → logprob: -8.003535270690918
    5. 'ands' → logprob: -8.128535270690918
    6. '   ' → logprob: -8.628535270690918
    7. 'ones' → logprob: -10.128535270690918
    8. 'ont' → logprob: -10.253535270690918
    9. 'o' → logprob: -10.378535270690918
    10. 'an' → logprob: -10.503535270690918

Token 12: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06420943886041641
    2. ' ' → logprob: -3.939209461212158
    3. 's' → logprob: -4.314209461212158
    4. 'r' → logprob: -4.814209461212158
    5. ' de' → logprob: -5.189209461212158
    6. ' des' → logprob: -5.564209461212158
    7. ' return' → logprob: -5.814209461212158
    8. ' d' → logprob: -5.939209461212158
    9. '  ' → logprob: -6.564209461212158
    10. '_' → logprob: -6.689209461212158

Token 13: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10489805787801743
    2. ' l' → logprob: -2.354897975921631
    3. 'user' → logprob: -5.979897975921631
    4. '   ' → logprob: -7.854897975921631
    5. 'la' → logprob: -8.354898452758789
    6. 'util' → logprob: -8.604898452758789
    7. ' user' → logprob: -8.604898452758789
    8. 'de' → logprob: -8.729898452758789
    9. '"""
' → logprob: -9.229898452758789
    10. 'str' → logprob: -9.354898452758789

Token 14: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.03628859296441078
    2. 'util' → logprob: -3.7862884998321533
    3. 'a' → logprob: -5.036288738250732
    4. ' utilisateur' → logprob: -5.786288738250732
    5. '’utilisateur' → logprob: -6.286288738250732
    6. 'u' → logprob: -7.536288738250732
    7. ''' → logprob: -7.786288738250732
    8. ''util' → logprob: -8.411288261413574
    9. 'e' → logprob: -9.536288261413574
    10. ''us' → logprob: -9.911288261413574

Token 15: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.10639086365699768
    2. '   ' → logprob: -2.731390953063965
    3. ' d' → logprob: -3.981390953063965
    4. ''' → logprob: -5.731390953063965
    5. '    ' → logprob: -5.856390953063965
    6. ' un' → logprob: -5.981390953063965
    7. 'de' → logprob: -6.356390953063965
    8. ' ' → logprob: -6.856390953063965
    9. ' la' → logprob: -7.106390953063965
    10. '```' → logprob: -7.356390953063965

Token 16: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22430455684661865
    2. ' saisir' → logprob: -1.8493045568466187
    3. 'r' → logprob: -4.724304676055908
    4. 'entr' → logprob: -4.974304676055908
    5. 'changer' → logprob: -5.099304676055908
    6. ' entrer' → logprob: -5.099304676055908
    7. 'de' → logprob: -6.224304676055908
    8. 'swap' → logprob: -6.349304676055908
    9. '```' → logprob: -6.599304676055908
    10. ' rentrer' → logprob: -6.724304676055908

Token 17: ' une' (ID: 2463)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -1.0111489295959473
    2. 'de' → logprob: -1.2611489295959473
    3. ' un' → logprob: -1.6361489295959473
    4. ' une' → logprob: -2.5111489295959473
    5. ' le' → logprob: -3.6361489295959473
    6. ' la' → logprob: -4.636148929595947
    7. '   ' → logprob: -4.636148929595947
    8. ' two' → logprob: -5.011148929595947
    9. 'un' → logprob: -5.261148929595947
    10. 'le' → logprob: -5.386148929595947

Token 18: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.4300462305545807
    2. 'cha' → logprob: -1.9300462007522583
    3. 'chaine' → logprob: -2.055046319961548
    4. ' chaine' → logprob: -3.805046319961548
    5. ' phrase' → logprob: -4.180046081542969
    6. 'phrase' → logprob: -4.305046081542969
    7. '   ' → logprob: -4.805046081542969
    8. ' ' → logprob: -5.055046081542969
    9. 'ch' → logprob: -5.930046081542969
    10. 'prem' → logprob: -6.430046081542969

Token 19: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.014762498438358307
    2. '   ' → logprob: -4.8897624015808105
    3. 'de' → logprob: -5.6397624015808105
    4. 's' → logprob: -7.3897624015808105
    5. ' et' → logprob: -7.3897624015808105
    6. 'e' → logprob: -7.5147624015808105
    7. '\' → logprob: -8.264762878417969
    8. ',' → logprob: -8.514762878417969
    9. ' 
' → logprob: -8.639762878417969
    10. '.' → logprob: -8.764762878417969

Token 20: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.16335752606391907
    2. ' caractères' → logprob: -1.9133574962615967
    3. ' caract' → logprob: -7.163357734680176
    4. ' caractère' → logprob: -7.163357734680176
    5. 'texte' → logprob: -7.788357734680176
    6. ' caracteres' → logprob: -7.788357734680176
    7. ' car' → logprob: -8.538357734680176
    8. 's' → logprob: -9.038357734680176
    9. ' ' → logprob: -9.038357734680176
    10. 'de' → logprob: -9.538357734680176

Token 21: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023095691576600075
    2. ',' → logprob: -4.148095607757568
    3. ' et' → logprob: -6.148095607757568
    4. '\n' → logprob: -6.398095607757568
    5. 's' → logprob: -7.398095607757568
    6. '.' → logprob: -7.898095607757568
    7. ' ' → logprob: -8.023096084594727
    8. '    ' → logprob: -8.398096084594727
    9. '    
' → logprob: -8.398096084594727
    10. 'et' → logprob: -8.773096084594727

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5379984378814697
    2. ' puis' → logprob: -0.9129984378814697
    3. 'p' → logprob: -5.037998199462891
    4. '    ' → logprob: -5.662998199462891
    5. ' et' → logprob: -6.287998199462891
    6. 'et' → logprob: -6.787998199462891
    7. ' retourne' → logprob: -7.412998199462891
    8. ' return' → logprob: -8.78799819946289
    9. ',' → logprob: -9.03799819946289
    10. ' ' → logprob: -9.03799819946289

Token 23: ' sé' (ID: 7462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.798450231552124
    2. ' puis' → logprob: -1.048450231552124
    3. 'p' → logprob: -1.673450231552124
    4. 'et' → logprob: -5.798450469970703
    5. '    ' → logprob: -6.048450469970703
    6. ' retourne' → logprob: -6.548450469970703
    7. ' et' → logprob: -6.923450469970703
    8. 's' → logprob: -7.173450469970703
    9. 'return' → logprob: -7.298450469970703
    10. ' return' → logprob: -7.798450469970703

Token 24: 'pare' (ID: 6900)
  Prédit: 'pare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -0.27643948793411255
    2. 'par' → logprob: -2.0264394283294678
    3. 'parer' → logprob: -2.6514394283294678
    4. 'lection' → logprob: -3.9014394283294678
    5. 'paration' → logprob: -4.651439666748047
    6. 'quence' → logprob: -5.651439666748047
    7. 'pa' → logprob: -6.276439666748047
    8. 'para' → logprob: -6.651439666748047
    9. 'parent' → logprob: -6.901439666748047
    10. 'lect' → logprob: -7.901439666748047

Token 25: ' cette' (ID: 7696)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3409191966056824
    2. ' les' → logprob: -1.9659192562103271
    3. 'la' → logprob: -2.590919256210327
    4. 's' → logprob: -3.965919256210327
    5. 'les' → logprob: -4.215919017791748
    6. ' ' → logprob: -5.090919017791748
    7. '   ' → logprob: -5.090919017791748
    8. ' le' → logprob: -5.215919017791748
    9. '_la' → logprob: -5.715919017791748
    10. 'r' → logprob: -5.840919017791748

Token 26: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.649409830570221
    2. ' ' → logprob: -1.0244097709655762
    3. 's' → logprob: -3.024409770965576
    4. '_' → logprob: -3.149409770965576
    5. ' chaine' → logprob: -5.274409770965576
    6. ' string' → logprob: -5.524409770965576
    7. ' phrase' → logprob: -5.649409770965576
    8. '   ' → logprob: -5.899409770965576
    9. ' ' → logprob: -6.149409770965576
    10. ' s' → logprob: -6.524409770965576

Token 27: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.013599788770079613
    2. 'en' → logprob: -5.138599872589111
    3. ' par' → logprob: -5.513599872589111
    4. ' au' → logprob: -7.263599872589111
    5. ' ' → logprob: -7.513599872589111
    6. 's' → logprob: -7.638599872589111
    7. '   ' → logprob: -8.013599395751953
    8. 'au' → logprob: -8.513599395751953
    9. ',' → logprob: -8.638599395751953
    10. 'par' → logprob: -8.888599395751953

Token 28: ' utilisant' (ID: 92474)
  Prédit: ' mots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mots' → logprob: -0.5216500759124756
    2. 'm' → logprob: -2.0216500759124756
    3. ' ' → logprob: -2.3966500759124756
    4. '   ' → logprob: -2.7716500759124756
    5. ' deux' → logprob: -2.7716500759124756
    6. 'de' → logprob: -4.521650314331055
    7. ' tokens' → logprob: -4.771650314331055
    8. ' espaces' → logprob: -4.771650314331055
    9. '```' → logprob: -5.146650314331055
    10. 'mot' → logprob: -5.271650314331055

Token 29: ' les' (ID: 1341)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.3024247884750366
    2. 'l' → logprob: -1.6774247884750366
    3. ' l' → logprob: -1.8024247884750366
    4. '```' → logprob: -2.302424907684326
    5. ' un' → logprob: -2.802424907684326
    6. ''' → logprob: -3.052424907684326
    7. ''un' → logprob: -3.427424907684326
    8. '"' → logprob: -3.802424907684326
    9. 'es' → logprob: -4.052424907684326
    10. ' ' → logprob: -4.177424907684326

Token 30: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.6131705641746521
    2. 'esp' → logprob: -0.8631705641746521
    3. 'es' → logprob: -3.613170623779297
    4. '_' → logprob: -5.363170623779297
    5. ' espace' → logprob: -6.988170623779297
    6. ''esp' → logprob: -7.363170623779297
    7. 'spaces' → logprob: -7.488170623779297
    8. 'car' → logprob: -7.988170623779297
    9. ' ' → logprob: -7.988170623779297
    10. '   ' → logprob: -8.488170623779297

Token 31: ' comme' (ID: 7971)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08387836068868637
    2. '   ' → logprob: -3.3338782787323
    3. ' ,' → logprob: -3.4588782787323
    4. ''' → logprob: -5.583878517150879
    5. ' et' → logprob: -5.708878517150879
    6. 'et' → logprob: -6.958878517150879
    7. '```' → logprob: -6.958878517150879
    8. '"' → logprob: -7.083878517150879
    9. ' puis' → logprob: -7.208878517150879
    10. ' )' → logprob: -7.208878517150879

Token 32: ' sépar' (ID: 97160)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.3016163110733032
    2. ' sépar' → logprob: -1.9266163110733032
    3. ' dé' → logprob: -2.8016161918640137
    4. 'sé' → logprob: -3.1766161918640137
    5. 'del' → logprob: -5.426616191864014
    6. 'se' → logprob: -6.051616191864014
    7. 'd' → logprob: -6.801616191864014
    8. 'delimiter' → logprob: -6.926616191864014
    9. 's' → logprob: -7.426616191864014
    10. '   ' → logprob: -7.551616191864014

Token 33: 'ateurs' (ID: 19727)
  Prédit: 'ateurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateurs' → logprob: -0.07910172641277313
    2. 'ateur' → logprob: -2.579101800918579
    3. 'ate' → logprob: -9.2041015625
    4. '```' → logprob: -9.7041015625
    5. '   ' → logprob: -11.5791015625
    6. '_' → logprob: -12.2041015625
    7. 'a' → logprob: -12.7041015625
    8. 'at' → logprob: -12.9541015625
    9. 'teurs' → logprob: -13.0791015625
    10. 'iteurs' → logprob: -13.2041015625

Token 34: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021092046052217484
    2. '   ' → logprob: -4.271091938018799
    3. ' ,' → logprob: -5.521091938018799
    4. ',
' → logprob: -6.646091938018799
    5. ' et' → logprob: -7.021091938018799
    6. '```' → logprob: -8.646092414855957
    7. 'et' → logprob: -8.896092414855957
    8. '.' → logprob: -9.771092414855957
    9. 's' → logprob: -9.896092414855957
    10. ' puis' → logprob: -10.146092414855957

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03304983302950859
    2. ' puis' → logprob: -4.283050060272217
    3. ',' → logprob: -4.658050060272217
    4. '    ' → logprob: -5.658050060272217
    5. 'p' → logprob: -6.283050060272217
    6. ' ,' → logprob: -7.158050060272217
    7. ')' → logprob: -7.533050060272217
    8. ' return' → logprob: -8.033049583435059
    9. 's' → logprob: -8.158049583435059
    10. ' ' → logprob: -8.283049583435059

Token 36: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23169951140880585
    2. ' puis' → logprob: -1.8566994667053223
    3. 'p' → logprob: -3.9816994667053223
    4. ' retourne' → logprob: -4.106699466705322
    5. 'et' → logprob: -5.481699466705322
    6. ' et' → logprob: -6.356699466705322
    7. '    ' → logprob: -6.731699466705322
    8. 'return' → logprob: -6.731699466705322
    9. ',' → logprob: -6.856699466705322
    10. ' return' → logprob: -6.981699466705322

Token 37: ' affiche' (ID: 127479)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -1.0509068965911865
    2. ' inverse' → logprob: -1.1759068965911865
    3. ' échange' → logprob: -1.8009068965911865
    4. '   ' → logprob: -2.9259068965911865
    5. ' perm' → logprob: -4.050907135009766
    6. 'ren' → logprob: -4.175907135009766
    7. 'éch' → logprob: -4.425907135009766
    8. 'swap' → logprob: -4.425907135009766
    9. ' inter' → logprob: -4.800907135009766
    10. 'inter' → logprob: -5.050907135009766

Token 38: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3201962113380432
    2. ' le' → logprob: -1.8201961517333984
    3. ' les' → logprob: -2.5701961517333984
    4. ' l' → logprob: -3.9451961517333984
    5. ' ' → logprob: -5.195196151733398
    6. '   ' → logprob: -6.320196151733398
    7. '```' → logprob: -6.320196151733398
    8. ' ' → logprob: -6.820196151733398
    9. 'la' → logprob: -7.195196151733398
    10. 's' → logprob: -7.820196151733398

Token 39: ' concat' (ID: 73950)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.8283368945121765
    2. 's' → logprob: -1.5783369541168213
    3. ' deuxième' → logprob: -2.5783369541168213
    4. ' version' → logprob: -3.2033369541168213
    5. ' première' → logprob: -3.2033369541168213
    6. ' ' → logprob: -3.2033369541168213
    7. ' liste' → logprob: -3.9533369541168213
    8. ' nouvelle' → logprob: -4.078336715698242
    9. 'chaine' → logprob: -4.328336715698242
    10. '   ' → logprob: -4.453336715698242

Token 40: 'én' (ID: 3289)
  Prédit: 'én'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'én' → logprob: -0.28761425614356995
    2. 'éné' → logprob: -1.7876142263412476
    3. 'é' → logprob: -2.662614345550537
    4. 'ené' → logprob: -5.537614345550537
    5. 'en' → logprob: -6.412614345550537
    6. 'énez' → logprob: -6.662614345550537
    7. '"' → logprob: -6.787614345550537
    8. ' én' → logprob: -7.162614345550537
    9. 'éna' → logprob: -7.537614345550537
    10. 'énées' → logprob: -7.662614345550537

Token 41: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0005166939808987081
    2. 'at' → logprob: -8.250516891479492
    3. 'a' → logprob: -8.875516891479492
    4. ' at' → logprob: -9.500516891479492
    5. 'ati' → logprob: -11.250516891479492
    6. '   ' → logprob: -12.000516891479492
    7. 'e' → logprob: -12.125516891479492
    8. 'atio' → logprob: -12.250516891479492
    9. 'é' → logprob: -13.375516891479492
    10. 'es' → logprob: -13.500516891479492

Token 42: ' du' (ID: 1462)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.04913081228733063
    2. ' de' → logprob: -3.674130916595459
    3. '   ' → logprob: -4.299130916595459
    4. 'des' → logprob: -5.549130916595459
    5. ' ' → logprob: -6.549130916595459
    6. 'de' → logprob: -6.674130916595459
    7. '  ' → logprob: -7.924130916595459
    8. '"' → logprob: -8.1741304397583
    9. '    ' → logprob: -8.1741304397583
    10. 's' → logprob: -8.4241304397583

Token 43: ' deuxième' (ID: 51664)
  Prédit: ' premier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premier' → logprob: -0.9412443041801453
    2. 'prem' → logprob: -1.06624436378479
    3. 'de' → logprob: -2.19124436378479
    4. ' deuxième' → logprob: -3.19124436378479
    5. ' ' → logprob: -3.94124436378479
    6. ' mot' → logprob: -4.066244125366211
    7. 's' → logprob: -4.191244125366211
    8. 'mot' → logprob: -4.441244125366211
    9. ' dernier' → logprob: -5.066244125366211
    10. ' second' → logprob: -5.191244125366211

Token 44: ' élément' (ID: 99627)
  Prédit: 'mot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mot' → logprob: -0.33562150597572327
    2. ' ' → logprob: -2.4606215953826904
    3. ' mot' → logprob: -2.9606215953826904
    4. '```' → logprob: -3.3356215953826904
    5. '  ' → logprob: -4.210621356964111
    6. 'm' → logprob: -4.210621356964111
    7. ' et' → logprob: -4.335621356964111
    8. ' ,' → logprob: -4.585621356964111
    9. ',' → logprob: -4.835621356964111
    10. '"' → logprob: -4.960621356964111

Token 45: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1593247652053833
    2. '[' → logprob: -1.6593247652053833
    3. ''' → logprob: -2.2843246459960938
    4. 's' → logprob: -2.4093246459960938
    5. ' ,' → logprob: -2.5343246459960938
    6. '"' → logprob: -3.0343246459960938
    7. '```' → logprob: -3.0343246459960938
    8. '_' → logprob: -3.9093246459960938
    9. ' et' → logprob: -4.284324645996094
    10. 'de' → logprob: -4.409324645996094

Token 46: ' du' (ID: 1462)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.6578720808029175
    2. ' du' → logprob: -2.157872200012207
    3. ''' → logprob: -2.282872200012207
    4. ' ' → logprob: -2.657872200012207
    5. 'le' → logprob: -2.907872200012207
    6. '"' → logprob: -3.407872200012207
    7. '  ' → logprob: -3.782872200012207
    8. 's' → logprob: -3.907872200012207
    9. '_' → logprob: -4.157872200012207
    10. '1' → logprob: -5.032872200012207

Token 47: ' premier' (ID: 15506)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.5026240944862366
    2. ' premier' → logprob: -1.5026240348815918
    3. '"' → logprob: -2.752624034881592
    4. 's' → logprob: -3.127624034881592
    5. '_' → logprob: -4.127624034881592
    6. '```' → logprob: -4.252624034881592
    7. ' ' → logprob: -4.377624034881592
    8. '1' → logprob: -5.002624034881592
    9. 'space' → logprob: -5.752624034881592
    10. '  ' → logprob: -6.127624034881592

Token 48: ' élément' (ID: 99627)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6436870694160461
    2. ' )' → logprob: -2.1436870098114014
    3. '"' → logprob: -2.8936870098114014
    4. ')' → logprob: -2.8936870098114014
    5. '_' → logprob: -3.0186870098114014
    6. '  ' → logprob: -3.3936870098114014
    7. ' ]' → logprob: -3.3936870098114014
    8. ''' → logprob: -3.6436870098114014
    9. ' ,' → logprob: -3.8936870098114014
    10. '`' → logprob: -4.5186872482299805

Token 49: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00685035390779376
    2. '\n' → logprob: -6.381850242614746
    3. '
' → logprob: -6.631850242614746
    4. ' ' → logprob: -7.131850242614746
    5. '\' → logprob: -7.131850242614746
    6. '    
' → logprob: -7.131850242614746
    7. '```' → logprob: -8.006850242614746
    8. ' 
' → logprob: -8.881850242614746
    9. '  
' → logprob: -9.256850242614746
    10. '  ' → logprob: -9.256850242614746

Token 50: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.019723931327462196
    2. ' tableau' → logprob: -5.144723892211914
    3. 's' → logprob: -5.644723892211914
    4. ' ' → logprob: -5.644723892211914
    5. 'la' → logprob: -6.019723892211914
    6. ' l' → logprob: -6.894723892211914
    7. 'a' → logprob: -7.144723892211914
    8. ' the' → logprob: -8.394723892211914
    9. 'l' → logprob: -8.519723892211914
    10. ' a' → logprob: -8.519723892211914

Token 51: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.05230364203453064
    2. 'liste' → logprob: -3.8023035526275635
    3. ' tableau' → logprob: -4.052303791046143
    4. ' list' → logprob: -5.052303791046143
    5. ' table' → logprob: -6.677303791046143
    6. 's' → logprob: -7.052303791046143
    7. 'list' → logprob: -7.802303791046143
    8. 'table' → logprob: -8.052303314208984
    9. ' chaîne' → logprob: -8.427303314208984
    10. ' split' → logprob: -8.552303314208984

Token 52: ' résult' (ID: 31657)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06900616735219955
    2. '
' → logprob: -3.4440062046051025
    3. '\n' → logprob: -3.6940062046051025
    4. '    
' → logprob: -5.319005966186523
    5. '\' → logprob: -5.944005966186523
    6. '```' → logprob: -7.569005966186523
    7. '   
' → logprob: -8.069005966186523
    8. '"\' → logprob: -8.069005966186523
    9. '  
' → logprob: -8.569005966186523
    10. 'n' → logprob: -8.694005966186523

Token 53: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.0004192330234218389
    2. 'ant' → logprob: -7.8754191398620605
    3. ']' → logprob: -11.375419616699219
    4. 'ate' → logprob: -11.625419616699219
    5. 'at' → logprob: -12.375419616699219
    6. ' ante' → logprob: -12.750419616699219
    7. '[]' → logprob: -13.125419616699219
    8. '```' → logprob: -13.375419616699219
    9. '   ' → logprob: -13.625419616699219
    10. ')' → logprob: -13.750419616699219

Token 54: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049518782645463943
    2. '
' → logprob: -3.1745188236236572
    3. '```' → logprob: -6.174518585205078
    4. '    
' → logprob: -6.299518585205078
    5. '\n' → logprob: -6.299518585205078
    6. '  
' → logprob: -8.799518585205078
    7. '\' → logprob: -8.924518585205078
    8. '   
' → logprob: -9.299518585205078
    9. ':' → logprob: -9.924518585205078
    10. 'n' → logprob: -10.174518585205078

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1019313782453537
    2. '"""' → logprob: -2.47693133354187
    3. '```' → logprob: -5.101931571960449
    4. '"""
' → logprob: -5.226931571960449
    5. '"' → logprob: -6.976931571960449
    6. '""' → logprob: -7.976931571960449
    7. '
' → logprob: -9.85193157196045
    8. ' """' → logprob: -10.10193157196045
    9. '`' → logprob: -10.72693157196045
    10. ' """
' → logprob: -10.72693157196045

Token 56: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12114568054676056
    2. '"""' → logprob: -2.371145725250244
    3. '"""
' (adapté à ' """
') → logprob: -4.121145725250244
    4. '```' → logprob: -5.621145725250244
    5. '""' → logprob: -7.871145725250244
    6. '
' → logprob: -8.621145248413086
    7. '"' → logprob: -9.371145248413086
    8. '\n' → logprob: -9.496145248413086
    9. '    
' → logprob: -9.746145248413086
    10. ' """
' → logprob: -10.996145248413086

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05324672907590866
    2. '
' → logprob: -3.4282467365264893
    3. '\n' → logprob: -4.67824649810791
    4. 'input' → logprob: -5.42824649810791
    5. 'user' → logprob: -6.05324649810791
    6. '    
' → logprob: -6.55324649810791
    7. 'n' → logprob: -7.30324649810791
    8. '\' → logprob: -7.80324649810791
    9. '```' → logprob: -8.17824649810791
    10. 'return' → logprob: -8.55324649810791

Token 58: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2992188036441803
    2. 'input' → logprob: -2.0492188930511475
    3. 'user' → logprob: -2.1742188930511475
    4. 'text' → logprob: -5.174218654632568
    5. 'chaine' → logprob: -5.924218654632568
    6. 's' → logprob: -6.549218654632568
    7. 'n' → logprob: -6.674218654632568
    8. 'string' → logprob: -6.674218654632568
    9. 'return' → logprob: -7.674218654632568
    10. 'try' → logprob: -7.674218654632568

Token 59: ' Dem' (ID: 9458)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0169833898544312
    2. 'user' → logprob: -1.2669833898544312
    3. ' input' → logprob: -2.0169835090637207
    4. ' user' → logprob: -2.5169835090637207
    5. 'chaine' → logprob: -2.6419835090637207
    6. 'text' → logprob: -3.8919835090637207
    7. '   ' → logprob: -4.016983509063721
    8. 'string' → logprob: -4.391983509063721
    9. 's' → logprob: -5.016983509063721
    10. ' text' → logprob: -5.391983509063721

Token 60: 'ander' (ID: 9330)
  Prédit: 'ande'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ande' → logprob: -0.32656335830688477
    2. 'a' → logprob: -1.4515633583068848
    3. 'an' → logprob: -4.076563358306885
    4. '   ' → logprob: -4.201563358306885
    5. 'and' → logprob: -5.451563358306885
    6. 'ade' → logprob: -6.326563358306885
    7. 'ander' → logprob: -7.076563358306885
    8. ' ' → logprob: -7.201563358306885
    9. '       ' → logprob: -7.201563358306885
    10. 'e' → logprob: -7.576563358306885

Token 61: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.787719190120697
    2. '   ' → logprob: -1.4127192497253418
    3. ' une' → logprob: -2.537719249725342
    4. 'user' → logprob: -3.037719249725342
    5. ' user' → logprob: -3.412719249725342
    6. ' l' → logprob: -3.537719249725342
    7. ' la' → logprob: -4.162719249725342
    8. ' a' → logprob: -4.412719249725342
    9. ' un' → logprob: -4.412719249725342
    10. 'input' → logprob: -4.412719249725342

Token 62: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6952468752861023
    2. ' l' → logprob: -0.6952468752861023
    3. 'user' → logprob: -7.070246696472168
    4. 's' → logprob: -7.945246696472168
    5. ' ' → logprob: -8.195246696472168
    6. ' utilisateur' → logprob: -8.695246696472168
    7. ' user' → logprob: -9.070246696472168
    8. 'input' → logprob: -9.320246696472168
    9. 'util' → logprob: -10.445246696472168
    10. ' input' → logprob: -10.570246696472168

Token 63: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.09024276584386826
    2. 'util' → logprob: -2.590242862701416
    3. ' utilisateur' → logprob: -5.340242862701416
    4. '_util' → logprob: -5.840242862701416
    5. '’utilisateur' → logprob: -6.215242862701416
    6. 'u' → logprob: -7.090242862701416
    7. 'user' → logprob: -7.840242862701416
    8. ''util' → logprob: -8.965242385864258
    9. ''user' → logprob: -9.590242385864258
    10. ''' → logprob: -9.715242385864258

Token 64: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5318161845207214
    2. 's' → logprob: -2.031816244125366
    3. 'input' → logprob: -2.031816244125366
    4. 'user' → logprob: -4.156816005706787
    5. ' une' → logprob: -4.156816005706787
    6. ' =' → logprob: -4.281816005706787
    7. 'chaine' → logprob: -4.656816005706787
    8. ' à' → logprob: -4.781816005706787
    9. ' de' → logprob: -4.781816005706787
    10. 'de' → logprob: -4.781816005706787

Token 65: ' saisir' (ID: 152120)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20863844454288483
    2. 's' → logprob: -2.3336384296417236
    3. ' input' → logprob: -2.7086384296417236
    4. ' saisir' → logprob: -3.7086384296417236
    5. 'entr' → logprob: -9.833638191223145
    6. ' entrer' → logprob: -10.083638191223145
    7. ' s' → logprob: -10.208638191223145
    8. ' sais' → logprob: -10.708638191223145
    9. ' ' → logprob: -11.083638191223145
    10. '=input' → logprob: -11.083638191223145

Token 66: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.05363423749804497
    2. 'une' → logprob: -3.1786341667175293
    3. ' un' → logprob: -5.428634166717529
    4. ' la' → logprob: -5.928634166717529
    5. '   ' → logprob: -7.178634166717529
    6. ' ' → logprob: -7.303634166717529
    7. 'chaine' → logprob: -7.928634166717529
    8. 'un' → logprob: -8.053634643554688
    9. 'a' → logprob: -8.178634643554688
    10. ' a' → logprob: -8.428634643554688

Token 67: ' chaîne' (ID: 89288)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.3079929053783417
    2. 'chaine' → logprob: -1.682992935180664
    3. ' chaîne' → logprob: -2.557992935180664
    4. ' chaine' → logprob: -7.432992935180664
    5. 's' → logprob: -7.682992935180664
    6. 'string' → logprob: -7.807992935180664
    7. ' cha' → logprob: -9.682992935180664
    8. ' ' → logprob: -9.807992935180664
    9. 'ch' → logprob: -10.182992935180664
    10. 'phrase' → logprob: -10.182992935180664

Token 68: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9609422087669373
    2. 'de' → logprob: -1.585942268371582
    3. 's' → logprob: -1.835942268371582
    4. '   ' → logprob: -1.835942268371582
    5. 'd' → logprob: -3.960942268371582
    6. 'input' → logprob: -4.210942268371582
    7. 'user' → logprob: -4.210942268371582
    8. 'chaine' → logprob: -4.335942268371582
    9. ' ' → logprob: -4.960942268371582
    10. ' s' → logprob: -5.210942268371582

Token 69: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.002878222381696105
    2. ' caractères' → logprob: -5.877878189086914
    3. ' caracteres' → logprob: -10.877878189086914
    4. ' car' → logprob: -11.002878189086914
    5. ' caract' → logprob: -11.752878189086914
    6. ' ' → logprob: -11.877878189086914
    7. 'care' → logprob: -12.502878189086914
    8. 'char' → logprob: -12.627878189086914
    9. 'chars' → logprob: -12.877878189086914
    10. 'c' → logprob: -12.877878189086914

Token 70: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007070539984852076
    2. '\n' → logprob: -5.882070541381836
    3. 'user' → logprob: -6.257070541381836
    4. 'input' → logprob: -7.257070541381836
    5. '    
' → logprob: -7.257070541381836
    6. 'n' → logprob: -7.632070541381836
    7. 's' → logprob: -8.757070541381836
    8. '\' → logprob: -9.382070541381836
    9. 'chaine' → logprob: -10.257070541381836
    10. ' user' → logprob: -10.757070541381836

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030642226338386536
    2. 'n' → logprob: -6.878064155578613
    3. '    
' → logprob: -7.378064155578613
    4. 'input' → logprob: -7.753064155578613
    5. 'user' → logprob: -8.003064155578613
    6. 's' → logprob: -8.378064155578613
    7. '\n' → logprob: -9.253064155578613
    8. 'chaine' → logprob: -9.628064155578613
    9. '\' → logprob: -10.253064155578613
    10. '    ' → logprob: -10.378064155578613

Token 72: ' a' (ID: 261)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.2357872724533081
    2. 'input' → logprob: -2.1107873916625977
    3. 'chaine' → logprob: -3.2357873916625977
    4. 'text' → logprob: -3.9857873916625977
    5. ' user' → logprob: -4.360787391662598
    6. 's' → logprob: -4.860787391662598
    7. 'string' → logprob: -5.235787391662598
    8. ' input' → logprob: -5.985787391662598
    9. 'texte' → logprob: -7.110787391662598
    10. 'sentence' → logprob: -7.360787391662598

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12626880407333374
    2. '=' → logprob: -2.2512688636779785
    3. ' ' → logprob: -4.7512688636779785
    4. 'r' → logprob: -6.1262688636779785
    5. '=input' → logprob: -6.7512688636779785
    6. 's' → logprob: -7.2512688636779785
    7. 't' → logprob: -8.37626838684082
    8. 'd' → logprob: -9.50126838684082
    9. 'input' → logprob: -9.75126838684082
    10. 'n' → logprob: -10.00126838684082

Token 74: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4740796387195587
    2. ' input' → logprob: -0.9740796089172363
    3. '=input' → logprob: -13.599080085754395
    4. '(input' → logprob: -14.349080085754395
    5. '	input' → logprob: -14.599080085754395
    6. ' ' → logprob: -16.474079132080078
    7. '<input' → logprob: -16.599079132080078
    8. ' ' → logprob: -16.849079132080078
    9. 'str' → logprob: -17.599079132080078
    10. 's' → logprob: -17.849079132080078

Token 75: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014497945085167885
    2. '("("' → logprob: -4.389497756958008
    3. '('' → logprob: -6.264497756958008
    4. '(
' → logprob: -10.764497756958008
    5. '("' → logprob: -11.139497756958008
    6. '("(' → logprob: -11.139497756958008
    7. '("")' → logprob: -11.889497756958008
    8. '("""' → logprob: -12.139497756958008
    9. '()' → logprob: -12.264497756958008
    10. '(`' → logprob: -12.264497756958008

Token 76: 'Veuillez' (ID: 195510)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5155476331710815
    2. 'Ent' → logprob: -1.2655476331710815
    3. '"' → logprob: -3.015547752380371
    4. 'chaine' → logprob: -3.765547752380371
    5. ')' → logprob: -4.140547752380371
    6. 's' → logprob: -4.515547752380371
    7. 'ent' → logprob: -5.515547752380371
    8. 'Enter' → logprob: -5.640547752380371
    9. 'Veuillez' → logprob: -5.765547752380371
    10. '">' → logprob: -6.265547752380371

Token 77: ' saisir' (ID: 152120)
  Prédit: ' saisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saisir' → logprob: -0.04393225908279419
    2. ' entrer' → logprob: -3.1689321994781494
    3. ' ' → logprob: -7.4189324378967285
    4. 's' → logprob: -8.91893196105957
    5. ' sais' → logprob: -9.41893196105957
    6. ' taper' → logprob: -10.54393196105957
    7. ' sa' → logprob: -10.91893196105957
    8. ' rentrer' → logprob: -10.91893196105957
    9. ' ' → logprob: -11.29393196105957
    10. 'entr' → logprob: -11.79393196105957

Token 78: ' des' (ID: 731)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.03236337751150131
    2. ' la' → logprob: -4.032363414764404
    3. 'une' → logprob: -5.157363414764404
    4. ' votre' → logprob: -5.532363414764404
    5. ' ' → logprob: -6.282363414764404
    6. 'la' → logprob: -7.032363414764404
    7. ' ' → logprob: -7.407363414764404
    8. 'chaine' → logprob: -8.782362937927246
    9. 'a' → logprob: -8.907362937927246
    10. 'v' → logprob: -9.032362937927246

Token 79: ' mots' (ID: 38338)
  Prédit: ' mots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mots' → logprob: -0.01730789802968502
    2. ' chaînes' → logprob: -4.517307758331299
    3. ' ' → logprob: -6.017307758331299
    4. ' caractères' → logprob: -6.392307758331299
    5. ' mot' → logprob: -7.267307758331299
    6. ' éléments' → logprob: -7.517307758331299
    7. ' phrases' → logprob: -8.642308235168457
    8. 'mot' → logprob: -8.767308235168457
    9. ' espaces' → logprob: -8.892308235168457
    10. '   ' → logprob: -9.892308235168457

Token 80: ' sépar' (ID: 97160)
  Prédit: ' sépar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sépar' → logprob: -0.038942642509937286
    2. ' :' → logprob: -4.038942813873291
    3. ' ' → logprob: -4.288942813873291
    4. ':' → logprob: -5.413942813873291
    5. 's' → logprob: -7.788942813873291
    6. ' ")' → logprob: -8.038942337036133
    7. ',' → logprob: -8.288942337036133
    8. ' separated' → logprob: -8.288942337036133
    9. ' separados' → logprob: -8.288942337036133
    10. ' ' → logprob: -8.413942337036133

Token 81: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.002490045502781868
    2. 'é' → logprob: -6.002490043640137
    3. 'ès' → logprob: -12.002490043640137
    4. 'es' → logprob: -12.377490043640137
    5. 'ées' → logprob: -13.627490043640137
    6. ' ' → logprob: -14.877490043640137
    7. ' par' → logprob: -14.877490043640137
    8. 's' → logprob: -15.002490043640137
    9. 'ÉS' → logprob: -15.252490043640137
    10. 'er' → logprob: -15.502490043640137

Token 82: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.03850753232836723
    2. 'par' → logprob: -3.2885074615478516
    3. '<|end|>' → logprob: -7.913507461547852
    4. ' by' → logprob: -10.913507461547852
    5. ' ' → logprob: -11.163507461547852
    6. '_par' → logprob: -11.288507461547852
    7. '(par' → logprob: -11.538507461547852
    8. ' espaces' → logprob: -11.663507461547852
    9. '```' → logprob: -12.038507461547852
    10. '	par' → logprob: -12.038507461547852

Token 83: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3147355318069458
    2. ' un' → logprob: -1.5647355318069458
    3. ' espaces' → logprob: -3.5647354125976562
    4. 'des' → logprob: -3.6897354125976562
    5. 'un' → logprob: -5.564735412597656
    6. ' espace' → logprob: -6.189735412597656
    7. ' ' → logprob: -7.439735412597656
    8. 'es' → logprob: -7.939735412597656
    9. 'spaces' → logprob: -8.814735412597656
    10. ' ' → logprob: -9.189735412597656

Token 84: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.24889187514781952
    2. 'spaces' → logprob: -1.873891830444336
    3. 'space' → logprob: -3.123891830444336
    4. 'paces' → logprob: -5.248891830444336
    5. ''espace' → logprob: -5.373891830444336
    6. ' spaces' → logprob: -5.623891830444336
    7. ' espace' → logprob: -6.123891830444336
    8. 's' → logprob: -6.123891830444336
    9. 'es' → logprob: -6.748891830444336
    10. 'esp' → logprob: -6.748891830444336

Token 85: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3905857503414154
    2. '")' → logprob: -1.3905857801437378
    3. ' :' → logprob: -2.7655856609344482
    4. ')' → logprob: -4.890585899353027
    5. '')' → logprob: -6.390585899353027
    6. '\"' → logprob: -7.515585899353027
    7. '\")' → logprob: -7.515585899353027
    8. '"' → logprob: -8.140585899353027
    9. '\":' → logprob: -8.265585899353027
    10. '):' → logprob: -8.390585899353027

Token 86: ' ")

' (ID: 154069)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0003863438032567501
    2. '")
' → logprob: -8.500386238098145
    3. ' ")' → logprob: -9.000386238098145
    4. ')' → logprob: -10.250386238098145
    5. '"' → logprob: -11.250386238098145
    6. '")
' → logprob: -12.000386238098145
    7. 'a' → logprob: -13.250386238098145
    8. '')' → logprob: -13.875386238098145
    9. '")

' → logprob: -14.375386238098145
    10. ')")' → logprob: -14.750386238098145

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5729841589927673
    2. '    
' → logprob: -1.572984218597412
    3. '
' → logprob: -1.822984218597412
    4. '\n' → logprob: -4.072984218597412
    5. '\' → logprob: -4.822984218597412
    6. 'tokens' → logprob: -4.822984218597412
    7. '   
' → logprob: -4.947984218597412
    8. '  
' → logprob: -5.072984218597412
    9. '.split' → logprob: -5.072984218597412
    10. '```' → logprob: -5.697984218597412

Token 88: ' #' (ID: 1069)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.9623763561248779
    2. 'tokens' → logprob: -1.837376356124878
    3. '    
' → logprob: -2.087376356124878
    4. '   ' → logprob: -2.337376356124878
    5. 'm' → logprob: -2.712376356124878
    6. 'b' → logprob: -2.837376356124878
    7. 'parts' → logprob: -2.837376356124878
    8. '
' → logprob: -4.462376594543457
    9. 'elements' → logprob: -4.462376594543457
    10. '```' → logprob: -4.712376594543457

Token 89: ' Sé' (ID: 53058)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'words' → logprob: -1.039400577545166
    2. 'parts' → logprob: -1.664400577545166
    3. 'm' → logprob: -1.789400577545166
    4. 'elements' → logprob: -2.414400577545166
    5. '#' → logprob: -3.039400577545166
    6. ' parts' → logprob: -3.414400577545166
    7. 'lst' → logprob: -4.039400577545166
    8. ' mots' → logprob: -4.039400577545166
    9. 'split' → logprob: -4.039400577545166
    10. ' words' → logprob: -4.164400577545166

Token 90: 'parer' (ID: 48041)
  Prédit: 'parer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parer' → logprob: -0.01597513258457184
    2. 'pare' → logprob: -4.640974998474121
    3. 'par' → logprob: -5.265974998474121
    4. '   ' → logprob: -8.515974998474121
    5. 'pa' → logprob: -8.515974998474121
    6. 'paration' → logprob: -9.015974998474121
    7. 'para' → logprob: -9.265974998474121
    8. 'paren' → logprob: -9.890974998474121
    9. '       ' → logprob: -10.015974998474121
    10. 'p' → logprob: -10.140974998474121

Token 91: ' la' (ID: 557)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.22630636394023895
    2. ' la' → logprob: -2.351306438446045
    3. 'a' → logprob: -2.476306438446045
    4. ' les' → logprob: -4.351306438446045
    5. '   ' → logprob: -5.101306438446045
    6. 's' → logprob: -6.976306438446045
    7. ' the' → logprob: -7.726306438446045
    8. 'la' → logprob: -7.851306438446045
    9. ' le' → logprob: -7.976306438446045
    10. 'les' → logprob: -8.101305961608887

Token 92: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.7399596571922302
    2. 'a' → logprob: -1.614959716796875
    3. ' chaîne' → logprob: -1.739959716796875
    4. 'cha' → logprob: -1.989959716796875
    5. ' a' → logprob: -5.114959716796875
    6. ' chaine' → logprob: -5.989959716796875
    7. 'chain' → logprob: -6.489959716796875
    8. ' chaînes' → logprob: -7.739959716796875
    9. 'string' → logprob: -7.864959716796875
    10. '   ' → logprob: -8.114959716796875

Token 93: ' sais' (ID: 30010)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.446683794260025
    2. 'a' → logprob: -2.446683883666992
    3. 's' → logprob: -2.696683883666992
    4. 'tokens' → logprob: -2.821683883666992
    5. ' en' → logprob: -3.446683883666992
    6. 'en' → logprob: -3.446683883666992
    7. ' a' → logprob: -4.071683883666992
    8. ' =' → logprob: -4.446683883666992
    9. 'b' → logprob: -4.571683883666992
    10. ' par' → logprob: -5.196683883666992

Token 94: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.008390454575419426
    2. 'i' → logprob: -5.758390426635742
    3. 'is' → logprob: -6.383390426635742
    4. 'rie' → logprob: -6.383390426635742
    5. 'e' → logprob: -7.383390426635742
    6. ' ie' → logprob: -7.883390426635742
    7. 'lie' → logprob: -8.883390426635742
    8. 'r' → logprob: -9.508390426635742
    9. 'ir' → logprob: -9.633390426635742
    10. 'ies' → logprob: -9.633390426635742

Token 95: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03545442223548889
    2. ' en' → logprob: -4.535454273223877
    3. 'en' → logprob: -5.035454273223877
    4. ' par' → logprob: -5.160454273223877
    5. 'a' → logprob: -5.910454273223877
    6. 's' → logprob: -6.285454273223877
    7. 'tokens' → logprob: -6.285454273223877
    8. '    
' → logprob: -6.410454273223877
    9. 'par' → logprob: -6.660454273223877
    10. ' =' → logprob: -7.785454273223877

Token 96: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.13726890087127686
    2. 'une' → logprob: -3.2622690200805664
    3. ' liste' → logprob: -3.7622690200805664
    4. ' espaces' → logprob: -3.8872690200805664
    5. ' mots' → logprob: -4.512269020080566
    6. 'liste' → logprob: -4.762269020080566
    7. ' des' → logprob: -5.137269020080566
    8. ' utilisant' → logprob: -5.387269020080566
    9. ' un' → logprob: -5.637269020080566
    10. ' a' → logprob: -5.762269020080566

Token 97: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.3898800015449524
    2. 'liste' → logprob: -1.1398799419403076
    3. 'list' → logprob: -6.014880180358887
    4. ' list' → logprob: -8.639880180358887
    5. 's' → logprob: -8.764880180358887
    6. '   ' → logprob: -10.389880180358887
    7. 'Liste' → logprob: -10.389880180358887
    8. ' ' → logprob: -10.389880180358887
    9. ' listes' → logprob: -10.639880180358887
    10. 'l' → logprob: -10.764880180358887

Token 98: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5519176721572876
    2. '   ' → logprob: -1.1769176721572876
    3. 'a' → logprob: -2.676917552947998
    4. '=' → logprob: -3.551917552947998
    5. 's' → logprob: -5.926917552947998
    6. 'words' → logprob: -5.926917552947998
    7. 'tokens' → logprob: -5.926917552947998
    8. '_a' → logprob: -6.426917552947998
    9. 'm' → logprob: -6.551917552947998
    10. 'b' → logprob: -6.676917552947998

Token 99: ' mots' (ID: 38338)
  Prédit: ' mots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mots' → logprob: -0.10106287896633148
    2. 'm' → logprob: -2.726062774658203
    3. ' chaînes' → logprob: -3.601062774658203
    4. ' chain' → logprob: -6.601062774658203
    5. 'mot' → logprob: -7.601062774658203
    6. 'str' → logprob: -7.851062774658203
    7. 'cha' → logprob: -8.351062774658203
    8. 'chain' → logprob: -8.476062774658203
    9. ' strings' → logprob: -9.351062774658203
    10. 'strings' → logprob: -9.351062774658203

Token 100: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004827157128602266
    2. '    
' → logprob: -5.62982702255249
    3. '
' → logprob: -6.75482702255249
    4. '  
' → logprob: -11.629827499389648
    5. 'words' → logprob: -11.629827499389648
    6. '   
' → logprob: -11.754827499389648
    7. 'b' → logprob: -11.879827499389648
    8. 'a' → logprob: -12.129827499389648
    9. 's' → logprob: -12.129827499389648
    10. '```' → logprob: -12.629827499389648

Token 101: ' déc' (ID: 8498)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025009866803884506
    2. 'm' → logprob: -7.127501010894775
    3. ' mots' → logprob: -7.252501010894775
    4. 'words' → logprob: -7.502501010894775
    5. '    
' → logprob: -8.377500534057617
    6. '```' → logprob: -9.752500534057617
    7. ' words' → logprob: -9.877500534057617
    8. 'b' → logprob: -10.127500534057617
    9. 'tokens' → logprob: -11.377500534057617
    10. 's' → logprob: -12.127500534057617

Token 102: 'oup' (ID: 9999)
  Prédit: 'oup'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oup' → logprob: -0.4716112017631531
    2. 'omp' → logprob: -2.096611261367798
    3. '```' → logprob: -2.846611261367798
    4. 'oupe' → logprob: -3.096611261367798
    5. 'al' → logprob: -3.346611261367798
    6. 'ou' → logprob: -3.346611261367798
    7. 'up' → logprob: -3.846611261367798
    8. 'id' → logprob: -4.471611022949219
    9. 'om' → logprob: -5.096611022949219
    10. 'ales' → logprob: -5.221611022949219

Token 103: 'és' (ID: 1756)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.5825338363647461
    2. 'ée' → logprob: -0.9575338363647461
    3. 'er' → logprob: -3.582533836364746
    4. 'é' → logprob: -3.832533836364746
    5. 'és' → logprob: -5.332533836364746
    6. 'e' → logprob: -6.457533836364746
    7. 'ee' → logprob: -7.957533836364746
    8. '```' → logprob: -8.332533836364746
    9. 'ées' → logprob: -8.332533836364746
    10. ' é' → logprob: -8.457533836364746

Token 104: ' sur' (ID: 1512)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.7233458161354065
    2. ' par' → logprob: -0.8483458161354065
    3. '()' → logprob: -3.0983457565307617
    4. ' =' → logprob: -4.848345756530762
    5. 'a' → logprob: -4.973345756530762
    6. '=' → logprob: -5.598345756530762
    7. 'avec' → logprob: -5.723345756530762
    8. 'au' → logprob: -5.848345756530762
    9. 'sur' → logprob: -5.848345756530762
    10. ' avec' → logprob: -5.848345756530762

Token 105: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5162479281425476
    2. ' les' → logprob: -1.8912479877471924
    3. ''' → logprob: -2.0162479877471924
    4. '"' → logprob: -2.5162479877471924
    5. 'l' → logprob: -4.141247749328613
    6. ''esp' → logprob: -5.766247749328613
    7. ''espace' → logprob: -5.891247749328613
    8. 'es' → logprob: -6.141247749328613
    9. ' des' → logprob: -6.141247749328613
    10. 'des' → logprob: -6.266247749328613

Token 106: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.2742796838283539
    2. ' espaces' → logprob: -1.7742797136306763
    3. ''esp' → logprob: -2.7742795944213867
    4. 'es' → logprob: -5.024279594421387
    5. 'spaces' → logprob: -7.399279594421387
    6. '"' → logprob: -8.149279594421387
    7. ''espace' → logprob: -8.149279594421387
    8. '’esp' → logprob: -9.649279594421387
    9. ''' → logprob: -10.899279594421387
    10. ' espace' → logprob: -12.524279594421387

Token 107: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010344655252993107
    2. '    
' → logprob: -5.135344505310059
    3. '
' → logprob: -5.635344505310059
    4. 'b' → logprob: -8.135344505310059
    5. 'words' → logprob: -8.510344505310059
    6. 'a' → logprob: -9.510344505310059
    7. '[' → logprob: -10.135344505310059
    8. 'm' → logprob: -10.385344505310059
    9. '  
' → logprob: -10.385344505310059
    10. '   
' → logprob: -10.510344505310059

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034235394559800625
    2. '    
' → logprob: -6.003423690795898
    3. '
' → logprob: -7.253423690795898
    4. 'words' → logprob: -9.003423690795898
    5. 'b' → logprob: -10.128423690795898
    6. 'm' → logprob: -10.253423690795898
    7. ' mots' → logprob: -12.128423690795898
    8. '   
' → logprob: -12.253423690795898
    9. '  
' → logprob: -12.378423690795898
    10. 'a' → logprob: -12.378423690795898

Token 109: ' aa' (ID: 40260)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.893831193447113
    2. ' mots' → logprob: -1.5188312530517578
    3. ' words' → logprob: -1.7688312530517578
    4. 'words' → logprob: -2.393831253051758
    5. '    
' → logprob: -3.018831253051758
    6. 'm' → logprob: -3.143831253051758
    7. 'b' → logprob: -4.893831253051758
    8. ' b' → logprob: -6.018831253051758
    9. ' m' → logprob: -6.768831253051758
    10. '
' → logprob: -6.893831253051758

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519461214542389
    2. '=' → logprob: -1.5019460916519165
    3. 'a' → logprob: -11.251946449279785
    4. '=a' → logprob: -13.001946449279785
    5. ' ' → logprob: -13.876946449279785
    6. 's' → logprob: -15.001946449279785
    7. ' a' → logprob: -15.876946449279785
    8. ')' → logprob: -16.50194549560547
    9. '.' → logprob: -16.75194549560547
    10. ',' → logprob: -16.87694549560547

Token 111: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2519291639328003
    2. ' a' → logprob: -1.5019291639328003
    3. '	a' → logprob: -16.001928329467773
    4. ' ' → logprob: -19.876928329467773
    5. '_a' → logprob: -19.876928329467773
    6. ' ' → logprob: -20.251928329467773
    7. 'A' → logprob: -21.376928329467773
    8. '"a' → logprob: -21.501928329467773
    9. '   ' → logprob: -21.751928329467773
    10. '[a' → logprob: -21.751928329467773

Token 112: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.1617283970117569
    2. '.' → logprob: -1.9117283821105957
    3. ' .' → logprob: -6.661728382110596
    4. '.strip' → logprob: -8.411728858947754
    5. 'split' → logprob: -14.036728858947754
    6. '.s' → logprob: -14.536728858947754
    7. '.Split' → logprob: -14.661728858947754
    8. ' split' → logprob: -16.161727905273438
    9. '   ' → logprob: -16.911727905273438
    10. '.
' → logprob: -17.536727905273438

Token 113: '()

' (ID: 5874)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.15393465757369995
    2. '()' → logprob: -2.6539347171783447
    3. '("' → logprob: -3.1539347171783447
    4. '(' → logprob: -3.5289347171783447
    5. '("("' → logprob: -8.278934478759766
    6. ''' → logprob: -11.528934478759766
    7. '("")' → logprob: -12.903934478759766
    8. '(None' → logprob: -13.028934478759766
    9. '()"' → logprob: -13.153934478759766
    10. '('.')' → logprob: -13.528934478759766

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03723473846912384
    2. 'if' → logprob: -4.037234783172607
    3. '    
' → logprob: -4.787234783172607
    4. ' if' → logprob: -5.162234783172607
    5. '
' → logprob: -5.662234783172607
    6. '  
' → logprob: -8.16223430633545
    7. 'print' → logprob: -8.28723430633545
    8. '\n' → logprob: -8.41223430633545
    9. '[' → logprob: -8.66223430633545
    10. 'return' → logprob: -8.78723430633545

Token 115: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1497337967157364
    2. 'if' → logprob: -2.899733781814575
    3. 'print' → logprob: -3.274733781814575
    4. '
' → logprob: -3.399733781814575
    5. ' if' → logprob: -4.649734020233154
    6. '    
' → logprob: -6.399734020233154
    7. 'return' → logprob: -6.774734020233154
    8. ' print' → logprob: -8.649733543395996
    9. ' return' → logprob: -9.649733543395996
    10. '```' → logprob: -10.024733543395996

Token 116: ' Con' (ID: 1532)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.173972025513649
    2. ' if' → logprob: -2.0489721298217773
    3. 'print' → logprob: -3.5489721298217773
    4. '#' → logprob: -7.173972129821777
    5. 'result' → logprob: -7.298972129821777
    6. ' print' → logprob: -7.673972129821777
    7. 'try' → logprob: -10.173972129821777
    8. 'return' → logprob: -10.423972129821777
    9. '   ' → logprob: -10.548972129821777
    10. ' result' → logprob: -10.798972129821777

Token 117: 'cat' (ID: 8837)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04509635642170906
    2. 'if' → logprob: -3.5450963973999023
    3. '       ' → logprob: -5.420096397399902
    4. 'cat' → logprob: -5.670096397399902
    5. '```' → logprob: -6.295096397399902
    6. 's' → logprob: -6.670096397399902
    7. 'st' → logprob: -7.295096397399902
    8. '    ' → logprob: -7.420096397399902
    9. 'c' → logprob: -7.420096397399902
    10. ' if' → logprob: -7.795096397399902

Token 118: 'é' (ID: 377)
  Prédit: 'atenate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atenate' → logprob: -0.6073266863822937
    2. 'en' → logprob: -2.1073267459869385
    3. 'én' → logprob: -2.2323267459869385
    4. 'é' → logprob: -2.4823267459869385
    5. 'ate' → logprob: -2.6073267459869385
    6. 'ène' → logprob: -4.357326507568359
    7. 'ener' → logprob: -4.857326507568359
    8. 'aten' → logprob: -4.857326507568359
    9. '   ' → logprob: -4.982326507568359
    10. 'éné' → logprob: -5.357326507568359

Token 119: 'ner' (ID: 1247)
  Prédit: 'ner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.050497591495513916
    2. 'n' → logprob: -3.050497531890869
    3. 'na' → logprob: -7.425497531890869
    4. 'nner' → logprob: -7.675497531890869
    5. 'nation' → logprob: -7.800497531890869
    6. 'nier' → logprob: -8.800498008728027
    7. 'né' → logprob: -9.425498008728027
    8. 'ne' → logprob: -10.175498008728027
    9. 'naa' → logprob: -10.550498008728027
    10. 'nader' → logprob: -10.675498008728027

Token 120: ' le' (ID: 505)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.0008205882040783763
    2. ' aa' → logprob: -7.750820636749268
    3. '(' → logprob: -7.875820636749268
    4. 'aaa' → logprob: -12.12582015991211
    5. 'print' → logprob: -12.75082015991211
    6. 'str' → logprob: -14.75082015991211
    7. 'AA' → logprob: -15.12582015991211
    8. 'a' → logprob: -15.37582015991211
    9. '#aa' → logprob: -15.87582015991211
    10. '   ' → logprob: -16.00082015991211

Token 121: ' deuxième' (ID: 51664)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.012761554680764675
    2. ' aa' → logprob: -5.01276159286499
    3. 'de' → logprob: -6.01276159286499
    4. '1' → logprob: -6.63776159286499
    5. 'second' → logprob: -7.51276159286499
    6. ' second' → logprob: -7.88776159286499
    7. '2' → logprob: -8.012761116027832
    8. ' ' → logprob: -8.137761116027832
    9. ' deuxième' → logprob: -8.637761116027832
    10. '```' → logprob: -8.762761116027832

Token 122: ' élément' (ID: 99627)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.2557851076126099
    2. 'élé' → logprob: -1.3807851076126099
    3. 'aa' → logprob: -1.6307851076126099
    4. 'element' → logprob: -2.2557849884033203
    5. ' élément' → logprob: -2.7557849884033203
    6. ' aa' → logprob: -3.3807849884033203
    7. ' element' → logprob: -4.50578498840332
    8. 'lement' → logprob: -4.63078498840332
    9. ' and' → logprob: -4.75578498840332
    10. ' ' → logprob: -5.00578498840332

Token 123: ' (' (ID: 350)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1087205559015274
    2. ' +' → logprob: -2.858720541000366
    3. '[' → logprob: -3.108720541000366
    4. '"' → logprob: -8.358720779418945
    5. ']' → logprob: -8.608720779418945
    6. 'aa' → logprob: -8.858720779418945
    7. '[::-' → logprob: -9.483720779418945
    8. '```' → logprob: -9.858720779418945
    9. ')' → logprob: -10.233720779418945
    10. ',' → logprob: -10.233720779418945

Token 124: 'indice' (ID: 176697)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20345252752304077
    2. 'aa' → logprob: -1.9534525871276855
    3. ' +' → logprob: -4.2034525871276855
    4. ' )' → logprob: -4.5784525871276855
    5. ' aa' → logprob: -4.8284525871276855
    6. '+' → logprob: -5.2034525871276855
    7. ',' → logprob: -7.5784525871276855
    8. '   ' → logprob: -8.078452110290527
    9. ')+' → logprob: -8.078452110290527
    10. ']' → logprob: -8.203452110290527

Token 125: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03183707222342491
    2. ' ' → logprob: -3.656836986541748
    3. ']' → logprob: -5.656836986541748
    4. ')' → logprob: -6.656836986541748
    5. '[' → logprob: -8.031837463378906
    6. '   ' → logprob: -8.656837463378906
    7. ' ]' → logprob: -9.531837463378906
    8. ' )' → logprob: -10.156837463378906
    9. ' [' → logprob: -10.406837463378906
    10. ' ' → logprob: -10.906837463378906

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015586663503199816
    2. ' ' → logprob: -6.501558780670166
    3. ')' → logprob: -10.376558303833008
    4. '   ' → logprob: -11.626558303833008
    5. ']' → logprob: -12.001558303833008
    6. '[' → logprob: -12.376558303833008
    7. '```' → logprob: -13.751558303833008
    8. '0' → logprob: -14.001558303833008
    9. '`' → logprob: -14.501558303833008
    10. '=' → logprob: -14.501558303833008

Token 127: ')' (ID: 8)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20490461587905884
    2. ')' → logprob: -1.829904556274414
    3. '+' → logprob: -3.954904556274414
    4. ' +' → logprob: -5.954904556274414
    5. ']+' → logprob: -6.329904556274414
    6. ' ]' → logprob: -7.704904556274414
    7. ' )' → logprob: -7.954904556274414
    8. '])' → logprob: -8.454904556274414
    9. ')+' → logprob: -9.329904556274414
    10. '   ' → logprob: -9.829904556274414

Token 128: ' et' (ID: 859)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6996698975563049
    2. ' +' → logprob: -0.6996698975563049
    3. ' et' → logprob: -5.19966983795166
    4. ' plus' → logprob: -8.44966983795166
    5. 'aa' → logprob: -8.69966983795166
    6. ' and' → logprob: -8.82466983795166
    7. 'et' → logprob: -9.57466983795166
    8. ' avec' → logprob: -9.69966983795166
    9. ',' → logprob: -9.82466983795166
    10. ' ' → logprob: -9.94966983795166

Token 129: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.31353330612182617
    2. ' le' → logprob: -1.3135333061218262
    3. 'l' → logprob: -9.938533782958984
    4. 'au' → logprob: -10.063533782958984
    5. ' premier' → logprob: -10.063533782958984
    6. 'prem' → logprob: -10.688533782958984
    7. ' ' → logprob: -10.813533782958984
    8. 'the' → logprob: -10.938533782958984
    9. '#' → logprob: -11.438533782958984
    10. ' the' → logprob: -11.563533782958984

Token 130: ' premier' (ID: 15506)
  Prédit: ' premier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premier' → logprob: -0.05585508793592453
    2. 'prem' → logprob: -2.9308550357818604
    3. '"' → logprob: -7.8058552742004395
    4. 'pr' → logprob: -9.180854797363281
    5. ' ' → logprob: -9.180854797363281
    6. ' first' → logprob: -9.805854797363281
    7. 's' → logprob: -9.805854797363281
    8. ' Premier' → logprob: -10.180854797363281
    9. 'Premier' → logprob: -10.680854797363281
    10. '   ' → logprob: -10.805854797363281

Token 131: ' élément' (ID: 99627)
  Prédit: ' élément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' élément' → logprob: -0.35425621271133423
    2. 'élé' → logprob: -1.6042561531066895
    3. ']' → logprob: -3.7292561531066895
    4. 'element' → logprob: -4.1042561531066895
    5. 'aa' → logprob: -4.8542561531066895
    6. ' element' → logprob: -4.8542561531066895
    7. ' aa' → logprob: -4.8542561531066895
    8. ' ' → logprob: -5.2292561531066895
    9. ' (' → logprob: -5.4792561531066895
    10. '"' → logprob: -5.7292561531066895

Token 132: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7563204169273376
    2. ' (' → logprob: -0.8813204169273376
    3. ' aa' → logprob: -3.0063204765319824
    4. 'aa' → logprob: -3.5063204765319824
    5. '   ' → logprob: -4.381320476531982
    6. '[' → logprob: -4.881320476531982
    7. '"' → logprob: -5.631320476531982
    8. ' ' → logprob: -5.756320476531982
    9. ')' → logprob: -6.506320476531982
    10. ' #' → logprob: -7.006320476531982

Token 133: 'indice' (ID: 176697)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10606048256158829
    2. ' ' → logprob: -2.35606050491333
    3. 'aa' → logprob: -6.10606050491333
    4. ')' → logprob: -6.60606050491333
    5. '1' → logprob: -6.85606050491333
    6. ' aa' → logprob: -7.48106050491333
    7. 'indice' → logprob: -8.231060028076172
    8. '[' → logprob: -9.356060028076172
    9. ' )' → logprob: -9.981060028076172
    10. '   ' → logprob: -9.981060028076172

Token 134: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5237913727760315
    2. '0' → logprob: -0.8987913727760315
    3. ')' → logprob: -7.648791313171387
    4. ' )' → logprob: -9.148791313171387
    5. '1' → logprob: -9.773791313171387
    6. ' ' → logprob: -12.023791313171387
    7. 's' → logprob: -12.523791313171387
    8. '2' → logprob: -12.648791313171387
    9. '[' → logprob: -13.211291313171387
    10. '```' → logprob: -13.523791313171387

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011728443205356598
    2. ' ' → logprob: -6.75117301940918
    3. ')' → logprob: -13.62617301940918
    4. '1' → logprob: -14.50117301940918
    5. '   ' → logprob: -15.37617301940918
    6. '```' → logprob: -15.62617301940918
    7. '`' → logprob: -16.06367301940918
    8. '[' → logprob: -16.68867301940918
    9. ' )' → logprob: -17.31367301940918
    10. '  ' → logprob: -17.37617301940918

Token 136: ')' (ID: 8)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13967549800872803
    2. ')' → logprob: -2.1396756172180176
    3. '])' → logprob: -5.139675617218018
    4. ']+' → logprob: -5.514675617218018
    5. ' ]' → logprob: -6.639675617218018
    6. ' )' → logprob: -7.514675617218018
    7. ')+' → logprob: -8.38967514038086
    8. '+' → logprob: -8.76467514038086
    9. ',' → logprob: -8.88967514038086
    10. ']
' → logprob: -10.01467514038086

Token 137: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6703483462333679
    2. '   ' → logprob: -1.1703484058380127
    3. 'aa' → logprob: -2.6703484058380127
    4. 'return' → logprob: -3.0453484058380127
    5. '
' → logprob: -4.170348167419434
    6. '+' → logprob: -4.545348167419434
    7. ',' → logprob: -4.795348167419434
    8. 'if' → logprob: -5.045348167419434
    9. ' return' → logprob: -5.295348167419434
    10. ' print' → logprob: -5.920348167419434

Token 138: ' la' (ID: 557)
  Prédit: ' aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aa' → logprob: -0.05862873047590256
    2. 'aa' → logprob: -3.058628797531128
    3. ' la' → logprob: -4.683628559112549
    4. 'la' → logprob: -7.683628559112549
    5. '#aa' → logprob: -9.433629035949707
    6. ' the' → logprob: -10.058629035949707
    7. 'a' → logprob: -10.433629035949707
    8. ' ' → logprob: -10.558629035949707
    9. 'l' → logprob: -10.683629035949707
    10. ' l' → logprob: -10.808629035949707

Token 139: ' liste' (ID: 31719)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.23489394783973694
    2. 'liste' → logprob: -2.484894037246704
    3. ' aa' → logprob: -2.609894037246704
    4. ' liste' → logprob: -2.984894037246704
    5. 'list' → logprob: -6.859893798828125
    6. ' list' → logprob: -8.234893798828125
    7. 'lista' → logprob: -8.984893798828125
    8. 'la' → logprob: -9.359893798828125
    9. ' ' → logprob: -9.609893798828125
    10. 'a' → logprob: -9.609893798828125

Token 140: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5443223118782043
    2. 'print' → logprob: -1.7943222522735596
    3. ',' → logprob: -2.2943222522735596
    4. 'aa' → logprob: -2.2943222522735596
    5. 'return' → logprob: -4.294322490692139
    6. 'if' → logprob: -4.919322490692139
    7. '+' → logprob: -5.294322490692139
    8. ' +' → logprob: -5.419322490692139
    9. ' if' → logprob: -5.669322490692139
    10. 'result' → logprob: -6.044322490692139

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08334919065237045
    2. 'print' → logprob: -2.9583492279052734
    3. 'aa' → logprob: -4.333349227905273
    4. 'return' → logprob: -4.583349227905273
    5. ',' → logprob: -6.333349227905273
    6. 'result' → logprob: -7.083349227905273
    7. ' return' → logprob: -7.833349227905273
    8. '+' → logprob: -8.333349227905273
    9. 'if' → logprob: -8.583349227905273
    10. ' aa' → logprob: -8.708349227905273

Token 142: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7086548805236816
    2. 'result' → logprob: -0.8336548805236816
    3. ' print' → logprob: -3.3336548805236816
    4. ' result' → logprob: -3.4586548805236816
    5. 'return' → logprob: -5.583654880523682
    6. '   ' → logprob: -7.458654880523682
    7. ' return' → logprob: -7.583654880523682
    8. 'if' → logprob: -7.833654880523682
    9. ' resultat' → logprob: -8.333654403686523
    10. ' if' → logprob: -8.708654403686523

Token 143: ' Supp' (ID: 20631)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3240848183631897
    2. 'print' → logprob: -1.699084758758545
    3. 'return' → logprob: -3.324084758758545
    4. ' result' → logprob: -3.324084758758545
    5. ' print' → logprob: -4.324084758758545
    6. ' return' → logprob: -5.324084758758545
    7. 'if' → logprob: -6.074084758758545
    8. ' if' → logprob: -7.074084758758545
    9. ' resultat' → logprob: -8.074085235595703
    10. '   ' → logprob: -8.699085235595703

Token 144: 'oser' (ID: 26956)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.3802825212478638
    2. 'os' → logprob: -1.3802825212478638
    3. 'lement' → logprob: -1.8802825212478638
    4. 'le' → logprob: -2.255282402038574
    5. 'o' → logprob: -2.630282402038574
    6. 'é' → logprob: -2.755282402038574
    7. 'oser' → logprob: -3.380282402038574
    8. 'r' → logprob: -4.505282402038574
    9. 'li' → logprob: -4.755282402038574
    10. 'ose' → logprob: -5.005282402038574

Token 145: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8012897372245789
    2. ' que' → logprob: -1.8012897968292236
    3. ' ' → logprob: -2.0512897968292236
    4. '"' → logprob: -2.6762897968292236
    5. ' ' → logprob: -3.3012897968292236
    6. ''' → logprob: -4.0512895584106445
    7. '_' → logprob: -4.1762895584106445
    8. 'if' → logprob: -4.4262895584106445
    9. '    ' → logprob: -4.5512895584106445
    10. '  ' → logprob: -4.6762895584106445

Token 146: ' l' (ID: 305)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.3132798373699188
    2. 'len' → logprob: -1.3132798671722412
    3. ' aa' → logprob: -11.31328010559082
    4. '(len' → logprob: -13.18828010559082
    5. '	len' → logprob: -13.81328010559082
    6. 'aa' → logprob: -13.93828010559082
    7. ' le' → logprob: -14.43828010559082
    8. ' la' → logprob: -14.56328010559082
    9. '=len' → logprob: -15.43828010559082
    10. ' ' → logprob: -15.81328010559082

Token 147: ''utilisateur' (ID: 140803)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.06654571741819382
    2. 'len' → logprob: -2.9415457248687744
    3. 'a' → logprob: -5.191545486450195
    4. ' aa' → logprob: -5.566545486450195
    5. '(len' → logprob: -7.066545486450195
    6. 'en' → logprob: -7.566545486450195
    7. 'aa' → logprob: -7.816545486450195
    8. 'es' → logprob: -9.691545486450195
    9. '   ' → logprob: -9.816545486450195
    10. 'e' → logprob: -9.941545486450195

Token 148: ' sais' (ID: 30010)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.48170679807662964
    2. 'a' → logprob: -1.1067068576812744
    3. ' has' → logprob: -3.3567068576812744
    4. ' sais' → logprob: -5.106706619262695
    5. 's' → logprob: -5.481706619262695
    6. 'has' → logprob: -6.231706619262695
    7. ' ' → logprob: -7.106706619262695
    8. ' souhaite' → logprob: -7.356706619262695
    9. ' aura' → logprob: -7.856706619262695
    10. ' will' → logprob: -8.481706619262695

Token 149: 'it' (ID: 278)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.013892091810703278
    2. 'it' → logprob: -4.51389217376709
    3. 's' → logprob: -7.01389217376709
    4. 'sit' → logprob: -7.38889217376709
    5. 'ss' → logprob: -8.13889217376709
    6. 'ra' → logprob: -8.26389217376709
    7. 'a' → logprob: -8.26389217376709
    8. '
' → logprob: -9.38889217376709
    9. 'rait' → logprob: -9.76389217376709
    10. 'ts' → logprob: -10.13889217376709

Token 150: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.0029056814964860678
    2. 'au' → logprob: -6.00290584564209
    3. ' deux' → logprob: -9.00290584564209
    4. ''au' → logprob: -9.37790584564209
    5. ' at' → logprob: -9.50290584564209
    6. ' toujours' → logprob: -10.00290584564209
    7. 's' → logprob: -10.37790584564209
    8. '<|end|>' → logprob: -10.87790584564209
    9. ' ' → logprob: -11.12790584564209
    10. ' suffisamment' → logprob: -11.87790584564209

Token 151: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.009442495182156563
    2. 'minimum' → logprob: -5.384442329406738
    3. 'mo' → logprob: -6.384442329406738
    4. '```' → logprob: -6.384442329406738
    5. ' moins' → logprob: -7.009442329406738
    6. 'min' → logprob: -8.634442329406738
    7. '   ' → logprob: -9.134442329406738
    8. 'menos' → logprob: -9.134442329406738
    9. 'least' → logprob: -9.884442329406738
    10. '#' → logprob: -10.384442329406738

Token 152: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.025188565254211426
    2. 'de' → logprob: -3.900188446044922
    3. '2' → logprob: -5.650188446044922
    4. ' two' → logprob: -7.525188446044922
    5. ' ' → logprob: -7.525188446044922
    6. 'two' → logprob: -11.400188446044922
    7. ' dois' → logprob: -11.775188446044922
    8. ' zwei' → logprob: -12.275188446044922
    9. ' un' → logprob: -12.900188446044922
    10. '```' → logprob: -13.150188446044922

Token 153: ' mots' (ID: 38338)
  Prédit: ' éléments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.4421326816082001
    2. ' mots' → logprob: -1.8171327114105225
    3. 'élé' → logprob: -2.0671327114105225
    4. ' espaces' → logprob: -3.4421327114105225
    5. ' elements' → logprob: -3.8171327114105225
    6. 'elements' → logprob: -5.067132472991943
    7. 'm' → logprob: -6.317132472991943
    8. ' tokens' → logprob: -7.067132472991943
    9. 'element' → logprob: -7.317132472991943
    10. 'tokens' → logprob: -7.317132472991943

Token 154: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06564376503229141
    2. '
' → logprob: -3.565643787384033
    3. ' return' → logprob: -4.190643787384033
    4. 'return' → logprob: -4.315643787384033
    5. '    
' → logprob: -5.940643787384033
    6. ' if' → logprob: -6.440643787384033
    7. 'print' → logprob: -6.815643787384033
    8. 'if' → logprob: -7.315643787384033
    9. ' print' → logprob: -8.190643310546875
    10. 'result' → logprob: -8.440643310546875

Token 155: ' sinon' (ID: 52915)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6891130208969116
    2. '   ' → logprob: -1.3141130208969116
    3. ' print' → logprob: -2.564113140106201
    4. 'return' → logprob: -2.689113140106201
    5. 'result' → logprob: -3.689113140106201
    6. 'print' → logprob: -3.689113140106201
    7. ' result' → logprob: -4.064113140106201
    8. ' if' → logprob: -4.564113140106201
    9. 'if' → logprob: -5.814113140106201
    10. ' resultat' → logprob: -6.564113140106201

Token 156: ' cela' (ID: 17542)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0923984944820404
    2. ' raise' → logprob: -3.2173984050750732
    3. 'return' → logprob: -4.217398643493652
    4. '   ' → logprob: -4.717398643493652
    5. ' afficher' → logprob: -5.217398643493652
    6. ' print' → logprob: -5.342398643493652
    7. '    ' → logprob: -5.592398643493652
    8. 'raise' → logprob: -5.592398643493652
    9. ' retourner' → logprob: -5.717398643493652
    10. '#' → logprob: -7.842398643493652

Token 157: ' lè' (ID: 53106)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37082475423812866
    2. ' pourrait' → logprob: -2.2458248138427734
    3. '    
' → logprob: -2.4958248138427734
    4. '
' → logprob: -3.7458248138427734
    5. ' return' → logprob: -4.120824813842773
    6. ' ca' → logprob: -4.495824813842773
    7. ' 
' → logprob: -4.495824813842773
    8. 'return' → logprob: -4.995824813842773
    9. ' #' → logprob: -5.245824813842773
    10. ' provoquer' → logprob: -5.370824813842773

Token 158: 'vera' (ID: 89937)
  Prédit: 'vera'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vera' → logprob: -0.0538976825773716
    2. 'ver' → logprob: -3.5538976192474365
    3. 'v' → logprob: -4.053897857666016
    4. 've' → logprob: -5.928897857666016
    5. '\' → logprob: -7.053897857666016
    6. 'è' → logprob: -7.303897857666016
    7. 'va' → logprob: -8.053897857666016
    8. '#' → logprob: -8.178897857666016
    9. '

' → logprob: -8.678897857666016
    10. '`' → logprob: -9.053897857666016

Token 159: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5990543365478516
    2. ' Index' → logprob: -1.3490543365478516
    3. 'Index' → logprob: -1.7240543365478516
    4. ' un' → logprob: -4.849054336547852
    5. 'une' → logprob: -6.099054336547852
    6. ' an' → logprob: -6.224054336547852
    7. ' index' → logprob: -8.599054336547852
    8. 'index' → logprob: -9.224054336547852
    9. '[Index' → logprob: -9.224054336547852
    10. 'Indexer' → logprob: -9.724054336547852

Token 160: ' exception' (ID: 8020)
  Prédit: 'Index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Index' → logprob: -0.001070442725904286
    2. ' Index' → logprob: -6.876070499420166
    3. '[Index' → logprob: -11.751070022583008
    4. '```' → logprob: -11.876070022583008
    5. 'Indice' → logprob: -12.251070022583008
    6. 'index' → logprob: -12.501070022583008
    7. '(Index' → logprob: -12.876070022583008
    8. 'Exception' → logprob: -13.251070022583008
    9. '#index' → logprob: -13.501070022583008
    10. '.Index' → logprob: -13.751070022583008

Token 161: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2999480366706848
    2. '
' → logprob: -1.79994797706604
    3. 'return' → logprob: -2.79994797706604
    4. ' return' → logprob: -3.54994797706604
    5. '    
' → logprob: -5.674948215484619
    6. 'print' → logprob: -8.174947738647461
    7. 'result' → logprob: -8.924947738647461
    8. ' if' → logprob: -9.424947738647461
    9. 'if' → logprob: -9.549947738647461
    10. 'try' → logprob: -9.924947738647461

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2587193548679352
    2. 'return' → logprob: -1.8837193250656128
    3. 'print' → logprob: -3.1337194442749023
    4. '
' → logprob: -4.133719444274902
    5. ' return' → logprob: -4.383719444274902
    6. ' print' → logprob: -6.258719444274902
    7. 'result' → logprob: -6.883719444274902
    8. '    
' → logprob: -7.133719444274902
    9. '```' → logprob: -10.133719444274902
    10. 'r' → logprob: -11.008719444274902

Token 163: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8691459894180298
    2. 'result' (adapté à ' result') → logprob: -1.4941459894180298
    3. 'return' → logprob: -1.6191459894180298
    4. ' print' → logprob: -2.4941458702087402
    5. ' return' → logprob: -3.1191458702087402
    6. '   ' → logprob: -3.9941458702087402
    7. ' result' → logprob: -4.36914587020874
    8. ' resultat' → logprob: -9.244146347045898
    9. 'b' → logprob: -9.869146347045898
    10. '    
' → logprob: -10.994146347045898

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048626311123371124
    2. '=' → logprob: -3.04862642288208
    3. ' ' → logprob: -10.298625946044922
    4. '"' → logprob: -14.048625946044922
    5. 's' → logprob: -14.173625946044922
    6. ' =
' → logprob: -14.173625946044922
    7. ')' → logprob: -14.423625946044922
    8. '_' → logprob: -14.673625946044922
    9. ' ' → logprob: -14.798625946044922
    10. '  ' → logprob: -14.923625946044922

Token 165: ' aa' (ID: 40260)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.029753733426332474
    2. ' aa' → logprob: -3.5297536849975586
    3. 'aaa' → logprob: -12.904753684997559
    4. '   ' → logprob: -15.279753684997559
    5. ' ' → logprob: -16.029754638671875
    6. 'a' → logprob: -16.404754638671875
    7. 'AA' → logprob: -16.904754638671875
    8. 'aaaa' → logprob: -17.029754638671875
    9. 'bb' → logprob: -17.154754638671875
    10. 'str' → logprob: -17.279754638671875

Token 166: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.522638169466518e-05
    2. '1' → logprob: -10.625024795532227
    3. ' [' → logprob: -14.625024795532227
    4. '[
' → logprob: -15.250024795532227
    5. '```' → logprob: -16.750024795532227
    6. ' ' → logprob: -17.250024795532227
    7. '2' → logprob: -18.875024795532227
    8. '
' → logprob: -18.875024795532227
    9. '(' → logprob: -19.125024795532227
    10. 's' → logprob: -19.250024795532227

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -19.5
    4. '１' → logprob: -20.625
    5. '```' → logprob: -20.75
    6. '۱' → logprob: -21.625
    7. ']' → logprob: -22.0
    8. '' → logprob: -22.0
    9. '
' → logprob: -22.125
    10. '[' → logprob: -22.25

Token 168: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007619839743711054
    2. ']+' → logprob: -7.250761985778809
    3. ' ]' → logprob: -9.875761985778809
    4. ']+"' → logprob: -14.750761985778809
    5. '+' → logprob: -16.000761032104492
    6. '"]' → logprob: -16.875761032104492
    7. '```' → logprob: -18.375761032104492
    8. ']
' → logprob: -18.625761032104492
    9. '']' → logprob: -19.000761032104492
    10. '"' → logprob: -19.000761032104492

Token 169: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008616345934569836
    2. ' +' → logprob: -4.7586164474487305
    3. '+"' → logprob: -14.00861644744873
    4. '+a' → logprob: -14.38361644744873
    5. '+
' → logprob: -15.63361644744873
    6. '+'' → logprob: -15.75861644744873
    7. '```' → logprob: -18.133615493774414
    8. ' +
' → logprob: -18.508615493774414
    9. '"+"' → logprob: -18.883615493774414
    10. ' +"' → logprob: -18.883615493774414

Token 170: ' aa' (ID: 40260)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.0028293654322624207
    2. ' aa' → logprob: -5.877829551696777
    3. '"' → logprob: -10.752829551696777
    4. 'aaa' → logprob: -14.127829551696777
    5. ''' → logprob: -14.252829551696777
    6. ' ' → logprob: -14.377829551696777
    7. 'a' → logprob: -14.502829551696777
    8. '   ' → logprob: -15.502829551696777
    9. '#aa' → logprob: -15.502829551696777
    10. '  ' → logprob: -16.62782859802246

Token 171: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. '"[' → logprob: -14.375001907348633
    3. '0' → logprob: -14.875001907348633
    4. ''[' → logprob: -14.875001907348633
    5. ' [' → logprob: -15.500001907348633
    6. '```' → logprob: -17.250001907348633
    7. '[
' → logprob: -18.000001907348633
    8. '   ' → logprob: -18.750001907348633
    9. '\[' → logprob: -18.875001907348633
    10. ' ' → logprob: -19.125001907348633

Token 172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '۰' → logprob: -22.125001907348633
    4. '1' → logprob: -24.250001907348633
    5. '```' → logprob: -24.250001907348633
    6. '０' → logprob: -25.000001907348633
    7. '[' → logprob: -25.750001907348633
    8. '   ' → logprob: -25.750001907348633
    9. '  ' → logprob: -25.875001907348633
    10. '00' → logprob: -25.875001907348633

Token 173: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.6286106983898208e-05
    2. ' ]' → logprob: -12.125016212463379
    3. ']
' → logprob: -12.750016212463379
    4. ')' → logprob: -13.000016212463379
    5. '])' → logprob: -13.500016212463379
    6. '"]' → logprob: -13.625016212463379
    7. '']' → logprob: -14.375016212463379
    8. ')]' → logprob: -14.500016212463379
    9. ']()' → logprob: -14.750016212463379
    10. '()]' → logprob: -15.000016212463379

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0976080670952797
    2. 'print' → logprob: -2.5976080894470215
    3. '
' → logprob: -4.2226080894470215
    4. '    
' → logprob: -5.5976080894470215
    5. ' print' → logprob: -9.222607612609863
    6. '  
' → logprob: -10.347607612609863
    7. '```' → logprob: -11.097607612609863
    8. '	print' → logprob: -11.847607612609863
    9. ')' → logprob: -12.097607612609863
    10. 'return' → logprob: -12.222607612609863

Token 175: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10833489149808884
    2. 'print' → logprob: -2.35833477973938
    3. '
' → logprob: -4.858335018157959
    4. '    
' → logprob: -8.2333345413208
    5. ' print' → logprob: -10.1083345413208
    6. '```' → logprob: -10.9833345413208
    7. 'return' → logprob: -12.3583345413208
    8. '  
' → logprob: -13.3583345413208
    9. '
' → logprob: -14.4833345413208
    10. '	print' → logprob: -14.8583345413208

Token 176: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07910887897014618
    2. ' print' → logprob: -2.579108953475952
    3. '   ' → logprob: -8.454109191894531
    4. 'return' → logprob: -12.579109191894531
    5. ' return' → logprob: -13.954109191894531
    6. 'Print' → logprob: -14.829109191894531
    7. 'pr' → logprob: -15.579109191894531
    8. '
' → logprob: -15.579109191894531
    9. 'prin' → logprob: -15.579109191894531
    10. '	print' → logprob: -15.704109191894531

Token 177: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0011565317399799824
    2. '#' → logprob: -7.501156330108643
    3. 'iche' → logprob: -8.1261568069458
    4. 'cher' → logprob: -8.7511568069458
    5. '   ' → logprob: -9.6261568069458
    6. 'ich' → logprob: -10.3761568069458
    7. 'ichage' → logprob: -10.7511568069458
    8. 'ic' → logprob: -12.1261568069458
    9. 'f' → logprob: -12.8761568069458
    10. 'acher' → logprob: -12.8761568069458

Token 178: ' le' (ID: 505)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.02569805644452572
    2. '(' → logprob: -3.775697946548462
    3. 'result' → logprob: -6.025698184967041
    4. '("' → logprob: -10.775697708129883
    5. ' result' → logprob: -11.900697708129883
    6. ' (' → logprob: -13.900697708129883
    7. '(res' → logprob: -14.025697708129883
    8. '(f' → logprob: -14.275697708129883
    9. '(
' → logprob: -14.275697708129883
    10. ' resultat' → logprob: -14.775697708129883

Token 179: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.4238014221191406
    2. 'result' → logprob: -1.1738014221191406
    3. ' result' → logprob: -3.4238014221191406
    4. ' resultat' → logprob: -6.173801422119141
    5. 'rés' → logprob: -6.673801422119141
    6. '(result' → logprob: -8.17380142211914
    7. ' résult' → logprob: -11.29880142211914
    8. ' résultats' → logprob: -11.67380142211914
    9. 'r' → logprob: -12.04880142211914
    10. '_result' → logprob: -13.04880142211914

Token 180: ' obtenu' (ID: 117330)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050569795072078705
    2. '
' → logprob: -3.300569772720337
    3. 'print' → logprob: -4.425570011138916
    4. '    
' → logprob: -8.300569534301758
    5. ' print' → logprob: -8.425569534301758
    6. '```' → logprob: -11.925569534301758
    7. '
' → logprob: -13.425569534301758
    8. '  
' → logprob: -13.425569534301758
    9. '	print' → logprob: -13.675569534301758
    10. '\n' → logprob: -14.175569534301758

Token 181: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15169063210487366
    2. '
' → logprob: -2.151690721511841
    3. 'print' → logprob: -3.776690721511841
    4. '    
' → logprob: -6.651690483093262
    5. ' print' → logprob: -8.651690483093262
    6. ')' → logprob: -10.276690483093262
    7. '  
' → logprob: -10.901690483093262
    8. ')
' → logprob: -11.526690483093262
    9. '```' → logprob: -11.651690483093262
    10. '(' → logprob: -12.776690483093262

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0644707903265953
    2. 'print' → logprob: -2.8144707679748535
    3. ' print' → logprob: -6.0644707679748535
    4. '
' → logprob: -8.689471244812012
    5. '```' → logprob: -12.439471244812012
    6. '    
' → logprob: -12.689471244812012
    7. '	print' → logprob: -14.814471244812012
    8. '   ' → logprob: -16.189470291137695
    9. '.print' → logprob: -16.689470291137695
    10. '\n' → logprob: -16.939470291137695

Token 183: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.16042082011699677
    2. ' print' → logprob: -1.9104207754135132
    3. '   ' → logprob: -8.535420417785645
    4. '```' → logprob: -16.28542137145996
    5. '	print' → logprob: -17.28542137145996
    6. '(print' → logprob: -18.28542137145996
    7. '.print' → logprob: -18.41042137145996
    8. 'pr' → logprob: -18.41042137145996
    9. ' ' → logprob: -18.91042137145996
    10. 'result' → logprob: -19.03542137145996

Token 184: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.252067893743515
    2. '(result' → logprob: -1.5020679235458374
    3. '("("' → logprob: -9.252067565917969
    4. '('' → logprob: -11.127067565917969
    5. ' (' → logprob: -12.002067565917969
    6. '()' → logprob: -12.127067565917969
    7. '(res' → logprob: -12.252067565917969
    8. '("' → logprob: -12.752067565917969
    9. '(results' → logprob: -12.877067565917969
    10. '(resultado' → logprob: -13.502067565917969

Token 185: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ' )' → logprob: -13.375001907348633
    3. '())' → logprob: -15.875001907348633
    4. ')
' → logprob: -16.125001907348633
    5. '()' → logprob: -16.250001907348633
    6. '")' → logprob: -16.625001907348633
    7. '')' → logprob: -17.625001907348633
    8. '))' → logprob: -17.750001907348633
    9. ')`' → logprob: -17.750001907348633
    10. '`)' → logprob: -18.375001907348633

Token 186: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: ' App' (ID: 2583)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.00017469677550252527
    2. ' swap' → logprob: -8.750174522399902
    3. '	swap' → logprob: -12.375174522399902
    4. '.swap' → logprob: -12.500174522399902
    5. 'if' → logprob: -13.000174522399902
    6. '#' → logprob: -13.750174522399902
    7. '_swap' → logprob: -13.875174522399902
    8. 's' → logprob: -14.000174522399902
    9. '```' → logprob: -14.500174522399902
    10. 'sw' → logprob: -14.500174522399902

Token 188: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.0008409536094404757
    2. 'le' → logprob: -8.50084114074707
    3. '_' → logprob: -8.87584114074707
    4. 'swap' → logprob: -9.12584114074707
    5. 'els' → logprob: -9.37584114074707
    6. 'elé' → logprob: -9.50084114074707
    7. '_swap' → logprob: -9.50084114074707
    8. 'eler' → logprob: -10.25084114074707
    9. '.swap' → logprob: -10.87584114074707
    10. 'ell' → logprob: -11.12584114074707

Token 189: ' de' (ID: 334)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.12624527513980865
    2. ' swap' → logprob: -3.1262452602386475
    3. '()' → logprob: -3.8762452602386475
    4. 'de' → logprob: -4.376245498657227
    5. '_' → logprob: -4.626245498657227
    6. '(' → logprob: -4.751245498657227
    7. '_swap' → logprob: -4.876245498657227
    8. ' de' → logprob: -5.376245498657227
    9. 'def' → logprob: -5.626245498657227
    10. 'er' → logprob: -6.376245498657227

Token 190: ' la' (ID: 557)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -6.988221684878226e-06
    2. ' swap' → logprob: -11.875006675720215
    3. '	swap' → logprob: -18.00000762939453
    4. 'sw' → logprob: -20.00000762939453
    5. '_swap' → logprob: -20.12500762939453
    6. '.swap' → logprob: -21.25000762939453
    7. '```' → logprob: -21.25000762939453
    8. 's' → logprob: -21.50000762939453
    9. 'wap' → logprob: -21.50000762939453
    10. 'switch' → logprob: -21.62500762939453

Token 191: ' fonction' (ID: 17610)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.048695921897888184
    2. ' swap' → logprob: -3.0486960411071777
    3. 'function' → logprob: -10.04869556427002
    4. ' function' → logprob: -10.42369556427002
    5. 'def' → logprob: -10.79869556427002
    6. 'fonction' → logprob: -12.04869556427002
    7. '	swap' → logprob: -13.04869556427002
    8. '_swap' → logprob: -13.04869556427002
    9. '.swap' → logprob: -14.04869556427002
    10. ' fonction' → logprob: -14.29869556427002

Token 192: ' principale' (ID: 68926)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.0005722135538235307
    2. '
' → logprob: -7.500572204589844
    3. '()
' → logprob: -11.750572204589844
    4. ' swap' → logprob: -12.000572204589844
    5. '	swap' → logprob: -13.375572204589844
    6. '(
' → logprob: -14.375572204589844
    7. '.swap' → logprob: -14.375572204589844
    8. '```' → logprob: -14.500572204589844
    9. '_swap' → logprob: -14.875572204589844
    10. '
' → logprob: -15.125572204589844

Token 193: '
' (ID: 198)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.25209179520606995
    2. '
' → logprob: -1.5020917654037476
    3. '()
' → logprob: -9.252091407775879
    4. '
' → logprob: -10.377091407775879
    5. '

' → logprob: -11.502091407775879
    6. ' swap' → logprob: -12.002091407775879
    7. '\' → logprob: -12.377091407775879
    8. '.swap' → logprob: -12.627091407775879
    9. '	swap' → logprob: -12.877091407775879
    10. '_swap' → logprob: -13.002091407775879

Token 194: 'swap' (ID: 55961)
  Prédit: 'swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -1.9361264946837764e-07
    2. ' swap' → logprob: -16.625
    3. '	swap' → logprob: -18.75
    4. '```' → logprob: -18.875
    5. '.swap' → logprob: -19.5
    6. '
' → logprob: -19.875
    7. 'wap' → logprob: -20.0
    8. '_swap' → logprob: -20.75
    9. 'sw' → logprob: -21.0
    10. 'Swap' → logprob: -22.0

Token 195: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -1.580929347255733e-05
    2. '_' → logprob: -11.125016212463379
    3. '_or' → logprob: -14.875016212463379
    4. '_swap' → logprob: -15.375016212463379
    5. '_an' → logprob: -16.375015258789062
    6. '_to' → logprob: -16.750015258789062
    7. '_a' → logprob: -17.000015258789062
    8. ' _' → logprob: -17.125015258789062
    9. '_p' → logprob: -17.750015258789062
    10. '_AND' → logprob: -17.875015258789062

Token 196: '_con' (ID: 7531)
  Prédit: 'conc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conc' → logprob: -0.00863016489893198
    2. '_con' → logprob: -4.758630275726318
    3. 'con' → logprob: -11.13362979888916
    4. 'concat' → logprob: -15.00862979888916
    5. '.concatenate' → logprob: -15.13362979888916
    6. ' concatenate' → logprob: -15.13362979888916
    7. '_concat' → logprob: -16.508630752563477
    8. 'conce' → logprob: -17.008630752563477
    9. 'Conc' → logprob: -17.133630752563477
    10. 'c' → logprob: -18.133630752563477

Token 197: 'c' (ID: 66)
  Prédit: 'atenate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atenate' → logprob: -4.251091377227567e-05
    2. 'aten' → logprob: -10.500042915344238
    3. 'c' → logprob: -11.375042915344238
    4. 'ate' → logprob: -12.875042915344238
    5. 'at' → logprob: -14.125042915344238
    6. 'cat' → logprob: -17.500041961669922
    7. '```' → logprob: -17.500041961669922
    8. 'cate' → logprob: -18.500041961669922
    9. 's' → logprob: -18.500041961669922
    10. 't' → logprob: -18.625041961669922

Token 198: 'atenate' (ID: 63439)
  Prédit: 'atenate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atenate' → logprob: -5.633853652398102e-05
    2. 'aten' → logprob: -10.500056266784668
    3. 'ate' → logprob: -10.875056266784668
    4. 'at' → logprob: -12.375056266784668
    5. 'onate' → logprob: -12.375056266784668
    6. 'on' → logprob: -14.375056266784668
    7. ' concatenate' → logprob: -15.250056266784668
    8. 'ernate' → logprob: -16.000057220458984
    9. 'utate' → logprob: -16.125057220458984
    10. 'er' → logprob: -16.625057220458984

Token 199: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00010521204239921644
    2. '(' → logprob: -9.500104904174805
    3. '()
' → logprob: -10.750104904174805
    4. '()

' → logprob: -12.500104904174805
    5. ' ()' → logprob: -13.625104904174805
    6. '()`' → logprob: -13.625104904174805
    7. '();' → logprob: -14.625104904174805
    8. '()<' → logprob: -14.875104904174805
    9. '()"' → logprob: -15.000104904174805
    10. '())' → logprob: -15.125104904174805


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 197
Tokens correctement prédits (1ère position, stricte): 71
Tokens correctement prédits (1ère position, avec adaptation): 72
Tokens correctement prédits (top 10): 135
Précision stricte (1ère position): 36.04%
Précision adaptée (1ère position): 36.55%
Précision (top 10): 68.53%
================================================================================
