================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demander une entrée utilisateur et la stocker dans une variable au nom explicite
chaine_utilisateur = input()

# Calculer la longueur de la chaîne entrée par l'utilisateur et la stocker dans une variable explicite
longueur_chaine_utilisateur = len(chaine_utilisateur)

# Générer une nouvelle chaîne composée de 'x' répétée autant de fois que la longueur de la chaîne d'entrée
chaine_masquee = "x" * longueur_chaine_utilisateur

# Afficher la chaîne masquée
print(chaine_masquee)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ander' (ID: 9330)
  → Token d'amorce (pas de prédiction)

Token 3: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15613725781440735
    2. ' à' → logprob: -2.656137228012085
    3. ' =' → logprob: -3.781137228012085
    4. ' a' → logprob: -5.031137466430664
    5. ' la' → logprob: -5.031137466430664
    6. '_' → logprob: -5.156137466430664
    7. ' de' → logprob: -5.281137466430664
    8. ' une' → logprob: -5.656137466430664
    9. ' un' → logprob: -5.781137466430664
    10. 'à' → logprob: -5.906137466430664

Token 4: ' entrée' (ID: 95590)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.09066332876682281
    2. 's' → logprob: -3.715663433074951
    3. 'chaine' → logprob: -3.965663433074951
    4. 'val' → logprob: -4.465663433074951
    5. ' ' → logprob: -5.215663433074951
    6. 'input' → logprob: -5.715663433074951
    7. 'nom' → logprob: -5.840663433074951
    8. ' entrée' → logprob: -5.840663433074951
    9. 'entr' → logprob: -5.965663433074951
    10. '#' → logprob: -6.340663433074951

Token 5: ' utilisateur' (ID: 115595)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18935361504554749
    2. '```' → logprob: -2.8143537044525146
    3. 'input' → logprob: -3.5643537044525146
    4. '`' → logprob: -3.8143537044525146
    5. 'i' → logprob: -4.0643534660339355
    6. 'user' → logprob: -4.3143534660339355
    7. '#' → logprob: -4.9393534660339355
    8. '(' → logprob: -5.1893534660339355
    9. ':' → logprob: -5.9393534660339355
    10. ' ' → logprob: -5.9393534660339355

Token 6: ' et' (ID: 859)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.2010031938552856
    2. 'user' → logprob: -1.3260031938552856
    3. '```' → logprob: -1.9510031938552856
    4. '_' → logprob: -2.326003074645996
    5. 'i' → logprob: -2.576003074645996
    6. '`' → logprob: -2.701003074645996
    7. 'u' → logprob: -4.576003074645996
    8. 'x' → logprob: -4.951003074645996
    9. 'n' → logprob: -5.451003074645996
    10. '#' → logprob: -5.576003074645996

Token 7: ' la' (ID: 557)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.8413648009300232
    2. 'aff' → logprob: -0.9663648009300232
    3. 'stock' → logprob: -2.841364860534668
    4. ' afficher' → logprob: -3.466364860534668
    5. ' récupérer' → logprob: -4.466364860534668
    6. 'la' → logprob: -4.716364860534668
    7. 'r' → logprob: -4.841364860534668
    8. 'l' → logprob: -4.841364860534668
    9. ' la' → logprob: -4.966364860534668
    10. 'convert' → logprob: -5.216364860534668

Token 8: ' stock' (ID: 6546)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.9637139439582825
    2. 'trait' → logprob: -1.7137138843536377
    3. 'print' → logprob: -2.2137138843536377
    4. 'aff' → logprob: -2.5887138843536377
    5. 'stock' → logprob: -2.8387138843536377
    6. ' stock' → logprob: -3.0887138843536377
    7. 'st' → logprob: -3.7137138843536377
    8. ' convertir' → logprob: -3.8387138843536377
    9. 'v' → logprob: -4.338714122772217
    10. 'r' → logprob: -4.338714122772217

Token 9: 'er' (ID: 259)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06765799969434738
    2. 'r' → logprob: -4.192657947540283
    3. 'e' → logprob: -4.317657947540283
    4. 'u' → logprob: -5.067657947540283
    5. ' ' → logprob: -5.442657947540283
    6. '#' → logprob: -5.442657947540283
    7. 'user' → logprob: -5.442657947540283
    8. '=' → logprob: -5.567657947540283
    9. '`' → logprob: -6.067657947540283
    10. 'input' → logprob: -6.442657947540283

Token 10: ' dans' (ID: 2671)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.04568517953157425
    2. 'input' → logprob: -3.420685291290283
    3. '`' → logprob: -5.920685291290283
    4. 'u' → logprob: -5.920685291290283
    5. 'variable' → logprob: -6.170685291290283
    6. 'username' → logprob: -6.545685291290283
    7. '```' → logprob: -6.795685291290283
    8. 'name' → logprob: -7.795685291290283
    9. 'n' → logprob: -8.295684814453125
    10. 'v' → logprob: -8.670684814453125

Token 11: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.3427265882492065
    2. 'input' → logprob: -1.5927265882492065
    3. 'user' → logprob: -1.5927265882492065
    4. 'la' → logprob: -1.8427265882492065
    5. ' la' → logprob: -3.092726707458496
    6. ' une' → logprob: -3.092726707458496
    7. ' input' → logprob: -3.467726707458496
    8. 'variable' → logprob: -3.842726707458496
    9. ' user' → logprob: -4.592726707458496
    10. 'le' → logprob: -5.092726707458496

Token 12: ' variable' (ID: 11076)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variable' → logprob: -0.11406982690095901
    2. ' variable' → logprob: -2.739069938659668
    3. '_' → logprob: -3.364069938659668
    4. '_variable' → logprob: -5.114069938659668
    5. 'var' → logprob: -6.364069938659668
    6. ' ' → logprob: -8.614069938659668
    7. '```' → logprob: -8.739069938659668
    8. 'v' → logprob: -9.489069938659668
    9. '`' → logprob: -9.614069938659668
    10. 'chaine' → logprob: -9.864069938659668

Token 13: ' au' (ID: 2791)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.36571013927459717
    2. 'u' → logprob: -1.7407101392745972
    3. 'input' → logprob: -2.7407102584838867
    4. '`' → logprob: -3.3657102584838867
    5. 'n' → logprob: -4.740710258483887
    6. '```' → logprob: -5.115710258483887
    7. 'i' → logprob: -5.865710258483887
    8. 'v' → logprob: -5.865710258483887
    9. 'variable' → logprob: -6.115710258483887
    10. 'us' → logprob: -6.240710258483887

Token 14: ' nom' (ID: 8080)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4106332063674927
    2. 'input' → logprob: -1.6606332063674927
    3. 'f' → logprob: -2.035633087158203
    4. 'format' → logprob: -2.535633087158203
    5. '=' → logprob: -3.035633087158203
    6. 'niveau' → logprob: -3.285633087158203
    7. 't' → logprob: -3.660633087158203
    8. 's' → logprob: -3.785633087158203
    9. 'nom' → logprob: -3.910633087158203
    10. '=input' → logprob: -3.910633087158203

Token 15: ' explic' (ID: 20781)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8711878061294556
    2. 'nom' → logprob: -0.9961878061294556
    3. 's' → logprob: -3.246187686920166
    4. '=' → logprob: -3.246187686920166
    5. ' =' → logprob: -3.371187686920166
    6. ' ' → logprob: -3.871187686920166
    7. '_' → logprob: -3.996187686920166
    8. '`' → logprob: -4.246187686920166
    9. '```' → logprob: -4.496187686920166
    10. 'name' → logprob: -4.996187686920166

Token 16: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.2464272826910019
    2. 'i' → logprob: -1.746427297592163
    3. 'it' → logprob: -3.246427297592163
    4. '`' → logprob: -6.621427059173584
    5. '```' → logprob: -6.871427059173584
    6. 'ic' → logprob: -7.746427059173584
    7. '#' → logprob: -7.996427059173584
    8. 'e' → logprob: -7.996427059173584
    9. 'ité' → logprob: -8.496427536010742
    10. '_' → logprob: -8.996427536010742

Token 17: '
' (ID: 198)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.02948801964521408
    2. 'nom' → logprob: -4.5294880867004395
    3. 'username' → logprob: -5.0294880867004395
    4. 'input' → logprob: -5.6544880867004395
    5. 'n' → logprob: -6.1544880867004395
    6. 'u' → logprob: -6.2794880867004395
    7. 'util' → logprob: -6.9044880867004395
    8. 'variable' → logprob: -7.2794880867004395
    9. '```' → logprob: -7.4044880867004395
    10. 'name' → logprob: -7.5294880867004395

Token 18: 'chaine' (ID: 68916)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.028734946623444557
    2. 'nom' → logprob: -4.028735160827637
    3. 'username' → logprob: -5.278735160827637
    4. 'util' → logprob: -6.028735160827637
    5. '```' → logprob: -7.028735160827637
    6. 'input' → logprob: -7.278735160827637
    7. 'entrée' → logprob: -8.278735160827637
    8. 'name' → logprob: -8.653735160827637
    9. 'variable' → logprob: -8.778735160827637
    10. 's' → logprob: -8.778735160827637

Token 19: '_util' (ID: 46866)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0575462281703949
    2. '_' → logprob: -3.0575461387634277
    3. 's' → logprob: -5.307546138763428
    4. '=' → logprob: -5.932546138763428
    5. '_user' → logprob: -7.932546138763428
    6. '_util' → logprob: -7.932546138763428
    7. '_input' → logprob: -8.432546615600586
    8. ' ' → logprob: -8.807546615600586
    9. '=input' → logprob: -10.432546615600586
    10. 'user' → logprob: -10.557546615600586

Token 20: 'isateur' (ID: 50127)
  Prédit: 'isateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isateur' → logprob: -0.023227188736200333
    2. 'aire' → logprob: -5.273227214813232
    3. ' =' → logprob: -5.648227214813232
    4. '_' → logprob: -6.273227214813232
    5. 'is' → logprob: -6.398227214813232
    6. 'isable' → logprob: -6.523227214813232
    7. 'ise' → logprob: -6.773227214813232
    8. 'isation' → logprob: -6.898227214813232
    9. 'isateurs' → logprob: -6.898227214813232
    10. 's' → logprob: -7.023227214813232

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029774438589811325
    2. '=' → logprob: -3.5297744274139404
    3. 's' → logprob: -11.52977466583252
    4. ' ' → logprob: -12.40477466583252
    5. '_' → logprob: -12.77977466583252
    6. 'space' → logprob: -12.90477466583252
    7. '=input' → logprob: -13.27977466583252
    8. ',' → logprob: -14.02977466583252
    9. '  ' → logprob: -15.02977466583252
    10. ' ' → logprob: -15.15477466583252

Token 22: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.12693557143211365
    2. 'input' → logprob: -2.1269354820251465
    3. '=input' → logprob: -12.626935958862305
    4. ' ' → logprob: -13.376935958862305
    5. '(input' → logprob: -14.126935958862305
    6. ' ' → logprob: -14.251935958862305
    7. '	input' → logprob: -14.251935958862305
    8. '<input' → logprob: -14.751935958862305
    9. ',input' → logprob: -17.001935958862305
    10. 'str' → logprob: -17.376935958862305

Token 23: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3348318338394165
    2. '("' → logprob: -1.3348318338394165
    3. '("("' → logprob: -4.459831714630127
    4. '('' → logprob: -4.959831714630127
    5. '("")' → logprob: -6.334831714630127
    6. '("(' → logprob: -7.334831714630127
    7. '(">' → logprob: -8.459832191467285
    8. '("""' → logprob: -9.959832191467285
    9. '()' → logprob: -10.084832191467285
    10. '("="' → logprob: -11.959832191467285

Token 24: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02082342654466629
    2. '("' → logprob: -3.8958234786987305
    3. '('' → logprob: -9.27082347869873
    4. '("("' → logprob: -9.27082347869873
    5. '(
' → logprob: -9.89582347869873
    6. '("")' → logprob: -10.77082347869873
    7. '("""' → logprob: -12.39582347869873
    8. '()' → logprob: -12.39582347869873
    9. '(">' → logprob: -12.39582347869873
    10. '"' → logprob: -13.02082347869873

Token 25: ' Calcul' (ID: 57243)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' "' → logprob: -1.4238898754119873
    2. ' #' → logprob: -1.7988898754119873
    3. ' ' → logprob: -1.9238898754119873
    4. '#' → logprob: -2.4238898754119873
    5. '"' → logprob: -2.6738898754119873
    6. 'chaine' → logprob: -3.0488898754119873
    7. ' .' → logprob: -3.1738898754119873
    8. ' if' → logprob: -3.6738898754119873
    9. '("' → logprob: -3.7988898754119873
    10. 'print' → logprob: -4.048890113830566

Token 26: 'er' (ID: 259)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.181618094444275
    2. '_length' → logprob: -1.306618094444275
    3. '_' → logprob: -1.556618094444275
    4. '_len' → logprob: -2.3066182136535645
    5. '("' → logprob: -2.9316182136535645
    6. '("_' → logprob: -4.4316182136535645
    7. '()' → logprob: -4.4316182136535645
    8. '_l' → logprob: -4.5566182136535645
    9. 'length' → logprob: -5.9316182136535645
    10. 'len' → logprob: -6.0566182136535645

Token 27: ' la' (ID: 557)
  Prédit: '_la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_la' → logprob: -1.2289485931396484
    2. ' la' → logprob: -1.3539485931396484
    3. 'len' → logprob: -1.3539485931396484
    4. 'la' → logprob: -2.4789485931396484
    5. '_' → logprob: -3.3539485931396484
    6. '_len' → logprob: -3.7289485931396484
    7. '_l' → logprob: -4.603948593139648
    8. '_long' → logprob: -4.853948593139648
    9. 'le' → logprob: -5.478948593139648
    10. ' ' → logprob: -5.728948593139648

Token 28: ' longueur' (ID: 104613)
  Prédit: ' longueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' longueur' → logprob: -0.47771143913269043
    2. 'long' → logprob: -1.1027114391326904
    3. ' longe' → logprob: -4.2277116775512695
    4. ' ' → logprob: -4.4777116775512695
    5. 'len' → logprob: -4.8527116775512695
    6. ' long' → logprob: -4.9777116775512695
    7. '_long' → logprob: -6.3527116775512695
    8. 'lon' → logprob: -6.6027116775512695
    9. ' longue' → logprob: -6.6027116775512695
    10. ' len' → logprob: -7.3527116775512695

Token 29: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29922518134117126
    2. '_' → logprob: -1.9242252111434937
    3. 'chaine' → logprob: -2.299225091934204
    4. 'de' → logprob: -4.674225330352783
    5. '_de' → logprob: -7.049225330352783
    6. ' de' → logprob: -7.174225330352783
    7. ' (' → logprob: -7.924225330352783
    8. ' =' → logprob: -8.049224853515625
    9. 'len' → logprob: -9.674224853515625
    10. '=' → logprob: -9.674224853515625

Token 30: ' la' (ID: 557)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.531507670879364
    2. ' chaine' → logprob: -0.906507670879364
    3. ' la' → logprob: -5.15650749206543
    4. ' chaîne' → logprob: -6.53150749206543
    5. 'la' → logprob: -7.78150749206543
    6. ' ' → logprob: -8.03150749206543
    7. '(' → logprob: -8.90650749206543
    8. 'cha' → logprob: -9.15650749206543
    9. ' ' → logprob: -10.78150749206543
    10. 'chain' → logprob: -11.03150749206543

Token 31: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.29166659712791443
    2. ' chaine' → logprob: -1.4166666269302368
    3. ' chaîne' → logprob: -4.666666507720947
    4. ' ' → logprob: -7.666666507720947
    5. 'cha' → logprob: -8.166666984558105
    6. ' ' → logprob: -9.291666984558105
    7. '```' → logprob: -10.541666984558105
    8. ' string' → logprob: -10.541666984558105
    9. 'texte' → logprob: -10.916666984558105
    10. '_' → logprob: -10.916666984558105

Token 32: ' entrée' (ID: 95590)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.057745859026908875
    2. 'long' → logprob: -3.807745933532715
    3. '_' → logprob: -4.182745933532715
    4. '_long' → logprob: -4.932745933532715
    5. 'len' → logprob: -5.682745933532715
    6. '(' → logprob: -5.682745933532715
    7. ' longueur' → logprob: -6.807745933532715
    8. ' longue' → logprob: -7.432745933532715
    9. '_l' → logprob: -7.682745933532715
    10. '()' → logprob: -7.807745933532715

Token 33: ' par' (ID: 686)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.12448010593652725
    2. 'long' → logprob: -2.4994800090789795
    3. 'len' → logprob: -3.4994800090789795
    4. '(' → logprob: -6.374480247497559
    5. '_long' → logprob: -7.374480247497559
    6. ' longue' → logprob: -7.749480247497559
    7. ' longueur' → logprob: -7.874480247497559
    8. ' chaine' → logprob: -8.249480247497559
    9. '(len' → logprob: -8.374480247497559
    10. ' longe' → logprob: -8.874480247497559

Token 34: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.23114213347434998
    2. ' l' → logprob: -1.8561421632766724
    3. 'chaine' → logprob: -3.731142044067383
    4. 'la' → logprob: -4.731142044067383
    5. ' utilisateur' → logprob: -5.481142044067383
    6. 'util' → logprob: -5.606142044067383
    7. ''utilisateur' → logprob: -6.356142044067383
    8. 'user' → logprob: -6.481142044067383
    9. ' ' → logprob: -6.481142044067383
    10. '	l' → logprob: -6.981142044067383

Token 35: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.006750073749572039
    2. ''' → logprob: -5.506750106811523
    3. 'a' → logprob: -6.506750106811523
    4. 'u' → logprob: -7.756750106811523
    5. ''util' → logprob: -8.006750106811523
    6. '’utilisateur' → logprob: -8.256750106811523
    7. ''user' → logprob: -10.381750106811523
    8. 'util' → logprob: -10.381750106811523
    9. ''#' → logprob: -10.631750106811523
    10. '#' → logprob: -11.006750106811523

Token 36: ' et' (ID: 859)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.08689279109239578
    2. 'chaine' → logprob: -2.96189284324646
    3. 'len' → logprob: -3.71189284324646
    4. 'lon' → logprob: -6.336892604827881
    5. '_long' → logprob: -6.461892604827881
    6. 'tail' → logprob: -6.711892604827881
    7. ' longueur' → logprob: -7.086892604827881
    8. ' longe' → logprob: -7.711892604827881
    9. ' longue' → logprob: -7.711892604827881
    10. 'length' → logprob: -8.711893081665039

Token 37: ' la' (ID: 557)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.4639371335506439
    2. 'len' → logprob: -1.0889371633529663
    3. ' la' → logprob: -5.213937282562256
    4. ' print' → logprob: -5.338937282562256
    5. ' longueur' → logprob: -5.463937282562256
    6. '_len' → logprob: -5.588937282562256
    7. 'print' → logprob: -5.963937282562256
    8. ' l' → logprob: -6.588937282562256
    9. '_long' → logprob: -6.588937282562256
    10. 'long' → logprob: -6.713937282562256

Token 38: ' stock' (ID: 6546)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.07744955271482468
    2. 'print' → logprob: -3.3274495601654053
    3. 'long' → logprob: -4.327449321746826
    4. ' len' → logprob: -4.827449321746826
    5. ' longueur' → logprob: -5.077449321746826
    6. 'length' → logprob: -5.702449321746826
    7. '#' → logprob: -5.702449321746826
    8. '_len' → logprob: -6.702449321746826
    9. ' print' → logprob: -7.577449321746826
    10. 'stock' → logprob: -7.827449321746826

Token 39: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0018858035327866673
    2. 'ée' → logprob: -6.376885890960693
    3. 'é' → logprob: -8.751885414123535
    4. 'e' → logprob: -10.751885414123535
    5. 'éer' → logprob: -13.251885414123535
    6. 'ér' → logprob: -14.376885414123535
    7. 'eer' → logprob: -14.751885414123535
    8. '­er' → logprob: -15.251885414123535
    9. ' er' → logprob: -15.626885414123535
    10. '_er' → logprob: -16.00188636779785

Token 40: ' dans' (ID: 2671)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -1.0554560422897339
    2. '_' → logprob: -1.1804560422897339
    3. '_long' → logprob: -1.3054560422897339
    4. 'long' → logprob: -3.0554561614990234
    5. ' longueur' → logprob: -5.180456161499023
    6. 'dans' → logprob: -5.305456161499023
    7. ' chaine' → logprob: -5.305456161499023
    8. '_l' → logprob: -5.805456161499023
    9. ' dans' → logprob: -6.430456161499023
    10. ' =' → logprob: -6.930456161499023

Token 41: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.19860005378723145
    2. 'une' → logprob: -2.6986000537872314
    3. ' longueur' → logprob: -2.6986000537872314
    4. ' la' → logprob: -4.198599815368652
    5. ' chaine' → logprob: -5.448599815368652
    6. ' long' → logprob: -5.448599815368652
    7. ' _' → logprob: -5.948599815368652
    8. ' ' → logprob: -6.073599815368652
    9. ' longe' → logprob: -6.073599815368652
    10. 'chaine' → logprob: -6.448599815368652

Token 42: ' variable' (ID: 11076)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7911344766616821
    2. '_variable' → logprob: -0.7911344766616821
    3. 'variable' → logprob: -3.0411343574523926
    4. ' variable' → logprob: -3.1661343574523926
    5. ' _' → logprob: -6.416134357452393
    6. '_long' → logprob: -7.666134357452393
    7. '_var' → logprob: -7.666134357452393
    8. 'chaine' → logprob: -8.16613483428955
    9. 'var' → logprob: -9.66613483428955
    10. '_v' → logprob: -9.66613483428955

Token 43: ' explic' (ID: 20781)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.36002594232559204
    2. 'chaine' → logprob: -1.2350258827209473
    3. 'lon' → logprob: -5.610025882720947
    4. ' longueur' → logprob: -5.735025882720947
    5. '_long' → logprob: -6.610025882720947
    6. 'len' → logprob: -7.110025882720947
    7. ' longe' → logprob: -7.485025882720947
    8. ' chaine' → logprob: -7.735025882720947
    9. ' longue' → logprob: -7.860025882720947
    10. ' long' → logprob: -8.235026359558105

Token 44: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.0002128382766386494
    2. 'cite' → logprob: -9.500212669372559
    3. 'it' → logprob: -9.625212669372559
    4. 'ic' → logprob: -10.500212669372559
    5. '#' → logprob: -11.375212669372559
    6. 'i' → logprob: -11.875212669372559
    7. '```' → logprob: -12.250212669372559
    8. ' ite' → logprob: -13.125212669372559
    9. 't' → logprob: -13.250212669372559
    10. 'site' → logprob: -13.250212669372559

Token 45: '
' (ID: 198)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.1870584636926651
    2. 'chaine' → logprob: -1.812058448791504
    3. 'lon' → logprob: -5.437058448791504
    4. ' longueur' → logprob: -6.687058448791504
    5. 'len' → logprob: -7.687058448791504
    6. '_long' → logprob: -7.937058448791504
    7. 'tail' → logprob: -8.062058448791504
    8. ' longue' → logprob: -9.312058448791504
    9. ' chaine' → logprob: -9.437058448791504
    10. ' longe' → logprob: -9.437058448791504

Token 46: 'long' (ID: 8431)
  Prédit: 'long'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.03511068597435951
    2. 'lon' → logprob: -4.2851104736328125
    3. ' longueur' → logprob: -4.6601104736328125
    4. 'chaine' → logprob: -4.9101104736328125
    5. 'len' → logprob: -6.2851104736328125
    6. ' long' → logprob: -7.0351104736328125
    7. ' longe' → logprob: -7.5351104736328125
    8. 'tail' → logprob: -8.785110473632812
    9. ' longue' → logprob: -8.785110473632812
    10. ' chaine' → logprob: -9.785110473632812

Token 47: 'ueur' (ID: 43728)
  Prédit: 'ueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ueur' → logprob: -0.00709552364423871
    2. 'eur' → logprob: -5.0070953369140625
    3. '_' → logprob: -8.007095336914062
    4. 'uer' → logprob: -11.132095336914062
    5. 'ue' → logprob: -11.507095336914062
    6. 'e' → logprob: -11.882095336914062
    7. ' =' → logprob: -12.132095336914062
    8. '_e' → logprob: -12.382095336914062
    9. 'er' → logprob: -12.882095336914062
    10. '=' → logprob: -14.007095336914062

Token 48: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0006702631362713873
    2. '_de' → logprob: -7.500670433044434
    3. '_chain' → logprob: -10.250670433044434
    4. '_=' → logprob: -10.500670433044434
    5. '_ch' → logprob: -10.875670433044434
    6. ' =' → logprob: -11.375670433044434
    7. '_string' → logprob: -12.500670433044434
    8. '_util' → logprob: -12.625670433044434
    9. '_str' → logprob: -13.000670433044434
    10. ' _' → logprob: -13.125670433044434

Token 49: 'chaine' (ID: 68916)
  Prédit: 'chaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.0001214237418025732
    2. 'cha' → logprob: -9.750121116638184
    3. 'util' → logprob: -11.250121116638184
    4. 'chain' → logprob: -11.250121116638184
    5. ' chaine' → logprob: -11.375121116638184
    6. '```' → logprob: -11.625121116638184
    7. 'texte' → logprob: -12.125121116638184
    8. 'user' → logprob: -12.375121116638184
    9. 'string' → logprob: -13.500121116638184
    10. 'ch' → logprob: -14.000121116638184

Token 50: '_util' (ID: 46866)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02050779014825821
    2. '_' → logprob: -4.0205078125
    3. '=' → logprob: -6.1455078125
    4. ' ' → logprob: -8.7705078125
    5. '_util' → logprob: -11.3955078125
    6. 's' → logprob: -11.7705078125
    7. ' _' → logprob: -11.8955078125
    8. '_=' → logprob: -12.0205078125
    9. '_es' → logprob: -12.5205078125
    10. '_space' → logprob: -13.0205078125

Token 51: 'isateur' (ID: 50127)
  Prédit: 'isateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isateur' → logprob: -0.06030358001589775
    2. ' =' → logprob: -3.3103036880493164
    3. 's' → logprob: -4.435303688049316
    4. 'is' → logprob: -5.435303688049316
    5. '=' → logprob: -6.435303688049316
    6. '```' → logprob: -7.435303688049316
    7. 'sage' → logprob: -7.685303688049316
    8. 'se' → logprob: -7.685303688049316
    9. 'isable' → logprob: -7.810303688049316
    10. 'isée' → logprob: -7.935303688049316

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038045283406972885
    2. '=' → logprob: -3.2880451679229736
    3. '=len' → logprob: -12.788044929504395
    4. ' ' → logprob: -14.663044929504395
    5. 's' → logprob: -15.663044929504395
    6. 'len' → logprob: -15.913044929504395
    7. '=int' → logprob: -16.03804588317871
    8. 'chaine' → logprob: -16.66304588317871
    9. '_' → logprob: -16.78804588317871
    10. ' ' → logprob: -17.03804588317871

Token 53: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.03804183006286621
    2. 'len' → logprob: -3.288041830062866
    3. '(len' → logprob: -15.413042068481445
    4. ' ' → logprob: -16.288042068481445
    5. '=len' → logprob: -17.413042068481445
    6. ' ' → logprob: -18.288042068481445
    7. '	len' → logprob: -18.413042068481445
    8. ',len' → logprob: -20.538042068481445
    9. '[len' → logprob: -20.663042068481445
    10. ' strlen' → logprob: -21.288042068481445

Token 54: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5570885807392187e-05
    2. ' (' → logprob: -11.250015258789062
    3. '()' → logprob: -14.625015258789062
    4. '(
' → logprob: -14.875015258789062
    5. '(

' → logprob: -15.125015258789062
    6. '(chain' → logprob: -15.125015258789062
    7. '(user' → logprob: -15.500015258789062
    8. '('' → logprob: -15.750015258789062
    9. '(`' → logprob: -16.000015258789062
    10. 'chaine' → logprob: -16.500015258789062

Token 55: 'chaine' (ID: 68916)
  Prédit: 'chaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.002819851040840149
    2. ' chaine' → logprob: -5.877820014953613
    3. 'cha' → logprob: -12.377820014953613
    4. '(' → logprob: -12.627820014953613
    5. ' chaîne' → logprob: -12.752820014953613
    6. 'chain' → logprob: -12.877820014953613
    7. ' ' → logprob: -14.252820014953613
    8. 'chai' → logprob: -14.502820014953613
    9. '   ' → logprob: -15.502820014953613
    10. '```' → logprob: -15.877820014953613

Token 56: '_util' (ID: 46866)
  Prédit: '_util'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_util' → logprob: -0.00043102685594931245
    2. '_' → logprob: -7.750431060791016
    3. '_user' → logprob: -15.500431060791016
    4. '_ut' → logprob: -16.750431060791016
    5. ' _' → logprob: -17.500431060791016
    6. '_utils' → logprob: -18.000431060791016
    7. '(util' → logprob: -18.250431060791016
    8. 'util' → logprob: -18.250431060791016
    9. '_UTIL' → logprob: -18.750431060791016
    10. '_)' → logprob: -19.125431060791016

Token 57: 'isateur' (ID: 50127)
  Prédit: 'isateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isateur' → logprob: -0.0003685861302074045
    2. 'iseur' → logprob: -9.000368118286133
    3. 'is' → logprob: -9.375368118286133
    4. 'ateur' → logprob: -9.500368118286133
    5. 'isa' → logprob: -10.125368118286133
    6. 's' → logprob: -11.250368118286133
    7. '_util' → logprob: -11.875368118286133
    8. 'isat' → logprob: -12.375368118286133
    9. 'sa' → logprob: -12.750368118286133
    10. '_' → logprob: -13.000368118286133

Token 58: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.522638169466518e-05
    2. ' )' → logprob: -10.750024795532227
    3. ')
' → logprob: -13.125024795532227
    4. '))' → logprob: -13.750024795532227
    5. '())' → logprob: -15.125024795532227
    6. '()' → logprob: -15.500024795532227
    7. ')

' → logprob: -17.125024795532227
    8. '(' → logprob: -17.250024795532227
    9. '`)' → logprob: -17.625024795532227
    10. '）' → logprob: -17.750024795532227

Token 59: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1282258927822113
    2. '#' → logprob: -2.253225803375244
    3. ')' → logprob: -5.128225803375244
    4. '<|end|>' → logprob: -5.503225803375244
    5. '
' → logprob: -6.253225803375244
    6. '#print' → logprob: -7.503225803375244
    7. '```' → logprob: -7.503225803375244
    8. ' print' → logprob: -7.753225803375244
    9. ' ' → logprob: -8.253226280212402
    10. '.' → logprob: -8.378226280212402

Token 60: ' Gén' (ID: 71828)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.051004551351070404
    2. ' print' → logprob: -3.051004648208618
    3. '#' → logprob: -6.801004409790039
    4. 'if' → logprob: -7.176004409790039
    5. ' if' → logprob: -8.176004409790039
    6. 'Afficher' → logprob: -9.051004409790039
    7. 'aff' → logprob: -9.801004409790039
    8. ' #' → logprob: -10.801004409790039
    9. 'Print' → logprob: -10.801004409790039
    10. '#print' → logprob: -11.426004409790039

Token 61: 'érer' (ID: 29097)
  Prédit: 'érer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.005751491524279118
    2. 'er' → logprob: -6.130751609802246
    3. '#' → logprob: -6.380751609802246
    4. 'éral' → logprob: -6.505751609802246
    5. 'erer' → logprob: -8.630751609802246
    6. 'ér' → logprob: -8.880751609802246
    7. 'ération' → logprob: -11.505751609802246
    8. 'é' → logprob: -11.505751609802246
    9. 'éer' → logprob: -11.880751609802246
    10. 'eral' → logprob: -11.880751609802246

Token 62: ' une' (ID: 2463)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08655142784118652
    2. '_un' → logprob: -3.3365514278411865
    3. 'une' → logprob: -4.211551666259766
    4. ' un' → logprob: -4.461551666259766
    5. ' une' → logprob: -4.461551666259766
    6. 'un' → logprob: -6.711551666259766
    7. '_la' → logprob: -6.836551666259766
    8. '()' → logprob: -7.086551666259766
    9. ' ' → logprob: -7.211551666259766
    10. '#' → logprob: -7.461551666259766

Token 63: ' nouvelle' (ID: 24562)
  Prédit: ' nouvelle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nouvelle' → logprob: -1.1689361333847046
    2. 'chaine' → logprob: -1.4189361333847046
    3. ' phrase' → logprob: -1.7939361333847046
    4. 'nou' → logprob: -2.668936252593994
    5. ' chaîne' → logprob: -2.793936252593994
    6. 'phrase' → logprob: -2.918936252593994
    7. '_' → logprob: -3.168936252593994
    8. ' liste' → logprob: -4.293936252593994
    9. ' chaine' → logprob: -4.418936252593994
    10. 'liste' → logprob: -4.668936252593994

Token 64: ' chaîne' (ID: 89288)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03641343489289284
    2. ' chaîne' → logprob: -4.161413669586182
    3. ' chaine' → logprob: -4.286413669586182
    4. 'chaine' → logprob: -5.286413669586182
    5. ' _' → logprob: -6.786413669586182
    6. ' ' → logprob: -9.911413192749023
    7. '_string' → logprob: -10.286413192749023
    8. '_phrase' → logprob: -10.286413192749023
    9. 's' → logprob: -10.536413192749023
    10. '_c' → logprob: -11.161413192749023

Token 65: ' composée' (ID: 146865)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1656131148338318
    2. ' =' → logprob: -2.2906131744384766
    3. 'chaine' → logprob: -3.4156131744384766
    4. '_new' → logprob: -6.290613174438477
    5. '_s' → logprob: -6.415613174438477
    6. ' _' → logprob: -6.415613174438477
    7. '_n' → logprob: -6.665613174438477
    8. '_upper' → logprob: -6.915613174438477
    9. '_v' → logprob: -7.040613174438477
    10. '_mod' → logprob: -7.165613174438477

Token 66: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.44730058312416077
    2. ' de' → logprob: -2.072300672531128
    3. ' d' → logprob: -2.322300672531128
    4. '_d' → logprob: -3.197300672531128
    5. '_de' → logprob: -3.447300672531128
    6. 'd' → logprob: -3.572300672531128
    7. 'de' → logprob: -3.822300672531128
    8. ' ' → logprob: -5.447300434112549
    9. 's' → logprob: -6.822300434112549
    10. 'chaine' → logprob: -6.947300434112549

Token 67: ' '' (ID: 461)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.543480396270752
    2. ' chaine' → logprob: -1.418480396270752
    3. ' '' → logprob: -3.043480396270752
    4. ' "' → logprob: -3.168480396270752
    5. ''' → logprob: -3.418480396270752
    6. '"' → logprob: -3.543480396270752
    7. ' ' → logprob: -5.543480396270752
    8. ' '_'' → logprob: -5.793480396270752
    9. ' "_"' → logprob: -5.793480396270752
    10. ' la' → logprob: -6.043480396270752

Token 68: 'x' (ID: 87)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.45879891514778137
    2. 'chaine' → logprob: -1.333798885345459
    3. ''*' → logprob: -2.833798885345459
    4. '#' → logprob: -4.333798885345459
    5. ''' → logprob: -4.458798885345459
    6. ' '*'' → logprob: -5.333798885345459
    7. '"' → logprob: -5.958798885345459
    8. '-' → logprob: -6.083798885345459
    9. ' *' → logprob: -6.333798885345459
    10. ' chaine' → logprob: -6.583798885345459

Token 69: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08251233398914337
    2. '*' → logprob: -3.582512378692627
    3. 'x' → logprob: -3.707512378692627
    4. ''*' → logprob: -4.957512378692627
    5. 'e' → logprob: -5.207512378692627
    6. 's' → logprob: -5.707512378692627
    7. ''s' → logprob: -5.957512378692627
    8. ' ' → logprob: -6.707512378692627
    9. ''x' → logprob: -6.707512378692627
    10. ' '' → logprob: -6.957512378692627

Token 70: ' répét' (ID: 156936)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7074271440505981
    2. ' *' → logprob: -0.7074271440505981
    3. 'long' → logprob: -4.457427024841309
    4. ' long' → logprob: -6.707427024841309
    5. 's' → logprob: -7.957427024841309
    6. '_long' → logprob: -8.207427024841309
    7. ' ' → logprob: -8.707427024841309
    8. ' longueur' → logprob: -9.332427024841309
    9. ' longue' → logprob: -9.832427024841309
    10. '```' → logprob: -10.082427024841309

Token 71: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.4871199131011963
    2. 'é' → logprob: -0.9871199131011963
    3. 'ées' → logprob: -4.987119674682617
    4. 'e' → logprob: -5.362119674682617
    5. 'ee' → logprob: -6.862119674682617
    6. 'er' → logprob: -8.612119674682617
    7. 'es' → logprob: -9.737119674682617
    8. 'ant' → logprob: -9.987119674682617
    9. ''' → logprob: -10.612119674682617
    10. '*' → logprob: -10.862119674682617

Token 72: ' autant' (ID: 46683)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.014676275663077831
    2. ' long' → logprob: -5.014676094055176
    3. ' longueur' → logprob: -5.014676094055176
    4. 's' → logprob: -7.639676094055176
    5. '(long' → logprob: -7.639676094055176
    6. '_long' → logprob: -9.389676094055176
    7. 'length' → logprob: -9.389676094055176
    8. ' longue' → logprob: -9.639676094055176
    9. ' ' → logprob: -11.014676094055176
    10. ' =' → logprob: -11.514676094055176

Token 73: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.14907561242580414
    2. ' de' → logprob: -2.149075508117676
    3. 's' → logprob: -4.524075508117676
    4. 'fois' → logprob: -4.899075508117676
    5. 'que' → logprob: -6.649075508117676
    6. 'times' → logprob: -7.274075508117676
    7. ' fois' → logprob: -7.774075508117676
    8. ' que' → logprob: -8.399075508117676
    9. 'es' → logprob: -8.649075508117676
    10. '_de' → logprob: -8.774075508117676

Token 74: ' fois' (ID: 14697)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.19755588471889496
    2. 'long' → logprob: -2.3225557804107666
    3. ' fois' → logprob: -2.5725557804107666
    4. 'times' → logprob: -5.822556018829346
    5. ' times' → logprob: -7.447556018829346
    6. 'la' → logprob: -7.572556018829346
    7. ' long' → logprob: -7.697556018829346
    8. ' ' → logprob: -8.947555541992188
    9. ' veces' → logprob: -9.822555541992188
    10. ' la' → logprob: -10.447555541992188

Token 75: ' que' (ID: 661)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.015116927213966846
    2. ' long' → logprob: -4.5151166915893555
    3. '(long' → logprob: -6.1401166915893555
    4. ' longueur' → logprob: -6.5151166915893555
    5. '_long' → logprob: -9.140116691589355
    6. ' =' → logprob: -9.140116691589355
    7. ' longue' → logprob: -10.140116691589355
    8. 'par' → logprob: -10.515116691589355
    9. 'length' → logprob: -10.515116691589355
    10. ' par' → logprob: -10.890116691589355

Token 76: ' la' (ID: 557)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.034383006393909454
    2. ' longueur' → logprob: -3.4093830585479736
    3. ' long' → logprob: -7.6593828201293945
    4. 'la' → logprob: -8.784382820129395
    5. ' la' → logprob: -10.284382820129395
    6. 'length' → logprob: -10.534382820129395
    7. ' longue' → logprob: -11.284382820129395
    8. 'l' → logprob: -11.659382820129395
    9. ' ' → logprob: -11.784382820129395
    10. '_long' → logprob: -11.909382820129395

Token 77: ' longueur' (ID: 104613)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.07930348813533783
    2. ' longueur' → logprob: -2.579303503036499
    3. ' long' → logprob: -8.079303741455078
    4. 'len' → logprob: -10.329303741455078
    5. '_long' → logprob: -10.704303741455078
    6. ' longue' → logprob: -10.704303741455078
    7. 'length' → logprob: -11.079303741455078
    8. ' ' → logprob: -12.704303741455078
    9. 'chaine' → logprob: -13.954303741455078
    10. '```' → logprob: -14.454303741455078

Token 78: ' de' (ID: 334)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.3228888511657715
    2. '_' → logprob: -2.5728888511657715
    3. 'de' → logprob: -2.6978888511657715
    4. ' de' → logprob: -2.9478888511657715
    5. '_long' → logprob: -3.5728888511657715
    6. ' long' → logprob: -3.6978888511657715
    7. '_de' → logprob: -4.3228888511657715
    8. '(long' → logprob: -5.5728888511657715
    9. ' =' → logprob: -5.6978888511657715
    10. ' ' → logprob: -6.4478888511657715

Token 79: ' la' (ID: 557)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.5163933038711548
    2. 'long' → logprob: -1.2663933038711548
    3. ' chaine' → logprob: -2.6413931846618652
    4. ' longueur' → logprob: -4.141393184661865
    5. 'la' → logprob: -4.641393184661865
    6. '_' → logprob: -4.891393184661865
    7. '_long' → logprob: -5.141393184661865
    8. ' long' → logprob: -5.391393184661865
    9. ' la' → logprob: -6.141393184661865
    10. ' ' → logprob: -6.266393184661865

Token 80: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.14438870549201965
    2. ' chaine' → logprob: -2.3943886756896973
    3. ' chaîne' → logprob: -3.2693886756896973
    4. 'cha' → logprob: -6.019388675689697
    5. 'long' → logprob: -7.144388675689697
    6. ' ' → logprob: -7.519388675689697
    7. ' long' → logprob: -7.894388675689697
    8. ' ' → logprob: -8.519389152526855
    9. '_' → logprob: -8.894389152526855
    10. 'chain' → logprob: -8.956889152526855

Token 81: ' d' (ID: 272)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.030391912907361984
    2. '_' → logprob: -4.405391693115234
    3. '_long' → logprob: -4.780391693115234
    4. 'chaine' → logprob: -5.030391693115234
    5. ' long' → logprob: -6.280391693115234
    6. '`' → logprob: -8.905391693115234
    7. '```' → logprob: -9.155391693115234
    8. '(long' → logprob: -9.155391693115234
    9. ' longueur' → logprob: -9.280391693115234
    10. ' =' → logprob: -9.780391693115234

Token 82: ''entrée' (ID: 115820)
  Prédit: ''utilisateur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.30299919843673706
    2. ''entrée' → logprob: -2.052999258041382
    3. 'e' → logprob: -3.052999258041382
    4. ''' → logprob: -3.552999258041382
    5. ''origine' → logprob: -3.802999258041382
    6. '’utilisateur' → logprob: -5.427999019622803
    7. ' utilisateur' → logprob: -5.677999019622803
    8. '_util' → logprob: -5.802999019622803
    9. 'util' → logprob: -5.927999019622803
    10. 'u' → logprob: -6.052999019622803

Token 83: '
' (ID: 198)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04108775407075882
    2. ' =' → logprob: -4.791087627410889
    3. ''' → logprob: -4.916087627410889
    4. ' x' → logprob: -5.291087627410889
    5. ''x' → logprob: -5.416087627410889
    6. 'new' → logprob: -5.791087627410889
    7. 'n' → logprob: -5.791087627410889
    8. 's' → logprob: -6.291087627410889
    9. ' ' → logprob: -6.666087627410889
    10. '_' → logprob: -7.041087627410889

Token 84: 'chaine' (ID: 68916)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029150916263461113
    2. ''x' → logprob: -4.15415096282959
    3. ''' → logprob: -5.77915096282959
    4. '"x' → logprob: -6.02915096282959
    5. 'nou' → logprob: -6.15415096282959
    6. 'chaine' → logprob: -6.52915096282959
    7. ' x' → logprob: -6.65415096282959
    8. 'new' → logprob: -7.02915096282959
    9. 'n' → logprob: -7.15415096282959
    10. '"' → logprob: -8.40415096282959

Token 85: '_m' (ID: 1285)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.48756977915763855
    2. '_util' → logprob: -1.362569808959961
    3. '_' → logprob: -2.612569808959961
    4. '_rem' → logprob: -4.237569808959961
    5. '_re' → logprob: -4.612569808959961
    6. '_repeat' → logprob: -4.862569808959961
    7. '_comp' → logprob: -4.987569808959961
    8. '_gener' → logprob: -5.612569808959961
    9. '_n' → logprob: -5.987569808959961
    10. '_rep' → logprob: -6.362569808959961

Token 86: 'as' (ID: 288)
  Prédit: 'asque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'asque' → logprob: -0.7577527165412903
    2. 'od' → logprob: -1.7577526569366455
    3. 'a' → logprob: -1.8827526569366455
    4. 'ax' → logprob: -2.7577526569366455
    5. '_x' → logprob: -3.3827526569366455
    6. 'x' → logprob: -3.6327526569366455
    7. 'an' → logprob: -4.757752895355225
    8. '_' → logprob: -4.882752895355225
    9. 'essage' → logprob: -5.007752895355225
    10. 'ultip' → logprob: -5.132752895355225

Token 87: 'quee' (ID: 29950)
  Prédit: 'quee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quee' → logprob: -0.08085962384939194
    2. 'ee' → logprob: -3.080859661102295
    3. 'ue' → logprob: -4.580859661102295
    4. 'quée' → logprob: -4.955859661102295
    5. 'que' → logprob: -5.455859661102295
    6. 'e' → logprob: -5.705859661102295
    7. 'q' → logprob: -5.830859661102295
    8. 'ée' → logprob: -6.080859661102295
    9. '_' → logprob: -7.205859661102295
    10. 'qu' → logprob: -8.205859184265137

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0036037517711520195
    2. '=' → logprob: -5.628603935241699
    3. ' ' → logprob: -13.0036039352417
    4. ' ='' → logprob: -14.0036039352417
    5. 's' → logprob: -15.7536039352417
    6. ' ' → logprob: -16.253602981567383
    7. ' ="' → logprob: -16.253602981567383
    8. ' =
' → logprob: -16.503602981567383
    9. '='' → logprob: -17.003602981567383
    10. '_' → logprob: -17.003602981567383

Token 89: ' "' (ID: 392)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.584786057472229
    2. ''x' → logprob: -0.834786057472229
    3. '"x' → logprob: -5.4597859382629395
    4. ''' → logprob: -5.7097859382629395
    5. ' "' → logprob: -6.9597859382629395
    6. 'x' → logprob: -8.834786415100098
    7. ' ' → logprob: -9.584786415100098
    8. ' x' → logprob: -10.209786415100098
    9. '"' → logprob: -10.334786415100098
    10. ' ' → logprob: -13.209786415100098

Token 90: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.27099974633893e-05
    2. '"x' → logprob: -11.500012397766113
    3. ''x' → logprob: -13.125012397766113
    4. ' x' → logprob: -14.625012397766113
    5. '"' → logprob: -17.25001335144043
    6. ''' → logprob: -18.25001335144043
    7. 'xxxxxxxx' → logprob: -19.25001335144043
    8. 'xxxx' → logprob: -19.50001335144043
    9. '	x' → logprob: -19.87501335144043
    10. '```' → logprob: -20.25001335144043

Token 91: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.735893965815194e-05
    2. '"*' → logprob: -11.000017166137695
    3. ' "' → logprob: -15.125017166137695
    4. '"x' → logprob: -16.000017166137695
    5. '"""' → logprob: -16.250017166137695
    6. ''' → logprob: -16.750017166137695
    7. '*' → logprob: -17.500017166137695
    8. '""' → logprob: -18.000017166137695
    9. '"`' → logprob: -18.375017166137695
    10. '```' → logprob: -18.500017166137695

Token 92: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2519422471523285
    2. ' *' → logprob: -1.5019422769546509
    3. '"' → logprob: -12.62694263458252
    4. ' ' → logprob: -13.62694263458252
    5. ' ' → logprob: -13.87694263458252
    6. 'chaine' → logprob: -14.12694263458252
    7. '**' → logprob: -14.37694263458252
    8. '*num' → logprob: -14.37694263458252
    9. '*q' → logprob: -14.87694263458252
    10. '[' → logprob: -14.87694263458252

Token 93: ' longueur' (ID: 104613)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.0009155054576694965
    2. ' longueur' → logprob: -7.00091552734375
    3. 'length' → logprob: -13.12591552734375
    4. ' long' → logprob: -13.62591552734375
    5. 'lon' → logprob: -15.50091552734375
    6. ' longue' → logprob: -15.50091552734375
    7. 'len' → logprob: -15.87591552734375
    8. '_long' → logprob: -16.37591552734375
    9. '(long' → logprob: -16.62591552734375
    10. 'longitude' → logprob: -16.75091552734375

Token 94: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.320199877838604e-07
    2. ' _' → logprob: -15.75
    3. '__' → logprob: -17.0
    4. '___' → logprob: -17.125
    5. '_\' → logprob: -17.625
    6. '_long' → logprob: -17.625
    7. '_chain' → logprob: -17.875
    8. '_

' → logprob: -18.0
    9. '＿' → logprob: -18.5
    10. '_-' → logprob: -18.75

Token 95: 'chaine' (ID: 68916)
  Prédit: 'chaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -5.796184723294573e-06
    2. ' chaine' → logprob: -12.375005722045898
    3. 'chine' → logprob: -14.750005722045898
    4. '```' → logprob: -15.000005722045898
    5. 'c' → logprob: -15.750005722045898
    6. 'cha' → logprob: -15.750005722045898
    7. 'chai' → logprob: -15.875005722045898
    8. ' ' → logprob: -16.1250057220459
    9. 'chain' → logprob: -16.7500057220459
    10. '_' → logprob: -17.0000057220459

Token 96: '_util' (ID: 46866)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00048107770271599293
    2. '_util' → logprob: -7.750481128692627
    3. 'e' → logprob: -10.000480651855469
    4. 'chaine' → logprob: -14.125480651855469
    5. ' _' → logprob: -14.250480651855469
    6. '_chain' → logprob: -14.375480651855469
    7. '__' → logprob: -14.875480651855469
    8. '_e' → logprob: -15.250480651855469
    9. '_user' → logprob: -15.375480651855469
    10. '_f' → logprob: -15.375480651855469

Token 97: 'isateur' (ID: 50127)
  Prédit: 'isateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isateur' → logprob: -0.3901992738246918
    2. 's' → logprob: -1.1401993036270142
    3. 'is' → logprob: -5.890199184417725
    4. '_s' → logprob: -8.640199661254883
    5. 'sage' → logprob: -8.890199661254883
    6. 'iseur' → logprob: -9.515199661254883
    7. 'ateur' → logprob: -10.390199661254883
    8. 'isateurs' → logprob: -10.640199661254883
    9. 'sat' → logprob: -11.015199661254883
    10. 'sar' → logprob: -11.015199661254883

Token 98: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13898418843746185
    2. '#' → logprob: -3.138984203338623
    3. '
' → logprob: -3.138984203338623
    4. '<|end|>' → logprob: -3.263984203338623
    5. '\n' → logprob: -6.888984203338623
    6. '```' → logprob: -7.138984203338623
    7. '\' → logprob: -7.638984203338623
    8. ' print' → logprob: -7.638984203338623
    9. '#print' → logprob: -7.763984203338623
    10. ' 
' → logprob: -7.763984203338623

Token 99: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06084291636943817
    2. '#' → logprob: -2.935842990875244
    3. '<|end|>' → logprob: -5.310842990875244
    4. '```' → logprob: -7.810842990875244
    5. '#print' → logprob: -8.685842514038086
    6. ' print' → logprob: -9.060842514038086
    7. '
' → logprob: -9.685842514038086
    8. ' ' → logprob: -9.685842514038086
    9. '\n' → logprob: -10.060842514038086
    10. '\' → logprob: -10.060842514038086

Token 100: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.159660890465602e-05
    2. '#' → logprob: -9.87507152557373
    3. ' print' → logprob: -11.62507152557373
    4. 'prin' → logprob: -12.37507152557373
    5. '#print' → logprob: -12.87507152557373
    6. 'Print' → logprob: -13.00007152557373
    7. 'pr' → logprob: -13.87507152557373
    8. 'pri' → logprob: -15.00007152557373
    9. 'Afficher' → logprob: -15.12507152557373
    10. 'Pr' → logprob: -15.75007152557373

Token 101: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0013208347372710705
    2. '#' → logprob: -6.876320838928223
    3. 'iche' → logprob: -8.876320838928223
    4. 'i' → logprob: -10.001320838928223
    5. 'cher' → logprob: -10.001320838928223
    6. 'ichage' → logprob: -10.876320838928223
    7. 'ic' → logprob: -11.126320838928223
    8. 'ich' → logprob: -11.751320838928223
    9. '   ' → logprob: -12.751320838928223
    10. '```' → logprob: -12.876320838928223

Token 102: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.88418151892256e-05
    2. ' (' → logprob: -10.125059127807617
    3. 'chaine' → logprob: -11.750059127807617
    4. '("' → logprob: -12.375059127807617
    5. '()' → logprob: -12.500059127807617
    6. '('' → logprob: -13.750059127807617
    7. '(chain' → logprob: -14.250059127807617
    8. '(len' → logprob: -15.375059127807617
    9. '(
' → logprob: -15.750059127807617
    10. '(`' → logprob: -15.875059127807617

Token 103: ' chaîne' (ID: 89288)
  Prédit: ' chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaine' → logprob: -0.563621461391449
    2. 'chaine' → logprob: -0.938621461391449
    3. ' chaîne' → logprob: -3.3136215209960938
    4. ' ' → logprob: -6.188621520996094
    5. '_' → logprob: -7.563621520996094
    6. 's' → logprob: -8.813621520996094
    7. 'chain' → logprob: -8.938621520996094
    8. 'cha' → logprob: -9.063621520996094
    9. '   ' → logprob: -9.938621520996094
    10. ' chain' → logprob: -10.063621520996094

Token 104: ' mas' (ID: 2948)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.11174849420785904
    2. '_' → logprob: -2.611748456954956
    3. 'mas' → logprob: -3.986748456954956
    4. 'chaine' → logprob: -4.361748695373535
    5. 'print' → logprob: -7.861748695373535
    6. 'masked' → logprob: -8.736748695373535
    7. ' masque' → logprob: -9.111748695373535
    8. ' mas' → logprob: -9.736748695373535
    9. '_mask' → logprob: -9.861748695373535
    10. ' _' → logprob: -9.986748695373535

Token 105: 'quée' (ID: 63772)
  Prédit: 'quée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quée' → logprob: -0.3003503382205963
    2. 'quee' → logprob: -1.550350308418274
    3. 'q' → logprob: -3.4253504276275635
    4. 'qu' → logprob: -4.925350189208984
    5. 'ch' → logprob: -5.800350189208984
    6. 'cée' → logprob: -6.425350189208984
    7. 's' → logprob: -6.675350189208984
    8. 'ée' → logprob: -7.550350189208984
    9. '"' → logprob: -8.675350189208984
    10. 'c' → logprob: -9.050350189208984

Token 106: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002560945285949856
    2. 'chaine' → logprob: -9.125256538391113
    3. ' print' → logprob: -9.500256538391113
    4. '
' → logprob: -9.750256538391113
    5. ' 
' → logprob: -12.625256538391113
    6. '(' → logprob: -13.125256538391113
    7. '```' → logprob: -13.250256538391113
    8. '(
' → logprob: -13.625256538391113
    9. '(print' → logprob: -13.750256538391113
    10. '  
' → logprob: -13.750256538391113

Token 107: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.25
    3. 'chaine' → logprob: -20.0
    4. 'prin' → logprob: -20.25
    5. '```' → logprob: -21.125
    6. 'prit' → logprob: -21.25
    7. 'pr' → logprob: -22.75
    8. 'println' → logprob: -23.875
    9. '#print' → logprob: -24.5
    10. '
' → logprob: -24.625

Token 108: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.3213025744771585e-05
    2. '()' → logprob: -11.250033378601074
    3. ' (' → logprob: -11.875033378601074
    4. '("("' → logprob: -12.000033378601074
    5. '('' → logprob: -12.750033378601074
    6. '(
' → logprob: -13.250033378601074
    7. '(

' → logprob: -14.125033378601074
    8. '("' → logprob: -14.250033378601074
    9. '(`' → logprob: -15.375033378601074
    10. '("")' → logprob: -15.875033378601074

Token 109: 'chaine' (ID: 68916)
  Prédit: 'chaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -1.676292231422849e-05
    2. ' chaine' → logprob: -11.000017166137695
    3. 'cha' → logprob: -17.625017166137695
    4. 'chain' → logprob: -18.125017166137695
    5. '   ' → logprob: -19.375017166137695
    6. 'chai' → logprob: -19.750017166137695
    7. ' chaîne' → logprob: -19.875017166137695
    8. ' ' → logprob: -20.125017166137695
    9. 'chine' → logprob: -21.375017166137695
    10. '"' → logprob: -21.375017166137695

Token 110: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0004652273200917989
    2. '_' → logprob: -7.750465393066406
    3. '_ma' → logprob: -10.750465393066406
    4. '_util' → logprob: -11.500465393066406
    5. '_mask' → logprob: -13.500465393066406
    6. '_)' → logprob: -14.000465393066406
    7. ')' → logprob: -14.875465393066406
    8. 'chaine' → logprob: -16.000465393066406
    9. '_chain' → logprob: -16.875465393066406
    10. ')_' → logprob: -17.250465393066406

Token 111: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.016449568793177605
    2. 'asque' → logprob: -4.266449451446533
    3. 'assee' → logprob: -6.516449451446533
    4. 'mas' → logprob: -7.516449451446533
    5. 'ase' → logprob: -8.766449928283691
    6. 'quee' → logprob: -11.141449928283691
    7. 'a' → logprob: -11.391449928283691
    8. 'asche' → logprob: -11.641449928283691
    9. 'Mas' → logprob: -11.766449928283691
    10. 'aque' → logprob: -12.016449928283691

Token 112: 'quee' (ID: 29950)
  Prédit: 'quee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quee' → logprob: -0.024850571528077126
    2. 'ee' → logprob: -3.899850606918335
    3. 'e' → logprob: -5.649850368499756
    4. 'ée' → logprob: -8.274850845336914
    5. 'quée' → logprob: -9.024850845336914
    6. 'ue' → logprob: -9.024850845336914
    7. 'q' → logprob: -9.274850845336914
    8. 'que' → logprob: -9.524850845336914
    9. 'eee' → logprob: -9.899850845336914
    10. 'ed' → logprob: -11.774850845336914

Token 113: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ' )' → logprob: -12.625003814697266
    3. '))' → logprob: -15.750003814697266
    4. ')`' → logprob: -15.875003814697266
    5. '`)' → logprob: -17.125003814697266
    6. ')
' → logprob: -18.375003814697266
    7. '')' → logprob: -18.500003814697266
    8. '")' → logprob: -19.250003814697266
    9. '）' → logprob: -19.500003814697266
    10. '()' → logprob: -19.500003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 111
Tokens correctement prédits (1ère position, stricte): 40
Tokens correctement prédits (1ère position, avec adaptation): 40
Tokens correctement prédits (top 10): 79
Précision stricte (1ère position): 36.04%
Précision adaptée (1ère position): 36.04%
Précision (top 10): 71.17%
================================================================================
