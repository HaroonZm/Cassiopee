================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:49:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys, os, math, bisect, itertools, collections, heapq, queue
from decimal import Decimal
from collections import defaultdict, deque
from functools import reduce
from operator import mul

sys.setrecursionlimit(10**8 + 7)

ii = lambda: int(''.join(map(chr, sys.stdin.buffer.readline().rstrip())))
il = lambda: list(map(lambda x: int(Decimal(x)), sys.stdin.buffer.readline().split()))
fl = lambda: list(itertools.starmap(float, zip(sys.stdin.buffer.readline().split())))
iln = lambda n: list(map(lambda _: int(sys.stdin.buffer.readline().rstrip()), range(n)))

iss = lambda: ''.join(map(chr, sys.stdin.buffer.readline().rstrip()))
sl = lambda: list(map(''.join, zip(*[iter(sys.stdin.buffer.readline().decode().split())]*1)))
isn = lambda n: [sys.stdin.buffer.readline().decode().rstrip() for _ in itertools.repeat(None, n)]

lcm = lambda x, y: (reduce(mul, [x, y], 1)) // math.gcd(x, y)

MOD = pow(10,9) + 7
MAX = sum(itertools.islice(itertools.repeat(float('inf')), 1))

def main():
    os.getenv("LOCAL") and setattr(sys, 'stdin', open("input.txt"))
    N = ii()
    ret = sum(
        filter(
            lambda x: x,
            map(
                lambda n: all([len(str(n)) % 2, len(str(n)) <= len(str(N))]),
                range(1, N + 1)
            )
        )
    )
    print(ret)

if __name__ == '__main__':
    (lambda f: f())(main)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' os' (ID: 1994)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.011049943044781685
    2. ' os' → logprob: -4.511049747467041
    3. 'io' → logprob: -13.8860502243042
    4. 'json' → logprob: -14.7610502243042
    5. '"os' → logprob: -14.7610502243042
    6. 'math' → logprob: -15.2610502243042
    7. 're' → logprob: -16.011049270629883
    8. ' getopt' → logprob: -17.136049270629883
    9. '	os' → logprob: -17.386049270629883
    10. 'time' → logprob: -18.011049270629883

Token 4: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.13224661350250244
    2. '<|end|>' → logprob: -2.382246494293213
    3. '
' → logprob: -4.632246494293213
    4. 'import' → logprob: -5.007246494293213
    5. ',' → logprob: -5.632246494293213
    6. '\' → logprob: -5.882246494293213
    7. '```' → logprob: -6.007246494293213
    8. '

' → logprob: -6.507246494293213
    9. 'newline' → logprob: -6.882246494293213
    10. '<|end|>' → logprob: -7.007246494293213

Token 5: ' math' (ID: 13324)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -1.0079236030578613
    2. ' re' → logprob: -1.5079236030578613
    3. ' subprocess' → logprob: -1.5079236030578613
    4. ',' → logprob: -2.7579236030578613
    5. ' ' → logprob: -3.6329236030578613
    6. 'math' → logprob: -4.007923603057861
    7. 'json' → logprob: -4.007923603057861
    8. 'sub' → logprob: -4.757923603057861
    9. 'import' → logprob: -4.882923603057861
    10. ' pathlib' → logprob: -4.882923603057861

Token 6: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37210676074028015
    2. '<|end|>' → logprob: -1.7471067905426025
    3. '\n' → logprob: -2.6221067905426025
    4. 'import' → logprob: -3.1221067905426025
    5. '.' → logprob: -5.122106552124023
    6. '
' → logprob: -5.247106552124023
    7. '```' → logprob: -5.872106552124023
    8. '<|end|>' → logprob: -6.497106552124023
    9. '' → logprob: -7.122106552124023
    10. ';' → logprob: -7.122106552124023

Token 7: ' bis' (ID: 7204)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.2262999713420868
    2. 're' → logprob: -1.7263000011444092
    3. ' random' → logprob: -4.85129976272583
    4. 'json' → logprob: -5.35129976272583
    5. 'time' → logprob: -5.72629976272583
    6. ' re' → logprob: -5.85129976272583
    7. 'it' → logprob: -6.10129976272583
    8. 'statistics' → logprob: -7.22629976272583
    9. 'datetime' → logprob: -7.60129976272583
    10. 'collections' → logprob: -7.72629976272583

Token 8: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0001483564410591498
    2. 't' → logprob: -9.25014877319336
    3. 'e' → logprob: -11.12514877319336
    4. '}' → logprob: -12.00014877319336
    5. '```' → logprob: -12.00014877319336
    6. 'ec' → logprob: -12.62514877319336
    7. 'ected' → logprob: -12.75014877319336
    8. '%' → logprob: -12.87514877319336
    9. '>' → logprob: -12.87514877319336
    10. '\t' → logprob: -13.37514877319336

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03978043049573898
    2. '<|end|>' → logprob: -3.414780378341675
    3. 'import' → logprob: -5.664780616760254
    4. '.' → logprob: -6.664780616760254
    5. '\n' → logprob: -7.914780616760254
    6. '' → logprob: -8.664780616760254
    7. '<|end|>' → logprob: -8.789780616760254
    8. '```' → logprob: -9.164780616760254
    9. ' ,' → logprob: -9.289780616760254
    10. '
' → logprob: -9.289780616760254

Token 10: ' itertools' (ID: 103178)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.8070204257965088
    2. 'collections' → logprob: -0.8070204257965088
    3. 'it' → logprob: -2.432020425796509
    4. 'random' → logprob: -4.18202018737793
    5. 're' → logprob: -6.05702018737793
    6. 'copy' → logprob: -6.80702018737793
    7. 'operator' → logprob: -8.05702018737793
    8. 'thread' → logprob: -9.18202018737793
    9. 'io' → logprob: -9.30702018737793
    10. ' itertools' → logprob: -9.30702018737793

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02176332101225853
    2. 'import' → logprob: -4.771763324737549
    3. '.' → logprob: -5.021763324737549
    4. '<|end|>' → logprob: -6.146763324737549
    5. '' → logprob: -6.521763324737549
    6. '\n' → logprob: -7.396763324737549
    7. '\' → logprob: -7.771763324737549
    8. '
' → logprob: -8.27176284790039
    9. ' as' → logprob: -8.39676284790039
    10. 'from' → logprob: -8.64676284790039

Token 12: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.11804810166358948
    2. 'heap' → logprob: -3.3680481910705566
    3. 'operator' → logprob: -3.6180481910705566
    4. 'fun' → logprob: -3.7430481910705566
    5. 'random' → logprob: -4.368048191070557
    6. ' collections' → logprob: -5.243048191070557
    7. ' functools' → logprob: -5.618048191070557
    8. 're' → logprob: -5.868048191070557
    9. ' heap' → logprob: -7.493048191070557
    10. ' operator' → logprob: -7.868048191070557

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3486059606075287
    2. '.' → logprob: -2.4736058712005615
    3. 'import' → logprob: -2.7236058712005615
    4. '<|end|>' → logprob: -2.9736058712005615
    5. '\n' → logprob: -3.5986058712005615
    6. '
' → logprob: -3.7236058712005615
    7. '

' → logprob: -4.473606109619141
    8. '```' → logprob: -4.973606109619141
    9. '\' → logprob: -5.098606109619141
    10. ' as' → logprob: -5.348606109619141

Token 14: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.05191809684038162
    2. 'fun' → logprob: -3.5519180297851562
    3. 'random' → logprob: -4.926918029785156
    4. 'operator' → logprob: -5.176918029785156
    5. ' heap' → logprob: -5.551918029785156
    6. ' functools' → logprob: -6.426918029785156
    7. 'fra' → logprob: -7.051918029785156
    8. 're' → logprob: -7.176918029785156
    9. 'queue' → logprob: -7.176918029785156
    10. 'datetime' → logprob: -7.551918029785156

Token 15: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.246537173457909e-06
    2. 'queue' → logprob: -12.500003814697266
    3. ' queue' → logprob: -15.500003814697266
    4. '_queue' → logprob: -16.625003814697266
    5. 'Queue' → logprob: -16.875003814697266
    6. '큐' → logprob: -17.375003814697266
    7. 'u' → logprob: -17.875003814697266
    8. 'que' → logprob: -17.875003814697266
    9. '	queue' → logprob: -18.125003814697266
    10. 'f' → logprob: -18.250003814697266

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41041627526283264
    2. '<|end|>' → logprob: -1.4104162454605103
    3. 'import' → logprob: -3.0354163646698
    4. ' as' → logprob: -4.160416126251221
    5. '\n' → logprob: -4.910416126251221
    6. '.' → logprob: -5.035416126251221
    7. '<|end|>' → logprob: -5.410416126251221
    8. 'as' → logprob: -5.410416126251221
    9. '```' → logprob: -6.785416126251221
    10. '

' → logprob: -7.285416126251221

Token 17: ' queue' (ID: 13661)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.1519775092601776
    2. 'fun' → logprob: -2.7769775390625
    3. 'operator' → logprob: -3.2769775390625
    4. 'copy' → logprob: -4.1519775390625
    5. ' functools' → logprob: -4.6519775390625
    6. 're' → logprob: -4.9019775390625
    7. ' random' → logprob: -6.0269775390625
    8. 'string' → logprob: -6.6519775390625
    9. 'queue' → logprob: -6.7769775390625
    10. 'fra' → logprob: -7.1519775390625

Token 18: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3884262144565582
    2. '<|end|>' → logprob: -1.2634261846542358
    3. 'import' → logprob: -3.3884263038635254
    4. '\n' → logprob: -6.263426303863525
    5. '<|end|>' → logprob: -7.138426303863525
    6. '```' → logprob: -7.138426303863525
    7. '.' → logprob: -7.763426303863525
    8. '
' → logprob: -8.138425827026367
    9. ' as' → logprob: -8.263425827026367
    10. 'from' → logprob: -8.638425827026367

Token 19: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4033671021461487
    2. '
' → logprob: -2.028367042541504
    3. '<|end|>' → logprob: -2.278367042541504
    4. 'import' → logprob: -3.153367042541504
    5. '

' → logprob: -3.653367042541504
    6. '\n' → logprob: -4.653367042541504
    7. '```' → logprob: -4.903367042541504
    8. '' → logprob: -6.153367042541504
    9. ',
' → logprob: -6.278367042541504
    10. '.' → logprob: -6.278367042541504

Token 20: ' decimal' (ID: 26964)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.5761581659317017
    2. ' math' → logprob: -2.201158046722412
    3. ' ' → logprob: -2.576158046722412
    4. ' functools' → logprob: -2.576158046722412
    5. ' typing' → logprob: -2.951158046722412
    6. ' sys' → logprob: -3.576158046722412
    7. 'collections' → logprob: -3.701158046722412
    8. ' threading' → logprob: -3.826158046722412
    9. ' datetime' → logprob: -4.326158046722412
    10. ' ' → logprob: -5.451158046722412

Token 21: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0009383779251947999
    2. 'import' → logprob: -7.000938415527344
    3. ' ' → logprob: -10.875938415527344
    4. '	import' → logprob: -12.875938415527344
    5. '.' → logprob: -13.000938415527344
    6. ' im' → logprob: -14.250938415527344
    7. '<|end|>' → logprob: -14.250938415527344
    8. '_import' → logprob: -15.250938415527344
    9. ' impor' → logprob: -15.250938415527344
    10. ' importar' → logprob: -15.375938415527344

Token 22: ' Decimal' (ID: 56874)
  Prédit: ' Decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Decimal' → logprob: -0.023422380909323692
    2. 'Decimal' → logprob: -3.7734224796295166
    3. ' ' → logprob: -9.398422241210938
    4. '.Decimal' → logprob: -9.398422241210938
    5. ' decimal' → logprob: -12.648422241210938
    6. 'decimal' → logprob: -12.898422241210938
    7. ' Dec' → logprob: -13.523422241210938
    8. ' ' → logprob: -13.773422241210938
    9. ' defaultdict' → logprob: -14.023422241210938
    10. '```' → logprob: -14.648422241210938

Token 23: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09523125737905502
    2. '<|end|>' → logprob: -3.220231294631958
    3. '
' → logprob: -4.595231056213379
    4. ',
' → logprob: -4.845231056213379
    5. 'import' → logprob: -4.845231056213379
    6. '.' → logprob: -4.970231056213379
    7. '

' → logprob: -5.595231056213379
    8. '\n' → logprob: -5.720231056213379
    9. '```' → logprob: -5.845231056213379
    10. ',

' → logprob: -6.345231056213379

Token 24: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8882978558540344
    2. 'import' → logprob: -1.1382977962493896
    3. '

' → logprob: -1.7632977962493896
    4. '
' → logprob: -3.5132977962493896
    5. '```' → logprob: -4.013298034667969
    6. '<|end|>' → logprob: -4.013298034667969
    7. '\n' → logprob: -4.888298034667969
    8. ' 

' → logprob: -5.763298034667969
    9. ',

' → logprob: -5.763298034667969
    10. '' → logprob: -5.763298034667969

Token 25: ' collections' (ID: 22690)
  Prédit: ' fractions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fractions' → logprob: -0.27313414216041565
    2. 'fra' → logprob: -1.5231341123580933
    3. ' math' → logprob: -4.273134231567383
    4. ' datetime' → logprob: -5.898134231567383
    5. ' functools' → logprob: -6.648134231567383
    6. ' collections' → logprob: -7.273134231567383
    7. ' typing' → logprob: -7.523134231567383
    8. 'datetime' → logprob: -7.648134231567383
    9. 'math' → logprob: -7.773134231567383
    10. ' ' → logprob: -8.398134231567383

Token 26: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5460109710693359
    2. '.' → logprob: -1.296010971069336
    3. ' import' → logprob: -1.921010971069336
    4. 'abc' → logprob: -8.171010971069336
    5. '.import' → logprob: -8.546010971069336
    6. '	import' → logprob: -9.796010971069336
    7. '.Counter' → logprob: -10.046010971069336
    8. ' ' → logprob: -11.296010971069336
    9. '```' → logprob: -11.421010971069336
    10. '.ext' → logprob: -11.546010971069336

Token 27: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.01495898887515068
    2. ' deque' → logprob: -4.26495885848999
    3. ' Counter' → logprob: -7.88995885848999
    4. 'deque' → logprob: -8.139959335327148
    5. 'default' → logprob: -9.264959335327148
    6. ' default' → logprob: -11.389959335327148
    7. ' named' → logprob: -11.889959335327148
    8. ' abc' → logprob: -12.014959335327148
    9. ' de' → logprob: -12.389959335327148
    10. ' ' → logprob: -13.014959335327148

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3636748492717743
    2. '<|end|>' → logprob: -1.8636748790740967
    3. 'import' → logprob: -2.7386748790740967
    4. '
' → logprob: -2.9886748790740967
    5. '

' → logprob: -4.113674640655518
    6. '\n' → logprob: -5.113674640655518
    7. '```' → logprob: -6.363674640655518
    8. '<|end|>' → logprob: -6.363674640655518
    9. ',
' → logprob: -6.613674640655518
    10. 'from' → logprob: -6.738674640655518

Token 29: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.7221086025238037
    2. ' deque' → logprob: -0.9721086025238037
    3. 'Counter' → logprob: -2.4721086025238037
    4. ' Counter' → logprob: -3.0971086025238037
    5. 'named' → logprob: -6.222108840942383
    6. 'Ordered' → logprob: -6.597108840942383
    7. ' named' → logprob: -6.972108840942383
    8. 'de' → logprob: -7.097108840942383
    9. 'Deque' → logprob: -7.347108840942383
    10. ' Ordered' → logprob: -7.722108840942383

Token 30: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4415438175201416
    2. 'import' → logprob: -1.4415438175201416
    3. '
' → logprob: -2.9415438175201416
    4. '

' → logprob: -3.5665438175201416
    5. '<|end|>' → logprob: -3.9415438175201416
    6. '\n' → logprob: -5.0665435791015625
    7. ',
' → logprob: -5.8165435791015625
    8. 'from' → logprob: -6.1915435791015625
    9. '```' → logprob: -6.4415435791015625
    10. '' → logprob: -6.4415435791015625

Token 31: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.723779559135437
    2. '
' → logprob: -1.848779559135437
    3. 'import' → logprob: -1.848779559135437
    4. '<|end|>' → logprob: -2.0987796783447266
    5. '

' → logprob: -2.9737796783447266
    6. '\n' → logprob: -5.473779678344727
    7. ',
' → logprob: -5.598779678344727
    8. ' 

' → logprob: -5.848779678344727
    9. 'from' → logprob: -5.973779678344727
    10. '```' → logprob: -6.098779678344727

Token 32: ' functools' (ID: 142636)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.4265337288379669
    2. ' fractions' → logprob: -1.9265336990356445
    3. ' functools' → logprob: -2.6765336990356445
    4. ' itertools' → logprob: -3.3015336990356445
    5. ' math' → logprob: -3.4265336990356445
    6. 'fra' → logprob: -3.8015336990356445
    7. ' operator' → logprob: -4.0515336990356445
    8. 'typing' → logprob: -4.8015336990356445
    9. ' threading' → logprob: -5.5515336990356445
    10. ' heap' → logprob: -5.6765336990356445

Token 33: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.10391147434711456
    2. 'import' → logprob: -2.3539113998413086
    3. ' ' → logprob: -5.853911399841309
    4. '_import' → logprob: -7.728911399841309
    5. '.' → logprob: -9.228911399841309
    6. '<|end|>' → logprob: -9.353911399841309
    7. '_' → logprob: -9.728911399841309
    8. '	import' → logprob: -9.853911399841309
    9. ',' → logprob: -10.978911399841309
    10. ' .' → logprob: -10.978911399841309

Token 34: ' reduce' (ID: 10389)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.18933674693107605
    2. 'l' → logprob: -1.8143367767333984
    3. ' reduce' → logprob: -5.564336776733398
    4. 'reduce' → logprob: -5.939336776733398
    5. ' partial' → logprob: -6.689336776733398
    6. ' wraps' → logprob: -6.814336776733398
    7. 'partial' → logprob: -7.564336776733398
    8. 'wrap' → logprob: -9.314336776733398
    9. 'cmp' → logprob: -10.314336776733398
    10. ' cmp' → logprob: -10.314336776733398

Token 35: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18664775788784027
    2. 'import' → logprob: -2.061647653579712
    3. '<|end|>' → logprob: -3.811647653579712
    4. '
' → logprob: -4.436647891998291
    5. ',
' → logprob: -5.936647891998291
    6. 'from' → logprob: -6.186647891998291
    7. ' ,' → logprob: -6.936647891998291
    8. '

' → logprob: -6.936647891998291
    9. 'def' → logprob: -7.561647891998291
    10. ' ' → logprob: -7.561647891998291

Token 36: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06644666939973831
    2. 'import' → logprob: -3.0664467811584473
    3. ',
' → logprob: -4.566446781158447
    4. '<|end|>' → logprob: -5.566446781158447
    5. 'def' → logprob: -7.191446781158447
    6. '
' → logprob: -7.316446781158447
    7. '\n' → logprob: -7.566446781158447
    8. 'from' → logprob: -7.816446781158447
    9. ' ,' → logprob: -8.316446304321289
    10. ',

' → logprob: -8.941446304321289

Token 37: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.00214383564889431
    2. ' math' → logprob: -6.627143859863281
    3. ' itertools' → logprob: -7.627143859863281
    4. ' ' → logprob: -8.752143859863281
    5. 'operator' → logprob: -9.127143859863281
    6. ' typing' → logprob: -10.127143859863281
    7. ' io' → logprob: -11.752143859863281
    8. '	operator' → logprob: -12.627143859863281
    9. ' operators' → logprob: -12.877143859863281
    10. ' random' → logprob: -13.127143859863281

Token 38: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.03401125222444534
    2. 'import' → logprob: -4.159011363983154
    3. ' ' → logprob: -4.909011363983154
    4. '.' → logprob: -5.284011363983154
    5. '<|end|>' → logprob: -5.659011363983154
    6. ' .' → logprob: -7.284011363983154
    7. ' ,' → logprob: -7.409011363983154
    8. ',' → logprob: -8.034010887145996
    9. ' as' → logprob: -9.534010887145996
    10. '<|end|>' → logprob: -10.159010887145996

Token 39: ' mul' (ID: 9975)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.6257498860359192
    2. ' add' → logprob: -1.6257498264312744
    3. ' ' → logprob: -2.0007498264312744
    4. ' mul' → logprob: -2.2507498264312744
    5. ' import' → logprob: -4.2507500648498535
    6. ' attr' → logprob: -5.5007500648498535
    7. ' icon' → logprob: -6.0007500648498535
    8. 'item' → logprob: -6.7507500648498535
    9. 'mul' → logprob: -6.8757500648498535
    10. ' or' → logprob: -7.0007500648498535

Token 40: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7708538770675659
    2. '
' → logprob: -1.270853877067566
    3. '<|end|>' → logprob: -2.0208539962768555
    4. '

' → logprob: -2.7708539962768555
    5. '\n' → logprob: -4.1458539962768555
    6. '' → logprob: -4.2708539962768555
    7. 'import' → logprob: -4.5208539962768555
    8. ' ' → logprob: -5.3958539962768555
    9. ',
' → logprob: -5.6458539962768555
    10. '#' → logprob: -6.0208539962768555

Token 41: 'sys' (ID: 17324)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7335671186447144
    2. '
' → logprob: -1.6085671186447144
    3. 'def' → logprob: -2.608567237854004
    4. 'n' → logprob: -2.858567237854004
    5. '\n' → logprob: -2.983567237854004
    6. 'd' → logprob: -3.608567237854004
    7. '

' → logprob: -3.858567237854004
    8. ',' → logprob: -3.983567237854004
    9. 'import' → logprob: -4.108567237854004
    10. '\' → logprob: -4.483567237854004

Token 42: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.4391956685576588e-05
    2. ' .' → logprob: -11.000024795532227
    3. '.`' → logprob: -13.500024795532227
    4. '.​' → logprob: -13.750024795532227
    5. '.user' → logprob: -14.625024795532227
    6. '.exit' → logprob: -14.750024795532227
    7. '."""' → logprob: -15.000024795532227
    8. '.import' → logprob: -15.000024795532227
    9. '.stdout' → logprob: -15.125024795532227
    10. '.)' → logprob: -15.375024795532227

Token 43: 'rec' (ID: 9285)
  Prédit: '_exc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exc' → logprob: -1.471779465675354
    2. '_' → logprob: -1.971779465675354
    3. '_trace' → logprob: -2.2217793464660645
    4. 'rec' → logprob: -2.3467793464660645
    5. '_limit' → logprob: -2.7217793464660645
    6. '_attr' → logprob: -2.8467793464660645
    7. '_val' → logprob: -2.9717793464660645
    8. 's' → logprob: -3.0967793464660645
    9. '_execution' → logprob: -3.3467793464660645
    10. '_rec' → logprob: -4.3467793464660645

Token 44: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0020554543007165194
    2. 'limit' → logprob: -7.252055644989014
    3. 'ursive' → logprob: -7.502055644989014
    4. 'urs' → logprob: -8.627055168151855
    5. 'ur' → logprob: -8.752055168151855
    6. 'ut' → logprob: -9.002055168151855
    7. 'ision' → logprob: -9.002055168151855
    8. 'set' → logprob: -9.502055168151855
    9. '_limit' → logprob: -10.252055168151855
    10. 't' → logprob: -10.627055168151855

Token 45: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.694449782371521
    2. '_limit' → logprob: -0.694449782371521
    3. '_depth' → logprob: -6.6944499015808105
    4. 'depth' → logprob: -10.694449424743652
    5. 'lim' → logprob: -10.944449424743652
    6. ' limit' → logprob: -11.944449424743652
    7. '_LIMIT' → logprob: -12.319449424743652
    8. '_stack' → logprob: -12.944449424743652
    9. '_threshold' → logprob: -13.194449424743652
    10. '_lim' → logprob: -13.319449424743652

Token 46: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.27099974633893e-05
    2. '(
' → logprob: -12.625012397766113
    3. ' (' → logprob: -12.750012397766113
    4. '(

' → logprob: -12.750012397766113
    5. '("("' → logprob: -13.750012397766113
    6. '()' → logprob: -14.250012397766113
    7. '((' → logprob: -14.625012397766113
    8. '(()' → logprob: -15.000012397766113
    9. '```' → logprob: -16.00001335144043
    10. '(None' → logprob: -16.00001335144043

Token 47: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.005239326041191816
    2. '100' → logprob: -5.255239486694336
    3. '300' → logprob: -13.130239486694336
    4. ' ' → logprob: -13.380239486694336
    5. '1' → logprob: -14.380239486694336
    6. '200' → logprob: -14.505239486694336
    7. '500' → logprob: -15.255239486694336
    8. '250' → logprob: -15.255239486694336
    9. '999' → logprob: -15.755239486694336
    10. '400' → logprob: -16.505239486694336

Token 48: '**' (ID: 410)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.13961909711360931
    2. '**' → logprob: -2.5146191120147705
    3. '6' → logprob: -3.0146191120147705
    4. '00' → logprob: -9.264618873596191
    5. '07' → logprob: -9.514618873596191
    6. '8' → logprob: -9.639618873596191
    7. '0' → logprob: -9.764618873596191
    8. '5' → logprob: -9.889618873596191
    9. '000' → logprob: -12.764618873596191
    10. '9' → logprob: -13.264618873596191

Token 49: '8' (ID: 23)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.011064916849136353
    2. '9' → logprob: -4.5110650062561035
    3. '8' → logprob: -11.011064529418945
    4. '6' → logprob: -14.261064529418945
    5. '**' → logprob: -18.011064529418945
    6. '```' → logprob: -18.886064529418945
    7. ' ' → logprob: -21.511064529418945
    8. '

' → logprob: -21.886064529418945
    9. '``' → logprob: -22.136064529418945
    10. '+' → logprob: -22.511064529418945

Token 50: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.375000953674316
    3. ')
' → logprob: -15.500000953674316
    4. '))' → logprob: -17.25
    5. '),' → logprob: -19.0
    6. ')

' → logprob: -19.625
    7. ')
' → logprob: -19.875
    8. ')`' → logprob: -20.25
    9. ')))' → logprob: -20.5
    10. '0' → logprob: -20.625

Token 51: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.9345426559448242
    2. '1' → logprob: -1.3095426559448242
    3. '10' → logprob: -1.5595426559448242
    4. ' ' → logprob: -2.434542655944824
    5. '100' → logprob: -3.684542655944824
    6. ')' → logprob: -5.059542655944824
    7. '5' → logprob: -5.559542655944824
    8. '2' → logprob: -6.059542655944824
    9. '0' → logprob: -7.309542655944824
    10. '  ' → logprob: -8.184542655944824

Token 52: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.08432111889123917
    2. '10' → logprob: -2.5843210220336914
    3. '1' → logprob: -5.334321022033691
    4. '0' → logprob: -8.834321022033691
    5. '100' → logprob: -8.834321022033691
    6. '5' → logprob: -9.209321022033691
    7. '2' → logprob: -9.709321022033691
    8. '3' → logprob: -9.834321022033691
    9. ' ' → logprob: -10.334321022033691
    10. '8' → logprob: -10.584321022033691

Token 53: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ' )' → logprob: -13.750001907348633
    3. '))' → logprob: -14.875001907348633
    4. ')
' → logprob: -15.625001907348633
    5. '0' → logprob: -16.000001907348633
    6. ')`' → logprob: -16.500001907348633
    7. ' ' → logprob: -17.250001907348633
    8. '(' → logprob: -17.500001907348633
    9. '```' → logprob: -17.625001907348633
    10. '*' → logprob: -17.625001907348633

Token 54: 'ii' (ID: 3573)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.13078834116458893
    2. '
' → logprob: -2.3807883262634277
    3. 'def' → logprob: -4.755788326263428
    4. 'n' → logprob: -5.130788326263428
    5. '
' → logprob: -5.130788326263428
    6. '#' → logprob: -5.505788326263428
    7. 'class' → logprob: -6.255788326263428
    8. '' → logprob: -6.755788326263428
    9. '

' → logprob: -7.255788326263428
    10. '


' → logprob: -7.630788326263428

Token 55: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005691996309906244
    2. 'nit' → logprob: -5.380692005157471
    3. 'np' → logprob: -7.130692005157471
    4. 'nt' → logprob: -8.630691528320312
    5. 'ndef' → logprob: -10.505691528320312
    6. ' =' → logprob: -10.755691528320312
    7. 'nf' → logprob: -11.380691528320312
    8. 't' → logprob: -11.630691528320312
    9. '=' → logprob: -12.630691528320312
    10. '()' → logprob: -12.880691528320312

Token 56: ' lambda' (ID: 27871)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7444930672645569
    2. 'lambda' → logprob: -1.869493007659912
    3. 'input' → logprob: -2.119493007659912
    4. ' iter' → logprob: -2.494493007659912
    5. ' lambda' → logprob: -2.494493007659912
    6. ' int' → logprob: -3.244493007659912
    7. ' input' → logprob: -3.494493007659912
    8. 'iter' → logprob: -4.369493007659912
    9. 'sys' → logprob: -6.869493007659912
    10. ' ' → logprob: -7.244493007659912

Token 57: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04603186622262001
    2. ' :' → logprob: -3.546031951904297
    3. ':int' → logprob: -4.171031951904297
    4. ' x' → logprob: -8.421031951904297
    5. 'int' → logprob: -8.921031951904297
    6. 'x' → logprob: -9.421031951904297
    7. 'a' → logprob: -9.796031951904297
    8. 'i' → logprob: -10.546031951904297
    9. ':i' → logprob: -10.546031951904297
    10. 's' → logprob: -10.921031951904297

Token 58: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0024855269584804773
    2. ' int' → logprob: -6.002485752105713
    3. 'map' → logprob: -11.752485275268555
    4. 'input' → logprob: -14.127485275268555
    5. ' map' → logprob: -14.627485275268555
    6. '(int' → logprob: -15.502485275268555
    7. '	int' → logprob: -16.127485275268555
    8. '[int' → logprob: -16.127485275268555
    9. 'sys' → logprob: -16.252485275268555
    10. '0' → logprob: -16.252485275268555

Token 59: '('' (ID: 706)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.030127644538879395
    2. '(' → logprob: -3.53012752532959
    3. '(sys' → logprob: -7.90512752532959
    4. 'input' → logprob: -12.78012752532959
    5. '(
' → logprob: -13.15512752532959
    6. '(in' → logprob: -13.90512752532959
    7. '(inp' → logprob: -13.90512752532959
    8. ' (' → logprob: -14.53012752532959
    9. '(

' → logprob: -15.28012752532959
    10. '(stdin' → logprob: -15.65512752532959

Token 60: ''.' (ID: 6120)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -9.805981972021982e-05
    2. ' input' → logprob: -10.12509822845459
    3. '(input' → logprob: -10.50009822845459
    4. '0' → logprob: -11.50009822845459
    5. '<input' → logprob: -11.62509822845459
    6. 'sys' → logprob: -12.25009822845459
    7. ''' → logprob: -13.00009822845459
    8. 'inp' → logprob: -13.87509822845459
    9. '1' → logprob: -14.00009822845459
    10. '	input' → logprob: -14.37509822845459

Token 61: 'join' (ID: 10891)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.2126348614692688
    2. 'stdin' → logprob: -1.712634801864624
    3. 'read' → logprob: -4.962635040283203
    4. 'rstrip' → logprob: -6.087635040283203
    5. 'input' → logprob: -6.587635040283203
    6. 'sys' → logprob: -8.587635040283203
    7. 'isdigit' → logprob: -8.962635040283203
    8. 'split' → logprob: -9.212635040283203
    9. '(stdin' → logprob: -10.587635040283203
    10. 'trim' → logprob: -10.587635040283203

Token 62: '(map' (ID: 16946)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.26805058121681213
    2. '(filter' → logprob: -1.8930505514144897
    3. '(input' → logprob: -3.5180506706237793
    4. 'input' → logprob: -4.018050670623779
    5. 'sys' → logprob: -4.393050670623779
    6. 'filter' → logprob: -4.518050670623779
    7. '(chr' → logprob: -5.018050670623779
    8. '([' → logprob: -5.893050670623779
    9. '(map' → logprob: -6.643050670623779
    10. '(' → logprob: -7.018050670623779

Token 63: '(chr' (ID: 185847)
  Prédit: '(chr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chr' → logprob: -0.023680293932557106
    2. '(sys' → logprob: -4.398680210113525
    3. '(str' → logprob: -5.023680210113525
    4. '(input' → logprob: -5.773680210113525
    5. '(list' → logprob: -7.023680210113525
    6. '(' → logprob: -7.898680210113525
    7. '(filter' → logprob: -9.398680686950684
    8. 'chr' → logprob: -10.773680686950684
    9. '(lambda' → logprob: -10.773680686950684
    10. '(ii' → logprob: -11.273680686950684

Token 64: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.020569561049342155
    2. '([' → logprob: -4.770569324493408
    3. 'sys' → logprob: -5.395569324493408
    4. '(' → logprob: -5.770569324493408
    5. '(stdin' → logprob: -6.520569324493408
    6. '(map' → logprob: -7.270569324493408
    7. '(ii' → logprob: -7.395569324493408
    8. 'input' → logprob: -8.145569801330566
    9. '(input' → logprob: -8.270569801330566
    10. '(f' → logprob: -8.770569801330566

Token 65: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2767612338066101
    2. ' sys' → logprob: -1.5267612934112549
    3. '[' → logprob: -4.026761054992676
    4. 'input' → logprob: -6.151761054992676
    5. 'map' → logprob: -6.526761054992676
    6. 'stdin' → logprob: -6.776761054992676
    7. ' map' → logprob: -7.401761054992676
    8. ' input' → logprob: -7.526761054992676
    9. ' [' → logprob: -7.901761054992676
    10. '(sys' → logprob: -9.401761054992676

Token 66: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.723352049040841e-06
    2. '.' → logprob: -13.125004768371582
    3. 'stdin' → logprob: -13.375004768371582
    4. '.std' → logprob: -14.750004768371582
    5. '.argv' → logprob: -14.750004768371582
    6. '.st' → logprob: -15.625004768371582
    7. '.stdout' → logprob: -16.375003814697266
    8. '.St' → logprob: -17.000003814697266
    9. '.`' → logprob: -17.375003814697266
    10. ' .' → logprob: -17.875003814697266

Token 67: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.17280402779579163
    2. '.read' → logprob: -2.422804117202759
    3. '.buffer' → logprob: -2.672804117202759
    4. 'buffer' → logprob: -7.04780387878418
    5. '.' → logprob: -9.67280387878418
    6. 'read' → logprob: -10.67280387878418
    7. '.readlines' → logprob: -11.67280387878418
    8. '_buffer' → logprob: -14.29780387878418
    9. '	buffer' → logprob: -14.54780387878418
    10. ' buffer' → logprob: -14.54780387878418

Token 68: '.readline' (ID: 74673)
  Prédit: '.read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.5234692096710205
    2. '.readline' → logprob: -0.8984692096710205
    3. '.readlines' → logprob: -8.648468971252441
    4. '.' → logprob: -9.273468971252441
    5. 'read' → logprob: -10.273468971252441
    6. '.peek' → logprob: -11.023468971252441
    7. '_read' → logprob: -11.148468971252441
    8. '.findall' → logprob: -12.398468971252441
    9. '	read' → logprob: -13.523468971252441
    10. '.Read' → logprob: -13.648468971252441

Token 69: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03158809244632721
    2. '())))' → logprob: -4.406588077545166
    3. '()' → logprob: -4.531588077545166
    4. '(' → logprob: -4.906588077545166
    5. '()))' → logprob: -7.406588077545166
    6. '()[' → logprob: -10.156588554382324
    7. '())).' → logprob: -10.156588554382324
    8. ')))' → logprob: -10.406588554382324
    9. '())))
' → logprob: -11.781588554382324
    10. '```' → logprob: -12.406588554382324

Token 70: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.10489784181118011
    2. 'strip' → logprob: -2.3548977375030518
    3. 'decode' → logprob: -5.604897975921631
    4. 'split' → logprob: -6.979897975921631
    5. 'read' → logprob: -9.854897499084473
    6. '.rstrip' → logprob: -12.979897499084473
    7. 'rs' → logprob: -12.979897499084473
    8. 'replace' → logprob: -12.979897499084473
    9. 'raw' → logprob: -13.104897499084473
    10. '```' → logprob: -13.354897499084473

Token 71: '())))
' (ID: 129187)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.664591908454895
    2. '()))' → logprob: -0.789591908454895
    3. '()' → logprob: -4.6645917892456055
    4. '(b' → logprob: -4.9145917892456055
    5. 'b' → logprob: -4.9145917892456055
    6. '(' → logprob: -5.4145917892456055
    7. ')))' → logprob: -6.9145917892456055
    8. '()));' → logprob: -7.0395917892456055
    9. '())))
' → logprob: -8.164591789245605
    10. '().' → logprob: -8.414591789245605

Token 72: 'il' (ID: 311)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13486286997795105
    2. '()' → logprob: -2.1348628997802734
    3. '(
' → logprob: -5.509862899780273
    4. ')' → logprob: -7.134862899780273
    5. '()
' → logprob: -7.259862899780273
    6. '())' → logprob: -7.509862899780273
    7. '```' → logprob: -7.759862899780273
    8. '('' → logprob: -8.759862899780273
    9. '()\' → logprob: -8.884862899780273
    10. '#' → logprob: -9.134862899780273

Token 73: ' =' (ID: 314)
  Prédit: 'ambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ambda' → logprob: -0.7430258989334106
    2. ' =' → logprob: -1.1180258989334106
    3. 'ist' → logprob: -2.118025779724121
    4. 'am' → logprob: -3.868025779724121
    5. 'b' → logprob: -4.243025779724121
    6. 'ine' → logprob: -4.243025779724121
    7. 'a' → logprob: -5.243025779724121
    8. 'o' → logprob: -5.493025779724121
    9. '=' → logprob: -5.618025779724121
    10. 'p' → logprob: -5.743025779724121

Token 74: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.3354617655277252
    2. 'lambda' → logprob: -1.3354617357254028
    3. '(lambda' → logprob: -3.8354618549346924
    4. 'ambda' → logprob: -8.460461616516113
    5. '=lambda' → logprob: -8.960461616516113
    6. ' list' → logprob: -11.585461616516113
    7. 'list' → logprob: -11.835461616516113
    8. ' lamb' → logprob: -12.335461616516113
    9. 'lam' → logprob: -13.960461616516113
    10. '_lambda' → logprob: -14.585461616516113

Token 75: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008053608238697052
    2. ' :' → logprob: -5.008053779602051
    3. '():' → logprob: -7.633053779602051
    4. ':list' → logprob: -7.883053779602051
    5. ' lambda' → logprob: -8.75805377960205
    6. ' list' → logprob: -8.88305377960205
    7. 'lambda' → logprob: -9.13305377960205
    8. 'list' → logprob: -10.88305377960205
    9. 's' → logprob: -11.38305377960205
    10. ' ():' → logprob: -11.50805377960205

Token 76: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.20185454189777374
    2. ' list' → logprob: -1.7018545866012573
    3. 'map' → logprob: -8.326854705810547
    4. '[' → logprob: -9.326854705810547
    5. ' map' → logprob: -10.201854705810547
    6. ' [' → logprob: -10.576854705810547
    7. '[list' → logprob: -10.576854705810547
    8. 'int' → logprob: -12.576854705810547
    9. '[int' → logprob: -12.701854705810547
    10. 'ist' → logprob: -13.076854705810547

Token 77: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0028224699199199677
    2. '(' → logprob: -5.877822399139404
    3. '(sys' → logprob: -12.377822875976562
    4. '(int' → logprob: -12.502822875976562
    5. 'map' → logprob: -12.627822875976562
    6. '('' → logprob: -12.752822875976562
    7. '()' → logprob: -13.252822875976562
    8. '(m' → logprob: -15.127822875976562
    9. '(range' → logprob: -15.502822875976562
    10. ' (' → logprob: -15.627822875976562

Token 78: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00034118397161364555
    2. '(' → logprob: -8.000341415405273
    3. 'int' → logprob: -12.625341415405273
    4. '<int' → logprob: -13.625341415405273
    5. ',int' → logprob: -15.625341415405273
    6. '=int' → logprob: -15.625341415405273
    7. '(
' → logprob: -15.750341415405273
    8. ':int' → logprob: -15.750341415405273
    9. '[int' → logprob: -16.000341415405273
    10. '(in' → logprob: -16.375341415405273

Token 79: ' x' (ID: 1215)
  Prédit: ' chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chr' → logprob: -1.0922638177871704
    2. 'chr' → logprob: -1.2172638177871704
    3. ':' → logprob: -1.4672638177871704
    4. ' x' → logprob: -3.217263698577881
    5. ':int' → logprob: -3.967263698577881
    6. ' c' → logprob: -4.342263698577881
    7. 'c' → logprob: -4.342263698577881
    8. 'x' → logprob: -4.717263698577881
    9. '(chr' → logprob: -4.967263698577881
    10. 'int' → logprob: -5.217263698577881

Token 80: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10648634284734726
    2. ' :' → logprob: -2.6064863204956055
    3. ':int' → logprob: -3.6064863204956055
    4. '(int' → logprob: -11.106486320495605
    5. ':str' → logprob: -11.481486320495605
    6. ':x' → logprob: -11.731486320495605
    7. '=int' → logprob: -11.981486320495605
    8. 'int' → logprob: -12.356486320495605
    9. 'chr' → logprob: -12.731486320495605
    10. ':Int' → logprob: -12.856486320495605

Token 81: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16425564885139465
    2. ' int' → logprob: -2.2892556190490723
    3. ' x' → logprob: -3.9142556190490723
    4. 'x' → logprob: -4.539255619049072
    5. ' ord' → logprob: -4.664255619049072
    6. 'ord' → logprob: -4.664255619049072
    7. 'chr' → logprob: -8.03925609588623
    8. ' ' → logprob: -9.78925609588623
    9. ' chr' → logprob: -9.78925609588623
    10. 'ints' → logprob: -9.78925609588623

Token 82: '(' (ID: 7)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.004694629926234484
    2. '(chr' → logprob: -5.50469446182251
    3. ',' → logprob: -8.129694938659668
    4. '(' → logprob: -9.004694938659668
    5. 'x' → logprob: -9.254694938659668
    6. ')' → logprob: -9.754694938659668
    7. '(ord' → logprob: -11.504694938659668
    8. 'chr' → logprob: -11.754694938659668
    9. ')(' → logprob: -12.004694938659668
    10. '```' → logprob: -12.629694938659668

Token 83: 'Decimal' (ID: 16147)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0037076810840517282
    2. '(chr' → logprob: -5.8787078857421875
    3. 'x' → logprob: -7.1287078857421875
    4. '(' → logprob: -9.628707885742188
    5. 'chr' → logprob: -11.253707885742188
    6. '(ord' → logprob: -11.503707885742188
    7. ')' → logprob: -12.503707885742188
    8. ' x' → logprob: -13.253707885742188
    9. '('' → logprob: -13.503707885742188
    10. ')x' → logprob: -14.378707885742188

Token 84: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -8.840432565193623e-05
    2. '(' → logprob: -9.625088691711426
    3. '(chr' → logprob: -10.875088691711426
    4. '(str' → logprob: -13.125088691711426
    5. 'x' → logprob: -14.250088691711426
    6. '((' → logprob: -15.750088691711426
    7. '(ord' → logprob: -16.25008773803711
    8. ' (' → logprob: -16.62508773803711
    9. '(
' → logprob: -17.00008773803711
    10. '
' → logprob: -17.00008773803711

Token 85: ')),' (ID: 12098)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7450523376464844
    2. '(sys' → logprob: -0.8700523376464844
    3. ')),' → logprob: -2.7450523376464844
    4. ')' → logprob: -3.8700523376464844
    5. '()),' → logprob: -5.245052337646484
    6. '())' → logprob: -5.620052337646484
    7. '),' → logprob: -5.745052337646484
    8. ')))' → logprob: -6.370052337646484
    9. '))),' → logprob: -6.370052337646484
    10. '('' → logprob: -6.495052337646484

Token 86: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00017541198758408427
    2. ' sys' → logprob: -8.750175476074219
    3. 'input' → logprob: -11.750175476074219
    4. '(sys' → logprob: -12.000175476074219
    5. 'map' → logprob: -14.125175476074219
    6. '=sys' → logprob: -14.375175476074219
    7. '	sys' → logprob: -14.750175476074219
    8. ')' → logprob: -14.750175476074219
    9. 'str' → logprob: -15.625175476074219
    10. ' ' → logprob: -15.625175476074219

Token 87: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.36574100604048e-06
    2. 'stdin' → logprob: -12.625004768371582
    3. '.stdout' → logprob: -14.125004768371582
    4. '.argv' → logprob: -15.375004768371582
    5. '.std' → logprob: -16.875003814697266
    6. '.' → logprob: -17.375003814697266
    7. ' stdin' → logprob: -18.375003814697266
    8. '``' → logprob: -18.875003814697266
    9. '.readline' → logprob: -18.875003814697266
    10. '(stdin' → logprob: -19.000003814697266

Token 88: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.0009630310814827681
    2. '.readline' → logprob: -7.12596321105957
    3. '.' → logprob: -9.50096321105957
    4. '.stdin' → logprob: -9.50096321105957
    5. '.read' → logprob: -12.62596321105957
    6. ' .' → logprob: -12.87596321105957
    7. 'buffer' → logprob: -13.87596321105957
    8. '.stdout' → logprob: -14.37596321105957
    9. '.input' → logprob: -14.75096321105957
    10. '.reader' → logprob: -14.87596321105957

Token 89: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0002007987059187144
    2. '.readlines' → logprob: -8.750201225280762
    3. '.read' → logprob: -10.125201225280762
    4. ' readline' → logprob: -13.750201225280762
    5. '.' → logprob: -14.500201225280762
    6. '```' → logprob: -15.375201225280762
    7. ' .' → logprob: -15.750201225280762
    8. '.rstrip' → logprob: -16.125200271606445
    9. '1' → logprob: -17.000200271606445
    10. '.split' → logprob: -17.250200271606445

Token 90: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.4974866644479334e-05
    2. '()' → logprob: -11.750015258789062
    3. 'rstrip' → logprob: -13.125015258789062
    4. '())' → logprob: -13.625015258789062
    5. ' ().' → logprob: -13.625015258789062
    6. '.rstrip' → logprob: -14.250015258789062
    7. '()))' → logprob: -15.000015258789062
    8. '(' → logprob: -15.250015258789062
    9. '()).' → logprob: -15.375015258789062
    10. '.split' → logprob: -15.375015258789062

Token 91: 'split' (ID: 13627)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.004263469949364662
    2. 'split' → logprob: -5.504263401031494
    3. 'strip' → logprob: -8.879263877868652
    4. 'decode' → logprob: -10.004263877868652
    5. '.rstrip' → logprob: -14.879263877868652
    6. 'raw' → logprob: -16.379262924194336
    7. '```' → logprob: -16.504262924194336
    8. 'read' → logprob: -17.254262924194336
    9. 'r' → logprob: -18.504262924194336
    10. ' split' → logprob: -18.504262924194336

Token 92: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.007988447323441505
    2. '()' → logprob: -5.007988452911377
    3. '))' → logprob: -7.382988452911377
    4. '()))
' → logprob: -7.632988452911377
    5. '())' → logprob: -8.882987976074219
    6. '(' → logprob: -11.507987976074219
    7. '()))
' → logprob: -11.882987976074219
    8. '()))

' → logprob: -12.507987976074219
    9. '())))' → logprob: -13.132987976074219
    10. '()));' → logprob: -13.257987976074219

Token 93: 'fl' (ID: 1836)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43260127305984497
    2. '(' → logprob: -1.1826012134552002
    3. ')' → logprob: -3.4326012134552
    4. '()
' → logprob: -5.182601451873779
    5. '(
' → logprob: -6.432601451873779
    6. '_' → logprob: -7.182601451873779
    7. '
' → logprob: -7.182601451873779
    8. '())' → logprob: -7.307601451873779
    9. '\' → logprob: -7.557601451873779
    10. '```' → logprob: -7.932601451873779

Token 94: ' =' (ID: 314)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -7.362307223957032e-05
    2. 'oad' → logprob: -10.125073432922363
    3. ' =' → logprob: -11.500073432922363
    4. '()' → logprob: -12.625073432922363
    5. 'oa' → logprob: -12.625073432922363
    6. 'ambda' → logprob: -12.625073432922363
    7. 'oan' → logprob: -12.625073432922363
    8. '=' → logprob: -12.875073432922363
    9. 'oop' → logprob: -13.125073432922363
    10. 'oor' → logprob: -13.625073432922363

Token 95: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.2381918579339981
    2. 'lambda' → logprob: -2.238191843032837
    3. 'ambda' → logprob: -2.738191843032837
    4. '(lambda' → logprob: -3.238191843032837
    5. '=lambda' → logprob: -6.613192081451416
    6. 'amba' → logprob: -10.738191604614258
    7. 'lam' → logprob: -13.613191604614258
    8. ' list' → logprob: -13.738191604614258
    9. '_lambda' → logprob: -13.738191604614258
    10. '.lambda' → logprob: -13.863191604614258

Token 96: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6652351021766663
    2. ' lambda' → logprob: -1.2902350425720215
    3. ' list' → logprob: -1.9152350425720215
    4. 'lambda' → logprob: -3.6652350425720215
    5. '():' → logprob: -3.9152350425720215
    6. 'list' → logprob: -5.0402350425720215
    7. ' :' → logprob: -5.4152350425720215
    8. '(lambda' → logprob: -6.2902350425720215
    9. 'ambda' → logprob: -6.4152350425720215
    10. ':list' → logprob: -6.4152350425720215

Token 97: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.030567197129130363
    2. ' list' → logprob: -3.530567169189453
    3. 'map' → logprob: -7.155567169189453
    4. ' map' → logprob: -10.780567169189453
    5. 'lambda' → logprob: -12.155567169189453
    6. 'float' → logprob: -12.530567169189453
    7. '[' → logprob: -13.155567169189453
    8. '	list' → logprob: -14.405567169189453
    9. '[list' → logprob: -14.780567169189453
    10. 'l' → logprob: -14.905567169189453

Token 98: '(it' (ID: 29445)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0006662101950496435
    2. '(' → logprob: -7.87566614151001
    3. '(float' → logprob: -8.375666618347168
    4. '(lambda' → logprob: -9.875666618347168
    5. 'map' → logprob: -13.250666618347168
    6. '	map' → logprob: -14.000666618347168
    7. '<float' → logprob: -15.250666618347168
    8. '(f' → logprob: -15.375666618347168
    9. ' (' → logprob: -15.625666618347168
    10. ' map' → logprob: -15.875666618347168

Token 99: 'ertools' (ID: 88385)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0042878114618361
    2. 'ermap' → logprob: -5.7542877197265625
    3. 'er' → logprob: -7.8792877197265625
    4. 'map' → logprob: -8.004287719726562
    5. '(sys' → logprob: -9.254287719726562
    6. 'emap' → logprob: -9.379287719726562
    7. 'ertools' → logprob: -9.879287719726562
    8. ' map' → logprob: -10.004287719726562
    9. '(' → logprob: -10.629287719726562
    10. '(filter' → logprob: -10.754287719726562

Token 100: '.st' (ID: 1980)
  Prédit: '.chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.chain' → logprob: -0.2663424015045166
    2. '.map' → logprob: -2.1413424015045166
    3. '.st' → logprob: -2.7663424015045166
    4. '.' → logprob: -3.7663424015045166
    5. '.groupby' → logprob: -4.7663421630859375
    6. '.acc' → logprob: -5.1413421630859375
    7. '.repeat' → logprob: -5.2663421630859375
    8. '.im' → logprob: -5.7663421630859375
    9. '.is' → logprob: -6.1413421630859375
    10. '.f' → logprob: -6.1413421630859375

Token 101: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -4.2987729102605954e-05
    2. 'ar' → logprob: -10.875042915344238
    3. 'erm' → logprob: -11.500042915344238
    4. 'ertools' → logprob: -11.500042915344238
    5. 'armat' → logprob: -14.375042915344238
    6. 'arl' → logprob: -14.750042915344238
    7. 'ermut' → logprob: -14.875042915344238
    8. 'ermap' → logprob: -15.125042915344238
    9. 'ap' → logprob: -15.375042915344238
    10. 'import' → logprob: -15.625042915344238

Token 102: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -2.1008713702030946e-06
    2. 'e' → logprob: -13.875001907348633
    3. '```' → logprob: -14.750001907348633
    4. '(ap' → logprob: -15.750001907348633
    5. 'a' → logprob: -16.000001907348633
    6. 'ul' → logprob: -16.750001907348633
    7. '	ap' → logprob: -17.000001907348633
    8. 'app' → logprob: -17.125001907348633
    9. 'ep' → logprob: -17.125001907348633
    10. '
' → logprob: -17.250001907348633

Token 103: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.007223116233944893
    2. '(' → logprob: -5.132223129272461
    3. '(lambda' → logprob: -6.757223129272461
    4. '(map' → logprob: -10.382223129272461
    5. '(operator' → logprob: -10.632223129272461
    6. ')' → logprob: -10.882223129272461
    7. '(pow' → logprob: -11.257223129272461
    8. 'float' → logprob: -11.382223129272461
    9. '(int' → logprob: -11.757223129272461
    10. ',float' → logprob: -11.757223129272461

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11462432891130447
    2. ',map' → logprob: -2.239624261856079
    3. ',float' → logprob: -6.489624500274658
    4. ' ,' → logprob: -9.6146240234375
    5. '))' → logprob: -9.7396240234375
    6. ',int' → logprob: -9.8646240234375
    7. ',str' → logprob: -10.6146240234375
    8. '(sys' → logprob: -11.6146240234375
    9. ',System' → logprob: -11.7396240234375
    10. '=sys' → logprob: -12.2396240234375

Token 105: ' zip' (ID: 16216)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.650819718837738
    2. '(sys' → logprob: -1.4008197784423828
    3. 'sys' → logprob: -1.6508197784423828
    4. '(map' → logprob: -3.900819778442383
    5. '[' → logprob: -4.400819778442383
    6. 'zip' → logprob: -6.150819778442383
    7. '(zip' → logprob: -6.525819778442383
    8. 'it' → logprob: -6.775819778442383
    9. 'enumer' → logprob: -7.025819778442383
    10. '   ' → logprob: -8.400819778442383

Token 106: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.05332845076918602
    2. '(map' → logprob: -3.928328514099121
    3. '(' → logprob: -4.428328514099121
    4. '(range' → logprob: -4.803328514099121
    5. '(*' → logprob: -5.053328514099121
    6. '(ii' → logprob: -5.928328514099121
    7. '(it' → logprob: -6.178328514099121
    8. '(iter' → logprob: -7.803328514099121
    9. '(*(' → logprob: -8.428328514099121
    10. '())' → logprob: -9.928328514099121

Token 107: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -6.682846287731081e-05
    2. '.argv' → logprob: -10.500066757202148
    3. '.stdout' → logprob: -10.500066757202148
    4. '.__' → logprob: -12.125066757202148
    5. '.' → logprob: -13.000066757202148
    6. '._' → logprob: -13.625066757202148
    7. 'stdin' → logprob: -13.750066757202148
    8. '.std' → logprob: -14.875066757202148
    9. '.stderr' → logprob: -15.125066757202148
    10. ' .' → logprob: -15.500066757202148

Token 108: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.010050598531961441
    2. '.readline' → logprob: -4.6350507736206055
    3. '.' → logprob: -9.010050773620605
    4. '().' → logprob: -9.760050773620605
    5. 'buffer' → logprob: -10.010050773620605
    6. ' .' → logprob: -10.260050773620605
    7. '(buffer' → logprob: -11.385050773620605
    8. '.stdin' → logprob: -12.135050773620605
    9. '.read' → logprob: -12.760050773620605
    10. '.readlines' → logprob: -13.135050773620605

Token 109: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0004240011621732265
    2. '.readlines' → logprob: -8.2504243850708
    3. '().' → logprob: -9.5004243850708
    4. '.read' → logprob: -9.6254243850708
    5. '.buffer' → logprob: -12.3754243850708
    6. ' readline' → logprob: -12.5004243850708
    7. ')' → logprob: -12.6254243850708
    8. 'buffer' → logprob: -12.7504243850708
    9. 'read' → logprob: -13.3754243850708
    10. '.' → logprob: -13.6254243850708

Token 110: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0007598382653668523
    2. '(),' → logprob: -7.625759601593018
    3. '()' → logprob: -8.375760078430176
    4. ' ().' → logprob: -10.625760078430176
    5. '()))' → logprob: -11.625760078430176
    6. '(' → logprob: -12.875760078430176
    7. '()[' → logprob: -13.625760078430176
    8. '())' → logprob: -14.000760078430176
    9. '())))' → logprob: -14.625760078430176
    10. ' ' → logprob: -15.250760078430176

Token 111: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.41247081756591797
    2. 'decode' → logprob: -1.787470817565918
    3. 'rstrip' → logprob: -1.787470817565918
    4. 'strip' → logprob: -5.787470817565918
    5. 'read' → logprob: -9.162470817565918
    6. ' split' → logprob: -11.037470817565918
    7. ' decode' → logprob: -11.662470817565918
    8. '.decode' → logprob: -12.412470817565918
    9. '```' → logprob: -12.412470817565918
    10. 'raw' → logprob: -12.537470817565918

Token 112: '())))
' (ID: 129187)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.34386640787124634
    2. '(),' → logprob: -1.4688663482666016
    3. '()' → logprob: -3.3438663482666016
    4. '()))' → logprob: -3.8438663482666016
    5. '())))
' → logprob: -6.843866348266602
    6. '())' → logprob: -6.968866348266602
    7. '(' → logprob: -7.093866348266602
    8. ')))' → logprob: -7.843866348266602
    9. '(),'' → logprob: -8.093866348266602
    10. '(),"' → logprob: -8.968866348266602

Token 113: 'il' (ID: 311)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20448845624923706
    2. '()' → logprob: -2.204488515853882
    3. ')' → logprob: -2.829488515853882
    4. '(
' → logprob: -5.079488277435303
    5. '
' → logprob: -6.204488277435303
    6. '#' → logprob: -6.954488277435303
    7. '[' → logprob: -6.954488277435303
    8. ',' → logprob: -7.079488277435303
    9. ':' → logprob: -7.579488277435303
    10. '())' → logprob: -7.829488277435303

Token 114: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5232459902763367
    2. '()' → logprob: -0.8982459902763367
    3. '()[' → logprob: -9.898245811462402
    4. '(
' → logprob: -11.148245811462402
    5. '('' → logprob: -11.398245811462402
    6. '()]' → logprob: -12.398245811462402
    7. '().' → logprob: -12.648245811462402
    8. '(`' → logprob: -12.898245811462402
    9. '("("' → logprob: -12.898245811462402
    10. '()`' → logprob: -12.898245811462402

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5571023225784302
    2. '()' → logprob: -1.4321023225784302
    3. '=' → logprob: -1.8071023225784302
    4. '=lambda' → logprob: -4.307102203369141
    5. '(' → logprob: -5.307102203369141
    6. 'ambda' → logprob: -5.932102203369141
    7. '	' → logprob: -7.182102203369141
    8. ' ()' → logprob: -7.432102203369141
    9. ' ' → logprob: -7.932102203369141
    10. '   ' → logprob: -8.80710220336914

Token 116: ' lambda' (ID: 27871)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.42878782749176025
    2. 'lambda' → logprob: -1.6787878274917603
    3. ' lambda' → logprob: -2.0537877082824707
    4. ' (' → logprob: -4.303787708282471
    5. '=lambda' → logprob: -4.678787708282471
    6. 'ambda' → logprob: -5.303787708282471
    7. '(int' → logprob: -6.428787708282471
    8. '(' → logprob: -6.553787708282471
    9. ' =' → logprob: -6.803787708282471
    10. 'int' → logprob: -7.303787708282471

Token 117: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7789901494979858
    2. '():' → logprob: -0.7789901494979858
    3. '()' → logprob: -3.0289902687072754
    4. '(lambda' → logprob: -4.778990268707275
    5. ' ():' → logprob: -4.903990268707275
    6. ' :' → logprob: -5.153990268707275
    7. ' ()' → logprob: -5.403990268707275
    8. '(int' → logprob: -5.903990268707275
    9. '(' → logprob: -6.903990268707275
    10. ' ' → logprob: -7.153990268707275

Token 118: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00024037064576987177
    2. '(n' → logprob: -9.375240325927734
    3. ' :' → logprob: -9.625240325927734
    4. '=' → logprob: -9.875240325927734
    5. '():' → logprob: -11.625240325927734
    6. ':n' → logprob: -12.250240325927734
    7. ':list' → logprob: -12.375240325927734
    8. '=n' → logprob: -12.500240325927734
    9. ',' → logprob: -12.750240325927734
    10. '=:' → logprob: -13.250240325927734

Token 119: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.6496333479881287
    2. ' [' → logprob: -0.8996333479881287
    3. '[' → logprob: -2.6496334075927734
    4. ' list' → logprob: -9.149633407592773
    5. '[int' → logprob: -10.024633407592773
    6. '[List' → logprob: -10.274633407592773
    7. 'list' → logprob: -10.524633407592773
    8. '[l' → logprob: -10.524633407592773
    9. '[it' → logprob: -10.649633407592773
    10. '[line' → logprob: -10.774633407592773

Token 120: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.2076566070318222
    2. '(it' → logprob: -1.9576566219329834
    3. '(lambda' → logprob: -4.082656383514404
    4. '(il' → logprob: -4.082656383514404
    5. '(' → logprob: -4.707656383514404
    6. '(range' → logprob: -5.832656383514404
    7. '(iter' → logprob: -8.457656860351562
    8. 'map' → logprob: -8.957656860351562
    9. '(i' → logprob: -9.707656860351562
    10. '(int' → logprob: -9.707656860351562

Token 121: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.041883837431669235
    2. '(lambda' → logprob: -3.416883945465088
    3. '(il' → logprob: -5.041883945465088
    4. '(' → logprob: -6.416883945465088
    5. '(ii' → logprob: -10.16688346862793
    6. 'int' → logprob: -11.16688346862793
    7. ' il' → logprob: -11.29188346862793
    8. '(ll' → logprob: -11.91688346862793
    9. '<int' → logprob: -12.16688346862793
    10. '()' → logprob: -12.66688346862793

Token 122: ' _:' (ID: 133568)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4628591537475586
    2. '(int' → logprob: -1.8378591537475586
    3. 'x' → logprob: -2.0878591537475586
    4. 'int' → logprob: -3.3378591537475586
    5. ':' → logprob: -3.4628591537475586
    6. ' int' → logprob: -4.587859153747559
    7. ':int' → logprob: -5.462859153747559
    8. '_' → logprob: -6.462859153747559
    9. '(x' → logprob: -6.587859153747559
    10. '_:' → logprob: -7.212859153747559

Token 123: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.1855294704437256
    2. ' il' → logprob: -1.1855294704437256
    3. ' int' → logprob: -1.3105294704437256
    4. 'ii' → logprob: -2.9355294704437256
    5. ' ii' → logprob: -3.1855294704437256
    6. 'il' → logprob: -3.8105294704437256
    7. '	il' → logprob: -7.685529708862305
    8. '[int' → logprob: -8.060529708862305
    9. ' ' → logprob: -8.185529708862305
    10. 'ilist' → logprob: -8.435529708862305

Token 124: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.29874107241630554
    2. '('' → logprob: -1.423741102218628
    3. '(' → logprob: -4.173740863800049
    4. '(input' → logprob: -6.548740863800049
    5. 'sys' → logprob: -8.173741340637207
    6. '(ii' → logprob: -8.673741340637207
    7. '(('' → logprob: -9.548741340637207
    8. '(int' → logprob: -11.298741340637207
    9. ')' → logprob: -11.423741340637207
    10. '()' → logprob: -11.923741340637207

Token 125: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00029756641015410423
    2. 'stdin' → logprob: -9.625297546386719
    3. '.stdout' → logprob: -9.750297546386719
    4. '.' → logprob: -9.875297546386719
    5. '.readline' → logprob: -10.125297546386719
    6. '().' → logprob: -10.375297546386719
    7. 'in' → logprob: -10.375297546386719
    8. '(stdin' → logprob: -12.000297546386719
    9. '.buffer' → logprob: -12.375297546386719
    10. '()' → logprob: -13.250297546386719

Token 126: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.09642155468463898
    2. 'buffer' → logprob: -2.721421480178833
    3. '.readline' → logprob: -3.846421480178833
    4. '(buffer' → logprob: -5.846421718597412
    5. ' buffer' → logprob: -7.346421718597412
    6. '().' → logprob: -7.721421718597412
    7. '	buffer' → logprob: -7.721421718597412
    8. '_buffer' → logprob: -8.721421241760254
    9. '   ' → logprob: -9.971421241760254
    10. '()' → logprob: -10.346421241760254

Token 127: '.readline' (ID: 74673)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00835227407515049
    2. '()' → logprob: -5.133352279663086
    3. '.readline' → logprob: -6.258352279663086
    4. '()))' → logprob: -8.258352279663086
    5. '()),' → logprob: -9.133352279663086
    6. '(),' → logprob: -10.133352279663086
    7. 'buffer' → logprob: -10.258352279663086
    8. '())' → logprob: -10.883352279663086
    9. '().__' → logprob: -11.383352279663086
    10. '()));' → logprob: -12.383352279663086

Token 128: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004002176690846682
    2. '(),' → logprob: -6.004002094268799
    3. '()' → logprob: -7.004002094268799
    4. '()))' → logprob: -7.504002094268799
    5. '())))' → logprob: -10.254002571105957
    6. '()),' → logprob: -11.129002571105957
    7. '.readline' → logprob: -12.129002571105957
    8. '().__' → logprob: -13.129002571105957
    9. '()[' → logprob: -13.129002571105957
    10. 'line' → logprob: -13.629002571105957

Token 129: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.0032259563449770212
    2. 'strip' → logprob: -6.128225803375244
    3. 'read' → logprob: -7.253225803375244
    4. 'buffer' → logprob: -8.503226280212402
    5. 'decode' → logprob: -9.378226280212402
    6. 'r' → logprob: -10.753226280212402
    7. '.readline' → logprob: -11.128226280212402
    8. '.rstrip' → logprob: -12.628226280212402
    9. ' readline' → logprob: -13.128226280212402
    10. 'raw' → logprob: -14.003226280212402

Token 130: '()),' (ID: 24379)
  Prédit: '()),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()),' → logprob: -0.026564540341496468
    2. '()' → logprob: -3.901564598083496
    3. '())))' → logprob: -5.401564598083496
    4. '().' → logprob: -6.776564598083496
    5. '())' → logprob: -9.026564598083496
    6. '),' → logprob: -9.526564598083496
    7. '(),' → logprob: -10.026564598083496
    8. '()))' → logprob: -10.151564598083496
    9. '())))
' → logprob: -10.401564598083496
    10. '()\' → logprob: -11.401564598083496

Token 131: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.703443770878948e-06
    2. ' range' → logprob: -11.875007629394531
    3. 'lambda' → logprob: -15.750007629394531
    4. 'repeat' → logprob: -16.00000762939453
    5. '(range' → logprob: -16.12500762939453
    6. '	range' → logprob: -16.37500762939453
    7. '   ' → logprob: -16.50000762939453
    8. 'x' → logprob: -17.50000762939453
    9. 'r' → logprob: -17.62500762939453
    10. '
' → logprob: -17.75000762939453

Token 132: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009143244242295623
    2. '(' → logprob: -7.000914096832275
    3. 'n' → logprob: -13.125914573669434
    4. '(
' → logprob: -14.000914573669434
    5. ')n' → logprob: -17.750913619995117
    6. '((' → logprob: -18.625913619995117
    7. '(

' → logprob: -18.750913619995117
    8. '(nn' → logprob: -19.125913619995117
    9. ' n' → logprob: -19.750913619995117
    10. ' (' → logprob: -20.000913619995117

Token 133: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.008048045448958874
    2. '))' → logprob: -5.008048057556152
    3. ')' → logprob: -6.633048057556152
    4. '))))' → logprob: -12.258048057556152
    5. ')))
' → logprob: -12.508048057556152
    6. ')));' → logprob: -13.008048057556152
    7. '())))' → logprob: -13.383048057556152
    8. ' ' → logprob: -13.633048057556152
    9. '(' → logprob: -14.758048057556152
    10. '))).' → logprob: -15.133048057556152

Token 134: 'iss' (ID: 1009)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7334646582603455
    2. 'd' → logprob: -1.1084647178649902
    3. ' ' → logprob: -2.8584647178649902
    4. 'def' → logprob: -2.9834647178649902
    5. '#' → logprob: -3.6084647178649902
    6. 'a' → logprob: -3.9834647178649902
    7. 's' → logprob: -4.48346471786499
    8. '_' → logprob: -5.10846471786499
    9. 'r' → logprob: -5.85846471786499
    10. '\' → logprob: -6.35846471786499

Token 135: ' =' (ID: 314)
  Prédit: 'pace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pace' → logprob: -0.1118885725736618
    2. 'ub' → logprob: -2.3618886470794678
    3. ' =' → logprob: -4.736888408660889
    4. 'canf' → logprob: -7.236888408660889
    5. 'et' → logprob: -7.861888408660889
    6. 'ample' → logprob: -8.111888885498047
    7. 'ame' → logprob: -8.111888885498047
    8. 'space' → logprob: -9.236888885498047
    9. 'sert' → logprob: -9.486888885498047
    10. 'e' → logprob: -9.611888885498047

Token 136: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.4673738181591034
    2. ' lambda' → logprob: -1.2173738479614258
    3. 'sys' → logprob: -3.092373847961426
    4. ' sys' → logprob: -3.467373847961426
    5. '(lambda' → logprob: -8.092373847961426
    6. '=lambda' → logprob: -9.217373847961426
    7. '=sys' → logprob: -9.342373847961426
    8. ' ' → logprob: -9.842373847961426
    9. '(sys' → logprob: -9.842373847961426
    10. 'input' → logprob: -10.779873847961426

Token 137: ':' (ID: 25)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.09510303288698196
    2. ':' → logprob: -2.7201030254364014
    3. 'lambda' → logprob: -4.2201032638549805
    4. ' sys' → logprob: -4.9701032638549805
    5. '():' → logprob: -6.3451032638549805
    6. '(sys' → logprob: -7.4701032638549805
    7. '=sys' → logprob: -7.8451032638549805
    8. '()' → logprob: -8.84510326385498
    9. ' lambda' → logprob: -9.22010326385498
    10. 'x' → logprob: -9.72010326385498

Token 138: ' ''.' (ID: 105941)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0012741618556901813
    2. 'input' → logprob: -7.376274108886719
    3. 'str' → logprob: -8.126274108886719
    4. 'int' → logprob: -8.626274108886719
    5. ' sys' → logprob: -9.001274108886719
    6. '''.' → logprob: -10.501274108886719
    7. '(sys' → logprob: -12.001274108886719
    8. 'list' → logprob: -12.751274108886719
    9. ''' → logprob: -12.751274108886719
    10. 'float' → logprob: -13.626274108886719

Token 139: 'join' (ID: 10891)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.8839842677116394
    2. 'join' → logprob: -1.1339843273162842
    3. 'strip' → logprob: -1.3839843273162842
    4. 'sys' → logprob: -4.508984088897705
    5. 'stdout' → logprob: -6.633984088897705
    6. 'rstrip' → logprob: -6.883984088897705
    7. 'read' → logprob: -7.508984088897705
    8. 'split' → logprob: -8.008984565734863
    9. 'decode' → logprob: -9.383984565734863
    10. 'in' → logprob: -9.758984565734863

Token 140: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.004602199420332909
    2. 'map' → logprob: -6.004602432250977
    3. '(sys' → logprob: -6.754602432250977
    4. '(chr' → logprob: -7.379602432250977
    5. '(list' → logprob: -8.129602432250977
    6. 'chr' → logprob: -10.629602432250977
    7. '(' → logprob: -11.754602432250977
    8. '([' → logprob: -12.629602432250977
    9. 'sys' → logprob: -13.004602432250977
    10. 'list' → logprob: -13.754602432250977

Token 141: '(chr' (ID: 185847)
  Prédit: '(chr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chr' → logprob: -0.00012833021173719317
    2. 'chr' → logprob: -9.000128746032715
    3. '(lambda' → logprob: -12.250128746032715
    4. '_chr' → logprob: -16.1251277923584
    5. '(' → logprob: -18.2501277923584
    6. '(chars' → logprob: -18.6251277923584
    7. '(bytes' → logprob: -18.6251277923584
    8. ' chr' → logprob: -18.7501277923584
    9. '(ord' → logprob: -18.7501277923584
    10. '(str' → logprob: -19.0001277923584

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4868770196917467e-05
    2. '(sys' → logprob: -10.875024795532227
    3. 'sys' → logprob: -13.000024795532227
    4. ' ,' → logprob: -13.250024795532227
    5. '=sys' → logprob: -14.500024795532227
    6. ' sys' → logprob: -14.750024795532227
    7. ',s' → logprob: -15.250024795532227
    8. '(),' → logprob: -15.625024795532227
    9. '(' → logprob: -16.000024795532227
    10. ',System' → logprob: -16.250024795532227

Token 143: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.201437309384346
    2. ' sys' → logprob: -1.7014373540878296
    3. '(sys' → logprob: -11.201436996459961
    4. '	sys' → logprob: -12.451436996459961
    5. '=sys' → logprob: -12.576436996459961
    6. ')' → logprob: -14.576436996459961
    7. ' ' → logprob: -14.826436996459961
    8. '.sys' → logprob: -14.951436996459961
    9. 'system' → logprob: -14.951436996459961
    10. '   ' → logprob: -15.076436996459961

Token 144: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.264322317088954e-05
    2. '.stdout' → logprob: -9.875052452087402
    3. 'stdin' → logprob: -14.500052452087402
    4. ' .' → logprob: -15.250052452087402
    5. '.std' → logprob: -16.00005340576172
    6. '.' → logprob: -16.37505340576172
    7. '.stderr' → logprob: -17.00005340576172
    8. '.argv' → logprob: -17.50005340576172
    9. '.buffer' → logprob: -17.75005340576172
    10. ' stdin' → logprob: -18.25005340576172

Token 145: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.0005037044174969196
    2. 'buffer' → logprob: -8.125503540039062
    3. '.stdin' → logprob: -8.625503540039062
    4. '.stdout' → logprob: -11.875503540039062
    5. '.system' → logprob: -12.375503540039062
    6. '.readline' → logprob: -12.375503540039062
    7. ' buffer' → logprob: -12.625503540039062
    8. '	buffer' → logprob: -13.250503540039062
    9. 'sys' → logprob: -13.375503540039062
    10. '.sys' → logprob: -13.625503540039062

Token 146: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0001410850090906024
    2. '.read' → logprob: -8.875141143798828
    3. '.readlines' → logprob: -14.375141143798828
    4. 'read' → logprob: -15.250141143798828
    5. ' readline' → logprob: -15.500141143798828
    6. '.rstrip' → logprob: -16.625141143798828
    7. '_read' → logprob: -18.000141143798828
    8. '.' → logprob: -18.750141143798828
    9. '.Read' → logprob: -19.250141143798828
    10. '```' → logprob: -19.250141143798828

Token 147: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.15310683415737e-05
    2. '()))' → logprob: -11.625021934509277
    3. '.readline' → logprob: -11.750021934509277
    4. '()' → logprob: -13.125021934509277
    5. '.rstrip' → logprob: -13.875021934509277
    6. 'rstrip' → logprob: -14.250021934509277
    7. '))' → logprob: -14.750021934509277
    8. '())' → logprob: -16.00002098083496
    9. '())))' → logprob: -16.50002098083496
    10. '())).' → logprob: -16.62502098083496

Token 148: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.038214996457099915
    2. 'read' → logprob: -3.288214921951294
    3. 'strip' → logprob: -9.038214683532715
    4. 'decode' → logprob: -10.288214683532715
    5. 'raw' → logprob: -11.913214683532715
    6. ')' → logprob: -12.163214683532715
    7. 'readonly' → logprob: -12.913214683532715
    8. 'r' → logprob: -13.663214683532715
    9. '.rstrip' → logprob: -13.788214683532715
    10. 'split' → logprob: -14.038214683532715

Token 149: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.006656165234744549
    2. '()' → logprob: -5.631656169891357
    3. '))' → logprob: -5.881656169891357
    4. '())))' → logprob: -8.7566556930542
    5. '()))
' → logprob: -10.0066556930542
    6. '())' → logprob: -10.5066556930542
    7. '())).' → logprob: -11.7566556930542
    8. '(' → logprob: -11.8816556930542
    9. '()));' → logprob: -12.0066556930542
    10. '()))

' → logprob: -12.1316556930542

Token 150: 'sl' (ID: 4500)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3390250504016876
    2. '(' → logprob: -2.2140250205993652
    3. ')' → logprob: -3.3390250205993652
    4. '#' → logprob: -3.4640250205993652
    5. '_' → logprob: -3.8390250205993652
    6. ' 
' → logprob: -4.089025020599365
    7. 'n' → logprob: -4.089025020599365
    8. 'd' → logprob: -4.464025020599365
    9. 'def' → logprob: -5.214025020599365
    10. 's' → logprob: -5.339025020599365

Token 151: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07578736543655396
    2. ' =' → logprob: -3.575787305831909
    3. 'ambda' → logprob: -3.700787305831909
    4. 'ice' → logprob: -4.325787544250488
    5. '=lambda' → logprob: -5.325787544250488
    6. '()' → logprob: -7.200787544250488
    7. 'p' → logprob: -7.450787544250488
    8. 'ices' → logprob: -8.200787544250488
    9. '(' → logprob: -9.950787544250488
    10. '#' → logprob: -9.950787544250488

Token 152: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.18310028314590454
    2. 'sys' → logprob: -2.0581002235412598
    3. ' lambda' → logprob: -3.8081002235412598
    4. 'ambda' → logprob: -4.43310022354126
    5. '(lambda' → logprob: -5.43310022354126
    6. 'iss' → logprob: -8.308100700378418
    7. ' sys' → logprob: -8.308100700378418
    8. '=lambda' → logprob: -8.683100700378418
    9. '(sys' → logprob: -9.308100700378418
    10. 'input' → logprob: -9.433100700378418

Token 153: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005326724611222744
    2. '():' → logprob: -5.255326747894287
    3. '()' → logprob: -10.255326271057129
    4. ' :' → logprob: -10.255326271057129
    5. ':int' → logprob: -12.130326271057129
    6. ' ():' → logprob: -12.505326271057129
    7. 'n' → logprob: -13.380326271057129
    8. ':is' → logprob: -14.005326271057129
    9. ':list' → logprob: -14.005326271057129
    10. ':''' → logprob: -14.005326271057129

Token 154: ' list' (ID: 1562)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.10857085138559341
    2. 'iss' → logprob: -2.3585708141326904
    3. 'list' → logprob: -5.3585710525512695
    4. '''.' → logprob: -6.1085710525512695
    5. 'str' → logprob: -7.7335710525512695
    6. 'int' → logprob: -8.10857105255127
    7. 'ii' → logprob: -8.23357105255127
    8. ''' → logprob: -9.35857105255127
    9. ' sys' → logprob: -9.60857105255127
    10. ''s' → logprob: -10.35857105255127

Token 155: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.27862486243247986
    2. '(' → logprob: -1.6536248922348022
    3. '(sys' → logprob: -3.0286247730255127
    4. '(ss' → logprob: -6.778625011444092
    5. '(str' → logprob: -7.403625011444092
    6. '(chr' → logprob: -7.653625011444092
    7. 'map' → logprob: -7.903625011444092
    8. '(ord' → logprob: -8.278624534606934
    9. '('' → logprob: -8.653624534606934
    10. 'iss' → logprob: -9.278624534606934

Token 156: '('' (ID: 706)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.42545273900032043
    2. '(chr' → logprob: -1.175452709197998
    3. '(ord' → logprob: -3.675452709197998
    4. '(lambda' → logprob: -4.800452709197998
    5. '(' → logprob: -5.550452709197998
    6. '(sys' → logprob: -9.800453186035156
    7. '(ii' → logprob: -9.800453186035156
    8. '(int' → logprob: -9.800453186035156
    9. '(ss' → logprob: -9.925453186035156
    10. 'str' → logprob: -9.925453186035156

Token 157: ''.' (ID: 6120)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.11705972254276276
    2. 'str' → logprob: -2.2420597076416016
    3. '(chr' → logprob: -5.867059707641602
    4. 'list' → logprob: -7.617059707641602
    5. 'lambda' → logprob: -8.242059707641602
    6. 'iss' → logprob: -8.617059707641602
    7. 'ord' → logprob: -8.867059707641602
    8. 'bytes' → logprob: -9.492059707641602
    9. 'sys' → logprob: -9.992059707641602
    10. 'input' → logprob: -10.117059707641602

Token 158: 'join' (ID: 10891)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.19629837572574615
    2. 'split' → logprob: -1.821298360824585
    3. 'sys' → logprob: -4.946298599243164
    4. 'join' → logprob: -5.571298599243164
    5. 'ascii' → logprob: -5.946298599243164
    6. 'rstrip' → logprob: -7.071298599243164
    7. 'str' → logprob: -7.321298599243164
    8. 'stdin' → logprob: -7.821298599243164
    9. 'slice' → logprob: -8.321298599243164
    10. 'startswith' → logprob: -8.946298599243164

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021017256658524275
    2. ',map' → logprob: -6.252101898193359
    3. ',list' → logprob: -9.50210189819336
    4. ' ,' → logprob: -10.87710189819336
    5. ',s' → logprob: -10.87710189819336
    6. ',it' → logprob: -11.00210189819336
    7. ',[' → logprob: -11.62710189819336
    8. ',['' → logprob: -11.87710189819336
    9. 'sys' → logprob: -12.37710189819336
    10. 'map' → logprob: -12.37710189819336

Token 160: ' zip' (ID: 16216)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.644536018371582
    2. 'it' → logprob: -1.269536018371582
    3. 'zip' → logprob: -2.019536018371582
    4. 'sys' → logprob: -2.894536018371582
    5. '[' → logprob: -6.144536018371582
    6. ' map' → logprob: -6.519536018371582
    7. ' itertools' → logprob: -6.644536018371582
    8. ' zip' → logprob: -8.269536018371582
    9. '[it' → logprob: -8.269536018371582
    10. 'iter' → logprob: -9.019536018371582

Token 161: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.0007675791857764125
    2. '(' → logprob: -7.750767707824707
    3. '(*(' → logprob: -8.500767707824707
    4. '(*)' → logprob: -9.625767707824707
    5. '(sys' → logprob: -10.250767707824707
    6. '_long' → logprob: -11.125767707824707
    7. '(map' → logprob: -12.125767707824707
    8. '(range' → logprob: -12.750767707824707
    9. 'long' → logprob: -13.000767707824707
    10. '(long' → logprob: -13.750767707824707

Token 162: '[' (ID: 58)
  Prédit: 'iss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iss' → logprob: -0.9048300385475159
    2. 'sys' → logprob: -1.154829978942871
    3. '(sys' → logprob: -2.279829978942871
    4. '[' → logprob: -2.404829978942871
    5. 'map' → logprob: -2.904829978942871
    6. '(map' → logprob: -5.154829978942871
    7. 'iter' → logprob: -5.404829978942871
    8. 'it' → logprob: -5.404829978942871
    9. '([' → logprob: -6.029829978942871
    10. '(' → logprob: -6.154829978942871

Token 163: 'iter' (ID: 2340)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5660364031791687
    2. 'iss' → logprob: -1.4410364627838135
    3. 'map' → logprob: -2.4410364627838135
    4. '[' → logprob: -2.9410364627838135
    5. 'iter' → logprob: -3.5660364627838135
    6. 'list' → logprob: -4.441036224365234
    7. 'it' → logprob: -4.941036224365234
    8. '(sys' → logprob: -6.066036224365234
    9. '[[' → logprob: -6.816036224365234
    10. 'filter' → logprob: -7.316036224365234

Token 164: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03410123661160469
    2. '(sys' → logprob: -3.9091012477874756
    3. '(input' → logprob: -4.4091010093688965
    4. 'iss' → logprob: -7.5341010093688965
    5. '('' → logprob: -8.409101486206055
    6. '(str' → logprob: -9.534101486206055
    7. '(map' → logprob: -9.534101486206055
    8. 'sys' → logprob: -9.534101486206055
    9. '(range' → logprob: -9.784101486206055
    10. '(list' → logprob: -9.909101486206055

Token 165: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.3902033970225602e-05
    2. 'stdin' → logprob: -11.250014305114746
    3. '.' → logprob: -15.000014305114746
    4. '.stdout' → logprob: -15.125014305114746
    5. '(stdin' → logprob: -15.625014305114746
    6. '.argv' → logprob: -16.75001335144043
    7. '.std' → logprob: -17.37501335144043
    8. 'in' → logprob: -18.87501335144043
    9. ' stdin' → logprob: -19.00001335144043
    10. '```' → logprob: -19.37501335144043

Token 166: '.buffer' (ID: 48964)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.2770741879940033
    2. 'buffer' → logprob: -1.5270742177963257
    3. '.stdin' → logprob: -3.777074098587036
    4. '.buffer' → logprob: -6.527074337005615
    5. '.readline' → logprob: -8.902073860168457
    6. '_buffer' → logprob: -9.402073860168457
    7. 'std' → logprob: -10.027073860168457
    8. ' buffer' → logprob: -10.277073860168457
    9. '_st' → logprob: -10.277073860168457
    10. '(stdin' → logprob: -10.277073860168457

Token 167: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0006688326830044389
    2. '.read' → logprob: -7.500669002532959
    3. '().' → logprob: -9.1256685256958
    4. 'read' → logprob: -12.5006685256958
    5. '.readlines' → logprob: -12.8756685256958
    6. '.rstrip' → logprob: -15.1256685256958
    7. '.' → logprob: -15.2506685256958
    8. ' readline' → logprob: -16.875669479370117
    9. '```' → logprob: -17.500669479370117
    10. '   ' → logprob: -17.750669479370117

Token 168: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0014370197895914316
    2. '()' → logprob: -6.626437187194824
    3. '(),' → logprob: -10.751437187194824
    4. '(' → logprob: -11.126437187194824
    5. '()]' → logprob: -11.126437187194824
    6. 'rstrip' → logprob: -11.126437187194824
    7. '().__' → logprob: -11.251437187194824
    8. '.rstrip' → logprob: -11.501437187194824
    9. '.readline' → logprob: -12.501437187194824
    10. '())' → logprob: -12.751437187194824

Token 169: 'decode' (ID: 44196)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.09613432735204697
    2. 'read' → logprob: -2.4711344242095947
    3. '().' → logprob: -5.346134185791016
    4. 'strip' → logprob: -6.721134185791016
    5. 'split' → logprob: -7.596134185791016
    6. 'decode' → logprob: -8.096134185791016
    7. 'readonly' → logprob: -9.221134185791016
    8. 'r' → logprob: -9.721134185791016
    9. '.rstrip' → logprob: -10.721134185791016
    10. 'raw' → logprob: -10.846134185791016

Token 170: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.11400578171014786
    2. '()' → logprob: -2.4890058040618896
    3. '(),' → logprob: -3.9890058040618896
    4. '(),'' → logprob: -5.3640055656433105
    5. '('' → logprob: -7.4890055656433105
    6. '())' → logprob: -8.114006042480469
    7. '()]' → logprob: -8.239006042480469
    8. '()[' → logprob: -9.364006042480469
    9. '(sys' → logprob: -9.739006042480469
    10. '()],' → logprob: -10.114006042480469

Token 171: 'split' (ID: 13627)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.1605420559644699
    2. 'strip' → logprob: -1.9105420112609863
    3. 'split' → logprob: -8.285542488098145
    4. 'read' → logprob: -10.785542488098145
    5. '().' → logprob: -10.785542488098145
    6. 'decode' → logprob: -11.035542488098145
    7. 'ascii' → logprob: -13.160542488098145
    8. 'replace' → logprob: -13.160542488098145
    9. ' strip' → logprob: -13.785542488098145
    10. 'r' → logprob: -13.910542488098145

Token 172: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.42244115471839905
    2. '()' → logprob: -1.1724411249160767
    3. '()]' → logprob: -4.047441005706787
    4. '('' → logprob: -5.172441005706787
    5. '()[' → logprob: -5.922441005706787
    6. '(),' → logprob: -6.172441005706787
    7. '()),' → logprob: -6.797441005706787
    8. '(' → logprob: -6.922441005706787
    9. '().' → logprob: -6.922441005706787
    10. '('\' → logprob: -7.422441005706787

Token 173: ']*' (ID: 18579)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5901762843132019
    2. '())' → logprob: -1.0901763439178467
    3. '()]' → logprob: -2.4651763439178467
    4. ')]' → logprob: -4.465176105499268
    5. ')])' → logprob: -5.590176105499268
    6. '(' → logprob: -6.090176105499268
    7. '(),' → logprob: -6.090176105499268
    8. '())))' → logprob: -7.215176105499268
    9. '()][' → logprob: -7.215176105499268
    10. '()))' → logprob: -7.340176105499268

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38910436630249023
    2. '2' → logprob: -1.1391043663024902
    3. 'len' → logprob: -6.76410436630249
    4. ' ' → logprob: -7.51410436630249
    5. 'int' → logprob: -8.389104843139648
    6. '4' → logprob: -9.514104843139648
    7. '  ' → logprob: -10.264104843139648
    8. '0' → logprob: -10.639104843139648
    9. 'n' → logprob: -10.764104843139648
    10. ')' → logprob: -10.889104843139648

Token 175: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0002752790169324726
    2. ')' → logprob: -8.750275611877441
    3. '))' → logprob: -9.875275611877441
    4. '())))' → logprob: -10.500275611877441
    5. '))))' → logprob: -10.875275611877441
    6. ')))
' → logprob: -11.625275611877441
    7. '()' → logprob: -12.375275611877441
    8. ' ' → logprob: -13.250275611877441
    9. ')));' → logprob: -13.250275611877441
    10. ')))

' → logprob: -14.250275611877441

Token 176: 'is' (ID: 276)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13470295071601868
    2. '(' → logprob: -2.8847029209136963
    3. ')' → logprob: -3.2597029209136963
    4. '
' → logprob: -5.009703159332275
    5. '<|end|>' → logprob: -5.509703159332275
    6. '()
' → logprob: -6.009703159332275
    7. '#' → logprob: -6.134703159332275
    8. '(
' → logprob: -6.384703159332275
    9. '[]' → logprob: -6.509703159332275
    10. '\n' → logprob: -6.509703159332275

Token 177: 'n' (ID: 77)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.034098707139492035
    2. 'sl' → logprob: -4.4090986251831055
    3. '_' → logprob: -5.6590986251831055
    4. '<|end|>' → logprob: -6.2840986251831055
    5. 'l' → logprob: -6.4090986251831055
    6. 'n' → logprob: -6.4090986251831055
    7. '2' → logprob: -6.6590986251831055
    8. '()' → logprob: -6.7840986251831055
    9. '(' → logprob: -6.9090986251831055
    10. 'lambda' → logprob: -7.1590986251831055

Token 178: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38707786798477173
    2. ' =' → logprob: -1.137077808380127
    3. '=lambda' → logprob: -8.637078285217285
    4. ' ' → logprob: -11.387078285217285
    5. '()' → logprob: -11.887078285217285
    6. 's' → logprob: -12.762078285217285
    7. ')' → logprob: -13.012078285217285
    8. '_' → logprob: -13.512078285217285
    9. '(' → logprob: -14.137078285217285
    10. ',' → logprob: -14.262078285217285

Token 179: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.42966246604919434
    2. ' lambda' → logprob: -1.0546624660491943
    3. '(lambda' → logprob: -7.304662704467773
    4. 'int' → logprob: -8.929662704467773
    5. '=lambda' → logprob: -9.304662704467773
    6. 'lam' → logprob: -10.304662704467773
    7. 'ambda' → logprob: -11.179662704467773
    8. ' il' → logprob: -13.054662704467773
    9. ' lamb' → logprob: -13.054662704467773
    10. '    ' → logprob: -13.304662704467773

Token 180: ' n' (ID: 297)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6972509622573853
    2. 'int' → logprob: -1.6972509622573853
    3. '():' → logprob: -1.6972509622573853
    4. '()' → logprob: -2.6972508430480957
    5. ' lambda' → logprob: -2.9472508430480957
    6. ':' → logprob: -5.322250843048096
    7. '[]' → logprob: -5.322250843048096
    8. ' ()' → logprob: -6.572250843048096
    9. ' ():' → logprob: -6.697250843048096
    10. ' int' → logprob: -7.197250843048096

Token 181: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025844585616141558
    2. '=' → logprob: -6.252584457397461
    3. '(n' → logprob: -7.752584457397461
    4. ' :' → logprob: -9.127584457397461
    5. 'n' → logprob: -10.377584457397461
    6. '():' → logprob: -10.627584457397461
    7. '=lambda' → logprob: -10.752584457397461
    8. ':list' → logprob: -11.002584457397461
    9. '(' → logprob: -11.627584457397461
    10. ' n' → logprob: -12.752584457397461

Token 182: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.22743737697601318
    2. '[list' → logprob: -1.7274373769760132
    3. '[' → logprob: -4.227437496185303
    4. ' list' → logprob: -5.227437496185303
    5. ' [' → logprob: -5.602437496185303
    6. '[int' → logprob: -6.352437496185303
    7. '[i' → logprob: -9.352437019348145
    8. 'ilist' → logprob: -9.477437019348145
    9. '[str' → logprob: -11.102437019348145
    10. '[n' → logprob: -11.102437019348145

Token 183: 'sys' (ID: 17324)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.030016597360372543
    2. 'ii' → logprob: -3.5300166606903076
    3. 'ints' → logprob: -9.405016899108887
    4. ' int' → logprob: -9.905016899108887
    5. 'tuple' → logprob: -10.030016899108887
    6. '[int' → logprob: -10.905016899108887
    7. 'iss' → logprob: -11.030016899108887
    8. ' ii' → logprob: -11.780016899108887
    9. '```' → logprob: -12.030016899108887
    10. 'list' → logprob: -12.280016899108887

Token 184: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.700132997939363e-05
    2. '.stdout' → logprob: -11.250017166137695
    3. 'stdin' → logprob: -12.750017166137695
    4. '.st' → logprob: -14.875017166137695
    5. '.argv' → logprob: -15.375017166137695
    6. '.' → logprob: -15.500017166137695
    7. '.std' → logprob: -15.625017166137695
    8. '.stderr' → logprob: -16.250017166137695
    9. '(stdin' → logprob: -17.500017166137695
    10. '.in' → logprob: -18.125017166137695

Token 185: '.buffer' (ID: 48964)
  Prédit: 'buffer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buffer' → logprob: -0.5769105553627014
    2. '.buffer' → logprob: -0.8269105553627014
    3. '.readline' → logprob: -7.201910495758057
    4. '	buffer' → logprob: -9.326910972595215
    5. ' buffer' → logprob: -9.576910972595215
    6. '_buffer' → logprob: -10.326910972595215
    7. '(buffer' → logprob: -10.826910972595215
    8. '-buffer' → logprob: -12.701910972595215
    9. 'stdin' → logprob: -12.826910972595215
    10. '.stdin' → logprob: -12.951910972595215

Token 186: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.036524842376821e-05
    2. '.read' → logprob: -10.250040054321289
    3. 'read' → logprob: -12.500040054321289
    4. ' readline' → logprob: -14.500040054321289
    5. '.readlines' → logprob: -15.000040054321289
    6. '.' → logprob: -15.000040054321289
    7. '.rstrip' → logprob: -17.87504005432129
    8. 'r' → logprob: -18.25004005432129
    9. 'rstrip' → logprob: -18.75004005432129
    10. '_read' → logprob: -19.25004005432129

Token 187: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.277553620748222e-05
    2. '()' → logprob: -9.750062942504883
    3. '.rstrip' → logprob: -13.125062942504883
    4. 'rstrip' → logprob: -13.875062942504883
    5. ' ().' → logprob: -14.375062942504883
    6. '(' → logprob: -15.375062942504883
    7. '.' → logprob: -15.500062942504883
    8. '.readline' → logprob: -15.625062942504883
    9. 'for' → logprob: -16.250062942504883
    10. ' for' → logprob: -16.625062942504883

Token 188: 'decode' (ID: 44196)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.10032183676958084
    2. 'decode' → logprob: -2.3503217697143555
    3. 'strip' → logprob: -9.725321769714355
    4. 'read' → logprob: -9.975321769714355
    5. 'r' → logprob: -12.975321769714355
    6. '.rstrip' → logprob: -13.225321769714355
    7. '```' → logprob: -13.975321769714355
    8. 'decoded' → logprob: -14.100321769714355
    9. '.decode' → logprob: -14.600321769714355
    10. 'raw' → logprob: -14.975321769714355

Token 189: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00030674142180942
    2. '()' → logprob: -8.125307083129883
    3. ' ().' → logprob: -11.750307083129883
    4. '```' → logprob: -14.000307083129883
    5. '(' → logprob: -14.375307083129883
    6. 'rstrip' → logprob: -14.875307083129883
    7. '.rstrip' → logprob: -15.250307083129883
    8. ' ()' → logprob: -15.625307083129883
    9. '()
' → logprob: -16.250307083129883
    10. '()]' → logprob: -16.375307083129883

Token 190: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.004083385691046715
    2. 'strip' → logprob: -5.504083156585693
    3. 'split' → logprob: -12.379083633422852
    4. 'decode' → logprob: -15.254083633422852
    5. '.rstrip' → logprob: -15.629083633422852
    6. 'r' → logprob: -15.879083633422852
    7. 'rst' → logprob: -16.87908363342285
    8. 'rs' → logprob: -17.00408363342285
    9. 'str' → logprob: -17.50408363342285
    10. ' strip' → logprob: -18.62908363342285

Token 191: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.666993507067673e-05
    2. '()]' → logprob: -11.000036239624023
    3. ' ()' → logprob: -11.000036239624023
    4. 'for' → logprob: -13.750036239624023
    5. '()\' → logprob: -14.750036239624023
    6. '()
' → logprob: -14.875036239624023
    7. ' for' → logprob: -15.250036239624023
    8. ' ' → logprob: -15.375036239624023
    9. '())' → logprob: -15.625036239624023
    10. ')' → logprob: -15.625036239624023

Token 192: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16207373142242432
    2. ' for' → logprob: -2.2870736122131348
    3. 'for' → logprob: -3.0370736122131348
    4. '().' → logprob: -10.662074089050293
    5. '	for' → logprob: -10.787074089050293
    6. ' ()' → logprob: -11.162074089050293
    7. ')' → logprob: -11.537074089050293
    8. '()]' → logprob: -12.162074089050293
    9. ' ' → logprob: -12.287074089050293
    10. '   ' → logprob: -13.162074089050293

Token 193: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0011933216592296958
    2. ' _' → logprob: -6.751193523406982
    3. ' in' → logprob: -11.376193046569824
    4. '_i' → logprob: -12.001193046569824
    5. ' ' → logprob: -13.001193046569824
    6. ' range' → logprob: -14.001193046569824
    7. '_range' → logprob: -14.001193046569824
    8. '_in' → logprob: -14.251193046569824
    9. '_n' → logprob: -14.876193046569824
    10. '_]' → logprob: -15.626193046569824

Token 194: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5768023133277893
    2. ' in' → logprob: -0.8268023133277893
    3. 'range' → logprob: -7.0768022537231445
    4. ' ' → logprob: -11.701802253723145
    5. ' range' → logprob: -12.326802253723145
    6. '_' → logprob: -13.326802253723145
    7. 'n' → logprob: -13.576802253723145
    8. '
' → logprob: -14.326802253723145
    9. 'i' → logprob: -14.826802253723145
    10. '  ' → logprob: -14.951802253723145

Token 195: ' itertools' (ID: 103178)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002036595979006961
    2. ' range' → logprob: -8.500204086303711
    3. '(range' → logprob: -16.37520408630371
    4. '	range' → logprob: -17.37520408630371
    5. ' ' → logprob: -19.12520408630371
    6. 'n' → logprob: -20.00020408630371
    7. ')' → logprob: -20.50020408630371
    8. ']' → logprob: -20.75020408630371
    9. '
' → logprob: -21.00020408630371
    10. '   ' → logprob: -21.12520408630371

Token 196: '.repeat' (ID: 109361)
  Prédit: '.repeat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.repeat' → logprob: -1.005385160446167
    2. 'range' → logprob: -1.380385160446167
    3. '.count' → logprob: -1.630385160446167
    4. 'repeat' → logprob: -2.630385160446167
    5. '.range' → logprob: -3.005385160446167
    6. 'import' → logprob: -3.505385160446167
    7. 'count' → logprob: -3.880385160446167
    8. '.' → logprob: -5.880385398864746
    9. '	range' → logprob: -5.880385398864746
    10. '.chain' → logprob: -6.130385398864746

Token 197: '(None' (ID: 65126)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002457238151691854
    2. '(' → logprob: -9.000246047973633
    3. 'range' → logprob: -10.000246047973633
    4. '(range' → logprob: -10.125246047973633
    5. 'n' → logprob: -10.625246047973633
    6. '(None' → logprob: -11.375246047973633
    7. 'None' → logprob: -14.625246047973633
    8. '(int' → logprob: -15.500246047973633
    9. '_n' → logprob: -17.000246047973633
    10. 'int' → logprob: -17.125246047973633

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03804447129368782
    2. ',n' → logprob: -3.2880444526672363
    3. ' ,' → logprob: -12.913044929504395
    4. 'n' → logprob: -15.538044929504395
    5. '(n' → logprob: -15.663044929504395
    6. ',num' → logprob: -16.538043975830078
    7. ',int' → logprob: -17.288043975830078
    8. ',m' → logprob: -17.413043975830078
    9. ',size' → logprob: -18.538043975830078
    10. ' n' → logprob: -18.788043975830078

Token 199: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005234121344983578
    2. ' n' → logprob: -5.255234241485596
    3. '	n' → logprob: -15.005233764648438
    4. '   ' → logprob: -18.005233764648438
    5. '(n' → logprob: -18.380233764648438
    6. ')n' → logprob: -19.755233764648438
    7. ',n' → logprob: -20.130233764648438
    8. ' ' → logprob: -20.255233764648438
    9. '  ' → logprob: -20.505233764648438
    10. '
' → logprob: -20.630233764648438

Token 200: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.1008713702030946e-06
    2. ')' → logprob: -13.750001907348633
    3. ')]
' → logprob: -14.625001907348633
    4. ')])' → logprob: -15.625001907348633
    5. ']' → logprob: -15.750001907348633
    6. ')],' → logprob: -16.375001907348633
    7. '))' → logprob: -16.750001907348633
    8. '])' → logprob: -17.500001907348633
    9. '])]' → logprob: -17.500001907348633
    10. '')]' → logprob: -17.625001907348633

Token 201: 'l' (ID: 75)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7155423760414124
    2. 'n' → logprob: -1.3405423164367676
    3. 'd' → logprob: -1.9655423164367676
    4. 'a' → logprob: -3.2155423164367676
    5. '#' → logprob: -4.090542316436768
    6. 'D' → logprob: -4.340542316436768
    7. 'N' → logprob: -4.590542316436768
    8. 'for' → logprob: -4.840542316436768
    9. 'class' → logprob: -5.090542316436768
    10. 'dp' → logprob: -6.215542316436768

Token 202: 'cm' (ID: 7871)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -1.0240097045898438
    2. ' =' → logprob: -1.6490097045898438
    3. 'ambda' → logprob: -1.7740097045898438
    4. 'ist' → logprob: -1.8990097045898438
    5. 'ine' → logprob: -2.8990097045898438
    6. 'eft' → logprob: -3.6490097045898438
    7. '=' → logprob: -4.899009704589844
    8. 'og' → logprob: -5.649009704589844
    9. 'a' → logprob: -5.774009704589844
    10. 'is' → logprob: -5.899009704589844

Token 203: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3831216096878052
    2. ' =' → logprob: -1.2581216096878052
    3. '=lambda' → logprob: -3.3831214904785156
    4. '(lambda' → logprob: -10.383121490478516
    5. '(' → logprob: -10.508121490478516
    6. '_' → logprob: -10.508121490478516
    7. '_=' → logprob: -10.633121490478516
    8. ' ' → logprob: -11.883121490478516
    9. 'lambda' → logprob: -12.133121490478516
    10. 'a' → logprob: -12.133121490478516

Token 204: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.270103394985199
    2. ' lambda' → logprob: -1.5201034545898438
    3. '(lambda' → logprob: -4.020103454589844
    4. '=lambda' → logprob: -9.895103454589844
    5. ' (' → logprob: -12.645103454589844
    6. ' ' → logprob: -13.645103454589844
    7. '  ' → logprob: -13.895103454589844
    8. 'mul' → logprob: -14.145103454589844
    9. 'reduce' → logprob: -14.395103454589844
    10. ' lamb' → logprob: -14.395103454589844

Token 205: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002493968466296792
    2. 'x' → logprob: -6.002493858337402
    3. ' a' → logprob: -11.002493858337402
    4. ' x' → logprob: -13.752493858337402
    5. 'lambda' → logprob: -14.377493858337402
    6. '	a' → logprob: -17.00249481201172
    7. '(a' → logprob: -17.12749481201172
    8. 'A' → logprob: -18.50249481201172
    9. ' ' → logprob: -20.25249481201172
    10. 'aa' → logprob: -20.62749481201172

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038091182708740234
    2. ',y' → logprob: -3.2880911827087402
    3. ',x' → logprob: -10.788091659545898
    4. 'y' → logprob: -11.163091659545898
    5. ' ,' → logprob: -11.663091659545898
    6. ',b' → logprob: -12.538091659545898
    7. ',l' → logprob: -13.913091659545898
    8. ',
' → logprob: -14.163091659545898
    9. ',m' → logprob: -15.538091659545898
    10. ',n' → logprob: -15.538091659545898

Token 207: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001234428636962548
    2. ' y' → logprob: -9.000123023986816
    3. '	y' → logprob: -18.750123977661133
    4. ' ' → logprob: -20.000123977661133
    5. 'x' → logprob: -20.375123977661133
    6. '  ' → logprob: -21.125123977661133
    7. '   ' → logprob: -21.375123977661133
    8. '*y' → logprob: -21.625123977661133
    9. 'b' → logprob: -21.875123977661133
    10. ',y' → logprob: -22.000123977661133

Token 208: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001294030516874045
    2. ' :' → logprob: -9.125129699707031
    3. ':x' → logprob: -11.000129699707031
    4. '=' → logprob: -13.125129699707031
    5. ':(' → logprob: -14.375129699707031
    6. ',' → logprob: -14.625129699707031
    7. ',:' → logprob: -15.875129699707031
    8. ':
' → logprob: -15.875129699707031
    9. ':y' → logprob: -16.25012969970703
    10. '=x' → logprob: -16.75012969970703

Token 209: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4779704213142395
    2. '(x' → logprob: -0.9779704213142395
    3. ' x' → logprob: -5.977970600128174
    4. ' (' → logprob: -7.227970600128174
    5. 'abs' → logprob: -7.727970600128174
    6. '(abs' → logprob: -9.977970123291016
    7. '(' → logprob: -10.227970123291016
    8. '(int' → logprob: -10.477970123291016
    9. '  ' → logprob: -10.477970123291016
    10. '((' → logprob: -11.352970123291016

Token 210: 'reduce' (ID: 49119)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0014889120357111096
    2. '(x' → logprob: -7.00148868560791
    3. ' x' → logprob: -7.50148868560791
    4. 'abs' → logprob: -11.37648868560791
    5. ' (' → logprob: -12.25148868560791
    6. '  ' → logprob: -12.75148868560791
    7. '	x' → logprob: -13.25148868560791
    8. '   ' → logprob: -14.00148868560791
    9. ' ' → logprob: -14.25148868560791
    10. '```' → logprob: -14.50148868560791

Token 211: '(m' (ID: 2145)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.5819800496101379
    2. '(m' → logprob: -0.8319800496101379
    3. '(' → logprob: -5.331980228424072
    4. '(operator' → logprob: -6.956980228424072
    5. 'lambda' → logprob: -10.081979751586914
    6. ')' → logprob: -10.331979751586914
    7. '(mu' → logprob: -10.331979751586914
    8. '	m' → logprob: -10.456979751586914
    9. ' ' → logprob: -10.831979751586914
    10. 'mul' → logprob: -10.956979751586914

Token 212: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -1.6240566083070007e-06
    2. 'u' → logprob: -13.625001907348633
    3. 'mul' → logprob: -16.125001907348633
    4. 'ул' → logprob: -17.000001907348633
    5. '<ul' → logprob: -17.000001907348633
    6. '   ' → logprob: -17.250001907348633
    7. ' ul' → logprob: -17.625001907348633
    8. 'ult' → logprob: -17.625001907348633
    9. 'l' → logprob: -17.750001907348633
    10. 'lambda' → logprob: -18.000001907348633

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.071711465716362
    2. ',x' → logprob: -2.696711540222168
    3. ' ,' → logprob: -6.696711540222168
    4. 'x' → logprob: -8.196711540222168
    5. '(x' → logprob: -8.446711540222168
    6. ',
' → logprob: -10.821711540222168
    7. '
' → logprob: -11.946711540222168
    8. ' ' → logprob: -12.571711540222168
    9. ' x' → logprob: -12.821711540222168
    10. '```' → logprob: -12.821711540222168

Token 214: ' [' (ID: 723)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.43454504013061523
    2. '[' → logprob: -1.5595450401306152
    3. '(x' → logprob: -2.6845450401306152
    4. 'div' → logprob: -3.3095450401306152
    5. ' [' → logprob: -4.309545040130615
    6. '(range' → logprob: -4.684545040130615
    7. 'range' → logprob: -4.809545040130615
    8. ')' → logprob: -6.059545040130615
    9. 'x' → logprob: -7.059545040130615
    10. '[str' → logprob: -7.184545040130615

Token 215: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.2762428822461516e-05
    2. ' x' → logprob: -10.000052452087402
    3. '(x' → logprob: -12.500052452087402
    4. 'i' → logprob: -13.500052452087402
    5. '
' → logprob: -14.500052452087402
    6. '	x' → logprob: -14.625052452087402
    7. 'a' → logprob: -15.250052452087402
    8. '   ' → logprob: -15.250052452087402
    9. 'int' → logprob: -16.12505340576172
    10. ' ' → logprob: -16.25005340576172

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02713737078011036
    2. ',y' → logprob: -3.902137279510498
    3. '//' → logprob: -5.527137279510498
    4. ' ,' → logprob: -6.152137279510498
    5. ' //' → logprob: -7.777137279510498
    6. ',x' → logprob: -10.652137756347656
    7. 'y' → logprob: -11.152137756347656
    8. ',
' → logprob: -12.402137756347656
    9. ',//' → logprob: -13.027137756347656
    10. ' y' → logprob: -13.652137756347656

Token 217: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01251847855746746
    2. ' y' → logprob: -4.387518405914307
    3. ' ' → logprob: -12.012518882751465
    4. '  ' → logprob: -14.262518882751465
    5. '	y' → logprob: -14.262518882751465
    6. ''y' → logprob: -14.762518882751465
    7. '   ' → logprob: -15.387518882751465
    8. ',y' → logprob: -15.762518882751465
    9. 'x' → logprob: -15.887518882751465
    10. '    ' → logprob: -16.01251792907715

Token 218: '],' (ID: 2155)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.016059240326285362
    2. '],' → logprob: -4.141059398651123
    3. ']' → logprob: -11.266058921813965
    4. ' ])' → logprob: -11.641058921813965
    5. '//' → logprob: -13.141058921813965
    6. ')' → logprob: -15.266058921813965
    7. ']))' → logprob: -15.391058921813965
    8. ' //' → logprob: -15.391058921813965
    9. ')//' → logprob: -15.391058921813965
    10. '),' → logprob: -16.01605987548828

Token 219: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.028137879446148872
    2. ')' → logprob: -4.403137683868408
    3. ' ' → logprob: -4.778137683868408
    4. 'x' → logprob: -5.028137683868408
    5. 'y' → logprob: -8.778138160705566
    6. ' x' → logprob: -9.403138160705566
    7. '//' → logprob: -9.528138160705566
    8. ')//' → logprob: -9.528138160705566
    9. ')/' → logprob: -10.278138160705566
    10. '0' → logprob: -10.528138160705566

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003024887293577194
    2. ')' → logprob: -6.378025054931641
    3. ' ' → logprob: -6.753025054931641
    4. 'x' → logprob: -9.37802505493164
    5. '//' → logprob: -10.37802505493164
    6. '))' → logprob: -11.75302505493164
    7. ')/' → logprob: -12.12802505493164
    8. 'y' → logprob: -12.25302505493164
    9. ')//' → logprob: -12.25302505493164
    10. 'abs' → logprob: -12.75302505493164

Token 221: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014214513823390007
    2. ')//' → logprob: -4.264214515686035
    3. ' )' → logprob: -10.014214515686035
    4. '))' → logprob: -12.139214515686035
    5. ')
' → logprob: -14.639214515686035
    6. '//' → logprob: -15.764214515686035
    7. ']' → logprob: -16.01421356201172
    8. ')`' → logprob: -16.26421356201172
    9. ')#' → logprob: -16.88921356201172
    10. '）' → logprob: -18.01421356201172

Token 222: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.3869399130344391
    2. '//' → logprob: -1.1369398832321167
    3. ')' → logprob: -10.511940002441406
    4. ' ' → logprob: -10.511940002441406
    5. '#' → logprob: -11.761940002441406
    6. ' ' → logprob: -12.886940002441406
    7. '
' → logprob: -13.761940002441406
    8. ',' → logprob: -14.011940002441406
    9. ')//' → logprob: -14.761940002441406
    10. '```' → logprob: -15.011940002441406

Token 223: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.011314596980810165
    2. ' math' → logprob: -4.511314392089844
    3. '(math' → logprob: -8.261314392089844
    4. 'g' → logprob: -12.386314392089844
    5. '__' → logprob: -13.136314392089844
    6. ' ' → logprob: -14.261314392089844
    7. '_math' → logprob: -15.261314392089844
    8. '.math' → logprob: -15.261314392089844
    9. 'max' → logprob: -15.636314392089844
    10. 'os' → logprob: -15.761314392089844

Token 224: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.11312150210142136
    2. 'g' → logprob: -2.238121509552002
    3. '#g' → logprob: -8.988121032714844
    4. '_g' → logprob: -9.238121032714844
    5. ' gcd' → logprob: -10.613121032714844
    6. '.' → logprob: -10.738121032714844
    7. '```' → logprob: -11.613121032714844
    8. '=g' → logprob: -12.113121032714844
    9. '	g' → logprob: -12.488121032714844
    10. ',g' → logprob: -12.738121032714844

Token 225: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00253023742698133
    2. 'math' → logprob: -6.752530097961426
    3. 'cf' → logprob: -7.502530097961426
    4. 'c' → logprob: -7.752530097961426
    5. 'cm' → logprob: -8.627530097961426
    6. '```' → logprob: -9.627530097961426
    7. '(math' → logprob: -9.752530097961426
    8. 'g' → logprob: -11.002530097961426
    9. 'cmath' → logprob: -11.377530097961426
    10. 'e' → logprob: -11.752530097961426

Token 226: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -2.0219828002154827e-05
    2. '(' → logprob: -10.875020027160645
    3. 'x' → logprob: -14.000020027160645
    4. '(y' → logprob: -15.500020027160645
    5. '(
' → logprob: -16.00002098083496
    6. ' (' → logprob: -16.87502098083496
    7. '(abs' → logprob: -19.00002098083496
    8. '((' → logprob: -19.37502098083496
    9. '{x' → logprob: -20.12502098083496
    10. '```' → logprob: -20.25002098083496

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3207237422466278
    2. ',y' → logprob: -1.3207237720489502
    3. 'y' → logprob: -4.945723533630371
    4. '(y' → logprob: -8.570723533630371
    5. ' ,' → logprob: -9.320723533630371
    6. '(x' → logprob: -11.070723533630371
    7. ' y' → logprob: -11.320723533630371
    8. 'x' → logprob: -12.945723533630371
    9. '(' → logprob: -12.945723533630371
    10. '2' → logprob: -13.195723533630371

Token 228: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04312901571393013
    2. ' y' → logprob: -3.1681289672851562
    3. 'x' → logprob: -9.043128967285156
    4. ' ' → logprob: -12.168128967285156
    5. ' x' → logprob: -12.418128967285156
    6. '2' → logprob: -14.668128967285156
    7. '	y' → logprob: -14.918128967285156
    8. '(y' → logprob: -15.043128967285156
    9. '[y' → logprob: -15.168128967285156
    10. '   ' → logprob: -15.543128967285156

Token 229: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20006287097930908
    2. ',' → logprob: -2.2000627517700195
    3. 'y' → logprob: -3.7000627517700195
    4. ',y' → logprob: -4.0750627517700195
    5. ' y' → logprob: -4.5750627517700195
    6. ' )' → logprob: -4.9500627517700195
    7. '(x' → logprob: -5.2000627517700195
    8. '(y' → logprob: -5.9500627517700195
    9. '+y' → logprob: -7.3250627517700195
    10. ' ' → logprob: -7.8250627517700195

Token 230: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04824255406856537
    2. 'n' → logprob: -3.5482425689697266
    3. '#' → logprob: -4.923242568969727
    4. 'for' → logprob: -5.798242568969727
    5. 'a' → logprob: -6.048242568969727
    6. 'd' → logprob: -6.548242568969727
    7. 'class' → logprob: -6.923242568969727
    8. 'N' → logprob: -7.048242568969727
    9. 'dp' → logprob: -7.173242568969727
    10. 'print' → logprob: -7.798242568969727

Token 231: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25204575061798096
    2. '=' → logprob: -1.502045750617981
    3. ' ' → logprob: -9.127045631408691
    4. ',' → logprob: -12.377045631408691
    5. ' =
' → logprob: -13.127045631408691
    6. ':' → logprob: -14.752045631408691
    7. ' ,' → logprob: -15.002045631408691
    8. ' =)' → logprob: -15.752045631408691
    9. '=

' → logprob: -15.877045631408691
    10. '=
' → logprob: -16.127046585083008

Token 232: ' pow' (ID: 9779)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0013842822518199682
    2. ' ' → logprob: -7.126384258270264
    3. '100' → logprob: -7.626384258270264
    4. '998' → logprob: -9.376384735107422
    5. '1' → logprob: -12.001384735107422
    6. 'int' → logprob: -13.876384735107422
    7. '(' → logprob: -15.876384735107422
    8. '123' → logprob: -16.876384735107422
    9. 'pow' → logprob: -17.126384735107422
    10. '109' → logprob: -17.626384735107422

Token 233: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.8889261304575484e-06
    2. '10' → logprob: -12.500003814697266
    3. '(
' → logprob: -16.000003814697266
    4. '()' → logprob: -18.000003814697266
    5. '(int' → logprob: -18.750003814697266
    6. '```' → logprob: -19.375003814697266
    7. '2' → logprob: -19.625003814697266
    8. '(pow' → logprob: -20.000003814697266
    9. '100' → logprob: -20.750003814697266
    10. 'pow' → logprob: -20.750003814697266

Token 234: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.4736459888808895e-05
    2. '2' → logprob: -11.375014305114746
    3. '100' → logprob: -13.625014305114746
    4. '1' → logprob: -14.375014305114746
    5. 'int' → logprob: -15.000014305114746
    6. '(' → logprob: -15.125014305114746
    7. '998' → logprob: -15.125014305114746
    8. '7' → logprob: -15.375014305114746
    9. '```' → logprob: -16.375015258789062
    10. ')' → logprob: -16.375015258789062

Token 235: ',' (ID: 11)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.127333340875339e-06
    2. '+' → logprob: -12.750003814697266
    3. ' ' → logprob: -14.250003814697266
    4. '```' → logprob: -15.375003814697266
    5. '09' → logprob: -15.500003814697266
    6. ',' → logprob: -16.500003814697266
    7. '   ' → logprob: -18.250003814697266
    8. '**' → logprob: -18.500003814697266
    9. '=' → logprob: -19.125003814697266
    10. ')' → logprob: -19.750003814697266

Token 236: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.625
    3. ' ' → logprob: -16.875
    4. '09' → logprob: -16.875
    5. '+' → logprob: -17.25
    6. '   ' → logprob: -19.75
    7. '
' → logprob: -19.875
    8. '``' → logprob: -20.75
    9. '**' → logprob: -21.5
    10. '９' → logprob: -21.5

Token 237: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.023293538717553e-05
    2. '7' → logprob: -11.125030517578125
    3. ' +' → logprob: -11.250030517578125
    4. '9' → logprob: -13.750030517578125
    5. ')+' → logprob: -14.625030517578125
    6. 'plus' → logprob: -15.000030517578125
    7. '```' → logprob: -15.250030517578125
    8. ')' → logprob: -15.875030517578125
    9. '＋' → logprob: -16.375030517578125
    10. ' plus' → logprob: -16.500030517578125

Token 238: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009247996495105326
    2. '7' → logprob: -7.000924587249756
    3. ' +' → logprob: -11.375925064086914
    4. '```' → logprob: -13.875925064086914
    5. 'plus' → logprob: -14.500925064086914
    6. '9' → logprob: -15.125925064086914
    7. '＋' → logprob: -16.125925064086914
    8. ' plus' → logprob: -16.625925064086914
    9. '+
' → logprob: -17.250925064086914
    10. ' ' → logprob: -18.125925064086914

Token 239: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -19.625
    3. '```' → logprob: -20.0
    4. ' ' → logprob: -20.625
    5. '9' → logprob: -20.75
    6. '07' → logprob: -21.375
    7. '   ' → logprob: -21.5
    8. '７' → logprob: -21.875
    9. '

' → logprob: -22.125
    10. ' ' → logprob: -23.5

Token 240: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '```' → logprob: -20.0
    3. '+' → logprob: -20.625
    4. '9' → logprob: -21.125
    5. '７' → logprob: -21.25
    6. ' ' → logprob: -21.375
    7. '07' → logprob: -21.625
    8. '

' → logprob: -21.75
    9. '   ' → logprob: -22.375
    10. '
' → logprob: -23.125

Token 241: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 242: 'MAX' (ID: 21911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3784178495407104
    2. ' ' → logprob: -1.6284178495407104
    3. '
' → logprob: -1.6284178495407104
    4. ')' → logprob: -2.37841796875
    5. '_' → logprob: -2.37841796875
    6. ' 
' → logprob: -2.50341796875
    7. ',' → logprob: -3.62841796875
    8. '#' → logprob: -4.12841796875
    9. '' → logprob: -4.87841796875
    10. '\' → logprob: -5.00341796875

Token 243: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7218700647354126
    2. ' =' → logprob: -1.5968700647354126
    3. '_SIZE' → logprob: -2.221869945526123
    4. '=' → logprob: -2.346869945526123
    5. '_N' → logprob: -2.471869945526123
    6. 'N' → logprob: -4.846869945526123
    7. '_LEN' → logprob: -5.346869945526123
    8. '_=' → logprob: -5.471869945526123
    9. '_VAL' → logprob: -6.346869945526123
    10. '_n' → logprob: -6.846869945526123

Token 244: ' sum' (ID: 4215)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0007881867350079119
    2. '100' → logprob: -7.87578821182251
    3. '2' → logprob: -8.625787734985352
    4. 'pow' → logprob: -9.375787734985352
    5. 'int' → logprob: -9.750787734985352
    6. '1' → logprob: -10.125787734985352
    7. '200' → logprob: -11.000787734985352
    8. ' ' → logprob: -11.250787734985352
    9. 'float' → logprob: -13.000787734985352
    10. '3' → logprob: -13.125787734985352

Token 245: '(it' (ID: 29445)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.5018376111984253
    2. '(' → logprob: -1.2518376111984253
    3. '(range' → logprob: -2.876837730407715
    4. '[' → logprob: -3.876837730407715
    5. '(
' → logprob: -4.876837730407715
    6. '([
' → logprob: -5.626837730407715
    7. '_' → logprob: -5.876837730407715
    8. '((' → logprob: -6.001837730407715
    9. '(MAX' → logprob: -6.251837730407715
    10. '+' → logprob: -6.376837730407715

Token 246: 'ertools' (ID: 88385)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.5304317474365234
    2. 'ertools' → logprob: -1.7804317474365234
    3. '([' → logprob: -1.7804317474365234
    4. '(range' → logprob: -3.7804317474365234
    5. '(' → logprob: -4.030431747436523
    6. 'erms' → logprob: -5.155431747436523
    7. 'erval' → logprob: -5.155431747436523
    8. 'okens' → logprob: -6.030431747436523
    9. ')' → logprob: -6.030431747436523
    10. 'erm' → logprob: -6.405431747436523

Token 247: '.is' (ID: 3109)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.09208836406469345
    2. '.count' → logprob: -3.342088460922241
    3. '.com' → logprob: -4.342088222503662
    4. '([' → logprob: -4.717088222503662
    5. '(count' → logprob: -4.717088222503662
    6. '(com' → logprob: -4.967088222503662
    7. '.chain' → logprob: -5.092088222503662
    8. '(chain' → logprob: -5.967088222503662
    9. '(it' → logprob: -6.592088222503662
    10. '(' → logprob: -6.842088222503662

Token 248: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.000713266315869987
    2. 'count' → logprob: -9.000713348388672
    3. 'a' → logprob: -9.625713348388672
    4. 'lices' → logprob: -9.750713348388672
    5. 'um' → logprob: -9.875713348388672
    6. 'qrt' → logprob: -9.875713348388672
    7. '{' → logprob: -10.125713348388672
    8. 'ertools' → logprob: -10.375713348388672
    9. 'te' → logprob: -10.500713348388672
    10. 'l' → logprob: -10.625713348388672

Token 249: '(it' (ID: 29445)
  Prédit: '(it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(it' → logprob: -0.3952217996120453
    2. '(range' → logprob: -1.1452218294143677
    3. '(map' → logprob: -5.645221710205078
    4. '(sys' → logprob: -6.270221710205078
    5. '(math' → logprob: -6.895221710205078
    6. '(b' → logprob: -7.645221710205078
    7. 'range' → logprob: -7.645221710205078
    8. 'it' → logprob: -8.395221710205078
    9. '((' → logprob: -8.895221710205078
    10. '(' → logprob: -9.020221710205078

Token 250: 'ertools' (ID: 88385)
  Prédit: 'ertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ertools' → logprob: -0.1613689512014389
    2. 'er' → logprob: -1.9113689661026
    3. '(count' → logprob: -7.4113688468933105
    4. '(er' → logprob: -8.536369323730469
    5. '(' → logprob: -9.661369323730469
    6. 'erval' → logprob: -9.661369323730469
    7. 'ools' → logprob: -10.036369323730469
    8. '(chain' → logprob: -10.286369323730469
    9. 'count' → logprob: -10.411369323730469
    10. 'ers' → logprob: -10.661369323730469

Token 251: '.repeat' (ID: 109361)
  Prédit: '.count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.00020890454470645636
    2. '.repeat' → logprob: -9.375208854675293
    3. '.c' → logprob: -10.375208854675293
    4. '.chain' → logprob: -10.750208854675293
    5. 'count' → logprob: -10.875208854675293
    6. '.acc' → logprob: -11.500208854675293
    7. '(count' → logprob: -11.750208854675293
    8. ',count' → logprob: -12.125208854675293
    9. '	count' → logprob: -12.250208854675293
    10. '   ' → logprob: -12.375208854675293

Token 252: '(float' (ID: 17830)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.034141793847084045
    2. '(math' → logprob: -3.784141778945923
    3. '(sys' → logprob: -5.034142017364502
    4. '(int' → logprob: -6.409142017364502
    5. '(MAX' → logprob: -7.159142017364502
    6. '((' → logprob: -7.909142017364502
    7. ',' → logprob: -7.909142017364502
    8. '(M' → logprob: -8.159141540527344
    9. '(pow' → logprob: -8.159141540527344
    10. '(max' → logprob: -8.284141540527344

Token 253: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00957026332616806
    2. '("' → logprob: -4.759570121765137
    3. '(math' → logprob: -7.884570121765137
    4. ''' → logprob: -8.384570121765137
    5. ''in' → logprob: -8.759570121765137
    6. '(' → logprob: -9.384570121765137
    7. '"' → logprob: -9.634570121765137
    8. '(in' → logprob: -11.884570121765137
    9. ''m' → logprob: -12.009570121765137
    10. '(int' → logprob: -12.134570121765137

Token 254: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.035189177840948105
    2. ''' → logprob: -3.910189151763916
    3. 'inf' → logprob: -4.535189151763916
    4. '"' → logprob: -7.160189151763916
    5. ''i' → logprob: -7.285189151763916
    6. '1' → logprob: -7.910189151763916
    7. ''a' → logprob: -8.410189628601074
    8. '100' → logprob: -8.785189628601074
    9. ''e' → logprob: -8.910189628601074
    10. ''ex' → logprob: -9.035189628601074

Token 255: '')),' (ID: 114631)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0046119303442537785
    2. '()),' → logprob: -5.879611968994141
    3. ')),' → logprob: -6.629611968994141
    4. ')' → logprob: -8.87961196899414
    5. ' ),' → logprob: -9.00461196899414
    6. '()' → logprob: -9.62961196899414
    7. ')))' → logprob: -10.37961196899414
    8. ',' → logprob: -10.50461196899414
    9. '))),' → logprob: -10.62961196899414
    10. ''),' → logprob: -11.25461196899414

Token 256: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.9240635633468628
    2. '2' → logprob: -1.6740635633468628
    3. '100' → logprob: -2.0490636825561523
    4. '20' → logprob: -2.6740636825561523
    5. '3' → logprob: -3.0490636825561523
    6. '18' → logprob: -3.5490636825561523
    7. '1' → logprob: -3.7990636825561523
    8. '60' → logprob: -4.424063682556152
    9. '50' → logprob: -4.424063682556152
    10. '7' → logprob: -4.799063682556152

Token 257: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.9474893808364868
    2. '2' → logprob: -1.3224893808364868
    3. '100' → logprob: -2.3224892616271973
    4. '20' → logprob: -2.6974892616271973
    5. '3' → logprob: -3.3224892616271973
    6. '1' → logprob: -3.4474892616271973
    7. '18' → logprob: -4.322489261627197
    8. '7' → logprob: -4.697489261627197
    9. '50' → logprob: -4.697489261627197
    10. '15' → logprob: -4.822489261627197

Token 258: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0012009433703497052
    2. '),' → logprob: -7.751201152801514
    3. '))+' → logprob: -8.001200675964355
    4. '))-' → logprob: -8.626200675964355
    5. '))
' → logprob: -9.626200675964355
    6. ')' → logprob: -10.126200675964355
    7. ')))' → logprob: -10.126200675964355
    8. ' ))' → logprob: -10.251200675964355
    9. ',' → logprob: -10.376200675964355
    10. '()))' → logprob: -10.876200675964355

Token 259: 'def' (ID: 1314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6172768473625183
    2. ')' → logprob: -1.367276906967163
    3. ' ' → logprob: -2.617276906967163
    4. '
' → logprob: -3.367276906967163
    5. '+' → logprob: -3.617276906967163
    6. '_' → logprob: -3.992276906967163
    7. ' =' → logprob: -4.367276668548584
    8. ' 
' → logprob: -4.492276668548584
    9. '<|end|>' → logprob: -4.992276668548584
    10. ',' → logprob: -5.367276668548584

Token 260: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.013999664224684238
    2. ' solve' → logprob: -4.7639994621276855
    3. ' ' → logprob: -5.8889994621276855
    4. ' dfs' → logprob: -7.3889994621276855
    5. ' factorial' → logprob: -7.6389994621276855
    6. ' solution' → logprob: -8.013999938964844
    7. 'main' → logprob: -8.513999938964844
    8. ' input' → logprob: -8.888999938964844
    9. ' _' → logprob: -9.138999938964844
    10. ' read' → logprob: -9.388999938964844

Token 261: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.496052371105179e-05
    2. ' ():' → logprob: -9.37509536743164
    3. '(' → logprob: -12.25009536743164
    4. '()' → logprob: -12.75009536743164
    5. '():
' → logprob: -13.12509536743164
    6. '(:' → logprob: -15.00009536743164
    7. '(":' → logprob: -16.62509536743164
    8. ':' → logprob: -17.75009536743164
    9. ' (' → logprob: -18.00009536743164
    10. ' ()' → logprob: -18.87509536743164

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12807203829288483
    2. '    ' → logprob: -2.3780720233917236
    3. '(' → logprob: -4.378072261810303
    4. ' ' → logprob: -5.753072261810303
    5. '	' → logprob: -5.878072261810303
    6. '    
' → logprob: -6.253072261810303
    7. ' 
' → logprob: -7.003072261810303
    8. ':' → logprob: -7.378072261810303
    9. ')' → logprob: -7.378072261810303
    10. '\' → logprob: -7.503072261810303

Token 263: ' os' (ID: 1994)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5335915684700012
    2. '    ' → logprob: -1.4085915088653564
    3. '   ' → logprob: -2.4085915088653564
    4. ' pass' → logprob: -3.5335915088653564
    5. ' n' → logprob: -3.7835915088653564
    6. 'n' → logprob: -4.5335917472839355
    7. 'pass' → logprob: -5.4085917472839355
    8. 'input' → logprob: -6.5335917472839355
    9. '(' → logprob: -6.6585917472839355
    10. ' readline' → logprob: -6.9085917472839355

Token 264: '.getenv' (ID: 105382)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.3539221286773682
    2. '.makedirs' → logprob: -1.6039221286773682
    3. '.getcwd' → logprob: -2.103922128677368
    4. '.mkdir' → logprob: -2.353922128677368
    5. '.listdir' → logprob: -2.353922128677368
    6. '.chdir' → logprob: -2.478922128677368
    7. ' .' → logprob: -2.728922128677368
    8. '.path' → logprob: -3.603922128677368
    9. '.system' → logprob: -3.978922128677368
    10. '.environ' → logprob: -4.103921890258789

Token 265: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.08026867359876633
    2. '()' → logprob: -2.955268621444702
    3. '(' → logprob: -4.330268859863281
    4. '("' → logprob: -4.455268859863281
    5. '("")' → logprob: -8.955268859863281
    6. ')' → logprob: -9.455268859863281
    7. '('_' → logprob: -11.705268859863281
    8. '<|end|>' → logprob: -11.955268859863281
    9. '())' → logprob: -12.205268859863281
    10. '  ' → logprob: -12.205268859863281

Token 266: 'LOCAL' (ID: 90515)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0005247592926025
    2. ''' → logprob: -1.0005247592926025
    3. 'USER' → logprob: -2.2505247592926025
    4. 'HOME' → logprob: -2.2505247592926025
    5. 'PATH' → logprob: -3.7505247592926025
    6. '"H' → logprob: -5.000524520874023
    7. 'PY' → logprob: -5.625524520874023
    8. '")' → logprob: -5.750524520874023
    9. 'PWD' → logprob: -5.875524520874023
    10. ''H' → logprob: -6.250524520874023

Token 267: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.003516683354973793
    2. ')")' → logprob: -6.503516674041748
    3. ')' → logprob: -7.503516674041748
    4. '")
' → logprob: -8.003517150878906
    5. '",' → logprob: -8.253517150878906
    6. '()' → logprob: -8.253517150878906
    7. '"))' → logprob: -8.628517150878906
    8. '")==' → logprob: -9.003517150878906
    9. '_ENV' → logprob: -9.503517150878906
    10. ' ")' → logprob: -10.003517150878906

Token 268: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08021487295627594
    2. '   ' → logprob: -3.5802149772644043
    3. ' ==' → logprob: -4.330214977264404
    4. ' is' → logprob: -4.455214977264404
    5. ' ' → logprob: -5.080214977264404
    6. 'and' → logprob: -5.205214977264404
    7. '    ' → logprob: -6.205214977264404
    8. ' if' → logprob: -6.205214977264404
    9. 'if' → logprob: -6.330214977264404
    10. ',' → logprob: -6.580214977264404

Token 269: ' setattr' (ID: 166554)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.061088643968105316
    2. ' sys' → logprob: -3.4360885620117188
    3. '   ' → logprob: -4.561088562011719
    4. 'print' → logprob: -5.311088562011719
    5. ' debug' → logprob: -5.686088562011719
    6. ' open' → logprob: -6.061088562011719
    7. ' input' → logprob: -6.936088562011719
    8. ' ' → logprob: -7.061088562011719
    9. ' True' → logprob: -7.186088562011719
    10. '    ' → logprob: -7.436088562011719

Token 270: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.06332878023386002
    2. '(main' → logprob: -2.813328742980957
    3. '(' → logprob: -6.938328742980957
    4. '(os' → logprob: -8.438328742980957
    5. '(__' → logprob: -9.813328742980957
    6. 'sys' → logprob: -10.313328742980957
    7. '(set' → logprob: -11.188328742980957
    8. '(s' → logprob: -11.813328742980957
    9. '(obj' → logprob: -11.813328742980957
    10. '(global' → logprob: -11.938328742980957

Token 271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06157175078988075
    2. ',module' → logprob: -2.9365718364715576
    3. ',std' → logprob: -5.4365715980529785
    4. 'modules' → logprob: -7.4365715980529785
    5. ',"' → logprob: -7.5615715980529785
    6. '.modules' → logprob: -8.061572074890137
    7. ',set' → logprob: -8.561572074890137
    8. 'module' → logprob: -9.061572074890137
    9. 'stdout' → logprob: -9.311572074890137
    10. ',__' → logprob: -9.436572074890137

Token 272: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.26989835500717163
    2. '"' → logprob: -1.6448984146118164
    3. ''ex' → logprob: -3.2698984146118164
    4. ''s' → logprob: -6.394898414611816
    5. ''t' → logprob: -7.269898414611816
    6. ''_' → logprob: -7.769898414611816
    7. ''in' → logprob: -7.894898414611816
    8. '"log' → logprob: -8.019898414611816
    9. '"_' → logprob: -8.019898414611816
    10. '"display' → logprob: -8.144898414611816

Token 273: 'stdin' (ID: 132953)
  Prédit: 'stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.6088573336601257
    2. 'stdout' → logprob: -2.1088573932647705
    3. 'stderr' → logprob: -2.3588573932647705
    4. 'trace' → logprob: -2.6088573932647705
    5. 'argv' → logprob: -2.9838573932647705
    6. '_' → logprob: -3.2338573932647705
    7. 'set' → logprob: -3.4838573932647705
    8. 'ps' → logprob: -4.233857154846191
    9. 'modules' → logprob: -4.733857154846191
    10. '_stdout' → logprob: -5.233857154846191

Token 274: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08003421127796173
    2. '',' → logprob: -2.7050342559814453
    3. '=sys' → logprob: -4.830034255981445
    4. 'sys' → logprob: -6.955034255981445
    5. ',new' → logprob: -8.330034255981445
    6. ',System' → logprob: -8.455034255981445
    7. ','' → logprob: -9.205034255981445
    8. ',input' → logprob: -9.330034255981445
    9. ',__' → logprob: -9.455034255981445
    10. ',line' → logprob: -10.205034255981445

Token 275: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.07942736893892288
    2. ' open' → logprob: -2.579427480697632
    3. 'sys' → logprob: -7.579427242279053
    4. ' sys' → logprob: -11.204427719116211
    5. 'os' → logprob: -12.079427719116211
    6. 'io' → logprob: -12.079427719116211
    7. '   ' → logprob: -14.329427719116211
    8. '	open' → logprob: -14.579427719116211
    9. '```' → logprob: -15.954427719116211
    10. '__' → logprob: -16.45442771911621

Token 276: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.10180994123220444
    2. '("' → logprob: -2.3518099784851074
    3. '(' → logprob: -6.976809978485107
    4. '('./' → logprob: -7.976809978485107
    5. '(os' → logprob: -9.97680950164795
    6. ')' → logprob: -9.97680950164795
    7. '("./' → logprob: -10.10180950164795
    8. '('../' → logprob: -10.22680950164795
    9. '('/' → logprob: -10.35180950164795
    10. '(sys' → logprob: -10.47680950164795

Token 277: 'input' (ID: 2586)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2841036319732666
    2. '"' → logprob: -2.1591036319732666
    3. '0' → logprob: -2.9091036319732666
    4. ''in' → logprob: -3.7841036319732666
    5. 'input' → logprob: -3.7841036319732666
    6. ''s' → logprob: -4.2841033935546875
    7. ''t' → logprob: -5.1591033935546875
    8. '"in' → logprob: -6.2841033935546875
    9. 'local' → logprob: -6.6591033935546875
    10. '__' → logprob: -7.0341033935546875

Token 278: '.txt' (ID: 7186)
  Prédit: '.txt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.txt' → logprob: -0.0007300666766241193
    2. '".' → logprob: -7.875730037689209
    3. '.' → logprob: -8.500730514526367
    4. ''.' → logprob: -9.500730514526367
    5. '(".' → logprob: -10.750730514526367
    6. '('.' → logprob: -11.250730514526367
    7. 'txt' → logprob: -12.250730514526367
    8. '_file' → logprob: -12.625730514526367
    9. '("' → logprob: -12.750730514526367
    10. '.py' → logprob: -12.750730514526367

Token 279: '"))
' (ID: 10990)
  Prédit: '"))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"))' → logprob: -0.1750413179397583
    2. '",' → logprob: -2.1750411987304688
    3. '))' → logprob: -3.4250411987304688
    4. '","' → logprob: -5.050041198730469
    5. ''))' → logprob: -5.550041198730469
    6. ',' → logprob: -6.300041198730469
    7. '"));' → logprob: -7.300041198730469
    8. '()))' → logprob: -7.800041198730469
    9. '")' → logprob: -7.925041198730469
    10. '"' → logprob: -8.300041198730469

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07827895134687424
    2. '    
' → logprob: -3.0782790184020996
    3. '
' → logprob: -4.0782790184021
    4. ')' → logprob: -5.0782790184021
    5. ':' → logprob: -5.7032790184021
    6. '    ' → logprob: -8.078278541564941
    7. ':
' → logprob: -8.078278541564941
    8. ' 
' → logprob: -8.328278541564941
    9. '  
' → logprob: -8.328278541564941
    10. '	
' → logprob: -8.578278541564941

Token 281: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15768182277679443
    2. 'n' → logprob: -2.282681941986084
    3. ' n' → logprob: -3.907681941986084
    4. 'data' → logprob: -4.907681941986084
    5. 'for' → logprob: -4.907681941986084
    6. 'a' → logprob: -5.782681941986084
    7. 'print' → logprob: -6.657681941986084
    8. ' for' → logprob: -6.782681941986084
    9. ' data' → logprob: -7.532681941986084
    10. 'x' → logprob: -7.532681941986084

Token 282: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1709841936826706
    2. ',' → logprob: -2.1709842681884766
    3. '=' → logprob: -3.1709842681884766
    4. ' ,' → logprob: -7.420984268188477
    5. ' ' → logprob: -7.920984268188477
    6. '=int' → logprob: -9.045984268188477
    7. ')' → logprob: -10.545984268188477
    8. '   ' → logprob: -12.545984268188477
    9. ' =
' → logprob: -12.545984268188477
    10. '=input' → logprob: -12.545984268188477

Token 283: ' ii' (ID: 28354)
  Prédit: 'ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ii' → logprob: -0.6167392134666443
    2. ' ii' → logprob: -1.366739273071289
    3. ' il' → logprob: -1.866739273071289
    4. 'il' → logprob: -2.991739273071289
    5. 'int' → logprob: -8.491739273071289
    6. ' int' → logprob: -9.616739273071289
    7. ' ' → logprob: -9.741739273071289
    8. '	il' → logprob: -10.741739273071289
    9. '   ' → logprob: -10.804239273071289
    10. '  ' → logprob: -11.304239273071289

Token 284: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00021033499797340482
    2. '()
' → logprob: -8.500210762023926
    3. ' ()' → logprob: -12.875210762023926
    4. '())' → logprob: -13.125210762023926
    5. ')' → logprob: -14.375210762023926
    6. '()\' → logprob: -14.500210762023926
    7. '()<' → logprob: -15.125210762023926
    8. '();' → logprob: -15.625210762023926
    9. '(),' → logprob: -15.875210762023926
    10. '   ' → logprob: -16.00020980834961

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8409615159034729
    2. ' ' → logprob: -1.2159614562988281
    3. '<|end|>' → logprob: -2.090961456298828
    4. ' 
' → logprob: -3.465961456298828
    5. ')' → logprob: -3.590961456298828
    6. '    
' → logprob: -3.715961456298828
    7. ',' → logprob: -3.840961456298828
    8. '    ' → logprob: -4.090961456298828
    9. '
' → logprob: -4.965961456298828
    10. '  ' → logprob: -5.215961456298828

Token 286: ' ret' (ID: 2881)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.20829147100448608
    2. 'a' → logprob: -2.083291530609131
    3. 'arr' → logprob: -3.083291530609131
    4. 'dp' → logprob: -4.958291530609131
    5. 'S' → logprob: -5.583291530609131
    6. 'lst' → logprob: -6.833291530609131
    7. 's' → logprob: -7.333291530609131
    8. 'data' → logprob: -7.458291530609131
    9. ' A' → logprob: -7.708291530609131
    10. 'ans' → logprob: -7.833291530609131

Token 287: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3145451843738556
    2. '=' → logprob: -1.3145451545715332
    3. ' ' → logprob: -6.689545154571533
    4. ',' → logprob: -10.814545631408691
    5. '  ' → logprob: -13.314545631408691
    6. ')' → logprob: -13.314545631408691
    7. '=[]' → logprob: -13.314545631408691
    8. '   ' → logprob: -13.439545631408691
    9. ' ' → logprob: -13.564545631408691
    10. '```' → logprob: -13.689545631408691

Token 288: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6737789511680603
    2. ' ' → logprob: -0.7987789511680603
    3. ' []' → logprob: -4.048779010772705
    4. '[]' → logprob: -4.298779010772705
    5. ' [' → logprob: -5.298779010772705
    6. '[' → logprob: -5.548779010772705
    7. '1' → logprob: -8.923778533935547
    8. '[]
' → logprob: -10.173778533935547
    9. ' defaultdict' → logprob: -10.423778533935547
    10. ' []
' → logprob: -10.673778533935547

Token 289: '(
' (ID: 1607)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.7606725692749023
    2. '(il' → logprob: -1.1356725692749023
    3. '(' → logprob: -1.8856725692749023
    4. '(i' → logprob: -3.6356725692749023
    5. '([' → logprob: -3.7606725692749023
    6. '((' → logprob: -5.385672569274902
    7. '(x' → logprob: -7.010672569274902
    8. '(ii' → logprob: -7.635672569274902
    9. '(
' → logprob: -7.760672569274902
    10. '([(' → logprob: -7.885672569274902

Token 290: '       ' (ID: 309)
  Prédit: ' il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.8388577699661255
    2. 'il' → logprob: -0.9638577699661255
    3. '(il' → logprob: -2.838857650756836
    4. '[i' → logprob: -3.463857650756836
    5. 'ii' → logprob: -3.963857650756836
    6. '(i' → logprob: -4.338857650756836
    7. '[' → logprob: -4.713857650756836
    8. 'range' → logprob: -4.713857650756836
    9. '(range' → logprob: -4.713857650756836
    10. '   ' → logprob: -4.963857650756836

Token 291: ' filter' (ID: 6690)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6975138783454895
    2. '(i' → logprob: -2.3225138187408447
    3. 'il' → logprob: -2.4475138187408447
    4. 'range' → logprob: -2.5725138187408447
    5. '1' → logprob: -2.8225138187408447
    6. '[i' → logprob: -3.1975138187408447
    7. 'int' → logprob: -3.8225138187408447
    8. 'x' → logprob: -3.9475138187408447
    9. '(' → logprob: -4.447514057159424
    10. 'map' → logprob: -4.822514057159424

Token 292: '(
' (ID: 1607)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.3215753436088562
    2. '(' → logprob: -1.321575403213501
    3. '(
' → logprob: -4.946575164794922
    4. '(None' → logprob: -6.946575164794922
    5. '   ' → logprob: -9.696575164794922
    6. '(il' → logprob: -10.321575164794922
    7. '(is' → logprob: -10.571575164794922
    8. 'lambda' → logprob: -10.696575164794922
    9. 'None' → logprob: -11.196575164794922
    10. '(l' → logprob: -11.446575164794922

Token 293: '           ' (ID: 352)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.06789015233516693
    2. '       ' → logprob: -3.817890167236328
    3. '   ' → logprob: -4.067890167236328
    4. '           ' → logprob: -4.317890167236328
    5. '(lambda' → logprob: -5.192890167236328
    6. ' lambda' → logprob: -5.317890167236328
    7. 'None' → logprob: -5.942890167236328
    8. '               ' → logprob: -10.317890167236328
    9. ' None' → logprob: -10.442890167236328
    10. '=lambda' → logprob: -10.942890167236328

Token 294: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' (adapté à ' lambda') → logprob: -0.009591398760676384
    2. '   ' → logprob: -5.259591579437256
    3. 'None' → logprob: -5.634591579437256
    4. '(lambda' → logprob: -8.009591102600098
    5. '           ' → logprob: -8.884591102600098
    6. ' lambda' → logprob: -9.009591102600098
    7. '       ' → logprob: -9.384591102600098
    8. 'is' → logprob: -10.384591102600098
    9. 'bool' → logprob: -11.009591102600098
    10. '0' → logprob: -11.634591102600098

Token 295: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6976960301399231
    2. ' x' → logprob: -0.6976960301399231
    3. ' lambda' → logprob: -6.822696208953857
    4. 'lambda' → logprob: -6.947696208953857
    5. '   ' → logprob: -7.322696208953857
    6. 'a' → logprob: -7.572696208953857
    7. ' a' → logprob: -8.3226957321167
    8. ' n' → logprob: -8.5726957321167
    9. 'k' → logprob: -8.6976957321167
    10. 'n' → logprob: -8.8226957321167

Token 296: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009953581728041172
    2. ' :' → logprob: -5.259953498840332
    3. ' x' → logprob: -5.509953498840332
    4. '=' → logprob: -8.884953498840332
    5. 'x' → logprob: -9.134953498840332
    6. '=lambda' → logprob: -9.259953498840332
    7. '           ' → logprob: -9.509953498840332
    8. '   ' → logprob: -9.634953498840332
    9. ':
' → logprob: -10.009953498840332
    10. '       ' → logprob: -10.759953498840332

Token 297: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04526133090257645
    2. ' x' → logprob: -3.4202613830566406
    3. 'N' → logprob: -5.545261383056641
    4. '0' → logprob: -7.045261383056641
    5. '(x' → logprob: -7.170261383056641
    6. 'math' → logprob: -7.295261383056641
    7. 'l' → logprob: -7.420261383056641
    8. 'len' → logprob: -7.420261383056641
    9. 'int' → logprob: -7.545261383056641
    10. '1' → logprob: -7.545261383056641

Token 298: ',
' (ID: 412)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.47877657413482666
    2. '%' → logprob: -0.9787765741348267
    3. '>' → logprob: -6.853776454925537
    4. ' >' → logprob: -7.478776454925537
    5. ')' → logprob: -7.728776454925537
    6. ' >=' → logprob: -7.728776454925537
    7. ' ' → logprob: -8.353776931762695
    8. ' <' → logprob: -8.353776931762695
    9. ' !=' → logprob: -8.353776931762695
    10. '   ' → logprob: -8.353776931762695

Token 299: '           ' (ID: 352)
  Prédit: ' il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' il' → logprob: -1.2459861040115356
    2. 'range' → logprob: -1.3709861040115356
    3. 'il' → logprob: -1.4959861040115356
    4. ' range' → logprob: -2.245985984802246
    5. 'map' → logprob: -3.620985984802246
    6. '           ' → logprob: -3.620985984802246
    7. ' map' → logprob: -3.620985984802246
    8. 'is' → logprob: -3.995985984802246
    9. '(range' → logprob: -4.995985984802246
    10. '[' → logprob: -5.620985984802246

Token 300: ' map' (ID: 4014)
  Prédit: '(il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(il' → logprob: -0.9246959090232849
    2. 'il' → logprob: -1.5496959686279297
    3. 'map' (adapté à ' map') → logprob: -1.6746959686279297
    4. '(range' → logprob: -2.7996959686279297
    5. '(map' → logprob: -2.9246959686279297
    6. 'range' → logprob: -3.1746959686279297
    7. '[' → logprob: -3.9246959686279297
    8. '(i' → logprob: -5.04969596862793
    9. '[i' → logprob: -5.17469596862793
    10. '(is' → logprob: -5.29969596862793

Token 301: '(
' (ID: 1607)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.2442096471786499
    2. '(' → logprob: -1.74420964717865
    3. '(int' → logprob: -3.4942097663879395
    4. '(l' → logprob: -4.8692097663879395
    5. '(il' → logprob: -6.1192097663879395
    6. '(
' → logprob: -7.1192097663879395
    7. '(math' → logprob: -9.119209289550781
    8. '(ii' → logprob: -9.244209289550781
    9. '(is' → logprob: -9.244209289550781
    10. '(ll' → logprob: -9.619209289550781

Token 302: '               ' (ID: 506)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.8142270445823669
    2. '               ' → logprob: -1.6892271041870117
    3. 'lambda' → logprob: -1.6892271041870117
    4. '           ' → logprob: -2.6892271041870117
    5. 'int' → logprob: -3.1892271041870117
    6. 'il' → logprob: -3.4392271041870117
    7. 'l' → logprob: -3.9392271041870117
    8. '(int' → logprob: -4.814227104187012
    9. '       ' → logprob: -4.939227104187012
    10. '(il' → logprob: -5.564227104187012

Token 303: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' (adapté à ' lambda') → logprob: -0.03169596567749977
    2. 'l' → logprob: -4.53169584274292
    3. 'int' → logprob: -4.78169584274292
    4. '   ' → logprob: -5.53169584274292
    5. '(lambda' → logprob: -5.53169584274292
    6. ' lambda' → logprob: -6.90669584274292
    7. '           ' → logprob: -7.15669584274292
    8. 'is' → logprob: -7.28169584274292
    9. 'il' → logprob: -7.40669584274292
    10. 'bool' → logprob: -8.031696319580078

Token 304: ' n' (ID: 297)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.0814067125320435
    2. ' lambda' → logprob: -1.2064067125320435
    3. ' x' → logprob: -1.7064067125320435
    4. 'x' → logprob: -2.581406593322754
    5. 'int' → logprob: -3.831406593322754
    6. ' int' → logprob: -4.206406593322754
    7. '(lambda' → logprob: -4.206406593322754
    8. ' is' → logprob: -4.706406593322754
    9. '_:' → logprob: -4.706406593322754
    10. '   ' → logprob: -5.081406593322754

Token 305: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018565434962511063
    2. ' :' → logprob: -4.018565654754639
    3. ',' → logprob: -8.64356517791748
    4. ':n' → logprob: -9.76856517791748
    5. '   ' → logprob: -10.01856517791748
    6. ':int' → logprob: -10.76856517791748
    7. '=' → logprob: -11.14356517791748
    8. '    ' → logprob: -11.26856517791748
    9. ',n' → logprob: -11.26856517791748
    10. ' ,' → logprob: -11.26856517791748

Token 306: ' all' (ID: 722)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20821423828601837
    2. 'l' → logprob: -2.958214282989502
    3. '(n' → logprob: -2.958214282989502
    4. ' n' → logprob: -3.833214282989502
    5. 'int' → logprob: -4.458214282989502
    6. 'all' → logprob: -5.083214282989502
    7. 'pow' → logprob: -5.333214282989502
    8. 'str' → logprob: -5.583214282989502
    9. 'math' → logprob: -5.583214282989502
    10. 'is' → logprob: -5.833214282989502

Token 307: '([' (ID: 5194)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7613255381584167
    2. '(' → logprob: -1.0113255977630615
    3. '(
' → logprob: -2.5113255977630615
    4. '(lambda' → logprob: -4.011325359344482
    5. '(x' → logprob: -4.136325359344482
    6. '((' → logprob: -4.511325359344482
    7. '(i' → logprob: -4.636325359344482
    8. '(math' → logprob: -4.886325359344482
    9. '([' → logprob: -5.261325359344482
    10. '                   ' → logprob: -5.386325359344482

Token 308: 'len' (ID: 3303)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3110063374042511
    2. '(n' → logprob: -3.3110063076019287
    3. 'int' → logprob: -3.4360063076019287
    4. 'i' → logprob: -3.5610063076019287
    5. 'm' → logprob: -3.5610063076019287
    6. 'k' → logprob: -3.5610063076019287
    7. 'x' → logprob: -3.9360063076019287
    8. '(i' → logprob: -4.311006546020508
    9. 'N' → logprob: -4.436006546020508
    10. 'j' → logprob: -4.561006546020508

Token 309: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.14696004986763
    2. '(set' → logprob: -2.6469600200653076
    3. '(n' → logprob: -3.1469600200653076
    4. '(s' → logprob: -4.771960258483887
    5. '(' → logprob: -5.771960258483887
    6. '(bin' → logprob: -5.896960258483887
    7. '(x' → logprob: -6.021960258483887
    8. '(sl' → logprob: -6.271960258483887
    9. '(list' → logprob: -6.646960258483887
    10. 'str' → logprob: -6.896960258483887

Token 310: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005713223479688168
    2. '(int' → logprob: -6.630712985992432
    3. '(pow' → logprob: -7.130712985992432
    4. '(x' → logprob: -7.380712985992432
    5. '(i' → logprob: -7.505712985992432
    6. '(' → logprob: -7.630712985992432
    7. '(m' → logprob: -7.755712985992432
    8. '(N' → logprob: -8.63071346282959
    9. '(k' → logprob: -8.63071346282959
    10. 'n' → logprob: -8.75571346282959

Token 311: '))' (ID: 915)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.7653788924217224
    2. '**' → logprob: -1.6403789520263672
    3. '())' → logprob: -2.015378952026367
    4. '))' → logprob: -2.265378952026367
    5. '(i' → logprob: -3.390378952026367
    6. '()' → logprob: -3.765378952026367
    7. '(n' → logprob: -4.765378952026367
    8. '(' → logprob: -5.015378952026367
    9. ')' → logprob: -5.390378952026367
    10. '//' → logprob: -5.515378952026367

Token 312: ' %' (ID: 1851)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7885616421699524
    2. ' ==' → logprob: -1.2885615825653076
    3. ')' → logprob: -2.1635615825653076
    4. '>=' → logprob: -3.4135615825653076
    5. ' >=' → logprob: -3.6635615825653076
    6. ' <=' → logprob: -3.9135615825653076
    7. '<=' → logprob: -3.9135615825653076
    8. ')==' → logprob: -4.288561820983887
    9. '%' → logprob: -5.038561820983887
    10. '>' → logprob: -5.163561820983887

Token 313: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.138744592666626
    2. '2' → logprob: -1.388744592666626
    3. 'i' → logprob: -1.388744592666626
    4. 'k' → logprob: -2.888744592666626
    5. 'x' → logprob: -3.013744592666626
    6. 'int' → logprob: -3.263744592666626
    7. 'n' → logprob: -4.888744354248047
    8. 'p' → logprob: -5.138744354248047
    9. 'len' → logprob: -5.138744354248047
    10. '3' → logprob: -5.388744354248047

Token 314: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9746942520141602
    2. 'd' → logprob: -0.9746942520141602
    3. 'i' → logprob: -2.47469425201416
    4. 'k' → logprob: -2.97469425201416
    5. 'int' → logprob: -3.22469425201416
    6. 'x' → logprob: -3.59969425201416
    7. '3' → logprob: -4.22469425201416
    8. 'len' → logprob: -4.72469425201416
    9. 'l' → logprob: -5.97469425201416
    10. 'p' → logprob: -5.97469425201416

Token 315: ',' (ID: 11)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03530701994895935
    2. ' ==' → logprob: -3.535306930541992
    3. '!=' → logprob: -5.660306930541992
    4. ')' → logprob: -7.410306930541992
    5. ' !=' → logprob: -7.410306930541992
    6. ')==' → logprob: -7.660306930541992
    7. '),' → logprob: -9.535306930541992
    8. '()==' → logprob: -9.660306930541992
    9. '           ' → logprob: -10.285306930541992
    10. '   ' → logprob: -10.285306930541992

Token 316: ' len' (ID: 4631)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.17099130153656
    2. '                   ' → logprob: -1.79599130153656
    3. 'n' → logprob: -2.1709914207458496
    4. '                       ' → logprob: -2.6709914207458496
    5. '                     ' → logprob: -3.0459914207458496
    6. 'str' → logprob: -3.5459914207458496
    7. '                  ' → logprob: -3.5459914207458496
    8. '                           ' → logprob: -3.6709914207458496
    9. '                      ' → logprob: -3.7959914207458496
    10. 'sum' → logprob: -3.7959914207458496

Token 317: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00039289999403990805
    2. ' (' → logprob: -8.25039291381836
    3. '               ' → logprob: -10.75039291381836
    4. '(s' → logprob: -10.87539291381836
    5. '(' → logprob: -11.00039291381836
    6. '   ' → logprob: -11.37539291381836
    7. '```' → logprob: -11.62539291381836
    8. '(set' → logprob: -11.87539291381836
    9. '
' → logprob: -12.00039291381836
    10. '                               ' → logprob: -12.12539291381836

Token 318: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0034499219618737698
    2. '(str' → logprob: -6.6284499168396
    3. '(' → logprob: -6.7534499168396
    4. 'n' → logprob: -7.6284499168396
    5. '((' → logprob: -9.628450393676758
    6. '   ' → logprob: -9.753450393676758
    7. '(abs' → logprob: -10.253450393676758
    8. 'str' → logprob: -10.378450393676758
    9. '(x' → logprob: -10.378450393676758
    10. '(pow' → logprob: -10.628450393676758

Token 319: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.44184383749961853
    2. ')' → logprob: -1.316843867301941
    3. '())' → logprob: -2.6918437480926514
    4. '()))' → logprob: -4.6918439865112305
    5. ')%' → logprob: -5.1918439865112305
    6. '(n' → logprob: -6.4418439865112305
    7. ')))' → logprob: -7.0668439865112305
    8. '   ' → logprob: -7.0668439865112305
    9. '()' → logprob: -7.1918439865112305
    10. 'n' → logprob: -7.5668439865112305

Token 320: ' <=' (ID: 5017)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2256140261888504
    2. '%' → logprob: -1.725614070892334
    3. ')' → logprob: -4.475614070892334
    4. ' ' → logprob: -4.850614070892334
    5. '==' → logprob: -6.725614070892334
    6. ' ==' → logprob: -7.100614070892334
    7. '   ' → logprob: -8.225613594055176
    8. ' !=' → logprob: -8.475613594055176
    9. ' )' → logprob: -8.475613594055176
    10. ')%' → logprob: -8.600613594055176

Token 321: ' len' (ID: 4631)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.059967391192913055
    2. '6' → logprob: -3.684967279434204
    3. '2' → logprob: -4.809967517852783
    4. 'len' → logprob: -5.059967517852783
    5. '4' → logprob: -5.809967517852783
    6. '10' → logprob: -5.934967517852783
    7. '8' → logprob: -5.934967517852783
    8. '5' → logprob: -6.559967517852783
    9. '18' → logprob: -6.559967517852783
    10. '3' → logprob: -6.809967517852783

Token 322: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.025656461715698242
    2. '(s' → logprob: -4.775656700134277
    3. ' (' → logprob: -5.150656700134277
    4. '(' → logprob: -5.400656700134277
    5. '(n' → logprob: -5.900656700134277
    6. '('' → logprob: -6.775656700134277
    7. '(sys' → logprob: -6.900656700134277
    8. '(x' → logprob: -8.400656700134277
    9. '(f' → logprob: -8.775656700134277
    10. '               ' → logprob: -9.025656700134277

Token 323: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.005979277193546295
    2. '(' → logprob: -6.005979061126709
    3. '(n' → logprob: -6.505979061126709
    4. 'N' → logprob: -6.880979061126709
    5. '(max' → logprob: -8.255979537963867
    6. '(MAX' → logprob: -8.880979537963867
    7. '((' → logprob: -9.255979537963867
    8. '(int' → logprob: -9.380979537963867
    9. 'ret' → logprob: -10.130979537963867
    10. '(s' → logprob: -10.255979537963867

Token 324: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.27912166714668274
    2. ')),' → logprob: -1.7791216373443604
    3. ')))' → logprob: -3.4041216373443604
    4. '))),' → logprob: -3.7791216373443604
    5. ')))),' → logprob: -4.9041218757629395
    6. '))))' → logprob: -6.0291218757629395
    7. ')),
' → logprob: -6.2791218757629395
    8. '   ' → logprob: -6.7791218757629395
    9. '       ' → logprob: -7.2791218757629395
    10. ' ))' → logprob: -7.2791218757629395

Token 325: ']),
' (ID: 34147)
  Prédit: ']),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']),
' → logprob: -0.600584089756012
    2. '               ' → logprob: -1.7255840301513672
    3. ']),' → logprob: -1.9755840301513672
    4. '           ' → logprob: -2.850584030151367
    5. ',' → logprob: -3.850584030151367
    6. '])' → logprob: -3.975584030151367
    7. '                   ' → logprob: -5.225584030151367
    8. ' and' → logprob: -5.475584030151367
    9. ')]' → logprob: -5.600584030151367
    10. '])),' → logprob: -5.725584030151367

Token 326: '               ' (ID: 506)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1392805278301239
    2. ' n' → logprob: -2.2642805576324463
    3. '               ' → logprob: -4.014280319213867
    4. '                   ' → logprob: -6.139280319213867
    5. ')' → logprob: -6.639280319213867
    6. ' x' → logprob: -7.389280319213867
    7. 'x' → logprob: -7.764280319213867
    8. '                               ' → logprob: -7.764280319213867
    9. '                       ' → logprob: -7.889280319213867
    10. '           ' → logprob: -8.389280319213867

Token 327: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' (adapté à ' range') → logprob: -0.007381931878626347
    2. ' range' → logprob: -5.007381916046143
    3. '(range' → logprob: -8.3823823928833
    4. '   ' → logprob: -8.5073823928833
    5. 'filter' → logprob: -9.6323823928833
    6. 'map' → logprob: -9.7573823928833
    7. '[' → logprob: -10.5073823928833
    8. '	range' → logprob: -10.6323823928833
    9. 'iter' → logprob: -11.1323823928833
    10. 'it' → logprob: -11.6323823928833

Token 328: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0037474639248102903
    2. '(N' → logprob: -5.628747463226318
    3. '(
' → logprob: -9.253747940063477
    4. '(n' → logprob: -10.753747940063477
    5. '1' → logprob: -12.128747940063477
    6. ' (' → logprob: -12.253747940063477
    7. ')' → logprob: -12.503747940063477
    8. '((' → logprob: -13.003747940063477
    9. '(int' → logprob: -13.003747940063477
    10. '(max' → logprob: -13.378747940063477

Token 329: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18485397100448608
    2. 'N' → logprob: -1.8098540306091309
    3. '(' → logprob: -5.809854030609131
    4. '10' → logprob: -6.559854030609131
    5. '(N' → logprob: -8.559853553771973
    6. '0' → logprob: -9.184853553771973
    7. '   ' → logprob: -9.309853553771973
    8. '2' → logprob: -9.559853553771973
    9. 'int' → logprob: -10.684853553771973
    10. ' ' → logprob: -10.934853553771973

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003176760161295533
    2. ',N' → logprob: -6.003176689147949
    3. ' ,' → logprob: -7.628176689147949
    4. 'N' → logprob: -9.75317668914795
    5. '   ' → logprob: -10.25317668914795
    6. ',
' → logprob: -10.37817668914795
    7. '(N' → logprob: -10.62817668914795
    8. ',n' → logprob: -10.75317668914795
    9. '       ' → logprob: -11.37817668914795
    10. '           ' → logprob: -11.50317668914795

Token 331: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005957122426480055
    2. ' N' → logprob: -5.130957126617432
    3. '   ' → logprob: -10.755956649780273
    4. '	N' → logprob: -12.505956649780273
    5. '    ' → logprob: -13.880956649780273
    6. ' ' → logprob: -14.505956649780273
    7. '                   ' → logprob: -14.880956649780273
    8. '  ' → logprob: -14.880956649780273
    9. '           ' → logprob: -15.255956649780273
    10. '       ' → logprob: -15.755956649780273

Token 332: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06996700167655945
    2. ' +' → logprob: -2.694967031478882
    3. '()+' → logprob: -11.444967269897461
    4. '))' → logprob: -12.194967269897461
    5. '   ' → logprob: -12.319967269897461
    6. ')' → logprob: -12.569967269897461
    7. '+
' → logprob: -12.944967269897461
    8. ')+' → logprob: -13.694967269897461
    9. '+n' → logprob: -14.319967269897461
    10. ')))' → logprob: -15.069967269897461

Token 333: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012558852904476225
    2. ' ' → logprob: -9.000125885009766
    3. '   ' → logprob: -13.875125885009766
    4. '2' → logprob: -15.750125885009766
    5. '
' → logprob: -15.750125885009766
    6. '```' → logprob: -15.812625885009766
    7. '))' → logprob: -16.125125885009766
    8. '  ' → logprob: -16.187625885009766
    9. ')' → logprob: -16.437625885009766
    10. '    ' → logprob: -16.500125885009766

Token 334: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.968312951968983e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.437509536743164
    4. '2' → logprob: -16.125009536743164
    5. '
' → logprob: -16.312509536743164
    6. '))' → logprob: -16.562509536743164
    7. '１' → logprob: -16.687509536743164
    8. '```' → logprob: -16.687509536743164
    9. '  ' → logprob: -17.000009536743164
    10. '+' → logprob: -17.062509536743164

Token 335: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9389190673828125
    2. ')' → logprob: -1.5639190673828125
    3. ')))' → logprob: -1.8139190673828125
    4. '))))' → logprob: -2.1889190673828125
    5. '               ' → logprob: -2.3139190673828125
    6. ')
' → logprob: -4.1889190673828125
    7. '))' → logprob: -4.9389190673828125
    8. '                   ' → logprob: -6.9389190673828125
    9. ')))),' → logprob: -7.0639190673828125
    10. '))))
' → logprob: -8.438919067382812

Token 336: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04053202271461487
    2. ')' → logprob: -4.415532112121582
    3. ')))' → logprob: -4.415532112121582
    4. '               ' → logprob: -4.540532112121582
    5. '))))' → logprob: -5.415532112121582
    6. '))' → logprob: -8.790532112121582
    7. '                   ' → logprob: -9.665532112121582
    8. ')))),' → logprob: -9.665532112121582
    9. ')
' → logprob: -9.915532112121582
    10. ')));' → logprob: -10.665532112121582

Token 337: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8089107275009155
    2. '       ' → logprob: -1.3089107275009155
    3. ')))' → logprob: -1.8089107275009155
    4. '           ' → logprob: -2.808910846710205
    5. '))))' → logprob: -3.308910846710205
    6. '))' → logprob: -4.558910846710205
    7. ')
' (adapté à ' )
') → logprob: -4.683910846710205
    8. '               ' → logprob: -6.183910846710205
    9. ')))),' → logprob: -7.183910846710205
    10. '))),' → logprob: -8.433910369873047

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2624463737010956
    2. ')' → logprob: -1.887446403503418
    3. ')))' → logprob: -2.762446403503418
    4. '))' → logprob: -4.887446403503418
    5. '           ' → logprob: -5.762446403503418
    6. '))))' → logprob: -5.762446403503418
    7. '               ' → logprob: -7.012446403503418
    8. ')
' → logprob: -8.012446403503418
    9. '),' → logprob: -8.012446403503418
    10. '   ' → logprob: -8.387446403503418

Token 339: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7684106826782227
    2. '   ' → logprob: -1.1434106826782227
    3. '       ' → logprob: -2.5184106826782227
    4. ')))' → logprob: -2.5184106826782227
    5. '))' → logprob: -2.8934106826782227
    6. ')
' (adapté à ' )
') → logprob: -7.518410682678223
    7. '))))' → logprob: -8.268410682678223
    8. '),' → logprob: -9.768410682678223
    9. '           ' → logprob: -10.893410682678223
    10. ',' → logprob: -11.143410682678223

Token 340: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014758381061255932
    2. '   ' → logprob: -4.764758586883545
    3. ')
' → logprob: -5.389758586883545
    4. ')))' → logprob: -8.014758110046387
    5. '))' → logprob: -8.139758110046387
    6. '       ' → logprob: -8.139758110046387
    7. ',' → logprob: -8.889758110046387
    8. '<|end|>' → logprob: -9.264758110046387
    9. ',
' → logprob: -9.764758110046387
    10. '),' → logprob: -9.889758110046387

Token 341: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011104474542662501
    2. '   ' → logprob: -7.126110553741455
    3. ')
' (adapté à ' )
') → logprob: -8.376110076904297
    4. '))' → logprob: -10.126110076904297
    5. ')))' → logprob: -11.126110076904297
    6. '),' → logprob: -12.751110076904297
    7. ' )' → logprob: -13.001110076904297
    8. ',' → logprob: -13.251110076904297
    9. '       ' → logprob: -13.376110076904297
    10. ')return' → logprob: -13.626110076904297

Token 342: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11204013973474503
    2. '<|end|>' → logprob: -3.2370400428771973
    3. '
' → logprob: -4.112040042877197
    4. '+' → logprob: -4.237040042877197
    5. '   ' → logprob: -4.487040042877197
    6. ':' → logprob: -5.237040042877197
    7. '(' → logprob: -5.362040042877197
    8. '()' → logprob: -5.737040042877197
    9. ')
' → logprob: -5.737040042877197
    10. ' ' → logprob: -6.487040042877197

Token 343: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0030349940061569214
    2. '   ' → logprob: -5.878035068511963
    3. ')' → logprob: -8.628034591674805
    4. ' print' → logprob: -10.753034591674805
    5. 'return' → logprob: -11.003034591674805
    6. 'ret' → logprob: -12.128034591674805
    7. '...' → logprob: -13.128034591674805
    8. 'sys' → logprob: -13.378034591674805
    9. '```' → logprob: -13.503034591674805
    10. 'pass' → logprob: -14.128034591674805

Token 344: '(ret' (ID: 35317)
  Prédit: '(ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ret' → logprob: -0.2520402669906616
    2. '(' → logprob: -1.5020402669906616
    3. '(re' → logprob: -9.752039909362793
    4. '()' → logprob: -10.752039909362793
    5. '(r' → logprob: -11.752039909362793
    6. 'ret' → logprob: -11.877039909362793
    7. ' (' → logprob: -11.877039909362793
    8. '(
' → logprob: -12.127039909362793
    9. '('' → logprob: -12.877039909362793
    10. '(return' → logprob: -14.627039909362793

Token 345: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6047699318733066e-05
    2. ')
' → logprob: -11.250016212463379
    3. ')`' → logprob: -13.750016212463379
    4. ' )' → logprob: -14.375016212463379
    5. '))' → logprob: -15.125016212463379
    6. '   ' → logprob: -15.375016212463379
    7. '+' → logprob: -15.375016212463379
    8. '`)' → logprob: -16.250015258789062
    9. '()' → logprob: -16.250015258789062
    10. '')' → logprob: -16.625015258789062

Token 346: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03103145956993103
    2. '(' → logprob: -4.031031608581543
    3. ':' → logprob: -5.156031608581543
    4. ' ' → logprob: -5.781031608581543
    5. '<|end|>' → logprob: -6.156031608581543
    6. '[' → logprob: -7.531031608581543
    7. '_' → logprob: -7.906031608581543
    8. ' )' → logprob: -8.531031608581543
    9. '#' → logprob: -8.656031608581543
    10. '0' → logprob: -9.031031608581543

Token 347: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00977379735559225
    2. '__' → logprob: -4.6347737312316895
    3. ' ' → logprob: -11.884774208068848
    4. '_' → logprob: -11.884774208068848
    5. '_name' → logprob: -13.009774208068848
    6. '___' → logprob: -14.634774208068848
    7. ' ___' → logprob: -15.384774208068848
    8. ' ' → logprob: -15.509774208068848
    9. 'name' → logprob: -15.634774208068848
    10. ' _' → logprob: -15.884774208068848

Token 348: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09139557927846909
    2. ' ==' → logprob: -2.591395616531372
    3. '==' → logprob: -4.841395378112793
    4. ' __' → logprob: -5.466395378112793
    5. '=="' → logprob: -9.216395378112793
    6. '_' → logprob: -9.466395378112793
    7. '=='' → logprob: -10.466395378112793
    8. ' =="' → logprob: -11.216395378112793
    9. '__.__' → logprob: -11.341395378112793
    10. '___' → logprob: -12.091395378112793

Token 349: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0010462664067745209
    2. '==' → logprob: -6.876046180725098
    3. ' ==' → logprob: -11.751046180725098
    4. '_' → logprob: -13.126046180725098
    5. '=="' → logprob: -13.501046180725098
    6. '__.__' → logprob: -13.751046180725098
    7. '=' → logprob: -14.751046180725098
    8. ' __' → logprob: -15.626046180725098
    9. '___' → logprob: -16.126047134399414
    10. '__
' → logprob: -16.501047134399414

Token 350: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22832979261875153
    2. ' ==' → logprob: -1.8533297777175903
    3. '__' → logprob: -3.60332989692688
    4. '=="' → logprob: -3.97832989692688
    5. '=='' → logprob: -6.603329658508301
    6. '=' → logprob: -10.2283296585083
    7. '==
' → logprob: -10.7283296585083
    8. '"' → logprob: -11.1033296585083
    9. '===' → logprob: -11.7283296585083
    10. '[' → logprob: -11.7283296585083

Token 351: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10027438402175903
    2. ''' → logprob: -2.3502743244171143
    3. '__' → logprob: -10.225274085998535
    4. ' "__' → logprob: -10.475274085998535
    5. ' '__' → logprob: -13.100274085998535
    6. '"user' → logprob: -15.600274085998535
    7. '"name' → logprob: -15.975274085998535
    8. ''"' → logprob: -16.10027503967285
    9. '("__' → logprob: -16.22527503967285
    10. '('__' → logprob: -16.35027503967285

Token 352: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -9.615255839889869e-05
    2. 'name' → logprob: -9.250096321105957
    3. ' main' → logprob: -17.75009536743164
    4. '__' → logprob: -18.75009536743164
    5. '_main' → logprob: -19.00009536743164
    6. 'ma' → logprob: -19.75009536743164
    7. '(main' → logprob: -20.37509536743164
    8. '	main' → logprob: -20.50009536743164
    9. '-main' → logprob: -20.87509536743164
    10. 'm' → logprob: -21.25009536743164

Token 353: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4742010235786438
    2. '__':
' → logprob: -0.9742010235786438
    3. '__:' → logprob: -9.099201202392578
    4. '__":
' → logprob: -11.724201202392578
    5. '__)' → logprob: -13.349201202392578
    6. '__.' → logprob: -14.099201202392578
    7. '_' → logprob: -14.224201202392578
    8. '__('' → logprob: -14.974201202392578
    9. '':' → logprob: -15.599201202392578
    10. '('__' → logprob: -15.849201202392578

Token 354: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.033438894897699356
    2. '   ' → logprob: -3.5334389209747314
    3. '	main' → logprob: -5.783438682556152
    4. ' main' → logprob: -7.533438682556152
    5. '_main' → logprob: -10.158438682556152
    6. '(main' → logprob: -11.908438682556152
    7. '```' → logprob: -11.908438682556152
    8. '    
' → logprob: -12.408438682556152
    9. ' ' → logprob: -12.658438682556152
    10. '<|end|>' → logprob: -13.408438682556152

Token 355: ' (' (ID: 350)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.125
    3. '	main' → logprob: -18.625
    4. '(main' → logprob: -22.25
    5. '   ' → logprob: -23.25
    6. '_main' → logprob: -23.875
    7. '.main' → logprob: -24.125
    8. 'import' → logprob: -24.25
    9. '__' → logprob: -25.25
    10. 'mai' → logprob: -25.375

Token 356: 'lambda' (ID: 35280)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0024953987449407578
    2. ')' → logprob: -6.002495288848877
    3. ' main' → logprob: -11.252495765686035
    4. '	main' → logprob: -12.002495765686035
    5. '_main' → logprob: -14.627495765686035
    6. '__' → logprob: -16.62749481201172
    7. '(main' → logprob: -16.75249481201172
    8. ')__' → logprob: -16.75249481201172
    9. '   ' → logprob: -18.00249481201172
    10. '.main' → logprob: -18.12749481201172

Token 357: ' f' (ID: 285)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.225737452507019
    2. ':' → logprob: -1.475737452507019
    3. '():' → logprob: -1.600737452507019
    4. 'main' → logprob: -1.975737452507019
    5. '):' → logprob: -2.7257375717163086
    6. ' :' → logprob: -3.1007375717163086
    7. ')' → logprob: -4.600737571716309
    8. ' ):' → logprob: -4.725737571716309
    9. ' ():' → logprob: -5.100737571716309
    10. '()' → logprob: -7.600737571716309

Token 358: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14069685339927673
    2. ':f' → logprob: -2.2656967639923096
    3. '():' → logprob: -4.015697002410889
    4. 'unc' → logprob: -6.140697002410889
    5. ' f' → logprob: -6.265697002410889
    6. ' :' → logprob: -6.265697002410889
    7. 'f' → logprob: -6.515697002410889
    8. '(f' → logprob: -7.140697002410889
    9. '=f' → logprob: -7.640697002410889
    10. '):' → logprob: -8.51569652557373

Token 359: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0022526723332703114
    2. ' f' → logprob: -6.127252578735352
    3. '   ' → logprob: -10.252252578735352
    4. 'sys' → logprob: -10.752252578735352
    5. 'print' → logprob: -12.627252578735352
    6. '(f' → logprob: -12.877252578735352
    7. ')' → logprob: -13.252252578735352
    8. 'exit' → logprob: -14.627252578735352
    9. '__' → logprob: -14.877252578735352
    10. ' ' → logprob: -14.877252578735352

Token 360: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.017414400354027748
    2. '()' → logprob: -4.267414569854736
    3. '(f' → logprob: -6.267414569854736
    4. ')' → logprob: -7.642414569854736
    5. '(()' → logprob: -8.267414093017578
    6. '():' → logprob: -8.517414093017578
    7. '();)' → logprob: -9.517414093017578
    8. '(' → logprob: -9.767414093017578
    9. '(sys' → logprob: -9.892414093017578
    10. '()(' → logprob: -10.017414093017578

Token 361: '(' (ID: 7)
  Prédit: '(main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(main' → logprob: -0.0026776795275509357
    2. '(lambda' → logprob: -6.002677917480469
    3. '(' → logprob: -8.877677917480469
    4. ' (' → logprob: -10.252677917480469
    5. ' ' → logprob: -12.002677917480469
    6. '(Main' → logprob: -12.252677917480469
    7. ')(' → logprob: -12.252677917480469
    8. '(func' → logprob: -13.002677917480469
    9. '((' → logprob: -13.002677917480469
    10. 'main' → logprob: -13.502677917480469

Token 362: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -7.493430894101039e-05
    2. ' main' → logprob: -9.500075340270996
    3. '	main' → logprob: -17.62507438659668
    4. '(main' → logprob: -18.75007438659668
    5. 'lambda' → logprob: -20.12507438659668
    6. ')' → logprob: -22.87507438659668
    7. '_main' → logprob: -23.00007438659668
    8. '.main' → logprob: -23.25007438659668
    9. '   ' → logprob: -23.37507438659668
    10. 'Main' → logprob: -24.25007438659668

Token 363: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005662570474669337
    2. '())' → logprob: -7.625566482543945
    3. '()' → logprob: -9.750566482543945
    4. ')
' → logprob: -11.125566482543945
    5. '))' → logprob: -12.625566482543945
    6. ' )' → logprob: -13.875566482543945
    7. ')`' → logprob: -15.000566482543945
    8. '()
' → logprob: -16.125566482543945
    9. ')#' → logprob: -16.625566482543945
    10. '(' → logprob: -16.625566482543945


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 361
Tokens correctement prédits (1ère position, stricte): 141
Tokens correctement prédits (1ère position, avec adaptation): 145
Tokens correctement prédits (top 10): 280
Précision stricte (1ère position): 39.06%
Précision adaptée (1ère position): 40.17%
Précision (top 10): 77.56%
================================================================================
