================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    return input()

def parse_input(s):
    return s.split()

def convert_to_ints(strs):
    return list(map(int, strs))

def assign_values(ints):
    return ints[0], ints[1]

def compute_difference(a, b):
    return b - a

def initialize_counter():
    return 0

def get_range_end(c):
    return c - 1

def compute_increment(i):
    return i + 1

def update_counter(cnt, increment):
    return cnt + increment

def iterate_and_sum(c):
    cnt = initialize_counter()
    for i in range(get_range_end(c)):
        increment = compute_increment(i)
        cnt = update_counter(cnt, increment)
    return cnt

def subtract_a(cnt, a):
    return cnt - a

def main():
    s = read_input()
    strs = parse_input(s)
    ints = convert_to_ints(strs)
    a, b = assign_values(ints)
    c = compute_difference(a, b)
    cnt = iterate_and_sum(c)
    result = subtract_a(cnt, a)
    print(result)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021150470711290836
    2. '_' → logprob: -7.002115249633789
    3. '():' → logprob: -7.377115249633789
    4. '(:' → logprob: -8.502115249633789
    5. '```' → logprob: -8.877115249633789
    6. '(_:' → logprob: -9.502115249633789
    7. ':' → logprob: -9.752115249633789
    8. ' (' → logprob: -10.127115249633789
    9. '(_' → logprob: -11.002115249633789
    10. '()' → logprob: -12.627115249633789

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.988785445690155
    2. '\' → logprob: -1.2387855052947998
    3. '\n' → logprob: -1.3637855052947998
    4. '   ' → logprob: -3.1137855052948
    5. '    
' → logprob: -4.863785266876221
    6. '
' → logprob: -5.113785266876221
    7. ' 
' → logprob: -5.613785266876221
    8. '``' → logprob: -5.863785266876221
    9. ':' → logprob: -6.113785266876221
    10. ''\' → logprob: -6.613785266876221

Token 5: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44198349118232727
    2. '```' → logprob: -2.066983461380005
    3. 'return' (adapté à ' return') → logprob: -2.691983461380005
    4. 'input' → logprob: -3.441983461380005
    5. '    ' → logprob: -3.441983461380005
    6. 'r' → logprob: -3.566983461380005
    7. '\' → logprob: -4.191983699798584
    8. 'x' → logprob: -4.316983699798584
    9. '       ' → logprob: -4.691983699798584
    10. '`' → logprob: -5.191983699798584

Token 6: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21321910619735718
    2. ' input' → logprob: -2.213219165802002
    3. 'input' → logprob: -3.088219165802002
    4. '"' → logprob: -3.463219165802002
    5. ''' → logprob: -5.588219165802002
    6. ' []' → logprob: -7.588219165802002
    7. '  ' → logprob: -7.963219165802002
    8. ' "' → logprob: -8.463218688964844
    9. ' None' → logprob: -9.088218688964844
    10. '(input' → logprob: -9.213218688964844

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013408389640972018
    2. '()' → logprob: -7.376340866088867
    3. ''' → logprob: -8.376340866088867
    4. '"' → logprob: -9.126340866088867
    5. '('' → logprob: -9.376340866088867
    6. '("("' → logprob: -9.501340866088867
    7. '```' → logprob: -9.751340866088867
    8. '(
' → logprob: -10.126340866088867
    9. ' (' → logprob: -11.126340866088867
    10. ')' → logprob: -11.251340866088867

Token 8: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8395724892616272
    2. '(' → logprob: -1.8395724296569824
    3. '
' → logprob: -2.4645724296569824
    4. '```' → logprob: -2.5895724296569824
    5. '()' → logprob: -2.8395724296569824
    6. '<|end|>' → logprob: -3.2145724296569824
    7. '#' → logprob: -3.4645724296569824
    8. 'def' → logprob: -3.5895724296569824
    9. '(
' → logprob: -4.339572429656982
    10. '\' → logprob: -4.464572429656982

Token 9: ' parse' (ID: 8420)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -1.1871564388275146
    2. ' calculate' → logprob: -1.5621564388275146
    3. ' write' → logprob: -1.8121564388275146
    4. ' main' → logprob: -1.9371564388275146
    5. ' read' → logprob: -2.1871564388275146
    6. ' compute' → logprob: -4.437156677246094
    7. ' user' → logprob: -4.562156677246094
    8. ' parse' → logprob: -4.812156677246094
    9. ' print' → logprob: -5.062156677246094
    10. ' validate' → logprob: -5.687156677246094

Token 10: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.021266520023345947
    2. '_input' → logprob: -4.146266460418701
    3. '(' → logprob: -5.396266460418701
    4. '_line' → logprob: -8.14626693725586
    5. '_data' → logprob: -9.89626693725586
    6. '_token' → logprob: -10.14626693725586
    7. '_(' → logprob: -10.39626693725586
    8. '_text' → logprob: -10.39626693725586
    9. '_output' → logprob: -10.77126693725586
    10. '(_' → logprob: -10.77126693725586

Token 11: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006141376681625843
    2. '_' → logprob: -6.381141185760498
    3. '("("' → logprob: -6.756141185760498
    4. '(_' → logprob: -7.256141185760498
    5. '():' → logprob: -7.506141185760498
    6. '('_' → logprob: -8.006141662597656
    7. '_text' → logprob: -8.506141662597656
    8. '_parent' → logprob: -8.631141662597656
    9. '(_:' → logprob: -8.631141662597656
    10. '(_)' → logprob: -9.006141662597656

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014484785497188568
    2. ')' → logprob: -4.264484882354736
    3. ':' → logprob: -8.764484405517578
    4. ' ):' → logprob: -9.514484405517578
    5. '):
' → logprob: -10.389484405517578
    6. '_' → logprob: -11.014484405517578
    7. ',' → logprob: -11.639484405517578
    8. 's' → logprob: -12.139484405517578
    9. '_input' → logprob: -12.639484405517578
    10. '   ' → logprob: -13.139484405517578

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02164340391755104
    2. 's' → logprob: -4.64664363861084
    3. ' s' → logprob: -5.02164363861084
    4. ' return' → logprob: -6.27164363861084
    5. '    ' → logprob: -6.39664363861084
    6. '[]' → logprob: -8.27164363861084
    7. '(s' → logprob: -8.77164363861084
    8. ')' → logprob: -8.89664363861084
    9. 'return' → logprob: -8.89664363861084
    10. '[' → logprob: -9.02164363861084

Token 14: ' return' (ID: 622)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7512900829315186
    2. ' s' → logprob: -0.8762900829315186
    3. '   ' → logprob: -2.5012900829315186
    4. ' return' → logprob: -4.001290321350098
    5. 'return' (adapté à ' return') → logprob: -5.126290321350098
    6. 'int' → logprob: -6.501290321350098
    7. ' tokens' → logprob: -6.626290321350098
    8. 'tokens' → logprob: -7.376290321350098
    9. ' int' → logprob: -7.626290321350098
    10. ' list' → logprob: -7.751290321350098

Token 15: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.42314115166664124
    2. ' int' → logprob: -1.9231411218643188
    3. 's' → logprob: -2.0481412410736084
    4. 'int' → logprob: -3.4231412410736084
    5. ' list' → logprob: -3.4231412410736084
    6. 'list' → logprob: -5.798141002655029
    7. ' ' → logprob: -7.298141002655029
    8. '[int' → logprob: -7.798141002655029
    9. ' tuple' → logprob: -8.798141479492188
    10. ' [' → logprob: -9.423141479492188

Token 16: '.split' (ID: 10347)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.33265405893325806
    2. '(' → logprob: -1.8326539993286133
    3. '_' → logprob: -2.8326539993286133
    4. '[' → logprob: -3.4576539993286133
    5. '.split' → logprob: -4.957653999328613
    6. ')' → logprob: -5.082653999328613
    7. '(
' → logprob: -6.082653999328613
    8. '\' → logprob: -6.207653999328613
    9. '<|end|>' → logprob: -6.207653999328613
    10. '```' → logprob: -6.332653999328613

Token 17: '()

' (ID: 5874)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.48816829919815063
    2. '(' → logprob: -0.9881682991981506
    3. '("("' → logprob: -4.363168239593506
    4. '()' → logprob: -6.863168239593506
    5. '('.')' → logprob: -9.363168716430664
    6. ''' → logprob: -9.863168716430664
    7. '(`' → logprob: -10.988168716430664
    8. '("' → logprob: -11.363168716430664
    9. '(',' → logprob: -11.738168716430664
    10. ' (' → logprob: -12.613168716430664

Token 18: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5241493582725525
    2. 'd' → logprob: -0.8991493582725525
    3. '\' → logprob: -7.649149417877197
    4. 'de' → logprob: -8.274148941040039
    5. '#' → logprob: -9.024148941040039
    6. '```' → logprob: -9.774148941040039
    7. '
' → logprob: -10.649148941040039
    8. '

' → logprob: -11.524148941040039
    9. '    
' → logprob: -11.649148941040039
    10. ' 
' → logprob: -11.649148941040039

Token 19: ' convert' (ID: 8452)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.024465367197990417
    2. ' process' → logprob: -4.024465560913086
    3. 'main' → logprob: -5.649465560913086
    4. ' solve' → logprob: -6.774465560913086
    5. ' calculate' → logprob: -7.024465560913086
    6. 'process' → logprob: -8.524465560913086
    7. ' convert' → logprob: -8.774465560913086
    8. ' compute' → logprob: -9.149465560913086
    9. ' is' → logprob: -10.524465560913086
    10. 'calculate' → logprob: -10.649465560913086

Token 20: '_to' (ID: 5089)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28594449162483215
    2. '_to' → logprob: -1.4109444618225098
    3. '(' → logprob: -6.78594446182251
    4. '_token' → logprob: -6.91094446182251
    5. '_value' → logprob: -7.66094446182251
    6. '_(' → logprob: -7.66094446182251
    7. '_input' → logprob: -8.410944938659668
    8. '_tokens' → logprob: -8.535944938659668
    9. '_string' → logprob: -8.785944938659668
    10. '(_' → logprob: -8.910944938659668

Token 21: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.00021951000962872058
    2. 'int' → logprob: -8.875219345092773
    3. '_' → logprob: -10.750219345092773
    4. ' int' → logprob: -11.125219345092773
    5. '_float' → logprob: -11.500219345092773
    6. '_in' → logprob: -11.750219345092773
    7. '_tokens' → logprob: -12.125219345092773
    8. '_string' → logprob: -12.250219345092773
    9. '_numbers' → logprob: -12.500219345092773
    10. '_str' → logprob: -12.625219345092773

Token 22: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38362908363342285
    2. 's' → logprob: -1.2586290836334229
    3. '(s' → logprob: -3.383629083633423
    4. '_' → logprob: -8.508628845214844
    5. ' (' → logprob: -8.758628845214844
    6. '("("' → logprob: -10.133628845214844
    7. '(x' → logprob: -10.258628845214844
    8. '()' → logprob: -10.258628845214844
    9. '(token' → logprob: -10.758628845214844
    10. '(n' → logprob: -10.758628845214844

Token 23: '(str' (ID: 7946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016045745462179184
    2. '(s' → logprob: -4.266045570373535
    3. ' (' → logprob: -6.516045570373535
    4. '("("' → logprob: -8.266045570373535
    5. 's' → logprob: -10.016045570373535
    6. '(strings' → logprob: -11.016045570373535
    7. '('' → logprob: -11.766045570373535
    8. '(tokens' → logprob: -11.891045570373535
    9. '(ss' → logprob: -12.016045570373535
    10. '(user' → logprob: -12.016045570373535

Token 24: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.33456331491470337
    2. 'ings' → logprob: -1.3345632553100586
    3. 'ing' → logprob: -3.9595632553100586
    4. '_list' → logprob: -7.084563255310059
    5. '_' → logprob: -7.709563255310059
    6. '_s' → logprob: -8.459563255310059
    7. ')' → logprob: -8.959563255310059
    8. '_array' → logprob: -9.459563255310059
    9. '_vals' → logprob: -9.834563255310059
    10. '_tokens' → logprob: -9.959563255310059

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002423217985779047
    2. ')' → logprob: -6.502423286437988
    3. ' ):' → logprob: -7.127423286437988
    4. '):
' → logprob: -9.377423286437988
    5. ' )' → logprob: -11.752423286437988
    6. '[]):' → logprob: -12.127423286437988
    7. '   ' → logprob: -12.252423286437988
    8. '):

' → logprob: -12.502423286437988
    9. 's' → logprob: -13.002423286437988
    10. ',' → logprob: -13.377423286437988

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17895270884037018
    2. '[int' → logprob: -2.178952693939209
    3. '[' → logprob: -3.053952693939209
    4. 'ints' → logprob: -6.678952693939209
    5. 'int' → logprob: -7.803952693939209
    6. ' [' → logprob: -7.928952693939209
    7. '[]' → logprob: -8.053953170776367
    8. 'return' → logprob: -8.178953170776367
    9. '[
' → logprob: -8.178953170776367
    10. '[i' → logprob: -8.678953170776367

Token 27: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.355886697769165
    2. '   ' → logprob: -1.480886697769165
    3. '[int' → logprob: -1.480886697769165
    4. 'return' (adapté à ' return') → logprob: -1.855886697769165
    5. ' return' → logprob: -2.105886697769165
    6. ' [' → logprob: -4.855886459350586
    7. '[i' → logprob: -7.355886459350586
    8. '[
' → logprob: -7.730886459350586
    9. '[]' → logprob: -9.355886459350586
    10. '[str' → logprob: -9.855886459350586

Token 28: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.049217741936445236
    2. ' list' → logprob: -3.049217700958252
    3. '[list' → logprob: -8.04921817779541
    4. '[' → logprob: -8.17421817779541
    5. 'list' → logprob: -11.17421817779541
    6. '[int' → logprob: -11.29921817779541
    7. '[List' → logprob: -14.42421817779541
    8. ' ' → logprob: -14.92421817779541
    9. ' [
' → logprob: -14.92421817779541
    10. ' []' → logprob: -15.17421817779541

Token 29: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.000344044849043712
    2. '(' → logprob: -8.000344276428223
    3. '(int' → logprob: -11.750344276428223
    4. 'map' → logprob: -15.625344276428223
    5. '(
' → logprob: -15.875344276428223
    6. '	map' → logprob: -16.125343322753906
    7. '(

' → logprob: -16.625343322753906
    8. ',map' → logprob: -16.875343322753906
    9. '_map' → logprob: -17.625343322753906
    10. ' map' → logprob: -17.625343322753906

Token 30: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008856110507622361
    2. '(' → logprob: -7.375885486602783
    3. ' int' → logprob: -8.625885963439941
    4. 'int' → logprob: -10.000885963439941
    5. ' (' → logprob: -11.250885963439941
    6. '   ' → logprob: -11.750885963439941
    7. '<int' → logprob: -12.000885963439941
    8. '=int' → logprob: -13.250885963439941
    9. ',int' → logprob: -13.250885963439941
    10. '	int' → logprob: -13.375885963439941

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0040117958560585976
    2. ',str' → logprob: -5.629011631011963
    3. ' ,' → logprob: -8.129012107849121
    4. '(str' → logprob: -9.379012107849121
    5. '(' → logprob: -11.379012107849121
    6. ',
' → logprob: -12.379012107849121
    7. ' ' → logprob: -12.754012107849121
    8. '   ' → logprob: -12.879012107849121
    9. ')' → logprob: -13.004012107849121
    10. 's' → logprob: -13.129012107849121

Token 32: ' strs' (ID: 125079)
  Prédit: ' strs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strs' → logprob: -0.3133096396923065
    2. 'str' → logprob: -1.313309669494629
    3. ' str' → logprob: -10.063309669494629
    4. '   ' → logprob: -13.563309669494629
    5. ' ' → logprob: -13.688309669494629
    6. '	str' → logprob: -14.188309669494629
    7. ',str' → logprob: -15.188309669494629
    8. '(str' → logprob: -15.313309669494629
    9. 'strings' → logprob: -15.438309669494629
    10. ')' → logprob: -15.438309669494629

Token 33: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -4.656383680412546e-05
    2. ')' → logprob: -10.125046730041504
    3. ')))' → logprob: -12.125046730041504
    4. ' ))' → logprob: -14.250046730041504
    5. '))
' → logprob: -15.375046730041504
    6. '()))' → logprob: -16.625045776367188
    7. '   ' → logprob: -16.750045776367188
    8. '));' → logprob: -17.500045776367188
    9. ' ' → logprob: -18.125045776367188
    10. '),' → logprob: -18.250045776367188

Token 34: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.723352049040841e-06
    2. '```' → logprob: -13.500004768371582
    3. '#' → logprob: -14.000004768371582
    4. '<|end|>' → logprob: -14.625004768371582
    5. ' def' → logprob: -14.750004768371582
    6. '<|end|>' → logprob: -15.375004768371582
    7. 'if' → logprob: -15.375004768371582
    8. '\' → logprob: -15.500004768371582
    9. '
' → logprob: -15.625004768371582
    10. '

' → logprob: -15.750004768371582

Token 35: ' assign' (ID: 14975)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.16023123264312744
    2. ' solve' → logprob: -3.035231113433838
    3. ' calculate' → logprob: -3.785231113433838
    4. ' process' → logprob: -3.910231113433838
    5. ' sum' → logprob: -4.035231113433838
    6. ' compute' → logprob: -4.285231113433838
    7. ' count' → logprob: -4.535231113433838
    8. ' find' → logprob: -4.785231113433838
    9. 'main' → logprob: -6.410231113433838
    10. ' max' → logprob: -6.785231113433838

Token 36: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.29417479038238525
    2. '_' → logprob: -2.1691746711730957
    3. '_numbers' → logprob: -3.5441746711730957
    4. '_variables' → logprob: -3.7941746711730957
    5. '_scores' → logprob: -4.669174671173096
    6. '_ids' → logprob: -4.919174671173096
    7. '_tasks' → logprob: -5.044174671173096
    8. '_(' → logprob: -5.044174671173096
    9. '_roles' → logprob: -5.044174671173096
    10. '(' → logprob: -5.294174671173096

Token 37: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5502567291259766
    2. '(args' → logprob: -2.0502567291259766
    3. '(values' → logprob: -2.4252567291259766
    4. '():' → logprob: -2.8002567291259766
    5. '(params' → logprob: -2.9252567291259766
    6. '(s' → logprob: -4.050256729125977
    7. '(lst' → logprob: -4.550256729125977
    8. '()' → logprob: -5.300256729125977
    9. ' (' → logprob: -5.425256729125977
    10. '(vars' → logprob: -5.550256729125977

Token 38: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004379924852401018
    2. '_values' → logprob: -6.379379749298096
    3. '_s' → logprob: -6.504379749298096
    4. ' s' → logprob: -7.879379749298096
    5. ')s' → logprob: -8.254380226135254
    6. '   ' → logprob: -8.754380226135254
    7. '):' → logprob: -9.129380226135254
    8. ')' → logprob: -9.379380226135254
    9. 'values' → logprob: -9.629380226135254
    10. '_list' → logprob: -10.504380226135254

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20385055243968964
    2. ',' → logprob: -1.703850507736206
    3. ')' → logprob: -6.578850746154785
    4. ' ):' → logprob: -6.953850746154785
    5. ')):' → logprob: -10.578850746154785
    6. ' ,' → logprob: -11.203850746154785
    7. '   ' → logprob: -11.328850746154785
    8. '[]):' → logprob: -12.203850746154785
    9. '):
' → logprob: -12.328850746154785
    10. ' ' → logprob: -12.453850746154785

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008735707961022854
    2. ':' → logprob: -5.633735656738281
    3. ':
' → logprob: -5.758735656738281
    4. '```' → logprob: -7.758735656738281
    5. '
' → logprob: -8.383735656738281
    6. '       ' → logprob: -8.633735656738281
    7. '[' → logprob: -8.758735656738281
    8. '    
' → logprob: -8.883735656738281
    9. ' return' → logprob: -8.883735656738281
    10. 'values' → logprob: -9.383735656738281

Token 41: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1328284740447998
    2. ' a' → logprob: -1.8828284740447998
    3. 'values' → logprob: -1.8828284740447998
    4. '   ' → logprob: -2.0078284740448
    5. 'return' (adapté à ' return') → logprob: -2.2578284740448
    6. ' values' → logprob: -2.7578284740448
    7. ' return' → logprob: -3.2578284740448
    8. 'result' → logprob: -5.132828712463379
    9. 'assigned' → logprob: -5.132828712463379
    10. 'd' → logprob: -5.632828712463379

Token 42: ' ints' (ID: 121629)
  Prédit: 'ints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ints' → logprob: -0.016234243288636208
    2. '[int' → logprob: -4.891234397888184
    3. ' ints' → logprob: -5.141234397888184
    4. '[' → logprob: -7.016234397888184
    5. '{' → logprob: -7.766234397888184
    6. ' [' → logprob: -8.016234397888184
    7. '{}' → logprob: -8.016234397888184
    8. 'int' → logprob: -8.516234397888184
    9. 'dict' → logprob: -8.641234397888184
    10. '[]' → logprob: -9.016234397888184

Token 43: '[' (ID: 58)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08279484510421753
    2. '<|end|>' → logprob: -2.8327949047088623
    3. '[' → logprob: -4.457794666290283
    4. '(' → logprob: -5.457794666290283
    5. '<|end|>' → logprob: -6.707794666290283
    6. '```' → logprob: -6.707794666290283
    7. '(def' → logprob: -7.707794666290283
    8. ' def' → logprob: -8.082795143127441
    9. '

' → logprob: -8.082795143127441
    10. '[]' → logprob: -8.457795143127441

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04771362617611885
    2. ':' → logprob: -3.1727135181427
    3. ' ' → logprob: -6.297713756561279
    4. ':]' → logprob: -6.547713756561279
    5. ' :' → logprob: -6.672713756561279
    6. ' :]' → logprob: -9.297713279724121
    7. ']' → logprob: -10.422713279724121
    8. '-' → logprob: -10.922713279724121
    9. '1' → logprob: -12.047713279724121
    10. ':index' → logprob: -12.672713279724121

Token 45: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18116377294063568
    2. '],' → logprob: -2.056163787841797
    3. ' ]' → logprob: -3.431163787841797
    4. ' ],' → logprob: -5.306163787841797
    5. '],
' → logprob: -8.306163787841797
    6. ':]' → logprob: -10.056163787841797
    7. ' :]' → logprob: -10.556163787841797
    8. ' ],
' → logprob: -10.556163787841797
    9. ':' → logprob: -10.681163787841797
    10. ',' → logprob: -11.181163787841797

Token 46: ' ints' (ID: 121629)
  Prédit: ' ints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ints' → logprob: -0.3134155869483948
    2. 'ints' → logprob: -1.31341552734375
    3. 'Ints' → logprob: -9.43841552734375
    4. 'int' → logprob: -10.31341552734375
    5. ' ' → logprob: -11.43841552734375
    6. ' int' → logprob: -12.06341552734375
    7. ' integers' → logprob: -12.18841552734375
    8. '*' → logprob: -12.81341552734375
    9. '[int' → logprob: -12.93841552734375
    10. ' *' → logprob: -13.06341552734375

Token 47: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007915947586297989
    2. '1' → logprob: -5.63291597366333
    3. '<|end|>' → logprob: -5.63291597366333
    4. '```' → logprob: -7.75791597366333
    5. '[:]' → logprob: -9.257915496826172
    6. ' [' → logprob: -9.632915496826172
    7. '<|end|>' → logprob: -10.632915496826172
    8. '2' → logprob: -10.757915496826172
    9. '[-' → logprob: -11.132915496826172
    10. '[:' → logprob: -11.132915496826172

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.64708495605737e-05
    2. '0' → logprob: -9.875066757202148
    3. '-' → logprob: -11.250066757202148
    4. ' ' → logprob: -13.750066757202148
    5. ']' → logprob: -15.250066757202148
    6. '```' → logprob: -15.375066757202148
    7. '   ' → logprob: -16.12506675720215
    8. '])' → logprob: -16.75006675720215
    9. '2' → logprob: -16.87506675720215
    10. ':' → logprob: -16.87506675720215

Token 49: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02343391440808773
    2. ']' → logprob: -3.7734339237213135
    3. '])' → logprob: -9.273433685302734
    4. ',' → logprob: -10.273433685302734
    5. '),' → logprob: -10.898433685302734
    6. ')]' → logprob: -11.398433685302734
    7. ' )' → logprob: -12.273433685302734
    8. ')])' → logprob: -12.273433685302734
    9. '<|end|>' → logprob: -12.398433685302734
    10. '}' → logprob: -12.398433685302734

Token 50: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004894769750535488
    2. '
' → logprob: -6.379894733428955
    3. '

' → logprob: -7.004894733428955
    4. '\' → logprob: -7.254894733428955
    5. '<|end|>' → logprob: -7.504894733428955
    6. '#' → logprob: -7.754894733428955
    7. '```' → logprob: -8.379895210266113
    8. '\n' → logprob: -9.129895210266113
    9. 'newline' → logprob: -9.629895210266113
    10. '(' → logprob: -9.879895210266113

Token 51: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.28155452013015747
    2. ' calculate' → logprob: -1.9065544605255127
    3. ' solve' → logprob: -3.0315544605255127
    4. ' compute' → logprob: -3.2815544605255127
    5. ' process' → logprob: -5.281554698944092
    6. ' find' → logprob: -5.906554698944092
    7. ' sum' → logprob: -7.031554698944092
    8. ' solution' → logprob: -7.656554698944092
    9. ' run' → logprob: -8.281554222106934
    10. ' add' → logprob: -8.406554222106934

Token 52: '_difference' (ID: 123771)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.5610887408256531
    2. '(' → logprob: -1.4360888004302979
    3. '_' → logprob: -2.061088800430298
    4. '_result' → logprob: -4.186088562011719
    5. '(a' → logprob: -4.311088562011719
    6. '_total' → logprob: -4.561088562011719
    7. '_max' → logprob: -5.436088562011719
    8. '_value' → logprob: -5.811088562011719
    9. '_difference' → logprob: -5.811088562011719
    10. '_area' → logprob: -6.061088562011719

Token 53: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026978181675076485
    2. '(a' → logprob: -3.6519782543182373
    3. '(x' → logprob: -9.151978492736816
    4. '(first' → logprob: -9.401978492736816
    5. '()' → logprob: -9.651978492736816
    6. '(n' → logprob: -9.776978492736816
    7. '_' → logprob: -10.276978492736816
    8. ' (' → logprob: -10.401978492736816
    9. '(i' → logprob: -10.651978492736816
    10. '(lhs' → logprob: -10.776978492736816

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008058178937062621
    2. ',b' → logprob: -7.625805854797363
    3. ' ,' → logprob: -8.500805854797363
    4. ')' → logprob: -9.500805854797363
    5. '-' → logprob: -10.500805854797363
    6. '-,' → logprob: -12.875805854797363
    7. ',a' → logprob: -12.875805854797363
    8. ',)' → logprob: -12.875805854797363
    9. '_,' → logprob: -14.000805854797363
    10. ' -' → logprob: -14.000805854797363

Token 55: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.47407791018486023
    2. ' b' → logprob: -0.9740779399871826
    3. ' ' → logprob: -14.849078178405762
    4. ' ' → logprob: -15.599078178405762
    5. 'a' → logprob: -16.099077224731445
    6. '   ' → logprob: -16.599077224731445
    7. ')b' → logprob: -16.599077224731445
    8. '>b' → logprob: -17.224077224731445
    9. '<|end|>' → logprob: -17.224077224731445
    10. '    ' → logprob: -17.474077224731445

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010821137111634016
    2. ')' → logprob: -6.876081943511963
    3. '):
' → logprob: -10.876082420349121
    4. ':' → logprob: -11.251082420349121
    5. ' ):' → logprob: -11.501082420349121
    6. '   ' → logprob: -12.251082420349121
    7. ',' → logprob: -14.501082420349121
    8. ' ' → logprob: -14.626082420349121
    9. '=' → logprob: -15.126082420349121
    10. ')：' → logprob: -15.876082420349121

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06701327115297318
    2. ' return' → logprob: -2.8170132637023926
    3. 'return' → logprob: -5.817013263702393
    4. '    ' → logprob: -7.192013263702393
    5. ' a' → logprob: -7.442013263702393
    6. 'a' → logprob: -8.19201374053955
    7. ' abs' → logprob: -8.81701374053955
    8. 'abs' → logprob: -9.31701374053955
    9. 'b' → logprob: -9.56701374053955
    10. ' b' → logprob: -9.56701374053955

Token 58: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2947547435760498
    2. 'return' (adapté à ' return') → logprob: -1.7947547435760498
    3. '   ' → logprob: -2.41975474357605
    4. '```' → logprob: -9.419754981994629
    5. '    ' → logprob: -10.544754981994629
    6. ' if' → logprob: -11.419754981994629
    7. ' a' → logprob: -11.544754981994629
    8. ' ' → logprob: -11.669754981994629
    9. 'b' → logprob: -11.669754981994629
    10. ' b' → logprob: -11.919754981994629

Token 59: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5570498108863831
    2. 'b' → logprob: -1.1820497512817383
    3. ' b' → logprob: -2.8070497512817383
    4. ' a' → logprob: -3.6820497512817383
    5. 'abs' → logprob: -3.9320497512817383
    6. ' abs' → logprob: -4.182049751281738
    7. ' ' → logprob: -11.057049751281738
    8. '   ' → logprob: -11.932049751281738
    9. ' max' → logprob: -13.682049751281738
    10. ' ' → logprob: -13.932049751281738

Token 60: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12693293392658234
    2. ' -' → logprob: -2.1269328594207764
    3. ' ' → logprob: -13.501933097839355
    4. '<|end|>' → logprob: -13.501933097839355
    5. '-a' → logprob: -15.001933097839355
    6. ')' → logprob: -15.626933097839355
    7. ' -
' → logprob: -15.626933097839355
    8. '-
' → logprob: -15.751933097839355
    9. '```' → logprob: -15.751933097839355
    10. '-token' → logprob: -15.876933097839355

Token 61: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001234428636962548
    2. ' a' → logprob: -9.000123023986816
    3. ' ' → logprob: -18.250123977661133
    4. '	a' → logprob: -18.875123977661133
    5. '<|end|>' → logprob: -19.875123977661133
    6. '   ' → logprob: -20.125123977661133
    7. '  ' → logprob: -20.375123977661133
    8. 'а' → logprob: -21.625123977661133
    9. '1' → logprob: -22.000123977661133
    10. '    ' → logprob: -22.375123977661133

Token 62: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04631597176194191
    2. '<|end|>' → logprob: -3.796315908432007
    3. '

' → logprob: -4.171316146850586
    4. '
' → logprob: -6.046316146850586
    5. '\n' → logprob: -6.171316146850586
    6. '```' → logprob: -6.671316146850586
    7. '<|end|>' → logprob: -7.171316146850586
    8. '\' → logprob: -7.671316146850586
    9. 'newline' → logprob: -8.921316146850586
    10. '#' → logprob: -9.546316146850586

Token 63: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011890572495758533
    2. 'print' → logprob: -5.386890411376953
    3. 'a' → logprob: -5.636890411376953
    4. '```' → logprob: -6.636890411376953
    5. '#' → logprob: -7.011890411376953
    6. '\' → logprob: -7.636890411376953
    7. 'result' → logprob: -8.136890411376953
    8. '\n' → logprob: -8.886890411376953
    9. 'if' → logprob: -8.886890411376953
    10. 'n' → logprob: -9.261890411376953

Token 64: ' initialize' (ID: 18400)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.005817994941025972
    2. ' compute' → logprob: -5.380817890167236
    3. ' calculate' → logprob: -7.130817890167236
    4. 'main' → logprob: -8.255818367004395
    5. ' solve' → logprob: -10.005818367004395
    6. ' read' → logprob: -10.505818367004395
    7. ' process' → logprob: -10.505818367004395
    8. 'compute' → logprob: -11.755818367004395
    9. ' print' → logprob: -12.130818367004395
    10. 'calculate' → logprob: -12.255818367004395

Token 65: '_counter' (ID: 35419)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.9225970506668091
    2. '_values' → logprob: -1.422597050666809
    3. '_' → logprob: -2.4225969314575195
    4. '_result' → logprob: -2.7975969314575195
    5. '_value' → logprob: -3.0475969314575195
    6. '_array' → logprob: -3.4225969314575195
    7. '_variables' → logprob: -3.7975969314575195
    8. '_output' → logprob: -3.9225969314575195
    9. '_variable' → logprob: -4.2975969314575195
    10. '()' → logprob: -4.4225969314575195

Token 66: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00010556964843999594
    2. ' ():' → logprob: -9.875105857849121
    3. '()' → logprob: -10.250105857849121
    4. '():
' → logprob: -11.125105857849121
    5. '(' → logprob: -12.500105857849121
    6. ':' → logprob: -16.000104904174805
    7. ' ()' → logprob: -16.500104904174805
    8. '():

' → logprob: -17.250104904174805
    9. '():
' → logprob: -17.625104904174805
    10. '(:' → logprob: -18.000104904174805

Token 67: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05349660664796829
    2. '   ' → logprob: -3.0534965991973877
    3. 'return' → logprob: -5.553496837615967
    4. ' ' → logprob: -7.803496837615967
    5. ' return' → logprob: -7.803496837615967
    6. 'counter' → logprob: -8.803496360778809
    7. '```' → logprob: -10.928496360778809
    8. ' counter' → logprob: -11.178496360778809
    9. 'count' → logprob: -12.178496360778809
    10. '  ' → logprob: -12.303496360778809

Token 68: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018849045038223267
    2. 'return' (adapté à ' return') → logprob: -4.518848896026611
    3. ' return' → logprob: -5.268848896026611
    4. ' ' → logprob: -6.268848896026611
    5. 'counter' → logprob: -8.01884937286377
    6. '   ' → logprob: -8.39384937286377
    7. ' counter' → logprob: -9.14384937286377
    8. 'count' → logprob: -10.14384937286377
    9. '{}' → logprob: -11.76884937286377
    10. 'cnt' → logprob: -12.76884937286377

Token 69: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018687831237912178
    2. '{}' → logprob: -4.018687725067139
    3. ' ' → logprob: -7.768687725067139
    4. '{' → logprob: -10.018688201904297
    5. ' {}' → logprob: -10.643688201904297
    6. 'default' → logprob: -10.893688201904297
    7. 'dict' → logprob: -11.643688201904297
    8. ' defaultdict' → logprob: -12.268688201904297
    9. '   ' → logprob: -12.643688201904297
    10. '[]' → logprob: -13.143688201904297

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007441143970936537
    2. '{}' → logprob: -7.250744342803955
    3. '{' → logprob: -11.500743865966797
    4. ' ' → logprob: -11.750743865966797
    5. 'dict' → logprob: -12.125743865966797
    6. 'default' → logprob: -12.500743865966797
    7. '1' → logprob: -13.625743865966797
    8. 'counter' → logprob: -13.750743865966797
    9. '[' → logprob: -14.125743865966797
    10. '[]' → logprob: -14.250743865966797

Token 71: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04827924072742462
    2. '<|end|>' → logprob: -3.173279285430908
    3. '

' → logprob: -6.298279285430908
    4. '<|end|>' → logprob: -6.548279285430908
    5. '
' → logprob: -7.048279285430908
    6. '```' → logprob: -7.923279285430908
    7. '\' → logprob: -8.17327880859375
    8. ' def' → logprob: -8.67327880859375
    9. '\n' → logprob: -9.42327880859375
    10. 'newline' → logprob: -10.42327880859375

Token 72: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008340472122654319
    2. 'for' → logprob: -7.625833988189697
    3. '```' → logprob: -9.125834465026855
    4. 'counter' → logprob: -10.000834465026855
    5. 'count' → logprob: -10.250834465026855
    6. 'if' → logprob: -10.375834465026855
    7. 'while' → logprob: -10.375834465026855
    8. '\' → logprob: -10.500834465026855
    9. 'n' → logprob: -11.250834465026855
    10. '<|end|>' → logprob: -11.375834465026855

Token 73: ' get' (ID: 717)
  Prédit: ' increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' increment' → logprob: -0.7591767311096191
    2. ' main' → logprob: -0.8841767311096191
    3. 'increment' → logprob: -2.759176731109619
    4. ' process' → logprob: -3.384176731109619
    5. ' count' → logprob: -5.009176731109619
    6. ' update' → logprob: -5.509176731109619
    7. 'main' → logprob: -5.634176731109619
    8. ' counter' → logprob: -6.009176731109619
    9. ' initialize' → logprob: -7.384176731109619
    10. 'process' → logprob: -7.384176731109619

Token 74: '_range' (ID: 22022)
  Prédit: '_counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counter' → logprob: -0.3388981521129608
    2. '_' → logprob: -1.5888981819152832
    3. '_value' → logprob: -3.713898181915283
    4. '_input' → logprob: -3.838898181915283
    5. ' _' → logprob: -4.463898181915283
    6. '_count' → logprob: -4.588898181915283
    7. '_current' → logprob: -5.838898181915283
    8. '_next' → logprob: -5.963898181915283
    9. '_max' → logprob: -6.338898181915283
    10. '_result' → logprob: -6.713898181915283

Token 75: '_end' (ID: 13707)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22016264498233795
    2. '(start' → logprob: -2.4701626300811768
    3. '(a' → logprob: -2.9701626300811768
    4. '():' → logprob: -3.2201626300811768
    5. 's' → logprob: -5.720162868499756
    6. '(begin' → logprob: -5.970162868499756
    7. '_values' → logprob: -6.095162868499756
    8. '(s' → logprob: -6.220162868499756
    9. '_range' → logprob: -6.220162868499756
    10. '_start' → logprob: -6.470162868499756

Token 76: '(c' (ID: 2410)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.036834847182035446
    2. '(' → logprob: -3.661834955215454
    3. '()' → logprob: -5.036834716796875
    4. ' ():' → logprob: -6.411834716796875
    5. '(s' → logprob: -7.536834716796875
    6. '(a' → logprob: -7.661834716796875
    7. '_' → logprob: -8.161834716796875
    8. '():
' → logprob: -8.161834716796875
    9. 's' → logprob: -8.161834716796875
    10. '(n' → logprob: -9.911834716796875

Token 77: '):
' (ID: 1883)
  Prédit: 'ounter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounter' → logprob: -0.3611438274383545
    2. '):' → logprob: -1.2361438274383545
    3. ')' → logprob: -5.361144065856934
    4. 'ount' → logprob: -5.486144065856934
    5. '):
' → logprob: -5.736144065856934
    6. '):

' → logprob: -8.361144065856934
    7. 'oun' → logprob: -10.236144065856934
    8. 'o' → logprob: -10.236144065856934
    9. 'e' → logprob: -10.611144065856934
    10. '_' → logprob: -10.736144065856934

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005593614187091589
    2. ' return' → logprob: -6.130593776702881
    3. 'c' → logprob: -6.505593776702881
    4. 'return' → logprob: -6.630593776702881
    5. ' c' → logprob: -7.880593776702881
    6. ' ' → logprob: -10.005593299865723
    7. '    ' → logprob: -10.130593299865723
    8. '    
' → logprob: -11.005593299865723
    9. ':' → logprob: -11.130593299865723
    10. '  ' → logprob: -11.255593299865723

Token 79: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.44033706188201904
    2. '   ' → logprob: -1.690337061882019
    3. ' return' → logprob: -2.3153371810913086
    4. 'c' → logprob: -2.6903371810913086
    5. ' c' → logprob: -5.815337181091309
    6. '10' → logprob: -7.815337181091309
    7. '20' → logprob: -8.315337181091309
    8. ' ' → logprob: -8.440337181091309
    9. '9' → logprob: -8.940337181091309
    10. '    ' → logprob: -9.190337181091309

Token 80: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.057495806366205215
    2. 'c' → logprob: -2.9324958324432373
    3. ' ' → logprob: -6.432495594024658
    4. '10' → logprob: -8.432496070861816
    5. '20' → logprob: -9.932496070861816
    6. '1' → logprob: -9.932496070861816
    7. '2' → logprob: -9.932496070861816
    8. '  ' → logprob: -9.994996070861816
    9. '100' → logprob: -9.994996070861816
    10. ' len' → logprob: -10.057496070861816

Token 81: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008768673054873943
    2. ' ' → logprob: -5.508768558502197
    3. '2' → logprob: -6.008768558502197
    4. '3' → logprob: -7.383768558502197
    5. '10' → logprob: -8.258769035339355
    6. '4' → logprob: -8.633769035339355
    7. '100' → logprob: -8.633769035339355
    8. '5' → logprob: -9.008769035339355
    9. '   ' → logprob: -9.133769035339355
    10. '  ' → logprob: -9.758769035339355

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017082560807466507
    2. '2' → logprob: -7.501708030700684
    3. ' ' → logprob: -8.376708030700684
    4. '3' → logprob: -8.501708030700684
    5. '100' → logprob: -9.001708030700684
    6. '10' → logprob: -9.251708030700684
    7. '4' → logprob: -9.751708030700684
    8. '   ' → logprob: -9.876708030700684
    9. '0' → logprob: -10.126708030700684
    10. '5' → logprob: -10.126708030700684

Token 84: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34087052941322327
    2. '<|end|>' → logprob: -1.5908704996109009
    3. '
' → logprob: -2.8408706188201904
    4. '\n' → logprob: -4.590870380401611
    5. '#' → logprob: -5.465870380401611
    6. '```' → logprob: -5.465870380401611
    7. '<|end|>' → logprob: -6.340870380401611
    8. '

' → logprob: -6.340870380401611
    9. '\' → logprob: -6.715870380401611
    10. ' def' → logprob: -7.090870380401611

Token 85: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023197835311293602
    2. '<|end|>' → logprob: -4.773197650909424
    3. '\' → logprob: -5.648197650909424
    4. '#' → logprob: -5.773197650909424
    5. 'a' → logprob: -6.023197650909424
    6. 'n' → logprob: -6.773197650909424
    7. '\n' → logprob: -6.773197650909424
    8. '```' → logprob: -6.773197650909424
    9. 'd' → logprob: -7.023197650909424
    10. '[' → logprob: -8.648198127746582

Token 86: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6949450969696045
    2. ' compute' → logprob: -1.4449450969696045
    3. ' check' → logprob: -2.4449450969696045
    4. ' increment' → logprob: -2.9449450969696045
    5. ' process' → logprob: -3.0699450969696045
    6. ' calculate' → logprob: -3.8199450969696045
    7. ' is' → logprob: -4.319945335388184
    8. ' def' → logprob: -4.819945335388184
    9. ' count' → logprob: -5.319945335388184
    10. ' get' → logprob: -5.569945335388184

Token 87: '_increment' (ID: 132160)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.5234936475753784
    2. '_range' → logprob: -1.6484936475753784
    3. '_sum' → logprob: -2.023493766784668
    4. '_value' → logprob: -2.523493766784668
    5. '_total' → logprob: -2.523493766784668
    6. '_max' → logprob: -2.648493766784668
    7. '_difference' → logprob: -2.773493766784668
    8. '_counter' → logprob: -3.773493766784668
    9. '_average' → logprob: -4.273493766784668
    10. '_final' → logprob: -4.273493766784668

Token 88: '(i' (ID: 3649)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5313771963119507
    2. '(' → logprob: -1.6563771963119507
    3. '(a' → logprob: -1.6563771963119507
    4. '(c' → logprob: -3.6563773155212402
    5. '()' → logprob: -6.03137731552124
    6. '(s' → logprob: -6.65637731552124
    7. '(i' → logprob: -9.031376838684082
    8. '():
' → logprob: -9.281376838684082
    9. '(n' → logprob: -9.406376838684082
    10. '(:' → logprob: -9.531376838684082

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6023846864700317
    2. ',' → logprob: -0.8523846864700317
    3. ')' → logprob: -4.102384567260742
    4. '):
' → logprob: -5.352384567260742
    5. '+' → logprob: -6.602384567260742
    6. 'n' → logprob: -6.852384567260742
    7. ' ' → logprob: -7.727384567260742
    8. ' ,' → logprob: -7.977384567260742
    9. ',
' → logprob: -8.352384567260742
    10. ' ):' → logprob: -8.477384567260742

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.681342363357544
    2. ' i' → logprob: -0.931342363357544
    3. ' return' → logprob: -3.056342363357544
    4. 'i' → logprob: -3.681342363357544
    5. '1' → logprob: -4.181342124938965
    6. 'return' → logprob: -5.181342124938965
    7. ' ' → logprob: -5.931342124938965
    8. '2' → logprob: -6.681342124938965
    9. '    ' → logprob: -6.681342124938965
    10. '0' → logprob: -8.056342124938965

Token 91: ' return' (ID: 622)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6217063069343567
    2. 'i' → logprob: -1.121706247329712
    3. ' return' → logprob: -2.996706247329712
    4. 'return' (adapté à ' return') → logprob: -3.246706247329712
    5. '   ' → logprob: -3.621706247329712
    6. '1' → logprob: -4.496706485748291
    7. ' ' → logprob: -5.496706485748291
    8. '2' → logprob: -5.621706485748291
    9. ' (' → logprob: -7.371706485748291
    10. '(' → logprob: -7.746706485748291

Token 92: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.19964496791362762
    2. ' i' → logprob: -1.949644923210144
    3. '1' → logprob: -3.8246450424194336
    4. '2' → logprob: -4.699645042419434
    5. ' ' → logprob: -5.824645042419434
    6. '(i' → logprob: -6.574645042419434
    7. '(' → logprob: -6.824645042419434
    8. ' (' → logprob: -7.199645042419434
    9. '3' → logprob: -7.949645042419434
    10. 'int' → logprob: -8.324645042419434

Token 93: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.40745964646339417
    2. '<|end|>' → logprob: -1.7824596166610718
    3. '*' → logprob: -1.9074596166610718
    4. '%' → logprob: -4.532459735870361
    5. '**' → logprob: -6.532459735870361
    6. '+
' → logprob: -6.907459735870361
    7. '(' → logprob: -7.282459735870361
    8. '#' → logprob: -7.407459735870361
    9. '
' → logprob: -7.532459735870361
    10. '<|end|>' → logprob: -7.782459735870361

Token 94: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006894750986248255
    2. ' ' → logprob: -5.006894588470459
    3. '2' → logprob: -9.006895065307617
    4. '   ' → logprob: -10.381895065307617
    5. '10' → logprob: -11.506895065307617
    6. '  ' → logprob: -12.256895065307617
    7. ' i' → logprob: -13.006895065307617
    8. '3' → logprob: -13.131895065307617
    9. '5' → logprob: -14.006895065307617
    10. '0' → logprob: -14.006895065307617

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011517672101035714
    2. '2' → logprob: -7.1261515617370605
    3. ' ' → logprob: -8.376152038574219
    4. '10' → logprob: -10.251152038574219
    5. '3' → logprob: -10.626152038574219
    6. 'i' → logprob: -11.501152038574219
    7. '5' → logprob: -11.501152038574219
    8. '4' → logprob: -12.126152038574219
    9. '   ' → logprob: -12.251152038574219
    10. '0' → logprob: -12.376152038574219

Token 96: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4641975164413452
    2. '<|end|>' → logprob: -1.5891975164413452
    3. '
' → logprob: -2.5891976356506348
    4. '#' → logprob: -3.3391976356506348
    5. '\' → logprob: -3.9641976356506348
    6. '\n' → logprob: -4.714197635650635
    7. '```' → logprob: -5.214197635650635
    8. 'n' → logprob: -5.714197635650635
    9. '[' → logprob: -5.964197635650635
    10. '<|end|>' → logprob: -6.089197635650635

Token 97: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.026953943073749542
    2. '#' → logprob: -4.526954174041748
    3. 'a' → logprob: -5.901954174041748
    4. '\' → logprob: -6.151954174041748
    5. 'for' → logprob: -6.151954174041748
    6. '<|end|>' → logprob: -6.151954174041748
    7. 'd' → logprob: -6.401954174041748
    8. '
' → logprob: -6.651954174041748
    9. 'n' → logprob: -7.026954174041748
    10. '```' → logprob: -7.401954174041748

Token 98: ' update' (ID: 4027)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2707606852054596
    2. 'main' → logprob: -2.0207607746124268
    3. ' process' → logprob: -2.7707607746124268
    4. 'process' → logprob: -4.020760536193848
    5. 'increment' → logprob: -5.520760536193848
    6. ' increment' → logprob: -6.020760536193848
    7. ' calculate' → logprob: -6.020760536193848
    8. ' check' → logprob: -6.145760536193848
    9. 'calculate' → logprob: -6.270760536193848
    10. ' count' → logprob: -6.645760536193848

Token 99: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -0.0006035494152456522
    2. '_value' → logprob: -8.625603675842285
    3. '(counter' → logprob: -8.750603675842285
    4. '_count' → logprob: -9.250603675842285
    5. 'counter' → logprob: -9.500603675842285
    6. '_' → logprob: -10.000603675842285
    7. '(' → logprob: -11.250603675842285
    8. '_c' → logprob: -11.875603675842285
    9. ' counter' → logprob: -12.750603675842285
    10. 'Counter' → logprob: -12.750603675842285

Token 100: '(cnt' (ID: 102125)
  Prédit: '(counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(counter' → logprob: -0.03628893941640854
    2. '(' → logprob: -3.7862889766693115
    3. '(c' → logprob: -4.411288738250732
    4. '(count' → logprob: -7.911288738250732
    5. ' (' → logprob: -8.03628921508789
    6. '(current' → logprob: -9.41128921508789
    7. '(cnt' → logprob: -11.66128921508789
    8. 'counter' → logprob: -12.03628921508789
    9. '(value' → logprob: -12.28628921508789
    10. '(
' → logprob: -12.28628921508789

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004704476799815893
    2. ' ,' → logprob: -6.129704475402832
    3. '):' → logprob: -6.254704475402832
    4. ',c' → logprob: -7.879704475402832
    5. ',count' → logprob: -9.129704475402832
    6. '   ' → logprob: -11.004704475402832
    7. ')' → logprob: -11.129704475402832
    8. ',
' → logprob: -11.129704475402832
    9. '):
' → logprob: -11.629704475402832
    10. ',n' → logprob: -11.629704475402832

Token 102: ' increment' (ID: 24032)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -1.2081431150436401
    2. 'inc' → logprob: -1.3331431150436401
    3. 'val' → logprob: -2.4581432342529297
    4. ' increment' → logprob: -2.5831432342529297
    5. ' inc' → logprob: -2.5831432342529297
    6. 'increment' → logprob: -2.7081432342529297
    7. ' value' → logprob: -2.9581432342529297
    8. ' i' → logprob: -3.5831432342529297
    9. 'value' → logprob: -3.8331432342529297
    10. 'i' → logprob: -4.08314323425293

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0892021581530571
    2. '):
' → logprob: -2.4642021656036377
    3. ')' → logprob: -8.839201927185059
    4. ' ):' → logprob: -9.339201927185059
    5. ' ):
' → logprob: -11.589201927185059
    6. '):
' → logprob: -11.964201927185059
    7. '):

' → logprob: -12.214201927185059
    8. '=' → logprob: -12.714201927185059
    9. 's' → logprob: -13.089201927185059
    10. '_' → logprob: -14.089201927185059

Token 104: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009073866531252861
    2. '   ' → logprob: -5.509073734283447
    3. '):' → logprob: -5.634073734283447
    4. ' :' → logprob: -7.134073734283447
    5. ':
' → logprob: -8.384074211120605
    6. ',' → logprob: -8.759074211120605
    7. ':return' → logprob: -9.134074211120605
    8. '):
' → logprob: -9.759074211120605
    9. ' =' → logprob: -11.134074211120605
    10. '=' → logprob: -11.884074211120605

Token 105: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.19275124371051788
    2. '   ' → logprob: -1.9427512884140015
    3. 'return' (adapté à ' return') → logprob: -3.442751169204712
    4. '    ' → logprob: -10.817750930786133
    5. '	return' → logprob: -12.817750930786133
    6. '  ' → logprob: -13.442750930786133
    7. ' ' → logprob: -14.067750930786133
    8. ' cnt' → logprob: -14.317750930786133
    9. 'cnt' → logprob: -15.067750930786133
    10. '    
' → logprob: -15.067750930786133

Token 106: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.201437309384346
    2. 'cnt' → logprob: -1.7014373540878296
    3. '(cnt' → logprob: -11.076436996459961
    4. '	cnt' → logprob: -12.576436996459961
    5. 'counter' → logprob: -13.701436996459961
    6. ' counter' → logprob: -13.701436996459961
    7. 'count' → logprob: -13.951436996459961
    8. '_cnt' → logprob: -14.451436996459961
    9. '[cnt' → logprob: -14.951436996459961
    10. '   ' → logprob: -15.451436996459961

Token 107: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.061970822513103485
    2. ' +' → logprob: -2.8119707107543945
    3. '+
' → logprob: -13.186970710754395
    4. ' +
' → logprob: -15.311970710754395
    5. '+=' → logprob: -15.436970710754395
    6. '<|end|>' → logprob: -15.436970710754395
    7. '+++' → logprob: -15.936970710754395
    8. ' plus' → logprob: -15.936970710754395
    9. '＋' → logprob: -16.31197166442871
    10. ' ' → logprob: -16.81197166442871

Token 108: ' increment' (ID: 24032)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increment' → logprob: -0.16022889316082
    2. ' increment' → logprob: -1.9102288484573364
    3. '1' → logprob: -12.535228729248047
    4. 'increments' → logprob: -14.660228729248047
    5. ' incremental' → logprob: -15.785228729248047
    6. 'int' → logprob: -15.910228729248047
    7. ' ' → logprob: -16.035228729248047
    8. '_increment' → logprob: -16.160228729248047
    9. 'in' → logprob: -16.535228729248047
    10. ' increments' → logprob: -16.785228729248047

Token 109: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.025939112529158592
    2. '

' → logprob: -4.150938987731934
    3. '
' → logprob: -5.150938987731934
    4. '<|end|>' → logprob: -6.275938987731934
    5. '\n' → logprob: -7.900938987731934
    6. '```' → logprob: -8.025938987731934
    7. '\' → logprob: -8.525938987731934
    8. '#' → logprob: -8.525938987731934
    9. '(' → logprob: -8.525938987731934
    10. '()' → logprob: -8.900938987731934

Token 110: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00011749001714633778
    2. 'for' → logprob: -10.750117301940918
    3. '\' → logprob: -10.875117301940918
    4. '#' → logprob: -11.000117301940918
    5. '```' → logprob: -11.250117301940918
    6. '<|end|>' → logprob: -11.375117301940918
    7. '
' → logprob: -11.750117301940918
    8. '\n' → logprob: -12.250117301940918
    9. 'if' → logprob: -12.375117301940918
    10. 'n' → logprob: -12.875117301940918

Token 111: ' iterate' (ID: 63166)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.004017733968794346
    2. ' process' → logprob: -6.0040178298950195
    3. ' calculate' → logprob: -7.5040178298950195
    4. 'main' → logprob: -8.12901782989502
    5. ' count' → logprob: -8.25401782989502
    6. ' compute' → logprob: -9.00401782989502
    7. ' find' → logprob: -9.25401782989502
    8. ' check' → logprob: -9.75401782989502
    9. ' solve' → logprob: -10.25401782989502
    10. ' sum' → logprob: -10.25401782989502

Token 112: '_and' (ID: 18645)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.761924684047699
    2. '_over' → logprob: -1.1369247436523438
    3. '_range' → logprob: -2.2619247436523438
    4. '_counter' → logprob: -2.7619247436523438
    5. '(' → logprob: -4.261924743652344
    6. '_values' → logprob: -4.636924743652344
    7. '_(' → logprob: -4.761924743652344
    8. '(_' → logprob: -6.261924743652344
    9. '_ranges' → logprob: -6.511924743652344
    10. '_items' → logprob: -6.886924743652344

Token 113: '_sum' (ID: 29859)
  Prédit: '_update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -0.29215705394744873
    2. '_compute' → logprob: -1.5421570539474487
    3. '_count' → logprob: -3.5421571731567383
    4. '_process' → logprob: -5.542157173156738
    5. '_check' → logprob: -6.667157173156738
    6. '_increment' → logprob: -6.917157173156738
    7. '_sum' → logprob: -7.042157173156738
    8. '_acc' → logprob: -7.292157173156738
    9. '_' → logprob: -7.917157173156738
    10. '_compare' → logprob: -7.917157173156738

Token 114: '(c' (ID: 2410)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.8492903113365173
    2. '(cnt' → logprob: -1.099290370941162
    3. '(' → logprob: -2.224290370941162
    4. ' (' → logprob: -3.474290370941162
    5. '(counter' → logprob: -3.724290370941162
    6. '(a' → logprob: -4.349290370941162
    7. '(n' → logprob: -4.474290370941162
    8. ' ():' → logprob: -4.474290370941162
    9. '(c' → logprob: -4.599290370941162
    10. '(i' → logprob: -4.599290370941162

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.42685049772262573
    2. 'ounter' → logprob: -2.0518505573272705
    3. 'ount' → logprob: -2.1768505573272705
    4. ',' → logprob: -2.5518505573272705
    5. '):
' → logprob: -4.301850318908691
    6. ' ):' → logprob: -5.051850318908691
    7. 'nt' → logprob: -5.801850318908691
    8. ')' → logprob: -6.676850318908691
    9. '   ' → logprob: -7.051850318908691
    10. ' ,' → logprob: -7.176850318908691

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009711332386359572
    2. ' total' → logprob: -8.250970840454102
    3. ' counter' → logprob: -8.500970840454102
    4. ' cnt' → logprob: -9.000970840454102
    5. 'cnt' → logprob: -9.250970840454102
    6. 'counter' → logprob: -9.250970840454102
    7. 'total' → logprob: -9.875970840454102
    8. '   ' → logprob: -10.375970840454102
    9. '```' → logprob: -10.875970840454102
    10. ' result' → logprob: -11.375970840454102

Token 117: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.020164605230093002
    2. 'counter' → logprob: -4.770164489746094
    3. 'total' → logprob: -5.020164489746094
    4. '   ' → logprob: -5.770164489746094
    5. 'count' → logprob: -7.020164489746094
    6. ' cnt' → logprob: -7.395164489746094
    7. 'sum' → logprob: -9.395164489746094
    8. 's' → logprob: -9.395164489746094
    9. ' total' → logprob: -10.645164489746094
    10. 'result' → logprob: -10.895164489746094

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1628389209508896
    2. '=' → logprob: -1.9128389358520508
    3. ' ' → logprob: -6.662838935852051
    4. ',' → logprob: -6.662838935852051
    5. '  ' → logprob: -11.03783893585205
    6. ' +=' → logprob: -11.66283893585205
    7. '   ' → logprob: -11.78783893585205
    8. '_' → logprob: -11.91283893585205
    9. ' =
' → logprob: -12.03783893585205
    10. ' ,' → logprob: -12.16283893585205

Token 119: ' initialize' (ID: 18400)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22596672177314758
    2. 'initialize' → logprob: -1.7259666919708252
    3. ' initialize' → logprob: -3.975966691970825
    4. ' ' → logprob: -5.225966930389404
    5. '   ' → logprob: -9.850966453552246
    6. '	initialize' → logprob: -10.975966453552246
    7. 'initial' → logprob: -11.225966453552246
    8. '  ' → logprob: -11.350966453552246
    9. ' c' → logprob: -13.100966453552246
    10. '```' → logprob: -13.163466453552246

Token 120: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -1.6240566083070007e-06
    2. 'counter' → logprob: -14.250001907348633
    3. '_count' → logprob: -14.500001907348633
    4. '_c' → logprob: -15.375001907348633
    5. '_' → logprob: -17.000001907348633
    6. 'ounter' → logprob: -18.375001907348633
    7. ' _' → logprob: -18.500001907348633
    8. 'Counter' → logprob: -19.000001907348633
    9. '_COUNTER' → logprob: -19.125001907348633
    10. ')_' → logprob: -19.625001907348633

Token 121: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023305457085371017
    2. '()
' → logprob: -3.7733054161071777
    3. '()

' → logprob: -10.398305892944336
    4. '()
' → logprob: -10.523305892944336
    5. ' ()' → logprob: -14.023305892944336
    6. '()`' → logprob: -14.023305892944336
    7. '()\' → logprob: -15.148305892944336
    8. '()"' → logprob: -15.523305892944336
    9. '())' → logprob: -15.773305892944336
    10. '()

' → logprob: -16.023305892944336

Token 122: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4246506094932556
    2. '   ' → logprob: -1.1746506690979004
    3. ' for' → logprob: -3.2996506690979004
    4. '	for' → logprob: -9.549650192260742
    5. 'i' → logprob: -9.674650192260742
    6. 'c' → logprob: -11.299650192260742
    7. ' i' → logprob: -11.424650192260742
    8. '    
' → logprob: -12.424650192260742
    9. 'range' → logprob: -12.674650192260742
    10. '
' → logprob: -13.049650192260742

Token 123: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0029567815363407135
    2. 'i' → logprob: -6.127956867218018
    3. ' for' → logprob: -7.877956867218018
    4. 'c' → logprob: -8.25295639038086
    5. '   ' → logprob: -9.25295639038086
    6. 'while' → logprob: -11.12795639038086
    7. 'range' → logprob: -11.87795639038086
    8. 'r' → logprob: -11.87795639038086
    9. 'end' → logprob: -13.25295639038086
    10. 'f' → logprob: -13.50295639038086

Token 124: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.126975879073143
    2. 'i' → logprob: -2.1269757747650146
    3. '	i' → logprob: -11.126976013183594
    4. '_' → logprob: -11.376976013183594
    5. '   ' → logprob: -11.876976013183594
    6. '_i' → logprob: -12.126976013183594
    7. ' ' → logprob: -12.501976013183594
    8. ' _' → logprob: -13.251976013183594
    9. '  ' → logprob: -13.751976013183594
    10. ' ' → logprob: -14.251976013183594

Token 125: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0068888277746737
    2. 'in' → logprob: -5.0068888664245605
    3. ' ' → logprob: -8.756888389587402
    4. '  ' → logprob: -12.381888389587402
    5. ',' → logprob: -12.506888389587402
    6. 'range' → logprob: -13.131888389587402
    7. '	in' → logprob: -14.069388389587402
    8. ' range' → logprob: -14.506888389587402
    9. '<|end|>' → logprob: -14.506888389587402
    10. 'n' → logprob: -14.756888389587402

Token 126: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5765583515167236
    2. ' range' → logprob: -0.8265583515167236
    3. 'get' → logprob: -7.7015581130981445
    4. ' get' → logprob: -8.951558113098145
    5. '   ' → logprob: -11.701558113098145
    6. '	range' → logprob: -11.826558113098145
    7. ' ' → logprob: -11.951558113098145
    8. '(range' → logprob: -12.326558113098145
    9. '  ' → logprob: -13.076558113098145
    10. 'c' → logprob: -13.701558113098145

Token 127: '(get' (ID: 7119)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.020076382905244827
    2. '(get' → logprob: -4.270076274871826
    3. '(' → logprob: -5.145076274871826
    4. ' (' → logprob: -9.895076751708984
    5. ' get' → logprob: -11.645076751708984
    6. '(
' → logprob: -12.770076751708984
    7. 'get' → logprob: -13.395076751708984
    8. 'c' → logprob: -13.770076751708984
    9. ' c' → logprob: -13.770076751708984
    10. '(s' → logprob: -15.145076751708984

Token 128: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.0001514557225164026
    2. 'ange' → logprob: -9.750151634216309
    3. '_r' → logprob: -10.375151634216309
    4. 'range' → logprob: -10.875151634216309
    5. '_' → logprob: -11.500151634216309
    6. '
' → logprob: -11.625151634216309
    7. '(c' → logprob: -12.500151634216309
    8. '_end' → logprob: -13.125151634216309
    9. 'r' → logprob: -13.250151634216309
    10. 'nge' → logprob: -13.250151634216309

Token 129: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -2.3915141355246305e-05
    2. 'end' → logprob: -10.75002384185791
    3. '_en' → logprob: -13.75002384185791
    4. '_' → logprob: -14.75002384185791
    5. 'End' → logprob: -15.00002384185791
    6. ' end' → logprob: -16.000024795532227
    7. '_END' → logprob: -16.250024795532227
    8. '(c' → logprob: -16.250024795532227
    9. ')' → logprob: -17.000024795532227
    10. '(end' → logprob: -17.000024795532227

Token 130: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -7.016616291366518e-05
    2. '(' → logprob: -9.750070571899414
    3. ' (' → logprob: -11.500070571899414
    4. '(cnt' → logprob: -13.625070571899414
    5. '(
' → logprob: -16.000070571899414
    6. '(count' → logprob: -16.625070571899414
    7. ')(' → logprob: -16.875070571899414
    8. ',' → logprob: -17.000070571899414
    9. ')' → logprob: -17.250070571899414
    10. ')c' → logprob: -17.250070571899414

Token 131: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.24537312984466553
    2. '(cnt' → logprob: -2.620373249053955
    3. ')' → logprob: -3.120373249053955
    4. '(' → logprob: -3.245373249053955
    5. '))' → logprob: -3.870373249053955
    6. '):' → logprob: -3.870373249053955
    7. ')):
' → logprob: -5.370373249053955
    8. '(c' → logprob: -5.370373249053955
    9. '   ' → logprob: -5.745373249053955
    10. '()))' → logprob: -6.120373249053955

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014475268311798573
    2. 'cnt' → logprob: -5.139475345611572
    3. '   ' → logprob: -6.014475345611572
    4. '
' → logprob: -6.014475345611572
    5. ' cnt' → logprob: -6.514475345611572
    6. '        
' → logprob: -7.764475345611572
    7. '    
' → logprob: -8.389474868774414
    8. '    ' → logprob: -8.389474868774414
    9. 'increment' → logprob: -8.889474868774414
    10. ',' → logprob: -9.389474868774414

Token 133: ' increment' (ID: 24032)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.7612432837486267
    2. 'cnt' → logprob: -1.0112433433532715
    3. '   ' → logprob: -2.6362433433532715
    4. 'increment' (adapté à ' increment') → logprob: -3.7612433433532715
    5. ' increment' → logprob: -3.7612433433532715
    6. '           ' → logprob: -3.8862433433532715
    7. '       ' → logprob: -3.8862433433532715
    8. '	cnt' → logprob: -6.2612433433532715
    9. 'inc' → logprob: -6.5112433433532715
    10. ' ' → logprob: -6.7612433433532715

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.126975879073143
    2. '=' → logprob: -2.1269757747650146
    3. 's' → logprob: -11.001976013183594
    4. '(' → logprob: -11.126976013183594
    5. '   ' → logprob: -12.251976013183594
    6. ' ' → logprob: -13.001976013183594
    7. '_' → logprob: -13.001976013183594
    8. ')' → logprob: -13.001976013183594
    9. 'ed' → logprob: -13.626976013183594
    10. '  ' → logprob: -13.626976013183594

Token 135: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.06996288895606995
    2. ' compute' → logprob: -2.694962978363037
    3. '
' → logprob: -11.069962501525879
    4. '   ' → logprob: -12.819962501525879
    5. ' i' → logprob: -13.069962501525879
    6. 'i' → logprob: -13.444962501525879
    7. ' ' → logprob: -14.194962501525879
    8. '

' → logprob: -14.569962501525879
    9. 'computer' → logprob: -14.569962501525879
    10. '  ' → logprob: -14.944962501525879

Token 136: '_increment' (ID: 132160)
  Prédit: '_increment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_increment' → logprob: -4.842555426876061e-06
    2. 'increment' → logprob: -12.500004768371582
    3. '_in' → logprob: -14.250004768371582
    4. '_inc' → logprob: -16.0000057220459
    5. '_update' → logprob: -16.5000057220459
    6. '_counter' → logprob: -17.1250057220459
    7. '_' → logprob: -17.6250057220459
    8. '_i' → logprob: -18.0000057220459
    9. '_INCREMENT' → logprob: -18.1250057220459
    10. 'Increment' → logprob: -18.5000057220459

Token 137: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00026288547087460756
    2. '(' → logprob: -8.250263214111328
    3. 'i' → logprob: -14.250263214111328
    4. '(
' → logprob: -14.375263214111328
    5. ' (' → logprob: -15.375263214111328
    6. ')' → logprob: -16.375263214111328
    7. ' i' → logprob: -17.875263214111328
    8. '   ' → logprob: -18.125263214111328
    9. '(ii' → logprob: -18.375263214111328
    10. ')i' → logprob: -18.375263214111328

Token 138: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18064159154891968
    2. ')
' → logprob: -1.8056416511535645
    3. '       ' → logprob: -7.3056416511535645
    4. '   ' → logprob: -8.805641174316406
    5. ')
' → logprob: -9.930641174316406
    6. ' )' → logprob: -11.680641174316406
    7. ')

' → logprob: -11.930641174316406
    8. ' ' → logprob: -12.555641174316406
    9. ' )
' → logprob: -13.180641174316406
    10. ')`
' → logprob: -13.930641174316406

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017044486477971077
    2. '   ' → logprob: -4.142044544219971
    3. '
' → logprob: -8.142044067382812
    4. 'cnt' → logprob: -8.517044067382812
    5. '	cnt' → logprob: -9.517044067382812
    6. ' ' → logprob: -9.642044067382812
    7. ' cnt' → logprob: -9.642044067382812
    8. '<|end|>' → logprob: -9.767044067382812
    9. '           ' → logprob: -10.017044067382812
    10. ',' → logprob: -10.642044067382812

Token 140: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.008535381406545639
    2. ' cnt' → logprob: -5.383535385131836
    3. '       ' → logprob: -5.758535385131836
    4. 'counter' → logprob: -7.883535385131836
    5. 'update' → logprob: -8.383535385131836
    6. '   ' → logprob: -9.758535385131836
    7. '	cnt' → logprob: -10.258535385131836
    8. 'count' → logprob: -10.383535385131836
    9. '
' → logprob: -12.133535385131836
    10. ' ' → logprob: -12.508535385131836

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023702919483185
    2. '=' → logprob: -1.9102370738983154
    3. ' +=' → logprob: -11.410237312316895
    4. '+=' → logprob: -13.410237312316895
    5. ' ' → logprob: -16.035236358642578
    6. ' =
' → logprob: -17.285236358642578
    7. '＝' → logprob: -17.410236358642578
    8. ')' → logprob: -17.785236358642578
    9. ',' → logprob: -18.035236358642578
    10. '=

' → logprob: -18.160236358642578

Token 142: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.4740777611732483
    2. ' update' → logprob: -0.9740777611732483
    3. '	update' → logprob: -14.974078178405762
    4. '(update' → logprob: -15.349078178405762
    5. '.update' → logprob: -16.224077224731445
    6. '_update' → logprob: -17.099077224731445
    7. '   ' → logprob: -17.724077224731445
    8. ' ' → logprob: -19.724077224731445
    9. '```' → logprob: -19.724077224731445
    10. ' ' → logprob: -19.974077224731445

Token 143: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -7.896309739408025e-07
    2. '_count' → logprob: -15.125000953674316
    3. '_' → logprob: -15.500000953674316
    4. '_c' → logprob: -15.750000953674316
    5. 'counter' → logprob: -16.25
    6. '_COUNTER' → logprob: -18.0
    7. 'Counter' → logprob: -18.5
    8. 'ounter' → logprob: -18.625
    9. '_cnt' → logprob: -19.125
    10. '(counter' → logprob: -19.5

Token 144: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.002645929343998432
    2. '(' → logprob: -6.002645969390869
    3. '(count' → logprob: -8.752645492553711
    4. '(counter' → logprob: -11.502645492553711
    5. '[cnt' → logprob: -13.877645492553711
    6. '(
' → logprob: -15.127645492553711
    7. '	cnt' → logprob: -15.877645492553711
    8. 'cnt' → logprob: -16.00264549255371
    9. '(c' → logprob: -16.25264549255371
    10. '(ct' → logprob: -16.62764549255371

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.539801688631997e-05
    2. ' ,' → logprob: -9.750065803527832
    3. 'increment' → logprob: -12.750065803527832
    4. ',in' → logprob: -13.125065803527832
    5. ',
' → logprob: -14.000065803527832
    6. ')' → logprob: -15.125065803527832
    7. '‌,' → logprob: -15.625065803527832
    8. '),' → logprob: -15.750065803527832
    9. '(in' → logprob: -15.750065803527832
    10. ' increment' → logprob: -16.125064849853516

Token 146: ' increment' (ID: 24032)
  Prédit: ' increment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' increment' → logprob: -0.0380479171872139
    2. 'increment' → logprob: -3.288048028945923
    3. ')' → logprob: -12.413047790527344
    4. ' incremental' → logprob: -13.913047790527344
    5. '_increment' → logprob: -14.913047790527344
    6. '.increment' → logprob: -15.288047790527344
    7. ' increments' → logprob: -15.413047790527344
    8. ' ' → logprob: -15.788047790527344
    9. 'increments' → logprob: -15.913047790527344
    10. ' )' → logprob: -16.038047790527344

Token 147: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3136215806007385
    2. ')' → logprob: -1.3136215209960938
    3. '   ' → logprob: -8.063621520996094
    4. ')return' → logprob: -10.938621520996094
    5. ')
' → logprob: -11.063621520996094
    6. ')

' → logprob: -11.938621520996094
    7. ' )
' → logprob: -12.813621520996094
    8. ' )' → logprob: -14.313621520996094
    9. '
' → logprob: -14.563621520996094
    10. 'return' → logprob: -14.688621520996094

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014926036819815636
    2. ' return' → logprob: -6.876492500305176
    3. 'return' → logprob: -7.751492500305176
    4. '<|end|>' → logprob: -11.001492500305176
    5. '	return' → logprob: -12.251492500305176
    6. '    
' → logprob: -13.001492500305176
    7. '       ' → logprob: -13.501492500305176
    8. '
' → logprob: -13.626492500305176
    9. ',' → logprob: -14.001492500305176
    10. 'def' → logprob: -15.001492500305176

Token 149: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1301163136959076
    2. '   ' → logprob: -2.1301162242889404
    3. ' return' → logprob: -5.7551164627075195
    4. '	return' → logprob: -11.63011646270752
    5. '<|end|>' → logprob: -12.63011646270752
    6. 'def' → logprob: -14.00511646270752
    7. ' ' → logprob: -14.50511646270752
    8. '  ' → logprob: -14.63011646270752
    9. '{return' → logprob: -14.63011646270752
    10. '    
' → logprob: -14.75511646270752

Token 150: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.3485516905784607
    2. 'cnt' → logprob: -1.2235517501831055
    3. '(cnt' → logprob: -10.348551750183105
    4. '	cnt' → logprob: -10.848551750183105
    5. 'count' → logprob: -10.973551750183105
    6. 'ct' → logprob: -11.848551750183105
    7. 'c' → logprob: -12.348551750183105
    8. '[cnt' → logprob: -12.348551750183105
    9. ' ct' → logprob: -12.598551750183105
    10. ' ' → logprob: -12.723551750183105

Token 151: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8274371027946472
    2. '<|end|>' → logprob: -1.202437162399292
    3. '#' → logprob: -1.702437162399292
    4. '```' → logprob: -3.952437162399292
    5. '
' → logprob: -4.077436923980713
    6. 'c' → logprob: -4.702436923980713
    7. 'a' → logprob: -5.077436923980713
    8. 'n' → logprob: -5.827436923980713
    9. '[' → logprob: -5.827436923980713
    10. '(' → logprob: -5.952436923980713

Token 153: ' subtract' (ID: 71973)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.003198035294190049
    2. 'main' → logprob: -5.878198146820068
    3. ' calculate' → logprob: -9.12819766998291
    4. ' solve' → logprob: -9.37819766998291
    5. ' compute' → logprob: -9.62819766998291
    6. ' process' → logprob: -9.62819766998291
    7. ' sum' → logprob: -10.87819766998291
    8. '_main' → logprob: -11.37819766998291
    9. ' run' → logprob: -11.50319766998291
    10. ' example' → logprob: -12.50319766998291

Token 154: '_a' (ID: 10852)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.831272304058075
    2. '(a' → logprob: -1.0812723636627197
    3. '_result' → logprob: -3.0812723636627197
    4. '(' → logprob: -3.2062723636627197
    5. '_two' → logprob: -3.4562723636627197
    6. '_one' → logprob: -3.8312723636627197
    7. '_difference' → logprob: -4.206272125244141
    8. '_and' → logprob: -4.706272125244141
    9. '_' → logprob: -4.831272125244141
    10. '_numbers' → logprob: -4.956272125244141

Token 155: '(cnt' (ID: 102125)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.15146352350711823
    2. '(a' → logprob: -2.276463508605957
    3. '_b' → logprob: -4.276463508605957
    4. '(' → logprob: -4.526463508605957
    5. '_and' → logprob: -4.776463508605957
    6. '_from' → logprob: -5.776463508605957
    7. 'nd' → logprob: -7.026463508605957
    8. '_' → logprob: -8.526463508605957
    9. 'b' → logprob: -8.526463508605957
    10. '_(' → logprob: -9.526463508605957

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001161173335276544
    2. ',a' → logprob: -7.251161098480225
    3. ' ,' → logprob: -7.876161098480225
    4. ')' → logprob: -10.251161575317383
    5. 'a' → logprob: -11.376161575317383
    6. ',
' → logprob: -12.501161575317383
    7. ',b' → logprob: -13.001161575317383
    8. '_,' → logprob: -13.376161575317383
    9. '),' → logprob: -13.501161575317383
    10. '):' → logprob: -13.501161575317383

Token 157: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07891678065061569
    2. ' a' → logprob: -2.5789167881011963
    3. 'b' → logprob: -12.078916549682617
    4. ')' → logprob: -12.203916549682617
    5. '	a' → logprob: -12.203916549682617
    6. '<|end|>' → logprob: -12.703916549682617
    7. ')a' → logprob: -13.203916549682617
    8. ' ' → logprob: -13.453916549682617
    9. ' b' → logprob: -13.828916549682617
    10. 'def' → logprob: -14.891416549682617

Token 158: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002731290180236101
    2. ',' → logprob: -6.2527313232421875
    3. ')' → logprob: -7.3777313232421875
    4. '):
' → logprob: -8.752731323242188
    5. ' ):' → logprob: -12.127731323242188
    6. '_' → logprob: -12.877731323242188
    7. '),' → logprob: -13.002731323242188
    8. '):
' → logprob: -13.377731323242188
    9. '):

' → logprob: -13.377731323242188
    10. ':' → logprob: -13.377731323242188

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6112332344055176
    2. ' return' → logprob: -1.3612332344055176
    3. 'return' → logprob: -1.6112332344055176
    4. 'cnt' → logprob: -7.111233234405518
    5. ' cnt' → logprob: -7.611233234405518
    6. ' ' → logprob: -11.48623275756836
    7. '  ' → logprob: -12.36123275756836
    8. '    ' → logprob: -12.61123275756836
    9. '	return' → logprob: -12.98623275756836
    10. '   ' → logprob: -14.36123275756836

Token 160: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5681936740875244
    2. ' return' → logprob: -1.5681936740875244
    3. 'cnt' → logprob: -1.8181936740875244
    4. ' cnt' → logprob: -2.8181936740875244
    5. '   ' → logprob: -5.818193435668945
    6. '(cnt' → logprob: -11.818193435668945
    7. 'def' → logprob: -12.318193435668945
    8. '[cnt' → logprob: -12.693193435668945
    9. ' ' → logprob: -13.318193435668945
    10. 'count' → logprob: -13.568193435668945

Token 161: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.47426638007164
    2. 'cnt' → logprob: -0.9742664098739624
    3. '(cnt' → logprob: -8.724266052246094
    4. '	cnt' → logprob: -11.974266052246094
    5. '-' → logprob: -13.099266052246094
    6. ' -' → logprob: -13.099266052246094
    7. 'c' → logprob: -13.224266052246094
    8. 'count' → logprob: -13.224266052246094
    9. '[cnt' → logprob: -13.224266052246094
    10. '   ' → logprob: -13.349266052246094

Token 162: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14313499629497528
    2. ' -' → logprob: -2.0181350708007812
    3. '<|end|>' → logprob: -7.768135070800781
    4. ' ' → logprob: -10.643135070800781
    5. '-
' → logprob: -12.018135070800781
    6. '
' → logprob: -13.143135070800781
    7. ' -
' → logprob: -13.643135070800781
    8. ' ' → logprob: -13.768135070800781
    9. '  ' → logprob: -14.768135070800781
    10. '```' → logprob: -14.893135070800781

Token 163: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06197138875722885
    2. ' a' → logprob: -2.811971426010132
    3. '	a' → logprob: -12.561971664428711
    4. '<|end|>' → logprob: -16.81197166442871
    5. '>a' → logprob: -17.31197166442871
    6. '_a' → logprob: -17.31197166442871
    7. ' ' → logprob: -17.56197166442871
    8. '1' → logprob: -17.68697166442871
    9. '   ' → logprob: -17.68697166442871
    10. '(a' → logprob: -18.06197166442871

Token 164: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12329787760972977
    2. '<|end|>' → logprob: -2.248297929763794
    3. 'a' → logprob: -5.123297691345215
    4. '#' → logprob: -6.373297691345215
    5. '```' → logprob: -6.373297691345215
    6. '
' → logprob: -7.998297691345215
    7. ')' → logprob: -8.373297691345215
    8. '<|end|>' → logprob: -8.498297691345215
    9. '  
' → logprob: -10.373297691345215
    10. '``' → logprob: -10.498297691345215

Token 165: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05162740871310234
    2. 'a' → logprob: -3.0516273975372314
    3. '#' → logprob: -6.9266276359558105
    4. '<|end|>' → logprob: -7.1766276359558105
    5. 'n' → logprob: -7.6766276359558105
    6. '```' → logprob: -8.801627159118652
    7. 'd' → logprob: -9.176627159118652
    8. 'print' → logprob: -9.301627159118652
    9. 's' → logprob: -9.551627159118652
    10. 'for' → logprob: -9.801627159118652

Token 166: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.003993392456322908
    2. 'main' → logprob: -6.503993511199951
    3. ' def' → logprob: -6.628993511199951
    4. ' process' → logprob: -7.753993511199951
    5. 'def' → logprob: -8.253993034362793
    6. ' compute' → logprob: -8.378993034362793
    7. ' calculate' → logprob: -8.503993034362793
    8. ' solve' → logprob: -11.128993034362793
    9. 'process' → logprob: -12.253993034362793
    10. 'calculate' → logprob: -12.503993034362793

Token 167: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.1318875446449965e-05
    2. '()' → logprob: -10.750041007995605
    3. '(' → logprob: -11.000041007995605
    4. '():
' → logprob: -13.125041007995605
    5. ' ():' → logprob: -14.375041007995605
    6. ':' → logprob: -15.875041007995605
    7. '(:' → logprob: -16.125041961669922
    8. '()>' → logprob: -16.500041961669922
    9. '_' → logprob: -17.000041961669922
    10. '(":' → logprob: -18.250041961669922

Token 168: '   ' (ID: 271)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2959344685077667
    2. '   ' → logprob: -1.4209344387054443
    3. 's' → logprob: -4.295934677124023
    4. ' input' → logprob: -7.170934677124023
    5. ' inputs' → logprob: -8.920934677124023
    6. 'input' → logprob: -9.545934677124023
    7. ' raw' → logprob: -10.920934677124023
    8. 'a' → logprob: -11.920934677124023
    9. ' line' → logprob: -11.920934677124023
    10. 'inputs' → logprob: -11.920934677124023

Token 169: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.18553082644939423
    2. ' s' → logprob: -1.8105307817459106
    3. '   ' → logprob: -5.560530662536621
    4. 'input' → logprob: -7.935530662536621
    5. ' input' → logprob: -8.310530662536621
    6. ' line' → logprob: -8.435530662536621
    7. 'a' → logprob: -8.685530662536621
    8. ' raw' → logprob: -8.685530662536621
    9. ' inputs' → logprob: -8.935530662536621
    10. 'inputs' → logprob: -9.060530662536621

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602313369512558
    2. '=' → logprob: -1.910231351852417
    3. '=input' → logprob: -12.660231590270996
    4. '   ' → logprob: -13.785231590270996
    5. '  ' → logprob: -14.160231590270996
    6. ' ' → logprob: -14.535231590270996
    7. '_' → logprob: -14.660231590270996
    8. ' ' → logprob: -14.785231590270996
    9. 's' → logprob: -15.285231590270996
    10. ' =
' → logprob: -15.535231590270996

Token 171: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.3868755102157593
    2. 'read' → logprob: -1.1368755102157593
    3. ' input' → logprob: -13.26187515258789
    4. 'input' → logprob: -13.63687515258789
    5. ' ' → logprob: -14.26187515258789
    6. '	read' → logprob: -14.76187515258789
    7. '(read' → logprob: -14.88687515258789
    8. '  ' → logprob: -16.51187515258789
    9. '   ' → logprob: -17.26187515258789
    10. '_read' → logprob: -17.38687515258789

Token 172: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0007121934904716909
    2. '_' → logprob: -7.2507123947143555
    3. '_in' → logprob: -14.625712394714355
    4. ' _' → logprob: -14.750712394714355
    5. '_inputs' → logprob: -14.750712394714355
    6. '_Input' → logprob: -15.250712394714355
    7. '_output' → logprob: -15.625712394714355
    8. '_line' → logprob: -15.625712394714355
    9. '_user' → logprob: -16.50071144104004
    10. '()' → logprob: -16.87571144104004

Token 173: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.612634362885728e-05
    2. '()
' → logprob: -9.500076293945312
    3. '()

' → logprob: -14.125076293945312
    4. '()
' → logprob: -16.250076293945312
    5. '()"' → logprob: -16.500076293945312
    6. '()`' → logprob: -16.500076293945312
    7. ' ()' → logprob: -16.500076293945312
    8. '().' → logprob: -16.625076293945312
    9. '()\' → logprob: -17.000076293945312
    10. '(' → logprob: -17.250076293945312

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03526455536484718
    2. ' strs' → logprob: -3.535264492034912
    3. 'tokens' → logprob: -6.035264492034912
    4. 'str' → logprob: -7.285264492034912
    5. ' parts' → logprob: -7.660264492034912
    6. '    
' → logprob: -7.785264492034912
    7. 'a' → logprob: -8.66026496887207
    8. ' ' → logprob: -8.66026496887207
    9. 'b' → logprob: -8.91026496887207
    10. 'ints' → logprob: -8.91026496887207

Token 175: ' strs' (ID: 125079)
  Prédit: ' strs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strs' → logprob: -0.21789714694023132
    2. 'str' → logprob: -1.8428971767425537
    3. 'parsed' → logprob: -4.717896938323975
    4. ' parts' → logprob: -4.842896938323975
    5. 'tokens' → logprob: -5.092896938323975
    6. 'parts' → logprob: -5.217896938323975
    7. ' tokens' → logprob: -6.467896938323975
    8. ' parsed' → logprob: -6.467896938323975
    9. 'vals' → logprob: -6.842896938323975
    10. 'values' → logprob: -6.967896938323975

Token 176: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14270605146884918
    2. '=' → logprob: -2.0177061557769775
    3. 's' → logprob: -10.642705917358398
    4. ')' → logprob: -12.517705917358398
    5. '_' → logprob: -13.642705917358398
    6. ' ' → logprob: -14.267705917358398
    7. ',' → logprob: -14.892705917358398
    8. '.' → logprob: -15.142705917358398
    9. ' ' → logprob: -15.517705917358398
    10. ' =)' → logprob: -16.0177059173584

Token 177: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.3868848979473114
    2. 'parse' → logprob: -1.1368849277496338
    3. '(parse' → logprob: -12.136884689331055
    4. '=parse' → logprob: -12.636884689331055
    5. 's' → logprob: -12.886884689331055
    6. '	parse' → logprob: -14.136884689331055
    7. '.parse' → logprob: -14.886884689331055
    8. '_parse' → logprob: -14.886884689331055
    9. 'str' → logprob: -15.386884689331055
    10. ' s' → logprob: -15.386884689331055

Token 178: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -5.431207682704553e-05
    2. '_' → logprob: -9.875054359436035
    3. '_s' → logprob: -13.625054359436035
    4. '_str' → logprob: -14.125054359436035
    5. '_inputs' → logprob: -15.250054359436035
    6. '_in' → logprob: -15.500054359436035
    7. '_output' → logprob: -16.00005340576172
    8. '_string' → logprob: -16.50005340576172
    9. '(s' → logprob: -16.75005340576172
    10. '_Input' → logprob: -17.12505340576172

Token 179: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.005240156780928373
    2. '(' → logprob: -5.255239963531494
    3. ' (' → logprob: -12.255240440368652
    4. 's' → logprob: -13.505240440368652
    5. '(
' → logprob: -15.630240440368652
    6. '(str' → logprob: -16.880239486694336
    7. ')' → logprob: -17.255239486694336
    8. ',' → logprob: -17.755239486694336
    9. ' ' → logprob: -18.380239486694336
    10. '(

' → logprob: -18.380239486694336

Token 180: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004330532974563539
    2. ')
' → logprob: -7.750432968139648
    3. '   ' → logprob: -13.750432968139648
    4. '()' → logprob: -14.000432968139648
    5. ' )' → logprob: -15.875432968139648
    6. ')

' → logprob: -16.00043296813965
    7. '),' → logprob: -16.50043296813965
    8. ')
' → logprob: -17.37543296813965
    9. '())' → logprob: -17.62543296813965
    10. ' ' → logprob: -17.75043296813965

Token 181: '   ' (ID: 271)
  Prédit: 'ints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ints' → logprob: -0.5249847769737244
    2. ' ints' → logprob: -1.1499848365783691
    3. '   ' → logprob: -2.399984836578369
    4. ' integers' → logprob: -8.524984359741211
    5. 'int' → logprob: -8.774984359741211
    6. ' ' → logprob: -8.899984359741211
    7. ' a' → logprob: -8.899984359741211
    8. 'a' → logprob: -9.024984359741211
    9. '    ' → logprob: -9.649984359741211
    10. 'Ints' → logprob: -10.024984359741211

Token 182: ' ints' (ID: 121629)
  Prédit: 'ints'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ints' (adapté à ' ints') → logprob: -0.018234701827168465
    2. ' ints' → logprob: -4.018234729766846
    3. 'Ints' → logprob: -10.393234252929688
    4. 'int' → logprob: -10.893234252929688
    5. ' integers' → logprob: -11.518234252929688
    6. 'nums' → logprob: -12.143234252929688
    7. '   ' → logprob: -12.393234252929688
    8. 'inte' → logprob: -12.643234252929688
    9. 'a' → logprob: -13.268234252929688
    10. ' a' → logprob: -13.768234252929688

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007638567127287388
    2. '=' → logprob: -4.882638454437256
    3. ')' → logprob: -11.632638931274414
    4. '<|end|>' → logprob: -11.632638931274414
    5. ',' → logprob: -11.882638931274414
    6. ' ' → logprob: -13.382638931274414
    7. '(' → logprob: -13.382638931274414
    8. ' =)' → logprob: -13.757638931274414
    9. '[' → logprob: -13.882638931274414
    10. '<|end|>' → logprob: -14.257638931274414

Token 184: ' convert' (ID: 8452)
  Prédit: ' convert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.008615635335445404
    2. 'convert' → logprob: -4.758615493774414
    3. '(convert' → logprob: -14.258615493774414
    4. '_convert' → logprob: -15.258615493774414
    5. '<|end|>' → logprob: -15.508615493774414
    6. '.convert' → logprob: -17.008615493774414
    7. ' ' → logprob: -18.633615493774414
    8. ' conversion' → logprob: -19.008615493774414
    9. ' convertir' → logprob: -19.258615493774414
    10. ' covert' → logprob: -19.383615493774414

Token 185: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0001254693343071267
    2. '_' → logprob: -9.000125885009766
    3. '_t' → logprob: -14.000125885009766
    4. 'To' → logprob: -15.500125885009766
    5. ' _' → logprob: -15.750125885009766
    6. 'to' → logprob: -16.500125885009766
    7. '_str' → logprob: -17.000125885009766
    8. '_
' → logprob: -17.125125885009766
    9. '```' → logprob: -17.125125885009766
    10. '(' → logprob: -17.250125885009766

Token 186: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.02105036936700344
    2. 'int' → logprob: -4.396050453186035
    3. 'ints' → logprob: -4.771050453186035
    4. '_list' → logprob: -12.271050453186035
    5. 'nts' → logprob: -12.646050453186035
    6. 't' → logprob: -12.646050453186035
    7. '_t' → logprob: -12.646050453186035
    8. 'Ints' → logprob: -12.771050453186035
    9. '```' → logprob: -13.146050453186035
    10. 'nt' → logprob: -13.146050453186035

Token 187: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0019066202221438289
    2. 'ts' → logprob: -6.376906394958496
    3. '_ts' → logprob: -9.626906394958496
    4. '(s' → logprob: -10.126906394958496
    5. 'sts' → logprob: -10.126906394958496
    6. '_s' → logprob: -10.876906394958496
    7. 'cts' → logprob: -11.126906394958496
    8. 'ints' → logprob: -12.251906394958496
    9. 'uts' → logprob: -12.501906394958496
    10. 't' → logprob: -12.626906394958496

Token 188: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00026264708139933646
    2. '(' → logprob: -8.250262260437012
    3. '(strings' → logprob: -14.375262260437012
    4. 'str' → logprob: -15.125262260437012
    5. '(int' → logprob: -15.375262260437012
    6. ' (' → logprob: -15.500262260437012
    7. '=str' → logprob: -17.625263214111328
    8. '(
' → logprob: -17.750263214111328
    9. ':str' → logprob: -17.750263214111328
    10. '(st' → logprob: -17.875263214111328

Token 189: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.511406809295295e-06
    2. ')' → logprob: -12.750006675720215
    3. ')s' → logprob: -13.250006675720215
    4. ' strs' → logprob: -14.250006675720215
    5. 'sts' → logprob: -14.750006675720215
    6. '(s' → logprob: -15.000006675720215
    7. '   ' → logprob: -15.125006675720215
    8. ')
' → logprob: -16.8750057220459
    9. ' s' → logprob: -16.8750057220459
    10. 'ints' → logprob: -17.7500057220459

Token 190: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.632542913896032e-05
    2. ')
' → logprob: -10.000046730041504
    3. '()' → logprob: -14.750046730041504
    4. ' )' → logprob: -15.250046730041504
    5. '[' → logprob: -16.125045776367188
    6. '   ' → logprob: -17.375045776367188
    7. '())' → logprob: -17.500045776367188
    8. ')

' → logprob: -17.875045776367188
    9. '))' → logprob: -18.250045776367188
    10. ']' → logprob: -18.500045776367188

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6820961833000183
    2. 'a' → logprob: -1.057096242904663
    3. ' a' → logprob: -1.932096242904663
    4. '(a' → logprob: -6.932096004486084
    5. '(' → logprob: -7.932096004486084
    6. ' (' → logprob: -8.682096481323242
    7. ',' → logprob: -8.682096481323242
    8. '    
' → logprob: -8.807096481323242
    9. ',a' → logprob: -9.682096481323242
    10. ')' → logprob: -10.182096481323242

Token 192: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.00023894020705483854
    2. ' a' → logprob: -8.375239372253418
    3. '   ' → logprob: -12.500239372253418
    4. '(a' → logprob: -13.250239372253418
    5. '    
' → logprob: -14.375239372253418
    6. 'x' → logprob: -14.750239372253418
    7. 'c' → logprob: -15.000239372253418
    8. '	a' → logprob: -15.000239372253418
    9. 'def' → logprob: -15.375239372253418
    10. '_a' → logprob: -15.750239372253418

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015169414109550416
    2. ',b' → logprob: -8.875151634216309
    3. ' ,' → logprob: -11.375151634216309
    4. ',
' → logprob: -15.750151634216309
    5. '‌,' → logprob: -16.625152587890625
    6. '=' → logprob: -17.875152587890625
    7. ',\
' → logprob: -18.000152587890625
    8. 'b' → logprob: -18.125152587890625
    9. ',a' → logprob: -18.125152587890625
    10. ',c' → logprob: -18.250152587890625

Token 194: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.10020763427019119
    2. 'b' → logprob: -2.350207567214966
    3. '<|end|>' → logprob: -14.600207328796387
    4. ' ' → logprob: -15.225207328796387
    5. ' =' → logprob: -16.600208282470703
    6. '_b' → logprob: -16.975208282470703
    7. '=b' → logprob: -17.225208282470703
    8. '    ' → logprob: -17.225208282470703
    9. '	b' → logprob: -17.600208282470703
    10. '=' → logprob: -17.600208282470703

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048588622361421585
    2. '=' → logprob: -3.048588514328003
    3. ',' → logprob: -13.798588752746582
    4. ' =
' → logprob: -16.423587799072266
    5. ')' → logprob: -16.798587799072266
    6. '<|end|>' → logprob: -17.423587799072266
    7. ' ' → logprob: -17.798587799072266
    8. ' =)' → logprob: -18.173587799072266
    9. '   ' → logprob: -18.673587799072266
    10. '＝' → logprob: -18.798587799072266

Token 196: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.1269291490316391
    2. ' assign' → logprob: -2.1269290447235107
    3. '(assign' → logprob: -14.87692928314209
    4. '	assign' → logprob: -15.62692928314209
    5. '_assign' → logprob: -16.251928329467773
    6. ' assigns' → logprob: -16.376928329467773
    7. 'assignment' → logprob: -16.876928329467773
    8. '.assign' → logprob: -17.001928329467773
    9. 'assigned' → logprob: -17.501928329467773
    10. ' asign' → logprob: -17.501928329467773

Token 197: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -1.9361264946837764e-07
    2. 'values' → logprob: -16.375
    3. '_vals' → logprob: -17.0
    4. '_' → logprob: -17.75
    5. '_value' → logprob: -19.375
    6. '_int' → logprob: -19.75
    7. '(values' → logprob: -20.0
    8. '_VALUES' → logprob: -20.25
    9. ' values' → logprob: -20.375
    10. '(int' → logprob: -20.75

Token 198: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -9.253090865968261e-06
    2. ' (' → logprob: -12.000009536743164
    3. 'ints' → logprob: -13.000009536743164
    4. '(' → logprob: -14.875009536743164
    5. '(
' → logprob: -15.875009536743164
    6. '(Int' → logprob: -16.000009536743164
    7. '(in' → logprob: -16.125009536743164
    8. '```' → logprob: -16.750009536743164
    9. 'int' → logprob: -17.750009536743164
    10. ' ints' → logprob: -17.875009536743164

Token 199: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0036031559575349092
    2. 'ts' → logprob: -5.628602981567383
    3. 't' → logprob: -13.378602981567383
    4. ')' → logprob: -14.378602981567383
    5. '[' → logprob: -15.503602981567383
    6. 'sts' → logprob: -15.753602981567383
    7. '(' → logprob: -16.003602981567383
    8. 'gs' → logprob: -16.628602981567383
    9. '```' → logprob: -16.628602981567383
    10. '   ' → logprob: -17.003602981567383

Token 200: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005538671393878758
    2. ')
' → logprob: -7.500554084777832
    3. '   ' → logprob: -14.875554084777832
    4. ')

' → logprob: -15.000554084777832
    5. ')
' → logprob: -16.625553131103516
    6. ' )' → logprob: -16.875553131103516
    7. ' ' → logprob: -17.375553131103516
    8. '):' → logprob: -17.500553131103516
    9. '),' → logprob: -17.750553131103516
    10. '()' → logprob: -18.000553131103516

Token 201: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.688128650188446
    2. '   ' → logprob: -1.0631287097930908
    3. ' c' → logprob: -2.063128709793091
    4. 'cnt' → logprob: -4.563128471374512
    5. 'diff' → logprob: -5.313128471374512
    6. ' cnt' → logprob: -5.313128471374512
    7. ' diff' → logprob: -5.688128471374512
    8. 'difference' → logprob: -7.813128471374512
    9. 'd' → logprob: -8.438128471374512
    10. '
' → logprob: -8.688128471374512

Token 202: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.08155074715614319
    2. 'diff' → logprob: -2.7065508365631104
    3. ' c' → logprob: -5.456550598144531
    4. ' diff' → logprob: -6.081550598144531
    5. 'd' → logprob: -6.331550598144531
    6. 'difference' → logprob: -6.456550598144531
    7. '   ' → logprob: -7.206550598144531
    8. 'cnt' → logprob: -7.331550598144531
    9. 'result' → logprob: -10.206550598144531
    10. 'dif' → logprob: -10.206550598144531

Token 203: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015047440538182855
    2. '=' → logprob: -6.501504898071289
    3. ',' → logprob: -13.376504898071289
    4. ' =
' → logprob: -14.251504898071289
    5. ' ,' → logprob: -16.37650489807129
    6. 's' → logprob: -17.62650489807129
    7. ' =
' → logprob: -17.75150489807129
    8. ')' → logprob: -17.87650489807129
    9. ' =)' → logprob: -17.87650489807129
    10. '.' → logprob: -18.12650489807129

Token 204: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.023247109726071358
    2. ' compute' → logprob: -3.773247003555298
    3. '   ' → logprob: -14.023246765136719
    4. 'b' → logprob: -14.523246765136719
    5. '
' → logprob: -15.773246765136719
    6. '  ' → logprob: -16.77324676513672
    7. ' ' → logprob: -17.14824676513672
    8. '.compute' → logprob: -17.64824676513672
    9. 'computer' → logprob: -18.39824676513672
    10. ' b' → logprob: -18.52324676513672

Token 205: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.250000953674316
    3. '_increment' → logprob: -15.625000953674316
    4. 'difference' → logprob: -15.875000953674316
    5. '_distance' → logprob: -18.875
    6. '_diff' → logprob: -19.625
    7. '_value' → logprob: -20.125
    8. ' difference' → logprob: -20.25
    9. '_sum' → logprob: -20.375
    10. '_b' → logprob: -20.5

Token 206: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.735893965815194e-05
    2. '(' → logprob: -11.000017166137695
    3. ' (' → logprob: -14.750017166137695
    4. '(b' → logprob: -15.625017166137695
    5. '(
' → logprob: -16.375017166137695
    6. 'a' → logprob: -18.750017166137695
    7. '(c' → logprob: -19.500017166137695
    8. '(A' → logprob: -20.000017166137695
    9. '   ' → logprob: -21.000017166137695
    10. '(i' → logprob: -21.125017166137695

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003305784775875509
    2. ',b' → logprob: -8.125330924987793
    3. ' ,' → logprob: -10.375330924987793
    4. ',
' → logprob: -13.375330924987793
    5. 'b' → logprob: -13.500330924987793
    6. '   ' → logprob: -15.500330924987793
    7. ',c' → logprob: -16.875329971313477
    8. ' b' → logprob: -17.375329971313477
    9. '',' → logprob: -18.125329971313477
    10. ',",' → logprob: -18.125329971313477

Token 208: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5759394764900208
    2. 'b' → logprob: -0.8259394764900208
    3. ')b' → logprob: -17.325939178466797
    4. ' ' → logprob: -18.575939178466797
    5. '	b' → logprob: -18.575939178466797
    6. ' б' → logprob: -19.950939178466797
    7. '<|end|>' → logprob: -20.075939178466797
    8. ')' → logprob: -20.075939178466797
    9. '>b' → logprob: -20.700939178466797
    10. '_b' → logprob: -21.575939178466797

Token 209: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002477677771821618
    2. ')
' → logprob: -6.002477645874023
    3. ')

' → logprob: -13.627477645874023
    4. ')c' → logprob: -15.627477645874023
    5. ' )' → logprob: -15.627477645874023
    6. '   ' → logprob: -15.752477645874023
    7. ')
' → logprob: -16.377477645874023
    8. ')a' → logprob: -17.502477645874023
    9. ')#' → logprob: -17.752477645874023
    10. '),' → logprob: -17.877477645874023

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04408818483352661
    2. ' result' → logprob: -4.044088363647461
    3. 'result' → logprob: -4.919088363647461
    4. ' cnt' → logprob: -5.169088363647461
    5. ' total' → logprob: -5.544088363647461
    6. ' res' → logprob: -5.919088363647461
    7. 'cnt' → logprob: -6.294088363647461
    8. 'total' → logprob: -7.044088363647461
    9. 'res' → logprob: -7.669088363647461
    10. '    
' → logprob: -7.919088363647461

Token 211: ' cnt' (ID: 27340)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.7699270248413086
    2. 'result' → logprob: -1.3949270248413086
    3. ' cnt' → logprob: -2.1449270248413086
    4. ' total' → logprob: -3.0199270248413086
    5. 'cnt' (adapté à ' cnt') → logprob: -3.1449270248413086
    6. ' res' → logprob: -3.6449270248413086
    7. 'total' → logprob: -4.019927024841309
    8. 'res' → logprob: -4.269927024841309
    9. '   ' → logprob: -5.144927024841309
    10. ' ans' → logprob: -5.644927024841309

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0052342405542731285
    2. '=' → logprob: -5.255234241485596
    3. ' =
' → logprob: -15.880233764648438
    4. ' ' → logprob: -16.005233764648438
    5. ',' → logprob: -16.755233764648438
    6. ')' → logprob: -17.130233764648438
    7. ' ' → logprob: -17.755233764648438
    8. ' =)' → logprob: -18.130233764648438
    9. '  ' → logprob: -18.505233764648438
    10. ' +=' → logprob: -18.880233764648438

Token 213: ' iterate' (ID: 63166)
  Prédit: 'iterate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iterate' → logprob: -0.17994529008865356
    2. ' iterate' → logprob: -1.8049452304840088
    3. 'iter' → logprob: -8.67994499206543
    4. ' iter' → logprob: -10.92994499206543
    5. '   ' → logprob: -12.42994499206543
    6. ' ' → logprob: -12.42994499206543
    7. '(iter' → logprob: -13.67994499206543
    8. 'initialize' → logprob: -13.80494499206543
    9. '  ' → logprob: -14.80494499206543
    10. 'int' → logprob: -15.05494499206543

Token 214: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -1.9361264946837764e-07
    2. 'and' → logprob: -15.875
    3. '_' → logprob: -17.25
    4. '_an' → logprob: -19.25
    5. '_
' → logprob: -20.0
    6. ' and' → logprob: -20.25
    7. '_AND' → logprob: -20.25
    8. '_a' → logprob: -20.5
    9. '_for' → logprob: -21.5
    10. '_end' → logprob: -21.5

Token 215: '_sum' (ID: 29859)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0001146291324403137
    2. '_sum' → logprob: -9.250114440917969
    3. 's' → logprob: -11.125114440917969
    4. 'summ' → logprob: -13.625114440917969
    5. '(sum' → logprob: -14.000114440917969
    6. ' sum' → logprob: -14.250114440917969
    7. 'm' → logprob: -15.375114440917969
    8. 'um' → logprob: -15.625114440917969
    9. 'sup' → logprob: -16.12511444091797
    10. 'Sum' → logprob: -16.50011444091797

Token 216: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0004911953583359718
    2. '(' → logprob: -7.625491142272949
    3. '(
' → logprob: -13.00049114227295
    4. ' (' → logprob: -14.25049114227295
    5. '(

' → logprob: -16.250492095947266
    6. '(C' → logprob: -16.375492095947266
    7. '(cnt' → logprob: -16.625492095947266
    8. '(ci' → logprob: -17.250492095947266
    9. '(count' → logprob: -17.750492095947266
    10. '((' → logprob: -18.125492095947266

Token 217: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011715330183506012
    2. ')
' → logprob: -6.751171588897705
    3. '   ' → logprob: -14.126171112060547
    4. ' )' → logprob: -14.751171112060547
    5. ')
' → logprob: -16.501171112060547
    6. '()' → logprob: -17.376171112060547
    7. ')

' → logprob: -17.501171112060547
    8. ' ' → logprob: -18.501171112060547
    9. '),' → logprob: -19.251171112060547
    10. ')c' → logprob: -19.501171112060547

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003989235032349825
    2. ' result' → logprob: -6.003989219665527
    3. 'result' → logprob: -7.003989219665527
    4. '    
' → logprob: -8.628989219665527
    5. ' cnt' → logprob: -9.003989219665527
    6. ' return' → logprob: -9.128989219665527
    7. 'cnt' → logprob: -9.503989219665527
    8. '
' → logprob: -10.003989219665527
    9. '    ' → logprob: -11.503989219665527
    10. '```' → logprob: -11.503989219665527

Token 219: ' result' (ID: 1534)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.19290144741535187
    2. 'result' (adapté à ' result') → logprob: -2.317901372909546
    3. ' cnt' → logprob: -3.067901372909546
    4. '   ' → logprob: -4.692901611328125
    5. ' result' → logprob: -4.692901611328125
    6. 'return' → logprob: -5.317901611328125
    7. 'print' → logprob: -5.942901611328125
    8. 'res' → logprob: -6.317901611328125
    9. ' return' → logprob: -7.192901611328125
    10. 'counter' → logprob: -8.067901611328125

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01824195683002472
    2. '=' → logprob: -4.018241882324219
    3. '_' → logprob: -9.393241882324219
    4. ' ' → logprob: -12.268241882324219
    5. ')' → logprob: -13.393241882324219
    6. ' ' → logprob: -13.893241882324219
    7. 's' → logprob: -15.018241882324219
    8. ' =
' → logprob: -15.518241882324219
    9. ' _' → logprob: -16.26824188232422
    10. ' =)' → logprob: -16.26824188232422

Token 221: ' subtract' (ID: 71973)
  Prédit: ' subtract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subtract' → logprob: -0.018155092373490334
    2. 'subtract' → logprob: -4.018155097961426
    3. 'sub' → logprob: -12.893155097961426
    4. 'Subtract' → logprob: -14.018155097961426
    5. '	sub' → logprob: -14.143155097961426
    6. ' sub' → logprob: -15.393155097961426
    7. ' ' → logprob: -15.643155097961426
    8. ' subt' → logprob: -15.643155097961426
    9. '   ' → logprob: -15.768155097961426
    10. '.subtract' → logprob: -16.14315414428711

Token 222: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -3.128163257315464e-07
    2. 'a' → logprob: -15.125
    3. '_' → logprob: -21.75
    4. '_b' → logprob: -22.125
    5. '_c' → logprob: -22.75
    6. '	a' → logprob: -22.75
    7. '­a' → logprob: -22.75
    8. ' _' → logprob: -23.0
    9. '```' → logprob: -23.0
    10. '(a' → logprob: -24.125

Token 223: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.0004839385801460594
    2. '(' → logprob: -7.750483989715576
    3. '(count' → logprob: -9.875483512878418
    4. ' (' → logprob: -14.125483512878418
    5. '(counter' → logprob: -14.375483512878418
    6. '(
' → logprob: -15.750483512878418
    7. '(cont' → logprob: -16.250484466552734
    8. '[cnt' → logprob: -16.250484466552734
    9. '(c' → logprob: -16.375484466552734
    10. '(result' → logprob: -17.000484466552734

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.9186317482963204e-05
    2. ' ,' → logprob: -10.500049591064453
    3. ',a' → logprob: -10.875049591064453
    4. ',
' → logprob: -14.125049591064453
    5. 'a' → logprob: -14.125049591064453
    6. ',result' → logprob: -14.625049591064453
    7. ',c' → logprob: -15.375049591064453
    8. ')' → logprob: -15.875049591064453
    9. 'result' → logprob: -16.125049591064453
    10. '(' → logprob: -16.500049591064453

Token 225: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0067154900170862675
    2. ' a' → logprob: -5.006715297698975
    3. '	a' → logprob: -16.506715774536133
    4. '   ' → logprob: -17.256715774536133
    5. ')a' → logprob: -17.631715774536133
    6. ' ' → logprob: -20.006715774536133
    7. ')' → logprob: -20.006715774536133
    8. '(a' → logprob: -20.631715774536133
    9. '"a' → logprob: -20.756715774536133
    10. '_a' → logprob: -20.756715774536133

Token 226: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02975199744105339
    2. ')
' → logprob: -3.529752016067505
    3. ')
' → logprob: -14.279751777648926
    4. '   ' → logprob: -14.654751777648926
    5. ' )' → logprob: -15.529751777648926
    6. ')

' → logprob: -15.529751777648926
    7. ' )
' → logprob: -17.029752731323242
    8. ')`
' → logprob: -18.154752731323242
    9. ')return' → logprob: -18.654752731323242
    10. ')\
' → logprob: -19.279752731323242

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015316474018618464
    2. '    
' → logprob: -7.126531600952148
    3. 'print' → logprob: -7.751531600952148
    4. '
' → logprob: -8.376531600952148
    5. ' return' → logprob: -11.001531600952148
    6. 'return' → logprob: -11.126531600952148
    7. '<|end|>' → logprob: -11.251531600952148
    8. ' print' → logprob: -12.001531600952148
    9. ')' → logprob: -12.376531600952148
    10. '```' → logprob: -12.876531600952148

Token 228: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4809802770614624
    2. '   ' → logprob: -0.9809802770614624
    3. ' print' → logprob: -4.980980396270752
    4. '	print' → logprob: -12.230979919433594
    5. '    
' → logprob: -12.730979919433594
    6. '
' → logprob: -13.480979919433594
    7. '```' → logprob: -13.980979919433594
    8. '    ' → logprob: -14.605979919433594
    9. 'return' → logprob: -15.230979919433594
    10. 'pr' → logprob: -15.480979919433594

Token 229: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.07889683544635773
    2. '(' → logprob: -2.5788967609405518
    3. ' (' → logprob: -12.578896522521973
    4. '('' → logprob: -13.828896522521973
    5. 'result' → logprob: -14.078896522521973
    6. '()' → logprob: -14.203896522521973
    7. '(
' → logprob: -14.953896522521973
    8. '(res' → logprob: -15.203896522521973
    9. '(results' → logprob: -15.703896522521973
    10. '(resultado' → logprob: -16.20389747619629

Token 230: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.125
    3. ')
' → logprob: -16.375
    4. '()' → logprob: -18.25
    5. ')`' → logprob: -19.0
    6. '())' → logprob: -19.875
    7. '(' → logprob: -19.875
    8. '))' → logprob: -20.125
    9. '')' → logprob: -20.125
    10. '")' → logprob: -21.5

Token 231: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5789626836776733
    2. 'main' → logprob: -0.8289626836776733
    3. 'i' → logprob: -6.328962802886963
    4. '
' → logprob: -7.578962802886963
    5. '#' → logprob: -8.828962326049805
    6. '\n' → logprob: -9.078962326049805
    7. 'm' → logprob: -9.328962326049805
    8. ' main' → logprob: -9.578962326049805
    9. 'n' → logprob: -9.953962326049805
    10. '(main' → logprob: -9.953962326049805

Token 232: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.477691113948822
    2. '(' → logprob: -0.977691113948822
    3. '(
' → logprob: -6.227691173553467
    4. '()
' → logprob: -6.727691173553467
    5. '#' → logprob: -8.477690696716309
    6. '
' → logprob: -9.227690696716309
    7. '```' → logprob: -10.227690696716309
    8. '\n' → logprob: -10.977690696716309
    9. '\' → logprob: -11.227690696716309
    10. '()\' → logprob: -11.727690696716309


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 230
Tokens correctement prédits (1ère position, stricte): 105
Tokens correctement prédits (1ère position, avec adaptation): 116
Tokens correctement prédits (top 10): 202
Précision stricte (1ère position): 45.65%
Précision adaptée (1ère position): 50.43%
Précision (top 10): 87.83%
================================================================================
