================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:47:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
user_input_integer = int(input())
user_input_string = input()
threshold_value = 3200
output_string_if_above_threshold = user_input_string
output_string_if_below_threshold = 'red'

if user_input_integer >= threshold_value:
    print(output_string_if_above_threshold)
else:
    print(output_string_if_below_threshold)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'user' (ID: 1428)
  → Token d'amorce (pas de prédiction)

Token 1: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 2: '_integer' (ID: 82911)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2324783354997635
    2. '=' → logprob: -1.982478380203247
    3. ' =' → logprob: -3.357478380203247
    4. ')' → logprob: -4.482478141784668
    5. '[' → logprob: -4.482478141784668
    6. '.' → logprob: -5.357478141784668
    7. '```' → logprob: -5.982478141784668
    8. ':' → logprob: -6.357478141784668
    9. ' ' → logprob: -7.107478141784668
    10. '(' → logprob: -7.232478141784668

Token 4: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7591593861579895
    2. ' int' → logprob: -0.8841593861579895
    3. ' input' → logprob: -2.7591593265533447
    4. 'input' → logprob: -3.7591593265533447
    5. 'int' → logprob: -4.009159564971924
    6. '0' → logprob: -4.384159564971924
    7. ' user' → logprob: -7.009159564971924
    8. '1' → logprob: -8.509159088134766
    9. 'user' → logprob: -8.884159088134766
    10. '10' → logprob: -10.134159088134766

Token 5: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0061264485120773315
    2. '(user' → logprob: -5.256126403808594
    3. 'user' → logprob: -7.381126403808594
    4. '```' → logprob: -9.756126403808594
    5. '`' → logprob: -10.131126403808594
    6. 'User' → logprob: -10.506126403808594
    7. '("("' → logprob: -10.756126403808594
    8. '('' → logprob: -10.756126403808594
    9. '(User' → logprob: -11.131126403808594
    10. ''' → logprob: -11.131126403808594

Token 6: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010035126470029354
    2. ')' → logprob: -7.626003742218018
    3. '()' → logprob: -9.25100326538086
    4. '(user' → logprob: -9.37600326538086
    5. '(
' → logprob: -9.62600326538086
    6. '('' → logprob: -9.87600326538086
    7. '("("' → logprob: -10.00100326538086
    8. '```' → logprob: -10.50100326538086
    9. ' (' → logprob: -10.75100326538086
    10. '(()' → logprob: -11.00100326538086

Token 7: 'user' (ID: 1428)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05491997301578522
    2. '%' → logprob: -3.179919958114624
    3. 'if' → logprob: -5.054920196533203
    4. '*' → logprob: -6.054920196533203
    5. ' if' → logprob: -7.304920196533203
    6. '=' → logprob: -7.679920196533203
    7. '+
' → logprob: -7.679920196533203
    8. ' ' → logprob: -8.304920196533203
    9. '_' → logprob: -8.429920196533203
    10. ')' → logprob: -8.679920196533203

Token 8: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.038933929055929184
    2. '_input' → logprob: -3.2889339923858643
    3. '_.' → logprob: -8.538933753967285
    4. '._' → logprob: -8.913933753967285
    5. '_p' → logprob: -9.163933753967285
    6. '_put' → logprob: -9.538933753967285
    7. '_output' → logprob: -10.038933753967285
    8. ' _' → logprob: -10.163933753967285
    9. '_user' → logprob: -10.288933753967285
    10. '_f' → logprob: -10.288933753967285

Token 9: '_string' (ID: 8609)
  Prédit: '_integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_integer' → logprob: -0.02061452530324459
    2. '_' → logprob: -3.8956146240234375
    3. '_in' → logprob: -10.895614624023438
    4. '_Integer' → logprob: -11.270614624023438
    5. '_INTEGER' → logprob: -11.395614624023438
    6. ' _' → logprob: -11.520614624023438
    7. '_variable' → logprob: -12.520614624023438
    8. ')' → logprob: -12.895614624023438
    9. '_)' → logprob: -13.270614624023438
    10. '```' → logprob: -13.520614624023438

Token 10: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8462381362915039
    2. '[' → logprob: -0.8462381362915039
    3. '+' → logprob: -2.596238136291504
    4. ')' → logprob: -2.971238136291504
    5. '_' → logprob: -4.971238136291504
    6. '(' → logprob: -6.346238136291504
    7. '.strip' → logprob: -6.971238136291504
    8. '```' → logprob: -6.971238136291504
    9. ' +' → logprob: -7.221238136291504
    10. '[]' → logprob: -7.471238136291504

Token 11: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5232495665550232
    2. 'input' → logprob: -0.8982495665550232
    3. 'str' → logprob: -10.023249626159668
    4. ' str' → logprob: -10.273249626159668
    5. '=input' → logprob: -11.273249626159668
    6. ' ' → logprob: -11.648249626159668
    7. '(input' → logprob: -11.648249626159668
    8. '"' → logprob: -12.648249626159668
    9. '""' → logprob: -13.023249626159668
    10. ''' → logprob: -13.148249626159668

Token 12: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006832352373749018
    2. '(' → logprob: -5.006832122802734
    3. ' ()' → logprob: -9.881832122802734
    4. '())' → logprob: -11.006832122802734
    5. '`()' → logprob: -11.756832122802734
    6. ')' → logprob: -11.881832122802734
    7. '```' → logprob: -11.881832122802734
    8. '()`' → logprob: -12.381832122802734
    9. '()(' → logprob: -12.506832122802734
    10. ' ' → logprob: -12.506832122802734

Token 13: 'threshold' (ID: 67677)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08437228947877884
    2. 'print' → logprob: -3.2093722820281982
    3. 'result' → logprob: -4.209372520446777
    4. 'i' → logprob: -4.459372520446777
    5. 'for' → logprob: -5.334372520446777
    6. '#' → logprob: -5.709372520446777
    7. 'sum' → logprob: -6.209372520446777
    8. 'n' → logprob: -7.209372520446777
    9. 'a' → logprob: -7.834372520446777
    10. 'output' → logprob: -8.084372520446777

Token 14: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08303667604923248
    2. ' _' → logprob: -3.5830366611480713
    3. ' =' → logprob: -4.33303689956665
    4. ' ' → logprob: -4.45803689956665
    5. ')' → logprob: -4.95803689956665
    6. '_space' → logprob: -5.20803689956665
    7. '=' → logprob: -5.33303689956665
    8. '>' → logprob: -5.58303689956665
    9. ' >' → logprob: -6.58303689956665
    10. ' <=' → logprob: -6.58303689956665

Token 15: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.46324458718299866
    2. ' =' → logprob: -1.8382445573806763
    3. ' _' → logprob: -2.963244676589966
    4. ' >=' → logprob: -2.963244676589966
    5. ' >' → logprob: -3.338244676589966
    6. ' ' → logprob: -3.963244676589966
    7. ' <=' → logprob: -4.338244438171387
    8. '<|end|>' → logprob: -4.463244438171387
    9. ')' → logprob: -4.588244438171387
    10. '>' → logprob: -5.088244438171387

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8358447551727295
    2. '10' → logprob: -0.9608447551727295
    3. '100' → logprob: -1.7108447551727295
    4. '50' → logprob: -6.460844993591309
    5. '0' → logprob: -6.710844993591309
    6. '5' → logprob: -8.460844993591309
    7. '20' → logprob: -9.085844993591309
    8. '1' → logprob: -10.585844993591309
    9. 'int' → logprob: -10.585844993591309
    10. '42' → logprob: -11.960844993591309

Token 17: '320' (ID: 15415)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1881914734840393
    2. '100' → logprob: -1.8131914138793945
    3. ' ' → logprob: -5.4381914138793945
    4. '50' → logprob: -6.4381914138793945
    5. 'user' → logprob: -6.6881914138793945
    6. '0' → logprob: -7.0631914138793945
    7. '5' → logprob: -8.813191413879395
    8. 'int' → logprob: -9.188191413879395
    9. '1' → logprob: -10.063191413879395
    10. '20' → logprob: -10.813191413879395

Token 18: '0' (ID: 15)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5220630764961243
    2. ' if' → logprob: -1.2720630168914795
    3. '
' → logprob: -3.2720630168914795
    4. ':' → logprob: -3.5220630168914795
    5. '\n' → logprob: -4.647063255310059
    6. '>' → logprob: -5.022063255310059
    7. '\' → logprob: -5.022063255310059
    8. '+' → logprob: -5.022063255310059
    9. '+
' → logprob: -5.272063255310059
    10. '```' → logprob: -5.522063255310059

Token 19: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0573166087269783
    2. '
' → logprob: -2.932316541671753
    3. ' if' → logprob: -6.182316780090332
    4. '\n' → logprob: -8.182316780090332
    5. ' 
' → logprob: -10.432316780090332
    6. '```' → logprob: -10.932316780090332
    7. 'for' → logprob: -11.807316780090332
    8. '  
' → logprob: -11.932316780090332
    9. 'i' → logprob: -12.307316780090332
    10. 'print' → logprob: -12.557316780090332

Token 20: 'output' (ID: 6130)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00020783171930816025
    2. ' if' → logprob: -9.000207901000977
    3. '\n' → logprob: -10.250207901000977
    4. '
' → logprob: -10.375207901000977
    5. 'for' → logprob: -11.625207901000977
    6. '```' → logprob: -12.375207901000977
    7. 'print' → logprob: -13.000207901000977
    8. '\
' → logprob: -14.625207901000977
    9. '``' → logprob: -15.000207901000977
    10. '\' → logprob: -15.250207901000977

Token 21: '_string' (ID: 8609)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23302996158599854
    2. ' =' → logprob: -1.7330299615859985
    3. '_' → logprob: -3.733029842376709
    4. 'if' → logprob: -5.733029842376709
    5. ' ' → logprob: -6.108029842376709
    6. ':' → logprob: -7.108029842376709
    7. ' if' → logprob: -8.358030319213867
    8. '.' → logprob: -8.983030319213867
    9. '```' → logprob: -9.108030319213867
    10. '_if' → logprob: -9.358030319213867

Token 22: '_if' (ID: 25821)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43456265330314636
    2. '=' → logprob: -1.6845626831054688
    3. '_' → logprob: -1.8095626831054688
    4. ' ' → logprob: -6.309562683105469
    5. ' +=' → logprob: -7.309562683105469
    6. ' _' → logprob: -8.309562683105469
    7. '<|end|>' → logprob: -9.434562683105469
    8. '[' → logprob: -9.809562683105469
    9. '_space' → logprob: -9.934562683105469
    10. '_=' → logprob: -10.059562683105469

Token 23: '_ab' (ID: 53632)
  Prédit: ' user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.11683531105518341
    2. 'user' → logprob: -2.241835355758667
    3. '_user' → logprob: -5.991835117340088
    4. '_' → logprob: -7.616835117340088
    5. ' ' → logprob: -7.866835117340088
    6. '"user' → logprob: -8.616835594177246
    7. '(user' → logprob: -8.991835594177246
    8. ' '' → logprob: -9.866835594177246
    9. ''user' → logprob: -10.116835594177246
    10. ''' → logprob: -10.241835594177246

Token 24: 'ove' (ID: 1048)
  Prédit: 'ove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ove' → logprob: -0.006987803149968386
    2. 're' → logprob: -5.756987571716309
    3. 'ov' → logprob: -6.756987571716309
    4. 'r' → logprob: -8.131987571716309
    5. 'sent' → logprob: -8.131987571716309
    6. 've' → logprob: -8.131987571716309
    7. 's' → logprob: -8.256987571716309
    8. '_user' → logprob: -8.631987571716309
    9. 'user' → logprob: -8.756987571716309
    10. '>' → logprob: -8.881987571716309

Token 25: '_threshold' (ID: 51747)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.041184186935424805
    2. '=' → logprob: -3.416184186935425
    3. '_' → logprob: -4.916184425354004
    4. '=_' → logprob: -10.541184425354004
    5. '_threshold' → logprob: -11.041184425354004
    6. ' ' → logprob: -11.041184425354004
    7. '_=' → logprob: -11.041184425354004
    8. '_space' → logprob: -11.166184425354004
    9. ' _' → logprob: -11.541184425354004
    10. '_equal' → logprob: -11.666184425354004

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08897513151168823
    2. '=' → logprob: -2.463975191116333
    3. '_' → logprob: -10.963974952697754
    4. ' ' → logprob: -11.588974952697754
    5. ',' → logprob: -12.713974952697754
    6. ')' → logprob: -13.588974952697754
    7. ' =
' → logprob: -14.463974952697754
    8. 'if' → logprob: -14.588974952697754
    9. ' ==' → logprob: -14.713974952697754
    10. '>' → logprob: -14.713974952697754

Token 27: ' user' (ID: 1825)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2668071985244751
    2. ' "' → logprob: -1.766807198524475
    3. ''' → logprob: -3.2668070793151855
    4. '""' → logprob: -4.5168070793151855
    5. '"user' → logprob: -5.1418070793151855
    6. ' ""' → logprob: -5.6418070793151855
    7. ' '' → logprob: -6.2668070793151855
    8. ' ' → logprob: -7.3918070793151855
    9. '''' → logprob: -7.5168070793151855
    10. '"""' → logprob: -8.516807556152344

Token 28: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00040540905320085585
    2. '_output' → logprob: -8.500405311584473
    3. '_' → logprob: -9.000405311584473
    4. '_string' → logprob: -10.500405311584473
    5. '_user' → logprob: -10.500405311584473
    6. '_value' → logprob: -12.125405311584473
    7. '_name' → logprob: -12.250405311584473
    8. '_s' → logprob: -12.875405311584473
    9. '```' → logprob: -13.375405311584473
    10. '_in' → logprob: -13.500405311584473

Token 29: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.09789066016674042
    2. '_integer' → logprob: -2.847890615463257
    3. '_' → logprob: -3.347890615463257
    4. 'string' → logprob: -10.722890853881836
    5. '```' → logprob: -10.972890853881836
    6. '_value' → logprob: -11.097890853881836
    7. ' _' → logprob: -11.472890853881836
    8. '_variable' → logprob: -11.972890853881836
    9. '_strings' → logprob: -12.097890853881836
    10. '_String' → logprob: -12.472890853881836

Token 30: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: 'output' (ID: 6130)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24439798295497894
    2. '
' → logprob: -2.3693978786468506
    3. ' if' → logprob: -2.6193978786468506
    4. '<|end|>' → logprob: -3.6193978786468506
    5. '\n' → logprob: -3.9943978786468506
    6. '```' → logprob: -7.24439811706543
    7. '_' → logprob: -7.49439811706543
    8. '\' → logprob: -7.49439811706543
    9. 'i' → logprob: -7.99439811706543
    10. '#' → logprob: -8.11939811706543

Token 32: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.01757194660604
    2. '_' → logprob: -4.642571926116943
    3. ' =' → logprob: -5.767571926116943
    4. '=' → logprob: -6.267571926116943
    5. '_str' → logprob: -7.142571926116943
    6. '_value' → logprob: -7.267571926116943
    7. '_strings' → logprob: -7.767571926116943
    8. '_s' → logprob: -8.142572402954102
    9. '_if' → logprob: -9.392572402954102
    10. '=_' → logprob: -10.142572402954102

Token 33: '_if' (ID: 25821)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10118333250284195
    2. ' =' → logprob: -3.2261834144592285
    3. '_if' → logprob: -3.2261834144592285
    4. '_' → logprob: -4.2261834144592285
    5. '_=' → logprob: -7.2261834144592285
    6. 'if' → logprob: -7.7261834144592285
    7. '+=' → logprob: -7.8511834144592285
    8. ' +=' → logprob: -8.97618293762207
    9. '_lower' → logprob: -9.22618293762207
    10. '=_' → logprob: -9.35118293762207

Token 34: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0049111428670585155
    2. '_ab' → logprob: -6.379910945892334
    3. '_not' → logprob: -6.629910945892334
    4. 'Below' → logprob: -8.254911422729492
    5. 'below' → logprob: -8.379911422729492
    6. ' user' → logprob: -8.504911422729492
    7. '_lower' → logprob: -8.629911422729492
    8. '_else' → logprob: -8.754911422729492
    9. ' ' → logprob: -8.879911422729492
    10. ' below' → logprob: -9.129911422729492

Token 35: 'elow' (ID: 119405)
  Prédit: 'elow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elow' → logprob: -0.002139197662472725
    2. '_' → logprob: -7.127139091491699
    3. '_else' → logprob: -7.502139091491699
    4. 'el' → logprob: -8.1271390914917
    5. 'ellow' → logprob: -8.5021390914917
    6. '```' → logprob: -9.6271390914917
    7. 'e' → logprob: -9.7521390914917
    8. '_el' → logprob: -10.0021390914917
    9. 'else' → logprob: -10.6271390914917
    10. '_ab' → logprob: -11.0021390914917

Token 36: '_threshold' (ID: 51747)
  Prédit: '_threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_threshold' → logprob: -0.0020456979982554913
    2. '_' → logprob: -6.752045631408691
    3. '_or' → logprob: -7.627045631408691
    4. '=' → logprob: -9.752045631408691
    5. '_thresh' → logprob: -9.752045631408691
    6. 'threshold' → logprob: -9.877045631408691
    7. '="_' → logprob: -9.877045631408691
    8. ' =' → logprob: -10.502045631408691
    9. '=_' → logprob: -10.752045631408691
    10. ' _' → logprob: -10.877045631408691

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004623799119144678
    2. '=' → logprob: -5.379623889923096
    3. ' ' → logprob: -12.629623413085938
    4. ',' → logprob: -16.754623413085938
    5. ' =
' → logprob: -17.004623413085938
    6. '=user' → logprob: -17.004623413085938
    7. ')' → logprob: -17.129623413085938
    8. ' ==' → logprob: -17.254623413085938
    9. 'user' → logprob: -17.754623413085938
    10. '_' → logprob: -18.004623413085938

Token 38: ' '' (ID: 461)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -1.0185467004776
    2. '"' → logprob: -1.3935467004776
    3. ' ""' → logprob: -1.8935467004776
    4. ' "' → logprob: -2.1435465812683105
    5. '"user' → logprob: -3.3935465812683105
    6. '''' → logprob: -3.5185465812683105
    7. ''' → logprob: -3.7685465812683105
    8. ' ''' → logprob: -3.8935465812683105
    9. ' '' → logprob: -4.8935465812683105
    10. ' ' → logprob: -6.0185465812683105

Token 39: 'red' (ID: 1291)
  Prédit: 'red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.29058170318603516
    2. 'Not' → logprob: -3.665581703186035
    3. ''' → logprob: -3.790581703186035
    4. 'Below' → logprob: -3.790581703186035
    5. 'Red' → logprob: -4.040581703186035
    6. 'Out' → logprob: -4.165581703186035
    7. '不' → logprob: -4.540581703186035
    8. 'No' → logprob: -4.665581703186035
    9. 'ABC' → logprob: -4.915581703186035
    10. 'not' → logprob: -5.165581703186035

Token 40: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2774849236011505
    2. 'emption' → logprob: -2.277484893798828
    3. 'hat' → logprob: -3.277484893798828
    4. 'shirt' → logprob: -4.402484893798828
    5. '\n' → logprob: -4.527484893798828
    6. 'print' → logprob: -4.902484893798828
    7. ' and' → logprob: -5.152484893798828
    8. '```' → logprob: -5.277484893798828
    9. 'fish' → logprob: -5.402484893798828
    10. '''' → logprob: -5.402484893798828

Token 41: 'if' (ID: 366)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6730242371559143
    2. '
' → logprob: -1.4230241775512695
    3. 'if' → logprob: -1.6730241775512695
    4. '```' → logprob: -3.5480241775512695
    5. 'output' → logprob: -4.0480241775512695
    6. ' if' → logprob: -5.4230241775512695
    7. '\' → logprob: -5.7980241775512695
    8. '<|end|>' → logprob: -6.7980241775512695
    9. 'print' → logprob: -6.9230241775512695
    10. '' → logprob: -7.1730241775512695

Token 42: ' user' (ID: 1825)
  Prédit: ' user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.0014778443146497011
    2. 'user' → logprob: -7.0014777183532715
    3. ' ' → logprob: -7.5014777183532715
    4. ' use' → logprob: -12.37647819519043
    5. ' ' → logprob: -12.62647819519043
    6. ' space' → logprob: -13.37647819519043
    7. ' (' → logprob: -13.87647819519043
    8. '	user' → logprob: -14.37647819519043
    9. '(user' → logprob: -14.50147819519043
    10. '_user' → logprob: -14.62647819519043

Token 43: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0001105762057704851
    2. '_' → logprob: -9.875110626220703
    3. ' _' → logprob: -10.250110626220703
    4. '_put' → logprob: -11.250110626220703
    5. '_output' → logprob: -12.500110626220703
    6. '_s' → logprob: -13.750110626220703
    7. '```' → logprob: -13.875110626220703
    8. '_value' → logprob: -14.250110626220703
    9. '_in' → logprob: -14.250110626220703
    10. 'input' → logprob: -14.375110626220703

Token 44: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -2.618001053633634e-05
    2. '_' → logprob: -10.875025749206543
    3. ' _' → logprob: -12.625025749206543
    4. '_in' → logprob: -13.750025749206543
    5. '_int' → logprob: -13.750025749206543
    6. '_input' → logprob: -14.125025749206543
    7. '_string' → logprob: -14.750025749206543
    8. '_INTEGER' → logprob: -15.625025749206543
    9. '_value' → logprob: -15.875025749206543
    10. '_number' → logprob: -16.12502670288086

Token 45: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.14375300705432892
    2. ' >' → logprob: -2.3937530517578125
    3. ' <' → logprob: -3.3937530517578125
    4. ' ' → logprob: -5.1437530517578125
    5. ' <=' → logprob: -5.8937530517578125
    6. '>=' → logprob: -8.393753051757812
    7. '>' → logprob: -8.768753051757812
    8. '<' → logprob: -10.393753051757812
    9. '  ' → logprob: -12.018753051757812
    10. '   ' → logprob: -12.268753051757812

Token 46: ' threshold' (ID: 24313)
  Prédit: ' threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' threshold' → logprob: -0.08898221701383591
    2. 'threshold' → logprob: -2.463982105255127
    3. '320' → logprob: -10.213982582092285
    4. ' ' → logprob: -12.588982582092285
    5. 'th' → logprob: -13.838982582092285
    6. '   ' → logprob: -14.713982582092285
    7. ' ' → logprob: -14.838982582092285
    8. ' thresh' → logprob: -15.713982582092285
    9. '.threshold' → logprob: -15.713982582092285
    10. '_threshold' → logprob: -15.838982582092285

Token 47: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.273621405242011e-05
    2. '_' → logprob: -10.625032424926758
    3. ' _' → logprob: -12.000032424926758
    4. '_val' → logprob: -13.375032424926758
    5. '_threshold' → logprob: -15.000032424926758
    6. ':' → logprob: -15.625032424926758
    7. '_Value' → logprob: -16.875032424926758
    8. '_code' → logprob: -17.625032424926758
    9. '_VALUE' → logprob: -17.750032424926758
    10. ' ' → logprob: -17.875032424926758

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.195421494543552e-05
    2. ' :' → logprob: -9.75007152557373
    3. ':
' → logprob: -11.25007152557373
    4. ':**' → logprob: -15.50007152557373
    5. ':return' → logprob: -16.750072479248047
    6. '):' → logprob: -16.875072479248047
    7. ':

' → logprob: -17.375072479248047
    8. ':
' → logprob: -17.625072479248047
    9. ':\' → logprob: -17.875072479248047
    10. '=' → logprob: -17.875072479248047

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7008876800537109
    2. ' output' → logprob: -0.9508876800537109
    3. ' print' → logprob: -2.200887680053711
    4. 'print' → logprob: -5.950887680053711
    5. 'output' → logprob: -6.325887680053711
    6. '    
' → logprob: -7.450887680053711
    7. ' 
' → logprob: -7.700887680053711
    8. '<|end|>' → logprob: -8.200887680053711
    9. '	output' → logprob: -9.075887680053711
    10. '    ' → logprob: -9.075887680053711

Token 50: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.05062543600797653
    2. 'print' (adapté à ' print') → logprob: -3.1756253242492676
    3. '   ' → logprob: -5.425625324249268
    4. ' output' → logprob: -5.800625324249268
    5. '    ' → logprob: -9.800625801086426
    6. 'output' → logprob: -9.800625801086426
    7. ' pass' → logprob: -10.425625801086426
    8. ' return' → logprob: -11.925625801086426
    9. '```' → logprob: -12.550625801086426
    10. '	print' → logprob: -12.675625801086426

Token 51: '(output' (ID: 22485)
  Prédit: '(output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -0.31410032510757446
    2. '(' → logprob: -1.3141002655029297
    3. '('' → logprob: -7.81410026550293
    4. '(user' → logprob: -7.93910026550293
    5. '("("' → logprob: -10.68910026550293
    6. 'output' → logprob: -11.18910026550293
    7. '(f' → logprob: -11.31410026550293
    8. ' (' → logprob: -12.06410026550293
    9. '("' → logprob: -12.06410026550293
    10. 'user' → logprob: -12.43910026550293

Token 52: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -15.125000953674316
    3. '_str' → logprob: -15.125000953674316
    4. 'string' → logprob: -16.0
    5. '_s' → logprob: -16.0
    6. '_output' → logprob: -16.875
    7. '_strings' → logprob: -17.0
    8. 'String' → logprob: -18.125
    9. '_String' → logprob: -18.25
    10. ')_' → logprob: -18.5

Token 53: '_if' (ID: 25821)
  Prédit: '_if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_if' → logprob: -1.981667537620524e-06
    2. 'if' → logprob: -13.375001907348633
    3. '_string' → logprob: -15.750001907348633
    4. 'If' → logprob: -15.750001907348633
    5. ' if' → logprob: -17.625001907348633
    6. ')' → logprob: -17.625001907348633
    7. '_' → logprob: -18.000001907348633
    8. '_ab' → logprob: -18.625001907348633
    9. '_else' → logprob: -19.000001907348633
    10. ')_' → logprob: -19.250001907348633

Token 54: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.0895811915397644
    2. 'above' → logprob: -2.464581251144409
    3. 'ab' → logprob: -7.46458101272583
    4. 'Above' → logprob: -10.464581489562988
    5. '_b' → logprob: -11.589581489562988
    6. ' above' → logprob: -11.964581489562988
    7. 'b' → logprob: -12.089581489562988
    8. 'a' → logprob: -12.339581489562988
    9. '_threshold' → logprob: -12.714581489562988
    10. '_' → logprob: -13.214581489562988

Token 55: 'ove' (ID: 1048)
  Prédit: 'ove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ove' → logprob: -1.4021237802808173e-05
    2. 've' → logprob: -11.750014305114746
    3. 're' → logprob: -12.125014305114746
    4. 'ov' → logprob: -16.00001335144043
    5. 'e' → logprob: -16.12501335144043
    6. 'ive' → logprob: -16.37501335144043
    7. 'out' → logprob: -16.37501335144043
    8. 'o' → logprob: -16.75001335144043
    9. 'oven' → logprob: -17.62501335144043
    10. 'over' → logprob: -18.12501335144043

Token 56: '_threshold' (ID: 51747)
  Prédit: '_threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_threshold' → logprob: -1.5048530030981055e-06
    2. '_thresh' → logprob: -13.875001907348633
    3. '_string' → logprob: -14.750001907348633
    4. 'threshold' → logprob: -16.500001907348633
    5. '_th' → logprob: -17.625001907348633
    6. '_value' → logprob: -18.875001907348633
    7. '_THRESHOLD' → logprob: -19.250001907348633
    8. '_t' → logprob: -19.375001907348633
    9. ')_' → logprob: -19.625001907348633
    10. '_length' → logprob: -19.625001907348633

Token 57: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. ')
' → logprob: -12.875004768371582
    3. ' )' → logprob: -13.250004768371582
    4. '')' → logprob: -17.250003814697266
    5. 'else' → logprob: -17.375003814697266
    6. '))' → logprob: -17.625003814697266
    7. '   ' → logprob: -18.500003814697266
    8. '}' → logprob: -18.625003814697266
    9. '")' → logprob: -19.125003814697266
    10. '),' → logprob: -19.500003814697266

Token 58: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0005400468362495303
    2. ' else' → logprob: -8.000539779663086
    3. 'elif' → logprob: -9.000539779663086
    4. '```' → logprob: -9.625539779663086
    5. '<|end|>' → logprob: -11.875539779663086
    6. '    
' → logprob: -13.250539779663086
    7. '
' → logprob: -13.500539779663086
    8. '_else' → logprob: -13.625539779663086
    9. 'e' → logprob: -14.000539779663086
    10. 'elser' → logprob: -14.250539779663086

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.057743949990254e-05
    2. ' :' → logprob: -11.375020980834961
    3. ':
' → logprob: -11.625020980834961
    4. '   ' → logprob: -16.87502098083496
    5. ':return' → logprob: -17.62502098083496
    6. '：' → logprob: -18.25002098083496
    7. '():' → logprob: -18.75002098083496
    8. ':

' → logprob: -19.00002098083496
    9. ' :
' → logprob: -19.12502098083496
    10. ':
' → logprob: -19.12502098083496

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034947119653224945
    2. ' print' → logprob: -3.534947156906128
    3. 'print' → logprob: -5.284946918487549
    4. '   ' → logprob: -9.784947395324707
    5. '	print' → logprob: -11.159947395324707
    6. '    
' → logprob: -11.159947395324707
    7. '(print' → logprob: -11.284947395324707
    8. ' ' → logprob: -12.034947395324707
    9. '```' → logprob: -13.159947395324707
    10. '<|end|>' → logprob: -13.284947395324707

Token 61: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10020796209573746
    2. ' print' → logprob: -2.350208044052124
    3. '   ' → logprob: -14.225208282470703
    4. 'pr' → logprob: -14.850208282470703
    5. '(print' → logprob: -15.850208282470703
    6. '.print' → logprob: -16.350208282470703
    7. '	print' → logprob: -16.975208282470703
    8. ' ' → logprob: -17.600208282470703
    9. '_print' → logprob: -18.475208282470703
    10. '```' → logprob: -18.850208282470703

Token 62: '(output' (ID: 22485)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6932404637336731
    2. '(output' → logprob: -0.6932404637336731
    3. '('' → logprob: -9.44324016571045
    4. '("("' → logprob: -12.69324016571045
    5. '(open' → logprob: -12.69324016571045
    6. '(out' → logprob: -12.94324016571045
    7. ' (' → logprob: -13.69324016571045
    8. '(user' → logprob: -13.94324016571045
    9. '(input' → logprob: -14.19324016571045
    10. '((' → logprob: -14.69324016571045

Token 63: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0005000127712264657
    2. '_output' → logprob: -8.125499725341797
    3. '_' → logprob: -9.625499725341797
    4. '_s' → logprob: -10.000499725341797
    5. 'String' → logprob: -11.000499725341797
    6. ')_' → logprob: -11.000499725341797
    7. '_strings' → logprob: -11.375499725341797
    8. '_String' → logprob: -11.875499725341797
    9. '_str' → logprob: -12.125499725341797
    10. '_f' → logprob: -12.125499725341797

Token 64: '_if' (ID: 25821)
  Prédit: '_if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_if' → logprob: -0.006738580763339996
    2. '_string' → logprob: -5.006738662719727
    3. '_b' → logprob: -11.506738662719727
    4. ')_' → logprob: -12.256738662719727
    5. '_else' → logprob: -12.381738662719727
    6. 'if' → logprob: -13.256738662719727
    7. 'If' → logprob: -13.881738662719727
    8. '_to' → logprob: -15.006738662719727
    9. '_' → logprob: -15.381738662719727
    10. '"_' → logprob: -15.881738662719727

Token 65: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00036679807817563415
    2. 'output' → logprob: -8.250367164611816
    3. '_string' → logprob: -10.000367164611816
    4. '_ab' → logprob: -10.750367164611816
    5. 'below' → logprob: -11.250367164611816
    6. '_output' → logprob: -11.375367164611816
    7. '(output' → logprob: -12.375367164611816
    8. 'b' → logprob: -12.625367164611816
    9. '_lower' → logprob: -13.250367164611816
    10. '_threshold' → logprob: -13.375367164611816

Token 66: 'elow' (ID: 119405)
  Prédit: 'elow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elow' → logprob: -3.774276774493046e-05
    2. 'el' → logprob: -10.875038146972656
    3. 'ellow' → logprob: -11.500038146972656
    4. 'e' → logprob: -12.125038146972656
    5. 'output' → logprob: -13.250038146972656
    6. 'below' → logprob: -14.375038146972656
    7. 'elo' → logprob: -15.125038146972656
    8. '_output' → logprob: -15.625038146972656
    9. 'else' → logprob: -15.750038146972656
    10. 'low' → logprob: -16.375038146972656

Token 67: '_threshold' (ID: 51747)
  Prédit: '_threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_threshold' → logprob: -1.5570885807392187e-05
    2. 'threshold' → logprob: -11.875015258789062
    3. ')_' → logprob: -12.500015258789062
    4. '_thresh' → logprob: -12.750015258789062
    5. ')' → logprob: -14.375015258789062
    6. '_value' → logprob: -15.125015258789062
    7. '_string' → logprob: -15.125015258789062
    8. '_th' → logprob: -15.250015258789062
    9. '```' → logprob: -16.125015258789062
    10. '_THRESHOLD' → logprob: -16.250015258789062

Token 68: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.750000953674316
    3. '))' → logprob: -15.875000953674316
    4. '')' → logprob: -16.125
    5. ')`' → logprob: -18.0
    6. '`)' → logprob: -18.125
    7. ' )' → logprob: -18.125
    8. '")' → logprob: -18.375
    9. '())' → logprob: -18.625
    10. '()' → logprob: -18.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 66
Tokens correctement prédits (1ère position, stricte): 34
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 48
Précision stricte (1ère position): 51.52%
Précision adaptée (1ère position): 53.03%
Précision (top 10): 72.73%
================================================================================
