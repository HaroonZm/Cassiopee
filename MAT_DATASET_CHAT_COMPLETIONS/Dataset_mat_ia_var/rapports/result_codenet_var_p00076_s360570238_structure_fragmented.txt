================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import pi, cos, sin, atan2

def get_input():
    return int(input())

def should_break(n):
    return n == -1

def decrement(n):
    return n - 1

def initial_angle():
    return 0.0

def initial_x():
    return 1.0

def initial_y():
    return 0.0

def quarter_turn():
    return pi / 2

def step_angle(ang):
    return ang + quarter_turn()

def step_x(x, ang):
    return x + cos(ang)

def step_y(y, ang):
    return y + sin(ang)

def update_angle(y, x):
    return atan2(y, x)

def format_output(value):
    return "{:.2f}".format(value)

def print_result(x, y):
    print(format_output(x))
    print(format_output(y))

def iterate_steps(n, ang, x, y):
    def step(i, ang, x, y):
        ang = step_angle(ang)
        x = step_x(x, ang)
        y = step_y(y, ang)
        ang = update_angle(y, x)
        return ang, x, y
    for i in range(n):
        ang, x, y = step(i, ang, x, y)
    return x, y

def process_one_input(n):
    n = decrement(n)
    ang = initial_angle()
    x = initial_x()
    y = initial_y()
    x, y = iterate_steps(n, ang, x, y)
    print_result(x, y)

def main_loop():
    while True:
        n = get_input()
        if should_break(n):
            break
        process_one_input(n)

def main():
    main_loop()

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' pi' (ID: 6404)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6412628889083862
    2. 'sqrt' → logprob: -1.1412628889083862
    3. 'pi' → logprob: -2.016263008117676
    4. 'sin' → logprob: -4.766263008117676
    5. 'cos' → logprob: -5.766263008117676
    6. 'pow' → logprob: -6.141263008117676
    7. '.sqrt' → logprob: -6.516263008117676
    8. '*pi' → logprob: -7.391263008117676
    9. ' sqrt' → logprob: -7.516263008117676
    10. 'prod' → logprob: -7.641263008117676

Token 4: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9688587188720703
    2. '<|end|>' → logprob: -1.2188587188720703
    3. 'as' → logprob: -1.5938587188720703
    4. 'import' → logprob: -2.4688587188720703
    5. 'print' → logprob: -4.46885871887207
    6. '<|end|>' → logprob: -5.09385871887207
    7. ' as' → logprob: -5.59385871887207
    8. '#' → logprob: -5.59385871887207
    9. '.' → logprob: -6.21885871887207
    10. ';' → logprob: -6.46885871887207

Token 5: ' cos' (ID: 8974)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.030366575345396996
    2. 'sqrt' → logprob: -3.5303666591644287
    3. ' e' → logprob: -8.780366897583008
    4. 'tau' → logprob: -9.155366897583008
    5. 'sin' → logprob: -9.155366897583008
    6. 'exp' → logprob: -9.655366897583008
    7. ' sqrt' → logprob: -10.155366897583008
    8. 'cos' → logprob: -10.155366897583008
    9. 'E' → logprob: -10.655366897583008
    10. 'inf' → logprob: -11.030366897583008

Token 6: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15705320239067078
    2. 'import' → logprob: -2.157053232192993
    3. 'as' → logprob: -3.657053232192993
    4. 'from' → logprob: -6.157052993774414
    5. 'def' → logprob: -6.532052993774414
    6. 'cos' → logprob: -9.782052993774414
    7. '#' → logprob: -10.032052993774414
    8. 'sin' → logprob: -10.532052993774414
    9. ' as' → logprob: -10.782052993774414
    10. ')' → logprob: -11.532052993774414

Token 7: ' sin' (ID: 2187)
  Prédit: 'sin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sin' → logprob: -0.00023369524569716305
    2. ' sin' → logprob: -8.37523365020752
    3. 'sqrt' → logprob: -13.00023365020752
    4. 'tan' → logprob: -14.50023365020752
    5. '.sin' → logprob: -15.25023365020752
    6. 'Sin' → logprob: -18.250234603881836
    7. 'SIN' → logprob: -18.500234603881836
    8. 'exp' → logprob: -18.750234603881836
    9. '*sin' → logprob: -18.750234603881836
    10. 'asin' → logprob: -18.875234603881836

Token 8: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6629539132118225
    2. 'import' → logprob: -0.9129539132118225
    3. '#' → logprob: -3.6629538536071777
    4. ',' → logprob: -3.6629538536071777
    5. 'as' → logprob: -4.537953853607178
    6. 'from' → logprob: -4.912953853607178
    7. 'class' → logprob: -5.287953853607178
    8. ':' → logprob: -5.912953853607178
    9. 'print' → logprob: -6.787953853607178
    10. ';' → logprob: -7.287953853607178

Token 9: ' atan' (ID: 70327)
  Prédit: 'tan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tan' → logprob: -0.14630436897277832
    2. ' tan' → logprob: -2.0213043689727783
    3. 'sqrt' → logprob: -5.896304130554199
    4. ' sqrt' → logprob: -7.521304130554199
    5. 'log' → logprob: -8.8963041305542
    6. 'exp' → logprob: -9.3963041305542
    7. 'atan' → logprob: -10.0213041305542
    8. 'tau' → logprob: -11.0213041305542
    9. ' exp' → logprob: -11.2713041305542
    10. 't' → logprob: -12.0213041305542

Token 10: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19313712418079376
    2. 'import' → logprob: -1.9431371688842773
    3. 'as' → logprob: -3.6931371688842773
    4. 'def' → logprob: -5.193137168884277
    5. 'from' → logprob: -6.818137168884277
    6. '#' → logprob: -7.943137168884277
    7. ' as' → logprob: -8.818137168884277
    8. '```' → logprob: -10.068137168884277
    9. 'atan' → logprob: -10.193137168884277
    10. 'class' → logprob: -10.193137168884277

Token 11: '

' (ID: 279)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0525914430618286
    2. 'def' → logprob: -1.0525914430618286
    3. ',' → logprob: -1.9275914430618286
    4. 'as' → logprob: -2.552591323852539
    5. 'from' → logprob: -3.177591323852539
    6. '#' → logprob: -3.427591323852539
    7. 'class' → logprob: -5.802591323852539
    8. '```' → logprob: -7.927591323852539
    9. ' as' → logprob: -8.927591323852539
    10. '<|end|>' → logprob: -9.177591323852539

Token 12: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15331491827964783
    2. 'import' → logprob: -2.5283148288726807
    3. ',' → logprob: -3.5283148288726807
    4. 'from' → logprob: -3.5283148288726807
    5. '#' → logprob: -5.90331506729126
    6. 'class' → logprob: -7.27831506729126
    7. 'as' → logprob: -9.528314590454102
    8. 'print' → logprob: -10.778314590454102
    9. 'sqrt' → logprob: -10.778314590454102
    10. ' def' → logprob: -11.403314590454102

Token 13: ' get' (ID: 717)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.5300909876823425
    2. ' circle' → logprob: -1.2800910472869873
    3. 'calculate' → logprob: -3.6550910472869873
    4. ' get' → logprob: -4.155090808868408
    5. ' my' → logprob: -4.280090808868408
    6. 'circle' → logprob: -4.405090808868408
    7. ' circular' → logprob: -5.030090808868408
    8. ' angle' → logprob: -5.030090808868408
    9. ' compute' → logprob: -5.155090808868408
    10. ' ' → logprob: -5.280090808868408

Token 14: '_input' (ID: 12507)
  Prédit: '_coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_coordinates' → logprob: -0.9920691251754761
    2. '_' → logprob: -1.492069125175476
    3. '_angle' → logprob: -1.617069125175476
    4. '_angles' → logprob: -3.1170692443847656
    5. '_circle' → logprob: -3.3670692443847656
    6. '_position' → logprob: -3.3670692443847656
    7. '_vector' → logprob: -3.8670692443847656
    8. '_coords' → logprob: -4.492069244384766
    9. '_distance' → logprob: -4.742069244384766
    10. '_theta' → logprob: -4.992069244384766

Token 15: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0012751155300065875
    2. '(:' → logprob: -7.001275062561035
    3. '()' → logprob: -8.001275062561035
    4. '():
' → logprob: -11.376275062561035
    5. '(' → logprob: -12.126275062561035
    6. ' ():' → logprob: -12.126275062561035
    7. '(_:' → logprob: -13.626275062561035
    8. '):' → logprob: -14.251275062561035
    9. '():

' → logprob: -14.251275062561035
    10. '(":' → logprob: -14.501275062561035

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010270876373397186
    2. 'pass' → logprob: -9.625102996826172
    3. 'return' → logprob: -10.625102996826172
    4. '  ' → logprob: -12.125102996826172
    5. '```' → logprob: -13.125102996826172
    6. '    ' → logprob: -13.625102996826172
    7. '   ' → logprob: -13.875102996826172
    8. ' ' → logprob: -13.875102996826172
    9. ' pass' → logprob: -14.625102996826172
    10. '	pass' → logprob: -14.875102996826172

Token 17: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012864998541772366
    2. 'pass' → logprob: -4.38786506652832
    3. 'return' (adapté à ' return') → logprob: -8.13786506652832
    4. '	pass' → logprob: -10.38786506652832
    5. ' pass' → logprob: -10.88786506652832
    6. '```' → logprob: -12.38786506652832
    7. '  ' → logprob: -12.88786506652832
    8. '	return' → logprob: -13.38786506652832
    9. '   ' → logprob: -13.51286506652832
    10. '    ' → logprob: -13.88786506652832

Token 18: ' int' (ID: 677)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012036044150590897
    2. '(' → logprob: -5.637035846710205
    3. 'input' → logprob: -5.637035846710205
    4. 'None' → logprob: -6.012035846710205
    5. '""' → logprob: -7.262035846710205
    6. '("")' → logprob: -7.387035846710205
    7. '"' → logprob: -8.637036323547363
    8. '(input' → logprob: -8.637036323547363
    9. '(None' → logprob: -9.012036323547363
    10. ' ' → logprob: -9.512036323547363

Token 19: '(input' (ID: 10054)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003230686706956476
    2. '(' → logprob: -8.375323295593262
    3. '().' → logprob: -10.625323295593262
    4. '()`' → logprob: -10.625323295593262
    5. '()(' → logprob: -11.250323295593262
    6. '(()' → logprob: -12.000323295593262
    7. '(...)' → logprob: -12.375323295593262
    8. '("' → logprob: -12.500323295593262
    9. '("")' → logprob: -12.625323295593262
    10. '())' → logprob: -12.750323295593262

Token 20: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08105377107858658
    2. '()' → logprob: -2.5810537338256836
    3. '("' → logprob: -6.456053733825684
    4. '().' → logprob: -8.456053733825684
    5. '('' → logprob: -9.081053733825684
    6. '())
' → logprob: -9.331053733825684
    7. '()).' → logprob: -10.081053733825684
    8. '())

' → logprob: -10.331053733825684
    9. ')' → logprob: -10.831053733825684
    10. '(' → logprob: -11.206053733825684

Token 21: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01369692012667656
    2. '   ' → logprob: -5.138697147369385
    3. ':' → logprob: -5.763697147369385
    4. '#' → logprob: -6.888697147369385
    5. '()' → logprob: -6.888697147369385
    6. 'print' → logprob: -7.263697147369385
    7. ':def' → logprob: -7.888697147369385
    8. 'return' → logprob: -8.013696670532227
    9. '```' → logprob: -8.013696670532227
    10. 'pass' → logprob: -8.638696670532227

Token 22: ' should' (ID: 1757)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.055784404277801514
    2. ' get' → logprob: -2.9307844638824463
    3. 'def' → logprob: -8.305784225463867
    4. 'process' → logprob: -8.930784225463867
    5. 'define' → logprob: -9.180784225463867
    6. ' process' → logprob: -9.430784225463867
    7. 'calculate' → logprob: -9.680784225463867
    8. '   ' → logprob: -10.180784225463867
    9. ' define' → logprob: -10.430784225463867
    10. 'set' → logprob: -10.555784225463867

Token 23: '_break' (ID: 98301)
  Prédit: '_continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_continue' → logprob: -0.37387189269065857
    2. 'continue' → logprob: -3.1238718032836914
    3. '_return' → logprob: -3.2488718032836914
    4. '():' → logprob: -3.2488718032836914
    5. 'be' → logprob: -3.4988718032836914
    6. 'do' → logprob: -3.7488718032836914
    7. '_stop' → logprob: -4.373871803283691
    8. 'def' → logprob: -5.123871803283691
    9. '_be' → logprob: -5.248871803283691
    10. '_do' → logprob: -5.248871803283691

Token 24: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00023631771910004318
    2. '(:' → logprob: -8.625236511230469
    3. '()' → logprob: -10.375236511230469
    4. '():
' → logprob: -11.250236511230469
    5. ':' → logprob: -12.125236511230469
    6. '(_:' → logprob: -13.000236511230469
    7. ' ():' → logprob: -13.000236511230469
    8. '():

' → logprob: -14.375236511230469
    9. '(' → logprob: -14.875236511230469
    10. '(":' → logprob: -14.875236511230469

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0453670509159565
    2. '):
' → logprob: -3.1703670024871826
    3. ':' → logprob: -6.170367240905762
    4. '):

' → logprob: -8.420367240905762
    5. '):
' → logprob: -10.670367240905762
    6. ')' → logprob: -10.920367240905762
    7. '   ' → logprob: -12.295367240905762
    8. ',' → logprob: -12.670367240905762
    9. ')):' → logprob: -13.545367240905762
    10. ''):' → logprob: -14.295367240905762

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00033939589047804475
    2. 'return' → logprob: -8.00033950805664
    3. '  ' → logprob: -13.25033950805664
    4. ' return' → logprob: -13.87533950805664
    5. '	return' → logprob: -14.62533950805664
    6. ' ' → logprob: -15.12533950805664
    7. '   ' → logprob: -16.00033950805664
    8. '   ' → logprob: -16.37533950805664
    9. '    ' → logprob: -16.62533950805664
    10. '\t' → logprob: -16.87533950805664

Token 27: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0031033270061016083
    2. '   ' → logprob: -6.253103256225586
    3. 'n' → logprob: -6.753103256225586
    4. 'if' → logprob: -12.503103256225586
    5. ' return' → logprob: -12.878103256225586
    6. '	return' → logprob: -15.253103256225586
    7. 'returns' → logprob: -16.503103256225586
    8. 'ret' → logprob: -16.753103256225586
    9. '  ' → logprob: -17.753103256225586
    10. 'Return' → logprob: -17.753103256225586

Token 28: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1269417703151703
    2. ' n' → logprob: -2.126941680908203
    3. '   ' → logprob: -12.126941680908203
    4. ' ' → logprob: -12.501941680908203
    5. '(n' → logprob: -13.126941680908203
    6. '  ' → logprob: -14.126941680908203
    7. 'True' → logprob: -14.251941680908203
    8. 'bool' → logprob: -14.751941680908203
    9. '	n' → logprob: -14.876941680908203
    10. 'False' → logprob: -15.876941680908203

Token 29: ' ==' (ID: 951)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.07983347773551941
    2. '<' → logprob: -3.079833507537842
    3. '==' → logprob: -3.954833507537842
    4. ' <=' → logprob: -4.954833507537842
    5. '>' → logprob: -5.829833507537842
    6. '>=' → logprob: -6.704833507537842
    7. ' <' → logprob: -8.579833030700684
    8. ' ==' → logprob: -8.954833030700684
    9. '!=' → logprob: -10.454833030700684
    10. ' >=' → logprob: -10.704833030700684

Token 30: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1054253011243418e-05
    2. '-' → logprob: -11.750020980834961
    3. '1' → logprob: -11.875020980834961
    4. '10' → logprob: -13.375020980834961
    5. '42' → logprob: -13.625020980834961
    6. '5' → logprob: -14.125020980834961
    7. ''' → logprob: -14.250020980834961
    8. 'break' → logprob: -14.875020980834961
    9. '"' → logprob: -15.000020980834961
    10. '7' → logprob: -15.125020980834961

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -17.125
    3. ' ' → logprob: -18.0
    4. '0' → logprob: -19.125
    5. '_' → logprob: -19.125
    6. '9' → logprob: -19.375
    7. '10' → logprob: -20.0
    8. '-' → logprob: -20.25
    9. '   ' → logprob: -20.875
    10. '3' → logprob: -20.875

Token 32: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00642379792407155
    2. ':' → logprob: -5.7564239501953125
    3. ':def' → logprob: -6.7564239501953125
    4. '   ' → logprob: -7.0064239501953125
    5. '```' → logprob: -7.6314239501953125
    6. '<|end|>' → logprob: -8.756423950195312
    7. '\n' → logprob: -9.006423950195312
    8. ' def' → logprob: -9.256423950195312
    9. '#' → logprob: -9.506423950195312
    10. 'n' → logprob: -9.756423950195312

Token 33: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00038562860572710633
    2. '   ' → logprob: -8.125385284423828
    3. 'n' → logprob: -10.000385284423828
    4. '#' → logprob: -11.125385284423828
    5. ' def' → logprob: -11.375385284423828
    6. '```' → logprob: -12.125385284423828
    7. ':def' → logprob: -13.000385284423828
    8. '    
' → logprob: -13.000385284423828
    9. 'print' → logprob: -13.500385284423828
    10. 'if' → logprob: -13.500385284423828

Token 34: ' decrement' (ID: 121877)
  Prédit: 'should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'should' → logprob: -0.3441402316093445
    2. 'get' → logprob: -1.4691402912139893
    3. 'process' → logprob: -3.4691402912139893
    4. 'calculate' → logprob: -4.46914005279541
    5. 'do' → logprob: -5.71914005279541
    6. 'handle' → logprob: -6.09414005279541
    7. 'execute' → logprob: -6.34414005279541
    8. ' should' → logprob: -6.59414005279541
    9. 'main' → logprob: -6.84414005279541
    10. 'next' → logprob: -6.96914005279541

Token 35: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.022517498582601547
    2. '(n' → logprob: -3.897517442703247
    3. '()' → logprob: -6.397517681121826
    4. '(:' → logprob: -9.147517204284668
    5. '():
' → logprob: -9.897517204284668
    6. '(' → logprob: -10.147517204284668
    7. '(_:' → logprob: -10.147517204284668
    8. '(':' → logprob: -11.397517204284668
    9. ':' → logprob: -11.522517204284668
    10. '(":' → logprob: -11.772517204284668

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47477808594703674
    2. '):
' → logprob: -0.9747780561447144
    3. '):

' → logprob: -8.224778175354004
    4. '   ' → logprob: -8.724778175354004
    5. ')' → logprob: -8.974778175354004
    6. '):
' → logprob: -9.099778175354004
    7. ':' → logprob: -11.224778175354004
    8. '-' → logprob: -12.349778175354004
    9. ''):' → logprob: -12.474778175354004
    10. ',' → logprob: -12.599778175354004

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.339278580620885e-06
    2. '  ' → logprob: -13.750001907348633
    3. 'return' → logprob: -14.125001907348633
    4. ' ' → logprob: -15.875001907348633
    5. 'n' → logprob: -16.250001907348633
    6. ' return' → logprob: -16.500001907348633
    7. '	return' → logprob: -16.750001907348633
    8. '    ' → logprob: -17.125001907348633
    9. '       ' → logprob: -17.875001907348633
    10. '   ' → logprob: -18.125001907348633

Token 38: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06495775282382965
    2. 'n' → logprob: -2.814957857131958
    3. '   ' → logprob: -5.814957618713379
    4. ' return' → logprob: -12.939957618713379
    5. ' n' → logprob: -15.189957618713379
    6. '	return' → logprob: -15.689957618713379
    7. 'returns' → logprob: -17.189958572387695
    8. '	n' → logprob: -17.939958572387695
    9. '返回' → logprob: -18.064958572387695
    10. 're' → logprob: -18.189958572387695

Token 39: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011050059460103512
    2. ' n' → logprob: -4.511050224304199
    3. '   ' → logprob: -13.1360502243042
    4. ' ' → logprob: -16.386049270629883
    5. '	n' → logprob: -16.386049270629883
    6. '  ' → logprob: -18.011049270629883
    7. '(n' → logprob: -18.011049270629883
    8. '_n' → logprob: -18.261049270629883
    9. ' н' → logprob: -18.261049270629883
    10. '       ' → logprob: -19.136049270629883

Token 40: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.014684110297821e-06
    2. ' -' → logprob: -11.625008583068848
    3. '−' → logprob: -17.375009536743164
    4. '1' → logprob: -20.250009536743164
    5. '–' → logprob: -20.375009536743164
    6. '```' → logprob: -20.625009536743164
    7. 'if' → logprob: -21.750009536743164
    8. '-=' → logprob: -21.875009536743164
    9. '--' → logprob: -21.875009536743164
    10. '_' → logprob: -22.125009536743164

Token 41: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '１' → logprob: -19.125
    4. '2' → logprob: -19.625
    5. '   ' → logprob: -20.375
    6. '```' → logprob: -21.125
    7. '`' → logprob: -23.75
    8. '0' → logprob: -23.75
    9. '_' → logprob: -23.75
    10. '۱' → logprob: -24.125

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -20.625
    3. '１' → logprob: -21.875
    4. '2' → logprob: -22.0
    5. '```' → logprob: -26.0
    6. '0' → logprob: -26.25
    7. '01' → logprob: -26.5
    8. '۱' → logprob: -26.625
    9. '   ' → logprob: -26.75
    10. '١' → logprob: -27.0

Token 43: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.034849610179662704
    2. '<|end|>' → logprob: -3.4098496437072754
    3. '```' → logprob: -7.659849643707275
    4. '<|end|>' → logprob: -8.159849166870117
    5. '   ' → logprob: -8.534849166870117
    6. ' def' → logprob: -8.909849166870117
    7. ':def' → logprob: -10.784849166870117
    8. '#' → logprob: -10.784849166870117
    9. '  ' → logprob: -11.034849166870117
    10. ' ' → logprob: -11.284849166870117

Token 44: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001293808571062982
    2. '#' → logprob: -7.501293659210205
    3. 'n' → logprob: -8.126294136047363
    4. 'if' → logprob: -8.251294136047363
    5. '   ' → logprob: -9.501294136047363
    6. 'print' → logprob: -9.751294136047363
    7. '```' → logprob: -10.751294136047363
    8. ' def' → logprob: -11.501294136047363
    9. ' ' → logprob: -13.251294136047363
    10. 'class' → logprob: -13.376294136047363

Token 45: ' initial' (ID: 4871)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'increment' → logprob: -0.5194870233535767
    2. ' increment' → logprob: -1.2694870233535767
    3. 'calculate' → logprob: -3.394486904144287
    4. 'get' → logprob: -3.769486904144287
    5. 'process' → logprob: -3.894486904144287
    6. ' process' → logprob: -4.394486904144287
    7. ' decrement' → logprob: -5.019486904144287
    8. ' get' → logprob: -5.269486904144287
    9. ' calculate' → logprob: -5.269486904144287
    10. 'de' → logprob: -5.894486904144287

Token 46: '_angle' (ID: 51505)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.4599491357803345
    2. '_' → logprob: -2.709949016571045
    3. '()' → logprob: -2.709949016571045
    4. '_setup' → logprob: -2.959949016571045
    5. '_values' → logprob: -3.084949016571045
    6. '_value' → logprob: -3.584949016571045
    7. '_position' → logprob: -3.959949016571045
    8. '_def' → logprob: -4.334949016571045
    9. '_parameters' → logprob: -4.459949016571045
    10. '_settings' → logprob: -4.959949016571045

Token 47: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03037838079035282
    2. '(:' → logprob: -3.5303783416748047
    3. '(_:' → logprob: -8.405378341674805
    4. '(' → logprob: -8.780378341674805
    5. '()' → logprob: -9.530378341674805
    6. '(':' → logprob: -10.280378341674805
    7. '():
' → logprob: -10.405378341674805
    8. '(":' → logprob: -10.405378341674805
    9. ' ():' → logprob: -10.530378341674805
    10. '(...' → logprob: -12.155378341674805

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002075933152809739
    2. 'return' → logprob: -9.000207901000977
    3. 'pass' → logprob: -9.500207901000977
    4. '  ' → logprob: -12.125207901000977
    5. '	return' → logprob: -13.625207901000977
    6. ' ' → logprob: -14.000207901000977
    7. '	pass' → logprob: -14.500207901000977
    8. '```' → logprob: -14.750207901000977
    9. ' return' → logprob: -14.875207901000977
    10. '    ' → logprob: -15.375207901000977

Token 49: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.474179208278656
    2. '   ' → logprob: -0.974179208278656
    3. 'pass' → logprob: -9.2241792678833
    4. ' return' → logprob: -12.9741792678833
    5. '	return' → logprob: -14.4741792678833
    6. '  ' → logprob: -15.0991792678833
    7. 'returns' → logprob: -15.8491792678833
    8. ' ' → logprob: -16.599178314208984
    9. '```' → logprob: -17.349178314208984
    10. ':return' → logprob: -17.349178314208984

Token 50: ' ' (ID: 220)
  Prédit: 'atan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atan' → logprob: -0.8246949911117554
    2. '0' → logprob: -1.0746949911117554
    3. 'pi' → logprob: -1.5746949911117554
    4. ' atan' → logprob: -4.449695110321045
    5. ' pi' → logprob: -6.699695110321045
    6. ' ' → logprob: -9.324694633483887
    7. '   ' → logprob: -10.199694633483887
    8. '.atan' → logprob: -10.199694633483887
    9. 'ar' → logprob: -11.199694633483887
    10. 'at' → logprob: -11.324694633483887

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16067880392074585
    2. 'atan' → logprob: -2.1606788635253906
    3. 'pi' → logprob: -3.4106788635253906
    4. ' atan' → logprob: -9.53567886352539
    5. 'random' → logprob: -9.78567886352539
    6. '2' → logprob: -11.41067886352539
    7. 'acos' → logprob: -11.66067886352539
    8. '1' → logprob: -12.53567886352539
    9. ' pi' → logprob: -12.91067886352539
    10. 'rand' → logprob: -13.03567886352539

Token 52: '.' (ID: 13)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0022447004448622465
    2. '<|end|>' → logprob: -6.252244472503662
    3. '   ' → logprob: -9.00224494934082
    4. '<|end|>' → logprob: -9.25224494934082
    5. ' def' → logprob: -9.87724494934082
    6. '```' → logprob: -10.62724494934082
    7. '\n' → logprob: -12.50224494934082
    8. '_def' → logprob: -12.87724494934082
    9. '  ' → logprob: -13.37724494934082
    10. 'print' → logprob: -13.50224494934082

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3741799294948578
    2. '5' → logprob: -1.2491799592971802
    3. '1' → logprob: -4.249179840087891
    4. 'def' → logprob: -5.124179840087891
    5. 'angle' → logprob: -6.374179840087891
    6. 'return' → logprob: -6.999179840087891
    7. '3' → logprob: -7.499179840087891
    8. '2' → logprob: -7.874179840087891
    9. '6' → logprob: -8.49917984008789
    10. '4' → logprob: -8.99917984008789

Token 54: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0023836148902773857
    2. '<|end|>' → logprob: -6.627383708953857
    3. '   ' → logprob: -7.127383708953857
    4. '```' → logprob: -9.5023832321167
    5. '<|end|>' → logprob: -9.5023832321167
    6. ' def' → logprob: -9.8773832321167
    7. 'print' → logprob: -11.5023832321167
    8. '#' → logprob: -12.2523832321167
    9. ':def' → logprob: -12.3773832321167
    10. 'pass' → logprob: -12.5023832321167

Token 55: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.117345684382599e-05
    2. '   ' → logprob: -11.625020980834961
    3. '#' → logprob: -12.000020980834961
    4. 'print' → logprob: -13.625020980834961
    5. ' def' → logprob: -13.750020980834961
    6. '```' → logprob: -13.750020980834961
    7. 'angle' → logprob: -14.375020980834961
    8. '<|end|>' → logprob: -15.000020980834961
    9. ':def' → logprob: -15.250020980834961
    10. 'import' → logprob: -15.625020980834961

Token 56: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.3973064124584198
    2. 'angle' → logprob: -1.7723064422607422
    3. 'next' → logprob: -2.272306442260742
    4. 'calculate' → logprob: -3.897306442260742
    5. 'final' → logprob: -4.272306442260742
    6. 'get' → logprob: -4.272306442260742
    7. 'set' → logprob: -6.772306442260742
    8. 'update' → logprob: -7.022306442260742
    9. 'compute' → logprob: -7.397306442260742
    10. 'current' → logprob: -7.397306442260742

Token 57: '_x' (ID: 7054)
  Prédit: '_angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.003705300623551011
    2. '_' → logprob: -5.7537055015563965
    3. '_angles' → logprob: -8.503705024719238
    4. '_ang' → logprob: -9.128705024719238
    5. '"_' → logprob: -10.628705024719238
    6. ''_' → logprob: -11.128705024719238
    7. ' _' → logprob: -11.878705024719238
    8. '_position' → logprob: -12.253705024719238
    9. '_a' → logprob: -12.378705024719238
    10. '\' → logprob: -12.378705024719238

Token 58: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00452066957950592
    2. '():
' → logprob: -6.004520893096924
    3. '()' → logprob: -6.254520893096924
    4. '(),' → logprob: -9.504520416259766
    5. '_' → logprob: -11.379520416259766
    6. '():

' → logprob: -11.504520416259766
    7. '(' → logprob: -11.629520416259766
    8. '():
' → logprob: -12.004520416259766
    9. '().' → logprob: -13.254520416259766
    10. '();' → logprob: -13.629520416259766

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.897412822581828e-05
    2. 'return' → logprob: -9.625068664550781
    3. '  ' → logprob: -13.625068664550781
    4. '	return' → logprob: -13.750068664550781
    5. ' return' → logprob: -14.750068664550781
    6. '    ' → logprob: -16.62506866455078
    7. ' ' → logprob: -17.00006866455078
    8. '       ' → logprob: -17.50006866455078
    9. '   ' → logprob: -17.50006866455078
    10. '   ' → logprob: -18.37506866455078

Token 60: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06197518855333328
    2. 'return' (adapté à ' return') → logprob: -2.8119752407073975
    3. ' return' → logprob: -12.811975479125977
    4. '	return' → logprob: -12.936975479125977
    5. '0' → logprob: -13.311975479125977
    6. '  ' → logprob: -14.436975479125977
    7. 'returns' → logprob: -16.811975479125977
    8. '返回' → logprob: -17.061975479125977
    9. ' ' → logprob: -17.186975479125977
    10. ':return' → logprob: -18.436975479125977

Token 61: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011725161311915144
    2. '   ' → logprob: -9.125117301940918
    3. ' ' → logprob: -11.750117301940918
    4. '1' → logprob: -15.000117301940918
    5. '  ' → logprob: -17.3751163482666
    6. '(' → logprob: -18.6251163482666
    7. 'float' → logprob: -19.1251163482666
    8. '    ' → logprob: -19.6251163482666
    9. '       ' → logprob: -19.7501163482666
    10. '2' → logprob: -19.8751163482666

Token 62: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '1' → logprob: -17.75
    3. 'float' → logprob: -21.5
    4. '100' → logprob: -21.75
    5. 'pi' → logprob: -21.75
    6. '5' → logprob: -22.125
    7. '2' → logprob: -22.25
    8. ' ' → logprob: -22.25
    9. '10' → logprob: -22.875
    10. '00' → logprob: -23.25

Token 63: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.15600182116031647
    2. 'def' → logprob: -2.4060018062591553
    3. '   ' → logprob: -3.1560018062591553
    4. '0' → logprob: -4.656002044677734
    5. '```' → logprob: -7.531002044677734
    6. 'return' → logprob: -7.656002044677734
    7. ')' → logprob: -9.156002044677734
    8. '\n' → logprob: -9.281002044677734
    9. '       ' → logprob: -9.531002044677734
    10. ' ' → logprob: -9.781002044677734

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000241085872403346
    2. '5' → logprob: -8.37524127960205
    3. '1' → logprob: -12.75024127960205
    4. '00' → logprob: -13.50024127960205
    5. '6' → logprob: -13.62524127960205
    6. '9' → logprob: -13.75024127960205
    7. '2' → logprob: -13.87524127960205
    8. '8' → logprob: -14.50024127960205
    9. 'def' → logprob: -14.50024127960205
    10. '4' → logprob: -14.62524127960205

Token 65: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00071695790393278
    2. '    
' → logprob: -7.6257171630859375
    3. '  
' → logprob: -8.875717163085938
    4. ' def' → logprob: -10.500717163085938
    5. '```' → logprob: -10.875717163085938
    6. '
' → logprob: -11.500717163085938
    7. '<|end|>' → logprob: -11.500717163085938
    8. '   
' → logprob: -11.875717163085938
    9. ' 
' → logprob: -12.500717163085938
    10. '   ' → logprob: -12.750717163085938

Token 66: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0280383548888494e-06
    2. ' def' → logprob: -14.375000953674316
    3. ':def' → logprob: -15.875000953674316
    4. '#' → logprob: -17.000001907348633
    5. '```' → logprob: -17.125001907348633
    6. '_def' → logprob: -17.250001907348633
    7. '-def' → logprob: -17.500001907348633
    8. '    
' → logprob: -17.750001907348633
    9. '   ' → logprob: -17.750001907348633
    10. '.def' → logprob: -18.000001907348633

Token 67: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.004633522592484951
    2. 'final' → logprob: -6.50463342666626
    3. 'next' → logprob: -6.50463342666626
    4. 'get' → logprob: -6.62963342666626
    5. 'calculate' → logprob: -9.504633903503418
    6. ' initial' → logprob: -9.629633903503418
    7. 'angle' → logprob: -10.004633903503418
    8. 'current' → logprob: -10.379633903503418
    9. 'set' → logprob: -10.629633903503418
    10. 'update' → logprob: -11.504633903503418

Token 68: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.022946922108530998
    2. '_' → logprob: -3.897946834564209
    3. '_angle' → logprob: -6.522946834564209
    4. '_y' → logprob: -8.897947311401367
    5. '_xy' → logprob: -9.897947311401367
    6. '_xt' → logprob: -10.022947311401367
    7. '_X' → logprob: -10.397947311401367
    8. '_t' → logprob: -10.522947311401367
    9. '_f' → logprob: -10.897947311401367
    10. '__' → logprob: -11.022947311401367

Token 69: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005228889058344066
    2. '():
' → logprob: -8.25052261352539
    3. '()' → logprob: -9.00052261352539
    4. ' ():' → logprob: -9.25052261352539
    5. '():

' → logprob: -11.00052261352539
    6. '(' → logprob: -12.12552261352539
    7. '(":' → logprob: -12.62552261352539
    8. '():
' → logprob: -12.87552261352539
    9. '(:' → logprob: -13.00052261352539
    10. '   ' → logprob: -13.25052261352539

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010986098641296849
    2. 'return' → logprob: -9.125109672546387
    3. '	return' → logprob: -15.125109672546387
    4. '  ' → logprob: -15.500109672546387
    5. ' return' → logprob: -15.750109672546387
    6. '   ' → logprob: -16.000110626220703
    7. '   ' → logprob: -17.250110626220703
    8. '       ' → logprob: -18.125110626220703
    9. '    ' → logprob: -18.375110626220703
    10. '{return' → logprob: -19.500110626220703

Token 71: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16046306490898132
    2. '   ' → logprob: -1.9104630947113037
    3. ' return' → logprob: -8.660463333129883
    4. '	return' → logprob: -9.785463333129883
    5. '0' → logprob: -11.910463333129883
    6. '  ' → logprob: -14.285463333129883
    7. 'Return' → logprob: -14.910463333129883
    8. '       ' → logprob: -15.285463333129883
    9. '_return' → logprob: -15.285463333129883
    10. 'returns' → logprob: -15.535463333129883

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12693189084529877
    2. '0' → logprob: -2.12693190574646
    3. ' ' → logprob: -12.501932144165039
    4. 'sin' → logprob: -16.00193214416504
    5. '2' → logprob: -16.87693214416504
    6. 'initial' → logprob: -20.00193214416504
    7. '   ' → logprob: -20.87693214416504
    8. '10' → logprob: -21.12693214416504
    9. ' sin' → logprob: -21.25193214416504
    10. '3' → logprob: -21.25193214416504

Token 73: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029750604182481766
    2. '0' → logprob: -3.5297505855560303
    3. 'sin' → logprob: -16.40475082397461
    4. '2' → logprob: -18.65475082397461
    5. 'initial' → logprob: -20.15475082397461
    6. ' ' → logprob: -20.65475082397461
    7. 'math' → logprob: -22.02975082397461
    8. '-' → logprob: -22.02975082397461
    9. '(' → logprob: -22.77975082397461
    10. '3' → logprob: -23.02975082397461

Token 74: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.4140441635390744e-05
    2. '   ' → logprob: -12.750014305114746
    3. 'def' → logprob: -13.000014305114746
    4. '.)' → logprob: -13.250014305114746
    5. '0' → logprob: -13.375014305114746
    6. '."""' → logprob: -13.750014305114746
    7. '.

' → logprob: -14.250014305114746
    8. '.`' → logprob: -14.625014305114746
    9. '('.')' → logprob: -14.625014305114746
    10. '.
' → logprob: -14.750014305114746

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007455448503606021
    2. 'def' → logprob: -7.25074577331543
    3. '5' → logprob: -10.75074577331543
    4. '1' → logprob: -12.00074577331543
    5. '00' → logprob: -12.25074577331543
    6. '```' → logprob: -13.37574577331543
    7. '000' → logprob: -14.12574577331543
    8. 'zero' → logprob: -16.00074577331543
    9. 'f' → logprob: -16.37574577331543
    10. ' ' → logprob: -16.75074577331543

Token 76: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04933132603764534
    2. '<|end|>' → logprob: -3.0493314266204834
    3. '<|end|>' → logprob: -7.924331188201904
    4. ' def' → logprob: -8.549331665039062
    5. '```' → logprob: -9.424331665039062
    6. '   ' → logprob: -10.799331665039062
    7. '  
' → logprob: -10.799331665039062
    8. '    
' → logprob: -11.174331665039062
    9. '_def' → logprob: -11.424331665039062
    10. '  ' → logprob: -11.924331665039062

Token 77: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.5861724831629544e-05
    2. '<|end|>' → logprob: -10.750056266784668
    3. ' def' → logprob: -11.375056266784668
    4. '#' → logprob: -11.500056266784668
    5. '```' → logprob: -12.000056266784668
    6. 'print' → logprob: -13.750056266784668
    7. '   ' → logprob: -13.750056266784668
    8. '_def' → logprob: -14.250056266784668
    9. ':def' → logprob: -14.375056266784668
    10. 'if' → logprob: -14.500056266784668

Token 78: ' quarter' (ID: 12965)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -1.2344459295272827
    2. 'final' → logprob: -1.6094459295272827
    3. 'update' → logprob: -1.8594459295272827
    4. 'next' → logprob: -1.9844459295272827
    5. 'get' → logprob: -2.2344460487365723
    6. 'move' → logprob: -3.2344460487365723
    7. 'set' → logprob: -4.109446048736572
    8. 'compute' → logprob: -4.484446048736572
    9. 'main' → logprob: -5.109446048736572
    10. 'current' → logprob: -5.234446048736572

Token 79: '_turn' (ID: 89223)
  Prédit: '_angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.013218224979937077
    2. '_' → logprob: -5.763218402862549
    3. '_angles' → logprob: -6.013218402862549
    4. '_circle' → logprob: -6.388218402862549
    5. '_rotation' → logprob: -6.638218402862549
    6. '_def' → logprob: -6.763218402862549
    7. '_ang' → logprob: -7.513218402862549
    8. 'def' → logprob: -7.888218402862549
    9. '(angle' → logprob: -7.888218402862549
    10. 'angle' → logprob: -8.13821792602539

Token 80: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002901757834479213
    2. '(_:' → logprob: -9.500289916992188
    3. '()' → logprob: -9.625289916992188
    4. '(:' → logprob: -9.875289916992188
    5. '(' → logprob: -10.375289916992188
    6. ' ():' → logprob: -10.625289916992188
    7. '(_' → logprob: -11.500289916992188
    8. '():
' → logprob: -11.500289916992188
    9. '_' → logprob: -12.000289916992188
    10. '(":' → logprob: -13.375289916992188

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005562512087635696
    2. 'return' → logprob: -7.500556468963623
    3. '	return' → logprob: -13.250555992126465
    4. '  ' → logprob: -14.750555992126465
    5. 'pass' → logprob: -14.875555992126465
    6. 'def' → logprob: -15.125555992126465
    7. ' return' → logprob: -15.125555992126465
    8. ':return' → logprob: -16.00055694580078
    9. ' ' → logprob: -17.12555694580078
    10. '       ' → logprob: -17.25055694580078

Token 82: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011077305302023888
    2. '   ' → logprob: -4.511077404022217
    3. 'pass' → logprob: -10.886076927185059
    4. ' return' → logprob: -12.511076927185059
    5. 'pi' → logprob: -12.636076927185059
    6. '	return' → logprob: -13.386076927185059
    7. 'def' → logprob: -14.011076927185059
    8. ' ' → logprob: -14.761076927185059
    9. 'returns' → logprob: -15.261076927185059
    10. '  ' → logprob: -15.261076927185059

Token 83: ' pi' (ID: 6404)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.01855642907321453
    2. '90' → logprob: -4.143556594848633
    3. '(pi' → logprob: -6.518556594848633
    4. ' pi' → logprob: -7.268556594848633
    5. 'π' → logprob: -8.643556594848633
    6. '/pi' → logprob: -10.018556594848633
    7. '(' → logprob: -10.643556594848633
    8. '_pi' → logprob: -10.643556594848633
    9. '*pi' → logprob: -10.893556594848633
    10. '.pi' → logprob: -11.018556594848633

Token 84: ' /' (ID: 820)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008136780234053731
    2. '/' → logprob: -8.375813484191895
    3. '<|end|>' → logprob: -8.375813484191895
    4. '#' → logprob: -9.375813484191895
    5. '```' → logprob: -9.625813484191895
    6. 'return' → logprob: -10.000813484191895
    7. '0' → logprob: -10.500813484191895
    8. '   ' → logprob: -10.625813484191895
    9. '<|end|>' → logprob: -10.750813484191895
    10. '*' → logprob: -11.500813484191895

Token 85: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '4' → logprob: -15.625
    3. '3' → logprob: -20.0
    4. '₂' → logprob: -20.75
    5. '180' → logprob: -20.75
    6. '8' → logprob: -21.125
    7. '6' → logprob: -21.375
    8. '２' → logprob: -21.875
    9. ' ' → logprob: -22.125
    10. '_' → logprob: -22.75

Token 86: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '4' → logprob: -16.125
    3. '8' → logprob: -20.125
    4. '6' → logprob: -20.75
    5. '3' → logprob: -21.75
    6. '₂' → logprob: -21.75
    7. '180' → logprob: -22.5
    8. 'two' → logprob: -22.625
    9. '200' → logprob: -22.75
    10. '２' → logprob: -22.75

Token 87: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007231564959511161
    2. '<|end|>' → logprob: -7.250723361968994
    3. ' def' → logprob: -12.125722885131836
    4. '```' → logprob: -12.625722885131836
    5. '<|end|>' → logprob: -13.250722885131836
    6. '_def' → logprob: -13.625722885131836
    7. '-def' → logprob: -15.000722885131836
    8. '.def' → logprob: -15.375722885131836
    9. ':def' → logprob: -15.375722885131836
    10. '	def' → logprob: -16.625722885131836

Token 88: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.45848218582978e-06
    2. ' def' → logprob: -13.37500286102295
    3. '<|end|>' → logprob: -14.87500286102295
    4. '_def' → logprob: -15.87500286102295
    5. '```' → logprob: -16.500001907348633
    6. ':def' → logprob: -16.750001907348633
    7. '-def' → logprob: -17.125001907348633
    8. '.def' → logprob: -17.500001907348633
    9. 'print' → logprob: -17.500001907348633
    10. '#' → logprob: -17.625001907348633

Token 89: ' step' (ID: 5983)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.8429452180862427
    2. 'rotate' → logprob: -1.0929452180862427
    3. 'next' → logprob: -1.9679452180862427
    4. 'angle' → logprob: -3.592945098876953
    5. 'rotation' → logprob: -4.592945098876953
    6. 'get' → logprob: -4.717945098876953
    7. 'calculate' → logprob: -4.842945098876953
    8. 'move' → logprob: -5.092945098876953
    9. 'quarter' → logprob: -5.342945098876953
    10. ' turn' → logprob: -5.717945098876953

Token 90: '_angle' (ID: 51505)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007154945749789476
    2. '()' → logprob: -5.257154941558838
    3. '():
' → logprob: -6.382154941558838
    4. '_' → logprob: -9.382155418395996
    5. '(' → logprob: -9.882155418395996
    6. '(n' → logprob: -11.132155418395996
    7. '();' → logprob: -11.382155418395996
    8. ' ():' → logprob: -11.632155418395996
    9. 'def' → logprob: -11.757155418395996
    10. '():

' → logprob: -12.007155418395996

Token 91: '(' (ID: 7)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.710618905955926e-05
    2. '()' → logprob: -9.750097274780273
    3. '():
' → logprob: -10.875097274780273
    4. ' ():' → logprob: -11.375097274780273
    5. '(' → logprob: -12.375097274780273
    6. '(:' → logprob: -13.875097274780273
    7. '():

' → logprob: -14.500097274780273
    8. '().' → logprob: -14.625097274780273
    9. '(":' → logprob: -14.750097274780273
    10. '(_:' → logprob: -14.875097274780273

Token 92: 'ang' (ID: 516)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9629320502281189
    2. '):' → logprob: -1.4629321098327637
    3. 'n' → logprob: -1.7129321098327637
    4. 'angle' → logprob: -1.8379321098327637
    5. 'step' → logprob: -3.7129321098327637
    6. 'theta' → logprob: -4.962932109832764
    7. ')' → logprob: -5.587932109832764
    8. 'increment' → logprob: -5.837932109832764
    9. 'def' → logprob: -6.212932109832764
    10. 'delta' → logprob: -6.337932109832764

Token 93: '):
' (ID: 1883)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.0006507210782729089
    2. 'les' → logprob: -7.500650882720947
    3. ' le' → logprob: -9.375650405883789
    4. '.le' → logprob: -13.125650405883789
    5. '­le' → logprob: -13.250650405883789
    6. '_le' → logprob: -13.375650405883789
    7. 'l' → logprob: -13.375650405883789
    8. '(le' → logprob: -13.500650405883789
    9. 'led' → logprob: -13.875650405883789
    10. 'let' → logprob: -13.875650405883789

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.6312321753939614e-05
    2. 'return' → logprob: -10.250036239624023
    3. '	return' → logprob: -15.000036239624023
    4. '  ' → logprob: -15.000036239624023
    5. ' return' → logprob: -16.125036239624023
    6. '    ' → logprob: -17.250036239624023
    7. '       ' → logprob: -17.875036239624023
    8. '   ' → logprob: -17.875036239624023
    9. '   ' → logprob: -17.875036239624023
    10. ' ' → logprob: -18.000036239624023

Token 95: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4741283059120178
    2. 'return' (adapté à ' return') → logprob: -0.9741283059120178
    3. 'ang' → logprob: -10.349128723144531
    4. ' return' → logprob: -11.474128723144531
    5. '	return' → logprob: -11.724128723144531
    6. '  ' → logprob: -14.974128723144531
    7. 'returns' → logprob: -16.09912872314453
    8. '返回' → logprob: -17.22412872314453
    9. ' ' → logprob: -17.34912872314453
    10. '    ' → logprob: -17.59912872314453

Token 96: ' ang' (ID: 2929)
  Prédit: 'ang'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ang' → logprob: -0.0005411197198554873
    2. ' ang' → logprob: -7.6255412101745605
    3. 'angle' → logprob: -11.250540733337402
    4. '   ' → logprob: -11.375540733337402
    5. 'atan' → logprob: -11.500540733337402
    6. ' ' → logprob: -11.625540733337402
    7. '  ' → logprob: -13.250540733337402
    8. '(' → logprob: -13.500540733337402
    9. 'pi' → logprob: -13.625540733337402
    10. 'cos' → logprob: -14.375540733337402

Token 97: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6939123868942261
    2. ' +' → logprob: -0.6939123868942261
    3. '%' → logprob: -7.818912506103516
    4. '```' → logprob: -8.568912506103516
    5. '+=' → logprob: -10.193912506103516
    6. '+(' → logprob: -10.443912506103516
    7. '<|end|>' → logprob: -10.693912506103516
    8. '-' → logprob: -11.193912506103516
    9. '++' → logprob: -11.568912506103516
    10. '   ' → logprob: -11.568912506103516

Token 98: ' quarter' (ID: 12965)
  Prédit: 'quarter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quarter' → logprob: -0.004129811190068722
    2. ' quarter' → logprob: -5.504129886627197
    3. 'step' → logprob: -10.379129409790039
    4. 'pi' → logprob: -11.379129409790039
    5. '   ' → logprob: -12.129129409790039
    6. 'quad' → logprob: -14.379129409790039
    7. 'qu' → logprob: -14.379129409790039
    8. 'half' → logprob: -14.379129409790039
    9. ' ' → logprob: -14.754129409790039
    10. 'Quarter' → logprob: -15.254129409790039

Token 99: '_turn' (ID: 89223)
  Prédit: '_turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_turn' → logprob: -0.001907216152176261
    2. '_t' → logprob: -7.3769073486328125
    3. '_angle' → logprob: -7.7519073486328125
    4. '_step' → logprob: -7.8769073486328125
    5. '_' → logprob: -9.876907348632812
    6. '_ang' → logprob: -10.751907348632812
    7. '_time' → logprob: -10.876907348632812
    8. '"_' → logprob: -11.001907348632812
    9. '_run' → logprob: -11.376907348632812
    10. '_steps' → logprob: -11.501907348632812

Token 100: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0921942703134846e-05
    2. '()`' → logprob: -11.75001049041748
    3. '(' → logprob: -12.87501049041748
    4. '()
' → logprob: -16.750011444091797
    5. '()}' → logprob: -16.750011444091797
    6. '())' → logprob: -16.875011444091797
    7. ' ()' → logprob: -16.875011444091797
    8. '().' → logprob: -16.875011444091797
    9. '()(' → logprob: -17.000011444091797
    10. '()

' → logprob: -17.625011444091797

Token 101: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4378848391061183e-05
    2. '```' → logprob: -11.500014305114746
    3. ' def' → logprob: -13.375014305114746
    4. '#' → logprob: -14.250014305114746
    5. '<|end|>' → logprob: -14.250014305114746
    6. ':def' → logprob: -15.500014305114746
    7. '``' → logprob: -15.625014305114746
    8. 'return' → logprob: -15.625014305114746
    9. '_def' → logprob: -16.000015258789062
    10. '<|end|>' → logprob: -16.250015258789062

Token 102: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.017367416992783546
    2. ' step' → logprob: -4.642367362976074
    3. 'get' → logprob: -6.017367362976074
    4. 'angle' → logprob: -6.642367362976074
    5. 'initial' → logprob: -7.017367362976074
    6. 'rotate' → logprob: -7.517367362976074
    7. 'increment' → logprob: -7.767367362976074
    8. 'next' → logprob: -8.142367362976074
    9. 'set' → logprob: -8.392367362976074
    10. 'should' → logprob: -8.517367362976074

Token 103: '_x' (ID: 7054)
  Prédit: '_angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.0006473870598711073
    2. '_' → logprob: -8.12564754486084
    3. '_ang' → logprob: -8.62564754486084
    4. '_x' → logprob: -9.50064754486084
    5. '_angles' → logprob: -10.00064754486084
    6. '_step' → logprob: -12.25064754486084
    7. '(angle' → logprob: -12.75064754486084
    8. '_function' → logprob: -13.12564754486084
    9. '_y' → logprob: -13.12564754486084
    10. '_position' → logprob: -13.25064754486084

Token 104: '(x' (ID: 4061)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.028288884088397026
    2. '():
' → logprob: -4.153288841247559
    3. '(' → logprob: -4.528288841247559
    4. '()' → logprob: -6.653288841247559
    5. '   ' → logprob: -10.528288841247559
    6. '():
' → logprob: -11.278288841247559
    7. '():

' → logprob: -11.528288841247559
    8. '().' → logprob: -11.903288841247559
    9. '(angle' → logprob: -12.153288841247559
    10. '();' → logprob: -12.153288841247559

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3881951570510864
    2. '):
' → logprob: -1.2631951570510864
    3. '):' → logprob: -3.388195037841797
    4. '   ' → logprob: -5.638195037841797
    5. ')' → logprob: -7.263195037841797
    6. '):

' → logprob: -7.638195037841797
    7. ' +' → logprob: -8.513195037841797
    8. '+' → logprob: -9.513195037841797
    9. '):
' → logprob: -9.513195037841797
    10. '),' → logprob: -10.138195037841797

Token 106: ' ang' (ID: 2929)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cos' → logprob: -0.007996252737939358
    2. '   ' → logprob: -5.132996082305908
    3. 'ang' → logprob: -7.007996082305908
    4. ' cos' → logprob: -7.882996082305908
    5. 'angle' → logprob: -8.257996559143066
    6. 'step' → logprob: -8.882996559143066
    7. 'cost' → logprob: -9.257996559143066
    8. '*cos' → logprob: -10.132996559143066
    9. ' ' → logprob: -10.382996559143066
    10. '       ' → logprob: -10.632996559143066

Token 107: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.062323927879333496
    2. '):' → logprob: -2.812324047088623
    3. '):

' → logprob: -8.437323570251465
    4. ',' → logprob: -9.562323570251465
    5. '):
' → logprob: -10.312323570251465
    6. ')' → logprob: -10.937323570251465
    7. '   ' → logprob: -11.062323570251465
    8. ')):
' → logprob: -13.687323570251465
    9. '),' → logprob: -14.937323570251465
    10. ')):' → logprob: -15.062323570251465

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3856492842023727e-06
    2. 'return' → logprob: -13.625000953674316
    3. '  ' → logprob: -15.750000953674316
    4. '	return' → logprob: -17.500001907348633
    5. '    ' → logprob: -18.500001907348633
    6. ' return' → logprob: -18.875001907348633
    7. '   ' → logprob: -19.125001907348633
    8. '   ' → logprob: -19.375001907348633
    9. '       ' → logprob: -19.625001907348633
    10. ' ' → logprob: -19.750001907348633

Token 109: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0008381000952795148
    2. '   ' → logprob: -7.125838279724121
    3. ' return' → logprob: -10.625838279724121
    4. 'x' → logprob: -12.000838279724121
    5. '	return' → logprob: -12.750838279724121
    6. 'returns' → logprob: -16.375837326049805
    7. 'Return' → logprob: -17.500837326049805
    8. ':return' → logprob: -17.500837326049805
    9. '{return' → logprob: -17.500837326049805
    10. '返回' → logprob: -18.250837326049805

Token 110: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.8889261304575484e-06
    2. 'cos' → logprob: -12.500003814697266
    3. ' x' → logprob: -15.750003814697266
    4. 'round' → logprob: -19.625003814697266
    5. '   ' → logprob: -20.000003814697266
    6. '	x' → logprob: -21.375003814697266
    7. ' ' → logprob: -21.500003814697266
    8. '(x' → logprob: -22.375003814697266
    9. '  ' → logprob: -22.500003814697266
    10. '"x' → logprob: -22.750003814697266

Token 111: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.011308582499623299
    2. '*' → logprob: -5.011308670043945
    3. '*cos' → logprob: -5.386308670043945
    4. ' ' → logprob: -12.886308670043945
    5. ' ' → logprob: -14.886308670043945
    6. 'cos' → logprob: -15.386308670043945
    7. '*c' → logprob: -15.761308670043945
    8. '\' → logprob: -15.886308670043945
    9. '*sin' → logprob: -16.136308670043945
    10. '.cos' → logprob: -16.511308670043945

Token 112: ' cos' (ID: 8974)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -1.9623810658231378e-05
    2. ' cos' → logprob: -11.500020027160645
    3. '*cos' → logprob: -12.250020027160645
    4. 'sin' → logprob: -12.875020027160645
    5. 'x' → logprob: -13.625020027160645
    6. '.cos' → logprob: -14.750020027160645
    7. '(c' → logprob: -16.000019073486328
    8. 'cost' → logprob: -16.250019073486328
    9. '_cos' → logprob: -16.250019073486328
    10. 'Cos' → logprob: -17.250019073486328

Token 113: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00013512482109945267
    2. '(angle' → logprob: -9.12513542175293
    3. '(step' → logprob: -10.87513542175293
    4. '(ans' → logprob: -14.12513542175293
    5. '(x' → logprob: -14.75013542175293
    6. '(a' → logprob: -14.87513542175293
    7. '(`' → logprob: -15.00013542175293
    8. '(theta' → logprob: -15.50013542175293
    9. '(an' → logprob: -15.50013542175293
    10. '(anchor' → logprob: -15.50013542175293

Token 114: 'ang' (ID: 516)
  Prédit: 'ang'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ang' → logprob: -3.128163257315464e-07
    2. ' ang' → logprob: -15.125
    3. 'angg' → logprob: -19.25
    4. 'angs' → logprob: -19.5
    5. '(' → logprob: -20.0
    6. '_ang' → logprob: -20.25
    7. '-ang' → logprob: -20.625
    8. 'angular' → logprob: -21.0
    9. 'angu' → logprob: -21.5
    10. 'angler' → logprob: -21.625

Token 115: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.688212614681106e-05
    2. ')*' → logprob: -12.250017166137695
    3. ')`' → logprob: -12.500017166137695
    4. ')**' → logprob: -12.750017166137695
    5. ')
' → logprob: -13.000017166137695
    6. '))' → logprob: -14.250017166137695
    7. ')

' → logprob: -14.250017166137695
    8. '```' → logprob: -14.500017166137695
    9. ')}' → logprob: -15.375017166137695
    10. '）' → logprob: -15.375017166137695

Token 116: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.088346359931165e-07
    2. ' def' → logprob: -14.375000953674316
    3. '```' → logprob: -15.625000953674316
    4. '-def' → logprob: -16.375
    5. ':def' → logprob: -17.75
    6. '_def' → logprob: -18.125
    7. '	def' → logprob: -18.25
    8. '.def' → logprob: -18.25
    9. '(def' → logprob: -19.75
    10. 'Def' → logprob: -20.125

Token 117: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.006913099437952042
    2. '_step' → logprob: -5.006913185119629
    3. ' step' → logprob: -8.756913185119629
    4. '(step' → logprob: -11.131913185119629
    5. '	step' → logprob: -11.506913185119629
    6. '_' → logprob: -12.006913185119629
    7. '.step' → logprob: -12.006913185119629
    8. '_y' → logprob: -13.256913185119629
    9. 'Step' → logprob: -14.756913185119629
    10. 'y' → logprob: -15.381913185119629

Token 118: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0003380846756044775
    2. '_x' → logprob: -8.000338554382324
    3. '_' → logprob: -13.500338554382324
    4. '_Y' → logprob: -14.125338554382324
    5. '(y' → logprob: -16.875337600708008
    6. '_step' → logprob: -17.125337600708008
    7. ''_' → logprob: -17.125337600708008
    8. '_yaml' → logprob: -17.125337600708008
    9. '}_' → logprob: -17.250337600708008
    10. '"_' → logprob: -17.250337600708008

Token 119: '(y' (ID: 14684)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.30714431405067444
    2. '(' → logprob: -1.682144284248352
    3. '(y' → logprob: -2.5571444034576416
    4. '():' → logprob: -7.6821441650390625
    5. '()' → logprob: -8.432144165039062
    6. '():
' → logprob: -8.807144165039062
    7. '   ' → logprob: -10.932144165039062
    8. '(angle' → logprob: -11.057144165039062
    9. '(n' → logprob: -11.182144165039062
    10. '(`' → logprob: -11.557144165039062

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07953129708766937
    2. '):
' → logprob: -3.329531192779541
    3. '):' → logprob: -3.454531192779541
    4. '   ' → logprob: -4.829531192779541
    5. '):

' → logprob: -8.0795316696167
    6. ')' → logprob: -8.3295316696167
    7. '):
' → logprob: -8.3295316696167
    8. '),' → logprob: -9.5795316696167
    9. ' +' → logprob: -10.2045316696167
    10. '+' → logprob: -10.7045316696167

Token 121: ' ang' (ID: 2929)
  Prédit: 'ang'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ang' → logprob: -1.747814349073451e-05
    2. ' ang' → logprob: -11.000017166137695
    3. '   ' → logprob: -14.250017166137695
    4. '_ang' → logprob: -17.500017166137695
    5. '-ang' → logprob: -18.500017166137695
    6. '  ' → logprob: -19.125017166137695
    7. 'angs' → logprob: -19.875017166137695
    8. '       ' → logprob: -20.250017166137695
    9. '	' → logprob: -20.250017166137695
    10. 'angu' → logprob: -20.625017166137695

Token 122: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5765982270240784
    2. '):
' → logprob: -0.8265982270240784
    3. '):

' → logprob: -7.826598167419434
    4. '):
' → logprob: -8.826598167419434
    5. '   ' → logprob: -9.826598167419434
    6. ')' → logprob: -9.826598167419434
    7. ').' → logprob: -13.951598167419434
    8. ')):' → logprob: -13.951598167419434
    9. ')):
' → logprob: -14.576598167419434
    10. ');' → logprob: -14.576598167419434

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.981667537620524e-06
    2. 'return' → logprob: -13.250001907348633
    3. '  ' → logprob: -16.625001907348633
    4. '	return' → logprob: -17.500001907348633
    5. ' return' → logprob: -17.625001907348633
    6. '    ' → logprob: -18.875001907348633
    7. '       ' → logprob: -19.000001907348633
    8. '   ' → logprob: -19.125001907348633
    9. '   ' → logprob: -19.625001907348633
    10. '     ' → logprob: -20.875001907348633

Token 124: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023269006982445717
    2. 'return' (adapté à ' return') → logprob: -3.773268938064575
    3. ' return' → logprob: -10.898268699645996
    4. '	return' → logprob: -12.648268699645996
    5. '  ' → logprob: -14.023268699645996
    6. '       ' → logprob: -15.273268699645996
    7. '{return' → logprob: -15.648268699645996
    8. '    ' → logprob: -15.898268699645996
    9. ':return' → logprob: -16.398269653320312
    10. '     ' → logprob: -16.648269653320312

Token 125: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -9.088346359931165e-07
    2. ' y' → logprob: -14.125000953674316
    3. 'sin' → logprob: -17.125
    4. '   ' → logprob: -17.375
    5. '	y' → logprob: -20.125
    6. 'yb' → logprob: -21.875
    7. '(y' → logprob: -22.625
    8. 'y's' → logprob: -23.0
    9. '  ' → logprob: -23.375
    10. ''y' → logprob: -23.5

Token 126: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47417977452278137
    2. '+' → logprob: -0.974179744720459
    3. '   ' → logprob: -9.224180221557617
    4. ' ' → logprob: -13.099180221557617
    5. '  ' → logprob: -14.224180221557617
    6. '    ' → logprob: -14.474180221557617
    7. '     ' → logprob: -15.224180221557617
    8. '       ' → logprob: -15.724180221557617
    9. ' ' → logprob: -15.849180221557617
    10. '	' → logprob: -16.224180221557617

Token 127: ' sin' (ID: 2187)
  Prédit: 'sin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sin' → logprob: -4.320199877838604e-07
    2. ' sin' → logprob: -15.0
    3. 'sen' → logprob: -18.75
    4. '.sin' → logprob: -20.25
    5. '*sin' → logprob: -21.0
    6. 'si' → logprob: -21.75
    7. 'sing' → logprob: -22.5
    8. 'Sin' → logprob: -22.75
    9. 'son' → logprob: -24.0
    10. 'syn' → logprob: -24.625

Token 128: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '(angle' → logprob: -19.375
    3. '(an' → logprob: -20.25
    4. '(ans' → logprob: -20.25
    5. '(y' → logprob: -20.5
    6. '（' → logprob: -20.75
    7. ' (' → logprob: -20.875
    8. '()' → logprob: -21.625
    9. '(
' → logprob: -21.625
    10. '(in' → logprob: -22.125

Token 129: 'ang' (ID: 516)
  Prédit: 'ang'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ang' → logprob: -3.128163257315464e-07
    2. ' ang' → logprob: -15.25
    3. '(' → logprob: -19.625
    4. 'angs' → logprob: -20.375
    5. 'angg' → logprob: -21.125
    6. 'angular' → logprob: -21.5
    7. 'angu' → logprob: -21.625
    8. '-ang' → logprob: -21.625
    9. 'angk' → logprob: -21.875
    10. '_ang' → logprob: -21.875

Token 130: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -14.375000953674316
    3. ')

' → logprob: -15.125000953674316
    4. '```' → logprob: -15.625000953674316
    5. '）' → logprob: -16.250001907348633
    6. '}' → logprob: -16.875001907348633
    7. '))' → logprob: -17.625001907348633
    8. ')}' → logprob: -17.625001907348633
    9. ')`' → logprob: -18.000001907348633
    10. ' )' → logprob: -18.250001907348633

Token 131: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.8074162653647363e-05
    2. '```' → logprob: -11.000018119812012
    3. ' def' → logprob: -14.250018119812012
    4. ':def' → logprob: -15.500018119812012
    5. 'if' → logprob: -16.000017166137695
    6. '``' → logprob: -16.125017166137695
    7. '<|end|>' → logprob: -16.500017166137695
    8. 'return' → logprob: -17.125017166137695
    9. '_def' → logprob: -17.375017166137695
    10. '-def' → logprob: -18.000017166137695

Token 132: ' update' (ID: 4027)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -1.103408932685852
    2. 'get' → logprob: -1.353408932685852
    3. 'main' → logprob: -2.3534088134765625
    4. 'move' → logprob: -2.6034088134765625
    5. 'calculate' → logprob: -2.7284088134765625
    6. 'draw' → logprob: -3.1034088134765625
    7. 'update' → logprob: -3.3534088134765625
    8. 'simulate' → logprob: -3.8534088134765625
    9. 'step' → logprob: -4.3534088134765625
    10. 'next' → logprob: -5.2284088134765625

Token 133: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.09293332695960999
    2. '_' → logprob: -3.967933416366577
    3. '_ang' → logprob: -3.967933416366577
    4. '(' → logprob: -4.592933177947998
    5. '_position' → logprob: -4.967933177947998
    6. '_angles' → logprob: -5.092933177947998
    7. '_update' → logprob: -5.217933177947998
    8. '():' → logprob: -5.342933177947998
    9. '_x' → logprob: -5.717933177947998
    10. '(x' → logprob: -6.092933177947998

Token 134: '(y' (ID: 14684)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.002480412134900689
    2. '(' → logprob: -6.252480506896973
    3. '():
' → logprob: -8.252480506896973
    4. '()' → logprob: -8.877480506896973
    5. '(:' → logprob: -10.002480506896973
    6. ' ():' → logprob: -10.002480506896973
    7. '(_:' → logprob: -10.877480506896973
    8. '(":' → logprob: -11.627480506896973
    9. '():

' → logprob: -12.127480506896973
    10. '(':' → logprob: -12.252480506896973

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03522739186882973
    2. '):
' → logprob: -3.5352272987365723
    3. '):' → logprob: -5.410227298736572
    4. '   ' → logprob: -7.285227298736572
    5. ')' → logprob: -9.16022777557373
    6. 'ang' → logprob: -9.16022777557373
    7. '):

' → logprob: -10.16022777557373
    8. '):
' → logprob: -10.91022777557373
    9. '),' → logprob: -11.91022777557373
    10. '```' → logprob: -12.41022777557373

Token 136: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02666170336306095
    2. 'ang' → logprob: -3.6516616344451904
    3. 'angle' → logprob: -8.52666187286377
    4. 'atan' → logprob: -9.27666187286377
    5. 'y' → logprob: -9.90166187286377
    6. ' x' → logprob: -11.77666187286377
    7. ' ang' → logprob: -12.40166187286377
    8. '   ' → logprob: -13.02666187286377
    9. 'theta' → logprob: -14.02666187286377
    10. 'angled' → logprob: -14.27666187286377

Token 137: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05028517171740532
    2. '):' → logprob: -3.0502851009368896
    3. ',' → logprob: -6.550285339355469
    4. '   ' → logprob: -9.050285339355469
    5. '):

' → logprob: -9.050285339355469
    6. '):
' → logprob: -10.925285339355469
    7. ')' → logprob: -11.300285339355469
    8. ')):
' → logprob: -15.050285339355469
    9. '),' → logprob: -15.050285339355469
    10. ':' → logprob: -15.800285339355469

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.173704271830502e-06
    2. 'return' → logprob: -12.87500286102295
    3. '  ' → logprob: -14.87500286102295
    4. '```' → logprob: -16.625003814697266
    5. '	return' → logprob: -17.750003814697266
    6. '       ' → logprob: -18.250003814697266
    7. ' ' → logprob: -18.250003814697266
    8. '    ' → logprob: -18.500003814697266
    9. 'def' → logprob: -18.875003814697266
    10. ' return' → logprob: -18.875003814697266

Token 139: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014169031754136086
    2. 'return' (adapté à ' return') → logprob: -4.264169216156006
    3. '	return' → logprob: -12.389168739318848
    4. ' return' → logprob: -14.139168739318848
    5. '  ' → logprob: -14.889168739318848
    6. '返回' → logprob: -17.389169692993164
    7. '       ' → logprob: -17.639169692993164
    8. '```' → logprob: -17.639169692993164
    9. '{return' → logprob: -18.014169692993164
    10. '    ' → logprob: -18.014169692993164

Token 140: ' atan' (ID: 70327)
  Prédit: 'atan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atan' → logprob: -3.297462171758525e-05
    2. ' atan' → logprob: -10.375033378601074
    3. '.atan' → logprob: -13.750033378601074
    4. 'atar' → logprob: -14.750033378601074
    5. 'aton' → logprob: -16.125032424926758
    6. 'atin' → logprob: -17.000032424926758
    7. 'attan' → logprob: -17.125032424926758
    8. 'atang' → logprob: -17.375032424926758
    9. 'atat' → logprob: -17.500032424926758
    10. 'ata' → logprob: -17.500032424926758

Token 141: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.79811754100956e-05
    2. '(' → logprob: -10.500038146972656
    3. '   ' → logprob: -12.125038146972656
    4. '₂' → logprob: -13.125038146972656
    5. '```' → logprob: -14.000038146972656
    6. ' ' → logprob: -14.500038146972656
    7. '２' → logprob: -15.000038146972656
    8. '_' → logprob: -15.250038146972656
    9. 'ang' → logprob: -15.500038146972656
    10. 'angle' → logprob: -15.625038146972656

Token 142: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -6.098748053773306e-05
    2. '(' → logprob: -9.75006103515625
    3. '(angle' → logprob: -13.25006103515625
    4. '(x' → logprob: -14.12506103515625
    5. 'y' → logprob: -16.62506103515625
    6. '(a' → logprob: -17.37506103515625
    7. '(Y' → logprob: -18.75006103515625
    8. '((' → logprob: -18.87506103515625
    9. '(theta' → logprob: -18.87506103515625
    10. '(de' → logprob: -19.12506103515625

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7432603272027336e-06
    2. ',x' → logprob: -13.375001907348633
    3. ',y' → logprob: -16.625001907348633
    4. '，' → logprob: -18.375001907348633
    5. ' ,' → logprob: -18.875001907348633
    6. ',
' → logprob: -20.875001907348633
    7. '،' → logprob: -22.125001907348633
    8. '',' → logprob: -23.000001907348633
    9. ',,' → logprob: -23.500001907348633
    10. '(),' → logprob: -23.750001907348633

Token 144: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.5776860184123507e-06
    2. ' x' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.500001907348633
    4. '	x' → logprob: -21.625001907348633
    5. '_x' → logprob: -22.750001907348633
    6. '(x' → logprob: -23.250001907348633
    7. ' ' → logprob: -23.750001907348633
    8. '  ' → logprob: -23.875001907348633
    9. '-x' → logprob: -24.000001907348633
    10. '"x' → logprob: -24.125001907348633

Token 145: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. '))' → logprob: -14.375001907348633
    3. ')`' → logprob: -14.875001907348633
    4. '```' → logprob: -15.750001907348633
    5. ')

' → logprob: -15.875001907348633
    6. ')
' → logprob: -15.875001907348633
    7. '),' → logprob: -16.750001907348633
    8. '）' → logprob: -17.375001907348633
    9. ' )' → logprob: -17.375001907348633
    10. ').' → logprob: -17.750001907348633

Token 146: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0042398544028401375
    2. '<|end|>' → logprob: -6.004240036010742
    3. '```' → logprob: -6.379240036010742
    4. ' def' → logprob: -11.254240036010742
    5. '<|end|>' → logprob: -11.504240036010742
    6. 'return' → logprob: -11.629240036010742
    7. 'if' → logprob: -12.129240036010742
    8. 'print' → logprob: -12.254240036010742
    9. ':def' → logprob: -12.379240036010742
    10. '   ' → logprob: -12.379240036010742

Token 147: ' format' (ID: 6011)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.5382472276687622
    2. 'get' → logprob: -1.2882472276687622
    3. 'final' → logprob: -3.1632471084594727
    4. 'main' → logprob: -3.7882471084594727
    5. 'calculate' → logprob: -3.9132471084594727
    6. 'next' → logprob: -4.788247108459473
    7. 'process' → logprob: -4.788247108459473
    8. 'should' → logprob: -5.038247108459473
    9. 'step' → logprob: -5.288247108459473
    10. 'move' → logprob: -5.538247108459473

Token 148: '_output' (ID: 16732)
  Prédit: '_output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_output' → logprob: -0.12200738489627838
    2. '_angle' → logprob: -3.122007369995117
    3. '_' → logprob: -4.122007369995117
    4. '_input' → logprob: -4.372007369995117
    5. '_code' → logprob: -4.497007369995117
    6. '_result' → logprob: -5.122007369995117
    7. '_string' → logprob: -5.997007369995117
    8. '_t' → logprob: -6.122007369995117
    9. '()' → logprob: -6.122007369995117
    10. '_data' → logprob: -6.997007369995117

Token 149: '(value' (ID: 6333)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00032712158281356096
    2. '()' → logprob: -8.250327110290527
    3. '():
' → logprob: -10.750327110290527
    4. '(:' → logprob: -11.125327110290527
    5. ' ():' → logprob: -11.500327110290527
    6. '(_:' → logprob: -11.875327110290527
    7. ':' → logprob: -12.625327110290527
    8. '(' → logprob: -12.625327110290527
    9. '(":' → logprob: -13.875327110290527
    10. '(':' → logprob: -14.250327110290527

Token 150: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1448947787284851
    2. '):
' → logprob: -2.01989483833313
    3. '   ' → logprob: -6.394894599914551
    4. ')' → logprob: -8.26989459991455
    5. ',' → logprob: -8.89489459991455
    6. '):

' → logprob: -9.26989459991455
    7. '):
' → logprob: -10.01989459991455
    8. ':' → logprob: -11.51989459991455
    9. ').' → logprob: -14.14489459991455
    10. '       ' → logprob: -14.39489459991455

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.9361264946837764e-07
    2. '  ' → logprob: -16.125
    3. '    ' → logprob: -18.625
    4. ' ' → logprob: -19.75
    5. '	return' → logprob: -19.875
    6. 'return' → logprob: -20.25
    7. '       ' → logprob: -20.375
    8. '   ' → logprob: -21.125
    9. '   ' → logprob: -21.5
    10. ' return' → logprob: -22.125

Token 152: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16029682755470276
    2. '   ' → logprob: -1.9102967977523804
    3. 'print' → logprob: -9.660296440124512
    4. ' return' → logprob: -11.785296440124512
    5. '	return' → logprob: -14.660296440124512
    6. 'format' → logprob: -15.285296440124512
    7. 'formatted' → logprob: -15.410296440124512
    8. '{return' → logprob: -15.910296440124512
    9. '  ' → logprob: -16.410297393798828
    10. 'pass' → logprob: -16.660297393798828

Token 153: ' "{' (ID: 29585)
  Prédit: '"{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.39966362714767456
    2. 'f' → logprob: -1.1496636867523193
    3. 'str' → logprob: -5.52466344833374
    4. 'format' → logprob: -6.14966344833374
    5. ' f' → logprob: -6.14966344833374
    6. ' "{' → logprob: -6.52466344833374
    7. 'round' → logprob: -6.64966344833374
    8. ''{' → logprob: -6.89966344833374
    9. '"' → logprob: -7.89966344833374
    10. '   ' → logprob: -9.149663925170898

Token 154: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -2.4868770196917467e-05
    2. ':' → logprob: -10.750024795532227
    3. '0' → logprob: -12.625024795532227
    4. ':<' → logprob: -17.125024795532227
    5. ':+' → logprob: -19.000024795532227
    6. '}.' → logprob: -19.250024795532227
    7. ':?' → logprob: -19.500024795532227
    8. ':.

' → logprob: -20.250024795532227
    9. ':,' → logprob: -20.250024795532227
    10. '},' → logprob: -20.875024795532227

Token 155: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17667128145694733
    2. '6' → logprob: -2.176671266555786
    3. '4' → logprob: -3.801671266555786
    4. '3' → logprob: -4.426671504974365
    5. '1' → logprob: -4.801671504974365
    6. '5' → logprob: -5.176671504974365
    7. '10' → logprob: -9.176671028137207
    8. '8' → logprob: -9.426671028137207
    9. '7' → logprob: -9.801671028137207
    10. 'f' → logprob: -10.176671028137207

Token 156: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -3.128163257315464e-07
    2. '   ' → logprob: -16.25
    3. ' f' → logprob: -17.0
    4. '}' → logprob: -17.5
    5. '	f' → logprob: -17.625
    6. '(f' → logprob: -18.0
    7. '<f' → logprob: -18.125
    8. 'ф' → logprob: -18.25
    9. ''f' → logprob: -18.75
    10. '.f' → logprob: -19.125

Token 157: '}".' (ID: 53576)
  Prédit: '}".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}".' → logprob: -0.00010080150241265073
    2. '}"' → logprob: -9.750101089477539
    3. '}' → logprob: -11.125101089477539
    4. '}.' → logprob: -11.125101089477539
    5. '}'.' → logprob: -12.250101089477539
    6. '}"
' → logprob: -12.875101089477539
    7. '}",' → logprob: -13.500101089477539
    8. '}\' → logprob: -13.500101089477539
    9. '}{' → logprob: -14.125101089477539
    10. '},' → logprob: -14.250101089477539

Token 158: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -2.2961512513575144e-05
    2. '.format' → logprob: -10.875022888183594
    3. 'f' → logprob: -13.625022888183594
    4. 'rstrip' → logprob: -14.250022888183594
    5. 'formatter' → logprob: -14.750022888183594
    6. 'formatted' → logprob: -14.875022888183594
    7. '_format' → logprob: -15.125022888183594
    8. 'fmt' → logprob: -15.750022888183594
    9. 'print' → logprob: -15.875022888183594
    10. '	format' → logprob: -16.000022888183594

Token 159: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.0028265081346035004
    2. '(output' → logprob: -6.127826690673828
    3. '(' → logprob: -7.377826690673828
    4. '_output' → logprob: -12.877826690673828
    5. '(val' → logprob: -13.127826690673828
    6. 'Output' → logprob: -13.252826690673828
    7. '()(' → logprob: -13.377826690673828
    8. '(Output' → logprob: -13.752826690673828
    9. '(valor' → logprob: -13.877826690673828
    10. 'value' → logprob: -14.252826690673828

Token 160: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. ')}' → logprob: -13.375005722045898
    3. '}' → logprob: -13.875005722045898
    4. ')
' → logprob: -14.250005722045898
    5. '})' → logprob: -14.250005722045898
    6. ')

' → logprob: -14.625005722045898
    7. '```' → logprob: -15.000005722045898
    8. ')`' → logprob: -15.125005722045898
    9. ').' → logprob: -15.500005722045898
    10. '）' → logprob: -16.0000057220459

Token 161: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011245026253163815
    2. '<|end|>' → logprob: -7.126124382019043
    3. '```' → logprob: -8.126124382019043
    4. ' def' → logprob: -11.501124382019043
    5. '   ' → logprob: -12.876124382019043
    6. '<|end|>' → logprob: -13.001124382019043
    7. ':def' → logprob: -13.126124382019043
    8. 'return' → logprob: -13.751124382019043
    9. 'if' → logprob: -13.876124382019043
    10. '_def' → logprob: -14.001124382019043

Token 162: ' print' (ID: 2123)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4975312650203705
    2. 'get' → logprob: -1.2475312948226929
    3. 'calculate' → logprob: -2.7475311756134033
    4. 'run' → logprob: -4.122531414031982
    5. 'process' → logprob: -4.747531414031982
    6. 'simulate' → logprob: -6.122531414031982
    7. 'compute' → logprob: -6.372531414031982
    8. 'execute' → logprob: -6.497531414031982
    9. 'update' → logprob: -6.497531414031982
    10. 'final' → logprob: -6.872531414031982

Token 163: '_result' (ID: 11623)
  Prédit: '_output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_output' → logprob: -0.023921024054288864
    2. '(output' → logprob: -4.023921012878418
    3. '()' → logprob: -6.023921012878418
    4. '(' → logprob: -6.273921012878418
    5. '_OUTPUT' → logprob: -8.148921012878418
    6. 'Output' → logprob: -8.273921012878418
    7. '_out' → logprob: -8.523921012878418
    8. '("_' → logprob: -9.148921012878418
    9. '(_)' → logprob: -9.273921012878418
    10. '(Output' → logprob: -9.398921012878418

Token 164: '(x' (ID: 4061)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0011173540260642767
    2. '()' → logprob: -7.37611722946167
    3. '(:' → logprob: -8.751117706298828
    4. '(' → logprob: -8.876117706298828
    5. '():
' → logprob: -9.126117706298828
    6. ' ():' → logprob: -10.626117706298828
    7. '(*' → logprob: -11.376117706298828
    8. '(_:' → logprob: -11.626117706298828
    9. ':' → logprob: -12.126117706298828
    10. '(":' → logprob: -12.376117706298828

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.583550642360933e-05
    2. ',y' → logprob: -10.875036239624023
    3. '`,' → logprob: -12.500036239624023
    4. '),' → logprob: -12.500036239624023
    5. ' ,' → logprob: -12.500036239624023
    6. ')' → logprob: -13.500036239624023
    7. '):' → logprob: -13.625036239624023
    8. '   ' → logprob: -14.500036239624023
    9. '):
' → logprob: -14.625036239624023
    10. '_,' → logprob: -14.750036239624023

Token 166: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -8.506661833962426e-05
    2. ' y' → logprob: -9.37508487701416
    3. 'format' → logprob: -15.50008487701416
    4. '	y' → logprob: -18.500085830688477
    5. '   ' → logprob: -19.125085830688477
    6. 'formatted' → logprob: -19.250085830688477
    7. ',y' → logprob: -19.875085830688477
    8. ',' → logprob: -20.125085830688477
    9. 'y's' → logprob: -20.375085830688477
    10. 'output' → logprob: -20.750085830688477

Token 167: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7786297798156738
    2. '):' → logprob: -0.7786297798156738
    3. ',' → logprob: -2.528629779815674
    4. '):

' → logprob: -6.653629779815674
    5. '   ' → logprob: -7.528629779815674
    6. '):
' → logprob: -8.778629302978516
    7. ')' → logprob: -8.778629302978516
    8. '),' → logprob: -11.778629302978516
    9. '"):
' → logprob: -12.278629302978516
    10. '"):' → logprob: -12.528629302978516

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.512236498361744e-07
    2. 'print' → logprob: -14.875000953674316
    3. '  ' → logprob: -15.750000953674316
    4. '	print' → logprob: -19.125
    5. ' ' → logprob: -19.375
    6. '    ' → logprob: -19.5
    7. ' print' → logprob: -19.75
    8. '   ' → logprob: -20.625
    9. '       ' → logprob: -20.875
    10. '   ' → logprob: -21.0

Token 169: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.2729995988775045e-06
    2. '   ' → logprob: -12.000006675720215
    3. ' print' → logprob: -16.7500057220459
    4. 'output' → logprob: -17.3750057220459
    5. 'result' → logprob: -17.5000057220459
    6. 'println' → logprob: -19.0000057220459
    7. 'printf' → logprob: -19.1250057220459
    8. '	print' → logprob: -19.5000057220459
    9. 'formatted' → logprob: -19.7500057220459
    10. '#print' → logprob: -20.2500057220459

Token 170: '(format' (ID: 39668)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.3356471359729767
    2. '("' → logprob: -1.7106471061706543
    3. '(format' → logprob: -3.0856471061706543
    4. '_result' → logprob: -3.3356471061706543
    5. '("("' → logprob: -5.085647106170654
    6. '(result' → logprob: -5.335647106170654
    7. '("_' → logprob: -5.710647106170654
    8. '(",' → logprob: -5.710647106170654
    9. '("{' → logprob: -6.210647106170654
    10. '("(' → logprob: -7.085647106170654

Token 171: '_output' (ID: 16732)
  Prédit: '_output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_output' → logprob: -0.0001549089647596702
    2. '_OUTPUT' → logprob: -9.875154495239258
    3. '"_' → logprob: -10.750154495239258
    4. '   ' → logprob: -10.750154495239258
    5. '(output' → logprob: -11.250154495239258
    6. '输出' → logprob: -11.750154495239258
    7. '}_' → logprob: -11.875154495239258
    8. '_outputs' → logprob: -12.000154495239258
    9. '\' → logprob: -12.250154495239258
    10. '_' → logprob: -12.500154495239258

Token 172: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.652451464906335e-05
    2. '(' → logprob: -11.250016212463379
    3. '(y' → logprob: -13.250016212463379
    4. '((' → logprob: -14.625016212463379
    5. '(f' → logprob: -15.250016212463379
    6. '(float' → logprob: -15.500016212463379
    7. '(value' → logprob: -16.000017166137695
    8. '(z' → logprob: -16.375017166137695
    9. '(a' → logprob: -16.500017166137695
    10. ' (' → logprob: -16.500017166137695

Token 173: '))
' (ID: 2210)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.01606123149394989
    2. ')' → logprob: -4.141061305999756
    3. '),
' → logprob: -11.766060829162598
    4. ')+' → logprob: -11.891060829162598
    5. '))' → logprob: -12.641060829162598
    6. ')),' → logprob: -12.891060829162598
    7. ').' → logprob: -13.266060829162598
    8. '},' → logprob: -13.766060829162598
    9. ')、' → logprob: -14.141060829162598
    10. ')},' → logprob: -14.516060829162598

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008626633323729038
    2. 'def' → logprob: -4.758626461029053
    3. 'print' → logprob: -11.383626937866211
    4. '  ' → logprob: -15.508626937866211
    5. '    
' → logprob: -15.883626937866211
    6. '```' → logprob: -16.13362693786621
    7. '       ' → logprob: -16.38362693786621
    8. '	print' → logprob: -16.75862693786621
    9. ' def' → logprob: -17.25862693786621
    10. '    ' → logprob: -18.00862693786621

Token 175: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.0564331205387134e-05
    2. '   ' → logprob: -11.50001049041748
    3. ' print' → logprob: -15.12501049041748
    4. '	print' → logprob: -16.500011444091797
    5. '.print' → logprob: -17.625011444091797
    6. 'println' → logprob: -19.125011444091797
    7. 'Print' → logprob: -20.000011444091797
    8. 'prints' → logprob: -20.125011444091797
    9. '_print' → logprob: -20.250011444091797
    10. 'printf' → logprob: -20.625011444091797

Token 176: '(format' (ID: 39668)
  Prédit: '(format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(format' → logprob: -7.896309739408025e-07
    2. '(form' → logprob: -15.125000953674316
    3. '=format' → logprob: -15.250000953674316
    4. '(result' → logprob: -16.0
    5. '(' → logprob: -16.75
    6. '(f' → logprob: -17.75
    7. '(fmt' → logprob: -17.875
    8. 'format' → logprob: -18.125
    9. '.format' → logprob: -18.75
    10. '(print' → logprob: -18.875

Token 177: '_output' (ID: 16732)
  Prédit: '_output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_output' → logprob: -5.288163083605468e-05
    2. '_OUTPUT' → logprob: -10.875052452087402
    3. '_result' → logprob: -11.000052452087402
    4. '输出' → logprob: -12.375052452087402
    5. '_outputs' → logprob: -12.625052452087402
    6. 'output' → logprob: -13.125052452087402
    7. '$output' → logprob: -13.375052452087402
    8. 'Output' → logprob: -13.625052452087402
    9. '   ' → logprob: -13.875052452087402
    10. '-output' → logprob: -14.125052452087402

Token 178: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: 0.0
    2. '(x' → logprob: -18.75
    3. '(format' → logprob: -19.25
    4. '(' → logprob: -19.25
    5. '(z' → logprob: -20.0
    6. '(f' → logprob: -20.25
    7. '(Y' → logprob: -20.875
    8. '(value' → logprob: -21.5
    9. '(float' → logprob: -22.125
    10. '(m' → logprob: -22.875

Token 179: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0002258277963846922
    2. '))
' → logprob: -9.125226020812988
    3. '   ' → logprob: -9.750226020812988
    4. ')' → logprob: -10.625226020812988
    5. '))

' → logprob: -11.750226020812988
    6. '}))' → logprob: -11.875226020812988
    7. '```' → logprob: -12.000226020812988
    8. ')))' → logprob: -12.625226020812988
    9. ')}' → logprob: -12.875226020812988
    10. '))


' → logprob: -13.625226020812988

Token 180: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014176322147250175
    2. '```' → logprob: -5.014176368713379
    3. '<|end|>' → logprob: -5.389176368713379
    4. 'x' → logprob: -6.514176368713379
    5. 'print' → logprob: -7.264176368713379
    6. '   ' → logprob: -8.514176368713379
    7. 'if' → logprob: -9.014176368713379
    8. 'return' → logprob: -9.139176368713379
    9. '<|end|>' → logprob: -9.639176368713379
    10. 'n' → logprob: -9.764176368713379

Token 181: ' iterate' (ID: 63166)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.08870986849069595
    2. 'run' → logprob: -2.838709831237793
    3. 'calculate' → logprob: -4.713709831237793
    4. 'execute' → logprob: -4.838709831237793
    5. 'process' → logprob: -5.463709831237793
    6. 'get' → logprob: -5.713709831237793
    7. 'start' → logprob: -7.588709831237793
    8. 'compute' → logprob: -7.713709831237793
    9. 'perform' → logprob: -8.338709831237793
    10. 'print' → logprob: -8.838709831237793

Token 182: '_steps' (ID: 52120)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.003373534418642521
    2. '()' → logprob: -6.253373622894287
    3. '(_:' → logprob: -7.628373622894287
    4. '_' → logprob: -8.003373146057129
    5. '(_' → logprob: -8.503373146057129
    6. '():
' → logprob: -8.878373146057129
    7. '(' → logprob: -9.503373146057129
    8. '_:' → logprob: -9.878373146057129
    9. '(:' → logprob: -10.003373146057129
    10. ' ():' → logprob: -10.378373146057129

Token 183: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005449305754154921
    2. '(:' → logprob: -8.000544548034668
    3. '()' → logprob: -9.500544548034668
    4. '(' → logprob: -9.750544548034668
    5. '():
' → logprob: -10.750544548034668
    6. '(_:' → logprob: -10.750544548034668
    7. ' ():' → logprob: -11.375544548034668
    8. '   ' → logprob: -12.625544548034668
    9. '(":' → logprob: -12.750544548034668
    10. ':' → logprob: -12.750544548034668

Token 184: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47502973675727844
    2. '):' → logprob: -0.975029706954956
    3. ',' → logprob: -7.600029945373535
    4. '):

' → logprob: -7.975029945373535
    5. '   ' → logprob: -9.975029945373535
    6. ':' → logprob: -10.225029945373535
    7. '):
' → logprob: -10.850029945373535
    8. ')' → logprob: -12.725029945373535
    9. 'def' → logprob: -14.350029945373535
    10. '-' → logprob: -14.350029945373535

Token 185: ' ang' (ID: 2929)
  Prédit: 'ang'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ang' → logprob: -0.46457603573799133
    2. 'x' → logprob: -1.839576005935669
    3. 'initial' → logprob: -1.964576005935669
    4. 'angle' → logprob: -2.714576005935669
    5. 'step' → logprob: -5.339576244354248
    6. 'n' → logprob: -7.714576244354248
    7. ' ang' → logprob: -8.21457576751709
    8. 'steps' → logprob: -8.71457576751709
    9. 'current' → logprob: -8.71457576751709
    10. 'start' → logprob: -8.83957576751709

Token 186: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4115065336227417
    2. '):
' → logprob: -1.1615065336227417
    3. ',' → logprob: -3.7865066528320312
    4. '):

' → logprob: -6.536506652832031
    5. '):
' → logprob: -8.911506652832031
    6. ')' → logprob: -9.661506652832031
    7. '),' → logprob: -12.661506652832031
    8. ').' → logprob: -13.286506652832031
    9. ':' → logprob: -13.536506652832031
    10. ')):' → logprob: -13.786506652832031

Token 187: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000808082812000066
    2. ' x' → logprob: -7.125808238983154
    3. 'step' → logprob: -12.750807762145996
    4. ' ' → logprob: -15.250807762145996
    5. '   ' → logprob: -16.000808715820312
    6. 'steps' → logprob: -16.125808715820312
    7. '  ' → logprob: -16.500808715820312
    8. 'n' → logprob: -16.625808715820312
    9. '	x' → logprob: -16.875808715820312
    10. 'y' → logprob: -17.500808715820312

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2664456789934775e-06
    2. ' ,' → logprob: -14.125000953674316
    3. '`,' → logprob: -15.750000953674316
    4. '，' → logprob: -15.875000953674316
    5. ',y' → logprob: -16.500001907348633
    6. ',x' → logprob: -16.875001907348633
    7. '),' → logprob: -17.875001907348633
    8. 'def' → logprob: -18.000001907348633
    9. '',' → logprob: -18.000001907348633
    10. ',
' → logprob: -18.000001907348633

Token 189: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.5048530030981055e-06
    2. ' y' → logprob: -13.500001907348633
    3. '	y' → logprob: -19.000001907348633
    4. 'y's' → logprob: -20.500001907348633
    5. '   ' → logprob: -21.125001907348633
    6. ',y' → logprob: -21.375001907348633
    7. '  ' → logprob: -23.250001907348633
    8. ' ' → logprob: -23.625001907348633
    9. '_y' → logprob: -23.750001907348633
    10. '.y' → logprob: -23.875001907348633

Token 190: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16630806028842926
    2. '):' → logprob: -1.916308045387268
    3. ',' → logprob: -5.2913079261779785
    4. '):

' → logprob: -7.4163079261779785
    5. '   ' → logprob: -7.9163079261779785
    6. '):
' → logprob: -9.791308403015137
    7. ')' → logprob: -12.291308403015137
    8. '"):
' → logprob: -14.166308403015137
    9. ''):
' → logprob: -14.666308403015137
    10. ':' → logprob: -15.041308403015137

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.981667537620524e-06
    2. '  ' → logprob: -13.875001907348633
    3. 'def' → logprob: -15.000001907348633
    4. 'while' → logprob: -15.125001907348633
    5. 'return' → logprob: -16.000001907348633
    6. 'for' → logprob: -16.500001907348633
    7. '```' → logprob: -16.625001907348633
    8. ' ' → logprob: -17.500001907348633
    9. '       ' → logprob: -17.750001907348633
    10. '    ' → logprob: -17.875001907348633

Token 192: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12565827369689941
    2. 'if' → logprob: -3.1256582736968994
    3. 'while' → logprob: -3.3756582736968994
    4. '   ' → logprob: -3.3756582736968994
    5. 'ang' → logprob: -5.62565803527832
    6. 'return' → logprob: -7.25065803527832
    7. 'n' → logprob: -7.25065803527832
    8. 'step' → logprob: -7.75065803527832
    9. 'x' → logprob: -8.50065803527832
    10. 'angle' → logprob: -10.12565803527832

Token 193: ' step' (ID: 5983)
  Prédit: 'inner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.7123685479164124
    2. 'step' → logprob: -1.2123684883117676
    3. 'iterate' → logprob: -1.7123684883117676
    4. 'next' → logprob: -4.837368488311768
    5. 'update' → logprob: -5.212368488311768
    6. 'get' → logprob: -5.962368488311768
    7. 'process' → logprob: -6.212368488311768
    8. ' iterate' → logprob: -6.462368488311768
    9. 'perform' → logprob: -6.462368488311768
    10. 'nested' → logprob: -6.587368488311768

Token 194: '(i' (ID: 3649)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.299236923456192
    2. '(' → logprob: -1.5492368936538696
    3. '():' → logprob: -3.924237012863159
    4. '_' → logprob: -4.17423677444458
    5. '_angle' → logprob: -6.67423677444458
    6. '(x' → logprob: -6.92423677444458
    7. '   ' → logprob: -6.92423677444458
    8. '_ang' → logprob: -7.04923677444458
    9. '(n' → logprob: -7.29923677444458
    10. '_x' → logprob: -7.42423677444458

Token 195: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16401255130767822
    2. '):' → logprob: -1.9140125513076782
    3. '   ' → logprob: -5.914012432098389
    4. ',' → logprob: -7.539012432098389
    5. '):

' → logprob: -8.164012908935547
    6. 'def' → logprob: -10.164012908935547
    7. '       ' → logprob: -10.164012908935547
    8. 'n' → logprob: -10.164012908935547
    9. '):
' → logprob: -10.289012908935547
    10. ':' → logprob: -10.414012908935547

Token 196: ' ang' (ID: 2929)
  Prédit: 'ang'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ang' → logprob: -0.03864850103855133
    2. 'n' → logprob: -3.2886486053466797
    3. ' ang' → logprob: -7.53864860534668
    4. '   ' → logprob: -10.53864860534668
    5. 'ng' → logprob: -10.66364860534668
    6. '       ' → logprob: -12.66364860534668
    7. ' n' → logprob: -12.66364860534668
    8. 'angle' → logprob: -12.91364860534668
    9. 'step' → logprob: -13.41364860534668
    10. 'x' → logprob: -13.78864860534668

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32230469584465027
    2. '):
' → logprob: -1.5723047256469727
    3. '):' → logprob: -2.6973047256469727
    4. '):

' → logprob: -7.822304725646973
    5. '   ' → logprob: -9.197304725646973
    6. '):
' → logprob: -9.947304725646973
    7. ')' → logprob: -11.447304725646973
    8. ':' → logprob: -13.072304725646973
    9. '),' → logprob: -13.197304725646973
    10. '       ' → logprob: -13.822304725646973

Token 198: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00010914575977949426
    2. ' x' → logprob: -9.12510871887207
    3. ',' → logprob: -16.50010871887207
    4. ',x' → logprob: -18.12510871887207
    5. '   ' → logprob: -18.25010871887207
    6. 'n' → logprob: -18.25010871887207
    7. 'y' → logprob: -18.25010871887207
    8. '	x' → logprob: -18.87510871887207
    9. '_x' → logprob: -19.25010871887207
    10. 'step' → logprob: -20.00010871887207

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.696889623621246e-06
    2. ' ,' → logprob: -14.00000286102295
    3. ',y' → logprob: -14.62500286102295
    4. '`,' → logprob: -14.75000286102295
    5. '，' → logprob: -15.00000286102295
    6. '):
' → logprob: -15.50000286102295
    7. '   ' → logprob: -16.625001907348633
    8. ',x' → logprob: -17.000001907348633
    9. ',
' → logprob: -17.125001907348633
    10. ',)' → logprob: -17.125001907348633

Token 200: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -6.2729995988775045e-06
    2. ' y' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.6250057220459
    4. '	y' → logprob: -18.3750057220459
    5. ',' → logprob: -19.8750057220459
    6. ',y' → logprob: -20.6250057220459
    7. ' ' → logprob: -20.6250057220459
    8. '  ' → logprob: -20.7500057220459
    9. 'y's' → logprob: -20.7500057220459
    10. '    ' → logprob: -22.0000057220459

Token 201: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07949265837669373
    2. '):' → logprob: -2.5794925689697266
    3. '   ' → logprob: -7.954492568969727
    4. '):

' → logprob: -8.704492568969727
    5. ',' → logprob: -9.704492568969727
    6. '):
' → logprob: -10.829492568969727
    7. ')' → logprob: -13.079492568969727
    8. '       ' → logprob: -13.454492568969727
    9. ':' → logprob: -14.204492568969727
    10. '"):
' → logprob: -15.829492568969727

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005997998174279928
    2. '   ' → logprob: -5.130998134613037
    3. 'return' → logprob: -10.005997657775879
    4. '     ' → logprob: -11.380997657775879
    5. '      ' → logprob: -12.005997657775879
    6. '           ' → logprob: -12.880997657775879
    7. '        ' → logprob: -13.630997657775879
    8. '    ' → logprob: -13.630997657775879
    9. '  ' → logprob: -14.505997657775879
    10. 'def' → logprob: -14.630997657775879

Token 203: ' ang' (ID: 2929)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22274036705493927
    2. 'return' → logprob: -1.7227404117584229
    3. 'if' → logprob: -4.472740173339844
    4. '   ' → logprob: -4.847740173339844
    5. '           ' → logprob: -6.722740173339844
    6. 'i' → logprob: -7.472740173339844
    7. 'ang' (adapté à ' ang') → logprob: -10.972740173339844
    8. 'for' → logprob: -11.722740173339844
    9. 'step' → logprob: -11.972740173339844
    10. 'while' → logprob: -12.347740173339844

Token 204: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13109923899173737
    2. '   ' → logprob: -2.506099224090576
    3. '=' → logprob: -3.381099224090576
    4. ' +=' → logprob: -5.631099224090576
    5. '+=' → logprob: -5.756099224090576
    6. '       ' → logprob: -8.006099700927734
    7. ',' → logprob: -9.381099700927734
    8. '    ' → logprob: -10.631099700927734
    9. '+' → logprob: -10.756099700927734
    10. '```' → logprob: -11.131099700927734

Token 205: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.00014358828775584698
    2. ' step' → logprob: -8.875144004821777
    3. '   ' → logprob: -12.750144004821777
    4. '	step' → logprob: -14.125144004821777
    5. 'ste' → logprob: -17.25014305114746
    6. '       ' → logprob: -17.62514305114746
    7. '_step' → logprob: -18.12514305114746
    8. '.step' → logprob: -18.37514305114746
    9. 'Step' → logprob: -18.62514305114746
    10. '(step' → logprob: -19.75014305114746

Token 206: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.0005349211278371513
    2. '_ang' → logprob: -7.625535011291504
    3. '_' → logprob: -11.000535011291504
    4. '_step' → logprob: -11.250535011291504
    5. '_x' → logprob: -11.250535011291504
    6. '_angles' → logprob: -13.125535011291504
    7. '(angle' → logprob: -14.250535011291504
    8. 'Angle' → logprob: -14.375535011291504
    9. '.angle' → logprob: -15.625535011291504
    10. 'angle' → logprob: -15.625535011291504

Token 207: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0032008851412683725
    2. '()' → logprob: -5.753201007843018
    3. '(step' → logprob: -11.37820053100586
    4. '(angle' → logprob: -12.62820053100586
    5. '()
' → logprob: -13.25320053100586
    6. '()(' → logprob: -13.50320053100586
    7. '()`' → logprob: -13.75320053100586
    8. '(i' → logprob: -13.87820053100586
    9. '   ' → logprob: -14.25320053100586
    10. '       ' → logprob: -14.62820053100586

Token 208: 'ang' (ID: 516)
  Prédit: 'ang'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ang' → logprob: 0.0
    2. ' ang' → logprob: -17.0
    3. 'angs' → logprob: -21.0
    4. 'ag' → logprob: -21.625
    5. '-ang' → logprob: -22.375
    6. 'angu' → logprob: -23.0
    7. 'angg' → logprob: -23.125
    8. 'angi' → logprob: -23.5
    9. '_ang' → logprob: -23.625
    10. 'angk' → logprob: -24.0

Token 209: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.05514347553253174
    2. ')' → logprob: -2.930143356323242
    3. '   ' → logprob: -8.680143356323242
    4. ')

' → logprob: -9.680143356323242
    5. ')
' → logprob: -10.930143356323242
    6. '       ' → logprob: -11.680143356323242
    7. ');
' → logprob: -15.180143356323242
    8. ').' → logprob: -15.180143356323242
    9. '),' → logprob: -15.180143356323242
    10. '```' → logprob: -15.305143356323242

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.061054359131958e-06
    2. '   ' → logprob: -11.875007629394531
    3. '           ' → logprob: -14.625007629394531
    4. 'return' → logprob: -14.875007629394531
    5. '     ' → logprob: -15.500007629394531
    6. '      ' → logprob: -16.12500762939453
    7. '        ' → logprob: -17.37500762939453
    8. '         ' → logprob: -18.00000762939453
    9. 'x' → logprob: -18.37500762939453
    10. '               ' → logprob: -18.50000762939453

Token 211: ' x' (ID: 1215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048596687614917755
    2. 'x' (adapté à ' x') → logprob: -3.0485966205596924
    3. '   ' → logprob: -12.048596382141113
    4. 'return' → logprob: -13.298596382141113
    5. '     ' → logprob: -14.048596382141113
    6. ' x' → logprob: -14.548596382141113
    7. '      ' → logprob: -15.298596382141113
    8. '           ' → logprob: -15.923596382141113
    9. '        ' → logprob: -16.79859733581543
    10. '         ' → logprob: -17.42359733581543

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30093714594841003
    2. '=' → logprob: -1.4259371757507324
    3. '   ' → logprob: -4.550937175750732
    4. ',' → logprob: -5.300937175750732
    5. ' +=' → logprob: -6.175937175750732
    6. '+=' → logprob: -6.425937175750732
    7. '       ' → logprob: -8.300936698913574
    8. ' ' → logprob: -10.050936698913574
    9. '+' → logprob: -11.050936698913574
    10. '    ' → logprob: -11.175936698913574

Token 213: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -2.7848862373502925e-05
    2. ' step' → logprob: -10.500027656555176
    3. '	step' → logprob: -15.750027656555176
    4. '   ' → logprob: -17.250028610229492
    5. '.step' → logprob: -18.000028610229492
    6. 'Step' → logprob: -18.125028610229492
    7. '       ' → logprob: -18.250028610229492
    8. '_step' → logprob: -18.500028610229492
    9. '(step' → logprob: -19.250028610229492
    10. 'ste' → logprob: -19.875028610229492

Token 214: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -2.5776860184123507e-06
    2. '_step' → logprob: -13.75000286102295
    3. '(x' → logprob: -14.75000286102295
    4. 'x' → logprob: -15.00000286102295
    5. '_X' → logprob: -15.12500286102295
    6. '_y' → logprob: -16.500001907348633
    7. '_' → logprob: -16.500001907348633
    8. '_xy' → logprob: -16.625001907348633
    9. ' x' → logprob: -17.250001907348633
    10. '_xt' → logprob: -17.500001907348633

Token 215: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.375004768371582
    3. 'x' → logprob: -18.125003814697266
    4. '(X' → logprob: -19.375003814697266
    5. '(y' → logprob: -19.500003814697266
    6. '(a' → logprob: -19.500003814697266
    7. '   ' → logprob: -20.125003814697266
    8. '(z' → logprob: -20.125003814697266
    9. '(i' → logprob: -20.375003814697266
    10. ' x' → logprob: -20.375003814697266

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.896309739408025e-07
    2. '),' → logprob: -15.000000953674316
    3. ',y' → logprob: -16.0
    4. ' ,' → logprob: -16.125
    5. '   ' → logprob: -16.375
    6. '       ' → logprob: -16.5
    7. ')' → logprob: -16.875
    8. '，' → logprob: -17.375
    9. '`,' → logprob: -17.375
    10. ',x' → logprob: -17.875

Token 217: ' ang' (ID: 2929)
  Prédit: 'ang'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ang' → logprob: -4.842555426876061e-06
    2. ' ang' → logprob: -12.250004768371582
    3. 'x' → logprob: -17.3750057220459
    4. 'ag' → logprob: -18.2500057220459
    5. '_ang' → logprob: -19.7500057220459
    6. '   ' → logprob: -20.3750057220459
    7. 'angs' → logprob: -20.3750057220459
    8. '-ang' → logprob: -20.5000057220459
    9. 'angg' → logprob: -21.1250057220459
    10. 'angi' → logprob: -21.7500057220459

Token 218: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.007980996742844582
    2. ')' → logprob: -4.882980823516846
    3. '       ' → logprob: -8.257981300354004
    4. ')
' → logprob: -9.632981300354004
    5. ')

' → logprob: -10.632981300354004
    6. '   ' → logprob: -10.757981300354004
    7. ');
' → logprob: -14.757981300354004
    8. '           ' → logprob: -14.882981300354004
    9. '),' → logprob: -14.882981300354004
    10. '     ' → logprob: -15.007981300354004

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.215330409351736e-05
    2. 'y' → logprob: -10.125041961669922
    3. '   ' → logprob: -13.500041961669922
    4. '      ' → logprob: -15.500041961669922
    5. '     ' → logprob: -15.500041961669922
    6. '           ' → logprob: -15.750041961669922
    7. '        ' → logprob: -16.375041961669922
    8. ' y' → logprob: -17.000041961669922
    9. 'return' → logprob: -18.000041961669922
    10. 'x' → logprob: -18.125041961669922

Token 220: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.001506409258581698
    2. '       ' → logprob: -6.501506328582764
    3. '   ' → logprob: -12.751506805419922
    4. ' y' → logprob: -13.876506805419922
    5. '     ' → logprob: -16.376506805419922
    6. '	y' → logprob: -16.376506805419922
    7. '      ' → logprob: -17.626506805419922
    8. 'return' → logprob: -18.501506805419922
    9. '           ' → logprob: -18.501506805419922
    10. 'y's' → logprob: -18.751506805419922

Token 221: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.062048688530921936
    2. ' =' → logprob: -2.8120486736297607
    3. '   ' → logprob: -9.43704891204834
    4. '=`' → logprob: -14.81204891204834
    5. '       ' → logprob: -15.06204891204834
    6. ' ' → logprob: -15.18704891204834
    7. '```' → logprob: -15.93704891204834
    8. '+=' → logprob: -16.437047958374023
    9. '  ' → logprob: -17.187047958374023
    10. '    ' → logprob: -17.437047958374023

Token 222: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -1.9361264946837764e-07
    2. ' step' → logprob: -16.25
    3. '	step' → logprob: -19.0
    4. 'ste' → logprob: -21.5
    5. '_step' → logprob: -21.875
    6. 'Step' → logprob: -21.875
    7. '.step' → logprob: -22.0
    8. '(step' → logprob: -22.875
    9. 'steps' → logprob: -23.625
    10. '-step' → logprob: -24.25

Token 223: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -7.896309739408025e-07
    2. '(y' → logprob: -14.250000953674316
    3. '_Y' → logprob: -17.125
    4. 'Y' → logprob: -17.625
    5. '	y' → logprob: -17.75
    6. ''_' → logprob: -18.0
    7. '   ' → logprob: -18.125
    8. '_' → logprob: -18.125
    9. '_step' → logprob: -18.125
    10. '_angle' → logprob: -18.25

Token 224: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: 0.0
    2. '(' → logprob: -17.625
    3. '(Y' → logprob: -18.75
    4. '(x' → logprob: -18.875
    5. 'y' → logprob: -21.0
    6. '(z' → logprob: -21.25
    7. '	y' → logprob: -22.5
    8. ' y' → logprob: -22.75
    9. ' (' → logprob: -23.125
    10. '_y' → logprob: -23.125

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031169552356004715
    2. ')' → logprob: -3.5311696529388428
    3. ')
' → logprob: -6.656169414520264
    4. ')

' → logprob: -9.656169891357422
    5. '),' → logprob: -10.531169891357422
    6. '   ' → logprob: -11.281169891357422
    7. ',y' → logprob: -11.781169891357422
    8. ')
' → logprob: -12.531169891357422
    9. ');' → logprob: -12.781169891357422
    10. '```' → logprob: -12.781169891357422

Token 226: ' ang' (ID: 2929)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -9.088346359931165e-07
    2. 'ang' → logprob: -14.625000953674316
    3. ' y' → logprob: -14.875000953674316
    4. '   ' → logprob: -17.875
    5. '	y' → logprob: -18.75
    6. '(y' → logprob: -21.25
    7. '           ' → logprob: -21.625
    8. 'yb' → logprob: -21.625
    9. 'ay' → logprob: -21.75
    10. 'yt' → logprob: -22.125

Token 227: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06371641904115677
    2. ')' → logprob: -2.813716411590576
    3. '       ' → logprob: -6.438716411590576
    4. ')
' → logprob: -9.563716888427734
    5. ')

' → logprob: -9.688716888427734
    6. '   ' → logprob: -11.313716888427734
    7. '           ' → logprob: -14.188716888427734
    8. '     ' → logprob: -14.313716888427734
    9. '```' → logprob: -14.563716888427734
    10. ' )
' → logprob: -14.938716888427734

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.333223139634356e-05
    2. '   ' → logprob: -10.375033378601074
    3. 'return' → logprob: -13.375033378601074
    4. '     ' → logprob: -15.250033378601074
    5. '           ' → logprob: -15.875033378601074
    6. '      ' → logprob: -16.250032424926758
    7. '        ' → logprob: -17.500032424926758
    8. 'i' → logprob: -17.625032424926758
    9. '        
' → logprob: -17.750032424926758
    10. '         ' → logprob: -18.250032424926758

Token 229: ' ang' (ID: 2929)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2018299102783203
    2. 'return' → logprob: -1.7018299102783203
    3. 'i' → logprob: -7.95182991027832
    4. '   ' → logprob: -9.70182991027832
    5. ' return' → logprob: -13.70182991027832
    6. 'print' → logprob: -14.32682991027832
    7. '     ' → logprob: -14.45182991027832
    8. '      ' → logprob: -14.95182991027832
    9. '           ' → logprob: -15.32682991027832
    10. '	return' → logprob: -15.70182991027832

Token 230: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02400330826640129
    2. '=' → logprob: -3.774003267288208
    3. '   ' → logprob: -7.399003505706787
    4. 'return' → logprob: -9.899003028869629
    5. ',' → logprob: -10.274003028869629
    6. '```' → logprob: -10.774003028869629
    7. '       ' → logprob: -11.774003028869629
    8. ' ' → logprob: -11.899003028869629
    9. '  ' → logprob: -12.274003028869629
    10. ' +=' → logprob: -12.774003028869629

Token 231: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -1.676292231422849e-05
    2. ' update' → logprob: -11.000017166137695
    3. '	update' → logprob: -17.000017166137695
    4. '.update' → logprob: -17.625017166137695
    5. '_update' → logprob: -19.000017166137695
    6. '   ' → logprob: -19.500017166137695
    7. ' ' → logprob: -19.625017166137695
    8. 'up' → logprob: -20.250017166137695
    9. 'updated' → logprob: -20.250017166137695
    10. '更新' → logprob: -20.375017166137695

Token 232: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -9.088346359931165e-07
    2. '_ang' → logprob: -14.250000953674316
    3. '_angles' → logprob: -16.75
    4. '_age' → logprob: -17.25
    5. '_' → logprob: -17.625
    6. 'Angle' → logprob: -18.75
    7. '\' → logprob: -19.375
    8. '.angle' → logprob: -19.5
    9. '(angle' → logprob: -19.625
    10. '_axis' → logprob: -19.625

Token 233: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -9.253090865968261e-06
    2. '(' → logprob: -11.625009536743164
    3. '(x' → logprob: -15.375009536743164
    4. '(z' → logprob: -19.125009536743164
    5. '(a' → logprob: -19.250009536743164
    6. '(Y' → logprob: -19.375009536743164
    7. '((' → logprob: -19.625009536743164
    8. '(u' → logprob: -19.625009536743164
    9. '(m' → logprob: -19.875009536743164
    10. '(h' → logprob: -19.875009536743164

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0280383548888494e-06
    2. ',x' → logprob: -13.875000953674316
    3. ' ,' → logprob: -18.750001907348633
    4. '，' → logprob: -19.375001907348633
    5. ',y' → logprob: -20.750001907348633
    6. ',
' → logprob: -21.500001907348633
    7. '،' → logprob: -21.625001907348633
    8. '',' → logprob: -22.375001907348633
    9. ',\
' → logprob: -22.375001907348633
    10. ',,' → logprob: -22.625001907348633

Token 235: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.128163257315464e-07
    2. ' x' → logprob: -15.375
    3. '	x' → logprob: -22.625
    4. '$x' → logprob: -24.375
    5. '"x' → logprob: -24.375
    6. ')x' → logprob: -24.375
    7. 'y' → logprob: -25.0
    8. '_x' → logprob: -25.0
    9. '   ' → logprob: -25.125
    10. '```' → logprob: -25.125

Token 236: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.049225009977817535
    2. ')' → logprob: -3.049225091934204
    3. '   ' → logprob: -8.049224853515625
    4. '       ' → logprob: -8.549224853515625
    5. ')
' → logprob: -9.674224853515625
    6. ')

' → logprob: -9.799224853515625
    7. '```' → logprob: -13.674224853515625
    8. '           ' → logprob: -14.049224853515625
    9. '),' → logprob: -14.674224853515625
    10. ').' → logprob: -14.799224853515625

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.463036435074173e-05
    2. '   ' → logprob: -10.625024795532227
    3. '           ' → logprob: -16.000024795532227
    4. 'return' → logprob: -16.250024795532227
    5. '     ' → logprob: -16.875024795532227
    6. '      ' → logprob: -17.125024795532227
    7. '        ' → logprob: -18.750024795532227
    8. '        
' → logprob: -19.125024795532227
    9. '         ' → logprob: -19.875024795532227
    10. '               ' → logprob: -20.000024795532227

Token 238: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019301822176203132
    2. 'return' (adapté à ' return') → logprob: -6.251930236816406
    3. '   ' → logprob: -13.501930236816406
    4. ' return' → logprob: -16.876930236816406
    5. '      ' → logprob: -16.876930236816406
    6. '     ' → logprob: -17.126930236816406
    7. '           ' → logprob: -17.751930236816406
    8. '	return' → logprob: -18.126930236816406
    9. '```' → logprob: -18.251930236816406
    10. '        ' → logprob: -18.751930236816406

Token 239: ' ang' (ID: 2929)
  Prédit: 'ang'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ang' → logprob: -0.0024924222379922867
    2. 'x' → logprob: -6.752492427825928
    3. '(' → logprob: -7.127492427825928
    4. ' ang' → logprob: -7.627492427825928
    5. '(x' → logprob: -11.50249195098877
    6. '_ang' → logprob: -12.12749195098877
    7. 'angle' → logprob: -12.75249195098877
    8. 'angi' → logprob: -12.87749195098877
    9. 'ag' → logprob: -13.00249195098877
    10. ' (' → logprob: -13.50249195098877

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017002645879983902
    2. '       ' → logprob: -4.142002582550049
    3. ',x' → logprob: -7.142002582550049
    4. '   ' → logprob: -8.767003059387207
    5. 'x' → logprob: -11.767003059387207
    6. ' ,' → logprob: -12.267003059387207
    7. ',y' → logprob: -12.642003059387207
    8. '     ' → logprob: -13.392003059387207
    9. 'return' → logprob: -14.017003059387207
    10. '      ' → logprob: -14.392003059387207

Token 241: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.615255839889869e-05
    2. ' x' → logprob: -9.250096321105957
    3. '	x' → logprob: -20.62509536743164
    4. '_x' → logprob: -21.25009536743164
    5. '(x' → logprob: -22.37509536743164
    6. '       ' → logprob: -22.37509536743164
    7. '.x' → logprob: -22.50009536743164
    8. '   ' → logprob: -22.62509536743164
    9. ',x' → logprob: -23.00009536743164
    10. '$x' → logprob: -23.12509536743164

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015569974202662706
    2. '       ' → logprob: -6.501556873321533
    3. ',y' → logprob: -9.876557350158691
    4. ' ,' → logprob: -13.376557350158691
    5. '   ' → logprob: -14.001557350158691
    6. '      ' → logprob: -15.751557350158691
    7. '```' → logprob: -15.876557350158691
    8. ',x' → logprob: -16.126556396484375
    9. '     ' → logprob: -16.501556396484375
    10. ',Y' → logprob: -16.751556396484375

Token 243: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0009115827269852161
    2. ' y' → logprob: -7.000911712646484
    3. '	y' → logprob: -16.375911712646484
    4. '   ' → logprob: -18.250911712646484
    5. '```' → logprob: -19.000911712646484
    6. ' ' → logprob: -19.375911712646484
    7. ',y' → logprob: -20.000911712646484
    8. '(y' → logprob: -20.000911712646484
    9. ',' → logprob: -20.000911712646484
    10. '_y' → logprob: -20.125911712646484

Token 244: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25248563289642334
    2. '       ' → logprob: -1.5024856328964233
    3. 'return' → logprob: -7.877485752105713
    4. '```' → logprob: -8.877485275268555
    5. 'def' → logprob: -11.502485275268555
    6. '           ' → logprob: -12.127485275268555
    7. '     ' → logprob: -12.252485275268555
    8. '``' → logprob: -12.377485275268555
    9. '	return' → logprob: -13.127485275268555
    10. '        
' → logprob: -13.252485275268555

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38687872886657715
    2. '       ' → logprob: -1.1368787288665771
    3. '     ' → logprob: -12.636878967285156
    4. 'return' → logprob: -13.636878967285156
    5. '           ' → logprob: -14.136878967285156
    6. '```' → logprob: -14.386878967285156
    7. '  ' → logprob: -14.761878967285156
    8. '      ' → logprob: -14.761878967285156
    9. '    
' → logprob: -14.761878967285156
    10. '    ' → logprob: -15.136878967285156

Token 246: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1581915020942688
    2. 'return' → logprob: -2.158191442489624
    3. '       ' → logprob: -3.658191442489624
    4. 'i' → logprob: -5.783191680908203
    5. 'for' (adapté à ' for') → logprob: -6.283191680908203
    6. '```' → logprob: -11.533191680908203
    7. 'step' → logprob: -11.533191680908203
    8. 'n' → logprob: -12.033191680908203
    9. 'def' → logprob: -12.158191680908203
    10. '     ' → logprob: -12.408191680908203

Token 247: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00018768629524856806
    2. 'i' → logprob: -8.625187873840332
    3. ' ' → logprob: -12.000187873840332
    4. ' _' → logprob: -14.500187873840332
    5. ' in' → logprob: -14.750187873840332
    6. '  ' → logprob: -15.000187873840332
    7. '   ' → logprob: -15.375187873840332
    8. ' step' → logprob: -15.750187873840332
    9. ' range' → logprob: -15.875187873840332
    10. '    ' → logprob: -16.625186920166016

Token 248: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.016804801300168037
    2. ' in' → logprob: -4.3918046951293945
    3. 'range' → logprob: -5.8918046951293945
    4. '   ' → logprob: -6.5168046951293945
    5. ' range' → logprob: -10.891804695129395
    6. ':' → logprob: -11.891804695129395
    7. '(range' → logprob: -12.516804695129395
    8. '    ' → logprob: -12.766804695129395
    9. '       ' → logprob: -13.141804695129395
    10. '  ' → logprob: -13.266804695129395

Token 249: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.676292231422849e-05
    2. ' range' → logprob: -11.000017166137695
    3. '	range' → logprob: -17.000017166137695
    4. '(range' → logprob: -17.375017166137695
    5. '.range' → logprob: -18.500017166137695
    6. 'rang' → logprob: -19.375017166137695
    7. '_range' → logprob: -19.625017166137695
    8. 'Range' → logprob: -20.375017166137695
    9. '-range' → logprob: -21.250017166137695
    10. 'ranges' → logprob: -21.750017166137695

Token 250: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07654338330030441
    2. '(' → logprob: -2.7015433311462402
    3. '(range' → logprob: -5.57654333114624
    4. '(len' → logprob: -5.95154333114624
    5. '(num' → logprob: -9.451543807983398
    6. '(int' → logprob: -10.826543807983398
    7. '(in' → logprob: -10.826543807983398
    8. '(i' → logprob: -11.326543807983398
    9. '(N' → logprob: -11.576543807983398
    10. '(max' → logprob: -11.701543807983398

Token 251: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2521688640117645
    2. '):
' → logprob: -1.502168893814087
    3. '):

' → logprob: -8.752168655395508
    4. '):
' → logprob: -10.002168655395508
    5. '   ' → logprob: -11.002168655395508
    6. ')' → logprob: -11.127168655395508
    7. ')):' → logprob: -13.252168655395508
    8. '+' → logprob: -13.752168655395508
    9. ')):
' → logprob: -14.252168655395508
    10. '-' → logprob: -15.502168655395508

Token 252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1279553291387856e-05
    2. '   ' → logprob: -11.500011444091797
    3. '      ' → logprob: -14.500011444091797
    4. '           ' → logprob: -15.375011444091797
    5. '     ' → logprob: -15.625011444091797
    6. '        ' → logprob: -15.875011444091797
    7. '    ' → logprob: -17.625011444091797
    8. '               ' → logprob: -18.750011444091797
    9. '         ' → logprob: -19.125011444091797
    10. '  ' → logprob: -19.875011444091797

Token 253: ' ang' (ID: 2929)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07902120798826218
    2. 'ang' (adapté à ' ang') → logprob: -2.5790212154388428
    3. '   ' → logprob: -9.079021453857422
    4. '           ' → logprob: -12.204021453857422
    5. 'step' → logprob: -12.329021453857422
    6. ' ang' → logprob: -12.829021453857422
    7. '      ' → logprob: -13.079021453857422
    8. '        ' → logprob: -14.079021453857422
    9. '     ' → logprob: -14.329021453857422
    10. 'angi' → logprob: -14.829021453857422

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20184451341629028
    2. ' =' → logprob: -1.7018444538116455
    3. '=' → logprob: -7.826844692230225
    4. ' +=' → logprob: -10.451844215393066
    5. '+=' → logprob: -13.326844215393066
    6. ' ' → logprob: -14.326844215393066
    7. ' ,' → logprob: -14.951844215393066
    8. '   ' → logprob: -15.201844215393066
    9. '```' → logprob: -16.326845169067383
    10. '，' → logprob: -16.326845169067383

Token 255: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.7697225252486533e-06
    2. ' x' → logprob: -12.500003814697266
    3. '	x' → logprob: -21.875003814697266
    4. '_x' → logprob: -22.125003814697266
    5. ',x' → logprob: -23.125003814697266
    6. '$x' → logprob: -23.250003814697266
    7. '(x' → logprob: -24.250003814697266
    8. '.x' → logprob: -24.250003814697266
    9. '=x' → logprob: -24.375003814697266
    10. '   ' → logprob: -24.375003814697266

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5776860184123507e-06
    2. ' ,' → logprob: -14.12500286102295
    3. '       ' → logprob: -14.87500286102295
    4. '=' → logprob: -15.00000286102295
    5. '   ' → logprob: -15.37500286102295
    6. '`,' → logprob: -15.50000286102295
    7. '，' → logprob: -15.75000286102295
    8. '_,' → logprob: -15.87500286102295
    9. ',x' → logprob: -16.000001907348633
    10. ',y' → logprob: -16.625001907348633

Token 257: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -7.896309739408025e-07
    2. ' y' → logprob: -14.125000953674316
    3. '	y' → logprob: -19.5
    4. 'y's' → logprob: -20.625
    5. '   ' → logprob: -21.5
    6. '_y' → logprob: -23.125
    7. '```' → logprob: -23.625
    8. ''y' → logprob: -24.0
    9. '(y' → logprob: -24.125
    10. 'yd' → logprob: -24.125

Token 258: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09991523623466492
    2. ' =' → logprob: -2.7249152660369873
    3. '   ' → logprob: -3.7249152660369873
    4. ',' → logprob: -5.599915027618408
    5. '       ' → logprob: -6.599915027618408
    6. 'return' → logprob: -8.349915504455566
    7. '    ' → logprob: -10.224915504455566
    8. '     ' → logprob: -10.599915504455566
    9. '  ' → logprob: -10.974915504455566
    10. ' ' → logprob: -11.474915504455566

Token 259: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -6.2729995988775045e-06
    2. ' step' → logprob: -12.000006675720215
    3. '	step' → logprob: -17.7500057220459
    4. '   ' → logprob: -19.1250057220459
    5. '.step' → logprob: -19.7500057220459
    6. '_step' → logprob: -20.6250057220459
    7. 'ste' → logprob: -20.7500057220459
    8. 'Step' → logprob: -20.8750057220459
    9. '(step' → logprob: -21.2500057220459
    10. '       ' → logprob: -22.0000057220459

Token 260: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0067234220914542675
    2. '(' → logprob: -5.006723403930664
    3. '(*' → logprob: -12.006723403930664
    4. '(n' → logprob: -13.256723403930664
    5. '(ii' → logprob: -17.506723403930664
    6. '(iter' → logprob: -17.631723403930664
    7. '(int' → logprob: -17.631723403930664
    8. '(I' → logprob: -17.756723403930664
    9. '(step' → logprob: -17.881723403930664
    10. '(a' → logprob: -17.881723403930664

Token 261: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.522638169466518e-05
    2. '+' → logprob: -11.000024795532227
    3. '   ' → logprob: -12.000024795532227
    4. ' +' → logprob: -13.500024795532227
    5. ' ,' → logprob: -15.375024795532227
    6. ')' → logprob: -15.500024795532227
    7. '```' → logprob: -16.000024795532227
    8. '),' → logprob: -16.125024795532227
    9. '       ' → logprob: -16.375024795532227
    10. 'ang' → logprob: -17.125024795532227

Token 262: ' ang' (ID: 2929)
  Prédit: 'ang'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ang' → logprob: -6.2729995988775045e-06
    2. ' ang' → logprob: -12.000006675720215
    3. 'ag' → logprob: -20.8750057220459
    4. 'angs' → logprob: -21.1250057220459
    5. '_ang' → logprob: -21.5000057220459
    6. '-ang' → logprob: -21.5000057220459
    7. 'angg' → logprob: -22.5000057220459
    8. '   ' → logprob: -22.6250057220459
    9. 'angi' → logprob: -22.7500057220459
    10. 'arg' → logprob: -23.1250057220459

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9361264946837764e-07
    2. '),' → logprob: -16.875
    3. ' ,' → logprob: -17.0
    4. ')' → logprob: -17.75
    5. '`,' → logprob: -18.0
    6. ',x' → logprob: -18.25
    7. '，' → logprob: -18.875
    8. '```' → logprob: -19.625
    9. '   ' → logprob: -20.0
    10. ',)' → logprob: -20.125

Token 264: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.941850526549388e-06
    2. ' x' → logprob: -11.750007629394531
    3. '	x' → logprob: -22.25000762939453
    4. '_x' → logprob: -23.50000762939453
    5. '   ' → logprob: -24.12500762939453
    6. ' ' → logprob: -24.25000762939453
    7. '$x' → logprob: -24.37500762939453
    8. '.x' → logprob: -24.75000762939453
    9. '(x' → logprob: -25.00000762939453
    10. ',x' → logprob: -25.62500762939453

Token 265: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9361264946837764e-07
    2. ' ,' → logprob: -17.0
    3. ',y' → logprob: -17.0
    4. '，' → logprob: -18.25
    5. '`,' → logprob: -19.0
    6. '),' → logprob: -19.0
    7. '،' → logprob: -20.25
    8. '',' → logprob: -20.25
    9. ',
' → logprob: -20.375
    10. ',)' → logprob: -20.375

Token 266: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.935296834039036e-06
    2. ' y' → logprob: -12.75000286102295
    3. '	y' → logprob: -18.500003814697266
    4. '   ' → logprob: -19.250003814697266
    5. 'y's' → logprob: -22.125003814697266
    6. ',y' → logprob: -22.750003814697266
    7. '_y' → logprob: -22.875003814697266
    8. 'yu' → logprob: -23.125003814697266
    9. 'yb' → logprob: -23.125003814697266
    10. ' ' → logprob: -23.250003814697266

Token 267: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002998977666720748
    2. '       ' → logprob: -6.3779988288879395
    3. ')
' → logprob: -7.2529988288879395
    4. '   ' → logprob: -7.5029988288879395
    5. '```' → logprob: -11.127999305725098
    6. ')

' → logprob: -11.877999305725098
    7. ')`' → logprob: -12.252999305725098
    8. ')
' → logprob: -13.127999305725098
    9. '))' → logprob: -13.752999305725098
    10. '           ' → logprob: -14.002999305725098

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3856492842023727e-06
    2. '       ' → logprob: -13.625000953674316
    3. '  ' → logprob: -16.875001907348633
    4. 'def' → logprob: -17.250001907348633
    5. '```' → logprob: -18.250001907348633
    6. '    
' → logprob: -19.000001907348633
    7. '    ' → logprob: -19.875001907348633
    8. ' ' → logprob: -20.000001907348633
    9. 'return' → logprob: -20.000001907348633
    10. '   ' → logprob: -20.250001907348633

Token 269: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.166338137816638e-05
    2. 'return' (adapté à ' return') → logprob: -10.375031471252441
    3. '       ' → logprob: -15.125031471252441
    4. 'def' → logprob: -16.500032424926758
    5. '  ' → logprob: -17.500032424926758
    6. '	return' → logprob: -18.375032424926758
    7. ' return' → logprob: -19.750032424926758
    8. '```' → logprob: -20.000032424926758
    9. 'print' → logprob: -20.375032424926758
    10. '    
' → logprob: -20.750032424926758

Token 270: ' x' (ID: 1215)
  Prédit: 'ang'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ang' → logprob: -0.0009916032431647182
    2. '(' → logprob: -7.0009918212890625
    3. ' ang' → logprob: -9.625991821289062
    4. 'angle' → logprob: -12.125991821289062
    5. '_ang' → logprob: -12.500991821289062
    6. 'angular' → logprob: -14.000991821289062
    7. 'angi' → logprob: -14.000991821289062
    8. 'angu' → logprob: -14.125991821289062
    9. 'x' → logprob: -14.875991821289062
    10. 'Ang' → logprob: -15.000991821289062

Token 271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004293857607990503
    2. ',y' → logprob: -5.504293918609619
    3. '   ' → logprob: -8.504293441772461
    4. ' ,' → logprob: -11.879293441772461
    5. 'y' → logprob: -12.504293441772461
    6. '，' → logprob: -14.879293441772461
    7. 'return' → logprob: -15.004293441772461
    8. ',Y' → logprob: -15.504293441772461
    9. ',"' → logprob: -15.754293441772461
    10. ',
' → logprob: -15.879293441772461

Token 272: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -6.611323624383658e-05
    2. ' y' → logprob: -9.625065803527832
    3. '	y' → logprob: -17.12506675720215
    4. '   ' → logprob: -19.87506675720215
    5. '_y' → logprob: -20.37506675720215
    6. 'y's' → logprob: -21.37506675720215
    7. '(y' → logprob: -21.75006675720215
    8. ',y' → logprob: -21.87506675720215
    9. 'Y' → logprob: -22.00006675720215
    10. '```' → logprob: -22.12506675720215

Token 273: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7163960933685303
    2. '   ' → logprob: -0.9663960933685303
    3. '<|end|>' → logprob: -2.4663960933685303
    4. 'def' → logprob: -3.2163960933685303
    5. '<|end|>' → logprob: -5.716396331787109
    6. 'return' → logprob: -6.716396331787109
    7. '`' → logprob: -7.216396331787109
    8. '``' → logprob: -8.59139633178711
    9. 'x' → logprob: -8.96639633178711
    10. '  ' → logprob: -9.34139633178711

Token 274: 'def' (ID: 1314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4341280162334442
    2. 'def' → logprob: -1.4341280460357666
    3. '   ' → logprob: -2.8091280460357666
    4. 'return' → logprob: -3.6841280460357666
    5. 'x' → logprob: -4.6841278076171875
    6. 'n' → logprob: -4.6841278076171875
    7. '`' → logprob: -5.4341278076171875
    8. '<|end|>' → logprob: -6.0591278076171875
    9. '``' → logprob: -6.6841278076171875
    10. 'print' → logprob: -7.6841278076171875

Token 275: ' process' (ID: 2273)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.7779424786567688
    2. 'get' → logprob: -1.777942419052124
    3. 'iterate' → logprob: -2.027942419052124
    4. 'calculate' → logprob: -2.527942419052124
    5. 'final' → logprob: -2.777942419052124
    6. 'run' → logprob: -3.277942419052124
    7. 'process' → logprob: -4.027942657470703
    8. 'execute' → logprob: -4.527942657470703
    9. 'simulate' → logprob: -5.152942657470703
    10. 'perform' → logprob: -5.402942657470703

Token 276: '_one' (ID: 26979)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.018912559375166893
    2. '_steps' → logprob: -4.2689127922058105
    3. '_inputs' → logprob: -6.6439127922058105
    4. '_step' → logprob: -7.3939127922058105
    5. '_data' → logprob: -7.6439127922058105
    6. '_def' → logprob: -7.6439127922058105
    7. '():' → logprob: -7.7689127922058105
    8. '_output' → logprob: -8.018912315368652
    9. '_' → logprob: -8.768912315368652
    10. '_result' → logprob: -8.893912315368652

Token 277: '_input' (ID: 12507)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.41117793321609497
    2. '_step' → logprob: -2.66117787361145
    3. '():
' → logprob: -2.78617787361145
    4. '_input' → logprob: -3.41117787361145
    5. '_' → logprob: -3.66117787361145
    6. '_def' → logprob: -3.78617787361145
    7. '_process' → logprob: -4.036178112030029
    8. '_function' → logprob: -4.036178112030029
    9. '_case' → logprob: -4.286178112030029
    10. '_iteration' → logprob: -4.411178112030029

Token 278: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.865583706414327e-05
    2. '():
' → logprob: -10.25009822845459
    3. '()' → logprob: -10.37509822845459
    4. ' ():' → logprob: -11.37509822845459
    5. '(' → logprob: -12.25009822845459
    6. '(n' → logprob: -12.37509822845459
    7. '(_:' → logprob: -12.37509822845459
    8. '(:' → logprob: -12.87509822845459
    9. '(_' → logprob: -13.75009822845459
    10. ':' → logprob: -14.12509822845459

Token 279: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7448873519897461
    2. '):
' → logprob: -0.7448873519897461
    3. '):' → logprob: -2.994887351989746
    4. '):

' → logprob: -8.369887351989746
    5. '   ' → logprob: -9.119887351989746
    6. '):
' → logprob: -10.869887351989746
    7. ':' → logprob: -11.369887351989746
    8. ')' → logprob: -12.244887351989746
    9. '),' → logprob: -13.119887351989746
    10. 'def' → logprob: -13.744887351989746

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7432603272027336e-06
    2. 'ang' → logprob: -13.750001907348633
    3. '  ' → logprob: -14.750001907348633
    4. '       ' → logprob: -16.875001907348633
    5. 'x' → logprob: -17.250001907348633
    6. ' ' → logprob: -17.375001907348633
    7. ' ang' → logprob: -17.750001907348633
    8. '	' → logprob: -17.750001907348633
    9. 'def' → logprob: -18.000001907348633
    10. '    ' → logprob: -18.125001907348633

Token 281: ' n' (ID: 297)
  Prédit: 'ang'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ang' → logprob: -0.0019825217314064503
    2. '   ' → logprob: -6.626982688903809
    3. 'x' → logprob: -7.501982688903809
    4. 'if' → logprob: -10.376982688903809
    5. ' ang' → logprob: -10.751982688903809
    6. 'return' → logprob: -10.876982688903809
    7. 'angle' → logprob: -11.251982688903809
    8. 'n' (adapté à ' n') → logprob: -11.876982688903809
    9. 'global' → logprob: -12.751982688903809
    10. 'angles' → logprob: -13.501982688903809

Token 282: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7831608057022095
    2. '-' → logprob: -0.9081608057022095
    3. '=' → logprob: -3.53316068649292
    4. ' -' → logprob: -3.65816068649292
    5. 'if' → logprob: -3.90816068649292
    6. ' ==' → logprob: -4.28316068649292
    7. 'def' → logprob: -4.53316068649292
    8. '==' → logprob: -4.53316068649292
    9. '   ' → logprob: -4.90816068649292
    10. ' -=' → logprob: -5.03316068649292

Token 283: ' decrement' (ID: 121877)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.0005672106635756791
    2. 'n' → logprob: -8.500567436218262
    3. ' decrement' → logprob: -8.875567436218262
    4. 'should' → logprob: -9.000567436218262
    5. 'get' → logprob: -9.500567436218262
    6. 'initial' → logprob: -11.625567436218262
    7. 'increment' → logprob: -12.000567436218262
    8. '   ' → logprob: -13.000567436218262
    9. '0' → logprob: -13.625567436218262
    10. 'dec' → logprob: -13.750567436218262

Token 284: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.500001907348633
    3. '(m' → logprob: -19.750001907348633
    4. 'n' → logprob: -19.875001907348633
    5. '(num' → logprob: -20.250001907348633
    6. '(np' → logprob: -21.000001907348633
    7. '(N' → logprob: -21.125001907348633
    8. '(
' → logprob: -21.875001907348633
    9. '(e' → logprob: -21.875001907348633
    10. '(t' → logprob: -21.875001907348633

Token 285: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31357407569885254
    2. ')
' → logprob: -1.3135740756988525
    3. '   ' → logprob: -8.688573837280273
    4. ')

' → logprob: -9.063573837280273
    5. ')
' → logprob: -11.063573837280273
    6. ')`' → logprob: -12.063573837280273
    7. '```' → logprob: -12.813573837280273
    8. '))' → logprob: -14.188573837280273
    9. ')`
' → logprob: -14.313573837280273
    10. ')}' → logprob: -14.813573837280273

Token 286: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.320199877838604e-07
    2. '  ' → logprob: -15.875
    3. 'if' → logprob: -16.625
    4. '       ' → logprob: -17.0
    5. 'def' → logprob: -17.875
    6. '    ' → logprob: -18.0
    7. 'return' → logprob: -18.375
    8. ' ' → logprob: -19.0
    9. '```' → logprob: -21.0
    10. '     ' → logprob: -21.125

Token 287: ' ang' (ID: 2929)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08507227152585983
    2. 'return' → logprob: -2.9600722789764404
    3. 'if' → logprob: -3.5850722789764404
    4. 'ang' (adapté à ' ang') → logprob: -6.835072040557861
    5. 'n' → logprob: -7.085072040557861
    6. 'x' → logprob: -10.08507251739502
    7. 'print' → logprob: -11.08507251739502
    8. 'angle' → logprob: -11.46007251739502
    9. 'while' → logprob: -11.83507251739502
    10. 'def' → logprob: -12.21007251739502

Token 288: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03496875613927841
    2. '=' → logprob: -3.909968852996826
    3. ',' → logprob: -4.284968852996826
    4. '   ' → logprob: -7.534968852996826
    5. ' ' → logprob: -11.909968376159668
    6. '  ' → logprob: -13.284968376159668
    7. ' +=' → logprob: -13.659968376159668
    8. '```' → logprob: -13.659968376159668
    9. 'def' → logprob: -13.909968376159668
    10. '    ' → logprob: -14.534968376159668

Token 289: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -3.7697225252486533e-06
    2. ' initial' → logprob: -12.500003814697266
    3. '	initial' → logprob: -17.500003814697266
    4. '   ' → logprob: -19.125003814697266
    5. '.initial' → logprob: -19.625003814697266
    6. '初' → logprob: -19.750003814697266
    7. 'init' → logprob: -20.000003814697266
    8. '(initial' → logprob: -20.000003814697266
    9. '_initial' → logprob: -20.250003814697266
    10. 'Initial' → logprob: -21.500003814697266

Token 290: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -1.6286106983898208e-05
    2. '_ang' → logprob: -11.125016212463379
    3. '_angles' → logprob: -14.125016212463379
    4. 'Angle' → logprob: -15.250016212463379
    5. '_' → logprob: -15.500016212463379
    6. '_age' → logprob: -16.750017166137695
    7. '.angle' → logprob: -17.250017166137695
    8. ' Angle' → logprob: -17.250017166137695
    9. 'angle' → logprob: -17.750017166137695
    10. '_a' → logprob: -18.000017166137695

Token 291: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0036794093903154135
    2. '()
' → logprob: -5.628679275512695
    3. '()`' → logprob: -9.753679275512695
    4. '()

' → logprob: -12.128679275512695
    5. '()
' → logprob: -12.128679275512695
    6. '(' → logprob: -12.753679275512695
    7. '   ' → logprob: -13.378679275512695
    8. '`()' → logprob: -13.753679275512695
    9. '().' → logprob: -14.253679275512695
    10. '```' → logprob: -14.378679275512695

Token 292: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.9361264946837764e-07
    2. 'x' → logprob: -16.25
    3. '  ' → logprob: -17.25
    4. '    ' → logprob: -20.125
    5. '       ' → logprob: -20.75
    6. '	x' → logprob: -21.375
    7. ' ' → logprob: -21.5
    8. ' x' → logprob: -22.0
    9. '    
' → logprob: -22.0
    10. '```' → logprob: -23.0

Token 293: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.005234121344983578
    2. '   ' → logprob: -5.255234241485596
    3. ' x' → logprob: -15.380233764648438
    4. '	x' → logprob: -18.130233764648438
    5. '  ' → logprob: -18.255233764648438
    6. '(x' → logprob: -20.130233764648438
    7. '    
' → logprob: -20.380233764648438
    8. '_x' → logprob: -20.505233764648438
    9. 'xia' → logprob: -21.130233764648438
    10. 'xx' → logprob: -21.255233764648438

Token 294: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000816773681435734
    2. ' =' → logprob: -7.750816822052002
    3. '=' → logprob: -8.500816345214844
    4. '   ' → logprob: -8.625816345214844
    5. ' ,' → logprob: -14.125816345214844
    6. ',y' → logprob: -14.500816345214844
    7. '，' → logprob: -14.875816345214844
    8. ' ' → logprob: -15.125816345214844
    9. ',x' → logprob: -15.250816345214844
    10. '=x' → logprob: -15.250816345214844

Token 295: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -5.319370302458992e-06
    2. ' initial' → logprob: -12.500005722045898
    3. '   ' → logprob: -13.500005722045898
    4. '	initial' → logprob: -16.8750057220459
    5. '1' → logprob: -17.5000057220459
    6. 'Initial' → logprob: -18.7500057220459
    7. '.initial' → logprob: -18.7500057220459
    8. '初' → logprob: -18.7500057220459
    9. '_initial' → logprob: -19.0000057220459
    10. '(initial' → logprob: -19.6250057220459

Token 296: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.9361264946837764e-07
    2. '_y' → logprob: -16.375
    3. 'x' → logprob: -17.0
    4. '_X' → logprob: -18.625
    5. '_angle' → logprob: -20.125
    6. ' x' → logprob: -20.375
    7. '-x' → logprob: -20.375
    8. '	x' → logprob: -20.375
    9. '_xt' → logprob: -20.625
    10. '_xy' → logprob: -20.75

Token 297: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029924621805548668
    2. '()
' → logprob: -3.5299246311187744
    3. '()`' → logprob: -9.529924392700195
    4. '()

' → logprob: -10.279924392700195
    5. '()
' → logprob: -10.529924392700195
    6. '().' → logprob: -11.529924392700195
    7. '()\' → logprob: -11.779924392700195
    8. '(' → logprob: -12.529924392700195
    9. '__()
' → logprob: -12.904924392700195
    10. '()*' → logprob: -13.029924392700195

Token 298: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.320199877838604e-07
    2. 'y' → logprob: -15.5
    3. '  ' → logprob: -16.25
    4. '    
' → logprob: -18.125
    5. '    ' → logprob: -19.5
    6. '       ' → logprob: -19.875
    7. '	y' → logprob: -20.875
    8. ' ' → logprob: -21.5
    9. '```' → logprob: -21.75
    10. ' y' → logprob: -21.75

Token 299: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -9.627176768844947e-05
    2. '   ' → logprob: -9.250096321105957
    3. ' y' → logprob: -16.25009536743164
    4. '	y' → logprob: -17.12509536743164
    5. 'y's' → logprob: -20.37509536743164
    6. '  ' → logprob: -21.00009536743164
    7. '       ' → logprob: -21.12509536743164
    8. 'yb' → logprob: -21.12509536743164
    9. '_y' → logprob: -22.12509536743164
    10. 'yl' → logprob: -22.62509536743164

Token 300: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020790379494428635
    2. '   ' → logprob: -4.2707905769348145
    3. ' =' → logprob: -5.0207905769348145
    4. '```' → logprob: -12.895790100097656
    5. ' ' → logprob: -13.770790100097656
    6. '  ' → logprob: -14.145790100097656
    7. '=`' → logprob: -14.395790100097656
    8. '    ' → logprob: -15.895790100097656
    9. '=
' → logprob: -16.270790100097656
    10. '=x' → logprob: -16.395790100097656

Token 301: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -1.8624639324116288e-06
    2. ' initial' → logprob: -13.250001907348633
    3. '	initial' → logprob: -16.750001907348633
    4. '   ' → logprob: -16.875001907348633
    5. '.initial' → logprob: -18.250001907348633
    6. '初' → logprob: -18.875001907348633
    7. '(initial' → logprob: -19.875001907348633
    8. '_initial' → logprob: -20.000001907348633
    9. 'Initial' → logprob: -22.000001907348633
    10. 'INITIAL' → logprob: -23.500001907348633

Token 302: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -1.7835754988482222e-05
    2. '_x' → logprob: -11.875018119812012
    3. 'y' → logprob: -12.125018119812012
    4. '\' → logprob: -13.125018119812012
    5. '	y' → logprob: -14.375018119812012
    6. '_' → logprob: -15.000018119812012
    7. ' y' → logprob: -15.125018119812012
    8. '_h' → logprob: -15.375018119812012
    9. '(y' → logprob: -15.375018119812012
    10. '_b' → logprob: -15.625018119812012

Token 303: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0030187068041414022
    2. '()
' → logprob: -5.878018856048584
    3. '   ' → logprob: -9.753018379211426
    4. '()`' → logprob: -9.878018379211426
    5. '().' → logprob: -10.003018379211426
    6. '()

' → logprob: -11.253018379211426
    7. '()\' → logprob: -11.628018379211426
    8. '`()' → logprob: -12.003018379211426
    9. '():
' → logprob: -12.503018379211426
    10. '())' → logprob: -12.753018379211426

Token 304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: 0.0
    2. '  ' → logprob: -17.375
    3. 'return' → logprob: -18.25
    4. '    ' → logprob: -20.25
    5. '       ' → logprob: -21.0
    6. '    
' → logprob: -22.125
    7. ' ' → logprob: -22.25
    8. 'def' → logprob: -23.0
    9. '	return' → logprob: -23.125
    10. '```' → logprob: -23.75

Token 305: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06053227558732033
    2. 'return' → logprob: -3.060532331466675
    3. 'x' (adapté à ' x') → logprob: -4.435532093048096
    4. 'result' → logprob: -10.810532569885254
    5. ' return' → logprob: -13.935532569885254
    6. '  ' → logprob: -14.185532569885254
    7. 'while' → logprob: -14.185532569885254
    8. 'ang' → logprob: -14.185532569885254
    9. '	return' → logprob: -14.560532569885254
    10. 'n' → logprob: -15.060532569885254

Token 306: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5332478142227046e-05
    2. '=' → logprob: -11.625015258789062
    3. ',y' → logprob: -12.250015258789062
    4. ' =' → logprob: -14.250015258789062
    5. '   ' → logprob: -14.500015258789062
    6. ',x' → logprob: -15.375015258789062
    7. ' ,' → logprob: -17.250015258789062
    8. '，' → logprob: -17.500015258789062
    9. '_,' → logprob: -17.625015258789062
    10. '=x' → logprob: -17.875015258789062

Token 307: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -7.941850526549388e-06
    2. ' y' → logprob: -11.750007629394531
    3. '	y' → logprob: -19.75000762939453
    4. '   ' → logprob: -21.62500762939453
    5. '_y' → logprob: -22.87500762939453
    6. 'y's' → logprob: -23.25000762939453
    7. '(y' → logprob: -23.37500762939453
    8. 'Y' → logprob: -23.62500762939453
    9. 'yb' → logprob: -24.12500762939453
    10. '.y' → logprob: -24.25000762939453

Token 308: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3134608864784241
    2. '   ' → logprob: -1.9384608268737793
    3. 'return' → logprob: -2.8134608268737793
    4. ' =' → logprob: -2.9384608268737793
    5. ',' → logprob: -4.438460826873779
    6. '```' → logprob: -8.688461303710938
    7. ' return' → logprob: -10.188461303710938
    8. ')' → logprob: -10.438461303710938
    9. '#' → logprob: -11.188461303710938
    10. '_return' → logprob: -11.313461303710938

Token 309: ' iterate' (ID: 63166)
  Prédit: 'iterate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iterate' → logprob: -0.0001238004770129919
    2. ' iterate' → logprob: -9.000123977661133
    3. 'iter' → logprob: -15.000123977661133
    4. 'iterator' → logprob: -17.000123977661133
    5. 'Iter' → logprob: -19.500123977661133
    6. '_iter' → logprob: -19.625123977661133
    7. '.iter' → logprob: -19.625123977661133
    8. '   ' → logprob: -19.750123977661133
    9. 'iteration' → logprob: -19.875123977661133
    10. 'itate' → logprob: -19.875123977661133

Token 310: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -9.13388703338569e-06
    2. '_step' → logprob: -12.500009536743164
    3. '_' → logprob: -12.875009536743164
    4. 'Steps' → logprob: -13.375009536743164
    5. 'steps' → logprob: -15.250009536743164
    6. ' Steps' → logprob: -15.625009536743164
    7. '_S' → logprob: -15.625009536743164
    8. '步骤' → logprob: -16.500009536743164
    9. '.steps' → logprob: -16.750009536743164
    10. '\' → logprob: -16.750009536743164

Token 311: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.319370302458992e-06
    2. '(' → logprob: -12.375005722045898
    3. '(num' → logprob: -14.500005722045898
    4. '(m' → logprob: -16.5000057220459
    5. '(N' → logprob: -16.8750057220459
    6. '(x' → logprob: -16.8750057220459
    7. '(i' → logprob: -17.0000057220459
    8. '(int' → logprob: -17.2500057220459
    9. '(a' → logprob: -17.2500057220459
    10. 'n' → logprob: -17.7500057220459

Token 312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002879295265302062
    2. ')' → logprob: -6.0028791427612305
    3. '   ' → logprob: -8.00287914276123
    4. ')
' → logprob: -10.25287914276123
    5. '),' → logprob: -10.62787914276123
    6. ')

' → logprob: -12.37787914276123
    7. ' ,' → logprob: -13.87787914276123
    8. ')`' → logprob: -14.25287914276123
    9. '```' → logprob: -14.37787914276123
    10. ',)' → logprob: -14.50287914276123

Token 313: ' ang' (ID: 2929)
  Prédit: 'ang'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ang' → logprob: -1.306760805164231e-05
    2. ' ang' → logprob: -11.25001335144043
    3. '_ang' → logprob: -20.75001335144043
    4. 'angs' → logprob: -21.12501335144043
    5. '-ang' → logprob: -21.25001335144043
    6. 'ag' → logprob: -21.37501335144043
    7. 'angg' → logprob: -22.50001335144043
    8. 'angu' → logprob: -22.87501335144043
    9. 'angi' → logprob: -22.87501335144043
    10. 'Ang' → logprob: -23.12501335144043

Token 314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.319370302458992e-06
    2. ')' → logprob: -12.625005722045898
    3. '   ' → logprob: -14.000005722045898
    4. ',x' → logprob: -14.625005722045898
    5. '),' → logprob: -15.125005722045898
    6. ' ,' → logprob: -15.250005722045898
    7. ',)' → logprob: -16.7500057220459
    8. '，' → logprob: -17.6250057220459
    9. '`,' → logprob: -18.3750057220459
    10. '```' → logprob: -18.6250057220459

Token 315: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.5776860184123507e-06
    2. ' x' → logprob: -12.87500286102295
    3. '	x' → logprob: -20.000001907348633
    4. '   ' → logprob: -20.875001907348633
    5. '_x' → logprob: -21.250001907348633
    6. 'y' → logprob: -21.750001907348633
    7. '$x' → logprob: -22.125001907348633
    8. '(x' → logprob: -22.625001907348633
    9. '.x' → logprob: -23.125001907348633
    10. '"x' → logprob: -23.375001907348633

Token 316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9361264946837764e-07
    2. ',y' → logprob: -15.625
    3. '，' → logprob: -17.75
    4. ' ,' → logprob: -18.0
    5. ',
' → logprob: -20.0
    6. '`,' → logprob: -20.125
    7. '،' → logprob: -20.625
    8. '',' → logprob: -20.75
    9. '_,' → logprob: -20.75
    10. ',\
' → logprob: -21.25

Token 317: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.130576806142926e-05
    2. ' y' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.875030517578125
    4. '	y' → logprob: -17.500030517578125
    5. ',y' → logprob: -21.750030517578125
    6. '  ' → logprob: -21.750030517578125
    7. '_y' → logprob: -21.875030517578125
    8. 'y's' → logprob: -22.125030517578125
    9. ' ' → logprob: -22.625030517578125
    10. 'yb' → logprob: -22.875030517578125

Token 318: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6533862352371216
    2. ')
' → logprob: -0.7783862352371216
    3. '   ' → logprob: -3.903386116027832
    4. ')

' → logprob: -8.278386116027832
    5. ')
' → logprob: -9.153386116027832
    6. ')`' → logprob: -11.653386116027832
    7. '```' → logprob: -11.653386116027832
    8. ').' → logprob: -12.403386116027832
    9. ',' → logprob: -12.778386116027832
    10. '),' → logprob: -13.028386116027832

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: 0.0
    2. '  ' → logprob: -18.625
    3. 'return' → logprob: -19.0
    4. '       ' → logprob: -21.75
    5. '    ' → logprob: -22.0
    6. '    
' → logprob: -22.25
    7. '	return' → logprob: -22.25
    8. '   ' → logprob: -22.375
    9. 'def' → logprob: -22.75
    10. 'print' → logprob: -22.75

Token 320: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002520965179428458
    2. 'print' (adapté à ' print') → logprob: -6.00252103805542
    3. 'return' → logprob: -10.002520561218262
    4. '  ' → logprob: -17.002521514892578
    5. ' print' → logprob: -17.502521514892578
    6. '	print' → logprob: -18.752521514892578
    7. 'def' → logprob: -19.627521514892578
    8. '       ' → logprob: -19.752521514892578
    9. ' return' → logprob: -20.377521514892578
    10. '    ' → logprob: -20.377521514892578

Token 321: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -7.064297824399546e-05
    2. '(result' → logprob: -10.250070571899414
    3. '("_' → logprob: -10.625070571899414
    4. '_results' → logprob: -12.250070571899414
    5. '_RESULT' → logprob: -13.000070571899414
    6. '   ' → logprob: -14.250070571899414
    7. '_output' → logprob: -14.375070571899414
    8. 'result' → logprob: -14.750070571899414
    9. 'Result' → logprob: -14.875070571899414
    10. '('_' → logprob: -15.000070571899414

Token 322: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0006557276356033981
    2. '(' → logprob: -7.375655651092529
    3. '(`' → logprob: -11.500656127929688
    4. '(n' → logprob: -13.125656127929688
    5. '(np' → logprob: -13.375656127929688
    6. '(*' → logprob: -13.625656127929688
    7. '(xx' → logprob: -13.750656127929688
    8. '(a' → logprob: -13.875656127929688
    9. '   ' → logprob: -13.875656127929688
    10. '("' → logprob: -14.125656127929688

Token 323: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.246537173457909e-06
    2. ',y' → logprob: -12.500003814697266
    3. ',x' → logprob: -15.375003814697266
    4. ' ,' → logprob: -16.125003814697266
    5. '   ' → logprob: -17.500003814697266
    6. '),' → logprob: -18.000003814697266
    7. '，' → logprob: -18.000003814697266
    8. ',
' → logprob: -18.375003814697266
    9. '`,' → logprob: -19.250003814697266
    10. '،' → logprob: -19.625003814697266

Token 324: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00015860427811276168
    2. ' y' → logprob: -8.750158309936523
    3. '	y' → logprob: -17.375158309936523
    4. '   ' → logprob: -21.250158309936523
    5. '_y' → logprob: -21.250158309936523
    6. 'y's' → logprob: -21.375158309936523
    7. '(y' → logprob: -22.125158309936523
    8. '.y' → logprob: -22.375158309936523
    9. ')y' → logprob: -22.625158309936523
    10. ''y' → logprob: -22.875158309936523

Token 325: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017112065688706934
    2. '   ' → logprob: -8.750170707702637
    3. '```' → logprob: -11.875170707702637
    4. ')`' → logprob: -13.000170707702637
    5. '))' → logprob: -14.125170707702637
    6. ')
' → logprob: -14.250170707702637
    7. ' )' → logprob: -14.250170707702637
    8. '})' → logprob: -15.250170707702637
    9. ')

' → logprob: -15.375170707702637
    10. '）' → logprob: -15.500170707702637

Token 326: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.051655713468790054
    2. 'n' → logprob: -4.1766557693481445
    3. '```' → logprob: -4.3016557693481445
    4. '<|end|>' → logprob: -4.4266557693481445
    5. '   ' → logprob: -6.0516557693481445
    6. 'process' → logprob: -6.1766557693481445
    7. 'if' → logprob: -6.4266557693481445
    8. 'x' → logprob: -6.6766557693481445
    9. 'return' → logprob: -7.3016557693481445
    10. 'print' → logprob: -7.3016557693481445

Token 327: ' main' (ID: 2758)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.00014191943046171218
    2. 'main' → logprob: -8.875142097473145
    3. 'run' → logprob: -14.250142097473145
    4. 'get' → logprob: -14.625142097473145
    5. 'handle' → logprob: -14.750142097473145
    6. ' process' → logprob: -15.000142097473145
    7. 'execute' → logprob: -16.500141143798828
    8. 'start' → logprob: -17.125141143798828
    9. 'Process' → logprob: -17.375141143798828
    10. '_process' → logprob: -17.625141143798828

Token 328: '_loop' (ID: 40621)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003107943630311638
    2. '()' → logprob: -8.750310897827148
    3. '(:' → logprob: -9.000310897827148
    4. ' ():' → logprob: -11.500310897827148
    5. '():
' → logprob: -11.750310897827148
    6. '(":' → logprob: -12.875310897827148
    7. '(' → logprob: -12.875310897827148
    8. ':' → logprob: -13.000310897827148
    9. '(':' → logprob: -13.750310897827148
    10. '(_:' → logprob: -14.375310897827148

Token 329: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.632542913896032e-05
    2. '():
' → logprob: -11.000046730041504
    3. ':' → logprob: -11.375046730041504
    4. '()' → logprob: -11.500046730041504
    5. ' ():' → logprob: -12.250046730041504
    6. '(:' → logprob: -13.500046730041504
    7. '(' → logprob: -14.375046730041504
    8. '   ' → logprob: -14.875046730041504
    9. '():

' → logprob: -15.250046730041504
    10. '(":' → logprob: -15.500046730041504

Token 330: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.6100132496794686e-05
    2. 'while' → logprob: -10.000056266784668
    3. 'n' → logprob: -11.500056266784668
    4. '  ' → logprob: -14.500056266784668
    5. ' ' → logprob: -17.62505531311035
    6. '	while' → logprob: -17.62505531311035
    7. '```' → logprob: -17.75005531311035
    8. '    ' → logprob: -18.12505531311035
    9. '	n' → logprob: -18.37505531311035
    10. ' while' → logprob: -18.62505531311035

Token 331: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7318413853645325
    2. 'while' (adapté à ' while') → logprob: -1.2318413257598877
    3. '   ' → logprob: -1.4818413257598877
    4. ' n' → logprob: -13.356841087341309
    5. ' while' → logprob: -14.231841087341309
    6. '	while' → logprob: -14.856841087341309
    7. 'for' → logprob: -15.231841087341309
    8. '```' → logprob: -15.606841087341309
    9. '	n' → logprob: -15.606841087341309
    10. 'While' → logprob: -15.731841087341309

Token 332: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.01646667718887329
    2. ' True' → logprob: -4.1414666175842285
    3. 'get' → logprob: -8.266467094421387
    4. '   ' → logprob: -9.141467094421387
    5. '(True' → logprob: -10.016467094421387
    6. 'not' → logprob: -11.766467094421387
    7. 'true' → logprob: -12.016467094421387
    8. 'input' → logprob: -12.141467094421387
    9. '1' → logprob: -13.141467094421387
    10. 'n' → logprob: -14.016467094421387

Token 333: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008681101026013494
    2. ':
' → logprob: -7.750868320465088
    3. '   ' → logprob: -8.00086784362793
    4. ':`' → logprob: -10.37586784362793
    5. '::' → logprob: -11.00086784362793
    6. ':\' → logprob: -11.50086784362793
    7. ':

' → logprob: -11.62586784362793
    8. ':**' → logprob: -11.75086784362793
    9. ':def' → logprob: -12.12586784362793
    10. ' :' → logprob: -12.37586784362793

Token 334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.52788148727268e-05
    2. 'n' → logprob: -9.875064849853516
    3. '   ' → logprob: -11.375064849853516
    4. '     ' → logprob: -13.750064849853516
    5. '      ' → logprob: -13.875064849853516
    6. '        ' → logprob: -15.625064849853516
    7. '    ' → logprob: -16.500064849853516
    8. '           ' → logprob: -17.125064849853516
    9. ' n' → logprob: -18.375064849853516
    10. '  ' → logprob: -18.375064849853516

Token 335: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.06285849958658218
    2. '       ' → logprob: -2.8128585815429688
    3. '           ' → logprob: -7.062858581542969
    4. '   ' → logprob: -10.562858581542969
    5. ' n' → logprob: -11.937858581542969
    6. '               ' → logprob: -14.687858581542969
    7. '         ' → logprob: -15.062858581542969
    8. '```' → logprob: -15.437858581542969
    9. 'num' → logprob: -15.437858581542969
    10. '        ' → logprob: -15.562858581542969

Token 336: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018620207905769348
    2. '=' → logprob: -4.018620014190674
    3. '   ' → logprob: -8.143620491027832
    4. '=get' → logprob: -8.768620491027832
    5. ' ' → logprob: -11.268620491027832
    6. '       ' → logprob: -12.768620491027832
    7. '=int' → logprob: -13.018620491027832
    8. '=input' → logprob: -13.518620491027832
    9. 'get' → logprob: -13.768620491027832
    10. '  ' → logprob: -13.768620491027832

Token 337: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -1.9361264946837764e-07
    2. ' get' → logprob: -16.5
    3. '.get' → logprob: -19.25
    4. '	get' → logprob: -20.0
    5. '(get' → logprob: -21.875
    6. '_get' → logprob: -22.375
    7. 'gete' → logprob: -22.625
    8. 'getc' → logprob: -23.375
    9. 'Get' → logprob: -23.625
    10. '-get' → logprob: -23.75

Token 338: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -6.2729995988775045e-06
    2. 'input' → logprob: -12.125006675720215
    3. '_INPUT' → logprob: -15.000006675720215
    4. '_output' → logprob: -15.875006675720215
    5. '_in' → logprob: -16.1250057220459
    6. 'Input' → logprob: -17.0000057220459
    7. ' input' → logprob: -17.1250057220459
    8. '.input' → logprob: -17.1250057220459
    9. '_int' → logprob: -17.6250057220459
    10. '"_' → logprob: -17.7500057220459

Token 339: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.371605948312208e-05
    2. '()
' → logprob: -10.000053405761719
    3. '()`' → logprob: -12.125053405761719
    4. '()

' → logprob: -14.000053405761719
    5. '().' → logprob: -14.250053405761719
    6. '()\' → logprob: -14.750053405761719
    7. ']()' → logprob: -15.125053405761719
    8. '`()' → logprob: -15.625053405761719
    9. '()(' → logprob: -15.875053405761719
    10. '()
' → logprob: -16.00005340576172

Token 340: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.320199877838604e-07
    2. '      ' → logprob: -15.375
    3. '     ' → logprob: -16.375
    4. '   ' → logprob: -16.375
    5. 'if' → logprob: -16.625
    6. '        ' → logprob: -16.75
    7. '           ' → logprob: -17.875
    8. '        
' → logprob: -18.625
    9. '         ' → logprob: -19.375
    10. '```' → logprob: -19.5

Token 341: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009184855734929442
    2. 'if' (adapté à ' if') → logprob: -7.000918388366699
    3. '   ' → logprob: -12.1259183883667
    4. '     ' → logprob: -14.1259183883667
    5. '      ' → logprob: -14.5009183883667
    6. '           ' → logprob: -15.7509183883667
    7. '        ' → logprob: -16.125919342041016
    8. 'print' → logprob: -17.500919342041016
    9. '	if' → logprob: -17.750919342041016
    10. '         ' → logprob: -18.000919342041016

Token 342: ' should' (ID: 1757)
  Prédit: 'should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'should' → logprob: -3.893480243277736e-05
    2. ' should' → logprob: -10.625039100646973
    3. '       ' → logprob: -11.875039100646973
    4. '.should' → logprob: -12.375039100646973
    5. '   ' → logprob: -12.750039100646973
    6. '           ' → logprob: -15.625039100646973
    7. '_should' → logprob: -15.625039100646973
    8. 'shall' → logprob: -15.875039100646973
    9. '应该' → logprob: -18.500038146972656
    10. 'Should' → logprob: -18.625038146972656

Token 343: '_break' (ID: 98301)
  Prédit: '_break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_break' → logprob: -0.062034789472818375
    2. 'break' → logprob: -2.812034845352173
    3. '_BREAK' → logprob: -10.937034606933594
    4. '.break' → logprob: -11.312034606933594
    5. 'Break' → logprob: -11.562034606933594
    6. '-break' → logprob: -11.687034606933594
    7. '	break' → logprob: -11.812034606933594
    8. ' break' → logprob: -12.062034606933594
    9. '       ' → logprob: -12.937034606933594
    10. '   ' → logprob: -13.562034606933594

Token 344: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.375000953674316
    3. 'n' → logprob: -18.375
    4. '(N' → logprob: -18.625
    5. '(m' → logprob: -19.5
    6. '(num' → logprob: -19.875
    7. '(np' → logprob: -20.0
    8. '(nt' → logprob: -20.25
    9. '(v' → logprob: -20.75
    10. ' n' → logprob: -20.75

Token 345: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06227206066250801
    2. '):' → logprob: -2.812272071838379
    3. '):

' → logprob: -8.812272071838379
    4. ')' → logprob: -9.437272071838379
    5. '):
' → logprob: -9.562272071838379
    6. ')):
' → logprob: -12.562272071838379
    7. ')):' → logprob: -14.562272071838379
    8. ')
' → logprob: -15.437272071838379
    9. '()):
' → logprob: -15.437272071838379
    10. '"):
' → logprob: -15.687272071838379

Token 346: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.522638169466518e-05
    2. 'break' → logprob: -10.750024795532227
    3. '         ' → logprob: -13.125024795532227
    4. '          ' → logprob: -14.125024795532227
    5. '       ' → logprob: -14.375024795532227
    6. '               ' → logprob: -15.750024795532227
    7. '            ' → logprob: -15.875024795532227
    8. 'return' → logprob: -16.625024795532227
    9. '             ' → logprob: -17.875024795532227
    10. '   ' → logprob: -18.000024795532227

Token 347: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.03847449645400047
    2. '           ' → logprob: -3.2884745597839355
    3. 'return' → logprob: -7.7884745597839355
    4. ' break' → logprob: -11.163474082946777
    5. 'print' → logprob: -12.788474082946777
    6. '               ' → logprob: -14.038474082946777
    7. '       ' → logprob: -15.413474082946777
    8. 'Break' → logprob: -15.663474082946777
    9. 'bre' → logprob: -16.538475036621094
    10. '            ' → logprob: -16.538475036621094

Token 348: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017227731877937913
    2. '   ' → logprob: -6.376722812652588
    3. '           ' → logprob: -11.50172233581543
    4. 'def' → logprob: -12.50172233581543
    5. '      ' → logprob: -13.00172233581543
    6. '     ' → logprob: -13.00172233581543
    7. '        ' → logprob: -14.37672233581543
    8. '```' → logprob: -15.12672233581543
    9. '               ' → logprob: -15.25172233581543
    10. '    ' → logprob: -15.25172233581543

Token 349: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029770394787192345
    2. '   ' → logprob: -3.5297703742980957
    3. 'def' → logprob: -12.029770851135254
    4. '           ' → logprob: -12.029770851135254
    5. '     ' → logprob: -13.154770851135254
    6. 'if' → logprob: -13.529770851135254
    7. '      ' → logprob: -13.654770851135254
    8. 'main' → logprob: -13.654770851135254
    9. 'process' → logprob: -14.779770851135254
    10. '```' → logprob: -14.779770851135254

Token 350: ' process' (ID: 2273)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018151111900806427
    2. 'process' (adapté à ' process') → logprob: -4.01815128326416
    3. '   ' → logprob: -14.26815128326416
    4. 'processing' → logprob: -15.26815128326416
    5. '      ' → logprob: -15.64315128326416
    6. '     ' → logprob: -16.643150329589844
    7. '	process' → logprob: -16.893150329589844
    8. '.process' → logprob: -17.018150329589844
    9. '        ' → logprob: -17.143150329589844
    10. '           ' → logprob: -17.143150329589844

Token 351: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.00015836587408557534
    2. '_ONE' → logprob: -8.875158309936523
    3. '_' → logprob: -11.750158309936523
    4. 'One' → logprob: -12.875158309936523
    5. ' One' → logprob: -13.750158309936523
    6. '_once' → logprob: -13.875158309936523
    7. '_none' → logprob: -13.875158309936523
    8. 'one' → logprob: -15.375158309936523
    9. '_two' → logprob: -15.375158309936523
    10. '-one' → logprob: -15.375158309936523

Token 352: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.7610454708337784e-05
    2. '_INPUT' → logprob: -11.625027656555176
    3. '_output' → logprob: -11.875027656555176
    4. 'input' → logprob: -12.000027656555176
    5. '_inputs' → logprob: -13.375027656555176
    6. '_in' → logprob: -14.000027656555176
    7. 'Input' → logprob: -14.125027656555176
    8. '_Input' → logprob: -14.750027656555176
    9. '_' → logprob: -14.875027656555176
    10. '_import' → logprob: -15.375027656555176

Token 353: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.392202976712724e-06
    2. '(' → logprob: -12.000006675720215
    3. '(num' → logprob: -16.5000057220459
    4. '(np' → logprob: -17.2500057220459
    5. '(`' → logprob: -17.6250057220459
    6. '()' → logprob: -17.6250057220459
    7. '(N' → logprob: -17.8750057220459
    8. '(m' → logprob: -18.1250057220459
    9. '(int' → logprob: -18.5000057220459
    10. '(None' → logprob: -19.0000057220459

Token 354: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.15310683415737e-05
    2. ')
' → logprob: -11.375021934509277
    3. '       ' → logprob: -11.625021934509277
    4. '   ' → logprob: -14.625021934509277
    5. ')

' → logprob: -15.875021934509277
    6. ' )' → logprob: -15.875021934509277
    7. '())' → logprob: -16.37502098083496
    8. '           ' → logprob: -16.50002098083496
    9. ')`' → logprob: -16.62502098083496
    10. '）' → logprob: -16.87502098083496

Token 355: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.035558819770813
    2. '```' → logprob: -1.535558819770813
    3. '<|end|>' → logprob: -1.660558819770813
    4. 'if' → logprob: -1.785558819770813
    5. '   ' → logprob: -3.2855587005615234
    6. 'main' → logprob: -3.7855587005615234
    7. '<|end|>' → logprob: -6.035558700561523
    8. '       ' → logprob: -6.160558700561523
    9. 'print' → logprob: -6.660558700561523
    10. '#' → logprob: -6.785558700561523

Token 356: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.36574100604048e-06
    2. ' main' → logprob: -12.375004768371582
    3. '_main' → logprob: -17.375003814697266
    4. 'run' → logprob: -18.000003814697266
    5. '__' → logprob: -18.125003814697266
    6. '.main' → logprob: -18.375003814697266
    7. '	main' → logprob: -18.500003814697266
    8. 'Main' → logprob: -19.750003814697266
    9. 'if' → logprob: -19.875003814697266
    10. '-main' → logprob: -20.250003814697266

Token 357: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.745069499127567e-05
    2. '()' → logprob: -10.25008773803711
    3. '_:' → logprob: -10.87508773803711
    4. ':' → logprob: -11.25008773803711
    5. '():
' → logprob: -11.75008773803711
    6. ' ():' → logprob: -12.00008773803711
    7. '_' → logprob: -12.62508773803711
    8. ':_' → logprob: -14.50008773803711
    9. '_:*' → logprob: -14.62508773803711
    10. '":' → logprob: -14.87508773803711

Token 358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.088346359931165e-07
    2. 'main' → logprob: -14.625000953674316
    3. '  ' → logprob: -14.750000953674316
    4. '	main' → logprob: -17.25
    5. ' main' → logprob: -19.5
    6. '    ' → logprob: -19.75
    7. ' ' → logprob: -19.75
    8. '```' → logprob: -21.25
    9. '       ' → logprob: -21.625
    10. '   ' → logprob: -22.25

Token 359: ' main' (ID: 2758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47408294677734375
    2. 'main' (adapté à ' main') → logprob: -0.9740829467773438
    3. ' main' → logprob: -12.724082946777344
    4. '	main' → logprob: -12.849082946777344
    5. '  ' → logprob: -15.599082946777344
    6. 'if' → logprob: -16.849082946777344
    7. '.main' → logprob: -17.349082946777344
    8. '_main' → logprob: -17.974082946777344
    9. 'Main' → logprob: -18.224082946777344
    10. '(main' → logprob: -18.224082946777344

Token 360: '_loop' (ID: 40621)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010755611583590508
    2. '_loop' → logprob: -7.126075744628906
    3. '_' → logprob: -9.251075744628906
    4. 'loop' → logprob: -9.751075744628906
    5. '()`' → logprob: -9.751075744628906
    6. '(_)' → logprob: -11.751075744628906
    7. 'Loop' → logprob: -12.251075744628906
    8. '()*' → logprob: -12.626075744628906
    9. '()<' → logprob: -12.751075744628906
    10. '()\' → logprob: -12.876075744628906

Token 361: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0802738870552275e-05
    2. '()`' → logprob: -12.00001049041748
    3. '(' → logprob: -14.00001049041748
    4. ' ()' → logprob: -14.50001049041748
    5. ']()' → logprob: -14.62501049041748
    6. '   ' → logprob: -14.87501049041748
    7. '()
' → logprob: -15.00001049041748
    8. '()(' → logprob: -15.00001049041748
    9. '()}' → logprob: -15.37501049041748
    10. '().' → logprob: -15.50001049041748

Token 362: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.016064753755927086
    2. 'if' → logprob: -4.141064643859863
    3. ' main' → logprob: -11.516064643859863
    4. '```' → logprob: -11.891064643859863
    5. '.main' → logprob: -12.516064643859863
    6. '#' → logprob: -13.266064643859863
    7. '	main' → logprob: -13.641064643859863
    8. 'print' → logprob: -13.641064643859863
    9. 'Main' → logprob: -13.766064643859863
    10. '<|end|>' → logprob: -13.766064643859863

Token 363: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.6240566083070007e-06
    2. '()`' → logprob: -14.125001907348633
    3. '()
' → logprob: -14.875001907348633
    4. '(' → logprob: -15.375001907348633
    5. '()(' → logprob: -16.125001907348633
    6. '```' → logprob: -17.750001907348633
    7. '（）' → logprob: -17.875001907348633
    8. '()

' → logprob: -17.875001907348633
    9. ' ()' → logprob: -18.000001907348633
    10. '()\' → logprob: -18.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 361
Tokens correctement prédits (1ère position, stricte): 152
Tokens correctement prédits (1ère position, avec adaptation): 166
Tokens correctement prédits (top 10): 302
Précision stricte (1ère position): 42.11%
Précision adaptée (1ère position): 45.98%
Précision (top 10): 83.66%
================================================================================
