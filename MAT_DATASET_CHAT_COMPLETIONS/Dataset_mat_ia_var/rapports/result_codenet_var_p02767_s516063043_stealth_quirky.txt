================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:25:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
X = [*map(int, input().split())]
solution = 1e99

i = 1
while i <= 100:
    err = sum((x - i)*(x - i) for x in X)
    if err < solution:
        solution = err
    i += 1

[*map(print, [solution])]
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002943479048553854
    2. ''' → logprob: -8.75029468536377
    3. '`' → logprob: -10.00029468536377
    4. '```' → logprob: -10.62529468536377
    5. '(
' → logprob: -10.75029468536377
    6. '(N' → logprob: -11.00029468536377
    7. '\(' → logprob: -12.25029468536377
    8. ')' → logprob: -12.25029468536377
    9. '"' → logprob: -12.62529468536377
    10. '("("' → logprob: -12.87529468536377

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2323538064956665
    2. ')' → logprob: -1.6073538064956665
    3. '()' → logprob: -5.232353687286377
    4. '())' → logprob: -7.107353687286377
    5. '(
' → logprob: -8.232354164123535
    6. '```' → logprob: -9.357354164123535
    7. '(

' → logprob: -10.107354164123535
    8. '))' → logprob: -10.107354164123535
    9. '")' → logprob: -10.607354164123535
    10. '("("' → logprob: -10.732354164123535

Token 5: 'X' (ID: 55)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5391327142715454
    2. 'if' → logprob: -2.289132595062256
    3. 's' → logprob: -2.664132595062256
    4. 'a' → logprob: -2.664132595062256
    5. 'x' → logprob: -3.539132595062256
    6. 'i' → logprob: -3.539132595062256
    7. ' ' → logprob: -4.039132595062256
    8. 'f' → logprob: -4.164132595062256
    9. '[' → logprob: -4.539132595062256
    10. ' for' → logprob: -4.664132595062256

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13345351815223694
    2. '=' → logprob: -3.258453607559204
    3. '+' → logprob: -3.383453607559204
    4. '.' → logprob: -3.758453607559204
    5. ' =' → logprob: -3.883453607559204
    6. ')' → logprob: -6.258453369140625
    7. '_' → logprob: -6.258453369140625
    8. '*' → logprob: -7.508453369140625
    9. '**' → logprob: -7.508453369140625
    10. '%' → logprob: -7.758453369140625

Token 7: ' [' (ID: 723)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.9649524688720703
    2. 'list' → logprob: -1.9649524688720703
    3. ' int' → logprob: -2.3399524688720703
    4. ' list' → logprob: -2.4649524688720703
    5. '[]' → logprob: -2.4649524688720703
    6. '0' → logprob: -2.7149524688720703
    7. 'input' → logprob: -3.0899524688720703
    8. ' []' → logprob: -3.4649524688720703
    9. '[int' → logprob: -3.5899524688720703
    10. ' input' → logprob: -4.33995246887207

Token 8: '*' (ID: 9)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0013785678893327713
    2. '0' → logprob: -6.626378536224365
    3. ' int' → logprob: -11.001379013061523
    4. ']int' → logprob: -11.501379013061523
    5. 'i' → logprob: -11.626379013061523
    6. ']' → logprob: -11.876379013061523
    7. '(int' → logprob: -12.126379013061523
    8. ')' → logprob: -13.126379013061523
    9. '[int' → logprob: -14.626379013061523
    10. '*' → logprob: -14.751379013061523

Token 9: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.030188364908099174
    2. 'range' → logprob: -3.5301883220672607
    3. ' map' → logprob: -8.40518856048584
    4. 'input' → logprob: -9.03018856048584
    5. '(map' → logprob: -9.65518856048584
    6. ' range' → logprob: -10.78018856048584
    7. 'int' → logprob: -11.90518856048584
    8. '(range' → logprob: -13.15518856048584
    9. 'list' → logprob: -14.65518856048584
    10. '	map' → logprob: -16.155187606811523

Token 10: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00862213596701622
    2. '(' → logprob: -4.758622169494629
    3. '(str' → logprob: -13.133622169494629
    4. 'int' → logprob: -13.258622169494629
    5. ' (' → logprob: -13.633622169494629
    6. '(
' → logprob: -13.883622169494629
    7. '(input' → logprob: -15.008622169494629
    8. '```' → logprob: -15.633622169494629
    9. ',int' → logprob: -15.758622169494629
    10. '<int' → logprob: -15.883622169494629

Token 11: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.7970388531684875
    2. ',input' → logprob: -0.9220388531684875
    3. ',' → logprob: -1.9220387935638428
    4. '(' → logprob: -5.422039031982422
    5. ')]' → logprob: -8.172039031982422
    6. 'input' → logprob: -8.422039031982422
    7. '(),' → logprob: -9.047039031982422
    8. ')' → logprob: -9.547039031982422
    9. ' ,' → logprob: -9.672039031982422
    10. ',(' → logprob: -10.797039031982422

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04313986375927925
    2. ' input' → logprob: -3.168139934539795
    3. '(input' → logprob: -9.043139457702637
    4. ',input' → logprob: -11.543139457702637
    5. ')' → logprob: -12.043139457702637
    6. '=input' → logprob: -13.168139457702637
    7. 'range' → logprob: -13.293139457702637
    8. '_input' → logprob: -14.543139457702637
    9. '[input' → logprob: -14.543139457702637
    10. ' ' → logprob: -14.793139457702637

Token 13: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0012323728296905756
    2. '())' → logprob: -7.251232147216797
    3. '()' → logprob: -7.626232147216797
    4. '()]' → logprob: -10.626232147216797
    5. ')]' → logprob: -12.501232147216797
    6. '()))' → logprob: -13.376232147216797
    7. ')' → logprob: -13.876232147216797
    8. ' ().' → logprob: -14.001232147216797
    9. '(' → logprob: -14.376232147216797
    10. '()
' → logprob: -14.751232147216797

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.8193366486229934e-05
    2. 'strip' → logprob: -11.125018119812012
    3. 'rstrip' → logprob: -12.875018119812012
    4. ' split' → logprob: -14.375018119812012
    5. '(split' → logprob: -16.500019073486328
    6. 'spl' → logprob: -16.875019073486328
    7. 'sp' → logprob: -19.250019073486328
    8. 'read' → logprob: -20.000019073486328
    9. '.split' → logprob: -20.250019073486328
    10. 's' → logprob: -20.375019073486328

Token 15: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07821997255086899
    2. ')]' → logprob: -2.7032198905944824
    3. ')' → logprob: -5.828219890594482
    4. '()]' → logprob: -6.203219890594482
    5. ')])' → logprob: -6.703219890594482
    6. '()' → logprob: -7.203219890594482
    7. '()))' → logprob: -7.453219890594482
    8. '(' → logprob: -8.07822036743164
    9. '))' → logprob: -8.07822036743164
    10. '('' → logprob: -9.70322036743164

Token 16: ']
' (ID: 1592)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0011259292950853705
    2. ']' → logprob: -7.376125812530518
    3. ')' → logprob: -7.626125812530518
    4. ')])' → logprob: -12.626126289367676
    5. '])]' → logprob: -13.126126289367676
    6. '`]' → logprob: -13.876126289367676
    7. '')]' → logprob: -14.001126289367676
    8. ' )' → logprob: -14.251126289367676
    9. '))' → logprob: -14.251126289367676
    10. ')]
' → logprob: -14.251126289367676

Token 17: 'solution' (ID: 84819)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14982236921787262
    2. 's' → logprob: -2.524822473526001
    3. 'X' → logprob: -3.774822473526001
    4. 'print' → logprob: -5.274822235107422
    5. 'x' → logprob: -5.399822235107422
    6. 'sum' → logprob: -6.024822235107422
    7. 'a' → logprob: -6.149822235107422
    8. 'd' → logprob: -6.274822235107422
    9. 'r' → logprob: -6.274822235107422
    10. ')' → logprob: -6.524822235107422

Token 18: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.36964163184165955
    2. '=' → logprob: -1.744641661643982
    3. ' =' → logprob: -2.8696415424346924
    4. 's' → logprob: -3.2446415424346924
    5. '_' → logprob: -3.4946415424346924
    6. '1' → logprob: -6.3696417808532715
    7. '.' → logprob: -6.4946417808532715
    8. ':' → logprob: -6.8696417808532715
    9. ')' → logprob: -6.9946417808532715
    10. '```' → logprob: -7.4946417808532715

Token 19: ' ' (ID: 220)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.783594012260437
    2. '[]' → logprob: -1.783594012260437
    3. '0' → logprob: -2.4085941314697266
    4. ' ' → logprob: -2.7835941314697266
    5. ' max' → logprob: -3.1585941314697266
    6. ' [' → logprob: -3.1585941314697266
    7. 'max' → logprob: -3.2835941314697266
    8. 'sum' → logprob: -3.4085941314697266
    9. '[max' → logprob: -3.9085941314697266
    10. '[' → logprob: -4.158594131469727

Token 20: '1' (ID: 16)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.0265988111495972
    2. '0' → logprob: -1.4015988111495972
    3. '[' → logprob: -1.9015988111495972
    4. 'max' → logprob: -2.4015989303588867
    5. 'sum' → logprob: -2.6515989303588867
    6. 'min' → logprob: -3.9015989303588867
    7. 'sorted' → logprob: -4.151598930358887
    8. '[max' → logprob: -4.276598930358887
    9. '{}' → logprob: -4.401598930358887
    10. '[min' → logprob: -5.026598930358887

Token 21: 'e' (ID: 68)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7891172170639038
    2. ' for' → logprob: -1.4141172170639038
    3. ' ' → logprob: -1.7891172170639038
    4. '*' → logprob: -2.6641173362731934
    5. '+' → logprob: -3.1641173362731934
    6. '_' → logprob: -5.039117336273193
    7. '0' → logprob: -5.664117336273193
    8. ',' → logprob: -6.664117336273193
    9. '%' → logprob: -6.914117336273193
    10. '.' → logprob: -7.039117336273193

Token 22: '99' (ID: 2058)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20338988304138184
    2. '9' → logprob: -2.203389883041382
    3. '6' → logprob: -3.453389883041382
    4. '+' → logprob: -4.328390121459961
    5. '8' → logprob: -4.828390121459961
    6. '7' → logprob: -4.953390121459961
    7. '0' → logprob: -5.328390121459961
    8. '5' → logprob: -5.578390121459961
    9. '3' → logprob: -5.953390121459961
    10. '2' → logprob: -7.328390121459961

Token 23: '

' (ID: 279)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7501776814460754
    2. ' 
' → logprob: -1.2501776218414307
    3. '
' → logprob: -2.6251776218414307
    4. 'for' → logprob: -3.0001776218414307
    5. '+' → logprob: -3.3751776218414307
    6. '<|end|>' → logprob: -3.5001776218414307
    7. ' for' → logprob: -4.37517786026001
    8. '' → logprob: -4.62517786026001
    9. ' 

' → logprob: -5.37517786026001
    10. '-' → logprob: -5.62517786026001

Token 24: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06303277611732483
    2. ' for' → logprob: -2.813032865524292
    3. '
' → logprob: -7.688032627105713
    4. '\n' → logprob: -8.188033103942871
    5. '```' → logprob: -9.063033103942871
    6. '<|end|>' → logprob: -9.688033103942871
    7. '' → logprob: -9.938033103942871
    8. ' 
' → logprob: -10.313033103942871
    9. '\' → logprob: -10.438033103942871
    10. '+' → logprob: -11.688033103942871

Token 25: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38846805691719055
    2. 'f' → logprob: -1.1384680271148682
    3. '=' → logprob: -7.388468265533447
    4. ' n' → logprob: -7.888468265533447
    5. '+' → logprob: -8.263467788696289
    6. 's' → logprob: -9.388467788696289
    7. 'nd' → logprob: -9.513467788696289
    8. ' ' → logprob: -10.388467788696289
    9. 'nt' → logprob: -10.388467788696289
    10. '_' → logprob: -10.513467788696289

Token 26: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013488073600456119
    2. ' ' → logprob: -6.626348972320557
    3. '1' → logprob: -10.751348495483398
    4. '2' → logprob: -14.251348495483398
    5. 'N' → logprob: -14.876348495483398
    6. '-' → logprob: -14.876348495483398
    7. ' -' → logprob: -17.1263484954834
    8. '=' → logprob: -17.4388484954834
    9. '(' → logprob: -17.5013484954834
    10. ' N' → logprob: -17.6263484954834

Token 27: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004658233083318919
    2. '1' → logprob: -8.375465393066406
    3. ' ' → logprob: -8.625465393066406
    4. 'N' → logprob: -10.500465393066406
    5. '2' → logprob: -11.125465393066406
    6. '-' → logprob: -11.375465393066406
    7. '-N' → logprob: -14.500465393066406
    8. '10' → logprob: -15.625465393066406
    9. ' N' → logprob: -15.750465393066406
    10. '3' → logprob: -15.875465393066406

Token 28: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3703992962837219
    2. ' ' → logprob: -1.4953992366790771
    3. '0' → logprob: -3.745399236679077
    4. ' while' → logprob: -4.245399475097656
    5. '<|end|>' → logprob: -4.370399475097656
    6. ',' → logprob: -4.995399475097656
    7. ' +' → logprob: -5.245399475097656
    8. 'while' → logprob: -5.495399475097656
    9. '*' → logprob: -5.620399475097656
    10. '%' → logprob: -5.870399475097656

Token 29: 'while' (ID: 7032)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.46670427918434143
    2. ' while' → logprob: -1.466704249382019
    3. 'while' → logprob: -2.0917043685913086
    4. ' ' → logprob: -4.966704368591309
    5. ',' → logprob: -5.841704368591309
    6. '-' → logprob: -6.841704368591309
    7. ' +' → logprob: -7.091704368591309
    8. '=' → logprob: -7.091704368591309
    9. '<|end|>' → logprob: -7.091704368591309
    10. '%' → logprob: -7.091704368591309

Token 30: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0032332094851881266
    2. 'i' → logprob: -5.753233432769775
    3. ' ' → logprob: -10.378232955932617
    4. ' N' → logprob: -11.378232955932617
    5. '(i' → logprob: -12.753232955932617
    6. ' (' → logprob: -12.878232955932617
    7. ' ' → logprob: -13.003232955932617
    8. 'N' → logprob: -13.878232955932617
    9. ' True' → logprob: -14.253232955932617
    10. '<' → logprob: -14.503232955932617

Token 31: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5940133929252625
    2. '<' → logprob: -0.9690133929252625
    3. ' <=' → logprob: -2.8440134525299072
    4. '<=' → logprob: -4.594013214111328
    5. ' ' → logprob: -9.969013214111328
    6. '<len' → logprob: -9.969013214111328
    7. '<n' → logprob: -11.094013214111328
    8. '<N' → logprob: -12.094013214111328
    9. '*' → logprob: -12.219013214111328
    10. ' *' → logprob: -12.844013214111328

Token 32: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.030072806403040886
    2. ' N' → logprob: -3.5300726890563965
    3. ' ' → logprob: -8.655073165893555
    4. '100' → logprob: -9.780073165893555
    5. '10' → logprob: -10.405073165893555
    6. '(' → logprob: -11.530073165893555
    7. 'i' → logprob: -11.905073165893555
    8. 'len' → logprob: -11.905073165893555
    9. '9' → logprob: -12.405073165893555
    10. '1' → logprob: -12.405073165893555

Token 33: '100' (ID: 1353)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00016218038217630237
    2. ' N' → logprob: -9.875162124633789
    3. '10' → logprob: -10.250162124633789
    4. '100' → logprob: -10.375162124633789
    5. '(' → logprob: -11.875162124633789
    6. '9' → logprob: -12.125162124633789
    7. 'len' → logprob: -12.250162124633789
    8. 'i' → logprob: -12.375162124633789
    9. '2' → logprob: -13.000162124633789
    10. '1' → logprob: -13.125162124633789

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021932097151875496
    2. '0' → logprob: -4.146932125091553
    3. ' :' → logprob: -5.771932125091553
    4. ':
' → logprob: -7.021932125091553
    5. '000' → logprob: -7.396932125091553
    6. '00' → logprob: -7.771932125091553
    7. '   ' → logprob: -8.521931648254395
    8. ' ' → logprob: -8.771931648254395
    9. '**' → logprob: -8.896931648254395
    10. ' and' → logprob: -10.021931648254395

Token 35: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06314492970705032
    2. ' 
' → logprob: -3.3131449222564697
    3. '    ' → logprob: -5.188145160675049
    4. '     
' → logprob: -5.313145160675049
    5. '<|end|>' → logprob: -5.313145160675049
    6. ' i' → logprob: -6.313145160675049
    7. '   ' → logprob: -6.313145160675049
    8. '    
' → logprob: -6.688145160675049
    9. 'i' → logprob: -7.063145160675049
    10. '```' → logprob: -7.438145160675049

Token 36: ' err' (ID: 2962)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.554510235786438
    2. ' i' → logprob: -1.554510235786438
    3. ' ' → logprob: -1.804510235786438
    4. '   ' → logprob: -1.804510235786438
    5. ' for' → logprob: -2.6795101165771484
    6. ' x' → logprob: -3.6795101165771484
    7. ' 
' → logprob: -3.6795101165771484
    8. '    ' → logprob: -3.9295101165771484
    9. ' solution' → logprob: -3.9295101165771484
    10. '    
' → logprob: -4.054510116577148

Token 37: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.003919530194252729
    2. ' =' → logprob: -6.37891960144043
    3. '_or' → logprob: -7.25391960144043
    4. '=' → logprob: -7.50391960144043
    5. '_' → logprob: -7.75391960144043
    6. ' or' → logprob: -8.37891960144043
    7. '(or' → logprob: -9.25391960144043
    8. '```' → logprob: -9.75391960144043
    9. 'o' → logprob: -10.37891960144043
    10. '	or' → logprob: -10.87891960144043

Token 38: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7360256314277649
    2. ' ' → logprob: -1.4860255718231201
    3. ' abs' → logprob: -1.9860255718231201
    4. ' sum' → logprob: -2.48602557182312
    5. 'abs' → logprob: -3.36102557182312
    6. 'sum' → logprob: -3.98602557182312
    7. ' max' → logprob: -4.986025810241699
    8. ' i' → logprob: -5.236025810241699
    9. ' (' → logprob: -5.736025810241699
    10. '(sum' → logprob: -6.611025810241699

Token 39: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.7351945042610168
    2. '(abs' → logprob: -1.110194444656372
    3. '(' → logprob: -1.735194444656372
    4. 'abs' → logprob: -4.360194683074951
    5. '(((' → logprob: -7.610194683074951
    6. ' abs' → logprob: -8.235194206237793
    7. '(i' → logprob: -8.610194206237793
    8. '   ' → logprob: -8.735194206237793
    9. '(sum' → logprob: -9.110194206237793
    10. '(
' → logprob: -9.235194206237793

Token 40: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7335246205329895
    2. 'X' → logprob: -1.3585245609283447
    3. ' x' → logprob: -2.6085245609283447
    4. '(x' → logprob: -2.6085245609283447
    5. ' X' → logprob: -2.9835245609283447
    6. '(X' → logprob: -3.4835245609283447
    7. ' (' → logprob: -4.233524799346924
    8. 'xi' → logprob: -5.358524799346924
    9. '(' → logprob: -6.358524799346924
    10. 'abs' → logprob: -6.608524799346924

Token 41: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.23862679302692413
    2. '-' → logprob: -1.6136268377304077
    3. '-i' → logprob: -4.363626956939697
    4. ' ' → logprob: -9.113626480102539
    5. '-x' → logprob: -9.613626480102539
    6. '   ' → logprob: -9.738626480102539
    7. '-n' → logprob: -10.738626480102539
    8. '  ' → logprob: -10.988626480102539
    9. ' /' → logprob: -10.988626480102539
    10. '/' → logprob: -11.488626480102539

Token 42: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.644101083278656
    2. ' i' → logprob: -0.769101083278656
    3. ' (' → logprob: -5.144101142883301
    4. '(i' → logprob: -6.019101142883301
    5. ' ' → logprob: -7.019101142883301
    6. '(' → logprob: -7.394101142883301
    7. '1' → logprob: -8.2691011428833
    8. '   ' → logprob: -8.2691011428833
    9. ')' → logprob: -8.3941011428833
    10. 'X' → logprob: -8.5191011428833

Token 43: ')*(' (ID: 44406)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.5767378807067871
    2. ')' → logprob: -0.8267378807067871
    3. ' )' → logprob: -7.201737880706787
    4. '   ' → logprob: -10.826738357543945
    5. '**' → logprob: -11.576738357543945
    6. '  ' → logprob: -12.326738357543945
    7. ' ' → logprob: -12.701738357543945
    8. ' ' → logprob: -13.451738357543945
    9. '**)' → logprob: -13.451738357543945
    10. '）' → logprob: -13.576738357543945

Token 44: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.18030868470668793
    2. ' x' → logprob: -1.8053086996078491
    3. ')' → logprob: -8.18030834197998
    4. ')x' → logprob: -9.18030834197998
    5. 'i' → logprob: -9.93030834197998
    6. ' ' → logprob: -10.05530834197998
    7. ' )' → logprob: -10.55530834197998
    8. '  ' → logprob: -11.18030834197998
    9. '1' → logprob: -11.43030834197998
    10. ' i' → logprob: -11.68030834197998

Token 45: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0877796858549118
    2. '-' → logprob: -2.7127797603607178
    3. '<|end|>' → logprob: -4.712779521942139
    4. ')' → logprob: -4.962779521942139
    5. '-i' → logprob: -7.712779521942139
    6. '<|end|>' → logprob: -7.837779521942139
    7. ' i' → logprob: -8.712779998779297
    8. ' )' → logprob: -8.837779998779297
    9. ' ' → logprob: -8.837779998779297
    10. '  ' → logprob: -9.087779998779297

Token 46: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03082827851176262
    2. ' i' → logprob: -3.5308282375335693
    3. '<|end|>' → logprob: -7.530828475952148
    4. '1' → logprob: -8.030828475952148
    5. ' ' → logprob: -9.530828475952148
    6. ')' → logprob: -9.655828475952148
    7. '   ' → logprob: -10.530828475952148
    8. '<|end|>' → logprob: -11.280828475952148
    9. '  ' → logprob: -11.530828475952148
    10. ')i' → logprob: -12.405828475952148

Token 47: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00041994822095148265
    2. ' )' → logprob: -7.875420093536377
    3. ')**' → logprob: -10.625419616699219
    4. ' for' → logprob: -12.375419616699219
    5. 'for' → logprob: -13.125419616699219
    6. '))' → logprob: -13.125419616699219
    7. ' ' → logprob: -13.250419616699219
    8. ')
' → logprob: -13.750419616699219
    9. ')`' → logprob: -13.875419616699219
    10. '**' → logprob: -13.875419616699219

Token 48: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02074519917368889
    2. ')' → logprob: -4.520745277404785
    3. 'for' → logprob: -4.895745277404785
    4. ' )' → logprob: -6.395745277404785
    5. ' ' → logprob: -7.645745277404785
    6. '	for' → logprob: -11.520745277404785
    7. '<|end|>' → logprob: -12.145745277404785
    8. '   ' → logprob: -12.520745277404785
    9. ' ' → logprob: -13.645745277404785
    10. '  ' → logprob: -13.645745277404785

Token 49: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4841071367263794
    2. 'x' → logprob: -1.2341071367263794
    3. ' X' → logprob: -2.85910701751709
    4. 'X' → logprob: -3.35910701751709
    5. '<|end|>' → logprob: -7.60910701751709
    6. ' ' → logprob: -10.10910701751709
    7. '<|end|>' → logprob: -11.35910701751709
    8. ' in' → logprob: -11.73410701751709
    9. ' i' → logprob: -12.48410701751709
    10. ')' → logprob: -12.85910701751709

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20973770320415497
    2. ' X' → logprob: -2.209737777709961
    3. 'X' → logprob: -2.584737777709961
    4. 'in' → logprob: -5.584737777709961
    5. '<|end|>' → logprob: -8.334737777709961
    6. ' ' → logprob: -10.709737777709961
    7. ')' → logprob: -11.209737777709961
    8. '<|end|>' → logprob: -11.709737777709961
    9. 'In' → logprob: -12.834737777709961
    10. '  ' → logprob: -13.084737777709961

Token 51: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.033678892999887466
    2. ' X' → logprob: -3.4086790084838867
    3. ' ' → logprob: -11.408679008483887
    4. '<|end|>' → logprob: -11.408679008483887
    5. ')' → logprob: -12.033679008483887
    6. '  ' → logprob: -14.033679008483887
    7. '>X' → logprob: -14.283679008483887
    8. '	X' → logprob: -14.283679008483887
    9. '```' → logprob: -14.783679008483887
    10. 'User' → logprob: -14.908679008483887

Token 52: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004218009300529957
    2. ')
' → logprob: -6.004218101501465
    3. '   ' → logprob: -6.629218101501465
    4. ' )' → logprob: -8.004218101501465
    5. ')**' → logprob: -10.504218101501465
    6. ' ' → logprob: -11.254218101501465
    7. ')
' → logprob: -11.379218101501465
    8. ' )
' → logprob: -11.879218101501465
    9. '  ' → logprob: -12.504218101501465
    10. ')+' → logprob: -12.629218101501465

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04456178843975067
    2. '
' → logprob: -3.6695618629455566
    3. ')' → logprob: -5.544561862945557
    4. '    
' → logprob: -5.919561862945557
    5. ' ' → logprob: -6.044561862945557
    6. '+' → logprob: -6.044561862945557
    7. '<|end|>' → logprob: -6.669561862945557
    8. '  ' → logprob: -7.044561862945557
    9. '  
' → logprob: -7.044561862945557
    10. '*' → logprob: -7.169561862945557

Token 54: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15211257338523865
    2. '
' → logprob: -2.6521124839782715
    3. 'if' (adapté à ' if') → logprob: -3.5271124839782715
    4. ' if' → logprob: -3.5271124839782715
    5. ' ' → logprob: -5.4021124839782715
    6. '    
' → logprob: -6.1521124839782715
    7. '  ' → logprob: -6.2771124839782715
    8. '	if' → logprob: -7.4021124839782715
    9. '<|end|>' → logprob: -7.5271124839782715
    10. ' solution' → logprob: -8.02711296081543

Token 55: ' err' (ID: 2962)
  Prédit: ' err'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' err' → logprob: -0.005952975247055292
    2. 'err' → logprob: -5.130952835083008
    3. '(err' → logprob: -12.130952835083008
    4. ' er' → logprob: -12.380952835083008
    5. ' solution' → logprob: -12.755952835083008
    6. 'er' → logprob: -13.130952835083008
    7. '   ' → logprob: -13.505952835083008
    8. ' ' → logprob: -13.630952835083008
    9. ' error' → logprob: -13.755952835083008
    10. ' ans' → logprob: -13.755952835083008

Token 56: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.005688445642590523
    2. '<' → logprob: -5.880688667297363
    3. ' >' → logprob: -6.255688667297363
    4. '<|end|>' → logprob: -8.130688667297363
    5. ' <=' → logprob: -8.755688667297363
    6. ' ' → logprob: -8.880688667297363
    7. ' ==' → logprob: -9.130688667297363
    8. ' >=' → logprob: -9.255688667297363
    9. '   ' → logprob: -9.630688667297363
    10. '>' → logprob: -10.005688667297363

Token 57: ' solution' (ID: 7578)
  Prédit: ' solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.03805205225944519
    2. 'solution' → logprob: -3.2880520820617676
    3. ' ' → logprob: -12.16305160522461
    4. '(solution' → logprob: -12.91305160522461
    5. ' ' → logprob: -13.41305160522461
    6. '_solution' → logprob: -15.03805160522461
    7. '   ' → logprob: -15.53805160522461
    8. ' solu' → logprob: -15.91305160522461
    9. '```' → logprob: -15.91305160522461
    10. ' solucion' → logprob: -16.03805160522461

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005329455249011517
    2. ':
' → logprob: -5.255329608917236
    3. '):' → logprob: -9.630329132080078
    4. ' :' → logprob: -11.380329132080078
    5. '   ' → logprob: -11.630329132080078
    6. '):
' → logprob: -12.630329132080078
    7. ':
' → logprob: -12.755329132080078
    8. ' :
' → logprob: -13.880329132080078
    9. '       ' → logprob: -14.130329132080078
    10. ':

' → logprob: -15.005329132080078

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07342395931482315
    2. '   ' → logprob: -3.9484238624572754
    3. ' ' → logprob: -4.323423862457275
    4. '    ' → logprob: -4.448423862457275
    5. '        
' → logprob: -4.573423862457275
    6. ' 
' → logprob: -5.448423862457275
    7. ' solution' → logprob: -5.948423862457275
    8. '    
' → logprob: -6.948423862457275
    9. '        ' → logprob: -7.073423862457275
    10. '```' → logprob: -7.198423862457275

Token 60: ' solution' (ID: 7578)
  Prédit: ' solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.3910268247127533
    2. 'solution' (adapté à ' solution') → logprob: -1.1410268545150757
    3. '       ' → logprob: -5.641026973724365
    4. '_solution' → logprob: -8.391026496887207
    5. '   ' → logprob: -9.266026496887207
    6. '(solution' → logprob: -9.391026496887207
    7. '        ' → logprob: -9.891026496887207
    8. '```' → logprob: -10.766026496887207
    9. '           ' → logprob: -10.891026496887207
    10. 'Solution' → logprob: -11.016026496887207

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018184125423431396
    2. '=' → logprob: -4.018184185028076
    3. ' ' → logprob: -10.393183708190918
    4. ',' → logprob: -13.268183708190918
    5. '＝' → logprob: -15.518183708190918
    6. ' =
' → logprob: -15.518183708190918
    7. '  ' → logprob: -15.518183708190918
    8. '=i' → logprob: -15.830683708190918
    9. ' ' → logprob: -15.830683708190918
    10. 'space' → logprob: -16.018184661865234

Token 62: ' err' (ID: 2962)
  Prédit: ' err'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' err' → logprob: -0.16023853421211243
    2. 'err' → logprob: -1.91023850440979
    3. 'er' → logprob: -12.035238265991211
    4. ' er' → logprob: -13.660238265991211
    5. '(err' → logprob: -13.785238265991211
    6. 'error' → logprob: -14.035238265991211
    7. '	err' → logprob: -14.160238265991211
    8. '   ' → logprob: -14.285238265991211
    9. ' ' → logprob: -14.285238265991211
    10. ' ' → logprob: -14.660238265991211

Token 63: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24612320959568024
    2. '
' → logprob: -1.871123194694519
    3. '    
' → logprob: -3.7461233139038086
    4. '       ' → logprob: -4.621123313903809
    5. ' 
' → logprob: -4.621123313903809
    6. ' i' → logprob: -5.246123313903809
    7. '   
' → logprob: -5.621123313903809
    8. ' ' → logprob: -5.871123313903809
    9. '  
' → logprob: -5.871123313903809
    10. '        
' → logprob: -5.996123313903809

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12804844975471497
    2. '
' → logprob: -2.6280484199523926
    3. '    
' → logprob: -3.5030484199523926
    4. ' 
' → logprob: -4.753048419952393
    5. ' i' → logprob: -5.253048419952393
    6. '        
' → logprob: -7.378048419952393
    7. '       ' → logprob: -7.378048419952393
    8. '     
' → logprob: -7.628048419952393
    9. '   
' → logprob: -7.753048419952393
    10. '  
' → logprob: -8.00304889678955

Token 65: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15107892453670502
    2. ' i' → logprob: -2.151078939437866
    3. ' else' → logprob: -4.651078701019287
    4. 'i' (adapté à ' i') → logprob: -4.651078701019287
    5. 'else' → logprob: -5.401078701019287
    6. '	i' → logprob: -9.401079177856445
    7. ' ' → logprob: -10.151079177856445
    8. '    ' → logprob: -10.276079177856445
    9. '    
' → logprob: -11.026079177856445
    10. '       ' → logprob: -11.151079177856445

Token 66: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16978010535240173
    2. ' +=' → logprob: -1.9197801351547241
    3. '+' → logprob: -4.669780254364014
    4. '=' → logprob: -9.669779777526855
    5. '++' → logprob: -10.419779777526855
    6. ' ' → logprob: -10.669779777526855
    7. ' +' → logprob: -11.669779777526855
    8. '<|end|>' → logprob: -12.544779777526855
    9. '+='' → logprob: -13.044779777526855
    10. '+="' → logprob: -13.294779777526855

Token 67: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '```' → logprob: -16.750335693359375
    4. '   ' → logprob: -18.500335693359375
    5. '10' → logprob: -18.875335693359375
    6. ' ' → logprob: -19.375335693359375
    7. '１' → logprob: -19.500335693359375
    8. '2' → logprob: -19.750335693359375
    9. '`' → logprob: -19.812835693359375
    10. '  ' → logprob: -19.812835693359375

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -17.875003814697266
    4. '  ' → logprob: -18.875003814697266
    5. '   ' → logprob: -19.000003814697266
    6. '10' → logprob: -19.375003814697266
    7. '<|end|>' → logprob: -20.375003814697266
    8. '１' → logprob: -20.625003814697266
    9. '2' → logprob: -20.687503814697266
    10. '6' → logprob: -21.000003814697266

Token 69: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: '[*' (ID: 79141)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00913871917873621
    2. '<|end|>' → logprob: -5.884138584136963
    3. 'i' → logprob: -6.009138584136963
    4. ')' → logprob: -6.509138584136963
    5. '```' → logprob: -7.259138584136963
    6. ' print' → logprob: -7.509138584136963
    7. '#' → logprob: -7.759138584136963
    8. '\n' → logprob: -8.509139060974121
    9. '0' → logprob: -8.884139060974121
    10. 'solution' → logprob: -9.384139060974121

Token 71: 'map' (ID: 3726)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.21907344460487366
    2. 'filter' → logprob: -2.344073534011841
    3. 'X' → logprob: -3.094073534011841
    4. '(range' → logprob: -3.469073534011841
    5. ' range' → logprob: -5.469073295593262
    6. '[' → logprob: -5.594073295593262
    7. 'print' → logprob: -5.969073295593262
    8. 'str' → logprob: -6.094073295593262
    9. ']' → logprob: -6.719073295593262
    10. '(filter' → logprob: -6.719073295593262

Token 72: '(print' (ID: 110391)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1451127678155899
    2. '(' → logprob: -2.7701127529144287
    3. '(print' → logprob: -2.7701127529144287
    4. '(str' → logprob: -5.895112991333008
    5. '(lambda' → logprob: -5.895112991333008
    6. '(abs' → logprob: -6.770112991333008
    7. ' (' → logprob: -6.895112991333008
    8. 'print' → logprob: -7.270112991333008
    9. '(
' → logprob: -7.520112991333008
    10. ')(' → logprob: -8.895112991333008

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04980655014514923
    2. ',X' → logprob: -3.174806594848633
    3. ',(' → logprob: -5.549806594848633
    4. ' ,' → logprob: -7.299806594848633
    5. '(X' → logprob: -7.424806594848633
    6. ',i' → logprob: -7.924806594848633
    7. ',[' → logprob: -7.924806594848633
    8. '(' → logprob: -8.174806594848633
    9. ',int' → logprob: -8.549806594848633
    10. ',x' → logprob: -8.549806594848633

Token 74: ' [' (ID: 723)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.024530742317438126
    2. 'range' → logprob: -5.14953088760376
    3. '[X' → logprob: -5.14953088760376
    4. ' X' → logprob: -5.39953088760376
    5. '[' → logprob: -5.77453088760376
    6. '(X' → logprob: -6.02453088760376
    7. ' range' → logprob: -7.39953088760376
    8. '(range' → logprob: -7.52453088760376
    9. ')' → logprob: -7.89953088760376
    10. 'sorted' → logprob: -8.149530410766602

Token 75: 'solution' (ID: 84819)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.352292537689209
    2. 'solution' → logprob: -2.352292537689209
    3. 'x' → logprob: -2.727292537689209
    4. 'range' → logprob: -2.977292537689209
    5. 'round' → logprob: -3.727292537689209
    6. 'int' → logprob: -4.227292537689209
    7. 'i' → logprob: -4.977292537689209
    8. '[' → logprob: -5.102292537689209
    9. '[int' → logprob: -5.227292537689209
    10. 'abs' → logprob: -5.477292537689209

Token 76: '])]' (ID: 178925)
  Prédit: '])]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])]' → logprob: -0.010174977593123913
    2. '])' → logprob: -4.885174751281738
    3. ')])' → logprob: -6.010174751281738
    4. ')' → logprob: -10.635174751281738
    5. ']' → logprob: -10.635174751281738
    6. ']])' → logprob: -11.135174751281738
    7. ']))' → logprob: -11.260174751281738
    8. '])]
' → logprob: -11.385174751281738
    9. ',' → logprob: -11.635174751281738
    10. ')]' → logprob: -11.635174751281738


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 74
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 27
Tokens correctement prédits (top 10): 55
Précision stricte (1ère position): 36.49%
Précision adaptée (1ère position): 36.49%
Précision (top 10): 74.32%
================================================================================
