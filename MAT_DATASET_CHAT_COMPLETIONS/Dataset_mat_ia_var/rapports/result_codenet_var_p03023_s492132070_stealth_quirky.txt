================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
_ = input
L = lambda a: 180*(a-2)
exec('n=_();print(L(int(n)))')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '_' (ID: 62)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013265167362987995
    2. '.' → logprob: -4.513265132904053
    3. '_' → logprob: -7.388265132904053
    4. '(
' → logprob: -7.388265132904053
    5. ''' → logprob: -8.263265609741211
    6. '()' → logprob: -8.513265609741211
    7. '"' → logprob: -9.388265609741211
    8. ' (' → logprob: -9.388265609741211
    9. ',' → logprob: -9.513265609741211
    10. '=' → logprob: -9.888265609741211

Token 4: 'L' (ID: 43)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030758647248148918
    2. '()' → logprob: -3.5307586193084717
    3. '=' → logprob: -8.03075885772705
    4. '(
' → logprob: -8.53075885772705
    5. ')' → logprob: -9.40575885772705
    6. '("")' → logprob: -9.40575885772705
    7. '('' → logprob: -9.90575885772705
    8. ',' → logprob: -10.40575885772705
    9. ' =' → logprob: -10.65575885772705
    10. '_' → logprob: -10.65575885772705

Token 5: ' =' (ID: 314)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.9380801320075989
    2. 'e' → logprob: -1.688080072402954
    3. 'ambda' → logprob: -2.188080072402954
    4. ' =' → logprob: -2.563080072402954
    5. 'i' → logprob: -2.938080072402954
    6. '=' → logprob: -3.063080072402954
    7. 'L' → logprob: -3.063080072402954
    8. '_' → logprob: -3.938080072402954
    9. 'print' → logprob: -4.813080310821533
    10. 'S' → logprob: -5.188080310821533

Token 6: ' lambda' (ID: 27871)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6149073243141174
    2. 'int' → logprob: -1.1149072647094727
    3. 'list' → logprob: -2.8649072647094727
    4. '[int' → logprob: -3.4899072647094727
    5. ' []' → logprob: -3.7399072647094727
    6. ' int' → logprob: -5.364907264709473
    7. '10' → logprob: -5.739907264709473
    8. ' list' → logprob: -5.739907264709473
    9. '_' → logprob: -5.864907264709473
    10. 'map' → logprob: -6.239907264709473

Token 7: ' a' (ID: 261)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.07128285616636276
    2. ' :' → logprob: -3.3212828636169434
    3. 'x' → logprob: -4.446282863616943
    4. ' _' → logprob: -4.946282863616943
    5. ' s' → logprob: -5.196282863616943
    6. ' a' → logprob: -6.446282863616943
    7. ' _:' → logprob: -6.446282863616943
    8. ' ' → logprob: -6.696282863616943
    9. '_' → logprob: -7.196282863616943
    10. 's' → logprob: -7.571282863616943

Token 8: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7413813471794128
    2. ' :' → logprob: -0.7413813471794128
    3. ',' → logprob: -3.2413814067840576
    4. ' ,' → logprob: -5.4913811683654785
    5. ',a' → logprob: -6.1163811683654785
    6. ' a' → logprob: -7.2413811683654785
    7. ',:' → logprob: -7.9913811683654785
    8. ':a' → logprob: -8.616381645202637
    9. 'a' → logprob: -8.741381645202637
    10. ' :,' → logprob: -9.491381645202637

Token 9: ' ' (ID: 220)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.3596941232681274
    2. 'len' → logprob: -1.3596941232681274
    3. 'list' → logprob: -1.9846941232681274
    4. ' len' → logprob: -2.359694004058838
    5. '[a' → logprob: -2.609694004058838
    6. ' a' → logprob: -2.609694004058838
    7. 'a' → logprob: -2.859694004058838
    8. '[len' → logprob: -4.484694004058838
    9. '[' → logprob: -4.859694004058838
    10. ' sum' → logprob: -5.484694004058838

Token 10: '180' (ID: 7521)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.698511004447937
    2. 'a' → logprob: -1.448511004447937
    3. '[a' → logprob: -2.3235111236572266
    4. 'int' → logprob: -2.5735111236572266
    5. 'len' → logprob: -3.5735111236572266
    6. '[int' → logprob: -3.9485111236572266
    7. '[' → logprob: -4.198511123657227
    8. ' list' → logprob: -4.823511123657227
    9. 'print' → logprob: -5.448511123657227
    10. 'sum' → logprob: -5.448511123657227

Token 11: '*(' (ID: 14793)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7350112199783325
    2. '*' → logprob: -2.110011100769043
    3. ' *' → logprob: -2.985011100769043
    4. '(a' → logprob: -3.110011100769043
    5. ')' → logprob: -3.235011100769043
    6. '.' → logprob: -3.485011100769043
    7. '+' → logprob: -3.610011100769043
    8. ',' → logprob: -3.610011100769043
    9. '%' → logprob: -3.735011100769043
    10. '0' → logprob: -3.735011100769043

Token 12: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002009529620409012
    2. ' a' → logprob: -7.002009391784668
    3. '3' → logprob: -7.252009391784668
    4. ')' → logprob: -8.877009391784668
    5. '2' → logprob: -9.252009391784668
    6. '1' → logprob: -10.377009391784668
    7. '180' → logprob: -10.377009391784668
    8. ')a' → logprob: -11.127009391784668
    9. '0' → logprob: -11.252009391784668
    10. ' ' → logprob: -11.377009391784668

Token 13: '-' (ID: 12)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.014746055006980896
    2. ')' → logprob: -4.639746189117432
    3. '/pi' → logprob: -6.514746189117432
    4. ' /' → logprob: -6.889746189117432
    5. ')/' → logprob: -7.014746189117432
    6. ')/(' → logprob: -7.264746189117432
    7. '*' → logprob: -8.389745712280273
    8. '/)' → logprob: -8.514745712280273
    9. ' )' → logprob: -8.889745712280273
    10. 'import' → logprob: -9.139745712280273

Token 14: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0783531442284584
    2. '0' → logprob: -3.2033531665802
    3. '90' → logprob: -4.328352928161621
    4. '3' → logprob: -4.703352928161621
    5. '.' → logprob: -5.453352928161621
    6. '_' → logprob: -5.828352928161621
    7. '2' → logprob: -6.703352928161621
    8. '-' → logprob: -6.953352928161621
    9. '180' → logprob: -7.203352928161621
    10. '32' → logprob: -7.328352928161621

Token 15: ')
' (ID: 446)
  Prédit: ')/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.5992589592933655
    2. ')' → logprob: -1.0992588996887207
    3. ')/(' → logprob: -2.2242588996887207
    4. '/' → logprob: -5.349258899688721
    5. ' )' → logprob: -5.474258899688721
    6. '/)' → logprob: -8.474259376525879
    7. '')' → logprob: -9.599259376525879
    8. 'import' → logprob: -10.224259376525879
    9. ')a' → logprob: -10.224259376525879
    10. ' /' → logprob: -10.224259376525879

Token 16: 'exec' (ID: 31592)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.05510297790169716
    2. ' /' → logprob: -3.680103063583374
    3. '/a' → logprob: -3.680103063583374
    4. '/(' → logprob: -6.930102825164795
    5. '**' → logprob: -7.180102825164795
    6. 'a' → logprob: -7.930102825164795
    7. '/L' → logprob: -8.930103302001953
    8. ')' → logprob: -9.180103302001953
    9. ')/' → logprob: -9.305103302001953
    10. ')/(' → logprob: -9.680103302001953

Token 17: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08299926668405533
    2. '("("' → logprob: -2.7079992294311523
    3. '('' → logprob: -4.582999229431152
    4. '("_' → logprob: -6.957999229431152
    5. '("' → logprob: -7.582999229431152
    6. '('_' → logprob: -8.207999229431152
    7. '("""' → logprob: -8.332999229431152
    8. '(open' → logprob: -8.957999229431152
    9. '"' → logprob: -9.207999229431152
    10. '(_)' → logprob: -9.582999229431152

Token 18: 'n' (ID: 77)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8178321719169617
    2. ')' → logprob: -1.5678322315216064
    3. '('' → logprob: -2.3178322315216064
    4. '')' → logprob: -2.9428322315216064
    5. 'a' → logprob: -3.5678322315216064
    6. '(' → logprob: -3.6928322315216064
    7. 'input' → logprob: -3.8178322315216064
    8. '_)' → logprob: -3.9428322315216064
    9. 'L' → logprob: -4.567831993103027
    10. ''))' → logprob: -4.942831993103027

Token 19: '=_' (ID: 51761)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3530584573745728
    2. ')' → logprob: -1.4780584573745728
    3. ' =' → logprob: -1.8530584573745728
    4. '*' → logprob: -2.228058338165283
    5. '=input' → logprob: -2.603058338165283
    6. ')=' → logprob: -3.353058338165283
    7. '=int' → logprob: -3.603058338165283
    8. ' )' → logprob: -3.978058338165283
    9. ' *' → logprob: -4.228058338165283
    10. '**' → logprob: -4.728058338165283

Token 20: '();' (ID: 4177)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1833309382200241
    2. '())' → logprob: -1.9333308935165405
    3. '();' → logprob: -4.80833101272583
    4. '()
' → logprob: -5.05833101272583
    5. '(' → logprob: -6.05833101272583
    6. '());' → logprob: -7.05833101272583
    7. '())
' → logprob: -7.30833101272583
    8. ')' → logprob: -7.43333101272583
    9. ' ()' → logprob: -7.43333101272583
    10. ' ())' → logprob: -7.55833101272583

Token 21: 'print' (ID: 1598)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7290197610855103
    2. 'n' → logprob: -1.6040197610855103
    3. '')' → logprob: -1.6040197610855103
    4. ''' → logprob: -3.4790196418762207
    5. 'f' → logprob: -4.104019641876221
    6. ')' → logprob: -4.604019641876221
    7. 'a' → logprob: -5.354019641876221
    8. ' ' → logprob: -5.479019641876221
    9. '")' → logprob: -5.479019641876221
    10. ' int' → logprob: -5.479019641876221

Token 22: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.6598721146583557
    2. '(' → logprob: -1.159872055053711
    3. '(f' → logprob: -2.659872055053711
    4. '((' → logprob: -3.034872055053711
    5. '('' → logprob: -3.409872055053711
    6. '(n' → logprob: -4.784872055053711
    7. '("' → logprob: -6.784872055053711
    8. '('(' → logprob: -6.784872055053711
    9. '(eval' → logprob: -6.909872055053711
    10. '("("' → logprob: -7.034872055053711

Token 23: '(int' (ID: 2742)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.11357352882623672
    2. '(int' → logprob: -2.8635735511779785
    3. '(' → logprob: -3.2385735511779785
    4. '(f' → logprob: -5.8635735511779785
    5. '(eval' → logprob: -6.3635735511779785
    6. '('' → logprob: -6.3635735511779785
    7. '(ord' → logprob: -6.3635735511779785
    8. '((' → logprob: -6.9885735511779785
    9. '('(' → logprob: -7.4885735511779785
    10. '(chr' → logprob: -8.36357307434082

Token 24: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0012760692043229938
    2. '(' → logprob: -6.751276016235352
    3. ' (' → logprob: -9.876276016235352
    4. 'n' → logprob: -10.626276016235352
    5. '('' → logprob: -11.751276016235352
    6. '((' → logprob: -11.876276016235352
    7. '(_' → logprob: -12.251276016235352
    8. ')(' → logprob: -13.001276016235352
    9. ' ' → logprob: -13.751276016235352
    10. '(a' → logprob: -14.251276016235352

Token 25: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.2145090401172638
    2. '')))' → logprob: -2.2145090103149414
    3. ')' → logprob: -3.5895090103149414
    4. '())))' → logprob: -3.9645090103149414
    5. '))' → logprob: -4.589509010314941
    6. ''))' → logprob: -4.964509010314941
    7. '")))' → logprob: -5.214509010314941
    8. ' ' → logprob: -5.589509010314941
    9. '))))' → logprob: -6.089509010314941
    10. '')' → logprob: -6.339509010314941

Token 26: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07380282878875732
    2. '')' → logprob: -2.698802947998047
    3. '))' → logprob: -5.698802947998047
    4. ')'' → logprob: -8.823802947998047
    5. '")' → logprob: -9.448802947998047
    6. ' )' → logprob: -9.948802947998047
    7. ')")' → logprob: -10.323802947998047
    8. ')))' → logprob: -10.323802947998047
    9. ''))' → logprob: -10.448802947998047
    10. '*' → logprob: -11.073802947998047


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 24
Tokens correctement prédits (1ère position, stricte): 5
Tokens correctement prédits (1ère position, avec adaptation): 5
Tokens correctement prédits (top 10): 12
Précision stricte (1ère position): 20.83%
Précision adaptée (1ère position): 20.83%
Précision (top 10): 50.00%
================================================================================
