================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:17:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
MOD = 10**9 + 7
N_K = input().split()
N = int(N_K[0])
K = int(N_K[1])
if K - N == 1:
    print(1)
    exit()
ans = 1
left = 0
right = 0
i = 1
while i < K:
    left += i
    i += 1
i = N - K + 1
while i <= N:
    right += i
    i += 1
ans += right - left + 1
ans %= MOD
i = K + 1
while i <= N:
    left += i - 1
    right += N - (i - 1)
    ans += right - left + 1
    ans %= MOD
    i += 1
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'MOD' (ID: 52135)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.2529147267341614
    2. '10' → logprob: -1.5029146671295166
    3. ' ' → logprob: -7.377914905548096
    4. '```' → logprob: -8.752914428710938
    5. '1' → logprob: -9.127914428710938
    6. '`' → logprob: -9.877914428710938
    7. '(' → logprob: -10.502914428710938
    8. '998' → logprob: -11.752914428710938
    9. '``' → logprob: -13.127914428710938
    10. '123' → logprob: -13.377914428710938

Token 4: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5880850553512573
    2. '0' → logprob: -0.8380850553512573
    3. '000' → logprob: -5.588085174560547
    4. '_' → logprob: -5.713085174560547
    5. ' **' → logprob: -5.838085174560547
    6. '*' → logprob: -6.713085174560547
    7. '^' → logprob: -7.713085174560547
    8. '00' → logprob: -8.338085174560547
    9. '#' → logprob: -9.963085174560547
    10. ',' → logprob: -10.463085174560547

Token 5: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -8.2994620242971e-06
    2. '09' → logprob: -11.875008583068848
    3. '```' → logprob: -13.750008583068848
    4. ' ' → logprob: -15.125008583068848
    5. '``' → logprob: -18.12500762939453
    6. '**' → logprob: -18.37500762939453
    7. '6' → logprob: -18.50000762939453
    8. '^' → logprob: -19.37500762939453
    9. '​' → logprob: -21.00000762939453
    10. '8' → logprob: -21.00000762939453

Token 6: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007640030235052109
    2. ' +' → logprob: -7.250763893127441
    3. '7' → logprob: -9.875763893127441
    4. '```' → logprob: -13.625763893127441
    5. '+
' → logprob: -14.250763893127441
    6. '＋' → logprob: -15.250763893127441
    7. '\' → logprob: -15.625763893127441
    8. '+

' → logprob: -16.125764846801758
    9. '+\' → logprob: -17.000764846801758
    10. '`' → logprob: -17.250764846801758

Token 7: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '```' → logprob: -18.125059127807617
    4. '+' → logprob: -18.500059127807617
    5. ' ' → logprob: -18.750059127807617
    6. '37' → logprob: -19.000059127807617
    7. '9' → logprob: -19.000059127807617
    8. '   ' → logprob: -19.375059127807617
    9. '07' → logprob: -19.875059127807617
    10. '  ' → logprob: -20.000059127807617

Token 8: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.128163257315464e-07
    2. '+' → logprob: -15.875
    3. ' ' → logprob: -16.25
    4. '```' → logprob: -17.375
    5. '07' → logprob: -19.625
    6. '37' → logprob: -20.25
    7. '9' → logprob: -20.375
    8. '``' → logprob: -20.5
    9. '   ' → logprob: -20.625
    10. '  ' → logprob: -21.375

Token 9: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1863523721694946
    2. '*' → logprob: -1.6863523721694946
    3. '```' → logprob: -1.6863523721694946
    4. '\' → logprob: -2.561352252960205
    5. '#' → logprob: -3.186352252960205
    6. '
' → logprob: -3.311352252960205
    7. '`' → logprob: -3.311352252960205
    8. ')' → logprob: -3.436352252960205
    9. '_' → logprob: -4.061352252960205
    10. ',' → logprob: -4.186352252960205

Token 10: 'N' (ID: 45)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6247459650039673
    2. '\n' → logprob: -1.7497459650039673
    3. '\' → logprob: -1.9997459650039673
    4. '```' → logprob: -2.8747458457946777
    5. '*' → logprob: -3.2497458457946777
    6. ')' → logprob: -4.749745845794678
    7. '' → logprob: -4.874745845794678
    8. '<|end|>' → logprob: -4.999745845794678
    9. '`' → logprob: -5.249745845794678
    10. '#' → logprob: -5.249745845794678

Token 11: '_K' (ID: 20555)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7537491321563721
    2. '_' → logprob: -1.628749132156372
    3. ' ' → logprob: -2.503749132156372
    4. ')' → logprob: -2.753749132156372
    5. '**' → logprob: -3.128749132156372
    6. '<|end|>' → logprob: -3.753749132156372
    7. '*' → logprob: -3.878749132156372
    8. '#' → logprob: -3.878749132156372
    9. '+' → logprob: -4.253748893737793
    10. '=' → logprob: -4.503748893737793

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.41887807846069336
    2. '=' → logprob: -1.5438780784606934
    3. ' =' → logprob: -2.6688780784606934
    4. '_' → logprob: -3.2938780784606934
    5. '[]' → logprob: -5.168878078460693
    6. ')' → logprob: -6.043878078460693
    7. '```' → logprob: -6.043878078460693
    8. '[
' → logprob: -6.543878078460693
    9. ']' → logprob: -6.793878078460693
    10. '\[' → logprob: -6.918878078460693

Token 13: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5900872945785522
    2. '10' → logprob: -1.4650872945785522
    3. '100' → logprob: -2.965087413787842
    4. 'int' → logprob: -3.090087413787842
    5. ' int' → logprob: -3.715087413787842
    6. 'input' → logprob: -4.215087413787842
    7. ' (' → logprob: -4.590087413787842
    8. ' map' → logprob: -4.590087413787842
    9. 'map' → logprob: -4.715087413787842
    10. '0' → logprob: -4.840087413787842

Token 14: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003094412386417389
    2. '('' → logprob: -7.00309419631958
    3. '("("' → logprob: -7.00309419631958
    4. '()' → logprob: -7.62809419631958
    5. '(
' → logprob: -8.003094673156738
    6. ''' → logprob: -8.753094673156738
    7. '[' → logprob: -9.753094673156738
    8. '("")' → logprob: -10.253094673156738
    9. '"' → logprob: -10.628094673156738
    10. '(

' → logprob: -11.253094673156738

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009151478880085051
    2. 'strip' → logprob: -7.000915050506592
    3. 'rstrip' → logprob: -13.37591552734375
    4. ' split' → logprob: -13.62591552734375
    5. 'spl' → logprob: -14.12591552734375
    6. 'rs' → logprob: -16.75091552734375
    7. 's' → logprob: -17.62591552734375
    8. '(split' → logprob: -17.87591552734375
    9. 'sp' → logprob: -18.50091552734375
    10. 'replace' → logprob: -18.87591552734375

Token 16: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44999265670776367
    2. '('' → logprob: -1.0749926567077637
    3. '()' → logprob: -4.324992656707764
    4. '("("' → logprob: -5.074992656707764
    5. ''' → logprob: -7.074992656707764
    6. '`' → logprob: -8.199993133544922
    7. '```' → logprob: -8.949993133544922
    8. '(`' → logprob: -9.324993133544922
    9. '(
' → logprob: -10.199993133544922
    10. '"' → logprob: -10.199993133544922

Token 17: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.39932411909103394
    2. 'n' → logprob: -1.1493241786956787
    3. 'a' → logprob: -5.0243239402771
    4. ' N' → logprob: -6.6493239402771
    5. '```' → logprob: -6.6493239402771
    6. ' n' → logprob: -7.2743239402771
    7. '`' → logprob: -7.5243239402771
    8. 'A' → logprob: -7.6493239402771
    9. 'num' → logprob: -7.6493239402771
    10. 'i' → logprob: -7.6493239402771

Token 18: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.032424431294202805
    2. '_' → logprob: -3.7824244499206543
    3. '_K' → logprob: -5.032424449920654
    4. '[_' → logprob: -7.407424449920654
    5. '[K' → logprob: -7.532424449920654
    6. '[]' → logprob: -7.657424449920654
    7. '[
' → logprob: -8.532423973083496
    8. '[N' → logprob: -8.657423973083496
    9. '_[' → logprob: -9.157423973083496
    10. '```' → logprob: -9.532423973083496

Token 19: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10020741820335388
    2. ' int' → logprob: -2.3502073287963867
    3. '[int' → logprob: -14.975207328796387
    4. '(int' → logprob: -15.725207328796387
    5. ' N' → logprob: -16.100208282470703
    6. '=int' → logprob: -16.225208282470703
    7. 'N' → logprob: -16.350208282470703
    8. ' ' → logprob: -16.850208282470703
    9. '```' → logprob: -17.725208282470703
    10. '<int' → logprob: -18.100208282470703

Token 20: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07039596140384674
    2. '(N' → logprob: -2.6953959465026855
    3. '('' → logprob: -7.8203959465026855
    4. '()' → logprob: -11.445396423339844
    5. '(
' → logprob: -11.570396423339844
    6. '("("' → logprob: -11.695396423339844
    7. '("' → logprob: -12.445396423339844
    8. ' (' → logprob: -12.695396423339844
    9. '(

' → logprob: -12.695396423339844
    10. ''' → logprob: -12.820396423339844

Token 21: '_K' (ID: 20555)
  Prédit: '_K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_K' → logprob: -0.4121667742729187
    2. '[' → logprob: -1.1621668338775635
    3. ')' → logprob: -3.7871668338775635
    4. '[K' → logprob: -6.912166595458984
    5. '[_' → logprob: -7.787166595458984
    6. 'K' → logprob: -8.287166595458984
    7. ' )' → logprob: -8.787166595458984
    8. '[
' → logprob: -8.912166595458984
    9. ' ' → logprob: -9.662166595458984
    10. '   ' → logprob: -10.037166595458984

Token 22: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.45848218582978e-06
    2. ')' → logprob: -13.37500286102295
    3. ' [' → logprob: -14.25000286102295
    4. '[
' → logprob: -16.875001907348633
    5. '[N' → logprob: -17.000001907348633
    6. ')[' → logprob: -17.625001907348633
    7. '\[' → logprob: -17.625001907348633
    8. '0' → logprob: -17.750001907348633
    9. '```' → logprob: -18.000001907348633
    10. ' ' → logprob: -18.625001907348633

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1756367712223437e-05
    2. '1' → logprob: -11.750011444091797
    3. ' ' → logprob: -12.500011444091797
    4. '   ' → logprob: -17.250011444091797
    5. ')' → logprob: -17.500011444091797
    6. '[' → logprob: -17.625011444091797
    7. '2' → logprob: -18.375011444091797
    8. '`' → logprob: -18.500011444091797
    9. '```' → logprob: -18.500011444091797
    10. ']' → logprob: -18.625011444091797

Token 24: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.28588995337486267
    2. ')' → logprob: -1.410889983177185
    3. ']' → logprob: -5.410890102386475
    4. ')])' → logprob: -9.160889625549316
    5. ')]' → logprob: -9.910889625549316
    6. ' ])' → logprob: -10.410889625549316
    7. ''])' → logprob: -11.160889625549316
    8. '）' → logprob: -11.535889625549316
    9. '])
' → logprob: -11.660889625549316
    10. ')
' → logprob: -11.785889625549316

Token 25: 'K' (ID: 42)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009250336326658726
    2. '<|end|>' → logprob: -6.009250164031982
    3. '  ' → logprob: -6.134250164031982
    4. ' N' → logprob: -6.384250164031982
    5. ' K' → logprob: -7.259250164031982
    6. ')' → logprob: -7.384250164031982
    7. ''' → logprob: -8.25925064086914
    8. '  
' → logprob: -8.50925064086914
    9. ' ,' → logprob: -8.63425064086914
    10. ' 
' → logprob: -8.63425064086914

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18241184949874878
    2. '=' → logprob: -1.9324119091033936
    3. ' ' → logprob: -4.4324116706848145
    4. ')' → logprob: -5.0574116706848145
    5. '[' → logprob: -6.5574116706848145
    6. '<|end|>' → logprob: -6.6824116706848145
    7. '_' → logprob: -8.307412147521973
    8. '  ' → logprob: -8.682412147521973
    9. '<|end|>' → logprob: -9.307412147521973
    10. ' ==' → logprob: -9.682412147521973

Token 27: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10020741820335388
    2. ' int' → logprob: -2.3502073287963867
    3. ' ' → logprob: -15.100207328796387
    4. '=int' → logprob: -16.100208282470703
    5. '0' → logprob: -16.225208282470703
    6. '(int' → logprob: -16.350208282470703
    7. ' N' → logprob: -16.600208282470703
    8. '	int' → logprob: -17.350208282470703
    9. '1' → logprob: -17.350208282470703
    10. '[int' → logprob: -17.475208282470703

Token 28: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.6346873044967651
    2. '(' → logprob: -0.7596873044967651
    3. '(K' → logprob: -6.259687423706055
    4. '('' → logprob: -9.634687423706055
    5. '("("' → logprob: -10.634687423706055
    6. '()' → logprob: -11.134687423706055
    7. ' (' → logprob: -11.259687423706055
    8. '((' → logprob: -11.759687423706055
    9. '```' → logprob: -11.884687423706055
    10. '(`' → logprob: -12.134687423706055

Token 29: '_K' (ID: 20555)
  Prédit: '_K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_K' → logprob: -0.0016487567918375134
    2. '[' → logprob: -6.751648902893066
    3. ')' → logprob: -8.501648902893066
    4. '-' → logprob: -9.251648902893066
    5. '[_' → logprob: -10.501648902893066
    6. '_' → logprob: -10.626648902893066
    7. '1' → logprob: -10.876648902893066
    8. ')_' → logprob: -11.001648902893066
    9. '+' → logprob: -11.126648902893066
    10. 'K' → logprob: -11.251648902893066

Token 30: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011343709047650918
    2. '1' → logprob: -9.375113487243652
    3. ' [' → logprob: -11.250113487243652
    4. '][' → logprob: -12.500113487243652
    5. '])' → logprob: -13.125113487243652
    6. ')' → logprob: -13.250113487243652
    7. '```' → logprob: -13.250113487243652
    8. ']' → logprob: -13.375113487243652
    9. ')[' → logprob: -14.000113487243652
    10. '   ' → logprob: -14.250113487243652

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -12.25001335144043
    3. '])' → logprob: -12.50001335144043
    4. '0' → logprob: -12.62501335144043
    5. '```' → logprob: -15.25001335144043
    6. ']' → logprob: -15.50001335144043
    7. '-' → logprob: -15.50001335144043
    8. '2' → logprob: -16.06251335144043
    9. '   ' → logprob: -16.06251335144043
    10. ')' → logprob: -16.87501335144043

Token 32: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1888679839321412e-05
    2. '`)' → logprob: -11.500021934509277
    3. '）' → logprob: -12.125021934509277
    4. '')' → logprob: -13.500021934509277
    5. '))' → logprob: -13.875021934509277
    6. '])' → logprob: -14.250021934509277
    7. '```' → logprob: -14.250021934509277
    8. ')
' → logprob: -14.500021934509277
    9. ' )' → logprob: -14.750021934509277
    10. '**' → logprob: -15.250021934509277

Token 33: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.716607928276062
    2. '\n' → logprob: -1.341607928276062
    3. 'a' → logprob: -3.2166080474853516
    4. '' → logprob: -3.3416080474853516
    5. 'result' → logprob: -3.3416080474853516
    6. '\' → logprob: -3.5916080474853516
    7. 's' → logprob: -3.9666080474853516
    8. 'r' → logprob: -4.341608047485352
    9. 'dp' → logprob: -4.466608047485352
    10. 'for' → logprob: -4.716608047485352

Token 34: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.01657514087855816
    2. ' ' → logprob: -4.766575336456299
    3. ' N' → logprob: -5.391575336456299
    4. 'K' → logprob: -5.766575336456299
    5. ' ' → logprob: -9.26657485961914
    6. 'N' → logprob: -9.89157485961914
    7. ' not' → logprob: -10.64157485961914
    8. ' a' → logprob: -11.39157485961914
    9. ' (' → logprob: -11.76657485961914
    10. '  ' → logprob: -11.76657485961914

Token 35: ' -' (ID: 533)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6099157929420471
    2. ' ==' → logprob: -1.7349157333374023
    3. ' <' → logprob: -2.1099157333374023
    4. ' <=' → logprob: -2.4849157333374023
    5. ' ' → logprob: -2.9849157333374023
    6. ' >=' → logprob: -4.609915733337402
    7. '>' → logprob: -4.859915733337402
    8. '==' → logprob: -5.734915733337402
    9. '<' → logprob: -6.109915733337402
    10. '<=' → logprob: -7.484915733337402

Token 36: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6014662981033325
    2. '1' → logprob: -0.8514662981033325
    3. '0' → logprob: -4.101466178894043
    4. '2' → logprob: -5.601466178894043
    5. ' N' → logprob: -5.726466178894043
    6. '>' → logprob: -7.476466178894043
    7. ' >' → logprob: -8.351466178894043
    8. '3' → logprob: -8.351466178894043
    9. 'N' → logprob: -8.476466178894043
    10. '=' → logprob: -8.976466178894043

Token 37: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.10614743083715439
    2. '>' → logprob: -3.231147527694702
    3. ' <' → logprob: -3.856147527694702
    4. ' <=' → logprob: -4.106147289276123
    5. ' >=' → logprob: -4.356147289276123
    6. ' ' → logprob: -5.231147289276123
    7. ' ==' → logprob: -5.856147289276123
    8. '<' → logprob: -7.231147289276123
    9. '>=' → logprob: -7.481147289276123
    10. '<=' → logprob: -7.606147289276123

Token 38: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33580392599105835
    2. '1' → logprob: -1.8358039855957031
    3. '0' → logprob: -2.085803985595703
    4. ' -' → logprob: -7.460803985595703
    5. '2' → logprob: -7.585803985595703
    6. '-' → logprob: -8.210803985595703
    7. ' K' → logprob: -9.960803985595703
    8. '3' → logprob: -10.335803985595703
    9. '  ' → logprob: -10.835803985595703
    10. ' N' → logprob: -11.210803985595703

Token 39: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8578930497169495
    2. '1' → logprob: -0.9828930497169495
    3. '0' → logprob: -1.6078929901123047
    4. '-' → logprob: -7.482892990112305
    5. ' -' → logprob: -7.732892990112305
    6. '2' → logprob: -8.482892990112305
    7. '  ' → logprob: -10.732892990112305
    8. '3' → logprob: -10.795392990112305
    9. ' K' → logprob: -10.795392990112305
    10. '6' → logprob: -10.795392990112305

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00224243919365108
    2. ' :' → logprob: -6.127242565155029
    3. ':
' → logprob: -10.002242088317871
    4. ' and' → logprob: -12.377242088317871
    5. ' :
' → logprob: -13.627242088317871
    6. ':**' → logprob: -14.002242088317871
    7. '>' → logprob: -14.127242088317871
    8. '.' → logprob: -14.377242088317871
    9. ',' → logprob: -14.502242088317871
    10. ' or' → logprob: -14.627242088317871

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3593057692050934
    2. ':' → logprob: -2.1093058586120605
    3. ' print' → logprob: -2.3593058586120605
    4. '\n' → logprob: -2.9843058586120605
    5. 'print' → logprob: -4.1093058586120605
    6. ' ' → logprob: -5.1093058586120605
    7. '	print' → logprob: -6.1093058586120605
    8. ':
' → logprob: -6.1093058586120605
    9. ')' → logprob: -6.6093058586120605
    10. '
' → logprob: -6.9843058586120605

Token 42: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3001503348350525
    2. 'print' (adapté à ' print') → logprob: -1.4251503944396973
    3. '   ' → logprob: -4.675150394439697
    4. '\n' → logprob: -5.550150394439697
    5. '    ' → logprob: -5.800150394439697
    6. ' ' → logprob: -7.550150394439697
    7. ' \' → logprob: -7.925150394439697
    8. ' pass' → logprob: -7.925150394439697
    9. '```' → logprob: -8.425149917602539
    10. ' 
' → logprob: -9.425149917602539

Token 43: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06023051589727402
    2. '(N' → logprob: -3.5602304935455322
    3. '(K' → logprob: -4.185230731964111
    4. '('' → logprob: -5.185230731964111
    5. '("' → logprob: -5.435230731964111
    6. '()' → logprob: -5.810230731964111
    7. '((' → logprob: -7.810230731964111
    8. '(-' → logprob: -7.810230731964111
    9. '("("' → logprob: -7.810230731964111
    10. '(None' → logprob: -9.310230255126953

Token 44: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5497746467590332
    2. '1' → logprob: -1.6747746467590332
    3. 'N' → logprob: -2.424774646759033
    4. '"' → logprob: -2.799774646759033
    5. '-' → logprob: -3.424774646759033
    6. 'K' → logprob: -4.174774646759033
    7. '(' → logprob: -4.674774646759033
    8. '"N' → logprob: -4.924774646759033
    9. '-N' → logprob: -5.174774646759033
    10. ')' → logprob: -5.799774646759033

Token 45: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.927930654550437e-05
    2. ')
' → logprob: -10.625029563903809
    3. ' )' → logprob: -13.375029563903809
    4. '`)' → logprob: -14.375029563903809
    5. '#' → logprob: -14.625029563903809
    6. '))' → logprob: -14.750029563903809
    7. '()' → logprob: -15.375029563903809
    8. '')' → logprob: -15.375029563903809
    9. '```' → logprob: -15.500029563903809
    10. '*' → logprob: -15.750029563903809

Token 46: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2318970113992691
    2. 'elif' → logprob: -1.606896996498108
    3. ' else' → logprob: -5.981896877288818
    4. 'e' → logprob: -6.731896877288818
    5. '```' → logprob: -6.856896877288818
    6. '\n' → logprob: -7.231896877288818
    7. ' elif' → logprob: -8.356897354125977
    8. ')' → logprob: -8.356897354125977
    9. '\' → logprob: -8.856897354125977
    10. '.' → logprob: -9.981897354125977

Token 47: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.10257020592689514
    2. 'elif' → logprob: -2.3525702953338623
    3. ')' → logprob: -6.977570056915283
    4. ' else' → logprob: -7.102570056915283
    5. '
' → logprob: -8.852570533752441
    6. '```' → logprob: -8.852570533752441
    7. '\n' → logprob: -9.227570533752441
    8. '#' → logprob: -9.852570533752441
    9. ' elif' → logprob: -10.602570533752441
    10. '#else' → logprob: -10.977570533752441

Token 48: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03423971310257912
    2. '(' → logprob: -3.4092397689819336
    3. '()
' → logprob: -7.659239768981934
    4. '(
' → logprob: -9.659239768981934
    5. '()

' → logprob: -10.784239768981934
    6. '()\' → logprob: -11.159239768981934
    7. '()`' → logprob: -12.159239768981934
    8. ' ()' → logprob: -12.159239768981934
    9. '(

' → logprob: -12.909239768981934
    10. '()
' → logprob: -13.159239768981934

Token 49: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4073365032672882
    2. '```' → logprob: -2.407336473464966
    3. '\n' → logprob: -3.032336473464966
    4. '\' → logprob: -3.407336473464966
    5. 'else' → logprob: -3.782336473464966
    6. 'elif' → logprob: -3.907336473464966
    7. 'n' → logprob: -3.907336473464966
    8. 's' → logprob: -4.157336711883545
    9. '
' → logprob: -4.157336711883545
    10. '0' → logprob: -4.782336711883545

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3141217529773712
    2. '=' → logprob: -1.3141217231750488
    3. ' +=' → logprob: -7.564121723175049
    4. ' *=' → logprob: -8.314122200012207
    5. '+=' → logprob: -10.189122200012207
    6. '*' → logprob: -11.314122200012207
    7. ',' → logprob: -11.814122200012207
    8. '(' → logprob: -12.439122200012207
    9. '*=' → logprob: -12.439122200012207
    10. ' -=' → logprob: -12.689122200012207

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2380124032497406
    2. '0' → logprob: -2.6130123138427734
    3. 'pow' → logprob: -2.7380123138427734
    4. ' ' → logprob: -2.9880123138427734
    5. ' pow' → logprob: -5.488012313842773
    6. '(' → logprob: -5.488012313842773
    7. '(K' → logprob: -5.738012313842773
    8. ' (' → logprob: -5.738012313842773
    9. '(N' → logprob: -5.988012313842773
    10. '(pow' → logprob: -5.988012313842773

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7352643609046936
    2. 'pow' → logprob: -0.9852643609046936
    3. '0' → logprob: -2.610264301300049
    4. '(' → logprob: -3.610264301300049
    5. '(K' → logprob: -4.110264301300049
    6. 'K' → logprob: -4.610264301300049
    7. '(pow' → logprob: -5.110264301300049
    8. '(N' → logprob: -5.235264301300049
    9. 'N' → logprob: -5.860264301300049
    10. '2' → logprob: -5.985264301300049

Token 53: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.841474711894989
    2. '+' → logprob: -1.5914747714996338
    3. 'for' → logprob: -1.7164747714996338
    4. '\n' → logprob: -2.216474771499634
    5. ' for' → logprob: -3.091474771499634
    6. '' → logprob: -5.341474533081055
    7. '
' → logprob: -5.591474533081055
    8. '\' → logprob: -5.716474533081055
    9. '```' → logprob: -5.716474533081055
    10. '<|end|>' → logprob: -6.091474533081055

Token 54: 'left' (ID: 4530)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0253777913749218
    2. ' for' → logprob: -4.0253777503967285
    3. '*' → logprob: -5.0253777503967285
    4. '\n' → logprob: -7.9003777503967285
    5. '```' → logprob: -9.650378227233887
    6. '\' → logprob: -10.400378227233887
    7. ')' → logprob: -10.775378227233887
    8. '' → logprob: -10.775378227233887
    9. 'import' → logprob: -11.400378227233887
    10. 'from' → logprob: -11.400378227233887

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3503856360912323
    2. '=' → logprob: -1.2253856658935547
    3. ',' → logprob: -6.475385665893555
    4. '_' → logprob: -8.725385665893555
    5. ' *=' → logprob: -9.475385665893555
    6. '*' → logprob: -10.600385665893555
    7. ' ' → logprob: -10.975385665893555
    8. ')' → logprob: -11.100385665893555
    9. ' *' → logprob: -11.100385665893555
    10. ' ,' → logprob: -11.100385665893555

Token 56: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6534521579742432
    2. '1' → logprob: -1.4034521579742432
    3. 'K' → logprob: -1.9034521579742432
    4. '0' → logprob: -2.653452157974243
    5. ' N' → logprob: -5.528451919555664
    6. ' K' → logprob: -5.778451919555664
    7. ' ' → logprob: -6.278451919555664
    8. '2' → logprob: -6.528451919555664
    9. 'max' → logprob: -7.153451919555664
    10. '(N' → logprob: -7.153451919555664

Token 57: '0' (ID: 15)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.9365001320838928
    2. '1' → logprob: -1.311500072479248
    3. 'K' → logprob: -1.811500072479248
    4. '0' → logprob: -1.811500072479248
    5. 'max' → logprob: -5.561500072479248
    6. '2' → logprob: -6.061500072479248
    7. 'min' → logprob: -6.436500072479248
    8. '(N' → logprob: -6.936500072479248
    9. '(K' → logprob: -7.311500072479248
    10. '(' → logprob: -7.686500072479248

Token 58: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7108675241470337
    2. '<|end|>' → logprob: -1.2108675241470337
    3. ' while' → logprob: -2.835867404937744
    4. ' ' → logprob: -3.085867404937744
    5. ' 
' → logprob: -3.210867404937744
    6. ' for' → logprob: -4.085867404937744
    7. 'while' → logprob: -4.085867404937744
    8. 'for' → logprob: -4.335867404937744
    9. '<|end|>' → logprob: -5.210867404937744
    10. '\n' → logprob: -5.460867404937744

Token 59: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.4442632496356964
    2. 'for' → logprob: -1.944263219833374
    3. ' right' → logprob: -2.944263219833374
    4. 'while' → logprob: -3.319263219833374
    5. ' ' → logprob: -3.444263219833374
    6. ' while' → logprob: -3.819263219833374
    7. ' for' → logprob: -3.944263219833374
    8. '<|end|>' → logprob: -4.069263458251953
    9. '
' → logprob: -4.319263458251953
    10. ' 
' → logprob: -5.569263458251953

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020575406029820442
    2. '=' → logprob: -3.895575523376465
    3. ' ' → logprob: -11.270575523376465
    4. '=N' → logprob: -12.020575523376465
    5. ' N' → logprob: -12.645575523376465
    6. ',' → logprob: -12.645575523376465
    7. ' =
' → logprob: -13.895575523376465
    8. 'N' → logprob: -14.020575523376465
    9. '1' → logprob: -14.020575523376465
    10. '+' → logprob: -14.020575523376465

Token 61: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3897315561771393
    2. 'K' → logprob: -1.639731526374817
    3. '1' → logprob: -2.8897316455841064
    4. '0' → logprob: -3.7647316455841064
    5. ' N' → logprob: -3.8897316455841064
    6. ' K' → logprob: -4.139731407165527
    7. '10' → logprob: -5.139731407165527
    8. ' ' → logprob: -5.764731407165527
    9. 'min' → logprob: -6.389731407165527
    10. '2' → logprob: -6.889731407165527

Token 62: '0' (ID: 15)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5009456276893616
    2. 'K' → logprob: -1.1259455680847168
    3. '1' → logprob: -3.250945568084717
    4. '0' → logprob: -3.875945568084717
    5. '10' → logprob: -5.750945568084717
    6. 'len' → logprob: -5.875945568084717
    7. 'min' → logprob: -6.500945568084717
    8. '2' → logprob: -7.000945568084717
    9. ' N' → logprob: -8.250946044921875
    10. '100' → logprob: -8.500946044921875

Token 63: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04893501475453377
    2. '<|end|>' → logprob: -3.7989349365234375
    3. '\n' → logprob: -3.9239349365234375
    4. ' 
' → logprob: -5.6739349365234375
    5. 'for' → logprob: -7.9239349365234375
    6. ' for' → logprob: -8.048934936523438
    7. ' while' → logprob: -8.173934936523438
    8. 'while' → logprob: -8.423934936523438
    9. '
' → logprob: -8.548934936523438
    10. ' ' → logprob: -8.673934936523438

Token 64: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24253927171230316
    2. 'while' → logprob: -1.6175392866134644
    3. ' while' → logprob: -4.992539405822754
    4. ' for' → logprob: -5.117539405822754
    5. ')' → logprob: -7.242539405822754
    6. ' 
' → logprob: -7.617539405822754
    7. ' ' → logprob: -7.617539405822754
    8. 'w' → logprob: -7.867539405822754
    9. 'i' → logprob: -7.992539405822754
    10. '#' → logprob: -7.992539405822754

Token 65: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04538654163479805
    2. ' n' → logprob: -4.42038631439209
    3. ' =' → logprob: -4.67038631439209
    4. '=' → logprob: -4.67038631439209
    5. ' ' → logprob: -5.04538631439209
    6. 'f' → logprob: -5.42038631439209
    7. 'nt' → logprob: -7.29538631439209
    8. '+' → logprob: -7.42038631439209
    9. 's' → logprob: -7.67038631439209
    10. 'nd' → logprob: -8.04538631439209

Token 66: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12256963551044464
    2. '1' → logprob: -2.2475695610046387
    3. ' ' → logprob: -4.997569561004639
    4. '2' → logprob: -6.247569561004639
    5. 'N' → logprob: -7.247569561004639
    6. 'K' → logprob: -8.747570037841797
    7. ' N' → logprob: -9.872570037841797
    8. ' K' → logprob: -10.872570037841797
    9. '-' → logprob: -10.997570037841797
    10. '3' → logprob: -11.497570037841797

Token 67: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1499103158712387
    2. '1' → logprob: -2.0249102115631104
    3. '2' → logprob: -5.6499104499816895
    4. 'N' → logprob: -6.1499104499816895
    5. ' ' → logprob: -7.0249104499816895
    6. 'K' → logprob: -7.7749104499816895
    7. 'left' → logprob: -9.899909973144531
    8. '(' → logprob: -10.149909973144531
    9. '-' → logprob: -10.399909973144531
    10. 'max' → logprob: -10.524909973144531

Token 68: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008293279446661472
    2. 'i' → logprob: -5.258293151855469
    3. ' right' → logprob: -6.258293151855469
    4. ' ' → logprob: -7.258293151855469
    5. ' K' → logprob: -8.758293151855469
    6. ' left' → logprob: -9.258293151855469
    7. ' N' → logprob: -9.758293151855469
    8. 'right' → logprob: -9.758293151855469
    9. '(i' → logprob: -11.758293151855469
    10. 'left' → logprob: -11.883293151855469

Token 71: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.06588364392518997
    2. '<=' → logprob: -2.8158836364746094
    3. ' <' → logprob: -5.690883636474609
    4. '<' → logprob: -7.565883636474609
    5. ' ' → logprob: -12.94088363647461
    6. ' ≤' → logprob: -13.44088363647461
    7. ' <<=' → logprob: -13.56588363647461
    8. ' *' → logprob: -13.94088363647461
    9. ' in' → logprob: -14.06588363647461
    10. '1' → logprob: -14.06588363647461

Token 72: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.8575065732002258
    2. ' N' → logprob: -1.107506513595581
    3. '=' → logprob: -1.732506513595581
    4. 'N' → logprob: -3.482506513595581
    5. 'K' → logprob: -3.732506513595581
    6. ' ' → logprob: -4.98250675201416
    7. ' =' → logprob: -5.35750675201416
    8. ' len' → logprob: -7.48250675201416
    9. ' (' → logprob: -7.60750675201416
    10. ' min' → logprob: -8.48250675201416

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010126826353371143
    2. ' and' → logprob: -5.01012659072876
    3. ':
' → logprob: -6.76012659072876
    4. '+' → logprob: -6.88512659072876
    5. ' :' → logprob: -7.13512659072876
    6. 'and' → logprob: -8.385127067565918
    7. '+:' → logprob: -9.135127067565918
    8. ' ' → logprob: -11.010127067565918
    9. ' +' → logprob: -11.260127067565918
    10. ',' → logprob: -11.385127067565918

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4555235207080841
    2. ':' → logprob: -1.7055234909057617
    3. ' ' → logprob: -2.5805234909057617
    4. '<|end|>' → logprob: -2.8305234909057617
    5. '    ' → logprob: -3.7055234909057617
    6. ' 
' → logprob: -5.330523490905762
    7. '
' → logprob: -5.580523490905762
    8. ' i' → logprob: -5.955523490905762
    9. '<|end|>' → logprob: -6.080523490905762
    10. ' if' → logprob: -6.330523490905762

Token 75: ' left' (ID: 3561)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4602213203907013
    2. ' i' → logprob: -1.460221290588379
    3. ' if' → logprob: -2.210221290588379
    4. '    ' → logprob: -4.460221290588379
    5. ' ans' → logprob: -5.085221290588379
    6. ' 
' → logprob: -5.460221290588379
    7. 'if' → logprob: -6.710221290588379
    8. '   ' → logprob: -7.585221290588379
    9. 'i' → logprob: -7.835221290588379
    10. '<|end|>' → logprob: -8.085221290588379

Token 76: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2635464370250702
    2. '+=' → logprob: -1.6385464668273926
    3. ' =' → logprob: -3.6385464668273926
    4. '=' → logprob: -5.138546466827393
    5. '+' → logprob: -5.638546466827393
    6. ' +' → logprob: -6.638546466827393
    7. ',' → logprob: -9.138545989990234
    8. ' ' → logprob: -10.138545989990234
    9. '   ' → logprob: -10.388545989990234
    10. ' *=' → logprob: -10.638545989990234

Token 77: ' i' (ID: 575)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10218121111392975
    2. 'i' → logprob: -2.8521811962127686
    3. 'N' → logprob: -3.9771811962127686
    4. 'ans' → logprob: -4.477181434631348
    5. '2' → logprob: -5.852181434631348
    6. ' ' → logprob: -6.852181434631348
    7. 'left' → logprob: -7.102181434631348
    8. '(' → logprob: -7.227181434631348
    9. '(i' → logprob: -7.227181434631348
    10. 'right' → logprob: -7.352181434631348

Token 78: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15317972004413605
    2. '+' → logprob: -2.77817964553833
    3. '<|end|>' → logprob: -2.90317964553833
    4. '*' → logprob: -4.40317964553833
    5. '   ' → logprob: -5.52817964553833
    6. '<|end|>' → logprob: -6.40317964553833
    7. ' ' → logprob: -6.52817964553833
    8. '*i' → logprob: -6.52817964553833
    9. '    
' → logprob: -7.15317964553833
    10. ' +' → logprob: -7.40317964553833

Token 79: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7853665947914124
    2. ' right' → logprob: -2.2853665351867676
    3. ' ' → logprob: -2.4103665351867676
    4. ' i' → logprob: -2.5353665351867676
    5. '<|end|>' → logprob: -2.9103665351867676
    6. '
' → logprob: -3.1603665351867676
    7. ' if' → logprob: -3.1603665351867676
    8. ' +' → logprob: -3.5353665351867676
    9. '   ' → logprob: -3.6603665351867676
    10. 'right' → logprob: -3.7853665351867676

Token 80: ' i' (ID: 575)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3478652834892273
    2. ' right' → logprob: -1.347865343093872
    3. 'i' (adapté à ' i') → logprob: -4.097865104675293
    4. ' i' → logprob: -4.472865104675293
    5. '   ' → logprob: -5.722865104675293
    6. 'if' → logprob: -6.347865104675293
    7. ' if' → logprob: -7.472865104675293
    8. 'ans' → logprob: -9.472865104675293
    9. ' ' → logprob: -9.722865104675293
    10. 'left' → logprob: -9.847865104675293

Token 81: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3347027003765106
    2. '+=' → logprob: -1.459702730178833
    3. ' +=' → logprob: -2.959702730178833
    4. '++' → logprob: -8.584702491760254
    5. ' +' → logprob: -9.709702491760254
    6. '```' → logprob: -11.209702491760254
    7. '=' → logprob: -11.334702491760254
    8. '<|end|>' → logprob: -11.459702491760254
    9. '+++' → logprob: -11.584702491760254
    10. ' ' → logprob: -12.334702491760254

Token 82: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006801460403949022
    2. ' ' → logprob: -7.375679969787598
    3. '2' → logprob: -9.875679969787598
    4. '3' → logprob: -14.125679969787598
    5. '4' → logprob: -14.688179969787598
    6. '```' → logprob: -15.813179969787598
    7. '   ' → logprob: -16.000680923461914
    8. '6' → logprob: -16.250680923461914
    9. '<|end|>' → logprob: -16.625680923461914
    10. '10' → logprob: -16.750680923461914

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.433829159708694e-05
    2. '2' → logprob: -10.00007438659668
    3. ' ' → logprob: -10.50007438659668
    4. '3' → logprob: -15.00007438659668
    5. '0' → logprob: -15.18757438659668
    6. '4' → logprob: -16.50007438659668
    7. '```' → logprob: -16.87507438659668
    8. '   ' → logprob: -16.93757438659668
    9. '10' → logprob: -16.93757438659668
    10. '6' → logprob: -17.00007438659668

Token 84: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060728494077920914
    2. '
' → logprob: -3.5607285499572754
    3. ' if' → logprob: -4.810728549957275
    4. 'right' → logprob: -4.935728549957275
    5. ' right' → logprob: -5.435728549957275
    6. '<|end|>' → logprob: -5.560728549957275
    7. '```' → logprob: -6.060728549957275
    8. ' ' → logprob: -6.435728549957275
    9. 'if' → logprob: -6.685728549957275
    10. '    
' → logprob: -7.435728549957275

Token 85: 'i' (ID: 72)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.621360182762146
    2. '   ' → logprob: -1.746360182762146
    3. ' right' → logprob: -2.3713603019714355
    4. '
' → logprob: -2.9963603019714355
    5. ' if' → logprob: -2.9963603019714355
    6. 'if' → logprob: -2.9963603019714355
    7. '```' → logprob: -4.4963603019714355
    8. 'while' → logprob: -4.7463603019714355
    9. ' while' → logprob: -4.9963603019714355
    10. ' ' → logprob: -5.2463603019714355

Token 86: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3920685350894928
    2. '<|end|>' → logprob: -1.6420685052871704
    3. ' ' → logprob: -2.89206862449646
    4. ' =' → logprob: -3.51706862449646
    5. '+' → logprob: -4.642068386077881
    6. '>' → logprob: -5.267068386077881
    7. ' <=' → logprob: -5.392068386077881
    8. '<|end|>' → logprob: -5.642068386077881
    9. '<=' → logprob: -5.892068386077881
    10. ' <' → logprob: -6.142068386077881

Token 87: ' N' (ID: 478)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3726663887500763
    2. 'N' → logprob: -2.247666358947754
    3. '0' → logprob: -3.122666358947754
    4. 'K' → logprob: -3.372666358947754
    5. '2' → logprob: -3.622666358947754
    6. ' ' → logprob: -3.622666358947754
    7. ' N' → logprob: -3.747666358947754
    8. 'left' → logprob: -3.747666358947754
    9. ' K' → logprob: -4.122666358947754
    10. ' left' → logprob: -5.122666358947754

Token 88: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9118971228599548
    2. '-' → logprob: -1.0368971824645996
    3. ' -' → logprob: -2.2868971824645996
    4. '<|end|>' → logprob: -2.6618971824645996
    5. 'while' → logprob: -3.1618971824645996
    6. '-K' → logprob: -4.9118971824646
    7. '1' → logprob: -5.7868971824646
    8. ' +' → logprob: -5.9118971824646
    9. 'left' → logprob: -5.9118971824646
    10. '*' → logprob: -6.4118971824646

Token 89: ' K' (ID: 658)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010193521156907082
    2. '2' → logprob: -7.501019477844238
    3. 'K' → logprob: -8.001019477844238
    4. ' ' → logprob: -9.251019477844238
    5. '(K' → logprob: -11.501019477844238
    6. 'i' → logprob: -12.376019477844238
    7. '(' → logprob: -12.438519477844238
    8. '   ' → logprob: -12.876019477844238
    9. ' K' → logprob: -13.001019477844238
    10. 'N' → logprob: -13.063519477844238

Token 90: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04392005503177643
    2. ' +' → logprob: -3.2939200401306152
    3. 'while' → logprob: -5.418920040130615
    4. ' while' → logprob: -8.043920516967773
    5. '+
' → logprob: -8.293920516967773
    6. '<|end|>' → logprob: -8.543920516967773
    7. 'right' → logprob: -8.668920516967773
    8. '1' → logprob: -8.668920516967773
    9. 'i' → logprob: -9.418920516967773
    10. 'left' → logprob: -9.668920516967773

Token 91: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25198987126350403
    2. '2' → logprob: -1.5019898414611816
    3. ' ' → logprob: -10.50199031829834
    4. '0' → logprob: -11.00199031829834
    5. 'i' → logprob: -11.75199031829834
    6. '3' → logprob: -12.37699031829834
    7. '   ' → logprob: -13.00199031829834
    8. '```' → logprob: -14.75199031829834
    9. '  ' → logprob: -15.06449031829834
    10. '4' → logprob: -15.68949031829834

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04859680309891701
    2. '2' → logprob: -3.0485968589782715
    3. 'i' → logprob: -12.548596382141113
    4. '0' → logprob: -12.923596382141113
    5. ' ' → logprob: -13.173596382141113
    6. '3' → logprob: -13.923596382141113
    7. '   ' → logprob: -15.173596382141113
    8. '```' → logprob: -15.798596382141113
    9. 'left' → logprob: -16.42359733581543
    10. '-' → logprob: -16.86109733581543

Token 93: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.036316413432359695
    2. 'right' → logprob: -3.661316394805908
    3. ' while' → logprob: -5.536316394805908
    4. '
' → logprob: -5.661316394805908
    5. '<|end|>' → logprob: -6.161316394805908
    6. 'left' → logprob: -8.286316871643066
    7. 'While' → logprob: -9.911316871643066
    8. '+' → logprob: -10.036316871643066
    9. '```' → logprob: -10.536316871643066
    10. ' right' → logprob: -11.786316871643066

Token 94: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.07016583532094955
    2. 'right' → logprob: -2.6951658725738525
    3. ' while' → logprob: -8.695165634155273
    4. '```' → logprob: -10.945165634155273
    5. '
' → logprob: -11.195165634155273
    6. '<|end|>' → logprob: -11.570165634155273
    7. '+' → logprob: -12.070165634155273
    8. 'left' → logprob: -12.445165634155273
    9. ' right' → logprob: -12.820165634155273
    10. 'While' → logprob: -13.320165634155273

Token 95: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.36195108294487
    2. 'i' → logprob: -1.3619511127471924
    3. ' right' → logprob: -3.4869511127471924
    4. 'right' → logprob: -4.736950874328613
    5. ' left' → logprob: -5.611950874328613
    6. 'left' → logprob: -6.111950874328613
    7. ' N' → logprob: -7.236950874328613
    8. ' ' → logprob: -7.486950874328613
    9. 'N' → logprob: -7.736950874328613
    10. '   ' → logprob: -8.611950874328613

Token 96: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.20878858864307404
    2. ' <=' → logprob: -1.9587886333465576
    3. '<' → logprob: -3.3337886333465576
    4. '>' → logprob: -5.2087883949279785
    5. ' <' → logprob: -5.2087883949279785
    6. ' >' → logprob: -7.9587883949279785
    7. '<N' → logprob: -8.458788871765137
    8. '>=' → logprob: -9.333788871765137
    9. ' ' → logprob: -10.333788871765137
    10. '   ' → logprob: -10.958788871765137

Token 97: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0012791648041456938
    2. ' N' → logprob: -6.751279354095459
    3. '0' → logprob: -9.8762788772583
    4. ' ' → logprob: -10.3762788772583
    5. '1' → logprob: -11.6262788772583
    6. 'n' → logprob: -11.7512788772583
    7. 'right' → logprob: -13.1262788772583
    8. 'left' → logprob: -13.1262788772583
    9. '(' → logprob: -13.8762788772583
    10. '2' → logprob: -14.0012788772583

Token 98: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.29043057560920715
    2. ':' → logprob: -1.4154305458068848
    3. '   ' → logprob: -4.790430545806885
    4. ':right' → logprob: -8.165431022644043
    5. ' and' → logprob: -8.415431022644043
    6. 'right' → logprob: -8.665431022644043
    7. '):
' → logprob: -10.290431022644043
    8. 'left' → logprob: -10.415431022644043
    9. ':left' → logprob: -10.540431022644043
    10. ':
' → logprob: -10.665431022644043

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004879350308328867
    2. 'right' → logprob: -5.379879474639893
    3. ' right' → logprob: -8.504878997802734
    4. '	right' → logprob: -10.504878997802734
    5. '```' → logprob: -10.754878997802734
    6. '[right' → logprob: -13.504878997802734
    7. '  ' → logprob: -13.629878997802734
    8. ' ' → logprob: -13.879878997802734
    9. '       ' → logprob: -14.254878997802734
    10. '
' → logprob: -14.254878997802734

Token 100: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.06064659357070923
    2. '   ' → logprob: -2.9356465339660645
    3. ' right' → logprob: -5.1856465339660645
    4. '	right' → logprob: -9.310647010803223
    5. ' ' → logprob: -10.685647010803223
    6. '  ' → logprob: -11.185647010803223
    7. '```' → logprob: -11.810647010803223
    8. '[right' → logprob: -12.560647010803223
    9. '
' → logprob: -12.810647010803223
    10. '_right' → logprob: -13.185647010803223

Token 101: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1426880657672882
    2. '+=' → logprob: -2.017688035964966
    3. '   ' → logprob: -12.517687797546387
    4. '+' → logprob: -13.017687797546387
    5. ']+=' → logprob: -13.267687797546387
    6. '=' → logprob: -13.392687797546387
    7. ' ' → logprob: -13.892687797546387
    8. ' =' → logprob: -14.267687797546387
    9. '+=(' → logprob: -14.392687797546387
    10. ' +' → logprob: -14.767687797546387

Token 102: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08925655484199524
    2. ' i' → logprob: -2.464256525039673
    3. '1' → logprob: -8.339256286621094
    4. '   ' → logprob: -9.964256286621094
    5. ' ' → logprob: -10.464256286621094
    6. '	i' → logprob: -13.964256286621094
    7. '  ' → logprob: -14.339256286621094
    8. '(i' → logprob: -15.714256286621094
    9. '2' → logprob: -15.964256286621094
    10. '```' → logprob: -16.089256286621094

Token 103: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.811348480870947e-05
    2. ' i' → logprob: -10.50004768371582
    3. 'i' → logprob: -10.87504768371582
    4. '
' → logprob: -15.00004768371582
    5. '<|end|>' → logprob: -15.00004768371582
    6. '       ' → logprob: -15.25004768371582
    7. '    
' → logprob: -15.87504768371582
    8. '	i' → logprob: -16.37504768371582
    9. '```' → logprob: -16.37504768371582
    10. '  ' → logprob: -16.62504768371582

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002099773846566677
    2. ' i' → logprob: -9.25020980834961
    3. 'i' → logprob: -9.75020980834961
    4. '
' → logprob: -10.12520980834961
    5. '```' → logprob: -11.62520980834961
    6. '<|end|>' → logprob: -12.62520980834961
    7. '    
' → logprob: -13.87520980834961
    8. '<|end|>' → logprob: -14.50020980834961
    9. '[i' → logprob: -15.25020980834961
    10. '       ' → logprob: -15.25020980834961

Token 105: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6100859642028809
    2. 'i' (adapté à ' i') → logprob: -1.3600859642028809
    3. ' i' → logprob: -1.6100859642028809
    4. '	i' → logprob: -9.110086441040039
    5. ' ' → logprob: -10.110086441040039
    6. '    ' → logprob: -11.860086441040039
    7. '  ' → logprob: -11.860086441040039
    8. '```' → logprob: -11.985086441040039
    9. '       ' → logprob: -12.860086441040039
    10. '
' → logprob: -13.110086441040039

Token 106: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3132844567298889
    2. ' +=' → logprob: -1.3132843971252441
    3. '+' → logprob: -11.188284873962402
    4. ']+=' → logprob: -13.063284873962402
    5. '```' → logprob: -13.313284873962402
    6. '<|end|>' → logprob: -13.938284873962402
    7. '   ' → logprob: -14.063284873962402
    8. '+="' → logprob: -14.188284873962402
    9. '+='' → logprob: -14.188284873962402
    10. '++' → logprob: -14.438284873962402

Token 107: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.578184497309849e-05
    2. ' ' → logprob: -9.375085830688477
    3. '   ' → logprob: -14.500085830688477
    4. '```' → logprob: -15.500085830688477
    5. '<|end|>' → logprob: -15.750085830688477
    6. '  ' → logprob: -17.375085830688477
    7. '１' → logprob: -18.437585830688477
    8. '	' → logprob: -19.062585830688477
    9. '۱' → logprob: -19.687585830688477
    10. '[' → logprob: -19.750085830688477

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '<|end|>' → logprob: -16.875001907348633
    4. '```' → logprob: -17.500001907348633
    5. '   ' → logprob: -18.750001907348633
    6. '１' → logprob: -20.000001907348633
    7. '۱' → logprob: -20.250001907348633
    8. '  ' → logprob: -20.437501907348633
    9. '१' → logprob: -20.687501907348633
    10. '<|end|>' → logprob: -21.000001907348633

Token 109: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.27149614691734314
    2. 'ans' → logprob: -1.5214961767196655
    3. '
' → logprob: -4.521496295928955
    4. 'for' → logprob: -5.271496295928955
    5. 'answer' → logprob: -6.646496295928955
    6. 'if' → logprob: -7.021496295928955
    7. '```' → logprob: -7.271496295928955
    8. 'while' → logprob: -8.771495819091797
    9. 'result' → logprob: -9.521495819091797
    10. ' ans' → logprob: -10.021495819091797

Token 110: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23844800889492035
    2. 'ans' → logprob: -1.9884480237960815
    3. 'for' → logprob: -2.738447904586792
    4. 'if' → logprob: -5.613448143005371
    5. 'diff' → logprob: -5.988448143005371
    6. 'while' → logprob: -6.613448143005371
    7. 'answer' → logprob: -6.863448143005371
    8. 'total' → logprob: -7.363448143005371
    9. 'result' → logprob: -7.738448143005371
    10. '
' → logprob: -8.488448143005371

Token 111: ' +=' (ID: 2757)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4507995843887329
    2. ' +=' → logprob: -1.200799584388733
    3. '=' → logprob: -2.9507994651794434
    4. '+=' → logprob: -5.075799465179443
    5. ' *=' → logprob: -5.950799465179443
    6. ' ' → logprob: -7.950799465179443
    7. ' -=' → logprob: -8.200799942016602
    8. '+' → logprob: -10.200799942016602
    9. '*=' → logprob: -10.700799942016602
    10. ' |=' → logprob: -11.450799942016602

Token 112: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3434348404407501
    2. ' right' → logprob: -1.5934348106384277
    3. 'left' → logprob: -2.8434348106384277
    4. ' left' → logprob: -4.218434810638428
    5. '(right' → logprob: -5.093434810638428
    6. ' (' → logprob: -6.343434810638428
    7. 'max' → logprob: -6.343434810638428
    8. 'abs' → logprob: -6.718434810638428
    9. '(left' → logprob: -6.718434810638428
    10. ' max' → logprob: -6.843434810638428

Token 113: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6932521462440491
    2. ' -' → logprob: -0.6932521462440491
    3. '-
' → logprob: -10.193252563476562
    4. ' ' → logprob: -11.193252563476562
    5. ' -
' → logprob: -11.193252563476562
    6. '+' → logprob: -11.443252563476562
    7. '
' → logprob: -12.068252563476562
    8. '-print' → logprob: -12.443252563476562
    9. '-block' → logprob: -13.068252563476562
    10. '-import' → logprob: -13.193252563476562

Token 114: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.023246755823493004
    2. ' left' → logprob: -3.7732467651367188
    3. '	left' → logprob: -14.398246765136719
    4. '(left' → logprob: -15.523246765136719
    5. ' lef' → logprob: -15.773246765136719
    6. ' ' → logprob: -15.898246765136719
    7. '[left' → logprob: -16.27324676513672
    8. ':left' → logprob: -16.77324676513672
    9. '1' → logprob: -16.89824676513672
    10. '   ' → logprob: -17.02324676513672

Token 115: ' +' (ID: 659)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008500874042510986
    2. '
' → logprob: -4.883501052856445
    3. ' print' → logprob: -7.258501052856445
    4. '<|end|>' → logprob: -9.508501052856445
    5. '```' → logprob: -9.633501052856445
    6. ')' → logprob: -10.508501052856445
    7. '.print' → logprob: -12.133501052856445
    8. '+' → logprob: -12.508501052856445
    9. '\n' → logprob: -12.758501052856445
    10. '(print' → logprob: -13.383501052856445

Token 116: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007306430023163557
    2. ' ' → logprob: -5.1323065757751465
    3. '2' → logprob: -7.7573065757751465
    4. '0' → logprob: -8.257306098937988
    5. 'N' → logprob: -8.257306098937988
    6. 'MOD' → logprob: -8.382306098937988
    7. ' MOD' → logprob: -9.632306098937988
    8. 'K' → logprob: -10.132306098937988
    9. ' N' → logprob: -10.382306098937988
    10. '10' → logprob: -10.882306098937988

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.8232690460281447e-05
    2. ' ' → logprob: -10.500048637390137
    3. '2' → logprob: -11.375048637390137
    4. 'MOD' → logprob: -12.125048637390137
    5. '0' → logprob: -13.000048637390137
    6. 'N' → logprob: -15.000048637390137
    7. '   ' → logprob: -15.250048637390137
    8. '(' → logprob: -15.375048637390137
    9. '```' → logprob: -16.25004768371582
    10. '  ' → logprob: -16.37504768371582

Token 118: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2532711327075958
    2. '
' → logprob: -1.5032711029052734
    3. ' print' → logprob: -7.128271102905273
    4. '<|end|>' → logprob: -8.878271102905273
    5. '```' → logprob: -9.128271102905273
    6. '\n' → logprob: -9.128271102905273
    7. '  
' → logprob: -10.128271102905273
    8. ')
' → logprob: -10.128271102905273
    9. '
' → logprob: -10.503271102905273
    10. '\' → logprob: -11.128271102905273

Token 119: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1875571544806007e-05
    2. ' print' → logprob: -11.625011444091797
    3. '
' → logprob: -13.500011444091797
    4. '```' → logprob: -13.500011444091797
    5. '\' → logprob: -16.625011444091797
    6. '.print' → logprob: -18.125011444091797
    7. '\n' → logprob: -18.125011444091797
    8. '(print' → logprob: -18.250011444091797
    9. '#print' → logprob: -18.750011444091797
    10. '#' → logprob: -18.875011444091797

Token 120: ' %=' (ID: 117035)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: ' MOD' (ID: 32868)
  Prédit: ' MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -0.4740816056728363
    2. 'MOD' → logprob: -0.9740816354751587
    3. '10' → logprob: -12.474081993103027
    4. ' ' → logprob: -14.974081993103027
    5. '100' → logprob: -15.349081993103027
    6. '_MOD' → logprob: -15.974081993103027
    7. '.MOD' → logprob: -17.22408103942871
    8. '```' → logprob: -17.34908103942871
    9. ' ' → logprob: -18.97408103942871
    10. 'MO' → logprob: -19.09908103942871

Token 122: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.988221684878226e-06
    2. '```' → logprob: -12.000006675720215
    3. ' print' → logprob: -14.875006675720215
    4. '#print' → logprob: -15.875006675720215
    5. '
' → logprob: -16.25000762939453
    6. '<|end|>' → logprob: -16.37500762939453
    7. '\' → logprob: -18.00000762939453
    8. '``' → logprob: -18.12500762939453
    9. '#' → logprob: -18.25000762939453
    10. '(print' → logprob: -18.37500762939453

Token 123: 'i' (ID: 72)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.747814349073451e-05
    2. 'if' → logprob: -11.500017166137695
    3. '```' → logprob: -12.500017166137695
    4. 'for' → logprob: -13.875017166137695
    5. ' print' → logprob: -14.000017166137695
    6. '<|end|>' → logprob: -14.250017166137695
    7. '#' → logprob: -14.750017166137695
    8. 'pr' → logprob: -15.500017166137695
    9. '#print' → logprob: -15.625017166137695
    10. 'i' → logprob: -15.750017166137695

Token 124: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5351539850234985
    2. '+=' → logprob: -0.9101539850234985
    3. '=' → logprob: -4.660153865814209
    4. '+' → logprob: -6.160153865814209
    5. ' =' → logprob: -8.035154342651367
    6. ' +' → logprob: -11.160154342651367
    7. ' ' → logprob: -11.535154342651367
    8. '<|end|>' → logprob: -11.910154342651367
    9. '+='' → logprob: -12.035154342651367
    10. '=i' → logprob: -12.535154342651367

Token 125: ' K' (ID: 658)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6627734899520874
    2. '1' → logprob: -1.5377734899520874
    3. 'K' → logprob: -1.7877734899520874
    4. '0' → logprob: -3.037773609161377
    5. 'N' → logprob: -3.037773609161377
    6. '3' → logprob: -6.162773609161377
    7. 'left' → logprob: -6.412773609161377
    8. ' ' → logprob: -6.912773609161377
    9. 'right' → logprob: -7.037773609161377
    10. ' K' → logprob: -8.037773132324219

Token 126: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004245972086209804
    2. ' +' → logprob: -8.0004243850708
    3. '+
' → logprob: -9.6254243850708
    4. '+i' → logprob: -11.5004243850708
    5. '+=' → logprob: -12.1254243850708
    6. '```' → logprob: -13.1254243850708
    7. 'i' → logprob: -13.5004243850708
    8. 'while' → logprob: -13.7504243850708
    9. ' +=' → logprob: -13.7504243850708
    10. '<|end|>' → logprob: -13.8754243850708

Token 127: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020938136731274426
    2. '0' → logprob: -9.25020980834961
    3. '2' → logprob: -9.25020980834961
    4. ' ' → logprob: -11.25020980834961
    5. 'left' → logprob: -13.37520980834961
    6. 'N' → logprob: -14.37520980834961
    7. '(' → logprob: -14.50020980834961
    8. '3' → logprob: -15.37520980834961
    9. '```' → logprob: -15.50020980834961
    10. 'i' → logprob: -15.50020980834961

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009078874718397856
    2. '2' → logprob: -7.500907897949219
    3. '0' → logprob: -8.250907897949219
    4. 'N' → logprob: -10.250907897949219
    5. 'left' → logprob: -10.750907897949219
    6. 'i' → logprob: -11.375907897949219
    7. '(' → logprob: -12.125907897949219
    8. ' ' → logprob: -12.125907897949219
    9. '-' → logprob: -12.375907897949219
    10. 'K' → logprob: -12.875907897949219

Token 129: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 130: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.007378146983683109
    2. 'i' → logprob: -5.007378101348877
    3. '```' → logprob: -7.882378101348877
    4. 'ans' → logprob: -8.632378578186035
    5. ' while' → logprob: -10.257378578186035
    6. '
' → logprob: -11.007378578186035
    7. 'print' → logprob: -11.257378578186035
    8. 'left' → logprob: -11.632378578186035
    9. 'right' → logprob: -11.632378578186035
    10. 'if' → logprob: -11.632378578186035

Token 131: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0712599828839302
    2. ' i' → logprob: -2.6962599754333496
    3. 'N' → logprob: -6.69625997543335
    4. ' N' → logprob: -9.946260452270508
    5. '(i' → logprob: -11.446260452270508
    6. ' ' → logprob: -11.696260452270508
    7. 'K' → logprob: -12.196260452270508
    8. '   ' → logprob: -12.321260452270508
    9. '	i' → logprob: -13.571260452270508
    10. '  ' → logprob: -13.571260452270508

Token 132: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4750874936580658
    2. '<=' → logprob: -0.9750875234603882
    3. '<' → logprob: -7.600087642669678
    4. ' <' → logprob: -7.600087642669678
    5. '=' → logprob: -12.22508716583252
    6. ' =' → logprob: -13.97508716583252
    7. ' ' → logprob: -14.22508716583252
    8. ' ≤' → logprob: -14.60008716583252
    9. '   ' → logprob: -14.85008716583252
    10. '<N' → logprob: -14.97508716583252

Token 133: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0006401229766197503
    2. ' N' → logprob: -7.375639915466309
    3. 'K' → logprob: -11.750639915466309
    4. ' ' → logprob: -12.750639915466309
    5. '(' → logprob: -14.500639915466309
    6. '	N' → logprob: -14.875639915466309
    7. 'i' → logprob: -15.500639915466309
    8. 'M' → logprob: -15.625639915466309
    9. 'n' → logprob: -15.625639915466309
    10. '(N' → logprob: -15.625639915466309

Token 134: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4380968511104584
    2. ':
' → logprob: -1.0630968809127808
    3. '   ' → logprob: -4.68809700012207
    4. ' and' → logprob: -10.43809700012207
    5. '```' → logprob: -10.56309700012207
    6. '):
' → logprob: -11.06309700012207
    7. '<|end|>' → logprob: -11.56309700012207
    8. '+' → logprob: -11.56309700012207
    9. '*' → logprob: -12.18809700012207
    10. 'and' → logprob: -12.18809700012207

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02100052870810032
    2. 'ans' → logprob: -4.146000385284424
    3. '```' → logprob: -5.896000385284424
    4. ' ans' → logprob: -6.396000385284424
    5. '	ans' → logprob: -7.896000385284424
    6. '(ans' → logprob: -9.771000862121582
    7. '    
' → logprob: -10.396000862121582
    8. '``' → logprob: -11.021000862121582
    9. ' i' → logprob: -11.021000862121582
    10. '
' → logprob: -11.646000862121582

Token 136: ' left' (ID: 3561)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0010275697568431497
    2. 'i' → logprob: -8.25102710723877
    3. '   ' → logprob: -8.37602710723877
    4. ' ans' → logprob: -8.50102710723877
    5. 'right' → logprob: -9.25102710723877
    6. '	ans' → logprob: -9.87602710723877
    7. '(ans' → logprob: -10.00102710723877
    8. 'print' → logprob: -10.00102710723877
    9. '```' → logprob: -10.25102710723877
    10. '
' → logprob: -10.37602710723877

Token 137: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.02993110567331314
    2. '+=' → logprob: -3.52993106842041
    3. ' +' → logprob: -9.90493106842041
    4. '+' → logprob: -10.02993106842041
    5. ' =' → logprob: -10.40493106842041
    6. ' -=' → logprob: -10.65493106842041
    7. '=' → logprob: -11.65493106842041
    8. '   ' → logprob: -11.77993106842041
    9. '<|end|>' → logprob: -12.27993106842041
    10. '```' → logprob: -13.40493106842041

Token 138: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22027742862701416
    2. ' i' → logprob: -2.0952773094177246
    3. 'right' → logprob: -3.5952773094177246
    4. '1' → logprob: -4.345277309417725
    5. 'N' → logprob: -4.595277309417725
    6. ' right' → logprob: -4.720277309417725
    7. 'K' → logprob: -5.220277309417725
    8. 'left' → logprob: -6.095277309417725
    9. ' K' → logprob: -6.470277309417725
    10. ' ' → logprob: -6.720277309417725

Token 139: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3060399889945984
    2. '
' → logprob: -2.181040048599243
    3. 'i' → logprob: -2.556040048599243
    4. ' i' → logprob: -2.681040048599243
    5. '    
' → logprob: -6.306039810180664
    6. '<|end|>' → logprob: -6.556039810180664
    7. ' 
' → logprob: -8.181039810180664
    8. '```' → logprob: -8.556039810180664
    9. '  
' → logprob: -8.681039810180664
    10. ',i' → logprob: -8.931039810180664

Token 140: ' ' (ID: 220)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.9340320229530334
    2. 'K' → logprob: -1.0590319633483887
    3. '1' → logprob: -1.5590319633483887
    4. '(i' → logprob: -3.9340319633483887
    5. 'i' → logprob: -4.309031963348389
    6. '(' → logprob: -5.309031963348389
    7. '(N' → logprob: -5.559031963348389
    8. ' (' → logprob: -6.309031963348389
    9. 'N' → logprob: -6.434031963348389
    10. '(k' → logprob: -6.559031963348389

Token 141: '1' (ID: 16)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.24913571774959564
    2. '1' → logprob: -1.8741357326507568
    3. '(K' → logprob: -2.874135732650757
    4. 'k' → logprob: -5.624135494232178
    5. 'i' → logprob: -5.624135494232178
    6. '(i' → logprob: -6.749135494232178
    7. 'N' → logprob: -7.749135494232178
    8. '(' → logprob: -8.124135971069336
    9. '(k' → logprob: -8.249135971069336
    10. '0' → logprob: -8.249135971069336

Token 142: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.740524411201477
    2. 'i' → logprob: -0.865524411201477
    3. ' i' → logprob: -2.6155242919921875
    4. '<|end|>' → logprob: -4.4905242919921875
    5. '
' → logprob: -4.6155242919921875
    6. ' 
' → logprob: -5.8655242919921875
    7. '```' → logprob: -5.8655242919921875
    8. ' ' → logprob: -6.9905242919921875
    9. '    
' → logprob: -7.2405242919921875
    10. '  
' → logprob: -8.615524291992188

Token 143: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22269867360591888
    2. '   ' → logprob: -1.84769868850708
    3. ' i' → logprob: -3.47269868850708
    4. '```' → logprob: -5.09769868850708
    5. '<|end|>' → logprob: -5.84769868850708
    6. '
' → logprob: -6.72269868850708
    7. ' ' → logprob: -8.597698211669922
    8. ' 
' → logprob: -8.722698211669922
    9. '    
' → logprob: -8.847698211669922
    10. '[i' → logprob: -9.597698211669922

Token 144: ' right' (ID: 1849)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.022034015506505966
    2. ' i' → logprob: -3.897033929824829
    3. 'right' (adapté à ' right') → logprob: -7.147034168243408
    4. '   ' → logprob: -8.02203369140625
    5. ' right' → logprob: -8.02203369140625
    6. 'left' → logprob: -10.27203369140625
    7. 'ans' → logprob: -12.64703369140625
    8. ' left' → logprob: -12.89703369140625
    9. ' ans' → logprob: -13.02203369140625
    10. '```' → logprob: -13.52203369140625

Token 145: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.25906625390052795
    2. '+=' → logprob: -1.5090662240982056
    3. ' -=' → logprob: -5.134066104888916
    4. '-=' → logprob: -7.384066104888916
    5. '+' → logprob: -7.884066104888916
    6. ' +' → logprob: -9.259066581726074
    7. '   ' → logprob: -10.384066581726074
    8. '<|end|>' → logprob: -10.759066581726074
    9. '-' → logprob: -10.884066581726074
    10. '```' → logprob: -11.134066581726074

Token 146: ' N' (ID: 478)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0025200152304023504
    2. ' i' → logprob: -6.0025200843811035
    3. '   ' → logprob: -11.002519607543945
    4. '1' → logprob: -11.002519607543945
    5. 'N' → logprob: -13.127519607543945
    6. ' ' → logprob: -13.252519607543945
    7. '(i' → logprob: -13.627519607543945
    8. 'right' → logprob: -13.752519607543945
    9. '
' → logprob: -13.877519607543945
    10. '10' → logprob: -14.127519607543945

Token 147: ' -' (ID: 533)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20225399732589722
    2. '   ' → logprob: -2.327254056930542
    3. ' i' → logprob: -3.327254056930542
    4. '
' → logprob: -4.327253818511963
    5. '<|end|>' → logprob: -4.827253818511963
    6. ' -' → logprob: -4.952253818511963
    7. '-' → logprob: -4.952253818511963
    8. '+' → logprob: -5.202253818511963
    9. '-i' → logprob: -5.827253818511963
    10. '[i' → logprob: -6.827253818511963

Token 148: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02253451757133007
    2. '(i' → logprob: -3.8975346088409424
    3. '(N' → logprob: -7.272534370422363
    4. 'N' → logprob: -7.897534370422363
    5. ' i' → logprob: -8.022534370422363
    6. '(K' → logprob: -8.272534370422363
    7. 'K' → logprob: -8.522534370422363
    8. ' (' → logprob: -9.897534370422363
    9. '(' → logprob: -10.022534370422363
    10. '1' → logprob: -10.647534370422363

Token 149: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0030920354183763266
    2. ' i' → logprob: -6.128091812133789
    3. '(i' → logprob: -7.878091812133789
    4. 'N' → logprob: -8.378091812133789
    5. 'K' → logprob: -9.128091812133789
    6. '(N' → logprob: -9.503091812133789
    7. '   ' → logprob: -10.253091812133789
    8. ' (' → logprob: -10.503091812133789
    9. '(K' → logprob: -10.878091812133789
    10. ' ' → logprob: -11.253091812133789

Token 150: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31910669803619385
    2. '   ' → logprob: -1.9441066980361938
    3. ')' → logprob: -2.9441065788269043
    4. 'i' → logprob: -3.8191065788269043
    5. ' +' → logprob: -4.069106578826904
    6. ')+' → logprob: -4.319106578826904
    7. '+i' → logprob: -4.319106578826904
    8. '-' → logprob: -4.694106578826904
    9. '1' → logprob: -7.319106578826904
    10. ')i' → logprob: -8.069107055664062

Token 151: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012535653077065945
    2. '2' → logprob: -6.876253604888916
    3. 'i' → logprob: -9.251253128051758
    4. ' ' → logprob: -10.001253128051758
    5. '   ' → logprob: -10.251253128051758
    6. '0' → logprob: -10.751253128051758
    7. 'K' → logprob: -11.626253128051758
    8. 'left' → logprob: -12.501253128051758
    9. 'right' → logprob: -12.626253128051758
    10. ')' → logprob: -13.376253128051758

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002383376471698284
    2. '0' → logprob: -6.627383232116699
    3. '2' → logprob: -7.127383232116699
    4. 'i' → logprob: -8.7523832321167
    5. 'K' → logprob: -10.2523832321167
    6. ' ' → logprob: -10.5023832321167
    7. 'right' → logprob: -11.2523832321167
    8. 'k' → logprob: -12.2523832321167
    9. '   ' → logprob: -12.6273832321167
    10. 'left' → logprob: -12.7523832321167

Token 153: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05958562716841698
    2. '   ' → logprob: -3.4345855712890625
    3. ')
' → logprob: -3.6845855712890625
    4. '+' → logprob: -8.559585571289062
    5. ')i' → logprob: -9.309585571289062
    6. ' )' → logprob: -9.684585571289062
    7. 'i' → logprob: -10.309585571289062
    8. ' i' → logprob: -10.934585571289062
    9. '```' → logprob: -10.934585571289062
    10. ' ' → logprob: -11.059585571289062

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10460885614156723
    2. 'i' → logprob: -2.3546087741851807
    3. '```' → logprob: -5.60460901260376
    4. ' i' → logprob: -7.35460901260376
    5. '
' → logprob: -10.604608535766602
    6. '<|end|>' → logprob: -10.854608535766602
    7. '    
' → logprob: -11.979608535766602
    8. '``' → logprob: -12.604608535766602
    9. ',i' → logprob: -12.729608535766602
    10. ',' → logprob: -12.729608535766602

Token 155: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0013119018403813243
    2. 'i' → logprob: -7.126311779022217
    3. 'if' → logprob: -8.251312255859375
    4. 'print' → logprob: -8.501312255859375
    5. '```' → logprob: -10.751312255859375
    6. ' ans' → logprob: -11.126312255859375
    7. '   ' → logprob: -13.376312255859375
    8. '	ans' → logprob: -13.501312255859375
    9. '(ans' → logprob: -13.876312255859375
    10. 'right' → logprob: -14.126312255859375

Token 156: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6335083842277527
    2. ' +=' → logprob: -0.7585083842277527
    3. '%=' → logprob: -8.008508682250977
    4. '=' → logprob: -8.883508682250977
    5. ' %=' → logprob: -9.133508682250977
    6. '+' → logprob: -9.258508682250977
    7. ' ' → logprob: -9.758508682250977
    8. '```' → logprob: -10.008508682250977
    9. ' =' → logprob: -10.633508682250977
    10. '   ' → logprob: -10.883508682250977

Token 157: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.524473249912262
    2. ' right' → logprob: -0.899473249912262
    3. '(right' → logprob: -6.774473190307617
    4. ' (' → logprob: -8.899473190307617
    5. 'ans' → logprob: -10.649473190307617
    6. '(' → logprob: -11.524473190307617
    7. ' ' → logprob: -11.524473190307617
    8. '   ' → logprob: -11.899473190307617
    9. ' ans' → logprob: -12.524473190307617
    10. '1' → logprob: -13.024473190307617

Token 158: ' -' (ID: 533)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6711718440055847
    2. '%' → logprob: -1.5461719036102295
    3. '<|end|>' → logprob: -2.0461719036102295
    4. '   ' → logprob: -2.9211719036102295
    5. ' -' → logprob: -3.2961719036102295
    6. ' +' → logprob: -3.4211719036102295
    7. ' ' → logprob: -5.54617166519165
    8. '+' → logprob: -5.54617166519165
    9. ')' → logprob: -6.29617166519165
    10. ' *' → logprob: -6.54617166519165

Token 159: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00317783304490149
    2. ' left' → logprob: -5.753177642822266
    3. '	left' → logprob: -17.128177642822266
    4. ' ' → logprob: -17.878177642822266
    5. '(left' → logprob: -17.878177642822266
    6. '   ' → logprob: -18.128177642822266
    7. '[left' → logprob: -18.628177642822266
    8. ' lef' → logprob: -19.628177642822266
    9. 'lef' → logprob: -20.628177642822266
    10. '_left' → logprob: -20.628177642822266

Token 160: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7778374552726746
    2. ' +' → logprob: -1.0278375148773193
    3. '   ' → logprob: -2.1528375148773193
    4. '<|end|>' → logprob: -3.5278375148773193
    5. ' i' → logprob: -3.7778375148773193
    6. '1' → logprob: -5.77783727645874
    7. ' ' → logprob: -6.15283727645874
    8. 'i' → logprob: -6.40283727645874
    9. ' 
' → logprob: -6.52783727645874
    10. ' +
' → logprob: -6.65283727645874

Token 161: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021866646129637957
    2. ' ' → logprob: -6.1271867752075195
    3. '2' → logprob: -14.12718677520752
    4. '10' → logprob: -15.37718677520752
    5. '0' → logprob: -15.87718677520752
    6. '   ' → logprob: -15.87718677520752
    7. '(' → logprob: -16.502185821533203
    8. '```' → logprob: -16.627185821533203
    9. ' (' → logprob: -16.752185821533203
    10. 'MOD' → logprob: -17.252185821533203

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.41866585687967e-06
    2. '0' → logprob: -12.750008583068848
    3. '2' → logprob: -13.000008583068848
    4. ' ' → logprob: -13.000008583068848
    5. 'i' → logprob: -15.125008583068848
    6. '(' → logprob: -15.250008583068848
    7. '```' → logprob: -15.625008583068848
    8. '   ' → logprob: -16.62500762939453
    9. '(i' → logprob: -16.87500762939453
    10. '3' → logprob: -17.37500762939453

Token 163: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0229501836001873
    2. 'i' → logprob: -3.8979501724243164
    3. '```' → logprob: -6.772950172424316
    4. '
' → logprob: -7.397950172424316
    5. ' i' → logprob: -7.522950172424316
    6. '    
' → logprob: -10.647950172424316
    7. '<|end|>' → logprob: -10.772950172424316
    8. ' ' → logprob: -11.272950172424316
    9. '  ' → logprob: -11.272950172424316
    10. '  
' → logprob: -11.647950172424316

Token 164: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.296658456325531
    2. '   ' → logprob: -1.6716585159301758
    3. '
' → logprob: -3.296658515930176
    4. '```' → logprob: -3.546658515930176
    5. ' i' → logprob: -6.796658515930176
    6. '\n' → logprob: -7.671658515930176
    7. '    
' → logprob: -7.796658515930176
    8. '  
' → logprob: -8.171658515930176
    9. '``' → logprob: -8.421658515930176
    10. '\' → logprob: -8.546658515930176

Token 165: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.5495558977127075
    2. ' ans' → logprob: -0.9245558977127075
    3. 'i' → logprob: -4.174555778503418
    4. ' i' → logprob: -5.049555778503418
    5. '```' → logprob: -5.549555778503418
    6. '	ans' → logprob: -9.049555778503418
    7. '(ans' → logprob: -9.424555778503418
    8. ' 
' → logprob: -9.799555778503418
    9. '``' → logprob: -10.049555778503418
    10. '_ans' → logprob: -10.674555778503418

Token 166: ' %=' (ID: 117035)
  Prédit: ' %='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.35116660594940186
    2. '%=' → logprob: -1.2261666059494019
    3. '%' → logprob: -5.976166725158691
    4. ' %' → logprob: -9.226166725158691
    5. '```' → logprob: -10.101166725158691
    6. '   ' → logprob: -11.101166725158691
    7. ' ' → logprob: -11.601166725158691
    8. '=' → logprob: -11.976166725158691
    9. ' ' → logprob: -12.601166725158691
    10. '	' → logprob: -13.726166725158691

Token 167: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.04858794063329697
    2. ' MOD' → logprob: -3.0485880374908447
    3. '_MOD' → logprob: -15.423587799072266
    4. '(M' → logprob: -16.548587799072266
    5. '```' → logprob: -16.673587799072266
    6. '.MOD' → logprob: -16.798587799072266
    7. ' ' → logprob: -16.798587799072266
    8. '   ' → logprob: -17.798587799072266
    9. '10' → logprob: -17.923587799072266
    10. 'MO' → logprob: -18.548587799072266

Token 168: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.26173892617225647
    2. '
' → logprob: -1.511738896369934
    3. '```' → logprob: -5.6367387771606445
    4. '   ' → logprob: -5.7617387771606445
    5. ' i' → logprob: -6.2617387771606445
    6. '  
' → logprob: -8.261738777160645
    7. '    
' → logprob: -8.386738777160645
    8. ' 
' → logprob: -8.511738777160645
    9. '\n' → logprob: -8.761738777160645
    10. '<|end|>' → logprob: -9.261738777160645

Token 169: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.037449486553668976
    2. '```' → logprob: -3.537449598312378
    3. '   ' → logprob: -5.662449359893799
    4. '
' → logprob: -6.162449359893799
    5. ' i' → logprob: -6.412449359893799
    6. '``' → logprob: -8.162449836730957
    7. '    
' → logprob: -10.037449836730957
    8. ' 
' → logprob: -10.162449836730957
    9. '\' → logprob: -10.287449836730957
    10. '  
' → logprob: -10.787449836730957

Token 170: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0002751598076429218
    2. ' i' → logprob: -8.250275611877441
    3. '   ' → logprob: -11.375275611877441
    4. '```' → logprob: -13.125275611877441
    5. '	i' → logprob: -15.000275611877441
    6. ' 
' → logprob: -17.000274658203125
    7. '\' → logprob: -17.125274658203125
    8. ' ' → logprob: -17.875274658203125
    9. '
' → logprob: -18.000274658203125
    10. '    
' → logprob: -18.125274658203125

Token 171: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.28307420015335083
    2. ' +=' → logprob: -1.408074140548706
    3. '+' → logprob: -6.283074378967285
    4. '+="' → logprob: -11.158074378967285
    5. '```' → logprob: -11.408074378967285
    6. '+='' → logprob: -11.658074378967285
    7. '++' → logprob: -11.908074378967285
    8. '<|end|>' → logprob: -12.283074378967285
    9. ']+=' → logprob: -12.658074378967285
    10. '=' → logprob: -13.033074378967285

Token 172: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004331725067459047
    2. ' ' → logprob: -7.750432968139648
    3. '```' → logprob: -13.250432968139648
    4. '   ' → logprob: -15.125432968139648
    5. '2' → logprob: -15.937932968139648
    6. '  ' → logprob: -17.12543296813965
    7. '`' → logprob: -17.62543296813965
    8. '<|end|>' → logprob: -17.75043296813965
    9. '``' → logprob: -17.81293296813965
    10. '+' → logprob: -18.25043296813965

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -15.000003814697266
    4. '2' → logprob: -15.625003814697266
    5. '   ' → logprob: -17.437503814697266
    6. '`' → logprob: -18.312503814697266
    7. '``' → logprob: -19.062503814697266
    8. '１' → logprob: -19.187503814697266
    9. '۱' → logprob: -19.250003814697266
    10. '!' → logprob: -19.250003814697266

Token 174: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12079352140426636
    2. ')' → logprob: -2.995793581008911
    3. '
' → logprob: -2.995793581008911
    4. '```' → logprob: -4.745793342590332
    5. '<|end|>' → logprob: -5.745793342590332
    6. ')
' → logprob: -7.120793342590332
    7. ' print' → logprob: -7.870793342590332
    8. '\n' → logprob: -7.870793342590332
    9. '#' → logprob: -9.495793342590332
    10. '``' → logprob: -10.120793342590332

Token 175: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.7954958821064793e-05
    2. '```' → logprob: -11.000018119812012
    3. ' print' → logprob: -14.000018119812012
    4. 'pr' → logprob: -15.000018119812012
    5. 'ans' → logprob: -17.625017166137695
    6. '``' → logprob: -18.125017166137695
    7. ')' → logprob: -18.500017166137695
    8. '#print' → logprob: -18.625017166137695
    9. '(print' → logprob: -18.625017166137695
    10. '
' → logprob: -18.750017166137695

Token 176: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.048881545662879944
    2. '(' → logprob: -3.0488815307617188
    3. '()' → logprob: -8.173881530761719
    4. ' (' → logprob: -12.673881530761719
    5. 'ans' → logprob: -12.673881530761719
    6. '(
' → logprob: -12.673881530761719
    7. '(answer' → logprob: -13.173881530761719
    8. '('' → logprob: -15.298881530761719
    9. '(`' → logprob: -16.29888153076172
    10. '(

' → logprob: -16.29888153076172

Token 177: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -15.250000953674316
    3. ')
' → logprob: -15.750000953674316
    4. '))' → logprob: -16.0
    5. ')`' → logprob: -16.25
    6. '()' → logprob: -16.875
    7. '())' → logprob: -17.125
    8. '')' → logprob: -17.375
    9. '`)' → logprob: -17.625
    10. ')**' → logprob: -18.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 175
Tokens correctement prédits (1ère position, stricte): 56
Tokens correctement prédits (1ère position, avec adaptation): 60
Tokens correctement prédits (top 10): 147
Précision stricte (1ère position): 32.00%
Précision adaptée (1ère position): 34.29%
Précision (top 10): 84.00%
================================================================================
