================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import mul, eq, or_
W, H, X, Y = (lambda l: reduce(lambda a, c: (a[0]*10 + int(c), a[1]+1) if c.isdigit() else (a[0], a[1]), filter(None, ''.join(l).split()), (0,0))[0])(input().split()),\
            (lambda l: reduce(lambda a, b: (a[0],[*a[1],[b]]),l, (0,[]))[1])(input().split()),\
            (lambda l: list(map(int,l)))(input().split()),\
            (lambda l: [int(x) for x in l])(input().split())
W, H, X, Y = map(int, input().split())
print(reduce(lambda a, b: a*b, (W, H)) / 2, int(eq((W/2, H/2), (X, Y)))) if not or_(*(W/2 != X, H/2 != Y)) else print(reduce(lambda a, b: a*b, (W, H)) / 2, 0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.25372281670570374
    2. 'partial' → logprob: -1.7537227869033813
    3. 'reduce' → logprob: -3.503722906112671
    4. ' wraps' → logprob: -4.003722667694092
    5. 'l' → logprob: -6.753722667694092
    6. ' partial' → logprob: -7.378722667694092
    7. 'cache' → logprob: -8.37872314453125
    8. '```' → logprob: -8.62872314453125
    9. 'cached' → logprob: -9.00372314453125
    10. 'cmp' → logprob: -9.25372314453125

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020487118512392044
    2. '(lambda' → logprob: -4.645487308502197
    3. '.' → logprob: -5.270487308502197
    4. ',' → logprob: -5.895487308502197
    5. '\' → logprob: -7.145487308502197
    6. ' (' → logprob: -7.520487308502197
    7. '```' → logprob: -8.020486831665039
    8. 'def' → logprob: -8.645486831665039
    9. 'lambda' → logprob: -8.895486831665039
    10. '`' → logprob: -8.895486831665039

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.036594681441783905
    2. 'def' → logprob: -4.036594867706299
    3. '\' → logprob: -4.536594867706299
    4. ' ' → logprob: -5.786594867706299
    5. '(
' → logprob: -6.786594867706299
    6. ',' → logprob: -7.036594867706299
    7. '(lambda' → logprob: -7.786594867706299
    8. '```' → logprob: -8.16159439086914
    9. ' (' → logprob: -8.28659439086914
    10. 'd' → logprob: -8.66159439086914

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.1674761325120926
    2. ' itertools' → logprob: -2.292476177215576
    3. ' math' → logprob: -3.917476177215576
    4. ' collections' → logprob: -3.917476177215576
    5. 'operator' → logprob: -4.417476177215576
    6. 'collections' → logprob: -7.792476177215576
    7. ' typing' → logprob: -8.042475700378418
    8. 'math' → logprob: -8.167475700378418
    9. ' os' → logprob: -8.667475700378418
    10. ' ' → logprob: -9.667475700378418

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02017967775464058
    2. 'import' → logprob: -4.020179748535156
    3. '.' → logprob: -6.770179748535156
    4. ' ' → logprob: -7.270179748535156
    5. ' .' → logprob: -9.145179748535156
    6. '.import' → logprob: -9.770179748535156
    7. '	import' → logprob: -11.520179748535156
    8. '_import' → logprob: -13.145179748535156
    9. '-import' → logprob: -13.395179748535156
    10. '<|end|>' → logprob: -13.645179748535156

Token 8: ' mul' (ID: 9975)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.30121177434921265
    2. ' import' → logprob: -1.8012118339538574
    3. ' mul' → logprob: -3.0512118339538574
    4. 'add' → logprob: -3.8012118339538574
    5. ' ' → logprob: -4.051211833953857
    6. 'import' → logprob: -5.426211833953857
    7. 'mul' → logprob: -6.301211833953857
    8. ' item' → logprob: -7.051211833953857
    9. ' icon' → logprob: -8.4262113571167
    10. '```' → logprob: -9.3012113571167

Token 9: ',' (ID: 11)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.7826842665672302
    2. '(' → logprob: -1.032684326171875
    3. '\n' → logprob: -2.032684326171875
    4. '*' → logprob: -4.032684326171875
    5. '(
' → logprob: -4.032684326171875
    6. '`' → logprob: -5.657684326171875
    7. ',' → logprob: -5.657684326171875
    8. '\(' → logprob: -6.032684326171875
    9. '```' → logprob: -6.407684326171875
    10. 'a' → logprob: -6.407684326171875

Token 10: ' eq' (ID: 18955)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.3128780722618103
    2. 'tr' → logprob: -2.437878131866455
    3. ' tr' → logprob: -2.437878131866455
    4. ' add' → logprob: -2.562878131866455
    5. 'pow' → logprob: -5.187878131866455
    6. '```' → logprob: -5.187878131866455
    7. 'item' → logprob: -6.812878131866455
    8. '   ' → logprob: -7.312878131866455
    9. ' item' → logprob: -7.687878131866455
    10. 'xor' → logprob: -7.937878131866455

Token 11: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8313265442848206
    2. ',' → logprob: -1.7063264846801758
    3. '(
' → logprob: -2.206326484680176
    4. '\' → logprob: -2.706326484680176
    5. '\n' → logprob: -3.206326484680176
    6. ',
' → logprob: -3.206326484680176
    7. '*' → logprob: -3.456326484680176
    8. '#' → logprob: -3.956326484680176
    9. '`' → logprob: -4.331326484680176
    10. ',

' → logprob: -4.706326484680176

Token 12: ' or' (ID: 503)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -1.3382843732833862
    2. 'lt' → logprob: -1.7132843732833862
    3. 'add' → logprob: -2.338284492492676
    4. ' ne' → logprob: -2.463284492492676
    5. ' is' → logprob: -2.713284492492676
    6. 'gt' → logprob: -2.963284492492676
    7. 'is' → logprob: -2.963284492492676
    8. ' lt' → logprob: -3.088284492492676
    9. 'xor' → logprob: -3.338284492492676
    10. ' add' → logprob: -3.963284492492676

Token 13: '_
' (ID: 27437)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01578071340918541
    2. '|' → logprob: -5.390780925750732
    3. ',' → logprob: -5.515780925750732
    4. ')' → logprob: -6.140780925750732
    5. 'r' → logprob: -7.015780925750732
    6. '_,' → logprob: -7.265780925750732
    7. '_)' → logprob: -7.765780925750732
    8. '_|' → logprob: -7.890780925750732
    9. 'p' → logprob: -8.265780448913574
    10. 'f' → logprob: -8.265780448913574

Token 14: 'W' (ID: 54)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3897143602371216
    2. ',' → logprob: -2.014714241027832
    3. '```' → logprob: -3.139714241027832
    4. '`' → logprob: -3.514714241027832
    5. '\' → logprob: -3.889714241027832
    6. ',
' → logprob: -4.014714241027832
    7. '\n' → logprob: -4.264714241027832
    8. '
' → logprob: -4.514714241027832
    9. ',

' → logprob: -4.764714241027832
    10. '

' → logprob: -5.139714241027832

Token 15: ',' (ID: 11)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.35775402188301086
    2. 'or' → logprob: -1.7327539920806885
    3. 'rap' → logprob: -3.4827539920806885
    4. 'h' → logprob: -3.8577539920806885
    5. 'ith' → logprob: -4.107754230499268
    6. 'rapped' → logprob: -4.232754230499268
    7. 'ra' → logprob: -4.732754230499268
    8. 'eq' → logprob: -5.232754230499268
    9. 'hile' → logprob: -5.982754230499268
    10. 'rite' → logprob: -6.107754230499268

Token 16: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.1729196459054947
    2. ''' → logprob: -3.547919750213623
    3. ' H' → logprob: -3.797919750213623
    4. 'h' → logprob: -4.297919750213623
    5. 'w' → logprob: -4.297919750213623
    6. 'X' → logprob: -4.547919750213623
    7. '*' → logprob: -4.797919750213623
    8. 'r' → logprob: -5.360419750213623
    9. 'D' → logprob: -5.422919750213623
    10. 'x' → logprob: -5.610419750213623

Token 17: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28263238072395325
    2. '=' → logprob: -1.4076323509216309
    3. ',' → logprob: -6.532632350921631
    4. ' ,' → logprob: -10.907632827758789
    5. ' ' → logprob: -12.657632827758789
    6. ')' → logprob: -13.532632827758789
    7. ' =
' → logprob: -13.532632827758789
    8. '=

' → logprob: -15.282632827758789
    9. '<|end|>' → logprob: -15.282632827758789
    10. '  ' → logprob: -15.532632827758789

Token 18: ' X' (ID: 2127)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07243987172842026
    2. '=' → logprob: -3.3224399089813232
    3. ' ' → logprob: -4.322439670562744
    4. ',' → logprob: -4.947439670562744
    5. ' D' → logprob: -5.322439670562744
    6. ' I' → logprob: -6.822439670562744
    7. 'D' → logprob: -6.822439670562744
    8. 'I' → logprob: -6.947439670562744
    9. ' L' → logprob: -6.947439670562744
    10. ' N' → logprob: -7.197439670562744

Token 19: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6442086696624756
    2. ' =' → logprob: -1.2692086696624756
    3. ',' → logprob: -1.6442086696624756
    4. ' ,' → logprob: -7.769208908081055
    5. ')' → logprob: -8.894208908081055
    6. ' ' → logprob: -10.644208908081055
    7. '[' → logprob: -10.769208908081055
    8. '<|end|>' → logprob: -10.769208908081055
    9. '=

' → logprob: -11.019208908081055
    10. ' =
' → logprob: -11.519208908081055

Token 20: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.04429839178919792
    2. ' Y' → logprob: -3.1692984104156494
    3. 'T' → logprob: -8.41929817199707
    4. '_' → logprob: -8.66929817199707
    5. 'C' → logprob: -9.48179817199707
    6. 'A' → logprob: -9.60679817199707
    7. 'S' → logprob: -9.66929817199707
    8. 'N' → logprob: -9.98179817199707
    9. ' ' → logprob: -9.98179817199707
    10. 'Q' → logprob: -10.04429817199707

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19056513905525208
    2. ' =' → logprob: -2.0655651092529297
    3. ',' → logprob: -3.0655651092529297
    4. ' ,' → logprob: -9.69056510925293
    5. ')' → logprob: -10.69056510925293
    6. '=
' → logprob: -11.44056510925293
    7. ' ' → logprob: -11.81556510925293
    8. '=

' → logprob: -12.06556510925293
    9. ' =
' → logprob: -12.31556510925293
    10. ':' → logprob: -12.69056510925293

Token 22: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2231454849243164
    2. ' ' → logprob: -1.2231454849243164
    3. ' map' → logprob: -1.7231454849243164
    4. 'map' → logprob: -1.8481454849243164
    5. '1' → logprob: -3.7231454849243164
    6. '10' → logprob: -4.223145484924316
    7. '100' → logprob: -5.098145484924316
    8. '20' → logprob: -5.723145484924316
    9. '5' → logprob: -5.973145484924316
    10. '32' → logprob: -6.098145484924316

Token 23: 'lambda' (ID: 35280)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1842937469482422
    2. '1' → logprob: -1.6842937469482422
    3. ' ' → logprob: -2.309293746948242
    4. 'map' → logprob: -3.184293746948242
    5. ')' → logprob: -3.309293746948242
    6. '10' → logprob: -3.309293746948242
    7. '20' → logprob: -3.809293746948242
    8. '3' → logprob: -3.809293746948242
    9. '5' → logprob: -3.934293746948242
    10. ' map' → logprob: -4.184293746948242

Token 24: ' l' (ID: 305)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -1.451959490776062
    2. ' x' → logprob: -2.2019596099853516
    3. 'w' → logprob: -2.3269596099853516
    4. ' s' → logprob: -2.3269596099853516
    5. ' a' → logprob: -2.7019596099853516
    6. 'a' → logprob: -2.7019596099853516
    7. 'x' → logprob: -2.7019596099853516
    8. 's' → logprob: -3.0769596099853516
    9. ' n' → logprob: -3.8269596099853516
    10. ':' → logprob: -4.076959609985352

Token 25: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.050839148461818695
    2. ' :' → logprob: -3.8008391857147217
    3. ' l' → logprob: -5.175838947296143
    4. ' s' → logprob: -5.300838947296143
    5. 's' → logprob: -5.800838947296143
    6. ',' → logprob: -5.925838947296143
    7. ':list' → logprob: -6.175838947296143
    8. ' x' → logprob: -6.550838947296143
    9. 'a' → logprob: -6.800838947296143
    10. ' len' → logprob: -7.175838947296143

Token 26: ' reduce' (ID: 10389)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.1143059730529785
    2. ' list' → logprob: -1.6143059730529785
    3. ' map' → logprob: -1.9893059730529785
    4. '[l' → logprob: -2.6143059730529785
    5. 'list' → logprob: -2.8643059730529785
    6. '[int' → logprob: -2.9893059730529785
    7. '[' → logprob: -3.2393059730529785
    8. 'map' → logprob: -3.7393059730529785
    9. ' l' → logprob: -3.8643059730529785
    10. ' tuple' → logprob: -4.6143059730529785

Token 27: '(lambda' (ID: 43341)
  Prédit: '(or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(or' → logprob: -0.23049640655517578
    2. '(m' → logprob: -2.230496406555176
    3. '(' → logprob: -2.980496406555176
    4. '(lambda' → logprob: -3.230496406555176
    5. '(eq' → logprob: -4.980496406555176
    6. '(operator' → logprob: -7.105496406555176
    7. ' or' → logprob: -9.355496406555176
    8. 'or' → logprob: -9.730496406555176
    9. '(mu' → logprob: -10.230496406555176
    10. '(
' → logprob: -10.355496406555176

Token 28: ' a' (ID: 261)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2071833461523056
    2. ' eq' → logprob: -2.332183361053467
    3. 'or' → logprob: -3.457183361053467
    4. 'mul' → logprob: -3.957183361053467
    5. ' mul' → logprob: -4.082183361053467
    6. 'eq' → logprob: -4.207183361053467
    7. ' acc' → logprob: -6.332183361053467
    8. 'x' → logprob: -6.582183361053467
    9. ' x' → logprob: -6.707183361053467
    10. ' a' → logprob: -7.332183361053467

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006463832221925259
    2. ',b' → logprob: -6.381464004516602
    3. ' ,' → logprob: -6.506464004516602
    4. ',x' → logprob: -7.256464004516602
    5. ',a' → logprob: -7.256464004516602
    6. ',i' → logprob: -8.006464004516602
    7. ' or' → logprob: -8.006464004516602
    8. ',l' → logprob: -8.506464004516602
    9. ',d' → logprob: -9.256464004516602
    10. 'or' → logprob: -9.381464004516602

Token 30: ' c' (ID: 274)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.49905189871788025
    2. 'b' → logprob: -1.1240519285202026
    3. ' a' → logprob: -3.874051809310913
    4. 'a' → logprob: -4.374052047729492
    5. ' or' → logprob: -4.374052047729492
    6. ' eq' → logprob: -5.249052047729492
    7. ' ' → logprob: -5.624052047729492
    8. 'eq' → logprob: -5.999052047729492
    9. 'or' → logprob: -6.749052047729492
    10. ',' → logprob: -7.061552047729492

Token 31: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010191740468144417
    2. ':' → logprob: -5.510191917419434
    3. 'a' → logprob: -6.260191917419434
    4. ',a' → logprob: -6.510191917419434
    5. ' ,' → logprob: -6.635191917419434
    6. ' or' → logprob: -7.885191917419434
    7. '_,' → logprob: -8.510191917419434
    8. ' a' → logprob: -8.510191917419434
    9. ',b' → logprob: -9.385191917419434
    10. 'or' → logprob: -9.510191917419434

Token 32: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.613011360168457
    2. ' a' → logprob: -0.863011360168457
    3. ' or' → logprob: -4.238011360168457
    4. ' [' → logprob: -5.113011360168457
    5. '[a' → logprob: -5.363011360168457
    6. '[' → logprob: -5.863011360168457
    7. ' (' → logprob: -6.488011360168457
    8. 'mul' → logprob: -6.863011360168457
    9. '(a' → logprob: -6.988011360168457
    10. 'or' → logprob: -7.113011360168457

Token 33: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06434828042984009
    2. ' a' → logprob: -3.5643482208251953
    3. '*a' → logprob: -4.314348220825195
    4. '(a' → logprob: -4.939348220825195
    5. '*' → logprob: -5.189348220825195
    6. '(*' → logprob: -6.064348220825195
    7. '[a' → logprob: -6.814348220825195
    8. ' *' → logprob: -6.939348220825195
    9. '(' → logprob: -6.939348220825195
    10. ' (' → logprob: -7.564348220825195

Token 34: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.174633502960205
    2. ' +' → logprob: -1.299633502960205
    3. ' *' → logprob: -2.049633502960205
    4. '*' → logprob: -2.049633502960205
    5. '+' → logprob: -2.299633502960205
    6. ' if' → logprob: -3.924633502960205
    7. '[:-' → logprob: -3.924633502960205
    8. '[:' → logprob: -5.299633502960205
    9. '+[' → logprob: -5.299633502960205
    10. '<<' → logprob: -5.799633502960205

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012922548688948154
    2. '1' → logprob: -4.762922763824463
    3. 'a' → logprob: -6.762922763824463
    4. '...' → logprob: -7.387922763824463
    5. '+' → logprob: -7.762922763824463
    6. 'i' → logprob: -7.887922763824463
    7. ':' → logprob: -7.887922763824463
    8. ' ' → logprob: -8.012922286987305
    9. '*' → logprob: -8.387922286987305
    10. '-' → logprob: -9.200422286987305

Token 36: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.2291563749313354
    2. '+' → logprob: -1.4791563749313354
    3. ' *' → logprob: -1.4791563749313354
    4. ' +' → logprob: -1.4791563749313354
    5. ',' → logprob: -4.854156494140625
    6. ' or' → logprob: -5.479156494140625
    7. ' |' → logprob: -5.854156494140625
    8. '[' → logprob: -5.854156494140625
    9. '+c' → logprob: -7.229156494140625
    10. ' if' → logprob: -7.479156494140625

Token 37: '10' (ID: 702)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05476966127753258
    2. ' c' → logprob: -3.05476975440979
    3. '10' → logprob: -5.429769515991211
    4. ' ' → logprob: -6.929769515991211
    5. '	c' → logprob: -8.554769515991211
    6. ')c' → logprob: -9.679769515991211
    7. 'l' → logprob: -9.804769515991211
    8. '256' → logprob: -9.804769515991211
    9. '32' → logprob: -10.179769515991211
    10. '16' → logprob: -10.179769515991211

Token 38: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4074493646621704
    2. ' +' → logprob: -1.1574493646621704
    3. '+c' → logprob: -3.907449245452881
    4. ' plus' → logprob: -9.532449722290039
    5. '+a' → logprob: -9.657449722290039
    6. '+l' → logprob: -10.407449722290039
    7. ' ' → logprob: -10.657449722290039
    8. 'plus' → logprob: -10.782449722290039
    9. ' ' → logprob: -11.532449722290039
    10. '0' → logprob: -11.907449722290039

Token 39: ' int' (ID: 677)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.023477233946323395
    2. ' c' → logprob: -3.77347731590271
    3. 'int' → logprob: -8.773477554321289
    4. ' int' → logprob: -10.648477554321289
    5. '   ' → logprob: -11.273477554321289
    6. '	c' → logprob: -11.523477554321289
    7. ' ' → logprob: -11.648477554321289
    8. '  ' → logprob: -11.773477554321289
    9. ')c' → logprob: -11.898477554321289
    10. 'a' → logprob: -12.523477554321289

Token 40: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.008100077509880066
    2. '(' → logprob: -5.2581000328063965
    3. 'c' → logprob: -6.0081000328063965
    4. ')c' → logprob: -8.133100509643555
    5. ' c' → logprob: -9.508100509643555
    6. '	c' → logprob: -11.508100509643555
    7. ' (' → logprob: -11.508100509643555
    8. ' ' → logprob: -12.633100509643555
    9. ')' → logprob: -12.633100509643555
    10. '<|end|>' → logprob: -13.383100509643555

Token 41: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0004642736748792231
    2. ')' → logprob: -8.12546443939209
    3. ')),' → logprob: -9.37546443939209
    4. ',' → logprob: -10.25046443939209
    5. ' ),' → logprob: -11.12546443939209
    6. 'a' → logprob: -12.00046443939209
    7. ' ' → logprob: -12.00046443939209
    8. '))' → logprob: -13.00046443939209
    9. '1' → logprob: -13.12546443939209
    10. 'if' → logprob: -13.12546443939209

Token 42: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6348997354507446
    2. ' a' → logprob: -0.7598997354507446
    3. '0' → logprob: -6.634899616241455
    4. ' ' → logprob: -7.759899616241455
    5. ')' → logprob: -9.009900093078613
    6. ' int' → logprob: -9.884900093078613
    7. 'int' → logprob: -10.197400093078613
    8. '*a' → logprob: -10.259900093078613
    9. 'l' → logprob: -10.697400093078613
    10. '  ' → logprob: -10.822400093078613

Token 43: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00631328159943223
    2. '1' → logprob: -5.131313323974609
    3. ')' → logprob: -8.63131332397461
    4. ',' → logprob: -9.13131332397461
    5. ')[' → logprob: -10.25631332397461
    6. '),' → logprob: -10.88131332397461
    7. ' ' → logprob: -10.88131332397461
    8. '<|end|>' → logprob: -11.88131332397461
    9. ' [' → logprob: -12.63131332397461
    10. '<|end|>' → logprob: -12.75631332397461

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.263011578586884e-05
    2. ' ' → logprob: -10.750042915344238
    3. '0' → logprob: -11.125042915344238
    4. '```' → logprob: -13.750042915344238
    5. '   ' → logprob: -14.437542915344238
    6. '' → logprob: -14.562542915344238
    7. '-' → logprob: -14.812542915344238
    8. '2' → logprob: -15.187542915344238
    9. '  ' → logprob: -15.375042915344238
    10. ',' → logprob: -15.375042915344238

Token 45: ']+' (ID: 15344)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5812944769859314
    2. '),' → logprob: -0.8312944769859314
    3. ' if' → logprob: -6.831294536590576
    4. ')),' → logprob: -6.831294536590576
    5. '+' → logprob: -7.456294536590576
    6. '0' → logprob: -7.581294536590576
    7. '))' → logprob: -7.831294536590576
    8. 'if' → logprob: -7.831294536590576
    9. ' ),' → logprob: -8.956294059753418
    10. ',' → logprob: -9.081294059753418

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05170904099941254
    2. ' ' → logprob: -3.301708936691284
    3. ' (' → logprob: -5.176709175109863
    4. '(' → logprob: -6.051709175109863
    5. '(c' → logprob: -6.801709175109863
    6. 'int' → logprob: -6.926709175109863
    7. ' int' → logprob: -7.176709175109863
    8. '0' → logprob: -7.301709175109863
    9. 'c' → logprob: -8.051709175109863
    10. '(ord' → logprob: -8.051709175109863

Token 47: ')' (ID: 8)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.04661320522427559
    2. ')' → logprob: -3.7966132164001465
    3. ',' → logprob: -4.4216132164001465
    4. ' if' → logprob: -5.4216132164001465
    5. 'if' → logprob: -6.2966132164001465
    6. ' ),' → logprob: -6.4216132164001465
    7. '))(' → logprob: -7.1716132164001465
    8. ' ' → logprob: -7.4216132164001465
    9. 'l' → logprob: -8.171612739562988
    10. '))' → logprob: -8.296612739562988

Token 48: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.588788628578186
    2. '(l' → logprob: -0.838788628578186
    3. ' ,' → logprob: -5.4637885093688965
    4. ',l' → logprob: -5.9637885093688965
    5. ')(' → logprob: -6.0887885093688965
    6. '),' → logprob: -6.8387885093688965
    7. ' if' → logprob: -6.9637885093688965
    8. ' (' → logprob: -7.5887885093688965
    9. '(' → logprob: -7.7137885093688965
    10. ')' → logprob: -8.088788986206055

Token 49: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7806870937347412
    2. ' c' → logprob: -0.9056870937347412
    3. 'a' → logprob: -3.405687093734741
    4. ' a' → logprob: -3.655687093734741
    5. 'len' → logprob: -3.780687093734741
    6. 'int' → logprob: -4.03068733215332
    7. ' int' → logprob: -4.53068733215332
    8. ' len' → logprob: -5.15568733215332
    9. '0' → logprob: -5.40568733215332
    10. ' ' → logprob: -5.65568733215332

Token 50: '.is' (ID: 3109)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13720883429050446
    2. '.is' → logprob: -2.387208938598633
    3. 'isdigit' → logprob: -4.637208938598633
    4. ' ==' → logprob: -4.887208938598633
    5. ' else' → logprob: -5.012208938598633
    6. ' is' → logprob: -5.762208938598633
    7. ' ' → logprob: -6.012208938598633
    8. ' not' → logprob: -6.387208938598633
    9. '==' → logprob: -6.887208938598633
    10. ' !=' → logprob: -7.012208938598633

Token 51: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.0010673471260815859
    2. 'decimal' → logprob: -7.001067161560059
    3. 'numeric' → logprob: -8.876067161560059
    4. ' digit' → logprob: -11.251067161560059
    5. 'd' → logprob: -14.126067161560059
    6. '_digit' → logprob: -14.126067161560059
    7. 'digital' → logprob: -15.001067161560059
    8. 'digits' → logprob: -15.251067161560059
    9. 'alpha' → logprob: -15.501067161560059
    10. 'isdigit' → logprob: -15.751067161560059

Token 52: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000619388825725764
    2. '(c' → logprob: -7.500619411468506
    3. 'else' → logprob: -10.500618934631348
    4. ' else' → logprob: -11.250618934631348
    5. 'c' → logprob: -11.500618934631348
    6. '(' → logprob: -12.500618934631348
    7. '()
' → logprob: -13.500618934631348
    8. '(e' → logprob: -13.750618934631348
    9. 'and' → logprob: -13.875618934631348
    10. '(x' → logprob: -14.000618934631348

Token 53: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.014588755555450916
    2. 'else' → logprob: -4.264588832855225
    3. ' or' → logprob: -8.014588356018066
    4. ' ' → logprob: -10.264588356018066
    5. ' and' → logprob: -10.264588356018066
    6. 'or' → logprob: -12.577088356018066
    7. ' l' → logprob: -12.764588356018066
    8. 'and' → logprob: -12.827088356018066
    9. ')' → logprob: -13.077088356018066
    10. '```' → logprob: -13.327088356018066

Token 54: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3005546033382416
    2. '(a' → logprob: -1.550554633140564
    3. '(' → logprob: -4.3005547523498535
    4. ' a' → logprob: -4.4255547523498535
    5. ' ('' → logprob: -4.4255547523498535
    6. 'a' → logprob: -6.3005547523498535
    7. ' ("' → logprob: -6.4255547523498535
    8. ' ' → logprob: -6.6755547523498535
    9. '('' → logprob: -6.6755547523498535
    10. '('',' → logprob: -7.4255547523498535

Token 55: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11608612537384033
    2. '(' → logprob: -2.991086006164551
    3. '0' → logprob: -3.366086006164551
    4. 'l' → logprob: -5.366086006164551
    5. '(a' → logprob: -5.491086006164551
    6. ' a' → logprob: -5.616086006164551
    7. '('',' → logprob: -5.741086006164551
    8. ' ' → logprob: -5.991086006164551
    9. ' (' → logprob: -6.616086006164551
    10. 'W' → logprob: -6.866086006164551

Token 56: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.40773674845695496
    2. '[' → logprob: -1.1577367782592773
    3. '(' → logprob: -5.032736778259277
    4. ' ' → logprob: -5.032736778259277
    5. '1' → logprob: -5.907736778259277
    6. ',' → logprob: -6.407736778259277
    7. ' (' → logprob: -7.282736778259277
    8. ')' → logprob: -7.657736778259277
    9. '  ' → logprob: -7.907736778259277
    10. '   ' → logprob: -8.595236778259277

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008663378655910492
    2. '1' → logprob: -4.758663177490234
    3. ' ' → logprob: -10.133663177490234
    4. '[' → logprob: -12.758663177490234
    5. '(' → logprob: -13.258663177490234
    6. '2' → logprob: -14.133663177490234
    7. ')' → logprob: -14.383663177490234
    8. '-' → logprob: -14.821163177490234
    9. ',' → logprob: -15.321163177490234
    10. '_' → logprob: -15.696163177490234

Token 58: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003025125479325652
    2. ' ,' → logprob: -6.628025054931641
    3. '0' → logprob: -7.003025054931641
    4. ' ' → logprob: -8.62802505493164
    5. '+' → logprob: -8.87802505493164
    6. '[' → logprob: -9.37802505493164
    7. '_,' → logprob: -9.62802505493164
    8. 'None' → logprob: -10.37802505493164
    9. '   ' → logprob: -10.37802505493164
    10. ',None' → logprob: -10.50302505493164

Token 59: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04806431010365486
    2. ' a' → logprob: -3.1730642318725586
    3. '0' → logprob: -6.048064231872559
    4. ' ' → logprob: -6.673064231872559
    5. '1' → logprob: -7.048064231872559
    6. '  ' → logprob: -8.298064231872559
    7. '   ' → logprob: -8.548064231872559
    8. '    ' → logprob: -9.798064231872559
    9. '     ' → logprob: -11.048064231872559
    10. '      ' → logprob: -11.860564231872559

Token 60: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02668062224984169
    2. '1' → logprob: -3.6516807079315186
    3. '0' → logprob: -9.151680946350098
    4. ')' → logprob: -9.276680946350098
    5. ' ' → logprob: -9.401680946350098
    6. '<|end|>' → logprob: -10.276680946350098
    7. '   ' → logprob: -12.214180946350098
    8. '(' → logprob: -12.401680946350098
    9. ' [' → logprob: -12.401680946350098
    10. '<|end|>' → logprob: -12.526680946350098

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014573395310435444
    2. '0' → logprob: -8.87514591217041
    3. ' ' → logprob: -13.68764591217041
    4. '2' → logprob: -13.75014591217041
    5. '```' → logprob: -14.06264591217041
    6. '
' → logprob: -14.93764591217041
    7. '-' → logprob: -15.25014591217041
    8. '   ' → logprob: -15.31264591217041
    9. '_' → logprob: -15.68764591217041
    10. '``' → logprob: -15.75014591217041

Token 62: ']),' (ID: 19560)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05921943113207817
    2. '),' → logprob: -3.1842193603515625
    3. ')),' → logprob: -4.8092193603515625
    4. ' +' → logprob: -5.4342193603515625
    5. ')' → logprob: -5.9342193603515625
    6. '))' → logprob: -8.434219360351562
    7. '   ' → logprob: -8.559219360351562
    8. ' ),' → logprob: -9.684219360351562
    9. ' ' → logprob: -10.121719360351562
    10. ')
' → logprob: -10.184219360351562

Token 63: ' filter' (ID: 6690)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5224774479866028
    2. 'l' → logprob: -1.022477388381958
    3. 'input' → logprob: -4.147477626800537
    4. ' input' → logprob: -4.272477626800537
    5. 'list' → logprob: -5.147477626800537
    6. ' list' → logprob: -5.772477626800537
    7. ''' → logprob: -6.772477626800537
    8. '"' → logprob: -7.022477626800537
    9. 'W' → logprob: -7.272477626800537
    10. ' W' → logprob: -7.397477626800537

Token 64: '(None' (ID: 65126)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.13096047937870026
    2. '(lambda' → logprob: -2.255960464477539
    3. '(' → logprob: -4.255960464477539
    4. '(None' → logprob: -6.005960464477539
    5. '(is' → logprob: -7.755960464477539
    6. 'str' → logprob: -8.005960464477539
    7. '(bool' → logprob: -8.380960464477539
    8. '(
' → logprob: -9.005960464477539
    9. '(len' → logprob: -10.005960464477539
    10. '(filter' → logprob: -10.505960464477539

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.053232837468385696
    2. ',l' → logprob: -3.6782329082489014
    3. ',map' → logprob: -4.678232669830322
    4. ',W' → logprob: -4.928232669830322
    5. ',Y' → logprob: -6.303232669830322
    6. ',line' → logprob: -6.678232669830322
    7. ',input' → logprob: -6.803232669830322
    8. ',['' → logprob: -7.178232669830322
    9. ',X' → logprob: -7.178232669830322
    10. '(' → logprob: -7.553232669830322

Token 66: ' ''.' (ID: 105941)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.16086038947105408
    2. 'l' → logprob: -2.160860300064087
    3. ' map' → logprob: -4.660860538482666
    4. ' ['' → logprob: -5.160860538482666
    5. '['' → logprob: -5.410860538482666
    6. 'map' → logprob: -5.910860538482666
    7. ' [' → logprob: -6.285860538482666
    8. '[l' → logprob: -6.285860538482666
    9. '[' → logprob: -6.660860538482666
    10. ' (' → logprob: -7.660860538482666

Token 67: 'join' (ID: 10891)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.14340634644031525
    2. 'join' → logprob: -2.018406391143799
    3. 'import' → logprob: -8.51840591430664
    4. 'strip' → logprob: -9.26840591430664
    5. 'partition' → logprob: -9.39340591430664
    6. 'input' → logprob: -9.51840591430664
    7. 'from' → logprob: -10.01840591430664
    8. ' split' → logprob: -10.76840591430664
    9. '```' → logprob: -10.76840591430664
    10. 'read' → logprob: -10.76840591430664

Token 68: '(l' (ID: 4179)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8899464011192322
    2. 'map' → logprob: -1.389946460723877
    3. '(l' → logprob: -2.764946460723877
    4. '(map' → logprob: -2.889946460723877
    5. 'filter' → logprob: -2.889946460723877
    6. '(filter' → logprob: -3.264946460723877
    7. '[l' → logprob: -3.514946460723877
    8. '([' → logprob: -4.264946460723877
    9. ' l' → logprob: -4.639946460723877
    10. 'W' → logprob: -4.639946460723877

Token 69: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.06430144608020782
    2. ')' → logprob: -4.314301490783691
    3. ')))' → logprob: -4.564301490783691
    4. ')).' → logprob: -4.689301490783691
    5. '))' → logprob: -6.189301490783691
    6. ')),' → logprob: -6.314301490783691
    7. '),' → logprob: -6.314301490783691
    8. '[' → logprob: -6.564301490783691
    9. '))),' → logprob: -6.564301490783691
    10. 'split' → logprob: -6.689301490783691

Token 70: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0037866546772420406
    2. 'strip' → logprob: -6.003786563873291
    3. ' split' → logprob: -6.753786563873291
    4. 'rstrip' → logprob: -9.25378704071045
    5. 'replace' → logprob: -10.75378704071045
    6. ')' → logprob: -11.75378704071045
    7. '(split' → logprob: -12.37878704071045
    8. '```' → logprob: -12.75378704071045
    9. 'startswith' → logprob: -13.00378704071045
    10. 'spl' → logprob: -13.37878704071045

Token 71: '()),' (ID: 24379)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.3134687542915344
    2. '()' → logprob: -2.4384686946868896
    3. '()))' → logprob: -2.6884686946868896
    4. '('' → logprob: -3.3134686946868896
    5. '())' → logprob: -3.5634686946868896
    6. '()),' → logprob: -3.5634686946868896
    7. 'lines' → logprob: -5.438468933105469
    8. '(),' → logprob: -5.688468933105469
    9. '(','' → logprob: -5.938468933105469
    10. '("\' → logprob: -6.063468933105469

Token 72: ' (' (ID: 350)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.9749031662940979
    2. ' (' → logprob: -1.8499031066894531
    3. '[' → logprob: -2.349903106689453
    4. ' [' → logprob: -2.474903106689453
    5. '(' → logprob: -2.599903106689453
    6. 'lambda' → logprob: -2.974903106689453
    7. '(lambda' → logprob: -3.224903106689453
    8. ' range' → logprob: -3.974903106689453
    9. ' ' → logprob: -4.599903106689453
    10. ' ['' → logprob: -4.599903106689453

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011762863025069237
    2. '(' → logprob: -4.636763095855713
    3. ' ' → logprob: -6.261763095855713
    4. ' (' → logprob: -9.511762619018555
    5. '1' → logprob: -12.386762619018555
    6. '-' → logprob: -12.511762619018555
    7. '[' → logprob: -12.761762619018555
    8. '(-' → logprob: -13.136762619018555
    9. '   ' → logprob: -13.324262619018555
    10. ')' → logprob: -13.824262619018555

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.024604277219623e-05
    2. '0' → logprob: -10.625040054321289
    3. ' ,' → logprob: -11.125040054321289
    4. ' ' → logprob: -14.500040054321289
    5. '<|end|>' → logprob: -15.625040054321289
    6. ',
' → logprob: -15.875040054321289
    7. '```' → logprob: -16.87504005432129
    8. '  ' → logprob: -17.00004005432129
    9. '2' → logprob: -17.50004005432129
    10. ',None' → logprob: -17.50004005432129

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02079002745449543
    2. ' ' → logprob: -3.8957901000976562
    3. '(' → logprob: -9.020790100097656
    4. '2' → logprob: -9.895790100097656
    5. '1' → logprob: -10.020790100097656
    6. ' (' → logprob: -11.708290100097656
    7. '  ' → logprob: -11.958290100097656
    8. '   ' → logprob: -12.208290100097656
    9. '-' → logprob: -12.645790100097656
    10. '    ' → logprob: -13.520790100097656

Token 76: '))[' (ID: 101036)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.036192480474710464
    2. '))' → logprob: -3.9111924171447754
    3. ')' → logprob: -4.286192417144775
    4. '))))' → logprob: -6.661192417144775
    5. ')),' → logprob: -8.536192893981934
    6. '),' → logprob: -8.911192893981934
    7. '))),' → logprob: -9.786192893981934
    8. ')));' → logprob: -10.161192893981934
    9. ')))

' → logprob: -11.161192893981934
    10. '))).' → logprob: -11.286192893981934

Token 77: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25330591201782227
    2. '0' → logprob: -1.5033059120178223
    3. '::-' → logprob: -7.628305912017822
    4. ' ' → logprob: -8.003305435180664
    5. ':' → logprob: -8.503305435180664
    6. '-' → logprob: -10.003305435180664
    7. ':]' → logprob: -10.065805435180664
    8. ']' → logprob: -10.253305435180664
    9. '])' → logprob: -10.503305435180664
    10. '::' → logprob: -10.690805435180664

Token 78: '])(' (ID: 164063)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0180649496614933
    2. ',' → logprob: -4.143064975738525
    3. ' )' → logprob: -6.893064975738525
    4. ',)' → logprob: -8.143064498901367
    5. '),' → logprob: -8.643064498901367
    6. '<|end|>' → logprob: -9.143064498901367
    7. '))' → logprob: -9.643064498901367
    8. ')>' → logprob: -10.143064498901367
    9. '+' → logprob: -10.143064498901367
    10. ')
' → logprob: -10.643064498901367

Token 79: 'input' (ID: 2586)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.4951607584953308
    2. 'input' → logprob: -2.1201608180999756
    3. '["' → logprob: -2.6201608180999756
    4. '[' → logprob: -2.9951608180999756
    5. '[input' → logprob: -3.4951608180999756
    6. '[
' → logprob: -3.6201608180999756
    7. '['_' → logprob: -3.6201608180999756
    8. '[]' → logprob: -4.6201605796813965
    9. '[['' → logprob: -4.9951605796813965
    10. '_' → logprob: -5.2451605796813965

Token 80: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2996605932712555
    2. ')' → logprob: -1.674660563468933
    3. '()' → logprob: -2.6746606826782227
    4. '))' → logprob: -6.799660682678223
    5. '()))' → logprob: -7.174660682678223
    6. '(' → logprob: -8.424660682678223
    7. '();)' → logprob: -9.049660682678223
    8. '());' → logprob: -9.299660682678223
    9. '(),' → logprob: -10.049660682678223
    10. '().' → logprob: -10.674660682678223

Token 81: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.06319841742515564
    2. 'strip' → logprob: -2.8131983280181885
    3. 'rstrip' → logprob: -6.813198566436768
    4. 'replace' → logprob: -9.81319808959961
    5. 'read' → logprob: -9.93819808959961
    6. ' split' → logprob: -10.56319808959961
    7. 'rs' → logprob: -13.68819808959961
    8. ' strip' → logprob: -14.43819808959961
    9. ' readline' → logprob: -16.68819808959961
    10. 'upper' → logprob: -17.06319808959961

Token 82: '()),' (ID: 24379)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.047747500240802765
    2. '()' → logprob: -3.4227476119995117
    3. ')' → logprob: -4.297747611999512
    4. '(' → logprob: -9.172747611999512
    5. '()))' → logprob: -9.672747611999512
    6. '();)' → logprob: -9.922747611999512
    7. ' ())' → logprob: -9.922747611999512
    8. '(),' → logprob: -10.547747611999512
    9. '('' → logprob: -10.922747611999512
    10. '())
' → logprob: -10.922747611999512

Token 83: '\
' (ID: 12179)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4230616092681885
    2. '<|end|>' → logprob: -1.1730616092681885
    3. ',' → logprob: -5.048061370849609
    4. ')' → logprob: -5.048061370849609
    5. 'input' → logprob: -5.548061370849609
    6. '<|end|>' → logprob: -5.923061370849609
    7. '0' → logprob: -6.298061370849609
    8. '[' → logprob: -6.798061370849609
    9. '  ' → logprob: -7.048061370849609
    10. ' 
' → logprob: -7.048061370849609

Token 84: '           ' (ID: 352)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.19491557776927948
    2. ' input' → logprob: -2.444915533065796
    3. '(input' → logprob: -3.444915533065796
    4. '<|end|>' → logprob: -3.819915533065796
    5. ' (' → logprob: -4.569915771484375
    6. 'lambda' → logprob: -5.069915771484375
    7. ' ' → logprob: -5.444915771484375
    8. ' lambda' → logprob: -5.944915771484375
    9. '(lambda' → logprob: -6.319915771484375
    10. '0' → logprob: -6.444915771484375

Token 85: ' (' (ID: 350)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.15598876774311066
    2. 'int' → logprob: -3.0309886932373047
    3. ' input' → logprob: -3.6559886932373047
    4. '0' → logprob: -3.9059886932373047
    5. 'lambda' → logprob: -4.155988693237305
    6. '*' → logprob: -4.280988693237305
    7. ' *' → logprob: -5.655988693237305
    8. 'tuple' → logprob: -5.780988693237305
    9. ' lambda' → logprob: -6.030988693237305
    10. 'W' → logprob: -6.530988693237305

Token 86: 'lambda' (ID: 35280)
  Prédit: 'lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.1211191788315773
    2. 'input' → logprob: -2.621119260787964
    3. ' lambda' → logprob: -3.621119260787964
    4. 'int' → logprob: -4.996119022369385
    5. '(lambda' → logprob: -6.246119022369385
    6. '0' → logprob: -6.496119022369385
    7. ')' → logprob: -6.996119022369385
    8. ' input' → logprob: -7.121119022369385
    9. '           ' → logprob: -7.621119022369385
    10. ' ' → logprob: -7.621119022369385

Token 87: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1149589940905571
    2. ' l' → logprob: -2.2399590015411377
    3. 'lambda' → logprob: -6.614958763122559
    4. ' lambda' → logprob: -7.739958763122559
    5. 'input' → logprob: -9.239958763122559
    6. ' input' → logprob: -9.239958763122559
    7. 'x' → logprob: -10.364958763122559
    8. ' ' → logprob: -10.989958763122559
    9. 'a' → logprob: -11.177458763122559
    10. 's' → logprob: -11.489958763122559

Token 88: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.546478935983032e-05
    2. ':l' → logprob: -11.625025749206543
    3. ' :' → logprob: -11.750025749206543
    4. '           ' → logprob: -13.375025749206543
    5. '=input' → logprob: -13.625025749206543
    6. '=lambda' → logprob: -13.750025749206543
    7. ' l' → logprob: -13.875025749206543
    8. 'l' → logprob: -13.875025749206543
    9. 'lambda' → logprob: -14.250025749206543
    10. ':
' → logprob: -15.250025749206543

Token 89: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.2556205689907074
    2. ' reduce' → logprob: -1.5056205987930298
    3. ' input' → logprob: -7.38062047958374
    4. 'int' → logprob: -7.38062047958374
    5. 'lambda' → logprob: -7.38062047958374
    6. 'input' → logprob: -7.88062047958374
    7. 'filter' → logprob: -7.88062047958374
    8. ' lambda' → logprob: -8.505620956420898
    9. 'len' → logprob: -8.755620956420898
    10. ' filter' → logprob: -9.130620956420898

Token 90: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -7.922563963802531e-05
    2. 'lambda' → logprob: -10.000079154968262
    3. '(' → logprob: -10.500079154968262
    4. '=lambda' → logprob: -13.000079154968262
    5. ' lambda' → logprob: -13.375079154968262
    6. ' (' → logprob: -13.750079154968262
    7. '<|end|>' → logprob: -14.625079154968262
    8. '(
' → logprob: -14.750079154968262
    9. ')' → logprob: -16.625080108642578
    10. ' ' → logprob: -17.125080108642578

Token 91: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2523733973503113
    2. ' a' → logprob: -1.502373456954956
    3. '<|end|>' → logprob: -7.877373218536377
    4. ' ' → logprob: -11.002373695373535
    5. 'lambda' → logprob: -11.127373695373535
    6. ' lambda' → logprob: -11.752373695373535
    7. '...' → logprob: -12.127373695373535
    8. '(a' → logprob: -12.502373695373535
    9. 'A' → logprob: -13.252373695373535
    10. ')' → logprob: -13.502373695373535

Token 92: ',' (ID: 11)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5442330241203308
    2. 'a' → logprob: -2.0442330837249756
    3. ' lambda' → logprob: -2.1692330837249756
    4. ',' → logprob: -2.2942330837249756
    5. '<|end|>' → logprob: -3.5442330837249756
    6. 'lambda' → logprob: -4.0442328453063965
    7. ' ' → logprob: -4.0442328453063965
    8. '(lambda' → logprob: -5.5442328453063965
    9. ' ,' → logprob: -5.6692328453063965
    10. '=lambda' → logprob: -6.6692328453063965

Token 93: ' b' (ID: 287)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5777206420898438
    2. 'c' → logprob: -0.8277206420898438
    3. '<|end|>' → logprob: -6.577720642089844
    4. ' ' → logprob: -8.577720642089844
    5. '...' → logprob: -9.827720642089844
    6. 'b' → logprob: -10.452720642089844
    7. 'lambda' → logprob: -10.827720642089844
    8. ')' → logprob: -11.202720642089844
    9. '<|end|>' → logprob: -11.577720642089844
    10. ')c' → logprob: -11.827720642089844

Token 94: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005694961175322533
    2. ',' → logprob: -5.38069486618042
    3. ' :' → logprob: -7.00569486618042
    4. 'lambda' → logprob: -10.255695343017578
    5. 'or' → logprob: -10.630695343017578
    6. '_:' → logprob: -10.630695343017578
    7. ' or' → logprob: -11.130695343017578
    8. '=lambda' → logprob: -11.755695343017578
    9. '(lambda' → logprob: -11.880695343017578
    10. 'a' → logprob: -12.005695343017578

Token 95: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20720884203910828
    2. ' a' → logprob: -1.9572088718414307
    3. '(a' → logprob: -3.5822088718414307
    4. ' (' → logprob: -4.582208633422852
    5. 'mul' → logprob: -6.207208633422852
    6. ' or' → logprob: -6.957208633422852
    7. '(lambda' → logprob: -7.082208633422852
    8. 'int' → logprob: -7.332208633422852
    9. '(' → logprob: -7.582208633422852
    10. '(int' → logprob: -7.832208633422852

Token 96: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18231798708438873
    2. '(a' → logprob: -2.1823179721832275
    3. ' a' → logprob: -3.1823179721832275
    4. ' (' → logprob: -4.557318210601807
    5. '(' → logprob: -7.807318210601807
    6. ' ' → logprob: -8.307317733764648
    7. '(lambda' → logprob: -8.307317733764648
    8. 'lambda' → logprob: -8.557317733764648
    9. 'b' → logprob: -8.682317733764648
    10. 'W' → logprob: -9.307317733764648

Token 97: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.021115850657224655
    2. '0' → logprob: -3.896115779876709
    3. 'mul' → logprob: -8.646116256713867
    4. '(' → logprob: -8.896116256713867
    5. ' ' → logprob: -9.958616256713867
    6. '1' → logprob: -10.146116256713867
    7. ')' → logprob: -10.708616256713867
    8. ' [' → logprob: -11.333616256713867
    9. '*' → logprob: -11.396116256713867
    10. 'multip' → logprob: -11.583616256713867

Token 98: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00048167374916374683
    2. '1' → logprob: -8.000481605529785
    3. ' ' → logprob: -9.000481605529785
    4. '   ' → logprob: -12.562981605529785
    5. '
' → logprob: -13.062981605529785
    6. '  ' → logprob: -13.812981605529785
    7. '2' → logprob: -13.937981605529785
    8. '...' → logprob: -14.000481605529785
    9. '```' → logprob: -14.187981605529785
    10. '[' → logprob: -14.375481605529785

Token 99: '],[' (ID: 32964)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.020598413422703743
    2. '[' → logprob: -5.270598411560059
    3. ' *' → logprob: -5.270598411560059
    4. ')*' → logprob: -5.395598411560059
    5. '0' → logprob: -6.645598411560059
    6. '*b' → logprob: -6.895598411560059
    7. '```' → logprob: -7.395598411560059
    8. ']*' → logprob: -7.645598411560059
    9. ',' → logprob: -7.645598411560059
    10. '*l' → logprob: -8.145598411560059

Token 100: '*' (ID: 9)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8268235921859741
    2. '*' → logprob: -1.5768235921859741
    3. 'a' → logprob: -1.7018235921859741
    4. 'int' → logprob: -2.3268237113952637
    5. '*a' → logprob: -4.451823711395264
    6. '*b' → logprob: -4.701823711395264
    7. '0' → logprob: -5.076823711395264
    8. 'c' → logprob: -5.326823711395264
    9. 'W' → logprob: -5.451823711395264
    10. ']' → logprob: -5.826823711395264

Token 101: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.43793579936027527
    2. 'b' → logprob: -1.0629358291625977
    3. 'filter' → logprob: -5.437935829162598
    4. 'l' → logprob: -6.562935829162598
    5. 'map' → logprob: -6.687935829162598
    6. ' a' → logprob: -7.687935829162598
    7. ' b' → logprob: -8.187935829162598
    8. 'acc' → logprob: -8.312935829162598
    9. 'reduce' → logprob: -8.812935829162598
    10. ' ' → logprob: -9.062935829162598

Token 102: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10315733402967453
    2. '0' → logprob: -2.3531572818756104
    3. ' ' → logprob: -6.8531575202941895
    4. '[' → logprob: -7.2281575202941895
    5. 'b' → logprob: -7.7281575202941895
    6. '   ' → logprob: -8.603157043457031
    7. '(' → logprob: -8.728157043457031
    8. '
' → logprob: -8.978157043457031
    9. ',' → logprob: -10.353157043457031
    10. '-' → logprob: -10.353157043457031

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04492119699716568
    2. '0' → logprob: -3.5449211597442627
    3. 'b' → logprob: -4.294921398162842
    4. 'l' → logprob: -7.044921398162842
    5. '(' → logprob: -8.794920921325684
    6. 'a' → logprob: -8.919920921325684
    7. '[' → logprob: -9.044920921325684
    8. ' ' → logprob: -10.419920921325684
    9. '   ' → logprob: -10.919920921325684
    10. '       ' → logprob: -11.482420921325684

Token 104: '],[' (ID: 32964)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0515884160995483
    2. ',b' → logprob: -1.1765884160995483
    3. 'b' → logprob: -1.9265884160995483
    4. '],' → logprob: -1.9265884160995483
    5. ']+' → logprob: -3.551588535308838
    6. ']' → logprob: -5.301588535308838
    7. 'Y' → logprob: -6.301588535308838
    8. '           ' → logprob: -6.301588535308838
    9. '],[' → logprob: -6.301588535308838
    10. '][' → logprob: -6.551588535308838

Token 105: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08699989318847656
    2. 'int' → logprob: -2.7119998931884766
    3. '*' → logprob: -5.086999893188477
    4. 'filter' → logprob: -6.086999893188477
    5. 'map' → logprob: -6.711999893188477
    6. 'lambda' → logprob: -7.086999893188477
    7. 'len' → logprob: -7.336999893188477
    8. '*b' → logprob: -7.336999893188477
    9. 'input' → logprob: -7.461999893188477
    10. '(int' → logprob: -7.711999893188477

Token 106: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.15323422849178314
    2. ']])' → logprob: -2.4032342433929443
    3. '0' → logprob: -3.9032342433929443
    4. ']],' → logprob: -4.528234004974365
    5. ']' → logprob: -4.528234004974365
    6. '])' → logprob: -6.028234004974365
    7. '[' → logprob: -6.403234004974365
    8. ' ]' → logprob: -6.653234004974365
    9. '1' → logprob: -7.403234004974365
    10. '```' → logprob: -7.653234004974365

Token 107: '),' (ID: 936)
  Prédit: ']),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']),' → logprob: -0.46964961290359497
    2. '),' → logprob: -2.21964955329895
    3. ')' → logprob: -2.71964955329895
    4. '])' → logprob: -2.84464955329895
    5. '[' → logprob: -3.09464955329895
    6. ' if' → logprob: -4.219649791717529
    7. ']))' → logprob: -4.469649791717529
    8. ')),' → logprob: -4.594649791717529
    9. '])[' → logprob: -4.844649791717529
    10. ']' → logprob: -4.969649791717529

Token 108: 'l' (ID: 75)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.22477270662784576
    2. 'filter' → logprob: -2.3497726917266846
    3. ' input' → logprob: -2.3497726917266846
    4. ' filter' → logprob: -4.974772930145264
    5. 'lambda' → logprob: -7.224772930145264
    6. '[input' → logprob: -7.474772930145264
    7. 'X' → logprob: -7.724772930145264
    8. '           ' → logprob: -8.224772453308105
    9. ' lambda' → logprob: -8.724772453308105
    10. '(input' → logprob: -8.849772453308105

Token 109: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7210519313812256
    2. ',' → logprob: -0.8460519313812256
    3. '),' → logprob: -3.4710519313812256
    4. '.split' → logprob: -4.096052169799805
    5. '[' → logprob: -4.596052169799805
    6. '))' → logprob: -4.596052169799805
    7. ',input' → logprob: -5.596052169799805
    8. ' ,' → logprob: -6.096052169799805
    9. ')[' → logprob: -6.096052169799805
    10. ')>' → logprob: -6.721052169799805

Token 110: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03454022482037544
    2. '([' → logprob: -4.159540176391602
    3. '([],' → logprob: -4.409540176391602
    4. '[' → logprob: -5.659540176391602
    5. ' (' → logprob: -6.909540176391602
    6. '(lambda' → logprob: -7.284540176391602
    7. '(None' → logprob: -7.909540176391602
    8. '([]' → logprob: -8.659540176391602
    9. '('',' → logprob: -9.659540176391602
    10. '(['' → logprob: -9.659540176391602

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06383397430181503
    2. '[],' → logprob: -2.9388339519500732
    3. '[' → logprob: -5.563834190368652
    4. '(' → logprob: -5.938834190368652
    5. 'None' → logprob: -7.438834190368652
    6. '[]' → logprob: -7.688834190368652
    7. ' ' → logprob: -7.813834190368652
    8. '1' → logprob: -8.938834190368652
    9. 'W' → logprob: -9.438834190368652
    10. 'False' → logprob: -9.438834190368652

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4763411283493042
    2. ',[' → logprob: -0.9763411283493042
    3. '[' → logprob: -7.101341247558594
    4. ',None' → logprob: -7.726341247558594
    5. ',(' → logprob: -8.351341247558594
    6. '0' → logprob: -8.476341247558594
    7. ' ,' → logprob: -8.851341247558594
    8. ',['' → logprob: -8.976341247558594
    9. ' ,[' → logprob: -9.351341247558594
    10. ',int' → logprob: -10.851341247558594

Token 113: '[]' (ID: 1951)
  Prédit: '[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.016364894807338715
    2. '[])' → logprob: -5.141365051269531
    3. '[],' → logprob: -5.641365051269531
    4. ' []' → logprob: -6.141365051269531
    5. '[' → logprob: -6.266365051269531
    6. '[]
' → logprob: -6.516365051269531
    7. '[]}' → logprob: -7.891365051269531
    8. '0' → logprob: -8.391365051269531
    9. ' [])' → logprob: -8.641365051269531
    10. ' ' → logprob: -9.516365051269531

Token 114: '))[' (ID: 101036)
  Prédit: '))['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))[' → logprob: -0.054315414279699326
    2. '))' → logprob: -3.3043153285980225
    3. ')[' → logprob: -4.804315567016602
    4. ')' → logprob: -5.804315567016602
    5. ')),' → logprob: -6.304315567016602
    6. '[' → logprob: -6.929315567016602
    7. '0' → logprob: -7.429315567016602
    8. ')))' → logprob: -7.429315567016602
    9. '),' → logprob: -7.679315567016602
    10. ' ' → logprob: -9.429315567016602

Token 115: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.578177273273468
    2. '1' → logprob: -0.828177273273468
    3. ')' → logprob: -7.203177452087402
    4. ' ' → logprob: -7.578177452087402
    5. 'lambda' → logprob: -9.078177452087402
    6. '-' → logprob: -9.328177452087402
    7. 'len' → logprob: -9.453177452087402
    8. 'W' → logprob: -9.515677452087402
    9. '2' → logprob: -9.515677452087402
    10. '
' → logprob: -9.578177452087402

Token 116: '])(' (ID: 164063)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.513564944267273
    2. ')' → logprob: -1.263564944267273
    3. '])[' → logprob: -3.2635650634765625
    4. '))' → logprob: -4.0135650634765625
    5. ']))' → logprob: -4.0135650634765625
    6. ')[' → logprob: -4.2635650634765625
    7. ']),' → logprob: -4.3885650634765625
    8. '),' → logprob: -5.1385650634765625
    9. ')])' → logprob: -6.2635650634765625
    10. '})' → logprob: -6.6385650634765625

Token 117: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03035675548017025
    2. 'list' → logprob: -4.7803568840026855
    3. '[input' → logprob: -5.0303568840026855
    4. 'map' → logprob: -5.1553568840026855
    5. 'range' → logprob: -6.0303568840026855
    6. 'filter' → logprob: -6.5303568840026855
    7. ' input' → logprob: -6.5303568840026855
    8. '(input' → logprob: -6.9053568840026855
    9. '[' → logprob: -7.7803568840026855
    10. 'X' → logprob: -7.7803568840026855

Token 118: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.167648876318708e-05
    2. '()' → logprob: -10.125041961669922
    3. '()).' → logprob: -14.000041961669922
    4. '()
' → logprob: -15.500041961669922
    5. '())' → logprob: -15.750041961669922
    6. '()[' → logprob: -16.375041961669922
    7. ' ().' → logprob: -16.375041961669922
    8. '().__' → logprob: -17.125041961669922
    9. '()].' → logprob: -17.250041961669922
    10. '(' → logprob: -17.250041961669922

Token 119: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.176947600673884e-05
    2. ' split' → logprob: -10.875021934509277
    3. 'strip' → logprob: -13.000021934509277
    4. '(split' → logprob: -15.250021934509277
    5. 'rstrip' → logprob: -15.625021934509277
    6. 'spl' → logprob: -16.37502098083496
    7. 'startswith' → logprob: -17.62502098083496
    8. '.split' → logprob: -17.75002098083496
    9. ')' → logprob: -18.37502098083496
    10. '```' → logprob: -18.62502098083496

Token 120: '()),' (ID: 24379)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.11924780905246735
    2. ')' → logprob: -2.2442479133605957
    3. '()' → logprob: -5.744247913360596
    4. '()),' → logprob: -6.369247913360596
    5. '),' → logprob: -6.994247913360596
    6. '))' → logprob: -8.494247436523438
    7. '()))' → logprob: -8.869247436523438
    8. '(),' → logprob: -9.494247436523438
    9. '())
' → logprob: -9.869247436523438
    10. ' ())' → logprob: -11.119247436523438

Token 121: '\
' (ID: 12179)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.14925192296504974
    2. '(' → logprob: -2.774251937866211
    3. '(lambda' → logprob: -3.649251937866211
    4. '           ' → logprob: -4.399251937866211
    5. '[' → logprob: -5.399251937866211
    6. ' ' → logprob: -5.524251937866211
    7. ' W' → logprob: -5.524251937866211
    8. 'W' → logprob: -5.774251937866211
    9. 'input' → logprob: -5.899251937866211
    10. '(input' → logprob: -5.899251937866211

Token 122: '           ' (ID: 352)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04859282076358795
    2. '(' → logprob: -3.5485928058624268
    3. '(lambda' → logprob: -4.298593044281006
    4. '(input' → logprob: -5.923593044281006
    5. 'lambda' → logprob: -7.048593044281006
    6. 'input' → logprob: -7.298593044281006
    7. ' ' → logprob: -8.048592567443848
    8. '[' → logprob: -9.173592567443848
    9. '(
' → logprob: -9.923592567443848
    10. ' lambda' → logprob: -10.048592567443848

Token 123: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4486091136932373
    2. '(input' → logprob: -2.0736091136932373
    3. '(lambda' → logprob: -2.1986091136932373
    4. '(' (adapté à ' (') → logprob: -2.5736091136932373
    5. 'input' → logprob: -3.3236091136932373
    6. 'lambda' → logprob: -5.323609352111816
    7. '(int' → logprob: -5.823609352111816
    8. 'int' → logprob: -6.948609352111816
    9. ' input' → logprob: -7.073609352111816
    10. '0' → logprob: -7.448609352111816

Token 124: 'lambda' (ID: 35280)
  Prédit: 'lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.01567569188773632
    2. 'input' → logprob: -4.3906755447387695
    3. ' lambda' → logprob: -6.2656755447387695
    4. 'int' → logprob: -7.2656755447387695
    5. '(lambda' → logprob: -7.6406755447387695
    6. ' input' → logprob: -10.39067554473877
    7. ')' → logprob: -11.01567554473877
    8. '0' → logprob: -12.26567554473877
    9. '(input' → logprob: -12.26567554473877
    10. '=lambda' → logprob: -12.51567554473877

Token 125: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2858990728855133
    2. 'l' → logprob: -1.410899043083191
    3. 'lambda' → logprob: -6.5358991622924805
    4. ' input' → logprob: -6.7858991622924805
    5. 'input' → logprob: -6.7858991622924805
    6. ' lambda' → logprob: -7.0358991622924805
    7. ' ' → logprob: -10.16089916229248
    8. 'int' → logprob: -11.66089916229248
    9. ' x' → logprob: -11.91089916229248
    10. ')' → logprob: -11.91089916229248

Token 126: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002631238894537091
    2. ':l' → logprob: -9.125263214111328
    3. '=input' → logprob: -9.750263214111328
    4. 'input' → logprob: -10.250263214111328
    5. '(input' → logprob: -11.000263214111328
    6. 'l' → logprob: -11.125263214111328
    7. ' :' → logprob: -11.375263214111328
    8. '[input' → logprob: -12.000263214111328
    9. ',input' → logprob: -13.000263214111328
    10. ' l' → logprob: -13.125263214111328

Token 127: ' list' (ID: 1562)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.3374176621437073
    2. 'input' → logprob: -1.5874176025390625
    3. 'int' → logprob: -2.8374176025390625
    4. ' input' → logprob: -4.7124176025390625
    5. ' reduce' → logprob: -4.8374176025390625
    6. 'filter' → logprob: -6.3374176025390625
    7. ' int' → logprob: -6.5874176025390625
    8. 'list' → logprob: -6.9624176025390625
    9. 'lambda' → logprob: -6.9624176025390625
    10. '[int' → logprob: -7.9624176025390625

Token 128: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.14404690265655518
    2. '(input' → logprob: -2.6440467834472656
    3. '(l' → logprob: -3.2690467834472656
    4. '(filter' → logprob: -3.7690467834472656
    5. '(' → logprob: -6.894046783447266
    6. '(lambda' → logprob: -8.144046783447266
    7. 'map' → logprob: -8.519046783447266
    8. '(int' → logprob: -9.019046783447266
    9. ')' → logprob: -9.394046783447266
    10. '(range' → logprob: -9.769046783447266

Token 129: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004876384977251291
    2. 'int' → logprob: -5.754876613616943
    3. '(lambda' → logprob: -6.754876613616943
    4. '   ' → logprob: -8.754876136779785
    5. '(' → logprob: -9.004876136779785
    6. '(str' → logprob: -9.379876136779785
    7. '
' → logprob: -10.754876136779785
    8. ' (' → logprob: -11.004876136779785
    9. '           ' → logprob: -11.129876136779785
    10. '    ' → logprob: -11.254876136779785

Token 130: ',l' (ID: 45198)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04496314004063606
    2. ',input' → logprob: -3.7949631214141846
    3. ')' → logprob: -5.169963359832764
    4. ')(' → logprob: -5.544963359832764
    5. '<|end|>' → logprob: -5.544963359832764
    6. '(l' → logprob: -6.294963359832764
    7. ',' → logprob: -6.419963359832764
    8. '(' → logprob: -6.669963359832764
    9. '))' → logprob: -6.794963359832764
    10. 'input' → logprob: -6.919963359832764

Token 131: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.18451820313930511
    2. ')),' → logprob: -2.0595180988311768
    3. ')))' → logprob: -3.5595180988311768
    4. '))),' → logprob: -4.934518337249756
    5. ')),
' → logprob: -5.809518337249756
    6. ')))),' → logprob: -7.684518337249756
    7. '()' → logprob: -7.809518337249756
    8. '()))' → logprob: -8.309517860412598
    9. ')' → logprob: -8.434517860412598
    10. '))[' → logprob: -8.434517860412598

Token 132: ')(' (ID: 4898)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.501864492893219
    2. '(input' → logprob: -1.0018644332885742
    3. '<|end|>' → logprob: -3.876864433288574
    4. ')(' → logprob: -6.751864433288574
    5. '[input' → logprob: -6.876864433288574
    6. '(' → logprob: -6.876864433288574
    7. ',input' → logprob: -7.001864433288574
    8. '[' → logprob: -7.376864433288574
    9. '<|end|>' → logprob: -8.001864433288574
    10. '),' → logprob: -8.001864433288574

Token 133: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00013834332639817148
    2. ' input' → logprob: -9.500138282775879
    3. '(input' → logprob: -10.000138282775879
    4. '[input' → logprob: -11.375138282775879
    5. '[' → logprob: -13.625138282775879
    6. '['' → logprob: -14.000138282775879
    7. '<input' → logprob: -14.000138282775879
    8. ')' → logprob: -14.000138282775879
    9. '   ' → logprob: -14.375138282775879
    10. '
' → logprob: -14.875138282775879

Token 134: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00026884564431384206
    2. '()' → logprob: -8.250268936157227
    3. '())' → logprob: -12.375268936157227
    4. '()).' → logprob: -13.625268936157227
    5. '()),' → logprob: -14.250268936157227
    6. ')' → logprob: -15.000268936157227
    7. '()
' → logprob: -15.000268936157227
    8. '()[' → logprob: -15.125268936157227
    9. '()))' → logprob: -16.125268936157227
    10. '().__' → logprob: -16.500268936157227

Token 135: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.696889623621246e-06
    2. 'strip' → logprob: -13.87500286102295
    3. '(split' → logprob: -14.37500286102295
    4. ' split' → logprob: -14.75000286102295
    5. 'rstrip' → logprob: -14.87500286102295
    6. 'spl' → logprob: -15.00000286102295
    7. '```' → logprob: -17.875001907348633
    8. ')' → logprob: -18.250001907348633
    9. 'startswith' → logprob: -18.250001907348633
    10. '.split' → logprob: -18.625001907348633

Token 136: '()),' (ID: 24379)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.020365526899695396
    2. '()),' → logprob: -4.0203657150268555
    3. '()' → logprob: -6.6453657150268555
    4. ')' → logprob: -7.2703657150268555
    5. '()),
' → logprob: -8.895365715026855
    6. '())
' → logprob: -10.395365715026855
    7. '()))' → logprob: -10.895365715026855
    8. '),' → logprob: -11.020365715026855
    9. '(),' → logprob: -12.020365715026855
    10. ' ())' → logprob: -12.645365715026855

Token 137: '\
' (ID: 12179)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5026779174804688
    2. ' (' → logprob: -1.6276779174804688
    3. '(lambda' → logprob: -1.7526779174804688
    4. '           ' → logprob: -4.127677917480469
    5. '(l' → logprob: -5.377677917480469
    6. '(input' → logprob: -5.752677917480469
    7. '            ' → logprob: -7.502677917480469
    8. '          ' → logprob: -7.752677917480469
    9. 'lambda' → logprob: -8.752677917480469
    10. '(list' → logprob: -9.877677917480469

Token 138: '           ' (ID: 352)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.1398334801197052
    2. '(input' → logprob: -2.889833450317383
    3. '(list' → logprob: -3.139833450317383
    4. ' (' → logprob: -3.764833450317383
    5. 'list' → logprob: -5.639833450317383
    6. '(' → logprob: -6.264833450317383
    7. '(l' → logprob: -6.264833450317383
    8. 'lambda' → logprob: -7.639833450317383
    9. '(int' → logprob: -8.139833450317383
    10. ' list' → logprob: -8.764833450317383

Token 139: ' (' (ID: 350)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.14783065021038055
    2. '(list' → logprob: -2.6478307247161865
    3. 'list' → logprob: -2.8978307247161865
    4. '(input' → logprob: -5.272830486297607
    5. '(' (adapté à ' (') → logprob: -5.522830486297607
    6. '(l' → logprob: -6.897830486297607
    7. ' (' → logprob: -7.772830486297607
    8. 'lambda' → logprob: -7.772830486297607
    9. '(int' → logprob: -8.522830963134766
    10. ' list' → logprob: -9.772830963134766

Token 140: 'lambda' (ID: 35280)
  Prédit: 'lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.4511144757270813
    2. 'input' → logprob: -1.0761144161224365
    3. '(lambda' → logprob: -4.326114654541016
    4. 'list' → logprob: -4.951114654541016
    5. '(input' → logprob: -6.576114654541016
    6. ' lambda' → logprob: -8.576114654541016
    7. ' input' → logprob: -9.201114654541016
    8. 'int' → logprob: -9.826114654541016
    9. ' (' → logprob: -10.451114654541016
    10. ')' → logprob: -10.701114654541016

Token 141: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.043226297944784164
    2. ' l' → logprob: -3.1682262420654297
    3. 'lambda' → logprob: -9.54322624206543
    4. 'list' → logprob: -9.79322624206543
    5. 'input' → logprob: -10.16822624206543
    6. ' input' → logprob: -11.54322624206543
    7. ' list' → logprob: -11.54322624206543
    8. ' lambda' → logprob: -12.04322624206543
    9. ' ' → logprob: -12.16822624206543
    10. ')' → logprob: -12.41822624206543

Token 142: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.615255839889869e-05
    2. ':l' → logprob: -10.000096321105957
    3. ' :' → logprob: -10.500096321105957
    4. '=' → logprob: -11.875096321105957
    5. ':list' → logprob: -12.125096321105957
    6. 'l' → logprob: -12.375096321105957
    7. '=input' → logprob: -12.750096321105957
    8. '=l' → logprob: -14.125096321105957
    9. '=list' → logprob: -14.125096321105957
    10. ' l' → logprob: -15.000096321105957

Token 143: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0011504596332088113
    2. ' list' → logprob: -6.876150608062744
    3. 'input' → logprob: -9.126150131225586
    4. 'map' → logprob: -12.626150131225586
    5. 'int' → logprob: -13.751150131225586
    6. 'l' → logprob: -13.876150131225586
    7. ' input' → logprob: -13.876150131225586
    8. 'lambda' → logprob: -14.001150131225586
    9. '[input' → logprob: -14.501150131225586
    10. '[list' → logprob: -15.251150131225586

Token 144: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0008016457431949675
    2. 'list' → logprob: -7.6258015632629395
    3. '0' → logprob: -9.375802040100098
    4. '*' → logprob: -9.750802040100098
    5. ' int' → logprob: -10.125802040100098
    6. 'map' → logprob: -10.500802040100098
    7. 'input' → logprob: -10.625802040100098
    8. '(int' → logprob: -11.125802040100098
    9. '[int' → logprob: -11.375802040100098
    10. '
' → logprob: -11.750802040100098

Token 145: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5556417107582092
    2. '(l' → logprob: -1.5556416511535645
    3. '(i' → logprob: -1.6806416511535645
    4. '(c' → logprob: -4.0556416511535645
    5. '(s' → logprob: -5.1806416511535645
    6. '(' → logprob: -6.0556416511535645
    7. '(_)' → logprob: -6.8056416511535645
    8. '(v' → logprob: -7.4306416511535645
    9. '(b' → logprob: -8.055642127990723
    10. '(_' → logprob: -8.055642127990723

Token 146: ')' (ID: 8)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4434322714805603
    2. ')' → logprob: -1.068432331085205
    3. '(l' → logprob: -4.443432331085205
    4. ' for' → logprob: -6.568432331085205
    5. '(s' → logprob: -7.693432331085205
    6. '(i' → logprob: -7.943432331085205
    7. 'for' → logprob: -8.943431854248047
    8. '(y' → logprob: -9.068431854248047
    9. '.strip' → logprob: -9.318431854248047
    10. ')x' → logprob: -10.193431854248047

Token 147: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1516161561012268
    2. ' for' → logprob: -2.276616096496582
    3. 'for' → logprob: -3.276616096496582
    4. 'x' → logprob: -9.026616096496582
    5. ')' → logprob: -9.776616096496582
    6. ' ' → logprob: -10.776616096496582
    7. '(l' → logprob: -10.901616096496582
    8. '(s' → logprob: -11.026616096496582
    9. '(' → logprob: -11.151616096496582
    10. ' (' → logprob: -11.276616096496582

Token 148: ' x' (ID: 1215)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03138883411884308
    2. ' input' → logprob: -4.031388759613037
    3. 'l' → logprob: -4.406388759613037
    4. ' l' → logprob: -7.531388759613037
    5. '(input' → logprob: -7.906388759613037
    6. 'x' → logprob: -10.781389236450195
    7. 'list' → logprob: -11.906389236450195
    8. '(l' → logprob: -12.531389236450195
    9. '
' → logprob: -13.281389236450195
    10. ',input' → logprob: -13.406389236450195

Token 149: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14068442583084106
    2. 'x' → logprob: -2.1406843662261963
    3. 'in' → logprob: -4.640684604644775
    4. ' x' → logprob: -5.765684604644775
    5. 'l' → logprob: -8.265684127807617
    6. 'input' → logprob: -8.265684127807617
    7. '(x' → logprob: -8.390684127807617
    8. ' input' → logprob: -9.890684127807617
    9. ' l' → logprob: -10.265684127807617
    10. ' ' → logprob: -11.140684127807617

Token 150: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.40449321269989014
    2. 'l' → logprob: -1.1544932126998901
    3. ' input' → logprob: -4.27949333190918
    4. ' l' → logprob: -5.65449333190918
    5. '(input' → logprob: -9.27949333190918
    6. 'list' → logprob: -11.15449333190918
    7. '(l' → logprob: -13.65449333190918
    8. 'range' → logprob: -13.77949333190918
    9. '_l' → logprob: -14.15449333190918
    10. '[input' → logprob: -14.15449333190918

Token 151: '])(' (ID: 164063)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.04575612023472786
    2. ')' → logprob: -4.0457563400268555
    3. ')])' → logprob: -4.4207563400268555
    4. '])(' → logprob: -5.5457563400268555
    5. ']' → logprob: -5.9207563400268555
    6. '.split' → logprob: -6.1707563400268555
    7. ']))' → logprob: -6.2957563400268555
    8. '])]' → logprob: -6.5457563400268555
    9. 'input' → logprob: -6.9207563400268555
    10. ')]' → logprob: -6.9207563400268555

Token 152: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -2.629921436891891e-05
    2. ' input' → logprob: -11.00002670288086
    3. '(input' → logprob: -11.62502670288086
    4. '[input' → logprob: -15.12502670288086
    5. '<input' → logprob: -16.12502670288086
    6. '
' → logprob: -17.50002670288086
    7. '.input' → logprob: -17.62502670288086
    8. 'list' → logprob: -17.87502670288086
    9. '	input' → logprob: -17.87502670288086
    10. ',input' → logprob: -18.00002670288086

Token 153: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.080963092041202e-06
    2. '()' → logprob: -12.375004768371582
    3. '()[' → logprob: -14.250004768371582
    4. '.split' → logprob: -17.0000057220459
    5. ' ().' → logprob: -17.0000057220459
    6. ').' → logprob: -17.5000057220459
    7. '()
' → logprob: -18.0000057220459
    8. '().__' → logprob: -18.1250057220459
    9. '())' → logprob: -18.2500057220459
    10. ')' → logprob: -18.3750057220459

Token 154: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.2200749754119897e-06
    2. ' split' → logprob: -13.250001907348633
    3. 'strip' → logprob: -15.250001907348633
    4. '(split' → logprob: -16.250001907348633
    5. 'spl' → logprob: -19.125001907348633
    6. ')' → logprob: -19.250001907348633
    7. 'rstrip' → logprob: -19.250001907348633
    8. '.split' → logprob: -19.250001907348633
    9. 'plit' → logprob: -19.375001907348633
    10. '_split' → logprob: -19.625001907348633

Token 155: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003066718578338623
    2. ')' → logprob: -6.378066539764404
    3. '()' → logprob: -6.628066539764404
    4. '()))' → logprob: -10.878067016601562
    5. '())
' → logprob: -11.378067016601562
    6. '();)' → logprob: -13.128067016601562
    7. '());' → logprob: -13.503067016601562
    8. ' ())' → logprob: -13.503067016601562
    9. '))' → logprob: -13.628067016601562
    10. '()]' → logprob: -13.753067016601562

Token 156: 'W' (ID: 54)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 158: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.18143366277217865
    2. ' H' → logprob: -1.8064336776733398
    3. 'W' → logprob: -6.80643367767334
    4. '<|end|>' → logprob: -8.43143367767334
    5. ' W' → logprob: -8.93143367767334
    6. ' ' → logprob: -8.93143367767334
    7. ' ' → logprob: -10.93143367767334
    8. ''' → logprob: -11.30643367767334
    9. '[' → logprob: -11.55643367767334
    10. 'int' → logprob: -12.55643367767334

Token 159: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3992849886417389
    2. ',' → logprob: -1.1492849588394165
    3. ' (' → logprob: -4.774284839630127
    4. '<|end|>' → logprob: -6.524284839630127
    5. ',
' → logprob: -6.899284839630127
    6. '=' → logprob: -8.524285316467285
    7. '
' → logprob: -8.524285316467285
    8. ')' → logprob: -8.774285316467285
    9. ',(' → logprob: -9.024285316467285
    10. 'W' → logprob: -9.274285316467285

Token 160: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.03372660651803017
    2. ' X' → logprob: -3.408726692199707
    3. 'list' → logprob: -10.783726692199707
    4. ' or' → logprob: -11.533726692199707
    5. ',' → logprob: -11.658726692199707
    6. '[' → logprob: -11.908726692199707
    7. 'Y' → logprob: -12.033726692199707
    8. ' ' → logprob: -12.283726692199707
    9. 'W' → logprob: -12.283726692199707
    10. '<|end|>' → logprob: -12.533726692199707

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.484873503446579
    2. '<|end|>' → logprob: -0.9848735332489014
    3. '[' → logprob: -5.609873294830322
    4. ',W' → logprob: -5.859873294830322
    5. ')' → logprob: -6.734873294830322
    6. ',
' → logprob: -7.234873294830322
    7. '<|end|>' → logprob: -7.359873294830322
    8. ',X' → logprob: -7.609873294830322
    9. '
' → logprob: -8.10987377166748
    10. 'W' → logprob: -8.73487377166748

Token 162: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.03804642707109451
    2. ' Y' → logprob: -3.288046360015869
    3. ' ' → logprob: -13.163046836853027
    4. ',Y' → logprob: -14.288046836853027
    5. '	Y' → logprob: -14.413046836853027
    6. '[' → logprob: -14.538046836853027
    7. '<|end|>' → logprob: -14.788046836853027
    8. '   ' → logprob: -15.163046836853027
    9. ',' → logprob: -15.913046836853027
    10. '_Y' → logprob: -16.03804588317871

Token 163: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: ' map' (ID: 4014)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.03346114233136177
    2. ' W' → logprob: -3.783461093902588
    3. 'int' → logprob: -5.408461093902588
    4. 'list' → logprob: -6.033461093902588
    5. 'map' → logprob: -6.783461093902588
    6. '[' → logprob: -7.533461093902588
    7. '[int' → logprob: -7.658461093902588
    8. ' int' → logprob: -8.533461570739746
    9. ' map' → logprob: -8.533461570739746
    10. ' list' → logprob: -8.908461570739746

Token 165: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03043191321194172
    2. '(' → logprob: -4.280431747436523
    3. '(lambda' → logprob: -4.280431747436523
    4. 'int' → logprob: -6.905431747436523
    5. '(list' → logprob: -7.030431747436523
    6. 'list' → logprob: -9.155431747436523
    7. '(abs' → logprob: -9.405431747436523
    8. '(str' → logprob: -9.530431747436523
    9. '(
' → logprob: -9.780431747436523
    10. 'lambda' → logprob: -10.655431747436523

Token 166: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3641913831233978
    2. ',input' → logprob: -1.3641914129257202
    3. ',' → logprob: -3.7391912937164307
    4. 'input' → logprob: -4.11419153213501
    5. ')' → logprob: -4.73919153213501
    6. '[input' → logprob: -8.114191055297852
    7. '(' → logprob: -8.739191055297852
    8. ' input' → logprob: -9.114191055297852
    9. '<input' → logprob: -10.489191055297852
    10. 'W' → logprob: -10.739191055297852

Token 167: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.015568425878882408
    2. ' input' → logprob: -5.265568256378174
    3. '(input' → logprob: -5.390568256378174
    4. '[input' → logprob: -5.765568256378174
    5. 'W' → logprob: -6.140568256378174
    6. ')' → logprob: -9.015568733215332
    7. '[' → logprob: -9.640568733215332
    8. ' W' → logprob: -9.640568733215332
    9. 'f' → logprob: -10.015568733215332
    10. ',input' → logprob: -10.765568733215332

Token 168: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00023321842309087515
    2. '())' → logprob: -8.50023365020752
    3. '()' → logprob: -10.50023365020752
    4. ')' → logprob: -13.25023365020752
    5. '()[' → logprob: -16.125232696533203
    6. '()),' → logprob: -16.375232696533203
    7. '()))' → logprob: -16.750232696533203
    8. '.split' → logprob: -16.875232696533203
    9. '(' → logprob: -17.000232696533203
    10. 'split' → logprob: -17.375232696533203

Token 169: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019426802173256874
    2. 'strip' → logprob: -6.2519426345825195
    3. 'rstrip' → logprob: -12.00194263458252
    4. ')' → logprob: -12.50194263458252
    5. '().' → logprob: -13.12694263458252
    6. ' split' → logprob: -13.75194263458252
    7. 'read' → logprob: -14.62694263458252
    8. '.split' → logprob: -15.62694263458252
    9. '(split' → logprob: -16.001943588256836
    10. '())' → logprob: -16.251943588256836

Token 170: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01844700798392296
    2. ')' → logprob: -4.143446922302246
    3. '()' → logprob: -6.143446922302246
    4. '()))' → logprob: -8.893446922302246
    5. '()[' → logprob: -9.643446922302246
    6. '))' → logprob: -10.518446922302246
    7. '())
' → logprob: -11.768446922302246
    8. '(),' → logprob: -12.518446922302246
    9. '()),' → logprob: -12.643446922302246
    10. ' ())' → logprob: -12.643446922302246

Token 171: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: '(re' (ID: 8178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5726119875907898
    2. '(W' → logprob: -1.5726120471954346
    3. '(X' → logprob: -1.8226120471954346
    4. '(sum' → logprob: -3.9476120471954346
    5. '()' → logprob: -4.0726118087768555
    6. '(max' → logprob: -4.5726118087768555
    7. '((' → logprob: -4.6976118087768555
    8. '('' → logprob: -5.1976118087768555
    9. '(or' → logprob: -6.8226118087768555
    10. '(*' → logprob: -7.0726118087768555

Token 173: 'duce' (ID: 21375)
  Prédit: 'duce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duce' → logprob: -0.07375576347112656
    2. 'verse' → logprob: -3.5737557411193848
    3. 's' → logprob: -3.9487557411193848
    4. 'duced' → logprob: -5.573755741119385
    5. 'versed' → logprob: -5.573755741119385
    6. 'f' → logprob: -6.073755741119385
    7. 'd' → logprob: -6.448755741119385
    8. 'sum' → logprob: -6.573755741119385
    9. 'Verse' → logprob: -6.573755741119385
    10. 'pr' → logprob: -6.698755741119385

Token 174: '(lambda' (ID: 43341)
  Prédit: '(or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(or' → logprob: -0.6633195281028748
    2. '(' → logprob: -1.4133195877075195
    3. '(m' → logprob: -1.5383195877075195
    4. '(lambda' → logprob: -3.9133195877075195
    5. '(operator' → logprob: -5.0383195877075195
    6. '(and' → logprob: -9.78831958770752
    7. ')' → logprob: -10.16331958770752
    8. ' (' → logprob: -10.28831958770752
    9. '(op' → logprob: -10.28831958770752
    10. '(
' → logprob: -10.41331958770752

Token 175: ' a' (ID: 261)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.11830472946167
    2. 'a' → logprob: -1.49330472946167
    3. 'or' → logprob: -1.49330472946167
    4. ' a' → logprob: -1.99330472946167
    5. 'mul' → logprob: -2.99330472946167
    6. ' mul' → logprob: -4.49330472946167
    7. 'lambda' → logprob: -4.99330472946167
    8. 'acc' → logprob: -5.74330472946167
    9. 'x' → logprob: -5.86830472946167
    10. ' ' → logprob: -5.86830472946167

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2268286943435669
    2. ' ,' → logprob: -3.3518285751342773
    3. 'a' → logprob: -3.4768285751342773
    4. 'lambda' → logprob: -3.6018285751342773
    5. ' lambda' → logprob: -3.6018285751342773
    6. 'or' → logprob: -3.8518285751342773
    7. ' or' → logprob: -4.351828575134277
    8. ' a' → logprob: -4.476828575134277
    9. '=' → logprob: -4.976828575134277
    10. 'mul' → logprob: -4.976828575134277

Token 177: ' b' (ID: 287)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.7196893692016602
    2. 'or' → logprob: -1.5946893692016602
    3. ' or' → logprob: -1.7196893692016602
    4. ' mul' → logprob: -2.09468936920166
    5. 'a' → logprob: -6.09468936920166
    6. 'lambda' → logprob: -6.46968936920166
    7. ' a' → logprob: -6.59468936920166
    8. ' lambda' → logprob: -7.46968936920166
    9. ' operator' → logprob: -7.59468936920166
    10. ' ' → logprob: -7.96968936920166

Token 178: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043790899217128754
    2. ':' → logprob: -3.793790817260742
    3. ' ,' → logprob: -4.293790817260742
    4. ' or' → logprob: -5.543790817260742
    5. ',m' → logprob: -7.293790817260742
    6. ' :' → logprob: -7.418790817260742
    7. 'or' → logprob: -7.543790817260742
    8. '   ' → logprob: -8.293790817260742
    9. 'mul' → logprob: -8.418790817260742
    10. '=' → logprob: -8.793790817260742

Token 179: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0250027179718018
    2. 'mul' → logprob: -1.1500027179718018
    3. 'or' → logprob: -2.1500027179718018
    4. ' a' → logprob: -2.2750027179718018
    5. ' or' → logprob: -3.0250027179718018
    6. ' mul' → logprob: -3.0250027179718018
    7. 'eq' → logprob: -5.900002479553223
    8. ' ' → logprob: -7.150002479553223
    9. ' eq' → logprob: -7.400002479553223
    10. ' (' → logprob: -7.525002479553223

Token 180: '*b' (ID: 72162)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.9205802083015442
    2. '*' → logprob: -1.0455801486968994
    3. ' *' → logprob: -2.1705801486968994
    4. '+' → logprob: -2.7955801486968994
    5. 'or' → logprob: -3.1705801486968994
    6. ' +' → logprob: -3.9205801486968994
    7. 'and' → logprob: -5.4205803871154785
    8. ' and' → logprob: -5.5455803871154785
    9. ' mul' → logprob: -6.1705803871154785
    10. 'mul' → logprob: -6.7955803871154785

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10707485675811768
    2. ' ,' → logprob: -2.982074737548828
    3. ')' → logprob: -3.107074737548828
    4. ' )' → logprob: -6.732074737548828
    5. '*' → logprob: -6.857074737548828
    6. ' *' → logprob: -6.857074737548828
    7. ' or' → logprob: -7.357074737548828
    8. '))' → logprob: -7.357074737548828
    9. '),' → logprob: -7.982074737548828
    10. ' if' → logprob: -8.107074737548828

Token 182: ' (' (ID: 350)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.5602635145187378
    2. 'range' → logprob: -1.6852635145187378
    3. 'W' → logprob: -1.8102635145187378
    4. '[' → logprob: -3.5602636337280273
    5. 'Y' → logprob: -4.185263633728027
    6. '[X' → logprob: -4.310263633728027
    7. '(range' → logprob: -4.935263633728027
    8. '(X' → logprob: -5.185263633728027
    9. ' range' → logprob: -5.935263633728027
    10. '[Y' → logprob: -6.435263633728027

Token 183: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.31161800026893616
    2. 'X' → logprob: -1.8116179704666138
    3. '[' → logprob: -3.3116180896759033
    4. 'range' → logprob: -3.5616180896759033
    5. '[X' → logprob: -4.811617851257324
    6. '(W' → logprob: -4.936617851257324
    7. 'list' → logprob: -5.436617851257324
    8. '(X' → logprob: -5.811617851257324
    9. 'Y' → logprob: -5.811617851257324
    10. '[i' → logprob: -6.186617851257324

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0292255878448486
    2. '-' → logprob: -1.2792255878448486
    3. ' -' → logprob: -1.6542255878448486
    4. '-Y' → logprob: -2.4042255878448486
    5. '-X' → logprob: -4.1542253494262695
    6. '+' → logprob: -4.2792253494262695
    7. '[' → logprob: -4.5292253494262695
    8. '[Y' → logprob: -4.6542253494262695
    9. '*' → logprob: -4.7792253494262695
    10. '[X' → logprob: -5.0292253494262695

Token 185: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.06228024140000343
    2. ' H' → logprob: -2.8122801780700684
    3. 'Y' → logprob: -9.312280654907227
    4. ',' → logprob: -9.937280654907227
    5. ' ' → logprob: -9.937280654907227
    6. ')' → logprob: -10.812280654907227
    7. 'X' → logprob: -10.812280654907227
    8. 'W' → logprob: -11.312280654907227
    9. ',H' → logprob: -11.312280654907227
    10. ' Y' → logprob: -11.437280654907227

Token 186: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.26115280389785767
    2. '),' → logprob: -2.136152744293213
    3. ',' → logprob: -2.636152744293213
    4. ')))' → logprob: -3.386152744293213
    5. ')' → logprob: -5.636152744293213
    6. ')),' → logprob: -6.136152744293213
    7. '))
' → logprob: -9.386153221130371
    8. '))*' → logprob: -9.511153221130371
    9. ' ,' → logprob: -9.636153221130371
    10. '*' → logprob: -9.886153221130371

Token 187: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.034724801778793335
    2. '))' → logprob: -3.409724712371826
    3. ')))' → logprob: -7.659724712371826
    4. ',' → logprob: -8.409725189208984
    5. ' )' → logprob: -8.534725189208984
    6. ')*' → logprob: -9.659725189208984
    7. '*' → logprob: -10.159725189208984
    8. ')
' → logprob: -11.159725189208984
    9. '+' → logprob: -11.284725189208984
    10. '),' → logprob: -11.784725189208984

Token 188: ' ' (ID: 220)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.5317668914794922
    2. '2' → logprob: -1.5317668914794922
    3. 'Y' → logprob: -3.406766891479492
    4. '(Y' → logprob: -3.656766891479492
    5. 'X' → logprob: -4.031766891479492
    6. ' reduce' → logprob: -4.031766891479492
    7. '(X' → logprob: -4.156766891479492
    8. ' ' → logprob: -4.156766891479492
    9. '4' → logprob: -4.281766891479492
    10. ' (' → logprob: -4.406766891479492

Token 189: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06672058254480362
    2. 'reduce' → logprob: -3.066720485687256
    3. '4' → logprob: -4.441720485687256
    4. ' ' → logprob: -5.691720485687256
    5. 'len' → logprob: -7.441720485687256
    6. '(' → logprob: -7.441720485687256
    7. 'max' → logprob: -8.066720962524414
    8. 'X' → logprob: -8.191720962524414
    9. 'W' → logprob: -8.441720962524414
    10. '(W' → logprob: -8.566720962524414

Token 190: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.5491004129871726e-05
    2. '))' → logprob: -11.125045776367188
    3. ')
' → logprob: -11.625045776367188
    4. ' )' → logprob: -11.750045776367188
    5. '**' → logprob: -12.750045776367188
    6. ')`' → logprob: -12.875045776367188
    7. '*' → logprob: -13.250045776367188
    8. ')))' → logprob: -13.500045776367188
    9. ')**' → logprob: -14.125045776367188
    10. '`)' → logprob: -14.375045776367188

Token 191: ' int' (ID: 677)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1973479688167572
    2. ' W' → logprob: -3.19734787940979
    3. 'W' → logprob: -3.44734787940979
    4. 'reduce' → logprob: -3.44734787940979
    5. 'end' → logprob: -4.322348117828369
    6. 'sep' → logprob: -4.447348117828369
    7. ' )' → logprob: -4.572348117828369
    8. 'X' → logprob: -4.697348117828369
    9. '))' → logprob: -4.822348117828369
    10. ' sep' → logprob: -5.697348117828369

Token 192: '(eq' (ID: 140881)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2058693170547485
    2. '(W' → logprob: -1.2058693170547485
    3. '(re' → logprob: -1.3308693170547485
    4. '(X' → logprob: -2.955869197845459
    5. '(Y' → logprob: -3.330869197845459
    6. '((' → logprob: -3.830869197845459
    7. ')' → logprob: -4.455869197845459
    8. '(sum' → logprob: -5.955869197845459
    9. 'reduce' → logprob: -6.205869197845459
    10. '(eq' → logprob: -6.580869197845459

Token 193: '((' (ID: 2054)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.8394080996513367
    2. '(X' → logprob: -1.0894081592559814
    3. '(Y' → logprob: -2.2144081592559814
    4. '(' → logprob: -2.7144081592559814
    5. '(or' → logprob: -3.8394081592559814
    6. '((' → logprob: -3.9644081592559814
    7. '(re' → logprob: -5.589407920837402
    8. '(eq' → logprob: -6.089407920837402
    9. '(sum' → logprob: -6.464407920837402
    10. 'X' → logprob: -6.839407920837402

Token 194: 'W' (ID: 54)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.3665623962879181
    2. 'W' → logprob: -1.7415623664855957
    3. 'Y' → logprob: -2.3665623664855957
    4. 'or' → logprob: -4.366562366485596
    5. 'len' → logprob: -5.116562366485596
    6. '0' → logprob: -5.491562366485596
    7. '(X' → logprob: -5.866562366485596
    8. '(W' → logprob: -5.991562366485596
    9. 'reduce' → logprob: -6.241562366485596
    10. ' X' → logprob: -6.741562366485596

Token 195: '/' (ID: 14)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1529756337404251
    2. ' ,' → logprob: -2.902975559234619
    3. ',Y' → logprob: -3.027975559234619
    4. ',X' → logprob: -3.777975559234619
    5. ',H' → logprob: -5.402975559234619
    6. ',W' → logprob: -6.402975559234619
    7. '*' → logprob: -6.652975559234619
    8. ' X' → logprob: -6.902975559234619
    9. '>' → logprob: -7.152975559234619
    10. '==' → logprob: -7.277975559234619

Token 196: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08906007558107376
    2. 'H' → logprob: -2.589060068130493
    3. ' ' → logprob: -4.839060306549072
    4. ' H' → logprob: -6.464060306549072
    5. 'Y' → logprob: -8.339059829711914
    6. 'X' → logprob: -9.089059829711914
    7. '(' → logprob: -10.151559829711914
    8. '   ' → logprob: -10.589059829711914
    9. '

' → logprob: -10.651559829711914
    10. 'W' → logprob: -10.776559829711914

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33950573205947876
    2. '),' → logprob: -2.089505672454834
    3. ' ,' → logprob: -2.464505672454834
    4. '),(' → logprob: -3.339505672454834
    5. ',Y' → logprob: -3.589505672454834
    6. ')' → logprob: -4.714505672454834
    7. ',X' → logprob: -6.339505672454834
    8. ',W' → logprob: -6.714505672454834
    9. '*' → logprob: -6.964505672454834
    10. ' ),' → logprob: -7.089505672454834

Token 198: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.04446624219417572
    2. ' H' → logprob: -3.169466257095337
    3. 'Y' → logprob: -6.919466018676758
    4. '0' → logprob: -9.294466018676758
    5. ' ' → logprob: -9.294466018676758
    6. ' Y' → logprob: -9.419466018676758
    7. 'X' → logprob: -9.794466018676758
    8. 'W' → logprob: -9.919466018676758
    9. ',H' → logprob: -11.294466018676758
    10. '   ' → logprob: -11.356966018676758

Token 199: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.021983053535223007
    2. '),' → logprob: -4.3969831466674805
    3. ' /' → logprob: -5.1469831466674805
    4. '),(' → logprob: -6.7719831466674805
    5. ',' → logprob: -7.2719831466674805
    6. '//' → logprob: -8.14698314666748
    7. ')' → logprob: -8.39698314666748
    8. '2' → logprob: -8.39698314666748
    9. ' ),' → logprob: -8.39698314666748
    10. '[' → logprob: -8.64698314666748

Token 200: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003065030323341489
    2. ' ' → logprob: -8.125306129455566
    3. '4' → logprob: -12.750306129455566
    4. '1' → logprob: -13.437806129455566
    5. '   ' → logprob: -13.687806129455566
    6. '
' → logprob: -13.875306129455566
    7. ')' → logprob: -14.062806129455566
    8. '

' → logprob: -14.375306129455566
    9. 'Y' → logprob: -14.937806129455566
    10. '  ' → logprob: -15.000306129455566

Token 201: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.1284758448600769
    2. ')' → logprob: -2.6284759044647217
    3. '),(' → logprob: -3.3784759044647217
    4. ' ),' → logprob: -4.628475666046143
    5. ')==' → logprob: -6.003475666046143
    6. ',' → logprob: -7.128475666046143
    7. ' )' → logprob: -7.628475666046143
    8. ')))' → logprob: -8.6284761428833
    9. '==' → logprob: -8.8784761428833
    10. '),
' → logprob: -9.2534761428833

Token 202: ' (' (ID: 350)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.013409387320280075
    2. ' (' → logprob: -4.388409614562988
    3. '(' → logprob: -7.388409614562988
    4. '(Y' → logprob: -8.638409614562988
    5. '(tuple' → logprob: -10.638409614562988
    6. '((' → logprob: -11.138409614562988
    7. '   ' → logprob: -11.388409614562988
    8. '(x' → logprob: -11.388409614562988
    9. '(W' → logprob: -11.888409614562988
    10. ' ' → logprob: -11.888409614562988

Token 203: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.07214522361755371
    2. '(X' → logprob: -2.6971452236175537
    3. ' X' → logprob: -6.697145462036133
    4. ' (' → logprob: -7.822145462036133
    5. '(' → logprob: -9.322145462036133
    6. 'tuple' → logprob: -9.322145462036133
    7. ' ' → logprob: -9.447145462036133
    8. '
' → logprob: -9.447145462036133
    9. '   ' → logprob: -10.447145462036133
    10. '(int' → logprob: -10.697145462036133

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023258056491613388
    2. ',Y' → logprob: -4.148258209228516
    3. '/' → logprob: -5.023258209228516
    4. ' ,' → logprob: -8.273258209228516
    5. 'Y' → logprob: -8.773258209228516
    6. ' Y' → logprob: -9.273258209228516
    7. ',y' → logprob: -10.398258209228516
    8. ',
' → logprob: -10.898258209228516
    9. ' /' → logprob: -10.898258209228516
    10. '
' → logprob: -11.273258209228516

Token 205: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0017108784522861242
    2. ' Y' → logprob: -6.376710891723633
    3. ' ' → logprob: -12.501710891723633
    4. '
' → logprob: -12.876710891723633
    5. '	Y' → logprob: -14.251710891723633
    6. '<|end|>' → logprob: -14.501710891723633
    7. '   ' → logprob: -15.126710891723633
    8. ')' → logprob: -15.126710891723633
    9. '  ' → logprob: -15.376710891723633
    10. '

' → logprob: -16.126710891723633

Token 206: '))))' (ID: 57459)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.23507463932037354
    2. '))' → logprob: -1.9850746393203735
    3. ')' → logprob: -2.860074520111084
    4. '))))' → logprob: -4.235074520111084
    5. '))),' → logprob: -9.610074996948242
    6. ')))
' → logprob: -9.735074996948242
    7. ')))),' → logprob: -9.985074996948242
    8. ')),' → logprob: -10.110074996948242
    9. ')));' → logprob: -10.235074996948242
    10. '),' → logprob: -10.860074996948242

Token 207: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 208: ' not' (ID: 625)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.7226071953773499
    2. 'W' → logprob: -1.347607135772705
    3. 'Y' → logprob: -1.847607135772705
    4. '(X' → logprob: -3.597607135772705
    5. '(W' → logprob: -3.972607135772705
    6. ' W' → logprob: -4.472607135772705
    7. '0' → logprob: -4.722607135772705
    8. ' X' → logprob: -4.972607135772705
    9. ' (' → logprob: -5.222607135772705
    10. ' Y' → logprob: -5.472607135772705

Token 209: ' or' (ID: 503)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(W' → logprob: -1.1358609199523926
    2. 'W' → logprob: -1.5108609199523926
    3. '(X' → logprob: -2.2608609199523926
    4. 'X' → logprob: -2.3858609199523926
    5. ' (' → logprob: -2.5108609199523926
    6. 'eq' → logprob: -3.0108609199523926
    7. ' W' → logprob: -3.3858609199523926
    8. '((' → logprob: -3.8858609199523926
    9. '(eq' → logprob: -4.010860919952393
    10. 'Y' → logprob: -4.510860919952393

Token 210: '_' (ID: 62)
  Prédit: '_('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_(' → logprob: -0.47453534603118896
    2. '_' → logprob: -0.974535346031189
    3. '_.' → logprob: -8.34953498840332
    4. '(W' → logprob: -9.47453498840332
    5. '_=' → logprob: -9.97453498840332
    6. '((' → logprob: -10.84953498840332
    7. '_,' → logprob: -11.34953498840332
    8. '_[' → logprob: -11.47453498840332
    9. '_("' → logprob: -11.47453498840332
    10. '_)' → logprob: -11.59953498840332

Token 211: '(*(' (ID: 103513)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.40537184476852417
    2. '(eq' → logprob: -1.655371904373169
    3. '((' → logprob: -2.655371904373169
    4. '(' → logprob: -3.405371904373169
    5. '(*' → logprob: -4.53037166595459
    6. '(*(' → logprob: -5.28037166595459
    7. '(X' → logprob: -5.40537166595459
    8. 'eq' → logprob: -5.65537166595459
    9. '(int' → logprob: -5.78037166595459
    10. '(
' → logprob: -6.28037166595459

Token 212: 'W' (ID: 54)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.49509093165397644
    2. '[
' → logprob: -2.120090961456299
    3. '[int' → logprob: -2.370090961456299
    4. '[x' → logprob: -2.995090961456299
    5. 'map' → logprob: -3.495090961456299
    6. '[(' → logprob: -3.870090961456299
    7. 'eq' → logprob: -3.870090961456299
    8. '(eq' → logprob: -3.870090961456299
    9. '[i' → logprob: -3.995090961456299
    10. '[e' → logprob: -5.995090961456299

Token 213: '/' (ID: 14)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11044374108314514
    2. ' ==' → logprob: -2.8604438304901123
    3. '//' → logprob: -4.360443592071533
    4. ',' → logprob: -4.860443592071533
    5. '<=' → logprob: -5.360443592071533
    6. '-' → logprob: -5.360443592071533
    7. ' ' → logprob: -5.735443592071533
    8. '%' → logprob: -5.860443592071533
    9. '<' → logprob: -6.360443592071533
    10. ' <' → logprob: -6.610443592071533

Token 214: '2' (ID: 17)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.6378058791160583
    2. '==' → logprob: -1.3878059387207031
    3. 'X' → logprob: -2.512805938720703
    4. ' H' → logprob: -3.262805938720703
    5. ',' → logprob: -3.762805938720703
    6. ' ==' → logprob: -3.762805938720703
    7. ' ' → logprob: -4.137805938720703
    8. 'Y' → logprob: -4.387805938720703
    9. ' X' → logprob: -4.512805938720703
    10. '  ' → logprob: -5.512805938720703

Token 215: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5244885087013245
    2. ',' → logprob: -1.2744884490966797
    3. ' ==' → logprob: -2.2744884490966797
    4. ',Y' → logprob: -4.52448844909668
    5. ' ,' → logprob: -5.27448844909668
    6. ' ' → logprob: -5.89948844909668
    7. '!=' → logprob: -6.77448844909668
    8. ',X' → logprob: -7.02448844909668
    9. ')' → logprob: -7.14948844909668
    10. '),' → logprob: -7.52448844909668

Token 216: ' X' (ID: 2127)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7129127979278564
    2. '(X' → logprob: -1.7129127979278564
    3. 'X' → logprob: -1.8379127979278564
    4. '(x' → logprob: -1.9629127979278564
    5. 'x' → logprob: -2.0879127979278564
    6. '[x' → logprob: -2.5879127979278564
    7. '[X' → logprob: -3.3379127979278564
    8. ' (' → logprob: -3.4629127979278564
    9. 'map' → logprob: -3.9629127979278564
    10. ' [' → logprob: -4.212912559509277

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030491352081298828
    2. ',Y' → logprob: -4.030491352081299
    3. ' ,' → logprob: -5.530491352081299
    4. ',
' → logprob: -6.155491352081299
    5. '),' → logprob: -6.280491352081299
    6. ',W' → logprob: -6.405491352081299
    7. ' for' → logprob: -7.280491352081299
    8. ',),' → logprob: -8.03049087524414
    9. ')),' → logprob: -8.28049087524414
    10. 'Y' → logprob: -8.53049087524414

Token 218: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.028017569333314896
    2. ' H' → logprob: -3.903017520904541
    3. 'Y' → logprob: -5.028017520904541
    4. ' Y' → logprob: -8.1530179977417
    5. ' ' → logprob: -8.2780179977417
    6. 'W' → logprob: -9.4030179977417
    7. '  ' → logprob: -9.5280179977417
    8. '   ' → logprob: -10.1530179977417
    9. 'X' → logprob: -11.1530179977417
    10. '
' → logprob: -11.2780179977417

Token 219: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0016561364755034447
    2. '!=' → logprob: -6.7516560554504395
    3. ' !=' → logprob: -8.126656532287598
    4. ' /' → logprob: -8.626656532287598
    5. '2' → logprob: -13.001656532287598
    6. ' ' → logprob: -13.001656532287598
    7. '  ' → logprob: -14.126656532287598
    8. ')!=' → logprob: -14.251656532287598
    9. '   ' → logprob: -14.251656532287598
    10. '!==' → logprob: -14.626656532287598

Token 220: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.038190897554159164
    2. '/' → logprob: -3.2881908416748047
    3. 'Y' → logprob: -9.288190841674805
    4. ' ' → logprob: -10.038190841674805
    5. '```' → logprob: -12.913190841674805
    6. ' /' → logprob: -13.038190841674805
    7. '   ' → logprob: -13.288190841674805
    8. '  ' → logprob: -13.413190841674805
    9. '_' → logprob: -14.288190841674805
    10. ')' → logprob: -14.288190841674805

Token 221: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.3869687616825104
    2. '!=' → logprob: -1.136968731880188
    3. ' ' → logprob: -10.011968612670898
    4. '!' → logprob: -11.136968612670898
    5. '!=(' → logprob: -11.511968612670898
    6. '```' → logprob: -12.261968612670898
    7. ')' → logprob: -12.386968612670898
    8. '   ' → logprob: -12.511968612670898
    9. '  ' → logprob: -13.011968612670898
    10. '==' → logprob: -13.261968612670898

Token 222: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.002285502851009369
    2. ' Y' → logprob: -6.127285480499268
    3. ' ' → logprob: -10.377285957336426
    4. '
' → logprob: -10.877285957336426
    5. '   ' → logprob: -11.252285957336426
    6. '  ' → logprob: -11.877285957336426
    7. '	Y' → logprob: -12.439785957336426
    8. '
' → logprob: -12.627285957336426
    9. '(Y' → logprob: -12.814785957336426
    10. ')' → logprob: -13.002285957336426

Token 223: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.009010656736791134
    2. ')))' → logprob: -5.1340107917785645
    3. ')):' → logprob: -6.1340107917785645
    4. ',' → logprob: -8.009010314941406
    5. '))
' → logprob: -8.759010314941406
    6. ')):
' → logprob: -8.759010314941406
    7. ' ))' → logprob: -9.259010314941406
    8. ')' → logprob: -10.259010314941406
    9. ':' → logprob: -11.134010314941406
    10. ' else' → logprob: -11.259010314941406

Token 224: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6466913223266602
    2. 'else' → logprob: -1.0216913223266602
    3. ')' → logprob: -2.64669132232666
    4. ':' → logprob: -3.39669132232666
    5. 'print' → logprob: -5.02169132232666
    6. ':
' → logprob: -6.77169132232666
    7. '==' → logprob: -7.27169132232666
    8. ',' → logprob: -7.52169132232666
    9. '):' → logprob: -7.77169132232666
    10. ' print' → logprob: -8.02169132232666

Token 225: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016836680471897125
    2. ' print' → logprob: -4.391836643218994
    3. '0' → logprob: -6.266836643218994
    4. '(W' → logprob: -7.016836643218994
    5. 'W' → logprob: -7.891836643218994
    6. 'int' → logprob: -8.266837120056152
    7. ' W' → logprob: -8.516837120056152
    8. '(print' → logprob: -8.891837120056152
    9. 'None' → logprob: -9.016837120056152
    10. ' ' → logprob: -9.016837120056152

Token 226: '(re' (ID: 8178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6958634853363037
    2. '(W' → logprob: -1.4458634853363037
    3. '(re' → logprob: -2.8208634853363037
    4. '(int' → logprob: -2.8208634853363037
    5. '((' → logprob: -2.9458634853363037
    6. '("' → logprob: -3.3208634853363037
    7. '('' → logprob: -3.9458634853363037
    8. '(lambda' → logprob: -4.195863723754883
    9. '()' → logprob: -5.445863723754883
    10. '(abs' → logprob: -5.445863723754883

Token 227: 'duce' (ID: 21375)
  Prédit: 'duce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duce' → logprob: -0.002190948696807027
    2. '(' → logprob: -7.252191066741943
    3. 'd' → logprob: -7.627191066741943
    4. '(W' → logprob: -7.752191066741943
    5. 'du' → logprob: -8.752190589904785
    6. 'duced' → logprob: -9.002190589904785
    7. '``' → logprob: -10.752190589904785
    8. '[' → logprob: -10.752190589904785
    9. 'W' → logprob: -11.002190589904785
    10. 'duc' → logprob: -11.002190589904785

Token 228: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0005493374192155898
    2. 'lambda' → logprob: -8.37554931640625
    3. '(' → logprob: -8.62554931640625
    4. '(m' → logprob: -9.75054931640625
    5. '=lambda' → logprob: -10.50054931640625
    6. 'mul' → logprob: -10.87554931640625
    7. '```' → logprob: -11.12554931640625
    8. '(
' → logprob: -11.62554931640625
    9. ')' → logprob: -12.62554931640625
    10. '(operator' → logprob: -13.50054931640625

Token 229: ' a' (ID: 261)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.7752984166145325
    2. '(lambda' → logprob: -1.4002983570098877
    3. 'lambda' → logprob: -1.7752983570098877
    4. 'a' → logprob: -2.6502983570098877
    5. ' lambda' → logprob: -3.5252983570098877
    6. ' mul' → logprob: -4.150298595428467
    7. ' a' → logprob: -5.650298595428467
    8. '=lambda' → logprob: -6.650298595428467
    9. '(m' → logprob: -7.150298595428467
    10. '(a' → logprob: -7.150298595428467

Token 230: ',' (ID: 11)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -1.4831128120422363
    2. ' a' → logprob: -1.6081128120422363
    3. ' lambda' → logprob: -1.7331128120422363
    4. 'a' → logprob: -1.9831128120422363
    5. ',' → logprob: -2.2331128120422363
    6. ' ,' → logprob: -2.4831128120422363
    7. 'lambda' → logprob: -3.1081128120422363
    8. '=lambda' → logprob: -4.983112812042236
    9. '_,' → logprob: -5.108112812042236
    10. ')' → logprob: -6.358112812042236

Token 231: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08239324390888214
    2. ' b' → logprob: -2.582393169403076
    3. 'lambda' → logprob: -6.332393169403076
    4. 'mul' → logprob: -6.832393169403076
    5. ' lambda' → logprob: -7.957393169403076
    6. 'a' → logprob: -9.082393646240234
    7. ' mul' → logprob: -9.457393646240234
    8. '(lambda' → logprob: -11.332393646240234
    9. '(b' → logprob: -11.457393646240234
    10. ' ' → logprob: -11.582393646240234

Token 232: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48622795939445496
    2. '(lambda' → logprob: -1.4862279891967773
    3. 'a' → logprob: -2.8612279891967773
    4. 'lambda' → logprob: -3.4862279891967773
    5. ':' → logprob: -3.6112279891967773
    6. ' ,' → logprob: -4.736227989196777
    7. '(a' → logprob: -4.861227989196777
    8. ' a' → logprob: -4.986227989196777
    9. '(' → logprob: -5.361227989196777
    10. '=lambda' → logprob: -5.361227989196777

Token 233: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.019968535751104355
    2. ' a' → logprob: -4.144968509674072
    3. 'lambda' → logprob: -6.644968509674072
    4. 'mul' → logprob: -6.769968509674072
    5. '(W' → logprob: -8.26996898651123
    6. '[' → logprob: -8.76996898651123
    7. ' lambda' → logprob: -8.76996898651123
    8. 'W' → logprob: -8.89496898651123
    9. 'int' → logprob: -9.26996898651123
    10. '1' → logprob: -9.39496898651123

Token 234: '*b' (ID: 72162)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5087648630142212
    2. ' a' → logprob: -1.2587648630142212
    3. ',' → logprob: -2.3837647438049316
    4. '(W' → logprob: -5.008764743804932
    5. '*,' → logprob: -5.758764743804932
    6. '(a' → logprob: -5.883764743804932
    7. '*' → logprob: -6.258764743804932
    8. ' (' → logprob: -6.508764743804932
    9. ' ,' → logprob: -6.883764743804932
    10. ' lambda' → logprob: -7.258764743804932

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02019859291613102
    2. '(W' → logprob: -4.020198822021484
    3. ',(' → logprob: -6.770198822021484
    4. '(' → logprob: -8.145198822021484
    5. ' ,' → logprob: -8.145198822021484
    6. ',W' → logprob: -9.020198822021484
    7. '((' → logprob: -10.520198822021484
    8. '*(' → logprob: -10.520198822021484
    9. '),' → logprob: -10.520198822021484
    10. '(*(' → logprob: -10.895198822021484

Token 236: ' (' (ID: 350)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.005202094092965126
    2. ' (' → logprob: -6.005202293395996
    3. '(X' → logprob: -6.380202293395996
    4. '[' → logprob: -7.380202293395996
    5. '([' → logprob: -8.880202293395996
    6. '(' → logprob: -8.880202293395996
    7. 'W' → logprob: -10.380202293395996
    8. '((' → logprob: -11.130202293395996
    9. '[(' → logprob: -11.880202293395996
    10. 'X' → logprob: -12.005202293395996

Token 237: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.013095535337924957
    2. '(W' → logprob: -4.763095378875732
    3. 'X' → logprob: -5.888095378875732
    4. '[' → logprob: -6.888095378875732
    5. '2' → logprob: -8.51309585571289
    6. '(' → logprob: -8.88809585571289
    7. ' W' → logprob: -9.26309585571289
    8. '0' → logprob: -9.76309585571289
    9. '(X' → logprob: -10.26309585571289
    10. 'int' → logprob: -10.76309585571289

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009712525061331689
    2. ' ,' → logprob: -7.25097131729126
    3. ',
' → logprob: -9.125970840454102
    4. ',H' → logprob: -9.375970840454102
    5. '//' → logprob: -10.500970840454102
    6. ' //' → logprob: -11.625970840454102
    7. ',

' → logprob: -12.375970840454102
    8. ',W' → logprob: -12.500970840454102
    9. '-' → logprob: -12.750970840454102
    10. '/' → logprob: -12.875970840454102

Token 239: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.08910490572452545
    2. ' H' → logprob: -2.4641048908233643
    3. ' ' → logprob: -9.839104652404785
    4. '2' → logprob: -9.964104652404785
    5. 'Y' → logprob: -10.839104652404785
    6. '   ' → logprob: -11.214104652404785
    7. ',' → logprob: -12.089104652404785
    8. ' Y' → logprob: -12.464104652404785
    9. '  ' → logprob: -12.589104652404785
    10. '1' → logprob: -12.589104652404785

Token 240: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009269453585147858
    2. '))' → logprob: -7.500926971435547
    3. ')//' → logprob: -9.125926971435547
    4. ' )' → logprob: -9.250926971435547
    5. ')/' → logprob: -9.375926971435547
    6. ',' → logprob: -10.125926971435547
    7. '),' → logprob: -11.500926971435547
    8. ')))' → logprob: -11.500926971435547
    9. '//' → logprob: -12.250926971435547
    10. ' //' → logprob: -12.500926971435547

Token 241: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.6350785493850708
    2. ' /' → logprob: -1.2600785493850708
    3. ')' → logprob: -2.0100784301757812
    4. ',' → logprob: -3.3850784301757812
    5. ' //' → logprob: -4.885078430175781
    6. '//' → logprob: -5.260078430175781
    7. ' )' → logprob: -6.510078430175781
    8. ' ,' → logprob: -6.760078430175781
    9. ' ' → logprob: -7.260078430175781
    10. ')/' → logprob: -7.760078430175781

Token 242: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11383836716413498
    2. '4' → logprob: -2.4888384342193604
    3. '1' → logprob: -4.238838195800781
    4. '3' → logprob: -4.863838195800781
    5. ' ' → logprob: -6.238838195800781
    6. '/' → logprob: -9.488838195800781
    7. '(' → logprob: -9.613838195800781
    8. '```' → logprob: -9.676338195800781
    9. '  ' → logprob: -9.988838195800781
    10. '   ' → logprob: -10.426338195800781

Token 243: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03827982395887375
    2. '3' → logprob: -3.9132797718048096
    3. '4' → logprob: -4.163280010223389
    4. '1' → logprob: -6.788280010223389
    5. ' ' → logprob: -7.413280010223389
    6. '   ' → logprob: -9.47577953338623
    7. '6' → logprob: -9.60077953338623
    8. '  ' → logprob: -10.91327953338623
    9. '/' → logprob: -11.03827953338623
    10. '(' → logprob: -11.53827953338623

Token 244: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00501458253711462
    2. '))' → logprob: -6.130014419555664
    3. ',' → logprob: -6.505014419555664
    4. ' )' → logprob: -7.005014419555664
    5. ')))' → logprob: -9.130014419555664
    6. '*' → logprob: -9.255014419555664
    7. ',)' → logprob: -9.755014419555664
    8. '-' → logprob: -10.880014419555664
    9. '*)' → logprob: -11.130014419555664
    10. '/' → logprob: -11.255014419555664

Token 245: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009073866531252861
    2. '0' → logprob: -4.884073734283447
    3. 'int' → logprob: -7.634073734283447
    4. ' ' → logprob: -8.009074211120605
    5. '(' → logprob: -8.384074211120605
    6. 'W' → logprob: -8.759074211120605
    7. '-' → logprob: -9.759074211120605
    8. '(int' → logprob: -9.884074211120605
    9. '(W' → logprob: -10.009074211120605
    10. '2' → logprob: -11.009074211120605

Token 246: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.030638640746474266
    2. '0' → logprob: -3.5306386947631836
    3. 'int' → logprob: -7.905638694763184
    4. '2' → logprob: -9.155638694763184
    5. ' ' → logprob: -9.155638694763184
    6. '(' → logprob: -9.530638694763184
    7. 'W' → logprob: -9.655638694763184
    8. '-' → logprob: -10.155638694763184
    9. '(int' → logprob: -11.155638694763184
    10. 'print' → logprob: -11.405638694763184

Token 247: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003641288261860609
    2. '))' → logprob: -5.628641128540039
    3. ')))' → logprob: -10.378641128540039
    4. ' )' → logprob: -12.878641128540039
    5. '())' → logprob: -13.503641128540039
    6. ')")' → logprob: -13.628641128540039
    7. ')
' → logprob: -14.003641128540039
    8. '`)' → logprob: -14.128641128540039
    9. ')`' → logprob: -14.753641128540039
    10. ')])' → logprob: -14.878641128540039


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 245
Tokens correctement prédits (1ère position, stricte): 94
Tokens correctement prédits (1ère position, avec adaptation): 94
Tokens correctement prédits (top 10): 186
Précision stricte (1ère position): 38.37%
Précision adaptée (1ère position): 38.37%
Précision (top 10): 75.92%
================================================================================
