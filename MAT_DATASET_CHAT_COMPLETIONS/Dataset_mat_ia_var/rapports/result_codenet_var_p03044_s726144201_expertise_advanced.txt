================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import deque

def input():
    return sys.stdin.readline().strip()

def readints():
    return map(int, input().split())

n = int(input())
tree = [[] for _ in range(n + 1)]
for _ in range(n - 1):
    a, b, c = readints()
    tree[a].append((b, c))
    tree[b].append((a, c))

ans = [-1] * (n + 1)
ans[1] = 0
que = deque([1])

while que:
    node = que.popleft()
    cur_col = ans[node]
    for neighbor, weight in tree[node]:
        if ans[neighbor] == -1:
            ans[neighbor] = (cur_col + weight) & 1
            que.append(neighbor)

print(*ans[1:], sep="\n")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.01821877807378769
    2. 'os' → logprob: -4.143218994140625
    3. ' Py' → logprob: -7.768218994140625
    4. ' pathlib' → logprob: -7.768218994140625
    5. ' collections' → logprob: -7.893218994140625
    6. ' math' → logprob: -8.768218994140625
    7. 'collections' → logprob: -9.018218994140625
    8. ' ' → logprob: -9.143218994140625
    9. ' typing' → logprob: -9.643218994140625
    10. ' datetime' → logprob: -9.768218994140625

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.537659227848053
    2. 'import' → logprob: -0.912659227848053
    3. '.' → logprob: -4.287659168243408
    4. ' ' → logprob: -8.287659645080566
    5. '<|end|>' → logprob: -9.037659645080566
    6. '.import' → logprob: -9.287659645080566
    7. '```' → logprob: -9.412659645080566
    8. '_import' → logprob: -10.537659645080566
    9. '	import' → logprob: -10.662659645080566
    10. '_' → logprob: -11.412659645080566

Token 6: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.2895837128162384
    2. ' deque' → logprob: -1.664583683013916
    3. ' abc' → logprob: -3.039583683013916
    4. 'deque' → logprob: -4.539583683013916
    5. 'abc' → logprob: -6.414583683013916
    6. ' Counter' → logprob: -6.914583683013916
    7. ' named' → logprob: -7.289583683013916
    8. ' Ordered' → logprob: -9.914584159851074
    9. 'default' → logprob: -10.039584159851074
    10. ' import' → logprob: -10.039584159851074

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7442432641983032
    2. '

' → logprob: -1.4942432641983032
    3. '
' → logprob: -1.8692432641983032
    4. 'import' → logprob: -2.6192431449890137
    5. '```' → logprob: -3.1192431449890137
    6. '\' → logprob: -3.8692431449890137
    7. '<|end|>' → logprob: -5.619243144989014
    8. 'newline' → logprob: -6.994243144989014
    9. '<|end|>' → logprob: -6.994243144989014
    10. ',' → logprob: -7.369243144989014

Token 8: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1668646335601807
    2. 'b' → logprob: -1.4168646335601807
    3. '`' → logprob: -1.9168646335601807
    4. 'd' → logprob: -2.1668646335601807
    5. '.' → logprob: -3.1668646335601807
    6. '```' → logprob: -3.2918646335601807
    7. 'import' → logprob: -3.6668646335601807
    8. '\' → logprob: -4.291864395141602
    9. 'a' → logprob: -4.541864395141602
    10. 'data' → logprob: -5.041864395141602

Token 9: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1279456615447998
    2. ' bfs' → logprob: -2.3779456615448
    3. ' process' → logprob: -4.252945899963379
    4. ' BFS' → logprob: -6.252945899963379
    5. ' main' → logprob: -6.377945899963379
    6. ' dfs' → logprob: -6.627945899963379
    7. ' space' → logprob: -6.752945899963379
    8. ' ' → logprob: -7.377945899963379
    9. ' deque' → logprob: -7.502945899963379
    10. ' breadth' → logprob: -7.627945899963379

Token 10: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013002344639971852
    2. ' (' → logprob: -7.50130033493042
    3. '("("' → logprob: -8.376299858093262
    4. '()' → logprob: -8.501299858093262
    5. '_' → logprob: -8.876299858093262
    6. '("")' → logprob: -10.251299858093262
    7. '('' → logprob: -10.501299858093262
    8. ' ' → logprob: -11.251299858093262
    9. '(
' → logprob: -11.376299858093262
    10. '("' → logprob: -11.876299858093262

Token 11: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.483651727437973
    2. ' sys' → logprob: -1.2336517572402954
    3. '    ' → logprob: -3.358651638031006
    4. '()' → logprob: -4.233651638031006
    5. ' input' → logprob: -4.608651638031006
    6. 'input' → logprob: -4.733651638031006
    7. 'sys' → logprob: -4.983651638031006
    8. '   ' → logprob: -5.733651638031006
    9. '<|end|>' → logprob: -5.858651638031006
    10. ' ()' → logprob: -6.483651638031006

Token 12: ' return' (ID: 622)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.18874269723892212
    2. 'sys' → logprob: -1.8137426376342773
    3. 'return' (adapté à ' return') → logprob: -5.063742637634277
    4. ' return' → logprob: -6.313742637634277
    5. 'input' → logprob: -7.813742637634277
    6. ' input' → logprob: -8.313742637634277
    7. '   ' → logprob: -8.938742637634277
    8. ' ' → logprob: -10.438742637634277
    9. '=sys' → logprob: -12.563742637634277
    10. '```' → logprob: -12.563742637634277

Token 13: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.029770854860544205
    2. 'sys' → logprob: -3.529770851135254
    3. ' input' → logprob: -11.279770851135254
    4. 'input' → logprob: -12.154770851135254
    5. ' ' → logprob: -13.529770851135254
    6. '	sys' → logprob: -14.779770851135254
    7. '=sys' → logprob: -14.904770851135254
    8. '(sys' → logprob: -15.654770851135254
    9. ' ' → logprob: -16.27977180480957
    10. ' system' → logprob: -16.77977180480957

Token 14: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.03223976120352745
    2. '.' → logprob: -3.5322396755218506
    3. '.stdout' → logprob: -6.65723991394043
    4. '.argv' → logprob: -7.78223991394043
    5. ' .' → logprob: -8.03223991394043
    6. '.readline' → logprob: -8.15723991394043
    7. '.std' → logprob: -9.53223991394043
    8. '.input' → logprob: -10.65723991394043
    9. '.stderr' → logprob: -10.90723991394043
    10. '.exit' → logprob: -10.90723991394043

Token 15: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.014286089688539505
    2. '.read' → logprob: -4.889286041259766
    3. '.' → logprob: -5.014286041259766
    4. 'read' → logprob: -11.889286041259766
    5. '.readlines' → logprob: -12.514286041259766
    6. '.Read' → logprob: -12.889286041259766
    7. ' .' → logprob: -14.264286041259766
    8. ' readline' → logprob: -14.639286041259766
    9. '().' → logprob: -14.889286041259766
    10. '.buffer' → logprob: -15.639286041259766

Token 16: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07154147326946259
    2. '().' → logprob: -2.6965415477752686
    3. '()\' → logprob: -7.4465413093566895
    4. '(' → logprob: -7.5715413093566895
    5. '()
' → logprob: -8.446541786193848
    6. '()

' → logprob: -8.821541786193848
    7. '()(' → logprob: -10.321541786193848
    8. '())' → logprob: -10.821541786193848
    9. '()<' → logprob: -11.071541786193848
    10. ')' → logprob: -11.196541786193848

Token 17: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.014164221473038197
    2. 'rstrip' → logprob: -4.264164447784424
    3. ' strip' → logprob: -14.514163970947266
    4. '_strip' → logprob: -16.389163970947266
    5. 'str' → logprob: -17.264163970947266
    6. 'replace' → logprob: -18.014163970947266
    7. '-strip' → logprob: -18.264163970947266
    8. 'rst' → logprob: -18.389163970947266
    9. '(strip' → logprob: -18.389163970947266
    10. 'split' → logprob: -18.514163970947266

Token 18: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.017935335636138916
    2. '(' → logprob: -4.267935276031494
    3. '()

' → logprob: -6.142935276031494
    4. '()
' → logprob: -6.767935276031494
    5. '()\' → logprob: -9.017935752868652
    6. '(
' → logprob: -9.142935752868652
    7. '(

' → logprob: -9.892935752868652
    8. '\n' → logprob: -10.517935752868652
    9. '
' → logprob: -10.517935752868652
    10. ')' → logprob: -11.017935752868652

Token 19: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16560311615467072
    2. 'N' → logprob: -1.9156031608581543
    3. 'def' → logprob: -5.915603160858154
    4. 'd' → logprob: -6.915603160858154
    5. 'q' → logprob: -7.165603160858154
    6. 'Q' → logprob: -8.040602684020996
    7. 'class' → logprob: -9.540602684020996
    8. 'a' → logprob: -9.665602684020996
    9. 'T' → logprob: -9.665602684020996
    10. 'deque' → logprob: -9.915602684020996

Token 20: ' read' (ID: 1729)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.5971791744232178
    2. ' main' → logprob: -0.8471791744232178
    3. ' solve' → logprob: -4.222179412841797
    4. ' solution' → logprob: -5.972179412841797
    5. ' process' → logprob: -6.222179412841797
    6. ' BFS' → logprob: -7.097179412841797
    7. ' top' → logprob: -8.722179412841797
    8. 'main' → logprob: -8.847179412841797
    9. ' dfs' → logprob: -9.347179412841797
    10. 'solve' → logprob: -9.472179412841797

Token 21: 'ints' (ID: 20448)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5453780889511108
    2. '_line' → logprob: -0.9203780889511108
    3. 'line' → logprob: -4.0453782081604
    4. '_' → logprob: -6.4203782081604
    5. 'Line' → logprob: -6.7953782081604
    6. ' ()' → logprob: -7.5453782081604
    7. '(' → logprob: -7.6703782081604
    8. '_input' → logprob: -8.295377731323242
    9. '_data' → logprob: -9.420377731323242
    10. ' line' → logprob: -9.545377731323242

Token 22: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9796355366706848
    2. '():' → logprob: -1.10463547706604
    3. '()' → logprob: -1.22963547706604
    4. ' ()' → logprob: -8.729635238647461
    5. '():
' → logprob: -9.229635238647461
    6. ' (' → logprob: -9.729635238647461
    7. '```' → logprob: -9.979635238647461
    8. '()">' → logprob: -10.104635238647461
    9. '()(' → logprob: -10.229635238647461
    10. '`()' → logprob: -10.354635238647461

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49335139989852905
    2. ' return' → logprob: -1.4933514595031738
    3. 'return' → logprob: -2.493351459503174
    4. '()' → logprob: -2.868351459503174
    5. '[]' → logprob: -4.118351459503174
    6. '():
' → logprob: -6.243351459503174
    7. '(' → logprob: -6.618351459503174
    8. '():' → logprob: -6.743351459503174
    9. '[' → logprob: -6.993351459503174
    10. '()[' → logprob: -7.118351459503174

Token 24: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.790067195892334
    2. 'map' → logprob: -1.040067195892334
    3. 'list' → logprob: -2.165067195892334
    4. ' map' → logprob: -3.040067195892334
    5. ' return' → logprob: -3.790067195892334
    6. ' list' → logprob: -4.915067195892334
    7. '   ' → logprob: -8.665067672729492
    8. ' ' → logprob: -10.165067672729492
    9. 'int' → logprob: -11.165067672729492
    10. '(map' → logprob: -11.915067672729492

Token 25: ' map' (ID: 4014)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.01448278408497572
    2. 'list' → logprob: -4.2644829750061035
    3. ' map' → logprob: -8.139482498168945
    4. 'map' → logprob: -11.139482498168945
    5. ' ' → logprob: -11.639482498168945
    6. '[list' → logprob: -13.514482498168945
    7. '[' → logprob: -14.139482498168945
    8. '   ' → logprob: -14.139482498168945
    9. '  ' → logprob: -14.389482498168945
    10. '	list' → logprob: -15.264482498168945

Token 26: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009139667963609099
    2. '(' → logprob: -7.000914096832275
    3. '<int' → logprob: -13.500913619995117
    4. 'int' → logprob: -14.250913619995117
    5. '[int' → logprob: -15.375913619995117
    6. '(list' → logprob: -16.625913619995117
    7. '(lambda' → logprob: -16.750913619995117
    8. '=int' → logprob: -17.000913619995117
    9. '(in' → logprob: -17.000913619995117
    10. ' (' → logprob: -17.000913619995117

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45017674565315247
    2. ',input' → logprob: -1.07517671585083
    3. '(input' → logprob: -4.82517671585083
    4. '(sys' → logprob: -4.82517671585083
    5. '(' → logprob: -5.82517671585083
    6. ')' → logprob: -7.07517671585083
    7. 'input' → logprob: -7.32517671585083
    8. ' ,' → logprob: -7.82517671585083
    9. ',(' → logprob: -9.075177192687988
    10. 'sys' → logprob: -10.075177192687988

Token 28: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2812902629375458
    2. ' input' → logprob: -1.4062902927398682
    3. ')' → logprob: -9.406290054321289
    4. 'sys' → logprob: -10.406290054321289
    5. ' sys' → logprob: -10.906290054321289
    6. '   ' → logprob: -12.906290054321289
    7. ' ' → logprob: -13.531290054321289
    8. '	input' → logprob: -13.656290054321289
    9. ',input' → logprob: -13.781290054321289
    10. '=input' → logprob: -14.281290054321289

Token 29: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005995001993142068
    2. '())' → logprob: -7.625599384307861
    3. '()' → logprob: -9.37559986114502
    4. ')' → logprob: -10.75059986114502
    5. ' ().' → logprob: -12.50059986114502
    6. ' ())' → logprob: -14.50059986114502
    7. '()))' → logprob: -15.25059986114502
    8. '()
' → logprob: -15.50059986114502
    9. ' ()' → logprob: -15.62559986114502
    10. '(' → logprob: -16.500598907470703

Token 30: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020067949662916362
    2. 'strip' → logprob: -8.625200271606445
    3. ')' → logprob: -10.875200271606445
    4. 'rstrip' → logprob: -13.625200271606445
    5. ' split' → logprob: -14.500200271606445
    6. 's' → logprob: -15.625200271606445
    7. 'spl' → logprob: -16.125200271606445
    8. '(split' → logprob: -16.375200271606445
    9. ')s' → logprob: -17.750200271606445
    10. '```' → logprob: -18.125200271606445

Token 31: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6785687208175659
    2. '())' → logprob: -1.053568720817566
    3. '()' → logprob: -2.0535688400268555
    4. '(' → logprob: -4.1785688400268555
    5. '`)' → logprob: -9.428568840026855
    6. '))' → logprob: -9.678568840026855
    7. '(
' → logprob: -10.553568840026855
    8. ' ())' → logprob: -10.553568840026855
    9. '`()' → logprob: -10.678568840026855
    10. '()]' → logprob: -10.678568840026855

Token 32: 'n' (ID: 77)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.45294955372810364
    2. 'n' → logprob: -1.0779495239257812
    3. 'a' → logprob: -4.702949523925781
    4. 'def' → logprob: -5.077949523925781
    5. '#' → logprob: -5.577949523925781
    6. 'N' → logprob: -6.327949523925781
    7. '\' → logprob: -6.577949523925781
    8. 'D' → logprob: -8.327949523925781
    9. 'b' → logprob: -8.577949523925781
    10. 'de' → logprob: -8.702949523925781

Token 33: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7263697385787964
    2. ' =' → logprob: -1.1013697385787964
    3. ',' → logprob: -2.601369857788086
    4. '(' → logprob: -3.226369857788086
    5. ' ' → logprob: -3.226369857788086
    6. ')' → logprob: -4.101369857788086
    7. '.' → logprob: -5.601369857788086
    8. '_' → logprob: -6.351369857788086
    9. ' (' → logprob: -6.601369857788086
    10. ' )' → logprob: -6.726369857788086

Token 34: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.007064624223858118
    2. 'int' → logprob: -5.6320648193359375
    3. ' ' → logprob: -5.7570648193359375
    4. ' input' → logprob: -8.507064819335938
    5. ' read' → logprob: -10.257064819335938
    6. 'input' → logprob: -10.882064819335938
    7. ' n' → logprob: -11.382064819335938
    8. '10' → logprob: -12.132064819335938
    9. '=int' → logprob: -12.632064819335938
    10. '0' → logprob: -13.007064819335938

Token 35: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00024643904180265963
    2. '(input' → logprob: -8.500246047973633
    3. '('' → logprob: -10.750246047973633
    4. '()' → logprob: -11.375246047973633
    5. '(sys' → logprob: -12.250246047973633
    6. '(n' → logprob: -13.500246047973633
    7. '(
' → logprob: -14.500246047973633
    8. '((' → logprob: -14.625246047973633
    9. '("("' → logprob: -14.875246047973633
    10. '(`' → logprob: -15.250246047973633

Token 36: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6807108521461487
    2. '())' → logprob: -1.180710792541504
    3. '()' → logprob: -1.805710792541504
    4. '(' → logprob: -3.805710792541504
    5. '))' → logprob: -10.930710792541504
    6. ' ())' → logprob: -11.055710792541504
    7. '('' → logprob: -11.430710792541504
    8. '(
' → logprob: -12.180710792541504
    9. '()))' → logprob: -12.305710792541504
    10. '`)' → logprob: -12.555710792541504

Token 37: 'tree' (ID: 19816)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.823539137840271
    2. 'd' → logprob: -0.948539137840271
    3. 's' → logprob: -2.4485392570495605
    4. 'arr' → logprob: -4.3235392570495605
    5. 'data' → logprob: -4.3235392570495605
    6. 'deque' → logprob: -4.8235392570495605
    7. ' ' → logprob: -4.9485392570495605
    8. 'r' → logprob: -4.9485392570495605
    9. ' a' → logprob: -5.3235392570495605
    10. 'm' → logprob: -5.6985392570495605

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11394728720188141
    2. '[' → logprob: -2.3639473915100098
    3. '=' → logprob: -4.36394739151001
    4. '[]' → logprob: -8.113946914672852
    5. ' =[' → logprob: -8.488946914672852
    6. '[node' → logprob: -8.988946914672852
    7. ' ' → logprob: -9.613946914672852
    8. '=[' → logprob: -9.738946914672852
    9. ' [' → logprob: -10.363946914672852
    10. '=[]' → logprob: -10.488946914672852

Token 39: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6815559267997742
    2. ' [' → logprob: -1.306555986404419
    3. ' [[]' → logprob: -1.556555986404419
    4. ' []' → logprob: -5.55655574798584
    5. ' {}' → logprob: -5.68155574798584
    6. '{}' → logprob: -6.30655574798584
    7. '[]' → logprob: -6.43155574798584
    8. ' defaultdict' → logprob: -7.05655574798584
    9. ' [{}' → logprob: -7.18155574798584
    10. ' ' → logprob: -9.68155574798584

Token 40: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5683633685112
    2. '(' → logprob: -1.6933634281158447
    3. ')' → logprob: -1.9433634281158447
    4. '(n' → logprob: -2.9433634281158447
    5. '[' → logprob: -4.068363189697266
    6. 'for' → logprob: -4.318363189697266
    7. ',' → logprob: -4.943363189697266
    8. ' for' → logprob: -5.068363189697266
    9. '[n' → logprob: -5.318363189697266
    10. '()' → logprob: -6.568363189697266

Token 41: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6155590415000916
    2. ' _' → logprob: -0.9905590415000916
    3. '(' → logprob: -2.6155591011047363
    4. ' ' → logprob: -4.365559101104736
    5. ' in' → logprob: -7.240559101104736
    6. ' i' → logprob: -8.240558624267578
    7. 'range' → logprob: -8.365558624267578
    8. '(_' → logprob: -8.490558624267578
    9. '()' → logprob: -8.740558624267578
    10. '(i' → logprob: -8.865558624267578

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42876842617988586
    2. 'in' → logprob: -1.0537683963775635
    3. 'n' → logprob: -11.053768157958984
    4. ' ' → logprob: -11.053768157958984
    5. '	in' → logprob: -11.928768157958984
    6. 'i' → logprob: -12.178768157958984
    7. 'range' → logprob: -12.678768157958984
    8. '_' → logprob: -12.678768157958984
    9. 'In' → logprob: -12.928768157958984
    10. '```' → logprob: -13.553768157958984

Token 43: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067156096920371056
    2. ' range' → logprob: -5.006715774536133
    3. '(range' → logprob: -16.256715774536133
    4. ' ' → logprob: -16.756715774536133
    5. '	range' → logprob: -18.381715774536133
    6. 'r' → logprob: -18.506715774536133
    7. 'rang' → logprob: -18.506715774536133
    8. '   ' → logprob: -19.006715774536133
    9. '0' → logprob: -19.006715774536133
    10. 'ran' → logprob: -19.131715774536133

Token 44: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.494741632603109e-05
    2. '(' → logprob: -9.37508487701416
    3. ' (' → logprob: -16.750085830688477
    4. ')' → logprob: -17.750085830688477
    5. ')n' → logprob: -17.875085830688477
    6. '((' → logprob: -18.000085830688477
    7. ')(' → logprob: -18.375085830688477
    8. 'n' → logprob: -18.750085830688477
    9. '(N' → logprob: -18.875085830688477
    10. '(
' → logprob: -19.500085830688477

Token 45: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.627176768844947e-05
    2. ']' → logprob: -9.500096321105957
    3. ')' → logprob: -11.000096321105957
    4. '])' → logprob: -13.125096321105957
    5. '])]' → logprob: -14.125096321105957
    6. ' )' → logprob: -14.375096321105957
    7. ')])' → logprob: -14.500096321105957
    8. ' ]' → logprob: -15.750096321105957
    9. '')]' → logprob: -16.00009536743164
    10. ')]
' → logprob: -16.12509536743164

Token 46: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019307781476527452
    2. ' ' → logprob: -6.2519307136535645
    3. '2' → logprob: -13.501931190490723
    4. ')' → logprob: -14.251931190490723
    5. '```' → logprob: -16.501930236816406
    6. ' )' → logprob: -17.126930236816406
    7. '0' → logprob: -17.876930236816406
    8. '  ' → logprob: -18.001930236816406
    9. ' ' → logprob: -18.189430236816406
    10. '`' → logprob: -18.564430236816406

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '2' → logprob: -16.375001907348633
    4. ')' → logprob: -19.125001907348633
    5. '```' → logprob: -19.250001907348633
    6. '0' → logprob: -19.875001907348633
    7. '１' → logprob: -20.125001907348633
    8. '   ' → logprob: -20.750001907348633
    9. '7' → logprob: -21.562501907348633
    10. '۱' → logprob: -21.625001907348633

Token 48: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.011572932824492455
    2. ')' → logprob: -5.13657283782959
    3. ']' → logprob: -5.26157283782959
    4. '])' → logprob: -8.38657283782959
    5. ')])' → logprob: -9.01157283782959
    6. '])]' → logprob: -9.38657283782959
    7. ')],' → logprob: -13.13657283782959
    8. ' )' → logprob: -13.76157283782959
    9. '')]' → logprob: -14.38657283782959
    10. ' ]' → logprob: -14.38657283782959

Token 49: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09773065894842148
    2. '
' → logprob: -2.7227306365966797
    3. '<|end|>' → logprob: -4.09773063659668
    4. ' for' → logprob: -4.72273063659668
    5. '```' → logprob: -7.22273063659668
    6. '\n' → logprob: -7.47273063659668
    7. ' 
' → logprob: -8.59773063659668
    8. 'n' → logprob: -9.22273063659668
    9. '' → logprob: -9.47273063659668
    10. '\' → logprob: -9.84773063659668

Token 50: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.22863107919692993
    2. ' ' → logprob: -1.9786310195922852
    3. '_' → logprob: -3.353631019592285
    4. ' i' → logprob: -3.478631019592285
    5. '  ' → logprob: -9.103631019592285
    6. ' ▁' → logprob: -9.603631019592285
    7. ' ‌' → logprob: -9.853631019592285
    8. ' ' → logprob: -10.728631019592285
    9. ' ​' → logprob: -10.978631019592285
    10. '_i' → logprob: -11.603631019592285

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03797687590122223
    2. 'in' → logprob: -3.9129769802093506
    3. '(' → logprob: -5.1629767417907715
    4. '_' → logprob: -5.2879767417907715
    5. ' ' → logprob: -5.4129767417907715
    6. ' _' → logprob: -6.9129767417907715
    7. '(n' → logprob: -8.53797721862793
    8. 'space' → logprob: -8.66297721862793
    9. 'n' → logprob: -8.91297721862793
    10. ' n' → logprob: -9.53797721862793

Token 52: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.010413667187094688
    2. ' range' → logprob: -4.635413646697998
    3. 'read' → logprob: -7.385413646697998
    4. '(range' → logprob: -10.385414123535156
    5. 'input' → logprob: -14.010414123535156
    6. ' read' → logprob: -14.135414123535156
    7. 'ange' → logprob: -14.510414123535156
    8. '	range' → logprob: -14.635414123535156
    9. ' ' → logprob: -14.760414123535156
    10. 'ran' → logprob: -14.760414123535156

Token 53: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08088995516300201
    2. '(' → logprob: -3.080889940261841
    3. ' (' → logprob: -3.455889940261841
    4. ' n' → logprob: -8.455889701843262
    5. '(
' → logprob: -12.205889701843262
    6. 'n' → logprob: -12.205889701843262
    7. ' ' → logprob: -13.455889701843262
    8. '(int' → logprob: -13.830889701843262
    9. '(range' → logprob: -14.830889701843262
    10. '(s' → logprob: -14.955889701843262

Token 54: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017919417470693588
    2. '):' → logprob: -4.267919540405273
    3. ' )' → logprob: -5.767919540405273
    4. '-' → logprob: -7.892919540405273
    5. ' -' → logprob: -8.892919540405273
    6. ' ):' → logprob: -10.017919540405273
    7. '):
' → logprob: -10.142919540405273
    8. '){' → logprob: -12.767919540405273
    9. ')>' → logprob: -12.892919540405273
    10. '1' → logprob: -12.892919540405273

Token 55: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10020720958709717
    2. ' ' → logprob: -2.3502073287963867
    3. '<|end|>' → logprob: -14.475207328796387
    4. '2' → logprob: -17.60020637512207
    5. '0' → logprob: -17.60020637512207
    6. ' ' → logprob: -17.72520637512207
    7. 'space' → logprob: -18.10020637512207
    8. '  ' → logprob: -18.16270637512207
    9. '```' → logprob: -18.28770637512207
    10. ')' → logprob: -18.35020637512207

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '2' → logprob: -17.625
    4. '```' → logprob: -17.875
    5. '۱' → logprob: -19.125
    6. ')' → logprob: -19.125
    7. '１' → logprob: -19.5625
    8. '১' → logprob: -19.75
    9. '१' → logprob: -19.9375
    10. '   ' → logprob: -20.6875

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1763356626033783
    2. ')' → logprob: -2.301335573196411
    3. ' ):' → logprob: -2.926335573196411
    4. ' )' → logprob: -4.92633581161499
    5. ',' → logprob: -7.67633581161499
    6. ':' → logprob: -9.176335334777832
    7. '):
' → logprob: -9.801335334777832
    8. ' ,' → logprob: -10.051335334777832
    9. ' ):
' → logprob: -11.926335334777832
    10. '),' → logprob: -12.176335334777832

Token 58: '   ' (ID: 271)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.07646653056144714
    2. ' node' → logprob: -3.0764665603637695
    3. ' line' → logprob: -4.9514665603637695
    4. 'u' → logprob: -5.0764665603637695
    5. ' a' → logprob: -5.2014665603637695
    6. ' parent' → logprob: -5.3264665603637695
    7. 'a' → logprob: -6.8264665603637695
    8. ' 
' → logprob: -7.2014665603637695
    9. 'node' → logprob: -8.20146656036377
    10. ' x' → logprob: -8.32646656036377

Token 59: ' a' (ID: 261)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.389181524515152
    2. 'u' → logprob: -1.1391814947128296
    3. 'a' (adapté à ' a') → logprob: -6.389181613922119
    4. ' a' → logprob: -7.389181613922119
    5. ' node' → logprob: -13.139181137084961
    6. '	u' → logprob: -13.139181137084961
    7. '   ' → logprob: -13.514181137084961
    8. ' parent' → logprob: -14.264181137084961
    9. 'x' → logprob: -14.639181137084961
    10. ' v' → logprob: -14.764181137084961

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25244712829589844
    2. ' ,' → logprob: -1.5024471282958984
    3. ' ' → logprob: -8.252447128295898
    4. ',b' → logprob: -8.627447128295898
    5. ',a' → logprob: -10.502447128295898
    6. '<|end|>' → logprob: -11.502447128295898
    7. '  ' → logprob: -12.502447128295898
    8. ' )' → logprob: -12.502447128295898
    9. ' a' → logprob: -12.627447128295898
    10. ' ,
' → logprob: -12.627447128295898

Token 61: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02639004960656166
    2. ' b' → logprob: -3.6513900756835938
    3. '<|end|>' → logprob: -9.526390075683594
    4. ' ' → logprob: -11.401390075683594
    5. 'space' → logprob: -12.401390075683594
    6. '<|end|>' → logprob: -14.026390075683594
    7. ' space' → logprob: -16.151390075683594
    8. 's' → logprob: -16.276390075683594
    9. '=' → logprob: -16.651390075683594
    10. ' =' → logprob: -16.776390075683594

Token 62: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141538977622986
    2. ' =' → logprob: -1.7014154195785522
    3. ',' → logprob: -13.826415061950684
    4. ')' → logprob: -15.076415061950684
    5. '=int' → logprob: -15.326415061950684
    6. '＝' → logprob: -15.701415061950684
    7. '=input' → logprob: -15.826415061950684
    8. ')=' → logprob: -16.576416015625
    9. '=line' → logprob: -16.826416015625
    10. '=

' → logprob: -17.076416015625

Token 63: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07043807208538055
    2. 'w' → logprob: -2.9454381465911865
    3. ' c' → logprob: -4.320437908172607
    4. ' w' → logprob: -6.195437908172607
    5. ' =' → logprob: -10.070438385009766
    6. 'd' → logprob: -11.195438385009766
    7. 't' → logprob: -11.445438385009766
    8. ' ' → logprob: -11.695438385009766
    9. 'l' → logprob: -12.070438385009766
    10. '=' → logprob: -12.320438385009766

Token 64: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693148672580719
    2. ' =' → logprob: -0.693148672580719
    3. ',' → logprob: -13.818148612976074
    4. ')' → logprob: -15.943148612976074
    5. '＝' → logprob: -16.06814956665039
    6. '=input' → logprob: -16.81814956665039
    7. ' ' → logprob: -16.94314956665039
    8. '=int' → logprob: -17.31814956665039
    9. '=line' → logprob: -17.31814956665039
    10. '    ' → logprob: -17.69314956665039

Token 65: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.049369119107723236
    2. 'read' → logprob: -3.0493690967559814
    3. ' map' → logprob: -7.1743693351745605
    4. 'map' → logprob: -11.174368858337402
    5. ' ' → logprob: -14.299368858337402
    6. ' list' → logprob: -14.799368858337402
    7. '	read' → logprob: -15.674368858337402
    8. ' next' → logprob: -16.92436981201172
    9. 'list' → logprob: -17.04936981201172
    10. ' reads' → logprob: -17.54936981201172

Token 66: 'ints' (ID: 20448)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9285743236541748
    2. 'int' → logprob: -1.0535743236541748
    3. '(int' → logprob: -1.6785743236541748
    4. 'ints' → logprob: -2.678574323654175
    5. 's' → logprob: -8.178574562072754
    6. 'Ints' → logprob: -8.553574562072754
    7. '(
' → logprob: -9.553574562072754
    8. '()' → logprob: -9.928574562072754
    9. '('' → logprob: -9.928574562072754
    10. ')' → logprob: -9.928574562072754

Token 67: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20751963555812836
    2. ')' → logprob: -1.8325196504592896
    3. '   ' → logprob: -4.20751953125
    4. '<|end|>' → logprob: -5.33251953125
    5. '(' → logprob: -5.70751953125
    6. '```' → logprob: -6.95751953125
    7. ' ()' → logprob: -7.58251953125
    8. ' ' → logprob: -8.20751953125
    9. '#' → logprob: -8.33251953125
    10. ',' → logprob: -8.45751953125

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013554519042372704
    2. 'tree' → logprob: -4.888554573059082
    3. '	tree' → logprob: -6.638554573059082
    4. '
' → logprob: -6.638554573059082
    5. '    
' → logprob: -6.763554573059082
    6. '<|end|>' → logprob: -7.263554573059082
    7. '```' → logprob: -7.513554573059082
    8. ' tree' → logprob: -7.888554573059082
    9. '(tree' → logprob: -8.263554573059082
    10. ' 
' → logprob: -10.263554573059082

Token 69: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.806196928024292
    2. '   ' → logprob: -1.181196928024292
    3. ' tree' → logprob: -1.681196928024292
    4. '	tree' → logprob: -3.431196928024292
    5. ' 
' → logprob: -4.556197166442871
    6. '(tree' → logprob: -5.306197166442871
    7. '    
' → logprob: -5.431197166442871
    8. '
' → logprob: -5.431197166442871
    9. '.tree' → logprob: -7.181197166442871
    10. '```' → logprob: -7.181197166442871

Token 70: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -6.504040356958285e-05
    2. '[' → logprob: -9.750064849853516
    3. '[b' → logprob: -12.500064849853516
    4. 'a' → logprob: -13.750064849853516
    5. '[c' → logprob: -13.875064849853516
    6. ' [' → logprob: -14.625064849853516
    7. '```' → logprob: -15.875064849853516
    8. '[int' → logprob: -16.625064849853516
    9. '[A' → logprob: -16.875064849853516
    10. '[data' → logprob: -17.375064849853516

Token 71: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0001105762057704851
    2. ']' → logprob: -9.875110626220703
    3. '.append' → logprob: -10.000110626220703
    4. '.' → logprob: -12.250110626220703
    5. ' ].' → logprob: -12.375110626220703
    6. '[' → logprob: -13.000110626220703
    7. ').' → logprob: -13.250110626220703
    8. '   ' → logprob: -15.250110626220703
    9. '][' → logprob: -16.000110626220703
    10. ''].' → logprob: -16.500110626220703

Token 72: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -9.088346359931165e-07
    2. '.append' → logprob: -14.625000953674316
    3. ' append' → logprob: -14.750000953674316
    4. '_append' → logprob: -18.75
    5. 'Append' → logprob: -19.125
    6. '	append' → logprob: -20.0
    7. 'appen' → logprob: -20.25
    8. 'app' → logprob: -20.25
    9. 'push' → logprob: -20.75
    10. '```' → logprob: -20.75

Token 73: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0007115975022315979
    2. '(' → logprob: -7.250711441040039
    3. '(b' → logprob: -13.375711441040039
    4. '([' → logprob: -16.75071144104004
    5. '(('' → logprob: -17.25071144104004
    6. ' ((' → logprob: -18.12571144104004
    7. '(B' → logprob: -18.62571144104004
    8. ' (' → logprob: -19.00071144104004
    9. '(a' → logprob: -19.00071144104004
    10. '(
' → logprob: -19.25071144104004

Token 74: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.547789674485102e-05
    2. ' b' → logprob: -10.250035285949707
    3. '	b' → logprob: -20.250036239624023
    4. '   ' → logprob: -20.375036239624023
    5. ')b' → logprob: -21.250036239624023
    6. ',b' → logprob: -21.875036239624023
    7. '(b' → logprob: -22.750036239624023
    8. ' ' → logprob: -23.500036239624023
    9. ''b' → logprob: -24.625036239624023
    10. '\b' → logprob: -24.625036239624023

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005039428360760212
    2. ' ,' → logprob: -7.875504016876221
    3. ',c' → logprob: -9.000503540039062
    4. '‌,' → logprob: -15.375503540039062
    5. ',
' → logprob: -16.625503540039062
    6. ',b' → logprob: -17.375503540039062
    7. '`,' → logprob: -17.375503540039062
    8. 'c' → logprob: -17.500503540039062
    9. '),' → logprob: -17.500503540039062
    10. ' ' → logprob: -17.500503540039062

Token 76: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.348801851272583
    2. 'c' → logprob: -1.223801851272583
    3. ' ' → logprob: -8.848801612854004
    4. ')c' → logprob: -8.848801612854004
    5. ' ' → logprob: -10.348801612854004
    6. ' )' → logprob: -11.223801612854004
    7. ',c' → logprob: -11.598801612854004
    8. ')' → logprob: -11.973801612854004
    9. '	c' → logprob: -12.098801612854004
    10. '.c' → logprob: -14.348801612854004

Token 77: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0006979000172577798
    2. ')' → logprob: -7.375698089599609
    3. ',' → logprob: -10.50069808959961
    4. '))
' → logprob: -10.50069808959961
    5. ' ))' → logprob: -11.50069808959961
    6. '),' → logprob: -12.62569808959961
    7. ')))' → logprob: -13.87569808959961
    8. ')),' → logprob: -14.50069808959961
    9. '));' → logprob: -14.50069808959961
    10. '   ' → logprob: -15.12569808959961

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011908221058547497
    2. '<|end|>' → logprob: -7.001190662384033
    3. '    
' → logprob: -9.251191139221191
    4. ')' → logprob: -9.626191139221191
    5. '
' → logprob: -9.876191139221191
    6. ' ' → logprob: -11.001191139221191
    7. '```' → logprob: -11.251191139221191
    8. '<|end|>' → logprob: -11.626191139221191
    9. ',' → logprob: -12.376191139221191
    10. '  ' → logprob: -12.501191139221191

Token 79: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.04443579539656639
    2. ' tree' → logprob: -3.294435739517212
    3. '   ' → logprob: -5.294435977935791
    4. '	tree' → logprob: -6.669435977935791
    5. ' ' → logprob: -10.044435501098633
    6. '(tree' → logprob: -10.919435501098633
    7. '.tree' → logprob: -11.919435501098633
    8. '-tree' → logprob: -12.919435501098633
    9. '  ' → logprob: -13.044435501098633
    10. '    ' → logprob: -13.169435501098633

Token 80: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -9.372294698550832e-06
    2. '[' → logprob: -11.875009536743164
    3. '[c' → logprob: -14.125009536743164
    4. 'b' → logprob: -14.125009536743164
    5. '[a' → logprob: -14.375009536743164
    6. '[B' → logprob: -16.250009536743164
    7. ' [' → logprob: -16.875009536743164
    8. '[s' → logprob: -17.000009536743164
    9. '```' → logprob: -17.750009536743164
    10. ')[' → logprob: -18.000009536743164

Token 81: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.26021501421928406
    2. '].' → logprob: -1.5102150440216064
    3. ')' → logprob: -5.385214805603027
    4. '.' → logprob: -6.635214805603027
    5. ')].' → logprob: -7.010214805603027
    6. ']' → logprob: -7.760214805603027
    7. '[' → logprob: -8.135214805603027
    8. '.append' → logprob: -8.510214805603027
    9. '   ' → logprob: -8.635214805603027
    10. ')]' → logprob: -9.260214805603027

Token 82: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -7.896309739408025e-07
    2. ' append' → logprob: -15.000000953674316
    3. 'appen' → logprob: -15.250000953674316
    4. '.append' → logprob: -15.375000953674316
    5. '	append' → logprob: -16.75
    6. 'pp' → logprob: -19.25
    7. 'app' → logprob: -19.5
    8. 'Append' → logprob: -19.5
    9. '```' → logprob: -19.625
    10. '_append' → logprob: -20.25

Token 83: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -5.3120038501219824e-05
    2. '(' → logprob: -9.875053405761719
    3. '(
' → logprob: -13.750053405761719
    4. ' ((' → logprob: -14.875053405761719
    5. ' (' → logprob: -15.750053405761719
    6. ')((' → logprob: -18.37505340576172
    7. '(a' → logprob: -18.62505340576172
    8. '(
' → logprob: -19.50005340576172
    9. ' ' → logprob: -19.62505340576172
    10. '(((' → logprob: -20.12505340576172

Token 84: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.21363742649555206
    2. 'a' → logprob: -1.7136374711990356
    3. ' (' → logprob: -4.463637351989746
    4. ' a' → logprob: -7.838637351989746
    5. '(' → logprob: -8.463637351989746
    6. ',a' → logprob: -11.713637351989746
    7. ',' → logprob: -12.463637351989746
    8. '(
' → logprob: -12.963637351989746
    9. ')' → logprob: -13.338637351989746
    10. ')a' → logprob: -13.463637351989746

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003631137660704553
    2. ' ,' → logprob: -8.12536334991455
    3. ',c' → logprob: -9.62536334991455
    4. '`,' → logprob: -15.37536334991455
    5. '‌,' → logprob: -15.37536334991455
    6. 'c' → logprob: -15.75036334991455
    7. '<|end|>' → logprob: -16.250362396240234
    8. ' ' → logprob: -16.375362396240234
    9. ',
' → logprob: -16.750362396240234
    10. '```' → logprob: -16.750362396240234

Token 86: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.08895790576934814
    2. 'c' → logprob: -2.4639577865600586
    3. ' ' → logprob: -11.588957786560059
    4. ')c' → logprob: -12.338957786560059
    5. '<|end|>' → logprob: -13.588957786560059
    6. '	c' → logprob: -13.713957786560059
    7. ',c' → logprob: -13.963957786560059
    8. ',' → logprob: -14.963957786560059
    9. ' ,' → logprob: -15.213957786560059
    10. ' ' → logprob: -15.338957786560059

Token 87: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004651080351322889
    2. ')' → logprob: -5.379651069641113
    3. ' ))' → logprob: -10.879651069641113
    4. '))
' → logprob: -11.879651069641113
    5. ')))' → logprob: -12.504651069641113
    6. ' )' → logprob: -14.754651069641113
    7. '   ' → logprob: -14.754651069641113
    8. '),' → logprob: -15.629651069641113
    9. ',' → logprob: -15.754651069641113
    10. ' ' → logprob: -16.00465202331543

Token 88: 'ans' (ID: 616)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02913586050271988
    2. 'visited' → logprob: -4.154135704040527
    3. 'distance' → logprob: -4.654135704040527
    4. 'def' → logprob: -6.154135704040527
    5. 'q' → logprob: -7.529135704040527
    6. '
' → logprob: -8.279135704040527
    7. 'max' → logprob: -8.904135704040527
    8. 'depth' → logprob: -9.154135704040527
    9. 'dp' → logprob: -9.404135704040527
    10. 'parent' → logprob: -9.654135704040527

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004461804870516062
    2. '=' → logprob: -5.629461765289307
    3. '_' → logprob: -8.004462242126465
    4. '_dist' → logprob: -8.629462242126465
    5. '_distance' → logprob: -9.379462242126465
    6. 's' → logprob: -9.379462242126465
    7. 'dist' → logprob: -10.004462242126465
    8. '[' → logprob: -10.129462242126465
    9. ' ' → logprob: -10.629462242126465
    10. '[]' → logprob: -11.379462242126465

Token 90: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7396721839904785
    2. '0' → logprob: -1.1146721839904785
    3. '[]' → logprob: -1.9896721839904785
    4. '[-' → logprob: -3.8646721839904785
    5. ' [' → logprob: -4.3646721839904785
    6. '-' → logprob: -5.2396721839904785
    7. ' ' → logprob: -5.3646721839904785
    8. 'float' → logprob: -5.7396721839904785
    9. '[n' → logprob: -6.1146721839904785
    10. '[int' → logprob: -6.3646721839904785

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003123439964838326
    2. '10' → logprob: -8.625312805175781
    3. 'float' → logprob: -9.000312805175781
    4. 'int' → logprob: -12.125312805175781
    5. '2' → logprob: -13.375312805175781
    6. 'inf' → logprob: -14.375312805175781
    7. '(' → logprob: -14.750312805175781
    8. '100' → logprob: -14.875312805175781
    9. '-' → logprob: -15.625312805175781
    10. ' ' → logprob: -15.750312805175781

Token 92: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005608965293504298
    2. ']*' → logprob: -8.375560760498047
    3. ' ]' → logprob: -8.625560760498047
    4. ' for' → logprob: -9.625560760498047
    5. ']*(' → logprob: -9.625560760498047
    6. 'for' → logprob: -11.250560760498047
    7. ')' → logprob: -13.250560760498047
    8. ',' → logprob: -13.375560760498047
    9. ' ' → logprob: -14.125560760498047
    10. ']+' → logprob: -14.625560760498047

Token 93: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1406651735305786
    2. '+' → logprob: -2.015665054321289
    3. ' *' → logprob: -2.015665054321289
    4. 'for' → logprob: -2.515665054321289
    5. ' ]' → logprob: -2.765665054321289
    6. '*(' → logprob: -2.765665054321289
    7. '*' → logprob: -2.890665054321289
    8. ' for' → logprob: -3.265665054321289
    9. ']*(' → logprob: -4.015665054321289
    10. '(n' → logprob: -4.140665054321289

Token 94: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0010055390885099769
    2. ' (' → logprob: -7.00100564956665
    3. '(' → logprob: -9.501005172729492
    4. '(len' → logprob: -11.251005172729492
    5. '((' → logprob: -12.251005172729492
    6. '(N' → logprob: -15.501005172729492
    7. '   ' → logprob: -15.876005172729492
    8. '`' → logprob: -16.001005172729492
    9. '(nn' → logprob: -16.001005172729492
    10. ' ' → logprob: -16.126005172729492

Token 95: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04161366820335388
    2. 'n' → logprob: -3.6666135787963867
    3. ' (' → logprob: -4.291613578796387
    4. '(' → logprob: -6.916613578796387
    5. ' n' → logprob: -7.666613578796387
    6. '   ' → logprob: -11.041613578796387
    7. ')' → logprob: -11.791613578796387
    8. '(len' → logprob: -12.166613578796387
    9. '((' → logprob: -12.541613578796387
    10. ' ' → logprob: -12.791613578796387

Token 96: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007677250076085329
    2. ' +' → logprob: -4.88267707824707
    3. '+
' → logprob: -9.63267707824707
    4. ' +
' → logprob: -13.00767707824707
    5. ')' → logprob: -14.00767707824707
    6. '+)' → logprob: -14.38267707824707
    7. '1' → logprob: -14.38267707824707
    8. '
' → logprob: -14.63267707824707
    9. '+

' → logprob: -15.13267707824707
    10. '```' → logprob: -15.63267707824707

Token 97: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017058902885764837
    2. ' ' → logprob: -6.376706123352051
    3. '```' → logprob: -13.37670612335205
    4. ')' → logprob: -14.00170612335205
    5. ' )' → logprob: -15.37670612335205
    6. '2' → logprob: -15.50170612335205
    7. '   ' → logprob: -16.439205169677734
    8. '  ' → logprob: -16.564205169677734
    9. '7' → logprob: -16.689205169677734
    10. '
' → logprob: -16.689205169677734

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -15.625009536743164
    4. ')' → logprob: -16.437509536743164
    5. '2' → logprob: -16.625009536743164
    6. '   ' → logprob: -16.687509536743164
    7. '１' → logprob: -17.062509536743164
    8. '
' → logprob: -17.750009536743164
    9. '

' → logprob: -18.000009536743164
    10. '۱' → logprob: -18.500009536743164

Token 99: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007139815716072917
    2. ')
' → logprob: -7.25071382522583
    3. ')
' → logprob: -13.125714302062988
    4. ')

' → logprob: -13.750714302062988
    5. '```' → logprob: -15.500714302062988
    6. ')`' → logprob: -15.750714302062988
    7. ' )' → logprob: -16.000713348388672
    8. '
' → logprob: -16.250713348388672
    9. ']' → logprob: -16.250713348388672
    10. '`)' → logprob: -16.250713348388672

Token 100: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.11434811353683472
    2. 'from' → logprob: -2.9893481731414795
    3. 'def' → logprob: -3.3643481731414795
    4. 'queue' → logprob: -4.1143479347229
    5. 'q' → logprob: -5.6143479347229
    6. '
' → logprob: -6.7393479347229
    7. 'dist' → logprob: -7.3643479347229
    8. 'deque' → logprob: -7.7393479347229
    9. 'visited' → logprob: -8.364348411560059
    10. 'import' → logprob: -8.489348411560059

Token 101: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.080963092041202e-06
    2. '1' → logprob: -13.750004768371582
    3. '```' → logprob: -13.750004768371582
    4. '[
' → logprob: -14.875004768371582
    5. '\[' → logprob: -15.000004768371582
    6. ' [' → logprob: -15.125004768371582
    7. ',' → logprob: -15.250004768371582
    8. '=' → logprob: -15.562504768371582
    9. ' =' → logprob: -15.750004768371582
    10. '0' → logprob: -15.812504768371582

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000206401280593127
    2. '0' → logprob: -8.500205993652344
    3. ' ' → logprob: -13.000205993652344
    4. ']' → logprob: -15.500205993652344
    5. ')' → logprob: -16.250205993652344
    6. '[' → logprob: -16.625205993652344
    7. '2' → logprob: -17.312705993652344
    8. '```' → logprob: -17.500205993652344
    9. '   ' → logprob: -17.812705993652344
    10. '１' → logprob: -17.812705993652344

Token 103: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.921253225300461e-05
    2. ' ]' → logprob: -9.625069618225098
    3. ']=' → logprob: -12.875069618225098
    4. ')' → logprob: -14.500069618225098
    5. ')]' → logprob: -17.12506866455078
    6. '=' → logprob: -17.50006866455078
    7. '`]' → logprob: -18.00006866455078
    8. '[' → logprob: -18.62506866455078
    9. ' =' → logprob: -19.25006866455078
    10. '']' → logprob: -19.25006866455078

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759429931640625
    2. '=' → logprob: -0.8259429931640625
    3. ' ' → logprob: -13.325942993164062
    4. '0' → logprob: -13.950942993164062
    5. '<|end|>' → logprob: -14.325942993164062
    6. '[' → logprob: -16.325942993164062
    7. ',' → logprob: -16.325942993164062
    8. '＝' → logprob: -17.200942993164062
    9. ' =
' → logprob: -17.450942993164062
    10. ')' → logprob: -17.575942993164062

Token 105: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7968066206085496e-05
    2. ' ' → logprob: -10.500027656555176
    3. '1' → logprob: -15.125027656555176
    4. '000' → logprob: -16.562528610229492
    5. '   ' → logprob: -17.875028610229492
    6. '00' → logprob: -17.875028610229492
    7. '۰' → logprob: -18.250028610229492
    8. '```' → logprob: -18.562528610229492
    9. '2' → logprob: -18.625028610229492
    10. '０' → logprob: -18.812528610229492

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -12.000006675720215
    3. '1' → logprob: -14.250006675720215
    4. '000' → logprob: -16.12500762939453
    5. '00' → logprob: -17.68750762939453
    6. '2' → logprob: -18.00000762939453
    7. '100' → logprob: -18.50000762939453
    8. '10' → logprob: -19.00000762939453
    9. '   ' → logprob: -19.18750762939453
    10. '"' → logprob: -19.25000762939453

Token 107: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26158714294433594
    2. 'queue' → logprob: -1.511587142944336
    3. 'q' → logprob: -5.386587142944336
    4. 'deque' → logprob: -5.886587142944336
    5. 'from' → logprob: -6.511587142944336
    6. 'dq' → logprob: -7.886587142944336
    7. ' queue' → logprob: -8.511587142944336
    8. '
' → logprob: -9.511587142944336
    9. '```' → logprob: -10.261587142944336
    10. ' from' → logprob: -10.886587142944336

Token 108: 'que' (ID: 1126)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.22131726145744324
    2. 'q' → logprob: -1.7213172912597656
    3. 'dq' → logprob: -4.221317291259766
    4. 'from' → logprob: -5.471317291259766
    5. 'deque' → logprob: -7.596317291259766
    6. '
' → logprob: -8.971317291259766
    7. 'que' → logprob: -9.471317291259766
    8. '```' → logprob: -9.596317291259766
    9. 'Q' → logprob: -11.346317291259766
    10. 'visited' → logprob: -11.346317291259766

Token 109: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7447198033332825
    2. 'ue' → logprob: -0.9947198033332825
    3. ' =' → logprob: -1.8697197437286377
    4. 'u' → logprob: -6.869719982147217
    5. 'e' → logprob: -9.619719505310059
    6. 'uer' → logprob: -10.994719505310059
    7. '=e' → logprob: -12.619719505310059
    8. 'ues' → logprob: -13.369719505310059
    9. '   ' → logprob: -13.619719505310059
    10. '＝' → logprob: -13.994719505310059

Token 110: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.003177952254191041
    2. ' deque' → logprob: -5.753178119659424
    3. 'de' → logprob: -15.128177642822266
    4. 'Deque' → logprob: -17.503177642822266
    5. '	de' → logprob: -18.128177642822266
    6. '```' → logprob: -18.378177642822266
    7. '   ' → logprob: -18.753177642822266
    8. '(de' → logprob: -20.253177642822266
    9. 'collections' → logprob: -20.503177642822266
    10. 'from' → logprob: -20.878177642822266

Token 111: '([' (ID: 5194)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.3535749614238739
    2. '()' → logprob: -1.8535749912261963
    3. '([' → logprob: -2.3535749912261963
    4. '(' → logprob: -3.1035749912261963
    5. '((' → logprob: -6.978574752807617
    6. '([]' → logprob: -8.978574752807617
    7. '[(' → logprob: -9.103574752807617
    8. '([
' → logprob: -10.603574752807617
    9. '(['' → logprob: -11.728574752807617
    10. '([...' → logprob: -11.978574752807617

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008129627676680684
    2. '(' → logprob: -7.125813007354736
    3. ' ' → logprob: -11.750812530517578
    4. ' (' → logprob: -14.500812530517578
    5. '   ' → logprob: -16.875812530517578
    6. '```' → logprob: -17.125812530517578
    7. ')' → logprob: -17.500812530517578
    8. '１' → logprob: -18.000812530517578
    9. '۱' → logprob: -18.625812530517578
    10. '(
' → logprob: -19.250812530517578

Token 113: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.004095377866178751
    2. ')' → logprob: -5.504095554351807
    3. ')])' → logprob: -11.629095077514648
    4. '])
' → logprob: -12.879095077514648
    5. '))' → logprob: -12.879095077514648
    6. ')]' → logprob: -13.504095077514648
    7. ' ])' → logprob: -14.129095077514648
    8. ']' → logprob: -14.629095077514648
    9. ''])' → logprob: -16.00409507751465
    10. ')
' → logprob: -16.37909507751465

Token 114: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03164052590727806
    2. '
' → logprob: -3.5316405296325684
    3. ' while' → logprob: -6.281640529632568
    4. '```' → logprob: -11.53164005279541
    5. '	while' → logprob: -13.03164005279541
    6. '    
' → logprob: -13.53164005279541
    7. ' 
' → logprob: -13.53164005279541
    8. 'While' → logprob: -13.78164005279541
    9. '
' → logprob: -14.15664005279541
    10. '\n' → logprob: -14.53164005279541

Token 115: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.38688895106315613
    2. 'que' → logprob: -1.1368889808654785
    3. 'qu' → logprob: -11.76188850402832
    4. ' qu' → logprob: -12.76188850402832
    5. ' ' → logprob: -13.51188850402832
    6. ' len' → logprob: -13.51188850402832
    7. 'ques' → logprob: -13.76188850402832
    8. 'len' → logprob: -14.13688850402832
    9. '```' → logprob: -14.26188850402832
    10. 'queue' → logprob: -15.26188850402832

Token 116: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01701483502984047
    2. '):' → logprob: -4.142014980316162
    3. '>:' → logprob: -7.267014980316162
    4. '():' → logprob: -8.767014503479004
    5. '.' → logprob: -10.142014503479004
    6. '.:' → logprob: -11.142014503479004
    7. ':**' → logprob: -11.392014503479004
    8. ']:' → logprob: -12.017014503479004
    9. ')' → logprob: -12.017014503479004
    10. '.pop' → logprob: -12.392014503479004

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027222638949751854
    2. ' node' → logprob: -4.402222633361816
    3. ' v' → logprob: -4.777222633361816
    4. 'v' → logprob: -6.402222633361816
    5. 'node' → logprob: -6.777222633361816
    6. ' u' → logprob: -6.902222633361816
    7. 'u' → logprob: -7.277222633361816
    8. ' p' → logprob: -7.402222633361816
    9. ' current' → logprob: -7.902222633361816
    10. '    
' → logprob: -8.902222633361816

Token 118: ' node' (ID: 4596)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.6884915232658386
    2. 'u' → logprob: -0.9384915232658386
    3. ' v' → logprob: -3.1884915828704834
    4. 'v' → logprob: -3.3134915828704834
    5. ' node' → logprob: -3.9384915828704834
    6. 'node' (adapté à ' node') → logprob: -5.063491344451904
    7. '   ' → logprob: -6.313491344451904
    8. 'cur' → logprob: -7.813491344451904
    9. ' cur' → logprob: -8.313491821289062
    10. ' current' → logprob: -8.563491821289062

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15848515927791595
    2. '=' → logprob: -2.033485174179077
    3. ',' → logprob: -4.158484935760498
    4. ')' → logprob: -10.283485412597656
    5. ' ,' → logprob: -11.783485412597656
    6. '   ' → logprob: -12.158485412597656
    7. ' ' → logprob: -13.533485412597656
    8. '=node' → logprob: -13.533485412597656
    9. ',node' → logprob: -13.908485412597656
    10. ']' → logprob: -13.908485412597656

Token 120: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.02976333536207676
    2. ' que' → logprob: -3.5297632217407227
    3. '   ' → logprob: -12.779763221740723
    4. 'ques' → logprob: -12.904763221740723
    5. 'qu' → logprob: -13.029763221740723
    6. ' ' → logprob: -13.279763221740723
    7. ' ' → logprob: -14.404763221740723
    8. 'deque' → logprob: -14.404763221740723
    9. '	' → logprob: -14.529763221740723
    10. 'quee' → logprob: -15.029763221740723

Token 121: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00018244501552544534
    2. '.' → logprob: -8.625182151794434
    3. '.pop' → logprob: -13.125182151794434
    4. 'p' → logprob: -14.500182151794434
    5. '.append' → logprob: -16.62518310546875
    6. '   ' → logprob: -17.12518310546875
    7. ' .' → logprob: -17.12518310546875
    8. '>.' → logprob: -18.00018310546875
    9. '```' → logprob: -18.00018310546875
    10. ').' → logprob: -18.50018310546875

Token 122: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.01821807585656643
    2. 'op' → logprob: -4.018218040466309
    3. 'ople' → logprob: -9.768218040466309
    4. 'opl' → logprob: -12.518218040466309
    5. 'p' → logprob: -12.768218040466309
    6. 'oplevel' → logprob: -13.393218040466309
    7. 'opt' → logprob: -13.643218040466309
    8. 'pop' → logprob: -13.893218040466309
    9. 'ple' → logprob: -15.643218040466309
    10. 'opf' → logprob: -15.893218040466309

Token 123: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009144435753114522
    2. '()
' → logprob: -7.000914573669434
    3. ')' → logprob: -13.375914573669434
    4. '()
' → logprob: -14.125914573669434
    5. '())' → logprob: -15.250914573669434
    6. '()

' → logprob: -15.500914573669434
    7. '()]' → logprob: -16.500913619995117
    8. ' ()' → logprob: -16.625913619995117
    9. '()`' → logprob: -16.750913619995117
    10. '(' → logprob: -17.000913619995117

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20000509917736053
    2. ' for' → logprob: -1.950005054473877
    3. 'for' → logprob: -3.450005054473877
    4. '    
' → logprob: -5.200005054473877
    5. '
' → logprob: -6.575005054473877
    6. ' 
' → logprob: -8.450005531311035
    7. '	for' → logprob: -9.575005531311035
    8. ' ' → logprob: -11.450005531311035
    9. '   
' → logprob: -11.700005531311035
    10. ',' → logprob: -11.950005531311035

Token 125: ' cur' (ID: 4396)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04868036508560181
    2. ' for' → logprob: -3.048680305480957
    3. '   ' → logprob: -9.298680305480957
    4. '
' → logprob: -14.048680305480957
    5. '    
' → logprob: -14.548680305480957
    6. '	for' → logprob: -15.923680305480957
    7. ' 
' → logprob: -17.173681259155273
    8. ' ' → logprob: -17.298681259155273
    9. '  
' → logprob: -18.423681259155273
    10. '  ' → logprob: -19.048681259155273

Token 126: '_col' (ID: 7255)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.3977314531803131
    2. 'dist' → logprob: -2.0227315425872803
    3. '_cost' → logprob: -2.3977315425872803
    4. 'r' → logprob: -3.3977315425872803
    5. 't' → logprob: -3.6477315425872803
    6. '_ans' → logprob: -4.522731304168701
    7. '_distance' → logprob: -5.022731304168701
    8. '_node' → logprob: -5.522731304168701
    9. '_weight' → logprob: -5.647731304168701
    10. 'd' → logprob: -5.897731304168701

Token 127: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0012310652527958155
    2. 'r' → logprob: -7.0012311935424805
    3. '=' → logprob: -8.37623119354248
    4. ' =' → logprob: -10.25123119354248
    5. ',' → logprob: -12.12623119354248
    6. 'o' → logprob: -12.25123119354248
    7. ' or' → logprob: -12.37623119354248
    8. '   ' → logprob: -12.62623119354248
    9. '```' → logprob: -12.62623119354248
    10. '0' → logprob: -12.75123119354248

Token 128: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.16162456572055817
    2. ' ans' → logprob: -1.911624550819397
    3. '0' → logprob: -7.286624431610107
    4. '(ans' → logprob: -7.411624431610107
    5. '	ans' → logprob: -9.911624908447266
    6. '   ' → logprob: -11.036624908447266
    7. ' ' → logprob: -11.536624908447266
    8. '[' → logprob: -11.536624908447266
    9. '_ans' → logprob: -12.286624908447266
    10. '1' → logprob: -12.536624908447266

Token 129: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -12.500003814697266
    3. 'node' → logprob: -18.375003814697266
    4. '(node' → logprob: -18.500003814697266
    5. ' [' → logprob: -19.375003814697266
    6. '[
' → logprob: -19.625003814697266
    7. '[user' → logprob: -20.500003814697266
    8. '```' → logprob: -20.875003814697266
    9. '[n' → logprob: -21.125003814697266
    10. ' node' → logprob: -21.875003814697266

Token 130: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17739802598953247
    2. ')
' → logprob: -1.9273979663848877
    3. ']' → logprob: -4.302398204803467
    4. '
' → logprob: -6.302398204803467
    5. '   ' → logprob: -6.927398204803467
    6. ']
' → logprob: -7.677398204803467
    7. '])' → logprob: -9.302397727966309
    8. ' )' → logprob: -10.177397727966309
    9. '])
' → logprob: -11.052397727966309
    10. ' )
' → logprob: -11.177397727966309

Token 131: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1927471160888672
    2. '   ' → logprob: -1.9427471160888672
    3. ' for' → logprob: -3.442747116088867
    4. '    
' → logprob: -11.067747116088867
    5. '
' → logprob: -12.567747116088867
    6. '	for' → logprob: -12.817747116088867
    7. ' ' → logprob: -14.942747116088867
    8. ' 
' → logprob: -15.192747116088867
    9. '```' → logprob: -15.567747116088867
    10. '   ' → logprob: -15.692747116088867

Token 132: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0122056370601058
    2. ' for' → logprob: -4.512205600738525
    3. '   ' → logprob: -6.762205600738525
    4. '
' → logprob: -14.887206077575684
    5. ' ' → logprob: -16.262205123901367
    6. '    
' → logprob: -16.762205123901367
    7. '	for' → logprob: -17.762205123901367
    8. '  ' → logprob: -18.262205123901367
    9. '```' → logprob: -18.262205123901367
    10. '``' → logprob: -19.387205123901367

Token 133: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.34733378887176514
    2. ' nxt' → logprob: -2.0973339080810547
    3. 'next' → logprob: -3.0973339080810547
    4. 'to' → logprob: -3.3473339080810547
    5. 'nei' → logprob: -3.5973339080810547
    6. '(ne' → logprob: -3.8473339080810547
    7. '(next' → logprob: -4.722333908081055
    8. ' neighbor' → logprob: -4.847333908081055
    9. 'ne' → logprob: -5.472333908081055
    10. 'n' → logprob: -5.597333908081055

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016742534353397787
    2. ' ,' → logprob: -8.750167846679688
    3. ',c' → logprob: -13.375167846679688
    4. ',n' → logprob: -13.500167846679688
    5. ',node' → logprob: -13.500167846679688
    6. ',col' → logprob: -13.750167846679688
    7. '‌,' → logprob: -14.250167846679688
    8. ',color' → logprob: -14.500167846679688
    9. ',next' → logprob: -14.750167846679688
    10. ' in' → logprob: -15.000167846679688

Token 135: ' weight' (ID: 6049)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.4865577816963196
    2. 'cost' → logprob: -1.1115577220916748
    3. 'col' → logprob: -3.236557722091675
    4. 'weight' → logprob: -4.236557960510254
    5. ' color' → logprob: -6.986557960510254
    6. ' cost' → logprob: -6.986557960510254
    7. 'dist' → logprob: -8.611557960510254
    8. 'w' → logprob: -9.111557960510254
    9. ' col' → logprob: -9.236557960510254
    10. 'edge' → logprob: -9.486557960510254

Token 136: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005939821247011423
    2. 'in' → logprob: -5.130939960479736
    3. ' ' → logprob: -11.880939483642578
    4. '	in' → logprob: -13.755939483642578
    5. ',' → logprob: -14.255939483642578
    6. ')' → logprob: -14.380939483642578
    7. '   ' → logprob: -15.005939483642578
    8. '_in' → logprob: -15.005939483642578
    9. 's' → logprob: -15.005939483642578
    10. '  ' → logprob: -15.380939483642578

Token 137: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.16032922267913818
    2. ' tree' → logprob: -1.9103292226791382
    3. '	tree' → logprob: -9.91032886505127
    4. '(tree' → logprob: -9.91032886505127
    5. ' ' → logprob: -12.91032886505127
    6. '.tree' → logprob: -13.66032886505127
    7. '_tree' → logprob: -14.28532886505127
    8. 'tre' → logprob: -14.78532886505127
    9. ' ' → logprob: -15.53532886505127
    10. 't' → logprob: -15.78532886505127

Token 138: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -1.3425219549390022e-05
    2. '[' → logprob: -11.37501335144043
    3. '[
' → logprob: -13.75001335144043
    4. ' [' → logprob: -15.12501335144043
    5. '(node' → logprob: -15.25001335144043
    6. '[[' → logprob: -17.00001335144043
    7. 'node' → logprob: -17.12501335144043
    8. '```' → logprob: -17.37501335144043
    9. '   ' → logprob: -17.62501335144043
    10. ' node' → logprob: -17.87501335144043

Token 139: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.017242874950170517
    2. ']:
' → logprob: -4.142242908477783
    3. ']:
' → logprob: -7.392242908477783
    4. ']' → logprob: -7.892242908477783
    5. '):' → logprob: -9.392242431640625
    6. ':' → logprob: -9.642242431640625
    7. ' ]' → logprob: -10.017242431640625
    8. '   ' → logprob: -11.642242431640625
    9. '):
' → logprob: -11.892242431640625
    10. ']:

' → logprob: -12.767242431640625

Token 140: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34571197628974915
    2. '       ' → logprob: -1.3457119464874268
    3. ':
' → logprob: -3.9707119464874268
    4. '
' → logprob: -4.970712184906006
    5. '   ' → logprob: -5.470712184906006
    6. '<|end|>' → logprob: -7.345712184906006
    7. '        
' → logprob: -8.095711708068848
    8. '    
' → logprob: -8.720711708068848
    9. ' 
' → logprob: -8.970711708068848
    10. ',' → logprob: -8.970711708068848

Token 141: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7198639512062073
    2. '
' → logprob: -0.8448639512062073
    3. '           ' → logprob: -3.2198638916015625
    4. '       ' → logprob: -3.9698638916015625
    5. 'if' (adapté à ' if') → logprob: -4.2198638916015625
    6. ' 
' → logprob: -5.5948638916015625
    7. '```' → logprob: -6.7198638916015625
    8. '<|end|>' → logprob: -6.7198638916015625
    9. '        
' → logprob: -7.2198638916015625
    10. '   ' → logprob: -7.3448638916015625

Token 142: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.0889996662735939
    2. 'ans' → logprob: -2.4639997482299805
    3. '(ans' → logprob: -9.96399974822998
    4. '	ans' → logprob: -11.46399974822998
    5. '_ans' → logprob: -14.08899974822998
    6. '   ' → logprob: -14.46399974822998
    7. ' ' → logprob: -14.96399974822998
    8. 'answer' → logprob: -15.33899974822998
    9. 'Ans' → logprob: -15.33899974822998
    10. '    ' → logprob: -15.83899974822998

Token 143: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. ' [' → logprob: -14.625000953674316
    3. '[
' → logprob: -15.500000953674316
    4. '```' → logprob: -16.125
    5. '[next' → logprob: -17.625
    6. 'neighbor' → logprob: -18.0
    7. '[node' → logprob: -18.5
    8. '   ' → logprob: -19.0
    9. '[[' → logprob: -19.0
    10. ' ' → logprob: -19.0

Token 144: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.0023463957477360964
    2. '[' → logprob: -6.127346515655518
    3. ' neighbor' → logprob: -8.75234603881836
    4. '_neighbor' → logprob: -13.25234603881836
    5. 'ighbor' → logprob: -14.50234603881836
    6. '[
' → logprob: -15.62734603881836
    7. ']' → logprob: -15.62734603881836
    8. '
' → logprob: -16.25234603881836
    9. ' [' → logprob: -16.37734603881836
    10. '][' → logprob: -16.50234603881836

Token 145: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007606270257383585
    2. ']==' → logprob: -5.007606506347656
    3. '==' → logprob: -7.507606506347656
    4. ' ]' → logprob: -8.382606506347656
    5. '[' → logprob: -10.132606506347656
    6. ' ==' → logprob: -10.257606506347656
    7. ' ' → logprob: -11.132606506347656
    8. ')' → logprob: -11.632606506347656
    9. '==-' → logprob: -12.382606506347656
    10. '```' → logprob: -12.632606506347656

Token 146: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3932560384273529
    2. ' ==' → logprob: -1.1432560682296753
    3. '==-' → logprob: -5.143256187438965
    4. ' ' → logprob: -8.143256187438965
    5. ')==' → logprob: -9.768256187438965
    6. '=' → logprob: -9.893256187438965
    7. ')' → logprob: -9.893256187438965
    8. ']==' → logprob: -10.268256187438965
    9. '<' → logprob: -11.143256187438965
    10. '===' → logprob: -11.643256187438965

Token 147: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0019289902411401272
    2. ' -' → logprob: -6.251928806304932
    3. '   ' → logprob: -15.87692928314209
    4. ' ' → logprob: -16.126928329467773
    5. '−' → logprob: -16.876928329467773
    6. '	' → logprob: -17.626928329467773
    7. '  ' → logprob: -17.751928329467773
    8. '<|end|>' → logprob: -17.751928329467773
    9. '‌' → logprob: -18.751928329467773
    10. '(-' → logprob: -19.126928329467773

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000712074339389801
    2. ' ' → logprob: -7.250711917877197
    3. '```' → logprob: -14.563212394714355
    4. '   ' → logprob: -15.063212394714355
    5. '<|end|>' → logprob: -15.313212394714355
    6. ')' → logprob: -15.563212394714355
    7. '  ' → logprob: -15.750712394714355
    8. '۱' → logprob: -16.43821144104004
    9. '１' → logprob: -16.87571144104004
    10. '    ' → logprob: -16.93821144104004

Token 149: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11330576241016388
    2. ':
' → logprob: -2.2383058071136475
    3. ' and' → logprob: -8.238306045532227
    4. '):
' → logprob: -9.113306045532227
    5. '):' → logprob: -10.238306045532227
    6. ':
' → logprob: -10.613306045532227
    7. ':

' → logprob: -11.363306045532227
    8. ')' → logprob: -11.488306045532227
    9. '       ' → logprob: -11.738306045532227
    10. '           ' → logprob: -12.488306045532227

Token 150: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01139132957905531
    2. '
' → logprob: -5.1363911628723145
    3. ' ans' → logprob: -5.5113911628723145
    4. '       ' → logprob: -7.2613911628723145
    5. '               ' → logprob: -8.261391639709473
    6. '```' → logprob: -9.386391639709473
    7. '            
' → logprob: -9.636391639709473
    8. 'ans' → logprob: -9.636391639709473
    9. '(ans' → logprob: -9.636391639709473
    10. ',' → logprob: -10.636391639709473

Token 151: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.6070696115493774
    2. 'ans' (adapté à ' ans') → logprob: -0.8570696115493774
    3. '           ' → logprob: -3.857069492340088
    4. '               ' → logprob: -5.732069492340088
    5. '   ' → logprob: -6.107069492340088
    6. '       ' → logprob: -6.107069492340088
    7. ' if' → logprob: -7.857069492340088
    8. '
' → logprob: -8.107069969177246
    9. 'if' → logprob: -8.357069969177246
    10. '```' → logprob: -8.357069969177246

Token 152: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. 'neighbor' → logprob: -14.750000953674316
    3. '```' → logprob: -15.375000953674316
    4. '[
' → logprob: -16.000001907348633
    5. '[node' → logprob: -16.250001907348633
    6. '_neighbor' → logprob: -16.250001907348633
    7. '[parent' → logprob: -17.125001907348633
    8. ' [' → logprob: -17.125001907348633
    9. ')[' → logprob: -17.375001907348633
    10. '[next' → logprob: -18.000001907348633

Token 153: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.00037895687273703516
    2. ' neighbor' → logprob: -8.250378608703613
    3. '[' → logprob: -9.125378608703613
    4. 'ighbor' → logprob: -12.625378608703613
    5. '_neighbor' → logprob: -13.125378608703613
    6. 'node' → logprob: -13.375378608703613
    7. 'weight' → logprob: -15.250378608703613
    8. '[node' → logprob: -15.500378608703613
    9. ']' → logprob: -15.625378608703613
    10. ' ' → logprob: -15.750378608703613

Token 154: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00014120421838015318
    2. ' ]' → logprob: -9.500141143798828
    3. ']=' → logprob: -10.250141143798828
    4. ')' → logprob: -10.875141143798828
    5. '=' → logprob: -11.625141143798828
    6. ' =' → logprob: -13.000141143798828
    7. ' ' → logprob: -16.000141143798828
    8. ']=(' → logprob: -16.000141143798828
    9. '])' → logprob: -16.750141143798828
    10. ')]' → logprob: -16.875141143798828

Token 155: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408178448677063
    2. '=' → logprob: -0.9740817546844482
    3. ' ' → logprob: -12.849081993103027
    4. ')' → logprob: -13.474081993103027
    5. ']' → logprob: -15.099081993103027
    6. '＝' → logprob: -16.34908103942871
    7. ',' → logprob: -16.72408103942871
    8. ' ^=' → logprob: -16.84908103942871
    9. ')=' → logprob: -17.47408103942871
    10. 's' → logprob: -17.59908103942871

Token 156: ' (' (ID: 350)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.19733799993991852
    2. '(cur' → logprob: -2.072338104248047
    3. ' cur' → logprob: -3.572338104248047
    4. 'weight' → logprob: -4.447338104248047
    5. '(weight' → logprob: -4.947338104248047
    6. ' (' → logprob: -5.447338104248047
    7. ' weight' → logprob: -7.447338104248047
    8. '(' → logprob: -7.572338104248047
    9. '1' → logprob: -8.072338104248047
    10. '0' → logprob: -8.322338104248047

Token 157: 'cur' (ID: 3264)
  Prédit: 'cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0032232257071882486
    2. 'weight' → logprob: -5.878223419189453
    3. ' cur' → logprob: -8.003223419189453
    4. '(cur' → logprob: -10.753223419189453
    5. '   ' → logprob: -11.128223419189453
    6. 'ans' → logprob: -12.003223419189453
    7. '	cur' → logprob: -12.128223419189453
    8. 'cu' → logprob: -12.253223419189453
    9. ' weight' → logprob: -12.503223419189453
    10. 'curr' → logprob: -12.503223419189453

Token 158: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -5.319370302458992e-06
    2. 'col' → logprob: -13.000005722045898
    3. '_color' → logprob: -13.000005722045898
    4. '_' → logprob: -14.625005722045898
    5. '_weight' → logprob: -16.1250057220459
    6. '_c' → logprob: -16.8750057220459
    7. '_cur' → logprob: -17.2500057220459
    8. '_COL' → logprob: -17.3750057220459
    9. '_val' → logprob: -18.2500057220459
    10. '	col' → logprob: -18.5000057220459

Token 159: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38814929127693176
    2. ' +' → logprob: -1.1381492614746094
    3. ' ^' → logprob: -7.263149261474609
    4. '^' → logprob: -7.763149261474609
    5. ' ' → logprob: -9.13814926147461
    6. ')' → logprob: -10.51314926147461
    7. ' ' → logprob: -12.76314926147461
    8. '
' → logprob: -13.01314926147461
    9. '+c' → logprob: -13.01314926147461
    10. 'if' → logprob: -13.38814926147461

Token 160: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.1426979899406433
    2. ' weight' → logprob: -2.017698049545288
    3. 'weig' → logprob: -11.142698287963867
    4. '1' → logprob: -12.892698287963867
    5. ')' → logprob: -13.392698287963867
    6. '(weight' → logprob: -13.642698287963867
    7. ' weig' → logprob: -14.267698287963867
    8. '   ' → logprob: -14.642698287963867
    9. 'w' → logprob: -14.767698287963867
    10. ' ' → logprob: -15.017698287963867

Token 161: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4868770196917467e-05
    2. ' )' → logprob: -10.875024795532227
    3. ')%' → logprob: -12.125024795532227
    4. '   ' → logprob: -16.000024795532227
    5. ')
' → logprob: -16.500024795532227
    6. '1' → logprob: -17.000024795532227
    7. ' ' → logprob: -17.250024795532227
    8. '）' → logprob: -17.500024795532227
    9. '0' → logprob: -17.625024795532227
    10. ')

' → logprob: -17.875024795532227

Token 162: ' &' (ID: 827)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6420949697494507
    2. '%' → logprob: -0.7670949697494507
    3. ')' → logprob: -4.76709508895874
    4. ' ' → logprob: -7.26709508895874
    5. ')%' → logprob: -8.767094612121582
    6. ' ' → logprob: -10.642094612121582
    7. '1' → logprob: -10.767094612121582
    8. '
' → logprob: -11.267094612121582
    9. ' )' → logprob: -11.767094612121582
    10. '0' → logprob: -12.267094612121582

Token 163: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25193196535110474
    2. ' ' → logprob: -1.50193190574646
    3. ' ' → logprob: -13.501932144165039
    4. '
' → logprob: -14.751932144165039
    5. '```' → logprob: -15.751932144165039
    6. ' (' → logprob: -16.00193214416504
    7. '(' → logprob: -16.31443214416504
    8. '#' → logprob: -16.50193214416504
    9. '01' → logprob: -16.75193214416504
    10. '   ' → logprob: -16.75193214416504

Token 164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '
' → logprob: -18.000003814697266
    4. '127' → logprob: -18.125003814697266
    5. '１' → logprob: -18.125003814697266
    6. '255' → logprob: -18.375003814697266
    7. '' → logprob: -18.625003814697266
    8. '01' → logprob: -19.000003814697266
    9. '```' → logprob: -19.250003814697266
    10. '   ' → logprob: -19.500003814697266

Token 165: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015875815879553556
    2. '
' → logprob: -6.876587390899658
    3. 'que' → logprob: -7.626587390899658
    4. '```' → logprob: -11.001587867736816
    5. ' que' → logprob: -11.126587867736816
    6. '            
' → logprob: -11.251587867736816
    7. '               ' → logprob: -12.376587867736816
    8. '   ' → logprob: -12.501587867736816
    9. ',' → logprob: -12.501587867736816
    10. '       ' → logprob: -12.751587867736816

Token 166: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016087667318060994
    2. '
' → logprob: -6.501608848571777
    3. 'que' → logprob: -9.376608848571777
    4. ' que' → logprob: -11.376608848571777
    5. '            
' → logprob: -13.001608848571777
    6. '
' → logprob: -13.376608848571777
    7. '   ' → logprob: -13.501608848571777
    8. '          ' → logprob: -13.626608848571777
    9. '       ' → logprob: -13.876608848571777
    10. '```' → logprob: -14.001608848571777

Token 167: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' (adapté à ' que') → logprob: -1.3425219549390022e-05
    2. '           ' → logprob: -11.50001335144043
    3. ' que' → logprob: -13.25001335144043
    4. '       ' → logprob: -14.00001335144043
    5. '   ' → logprob: -14.62501335144043
    6. 'qu' → logprob: -16.50001335144043
    7. '```' → logprob: -17.37501335144043
    8. 'ques' → logprob: -17.75001335144043
    9. 'queue' → logprob: -17.75001335144043
    10. '               ' → logprob: -18.00001335144043

Token 168: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003457136917859316
    2. '.' → logprob: -8.125346183776855
    3. '.extend' → logprob: -10.750346183776855
    4. '.p' → logprob: -11.375346183776855
    5. 'append' → logprob: -12.250346183776855
    6. '.put' → logprob: -12.625346183776855
    7. ').' → logprob: -13.000346183776855
    8. '].' → logprob: -13.375346183776855
    9. '.enqueue' → logprob: -13.625346183776855
    10. '.app' → logprob: -14.375346183776855

Token 169: '(ne' (ID: 79401)
  Prédit: '(ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -3.583550642360933e-05
    2. '(' → logprob: -10.250036239624023
    3. '((' → logprob: -15.000036239624023
    4. 'neighbor' → logprob: -16.875036239624023
    5. ' (' → logprob: -17.125036239624023
    6. '(
' → logprob: -17.375036239624023
    7. '(next' → logprob: -20.250036239624023
    8. '(friend' → logprob: -20.375036239624023
    9. '(

' → logprob: -20.750036239624023
    10. 'ne' → logprob: -20.750036239624023

Token 170: 'ighbor' (ID: 28225)
  Prédit: 'ighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbor' → logprob: -0.00047869363334029913
    2. 'gh' → logprob: -7.750478744506836
    3. 'igh' → logprob: -10.125478744506836
    4. 'ight' → logprob: -12.750478744506836
    5. 'ighbour' → logprob: -13.500478744506836
    6. 'g' → logprob: -13.875478744506836
    7. '[' → logprob: -14.000478744506836
    8. 'ig' → logprob: -14.500478744506836
    9. 'ighborhood' → logprob: -15.000478744506836
    10. ' ' → logprob: -15.250478744506836

Token 171: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ')
' → logprob: -12.87500286102295
    3. ' )' → logprob: -14.62500286102295
    4. ')return' → logprob: -16.625003814697266
    5. '）' → logprob: -18.125003814697266
    6. '())' → logprob: -18.375003814697266
    7. ')

' → logprob: -18.375003814697266
    8. '`)' → logprob: -18.375003814697266
    9. '```' → logprob: -18.375003814697266
    10. '))' → logprob: -18.500003814697266

Token 172: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4754974842071533
    2. 'for' → logprob: -0.9754974842071533
    3. '
' → logprob: -6.600497245788574
    4. '```' → logprob: -10.350497245788574
    5. '\n' → logprob: -11.600497245788574
    6. ' for' → logprob: -11.600497245788574
    7. '  
' → logprob: -13.600497245788574
    8. '
' → logprob: -13.850497245788574
    9. ' 
' → logprob: -13.850497245788574
    10. ' print' → logprob: -13.850497245788574

Token 173: '(*' (ID: 9000)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.728696346282959
    2. '(' → logprob: -0.978696346282959
    3. '('' → logprob: -2.353696346282959
    4. '(*' → logprob: -3.478696346282959
    5. '(sum' → logprob: -4.478696346282959
    6. '("' → logprob: -5.603696346282959
    7. '((' → logprob: -8.228696823120117
    8. '(len' → logprob: -8.603696823120117
    9. '("("' → logprob: -9.478696823120117
    10. '()' → logprob: -9.978696823120117

Token 174: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.7432603272027336e-06
    2. '(ans' → logprob: -13.875001907348633
    3. ' ans' → logprob: -14.125001907348633
    4. '[' → logprob: -17.625001907348633
    5. '	ans' → logprob: -18.875001907348633
    6. 'answer' → logprob: -20.625001907348633
    7. 'ANS' → logprob: -21.000001907348633
    8. ')' → logprob: -21.000001907348633
    9. '_ans' → logprob: -21.250001907348633
    10. 'a' → logprob: -21.625001907348633

Token 175: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.41866585687967e-06
    2. ')' → logprob: -11.750008583068848
    3. '1' → logprob: -15.375008583068848
    4. ' [' → logprob: -16.37500762939453
    5. '```' → logprob: -16.37500762939453
    6. ' ' → logprob: -18.87500762939453
    7. '(' → logprob: -19.37500762939453
    8. '[:' → logprob: -20.12500762939453
    9. '[
' → logprob: -20.50000762939453
    10. '`' → logprob: -20.50000762939453

Token 176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. '[' → logprob: -13.000005722045898
    3. ' ' → logprob: -13.500005722045898
    4. '
' → logprob: -13.750005722045898
    5. '```' → logprob: -14.625005722045898
    6. '2' → logprob: -15.625005722045898
    7. '])' → logprob: -16.5000057220459
    8. ')' → logprob: -16.6250057220459
    9. '   ' → logprob: -16.7500057220459
    10. ']' → logprob: -17.8750057220459

Token 177: ':],' (ID: 117284)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1604413390159607
    2. '])' → logprob: -1.9104413986206055
    3. ':)' → logprob: -10.035441398620605
    4. ' )' → logprob: -10.410441398620605
    5. '))' → logprob: -10.535441398620605
    6. ')])' → logprob: -10.535441398620605
    7. ',)' → logprob: -10.660441398620605
    8. ':' → logprob: -11.410441398620605
    9. '>)' → logprob: -11.535441398620605
    10. ';)' → logprob: -11.910441398620605

Token 178: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.06374695152044296
    2. ')' → logprob: -2.813746929168701
    3. ' sep' → logprob: -6.438746929168701
    4. 'end' → logprob: -9.06374740600586
    5. 'se' → logprob: -11.31374740600586
    6. '```' → logprob: -11.43874740600586
    7. ')
' → logprob: -11.56374740600586
    8. ' )' → logprob: -12.18874740600586
    9. 'separator' → logprob: -12.31374740600586
    10. ''\' → logprob: -12.43874740600586

Token 179: '="\' (ID: 129534)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '='' → logprob: -0.016261573880910873
    2. '=' → logprob: -4.141261577606201
    3. ''' → logprob: -8.766261100769043
    4. '="' → logprob: -10.016261100769043
    5. '='\' → logprob: -10.891261100769043
    6. '=',' → logprob: -12.391261100769043
    7. ')' → logprob: -13.516261100769043
    8. '"' → logprob: -14.141261100769043
    9. '=
' → logprob: -14.641261100769043
    10. '=

' → logprob: -14.766261100769043

Token 180: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.03680038079619408
    2. 'n' → logprob: -3.9118003845214844
    3. '
' → logprob: -5.661800384521484
    4. ' \' → logprob: -5.786800384521484
    5. '")' → logprob: -5.786800384521484
    6. ' ")' → logprob: -6.161800384521484
    7. ' ' → logprob: -6.536800384521484
    8. ' 
' → logprob: -6.536800384521484
    9. '"' → logprob: -7.286800384521484
    10. '  
' → logprob: -8.161800384521484

Token 181: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.47458693385124207
    2. ')' → logprob: -0.9745869636535645
    3. ')")' → logprob: -7.5995869636535645
    4. ')"' → logprob: -12.599586486816406
    5. ' )' → logprob: -12.849586486816406
    6. '')' → logprob: -13.724586486816406
    7. '"' → logprob: -14.224586486816406
    8. '`)' → logprob: -14.849586486816406
    9. '))' → logprob: -14.849586486816406
    10. ')
' → logprob: -15.599586486816406


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 179
Tokens correctement prédits (1ère position, stricte): 85
Tokens correctement prédits (1ère position, avec adaptation): 90
Tokens correctement prédits (top 10): 156
Précision stricte (1ère position): 47.49%
Précision adaptée (1ère position): 50.28%
Précision (top 10): 87.15%
================================================================================
