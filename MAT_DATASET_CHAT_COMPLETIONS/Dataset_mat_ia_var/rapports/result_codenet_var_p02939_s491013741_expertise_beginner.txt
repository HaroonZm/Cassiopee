================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s = input()
head = 0
tail = 1
ans = 0
before = ""
while True:
    ss = s[head:tail]
    if ss != before:
        before = ss
        head = tail
        tail = head + 1
        ans = ans + 1
    else:
        tail = tail + 1
    if tail == len(s) + 1:
        print(ans)
        break
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0039759352803230286
    2. ''' → logprob: -6.753975868225098
    3. '()' → logprob: -7.128975868225098
    4. '('' → logprob: -7.128975868225098
    5. '`' → logprob: -7.253975868225098
    6. '"' → logprob: -8.878975868225098
    7. '```' → logprob: -8.878975868225098
    8. '("("' → logprob: -9.378975868225098
    9. '(
' → logprob: -9.753975868225098
    10. '(`' → logprob: -10.753975868225098

Token 4: 'head' (ID: 3636)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04421548172831535
    2. '+' → logprob: -4.044215679168701
    3. '.strip' → logprob: -4.544215679168701
    4. 'if' → logprob: -5.044215679168701
    5. 'print' → logprob: -6.294215679168701
    6. '[' → logprob: -6.419215679168701
    7. '.split' → logprob: -7.044215679168701
    8. '=' → logprob: -7.169215679168701
    9. '.lower' → logprob: -7.294215679168701
    10. '[::-' → logprob: -7.419215679168701

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8819596767425537
    2. 's' → logprob: -1.6319596767425537
    3. '[' → logprob: -1.7569596767425537
    4. '(' → logprob: -2.6319596767425537
    5. ' =' → logprob: -2.6319596767425537
    6. '_' → logprob: -3.5069596767425537
    7. '()' → logprob: -4.006959915161133
    8. '.' → logprob: -4.631959915161133
    9. ')' → logprob: -5.006959915161133
    10. '[:]' → logprob: -6.256959915161133

Token 6: ' ' (ID: 220)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2523055970668793
    2. 's' → logprob: -1.5023056268692017
    3. 'len' → logprob: -9.12730598449707
    4. ' ' → logprob: -10.00230598449707
    5. ''s' → logprob: -10.12730598449707
    6. ' []' → logprob: -10.12730598449707
    7. ' len' → logprob: -10.12730598449707
    8. '"' → logprob: -10.50230598449707
    9. '[]' → logprob: -11.25230598449707
    10. '0' → logprob: -11.37730598449707

Token 7: '0' (ID: 15)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0034715402871370316
    2. 'len' → logprob: -6.378471374511719
    3. '0' → logprob: -7.253471374511719
    4. '[]' → logprob: -8.128471374511719
    5. ''s' → logprob: -8.253471374511719
    6. '""' → logprob: -9.128471374511719
    7. '"' → logprob: -9.253471374511719
    8. ' s' → logprob: -9.253471374511719
    9. '"s' → logprob: -10.003471374511719
    10. '''' → logprob: -10.128471374511719

Token 8: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.778038501739502
    2. 'while' → logprob: -1.028038501739502
    3. ' while' → logprob: -2.778038501739502
    4. 's' → logprob: -3.028038501739502
    5. '```' → logprob: -3.278038501739502
    6. ';' → logprob: -5.528038501739502
    7. '+' → logprob: -5.528038501739502
    8. '<|end|>' → logprob: -5.653038501739502
    9. ' 
' → logprob: -5.778038501739502
    10. 'if' → logprob: -5.903038501739502

Token 9: 'tail' (ID: 20472)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7245386838912964
    2. 'while' → logprob: -1.3495386838912964
    3. ' while' → logprob: -2.099538803100586
    4. '=' → logprob: -2.474538803100586
    5. ' =' → logprob: -4.474538803100586
    6. '_' → logprob: -4.974538803100586
    7. 's' → logprob: -4.974538803100586
    8. '[' → logprob: -5.474538803100586
    9. 'tail' → logprob: -5.474538803100586
    10. ' +' → logprob: -5.724538803100586

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08910446614027023
    2. '=' → logprob: -2.464104413986206
    3. 's' → logprob: -9.464104652404785
    4. ' +=' → logprob: -9.964104652404785
    5. '+' → logprob: -10.964104652404785
    6. '_' → logprob: -12.089104652404785
    7. '+=' → logprob: -12.214104652404785
    8. ' ' → logprob: -12.714104652404785
    9. ' +' → logprob: -12.714104652404785
    10. ' s' → logprob: -12.964104652404785

Token 11: ' ' (ID: 220)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.2468797117471695
    2. 'len' → logprob: -1.6218796968460083
    3. '0' → logprob: -3.996879816055298
    4. ' ' → logprob: -5.996879577636719
    5. ' head' → logprob: -8.746879577636719
    6. 'head' → logprob: -9.621879577636719
    7. ' s' → logprob: -9.996879577636719
    8. '(len' → logprob: -10.496879577636719
    9. 's' → logprob: -10.621879577636719
    10. '1' → logprob: -10.746879577636719

Token 12: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.006028573028743267
    2. ' len' → logprob: -5.506028652191162
    3. '0' → logprob: -6.381028652191162
    4. '-' → logprob: -8.756028175354004
    5. '1' → logprob: -10.006028175354004
    6. ' ' → logprob: -10.881028175354004
    7. '(len' → logprob: -11.006028175354004
    8. 's' → logprob: -12.631028175354004
    9. 'head' → logprob: -12.756028175354004
    10. ' -' → logprob: -12.881028175354004

Token 13: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6062629818916321
    2. '
' → logprob: -1.3562629222869873
    3. ' while' → logprob: -2.7312629222869873
    4. '+' → logprob: -3.1062629222869873
    5. ' if' → logprob: -3.7312629222869873
    6. 'if' → logprob: -3.8562629222869873
    7. 's' → logprob: -4.356263160705566
    8. ' ' → logprob: -5.106263160705566
    9. '#' → logprob: -5.231263160705566
    10. ' 
' → logprob: -5.856263160705566

Token 14: 'ans' (ID: 616)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2959155738353729
    2. ' while' → logprob: -1.9209156036376953
    3. 'if' → logprob: -2.9209156036376953
    4. ' if' → logprob: -3.4209156036376953
    5. '
' → logprob: -4.170915603637695
    6. '+' → logprob: -5.670915603637695
    7. 's' → logprob: -6.545915603637695
    8. '+
' → logprob: -7.295915603637695
    9. '```' → logprob: -8.295915603637695
    10. '#' → logprob: -8.545915603637695

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3909911513328552
    2. '=' → logprob: -1.1409912109375
    3. '_' → logprob: -5.7659912109375
    4. ' +=' → logprob: -7.5159912109375
    5. 's' → logprob: -8.7659912109375
    6. '[' → logprob: -8.8909912109375
    7. '+' → logprob: -10.2659912109375
    8. ' ' → logprob: -10.5159912109375
    9. '+=' → logprob: -10.5159912109375
    10. ',' → logprob: -11.1409912109375

Token 16: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08327198773622513
    2. ' ' → logprob: -2.7082719802856445
    3. '""' → logprob: -5.5832719802856445
    4. '''' → logprob: -6.4582719802856445
    5. 'len' → logprob: -6.5832719802856445
    6. 's' → logprob: -6.5832719802856445
    7. '[]' → logprob: -6.7082719802856445
    8. ' ''' → logprob: -7.2082719802856445
    9. ' []' → logprob: -7.3332719802856445
    10. ' ""' → logprob: -7.5832719802856445

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02922246605157852
    2. '""' → logprob: -4.40422248840332
    3. '''' → logprob: -4.52922248840332
    4. '[]' → logprob: -6.15422248840332
    5. 's' → logprob: -6.77922248840332
    6. 'len' → logprob: -7.15422248840332
    7. '"' → logprob: -7.15422248840332
    8. 'head' → logprob: -7.77922248840332
    9. ''' → logprob: -9.15422248840332
    10. ''s' → logprob: -9.65422248840332

Token 18: '
' (ID: 198)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6008109450340271
    2. 'while' → logprob: -0.9758109450340271
    3. '
' → logprob: -2.975811004638672
    4. ' if' → logprob: -4.600811004638672
    5. 'if' → logprob: -5.225811004638672
    6. '\n' → logprob: -6.350811004638672
    7. '<|end|>' → logprob: -6.350811004638672
    8. ' ' → logprob: -6.850811004638672
    9. ' 
' → logprob: -7.225811004638672
    10. 's' → logprob: -7.350811004638672

Token 19: 'before' (ID: 29615)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6483372449874878
    2. ' while' → logprob: -0.7733372449874878
    3. ' ' → logprob: -5.523337364196777
    4. '+' → logprob: -6.148337364196777
    5. '
' → logprob: -6.398337364196777
    6. 's' → logprob: -6.898337364196777
    7. '<|end|>' → logprob: -7.023337364196777
    8. ' 
' → logprob: -7.148337364196777
    9. ',' → logprob: -7.273337364196777
    10. ' if' → logprob: -7.273337364196777

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7164111137390137
    2. '_' → logprob: -1.0914111137390137
    3. '=' → logprob: -2.2164111137390137
    4. '_char' → logprob: -4.091411113739014
    5. '[' → logprob: -4.591411113739014
    6. 's' → logprob: -4.966411113739014
    7. '_count' → logprob: -5.216411113739014
    8. '_index' → logprob: -6.216411113739014
    9. '_len' → logprob: -6.216411113739014
    10. '_space' → logprob: -6.216411113739014

Token 21: ' ""
' (ID: 18061)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -1.3601166009902954
    2. ' ""' → logprob: -1.4851166009902954
    3. ' ''' → logprob: -1.7351166009902954
    4. ' ' → logprob: -2.360116481781006
    5. '''' → logprob: -2.610116481781006
    6. ''' → logprob: -2.860116481781006
    7. '"' → logprob: -3.110116481781006
    8. '0' → logprob: -3.985116481781006
    9. ' None' → logprob: -4.360116481781006
    10. 's' → logprob: -4.485116481781006

Token 22: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.02071075141429901
    2. ' while' → logprob: -4.3957109451293945
    3. 'for' → logprob: -5.1457109451293945
    4. ':' → logprob: -7.6457109451293945
    5. '```' → logprob: -7.6457109451293945
    6. 'if' → logprob: -7.8957109451293945
    7. 's' → logprob: -8.145710945129395
    8. 'w' → logprob: -8.520710945129395
    9. 'i' → logprob: -9.270710945129395
    10. ' for' → logprob: -9.395710945129395

Token 23: ' True' (ID: 6432)
  Prédit: ' head'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' head' → logprob: -0.4873700737953186
    2. ' tail' → logprob: -0.9873700737953186
    3. ' s' → logprob: -4.987370014190674
    4. 'head' → logprob: -5.487370014190674
    5. ' ' → logprob: -6.862370014190674
    6. 'tail' → logprob: -7.737370014190674
    7. ' len' → logprob: -8.237370491027832
    8. 's' → logprob: -8.737370491027832
    9. ' not' → logprob: -8.987370491027832
    10. ' True' → logprob: -9.737370491027832

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.800739018013701e-05
    2. ':
' → logprob: -10.1250581741333
    3. ' :' → logprob: -11.3750581741333
    4. '   ' → logprob: -13.0000581741333
    5. '):' → logprob: -13.8750581741333
    6. ':**' → logprob: -14.1250581741333
    7. '():' → logprob: -14.1250581741333
    8. ',' → logprob: -14.2500581741333
    9. ' and' → logprob: -15.8750581741333
    10. '：' → logprob: -16.375057220458984

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003366050310432911
    2. ' if' → logprob: -6.003365993499756
    3. ' s' → logprob: -7.753365993499756
    4. '```' → logprob: -8.878366470336914
    5. 's' → logprob: -9.503366470336914
    6. ' ' → logprob: -9.753366470336914
    7. '    
' → logprob: -10.128366470336914
    8. ':' → logprob: -11.003366470336914
    9. '    ' → logprob: -11.003366470336914
    10. '   ' → logprob: -11.378366470336914

Token 26: ' ss' (ID: 20928)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6012527346611023
    2. ' tail' → logprob: -1.351252794265747
    3. ' s' → logprob: -3.101252794265747
    4. '   ' → logprob: -3.226252794265747
    5. ' head' → logprob: -3.351252794265747
    6. 'tail' → logprob: -3.976252794265747
    7. 'if' → logprob: -4.101252555847168
    8. 'head' → logprob: -4.476252555847168
    9. 's' → logprob: -5.101252555847168
    10. ' try' → logprob: -5.101252555847168

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4325388967990875
    2. '=' → logprob: -1.0575388669967651
    3. '=head' → logprob: -6.182538986206055
    4. 's' → logprob: -7.057538986206055
    5. ' ' → logprob: -7.932538986206055
    6. '[' → logprob: -8.557538986206055
    7. '==' → logprob: -9.682538986206055
    8. 'head' → logprob: -9.807538986206055
    9. ' ==' → logprob: -9.932538986206055
    10. '+=' → logprob: -10.807538986206055

Token 28: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4287603497505188
    2. 's' → logprob: -1.053760290145874
    3. 'input' → logprob: -10.678760528564453
    4. ' input' → logprob: -10.928760528564453
    5. ' ' → logprob: -12.428760528564453
    6. 'head' → logprob: -12.678760528564453
    7. ''s' → logprob: -13.178760528564453
    8. 'ss' → logprob: -13.428760528564453
    9. ' head' → logprob: -13.428760528564453
    10. '"s' → logprob: -13.928760528564453

Token 29: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010556964843999594
    2. '[:' → logprob: -9.250105857849121
    3. 'head' → logprob: -13.500105857849121
    4. '[start' → logprob: -13.500105857849121
    5. ' [' → logprob: -13.750105857849121
    6. '=head' → logprob: -14.000105857849121
    7. 'before' → logprob: -14.500105857849121
    8. 'tail' → logprob: -14.625105857849121
    9. '[s' → logprob: -15.000105857849121
    10. '[:]' → logprob: -15.125105857849121

Token 30: 'head' (ID: 3636)
  Prédit: 'head'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'head' → logprob: -0.2034270316362381
    2. 'tail' → logprob: -1.7034270763397217
    3. ' head' → logprob: -6.703426837921143
    4. ' tail' → logprob: -7.203426837921143
    5. '(head' → logprob: -11.4534273147583
    6. '   ' → logprob: -12.0784273147583
    7. '	head' → logprob: -12.4534273147583
    8. '=head' → logprob: -12.7034273147583
    9. ' ' → logprob: -12.8284273147583
    10. '0' → logprob: -13.2034273147583

Token 31: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028814300894737244
    2. ' :' → logprob: -6.2528815269470215
    3. '+' → logprob: -7.3778815269470215
    4. 'tail' → logprob: -8.752881050109863
    5. ' +' → logprob: -9.627881050109863
    6. ']' → logprob: -10.502881050109863
    7. '-tail' → logprob: -11.002881050109863
    8. ' tail' → logprob: -11.377881050109863
    9. ']+' → logprob: -11.377881050109863
    10. '   ' → logprob: -12.127881050109863

Token 32: 'tail' (ID: 20472)
  Prédit: 'tail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.007712150923907757
    2. ' tail' → logprob: -5.507712364196777
    3. 'head' → logprob: -5.632712364196777
    4. '   ' → logprob: -11.007712364196777
    5. ' head' → logprob: -11.007712364196777
    6. '-tail' → logprob: -12.382712364196777
    7. 'tails' → logprob: -13.257712364196777
    8. ' ' → logprob: -13.757712364196777
    9. '.tail' → logprob: -14.320212364196777
    10. '_tail' → logprob: -14.445212364196777

Token 33: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0034309120383113623
    2. '+' → logprob: -5.8784308433532715
    3. ' ]' → logprob: -8.37843132019043
    4. ')' → logprob: -8.62843132019043
    5. ']
' → logprob: -9.50343132019043
    6. ')]' → logprob: -9.75343132019043
    7. '])' → logprob: -9.75343132019043
    8. '+]' → logprob: -12.25343132019043
    9. ']+' → logprob: -12.62843132019043
    10. ' +' → logprob: -12.62843132019043

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48692914843559265
    2. '<|end|>' → logprob: -0.986929178237915
    3. '
' → logprob: -4.986928939819336
    4. '    
' → logprob: -6.236928939819336
    5. '<|end|>' → logprob: -6.611928939819336
    6. ' ' → logprob: -7.736928939819336
    7. '    ' → logprob: -7.736928939819336
    8. '  ' → logprob: -7.736928939819336
    9. ' if' → logprob: -7.986928939819336
    10. '  
' → logprob: -8.111928939819336

Token 35: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3723916709423065
    2. '<|end|>' → logprob: -1.622391700744629
    3. ' if' → logprob: -2.497391700744629
    4. ' ' → logprob: -4.997391700744629
    5. 'if' (adapté à ' if') → logprob: -5.247391700744629
    6. '    ' → logprob: -5.497391700744629
    7. '  ' → logprob: -5.747391700744629
    8. '
' → logprob: -5.747391700744629
    9. '<|end|>' → logprob: -5.872391700744629
    10. '    
' → logprob: -6.247391700744629

Token 36: ' ss' (ID: 20928)
  Prédit: ' ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ss' → logprob: -0.04357180371880531
    2. ' len' → logprob: -4.293571949005127
    3. ' not' → logprob: -4.418571949005127
    4. ' s' → logprob: -4.668571949005127
    5. 'ss' → logprob: -5.543571949005127
    6. ' ' → logprob: -6.418571949005127
    7. ' tail' → logprob: -6.543571949005127
    8. 'len' → logprob: -8.668571472167969
    9. ' ' → logprob: -8.918571472167969
    10. 's' → logprob: -9.543571472167969

Token 37: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2786434292793274
    2. ' in' → logprob: -2.2786433696746826
    3. '==' → logprob: -2.4036433696746826
    4. ' not' → logprob: -3.0286433696746826
    5. ' !=' → logprob: -6.403643608093262
    6. 'in' → logprob: -9.028643608093262
    7. '!=' → logprob: -9.028643608093262
    8. 'not' → logprob: -10.028643608093262
    9. ' ' → logprob: -11.278643608093262
    10. '>' → logprob: -11.653643608093262

Token 38: ' before' (ID: 2254)
  Prédit: ' before'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' before' → logprob: -0.38689494132995605
    2. 'before' → logprob: -1.136894941329956
    3. ' ' → logprob: -11.386895179748535
    4. '	before' → logprob: -12.761895179748535
    5. '(before' → logprob: -13.136895179748535
    6. '"' → logprob: -13.261895179748535
    7. 's' → logprob: -13.261895179748535
    8. 'bef' → logprob: -13.636895179748535
    9. '   ' → logprob: -13.636895179748535
    10. ' s' → logprob: -14.011895179748535

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38868728280067444
    2. ' and' → logprob: -1.263687252998352
    3. ':
' → logprob: -3.8886873722076416
    4. 'and' → logprob: -4.2636871337890625
    5. '<|end|>' → logprob: -6.3886871337890625
    6. ' or' → logprob: -6.5136871337890625
    7. '       ' → logprob: -7.6386871337890625
    8. '   ' → logprob: -7.6386871337890625
    9. '<|end|>' → logprob: -8.263687133789062
    10. ' :' → logprob: -9.263687133789062

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006561663467437029
    2. '   ' → logprob: -5.881561756134033
    3. '        
' → logprob: -7.256561756134033
    4. 'head' → logprob: -7.756561756134033
    5. ':' → logprob: -8.006561279296875
    6. ' head' → logprob: -8.256561279296875
    7. '    ' → logprob: -8.256561279296875
    8. 'tail' → logprob: -8.631561279296875
    9. ',' → logprob: -8.756561279296875
    10. ':
' → logprob: -9.006561279296875

Token 41: ' before' (ID: 2254)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7435913681983948
    2. 'ans' → logprob: -1.61859130859375
    3. ' ans' → logprob: -1.86859130859375
    4. '           ' → logprob: -2.24359130859375
    5. '        
' → logprob: -3.74359130859375
    6. '```' → logprob: -4.49359130859375
    7. '            
' → logprob: -5.11859130859375
    8. '
' → logprob: -5.36859130859375
    9. '<|end|>' → logprob: -5.36859130859375
    10. '+' → logprob: -5.99359130859375

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033653419464826584
    2. '=' → logprob: -3.408653497695923
    3. ' ' → logprob: -12.408653259277344
    4. ' +=' → logprob: -12.658653259277344
    5. '+=' → logprob: -15.408653259277344
    6. '＝' → logprob: -16.408653259277344
    7. ' ==' → logprob: -16.908653259277344
    8. ',' → logprob: -17.658653259277344
    9. '.=' → logprob: -17.658653259277344
    10. '<|end|>' → logprob: -17.908653259277344

Token 43: ' ss' (ID: 20928)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.4741445481777191
    2. ' ss' → logprob: -0.9741445779800415
    3. 's' → logprob: -9.84914493560791
    4. '	ss' → logprob: -12.47414493560791
    5. '(ss' → logprob: -12.59914493560791
    6. 'sss' → logprob: -12.97414493560791
    7. ' s' → logprob: -12.97414493560791
    8. '_ss' → logprob: -13.97414493560791
    9. ' ' → logprob: -14.22414493560791
    10. ':ss' → logprob: -15.22414493560791

Token 44: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015644356608390808
    2. '<|end|>' → logprob: -5.015644550323486
    3. '
' → logprob: -5.390644550323486
    4. '```' → logprob: -6.515644550323486
    5. '        
' → logprob: -6.765644550323486
    6. '   ' → logprob: -7.390644550323486
    7. ',' → logprob: -8.265644073486328
    8. '<|end|>' → logprob: -8.265644073486328
    9. '
' → logprob: -9.890644073486328
    10. '        ' → logprob: -10.015644073486328

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03046463429927826
    2. '<|end|>' → logprob: -4.1554646492004395
    3. '
' → logprob: -4.6554646492004395
    4. '   ' → logprob: -6.4054646492004395
    5. '        
' → logprob: -6.4054646492004395
    6. '```' → logprob: -7.7804646492004395
    7. '<|end|>' → logprob: -9.030464172363281
    8. 'tail' → logprob: -9.280464172363281
    9. '+' → logprob: -9.280464172363281
    10. '  
' → logprob: -9.405464172363281

Token 46: ' head' (ID: 3189)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.40664365887641907
    2. 'tail' → logprob: -1.2816436290740967
    3. '       ' → logprob: -3.0316436290740967
    4. 'if' → logprob: -5.531643867492676
    5. '   ' → logprob: -6.031643867492676
    6. ' ans' → logprob: -7.156643867492676
    7. '	ans' → logprob: -8.406643867492676
    8. '```' → logprob: -8.531643867492676
    9. ' tail' → logprob: -8.656643867492676
    10. 'head' (adapté à ' head') → logprob: -8.781643867492676

Token 47: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.7390812039375305
    2. ' +=' → logprob: -0.9890812039375305
    3. '+' → logprob: -2.3640811443328857
    4. '=' → logprob: -2.9890811443328857
    5. ' =' → logprob: -5.239081382751465
    6. ' +' → logprob: -7.364081382751465
    7. '++' → logprob: -9.739081382751465
    8. ' ' → logprob: -9.864081382751465
    9. '<|end|>' → logprob: -10.364081382751465
    10. ',' → logprob: -10.489081382751465

Token 48: ' tail' (ID: 12742)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.03247704729437828
    2. ' tail' → logprob: -3.6574771404266357
    3. 'head' → logprob: -5.157476902008057
    4. ' head' → logprob: -8.532477378845215
    5. '0' → logprob: -8.782477378845215
    6. '1' → logprob: -10.657477378845215
    7. '   ' → logprob: -11.907477378845215
    8. 't' → logprob: -12.532477378845215
    9. '_tail' → logprob: -12.657477378845215
    10. 'tails' → logprob: -13.282477378845215

Token 49: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18726447224617004
    2. '<|end|>' → logprob: -2.4372644424438477
    3. '+' → logprob: -3.4372644424438477
    4. 'tail' → logprob: -3.6872644424438477
    5. '   ' → logprob: -4.437264442443848
    6. '<|end|>' → logprob: -4.812264442443848
    7. '
' → logprob: -5.562264442443848
    8. ' +' → logprob: -8.062264442443848
    9. ' tail' → logprob: -8.062264442443848
    10. '        
' → logprob: -8.062264442443848

Token 50: '       ' (ID: 309)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.4156571328639984
    2. '       ' → logprob: -2.1656570434570312
    3. '<|end|>' → logprob: -2.1656570434570312
    4. '   ' → logprob: -2.6656570434570312
    5. '+' → logprob: -3.9156570434570312
    6. '<|end|>' → logprob: -5.290657043457031
    7. ' tail' → logprob: -5.415657043457031
    8. '
' → logprob: -5.540657043457031
    9. '```' → logprob: -5.790657043457031
    10. '    
' → logprob: -6.915657043457031

Token 51: ' tail' (ID: 12742)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' (adapté à ' tail') → logprob: -0.00012082771718269214
    2. ' tail' → logprob: -9.125121116638184
    3. '+' → logprob: -12.125121116638184
    4. '       ' → logprob: -12.250121116638184
    5. '++' → logprob: -14.250121116638184
    6. 'tails' → logprob: -15.250121116638184
    7. '   ' → logprob: -15.500121116638184
    8. 'head' → logprob: -16.125120162963867
    9. '-tail' → logprob: -16.375120162963867
    10. '+=' → logprob: -16.500120162963867

Token 52: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6220774054527283
    2. '+=' → logprob: -1.122077465057373
    3. '+' → logprob: -1.997077465057373
    4. ' +' → logprob: -6.622077465057373
    5. '=' → logprob: -7.747077465057373
    6. ' =' → logprob: -9.622076988220215
    7. '<|end|>' → logprob: -12.872076988220215
    8. '++' → logprob: -13.622076988220215
    9. '+='' → logprob: -13.747076988220215
    10. ' ' → logprob: -13.997076988220215

Token 53: ' head' (ID: 3189)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.2745894491672516
    2. ' tail' → logprob: -1.5245894193649292
    3. 'head' → logprob: -4.149589538574219
    4. ' head' → logprob: -5.024589538574219
    5. '   ' → logprob: -10.524589538574219
    6. 't' → logprob: -11.899589538574219
    7. ' ' → logprob: -12.399589538574219
    8. '+' → logprob: -12.899589538574219
    9. '  ' → logprob: -13.524589538574219
    10. '    ' → logprob: -13.524589538574219

Token 54: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.133198283147067e-05
    2. ' +' → logprob: -10.000051498413086
    3. '1' → logprob: -12.125051498413086
    4. '2' → logprob: -16.375051498413086
    5. '```' → logprob: -16.625051498413086
    6. '＋' → logprob: -16.875051498413086
    7. '+
' → logprob: -17.000051498413086
    8. '+i' → logprob: -17.125051498413086
    9. 'plus' → logprob: -17.125051498413086
    10. '+k' → logprob: -17.250051498413086

Token 55: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.992775888647884e-05
    2. ' ' → logprob: -9.625069618225098
    3. '2' → logprob: -13.375069618225098
    4. 'len' → logprob: -13.500069618225098
    5. '   ' → logprob: -15.000069618225098
    6. 's' → logprob: -16.375070571899414
    7. '0' → logprob: -17.125070571899414
    8. ' ' → logprob: -17.125070571899414
    9. 'ans' → logprob: -17.250070571899414
    10. '3' → logprob: -17.250070571899414

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.776898251497187e-05
    2. 'len' → logprob: -10.2500581741333
    3. '2' → logprob: -11.3750581741333
    4. ' ' → logprob: -11.7500581741333
    5. '3' → logprob: -13.7500581741333
    6. '10' → logprob: -15.0625581741333
    7. '4' → logprob: -15.5625581741333
    8. '   ' → logprob: -15.7500581741333
    9. 'length' → logprob: -16.000057220458984
    10. '5' → logprob: -16.125057220458984

Token 57: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5620102882385254
    2. '<|end|>' → logprob: -1.0620102882385254
    3. '       ' → logprob: -2.8120102882385254
    4. '
' → logprob: -4.062010288238525
    5. 'else' → logprob: -6.437010288238525
    6. '<|end|>' → logprob: -6.562010288238525
    7. '```' → logprob: -7.187010288238525
    8. ' else' → logprob: -7.312010288238525
    9. 'continue' → logprob: -7.437010288238525
    10. ' ' → logprob: -7.812010288238525

Token 58: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07540980726480484
    2. 'else' → logprob: -3.3254098892211914
    3. '<|end|>' → logprob: -3.8254098892211914
    4. '       ' → logprob: -4.575409889221191
    5. ' else' → logprob: -6.325409889221191
    6. '```' → logprob: -6.950409889221191
    7. 'elif' → logprob: -7.075409889221191
    8. '
' → logprob: -7.950409889221191
    9. '<|end|>' → logprob: -8.950409889221191
    10. 'continue' → logprob: -8.950409889221191

Token 59: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6341508030891418
    2. 'else' → logprob: -1.009150743484497
    3. 'continue' → logprob: -2.759150743484497
    4. '       ' → logprob: -3.634150743484497
    5. 'ans' (adapté à ' ans') → logprob: -4.509150981903076
    6. 'elif' → logprob: -5.884150981903076
    7. ' else' → logprob: -7.634150981903076
    8. ' continue' → logprob: -7.759150981903076
    9. '```' → logprob: -8.009150505065918
    10. 'if' → logprob: -9.259150505065918

Token 60: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03568992018699646
    2. '+=' → logprob: -3.4106898307800293
    3. '+' → logprob: -6.285689830780029
    4. ' =' → logprob: -9.285690307617188
    5. ' +' → logprob: -9.910690307617188
    6. '=' → logprob: -10.535690307617188
    7. ' ' → logprob: -12.410690307617188
    8. '<|end|>' → logprob: -12.910690307617188
    9. ']+=' → logprob: -14.035690307617188
    10. '++' → logprob: -14.285690307617188

Token 61: ' ans' (ID: 3345)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6826011538505554
    2. ' max' → logprob: -1.1826012134552002
    3. '1' → logprob: -2.1826012134552
    4. '0' → logprob: -3.4326012134552
    5. 'ans' → logprob: -3.8076012134552
    6. ' ans' → logprob: -4.682600975036621
    7. ' ' → logprob: -4.682600975036621
    8. 'len' → logprob: -7.182600975036621
    9. '+' → logprob: -7.557600975036621
    10. '(ans' → logprob: -8.807600975036621

Token 62: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005242056678980589
    2. ' +' → logprob: -5.255241870880127
    3. '<|end|>' → logprob: -12.255242347717285
    4. '1' → logprob: -13.505242347717285
    5. '+
' → logprob: -14.380242347717285
    6. '<|end|>' → logprob: -14.505242347717285
    7. '0' → logprob: -15.505242347717285
    8. ' plus' → logprob: -15.630242347717285
    9. '＋' → logprob: -16.13024139404297
    10. '-' → logprob: -16.63024139404297

Token 63: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011116440407931805
    2. ' ' → logprob: -4.5111165046691895
    3. 'len' → logprob: -9.761116027832031
    4. ' len' → logprob: -12.011116027832031
    5. 's' → logprob: -13.636116027832031
    6. 'ss' → logprob: -13.886116027832031
    7. '2' → logprob: -14.261116027832031
    8. '0' → logprob: -14.386116027832031
    9. 'int' → logprob: -14.636116027832031
    10. ' s' → logprob: -15.511116027832031

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003448792558629066
    2. ' ' → logprob: -8.375345230102539
    3. 'len' → logprob: -9.375345230102539
    4. 'ss' → logprob: -11.000345230102539
    5. 's' → logprob: -11.625345230102539
    6. '2' → logprob: -14.000345230102539
    7. 'int' → logprob: -14.250345230102539
    8. '0' → logprob: -14.750345230102539
    9. ' len' → logprob: -14.750345230102539
    10. '   ' → logprob: -15.875345230102539

Token 65: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06099590286612511
    2. '<|end|>' → logprob: -2.9359958171844482
    3. ' else' → logprob: -5.935996055603027
    4. 'else' → logprob: -7.060996055603027
    5. '
' → logprob: -7.185996055603027
    6. 'elif' → logprob: -7.560996055603027
    7. ' elif' → logprob: -7.935996055603027
    8. '  ' → logprob: -8.310996055603027
    9. '<|end|>' → logprob: -8.435996055603027
    10. '	elif' → logprob: -9.060996055603027

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01335340179502964
    2. '<|end|>' → logprob: -4.51335334777832
    3. 'else' → logprob: -6.88835334777832
    4. ' else' → logprob: -7.13835334777832
    5. 'elif' → logprob: -8.38835334777832
    6. ' elif' → logprob: -9.63835334777832
    7. ')' → logprob: -9.63835334777832
    8. '```' → logprob: -10.13835334777832
    9. '<|end|>' → logprob: -10.63835334777832
    10. '  ' → logprob: -11.26335334777832

Token 67: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.8160222768783569
    2. '   ' → logprob: -0.9410222768783569
    3. 'elif' → logprob: -1.941022276878357
    4. ' else' → logprob: -3.8160223960876465
    5. ' elif' → logprob: -6.3160223960876465
    6. '```' → logprob: -9.316021919250488
    7. '<|end|>' → logprob: -10.566021919250488
    8. '	elif' → logprob: -10.691021919250488
    9. '	else' → logprob: -10.941021919250488
    10. '  ' → logprob: -11.816021919250488

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0517304353415966
    2. ':
' → logprob: -3.0517303943634033
    3. '       ' → logprob: -6.176730632781982
    4. '   ' → logprob: -6.926730632781982
    5. ':
' → logprob: -11.301730155944824
    6. '<|end|>' → logprob: -11.551730155944824
    7. '_tail' → logprob: -11.926730155944824
    8. ',' → logprob: -12.051730155944824
    9. 'tail' → logprob: -12.176730155944824
    10. '    ' → logprob: -12.551730155944824

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2574016749858856
    2. 'tail' → logprob: -1.507401704788208
    3. ' tail' → logprob: -5.257401466369629
    4. '   ' → logprob: -8.507401466369629
    5. '_tail' → logprob: -11.382401466369629
    6. '```' → logprob: -11.507401466369629
    7. '           ' → logprob: -12.132401466369629
    8. '-tail' → logprob: -12.507401466369629
    9. '.tail' → logprob: -12.632401466369629
    10. '      ' → logprob: -13.007401466369629

Token 70: ' tail' (ID: 12742)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' (adapté à ' tail') → logprob: -0.10910382121801376
    2. '       ' → logprob: -2.9841039180755615
    3. ' tail' → logprob: -3.1091039180755615
    4. '           ' → logprob: -5.109103679656982
    5. '   ' → logprob: -6.234103679656982
    6. '_tail' → logprob: -10.73410415649414
    7. '    ' → logprob: -10.85910415649414
    8. ' ' → logprob: -10.85910415649414
    9. '.tail' → logprob: -10.98410415649414
    10. '      ' → logprob: -11.73410415649414

Token 71: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.18223275244235992
    2. ' +=' → logprob: -2.1822328567504883
    3. '=' → logprob: -2.9322328567504883
    4. ' =' → logprob: -7.807232856750488
    5. '+' → logprob: -9.057232856750488
    6. '++' → logprob: -14.557232856750488
    7. '+="' → logprob: -14.932232856750488
    8. '+='' → logprob: -14.932232856750488
    9. ' +' → logprob: -15.307232856750488
    10. '<|end|>' → logprob: -16.057231903076172

Token 72: ' tail' (ID: 12742)
  Prédit: ' tail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tail' → logprob: -0.07889143377542496
    2. 'tail' → logprob: -2.5788915157318115
    3. ' ' → logprob: -14.32889175415039
    4. '   ' → logprob: -14.70389175415039
    5. 'Tail' → logprob: -15.07889175415039
    6. '_tail' → logprob: -15.82889175415039
    7. '.tail' → logprob: -16.70389175415039
    8. '-tail' → logprob: -16.82889175415039
    9. '  ' → logprob: -17.07889175415039
    10. ' Tail' → logprob: -17.32889175415039

Token 73: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004078878089785576
    2. ' +' → logprob: -5.5040788650512695
    3. ' plus' → logprob: -15.62907886505127
    4. '＋' → logprob: -16.254079818725586
    5. '+++' → logprob: -17.129079818725586
    6. ' ' → logprob: -17.129079818725586
    7. '++' → logprob: -17.879079818725586
    8. '+=' → logprob: -18.254079818725586
    9. '+k' → logprob: -18.629079818725586
    10. 'plus' → logprob: -18.754079818725586

Token 74: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.180879816180095e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -15.875051498413086
    4. '2' → logprob: -15.875051498413086
    5. '<|end|>' → logprob: -17.875051498413086
    6. '```' → logprob: -18.250051498413086
    7. '  ' → logprob: -18.812551498413086
    8. '7' → logprob: -19.062551498413086
    9. '3' → logprob: -19.062551498413086
    10. '+' → logprob: -19.375051498413086

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '2' → logprob: -16.250003814697266
    4. '   ' → logprob: -18.000003814697266
    5. '<|end|>' → logprob: -18.250003814697266
    6. '```' → logprob: -19.000003814697266
    7. '  ' → logprob: -19.250003814697266
    8. '3' → logprob: -19.812503814697266
    9. '0' → logprob: -20.000003814697266
    10. '7' → logprob: -20.250003814697266

Token 76: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08391430974006653
    2. ' if' → logprob: -2.833914279937744
    3. '<|end|>' → logprob: -4.208914279937744
    4. 'if' → logprob: -5.958914279937744
    5. '```' → logprob: -6.208914279937744
    6. '
' → logprob: -6.833914279937744
    7. '+' → logprob: -8.083914756774902
    8. ' ' → logprob: -8.583914756774902
    9. '<|end|>' → logprob: -9.083914756774902
    10. '	if' → logprob: -9.208914756774902

Token 78: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02433355525135994
    2. ' if' → logprob: -3.8993334770202637
    3. 'if' (adapté à ' if') → logprob: -6.024333477020264
    4. '<|end|>' → logprob: -6.899333477020264
    5. '  ' → logprob: -9.149333953857422
    6. ' ' → logprob: -9.149333953857422
    7. '```' → logprob: -10.274333953857422
    8. '	if' → logprob: -10.274333953857422
    9. '<|end|>' → logprob: -11.024333953857422
    10. '
' → logprob: -11.274333953857422

Token 79: ' tail' (ID: 12742)
  Prédit: ' tail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tail' → logprob: -0.00539253419265151
    2. ' head' → logprob: -5.755392551422119
    3. 'tail' → logprob: -6.130392551422119
    4. 'head' → logprob: -11.005392074584961
    5. ' len' → logprob: -11.130392074584961
    6. ' ' → logprob: -12.630392074584961
    7. ' not' → logprob: -13.630392074584961
    8. 't' → logprob: -15.630392074584961
    9. ' ' → logprob: -15.880392074584961
    10. ' t' → logprob: -16.25539207458496

Token 80: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.31345272064208984
    2. ' >' → logprob: -1.3134527206420898
    3. '>=' → logprob: -9.43845272064209
    4. '==' → logprob: -9.93845272064209
    5. ' ==' → logprob: -10.43845272064209
    6. '>end' → logprob: -11.06345272064209
    7. ' >=' → logprob: -11.43845272064209
    8. ' ' → logprob: -13.81345272064209
    9. '>#' → logprob: -13.93845272064209
    10. '>s' → logprob: -14.06345272064209

Token 81: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0011729635298252106
    2. ' len' → logprob: -6.75117301940918
    3. '(len' → logprob: -12.87617301940918
    4. '=len' → logprob: -16.12617301940918
    5. '	len' → logprob: -17.50117301940918
    6. ',len' → logprob: -17.75117301940918
    7. '[len' → logprob: -18.00117301940918
    8. '<len' → logprob: -18.37617301940918
    9. '   ' → logprob: -18.87617301940918
    10. ' ' → logprob: -19.37617301940918

Token 82: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -8.537868779967539e-06
    2. '(' → logprob: -12.000008583068848
    3. 's' → logprob: -13.000008583068848
    4. '(ss' → logprob: -19.25000762939453
    5. ' (' → logprob: -19.75000762939453
    6. '(
' → logprob: -20.50000762939453
    7. '(S' → logprob: -21.75000762939453
    8. ' s' → logprob: -21.87500762939453
    9. ')' → logprob: -22.12500762939453
    10. '()' → logprob: -22.25000762939453

Token 83: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014504714636132121
    2. ')' → logprob: -6.626450538635254
    3. ' ):' → logprob: -9.751450538635254
    4. '):
' → logprob: -10.126450538635254
    5. ')+' → logprob: -11.376450538635254
    6. ':' → logprob: -11.376450538635254
    7. '):

' → logprob: -14.376450538635254
    8. ')):' → logprob: -14.501450538635254
    9. '   ' → logprob: -15.001450538635254
    10. '():' → logprob: -15.126450538635254

Token 84: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0810171589255333
    2. '+' → logprob: -2.706017255783081
    3. ':
' → logprob: -4.831017017364502
    4. ' +' → logprob: -6.081017017364502
    5. ' or' → logprob: -7.956017017364502
    6. '+:' → logprob: -8.08101749420166
    7. ' and' → logprob: -10.20601749420166
    8. '):' → logprob: -10.95601749420166
    9. ' :' → logprob: -11.83101749420166
    10. '   ' → logprob: -12.08101749420166

Token 85: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '0' → logprob: -17.625261306762695
    4. '   ' → logprob: -18.625261306762695
    5. '  ' → logprob: -19.125261306762695
    6. '```' → logprob: -19.500261306762695
    7. '１' → logprob: -19.750261306762695
    8. '2' → logprob: -20.250261306762695
    9. '-' → logprob: -20.250261306762695
    10. '<|end|>' → logprob: -21.062761306762695

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.583550642360933e-05
    2. ' ' → logprob: -10.250036239624023
    3. '0' → logprob: -14.750036239624023
    4. '2' → logprob: -17.125036239624023
    5. '   ' → logprob: -17.750036239624023
    6. '  ' → logprob: -18.375036239624023
    7. '１' → logprob: -18.375036239624023
    8. '{' → logprob: -18.500036239624023
    9. '-' → logprob: -18.937536239624023
    10. '```' → logprob: -19.937536239624023

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012700702995061874
    2. ':
' → logprob: -4.38770055770874
    3. '   ' → logprob: -8.762701034545898
    4. '       ' → logprob: -10.387701034545898
    5. ':return' → logprob: -14.012701034545898
    6. '):' → logprob: -14.887701034545898
    7. ':
' → logprob: -15.012701034545898
    8. ' :' → logprob: -15.012701034545898
    9. ',' → logprob: -15.012701034545898
    10. ' or' → logprob: -15.137701034545898

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03371347859501839
    2. '   ' → logprob: -3.4087135791778564
    3. 'break' → logprob: -10.158713340759277
    4. ' break' → logprob: -11.533713340759277
    5. '```' → logprob: -11.783713340759277
    6. '	break' → logprob: -12.283713340759277
    7. '           ' → logprob: -12.533713340759277
    8. '   ' → logprob: -13.658713340759277
    9. '	' → logprob: -14.533713340759277
    10. '	   ' → logprob: -15.033713340759277

Token 89: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4643881320953369
    2. ' break' → logprob: -1.214388132095337
    3. '       ' → logprob: -3.089388132095337
    4. 'break' → logprob: -3.589388132095337
    5. '	break' → logprob: -7.214387893676758
    6. ' print' → logprob: -8.089387893676758
    7. 'print' (adapté à ' print') → logprob: -8.714387893676758
    8. '```' → logprob: -9.214387893676758
    9. '    ' → logprob: -10.339387893676758
    10. '   ' → logprob: -10.464387893676758

Token 90: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00013166792632546276
    2. '(' → logprob: -9.000131607055664
    3. '(s' → logprob: -12.625131607055664
    4. '(len' → logprob: -13.000131607055664
    5. 'ans' → logprob: -13.125131607055664
    6. '(ss' → logprob: -15.125131607055664
    7. '(answer' → logprob: -15.500131607055664
    8. '(an' → logprob: -16.750131607055664
    9. '(head' → logprob: -17.125131607055664
    10. '(a' → logprob: -17.375131607055664

Token 91: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07892438024282455
    2. ')
' → logprob: -2.5789244174957275
    3. ')
' → logprob: -10.328924179077148
    4. ' )' → logprob: -14.203924179077148
    5. '   ' → logprob: -14.328924179077148
    6. ' )
' → logprob: -15.828924179077148
    7. ')`
' → logprob: -16.45392417907715
    8. ')`' → logprob: -16.45392417907715
    9. ')return' → logprob: -16.57892417907715
    10. ')#' → logprob: -17.07892417907715

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006175620947033167
    2. '   ' → logprob: -5.131175518035889
    3. '	break' → logprob: -9.256175994873047
    4. 'break' → logprob: -9.381175994873047
    5. ' break' → logprob: -10.381175994873047
    6. '        
' → logprob: -11.881175994873047
    7. '	' → logprob: -12.006175994873047
    8. '           ' → logprob: -12.256175994873047
    9. '```' → logprob: -13.006175994873047
    10. '    
' → logprob: -13.006175994873047

Token 93: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.017654994502663612
    2. ' break' → logprob: -4.392654895782471
    3. '       ' → logprob: -5.892654895782471
    4. '	break' → logprob: -6.517654895782471
    5. '   ' → logprob: -7.267654895782471
    6. '```' → logprob: -8.642655372619629
    7. 'b' → logprob: -12.517655372619629
    8. '_break' → logprob: -12.642655372619629
    9. '    
' → logprob: -12.892655372619629
    10. '
' → logprob: -12.892655372619629


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 91
Tokens correctement prédits (1ère position, stricte): 32
Tokens correctement prédits (1ère position, avec adaptation): 36
Tokens correctement prédits (top 10): 83
Précision stricte (1ère position): 35.16%
Précision adaptée (1ère position): 39.56%
Précision (top 10): 91.21%
================================================================================
