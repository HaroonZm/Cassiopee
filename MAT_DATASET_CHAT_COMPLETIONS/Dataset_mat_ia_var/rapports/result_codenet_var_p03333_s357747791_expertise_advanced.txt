================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from operator import itemgetter

def read_ints():
    return map(int, sys.stdin.readline().split())

N = int(sys.stdin.readline())
sec = [tuple(read_ints()) for _ in range(N)]
left = sorted(((l, i) for i, (l, _) in enumerate(sec)), key=itemgetter(0))
right = sorted(((r, i) for i, (_, r) in enumerate(sec)), key=itemgetter(0), reverse=True)

def process_paths(left_input, right_input, odd_first=True):
    used = [False] * N
    ls, rs = left_input.copy(), right_input.copy()
    pos, ans, n = 0, 0, 0
    flag_l, flag_r = 0, 0
    parity = 1 if odd_first else 0
    while ls or rs:
        if n % 2 == parity:
            curr = ls
            cmp_idx = 0  # left value
            flag, flag_assign = flag_l, 'flag_l'
        else:
            curr = rs
            cmp_idx = 0  # right value
            flag, flag_assign = flag_r, 'flag_r'
        if not curr:
            n += 1
            continue
        val, idx = curr[-1]
        if used[idx]:
            curr.pop()
            continue
        if (n % 2 == parity and pos < val) or (n % 2 != parity and pos > val):
            ans += abs(val - pos)
            pos = val
            used[idx] = True
            curr.pop()
            if n % 2 == parity:
                flag_l = 0
            else:
                flag_r = 0
        else:
            if flag == 1:
                curr.pop()
                if n % 2 == parity:
                    flag_l = 0
                else:
                    flag_r = 0
            else:
                if n % 2 == parity:
                    flag_l = 1
                else:
                    flag_r = 1
        n += 1
    return ans + abs(pos)

ans1 = process_paths(left, right, odd_first=False)
ans2 = process_paths(left, right, odd_first=True)
print(max(ans1, ans2))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' operator' (ID: 11019)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00688101164996624
    2. 'os' → logprob: -5.756881237030029
    3. ' math' → logprob: -6.881881237030029
    4. ' collections' → logprob: -7.256881237030029
    5. ' pathlib' → logprob: -7.756881237030029
    6. ' ' → logprob: -8.131880760192871
    7. ' typing' → logprob: -8.131880760192871
    8. ' datetime' → logprob: -9.006880760192871
    9. 'collections' → logprob: -9.256880760192871
    10. ' Py' → logprob: -9.256880760192871

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.008800813928246498
    2. 'import' → logprob: -4.758800983428955
    3. ' ' → logprob: -8.883800506591797
    4. '	import' → logprob: -10.633800506591797
    5. '.' → logprob: -11.133800506591797
    6. '<|end|>' → logprob: -12.883800506591797
    7. '_import' → logprob: -13.258800506591797
    8. '.import' → logprob: -14.258800506591797
    9. ' .' → logprob: -14.383800506591797
    10. ' impor' → logprob: -14.508800506591797

Token 6: ' item' (ID: 2169)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.28411298990249634
    2. ' item' → logprob: -1.6591129302978516
    3. ' ' → logprob: -3.7841129302978516
    4. ' add' → logprob: -4.159112930297852
    5. 'item' → logprob: -4.784112930297852
    6. 'import' → logprob: -4.784112930297852
    7. ' attr' → logprob: -7.534112930297852
    8. 'add' → logprob: -7.909112930297852
    9. ' sub' → logprob: -8.784112930297852
    10. ' is' → logprob: -8.909112930297852

Token 7: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0010541265364736319
    2. 'get' → logprob: -6.876054286956787
    3. 'g' → logprob: -11.376053810119629
    4. 'getitem' → logprob: -12.126053810119629
    5. 'gett' → logprob: -12.626053810119629
    6. 'attr' → logprob: -14.376053810119629
    7. 'gt' → logprob: -16.001054763793945
    8. 'Getter' → logprob: -16.376054763793945
    9. ' getter' → logprob: -16.501054763793945
    10. 'gte' → logprob: -16.751054763793945

Token 8: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7366024255752563
    2. '\' → logprob: -1.4866024255752563
    3. ',' → logprob: -1.6116024255752563
    4. '

' → logprob: -3.861602306365967
    5. '
' → logprob: -4.361602306365967
    6. '<|end|>' → logprob: -4.361602306365967
    7. 'import' → logprob: -4.486602306365967
    8. '```' → logprob: -4.861602306365967
    9. '(' → logprob: -5.111602306365967
    10. '.' → logprob: -5.361602306365967

Token 9: 'def' (ID: 1314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8300496935844421
    2. 'import' → logprob: -1.455049753189087
    3. 'def' → logprob: -2.080049753189087
    4. '.' → logprob: -3.205049753189087
    5. 'for' → logprob: -3.330049753189087
    6. '(' → logprob: -3.830049753189087
    7. '`' → logprob: -3.955049753189087
    8. 'data' → logprob: -4.080049514770508
    9. '```' → logprob: -4.455049514770508
    10. '#' → logprob: -4.705049514770508

Token 10: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7626866102218628
    2. ' process' → logprob: -1.7626866102218628
    3. ' calculate' → logprob: -2.1376867294311523
    4. ' main' → logprob: -2.7626867294311523
    5. ' space' → logprob: -3.3876867294311523
    6. ' read' → logprob: -3.5126867294311523
    7. ' get' → logprob: -4.262686729431152
    8. ' parse' → logprob: -4.262686729431152
    9. ' analyze' → logprob: -4.262686729431152
    10. ' my' → logprob: -4.512686729431152

Token 11: '_int' (ID: 12285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02399400621652603
    2. '(' → logprob: -4.398993968963623
    3. '_line' → logprob: -4.898993968963623
    4. '_file' → logprob: -6.273993968963623
    5. '_data' → logprob: -7.023993968963623
    6. '_input' → logprob: -8.273994445800781
    7. '_csv' → logprob: -8.398994445800781
    8. '_lines' → logprob: -9.648994445800781
    9. '_reader' → logprob: -10.023994445800781
    10. '_(' → logprob: -10.023994445800781

Token 12: 's' (ID: 82)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.05420408397912979
    2. '(' → logprob: -3.179203987121582
    3. 's' → logprob: -4.804203987121582
    4. '()' → logprob: -6.554203987121582
    5. '(s' → logprob: -8.304203987121582
    6. ' ():' → logprob: -8.554203987121582
    7. '):' → logprob: -8.554203987121582
    8. '```' → logprob: -8.554203987121582
    9. '_' → logprob: -8.929203987121582
    10. '():
' → logprob: -9.554203987121582

Token 13: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021433625370264053
    2. '():' → logprob: -6.252143383026123
    3. '("("' → logprob: -9.627142906188965
    4. ' (' → logprob: -10.502142906188965
    5. '(line' → logprob: -11.127142906188965
    6. '()' → logprob: -11.252142906188965
    7. '(prompt' → logprob: -11.502142906188965
    8. '(:' → logprob: -11.877142906188965
    9. '(x' → logprob: -11.877142906188965
    10. '```' → logprob: -12.002142906188965

Token 14: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.024316688999533653
    2. '   ' → logprob: -4.524316787719727
    3. '(' → logprob: -5.274316787719727
    4. '()' → logprob: -5.899316787719727
    5. ' ():' → logprob: -6.399316787719727
    6. ':' → logprob: -7.024316787719727
    7. ' return' → logprob: -7.399316787719727
    8. '):' → logprob: -7.774316787719727
    9. 'return' → logprob: -8.274316787719727
    10. '[]' → logprob: -8.524316787719727

Token 15: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2664034962654114
    2. ' return' → logprob: -1.7664034366607666
    3. '   ' → logprob: -2.7664034366607666
    4. '	return' → logprob: -11.391403198242188
    5. 'int' → logprob: -12.016403198242188
    6. ' list' → logprob: -12.141403198242188
    7. 'list' → logprob: -12.516403198242188
    8. '    ' → logprob: -13.016403198242188
    9. ' ' → logprob: -13.266403198242188
    10. '[]' → logprob: -13.516403198242188

Token 16: ' map' (ID: 4014)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.026978526264429092
    2. ' map' → logprob: -4.026978492736816
    3. 'list' → logprob: -4.776978492736816
    4. 'map' → logprob: -8.151978492736816
    5. ' ' → logprob: -10.276978492736816
    6. '[' → logprob: -10.651978492736816
    7. ' [' → logprob: -11.026978492736816
    8. '[list' → logprob: -12.776978492736816
    9. '[int' → logprob: -14.151978492736816
    10. ' []' → logprob: -14.276978492736816

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0024865958839654922
    2. '(' → logprob: -6.002486705780029
    3. 'int' → logprob: -12.502486228942871
    4. '<int' → logprob: -12.627486228942871
    5. '[int' → logprob: -13.002486228942871
    6. '(lambda' → logprob: -14.002486228942871
    7. '=int' → logprob: -16.002487182617188
    8. '(
' → logprob: -16.127487182617188
    9. ',int' → logprob: -16.127487182617188
    10. '```' → logprob: -16.377487182617188

Token 18: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.010364706628024578
    2. ',' → logprob: -5.260364532470703
    3. '(' → logprob: -5.510364532470703
    4. '=sys' → logprob: -8.135364532470703
    5. 'sys' → logprob: -8.635364532470703
    6. ')' → logprob: -8.635364532470703
    7. '(input' → logprob: -8.885364532470703
    8. ' sys' → logprob: -9.635364532470703
    9. '(stdin' → logprob: -10.135364532470703
    10. '(line' → logprob: -10.260364532470703

Token 19: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.07084306329488754
    2. ' sys' → logprob: -2.695842981338501
    3. ')' → logprob: -7.19584321975708
    4. 'input' → logprob: -9.570842742919922
    5. '=sys' → logprob: -10.570842742919922
    6. '(sys' → logprob: -10.820842742919922
    7. '	sys' → logprob: -10.945842742919922
    8. '   ' → logprob: -11.570842742919922
    9. ' input' → logprob: -11.945842742919922
    10. ' ' → logprob: -12.445842742919922

Token 20: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.002526076277717948
    2. '.argv' → logprob: -6.62752628326416
    3. '.' → logprob: -6.87752628326416
    4. '.stdout' → logprob: -8.87752628326416
    5. '.readline' → logprob: -11.00252628326416
    6. '.std' → logprob: -11.62752628326416
    7. '.input' → logprob: -14.00252628326416
    8. ' .' → logprob: -14.00252628326416
    9. '.)' → logprob: -14.87752628326416
    10. '.stderr' → logprob: -15.00252628326416

Token 21: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.07051683962345123
    2. '.' → logprob: -2.69551682472229
    3. ')' → logprob: -8.320516586303711
    4. '.read' → logprob: -8.820516586303711
    5. '.)' → logprob: -9.070516586303711
    6. '.readlines' → logprob: -10.195516586303711
    7. ' .' → logprob: -11.070516586303711
    8. ').' → logprob: -11.695516586303711
    9. '().' → logprob: -12.945516586303711
    10. '.")' → logprob: -13.195516586303711

Token 22: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011968309059739113
    2. '().' → logprob: -4.63696813583374
    3. '()' → logprob: -6.26196813583374
    4. ' ())' → logprob: -8.761968612670898
    5. '()))' → logprob: -9.011968612670898
    6. ')' → logprob: -11.136968612670898
    7. '());' → logprob: -13.261968612670898
    8. ' ()' → logprob: -13.511968612670898
    9. '();)' → logprob: -13.511968612670898
    10. '()]' → logprob: -14.011968612670898

Token 23: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.270078182220459
    2. 'split' → logprob: -1.520078182220459
    3. 'rstrip' → logprob: -4.020078182220459
    4. ')' → logprob: -10.895078659057617
    5. ' strip' → logprob: -11.645078659057617
    6. ' split' → logprob: -12.520078659057617
    7. 'read' → logprob: -13.520078659057617
    8. ' ' → logprob: -14.395078659057617
    9. '```' → logprob: -15.145078659057617
    10. '(split' → logprob: -15.645078659057617

Token 24: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.041669007390737534
    2. '()))' → logprob: -3.2916688919067383
    3. '))' → logprob: -6.291668891906738
    4. ')' → logprob: -6.541668891906738
    5. '()' → logprob: -8.166668891906738
    6. '())
' → logprob: -10.416668891906738
    7. '()))
' → logprob: -12.291668891906738
    8. ' ())' → logprob: -12.541668891906738
    9. '(' → logprob: -13.541668891906738
    10. '())))' → logprob: -14.166668891906738

Token 25: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008777416311204433
    2. 'for' → logprob: -5.258777618408203
    3. 'd' → logprob: -7.133777618408203
    4. 'n' → logprob: -7.133777618408203
    5. 'data' → logprob: -7.633777618408203
    6. '\' → logprob: -7.758777618408203
    7. '#' → logprob: -8.508777618408203
    8. '\n' → logprob: -8.758777618408203
    9. '```' → logprob: -8.883777618408203
    10. 'class' → logprob: -9.008777618408203

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1092374250292778
    2. '=' → logprob: -3.2342374324798584
    3. ',' → logprob: -3.6092374324798584
    4. ' ' → logprob: -3.7342374324798584
    5. ')' → logprob: -5.109237194061279
    6. ' ,' → logprob: -5.984237194061279
    7. '<|end|>' → logprob: -6.734237194061279
    8. '  ' → logprob: -7.109237194061279
    9. ' )' → logprob: -7.609237194061279
    10. '>' → logprob: -7.859237194061279

Token 27: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.007021661382168531
    2. 'int' → logprob: -5.007021427154541
    3. ' read' → logprob: -8.1320219039917
    4. ' ' → logprob: -12.3820219039917
    5. 'read' → logprob: -12.7570219039917
    6. ' next' → logprob: -13.2570219039917
    7. '10' → logprob: -13.8820219039917
    8. '=int' → logprob: -14.5070219039917
    9. ' len' → logprob: -14.7570219039917
    10. '5' → logprob: -15.2570219039917

Token 28: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005768326576799154
    2. '(sys' → logprob: -5.255768299102783
    3. '(input' → logprob: -8.005768775939941
    4. '('' → logprob: -8.755768775939941
    5. '()' → logprob: -11.380768775939941
    6. ' (' → logprob: -11.755768775939941
    7. '(s' → logprob: -12.005768775939941
    8. '(`' → logprob: -12.630768775939941
    9. '(Sys' → logprob: -12.755768775939941
    10. '(System' → logprob: -13.255768775939941

Token 29: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0006442877347581089
    2. '.argv' → logprob: -8.25064468383789
    3. '.' → logprob: -8.37564468383789
    4. 'stdin' → logprob: -9.12564468383789
    5. '.std' → logprob: -10.50064468383789
    6. '.stdout' → logprob: -11.37564468383789
    7. '.readline' → logprob: -13.12564468383789
    8. '.st' → logprob: -14.00064468383789
    9. ' stdin' → logprob: -15.00064468383789
    10. '.in' → logprob: -15.37564468383789

Token 30: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0015461683506146073
    2. '.stdin' → logprob: -6.626546382904053
    3. '.read' → logprob: -8.876545906066895
    4. '.' → logprob: -9.626545906066895
    5. '.argv' → logprob: -11.626545906066895
    6. '.)' → logprob: -13.126545906066895
    7. '.stdout' → logprob: -14.501545906066895
    8. '.input' → logprob: -14.751545906066895
    9. '.Read' → logprob: -15.001545906066895
    10. ' .' → logprob: -15.126545906066895

Token 31: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.001628048368729651
    2. '()' → logprob: -6.7516279220581055
    3. ')' → logprob: -8.501627922058105
    4. '().' → logprob: -9.001627922058105
    5. '()))' → logprob: -9.001627922058105
    6. ' ())' → logprob: -12.626627922058105
    7. '())
' → logprob: -13.001627922058105
    8. '))' → logprob: -14.501627922058105
    9. '();)' → logprob: -14.501627922058105
    10. '()[' → logprob: -15.001627922058105

Token 32: 'sec' (ID: 13711)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.3065788149833679
    2. 'A' → logprob: -1.9315788745880127
    3. 'arr' → logprob: -3.5565788745880127
    4. 'a' → logprob: -4.181578636169434
    5. 'items' → logprob: -4.181578636169434
    6. 'array' → logprob: -4.431578636169434
    7. 'lst' → logprob: -4.556578636169434
    8. ' A' → logprob: -4.806578636169434
    9. ' data' → logprob: -4.806578636169434
    10. 'numbers' → logprob: -4.931578636169434

Token 33: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3178183138370514
    2. 'onds' → logprob: -1.442818284034729
    3. 'ond' → logprob: -4.0678181648254395
    4. 'tion' → logprob: -5.1928181648254395
    5. 'rets' → logprob: -5.9428181648254395
    6. '```' → logprob: -5.9428181648254395
    7. 'tors' → logprob: -6.0678181648254395
    8. 'ons' → logprob: -6.3178181648254395
    9. 'ret' → logprob: -6.8178181648254395
    10. 'on' → logprob: -7.0678181648254395

Token 34: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.5126454830169678
    2. ' [' → logprob: -1.6376454830169678
    3. '[]' → logprob: -1.8876454830169678
    4. ' list' → logprob: -3.8876454830169678
    5. '[' → logprob: -4.262645721435547
    6. 'list' → logprob: -4.637645721435547
    7. '[int' → logprob: -5.012645721435547
    8. 'read' → logprob: -6.512645721435547
    9. '[N' → logprob: -7.637645721435547
    10. '[list' → logprob: -7.887645721435547

Token 35: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.655266284942627
    2. 'read' → logprob: -0.780266284942627
    3. 'list' → logprob: -4.905266284942627
    4. '*' → logprob: -5.030266284942627
    5. '0' → logprob: -5.655266284942627
    6. 'int' → logprob: -5.905266284942627
    7. ']' → logprob: -6.530266284942627
    8. '()]' → logprob: -8.655265808105469
    9. ' tuple' → logprob: -8.780265808105469
    10. 'sys' → logprob: -9.530265808105469

Token 36: '(read' (ID: 45738)
  Prédit: '(read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.12545807659626007
    2. 'read' → logprob: -2.375458002090454
    3. '(map' → logprob: -3.750458002090454
    4. '(sys' → logprob: -7.125458240509033
    5. 'map' → logprob: -8.250457763671875
    6. '(' → logprob: -9.375457763671875
    7. 'sys' → logprob: -9.500457763671875
    8. '(int' → logprob: -9.875457763671875
    9. '()]' → logprob: -10.250457763671875
    10. ']' → logprob: -10.625457763671875

Token 37: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -4.0722858102526516e-05
    2. 'ints' → logprob: -10.500041007995605
    3. 's' → logprob: -11.625041007995605
    4. '_' → logprob: -13.625041007995605
    5. 'Ints' → logprob: -14.000041007995605
    6. '_ids' → logprob: -14.875041007995605
    7. 'int' → logprob: -15.000041007995605
    8. '(int' → logprob: -15.125041007995605
    9. '_in' → logprob: -15.375041007995605
    10. ' ints' → logprob: -15.500041007995605

Token 38: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0003364158037584275
    2. '())' → logprob: -8.750336647033691
    3. '()' → logprob: -9.000336647033691
    4. ')' → logprob: -11.000336647033691
    5. 'ts' → logprob: -11.250336647033691
    6. ')]' → logprob: -12.250336647033691
    7. 'ints' → logprob: -12.375336647033691
    8. ')s' → logprob: -12.750336647033691
    9. '()]' → logprob: -13.250336647033691
    10. '   ' → logprob: -13.250336647033691

Token 39: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00012308525037951767
    2. '()),' → logprob: -9.750123023986816
    3. '()' → logprob: -9.875123023986816
    4. '()))' → logprob: -12.375123023986816
    5. '()]' → logprob: -12.500123023986816
    6. ' ())' → logprob: -13.000123023986816
    7. '())
' → logprob: -13.375123023986816
    8. '()).' → logprob: -15.000123023986816
    9. ')' → logprob: -15.250123023986816
    10. '(' → logprob: -15.375123023986816

Token 40: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1097385436296463
    2. '(N' → logprob: -2.48473858833313
    3. '()]' → logprob: -4.359738349914551
    4. 'for' → logprob: -5.359738349914551
    5. '())' → logprob: -6.859738349914551
    6. '(' → logprob: -6.859738349914551
    7. ' for' → logprob: -7.359738349914551
    8. ')' → logprob: -9.10973834991455
    9. '(i' → logprob: -9.48473834991455
    10. ']' → logprob: -9.73473834991455

Token 41: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13838988542556763
    2. ' range' → logprob: -2.138389825820923
    3. 'range' → logprob: -4.513390064239502
    4. '_range' → logprob: -8.138389587402344
    5. '(range' → logprob: -9.513389587402344
    6. ' _' → logprob: -10.013389587402344
    7. ' in' → logprob: -11.513389587402344
    8. '	range' → logprob: -11.888389587402344
    9. '_i' → logprob: -12.888389587402344
    10. '_in' → logprob: -13.513389587402344

Token 42: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.19954323768615723
    2. 'in' → logprob: -1.8245432376861572
    3. '_' → logprob: -4.074542999267578
    4. ' range' → logprob: -6.324542999267578
    5. ' in' → logprob: -7.949542999267578
    6. 'i' → logprob: -8.199542999267578
    7. '(range' → logprob: -9.824542999267578
    8. 'ange' → logprob: -10.449542999267578
    9. 'x' → logprob: -11.074542999267578
    10. 'ran' → logprob: -11.199542999267578

Token 43: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002622894535306841
    2. ' range' → logprob: -8.250262260437012
    3. '(range' → logprob: -14.000262260437012
    4. '	range' → logprob: -17.000263214111328
    5. ')' → logprob: -18.250263214111328
    6. 'rang' → logprob: -19.750263214111328
    7. ' ' → logprob: -20.000263214111328
    8. '   ' → logprob: -20.375263214111328
    9. '[' → logprob: -20.625263214111328
    10. '(' → logprob: -20.625263214111328

Token 44: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.000476190383778885
    2. '(' → logprob: -7.750476360321045
    3. 'N' → logprob: -10.000475883483887
    4. '(
' → logprob: -16.375476837158203
    5. '(n' → logprob: -17.375476837158203
    6. ')' → logprob: -18.000476837158203
    7. ' (' → logprob: -18.500476837158203
    8. ' N' → logprob: -18.750476837158203
    9. '(

' → logprob: -19.000476837158203
    10. '	N' → logprob: -19.250476837158203

Token 45: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00011915886716451496
    2. ')' → logprob: -9.25011920928955
    3. ']' → logprob: -10.75011920928955
    4. ')])' → logprob: -14.62511920928955
    5. '])]' → logprob: -14.87511920928955
    6. ' )' → logprob: -16.000118255615234
    7. '))' → logprob: -16.250118255615234
    8. ')],' → logprob: -16.375118255615234
    9. '')]' → logprob: -16.625118255615234
    10. ')]
' → logprob: -16.875118255615234

Token 46: 'left' (ID: 4530)
  Prédit: 'sec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sec' → logprob: -0.011872309260070324
    2. 'sorted' → logprob: -4.511872291564941
    3. '```' → logprob: -8.011872291564941
    4. ')' → logprob: -8.386872291564941
    5. 'secs' → logprob: -10.136872291564941
    6. '(sec' → logprob: -10.886872291564941
    7. ']' → logprob: -11.011872291564941
    8. ' sec' → logprob: -11.136872291564941
    9. '_sec' → logprob: -11.261872291564941
    10. 'sort' → logprob: -11.261872291564941

Token 47: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32872098684310913
    2. '_' → logprob: -2.328721046447754
    3. 'over' → logprob: -3.078721046447754
    4. '=' → logprob: -3.328721046447754
    5. '(' → logprob: -3.578721046447754
    6. ' =' → logprob: -3.828721046447754
    7. 'overs' → logprob: -4.203721046447754
    8. 's' → logprob: -4.203721046447754
    9. '_,' → logprob: -5.703721046447754
    10. '_sorted' → logprob: -6.328721046447754

Token 48: ' sorted' (ID: 20099)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08981843292713165
    2. '[]' → logprob: -3.3398184776306152
    3. 'min' → logprob: -3.9648184776306152
    4. '[' → logprob: -4.464818477630615
    5. 'sorted' → logprob: -4.964818477630615
    6. 'sec' → logprob: -5.339818477630615
    7. 'N' → logprob: -5.839818477630615
    8. 'max' → logprob: -6.464818477630615
    9. ' ' → logprob: -6.839818477630615
    10. '(' → logprob: -7.589818477630615

Token 49: '(((' (ID: 13163)
  Prédit: '(sec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sec' → logprob: -0.0007194612408056855
    2. '(' → logprob: -7.2507195472717285
    3. 'sec' → logprob: -12.37571907043457
    4. '(se' → logprob: -13.62571907043457
    5. '(seg' → logprob: -14.12571907043457
    6. '(seconds' → logprob: -14.50071907043457
    7. '(s' → logprob: -14.62571907043457
    8. '(ss' → logprob: -15.25071907043457
    9. '(secret' → logprob: -15.37571907043457
    10. '((' → logprob: -15.37571907043457

Token 50: 'l' (ID: 75)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.973244309425354
    2. 'x' → logprob: -1.223244309425354
    3. 'a' → logprob: -1.598244309425354
    4. 'sec' → logprob: -3.3482441902160645
    5. 'start' → logprob: -3.7232441902160645
    6. 'l' → logprob: -3.7232441902160645
    7. 't' → logprob: -4.3482441902160645
    8. 'e' → logprob: -4.8482441902160645
    9. 'b' → logprob: -5.3482441902160645
    10. 'c' → logprob: -5.5982441902160645

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08016107976436615
    2. '[' → logprob: -3.0801610946655273
    3. ',i' → logprob: -3.7051610946655273
    4. ' ,' → logprob: -5.955161094665527
    5. '[i' → logprob: -7.455161094665527
    6. ',index' → logprob: -7.705161094665527
    7. ',start' → logprob: -7.830161094665527
    8. 'ambda' → logprob: -8.080161094665527
    9. ',k' → logprob: -8.205161094665527
    10. ',l' → logprob: -8.330161094665527

Token 52: ' i' (ID: 575)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11373090744018555
    2. 'i' → logprob: -2.6137309074401855
    3. 'idx' → logprob: -4.1137309074401855
    4. ' r' → logprob: -4.9887309074401855
    5. ')' → logprob: -5.7387309074401855
    6. 'l' → logprob: -6.2387309074401855
    7. 's' → logprob: -6.8637309074401855
    8. '0' → logprob: -7.2387309074401855
    9. ' i' → logprob: -7.4887309074401855
    10. ' ' → logprob: -7.6137309074401855

Token 53: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015118853189051151
    2. ',' → logprob: -6.751512050628662
    3. 'ex' → logprob: -8.501511573791504
    4. '),' → logprob: -10.126511573791504
    5. ' )' → logprob: -10.376511573791504
    6. 'x' → logprob: -10.751511573791504
    7. ',)' → logprob: -11.001511573791504
    8. '-' → logprob: -11.751511573791504
    9. ')
' → logprob: -12.626511573791504
    10. '[' → logprob: -12.876511573791504

Token 54: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9738191366195679
    2. ' for' → logprob: -1.3488191366195679
    3. ')' → logprob: -1.5988191366195679
    4. 'for' → logprob: -1.8488191366195679
    5. ' ,' → logprob: -6.348819255828857
    6. ' )' → logprob: -7.848819255828857
    7. ',l' → logprob: -8.0988187789917
    8. '[' → logprob: -8.8488187789917
    9. ' in' → logprob: -8.8488187789917
    10. ',)' → logprob: -9.3488187789917

Token 55: ' i' (ID: 575)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4879400134086609
    2. 'i' → logprob: -1.2379400730133057
    3. ' l' → logprob: -2.7379400730133057
    4. ' i' → logprob: -3.4879400730133057
    5. ',' → logprob: -7.862939834594727
    6. '_,' → logprob: -8.987939834594727
    7. ',l' → logprob: -9.987939834594727
    8. ' (' → logprob: -10.112939834594727
    9. ',i' → logprob: -10.112939834594727
    10. '(i' → logprob: -10.362939834594727

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034327033907175064
    2. ',l' → logprob: -4.034327030181885
    3. ' in' → logprob: -4.784327030181885
    4. 'in' → logprob: -4.909327030181885
    5. ' ,' → logprob: -8.659327507019043
    6. 'range' → logprob: -9.784327507019043
    7. ',n' → logprob: -11.034327507019043
    8. 'l' → logprob: -11.159327507019043
    9. '<|end|>' → logprob: -11.659327507019043
    10. ',(' → logprob: -11.909327507019043

Token 57: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.5257346630096436
    2. ' (' → logprob: -0.9007346630096436
    3. '(' → logprob: -6.400734901428223
    4. '(_,' → logprob: -7.775734901428223
    5. '(s' → logprob: -9.400734901428223
    6. '(L' → logprob: -9.650734901428223
    7. ' (_,' → logprob: -9.650734901428223
    8. '(n' → logprob: -10.025734901428223
    9. '(t' → logprob: -10.025734901428223
    10. '(r' → logprob: -10.150734901428223

Token 58: 'l' (ID: 75)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.5322227478027344
    2. 'l' → logprob: -0.9072227478027344
    3. ' (' → logprob: -5.532222747802734
    4. '(r' → logprob: -6.407222747802734
    5. 'r' → logprob: -6.532222747802734
    6. ' l' → logprob: -7.032222747802734
    7. 's' → logprob: -8.282222747802734
    8. '(' → logprob: -8.782222747802734
    9. '(s' → logprob: -8.782222747802734
    10. ' ' → logprob: -9.407222747802734

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008358351769857109
    2. ',r' → logprob: -7.50083589553833
    3. ',_' → logprob: -8.500835418701172
    4. ',l' → logprob: -10.125835418701172
    5. ' ,' → logprob: -11.375835418701172
    6. ')' → logprob: -12.625835418701172
    7. ',i' → logprob: -12.750835418701172
    8. ',)' → logprob: -12.875835418701172
    9. ',h' → logprob: -13.000835418701172
    10. 'r' → logprob: -13.125835418701172

Token 60: ' _)' (ID: 66309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04594021663069725
    2. ' r' → logprob: -3.6709401607513428
    3. '_' → logprob: -4.295940399169922
    4. '_)' → logprob: -5.670940399169922
    5. '_r' → logprob: -6.545940399169922
    6. ')' → logprob: -7.795940399169922
    7. ' _)' → logprob: -9.045940399169922
    8. ' _' → logprob: -9.295940399169922
    9. '_,' → logprob: -9.420940399169922
    10. '_),' → logprob: -9.670940399169922

Token 61: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.18143485486507416
    2. ' in' → logprob: -1.8064348697662354
    3. ')' → logprob: -6.431434631347656
    4. 'enumer' → logprob: -10.056434631347656
    5. ' ' → logprob: -11.306434631347656
    6. ' )' → logprob: -11.681434631347656
    7. '),' → logprob: -12.681434631347656
    8. ',' → logprob: -13.556434631347656
    9. '  ' → logprob: -13.806434631347656
    10. 'n' → logprob: -13.931434631347656

Token 62: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.023270636796951294
    2. ' enumerate' → logprob: -3.773270606994629
    3. 'sec' → logprob: -10.648270606994629
    4. 'enum' → logprob: -13.773270606994629
    5. 'en' → logprob: -15.273270606994629
    6. '```' → logprob: -17.148271560668945
    7. '(en' → logprob: -17.523271560668945
    8. 'Enumer' → logprob: -18.023271560668945
    9. 'range' → logprob: -18.523271560668945
    10. ' sec' → logprob: -18.773271560668945

Token 63: '(sec' (ID: 162816)
  Prédit: 'sec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sec' → logprob: -0.0006681174854747951
    2. '(sec' → logprob: -7.625668048858643
    3. ' sec' → logprob: -8.6256685256958
    4. 'secs' → logprob: -15.6256685256958
    5. ' ' → logprob: -16.125667572021484
    6. ')' → logprob: -16.250667572021484
    7. '_sec' → logprob: -16.750667572021484
    8. 'se' → logprob: -17.125667572021484
    9. '(' → logprob: -17.375667572021484
    10. '   ' → logprob: -18.000667572021484

Token 64: ')),' (ID: 12098)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6252803802490234
    2. ')))' → logprob: -0.8752803802490234
    3. ')),' → logprob: -3.5002803802490234
    4. ')' → logprob: -4.125280380249023
    5. '))),' → logprob: -7.250280380249023
    6. ' ' → logprob: -7.500280380249023
    7. '))))' → logprob: -8.500280380249023
    8. ' ))' → logprob: -9.250280380249023
    9. ')));' → logprob: -9.625280380249023
    10. ')))
' → logprob: -10.875280380249023

Token 65: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.06653422862291336
    2. ' key' → logprob: -2.8165342807769775
    3. 'reverse' → logprob: -5.441534042358398
    4. ' reverse' → logprob: -8.566534042358398
    5. '0' → logprob: -11.066534042358398
    6. 'lambda' → logprob: -12.191534042358398
    7. ')' → logprob: -12.316534042358398
    8. ' ' → logprob: -12.941534042358398
    9. '   ' → logprob: -13.691534042358398
    10. '1' → logprob: -14.191534042358398

Token 66: '=item' (ID: 76091)
  Prédit: '=item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=item' → logprob: -0.00012749579036608338
    2. '=' → logprob: -9.000127792358398
    3. 'item' → logprob: -12.750127792358398
    4. '=lambda' → logprob: -13.750127792358398
    5. '=i' → logprob: -17.2501277923584
    6. ':item' → logprob: -18.2501277923584
    7. ')item' → logprob: -18.2501277923584
    8. ' item' → logprob: -19.2501277923584
    9. '=index' → logprob: -20.0001277923584
    10. '-item' → logprob: -20.2501277923584

Token 67: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.000285530521068722
    2. 'get' → logprob: -8.375285148620605
    3. '_get' → logprob: -10.625285148620605
    4. 'getitem' → logprob: -10.875285148620605
    5. '.get' → logprob: -13.500285148620605
    6. '.Getter' → logprob: -13.750285148620605
    7. 'operator' → logprob: -13.875285148620605
    8. '@Getter' → logprob: -14.000285148620605
    9. '_' → logprob: -14.000285148620605
    10. 'g' → logprob: -14.250285148620605

Token 68: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.983476436696947e-05
    2. '(' → logprob: -9.375089645385742
    3. '1' → logprob: -13.000089645385742
    4. ' ' → logprob: -13.375089645385742
    5. '```' → logprob: -14.625089645385742
    6. '
' → logprob: -15.500089645385742
    7. '[' → logprob: -16.812589645385742
    8. '   ' → logprob: -16.875089645385742
    9. '۰' → logprob: -17.187589645385742
    10. '	' → logprob: -17.687589645385742

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.349075556499884e-05
    2. '1' → logprob: -9.7500638961792
    3. ' ' → logprob: -12.2500638961792
    4. '   ' → logprob: -17.000062942504883
    5. '۰' → logprob: -17.312562942504883
    6. '
' → logprob: -17.437562942504883
    7. '```' → logprob: -17.500062942504883
    8. '０' → logprob: -17.625062942504883
    9. ')' → logprob: -17.687562942504883
    10. '[' → logprob: -17.812562942504883

Token 70: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4742010235786438
    2. ')' → logprob: -0.9742010235786438
    3. ')))' → logprob: -9.849201202392578
    4. '),' → logprob: -10.474201202392578
    5. ',' → logprob: -10.724201202392578
    6. ' )' → logprob: -12.224201202392578
    7. '))
' → logprob: -12.224201202392578
    8. ' ))' → logprob: -12.349201202392578
    9. ')
' → logprob: -12.849201202392578
    10. ')}' → logprob: -13.974201202392578

Token 71: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0264965258538723
    2. ')' → logprob: -4.151496410369873
    3. ')
' → logprob: -6.151496410369873
    4. ',' → logprob: -6.526496410369873
    5. 'r' → logprob: -6.776496410369873
    6. '_right' → logprob: -7.401496410369873
    7. ']' → logprob: -7.776496410369873
    8. ',
' → logprob: -7.776496410369873
    9. '_
' → logprob: -8.151496887207031
    10. 'l' → logprob: -8.151496887207031

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026306919753551483
    2. '=' → logprob: -3.6513068675994873
    3. ')' → logprob: -12.901307106018066
    4. ' ' → logprob: -13.401307106018066
    5. ' =)' → logprob: -14.526307106018066
    6. 's' → logprob: -14.776307106018066
    7. 'sorted' → logprob: -14.901307106018066
    8. ',' → logprob: -15.151307106018066
    9. '_sorted' → logprob: -15.151307106018066
    10. '_' → logprob: -16.02630615234375

Token 73: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.28119561076164246
    2. 'sorted' → logprob: -1.4061956405639648
    3. '(sorted' → logprob: -10.281195640563965
    4. '[' → logprob: -13.156195640563965
    5. '.sorted' → logprob: -13.156195640563965
    6. ' ' → logprob: -13.281195640563965
    7. '   ' → logprob: -13.531195640563965
    8. '[(' → logprob: -13.906195640563965
    9. '_sorted' → logprob: -14.281195640563965
    10. ' [(' → logprob: -14.281195640563965

Token 74: '(((' (ID: 13163)
  Prédit: '((('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(((' → logprob: -0.0431736595928669
    2. '((' → logprob: -3.1681735515594482
    3. '([(' → logprob: -9.793173789978027
    4. '(sec' → logprob: -9.793173789978027
    5. '(' → logprob: -9.918173789978027
    6. '((((' → logprob: -11.918173789978027
    7. '[((' → logprob: -13.293173789978027
    8. '([' → logprob: -13.668173789978027
    9. '(({' → logprob: -14.293173789978027
    10. '(([' → logprob: -14.418173789978027

Token 75: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0010375719284638762
    2. '(r' → logprob: -7.00103759765625
    3. ' r' → logprob: -9.25103759765625
    4. 'l' → logprob: -10.87603759765625
    5. '[r' → logprob: -12.75103759765625
    6. '_r' → logprob: -13.25103759765625
    7. '   ' → logprob: -13.62603759765625
    8. '_,' → logprob: -14.25103759765625
    9. '_' → logprob: -14.50103759765625
    10. ' (' → logprob: -14.62603759765625

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009561245678924024
    2. ' ,' → logprob: -7.375956058502197
    3. ' for' → logprob: -9.000956535339355
    4. 'for' → logprob: -9.125956535339355
    5. '_,' → logprob: -10.375956535339355
    6. ',i' → logprob: -10.625956535339355
    7. ',r' → logprob: -10.750956535339355
    8. '(i' → logprob: -12.500956535339355
    9. '(r' → logprob: -12.500956535339355
    10. 'r' → logprob: -13.375956535339355

Token 77: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12812553346157074
    2. ' i' → logprob: -2.1281254291534424
    3. '   ' → logprob: -8.253125190734863
    4. ' ' → logprob: -8.253125190734863
    5. '-i' → logprob: -8.878125190734863
    6. ' -' → logprob: -9.003125190734863
    7. '    ' → logprob: -9.128125190734863
    8. '-' → logprob: -9.628125190734863
    9. '  ' → logprob: -9.628125190734863
    10. ' (' → logprob: -10.503125190734863

Token 78: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001669942052103579
    2. 'for' → logprob: -6.501669883728027
    3. ' )' → logprob: -9.376669883728027
    4. ' for' → logprob: -9.751669883728027
    5. '   ' → logprob: -11.251669883728027
    6. ' ' → logprob: -13.001669883728027
    7. '))' → logprob: -13.376669883728027
    8. '(' → logprob: -13.626669883728027
    9. ',' → logprob: -13.751669883728027
    10. '  ' → logprob: -14.001669883728027

Token 79: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2541906237602234
    2. 'for' → logprob: -1.5041906833648682
    3. '(l' → logprob: -6.254190444946289
    4. ')' → logprob: -9.129190444946289
    5. ' (' → logprob: -9.379190444946289
    6. '(' → logprob: -10.129190444946289
    7. '(r' → logprob: -10.379190444946289
    8. '(for' → logprob: -10.754190444946289
    9. ' ' → logprob: -11.254190444946289
    10. '   ' → logprob: -11.379190444946289

Token 80: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009912971407175064
    2. ' i' → logprob: -4.634912967681885
    3. ',' → logprob: -9.509913444519043
    4. '_,' → logprob: -10.259913444519043
    5. 'enumer' → logprob: -11.634913444519043
    6. ' ' → logprob: -11.759913444519043
    7. 'r' → logprob: -12.009913444519043
    8. ' ,' → logprob: -12.259913444519043
    9. '   ' → logprob: -12.259913444519043
    10. ',i' → logprob: -12.384913444519043

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.227250610711053e-05
    2. ' in' → logprob: -10.375041961669922
    3. ' ,' → logprob: -11.625041961669922
    4. '_,' → logprob: -13.875041961669922
    5. 'in' → logprob: -15.000041961669922
    6. ',r' → logprob: -15.375041961669922
    7. ',_' → logprob: -15.375041961669922
    8. '‌,' → logprob: -15.875041961669922
    9. '<|end|>' → logprob: -16.125041961669922
    10. ',
' → logprob: -17.000041961669922

Token 82: ' (_,' (ID: 89384)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5339710116386414
    2. '(r' → logprob: -1.2839710712432861
    3. '(l' → logprob: -2.158971071243286
    4. '(' → logprob: -4.158970832824707
    5. '(s' → logprob: -5.658970832824707
    6. '(_,' → logprob: -7.033970832824707
    7. ' (_,' → logprob: -7.533970832824707
    8. ' in' → logprob: -7.908970832824707
    9. '(L' → logprob: -9.033970832824707
    10. ' ' → logprob: -9.408970832824707

Token 83: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0010365027701482177
    2. ' r' → logprob: -6.876036643981934
    3. '(r' → logprob: -13.126036643981934
    4. ' ' → logprob: -14.876036643981934
    5. '	r' → logprob: -15.001036643981934
    6. '   ' → logprob: -15.001036643981934
    7. '_r' → logprob: -15.126036643981934
    8. ')' → logprob: -16.126035690307617
    9. '  ' → logprob: -16.751035690307617
    10. '[r' → logprob: -16.876035690307617

Token 84: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10574983805418015
    2. 'in' → logprob: -2.7307498455047607
    3. ' in' → logprob: -3.3557498455047607
    4. ' )' → logprob: -8.48075008392334
    5. '),' → logprob: -10.60575008392334
    6. '   ' → logprob: -11.23075008392334
    7. ' ' → logprob: -11.48075008392334
    8. '))' → logprob: -12.23075008392334
    9. 'In' → logprob: -12.48075008392334
    10. '）' → logprob: -12.60575008392334

Token 85: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17991401255130768
    2. 'in' → logprob: -1.8049139976501465
    3. ')' → logprob: -8.929914474487305
    4. 'enumer' → logprob: -11.179914474487305
    5. '),' → logprob: -11.429914474487305
    6. ' ' → logprob: -12.804914474487305
    7. 'n' → logprob: -13.554914474487305
    8. 'In' → logprob: -13.804914474487305
    9. 'import' → logprob: -13.804914474487305
    10. ',' → logprob: -14.429914474487305

Token 86: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.04076758027076721
    2. ' enumerate' → logprob: -3.2907676696777344
    3. 'sec' → logprob: -5.915767669677734
    4. ' sec' → logprob: -10.915767669677734
    5. 'enum' → logprob: -12.665767669677734
    6. ' enumer' → logprob: -13.915767669677734
    7. 'en' → logprob: -14.040767669677734
    8. 'range' → logprob: -14.290767669677734
    9. 'se' → logprob: -15.040767669677734
    10. 'index' → logprob: -15.540767669677734

Token 87: '(sec' (ID: 162816)
  Prédit: 'sec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sec' → logprob: -0.6947466731071472
    2. '(sec' → logprob: -0.6947466731071472
    3. ' sec' → logprob: -6.444746494293213
    4. '_sec' → logprob: -12.944746971130371
    5. ' (' → logprob: -13.069746971130371
    6. '(se' → logprob: -14.194746971130371
    7. 'range' → logprob: -14.194746971130371
    8. '(' → logprob: -14.444746971130371
    9. '.sec' → logprob: -14.694746971130371
    10. ')' → logprob: -14.944746971130371

Token 88: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.959555447101593
    2. ')),' → logprob: -0.959555447101593
    3. '))' → logprob: -1.4595553874969482
    4. ' ),' → logprob: -7.834555625915527
    5. ')))' → logprob: -8.084555625915527
    6. ')' → logprob: -8.334555625915527
    7. ' ' → logprob: -8.459555625915527
    8. ' ))' → logprob: -9.334555625915527
    9. 'right' → logprob: -9.459555625915527
    10. '))),' → logprob: -9.959555625915527

Token 89: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.08897457271814346
    2. ' key' → logprob: -2.4639744758605957
    3. 'reverse' → logprob: -10.713974952697754
    4. ' ' → logprob: -12.588974952697754
    5. '(key' → logprob: -13.338974952697754
    6. '  ' → logprob: -13.588974952697754
    7. '   ' → logprob: -13.713974952697754
    8. 'lambda' → logprob: -13.963974952697754
    9. ',key' → logprob: -14.338974952697754
    10. '[key' → logprob: -14.463974952697754

Token 90: '=item' (ID: 76091)
  Prédit: '=item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=item' → logprob: -0.00015109812375158072
    2. '=' → logprob: -9.375150680541992
    3. '=lambda' → logprob: -9.625150680541992
    4. 'item' → logprob: -15.875150680541992
    5. ')item' → logprob: -17.750150680541992
    6. ' =' → logprob: -18.250150680541992
    7. '=index' → logprob: -18.500150680541992
    8. '(item' → logprob: -18.625150680541992
    9. '=int' → logprob: -18.750150680541992
    10. '=_' → logprob: -19.000150680541992

Token 91: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0029071082826703787
    2. 'getitem' → logprob: -6.6279072761535645
    3. '.get' → logprob: -7.6279072761535645
    4. 'get' → logprob: -7.7529072761535645
    5. '(' → logprob: -8.127906799316406
    6. 'operator' → logprob: -9.127906799316406
    7. 'item' → logprob: -9.877906799316406
    8. '(item' → logprob: -10.627906799316406
    9. '.Getter' → logprob: -10.627906799316406
    10. '.item' → logprob: -11.002906799316406

Token 92: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.033715780824422836
    2. '0' → logprob: -3.4087157249450684
    3. '1' → logprob: -9.783716201782227
    4. ' (' → logprob: -12.033716201782227
    5. '(
' → logprob: -12.533716201782227
    6. ' ' → logprob: -14.033716201782227
    7. ')' → logprob: -14.033716201782227
    8. ')(' → logprob: -14.158716201782227
    9. '```' → logprob: -14.283716201782227
    10. '[' → logprob: -15.783716201782227

Token 93: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003048378275707364
    2. '1' → logprob: -8.25030517578125
    3. ' ' → logprob: -10.12530517578125
    4. ')' → logprob: -14.43780517578125
    5. '   ' → logprob: -14.43780517578125
    6. '۰' → logprob: -14.68780517578125
    7. '[' → logprob: -15.37530517578125
    8. '  ' → logprob: -15.37530517578125
    9. '```' → logprob: -15.75030517578125
    10. '০' → logprob: -16.06280517578125

Token 94: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5759686231613159
    2. ')' → logprob: -0.8259686231613159
    3. ')))' → logprob: -10.950968742370605
    4. ' )' → logprob: -12.575968742370605
    5. ' ))' → logprob: -12.700968742370605
    6. '),' → logprob: -12.950968742370605
    7. ')}' → logprob: -14.700968742370605
    8. ')
' → logprob: -14.700968742370605
    9. '))
' → logprob: -14.825968742370605
    10. '1' → logprob: -15.450968742370605

Token 95: ' reverse' (ID: 18199)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.6387284994125366
    2. 'reverse' → logprob: -1.0137284994125366
    3. ' key' → logprob: -2.763728618621826
    4. ')' → logprob: -3.763728618621826
    5. ' reverse' → logprob: -4.013728618621826
    6. '0' → logprob: -5.388728618621826
    7. '1' → logprob: -9.388728141784668
    8. 'default' → logprob: -10.138728141784668
    9. ')
' → logprob: -10.263728141784668
    10. '2' → logprob: -11.138728141784668

Token 96: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.05147965997457504
    2. '(True' → logprob: -3.6764795780181885
    3. '(' → logprob: -4.301479816436768
    4. ')' → logprob: -4.801479816436768
    5. '=False' → logprob: -6.801479816436768
    6. '=' → logprob: -6.801479816436768
    7. '())' → logprob: -8.17647933959961
    8. '(False' → logprob: -8.67647933959961
    9. '()' → logprob: -8.80147933959961
    10. 'True' → logprob: -9.55147933959961

Token 97: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.596781946020201e-05
    2. '))' → logprob: -10.000045776367188
    3. ' )' → logprob: -15.500045776367188
    4. ')))' → logprob: -15.875045776367188
    5. ')
' → logprob: -16.500045776367188
    6. ')`' → logprob: -17.125045776367188
    7. '),' → logprob: -17.750045776367188
    8. '()' → logprob: -18.125045776367188
    9. ')}' → logprob: -18.375045776367188
    10. ')#' → logprob: -18.750045776367188

Token 98: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5899546146392822
    2. 'i' → logprob: -1.7149546146392822
    3. 'for' → logprob: -1.9649546146392822
    4. 'max' → logprob: -2.3399546146392822
    5. 'answer' → logprob: -2.9649546146392822
    6. 'result' → logprob: -3.2149546146392822
    7. 'count' → logprob: -3.4649546146392822
    8. 'm' → logprob: -3.5899546146392822
    9. 'l' → logprob: -3.7149546146392822
    10. 'res' → logprob: -3.8399546146392822

Token 99: ' process' (ID: 2273)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -1.6661173105239868
    2. ' find' → logprob: -1.9161173105239868
    3. ' overlap' → logprob: -2.5411171913146973
    4. ' intersect' → logprob: -2.7911171913146973
    5. ' main' → logprob: -3.0411171913146973
    6. ' cover' → logprob: -3.0411171913146973
    7. ' intersection' → logprob: -3.1661171913146973
    8. ' longest' → logprob: -3.2911171913146973
    9. ' is' → logprob: -3.4161171913146973
    10. ' ' → logprob: -3.4161171913146973

Token 100: '_paths' (ID: 56992)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09374044090509415
    2. '(sec' → logprob: -3.093740463256836
    3. '():' → logprob: -3.843740463256836
    4. '(line' → logprob: -5.093740463256836
    5. '(_' → logprob: -5.718740463256836
    6. '_' → logprob: -5.968740463256836
    7. '_(' → logprob: -6.343740463256836
    8. '_sec' → logprob: -7.343740463256836
    9. '(se' → logprob: -7.468740463256836
    10. '_left' → logprob: -7.468740463256836

Token 101: '(left' (ID: 32958)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.034495532512664795
    2. '(' → logprob: -4.1594953536987305
    3. '(path' → logprob: -4.1594953536987305
    4. '(paths' → logprob: -6.4094953536987305
    5. '(p' → logprob: -8.65949535369873
    6. ' ():' → logprob: -8.90949535369873
    7. '(:' → logprob: -9.03449535369873
    8. '(line' → logprob: -9.78449535369873
    9. '(s' → logprob: -9.90949535369873
    10. '(left' → logprob: -10.15949535369873

Token 102: '_input' (ID: 12507)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014450241811573505
    2. '):' → logprob: -4.2644500732421875
    3. ' ,' → logprob: -8.639450073242188
    4. '[' → logprob: -10.639450073242188
    5. ')' → logprob: -10.764450073242188
    6. ' ):' → logprob: -11.139450073242188
    7. '   ' → logprob: -12.139450073242188
    8. ',l' → logprob: -12.389450073242188
    9. ',right' → logprob: -12.389450073242188
    10. '):
' → logprob: -12.639450073242188

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16081318259239197
    2. '):' → logprob: -1.9108132123947144
    3. ')' → logprob: -8.535813331604004
    4. ' ,' → logprob: -8.785813331604004
    5. ',left' → logprob: -9.660813331604004
    6. ' ):' → logprob: -9.910813331604004
    7. ':' → logprob: -10.785813331604004
    8. '_left' → logprob: -10.910813331604004
    9. '):
' → logprob: -11.035813331604004
    10. ',right' → logprob: -11.660813331604004

Token 104: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.576543390750885
    2. ' right' → logprob: -0.826543390750885
    3. 'left' → logprob: -8.951543807983398
    4. ' ' → logprob: -9.576543807983398
    5. '   ' → logprob: -9.576543807983398
    6. ' left' → logprob: -9.826543807983398
    7. ' path' → logprob: -10.451543807983398
    8. ')' → logprob: -10.951543807983398
    9. 'path' → logprob: -11.139043807983398
    10. ' paths' → logprob: -11.201543807983398

Token 105: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0001584850688232109
    2. '_output' → logprob: -9.500158309936523
    3. '):' → logprob: -10.125158309936523
    4. '_' → logprob: -11.250158309936523
    5. '_inputs' → logprob: -11.625158309936523
    6. ')_' → logprob: -12.250158309936523
    7. ')' → logprob: -12.625158309936523
    8. ' _' → logprob: -12.875158309936523
    9. 'input' → logprob: -13.000158309936523
    10. ',' → logprob: -13.250158309936523

Token 106: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012096378486603498
    2. ',' → logprob: -6.751209735870361
    3. ')' → logprob: -11.001209259033203
    4. ':' → logprob: -11.501209259033203
    5. '):
' → logprob: -12.126209259033203
    6. ' ):' → logprob: -12.626209259033203
    7. '   ' → logprob: -13.001209259033203
    8. ']:' → logprob: -15.126209259033203
    9. '():' → logprob: -15.501209259033203
    10. ' ' → logprob: -15.626209259033203

Token 107: ' odd' (ID: 14210)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -1.0056862831115723
    2. ' result' → logprob: -2.2556862831115723
    3. 'left' → logprob: -2.6306862831115723
    4. ' path' → logprob: -2.8806862831115723
    5. ' depth' → logprob: -3.5056862831115723
    6. ' visited' → logprob: -3.5056862831115723
    7. ' current' → logprob: -3.8806862831115723
    8. ' paths' → logprob: -4.005686283111572
    9. 'result' → logprob: -4.255686283111572
    10. ' res' → logprob: -4.255686283111572

Token 108: '_first' (ID: 29347)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04969596117734909
    2. '_' → logprob: -4.79969596862793
    3. ',' → logprob: -4.92469596862793
    4. ')' → logprob: -5.04969596862793
    5. '_path' → logprob: -5.79969596862793
    6. '=True' → logprob: -6.04969596862793
    7. 'ity' → logprob: -6.04969596862793
    8. 's' → logprob: -6.17469596862793
    9. '_count' → logprob: -6.17469596862793
    10. ')):' → logprob: -6.17469596862793

Token 109: '=True' (ID: 7827)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00916860532015562
    2. ',' → logprob: -4.75916862487793
    3. ')' → logprob: -8.00916862487793
    4. '):
' → logprob: -9.38416862487793
    5. '=' → logprob: -10.00916862487793
    6. ':' → logprob: -10.38416862487793
    7. '_' → logprob: -10.63416862487793
    8. ' ):' → logprob: -10.88416862487793
    9. ''):' → logprob: -13.13416862487793
    10. ')):' → logprob: -13.38416862487793

Token 110: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004825081559829414
    2. ':' → logprob: -8.250482559204102
    3. ')' → logprob: -8.625482559204102
    4. ',' → logprob: -11.000482559204102
    5. '):
' → logprob: -11.000482559204102
    6. ' ):' → logprob: -12.125482559204102
    7. '   ' → logprob: -13.750482559204102
    8. '():' → logprob: -14.250482559204102
    9. ' ' → logprob: -15.375482559204102
    10. '**' → logprob: -15.875482559204102

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24785269796848297
    2. ':' → logprob: -2.3728528022766113
    3. '    ' → logprob: -2.4978528022766113
    4. ' ' → logprob: -3.6228528022766113
    5. '    
' → logprob: -6.372852802276611
    6. ' :' → logprob: -6.372852802276611
    7. ' 
' → logprob: -6.497852802276611
    8. '
' → logprob: -6.497852802276611
    9. '	' → logprob: -6.622852802276611
    10. ')' → logprob: -6.622852802276611

Token 112: ' used' (ID: 2061)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.6692003011703491
    2. ' ' → logprob: -1.5442003011703491
    3. '   ' → logprob: -1.7942003011703491
    4. ' 
' → logprob: -2.5442004203796387
    5. '    
' → logprob: -4.294200420379639
    6. '     
' → logprob: -5.044200420379639
    7. ' \' → logprob: -6.669200420379639
    8. ' pass' → logprob: -6.669200420379639
    9. '  ' → logprob: -6.919200420379639
    10. ' )' → logprob: -7.044200420379639

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038159798830747604
    2. '=' → logprob: -3.2881598472595215
    3. ',' → logprob: -10.413159370422363
    4. ')' → logprob: -10.663159370422363
    5. ' ' → logprob: -10.788159370422363
    6. '   ' → logprob: -11.288159370422363
    7. '_' → logprob: -11.913159370422363
    8. '  ' → logprob: -11.913159370422363
    9. '[]' → logprob: -12.913159370422363
    10. '[' → logprob: -13.038159370422363

Token 114: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6063518524169922
    2. 'set' → logprob: -0.8563518524169922
    3. ' [' → logprob: -4.106351852416992
    4. ' set' → logprob: -4.481351852416992
    5. '[]' → logprob: -6.231351852416992
    6. '{' → logprob: -9.481351852416992
    7. ' []' → logprob: -9.731351852416992
    8. '{}' → logprob: -10.356351852416992
    9. ' ' → logprob: -11.606351852416992
    10. '   ' → logprob: -11.981351852416992

Token 115: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00023274161503650248
    2. '0' → logprob: -9.000232696533203
    3. ' False' → logprob: -9.125232696533203
    4. 'True' → logprob: -15.125232696533203
    5. '(False' → logprob: -17.375232696533203
    6. '   ' → logprob: -17.750232696533203
    7. ']' → logprob: -18.375232696533203
    8. ' ' → logprob: -18.500232696533203
    9. '-' → logprob: -19.125232696533203
    10. '[' → logprob: -19.750232696533203

Token 116: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00403043394908309
    2. ']*' → logprob: -5.629030227661133
    3. ' for' → logprob: -7.879030227661133
    4. ' ]' → logprob: -10.504030227661133
    5. ')' → logprob: -11.379030227661133
    6. 'for' → logprob: -12.004030227661133
    7. ',' → logprob: -13.129030227661133
    8. '   ' → logprob: -13.254030227661133
    9. ']*(' → logprob: -14.129030227661133
    10. ' ' → logprob: -14.379030227661133

Token 117: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.47246310114860535
    2. '(' → logprob: -1.4724631309509277
    3. '(N' → logprob: -3.4724631309509277
    4. ',' → logprob: -3.5974631309509277
    5. '[' → logprob: -3.8474631309509277
    6. ' for' → logprob: -3.8474631309509277
    7. '(len' → logprob: -4.597463130950928
    8. '()' → logprob: -4.722463130950928
    9. 'for' → logprob: -4.847463130950928
    10. ')' → logprob: -5.222463130950928

Token 118: ' N' (ID: 478)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.07441692799329758
    2. 'N' → logprob: -2.8244168758392334
    3. '(len' → logprob: -4.4494171142578125
    4. ' len' → logprob: -7.8244171142578125
    5. '(N' → logprob: -8.449417114257812
    6. '(' → logprob: -9.824417114257812
    7. ' N' → logprob: -11.449417114257812
    8. ' (' → logprob: -12.574417114257812
    9. '[len' → logprob: -14.199417114257812
    10. '_N' → logprob: -14.574417114257812

Token 119: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.281145304441452
    2. '   ' → logprob: -1.7811453342437744
    3. '    
' → logprob: -3.2811453342437744
    4. '<|end|>' → logprob: -4.906145095825195
    5. 'newline' → logprob: -5.156145095825195
    6. ')' → logprob: -5.656145095825195
    7. ' 
' → logprob: -5.656145095825195
    8. ' ' → logprob: -5.781145095825195
    9. '    ' → logprob: -5.906145095825195
    10. '  
' → logprob: -6.406145095825195

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024168681353330612
    2. 'result' → logprob: -4.774168491363525
    3. 'path' → logprob: -5.149168491363525
    4. '    
' → logprob: -6.649168491363525
    5. ' result' → logprob: -6.774168491363525
    6. 'paths' → logprob: -6.774168491363525
    7. 'stack' → logprob: -7.149168491363525
    8. ' path' → logprob: -7.399168491363525
    9. 'i' → logprob: -7.524168491363525
    10. 'current' → logprob: -7.899168491363525

Token 121: ' ls' (ID: 41498)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.5589039921760559
    2. 'res' → logprob: -1.9339039325714111
    3. 'result' → logprob: -1.9339039325714111
    4. 'paths' → logprob: -3.808903932571411
    5. 'pos' → logprob: -4.05890417098999
    6. 'stack' → logprob: -4.05890417098999
    7. '   ' → logprob: -4.05890417098999
    8. 'current' → logprob: -4.55890417098999
    9. 'answer' → logprob: -4.93390417098999
    10. 'cur' → logprob: -4.93390417098999

Token 122: ',' (ID: 11)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.46901124715805054
    2. '   ' → logprob: -1.8440113067626953
    3. '=' → logprob: -2.4690113067626953
    4. ' =' → logprob: -2.8440113067626953
    5. 'eft' → logprob: -3.8440113067626953
    6. 'ize' → logprob: -4.219011306762695
    7. '_used' → logprob: -4.594011306762695
    8. 'e' → logprob: -5.094011306762695
    9. 'ast' → logprob: -5.594011306762695
    10. 'idx' → logprob: -5.844011306762695

Token 123: ' rs' (ID: 15181)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' → logprob: -0.08423960953950882
    2. 'i' → logprob: -3.9592397212982178
    3. 'le' → logprob: -4.334239482879639
    4. 'idx' → logprob: -4.584239482879639
    5. 'lp' → logprob: -4.834239482879639
    6. ' rs' → logprob: -5.084239482879639
    7. 'li' → logprob: -5.584239482879639
    8. 'len' → logprob: -5.834239482879639
    9. 'pos' → logprob: -6.459239482879639
    10. 'ps' → logprob: -6.584239482879639

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11163569986820221
    2. '=' → logprob: -2.361635684967041
    3. ',' → logprob: -4.486635684967041
    4. ' ,' → logprob: -9.3616361618042
    5. ' ' → logprob: -11.6116361618042
    6. '  ' → logprob: -12.9866361618042
    7. '   ' → logprob: -13.6116361618042
    8. '<|end|>' → logprob: -13.7366361618042
    9. ')' → logprob: -13.8616361618042
    10. '    ' → logprob: -13.8616361618042

Token 125: ' left' (ID: 3561)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2323395311832428
    2. '[],' → logprob: -2.35733962059021
    3. 'len' → logprob: -3.48233962059021
    4. 'left' → logprob: -3.85733962059021
    5. ' [],' → logprob: -4.482339382171631
    6. ' ' → logprob: -4.482339382171631
    7. '[]' → logprob: -4.607339382171631
    8. '[' → logprob: -4.857339382171631
    9. '(' → logprob: -4.857339382171631
    10. '([],' → logprob: -5.482339382171631

Token 126: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.017097922042012215
    2. ',' → logprob: -5.0170979499816895
    3. '[:]' → logprob: -5.8920979499816895
    4. '.copy' → logprob: -6.5170979499816895
    5. '[:' → logprob: -6.5170979499816895
    6. 'input' → logprob: -7.0170979499816895
    7. '_,' → logprob: -7.3920979499816895
    8. '[' → logprob: -7.7670979499816895
    9. ')' → logprob: -7.8920979499816895
    10. ' ,' → logprob: -8.142097473144531

Token 127: '.copy' (ID: 22925)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20658402144908905
    2. '[' → logprob: -1.9565839767456055
    3. '[:]' → logprob: -3.5815839767456055
    4. '[:' → logprob: -5.2065839767456055
    5. '[::-' → logprob: -5.8315839767456055
    6. '.copy' → logprob: -6.3315839767456055
    7. ' ,' → logprob: -6.3315839767456055
    8. '
' → logprob: -6.8315839767456055
    9. '[:-' → logprob: -7.3315839767456055
    10. '<|end|>' → logprob: -7.5815839767456055

Token 128: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.008629691787064075
    2. '()' → logprob: -4.75862979888916
    3. ',' → logprob: -11.63362979888916
    4. ' (),' → logprob: -12.25862979888916
    5. '()
' → logprob: -14.50862979888916
    6. '(),
' → logprob: -15.00862979888916
    7. '()),' → logprob: -15.75862979888916
    8. '(' → logprob: -15.88362979888916
    9. '()

' → logprob: -16.133628845214844
    10. '   ' → logprob: -16.508628845214844

Token 129: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.38687366247177124
    2. 'right' → logprob: -1.136873722076416
    3. '[right' → logprob: -13.386873245239258
    4. '	right' → logprob: -14.761873245239258
    5. ' ' → logprob: -15.261873245239258
    6. '(right' → logprob: -16.136873245239258
    7. '[]' → logprob: -16.761873245239258
    8. 'left' → logprob: -16.761873245239258
    9. 'r' → logprob: -17.136873245239258
    10. ',right' → logprob: -17.261873245239258

Token 130: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0003863438032567501
    2. 'input' → logprob: -7.8753862380981445
    3. 'right' → logprob: -13.500386238098145
    4. 'put' → logprob: -13.875386238098145
    5. 's' → logprob: -14.000386238098145
    6. '_copy' → logprob: -14.250386238098145
    7. '_output' → logprob: -15.125386238098145
    8. '```' → logprob: -15.250386238098145
    9. '-input' → logprob: -15.750386238098145
    10. '(input' → logprob: -15.875386238098145

Token 131: '.copy' (ID: 22925)
  Prédit: '.copy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.copy' → logprob: -0.0014867663849145174
    2. '[:]' → logprob: -7.001486778259277
    3. ',' → logprob: -8.501486778259277
    4. '.' → logprob: -9.251486778259277
    5. '.deepcopy' → logprob: -9.751486778259277
    6. '<|end|>' → logprob: -10.126486778259277
    7. ' ' → logprob: -10.251486778259277
    8. '
' → logprob: -10.376486778259277
    9. '[:' → logprob: -10.501486778259277
    10. ')' → logprob: -10.876486778259277

Token 132: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.448370838072151e-05
    2. '()
' → logprob: -9.500094413757324
    3. '(' → logprob: -11.875094413757324
    4. ')' → logprob: -12.500094413757324
    5. '()]' → logprob: -13.125094413757324
    6. '():' → logprob: -13.375094413757324
    7. '   ' → logprob: -13.500094413757324
    8. '()

' → logprob: -14.000094413757324
    9. '())' → logprob: -14.000094413757324
    10. ' ()' → logprob: -14.250094413757324

Token 133: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6156296730041504
    2. '   ' → logprob: -0.8656296730041504
    3. '    
' → logprob: -4.11562967300415
    4. '<|end|>' → logprob: -4.36562967300415
    5. '  
' → logprob: -6.49062967300415
    6. ')' → logprob: -6.74062967300415
    7. ',' → logprob: -6.86562967300415
    8. ':' → logprob: -6.86562967300415
    9. '    ' → logprob: -6.99062967300415
    10. ' 
' → logprob: -7.36562967300415

Token 134: ' pos' (ID: 1253)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.330846905708313
    2. '   ' → logprob: -1.580846905708313
    3. 'path' → logprob: -1.580846905708313
    4. 'result' → logprob: -1.955846905708313
    5. ' res' → logprob: -3.7058467864990234
    6. 'for' → logprob: -3.9558467864990234
    7. 'answer' → logprob: -4.080846786499023
    8. 'pos' (adapté à ' pos') → logprob: -4.205846786499023
    9. ' path' → logprob: -4.455846786499023
    10. 'cur' → logprob: -4.580846786499023

Token 135: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014721735380589962
    2. '=' → logprob: -4.264721870422363
    3. 's' → logprob: -8.889721870422363
    4. '_idx' → logprob: -9.014721870422363
    5. '   ' → logprob: -9.139721870422363
    6. ' ' → logprob: -10.264721870422363
    7. 'sible' → logprob: -10.514721870422363
    8. ',' → logprob: -10.764721870422363
    9. '_' → logprob: -11.014721870422363
    10. '  ' → logprob: -11.139721870422363

Token 136: ' ans' (ID: 3345)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.8858323097229004
    2. 'count' → logprob: -2.2608323097229004
    3. ' count' → logprob: -2.3858323097229004
    4. ' idx' → logprob: -2.5108323097229004
    5. '0' → logprob: -2.6358323097229004
    6. 'res' → logprob: -2.7608323097229004
    7. ' res' → logprob: -3.1358323097229004
    8. 'cnt' → logprob: -3.2608323097229004
    9. 'ans' → logprob: -3.5108323097229004
    10. ' path' → logprob: -3.6358323097229004

Token 137: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5767391324043274
    2. '=' → logprob: -0.8267391324043274
    3. ',' → logprob: -7.201739311218262
    4. ' ' → logprob: -10.951739311218262
    5. ')' → logprob: -11.451739311218262
    6. '<|end|>' → logprob: -12.201739311218262
    7. '   ' → logprob: -12.326739311218262
    8. ':' → logprob: -12.326739311218262
    9. ' =
' → logprob: -13.076739311218262
    10. '=int' → logprob: -13.576739311218262

Token 138: ' n' (ID: 297)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.598473072052002
    2. 'cnt' → logprob: -1.848473072052002
    3. ' cnt' → logprob: -2.223473072052002
    4. ' count' → logprob: -2.223473072052002
    5. ' odd' → logprob: -3.223473072052002
    6. 'idx' → logprob: -3.598473072052002
    7. ' path' → logprob: -3.848473072052002
    8. ' length' → logprob: -3.973473072052002
    9. 'cur' → logprob: -4.098473072052002
    10. ' stack' → logprob: -4.098473072052002

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.122969150543213
    2. 'um' → logprob: -1.372969150543213
    3. '_used' → logprob: -1.747969150543213
    4. 'ext' → logprob: -1.872969150543213
    5. '=' → logprob: -2.622969150543213
    6. '_' → logprob: -5.747969150543213
    7. 'xt' → logprob: -5.872969150543213
    8. 'ew' → logprob: -5.997969150543213
    9. 'used' → logprob: -6.372969150543213
    10. 'ot' → logprob: -6.372969150543213

Token 140: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.038109082728624344
    2. '(' → logprob: -4.163109302520752
    3. ' ' → logprob: -4.663109302520752
    4. ' (' → logprob: -6.038109302520752
    5. 'N' → logprob: -6.038109302520752
    6. 'ls' → logprob: -6.288109302520752
    7. 'len' → logprob: -6.288109302520752
    8. '-' → logprob: -6.413109302520752
    9. ' N' → logprob: -7.538109302520752
    10. '1' → logprob: -7.788109302520752

Token 141: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019952639937400818
    2. '-' → logprob: -4.394952774047852
    3. '(' → logprob: -5.394952774047852
    4. 'N' → logprob: -7.019952774047852
    5. 'len' → logprob: -7.394952774047852
    6. 'ls' → logprob: -7.644952774047852
    7. ' ' → logprob: -8.644952774047852
    8. '1' → logprob: -8.769952774047852
    9. '(-' → logprob: -9.019952774047852
    10. '(N' → logprob: -9.394952774047852

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5916710495948792
    2. '<|end|>' → logprob: -0.8416710495948792
    3. '<|end|>' → logprob: -4.841670989990234
    4. '
' → logprob: -5.216670989990234
    5. ' ' → logprob: -7.341670989990234
    6. ',
' → logprob: -8.591670989990234
    7. ',n' → logprob: -8.591670989990234
    8. ',N' → logprob: -8.591670989990234
    9. '0' → logprob: -8.841670989990234
    10. '  ' → logprob: -8.966670989990234

Token 143: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0392032228410244
    2. ' ' → logprob: -3.28920316696167
    3. '[]' → logprob: -7.41420316696167
    4. '1' → logprob: -9.039203643798828
    5. 'len' → logprob: -9.539203643798828
    6. '-' → logprob: -9.664203643798828
    7. ' []' → logprob: -9.789203643798828
    8. 'N' → logprob: -9.914203643798828
    9. ' -' → logprob: -10.289203643798828
    10. '""' → logprob: -10.414203643798828

Token 144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02431284636259079
    2. '[]' → logprob: -3.774312734603882
    3. '""' → logprob: -8.024312973022461
    4. 'N' → logprob: -8.274312973022461
    5. 'len' → logprob: -8.899312973022461
    6. '-' → logprob: -9.149312973022461
    7. '[' → logprob: -9.649312973022461
    8. '''' → logprob: -10.399312973022461
    9. '"' → logprob: -10.524312973022461
    10. '1' → logprob: -11.024312973022461

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07719378918409348
    2. '
' → logprob: -3.0771937370300293
    3. '   ' → logprob: -4.202193737030029
    4. ',
' → logprob: -5.077193737030029
    5. '<|end|>' → logprob: -5.702193737030029
    6. '    
' → logprob: -6.452193737030029
    7. ' ,' → logprob: -7.202193737030029
    8. '	
' → logprob: -8.202194213867188
    9. '<|end|>' → logprob: -8.577194213867188
    10. ' ' → logprob: -9.202194213867188

Token 146: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.16406434774398804
    2. 'len' → logprob: -2.289064407348633
    3. '0' → logprob: -3.039064407348633
    4. ' N' → logprob: -7.164064407348633
    5. '2' → logprob: -7.914064407348633
    6. ' len' → logprob: -8.164064407348633
    7. '1' → logprob: -8.164064407348633
    8. ' ' → logprob: -8.664064407348633
    9. 'n' → logprob: -10.414064407348633
    10. '(len' → logprob: -10.414064407348633

Token 147: '0' (ID: 15)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06327875703573227
    2. 'len' → logprob: -3.0632786750793457
    3. '0' → logprob: -4.313278675079346
    4. '2' → logprob: -7.688278675079346
    5. '1' → logprob: -7.688278675079346
    6. '(N' → logprob: -9.563279151916504
    7. 'n' → logprob: -10.313279151916504
    8. '[N' → logprob: -10.563279151916504
    9. '(' → logprob: -10.938279151916504
    10. '3' → logprob: -10.938279151916504

Token 148: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13415886461734772
    2. '<|end|>' → logprob: -2.1341588497161865
    3. ')' → logprob: -6.384159088134766
    4. '
' → logprob: -6.509159088134766
    5. ',' → logprob: -6.509159088134766
    6. '    
' → logprob: -7.509159088134766
    7. ' ' → logprob: -7.509159088134766
    8. '<|end|>' → logprob: -7.634159088134766
    9. ':' → logprob: -8.009159088134766
    10. '  ' → logprob: -8.884159088134766

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14973925054073334
    2. '<|end|>' → logprob: -2.0247392654418945
    3. ' while' → logprob: -6.1497392654418945
    4. '    ' → logprob: -6.8997392654418945
    5. ' ' → logprob: -7.1497392654418945
    6. '	while' → logprob: -7.2747392654418945
    7. '    
' → logprob: -7.5247392654418945
    8. '
' → logprob: -7.7747392654418945
    9. ':' → logprob: -8.649739265441895
    10. '<|end|>' → logprob: -8.774739265441895

Token 150: ' flag' (ID: 9641)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03549101576209068
    2. '   ' → logprob: -3.7854909896850586
    3. ' while' → logprob: -4.785490989685059
    4. 'turn' → logprob: -6.660490989685059
    5. '	while' → logprob: -6.660490989685059
    6. 'step' → logprob: -7.410490989685059
    7. 'direction' → logprob: -9.160490989685059
    8. 'if' → logprob: -9.160490989685059
    9. 'wh' → logprob: -9.660490989685059
    10. 'next' → logprob: -9.785490989685059

Token 151: '_l' (ID: 1478)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02066894620656967
    2. '=' → logprob: -3.8956689834594727
    3. ' ' → logprob: -9.895668983459473
    4. '   ' → logprob: -10.020668983459473
    5. '_' → logprob: -11.770668983459473
    6. '=False' → logprob: -12.020668983459473
    7. '=True' → logprob: -12.020668983459473
    8. ',' → logprob: -12.395668983459473
    9. '  ' → logprob: -13.645668983459473
    10. ' =
' → logprob: -13.895668983459473

Token 152: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9069932699203491
    2. 'eft' → logprob: -1.0319932699203491
    3. ' =' → logprob: -2.1569933891296387
    4. 'ast' → logprob: -3.1569933891296387
    5. '=' → logprob: -3.5319933891296387
    6. ',' → logprob: -3.6569933891296387
    7. 'ine' → logprob: -5.156993389129639
    8. 'ef' → logprob: -5.781993389129639
    9. '=True' → logprob: -5.906993389129639
    10. 'f' → logprob: -6.531993389129639

Token 153: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.3552358150482178
    2. ' flag' → logprob: -1.2302358150482178
    3. ' True' → logprob: -5.980236053466797
    4. ' =' → logprob: -6.105236053466797
    5. 'True' → logprob: -6.730236053466797
    6. '=' → logprob: -8.105236053466797
    7. '=True' → logprob: -8.605236053466797
    8. '_flag' → logprob: -9.230236053466797
    9. '	flag' → logprob: -9.855236053466797
    10. ' ' → logprob: -10.417736053466797

Token 154: '_r' (ID: 3442)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6360801458358765
    2. ' =' → logprob: -0.7610801458358765
    3. '_' → logprob: -6.761080265045166
    4. '=True' → logprob: -7.136080265045166
    5. ',' → logprob: -7.386080265045166
    6. '=False' → logprob: -8.011079788208008
    7. '_=' → logprob: -8.386079788208008
    8. '<|end|>' → logprob: -8.886079788208008
    9. '_l' → logprob: -9.636079788208008
    10. 's' → logprob: -10.636079788208008

Token 155: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2819671332836151
    2. '=' → logprob: -1.4069671630859375
    3. ',' → logprob: -7.1569671630859375
    4. '=False' → logprob: -11.156967163085938
    5. '=True' → logprob: -11.281967163085938
    6. ' ' → logprob: -12.281967163085938
    7. '  ' → logprob: -13.531967163085938
    8. ' ,' → logprob: -13.781967163085938
    9. '   ' → logprob: -13.906967163085938
    10. '<|end|>' → logprob: -13.906967163085938

Token 156: ' ' (ID: 220)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.16956470906734467
    2. ' True' → logprob: -2.169564723968506
    3. 'False' → logprob: -4.044564723968506
    4. 'odd' → logprob: -4.294564723968506
    5. ' odd' → logprob: -4.919564723968506
    6. ' False' → logprob: -6.669564723968506
    7. 'not' → logprob: -7.544564723968506
    8. '(True' → logprob: -7.794564723968506
    9. ' not' → logprob: -8.419564247131348
    10. '0' → logprob: -8.544564247131348

Token 157: '0' (ID: 15)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.32219913601875305
    2. 'odd' → logprob: -1.3221991062164307
    3. 'False' → logprob: -5.19719934463501
    4. '1' → logprob: -7.19719934463501
    5. ' True' → logprob: -7.19719934463501
    6. '0' → logprob: -7.57219934463501
    7. 'not' → logprob: -7.69719934463501
    8. ' odd' → logprob: -7.94719934463501
    9. '(True' → logprob: -8.322198867797852
    10. '(' → logprob: -9.072198867797852

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01945214718580246
    2. '   ' → logprob: -4.769452095031738
    3. '<|end|>' → logprob: -4.769452095031738
    4. ' ,' → logprob: -6.894452095031738
    5. '<|end|>' → logprob: -7.644452095031738
    6. '
' → logprob: -8.519452095031738
    7. ',
' → logprob: -8.644452095031738
    8. '  ' → logprob: -9.269452095031738
    9. ' ' → logprob: -9.269452095031738
    10. '+' → logprob: -10.019452095031738

Token 159: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05797255411744118
    2. ' ' → logprob: -2.9329726696014404
    3. '1' → logprob: -5.807972431182861
    4. '   ' → logprob: -10.93297290802002
    5. 'False' → logprob: -11.18297290802002
    6. 'True' → logprob: -11.62047290802002
    7. '-' → logprob: -11.87047290802002
    8. ' -' → logprob: -11.99547290802002
    9. '  ' → logprob: -12.05797290802002
    10. ' True' → logprob: -12.43297290802002

Token 160: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00509844534099102
    2. '1' → logprob: -5.380098342895508
    3. '-' → logprob: -8.505098342895508
    4. 'False' → logprob: -9.130098342895508
    5. ' ' → logprob: -9.255098342895508
    6. 'len' → logprob: -10.380098342895508
    7. 'True' → logprob: -11.130098342895508
    8. 'N' → logprob: -12.005098342895508
    9. '2' → logprob: -12.505098342895508
    10. '   ' → logprob: -13.192598342895508

Token 161: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5364821553230286
    2. '
' → logprob: -1.2864820957183838
    3. '<|end|>' → logprob: -2.036482095718384
    4. '    
' → logprob: -5.536482334136963
    5. '<|end|>' → logprob: -6.661482334136963
    6. ')' → logprob: -6.911482334136963
    7. ':' → logprob: -7.286482334136963
    8. ',' → logprob: -7.286482334136963
    9. '  
' → logprob: -9.161481857299805
    10. ' ' → logprob: -9.536481857299805

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29571765661239624
    2. '<|end|>' → logprob: -1.670717716217041
    3. '
' → logprob: -3.045717716217041
    4. ':' → logprob: -5.670717716217041
    5. ')' → logprob: -5.670717716217041
    6. '    
' → logprob: -5.795717716217041
    7. ' ' → logprob: -5.795717716217041
    8. '\n' → logprob: -6.420717716217041
    9. '  
' → logprob: -6.795717716217041
    10. ',' → logprob: -6.920717716217041

Token 163: ' parity' (ID: 113181)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20786850154399872
    2. ' while' → logprob: -2.0828685760498047
    3. 'while' → logprob: -2.8328685760498047
    4. '	while' → logprob: -6.207868576049805
    5. '<|end|>' → logprob: -7.332868576049805
    6. ' ' → logprob: -8.207868576049805
    7. '    
' → logprob: -8.582868576049805
    8. '    ' → logprob: -8.582868576049805
    9. ')' → logprob: -8.707868576049805
    10. '
' → logprob: -8.832868576049805

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05497323349118233
    2. '=' → logprob: -2.9299731254577637
    3. '   ' → logprob: -9.804973602294922
    4. ' ' → logprob: -10.929973602294922
    5. ',' → logprob: -11.929973602294922
    6. '<|end|>' → logprob: -13.054973602294922
    7. '  ' → logprob: -13.429973602294922
    8. ':' → logprob: -13.679973602294922
    9. ' ==' → logprob: -13.804973602294922
    10. '_' → logprob: -14.054973602294922

Token 165: ' ' (ID: 220)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.44226908683776855
    2. '1' → logprob: -1.4422690868377686
    3. ' odd' → logprob: -2.8172690868377686
    4. '0' → logprob: -3.0672690868377686
    5. 'int' → logprob: -5.067269325256348
    6. ' ' → logprob: -5.567269325256348
    7. 'True' → logprob: -6.442269325256348
    8. ' int' → logprob: -7.317269325256348
    9. 'not' → logprob: -7.442269325256348
    10. ' True' → logprob: -7.442269325256348

Token 166: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8522520065307617
    2. 'odd' → logprob: -1.2272520065307617
    3. '1' → logprob: -1.3522520065307617
    4. 'int' → logprob: -4.227252006530762
    5. 'not' → logprob: -6.227252006530762
    6. ' odd' → logprob: -6.477252006530762
    7. '(' → logprob: -6.602252006530762
    8. ' ' → logprob: -6.727252006530762
    9. 'True' → logprob: -7.102252006530762
    10. ' int' → logprob: -9.602252006530762

Token 167: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 168: ' odd' (ID: 14210)
  Prédit: ' odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' odd' → logprob: -0.2519390881061554
    2. 'odd' → logprob: -1.501939058303833
    3. ' not' → logprob: -12.876938819885254
    4. ' ' → logprob: -12.876938819885254
    5. 'od' → logprob: -13.001938819885254
    6. 'not' → logprob: -13.376938819885254
    7. '   ' → logprob: -14.751938819885254
    8. '  ' → logprob: -15.501938819885254
    9. 'Odd' → logprob: -16.50193977355957
    10. '(' → logprob: -16.75193977355957

Token 169: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -1.5213274309644476e-05
    2. '_' → logprob: -12.125015258789062
    3. ' _' → logprob: -12.375015258789062
    4. 'first' → logprob: -12.625015258789062
    5. '(_' → logprob: -14.625015258789062
    6. '

' → logprob: -15.625015258789062
    7. '_f' → logprob: -15.875015258789062
    8. 'First' → logprob: -15.875015258789062
    9. '_FIRST' → logprob: -16.125015258789062
    10. '```' → logprob: -16.125015258789062

Token 170: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.015512323006987572
    2. '==' → logprob: -4.765512466430664
    3. 'else' → logprob: -5.390512466430664
    4. ' ==' → logprob: -6.140512466430664
    5. ' ' → logprob: -8.765512466430664
    6. '	else' → logprob: -13.015512466430664
    7. '=' → logprob: -14.515512466430664
    8. '+' → logprob: -15.140512466430664
    9. ' ' → logprob: -15.265512466430664
    10. '  ' → logprob: -15.640512466430664

Token 171: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007620233576744795
    2. '-' → logprob: -4.882620334625244
    3. ' ' → logprob: -11.382619857788086
    4. ' -' → logprob: -13.382619857788086
    5. '2' → logprob: -13.757619857788086
    6. '   ' → logprob: -17.257619857788086
    7. '1' → logprob: -17.757619857788086
    8. '
' → logprob: -17.882619857788086
    9. '  ' → logprob: -18.132619857788086
    10. '```' → logprob: -19.070119857788086

Token 172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004090508911758661
    2. '-' → logprob: -5.504090309143066
    3. ' ' → logprob: -11.629090309143066
    4. '2' → logprob: -13.254090309143066
    5. ' -' → logprob: -13.754090309143066
    6. '
' → logprob: -16.129091262817383
    7. '   ' → logprob: -16.504091262817383
    8. '1' → logprob: -16.879091262817383
    9. '  ' → logprob: -17.566591262817383
    10. '

' → logprob: -18.316591262817383

Token 173: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20563210546970367
    2. '   ' → logprob: -2.205632209777832
    3. '<|end|>' → logprob: -2.705632209777832
    4. '    
' → logprob: -5.580632209777832
    5. '<|end|>' → logprob: -6.955632209777832
    6. '  
' → logprob: -7.080632209777832
    7. ' 
' → logprob: -7.205632209777832
    8. '\n' → logprob: -7.455632209777832
    9. ')' → logprob: -7.830632209777832
    10. ' ' → logprob: -8.205632209777832

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11282869428396225
    2. '<|end|>' → logprob: -2.4878287315368652
    3. '
' → logprob: -4.362828731536865
    4. '    
' → logprob: -5.612828731536865
    5. ' 
' → logprob: -6.737828731536865
    6. ')' → logprob: -6.737828731536865
    7. '<|end|>' → logprob: -6.737828731536865
    8. ':' → logprob: -7.112828731536865
    9. ' ' → logprob: -7.737828731536865
    10. '  
' → logprob: -8.237828254699707

Token 175: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16511589288711548
    2. '<|end|>' → logprob: -2.4151158332824707
    3. ' while' → logprob: -3.5401158332824707
    4. ' 
' → logprob: -5.040115833282471
    5. 'while' (adapté à ' while') → logprob: -5.290115833282471
    6. '	while' → logprob: -5.290115833282471
    7. '
' → logprob: -5.290115833282471
    8. ' ' → logprob: -5.790115833282471
    9. '    
' → logprob: -6.165115833282471
    10. '    ' → logprob: -6.290115833282471

Token 176: ' ls' (ID: 41498)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8629128932952881
    2. ' n' → logprob: -0.9879128932952881
    3. ' True' → logprob: -2.612912893295288
    4. 'pos' → logprob: -3.112912893295288
    5. 'True' → logprob: -3.112912893295288
    6. ' ls' → logprob: -4.112913131713867
    7. ' pos' → logprob: -4.362913131713867
    8. 'ls' → logprob: -4.487913131713867
    9. '(True' → logprob: -7.737913131713867
    10. '(n' → logprob: -7.862913131713867

Token 177: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.57649827003479
    2. 'and' → logprob: -0.82649827003479
    3. ')' → logprob: -8.326498031616211
    4. ':' → logprob: -9.576498031616211
    5. '[' → logprob: -10.076498031616211
    6. '>' → logprob: -10.201498031616211
    7. '   ' → logprob: -10.326498031616211
    8. ' ' → logprob: -10.701498031616211
    9. '0' → logprob: -11.201498031616211
    10. '):' → logprob: -11.326498031616211

Token 178: ' rs' (ID: 15181)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' → logprob: -0.4297451972961426
    2. ' rs' → logprob: -1.0547451972961426
    3. '	rs' → logprob: -7.179745197296143
    4. '(rs' → logprob: -8.429744720458984
    5. '$rs' → logprob: -9.804744720458984
    6. ' ' → logprob: -12.804744720458984
    7. '
' → logprob: -13.804744720458984
    8. '.rs' → logprob: -14.304744720458984
    9. '_rs' → logprob: -14.429744720458984
    10. '   ' → logprob: -14.429744720458984

Token 179: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11789046972990036
    2. ' and' → logprob: -2.4928903579711914
    3. ':
' → logprob: -3.6178903579711914
    4. 'and' → logprob: -7.117890357971191
    5. '   ' → logprob: -8.242890357971191
    6. ',' → logprob: -8.242890357971191
    7. '[' → logprob: -8.492890357971191
    8. ' :' → logprob: -9.742890357971191
    9. '):
' → logprob: -10.617890357971191
    10. '):' → logprob: -11.242890357971191

Token 180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0497732050716877
    2. '    ' → logprob: -4.049773216247559
    3. ',' → logprob: -4.799773216247559
    4. '<|end|>' → logprob: -4.799773216247559
    5. ' ' → logprob: -5.549773216247559
    6. ':' → logprob: -6.049773216247559
    7. '   ' → logprob: -6.299773216247559
    8. '        
' → logprob: -6.674773216247559
    9. ' 
' → logprob: -6.674773216247559
    10. '        ' → logprob: -6.924773216247559

Token 181: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.30294379591941833
    2. '       ' → logprob: -1.9279438257217407
    3. 'if' (adapté à ' if') → logprob: -2.177943706512451
    4. '        ' → logprob: -6.177943706512451
    5. 'token' → logprob: -8.30294418334961
    6. ' next' → logprob: -9.67794418334961
    7. '	if' → logprob: -10.42794418334961
    8. 'next' → logprob: -10.42794418334961
    9. '           ' → logprob: -10.55294418334961
    10. ' token' → logprob: -10.67794418334961

Token 182: ' n' (ID: 297)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.21224726736545563
    2. ' parity' → logprob: -1.7122472524642944
    3. '(par' → logprob: -4.837247371673584
    4. 'flag' → logprob: -6.837247371673584
    5. 'pos' → logprob: -7.087247371673584
    6. ' (' → logprob: -7.837247371673584
    7. ' flag' → logprob: -8.962246894836426
    8. '(' → logprob: -9.337246894836426
    9. '   ' → logprob: -9.337246894836426
    10. ' not' → logprob: -9.712246894836426

Token 183: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5834009647369385
    2. '%' → logprob: -1.8334009647369385
    3. ' ' → logprob: -2.0834009647369385
    4. ' ==' → logprob: -2.3334009647369385
    5. '==' → logprob: -3.3334009647369385
    6. ' <' → logprob: -4.458400726318359
    7. '   ' → logprob: -5.458400726318359
    8. ' &' → logprob: -6.458400726318359
    9. '  ' → logprob: -6.583400726318359
    10. ' and' → logprob: -7.083400726318359

Token 184: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008341663633473217
    2. ' ' → logprob: -7.125833988189697
    3. '4' → logprob: -11.750834465026855
    4. '   ' → logprob: -12.000834465026855
    5. '  ' → logprob: -12.625834465026855
    6. '
' → logprob: -12.625834465026855
    7. '3' → logprob: -13.000834465026855
    8. '```' → logprob: -13.000834465026855
    9. '1' → logprob: -13.438334465026855
    10. '10' → logprob: -14.625834465026855

Token 185: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.129266067640856e-05
    2. '4' → logprob: -11.500020980834961
    3. ' ' → logprob: -12.000020980834961
    4. '
' → logprob: -13.625020980834961
    5. '3' → logprob: -14.125020980834961
    6. '```' → logprob: -14.187520980834961
    7. '1' → logprob: -14.625020980834961
    8. '   ' → logprob: -14.750020980834961
    9. '10' → logprob: -15.312520980834961
    10. '  ' → logprob: -16.00002098083496

Token 186: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1798689067363739
    2. ' ==' → logprob: -1.8048689365386963
    3. ':' → logprob: -9.429868698120117
    4. '==
' → logprob: -11.179868698120117
    5. '=' → logprob: -11.679868698120117
    6. ')==' → logprob: -11.804868698120117
    7. '   ' → logprob: -12.929868698120117
    8. ':
' → logprob: -12.929868698120117
    9. ']==' → logprob: -13.179868698120117
    10. ' ' → logprob: -13.554868698120117

Token 187: ' parity' (ID: 113181)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0326322540640831
    2. ' ' → logprob: -3.907632350921631
    3. '1' → logprob: -4.532632350921631
    4. 'par' → logprob: -6.907632350921631
    5. ' parity' → logprob: -8.782631874084473
    6. '   ' → logprob: -9.782631874084473
    7. ' par' → logprob: -10.532631874084473
    8. '(par' → logprob: -12.720131874084473
    9. '       ' → logprob: -13.157631874084473
    10. '
' → logprob: -13.157631874084473

Token 188: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4817649722099304
    2. ':
' → logprob: -1.6067650318145752
    3. ' and' → logprob: -1.7317650318145752
    4. '       ' → logprob: -5.856764793395996
    5. 'and' → logprob: -6.731764793395996
    6. '           ' → logprob: -8.731764793395996
    7. '   ' → logprob: -8.856764793395996
    8. '=' → logprob: -9.356764793395996
    9. ' :' → logprob: -9.481764793395996
    10. '==' → logprob: -9.606764793395996

Token 189: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4724332094192505
    2. ':' → logprob: -1.9724332094192505
    3. '           ' → logprob: -2.222433090209961
    4. ' and' → logprob: -2.597433090209961
    5. ':
' → logprob: -3.097433090209961
    6. ' if' → logprob: -6.472433090209961
    7. '
' → logprob: -6.722433090209961
    8. ',' → logprob: -6.847433090209961
    9. '        ' → logprob: -7.097433090209961
    10. '<|end|>' → logprob: -7.222433090209961

Token 190: ' curr' (ID: 10495)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7670866250991821
    2. ' if' → logprob: -1.2670866250991821
    3. '       ' → logprob: -1.5170866250991821
    4. 'while' → logprob: -4.142086505889893
    5. ' while' → logprob: -4.642086505889893
    6. '           ' → logprob: -5.392086505889893
    7. '#' → logprob: -6.392086505889893
    8. ' #' → logprob: -7.267086505889893
    9. '   ' → logprob: -7.642086505889893
    10. 'for' → logprob: -8.39208698272705

Token 191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0775156021118164
    2. '_list' → logprob: -1.0775156021118164
    3. '_pos' → logprob: -2.4525156021118164
    4. '_l' → logprob: -2.5775156021118164
    5. '_val' → logprob: -3.5775156021118164
    6. '=' → logprob: -3.7025156021118164
    7. '_left' → logprob: -3.9525156021118164
    8. '_ls' → logprob: -3.9525156021118164
    9. '_len' → logprob: -4.327515602111816
    10. ',' → logprob: -4.327515602111816

Token 192: ' ls' (ID: 41498)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.009181600995361805
    2. ' ls' → logprob: -4.759181499481201
    3. 'left' → logprob: -8.13418197631836
    4. ' ' → logprob: -9.75918197631836
    5. '(ls' → logprob: -10.00918197631836
    6. '   ' → logprob: -10.13418197631836
    7. 'rs' → logprob: -10.75918197631836
    8. 'None' → logprob: -10.88418197631836
    9. '0' → logprob: -11.13418197631836
    10. ' left' → logprob: -11.13418197631836

Token 193: '
' (ID: 198)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.001027331338264048
    2. '[' → logprob: -7.5010271072387695
    3. '[-' → logprob: -8.12602710723877
    4. '.' → logprob: -9.37602710723877
    5. 'pop' → logprob: -9.87602710723877
    6. ' and' → logprob: -10.25102710723877
    7. 'and' → logprob: -12.25102710723877
    8. '   ' → logprob: -13.87602710723877
    9. ' .' → logprob: -14.00102710723877
    10. '.p' → logprob: -16.126028060913086

Token 194: '           ' (ID: 352)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.6820005178451538
    2. '[-' → logprob: -1.5570005178451538
    3. '[' → logprob: -1.8070005178451538
    4. ' and' → logprob: -2.6820006370544434
    5. '       ' → logprob: -3.4320006370544434
    6. '           ' → logprob: -5.057000637054443
    7. 'and' → logprob: -5.557000637054443
    8. '
' → logprob: -5.557000637054443
    9. 'pop' → logprob: -7.307000637054443
    10. '            
' → logprob: -7.432000637054443

Token 195: ' cmp' (ID: 57822)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5678291916847229
    2. 'if' → logprob: -1.8178291320800781
    3. '       ' → logprob: -1.9428291320800781
    4. '           ' → logprob: -3.067829132080078
    5. ' else' → logprob: -3.567829132080078
    6. 'else' → logprob: -4.192829132080078
    7. '.pop' → logprob: -4.317829132080078
    8. 'pop' → logprob: -5.317829132080078
    9. '[' → logprob: -5.692829132080078
    10. 'elif' → logprob: -6.317829132080078

Token 196: '_idx' (ID: 15257)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.317672461271286
    2. ' =' → logprob: -1.5676724910736084
    3. 'ar' → logprob: -3.4426724910736084
    4. '=lambda' → logprob: -4.067672252655029
    5. '_index' → logprob: -6.192672252655029
    6. '_idx' → logprob: -6.567672252655029
    7. '       ' → logprob: -6.692672252655029
    8. '   ' → logprob: -6.817672252655029
    9. '=len' → logprob: -6.817672252655029
    10. '           ' → logprob: -7.067672252655029

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5236278176307678
    2. '=' → logprob: -0.8986278176307678
    3. ']' → logprob: -8.773628234863281
    4. '0' → logprob: -9.023628234863281
    5. ' ' → logprob: -9.273628234863281
    6. ',' → logprob: -9.648628234863281
    7. '   ' → logprob: -11.273628234863281
    8. ']=' → logprob: -11.773628234863281
    9. '    ' → logprob: -12.023628234863281
    10. '[' → logprob: -12.398628234863281

Token 198: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00633649155497551
    2. '1' → logprob: -5.381336688995361
    3. ' ' → logprob: -6.631336688995361
    4. '-' → logprob: -8.131336212158203
    5. ' -' → logprob: -9.881336212158203
    6. '   ' → logprob: -10.756336212158203
    7. '[' → logprob: -12.381336212158203
    8. '2' → logprob: -12.506336212158203
    9. '
' → logprob: -12.506336212158203
    10. 'pos' → logprob: -12.631336212158203

Token 199: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011062674224376678
    2. '1' → logprob: -4.7610626220703125
    3. 'pos' → logprob: -6.7610626220703125
    4. '-' → logprob: -7.0110626220703125
    5. ' ' → logprob: -8.761062622070312
    6. 'flag' → logprob: -9.636062622070312
    7. '[' → logprob: -10.386062622070312
    8. 'len' → logprob: -10.886062622070312
    9. ' -' → logprob: -11.136062622070312
    10. 'n' → logprob: -11.511062622070312

Token 200: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9854252338409424
    2. '       ' → logprob: -1.2354252338409424
    3. ' if' → logprob: -1.6104252338409424
    4. ' and' → logprob: -2.8604252338409424
    5. '<|end|>' → logprob: -3.4854252338409424
    6. '           ' → logprob: -4.360424995422363
    7. ' 
' → logprob: -4.610424995422363
    8. 'if' → logprob: -4.860424995422363
    9. ' ' → logprob: -5.735424995422363
    10. '<|end|>' → logprob: -5.860424995422363

Token 201: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4877176582813263
    2. ' if' → logprob: -1.487717628479004
    3. 'if' → logprob: -2.362717628479004
    4. '       ' → logprob: -3.112717628479004
    5. '<|end|>' → logprob: -4.862717628479004
    6. ' and' → logprob: -5.737717628479004
    7. ']' → logprob: -5.987717628479004
    8. '           ' → logprob: -6.112717628479004
    9. ' 
' → logprob: -6.612717628479004
    10. ' ' → logprob: -7.487717628479004

Token 202: ' left' (ID: 3561)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5586353540420532
    2. '[' → logprob: -1.8086353540420532
    3. '][' → logprob: -2.3086352348327637
    4. '1' → logprob: -3.0586352348327637
    5. 'if' → logprob: -3.3086352348327637
    6. ' if' → logprob: -4.058635234832764
    7. ']' → logprob: -4.058635234832764
    8. ' ' → logprob: -4.058635234832764
    9. '
' → logprob: -4.308635234832764
    10. 'pos' → logprob: -5.558635234832764

Token 203: ' value' (ID: 1432)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7823469042778015
    2. ' if' → logprob: -1.5323469638824463
    3. ']' → logprob: -2.0323469638824463
    4. 'if' → logprob: -2.1573469638824463
    5. '[' → logprob: -4.157346725463867
    6. '       ' → logprob: -4.157346725463867
    7. '][' → logprob: -4.532346725463867
    8. ']
' → logprob: -5.032346725463867
    9. '0' → logprob: -5.407346725463867
    10. ' and' → logprob: -5.657346725463867

Token 204: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21160246431827545
    2. ' if' → logprob: -2.3366024494171143
    3. '<|end|>' → logprob: -3.3366024494171143
    4. ' 
' → logprob: -4.336602687835693
    5. '       ' → logprob: -4.461602687835693
    6. ' and' → logprob: -5.336602687835693
    7. ' ' → logprob: -5.461602687835693
    8. 'if' → logprob: -5.461602687835693
    9. ']' → logprob: -5.711602687835693
    10. '           ' → logprob: -5.836602687835693

Token 205: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: ' flag' (ID: 9641)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7223261594772339
    2. '
' → logprob: -1.5973261594772339
    3. 'if' → logprob: -1.7223261594772339
    4. ' and' → logprob: -3.0973262786865234
    5. '       ' → logprob: -3.2223262786865234
    6. '           ' → logprob: -4.222326278686523
    7. '0' → logprob: -4.597326278686523
    8. '[' → logprob: -5.347326278686523
    9. ' 
' → logprob: -6.347326278686523
    10. '            
' → logprob: -6.472326278686523

Token 207: ',' (ID: 11)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.4749864637851715
    2. '=' → logprob: -1.4749864339828491
    3. ' =' → logprob: -2.7249865531921387
    4. '_r' → logprob: -3.3499865531921387
    5. '_' → logprob: -3.5999865531921387
    6. '+=' → logprob: -4.349986553192139
    7. '_=' → logprob: -5.849986553192139
    8. ' +=' → logprob: -6.474986553192139
    9. '   ' → logprob: -6.474986553192139
    10. ',' → logprob: -7.849986553192139

Token 208: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.6024103760719299
    2. 'flag' → logprob: -1.4774103164672852
    3. ' pos' → logprob: -2.602410316467285
    4. 'pos' → logprob: -2.727410316467285
    5. ' curr' → logprob: -3.852410316467285
    6. ' =' → logprob: -3.977410316467285
    7. ' n' → logprob: -5.102410316467285
    8. '1' → logprob: -5.102410316467285
    9. '=' → logprob: -5.477410316467285
    10. 'curr' → logprob: -5.602410316467285

Token 209: '_assign' (ID: 55018)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.6064066290855408
    2. '=' → logprob: -1.3564066886901855
    3. ' =' → logprob: -1.9814066886901855
    4. '_' → logprob: -2.9814066886901855
    5. '_=' → logprob: -5.8564066886901855
    6. ' _' → logprob: -6.9814066886901855
    7. '=_' → logprob: -7.2314066886901855
    8. '_r' → logprob: -7.6064066886901855
    9. '   ' → logprob: -7.6064066886901855
    10. '+=' → logprob: -7.7314066886901855

Token 210: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014171270653605461
    2. ' =' → logprob: -4.264171123504639
    3. ',' → logprob: -12.264171600341797
    4. '   ' → logprob: -13.889171600341797
    5. ' ' → logprob: -14.639171600341797
    6. '=
' → logprob: -15.139171600341797
    7. '           ' → logprob: -15.264171600341797
    8. '=_' → logprob: -15.764171600341797
    9. '=None' → logprob: -15.889171600341797
    10. '       ' → logprob: -16.014171600341797

Token 211: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.10553490370512009
    2. ' flag' → logprob: -2.480534791946411
    3. '(flag' → logprob: -4.48053503036499
    4. '0' → logprob: -5.85553503036499
    5. '1' → logprob: -7.35553503036499
    6. '   ' → logprob: -7.48053503036499
    7. ' (' → logprob: -7.73053503036499
    8. '(' → logprob: -8.230534553527832
    9. ' ' → logprob: -8.355534553527832
    10. 'False' → logprob: -10.605534553527832

Token 212: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.004228935576975346
    2. '_r' → logprob: -5.6292290687561035
    3. '=' → logprob: -8.379228591918945
    4. ',' → logprob: -8.504228591918945
    5. ' ' → logprob: -10.254228591918945
    6. ' =' → logprob: -10.754228591918945
    7. '1' → logprob: -10.879228591918945
    8. '   ' → logprob: -11.004228591918945
    9. '       ' → logprob: -11.129228591918945
    10. '_' → logprob: -11.129228591918945

Token 213: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.268838495016098
    2. ',' → logprob: -1.5188385248184204
    3. ' =' → logprob: -4.143838405609131
    4. ' ,' → logprob: -7.643838405609131
    5. ' if' → logprob: -9.393838882446289
    6. 'if' → logprob: -9.393838882446289
    7. '   ' → logprob: -9.893838882446289
    8. '+=' → logprob: -9.893838882446289
    9. '+' → logprob: -10.393838882446289
    10. ' ' → logprob: -10.518838882446289

Token 214: ' '' (ID: 461)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3726199269294739
    2. 'flag' → logprob: -1.872619867324829
    3. 'pos' → logprob: -3.372619867324829
    4. 'lambda' → logprob: -3.747619867324829
    5. ' flag' → logprob: -3.872619867324829
    6. '0' → logprob: -3.997619867324829
    7. ' ' → logprob: -4.122620105743408
    8. ' lambda' → logprob: -4.372620105743408
    9. ' pos' → logprob: -4.747620105743408
    10. 'ls' → logprob: -4.997620105743408

Token 215: 'flag' (ID: 17665)
  Prédit: 'flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.006286860443651676
    2. 'l' → logprob: -5.256287097930908
    3. '=' → logprob: -8.25628662109375
    4. ' flag' → logprob: -8.75628662109375
    5. '_flag' → logprob: -8.88128662109375
    6. '_l' → logprob: -9.25628662109375
    7. '0' → logprob: -9.75628662109375
    8. '_' → logprob: -9.88128662109375
    9. 'ls' → logprob: -10.00628662109375
    10. ' =' → logprob: -10.38128662109375

Token 216: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.7835754988482222e-05
    2. '_r' → logprob: -11.000018119812012
    3. '_' → logprob: -14.000018119812012
    4. '_left' → logprob: -16.625017166137695
    5. 'l' → logprob: -17.125017166137695
    6. '=' → logprob: -17.375017166137695
    7. '	l' → logprob: -17.875017166137695
    8. '_=' → logprob: -17.875017166137695
    9. ''_' → logprob: -18.500017166137695
    10. ''' → logprob: -19.250017166137695

Token 217: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06432882696390152
    2. ' =' → logprob: -3.064328908920288
    3. '=' → logprob: -4.564328670501709
    4. '='' → logprob: -5.689328670501709
    5. ' ='' → logprob: -7.314328670501709
    6. ''
' → logprob: -7.564328670501709
    7. ''=' → logprob: -8.189329147338867
    8. '<|end|>' → logprob: -9.189329147338867
    9. ')' → logprob: -9.689329147338867
    10. ')'' → logprob: -9.814329147338867

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5721142888069153
    2. '
' → logprob: -1.3221142292022705
    3. '           ' → logprob: -2.9471142292022705
    4. ' =' → logprob: -3.1971142292022705
    5. '<|end|>' → logprob: -3.4471142292022705
    6. '=' → logprob: -4.32211446762085
    7. ',' → logprob: -4.57211446762085
    8. ' 
' → logprob: -5.57211446762085
    9. '            
' → logprob: -5.94711446762085
    10. '        
' → logprob: -6.07211446762085

Token 219: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5611938834190369
    2. ' else' → logprob: -1.3111939430236816
    3. 'else' (adapté à ' else') → logprob: -2.6861939430236816
    4. '
' → logprob: -2.8111939430236816
    5. ' 
' → logprob: -4.686193943023682
    6. ':
' → logprob: -5.686193943023682
    7. ':' → logprob: -5.686193943023682
    8. '        
' → logprob: -5.936193943023682
    9. ' elif' → logprob: -6.186193943023682
    10. '<|end|>' → logprob: -6.561193943023682

Token 220: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.359397828578949
    2. ':
' → logprob: -1.3593978881835938
    3. '           ' → logprob: -3.1093978881835938
    4. ' :' → logprob: -8.984397888183594
    5. '=' → logprob: -9.234397888183594
    6. '       ' → logprob: -9.359397888183594
    7. ' =' → logprob: -10.109397888183594
    8. '        ' → logprob: -10.609397888183594
    9. ' :
' → logprob: -10.984397888183594
    10. ':
' → logprob: -11.109397888183594

Token 221: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1498253494501114
    2. ' rs' → logprob: -2.02482533454895
    3. 'rs' → logprob: -6.024825572967529
    4. '       ' → logprob: -6.274825572967529
    5. ' curr' → logprob: -6.649825572967529
    6. '   ' → logprob: -7.774825572967529
    7. ' ' → logprob: -7.899825572967529
    8. 'curr' → logprob: -8.774825096130371
    9. ' r' → logprob: -9.149825096130371
    10. ' ' → logprob: -9.399825096130371

Token 222: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' (adapté à ' curr') → logprob: -0.46654191613197327
    2. ' curr' → logprob: -1.2165418863296509
    3. '           ' → logprob: -3.3415420055389404
    4. ' rs' → logprob: -4.091541767120361
    5. 'rs' → logprob: -4.341541767120361
    6. '       ' → logprob: -4.591541767120361
    7. '   ' → logprob: -7.841541767120361
    8. ' ' → logprob: -8.46654224395752
    9. '_curr' → logprob: -9.21654224395752
    10. '	curr' → logprob: -9.34154224395752

Token 223: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693366408348083
    2. '=' → logprob: -2.1269335746765137
    3. ',' → logprob: -13.126934051513672
    4. '   ' → logprob: -13.251934051513672
    5. ' ' → logprob: -13.626934051513672
    6. '    ' → logprob: -14.876934051513672
    7. '  ' → logprob: -16.751934051513672
    8. '       ' → logprob: -16.751934051513672
    9. 's' → logprob: -17.126934051513672
    10. '        ' → logprob: -17.251934051513672

Token 224: ' rs' (ID: 15181)
  Prédit: ' rs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rs' → logprob: -0.5237658619880676
    2. 'rs' → logprob: -0.8987658619880676
    3. '	rs' → logprob: -8.023765563964844
    4. '   ' → logprob: -9.023765563964844
    5. '           ' → logprob: -10.148765563964844
    6. '(rs' → logprob: -10.273765563964844
    7. 'r' → logprob: -10.398765563964844
    8. '       ' → logprob: -10.523765563964844
    9. '$rs' → logprob: -10.773765563964844
    10. '_rs' → logprob: -11.398765563964844

Token 225: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4785691797733307
    2. '
' → logprob: -0.9785691499710083
    3. ',' → logprob: -5.853569030761719
    4. '       ' → logprob: -6.853569030761719
    5. '
' → logprob: -8.603569030761719
    6. ' 
' → logprob: -9.228569030761719
    7. '   ' → logprob: -9.728569030761719
    8. ' ' → logprob: -10.103569030761719
    9. ',
' → logprob: -10.478569030761719
    10. '```' → logprob: -10.603569030761719

Token 226: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02954137697815895
    2. '       ' → logprob: -4.029541492462158
    3. ',' → logprob: -5.154541492462158
    4. '
' → logprob: -5.779541492462158
    5. ' ' → logprob: -7.779541492462158
    6. '   ' → logprob: -8.154541015625
    7. '[' → logprob: -8.404541015625
    8. '0' → logprob: -8.529541015625
    9. ',
' → logprob: -8.654541015625
    10. '        ' → logprob: -8.904541015625

Token 227: ' cmp' (ID: 57822)
  Prédit: 'cmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmp' (adapté à ' cmp') → logprob: -0.12020163983106613
    2. ' cmp' → logprob: -2.245201587677002
    3. '0' → logprob: -5.370201587677002
    4. '1' → logprob: -6.745201587677002
    5. ' ' → logprob: -7.120201587677002
    6. 'comp' → logprob: -9.12020206451416
    7. '   ' → logprob: -9.12020206451416
    8. 'flag' → logprob: -9.24520206451416
    9. 'curr' → logprob: -9.37020206451416
    10. '       ' → logprob: -9.37020206451416

Token 228: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -1.4498052223643754e-05
    2. 'Idx' → logprob: -12.750014305114746
    3. '_index' → logprob: -12.750014305114746
    4. 'idx' → logprob: -12.875014305114746
    5. '0' → logprob: -13.625014305114746
    6. '_' → logprob: -14.000014305114746
    7. '_IDX' → logprob: -14.000014305114746
    8. ' ' → logprob: -14.500014305114746
    9. '   ' → logprob: -14.750014305114746
    10. '=' → logprob: -15.000014305114746

Token 229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760540962219238
    2. '=' → logprob: -0.8260540962219238
    3. '0' → logprob: -9.451053619384766
    4. ' ' → logprob: -10.826053619384766
    5. ',' → logprob: -11.201053619384766
    6. '=
' → logprob: -14.451053619384766
    7. '   ' → logprob: -14.826053619384766
    8. ' =
' → logprob: -15.076053619384766
    9. '1' → logprob: -15.201053619384766
    10. '    ' → logprob: -15.826053619384766

Token 230: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.625040054321289
    3. '1' → logprob: -11.125040054321289
    4. '   ' → logprob: -14.687540054321289
    5. '  ' → logprob: -16.06254005432129
    6. '
' → logprob: -16.75004005432129
    7. '    ' → logprob: -16.87504005432129
    8. '۰' → logprob: -17.06254005432129
    9. '-' → logprob: -17.43754005432129
    10. '       ' → logprob: -17.56254005432129

Token 231: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024358915106859058
    2. '1' → logprob: -8.375243186950684
    3. ' ' → logprob: -11.625243186950684
    4. '-' → logprob: -13.750243186950684
    5. ' -' → logprob: -15.062743186950684
    6. '   ' → logprob: -15.125243186950684
    7. '[' → logprob: -15.562743186950684
    8. '```' → logprob: -15.750243186950684
    9. 'len' → logprob: -15.875243186950684
    10. '  ' → logprob: -16.187744140625

Token 232: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07006725668907166
    2. ' ' → logprob: -3.3200671672821045
    3. '       ' → logprob: -4.820067405700684
    4. '   ' → logprob: -5.070067405700684
    5. ',' → logprob: -5.320067405700684
    6. 'flag' → logprob: -5.820067405700684
    7. ' flag' → logprob: -5.945067405700684
    8. '
' → logprob: -6.070067405700684
    9. '  ' → logprob: -7.070067405700684
    10. '            ' → logprob: -7.320067405700684

Token 233: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9965580701828003
    2. ' #' → logprob: -1.6215580701828003
    3. ' ' → logprob: -1.9965580701828003
    4. '#' → logprob: -1.9965580701828003
    5. '   ' → logprob: -2.99655818939209
    6. '       ' → logprob: -2.99655818939209
    7. ' if' → logprob: -3.99655818939209
    8. '           ' → logprob: -3.99655818939209
    9. 'if' → logprob: -4.49655818939209
    10. ')' → logprob: -5.74655818939209

Token 234: ' right' (ID: 1849)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8069490790367126
    2. 'right' → logprob: -0.8069490790367126
    3. '1' → logprob: -3.0569491386413574
    4. 'value' → logprob: -3.1819491386413574
    5. 'r' → logprob: -5.681949138641357
    6. ' ' → logprob: -5.681949138641357
    7. 'left' → logprob: -5.806949138641357
    8. ' right' → logprob: -5.931949138641357
    9. 'flag' → logprob: -6.681949138641357
    10. '#' → logprob: -7.056949138641357

Token 235: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.379743754863739
    2. ' value' → logprob: -1.2547438144683838
    3. '_value' → logprob: -3.629743814468384
    4. ')' → logprob: -5.629743576049805
    5. ')value' → logprob: -8.504743576049805
    6. '<|end|>' → logprob: -8.754743576049805
    7. 'token' → logprob: -9.754743576049805
    8. '-value' → logprob: -10.129743576049805
    9. ''value' → logprob: -10.254743576049805
    10. '"value' → logprob: -10.379743576049805

Token 236: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6335687637329102
    2. '
' → logprob: -1.5085687637329102
    3. '<|end|>' → logprob: -1.6335687637329102
    4. '           ' → logprob: -4.00856876373291
    5. ' 
' → logprob: -5.13356876373291
    6. ' if' → logprob: -5.25856876373291
    7. ' ' → logprob: -5.63356876373291
    8. '        
' → logprob: -5.63356876373291
    9. '        ' → logprob: -5.75856876373291
    10. ',' → logprob: -5.75856876373291

Token 237: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6454689502716064
    2. '<|end|>' → logprob: -0.7704689502716064
    3. ' if' → logprob: -5.520468711853027
    4. '<|end|>' → logprob: -6.145468711853027
    5. '           ' → logprob: -7.020468711853027
    6. ')' → logprob: -7.145468711853027
    7. ' ' → logprob: -7.145468711853027
    8. '        
' → logprob: -7.520468711853027
    9. ',' → logprob: -7.520468711853027
    10. '```' → logprob: -7.645468711853027

Token 238: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -0.12834270298480988
    2. 'if' → logprob: -2.503342628479004
    3. ' flag' → logprob: -4.003342628479004
    4. 'i' → logprob: -5.253342628479004
    5. ' if' → logprob: -5.378342628479004
    6. 'idx' → logprob: -5.628342628479004
    7. 'pos' → logprob: -6.253342628479004
    8. '
' → logprob: -6.503342628479004
    9. 'n' → logprob: -7.378342628479004
    10. ' i' → logprob: -8.378342628479004

Token 239: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17067952454090118
    2. ',' → logprob: -2.1706795692443848
    3. '_assign' → logprob: -4.045679569244385
    4. ' =' → logprob: -4.170679569244385
    5. '==' → logprob: -5.045679569244385
    6. '+=' → logprob: -6.920679569244385
    7. ' ==' → logprob: -7.170679569244385
    8. '_,' → logprob: -7.920679569244385
    9. '!=' → logprob: -8.295679092407227
    10. '>=' → logprob: -8.545679092407227

Token 240: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.43097347021102905
    2. 'flag' → logprob: -1.5559735298156738
    3. ''' → logprob: -2.180973529815674
    4. ' '' → logprob: -3.680973529815674
    5. ''s' → logprob: -8.430973052978516
    6. ' ' → logprob: -8.555973052978516
    7. '(flag' → logprob: -8.930973052978516
    8. '0' → logprob: -9.430973052978516
    9. '	flag' → logprob: -9.805973052978516
    10. '=' → logprob: -9.930973052978516

Token 241: '_assign' (ID: 55018)
  Prédit: '_assign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_assign' → logprob: -0.004683357197791338
    2. '=' → logprob: -5.504683494567871
    3. ' =' → logprob: -8.379683494567871
    4. '_ass' → logprob: -8.629683494567871
    5. 'assign' → logprob: -9.379683494567871
    6. '_' → logprob: -10.254683494567871
    7. '_=' → logprob: -10.629683494567871
    8. ',' → logprob: -11.379683494567871
    9. 'r' → logprob: -11.879683494567871
    10. 'Assign' → logprob: -12.129683494567871

Token 242: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760104656219482
    2. ' =' → logprob: -0.8260104656219482
    3. ',' → logprob: -9.576010704040527
    4. ' ' → logprob: -14.576010704040527
    5. ' ,' → logprob: -15.326010704040527
    6. ' =
' → logprob: -15.451010704040527
    7. '=
' → logprob: -15.701010704040527
    8. ')' → logprob: -15.701010704040527
    9. '=

' → logprob: -16.07600975036621
    10. '=True' → logprob: -17.45100975036621

Token 243: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.00878072902560234
    2. '0' → logprob: -5.3837809562683105
    3. ' flag' → logprob: -5.5087809562683105
    4. ' ' → logprob: -9.883780479431152
    5. ''' → logprob: -10.633780479431152
    6. '(flag' → logprob: -11.758780479431152
    7. '1' → logprob: -11.883780479431152
    8. 'f' → logprob: -13.008780479431152
    9. ''s' → logprob: -13.508780479431152
    10. '	flag' → logprob: -13.633780479431152

Token 244: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -7.111979357432574e-05
    2. '_s' → logprob: -9.87507152557373
    3. 'r' → logprob: -11.87507152557373
    4. '_,' → logprob: -12.75007152557373
    5. ',' → logprob: -12.87507152557373
    6. '_l' → logprob: -13.50007152557373
    7. 's' → logprob: -13.75007152557373
    8. '   ' → logprob: -13.87507152557373
    9. '_' → logprob: -14.00007152557373
    10. '_w' → logprob: -14.87507152557373

Token 245: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06746111810207367
    2. '=' → logprob: -2.9424610137939453
    3. ' =' → logprob: -5.192461013793945
    4. ',
' → logprob: -5.567461013793945
    5. '<|end|>' → logprob: -6.067461013793945
    6. ' ,' → logprob: -7.817461013793945
    7. ' ' → logprob: -9.317461013793945
    8. '       ' → logprob: -9.317461013793945
    9. ')' → logprob: -9.942461013793945
    10. '<|end|>' → logprob: -10.317461013793945

Token 246: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.349397748708725
    2. ' '' → logprob: -1.2243977785110474
    3. ''s' → logprob: -7.849397659301758
    4. ' flag' → logprob: -7.974397659301758
    5. 'flag' → logprob: -9.099397659301758
    6. ''value' → logprob: -10.224397659301758
    7. ' ' → logprob: -10.224397659301758
    8. '"' → logprob: -12.474397659301758
    9. ''user' → logprob: -12.974397659301758
    10. ''f' → logprob: -12.974397659301758

Token 247: 'flag' (ID: 17665)
  Prédit: 'flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.004730110988020897
    2. ''' → logprob: -5.379730224609375
    3. ' flag' → logprob: -9.629730224609375
    4. '"' → logprob: -11.379730224609375
    5. '_flag' → logprob: -12.504730224609375
    6. '''' → logprob: -12.754730224609375
    7. '(flag' → logprob: -12.754730224609375
    8. 'Flag' → logprob: -12.879730224609375
    9. '	flag' → logprob: -12.879730224609375
    10. '0' → logprob: -13.004730224609375

Token 248: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.0328904390335083
    2. '_l' → logprob: -3.5328903198242188
    3. 'r' → logprob: -5.907890319824219
    4. ''' → logprob: -8.407890319824219
    5. '_' → logprob: -9.157890319824219
    6. 'l' → logprob: -10.657890319824219
    7. '_assign' → logprob: -10.657890319824219
    8. '_'' → logprob: -11.032890319824219
    9. '_i' → logprob: -11.657890319824219
    10. '')' → logprob: -12.407890319824219

Token 249: ''
' (ID: 2207)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23341234028339386
    2. '       ' → logprob: -1.7334123849868774
    3. '<|end|>' → logprob: -4.108412265777588
    4. ' 
' → logprob: -5.233412265777588
    5. '        
' → logprob: -5.608412265777588
    6. '  
' → logprob: -6.983412265777588
    7. '[' → logprob: -7.108412265777588
    8. '   ' → logprob: -7.608412265777588
    9. ' ' → logprob: -7.733412265777588
    10. ':' → logprob: -7.858412265777588

Token 251: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40612122416496277
    2. '<|end|>' → logprob: -1.6561212539672852
    3. ' ' → logprob: -2.531121253967285
    4. ' 
' → logprob: -3.656121253967285
    5. '        ' → logprob: -4.656121253967285
    6. ' if' → logprob: -4.781121253967285
    7. '        
' → logprob: -5.531121253967285
    8. '[' → logprob: -5.656121253967285
    9. ',' → logprob: -6.281121253967285
    10. ':' → logprob: -6.781121253967285

Token 252: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.17093777656555176
    2. ' curr' → logprob: -2.9209377765655518
    3. 'curr' → logprob: -3.1709377765655518
    4. 'not' → logprob: -3.4209377765655518
    5. 'flag' → logprob: -4.170937538146973
    6. ' flag' → logprob: -4.545937538146973
    7. 'pos' → logprob: -7.045937538146973
    8. ' pos' → logprob: -7.795937538146973
    9. 'n' → logprob: -7.920937538146973
    10. ' n' → logprob: -8.420937538146973

Token 253: ' curr' (ID: 10495)
  Prédit: ' curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' curr' → logprob: -0.02075757458806038
    2. 'curr' → logprob: -3.8957576751708984
    3. ' flag' → logprob: -9.020757675170898
    4. '(curr' → logprob: -10.145757675170898
    5. ' used' → logprob: -11.145757675170898
    6. '	curr' → logprob: -11.645757675170898
    7. 'flag' → logprob: -12.020757675170898
    8. ' ' → logprob: -12.583257675170898
    9. '[curr' → logprob: -12.958257675170898
    10. 'used' → logprob: -13.020757675170898

Token 254: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2611008584499359
    2. ' or' → logprob: -1.6361008882522583
    3. ':
' → logprob: -3.3861007690429688
    4. ' and' → logprob: -7.261100769042969
    5. 'or' → logprob: -8.636100769042969
    6. 'and' → logprob: -8.761100769042969
    7. ':return' → logprob: -9.261100769042969
    8. '[' → logprob: -9.886100769042969
    9. '```' → logprob: -11.511100769042969
    10. ':
' → logprob: -12.511100769042969

Token 255: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6989161968231201
    2. '           ' → logprob: -1.3239161968231201
    3. ':' → logprob: -1.4489161968231201
    4. ' or' → logprob: -7.198916435241699
    5. ':return' → logprob: -8.5739164352417
    6. ' :
' → logprob: -8.6989164352417
    7. ',' → logprob: -8.8239164352417
    8. '
' → logprob: -9.3239164352417
    9. '       ' → logprob: -9.3239164352417
    10. ' :' → logprob: -9.4489164352417

Token 256: ' n' (ID: 297)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6421303749084473
    2. ' break' → logprob: -1.0171303749084473
    3. '       ' → logprob: -3.0171303749084473
    4. 'break' → logprob: -3.7671303749084473
    5. ' 
' → logprob: -3.8921303749084473
    6. '\n' → logprob: -5.267130374908447
    7. '
' → logprob: -5.392130374908447
    8. ' return' → logprob: -6.392130374908447
    9. '               ' → logprob: -6.392130374908447
    10. '        
' → logprob: -6.892130374908447

Token 257: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1067643016576767
    2. '+=' → logprob: -2.606764316558838
    3. ' ' → logprob: -3.856764316558838
    4. ' break' → logprob: -5.606764316558838
    5. '   ' → logprob: -7.356764316558838
    6. 'break' → logprob: -7.481764316558838
    7. '       ' → logprob: -7.856764316558838
    8. '  ' → logprob: -8.48176383972168
    9. '=' → logprob: -8.48176383972168
    10. ' =' → logprob: -8.85676383972168

Token 258: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005251187365502119
    2. ' ' → logprob: -5.255251407623291
    3. '   ' → logprob: -11.630250930786133
    4. '2' → logprob: -12.005250930786133
    5. '
' → logprob: -13.630250930786133
    6. '  ' → logprob: -14.505250930786133
    7. '       ' → logprob: -15.505250930786133
    8. '    ' → logprob: -16.130250930786133
    9. '```' → logprob: -16.380250930786133
    10. ' ' → logprob: -17.317750930786133

Token 259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7968066206085496e-05
    2. ' ' → logprob: -10.625027656555176
    3. '2' → logprob: -12.875027656555176
    4. '
' → logprob: -14.375027656555176
    5. '   ' → logprob: -15.000027656555176
    6. '  ' → logprob: -16.625028610229492
    7. '```' → logprob: -17.062528610229492
    8. '...' → logprob: -17.937528610229492
    9. '       ' → logprob: -18.250028610229492
    10. '

' → logprob: -18.812528610229492

Token 260: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0070763444527983665
    2. '
' → logprob: -5.257076263427734
    3. '<|end|>' → logprob: -7.382076263427734
    4. '       ' → logprob: -7.632076263427734
    5. ' continue' → logprob: -8.382076263427734
    6. 'continue' → logprob: -9.132076263427734
    7. '<|end|>' → logprob: -9.132076263427734
    8. '\n' → logprob: -9.632076263427734
    9. '            
' → logprob: -10.382076263427734
    10. ' 
' → logprob: -10.382076263427734

Token 261: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014674883568659425
    2. '       ' → logprob: -7.251467704772949
    3. '
' → logprob: -8.00146770477295
    4. '<|end|>' → logprob: -9.12646770477295
    5. '               ' → logprob: -9.62646770477295
    6. ' continue' → logprob: -9.87646770477295
    7. 'continue' → logprob: -10.37646770477295
    8. '   ' → logprob: -10.62646770477295
    9. '            
' → logprob: -10.62646770477295
    10. '<|end|>' → logprob: -11.00146770477295

Token 262: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14550729095935822
    2. ' continue' → logprob: -2.770507335662842
    3. 'continue' (adapté à ' continue') → logprob: -3.145507335662842
    4. '       ' → logprob: -3.520507335662842
    5. '   ' → logprob: -8.895506858825684
    6. '	continue' → logprob: -11.770506858825684
    7. '               ' → logprob: -12.395506858825684
    8. 'contin' → logprob: -13.395506858825684
    9. '_continue' → logprob: -13.520506858825684
    10. '
' → logprob: -14.020506858825684

Token 263: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052418116480112076
    2. '
' → logprob: -3.1774182319641113
    3. '<|end|>' → logprob: -5.177418231964111
    4. '        
' → logprob: -5.927418231964111
    5. ' 
' → logprob: -8.552417755126953
    6. '  
' → logprob: -9.052417755126953
    7. 'token' → logprob: -9.052417755126953
    8. ',' → logprob: -9.427417755126953
    9. '<|end|>' → logprob: -9.552417755126953
    10. '   ' → logprob: -9.677417755126953

Token 264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019917473196983337
    2. '        
' → logprob: -4.5199174880981445
    3. '<|end|>' → logprob: -5.7699174880981445
    4. ' 
' → logprob: -6.3949174880981445
    5. '
' → logprob: -7.0199174880981445
    6. '```' → logprob: -7.2699174880981445
    7. '  
' → logprob: -8.019917488098145
    8. '   ' → logprob: -8.269917488098145
    9. '       
' → logprob: -8.519917488098145
    10. '        ' → logprob: -8.519917488098145

Token 265: ' val' (ID: 1459)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1371229887008667
    2. ' if' → logprob: -3.0121231079101562
    3. '[' → logprob: -4.137123107910156
    4. 'if' → logprob: -4.137123107910156
    5. 'token' → logprob: -4.137123107910156
    6. ' token' → logprob: -6.012123107910156
    7. '        ' → logprob: -6.012123107910156
    8. 'curr' → logprob: -6.137123107910156
    9. '        
' → logprob: -6.387123107910156
    10. ' 
' → logprob: -6.387123107910156

Token 266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025791090447455645
    2. '=' → logprob: -6.002579212188721
    3. ' =' → logprob: -9.877578735351562
    4. ' ,' → logprob: -10.252578735351562
    5. '_,' → logprob: -12.502578735351562
    6. '0' → logprob: -12.752578735351562
    7. ',val' → logprob: -13.377578735351562
    8. '       ' → logprob: -13.502578735351562
    9. '   ' → logprob: -13.627578735351562
    10. ')' → logprob: -14.127578735351562

Token 267: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.299172580242157
    2. ' i' → logprob: -2.2991726398468018
    3. 'idx' → logprob: -2.4241726398468018
    4. 'i' → logprob: -2.6741726398468018
    5. ' index' → logprob: -8.049172401428223
    6. 'index' → logprob: -8.174172401428223
    7. ' ' → logprob: -10.924172401428223
    8. '	idx' → logprob: -10.924172401428223
    9. '_i' → logprob: -11.799172401428223
    10. '   ' → logprob: -11.799172401428223

Token 268: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08894447982311249
    2. ' =' → logprob: -2.463944435119629
    3. '   ' → logprob: -12.838944435119629
    4. '       ' → logprob: -14.088944435119629
    5. ')' → logprob: -14.213944435119629
    6. ' ' → logprob: -15.338944435119629
    7. ',' → logprob: -15.463944435119629
    8. ']' → logprob: -15.838944435119629
    9. '    ' → logprob: -16.338945388793945
    10. ')=' → logprob: -16.463945388793945

Token 269: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.011053716763854027
    2. ' curr' → logprob: -4.511053562164307
    3. '(curr' → logprob: -13.261054039001465
    4. '[curr' → logprob: -13.386054039001465
    5. '	curr' → logprob: -14.136054039001465
    6. '   ' → logprob: -14.511054039001465
    7. ' ' → logprob: -15.011054039001465
    8. 'cur' → logprob: -15.136054039001465
    9. '_curr' → logprob: -15.136054039001465
    10. '.curr' → logprob: -16.13605308532715

Token 270: '[-' (ID: 17503)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.1165376678109169
    2. '[' → logprob: -2.241537570953369
    3. '[-' → logprob: -5.866537570953369
    4. '.' → logprob: -7.991537570953369
    5. 'pop' → logprob: -8.241538047790527
    6. '[curr' → logprob: -9.366538047790527
    7. '   ' → logprob: -9.616538047790527
    8. '0' → logprob: -9.866538047790527
    9. '[pos' → logprob: -11.741538047790527
    10. '=' → logprob: -11.741538047790527

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.375005722045898
    3. '2' → logprob: -14.875005722045898
    4. '
' → logprob: -15.187505722045898
    5. '```' → logprob: -16.7500057220459
    6. '   ' → logprob: -17.1250057220459
    7. '  ' → logprob: -17.1875057220459
    8. '0' → logprob: -17.3750057220459
    9. '...' → logprob: -17.4375057220459
    10. '11' → logprob: -17.5625057220459

Token 272: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01113012246787548
    2. ']
' → logprob: -4.511130332946777
    3. ')' → logprob: -10.636130332946777
    4. ']

' → logprob: -10.636130332946777
    5. ' ]' → logprob: -10.886130332946777
    6. '])' → logprob: -12.011130332946777
    7. ')]' → logprob: -13.011130332946777
    8. ']
' → logprob: -13.636130332946777
    9. '()]' → logprob: -13.636130332946777
    10. ')
' → logprob: -14.261130332946777

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15272119641304016
    2. '
' → logprob: -2.6527211666107178
    3. '<|end|>' → logprob: -3.9027211666107178
    4. ' if' → logprob: -4.152721405029297
    5. ' 
' → logprob: -4.652721405029297
    6. '        
' → logprob: -4.777721405029297
    7. '[' → logprob: -5.527721405029297
    8. '        ' → logprob: -6.152721405029297
    9. '<|end|>' → logprob: -6.152721405029297
    10. 'if' → logprob: -6.277721405029297

Token 274: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2431897073984146
    2. 'if' (adapté à ' if') → logprob: -1.6181896924972534
    3. '       ' → logprob: -4.743189811706543
    4. 'curr' → logprob: -5.743189811706543
    5. ' curr' → logprob: -5.868189811706543
    6. ')' → logprob: -6.993189811706543
    7. '<|end|>' → logprob: -7.993189811706543
    8. '        ' → logprob: -8.243189811706543
    9. '
' → logprob: -8.368189811706543
    10. '        
' → logprob: -8.993189811706543

Token 275: ' used' (ID: 2061)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.4013117551803589
    2. 'val' → logprob: -1.9013117551803589
    3. ' (' → logprob: -2.1513118743896484
    4. 'used' → logprob: -2.2763118743896484
    5. '(' → logprob: -2.6513118743896484
    6. 'flag' → logprob: -2.7763118743896484
    7. ' used' → logprob: -2.9013118743896484
    8. ' val' → logprob: -3.0263118743896484
    9. 'not' → logprob: -3.4013118743896484
    10. ' flag' → logprob: -3.4013118743896484

Token 276: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.020647699013352394
    2. '[val' → logprob: -3.8956477642059326
    3. ' [' → logprob: -9.895648002624512
    4. '[' → logprob: -10.020648002624512
    5. 'idx' → logprob: -12.770648002624512
    6. ' idx' → logprob: -13.020648002624512
    7. '[pos' → logprob: -14.020648002624512
    8. '[id' → logprob: -14.270648002624512
    9. '
' → logprob: -14.395648002624512
    10. '(idx' → logprob: -14.395648002624512

Token 277: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.09202747792005539
    2. ']:' → logprob: -2.967027425765991
    3. ']==' → logprob: -3.967027425765991
    4. ']' → logprob: -4.09202766418457
    5. ':
' → logprob: -8.34202766418457
    6. ':' → logprob: -9.34202766418457
    7. '):
' → logprob: -9.46702766418457
    8. '[' → logprob: -9.46702766418457
    9. ' ]' → logprob: -9.46702766418457
    10. ']:
' → logprob: -9.59202766418457

Token 278: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16447189450263977
    2. '
' → logprob: -2.7894718647003174
    3. '\n' → logprob: -3.2894718647003174
    4. '       ' → logprob: -4.5394721031188965
    5. ' 
' → logprob: -4.7894721031188965
    6. 'curr' → logprob: -5.0394721031188965
    7. ':
' → logprob: -5.2894721031188965
    8. '            
' → logprob: -5.9144721031188965
    9. ' curr' → logprob: -5.9144721031188965
    10. '):
' → logprob: -6.0394721031188965

Token 279: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' (adapté à ' curr') → logprob: -0.4410959780216217
    2. ' curr' → logprob: -1.1910959482192993
    3. '       ' → logprob: -3.066096067428589
    4. '           ' → logprob: -5.19109582901001
    5. '	curr' → logprob: -8.066096305847168
    6. '   ' → logprob: -8.566096305847168
    7. '
' → logprob: -10.316096305847168
    8. '[curr' → logprob: -10.941096305847168
    9. '(curr' → logprob: -11.441096305847168
    10. '```' → logprob: -11.566096305847168

Token 280: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00020377879263833165
    2. '.' → logprob: -8.500204086303711
    3. 'pop' → logprob: -15.625204086303711
    4. ' .' → logprob: -15.875204086303711
    5. '	pop' → logprob: -18.75020408630371
    6. '.Pop' → logprob: -19.50020408630371
    7. ').' → logprob: -20.12520408630371
    8. '.p' → logprob: -20.25020408630371
    9. '   ' → logprob: -20.87520408630371
    10. ' ' → logprob: -21.00020408630371

Token 281: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001242772996192798
    2. '()
' → logprob: -9.000123977661133
    3. '()

' → logprob: -15.375123977661133
    4. '())' → logprob: -16.000123977661133
    5. '()-' → logprob: -16.000123977661133
    6. '()]' → logprob: -16.000123977661133
    7. '()
' → logprob: -16.500123977661133
    8. '()</' → logprob: -16.500123977661133
    9. '()\' → logprob: -17.125123977661133
    10. '()}' → logprob: -17.625123977661133

Token 282: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011335473973304033
    2. ' continue' → logprob: -7.751133441925049
    3. '
' → logprob: -7.876133441925049
    4. 'continue' → logprob: -8.251133918762207
    5. ',' → logprob: -10.876133918762207
    6. '       ' → logprob: -11.001133918762207
    7. ';' → logprob: -11.626133918762207
    8. ' else' → logprob: -12.876133918762207
    9. '               ' → logprob: -12.876133918762207
    10. ' and' → logprob: -13.376133918762207

Token 283: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05511618033051491
    2. ' continue' → logprob: -3.1801161766052246
    3. 'continue' (adapté à ' continue') → logprob: -4.680116176605225
    4. ' n' → logprob: -6.930116176605225
    5. 'n' → logprob: -7.055116176605225
    6. '       ' → logprob: -7.055116176605225
    7. '   ' → logprob: -10.055116653442383
    8. 'pos' → logprob: -12.930116653442383
    9. 'contin' → logprob: -13.055116653442383
    10. '```' → logprob: -13.430116653442383

Token 284: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001145814312621951
    2. ' if' → logprob: -7.376145839691162
    3. '<|end|>' → logprob: -7.876145839691162
    4. 'if' → logprob: -9.876145362854004
    5. '
' → logprob: -10.376145362854004
    6. '        
' → logprob: -10.751145362854004
    7. '```' → logprob: -11.876145362854004
    8. ')' → logprob: -12.126145362854004
    9. ',' → logprob: -12.501145362854004
    10. '<|end|>' → logprob: -12.876145362854004

Token 285: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022510962560772896
    2. ' if' → logprob: -3.8975110054016113
    3. 'if' → logprob: -6.897511005401611
    4. '
' → logprob: -8.772510528564453
    5. ' 
' → logprob: -8.772510528564453
    6. '<|end|>' → logprob: -8.772510528564453
    7. '        
' → logprob: -8.897510528564453
    8. '   ' → logprob: -9.022510528564453
    9. ')' → logprob: -10.147510528564453
    10. ' elif' → logprob: -10.772510528564453

Token 286: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.028866523876786232
    2. '       ' → logprob: -4.028866291046143
    3. ' if' → logprob: -5.153866291046143
    4. 'start' → logprob: -6.028866291046143
    5. 'pos' → logprob: -7.528866291046143
    6. 'curr' → logprob: -7.653866291046143
    7. 'l' → logprob: -7.903866291046143
    8. 'left' → logprob: -8.2788667678833
    9. 'prev' → logprob: -8.6538667678833
    10. 'val' → logprob: -8.9038667678833

Token 287: ' (' (ID: 350)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.5601524114608765
    2. 'flag' → logprob: -1.5601524114608765
    3. '(flag' → logprob: -1.6851524114608765
    4. 'val' → logprob: -1.8101524114608765
    5. '(pos' → logprob: -2.935152530670166
    6. 'par' → logprob: -2.935152530670166
    7. '(par' → logprob: -3.310152530670166
    8. ' (' → logprob: -4.060152530670166
    9. '(val' → logprob: -4.435152530670166
    10. '(not' → logprob: -4.685152530670166

Token 288: 'n' (ID: 77)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.3110917806625366
    2. 'pos' → logprob: -2.186091899871826
    3. 'val' → logprob: -2.436091899871826
    4. 'not' → logprob: -3.311091899871826
    5. ' flag' → logprob: -4.686091899871826
    6. '(flag' → logprob: -4.811091899871826
    7. ' not' → logprob: -5.561091899871826
    8. 'par' → logprob: -5.811091899871826
    9. ' pos' → logprob: -6.811091899871826
    10. ' (' → logprob: -6.936091899871826

Token 289: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6268077492713928
    2. ' ==' → logprob: -1.501807689666748
    3. '%' → logprob: -2.501807689666748
    4. '==' → logprob: -3.001807689666748
    5. '+' → logprob: -3.126807689666748
    6. ' +' → logprob: -3.501807689666748
    7. ')' → logprob: -3.626807689666748
    8. '   ' → logprob: -6.126807689666748
    9. ' ' → logprob: -6.126807689666748
    10. ' >=' → logprob: -6.376807689666748

Token 290: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006786535494029522
    2. ' ' → logprob: -5.006786346435547
    3. '4' → logprob: -10.631786346435547
    4. '   ' → logprob: -11.006786346435547
    5. '  ' → logprob: -12.131786346435547
    6. ')' → logprob: -12.444286346435547
    7. '
' → logprob: -12.506786346435547
    8. '     ' → logprob: -13.131786346435547
    9. '3' → logprob: -13.256786346435547
    10. '           ' → logprob: -13.381786346435547

Token 291: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010088731069117785
    2. ' ' → logprob: -7.126008987426758
    3. '4' → logprob: -9.001008987426758
    4. ')' → logprob: -10.751008987426758
    5. '   ' → logprob: -11.126008987426758
    6. '
' → logprob: -11.251008987426758
    7. '  ' → logprob: -12.438508987426758
    8. '3' → logprob: -12.626008987426758
    9. '```' → logprob: -12.626008987426758
    10. '

' → logprob: -13.063508987426758

Token 292: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8738683462142944
    2. '==' → logprob: -1.1238683462142944
    3. ')' → logprob: -1.6238683462142944
    4. ')==' → logprob: -2.873868465423584
    5. ' )' → logprob: -5.748868465423584
    6. ' !=' → logprob: -7.373868465423584
    7. '!=' → logprob: -9.373867988586426
    8. ')!=' → logprob: -9.623867988586426
    9. ' ' → logprob: -10.873867988586426
    10. '==
' → logprob: -11.498867988586426

Token 293: ' parity' (ID: 113181)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.38044026494026184
    2. '0' → logprob: -1.7554402351379395
    3. '2' → logprob: -2.7554402351379395
    4. ' ' → logprob: -3.5054402351379395
    5. ' parity' → logprob: -3.5054402351379395
    6. '1' → logprob: -4.2554402351379395
    7. ')' → logprob: -5.8804402351379395
    8. ' par' → logprob: -6.3804402351379395
    9. '   ' → logprob: -7.5054402351379395
    10. 'cmp' → logprob: -9.130440711975098

Token 294: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6907579302787781
    2. ')' → logprob: -0.8157579302787781
    3. 'and' → logprob: -3.440757989883423
    4. '==' → logprob: -4.190757751464844
    5. ')==' → logprob: -5.315757751464844
    6. '):
' → logprob: -6.565757751464844
    7. ' or' → logprob: -6.940757751464844
    8. ' ==' → logprob: -7.190757751464844
    9. ' )' → logprob: -7.565757751464844
    10. '):' → logprob: -7.940757751464844

Token 295: ' pos' (ID: 1253)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -1.0717480182647705
    2. ' pos' → logprob: -1.1967480182647705
    3. 'pos' → logprob: -1.6967480182647705
    4. 'val' → logprob: -2.4467480182647705
    5. ' (' → logprob: -3.5717480182647705
    6. ' flag' → logprob: -3.6967480182647705
    7. 'flag' → logprob: -4.696747779846191
    8. ' not' → logprob: -4.946747779846191
    9. '(pos' → logprob: -5.446747779846191
    10. ' abs' → logprob: -5.571747779846191

Token 296: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.8123085498809814
    2. '<=' → logprob: -0.8123085498809814
    3. '>=' → logprob: -3.0623085498809814
    4. ' >=' → logprob: -3.3123085498809814
    5. ' <' → logprob: -4.312308311462402
    6. '<' → logprob: -5.187308311462402
    7. '>' → logprob: -5.437308311462402
    8. '[' → logprob: -6.187308311462402
    9. ' >' → logprob: -6.187308311462402
    10. ')' → logprob: -7.437308311462402

Token 297: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.049120932817459106
    2. ' val' → logprob: -3.0491209030151367
    3. '=' → logprob: -7.674120903015137
    4. 'left' → logprob: -10.299120903015137
    5. 'sec' → logprob: -11.424120903015137
    6. ')' → logprob: -12.174120903015137
    7. ' left' → logprob: -12.299120903015137
    8. '	val' → logprob: -12.799120903015137
    9. ' sec' → logprob: -13.611620903015137
    10. '0' → logprob: -13.674120903015137

Token 298: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1822102963924408
    2. '):
' → logprob: -2.1822102069854736
    3. '):' → logprob: -2.9322102069854736
    4. '       ' → logprob: -8.307209968566895
    5. ' )' → logprob: -9.682209968566895
    6. ':' → logprob: -10.057209968566895
    7. '           ' → logprob: -10.307209968566895
    8. '):
' → logprob: -10.682209968566895
    9. ':
' → logprob: -10.682209968566895
    10. ' and' → logprob: -11.057209968566895

Token 299: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31893211603164673
    2. ':
' → logprob: -1.443932056427002
    3. '           ' → logprob: -4.068932056427002
    4. ' and' → logprob: -4.443932056427002
    5. ' or' → logprob: -5.193932056427002
    6. '       ' → logprob: -6.568932056427002
    7. '):
' → logprob: -8.31893253326416
    8. '==' → logprob: -8.44393253326416
    9. ',' → logprob: -8.56893253326416
    10. '):' → logprob: -8.81893253326416

Token 300: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.356558233499527
    2. ' (' → logprob: -1.4815582036972046
    3. '(not' → logprob: -3.356558322906494
    4. '(pos' → logprob: -4.356558322906494
    5. ' not' → logprob: -4.856558322906494
    6. '(flag' → logprob: -5.606558322906494
    7. 'not' → logprob: -5.856558322906494
    8. '(abs' → logprob: -6.231558322906494
    9. '   ' → logprob: -6.356558322906494
    10. '  ' → logprob: -6.856558322906494

Token 301: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03736865147948265
    2. ' n' → logprob: -3.6623685359954834
    3. 'pos' → logprob: -5.2873687744140625
    4. 'not' → logprob: -6.1623687744140625
    5. '(n' → logprob: -7.0373687744140625
    6. ' not' → logprob: -7.2873687744140625
    7. 'flag' → logprob: -7.4123687744140625
    8. '   ' → logprob: -8.287368774414062
    9. '
' → logprob: -8.287368774414062
    10. ' ' → logprob: -8.787368774414062

Token 302: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2826429009437561
    2. '%' → logprob: -1.4076428413391113
    3. ' ' → logprob: -7.532642841339111
    4. '+' → logprob: -7.532642841339111
    5. '   ' → logprob: -9.28264331817627
    6. '==' → logprob: -9.28264331817627
    7. ' ==' → logprob: -9.28264331817627
    8. ' +' → logprob: -10.15764331817627
    9. ')' → logprob: -10.65764331817627
    10. '```' → logprob: -11.40764331817627

Token 303: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018187522888183594
    2. ' ' → logprob: -4.018187522888184
    3. '```' → logprob: -12.143187522888184
    4. '   ' → logprob: -12.830687522888184
    5. '
' → logprob: -13.143187522888184
    6. '1' → logprob: -13.393187522888184
    7. ')' → logprob: -13.393187522888184
    8. '
' → logprob: -13.455687522888184
    9. '(' → logprob: -13.518187522888184
    10. '%' → logprob: -13.518187522888184

Token 304: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017476500943303108
    2. ' ' → logprob: -6.7517476081848145
    3. 'par' → logprob: -7.8767476081848145
    4. ' parity' → logprob: -9.689248085021973
    5. '
' → logprob: -10.939248085021973
    6. '   ' → logprob: -11.001748085021973
    7. '```' → logprob: -11.064248085021973
    8. '1' → logprob: -11.564248085021973
    9. '(' → logprob: -11.689248085021973
    10. ')' → logprob: -12.001748085021973

Token 305: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7480522990226746
    2. ' ==' → logprob: -0.7480522990226746
    3. ' !=' → logprob: -3.3730523586273193
    4. '!=' → logprob: -3.9980523586273193
    5. '+' → logprob: -8.373052597045898
    6. ')' → logprob: -8.998052597045898
    7. ' ' → logprob: -9.373052597045898
    8. 'else' → logprob: -9.373052597045898
    9. ')==' → logprob: -10.123052597045898
    10. ' else' → logprob: -10.373052597045898

Token 306: ' parity' (ID: 113181)
  Prédit: ' parity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parity' → logprob: -0.42923614382743835
    2. 'par' → logprob: -1.0542361736297607
    3. ' par' → logprob: -7.804235935211182
    4. ' ' → logprob: -9.92923641204834
    5. '0' → logprob: -10.30423641204834
    6. '1' → logprob: -11.30423641204834
    7. '	par' → logprob: -11.92923641204834
    8. '(par' → logprob: -12.30423641204834
    9. '2' → logprob: -12.30423641204834
    10. ')' → logprob: -12.67923641204834

Token 307: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005252137780189514
    2. 'and' → logprob: -5.255252361297607
    3. ' ' → logprob: -11.75525188446045
    4. '):
' → logprob: -12.38025188446045
    5. ')' → logprob: -13.00525188446045
    6. '):' → logprob: -14.25525188446045
    7. '):

' → logprob: -14.63025188446045
    8. ' or' → logprob: -14.88025188446045
    9. ' )' → logprob: -15.00525188446045
    10. ' ):
' → logprob: -15.00525188446045

Token 308: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.07395528256893158
    2. ' pos' → logprob: -2.6989552974700928
    3. 'val' → logprob: -5.948955059051514
    4. ' val' → logprob: -7.698955059051514
    5. '   ' → logprob: -8.573955535888672
    6. 'not' → logprob: -9.073955535888672
    7. 'True' → logprob: -9.323955535888672
    8. ' not' → logprob: -9.323955535888672
    9. 'abs' → logprob: -9.448955535888672
    10. '(pos' → logprob: -9.573955535888672

Token 309: ' >' (ID: 1424)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.566010594367981
    2. ' >' → logprob: -1.566010594367981
    3. ' <=' → logprob: -1.691010594367981
    4. '>=' → logprob: -3.9410104751586914
    5. '>' → logprob: -4.941010475158691
    6. '<=' → logprob: -5.066010475158691
    7. ' ==' → logprob: -5.691010475158691
    8. ' <' → logprob: -6.691010475158691
    9. '==' → logprob: -7.191010475158691
    10. ')' → logprob: -7.941010475158691

Token 310: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.016060762107372284
    2. 'val' → logprob: -4.141060829162598
    3. '	val' → logprob: -11.391060829162598
    4. '=' → logprob: -12.516060829162598
    5. ' ' → logprob: -12.891060829162598
    6. '[val' → logprob: -13.828560829162598
    7. '    ' → logprob: -13.953560829162598
    8. '(val' → logprob: -13.953560829162598
    9. ' ' → logprob: -14.203560829162598
    10. ')' → logprob: -14.516060829162598

Token 311: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02665659971535206
    2. '):' → logprob: -3.6516566276550293
    3. ')' → logprob: -8.776656150817871
    4. '):

' → logprob: -9.401656150817871
    5. '):
' → logprob: -10.026656150817871
    6. ' ):
' → logprob: -10.026656150817871
    7. '       ' → logprob: -10.776656150817871
    8. ':' → logprob: -12.776656150817871
    9. ':
' → logprob: -12.776656150817871
    10. ' ):' → logprob: -13.776656150817871

Token 312: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09322353452444077
    2. ':
' → logprob: -2.9682235717773438
    3. ':' → logprob: -3.4682235717773438
    4. '       ' → logprob: -5.968223571777344
    5. '):
' → logprob: -6.468223571777344
    6. '
' → logprob: -7.593223571777344
    7. '):' → logprob: -7.968223571777344
    8. ',' → logprob: -8.218223571777344
    9. '               ' → logprob: -8.218223571777344
    10. ')' → logprob: -9.093223571777344

Token 313: ' ans' (ID: 3345)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.6768545508384705
    2. 'pos' → logprob: -1.1768546104431152
    3. '           ' → logprob: -2.4268546104431152
    4. ' used' → logprob: -2.9268546104431152
    5. ' if' → logprob: -3.9268546104431152
    6. 'used' → logprob: -4.551854610443115
    7. 'if' → logprob: -5.676854610443115
    8. ' break' → logprob: -5.926854610443115
    9. '   ' → logprob: -6.301854610443115
    10. ' setattr' → logprob: -7.426854610443115

Token 314: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.014197353273630142
    2. '+=' → logprob: -4.26419734954834
    3. '+' → logprob: -11.38919734954834
    4. ' =' → logprob: -11.76419734954834
    5. ' +' → logprob: -12.51419734954834
    6. '   ' → logprob: -12.63919734954834
    7. '=' → logprob: -13.01419734954834
    8. ',' → logprob: -13.51419734954834
    9. '    ' → logprob: -13.63919734954834
    10. ' ' → logprob: -14.13919734954834

Token 315: ' abs' (ID: 8443)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010123052634298801
    2. 'val' → logprob: -5.010123252868652
    3. 'abs' → logprob: -6.260123252868652
    4. 'pos' → logprob: -7.260123252868652
    5. 'sec' → logprob: -8.010123252868652
    6. ' ' → logprob: -8.510123252868652
    7. '(' → logprob: -9.760123252868652
    8. '(sec' → logprob: -10.260123252868652
    9. '(pos' → logprob: -10.510123252868652
    10. 'n' → logprob: -11.010123252868652

Token 316: '(val' (ID: 17391)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.5760051012039185
    2. '(val' → logprob: -0.8260051012039185
    3. '(' → logprob: -10.576004981994629
    4. 'val' → logprob: -10.576004981994629
    5. '(ans' → logprob: -12.326004981994629
    6. ' val' → logprob: -13.076004981994629
    7. '(sec' → logprob: -13.076004981994629
    8. 'pos' → logprob: -13.826004981994629
    9. '(position' → logprob: -14.076004981994629
    10. '(value' → logprob: -14.826004981994629

Token 317: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2519933879375458
    2. '-' → logprob: -1.5019934177398682
    3. ')' → logprob: -10.001993179321289
    4. '   ' → logprob: -11.626993179321289
    5. ' ' → logprob: -12.626993179321289
    6. '-pos' → logprob: -12.751993179321289
    7. '           ' → logprob: -14.001993179321289
    8. ',' → logprob: -14.376993179321289
    9. '-position' → logprob: -14.751993179321289
    10. '  ' → logprob: -15.126993179321289

Token 318: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.004078997299075127
    2. ' pos' → logprob: -5.5040788650512695
    3. 'position' → logprob: -15.12907886505127
    4. '           ' → logprob: -15.50407886505127
    5. '	pos' → logprob: -16.879079818725586
    6. '   ' → logprob: -17.629079818725586
    7. '       ' → logprob: -17.629079818725586
    8. '(pos' → logprob: -17.629079818725586
    9. '0' → logprob: -17.754079818725586
    10. ')' → logprob: -18.004079818725586

Token 319: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.004217770881950855
    2. ')' → logprob: -5.504217624664307
    3. '           ' → logprob: -9.504218101501465
    4. ')
' → logprob: -9.879218101501465
    5. ')

' → logprob: -12.254218101501465
    6. ' )
' → logprob: -12.754218101501465
    7. '               ' → logprob: -13.129218101501465
    8. '       ' → logprob: -13.129218101501465
    9. '                   ' → logprob: -14.629218101501465
    10. '   ' → logprob: -15.129218101501465

Token 320: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5886799693107605
    2. '           ' → logprob: -1.4636800289154053
    3. '       ' → logprob: -2.3386800289154053
    4. '<|end|>' → logprob: -3.4636800289154053
    5. '\n' → logprob: -3.5886800289154053
    6. ' 
' → logprob: -3.7136800289154053
    7. '            
' → logprob: -5.463679790496826
    8. '  
' → logprob: -5.463679790496826
    9. '        
' → logprob: -5.588679790496826
    10. ')' → logprob: -5.588679790496826

Token 321: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.02990599162876606
    2. ' pos' → logprob: -3.5299060344696045
    3. ' if' → logprob: -9.529906272888184
    4. '           ' → logprob: -10.404906272888184
    5. 'if' → logprob: -10.404906272888184
    6. '
' → logprob: -12.404906272888184
    7. ' 
' → logprob: -12.404906272888184
    8. 'position' → logprob: -13.154906272888184
    9. ' used' → logprob: -13.154906272888184
    10. '	pos' → logprob: -13.279906272888184

Token 322: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141392946243286
    2. ' =' → logprob: -1.701413869857788
    3. ' +=' → logprob: -15.076414108276367
    4. '+=' → logprob: -15.701414108276367
    5. ' ' → logprob: -16.701414108276367
    6. '＝' → logprob: -16.951414108276367
    7. '=

' → logprob: -16.951414108276367
    8. ',' → logprob: -17.076414108276367
    9. '=}' → logprob: -17.326414108276367
    10. '.=' → logprob: -17.451414108276367

Token 323: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.16025875508785248
    2. ' val' → logprob: -1.9102587699890137
    3. 'idx' → logprob: -10.410258293151855
    4. ' idx' → logprob: -12.535258293151855
    5. '	val' → logprob: -14.535258293151855
    6. '[val' → logprob: -15.910258293151855
    7. '(val' → logprob: -16.785259246826172
    8. '           ' → logprob: -16.910259246826172
    9. ',val' → logprob: -17.410259246826172
    10. '   ' → logprob: -17.660259246826172

Token 324: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07563231140375137
    2. '
' → logprob: -2.700632333755493
    3. '       ' → logprob: -5.950632095336914
    4. ',' → logprob: -7.325632095336914
    5. '            
' → logprob: -7.700632095336914
    6. '<|end|>' → logprob: -7.825632095336914
    7. ',
' → logprob: -8.200632095336914
    8. ')
' → logprob: -8.700632095336914
    9. '\n' → logprob: -9.075632095336914
    10. '        
' → logprob: -9.325632095336914

Token 325: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.821661114692688
    2. '<|end|>' → logprob: -1.321661114692688
    3. '
' → logprob: -1.696661114692688
    4. '\n' → logprob: -2.9466609954833984
    5. '           ' → logprob: -3.5716609954833984
    6. '        
' → logprob: -4.946660995483398
    7. '<|end|>' → logprob: -5.321660995483398
    8. ')' → logprob: -5.321660995483398
    9. '            
' → logprob: -6.196660995483398
    10. '  
' → logprob: -6.696660995483398

Token 326: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -0.03623685613274574
    2. ' used' → logprob: -3.5362367630004883
    3. '           ' → logprob: -5.161236763000488
    4. '       ' → logprob: -7.786236763000488
    5. 'n' → logprob: -8.661236763000488
    6. 'if' → logprob: -9.911236763000488
    7. '   ' → logprob: -10.661236763000488
    8. 'curr' → logprob: -10.661236763000488
    9. ' n' → logprob: -11.161236763000488
    10. '
' → logprob: -12.161236763000488

Token 327: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -13.87500286102295
    3. '[index' → logprob: -14.00000286102295
    4. 'idx' → logprob: -14.62500286102295
    5. '```' → logprob: -15.62500286102295
    6. '
' → logprob: -17.250001907348633
    7. '[
' → logprob: -17.375001907348633
    8. '_idx' → logprob: -17.500001907348633
    9. '[Index' → logprob: -17.625001907348633
    10. '[int' → logprob: -17.625001907348633

Token 328: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004724987084046006
    2. ']=' → logprob: -7.750472545623779
    3. '=' → logprob: -10.125472068786621
    4. ' =' → logprob: -13.625472068786621
    5. ' ]' → logprob: -15.125472068786621
    6. '=True' → logprob: -15.875472068786621
    7. '[' → logprob: -16.500473022460938
    8. ')' → logprob: -17.125473022460938
    9. ']
' → logprob: -17.875473022460938
    10. 'True' → logprob: -18.750473022460938

Token 329: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031923281494528055
    2. ' =' → logprob: -5.75319242477417
    3. '=True' → logprob: -12.003191947937012
    4. '[' → logprob: -12.253191947937012
    5. ']' → logprob: -12.878191947937012
    6. ']=' → logprob: -14.253191947937012
    7. '[idx' → logprob: -14.503191947937012
    8. 'True' → logprob: -17.878192901611328
    9. '[index' → logprob: -18.378192901611328
    10. '.=' → logprob: -18.378192901611328

Token 330: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.3544423381972592e-05
    2. ' True' → logprob: -11.25001335144043
    3. '1' → logprob: -14.50001335144043
    4. '   ' → logprob: -19.00001335144043
    5. '(True' → logprob: -21.12501335144043
    6. 'true' → logprob: -22.00001335144043
    7. '=True' → logprob: -22.37501335144043
    8. ' ' → logprob: -23.00001335144043
    9. '  ' → logprob: -23.25001335144043
    10. 'False' → logprob: -23.50001335144043

Token 331: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001984146365430206
    2. '<|end|>' → logprob: -9.875198364257812
    3. '       ' → logprob: -10.000198364257812
    4. ',' → logprob: -10.000198364257812
    5. '<|end|>' → logprob: -11.125198364257812
    6. '
' → logprob: -11.375198364257812
    7. '   ' → logprob: -11.750198364257812
    8. '```' → logprob: -12.500198364257812
    9. ' curr' → logprob: -12.875198364257812
    10. '               ' → logprob: -13.000198364257812

Token 332: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20465253293514252
    2. '       ' → logprob: -1.7046525478363037
    3. 'n' → logprob: -6.829652309417725
    4. '<|end|>' → logprob: -7.204652309417725
    5. 'curr' → logprob: -8.204652786254883
    6. '   ' → logprob: -8.204652786254883
    7. '<|end|>' → logprob: -8.829652786254883
    8. ' n' → logprob: -9.079652786254883
    9. ',' → logprob: -9.204652786254883
    10. '[curr' → logprob: -9.329652786254883

Token 333: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' (adapté à ' curr') → logprob: -0.01611143723130226
    2. 'if' → logprob: -4.516111373901367
    3. ' curr' → logprob: -6.141111373901367
    4. 'n' → logprob: -6.766111373901367
    5. '           ' → logprob: -7.266111373901367
    6. '       ' → logprob: -7.391111373901367
    7. ' if' → logprob: -8.516111373901367
    8. '   ' → logprob: -9.266111373901367
    9. 'pop' → logprob: -9.516111373901367
    10. '```' → logprob: -11.391111373901367

Token 334: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -7.612634362885728e-05
    2. '.' → logprob: -9.500076293945312
    3. 'pop' → logprob: -13.750076293945312
    4. ' .' → logprob: -15.750076293945312
    5. '.append' → logprob: -17.875076293945312
    6. ').' → logprob: -18.750076293945312
    7. '_pop' → logprob: -20.250076293945312
    8. '=' → logprob: -20.375076293945312
    9. '	pop' → logprob: -20.375076293945312
    10. '.Pop' → logprob: -20.500076293945312

Token 335: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1269473135471344
    2. '()
' → logprob: -2.1269474029541016
    3. '()

' → logprob: -11.001947402954102
    4. '()
' → logprob: -13.751947402954102
    5. ')' → logprob: -14.751947402954102
    6. '())' → logprob: -15.376947402954102
    7. '(' → logprob: -15.501947402954102
    8. '()\' → logprob: -15.876947402954102
    9. '()]' → logprob: -16.0019474029541
    10. '(
' → logprob: -16.5019474029541

Token 336: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15202829241752625
    2. '       ' → logprob: -2.0270283222198486
    3. '
' → logprob: -5.5270280838012695
    4. '<|end|>' → logprob: -6.2770280838012695
    5. 'n' → logprob: -6.4020280838012695
    6. '<|end|>' → logprob: -6.9020280838012695
    7. '   ' → logprob: -8.02702808380127
    8. ',' → logprob: -8.90202808380127
    9. '```' → logprob: -9.52702808380127
    10. ',n' → logprob: -10.15202808380127

Token 337: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04346509650349617
    2. '           ' → logprob: -3.2934651374816895
    3. '       ' → logprob: -5.5434651374816895
    4. ' n' → logprob: -6.5434651374816895
    5. '   ' → logprob: -10.168464660644531
    6. '
' → logprob: -11.418464660644531
    7. ' ' → logprob: -13.168464660644531
    8. '```' → logprob: -13.418464660644531
    9. '	n' → logprob: -13.918464660644531
    10. '(n' → logprob: -14.418464660644531

Token 338: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7093450427055359
    2. 'flag' → logprob: -1.4593451023101807
    3. ' n' → logprob: -1.7093451023101807
    4. ' flag' → logprob: -3.0843451023101807
    5. 'pos' → logprob: -4.959344863891602
    6. ' parity' → logprob: -4.959344863891602
    7. 'not' → logprob: -5.084344863891602
    8. ' not' → logprob: -5.334344863891602
    9. 'curr' → logprob: -5.334344863891602
    10. 'cmp' → logprob: -5.584344863891602

Token 339: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.0089526176452637
    2. ' %' → logprob: -1.3839526176452637
    3. '==' → logprob: -1.7589526176452637
    4. '+' → logprob: -2.6339526176452637
    5. ' ==' → logprob: -2.8839526176452637
    6. '+=' → logprob: -2.8839526176452637
    7. ' +=' → logprob: -4.633952617645264
    8. '<|end|>' → logprob: -4.758952617645264
    9. '=' → logprob: -6.008952617645264
    10. '>=' → logprob: -6.258952617645264

Token 340: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012551683001220226
    2. ' ' → logprob: -4.387551784515381
    3. '```' → logprob: -11.012551307678223
    4. '<|end|>' → logprob: -12.700051307678223
    5. '   ' → logprob: -12.887551307678223
    6. '...' → logprob: -13.075051307678223
    7. '
' → logprob: -13.450051307678223
    8. '           ' → logprob: -13.512551307678223
    9. '.' → logprob: -13.575051307678223
    10. ')' → logprob: -13.637551307678223

Token 341: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014573395310435444
    2. ' ' → logprob: -8.87514591217041
    3. '1' → logprob: -12.87514591217041
    4. '```' → logprob: -13.62514591217041
    5. '<|end|>' → logprob: -14.81264591217041
    6. '   ' → logprob: -15.37514591217041
    7. '...' → logprob: -15.56264591217041
    8. '
' → logprob: -15.75014591217041
    9. ')' → logprob: -15.87514591217041
    10. '<|end|>' → logprob: -16.187644958496094

Token 342: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14304180443286896
    2. ' ==' → logprob: -2.0180418491363525
    3. '+=' → logprob: -9.018041610717773
    4. '=' → logprob: -9.643041610717773
    5. '+' → logprob: -10.143041610717773
    6. '==
' → logprob: -10.768041610717773
    7. ')==' → logprob: -10.893041610717773
    8. ')' → logprob: -10.893041610717773
    9. ' +=' → logprob: -11.018041610717773
    10. '()==' → logprob: -11.018041610717773

Token 343: ' parity' (ID: 113181)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.11958231776952744
    2. '0' → logprob: -2.869582414627075
    3. ' parity' → logprob: -2.994582414627075
    4. ' ' → logprob: -5.994582176208496
    5. '1' → logprob: -6.244582176208496
    6. ' par' → logprob: -6.994582176208496
    7. '   ' → logprob: -8.369582176208496
    8. '(par' → logprob: -9.119582176208496
    9. 'flag' → logprob: -10.057082176208496
    10. '	par' → logprob: -10.432082176208496

Token 344: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.27855998277664185
    2. ':' → logprob: -1.528559923171997
    3. '==' → logprob: -4.528560161590576
    4. '           ' → logprob: -4.653560161590576
    5. '       ' → logprob: -6.028560161590576
    6. '):
' → logprob: -6.778560161590576
    7. ' ==' → logprob: -7.278560161590576
    8. '=' → logprob: -8.028559684753418
    9. '               ' → logprob: -8.653559684753418
    10. '+' → logprob: -8.653559684753418

Token 345: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35061880946159363
    2. '               ' → logprob: -1.225618839263916
    3. ' flag' → logprob: -6.975618839263916
    4. '       ' → logprob: -7.850618839263916
    5. 'flag' → logprob: -7.850618839263916
    6. '   ' → logprob: -8.100618362426758
    7. '+' → logprob: -10.725618362426758
    8. '	       ' → logprob: -11.100618362426758
    9. 'n' → logprob: -11.225618362426758
    10. '```' → logprob: -11.350618362426758

Token 346: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -0.0045045348815619946
    2. '   ' → logprob: -6.254504680633545
    3. '           ' → logprob: -6.379504680633545
    4. ' flag' → logprob: -7.379504680633545
    5. '               ' → logprob: -8.504504203796387
    6. '	flag' → logprob: -11.129504203796387
    7. 'set' → logprob: -11.504504203796387
    8. 'if' → logprob: -12.004504203796387
    9. '       ' → logprob: -12.004504203796387
    10. ' ' → logprob: -12.629504203796387

Token 347: '_l' (ID: 1478)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16371828317642212
    2. '_l' → logprob: -2.6637182235717773
    3. ' =' → logprob: -3.1637182235717773
    4. '+=' → logprob: -3.2887182235717773
    5. ' +=' → logprob: -6.913718223571777
    6. 'l' → logprob: -8.038718223571777
    7. '_assign' → logprob: -9.538718223571777
    8. '_r' → logprob: -9.788718223571777
    9. '_=' → logprob: -9.913718223571777
    10. '_' → logprob: -10.038718223571777

Token 348: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17326445877552032
    2. '+=' → logprob: -2.548264503479004
    3. ' =' → logprob: -2.798264503479004
    4. ' +=' → logprob: -3.923264503479004
    5. ' ^=' → logprob: -9.298264503479004
    6. ' |=' → logprob: -10.548264503479004
    7. '|' → logprob: -11.298264503479004
    8. '+' → logprob: -11.548264503479004
    9. ',' → logprob: -11.673264503479004
    10. ' ' → logprob: -11.798264503479004

Token 349: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0033542821183800697
    2. '0' → logprob: -6.753354072570801
    3. 'flag' → logprob: -7.128354072570801
    4. 'not' → logprob: -7.503354072570801
    5. 'max' → logprob: -8.5033540725708
    6. '(' → logprob: -9.0033540725708
    7. 'val' → logprob: -9.2533540725708
    8. ' ' → logprob: -9.3783540725708
    9. '(flag' → logprob: -10.0033540725708
    10. '(not' → logprob: -10.0033540725708

Token 350: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004965947475284338
    2. '0' → logprob: -6.004965782165527
    3. 'flag' → logprob: -6.879965782165527
    4. 'val' → logprob: -7.879965782165527
    5. 'not' → logprob: -8.004965782165527
    6. 'max' → logprob: -8.504965782165527
    7. 'n' → logprob: -9.129965782165527
    8. 'pos' → logprob: -9.379965782165527
    9. ' ' → logprob: -9.504965782165527
    10. 'True' → logprob: -10.004965782165527

Token 351: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04602469503879547
    2. '<|end|>' → logprob: -3.546024799346924
    3. ' else' → logprob: -4.546024799346924
    4. 'else' → logprob: -6.171024799346924
    5. '       ' → logprob: -6.296024799346924
    6. '<|end|>' → logprob: -7.046024799346924
    7. '
' → logprob: -8.171024322509766
    8. '               ' → logprob: -8.546024322509766
    9. ')' → logprob: -10.421024322509766
    10. ' +' → logprob: -10.546024322509766

Token 352: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010313807288184762
    2. '<|end|>' → logprob: -7.751031398773193
    3. ' else' → logprob: -8.126030921936035
    4. 'else' → logprob: -8.501030921936035
    5. '       ' → logprob: -10.126030921936035
    6. '               ' → logprob: -10.501030921936035
    7. '<|end|>' → logprob: -11.251030921936035
    8. '
' → logprob: -11.876030921936035
    9. ')' → logprob: -12.876030921936035
    10. 'elif' → logprob: -13.751030921936035

Token 353: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05175872519612312
    2. 'else' (adapté à ' else') → logprob: -3.3017587661743164
    3. ' else' → logprob: -4.301758766174316
    4. '       ' → logprob: -10.801758766174316
    5. '               ' → logprob: -11.301758766174316
    6. 'elif' → logprob: -11.301758766174316
    7. '          ' → logprob: -11.801758766174316
    8. '	else' → logprob: -12.051758766174316
    9. '		' → logprob: -12.301758766174316
    10. '            ' → logprob: -12.801758766174316

Token 354: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6103271245956421
    2. ':
' → logprob: -0.9853271245956421
    3. ':' → logprob: -2.4853272438049316
    4. '           ' → logprob: -9.735326766967773
    5. ' :
' → logprob: -10.610326766967773
    6. '       ' → logprob: -10.735326766967773
    7. '              ' → logprob: -10.985326766967773
    8. '   ' → logprob: -11.110326766967773
    9. '                   ' → logprob: -11.235326766967773
    10. ' flag' → logprob: -11.360326766967773

Token 355: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013951188884675503
    2. 'flag' → logprob: -6.876395225524902
    3. ' flag' → logprob: -8.001395225524902
    4. '0' → logprob: -12.001395225524902
    5. '   ' → logprob: -12.251395225524902
    6. '           ' → logprob: -12.376395225524902
    7. '              ' → logprob: -13.001395225524902
    8. '
' → logprob: -13.126395225524902
    9. '                   ' → logprob: -13.376395225524902
    10. '       ' → logprob: -13.501395225524902

Token 356: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -0.05554141476750374
    2. ' flag' → logprob: -3.305541515350342
    3. '               ' → logprob: -4.055541515350342
    4. '           ' → logprob: -11.680541038513184
    5. '	flag' → logprob: -12.305541038513184
    6. '(flag' → logprob: -12.430541038513184
    7. '                   ' → logprob: -13.555541038513184
    8. '   ' → logprob: -13.805541038513184
    9. '                ' → logprob: -14.680541038513184
    10. '              ' → logprob: -14.930541038513184

Token 357: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -1.1517960956552997e-05
    2. '=' → logprob: -12.000011444091797
    3. '_' → logprob: -12.625011444091797
    4. 'r' → logprob: -13.375011444091797
    5. ' =' → logprob: -15.500011444091797
    6. '_l' → logprob: -16.250011444091797
    7. '_s' → logprob: -16.750011444091797
    8. '_=' → logprob: -17.000011444091797
    9. '=_' → logprob: -18.375011444091797
    10. '0' → logprob: -18.500011444091797

Token 358: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132646679878235
    2. ' =' → logprob: -1.3132646083831787
    3. '           ' → logprob: -14.188264846801758
    4. ' ' → logprob: -14.188264846801758
    5. '   ' → logprob: -14.813264846801758
    6. '+=' → logprob: -14.938264846801758
    7. ' +=' → logprob: -15.313264846801758
    8. '0' → logprob: -16.313264846801758
    9. '    ' → logprob: -16.563264846801758
    10. ',' → logprob: -16.563264846801758

Token 359: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04946034774184227
    2. ' ' → logprob: -3.1744604110717773
    3. '1' → logprob: -5.049460411071777
    4. '   ' → logprob: -11.299460411071777
    5. '           ' → logprob: -12.799460411071777
    6. '  ' → logprob: -12.924460411071777
    7. '    ' → logprob: -13.924460411071777
    8. '       ' → logprob: -14.236960411071777
    9. 'False' → logprob: -14.299460411071777
    10. '-' → logprob: -14.424460411071777

Token 360: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02105036936700344
    2. '1' → logprob: -3.896050453186035
    3. ' ' → logprob: -7.646050453186035
    4. '   ' → logprob: -11.021050453186035
    5. '           ' → logprob: -12.771050453186035
    6. '-' → logprob: -12.958550453186035
    7. '       ' → logprob: -13.771050453186035
    8. '  ' → logprob: -14.083550453186035
    9. 'False' → logprob: -14.208550453186035
    10. '2' → logprob: -14.271050453186035

Token 361: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6669048070907593
    2. '           ' → logprob: -0.7919048070907593
    3. '
' → logprob: -3.541904926300049
    4. 'n' → logprob: -5.791904926300049
    5. '<|end|>' → logprob: -7.291904926300049
    6. '\n' → logprob: -8.04190444946289
    7. '<|end|>' → logprob: -8.54190444946289
    8. 'else' → logprob: -9.04190444946289
    9. '   ' → logprob: -9.16690444946289
    10. '        
' → logprob: -10.16690444946289

Token 362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03681497648358345
    2. '           ' → logprob: -3.5368149280548096
    3. 'n' → logprob: -6.036815166473389
    4. '<|end|>' → logprob: -6.661815166473389
    5. '
' → logprob: -6.786815166473389
    6. 'else' → logprob: -7.411815166473389
    7. ',' → logprob: -8.03681468963623
    8. ',n' → logprob: -8.03681468963623
    9. '<|end|>' → logprob: -8.28681468963623
    10. '```' → logprob: -8.53681468963623

Token 363: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4214168190956116
    2. 'else' (adapté à ' else') → logprob: -1.4214167594909668
    3. ' else' → logprob: -2.671416759490967
    4. 'n' → logprob: -3.421416759490967
    5. ' n' → logprob: -9.046417236328125
    6. '\n' → logprob: -9.046417236328125
    7. '+' → logprob: -9.046417236328125
    8. '
' → logprob: -9.171417236328125
    9. 'elif' → logprob: -9.796417236328125
    10. '	else' → logprob: -10.296417236328125

Token 364: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3151978552341461
    2. ':
' → logprob: -1.4401978254318237
    3. ':' → logprob: -3.4401979446411133
    4. '       ' → logprob: -6.940197944641113
    5. '               ' → logprob: -8.815197944641113
    6. '):
' → logprob: -9.815197944641113
    7. '   ' → logprob: -9.815197944641113
    8. '          ' → logprob: -9.940197944641113
    9. '{
' → logprob: -10.190197944641113
    10. '{' → logprob: -10.815197944641113

Token 365: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003021679585799575
    2. 'n' → logprob: -6.253021717071533
    3. '       ' → logprob: -7.503021717071533
    4. ' n' → logprob: -8.003021240234375
    5. '   ' → logprob: -9.253021240234375
    6. '               ' → logprob: -9.878021240234375
    7. '```' → logprob: -10.378021240234375
    8. ' flag' → logprob: -12.128021240234375
    9. 'flag' → logprob: -12.128021240234375
    10. '{
' → logprob: -12.878021240234375

Token 366: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005537061952054501
    2. '           ' → logprob: -6.005537033081055
    3. 'n' → logprob: -6.755537033081055
    4. ' if' → logprob: -7.005537033081055
    5. 'flag' → logprob: -7.380537033081055
    6. 'break' → logprob: -8.505537033081055
    7. '       ' → logprob: -10.130537033081055
    8. '
' → logprob: -10.505537033081055
    9. '```' → logprob: -10.630537033081055
    10. 'exec' → logprob: -11.005537033081055

Token 367: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -1.1006978750228882
    2. ' flag' → logprob: -1.3506978750228882
    3. ' n' → logprob: -1.4756978750228882
    4. 'n' → logprob: -2.1006979942321777
    5. ' not' → logprob: -3.9756979942321777
    6. '(flag' → logprob: -4.225697994232178
    7. ' (' → logprob: -4.600697994232178
    8. '(n' → logprob: -5.975697994232178
    9. ' getattr' → logprob: -6.350697994232178
    10. 'eval' → logprob: -6.350697994232178

Token 368: ' ==' (ID: 951)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.5867704153060913
    2. '_' → logprob: -1.2117704153060913
    3. ' ==' → logprob: -3.211770534515381
    4. '==' → logprob: -3.586770534515381
    5. '=' → logprob: -4.086770534515381
    6. '_r' → logprob: -4.711770534515381
    7. ')' → logprob: -4.836770534515381
    8. ' =' → logprob: -5.211770534515381
    9. ' ' → logprob: -5.336770534515381
    10. '+=' → logprob: -5.586770534515381

Token 369: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.052104827016592026
    2. '0' → logprob: -3.0521047115325928
    3. ' ' → logprob: -5.677104949951172
    4. '   ' → logprob: -9.677104949951172
    5. '           ' → logprob: -12.052104949951172
    6. '       ' → logprob: -12.177104949951172
    7. '-' → logprob: -13.364604949951172
    8. '
' → logprob: -13.427104949951172
    9. '=' → logprob: -13.552104949951172
    10. '  ' → logprob: -13.677104949951172

Token 370: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07054195553064346
    2. '0' → logprob: -2.6955418586730957
    3. ' ' → logprob: -7.445541858673096
    4. '   ' → logprob: -11.195542335510254
    5. '       ' → logprob: -13.445542335510254
    6. '-' → logprob: -13.445542335510254
    7. '2' → logprob: -13.695542335510254
    8. '           ' → logprob: -14.383042335510254
    9. '
' → logprob: -14.883042335510254
    10. '  ' → logprob: -15.133042335510254

Token 371: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1446233093738556
    2. ':' → logprob: -2.394623279571533
    3. '           ' → logprob: -3.394623279571533
    4. '               ' → logprob: -5.144623279571533
    5. ' and' → logprob: -5.894623279571533
    6. ' or' → logprob: -7.894623279571533
    7. ':return' → logprob: -8.019623756408691
    8. '):
' → logprob: -8.394623756408691
    9. 'and' → logprob: -9.769623756408691
    10. '       ' → logprob: -10.019623756408691

Token 372: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10065443068742752
    2. '           ' → logprob: -2.475654363632202
    3. ' return' → logprob: -4.600654602050781
    4. ' break' → logprob: -6.975654602050781
    5. 'return' → logprob: -8.350654602050781
    6. ':
' → logprob: -9.850654602050781
    7. ',' → logprob: -9.850654602050781
    8. '```' → logprob: -10.100654602050781
    9. 'break' → logprob: -10.225654602050781
    10. ' n' → logprob: -10.225654602050781

Token 373: ' curr' (ID: 10495)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6491702198982239
    2. ' break' → logprob: -1.149170160293579
    3. 'break' → logprob: -2.274170160293579
    4. 'return' → logprob: -3.774170160293579
    5. 'n' → logprob: -4.149170398712158
    6. ' return' → logprob: -4.524170398712158
    7. ' n' → logprob: -5.024170398712158
    8. '               ' → logprob: -7.149170398712158
    9. '       ' → logprob: -8.274169921875
    10. '   ' → logprob: -8.399169921875

Token 374: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.001112116384319961
    2. '.' → logprob: -7.00111198425293
    3. '.append' → logprob: -9.00111198425293
    4. '[-' → logprob: -10.00111198425293
    5. ' .' → logprob: -10.87611198425293
    6. 'pop' → logprob: -12.25111198425293
    7. '=' → logprob: -13.25111198425293
    8. '.p' → logprob: -13.87611198425293
    9. ',' → logprob: -13.87611198425293
    10. '().' → logprob: -14.12611198425293

Token 375: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5760388970375061
    2. '()
' → logprob: -0.8260388970375061
    3. '               ' → logprob: -10.45103931427002
    4. '()
' → logprob: -10.82603931427002
    5. '()

' → logprob: -11.57603931427002
    6. '           ' → logprob: -11.70103931427002
    7. '<|end|>' → logprob: -11.70103931427002
    8. '()\' → logprob: -12.07603931427002
    9. ')' → logprob: -12.70103931427002
    10. '();' → logprob: -12.82603931427002

Token 376: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04917359724640846
    2. '           ' → logprob: -3.299173593521118
    3. '<|end|>' → logprob: -5.674173831939697
    4. '
' → logprob: -5.924173831939697
    5. '                   ' → logprob: -6.549173831939697
    6. '```' → logprob: -6.924173831939697
    7. '()' → logprob: -7.299173831939697
    8. '()
' → logprob: -8.049173355102539
    9. '                
' → logprob: -8.299173355102539
    10. ' else' → logprob: -8.674173355102539

Token 377: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12570001184940338
    2. 'flag' → logprob: -3.375699996948242
    3. 'continue' → logprob: -3.750699996948242
    4. '               ' → logprob: -3.750699996948242
    5. ' n' → logprob: -4.125699996948242
    6. 'break' → logprob: -4.875699996948242
    7. 'return' → logprob: -5.125699996948242
    8. '           ' → logprob: -5.500699996948242
    9. ' continue' → logprob: -7.125699996948242
    10. ' flag' → logprob: -7.250699996948242

Token 378: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5481005311012268
    2. ' n' → logprob: -1.548100471496582
    3. 'flag' → logprob: -2.173100471496582
    4. ' flag' → logprob: -3.798100471496582
    5. 'curr' → logprob: -4.048100471496582
    6. 'pos' → logprob: -4.548100471496582
    7. ' not' → logprob: -4.798100471496582
    8. 'not' → logprob: -5.173100471496582
    9. '(flag' → logprob: -5.298100471496582
    10. ' ' → logprob: -5.298100471496582

Token 379: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.16687150299549103
    2. '%' → logprob: -1.9168715476989746
    3. ' ==' → logprob: -6.416871547698975
    4. ' +=' → logprob: -6.416871547698975
    5. '==' → logprob: -7.541871547698975
    6. ' ' → logprob: -7.666871547698975
    7. '+' → logprob: -7.791871547698975
    8. '   ' → logprob: -7.791871547698975
    9. '<|end|>' → logprob: -8.166871070861816
    10. '+=' → logprob: -8.166871070861816

Token 380: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01257805060595274
    2. ' ' → logprob: -4.387578010559082
    3. '```' → logprob: -11.325078010559082
    4. '<|end|>' → logprob: -11.887578010559082
    5. '%' → logprob: -11.950078010559082
    6. '   ' → logprob: -12.325078010559082
    7. '-' → logprob: -12.825078010559082
    8. 'token' → logprob: -13.012578010559082
    9. '<|end|>' → logprob: -13.075078010559082
    10. '           ' → logprob: -13.075078010559082

Token 381: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008641763124614954
    2. ' ' → logprob: -7.125864028930664
    3. '```' → logprob: -11.250864028930664
    4. '   ' → logprob: -11.438364028930664
    5. '%' → logprob: -11.938364028930664
    6. '1' → logprob: -12.938364028930664
    7. '-' → logprob: -13.313364028930664
    8. '  ' → logprob: -13.750864028930664
    9. '
' → logprob: -13.813364028930664
    10. '           ' → logprob: -14.063364028930664

Token 382: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6937130093574524
    2. ' ==' → logprob: -0.6937130093574524
    3. ' !=' → logprob: -8.193713188171387
    4. '!=' → logprob: -9.193713188171387
    5. ')==' → logprob: -10.193713188171387
    6. '+' → logprob: -10.443713188171387
    7. '==
' → logprob: -10.943713188171387
    8. '()==' → logprob: -11.068713188171387
    9. ' ==
' → logprob: -11.193713188171387
    10. '<|end|>' → logprob: -11.443713188171387

Token 383: ' parity' (ID: 113181)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.09297078847885132
    2. ' parity' → logprob: -2.467970848083496
    3. '0' → logprob: -6.217970848083496
    4. '1' → logprob: -6.967970848083496
    5. ' par' → logprob: -7.717970848083496
    6. ' ' → logprob: -8.217970848083496
    7. 'flag' → logprob: -8.592970848083496
    8. '(par' → logprob: -9.967970848083496
    9. '   ' → logprob: -10.092970848083496
    10. ' flag' → logprob: -10.592970848083496

Token 384: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.36704564094543457
    2. ':' → logprob: -1.7420456409454346
    3. '                   ' → logprob: -2.1170456409454346
    4. '==' → logprob: -4.8670454025268555
    5. '               ' → logprob: -6.1170454025268555
    6. ' ==' → logprob: -7.3670454025268555
    7. '           ' → logprob: -7.6170454025268555
    8. '):
' → logprob: -8.117045402526855
    9. ' and' → logprob: -9.742045402526855
    10. '                       ' → logprob: -10.117045402526855

Token 385: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012052292935550213
    2. '               ' → logprob: -4.637052059173584
    3. ' flag' → logprob: -6.512052059173584
    4. '```' → logprob: -8.512052536010742
    5. '   ' → logprob: -8.762052536010742
    6. '           ' → logprob: -9.137052536010742
    7. 'flag' → logprob: -9.512052536010742
    8. 'n' → logprob: -9.637052536010742
    9. '                       ' → logprob: -9.762052536010742
    10. '                ' → logprob: -10.762052536010742

Token 386: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -0.003856370458379388
    2. '                   ' → logprob: -6.253856182098389
    3. ' flag' → logprob: -6.378856182098389
    4. '               ' → logprob: -8.753856658935547
    5. '   ' → logprob: -9.753856658935547
    6. '           ' → logprob: -12.128856658935547
    7. '	flag' → logprob: -13.253856658935547
    8. ' ' → logprob: -13.628856658935547
    9. '                       ' → logprob: -13.878856658935547
    10. '       ' → logprob: -14.253856658935547

Token 387: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -8.387458365177736e-05
    2. '_r' → logprob: -9.500083923339844
    3. 'l' → logprob: -12.250083923339844
    4. '=' → logprob: -13.125083923339844
    5. ' =' → logprob: -14.375083923339844
    6. '_' → logprob: -14.500083923339844
    7. '   ' → logprob: -15.500083923339844
    8. '=l' → logprob: -16.000083923339844
    9. '_s' → logprob: -16.250083923339844
    10. '_left' → logprob: -16.500083923339844

Token 388: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.126968115568161
    2. '=' → logprob: -2.1269681453704834
    3. ' +=' → logprob: -10.251968383789062
    4. '+=' → logprob: -12.376968383789062
    5. ' |=' → logprob: -15.501968383789062
    6. ' ' → logprob: -15.751968383789062
    7. ',' → logprob: -16.376968383789062
    8. '               ' → logprob: -16.626968383789062
    9. '   ' → logprob: -17.126968383789062
    10. '                   ' → logprob: -17.626968383789062

Token 389: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14049012959003448
    2. '0' → logprob: -2.1404900550842285
    3. ' ' → logprob: -4.8904900550842285
    4. '2' → logprob: -5.1404900550842285
    5. '   ' → logprob: -10.140490531921387
    6. '-' → logprob: -10.515490531921387
    7. '               ' → logprob: -11.015490531921387
    8. '                   ' → logprob: -12.452990531921387
    9. ' -' → logprob: -12.577990531921387
    10. '           ' → logprob: -12.952990531921387

Token 390: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07241248339414597
    2. '0' → logprob: -2.6974124908447266
    3. '2' → logprob: -6.197412490844727
    4. ' ' → logprob: -8.447412490844727
    5. '-' → logprob: -8.822412490844727
    6. '   ' → logprob: -9.822412490844727
    7. '3' → logprob: -12.447412490844727
    8. '               ' → logprob: -12.697412490844727
    9. '           ' → logprob: -13.322412490844727
    10. '=' → logprob: -13.322412490844727

Token 391: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007202766370028257
    2. '
' → logprob: -5.507202625274658
    3. '           ' → logprob: -6.382202625274658
    4. '<|end|>' → logprob: -7.882202625274658
    5. 'else' → logprob: -8.007203102111816
    6. '                   ' → logprob: -8.257203102111816
    7. ' else' → logprob: -8.882203102111816
    8. '       ' → logprob: -9.257203102111816
    9. '```' → logprob: -9.757203102111816
    10. '                
' → logprob: -10.007203102111816

Token 392: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019829985685646534
    2. 'else' → logprob: -7.251983165740967
    3. '<|end|>' → logprob: -7.626983165740967
    4. ' else' → logprob: -8.126982688903809
    5. '                   ' → logprob: -8.626982688903809
    6. '           ' → logprob: -9.126982688903809
    7. '
' → logprob: -9.376982688903809
    8. '```' → logprob: -9.876982688903809
    9. '       ' → logprob: -11.251982688903809
    10. '                
' → logprob: -11.251982688903809

Token 393: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0026420066133141518
    2. 'else' (adapté à ' else') → logprob: -6.2526421546936035
    3. ' else' → logprob: -7.5026421546936035
    4. '           ' → logprob: -9.127641677856445
    5. '                   ' → logprob: -10.252641677856445
    6. '   ' → logprob: -12.752641677856445
    7. '```' → logprob: -12.877641677856445
    8. '
' → logprob: -13.002641677856445
    9. '                ' → logprob: -13.377641677856445
    10. 'n' → logprob: -13.627641677856445

Token 394: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23503617942333221
    2. ':
' → logprob: -1.9850361347198486
    3. '                       ' → logprob: -3.3600361347198486
    4. '                   ' → logprob: -3.3600361347198486
    5. '               ' → logprob: -6.360036373138428
    6. '```' → logprob: -7.610036373138428
    7. '):
' → logprob: -8.86003589630127
    8. '                     ' → logprob: -10.61003589630127
    9. '       ' → logprob: -10.98503589630127
    10. '   ' → logprob: -10.98503589630127

Token 395: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.47763437032699585
    2. '               ' → logprob: -1.3526344299316406
    3. '                       ' → logprob: -2.2276344299316406
    4. 'flag' → logprob: -4.602634429931641
    5. ' flag' → logprob: -6.852634429931641
    6. '       ' → logprob: -7.352634429931641
    7. '0' → logprob: -7.477634429931641
    8. '```' → logprob: -7.727634429931641
    9. '   ' → logprob: -8.60263442993164
    10. '           ' → logprob: -9.10263442993164

Token 396: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -0.001491292379796505
    2. ' flag' → logprob: -7.001491069793701
    3. '                   ' → logprob: -7.501491069793701
    4. '               ' → logprob: -10.62649154663086
    5. '                       ' → logprob: -13.00149154663086
    6. '	flag' → logprob: -14.50149154663086
    7. '(flag' → logprob: -16.12649154663086
    8. '                    ' → logprob: -16.62649154663086
    9. '           ' → logprob: -16.75149154663086
    10. '                  ' → logprob: -16.75149154663086

Token 397: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -6.704273118884885e-07
    2. '=' → logprob: -14.375000953674316
    3. 'r' → logprob: -16.625
    4. ' =' → logprob: -18.625
    5. '_s' → logprob: -19.125
    6. '_' → logprob: -19.375
    7. '```' → logprob: -20.0
    8. '_R' → logprob: -21.25
    9. '=_' → logprob: -21.625
    10. '   ' → logprob: -21.625

Token 398: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326398253440857
    2. ' =' → logprob: -1.313264012336731
    3. '               ' → logprob: -14.438263893127441
    4. ' ' → logprob: -14.563263893127441
    5. '0' → logprob: -14.563263893127441
    6. '                   ' → logprob: -15.438263893127441
    7. '           ' → logprob: -15.688263893127441
    8. '<|end|>' → logprob: -16.313264846801758
    9. '   ' → logprob: -16.938264846801758
    10. '=
' → logprob: -17.188264846801758

Token 399: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02057201974093914
    2. ' ' → logprob: -3.8955719470977783
    3. '1' → logprob: -10.5205717086792
    4. '               ' → logprob: -13.6455717086792
    5. '   ' → logprob: -14.3955717086792
    6. '<|end|>' → logprob: -15.1455717086792
    7. '           ' → logprob: -15.5205717086792
    8. '                   ' → logprob: -15.7080717086792
    9. '  ' → logprob: -15.7705717086792
    10. '=' → logprob: -16.458072662353516

Token 400: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000940046738833189
    2. ' ' → logprob: -7.500939846038818
    3. '1' → logprob: -7.875939846038818
    4. '   ' → logprob: -13.125940322875977
    5. '               ' → logprob: -13.250940322875977
    6. '           ' → logprob: -13.875940322875977
    7. '                   ' → logprob: -14.750940322875977
    8. '  ' → logprob: -15.188440322875977
    9. '=' → logprob: -15.188440322875977
    10. '       ' → logprob: -15.188440322875977

Token 401: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 402: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6289290189743042
    2. '<|end|>' → logprob: -1.6289290189743042
    3. '               ' → logprob: -1.7539290189743042
    4. '```' → logprob: -3.5039291381835938
    5. 'n' → logprob: -3.6289291381835938
    6. '<|end|>' → logprob: -4.753929138183594
    7. '       ' → logprob: -4.753929138183594
    8. '\n' → logprob: -5.128929138183594
    9. '                   ' → logprob: -5.253929138183594
    10. '
' → logprob: -5.628929138183594

Token 403: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5092859268188477
    2. ' else' → logprob: -1.6342859268188477
    3. 'else' (adapté à ' else') → logprob: -1.7592859268188477
    4. 'n' → logprob: -3.7592859268188477
    5. ' n' → logprob: -5.509285926818848
    6. '       ' → logprob: -5.759285926818848
    7. '               ' → logprob: -7.884285926818848
    8. '   ' → logprob: -8.259285926818848
    9. '```' → logprob: -8.384285926818848
    10. ' ' → logprob: -9.384285926818848

Token 404: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6075299382209778
    2. ':
' → logprob: -1.607529878616333
    3. '               ' → logprob: -1.732529878616333
    4. ':' → logprob: -2.607529878616333
    5. '       ' → logprob: -7.357530117034912
    6. ' :
' → logprob: -7.607530117034912
    7. '```' → logprob: -7.732530117034912
    8. '{' → logprob: -7.857530117034912
    9. '{
' → logprob: -7.982530117034912
    10. '):
' → logprob: -8.107529640197754

Token 405: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0741477832198143
    2. '               ' → logprob: -2.8241477012634277
    3. ' if' → logprob: -5.074147701263428
    4. 'if' → logprob: -5.699147701263428
    5. '            ' → logprob: -6.824147701263428
    6. 'eval' → logprob: -7.824147701263428
    7. '{
' → logprob: -8.449148178100586
    8. '```' → logprob: -9.574148178100586
    9. 'flag' → logprob: -9.699148178100586
    10. '{' → logprob: -9.824148178100586

Token 406: ' if' (ID: 538)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.46434086561203003
    2. 'if' (adapté à ' if') → logprob: -1.3393409252166748
    3. 'exec' → logprob: -3.964340925216675
    4. ' if' → logprob: -4.214340686798096
    5. 'n' → logprob: -4.339340686798096
    6. ' flag' → logprob: -4.339340686798096
    7. '               ' → logprob: -4.714340686798096
    8. 'eval' → logprob: -4.714340686798096
    9. 'ans' → logprob: -4.839340686798096
    10. '                   ' → logprob: -5.214340686798096

Token 407: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.49383044242858887
    2. 'n' → logprob: -1.4938304424285889
    3. ' flag' → logprob: -2.493830442428589
    4. 'flag' → logprob: -2.993830442428589
    5. ' not' → logprob: -4.243830680847168
    6. '   ' → logprob: -5.743830680847168
    7. ' curr' → logprob: -5.993830680847168
    8. ' (' → logprob: -6.243830680847168
    9. 'curr' → logprob: -6.368830680847168
    10. ' ' → logprob: -6.618830680847168

Token 408: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10022532939910889
    2. '%' → logprob: -2.3502254486083984
    3. ' ' → logprob: -11.225225448608398
    4. '#' → logprob: -14.225225448608398
    5. '   ' → logprob: -14.350225448608398
    6. '[' → logprob: -14.600225448608398
    7. ' %#' → logprob: -14.725225448608398
    8. '<|end|>' → logprob: -14.850225448608398
    9. '```' → logprob: -14.850225448608398
    10. ' ' → logprob: -14.975225448608398

Token 409: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04301539808511734
    2. ' ' → logprob: -3.168015480041504
    3. '```' → logprob: -12.418015480041504
    4. '_' → logprob: -12.918015480041504
    5. '   ' → logprob: -13.293015480041504
    6. '  ' → logprob: -14.043015480041504
    7. '%' → logprob: -14.105515480041504
    8. '1' → logprob: -14.605515480041504
    9. '(' → logprob: -14.855515480041504
    10. '#' → logprob: -14.980515480041504

Token 410: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.641841820150148e-05
    2. ' ' → logprob: -11.25002670288086
    3. '```' → logprob: -12.31252670288086
    4. '1' → logprob: -13.37502670288086
    5. '==' → logprob: -14.37502670288086
    6. '%' → logprob: -14.68752670288086
    7. 'par' → logprob: -15.00002670288086
    8. '=' → logprob: -15.06252670288086
    9. '   ' → logprob: -15.31252670288086
    10. '3' → logprob: -15.37502670288086

Token 411: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.428986519575119
    2. '==' → logprob: -1.0539865493774414
    3. ' !=' → logprob: -8.553986549377441
    4. '!=' → logprob: -9.928986549377441
    5. '   ' → logprob: -11.678986549377441
    6. ' not' → logprob: -11.803986549377441
    7. ' ' → logprob: -12.178986549377441
    8. ')==' → logprob: -12.428986549377441
    9. '==
' → logprob: -12.428986549377441
    10. '=' → logprob: -12.928986549377441

Token 412: ' parity' (ID: 113181)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.0899714007973671
    2. ' parity' → logprob: -2.4649713039398193
    3. '1' → logprob: -7.839971542358398
    4. '0' → logprob: -8.089971542358398
    5. '(par' → logprob: -9.089971542358398
    6. ' ' → logprob: -9.714971542358398
    7. ' par' → logprob: -10.089971542358398
    8. 'not' → logprob: -10.339971542358398
    9. 'flag' → logprob: -11.214971542358398
    10. '	par' → logprob: -11.589971542358398

Token 413: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8292619585990906
    2. ':
' → logprob: -0.9542619585990906
    3. '                   ' → logprob: -2.2042620182037354
    4. '               ' → logprob: -3.4542620182037354
    5. ' and' → logprob: -4.079261779785156
    6. '==' → logprob: -5.704261779785156
    7. '=' → logprob: -5.704261779785156
    8. '<|end|>' → logprob: -5.704261779785156
    9. '           ' → logprob: -6.079261779785156
    10. '                       ' → logprob: -6.204261779785156

Token 414: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03758314624428749
    2. ' flag' → logprob: -3.537583112716675
    3. '               ' → logprob: -5.037583351135254
    4. 'flag' → logprob: -7.912583351135254
    5. '```' → logprob: -8.037583351135254
    6. '           ' → logprob: -8.662583351135254
    7. '                       ' → logprob: -9.037583351135254
    8. '(flag' → logprob: -9.287583351135254
    9. '   ' → logprob: -9.662583351135254
    10. '                  ' → logprob: -10.537583351135254

Token 415: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -0.17078082263469696
    2. ' flag' → logprob: -1.9207807779312134
    3. '                   ' → logprob: -4.670780658721924
    4. '               ' → logprob: -6.920780658721924
    5. '   ' → logprob: -9.170781135559082
    6. '	flag' → logprob: -10.920781135559082
    7. '           ' → logprob: -11.420781135559082
    8. ' ' → logprob: -12.295781135559082
    9. '       ' → logprob: -12.920781135559082
    10. '(flag' → logprob: -13.295781135559082

Token 416: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.00022237090161070228
    2. '_r' → logprob: -8.750222206115723
    3. '=' → logprob: -10.875222206115723
    4. '_' → logprob: -11.375222206115723
    5. '_=' → logprob: -11.625222206115723
    6. '_n' → logprob: -12.000222206115723
    7. '_s' → logprob: -12.625222206115723
    8. '_i' → logprob: -13.000222206115723
    9. '+=' → logprob: -13.125222206115723
    10. ' _' → logprob: -13.250222206115723

Token 417: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141363143920898
    2. '=' → logprob: -1.701413631439209
    3. ' +=' → logprob: -15.076414108276367
    4. '+=' → logprob: -17.076414108276367
    5. ' ' → logprob: -17.451414108276367
    6. '=True' → logprob: -18.201414108276367
    7. '<|end|>' → logprob: -18.576414108276367
    8. ' |=' → logprob: -18.701414108276367
    9. '1' → logprob: -19.201414108276367
    10. ',' → logprob: -19.326414108276367

Token 418: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.231182826217264e-05
    2. ' ' → logprob: -9.625072479248047
    3. '                   ' → logprob: -12.250072479248047
    4. '               ' → logprob: -13.625072479248047
    5. '   ' → logprob: -16.250072479248047
    6. '           ' → logprob: -17.000072479248047
    7. '                       ' → logprob: -17.250072479248047
    8. '0' → logprob: -17.500072479248047
    9. '2' → logprob: -18.687572479248047
    10. '                ' → logprob: -18.937572479248047

Token 419: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -13.000003814697266
    3. '                   ' → logprob: -13.875003814697266
    4. '               ' → logprob: -15.125003814697266
    5. '   ' → logprob: -16.000003814697266
    6. '0' → logprob: -16.875003814697266
    7. '           ' → logprob: -17.000003814697266
    8. '2' → logprob: -18.750003814697266
    9. '                       ' → logprob: -18.875003814697266
    10. '=' → logprob: -19.125003814697266

Token 420: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2858903706073761
    2. '<|end|>' → logprob: -1.4108903408050537
    3. '<|end|>' → logprob: -5.785890579223633
    4. ' else' → logprob: -7.535890579223633
    5. '                
' → logprob: -8.285890579223633
    6. '
' → logprob: -8.410890579223633
    7. 'else' → logprob: -8.535890579223633
    8. '       ' → logprob: -9.285890579223633
    9. '                   ' → logprob: -9.785890579223633
    10. '                ' → logprob: -10.160890579223633

Token 421: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.045088030397892
    2. '<|end|>' → logprob: -3.795088052749634
    3. 'n' → logprob: -4.545087814331055
    4. 'else' → logprob: -5.420087814331055
    5. '       ' → logprob: -6.045087814331055
    6. '                   ' → logprob: -6.795087814331055
    7. '<|end|>' → logprob: -6.920087814331055
    8. ' else' → logprob: -7.045087814331055
    9. '
' → logprob: -8.170087814331055
    10. '                
' → logprob: -9.045087814331055

Token 422: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2207198590040207
    2. 'else' (adapté à ' else') → logprob: -1.845719814300537
    3. ' else' → logprob: -3.220719814300537
    4. '           ' → logprob: -8.970720291137695
    5. '                   ' → logprob: -9.845720291137695
    6. '       ' → logprob: -11.470720291137695
    7. 'n' → logprob: -11.595720291137695
    8. '                ' → logprob: -12.220720291137695
    9. '```' → logprob: -12.470720291137695
    10. '              ' → logprob: -12.720720291137695

Token 423: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003064580261707306
    2. ':' → logprob: -6.1280646324157715
    3. ':
' → logprob: -7.2530646324157715
    4. '                       ' → logprob: -9.628064155578613
    5. '                  ' → logprob: -10.503064155578613
    6. '               ' → logprob: -10.753064155578613
    7. '                    ' → logprob: -10.878064155578613
    8. '   ' → logprob: -11.628064155578613
    9. '```' → logprob: -12.128064155578613
    10. '           ' → logprob: -12.503064155578613

Token 424: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0039411443285644054
    2. ' flag' → logprob: -6.128941059112549
    3. 'flag' → logprob: -7.128941059112549
    4. '                  ' → logprob: -8.253941535949707
    5. '               ' → logprob: -8.503941535949707
    6. '                    ' → logprob: -8.878941535949707
    7. '   ' → logprob: -9.128941535949707
    8. '                 ' → logprob: -9.753941535949707
    9. '                ' → logprob: -10.128941535949707
    10. '                       ' → logprob: -10.378941535949707

Token 425: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -0.0004353181866463274
    2. ' flag' → logprob: -7.7504353523254395
    3. '                   ' → logprob: -12.375434875488281
    4. '	flag' → logprob: -15.375434875488281
    5. '               ' → logprob: -16.00043487548828
    6. '(flag' → logprob: -16.12543487548828
    7. '   ' → logprob: -18.62543487548828
    8. '                  ' → logprob: -18.62543487548828
    9. '                ' → logprob: -18.87543487548828
    10. ' ' → logprob: -19.00043487548828

Token 426: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -1.9361264946837764e-07
    2. '=' → logprob: -16.625
    3. 'r' → logprob: -16.75
    4. '_s' → logprob: -17.875
    5. '_' → logprob: -19.0
    6. '_l' → logprob: -19.125
    7. '_R' → logprob: -19.375
    8. 'R' → logprob: -20.375
    9. ' _' → logprob: -20.75
    10. '   ' → logprob: -20.875

Token 427: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018150178715586662
    2. ' =' → logprob: -4.018150329589844
    3. '                   ' → logprob: -16.143150329589844
    4. '               ' → logprob: -16.643150329589844
    5. ' ' → logprob: -17.893150329589844
    6. '=
' → logprob: -18.018150329589844
    7. '+=' → logprob: -18.393150329589844
    8. '   ' → logprob: -18.893150329589844
    9. '           ' → logprob: -18.893150329589844
    10. '=True' → logprob: -19.393150329589844

Token 428: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0484450437361374e-05
    2. ' ' → logprob: -10.125040054321289
    3. '0' → logprob: -14.750040054321289
    4. '   ' → logprob: -17.87504005432129
    5. '<|end|>' → logprob: -19.18754005432129
    6. '```' → logprob: -19.81254005432129
    7. '                   ' → logprob: -20.12504005432129
    8. '  ' → logprob: -20.18754005432129
    9. '[' → logprob: -20.56254005432129
    10. '' → logprob: -20.93754005432129

Token 429: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.500000953674316
    3. '0' → logprob: -15.000000953674316
    4. '<|end|>' → logprob: -17.375001907348633
    5. '   ' → logprob: -18.875001907348633
    6. '[' → logprob: -18.937501907348633
    7. '```' → logprob: -19.125001907348633
    8. 'import' → logprob: -19.437501907348633
    9. 's' → logprob: -19.500001907348633
    10. 'user' → logprob: -19.687501907348633

Token 430: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7501367330551147
    2. '       ' → logprob: -1.8751367330551147
    3. '
' → logprob: -2.1251368522644043
    4. '\n' → logprob: -2.1251368522644043
    5. '               ' → logprob: -3.1251368522644043
    6. '           ' → logprob: -3.8751368522644043
    7. '```' → logprob: -3.8751368522644043
    8. ' n' → logprob: -4.125136852264404
    9. '<|end|>' → logprob: -4.625136852264404
    10. '(n' → logprob: -5.125136852264404

Token 431: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3452236652374268
    2. '
' → logprob: -1.5952236652374268
    3. '               ' → logprob: -1.5952236652374268
    4. '       ' → logprob: -2.0952236652374268
    5. '\n' → logprob: -2.5952236652374268
    6. '<|end|>' → logprob: -3.2202236652374268
    7. '           ' → logprob: -3.4702236652374268
    8. ' n' → logprob: -4.220223426818848
    9. '```' → logprob: -4.345223426818848
    10. ',n' → logprob: -4.845223426818848

Token 432: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09942083060741425
    2. 'n' (adapté à ' n') → logprob: -2.8494207859039307
    3. '
' → logprob: -3.7244207859039307
    4. '```' → logprob: -4.97442102432251
    5. '\n' → logprob: -5.97442102432251
    6. ' n' → logprob: -6.34942102432251
    7. '   ' → logprob: -7.34942102432251
    8. '<|end|>' → logprob: -8.474420547485352
    9. '           ' → logprob: -8.849420547485352
    10. '	n' → logprob: -9.599420547485352

Token 433: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2522246241569519
    2. ' +=' → logprob: -1.5022246837615967
    3. '+' → logprob: -8.877224922180176
    4. '=' → logprob: -8.877224922180176
    5. '   ' → logprob: -12.252224922180176
    6. '    ' → logprob: -12.377224922180176
    7. ' ' → logprob: -13.502224922180176
    8. '<|end|>' → logprob: -14.002224922180176
    9. '```' → logprob: -14.127224922180176
    10. '+='' → logprob: -14.252224922180176

Token 434: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006266565760597587
    2. ' ' → logprob: -7.375626564025879
    3. '```' → logprob: -17.000627517700195
    4. '   ' → logprob: -17.125627517700195
    5. '
' → logprob: -18.750627517700195
    6. '<|end|>' → logprob: -19.000627517700195
    7. '  ' → logprob: -19.500627517700195
    8. '+' → logprob: -20.000627517700195
    9. '１' → logprob: -20.625627517700195
    10. ' ' → logprob: -20.813127517700195

Token 435: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.375001907348633
    4. '```' → logprob: -17.625001907348633
    5. '
' → logprob: -18.625001907348633
    6. '-' → logprob: -20.375001907348633
    7. '１' → logprob: -20.750001907348633
    8. '  ' → logprob: -20.937501907348633
    9. '       ' → logprob: -21.000001907348633
    10. '`' → logprob: -21.062501907348633

Token 436: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 437: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 438: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003047581762075424
    2. '<|end|>' → logprob: -6.878047466278076
    3. 'return' (adapté à ' return') → logprob: -7.003047466278076
    4. ')' → logprob: -8.128047943115234
    5. '	return' → logprob: -8.378047943115234
    6. ' return' → logprob: -8.628047943115234
    7. '
' → logprob: -8.878047943115234
    8. '    
' → logprob: -9.378047943115234
    9. '       ' → logprob: -9.628047943115234
    10. '    ' → logprob: -11.003047943115234

Token 439: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6949672698974609
    2. ' ans' → logprob: -0.6949672698974609
    3. '(ans' → logprob: -6.319967269897461
    4. 'pos' → logprob: -11.319967269897461
    5. ' (' → logprob: -13.319967269897461
    6. '	ans' → logprob: -13.569967269897461
    7. '0' → logprob: -13.819967269897461
    8. '(' → logprob: -13.819967269897461
    9. ' pos' → logprob: -14.069967269897461
    10. '_ans' → logprob: -15.319967269897461

Token 440: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 441: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.04558460786938667
    2. ' abs' → logprob: -3.1705846786499023
    3. 'pos' → logprob: -6.295584678649902
    4. '(abs' → logprob: -7.295584678649902
    5. ' pos' → logprob: -10.420584678649902
    6. '(pos' → logprob: -11.420584678649902
    7. ' (' → logprob: -11.670584678649902
    8. '0' → logprob: -13.045584678649902
    9. '1' → logprob: -13.045584678649902
    10. '   ' → logprob: -13.420584678649902

Token 442: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0012104723136872053
    2. '(sec' → logprob: -6.751210689544678
    3. '(' → logprob: -10.37621021270752
    4. 'pos' → logprob: -12.37621021270752
    5. '(position' → logprob: -13.25121021270752
    6. '(sys' → logprob: -13.75121021270752
    7. '(N' → logprob: -13.87621021270752
    8. '(left' → logprob: -14.75121021270752
    9. '(start' → logprob: -16.376211166381836
    10. '((' → logprob: -16.376211166381836

Token 443: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04509977251291275
    2. '-' → logprob: -3.2950997352600098
    3. ' -' → logprob: -5.04509973526001
    4. '0' → logprob: -8.170100212097168
    5. ')
' → logprob: -9.170100212097168
    6. ' )' → logprob: -9.545100212097168
    7. '[' → logprob: -10.170100212097168
    8. '   ' → logprob: -11.170100212097168
    9. '<|end|>' → logprob: -11.295100212097168
    10. '```' → logprob: -11.420100212097168

Token 444: 'ans' (ID: 616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6692899465560913
    2. '<|end|>' → logprob: -0.7942899465560913
    3. 'def' → logprob: -5.044290065765381
    4. '(
' → logprob: -5.169290065765381
    5. '```' → logprob: -5.294290065765381
    6. '(' → logprob: -5.419290065765381
    7. '#' → logprob: -5.669290065765381
    8. 'print' → logprob: -5.919290065765381
    9. '
' → logprob: -6.044290065765381
    10. '()' → logprob: -6.669290065765381

Token 445: '1' (ID: 16)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 446: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4170339107513428
    2. ' =' → logprob: -1.4170339107513428
    3. '+' → logprob: -3.2920339107513428
    4. ' +=' → logprob: -3.5420339107513428
    5. ')' → logprob: -4.042034149169922
    6. '+=' → logprob: -5.042034149169922
    7. '_' → logprob: -6.417034149169922
    8. '<|end|>' → logprob: -6.417034149169922
    9. ' +' → logprob: -7.167034149169922
    10. '(' → logprob: -7.167034149169922

Token 447: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.023249439895153046
    2. ' process' → logprob: -3.773249387741089
    3. 'min' → logprob: -13.148249626159668
    4. '(process' → logprob: -13.523249626159668
    5. '	process' → logprob: -15.523249626159668
    6. ' min' → logprob: -15.773249626159668
    7. 'max' → logprob: -16.39824867248535
    8. ' ' → logprob: -16.77324867248535
    9. 'rocess' → logprob: -18.02324867248535
    10. 'abs' → logprob: -18.27324867248535

Token 448: '_paths' (ID: 56992)
  Prédit: '_paths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -1.3856492842023727e-06
    2. '_process' → logprob: -13.875000953674316
    3. '_path' → logprob: -15.625000953674316
    4. '_' → logprob: -16.625001907348633
    5. '```' → logprob: -16.625001907348633
    6. '_p' → logprob: -17.500001907348633
    7. '_positions' → logprob: -18.000001907348633
    8. '_steps' → logprob: -18.000001907348633
    9. '_patterns' → logprob: -18.000001907348633
    10. 's' → logprob: -18.125001907348633

Token 449: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -4.429896944202483e-05
    2. '(' → logprob: -10.500043869018555
    3. ' (' → logprob: -12.000043869018555
    4. 'left' → logprob: -12.500043869018555
    5. '(right' → logprob: -13.375043869018555
    6. '((' → logprob: -13.500043869018555
    7. '(
' → logprob: -14.250043869018555
    8. '(copy' → logprob: -14.250043869018555
    9. '(le' → logprob: -14.250043869018555
    10. ',left' → logprob: -14.625043869018555

Token 450: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19272980093955994
    2. ',left' → logprob: -2.1927297115325928
    3. '(left' → logprob: -2.8177297115325928
    4. ' ,' → logprob: -6.317729949951172
    5. ',right' → logprob: -7.192729949951172
    6. 'left' → logprob: -7.317729949951172
    7. ',input' → logprob: -8.317729949951172
    8. '(' → logprob: -8.817729949951172
    9. ')' → logprob: -9.317729949951172
    10. '_input' → logprob: -9.942729949951172

Token 451: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.07889077812433243
    2. ' right' → logprob: -2.578890800476074
    3. ')' → logprob: -14.703890800476074
    4. '   ' → logprob: -15.578890800476074
    5. 'Right' → logprob: -16.078889846801758
    6. '	right' → logprob: -16.453889846801758
    7. '[right' → logprob: -16.578889846801758
    8. ' ' → logprob: -16.578889846801758
    9. '(right' → logprob: -17.203889846801758
    10. ',right' → logprob: -17.703889846801758

Token 452: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015276329941116273
    2. ')' → logprob: -9.000152587890625
    3. ' ,' → logprob: -10.750152587890625
    4. 'True' → logprob: -12.875152587890625
    5. ')
' → logprob: -13.750152587890625
    6. '(True' → logprob: -13.875152587890625
    7. ',true' → logprob: -14.250152587890625
    8. '1' → logprob: -14.500152587890625
    9. ',)' → logprob: -14.625152587890625
    10. ',
' → logprob: -15.000152587890625

Token 453: ' odd' (ID: 14210)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.09426619112491608
    2. 'odd' → logprob: -2.594266176223755
    3. ' True' → logprob: -4.219266414642334
    4. ' odd' → logprob: -7.594266414642334
    5. 'False' → logprob: -10.969265937805176
    6. '   ' → logprob: -11.219265937805176
    7. '(True' → logprob: -12.844265937805176
    8. 'od' → logprob: -12.844265937805176
    9. ' ' → logprob: -13.219265937805176
    10. ')' → logprob: -13.344265937805176

Token 454: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -3.452426608419046e-05
    2. 'first' → logprob: -10.50003433227539
    3. 'First' → logprob: -12.62503433227539
    4. '=True' → logprob: -13.62503433227539
    5. ')_' → logprob: -13.75003433227539
    6. '_true' → logprob: -15.00003433227539
    7. '_FIRST' → logprob: -15.50003433227539
    8. '```' → logprob: -15.62503433227539
    9. '=' → logprob: -16.50003433227539
    10. ')' → logprob: -16.50003433227539

Token 455: '=False' (ID: 12148)
  Prédit: '=True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0010578181827440858
    2. '=' → logprob: -6.8760576248168945
    3. '=False' → logprob: -10.626057624816895
    4. 'True' → logprob: -14.376057624816895
    5. '=T' → logprob: -16.87605857849121
    6. '=
' → logprob: -17.25105857849121
    7. '(True' → logprob: -17.50105857849121
    8. ' =' → logprob: -18.12605857849121
    9. '=(' → logprob: -18.75105857849121
    10. ')' → logprob: -18.75105857849121

Token 456: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.6087021473795176e-05
    2. ')
' → logprob: -10.000045776367188
    3. ' )' → logprob: -15.375045776367188
    4. ')

' → logprob: -15.500045776367188
    5. '))' → logprob: -16.500045776367188
    6. ')#' → logprob: -18.125045776367188
    7. ')`' → logprob: -18.375045776367188
    8. ')
' → logprob: -18.750045776367188
    9. '),' → logprob: -18.875045776367188
    10. ')**' → logprob: -19.000045776367188

Token 457: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0004959598300047219
    2. 'print' → logprob: -7.625495910644531
    3. '
' → logprob: -12.750495910644531
    4. '```' → logprob: -12.750495910644531
    5. '(ans' → logprob: -13.750495910644531
    6. ' ans' → logprob: -14.500495910644531
    7. 'answer' → logprob: -15.875495910644531
    8. '`' → logprob: -16.50049591064453
    9. '_ans' → logprob: -16.62549591064453
    10. '	ans' → logprob: -16.87549591064453

Token 458: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016515571624040604
    2. '2' → logprob: -4.141515731811523
    3. '_' → logprob: -8.016515731811523
    4. '=' → logprob: -9.766515731811523
    5. '<|end|>' → logprob: -10.016515731811523
    6. ' ' → logprob: -10.891515731811523
    7. ' =' → logprob: -11.766515731811523
    8. '#' → logprob: -12.141515731811523
    9. '```' → logprob: -12.641515731811523
    10. '[' → logprob: -12.766515731811523

Token 459: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132617771625519
    2. '=' → logprob: -1.3132617473602295
    3. ' ' → logprob: -17.938261032104492
    4. '＝' → logprob: -18.563261032104492
    5. ' =
' → logprob: -19.313261032104492
    6. '=
' → logprob: -19.938261032104492
    7. 'process' → logprob: -20.188261032104492
    8. ')' → logprob: -20.188261032104492
    9. '=

' → logprob: -20.563261032104492
    10. ' =)' → logprob: -20.563261032104492

Token 460: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.25193002820014954
    2. ' process' → logprob: -1.5019299983978271
    3. '(process' → logprob: -14.001930236816406
    4. '	process' → logprob: -16.001930236816406
    5. '.process' → logprob: -17.751930236816406
    6. 'proces' → logprob: -18.001930236816406
    7. '_process' → logprob: -18.126930236816406
    8. 'rocess' → logprob: -18.126930236816406
    9. ' proces' → logprob: -18.251930236816406
    10. ' ' → logprob: -19.001930236816406

Token 461: '_paths' (ID: 56992)
  Prédit: '_paths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -4.7159857786027715e-05
    2. 'process' → logprob: -10.000046730041504
    3. '_process' → logprob: -14.000046730041504
    4. 'paths' → logprob: -14.375046730041504
    5. '_path' → logprob: -15.125046730041504
    6. 'path' → logprob: -17.50004768371582
    7. 'Paths' → logprob: -17.75004768371582
    8. ' process' → logprob: -18.12504768371582
    9. '(process' → logprob: -18.12504768371582
    10. 's' → logprob: -20.00004768371582

Token 462: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -8.180258191714529e-06
    2. 'left' → logprob: -11.750008583068848
    3. '(right' → logprob: -15.500008583068848
    4. ' (' → logprob: -16.75000762939453
    5. '(' → logprob: -16.87500762939453
    6. ' left' → logprob: -18.00000762939453
    7. '[left' → logprob: -18.12500762939453
    8. '(
' → logprob: -18.62500762939453
    9. ',left' → logprob: -18.75000762939453
    10. '(lhs' → logprob: -19.75000762939453

Token 463: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.984787902794778e-05
    2. '=' → logprob: -10.125100135803223
    3. ',right' → logprob: -10.750100135803223
    4. ',left' → logprob: -11.375100135803223
    5. ' ,' → logprob: -11.625100135803223
    6. ')' → logprob: -11.875100135803223
    7. 'left' → logprob: -12.500100135803223
    8. '(left' → logprob: -13.125100135803223
    9. 'right' → logprob: -13.250100135803223
    10. ',
' → logprob: -13.750100135803223

Token 464: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00861468818038702
    2. ' right' → logprob: -4.758614540100098
    3. '(right' → logprob: -16.258615493774414
    4. '	right' → logprob: -16.383615493774414
    5. '[right' → logprob: -17.008615493774414
    6. '   ' → logprob: -17.508615493774414
    7. ',right' → logprob: -17.758615493774414
    8. 'left' → logprob: -17.883615493774414
    9. 'Right' → logprob: -18.883615493774414
    10. ' ' → logprob: -19.008615493774414

Token 465: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.923874702304602e-05
    2. ')' → logprob: -9.375089645385742
    3. ' ,' → logprob: -13.125089645385742
    4. '(),' → logprob: -14.000089645385742
    5. ',
' → logprob: -14.250089645385742
    6. ')
' → logprob: -15.375089645385742
    7. '   ' → logprob: -15.625089645385742
    8. '(' → logprob: -15.875089645385742
    9. '[' → logprob: -16.500089645385742
    10. '=' → logprob: -17.000089645385742

Token 466: ' odd' (ID: 14210)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.1812036633491516
    2. 'odd' → logprob: -1.9312036037445068
    3. ' True' → logprob: -4.056203842163086
    4. ' odd' → logprob: -5.681203842163086
    5. 'False' → logprob: -10.681203842163086
    6. '   ' → logprob: -12.806203842163086
    7. '           ' → logprob: -13.056203842163086
    8. '=True' → logprob: -13.181203842163086
    9. 'true' → logprob: -13.306203842163086
    10. 'od' → logprob: -13.556203842163086

Token 467: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -4.5252596464706585e-05
    2. 'first' → logprob: -10.125044822692871
    3. 'First' → logprob: -12.875044822692871
    4. '=True' → logprob: -14.000044822692871
    5. '```' → logprob: -14.875044822692871
    6. '_FIRST' → logprob: -15.500044822692871
    7. '_true' → logprob: -15.500044822692871
    8. ')_' → logprob: -15.625044822692871
    9. '=False' → logprob: -16.000045776367188
    10. '=_' → logprob: -16.125045776367188

Token 468: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0011933216592296958
    2. '=' → logprob: -7.126193523406982
    3. '=False' → logprob: -7.876193523406982
    4. '(True' → logprob: -12.251193046569824
    5. 'True' → logprob: -12.751193046569824
    6. '=
' → logprob: -13.626193046569824
    7. '=

' → logprob: -16.50119400024414
    8. '=(' → logprob: -17.12619400024414
    9. ')' → logprob: -17.62619400024414
    10. ')=' → logprob: -17.75119400024414

Token 469: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20142056047916412
    2. ')' → logprob: -1.701420545578003
    3. ')

' → logprob: -12.826420783996582
    4. ')
' → logprob: -13.076420783996582
    5. ' )
' → logprob: -13.451420783996582
    6. 'print' → logprob: -14.451420783996582
    7. ')`
' → logprob: -15.326420783996582
    8. ' )' → logprob: -15.951420783996582
    9. '())
' → logprob: -16.201419830322266
    10. '()' → logprob: -17.201419830322266

Token 470: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00010092071170220152
    2. '```' → logprob: -9.625101089477539
    3. '
' → logprob: -10.500101089477539
    4. 'if' → logprob: -12.625101089477539
    5. '``' → logprob: -13.250101089477539
    6. 'result' → logprob: -13.875101089477539
    7. 'ans' → logprob: -14.625101089477539
    8. ' print' → logprob: -15.000101089477539
    9. '\' → logprob: -16.00010108947754
    10. '`
' → logprob: -16.12510108947754

Token 471: '(max' (ID: 17178)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -1.1041145626222715e-05
    2. 'min' → logprob: -11.500011444091797
    3. '(ans' → logprob: -14.750011444091797
    4. '(max' → logprob: -14.875011444091797
    5. '(' → logprob: -16.250011444091797
    6. ' min' → logprob: -17.250011444091797
    7. '=min' → logprob: -17.875011444091797
    8. '[min' → logprob: -18.500011444091797
    9. '(m' → logprob: -19.500011444091797
    10. '(abs' → logprob: -19.625011444091797

Token 472: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.0219828002154827e-05
    2. '(' → logprob: -11.125020027160645
    3. 'ans' → logprob: -12.250020027160645
    4. ')' → logprob: -15.125020027160645
    5. ' (' → logprob: -15.375020027160645
    6. '(answer' → logprob: -17.00002098083496
    7. '(
' → logprob: -17.25002098083496
    8. ')(' → logprob: -17.50002098083496
    9. '	ans' → logprob: -17.50002098083496
    10. '(abs' → logprob: -17.87502098083496

Token 473: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. '2' → logprob: -13.250003814697266
    3. '(ans' → logprob: -13.750003814697266
    4. ')' → logprob: -15.375003814697266
    5. '(' → logprob: -16.000003814697266
    6. '))' → logprob: -16.875003814697266
    7. '```' → logprob: -17.000003814697266
    8. ',' → logprob: -18.250003814697266
    9. '_' → logprob: -18.625003814697266
    10. '   ' → logprob: -18.750003814697266

Token 474: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4849443838757e-06
    2. ' ,' → logprob: -13.125004768371582
    3. ',
' → logprob: -14.000004768371582
    4. ')' → logprob: -14.375004768371582
    5. '+' → logprob: -14.375004768371582
    6. '(ans' → logprob: -15.500004768371582
    7. ',max' → logprob: -17.250003814697266
    8. ' +' → logprob: -17.750003814697266
    9. '   ' → logprob: -17.750003814697266
    10. ' ans' → logprob: -17.750003814697266

Token 475: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.12701356410980225
    2. 'ans' → logprob: -2.127013683319092
    3. '(ans' → logprob: -9.377013206481934
    4. '	ans' → logprob: -14.877013206481934
    5. ')' → logprob: -15.252013206481934
    6. '_ans' → logprob: -15.627013206481934
    7. ' max' → logprob: -18.00201416015625
    8. ' )' → logprob: -18.87701416015625
    9. ' Ans' → logprob: -19.00201416015625
    10. 'ANS' → logprob: -19.50201416015625

Token 476: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ')' → logprob: -18.0
    3. ' ' → logprob: -18.25
    4. '```' → logprob: -18.25
    5. '1' → logprob: -19.375
    6. '_' → logprob: -19.375
    7. '２' → logprob: -19.875
    8. '۲' → logprob: -19.875
    9. '₂' → logprob: -19.875
    10. 's' → logprob: -20.25

Token 477: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3132660686969757
    2. ')' → logprob: -1.3132660388946533
    3. ')))' → logprob: -12.563265800476074
    4. '())' → logprob: -14.688265800476074
    5. ')}' → logprob: -16.06326675415039
    6. '})' → logprob: -16.18826675415039
    7. '))
' → logprob: -16.68826675415039
    8. '()))' → logprob: -16.68826675415039
    9. '()' → logprob: -16.81326675415039
    10. '])' → logprob: -16.93826675415039


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 475
Tokens correctement prédits (1ère position, stricte): 192
Tokens correctement prédits (1ère position, avec adaptation): 208
Tokens correctement prédits (top 10): 415
Précision stricte (1ère position): 40.42%
Précision adaptée (1ère position): 43.79%
Précision (top 10): 87.37%
================================================================================
