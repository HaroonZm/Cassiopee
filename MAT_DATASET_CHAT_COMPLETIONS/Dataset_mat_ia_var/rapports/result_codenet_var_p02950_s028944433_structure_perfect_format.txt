================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:49:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

p = int(input())
a = [int(i) for i in input().split()]

ans = [0] * p

for i, j in enumerate(a):
    if j == 0:
        continue
    ans[0] -= p - 1
    m = 1
    for k in range(p):
        ans[p - 1 - k] -= m
        ans[p - 1 - k] %= p
        m *= i
        m %= p

print(*ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009539559483528137
    2. '.' → logprob: -4.759539604187012
    3. ''' → logprob: -8.259539604187012
    4. '```' → logprob: -8.884539604187012
    5. ')' → logprob: -9.009539604187012
    6. ' (' → logprob: -9.634539604187012
    7. '(
' → logprob: -9.634539604187012
    8. '"' → logprob: -9.759539604187012
    9. ''s' → logprob: -10.259539604187012
    10. '()' → logprob: -10.259539604187012

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.06210717186331749
    2. 'sys' → logprob: -2.8121070861816406
    3. ' input' → logprob: -9.31210708618164
    4. 'input' → logprob: -10.06210708618164
    5. '	sys' → logprob: -12.93710708618164
    6. '=sys' → logprob: -13.18710708618164
    7. ' ' → logprob: -13.68710708618164
    8. '(sys' → logprob: -13.93710708618164
    9. ' system' → logprob: -16.18710708618164
    10. ' lambda' → logprob: -16.68710708618164

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.010973773896694183
    2. ' .' → logprob: -4.885973930358887
    3. '.stdin' → logprob: -6.010973930358887
    4. '.import' → logprob: -7.885973930358887
    5. '.readline' → logprob: -8.885973930358887
    6. '.argv' → logprob: -9.135973930358887
    7. '.input' → logprob: -9.885973930358887
    8. '.stdout' → logprob: -10.135973930358887
    9. '.
' → logprob: -10.635973930358887
    10. '.exit' → logprob: -10.760973930358887

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.019614169374108315
    2. '.read' → logprob: -4.519614219665527
    3. '.' → logprob: -4.769614219665527
    4. '.readlines' → logprob: -10.519614219665527
    5. 'read' → logprob: -11.519614219665527
    6. '.Read' → logprob: -12.519614219665527
    7. '.buffer' → logprob: -13.769614219665527
    8. '<|end|>' → logprob: -14.019614219665527
    9. ' .' → logprob: -14.269614219665527
    10. ' readline' → logprob: -14.644614219665527

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10843031108379364
    2. '(' → logprob: -2.4834303855895996
    3. '()
' → logprob: -4.7334303855896
    4. '(
' → logprob: -5.7334303855896
    5. '().' → logprob: -5.8584303855896
    6. '
' → logprob: -5.8584303855896
    7. '\n' → logprob: -7.8584303855896
    8. '()\' → logprob: -7.8584303855896
    9. '()

' → logprob: -8.608429908752441
    10. '\' → logprob: -8.983429908752441

Token 9: 'p' (ID: 79)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22617685794830322
    2. '()' → logprob: -1.6011768579483032
    3. '(
' → logprob: -8.601177215576172
    4. 'def' → logprob: -9.101177215576172
    5. ')' → logprob: -9.476177215576172
    6. '#' → logprob: -9.726177215576172
    7. 'a' → logprob: -9.851177215576172
    8. '()
' → logprob: -9.851177215576172
    9. '(n' → logprob: -9.976177215576172
    10. '().' → logprob: -10.226177215576172

Token 10: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0020822163205593824
    2. '()' → logprob: -6.877082347869873
    3. 'op' → logprob: -8.127081871032715
    4. 'print' → logprob: -8.252081871032715
    5. 'ar' → logprob: -9.502081871032715
    6. 'ass' → logprob: -9.502081871032715
    7. 'rocess' → logprob: -10.002081871032715
    8. 'assword' → logprob: -10.252081871032715
    9. 'rocessing' → logprob: -10.377081871032715
    10. 'ush' → logprob: -10.877081871032715

Token 11: ' int' (ID: 677)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -1.1181148290634155
    2. 'int' → logprob: -1.4931148290634155
    3. ' list' → logprob: -1.9931148290634155
    4. ' int' → logprob: -1.9931148290634155
    5. 'list' → logprob: -2.993114948272705
    6. '[]' → logprob: -3.118114948272705
    7. 'input' → logprob: -3.618114948272705
    8. ' input' → logprob: -4.118114948272705
    9. ' ' → logprob: -4.493114948272705
    10. '[int' → logprob: -4.868114948272705

Token 12: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016249138861894608
    2. '('' → logprob: -4.141249179840088
    3. '("' → logprob: -9.14124870300293
    4. ' (' → logprob: -10.64124870300293
    5. ''' → logprob: -11.01624870300293
    6. '(p' → logprob: -11.14124870300293
    7. '```' → logprob: -11.64124870300293
    8. '()' → logprob: -11.76624870300293
    9. '(`' → logprob: -11.89124870300293
    10. '32' → logprob: -12.14124870300293

Token 13: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4877505600452423
    2. '()' → logprob: -0.9877505302429199
    3. ')' → logprob: -4.48775053024292
    4. '(' → logprob: -6.11275053024292
    5. '('' → logprob: -10.487751007080078
    6. '().' → logprob: -10.612751007080078
    7. ' ())' → logprob: -10.612751007080078
    8. '`)' → logprob: -11.987751007080078
    9. '()`' → logprob: -12.112751007080078
    10. '(
' → logprob: -12.237751007080078

Token 14: 'a' (ID: 64)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9635730385780334
    2. '(' → logprob: -1.3385729789733887
    3. ' ' → logprob: -1.8385729789733887
    4. '%' → logprob: -3.5885729789733887
    5. 'for' → logprob: -3.5885729789733887
    6. 'if' → logprob: -4.088572978973389
    7. '*' → logprob: -4.213572978973389
    8. 's' → logprob: -4.213572978973389
    9. '\n' → logprob: -4.213572978973389
    10. 'n' → logprob: -4.463572978973389

Token 15: ' =' (ID: 314)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -1.26187002658844
    2. ' =' → logprob: -1.51187002658844
    3. '[' → logprob: -1.76187002658844
    4. 'rr' → logprob: -2.6368699073791504
    5. 'r' → logprob: -3.1368699073791504
    6. ',' → logprob: -3.1368699073791504
    7. 'rray' → logprob: -3.3868699073791504
    8. '**' → logprob: -3.6368699073791504
    9. '[i' → logprob: -3.7618699073791504
    10. ' ' → logprob: -4.13686990737915

Token 16: ' [' (ID: 723)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7227358222007751
    2. '[]' → logprob: -2.09773588180542
    3. ' int' → logprob: -2.09773588180542
    4. ' []' → logprob: -2.22273588180542
    5. ' list' → logprob: -2.59773588180542
    6. '[int' → logprob: -3.09773588180542
    7. 'list' → logprob: -3.72273588180542
    8. ' p' → logprob: -4.72273588180542
    9. ' [' → logprob: -5.59773588180542
    10. ' ' → logprob: -6.34773588180542

Token 17: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0338357575237751
    2. ']' → logprob: -4.1588358879089355
    3. '0' → logprob: -4.4088358879089355
    4. ']int' → logprob: -5.2838358879089355
    5. '(int' → logprob: -8.533835411071777
    6. '*' → logprob: -9.908835411071777
    7. ']*' → logprob: -10.283835411071777
    8. ' int' → logprob: -10.283835411071777
    9. '()]' → logprob: -10.908835411071777
    10. 'list' → logprob: -10.908835411071777

Token 18: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024767551571130753
    2. '(input' → logprob: -3.7747676372528076
    3. '()' → logprob: -6.8997673988342285
    4. '(x' → logprob: -7.7747673988342285
    5. '()]' → logprob: -10.024767875671387
    6. '(i' → logprob: -10.899767875671387
    7. ' (' → logprob: -11.524767875671387
    8. ']' → logprob: -11.649767875671387
    9. '(
' → logprob: -12.524767875671387
    10. '(

' → logprob: -13.149767875671387

Token 19: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029858669266104698
    2. '())' → logprob: -3.6548585891723633
    3. '()' → logprob: -6.154858589172363
    4. '(' → logprob: -7.279858589172363
    5. '(input' → logprob: -7.779858589172363
    6. ')]' → logprob: -9.029858589172363
    7. '(x' → logprob: -9.279858589172363
    8. 'input' → logprob: -10.404858589172363
    9. ' )' → logprob: -11.029858589172363
    10. '()]' → logprob: -11.154858589172363

Token 20: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28763553500175476
    2. ')' → logprob: -2.162635564804077
    3. ' for' → logprob: -3.162635564804077
    4. '(input' → logprob: -3.287635564804077
    5. 'input' → logprob: -3.412635564804077
    6. '(' → logprob: -4.287635326385498
    7. '()' → logprob: -5.037635326385498
    8. ']' → logprob: -6.912635326385498
    9. ' ' → logprob: -8.037635803222656
    10. 'in' → logprob: -8.537635803222656

Token 21: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0252536553889513
    2. 'input' → logprob: -3.7752537727355957
    3. ' ' → logprob: -6.275253772735596
    4. ' range' → logprob: -9.650253295898438
    5. '(input' → logprob: -10.525253295898438
    6. '_input' → logprob: -11.525253295898438
    7. '  ' → logprob: -12.150253295898438
    8. '_' → logprob: -12.525253295898438
    9. '	input' → logprob: -12.775253295898438
    10. ' in' → logprob: -13.275253295898438

Token 22: ' in' (ID: 306)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.8242226839065552
    2. 'input' → logprob: -0.9492226839065552
    3. ' in' → logprob: -2.0742225646972656
    4. 'in' → logprob: -3.1992225646972656
    5. ' ' → logprob: -5.699222564697266
    6. '(input' → logprob: -6.324222564697266
    7. ' range' → logprob: -6.824222564697266
    8. '(' → logprob: -7.074222564697266
    9. 'range' → logprob: -7.824222564697266
    10. '=input' → logprob: -8.449222564697266

Token 23: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05501870810985565
    2. ' input' → logprob: -2.930018663406372
    3. 'range' → logprob: -9.180018424987793
    4. ' range' → logprob: -10.555018424987793
    5. '(input' → logprob: -12.180018424987793
    6. ' ' → logprob: -14.180018424987793
    7. 'sys' → logprob: -15.555018424987793
    8. '=input' → logprob: -15.680018424987793
    9. '	input' → logprob: -15.930018424987793
    10. '<input' → logprob: -16.18001937866211

Token 24: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0271562822163105
    2. '()]' → logprob: -4.027156352996826
    3. '()' → logprob: -4.777156352996826
    4. '())' → logprob: -7.527156352996826
    5. '()].' → logprob: -12.277155876159668
    6. '()][' → logprob: -13.652155876159668
    7. '(' → logprob: -14.277155876159668
    8. ')]' → logprob: -14.777155876159668
    9. '()],' → logprob: -15.777155876159668
    10. '()]
' → logprob: -16.277156829833984

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0516156367957592
    2. 'strip' → logprob: -3.0516157150268555
    3. 'rstrip' → logprob: -5.8016157150268555
    4. ' split' → logprob: -14.676615715026855
    5. '(split' → logprob: -14.801615715026855
    6. 'read' → logprob: -16.42661476135254
    7. ' strip' → logprob: -18.05161476135254
    8. 'spl' → logprob: -18.30161476135254
    9. 'rs' → logprob: -18.80161476135254
    10. 'replace' → logprob: -19.05161476135254

Token 26: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.001514384988695383
    2. '(' → logprob: -7.376514434814453
    3. '())' → logprob: -8.001514434814453
    4. '()' → logprob: -8.376514434814453
    5. ']' → logprob: -8.751514434814453
    6. ')]' → logprob: -8.751514434814453
    7. '('' → logprob: -13.501514434814453
    8. '()]
' → logprob: -13.626514434814453
    9. ')' → logprob: -14.126514434814453
    10. '`]' → logprob: -14.626514434814453

Token 27: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005302654579281807
    2. ')]' → logprob: -5.380302429199219
    3. ')' → logprob: -7.630302429199219
    4. '])' → logprob: -8.755302429199219
    5. ']
' → logprob: -11.005302429199219
    6. ' ]' → logprob: -11.380302429199219
    7. '']' → logprob: -12.755302429199219
    8. '])]' → logprob: -12.755302429199219
    9. '`]' → logprob: -13.005302429199219
    10. '）' → logprob: -14.005302429199219

Token 28: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29466819763183594
    2. 's' → logprob: -3.044668197631836
    3. 'max' → logprob: -3.669668197631836
    4. 'm' → logprob: -3.794668197631836
    5. 'result' → logprob: -3.794668197631836
    6. 'b' → logprob: -4.044668197631836
    7. 'a' → logprob: -4.169668197631836
    8. 'd' → logprob: -4.294668197631836
    9. 'count' → logprob: -4.294668197631836
    10. 'c' → logprob: -4.419668197631836

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03649285063147545
    2. '=' → logprob: -3.5364928245544434
    3. '_' → logprob: -5.161492824554443
    4. '[' → logprob: -7.161492824554443
    5. '.' → logprob: -9.536493301391602
    6. '[:]' → logprob: -10.036493301391602
    7. ' ' → logprob: -10.536493301391602
    8. 's' → logprob: -10.661493301391602
    9. ',' → logprob: -11.036493301391602
    10. ' +=' → logprob: -12.161493301391602

Token 30: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22599990665912628
    2. ' ' → logprob: -2.4759998321533203
    3. 'a' → logprob: -3.7259998321533203
    4. '[' → logprob: -4.22599983215332
    5. 'max' → logprob: -4.22599983215332
    6. ' []' → logprob: -4.22599983215332
    7. '[]' → logprob: -4.35099983215332
    8. ' [' → logprob: -4.85099983215332
    9. ' max' → logprob: -4.97599983215332
    10. ' a' → logprob: -5.60099983215332

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03489958122372627
    2. 'a' → logprob: -3.9098994731903076
    3. '-' → logprob: -5.409899711608887
    4. 'False' → logprob: -5.659899711608887
    5. '1' → logprob: -6.284899711608887
    6. 'p' → logprob: -6.784899711608887
    7. 'i' → logprob: -7.159899711608887
    8. 'max' → logprob: -7.534899711608887
    9. 'float' → logprob: -8.034899711608887
    10. ']' → logprob: -8.159899711608887

Token 32: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007750844582915306
    2. ' ]' → logprob: -5.007750988006592
    3. ',' → logprob: -7.382750988006592
    4. ']*' → logprob: -8.507750511169434
    5. ' for' → logprob: -9.007750511169434
    6. ')]' → logprob: -10.382750511169434
    7. ')' → logprob: -10.757750511169434
    8. ']+' → logprob: -11.757750511169434
    9. 'for' → logprob: -11.882750511169434
    10. ' ' → logprob: -12.257750511169434

Token 33: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5623020529747009
    2. '\n' → logprob: -1.5623021125793457
    3. ' ' → logprob: -2.9373021125793457
    4. 'for' → logprob: -2.9373021125793457
    5. '\' → logprob: -3.5623021125793457
    6. '
' → logprob: -3.6873021125793457
    7. ']' → logprob: -3.9373021125793457
    8. ' 
' → logprob: -4.437302112579346
    9. ',' → logprob: -5.062302112579346
    10. '*' → logprob: -5.312302112579346

Token 34: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.09527656435966492
    2. '(p' → logprob: -2.4702765941619873
    3. '(' → logprob: -5.470276355743408
    4. '100' → logprob: -7.095276355743408
    5. '101' → logprob: -8.345276832580566
    6. 'len' → logprob: -8.720276832580566
    7. '10' → logprob: -8.845276832580566
    8. '(n' → logprob: -8.970276832580566
    9. '(len' → logprob: -9.095276832580566
    10. 'n' → logprob: -9.595276832580566

Token 35: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08087006211280823
    2. '
' → logprob: -3.0808701515197754
    3. ' for' → logprob: -3.5808701515197754
    4. '\n' → logprob: -6.080870151519775
    5. ' 
' → logprob: -7.080870151519775
    6. '
' → logprob: -8.080869674682617
    7. '' → logprob: -8.955869674682617
    8. '```' → logprob: -9.455869674682617
    9. '

' → logprob: -10.205869674682617
    10. '\' → logprob: -10.330869674682617

Token 36: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.8232690460281447e-05
    2. ' for' → logprob: -10.750048637390137
    3. 'i' → logprob: -11.125048637390137
    4. 'f' → logprob: -12.250048637390137
    5. ']' → logprob: -13.375048637390137
    6. 'b' → logprob: -13.500048637390137
    7. 'a' → logprob: -13.750048637390137
    8. ')' → logprob: -14.250048637390137
    9. 'd' → logprob: -15.000048637390137
    10. '```' → logprob: -15.250048637390137

Token 37: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0041821603663265705
    2. 'i' → logprob: -5.7541823387146
    3. ' ' → logprob: -8.004181861877441
    4. ' _' → logprob: -8.379181861877441
    5. '_' → logprob: -8.629181861877441
    6. ' range' → logprob: -9.004181861877441
    7. ' p' → logprob: -9.254181861877441
    8. ' ' → logprob: -11.129181861877441
    9. ' x' → logprob: -11.754181861877441
    10. 'range' → logprob: -12.629181861877441

Token 38: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029826270416378975
    2. 'in' → logprob: -3.5298261642456055
    3. ' ' → logprob: -9.779826164245605
    4. 'n' → logprob: -11.904826164245605
    5. '	in' → logprob: -12.029826164245605
    6. 'p' → logprob: -13.779826164245605
    7. ',' → logprob: -13.904826164245605
    8. 'range' → logprob: -14.029826164245605
    9. '+' → logprob: -14.279826164245605
    10. '  ' → logprob: -14.529826164245605

Token 39: ' j' (ID: 441)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7539647817611694
    2. 'v' → logprob: -1.1289647817611694
    3. 'num' → logprob: -2.503964900970459
    4. 'ai' → logprob: -2.878964900970459
    5. 'val' → logprob: -4.253964900970459
    6. 'value' → logprob: -4.503964900970459
    7. 'b' → logprob: -4.878964900970459
    8. ' v' → logprob: -5.253964900970459
    9. ' x' → logprob: -5.253964900970459
    10. 'e' → logprob: -5.628964900970459

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14269106090068817
    2. 'in' → logprob: -2.017691135406494
    3. ' ' → logprob: -12.017690658569336
    4. ',' → logprob: -12.142690658569336
    5. '	in' → logprob: -13.267690658569336
    6. 'n' → logprob: -13.892690658569336
    7. 'import' → logprob: -15.017690658569336
    8. 'range' → logprob: -15.392690658569336
    9. '  ' → logprob: -15.392690658569336
    10. ' ,' → logprob: -15.642690658569336

Token 41: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.005296127405017614
    2. ' enumerate' → logprob: -5.255296230316162
    3. 'a' → logprob: -10.505295753479004
    4. 'range' → logprob: -10.630295753479004
    5. 'zip' → logprob: -11.505295753479004
    6. ' zip' → logprob: -15.505295753479004
    7. 'enum' → logprob: -15.630295753479004
    8. 'p' → logprob: -16.88029670715332
    9. '[(' → logprob: -17.13029670715332
    10. 'en' → logprob: -17.25529670715332

Token 42: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.7491250875755213e-05
    2. '(range' → logprob: -10.750027656555176
    3. 'a' → logprob: -13.000027656555176
    4. '((' → logprob: -13.625027656555176
    5. '(' → logprob: -14.000027656555176
    6. '(zip' → logprob: -14.750027656555176
    7. '(p' → logprob: -14.750027656555176
    8. '(en' → logprob: -14.875027656555176
    9. ' (' → logprob: -15.250027656555176
    10. 'range' → logprob: -16.25002670288086

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009929145453497767
    2. ':' → logprob: -7.250992774963379
    3. ',' → logprob: -9.375992774963379
    4. ')' → logprob: -9.500992774963379
    5. ' ):' → logprob: -9.750992774963379
    6. '):
' → logprob: -10.125992774963379
    7. '():' → logprob: -12.125992774963379
    8. '[' → logprob: -12.500992774963379
    9. ':)' → logprob: -12.625992774963379
    10. '[:' → logprob: -12.750992774963379

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17189429700374603
    2. ' if' → logprob: -2.4218943119049072
    3. ' ans' → logprob: -2.9218943119049072
    4. ' for' → logprob: -4.671894073486328
    5. ' ' → logprob: -6.421894073486328
    6. 'ans' → logprob: -6.796894073486328
    7. 'if' → logprob: -7.171894073486328
    8. ' 
' → logprob: -7.421894073486328
    9. '	ans' → logprob: -7.671894073486328
    10. '    
' → logprob: -8.171894073486328

Token 45: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8108946084976196
    2. ' ans' → logprob: -1.3108946084976196
    3. ' for' → logprob: -1.5608946084976196
    4. 'if' (adapté à ' if') → logprob: -3.43589448928833
    5. 'for' → logprob: -3.81089448928833
    6. '   ' → logprob: -4.56089448928833
    7. 'ans' → logprob: -4.56089448928833
    8. ' while' → logprob: -8.810894966125488
    9. '	ans' → logprob: -8.935894966125488
    10. '(ans' → logprob: -10.185894966125488

Token 46: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.08035217970609665
    2. 'j' → logprob: -2.5803520679473877
    3. ' i' → logprob: -7.455352306365967
    4. ' a' → logprob: -7.705352306365967
    5. ' ' → logprob: -8.705351829528809
    6. ' p' → logprob: -9.455351829528809
    7. 'a' → logprob: -9.455351829528809
    8. ' (' → logprob: -10.580351829528809
    9. ' not' → logprob: -10.830351829528809
    10. '   ' → logprob: -10.955351829528809

Token 47: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.1350280046463013
    2. '==' → logprob: -1.7600280046463013
    3. '%' → logprob: -1.8850280046463013
    4. '>' → logprob: -2.0100278854370117
    5. ' >' → logprob: -2.5100278854370117
    6. ' !=' → logprob: -3.2600278854370117
    7. ' %' → logprob: -3.3850278854370117
    8. '!=' → logprob: -3.7600278854370117
    9. ':' → logprob: -4.635027885437012
    10. ' <=' → logprob: -4.760027885437012

Token 48: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7522573471069336
    2. '0' → logprob: -1.1272573471069336
    3. 'i' → logprob: -2.0022573471069336
    4. ' i' → logprob: -3.5022573471069336
    5. '1' → logprob: -3.6272573471069336
    6. 'p' → logprob: -5.502257347106934
    7. ' p' → logprob: -5.877257347106934
    8. 'a' → logprob: -5.877257347106934
    9. '2' → logprob: -7.252257347106934
    10. 'j' → logprob: -7.627257347106934

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6031989455223083
    2. 'i' → logprob: -1.2281990051269531
    3. ' ' → logprob: -2.728199005126953
    4. '1' → logprob: -2.853199005126953
    5. 'p' → logprob: -3.853199005126953
    6. '-' → logprob: -5.603199005126953
    7. 'a' → logprob: -5.728199005126953
    8. '2' → logprob: -5.978199005126953
    9. ' i' → logprob: -5.978199005126953
    10. ' p' → logprob: -7.478199005126953

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006676066666841507
    2. ':
' → logprob: -5.381676197052002
    3. ' :' → logprob: -6.256676197052002
    4. ' :
' → logprob: -9.131675720214844
    5. ' or' → logprob: -11.006675720214844
    6. ' and' → logprob: -13.006675720214844
    7. '   ' → logprob: -13.006675720214844
    8. ':return' → logprob: -13.631675720214844
    9. ':

' → logprob: -13.881675720214844
    10. ' ' → logprob: -13.881675720214844

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11942683160305023
    2. '   ' → logprob: -2.244426727294922
    3. ' ans' → logprob: -6.369426727294922
    4. ' continue' → logprob: -6.619426727294922
    5. '    ' → logprob: -7.369426727294922
    6. ' ' → logprob: -7.494426727294922
    7. ':' → logprob: -7.994426727294922
    8. 'continue' → logprob: -8.244426727294922
    9. 'ans' → logprob: -8.369426727294922
    10. '    
' → logprob: -8.931926727294922

Token 52: ' continue' (ID: 4901)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.09702877700328827
    2. 'ans' → logprob: -2.5970287322998047
    3. ' continue' → logprob: -4.597028732299805
    4. '   ' → logprob: -5.347028732299805
    5. 'continue' (adapté à ' continue') → logprob: -6.722028732299805
    6. ' ' → logprob: -7.972028732299805
    7. '	ans' → logprob: -7.972028732299805
    8. ' break' → logprob: -8.784528732299805
    9. ' pass' → logprob: -9.097028732299805
    10. '(ans' → logprob: -9.534528732299805

Token 53: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8135362267494202
    2. '   ' → logprob: -0.8135362267494202
    3. '    
' → logprob: -2.4385361671447754
    4. ' 
' → logprob: -5.063536167144775
    5. '  
' → logprob: -5.188536167144775
    6. '<|end|>' → logprob: -5.188536167144775
    7. '   
' → logprob: -5.438536167144775
    8. '\n' → logprob: -6.438536167144775
    9. ' ' → logprob: -7.188536167144775
    10. '        
' → logprob: -7.813536167144775

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2703167498111725
    2. '    
' → logprob: -2.2703168392181396
    3. '
' → logprob: -2.8953168392181396
    4. ' 
' → logprob: -2.8953168392181396
    5. '   
' → logprob: -4.7703166007995605
    6. '\n' → logprob: -5.2703166007995605
    7. '  
' → logprob: -5.2703166007995605
    8. ' ' → logprob: -6.6453166007995605
    9. '        
' → logprob: -7.5203166007995605
    10. '<|end|>' → logprob: -7.5203166007995605

Token 55: ' ans' (ID: 3345)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.106999397277832
    2. '   ' → logprob: -1.231999397277832
    3. ':' → logprob: -1.606999397277832
    4. ' ans' → logprob: -2.106999397277832
    5. 'for' → logprob: -3.981999397277832
    6. 'ans' (adapté à ' ans') → logprob: -4.481999397277832
    7. ' if' → logprob: -4.856999397277832
    8. ' ' → logprob: -5.606999397277832
    9. ':
' → logprob: -6.231999397277832
    10. '    ' → logprob: -6.356999397277832

Token 56: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.34219202399253845
    2. '[j' → logprob: -1.4671920537948608
    3. '[' → logprob: -2.8421919345855713
    4. '[a' → logprob: -8.092191696166992
    5. '[p' → logprob: -8.467191696166992
    6. '[(' → logprob: -8.717191696166992
    7. '[min' → logprob: -10.092191696166992
    8. ' [' → logprob: -10.342191696166992
    9. '[max' → logprob: -10.467191696166992
    10. '[len' → logprob: -10.967191696166992

Token 57: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5176365971565247
    2. '(i' → logprob: -1.0176365375518799
    3. 'j' → logprob: -3.64263653755188
    4. '(j' → logprob: -5.017636775970459
    5. ' (' → logprob: -5.392636775970459
    6. '(p' → logprob: -6.642636775970459
    7. '(' → logprob: -6.642636775970459
    8. ' i' → logprob: -7.267636775970459
    9. 'p' → logprob: -7.642636775970459
    10. ']' → logprob: -8.0176362991333

Token 58: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003364977426826954
    2. ']+=' → logprob: -6.3783650398254395
    3. ' ]' → logprob: -7.2533650398254395
    4. '+' → logprob: -7.5033650398254395
    5. '+i' → logprob: -8.753364562988281
    6. ' +' → logprob: -9.753364562988281
    7. ']+' → logprob: -10.128364562988281
    8. ':' → logprob: -10.878364562988281
    9. '+]' → logprob: -11.003364562988281
    10. ':]' → logprob: -11.128364562988281

Token 59: ' -=' (ID: 12583)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4915207624435425
    2. ' +=' → logprob: -1.1165207624435425
    3. '=' → logprob: -2.991520881652832
    4. ' =' → logprob: -4.991520881652832
    5. ']+=' → logprob: -6.116520881652832
    6. ' ^=' → logprob: -7.366520881652832
    7. '+' → logprob: -7.866520881652832
    8. ']' → logprob: -8.366520881652832
    9. '^' → logprob: -8.366520881652832
    10. ' |=' → logprob: -10.616520881652832

Token 60: ' p' (ID: 275)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2504326105117798
    2. 'j' → logprob: -1.6254326105117798
    3. ' j' → logprob: -4.00043249130249
    4. ' ' → logprob: -5.25043249130249
    5. 'a' → logprob: -7.50043249130249
    6. '2' → logprob: -8.500432968139648
    7. 'ans' → logprob: -9.625432968139648
    8. '   ' → logprob: -9.625432968139648
    9. '0' → logprob: -10.000432968139648
    10. ' a' → logprob: -10.000432968139648

Token 61: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12286562472581863
    2. '1' → logprob: -2.622865676879883
    3. ' i' → logprob: -3.747865676879883
    4. 'j' → logprob: -3.997865676879883
    5. ' j' → logprob: -7.372865676879883
    6. ' ' → logprob: -8.122865676879883
    7. 'a' → logprob: -9.497865676879883
    8. '(i' → logprob: -10.872865676879883
    9. '2' → logprob: -11.435365676879883
    10. '(' → logprob: -11.685365676879883

Token 63: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09076490253210068
    2. '1' → logprob: -2.5907649993896484
    3. 'j' → logprob: -4.465764999389648
    4. ' i' → logprob: -8.965764999389648
    5. '(i' → logprob: -9.840764999389648
    6. 'a' → logprob: -9.965764999389648
    7. '(' → logprob: -11.153264999389648
    8. '2' → logprob: -11.403264999389648
    9. 'ans' → logprob: -11.590764999389648
    10. 'p' → logprob: -11.965764999389648

Token 64: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2016438245773315
    2. '+' → logprob: -1.5766438245773315
    3. '<|end|>' → logprob: -1.8266438245773315
    4. '
' → logprob: -2.201643943786621
    5. '1' → logprob: -2.826643943786621
    6. ' 
' → logprob: -3.201643943786621
    7. ' ' → logprob: -3.826643943786621
    8. '0' → logprob: -3.826643943786621
    9. 'ans' → logprob: -4.576643943786621
    10. '    
' → logprob: -4.826643943786621

Token 65: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8525352478027344
    2. '<|end|>' → logprob: -0.8525352478027344
    3. '+' → logprob: -2.4775352478027344
    4. '   ' → logprob: -3.2275352478027344
    5. '    ' → logprob: -5.352535247802734
    6. ' 
' → logprob: -5.477535247802734
    7. '<|end|>' → logprob: -5.727535247802734
    8. '  ' → logprob: -6.102535247802734
    9. ')' → logprob: -6.227535247802734
    10. '[' → logprob: -6.727535247802734

Token 66: ' m' (ID: 284)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3845079243183136
    2. ' ans' → logprob: -1.6345078945159912
    3. 'ans' → logprob: -2.509507894515991
    4. '<|end|>' → logprob: -4.38450813293457
    5. '   ' → logprob: -4.50950813293457
    6. '    ' → logprob: -5.25950813293457
    7. '+' → logprob: -5.38450813293457
    8. '1' → logprob: -6.00950813293457
    9. '  ' → logprob: -6.75950813293457
    10. '0' → logprob: -6.75950813293457

Token 67: ' =' (ID: 314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9605874419212341
    2. 'a' → logprob: -1.085587501525879
    3. 'ax' → logprob: -1.960587501525879
    4. ' for' → logprob: -3.960587501525879
    5. 'in' → logprob: -3.960587501525879
    6. 'j' → logprob: -4.210587501525879
    7. '=' → logprob: -4.460587501525879
    8. 'ult' → logprob: -4.960587501525879
    9. 'i' → logprob: -4.960587501525879
    10. 'if' → logprob: -5.085587501525879

Token 68: ' ' (ID: 220)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.259232759475708
    2. 'j' → logprob: -2.134232759475708
    3. ' p' → logprob: -3.134232759475708
    4. ' (' → logprob: -3.884232759475708
    5. ' min' → logprob: -3.884232759475708
    6. 'p' → logprob: -4.759232521057129
    7. ' max' → logprob: -5.259232521057129
    8. 'min' → logprob: -5.884232521057129
    9. 'a' → logprob: -6.509232521057129
    10. 'max' → logprob: -6.634232521057129

Token 69: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2906014919281006
    2. ' j' → logprob: -2.5406014919281006
    3. 'p' → logprob: -2.7906014919281006
    4. '(j' → logprob: -4.04060173034668
    5. 'max' → logprob: -4.16560173034668
    6. 'a' → logprob: -4.29060173034668
    7. '(p' → logprob: -4.29060173034668
    8. ' (' → logprob: -4.79060173034668
    9. 'min' → logprob: -5.04060173034668
    10. 'i' → logprob: -5.04060173034668

Token 70: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31646397709846497
    2. '<|end|>' → logprob: -1.4414639472961426
    3. '+' → logprob: -4.691463947296143
    4. '<|end|>' → logprob: -4.816463947296143
    5. ' 
' → logprob: -5.691463947296143
    6. 'while' → logprob: -5.691463947296143
    7. '0' → logprob: -6.316463947296143
    8. ' ' → logprob: -6.316463947296143
    9. ' +' → logprob: -6.691463947296143
    10. ' while' → logprob: -6.816463947296143

Token 71: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.405891090631485
    2. ' while' → logprob: -1.2808910608291626
    3. 'for' (adapté à ' for') → logprob: -4.530890941619873
    4. '   ' → logprob: -4.655890941619873
    5. ' for' → logprob: -4.655890941619873
    6. 'm' → logprob: -4.905890941619873
    7. '
' → logprob: -5.155890941619873
    8. '    ' → logprob: -5.780890941619873
    9. ' m' → logprob: -6.030890941619873
    10. '+' → logprob: -6.655890941619873

Token 73: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.15795597434043884
    2. ' k' → logprob: -2.2829558849334717
    3. 'x' → logprob: -4.032956123352051
    4. '_' → logprob: -4.157956123352051
    5. ' x' → logprob: -5.907956123352051
    6. 'l' → logprob: -6.782956123352051
    7. ' _' → logprob: -6.907956123352051
    8. 'd' → logprob: -7.032956123352051
    9. '_k' → logprob: -7.282956123352051
    10. 'm' → logprob: -7.657956123352051

Token 74: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01437738724052906
    2. 'in' → logprob: -4.264377593994141
    3. ',' → logprob: -8.88937759399414
    4. ' ' → logprob: -10.01437759399414
    5. '	in' → logprob: -11.63937759399414
    6. '   ' → logprob: -12.26437759399414
    7. ' ,' → logprob: -12.63937759399414
    8. 'k' → logprob: -13.20187759399414
    9. '    ' → logprob: -13.45187759399414
    10. 'range' → logprob: -13.70187759399414

Token 75: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.42977774143218994
    2. 'range' → logprob: -1.05477774143219
    3. 'a' → logprob: -7.1797776222229
    4. ' a' → logprob: -8.429778099060059
    5. ' ' → logprob: -11.054778099060059
    6. 'ra' → logprob: -11.429778099060059
    7. '[' → logprob: -11.679778099060059
    8. '	range' → logprob: -11.679778099060059
    9. '[a' → logprob: -12.117278099060059
    10. '   ' → logprob: -12.304778099060059

Token 76: '(p' (ID: 2407)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4468036890029907
    2. '(j' → logprob: -1.3218036890029907
    3. '(p' → logprob: -2.446803569793701
    4. '(i' → logprob: -5.696803569793701
    5. '(m' → logprob: -6.071803569793701
    6. '(a' → logprob: -6.946803569793701
    7. '(k' → logprob: -8.32180404663086
    8. '(len' → logprob: -9.69680404663086
    9. ' (' → logprob: -9.94680404663086
    10. '(n' → logprob: -10.19680404663086

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07790243625640869
    2. '):
' → logprob: -3.327902317047119
    3. '-' → logprob: -3.577902317047119
    4. ' -' → logprob: -4.952902317047119
    5. '+' → logprob: -6.577902317047119
    6. ' ):' → logprob: -6.702902317047119
    7. '):
' → logprob: -7.702902317047119
    8. '   ' → logprob: -7.952902317047119
    9. ')' → logprob: -8.577902793884277
    10. ' +' → logprob: -9.452902793884277

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23707671463489532
    2. '<|end|>' → logprob: -1.737076759338379
    3. ':' → logprob: -4.487076759338379
    4. ' ' → logprob: -4.612076759338379
    5. ' if' → logprob: -5.112076759338379
    6. '<|end|>' → logprob: -5.862076759338379
    7. '   ' → logprob: -6.737076759338379
    8. '    ' → logprob: -6.862076759338379
    9. ',' → logprob: -7.487076759338379
    10. ':
' → logprob: -7.612076759338379

Token 79: ' ans' (ID: 3345)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09687221795320511
    2. ' if' → logprob: -2.721872329711914
    3. '<|end|>' → logprob: -4.346872329711914
    4. ' 
' → logprob: -5.471872329711914
    5. '        ' → logprob: -5.721872329711914
    6. 'if' → logprob: -6.221872329711914
    7. '       ' → logprob: -6.846872329711914
    8. ' ans' → logprob: -6.971872329711914
    9. ' ' → logprob: -7.471872329711914
    10. '    ' → logprob: -7.471872329711914

Token 80: '[p' (ID: 23234)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.388210266828537
    2. '[k' → logprob: -1.2632102966308594
    3. '[' → logprob: -3.3882102966308594
    4. '[j' → logprob: -5.513210296630859
    5. '[p' → logprob: -7.888210296630859
    6. '[(' → logprob: -8.01321029663086
    7. '[i' → logprob: -8.13821029663086
    8. '[q' → logprob: -10.63821029663086
    9. '[-' → logprob: -10.76321029663086
    10. '[a' → logprob: -11.13821029663086

Token 81: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10975948721170425
    2. ' -' → logprob: -2.484759569168091
    3. 'm' → logprob: -4.609759330749512
    4. 'k' → logprob: -5.234759330749512
    5. '-k' → logprob: -5.859759330749512
    6. ']' → logprob: -6.984759330749512
    7. '-m' → logprob: -7.734759330749512
    8. ')' → logprob: -8.359759330749512
    9. '   ' → logprob: -8.609759330749512
    10. '1' → logprob: -9.109759330749512

Token 82: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09584277868270874
    2. ' ' → logprob: -3.3458428382873535
    3. 'k' → logprob: -3.5958428382873535
    4. 'm' → logprob: -4.4708428382873535
    5. ' m' → logprob: -5.2208428382873535
    6. ' k' → logprob: -5.2208428382873535
    7. 'j' → logprob: -6.2208428382873535
    8. '-' → logprob: -7.4708428382873535
    9. ' j' → logprob: -7.4708428382873535
    10. '   ' → logprob: -7.5958428382873535

Token 83: '1' (ID: 16)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5658425688743591
    2. '1' → logprob: -1.315842628479004
    3. 'k' → logprob: -1.815842628479004
    4. ' m' → logprob: -7.815842628479004
    5. 'j' → logprob: -8.690842628479004
    6. 'i' → logprob: -8.690842628479004
    7. 'p' → logprob: -9.315842628479004
    8. '(' → logprob: -9.440842628479004
    9. ' ' → logprob: -9.690842628479004
    10. ' k' → logprob: -10.065842628479004

Token 84: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6854362487792969
    2. ' -' → logprob: -0.9354362487792969
    3. '-' → logprob: -2.560436248779297
    4. '-k' → logprob: -3.935436248779297
    5. '-m' → logprob: -5.310436248779297
    6. ' ]' → logprob: -7.435436248779297
    7. '+' → logprob: -7.435436248779297
    8. ' +' → logprob: -8.310436248779297
    9. '   ' → logprob: -9.560436248779297
    10. ' ' → logprob: -9.685436248779297

Token 85: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03182587772607803
    2. ' k' → logprob: -3.5318257808685303
    3. 'm' → logprob: -6.781826019287109
    4. ']' → logprob: -8.28182601928711
    5. ' m' → logprob: -8.28182601928711
    6. 'i' → logprob: -9.03182601928711
    7. ' ' → logprob: -9.28182601928711
    8. ' (' → logprob: -9.53182601928711
    9. 'j' → logprob: -10.40682601928711
    10. '(k' → logprob: -10.65682601928711

Token 86: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003937817644327879
    2. ']+=' → logprob: -5.878937721252441
    3. ' ]' → logprob: -7.253937721252441
    4. '+' → logprob: -8.753937721252441
    5. '   ' → logprob: -9.253937721252441
    6. '-' → logprob: -9.753937721252441
    7. ' -' → logprob: -10.503937721252441
    8. ']+' → logprob: -11.503937721252441
    9. '+]' → logprob: -11.753937721252441
    10. ' +' → logprob: -11.753937721252441

Token 87: ' -=' (ID: 12583)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5284241437911987
    2. ' +=' → logprob: -0.9034241437911987
    3. ' -=' → logprob: -5.778424263000488
    4. '-=' → logprob: -6.903424263000488
    5. '+' → logprob: -7.278424263000488
    6. '=' → logprob: -8.278424263000488
    7. ']+=' → logprob: -9.028424263000488
    8. ' =' → logprob: -10.778424263000488
    9. '-' → logprob: -10.903424263000488
    10. ' +' → logprob: -11.153424263000488

Token 88: ' m' (ID: 284)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8203045129776001
    2. 'm' → logprob: -0.9453045129776001
    3. ' m' → logprob: -2.1953043937683105
    4. ' ' → logprob: -3.5703043937683105
    5. 'k' → logprob: -4.8203043937683105
    6. 'p' → logprob: -4.9453043937683105
    7. ' p' → logprob: -5.4453043937683105
    8. 'j' → logprob: -5.8203043937683105
    9. ' k' → logprob: -6.1953043937683105
    10. 'a' → logprob: -6.4453043937683105

Token 89: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' ans' (ID: 3345)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.8043953776359558
    2. 'm' → logprob: -1.6793954372406006
    3. '       ' → logprob: -1.6793954372406006
    4. '   ' → logprob: -1.9293954372406006
    5. ' ' → logprob: -4.0543951988220215
    6. '
' → logprob: -5.6793951988220215
    7. '*m' → logprob: -5.8043951988220215
    8. ' *' → logprob: -6.5543951988220215
    9. '    ' → logprob: -6.5543951988220215
    10. '*' → logprob: -6.8043951988220215

Token 92: '[p' (ID: 23234)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6314956545829773
    2. '[p' → logprob: -1.131495714187622
    3. '[m' → logprob: -2.756495714187622
    4. '[k' → logprob: -2.881495714187622
    5. '[j' → logprob: -3.881495714187622
    6. '[i' → logprob: -6.256495475769043
    7. ' +=' → logprob: -7.131495475769043
    8. '+=' → logprob: -7.756495475769043
    9. '[s' → logprob: -7.881495475769043
    10. '+' → logprob: -8.006495475769043

Token 93: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.09031213819980621
    2. '-' → logprob: -2.4653122425079346
    3. ' ' → logprob: -7.2153120040893555
    4. '   ' → logprob: -8.715312004089355
    5. '<|end|>' → logprob: -9.465312004089355
    6. '    ' → logprob: -9.590312004089355
    7. '-k' → logprob: -9.965312004089355
    8. ']' → logprob: -9.965312004089355
    9. '<|end|>' → logprob: -9.965312004089355
    10. '+' → logprob: -10.215312004089355

Token 94: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14698278903961182
    2. 'k' → logprob: -2.2719826698303223
    3. '2' → logprob: -4.146982669830322
    4. ' ' → logprob: -4.646982669830322
    5. ' k' → logprob: -5.021982669830322
    6. '   ' → logprob: -6.896982669830322
    7. 'j' → logprob: -8.52198314666748
    8. '           ' → logprob: -9.64698314666748
    9. '    ' → logprob: -9.70948314666748
    10. 'i' → logprob: -9.95948314666748

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.32388341426849365
    2. 'k' → logprob: -1.5738834142684937
    3. '2' → logprob: -2.698883533477783
    4. ' k' → logprob: -7.198883533477783
    5. ' ' → logprob: -7.573883533477783
    6. 'j' → logprob: -8.073883056640625
    7. 'i' → logprob: -8.198883056640625
    8. '   ' → logprob: -8.698883056640625
    9. 'a' → logprob: -11.136383056640625
    10. '  ' → logprob: -11.511383056640625

Token 96: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.28291550278663635
    2. '-' → logprob: -1.407915472984314
    3. '-k' → logprob: -6.4079155921936035
    4. ' ' → logprob: -10.282915115356445
    5. ']' → logprob: -10.407915115356445
    6. '   ' → logprob: -10.907915115356445
    7. '+' → logprob: -11.157915115356445
    8. '    ' → logprob: -13.157915115356445
    9. ' +' → logprob: -13.282915115356445
    10. '<|end|>' → logprob: -13.282915115356445

Token 97: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.021624617278575897
    2. ' k' → logprob: -4.521624565124512
    3. '(k' → logprob: -5.021624565124512
    4. 'j' → logprob: -6.771624565124512
    5. ' (' → logprob: -6.896624565124512
    6. '1' → logprob: -6.896624565124512
    7. 'i' → logprob: -8.771624565124512
    8. 'p' → logprob: -8.896624565124512
    9. '(' → logprob: -9.396624565124512
    10. '   ' → logprob: -9.646624565124512

Token 98: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2337239682674408
    2. '+' → logprob: -2.7337238788604736
    3. '-' → logprob: -2.7337238788604736
    4. ' -' → logprob: -2.8587238788604736
    5. ' +' → logprob: -4.108724117279053
    6. ' ]' → logprob: -5.858724117279053
    7. ' ' → logprob: -7.358724117279053
    8. '   ' → logprob: -7.983724117279053
    9. ']+' → logprob: -9.233723640441895
    10. ']+=' → logprob: -9.483723640441895

Token 99: ' %=' (ID: 117035)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.517967164516449
    2. '+=' → logprob: -1.0179672241210938
    3. ' -=' → logprob: -3.7679672241210938
    4. ' *=' → logprob: -5.142967224121094
    5. '-=' → logprob: -5.517967224121094
    6. ' ' → logprob: -5.642967224121094
    7. '=' → logprob: -5.892967224121094
    8. '*=' → logprob: -6.267967224121094
    9. '+' → logprob: -7.517967224121094
    10. ' =' → logprob: -8.017967224121094

Token 100: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0029742566403001547
    2. ' p' → logprob: -5.877974033355713
    3. '100' → logprob: -9.252974510192871
    4. '10' → logprob: -10.502974510192871
    5. '998' → logprob: -11.252974510192871
    6. 'a' → logprob: -11.627974510192871
    7. ' ' → logprob: -12.252974510192871
    8. '(p' → logprob: -12.252974510192871
    9. '(' → logprob: -12.502974510192871
    10. ' (' → logprob: -13.002974510192871

Token 101: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21691907942295074
    2. '<|end|>' → logprob: -1.7169190645217896
    3. '    ' → logprob: -5.2169189453125
    4. ' 
' → logprob: -5.7169189453125
    5. '   ' → logprob: -6.3419189453125
    6. ' m' → logprob: -6.5919189453125
    7. '  ' → logprob: -7.5919189453125
    8. '       ' → logprob: -7.7169189453125
    9. '```' → logprob: -7.9669189453125
    10. '<|end|>' → logprob: -8.0919189453125

Token 102: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5808866620063782
    2. '<|end|>' → logprob: -1.0808866024017334
    3. '    ' → logprob: -3.3308866024017334
    4. ')' → logprob: -3.7058866024017334
    5. '   ' → logprob: -4.0808868408203125
    6. ' )' → logprob: -5.3308868408203125
    7. '       ' → logprob: -5.5808868408203125
    8. ' m' → logprob: -5.7058868408203125
    9. '+' → logprob: -5.9558868408203125
    10. 'm' → logprob: -6.0808868408203125

Token 103: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.420842707157135
    2. ' m' → logprob: -1.1708426475524902
    3. '       ' → logprob: -3.4208426475524902
    4. '   ' → logprob: -7.92084264755249
    5. ' ' → logprob: -8.670843124389648
    6. '	m' → logprob: -9.295843124389648
    7. '```' → logprob: -10.170843124389648
    8. 'k' → logprob: -11.545843124389648
    9. '+' → logprob: -12.170843124389648
    10. '           ' → logprob: -12.295843124389648

Token 104: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.12570138275623322
    2. ' *=' → logprob: -2.250701427459717
    3. '=' → logprob: -4.625701427459717
    4. '+=' → logprob: -6.500701427459717
    5. '*' → logprob: -7.000701427459717
    6. ' =' → logprob: -7.750701427459717
    7. ' +=' → logprob: -9.500700950622559
    8. ' *' → logprob: -10.250700950622559
    9. ' <<=' → logprob: -10.500700950622559
    10. ' ' → logprob: -11.375700950622559

Token 105: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.09646269679069519
    2. 'a' → logprob: -2.9714627265930176
    3. 'p' → logprob: -3.5964627265930176
    4. '2' → logprob: -5.096462726593018
    5. 'i' → logprob: -6.596462726593018
    6. '-' → logprob: -6.596462726593018
    7. ' j' → logprob: -6.596462726593018
    8. '10' → logprob: -7.596462726593018
    9. 'k' → logprob: -7.971462726593018
    10. '7' → logprob: -7.971462726593018

Token 106: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.17466267943382263
    2. ' m' → logprob: -1.924662709236145
    3. '1' → logprob: -5.7996625900268555
    4. 'mod' → logprob: -6.4246625900268555
    5. ' ' → logprob: -6.5496625900268555
    6. '<|end|>' → logprob: -6.6746625900268555
    7. ' (' → logprob: -6.7996625900268555
    8. 'k' → logprob: -7.0496625900268555
    9. 'i' → logprob: -7.5496625900268555
    10. '%' → logprob: -7.5496625900268555

Token 109: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.05427364632487297
    2. ' %=' → logprob: -3.0542736053466797
    3. '%' → logprob: -5.17927360534668
    4. '=' → logprob: -10.80427360534668
    5. '+=' → logprob: -11.67927360534668
    6. ' %' → logprob: -12.17927360534668
    7. '*=' → logprob: -12.67927360534668
    8. ' ' → logprob: -15.17927360534668
    9. ' ' → logprob: -15.80427360534668
    10. ' =' → logprob: -16.30427360534668

Token 110: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.003600071184337139
    2. ' p' → logprob: -5.628600120544434
    3. ' ' → logprob: -17.003599166870117
    4. ' ' → logprob: -18.378599166870117
    5. '<p' → logprob: -18.628599166870117
    6. '   ' → logprob: -19.003599166870117
    7. 'python' → logprob: -19.628599166870117
    8. '```' → logprob: -19.628599166870117
    9. '*p' → logprob: -19.753599166870117
    10. '	p' → logprob: -19.753599166870117

Token 111: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: '(*' (ID: 9000)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.11468427628278732
    2. '(' → logprob: -2.2396843433380127
    3. '()' → logprob: -6.739684104919434
    4. 'ans' → logprob: -8.114684104919434
    5. '(len' → logprob: -8.739684104919434
    6. '(*' → logprob: -9.614684104919434
    7. '(sum' → logprob: -9.864684104919434
    8. '('' → logprob: -10.614684104919434
    9. '(a' → logprob: -10.989684104919434
    10. '(
' → logprob: -11.114684104919434

Token 114: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00010509284038562328
    2. ' ans' → logprob: -9.250104904174805
    3. '(ans' → logprob: -11.625104904174805
    4. ')' → logprob: -17.750104904174805
    5. 'answer' → logprob: -18.375104904174805
    6. '	ans' → logprob: -18.375104904174805
    7. '[' → logprob: -20.250104904174805
    8. 'Ans' → logprob: -20.875104904174805
    9. '_ans' → logprob: -20.875104904174805
    10. 'a' → logprob: -20.875104904174805

Token 115: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4285862057004124e-05
    2. ')
' → logprob: -11.25003433227539
    3. '[' → logprob: -12.00003433227539
    4. '))' → logprob: -12.37503433227539
    5. ')`' → logprob: -12.87503433227539
    6. ',' → logprob: -13.37503433227539
    7. ' )' → logprob: -13.50003433227539
    8. '`)' → logprob: -13.50003433227539
    9. ')]' → logprob: -14.12503433227539
    10. ',)' → logprob: -14.75003433227539


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 113
Tokens correctement prédits (1ère position, stricte): 34
Tokens correctement prédits (1ère position, avec adaptation): 36
Tokens correctement prédits (top 10): 80
Précision stricte (1ère position): 30.09%
Précision adaptée (1ère position): 31.86%
Précision (top 10): 70.80%
================================================================================
