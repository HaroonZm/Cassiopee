================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = input()
def dna_comp(base):
    return {"A": "T", "T": "A", "C": "G", "G": "C"}[base]
if n is not None:
    for b in ["A", "T", "C", "G"]:
        if n == b:
            print(dna_comp(n))
            break
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0039518289268016815
    2. '('' → logprob: -6.2539520263671875
    3. ''' → logprob: -6.5039520263671875
    4. '"' → logprob: -8.378952026367188
    5. '("("' → logprob: -9.128952026367188
    6. '(
' → logprob: -9.378952026367188
    7. '[' → logprob: -10.628952026367188
    8. '()' → logprob: -10.628952026367188
    9. '`' → logprob: -11.753952026367188
    10. '```' → logprob: -12.003952026367188

Token 4: 'def' (ID: 1314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4011780619621277
    2. '.' → logprob: -1.4011781215667725
    3. '=' → logprob: -3.6511781215667725
    4. '*' → logprob: -4.026177883148193
    5. '\n' → logprob: -4.651177883148193
    6. 'if' → logprob: -5.151177883148193
    7. '.strip' → logprob: -5.526177883148193
    8. '```' → logprob: -5.651177883148193
    9. ')' → logprob: -6.026177883148193
    10. '_' → logprob: -6.401177883148193

Token 5: ' dna' (ID: 130701)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08090106397867203
    2. '_' → logprob: -3.8309011459350586
    3. ' n' → logprob: -4.080901145935059
    4. ' space' → logprob: -4.080901145935059
    5. ' f' → logprob: -5.330901145935059
    6. ' my' → logprob: -5.330901145935059
    7. ' function' → logprob: -6.455901145935059
    8. ' def' → logprob: -6.705901145935059
    9. ' func' → logprob: -6.705901145935059
    10. ' factorial' → logprob: -6.705901145935059

Token 6: '_comp' (ID: 34754)
  Prédit: '_sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.23569592833518982
    2. '_' → logprob: -2.4856958389282227
    3. '_seq' → logprob: -2.9856958389282227
    4. '(' → logprob: -3.3606958389282227
    5. '_str' → logprob: -4.860695838928223
    6. '_chain' → logprob: -5.360695838928223
    7. '_code' → logprob: -5.985695838928223
    8. '_com' → logprob: -6.235695838928223
    9. '_poly' → logprob: -6.235695838928223
    10. '_string' → logprob: -6.360695838928223

Token 7: '(base' (ID: 25314)
  Prédit: 'lement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lement' → logprob: -0.0008371464791707695
    2. '()' → logprob: -7.250837326049805
    3. 'ement' → logprob: -10.000837326049805
    4. 'plement' → logprob: -10.625837326049805
    5. 'lements' → logprob: -11.375837326049805
    6. 'lem' → logprob: -11.500837326049805
    7. '(n' → logprob: -11.750837326049805
    8. '():
' → logprob: -12.250837326049805
    9. 'element' → logprob: -12.500837326049805
    10. 'def' → logprob: -12.500837326049805

Token 8: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014565374702215195
    2. ')' → logprob: -4.264565467834473
    3. '_' → logprob: -8.014565467834473
    4. '):
' → logprob: -10.139565467834473
    5. 's' → logprob: -11.139565467834473
    6. '_base' → logprob: -13.139565467834473
    7. ':' → logprob: -13.139565467834473
    8. ')：' → logprob: -13.264565467834473
    9. ''):' → logprob: -13.389565467834473
    10. ')_' → logprob: -14.139565467834473

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5267350673675537
    2. ':' → logprob: -0.9017350673675537
    3. ':return' → logprob: -7.026735305786133
    4. ' ' → logprob: -7.151735305786133
    5. '```' → logprob: -8.026735305786133
    6. 'return' → logprob: -8.526735305786133
    7. '_' → logprob: -8.651735305786133
    8. ' return' → logprob: -8.651735305786133
    9. '  ' → logprob: -8.776735305786133
    10. '(' → logprob: -8.901735305786133

Token 10: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6923817992210388
    2. ' if' → logprob: -0.9423817992210388
    3. 'if' → logprob: -2.9423818588256836
    4. ' return' → logprob: -3.6923818588256836
    5. 'return' (adapté à ' return') → logprob: -4.692381858825684
    6. ' ' → logprob: -5.067381858825684
    7. '    ' → logprob: -5.192381858825684
    8. ' bases' → logprob: -5.942381858825684
    9. ')' → logprob: -6.442381858825684
    10. '  ' → logprob: -6.817381858825684

Token 11: ' {"' (ID: 10494)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6616418957710266
    2. '{' → logprob: -1.2866418361663818
    3. ' {'' → logprob: -2.536641836166382
    4. '{'' → logprob: -2.786641836166382
    5. ' {' → logprob: -3.536641836166382
    6. ' '' → logprob: -4.536642074584961
    7. '"' → logprob: -4.536642074584961
    8. '{"' → logprob: -4.911642074584961
    9. ' ' → logprob: -6.411642074584961
    10. '''' → logprob: -6.536642074584961

Token 12: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.029829632490873337
    2. ''A' → logprob: -3.904829740524292
    3. '"A' → logprob: -4.904829502105713
    4. 'T' → logprob: -7.404829502105713
    5. ''' → logprob: -8.029829978942871
    6. 'AT' → logprob: -8.779829978942871
    7. 'G' → logprob: -8.779829978942871
    8. '"' → logprob: -8.779829978942871
    9. '"T' → logprob: -8.779829978942871
    10. ''T' → logprob: -9.029829978942871

Token 13: '":' (ID: 1243)
  Prédit: '"T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"T' → logprob: -0.8987938761711121
    2. '":' → logprob: -1.1487939357757568
    3. '":"' → logprob: -1.8987939357757568
    4. '"' → logprob: -2.523793935775757
    5. 'T' → logprob: -3.148793935775757
    6. ':T' → logprob: -6.523793697357178
    7. ':' → logprob: -6.773793697357178
    8. ' T' → logprob: -8.273794174194336
    9. '"":' → logprob: -9.648794174194336
    10. ':"' → logprob: -10.273794174194336

Token 14: ' "' (ID: 392)
  Prédit: '"T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"T' → logprob: -0.022314906120300293
    2. ' "' → logprob: -3.89731502532959
    3. '"' → logprob: -7.02231502532959
    4. ''T' → logprob: -7.77231502532959
    5. ' T' → logprob: -8.27231502532959
    6. ' ' → logprob: -8.89731502532959
    7. 'T' → logprob: -10.14731502532959
    8. ''"' → logprob: -12.27231502532959
    9. '"'' → logprob: -12.77231502532959
    10. '  ' → logprob: -13.02231502532959

Token 15: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0001733855315251276
    2. '"T' → logprob: -9.250173568725586
    3. '"' → logprob: -9.875173568725586
    4. ' T' → logprob: -10.750173568725586
    5. 't' → logprob: -13.750173568725586
    6. 'Т' → logprob: -14.000173568725586
    7. ''T' → logprob: -14.500173568725586
    8. ''' → logprob: -15.000173568725586
    9. ' ' → logprob: -15.625173568725586
    10. 'U' → logprob: -15.875173568725586

Token 16: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.0010940231150016189
    2. '"}' → logprob: -7.626093864440918
    3. '"' → logprob: -7.876093864440918
    4. '",
' → logprob: -9.126093864440918
    5. '","' → logprob: -9.251093864440918
    6. ',"' → logprob: -12.251093864440918
    7. '',' → logprob: -12.501093864440918
    8. '",
' → logprob: -12.876093864440918
    9. '",'' → logprob: -13.001093864440918
    10. ',' → logprob: -13.251093864440918

Token 17: ' "' (ID: 392)
  Prédit: '"T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"T' → logprob: -0.17132484912872314
    2. '"' → logprob: -2.0463247299194336
    3. '"G' → logprob: -3.9213247299194336
    4. ' "' → logprob: -5.046324729919434
    5. '"C' → logprob: -6.421324729919434
    6. ' ' → logprob: -9.421324729919434
    7. '   ' → logprob: -9.421324729919434
    8. '"A' → logprob: -10.171324729919434
    9. 'T' → logprob: -10.671324729919434
    10. ''T' → logprob: -10.796324729919434

Token 18: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.009902583435177803
    2. '"T' → logprob: -4.884902477264404
    3. '"' → logprob: -6.134902477264404
    4. ' T' → logprob: -9.884902954101562
    5. ''T' → logprob: -10.259902954101562
    6. ''' → logprob: -11.259902954101562
    7. 'C' → logprob: -12.134902954101562
    8. ' ' → logprob: -12.384902954101562
    9. '```' → logprob: -12.634902954101562
    10. '   ' → logprob: -13.009902954101562

Token 19: '":' (ID: 1243)
  Prédit: '":'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.000587821879889816
    2. '"}' → logprob: -8.375587463378906
    3. '"' → logprob: -8.750587463378906
    4. ':' → logprob: -9.250587463378906
    5. '```' → logprob: -10.625587463378906
    6. '":"' → logprob: -11.125587463378906
    7. '">' → logprob: -11.250587463378906
    8. '"A' → logprob: -11.625587463378906
    9. '<|end|>' → logprob: -12.125587463378906
    10. '):' → logprob: -12.125587463378906

Token 20: ' "' (ID: 392)
  Prédit: '"A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"A' → logprob: -0.022738929837942123
    2. '"' → logprob: -4.272738933563232
    3. ' "' → logprob: -4.772738933563232
    4. 'A' → logprob: -10.772738456726074
    5. ' A' → logprob: -10.897738456726074
    6. ''A' → logprob: -11.272738456726074
    7. ' ' → logprob: -11.272738456726074
    8. '"G' → logprob: -12.397738456726074
    9. '```' → logprob: -12.522738456726074
    10. '"А' → logprob: -13.397738456726074

Token 21: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.000549814198166132
    2. '"A' → logprob: -7.625549793243408
    3. ' A' → logprob: -10.625550270080566
    4. '"' → logprob: -10.625550270080566
    5. '```' → logprob: -12.875550270080566
    6. 'a' → logprob: -13.125550270080566
    7. ''A' → logprob: -13.625550270080566
    8. ')' → logprob: -14.063050270080566
    9. 'А' → logprob: -14.313050270080566
    10. ' ' → logprob: -14.313050270080566

Token 22: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.0004014753212686628
    2. '"}' → logprob: -8.875401496887207
    3. '"' → logprob: -9.125401496887207
    4. '",
' → logprob: -10.125401496887207
    5. '","' → logprob: -10.500401496887207
    6. '}",' → logprob: -10.750401496887207
    7. ',' → logprob: -11.000401496887207
    8. 'C' → logprob: -11.375401496887207
    9. '"C' → logprob: -11.750401496887207
    10. '}' → logprob: -12.000401496887207

Token 23: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.9069615602493286
    2. '"G' → logprob: -1.1569615602493286
    3. '"C' → logprob: -1.9069615602493286
    4. '"' → logprob: -2.031961441040039
    5. '   ' → logprob: -6.781961441040039
    6. '       ' → logprob: -8.281961441040039
    7. ' ' → logprob: -8.406961441040039
    8. '```' → logprob: -9.406961441040039
    9. '    ' → logprob: -9.531961441040039
    10. ' G' → logprob: -9.906961441040039

Token 24: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.28124791383743286
    2. 'G' → logprob: -1.406247854232788
    3. '"C' → logprob: -10.156248092651367
    4. '"' → logprob: -11.156248092651367
    5. ' C' → logprob: -11.156248092651367
    6. '"G' → logprob: -11.406248092651367
    7. ''C' → logprob: -11.906248092651367
    8. '```' → logprob: -12.531248092651367
    9. ' G' → logprob: -12.656248092651367
    10. '``' → logprob: -13.281248092651367

Token 25: '":' (ID: 1243)
  Prédit: '":'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.38693103194236755
    2. ':' → logprob: -1.13693106174469
    3. '"' → logprob: -10.886931419372559
    4. ' :' → logprob: -11.386931419372559
    5. '":"' → logprob: -11.511931419372559
    6. '):' → logprob: -11.886931419372559
    7. '"":' → logprob: -12.761931419372559
    8. '```' → logprob: -12.886931419372559
    9. '}:' → logprob: -13.886931419372559
    10. '")' → logprob: -13.886931419372559

Token 26: ' "' (ID: 392)
  Prédit: '"G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"G' → logprob: -0.1246948093175888
    2. ' "' → logprob: -2.24969482421875
    3. '"' → logprob: -4.62469482421875
    4. ' G' → logprob: -6.62469482421875
    5. ' ' → logprob: -7.74969482421875
    6. 'G' → logprob: -9.74969482421875
    7. ''' → logprob: -9.87469482421875
    8. ' ' → logprob: -10.62469482421875
    9. '   ' → logprob: -10.74969482421875
    10. '  ' → logprob: -10.87469482421875

Token 27: 'G' (ID: 38)
  Prédit: '"G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"G' → logprob: -0.22702516615390778
    2. 'G' → logprob: -1.6020251512527466
    3. ''' → logprob: -6.602025032043457
    4. '"' → logprob: -9.352025032043457
    5. '```' → logprob: -9.602025032043457
    6. '``' → logprob: -11.102025032043457
    7. ':G' → logprob: -11.352025032043457
    8. '<G' → logprob: -11.477025032043457
    9. ''GC' → logprob: -11.727025032043457
    10. '	G' → logprob: -11.852025032043457

Token 28: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.6431439518928528
    2. '"}' → logprob: -0.8931439518928528
    3. '}' → logprob: -2.768143892288208
    4. '"' → logprob: -6.768144130706787
    5. '")' → logprob: -7.893144130706787
    6. ',' → logprob: -8.143143653869629
    7. '","' → logprob: -9.018143653869629
    8. '"C' → logprob: -9.268143653869629
    9. '   ' → logprob: -10.143143653869629
    10. '}",' → logprob: -10.643143653869629

Token 29: ' "' (ID: 392)
  Prédit: '"G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"G' → logprob: -0.3660533130168915
    2. ' "' → logprob: -1.8660533428192139
    3. '"' → logprob: -1.9910533428192139
    4. '"C' → logprob: -4.241053104400635
    5. '"D' → logprob: -8.491053581237793
    6. '   ' → logprob: -8.491053581237793
    7. '}' → logprob: -9.616053581237793
    8. ' ' → logprob: -9.741053581237793
    9. '"}' → logprob: -9.866053581237793
    10. '"T' → logprob: -10.116053581237793

Token 30: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -4.787507714354433e-05
    2. '"G' → logprob: -10.25004768371582
    3. '"' → logprob: -11.62504768371582
    4. ' G' → logprob: -12.87504768371582
    5. ''' → logprob: -15.37504768371582
    6. 'C' → logprob: -15.50004768371582
    7. '")' → logprob: -16.12504768371582
    8. ')' → logprob: -16.25004768371582
    9. '"}' → logprob: -16.50004768371582
    10. '	G' → logprob: -16.87504768371582

Token 31: '":' (ID: 1243)
  Prédit: '":'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.16150934994220734
    2. '"}' → logprob: -1.911509394645691
    3. '}' → logprob: -7.1615095138549805
    4. ':' → logprob: -8.16150951385498
    5. '"' → logprob: -9.16150951385498
    6. '"]' → logprob: -10.41150951385498
    7. '":"' → logprob: -10.41150951385498
    8. ')' → logprob: -11.16150951385498
    9. '}:' → logprob: -11.28650951385498
    10. '")' → logprob: -11.91150951385498

Token 32: ' "' (ID: 392)
  Prédit: '"C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"C' → logprob: -0.0014548784820362926
    2. '"' → logprob: -6.876454830169678
    3. ' "' → logprob: -7.876454830169678
    4. '"}' → logprob: -10.501455307006836
    5. '")' → logprob: -11.501455307006836
    6. 'C' → logprob: -13.126455307006836
    7. ''C' → logprob: -14.501455307006836
    8. '"G' → logprob: -14.751455307006836
    9. '"T' → logprob: -14.876455307006836
    10. '"A' → logprob: -15.251455307006836

Token 33: 'C' (ID: 34)
  Prédit: '"C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"C' → logprob: -0.16085368394851685
    2. 'C' → logprob: -1.910853624343872
    3. ''C' → logprob: -7.410853862762451
    4. '"}' → logprob: -10.910853385925293
    5. '"' → logprob: -12.410853385925293
    6. ' C' → logprob: -13.535853385925293
    7. '>C' → logprob: -15.285853385925293
    8. ':C' → logprob: -15.660853385925293
    9. '")' → logprob: -15.910853385925293
    10. '```' → logprob: -15.910853385925293

Token 34: '"}' (ID: 18583)
  Prédit: '"}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"}' → logprob: -0.006258427165448666
    2. '}' → logprob: -5.256258487701416
    3. '}[' → logprob: -7.881258487701416
    4. '}"' → logprob: -8.131258010864258
    5. '"' → logprob: -8.631258010864258
    6. '"}
' → logprob: -9.381258010864258
    7. '"}

' → logprob: -10.256258010864258
    8. '"})' → logprob: -11.131258010864258
    9. '   ' → logprob: -11.256258010864258
    10. '")[' → logprob: -11.631258010864258

Token 35: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.044590290635824203
    2. '[n' → logprob: -3.6695902347564697
    3. '.get' → logprob: -4.169590473175049
    4. '[get' → logprob: -6.294590473175049
    5. '[input' → logprob: -8.54458999633789
    6. '[b' → logprob: -8.54458999633789
    7. '[data' → logprob: -9.04458999633789
    8. '[token' → logprob: -9.79458999633789
    9. '```' → logprob: -10.29458999633789
    10. '[new' → logprob: -10.54458999633789

Token 36: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -1.2113979209971149e-05
    2. ' base' → logprob: -11.375012397766113
    3. 'b' → logprob: -15.000012397766113
    4. 'bas' → logprob: -16.250011444091797
    5. '(base' → logprob: -16.750011444091797
    6. '   ' → logprob: -17.125011444091797
    7. '	base' → logprob: -18.000011444091797
    8. ' ' → logprob: -18.250011444091797
    9. 'basis' → logprob: -18.625011444091797
    10. 'bases' → logprob: -18.875011444091797

Token 37: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0031936357263475657
    2. ')]' → logprob: -6.0031938552856445
    3. '])' → logprob: -7.3781938552856445
    4. ')' → logprob: -9.503193855285645
    5. ']}' → logprob: -12.253193855285645
    6. '']' → logprob: -12.753193855285645
    7. ' ]' → logprob: -13.003193855285645
    8. '])]' → logprob: -13.378193855285645
    9. '}]' → logprob: -13.503193855285645
    10. '}' → logprob: -13.628193855285645

Token 38: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6580405235290527
    2. 'print' → logprob: -1.5330405235290527
    3. 'result' → logprob: -2.2830405235290527
    4. ' for' → logprob: -3.1580405235290527
    5. 'n' → logprob: -3.4080405235290527
    6. '\' → logprob: -3.6580405235290527
    7. '\n' → logprob: -3.7830405235290527
    8. 'dna' → logprob: -4.658040523529053
    9. '(' → logprob: -5.408040523529053
    10. '#' → logprob: -5.408040523529053

Token 39: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.051441725343465805
    2. ' ' → logprob: -3.0514416694641113
    3. 'n' → logprob: -5.926441669464111
    4. ' "' → logprob: -9.92644214630127
    5. ' '' → logprob: -10.17644214630127
    6. ' ' → logprob: -11.05144214630127
    7. ' __' → logprob: -11.17644214630127
    8. ' len' → logprob: -11.30144214630127
    9. ' _' → logprob: -11.30144214630127
    10. ' isinstance' → logprob: -11.92644214630127

Token 40: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.786224365234375
    2. ':' → logprob: -2.161224365234375
    3. '>' → logprob: -2.286224365234375
    4. '.' → logprob: -2.536224365234375
    5. '==' → logprob: -2.536224365234375
    6. '[' → logprob: -2.786224365234375
    7. '.is' → logprob: -3.536224365234375
    8. ' >' → logprob: -3.661224365234375
    9. ' :' → logprob: -4.036224365234375
    10. ' !=' → logprob: -4.286224365234375

Token 41: ' not' (ID: 625)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4808282256126404
    2. ' "' → logprob: -1.6058282852172852
    3. ' not' → logprob: -2.480828285217285
    4. ' ' → logprob: -3.480828285217285
    5. ' '' → logprob: -3.480828285217285
    6. ''' → logprob: -3.605828285217285
    7. 'not' → logprob: -6.230828285217285
    8. '>' → logprob: -6.980828285217285
    9. '=' → logprob: -7.480828285217285
    10. ' a' → logprob: -7.480828285217285

Token 42: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.0054245502687990665
    2. 'None' → logprob: -5.630424499511719
    3. '"' → logprob: -6.755424499511719
    4. ' "' → logprob: -7.880424499511719
    5. ' ' → logprob: -8.630424499511719
    6. ' '' → logprob: -9.505424499511719
    7. ''' → logprob: -11.130424499511719
    8. ' none' → logprob: -12.505424499511719
    9. '(None' → logprob: -13.755424499511719
    10. '_None' → logprob: -13.755424499511719

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011808235431089997
    2. ' :' → logprob: -6.876180648803711
    3. ' and' → logprob: -8.876180648803711
    4. ':
' → logprob: -12.501180648803711
    5. 'and' → logprob: -13.001180648803711
    6. '.' → logprob: -14.126180648803711
    7. '):' → logprob: -15.501180648803711
    8. '=' → logprob: -15.626180648803711
    9. ',' → logprob: -15.626180648803711
    10. '[:]' → logprob: -15.626180648803711

Token 44: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025103693827986717
    2. '   ' → logprob: -4.025103569030762
    3. ':
' → logprob: -6.025103569030762
    4. ' :' → logprob: -6.525103569030762
    5. '    
' → logprob: -7.025103569030762
    6. '[' → logprob: -7.150103569030762
    7. ' n' → logprob: -8.400103569030762
    8. 'n' → logprob: -8.900103569030762
    9. '\n' → logprob: -8.900103569030762
    10. ' print' → logprob: -9.275103569030762

Token 45: ' for' (ID: 395)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6679080724716187
    2. ' for' → logprob: -1.5429080724716187
    3. ' n' → logprob: -2.292908191680908
    4. ' result' → logprob: -2.917908191680908
    5. ' dna' → logprob: -3.167908191680908
    6. ' s' → logprob: -3.667908191680908
    7. '   ' → logprob: -3.792908191680908
    8. 'print' → logprob: -5.042908191680908
    9. ' r' → logprob: -6.292908191680908
    10. 'n' → logprob: -6.417908191680908

Token 46: ' b' (ID: 287)
  Prédit: ' base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.4230923354625702
    2. ' b' → logprob: -1.4230923652648926
    3. ' ' → logprob: -3.1730923652648926
    4. ' c' → logprob: -3.2980923652648926
    5. ' _' → logprob: -4.423092365264893
    6. ' i' → logprob: -4.673092365264893
    7. 'base' → logprob: -6.548092365264893
    8. 'b' → logprob: -7.298092365264893
    9. ' char' → logprob: -7.548092365264893
    10. ' x' → logprob: -8.423091888427734

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1392955631017685
    2. 'ase' → logprob: -2.1392955780029297
    3. 'in' → logprob: -4.51429557800293
    4. 'a' → logprob: -7.01429557800293
    5. '  ' → logprob: -9.51429557800293
    6. 'ases' → logprob: -9.63929557800293
    7. ' ' → logprob: -9.63929557800293
    8. '   ' → logprob: -9.88929557800293
    9. 'i' → logprob: -9.88929557800293
    10. 'b' → logprob: -10.38929557800293

Token 48: ' ["' (ID: 9129)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.47408226132392883
    2. 'n' → logprob: -0.9740822315216064
    3. ' ' → logprob: -12.849081993103027
    4. '	n' → logprob: -14.224081993103027
    5. 'range' → logprob: -14.474081993103027
    6. ' range' → logprob: -15.224081993103027
    7. '_n' → logprob: -15.474081993103027
    8. '(n' → logprob: -15.474081993103027
    9. '[n' → logprob: -15.974081993103027
    10. '   ' → logprob: -16.224082946777344

Token 49: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2683989107608795
    2. 'n' → logprob: -1.8933988809585571
    3. 'AC' → logprob: -2.8933990001678467
    4. 'AT' → logprob: -3.8933990001678467
    5. 'AG' → logprob: -5.018398761749268
    6. 'ACT' → logprob: -7.643398761749268
    7. 'C' → logprob: -7.768398761749268
    8. 'T' → logprob: -7.893398761749268
    9. '"' → logprob: -8.018399238586426
    10. 'G' → logprob: -9.018399238586426

Token 50: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.104073166847229
    2. '","' → logprob: -2.4790730476379395
    3. 'C' → logprob: -4.6040730476379395
    4. 'T' → logprob: -5.8540730476379395
    5. '"' → logprob: -6.9790730476379395
    6. ' ",' → logprob: -7.8540730476379395
    7. ',' → logprob: -8.229073524475098
    8. ' ","' → logprob: -8.604073524475098
    9. 'A' → logprob: -8.979073524475098
    10. ',",' → logprob: -9.604073524475098

Token 51: ' "' (ID: 392)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -1.1958917379379272
    2. ' T' → logprob: -1.4458917379379272
    3. ' "' → logprob: -1.5708917379379272
    4. '"' → logprob: -1.8208917379379272
    5. '"T' → logprob: -3.070891857147217
    6. ' n' → logprob: -3.945891857147217
    7. ' ' → logprob: -4.070891857147217
    8. 'n' → logprob: -5.570891857147217
    9. 'C' → logprob: -5.945891857147217
    10. ' C' → logprob: -6.195891857147217

Token 52: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.022271066904067993
    2. 'C' → logprob: -3.897271156311035
    3. 'G' → logprob: -6.397271156311035
    4. 'A' → logprob: -10.397271156311035
    5. ' T' → logprob: -11.897271156311035
    6. 'n' → logprob: -12.022271156311035
    7. '"' → logprob: -12.397271156311035
    8. 'a' → logprob: -12.959771156311035
    9. 't' → logprob: -13.022271156311035
    10. 'B' → logprob: -13.834771156311035

Token 53: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.005440789274871349
    2. 'C' → logprob: -6.255440711975098
    3. ',' → logprob: -6.380440711975098
    4. '"' → logprob: -6.630440711975098
    5. '","' → logprob: -8.005440711975098
    6. '"C' → logprob: -9.380440711975098
    7. ' ",' → logprob: -11.005440711975098
    8. 'G' → logprob: -11.505440711975098
    9. ',",' → logprob: -11.505440711975098
    10. ',"' → logprob: -11.755440711975098

Token 54: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6128302216529846
    2. ' "' → logprob: -0.9878302216529846
    3. '"C' → logprob: -2.48783016204834
    4. '"G' → logprob: -6.48783016204834
    5. ' ' → logprob: -7.36283016204834
    6. 'C' → logprob: -8.48783016204834
    7. ' C' → logprob: -8.61283016204834
    8. ''' → logprob: -9.48783016204834
    9. '"T' → logprob: -11.23783016204834
    10. ''C' → logprob: -11.48783016204834

Token 55: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.08259949833154678
    2. 'G' → logprob: -2.582599401473999
    3. '"C' → logprob: -6.082599639892578
    4. '"' → logprob: -6.832599639892578
    5. '"G' → logprob: -8.332599639892578
    6. ''C' → logprob: -10.082599639892578
    7. ' C' → logprob: -11.082599639892578
    8. ''' → logprob: -11.832599639892578
    9. '```' → logprob: -12.332599639892578
    10. '``' → logprob: -12.457599639892578

Token 56: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.0004834617720916867
    2. '"' → logprob: -8.500483512878418
    3. ',' → logprob: -8.500483512878418
    4. 'G' → logprob: -10.625483512878418
    5. '","' → logprob: -10.750483512878418
    6. ' ",' → logprob: -11.125483512878418
    7. '"G' → logprob: -12.250483512878418
    8. ',",' → logprob: -13.000483512878418
    9. '"",' → logprob: -13.375483512878418
    10. '"]' → logprob: -13.500483512878418

Token 57: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.46579110622406006
    2. ' "' → logprob: -1.21579110622406
    3. '"G' → logprob: -2.5907912254333496
    4. ' ' → logprob: -7.59079122543335
    5. 'G' → logprob: -8.840790748596191
    6. ' G' → logprob: -9.340790748596191
    7. ''' → logprob: -9.465790748596191
    8. ' '' → logprob: -10.090790748596191
    9. ')' → logprob: -11.090790748596191
    10. ' ' → logprob: -12.340790748596191

Token 58: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.00039980647852644324
    2. '"G' → logprob: -8.250399589538574
    3. '"' → logprob: -9.000399589538574
    4. ' G' → logprob: -11.875399589538574
    5. 'C' → logprob: -13.375399589538574
    6. ''' → logprob: -13.875399589538574
    7. 'g' → logprob: -14.000399589538574
    8. '```' → logprob: -14.312899589538574
    9. '``' → logprob: -14.812899589538574
    10. '"]' → logprob: -15.000399589538574

Token 59: '"]:
' (ID: 77026)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.053860630840063095
    2. ']:
' → logprob: -3.303860664367676
    3. '"]:' → logprob: -4.428860664367676
    4. ']' → logprob: -6.178860664367676
    5. '"]:
' → logprob: -6.678860664367676
    6. ' ]' → logprob: -8.553860664367676
    7. ']:
' → logprob: -9.553860664367676
    8. '"]' → logprob: -9.553860664367676
    9. ':' → logprob: -10.428860664367676
    10. '']:' → logprob: -10.928860664367676

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06760586053133011
    2. '   ' → logprob: -3.692605972290039
    3. ':' → logprob: -3.942605972290039
    4. ' ' → logprob: -4.942605972290039
    5. '    ' → logprob: -5.067605972290039
    6. '<|end|>' → logprob: -5.317605972290039
    7. '[' → logprob: -7.942605972290039
    8. ' if' → logprob: -8.192605972290039
    9. '      ' → logprob: -8.192605972290039
    10. '     ' → logprob: -8.692605972290039

Token 61: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2906301021575928
    2. '   ' → logprob: -1.5406301021575928
    3. 'print' → logprob: -2.1656301021575928
    4. ' n' → logprob: -2.2906301021575928
    5. '       ' → logprob: -2.4156301021575928
    6. ' print' → logprob: -2.4156301021575928
    7. 'if' (adapté à ' if') → logprob: -2.9156301021575928
    8. 'n' → logprob: -3.5406301021575928
    9. ' ' → logprob: -4.665630340576172
    10. '    ' → logprob: -4.790630340576172

Token 62: ' n' (ID: 297)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.4420698285102844
    2. ' n' → logprob: -1.0670697689056396
    3. 'n' → logprob: -5.192070007324219
    4. 'b' → logprob: -5.442070007324219
    5. ' dna' → logprob: -6.442070007324219
    6. ' ' → logprob: -6.817070007324219
    7. ' DNA' → logprob: -8.692070007324219
    8. ' base' → logprob: -9.442070007324219
    9. ' '' → logprob: -9.567070007324219
    10. 'dna' → logprob: -9.754570007324219

Token 63: ' ==' (ID: 951)
  Prédit: '.startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.6556382179260254
    2. ' ==' → logprob: -1.0306382179260254
    3. '==' → logprob: -2.9056382179260254
    4. '.' → logprob: -3.5306382179260254
    5. '.endswith' → logprob: -3.9056382179260254
    6. '[' → logprob: -4.280638217926025
    7. '.count' → logprob: -5.905638217926025
    8. ' .' → logprob: -6.905638217926025
    9. ' ' → logprob: -7.405638217926025
    10. '[-' → logprob: -8.030637741088867

Token 64: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.01897444576025009
    2. 'b' → logprob: -4.018974304199219
    3. ' ' → logprob: -7.268974304199219
    4. ' "' → logprob: -9.893974304199219
    5. ' dna' → logprob: -10.393974304199219
    6. '"' → logprob: -10.893974304199219
    7. 'dna' → logprob: -11.768974304199219
    8. '	b' → logprob: -12.518974304199219
    9. ' DNA' → logprob: -12.768974304199219
    10. '  ' → logprob: -12.893974304199219

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004172065819147974
    2. ' :' → logprob: -7.875417232513428
    3. ' or' → logprob: -10.87541675567627
    4. '):' → logprob: -11.62541675567627
    5. ':
' → logprob: -12.37541675567627
    6. ':return' → logprob: -12.62541675567627
    7. '>:' → logprob: -15.12541675567627
    8. ':def' → logprob: -15.25041675567627
    9. ':**' → logprob: -15.50041675567627
    10. ''s' → logprob: -15.75041675567627

Token 66: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7181627750396729
    2. '           ' → logprob: -0.7181627750396729
    3. ':
' → logprob: -4.093162536621094
    4. '":' → logprob: -5.968162536621094
    5. ' :' → logprob: -6.093162536621094
    6. '"' → logprob: -6.718162536621094
    7. ' True' → logprob: -8.218162536621094
    8. ' :
' → logprob: -8.468162536621094
    9. '():
' → logprob: -8.718162536621094
    10. ' or' → logprob: -8.843162536621094

Token 67: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5693318843841553
    2. 'print' (adapté à ' print') → logprob: -0.9443318843841553
    3. '               ' → logprob: -3.6943318843841553
    4. '           ' → logprob: -4.569332122802734
    5. ' dna' → logprob: -4.944332122802734
    6. ' break' → logprob: -6.944332122802734
    7. '       ' → logprob: -7.069332122802734
    8. 'dna' → logprob: -8.194332122802734
    9. 'break' → logprob: -8.944332122802734
    10. ' return' → logprob: -9.194332122802734

Token 68: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.18213865160942078
    2. '(' → logprob: -1.8071386814117432
    3. '("' → logprob: -6.432138442993164
    4. 'dna' → logprob: -7.432138442993164
    5. ' dna' → logprob: -9.682138442993164
    6. '('' → logprob: -9.682138442993164
    7. '(
' → logprob: -10.807138442993164
    8. '(n' → logprob: -11.557138442993164
    9. '(f' → logprob: -11.807138442993164
    10. '()' → logprob: -11.932138442993164

Token 69: 'na' (ID: 1503)
  Prédit: 'na'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'na' → logprob: -0.020079540088772774
    2. 'a' → logprob: -4.020079612731934
    3. 'n' → logprob: -6.270079612731934
    4. 'dna' → logprob: -11.145079612731934
    5. 'NA' → logprob: -12.020079612731934
    6. '```' → logprob: -12.770079612731934
    7. ')' → logprob: -13.645079612731934
    8. 'на' → logprob: -13.895079612731934
    9. 'o' → logprob: -13.895079612731934
    10. '   ' → logprob: -14.145079612731934

Token 70: '_comp' (ID: 34754)
  Prédit: '_comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comp' → logprob: -0.014206756837666035
    2. '_' → logprob: -4.264206886291504
    3. '_com' → logprob: -10.264206886291504
    4. '_c' → logprob: -12.389206886291504
    5. '_)' → logprob: -13.764206886291504
    6. '_co' → logprob: -14.014206886291504
    7. '_COMP' → logprob: -14.389206886291504
    8. ' _' → logprob: -15.014206886291504
    9. ')_' → logprob: -15.139206886291504
    10. 'Comp' → logprob: -15.514206886291504

Token 71: '(n' (ID: 2406)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.011768638156354427
    2. '(' → logprob: -4.761768817901611
    3. '(n' → logprob: -5.761768817901611
    4. '(
' → logprob: -14.136768341064453
    5. '('' → logprob: -14.136768341064453
    6. '(base' → logprob: -14.511768341064453
    7. '("("' → logprob: -14.886768341064453
    8. 'b' → logprob: -15.261768341064453
    9. ' (' → logprob: -15.386768341064453
    10. '(s' → logprob: -15.386768341064453

Token 72: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02328857034444809
    2. ')' → logprob: -3.7732884883880615
    3. '))
' → logprob: -10.64828872680664
    4. ')))' → logprob: -11.02328872680664
    5. ' ))' → logprob: -13.39828872680664
    6. '"))' → logprob: -14.77328872680664
    7. ')
' → logprob: -15.14828872680664
    8. ' )' → logprob: -15.77328872680664
    9. ' ' → logprob: -15.89828872680664
    10. '()))' → logprob: -16.02328872680664

Token 73: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004151768516749144
    2. ' break' → logprob: -6.004151821136475
    3. 'break' (adapté à ' break') → logprob: -6.504151821136475
    4. '       ' → logprob: -10.254151344299316
    5. '            ' → logprob: -10.254151344299316
    6. '<|end|>' → logprob: -10.254151344299316
    7. '	break' → logprob: -11.004151344299316
    8. '               ' → logprob: -11.254151344299316
    9. '   ' → logprob: -11.379151344299316
    10. '          ' → logprob: -11.504151344299316


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 72
Tokens correctement prédits (1ère position, stricte): 34
Tokens correctement prédits (1ère position, avec adaptation): 34
Tokens correctement prédits (top 10): 61
Précision stricte (1ère position): 47.22%
Précision adaptée (1ère position): 47.22%
Précision (top 10): 84.72%
================================================================================
