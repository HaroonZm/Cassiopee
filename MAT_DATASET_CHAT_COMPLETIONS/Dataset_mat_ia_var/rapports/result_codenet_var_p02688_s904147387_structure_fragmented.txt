================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:15:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_n_k():
    return map(int, input().split())

def initialize_sunuke(N):
    return [1]*N

def read_d():
    return int(input())

def read_A():
    return list(map(int, input().split()))

def update_sunuke_with_A(Sunuke, A):
    for ii in range(len(A)):
        set_sunuke_zero(Sunuke, A, ii)

def set_sunuke_zero(Sunuke, A, ii):
    Sunuke[A[ii]-1] = 0

def process_all_K(Sunuke, K):
    for i in range(K):
        process_single_input(Sunuke)

def process_single_input(Sunuke):
    d = read_d()
    A = read_A()
    update_sunuke_with_A(Sunuke, A)

def print_result(Sunuke):
    print(sum(Sunuke))

def main():
    N, K = read_n_k()
    Sunuke = initialize_sunuke(N)
    process_all_K(Sunuke, K)
    print_result(Sunuke)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_n' (ID: 2170)
  → Token d'amorce (pas de prédiction)

Token 3: '_k' (ID: 11637)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21190205216407776
    2. 'ext' → logprob: -1.9619020223617554
    3. '```' → logprob: -3.961902141571045
    4. '(_' → logprob: -4.836902141571045
    5. '_ext' → logprob: -5.086902141571045
    6. 'ame' → logprob: -5.461902141571045
    7. 'umber' → logprob: -5.836902141571045
    8. '(' → logprob: -5.961902141571045
    9. 'a' → logprob: -6.461902141571045
    10. '_a' → logprob: -6.586902141571045

Token 4: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4308147132396698
    2. '```' → logprob: -1.9308147430419922
    3. '():' → logprob: -2.555814743041992
    4. '()' → logprob: -3.180814743041992
    5. 'def' → logprob: -3.555814743041992
    6. '(x' → logprob: -5.055814743041992
    7. '(def' → logprob: -5.555814743041992
    8. 'g' → logprob: -5.555814743041992
    9. 'eys' → logprob: -5.680814743041992
    10. '(_' → logprob: -5.930814743041992

Token 5: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6504891514778137
    2. ':' → logprob: -1.150489091873169
    3. '   ' → logprob: -2.400489091873169
    4. '():' → logprob: -3.025489091873169
    5. '(' → logprob: -5.150489330291748
    6. '``' → logprob: -5.775489330291748
    7. '\' → logprob: -6.275489330291748
    8. '    
' → logprob: -6.650489330291748
    9. ''' → logprob: -6.775489330291748
    10. ':
' → logprob: -6.900489330291748

Token 6: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.49280622601509094
    2. 'n' → logprob: -1.2428061962127686
    3. 'x' → logprob: -3.2428061962127686
    4. '   ' → logprob: -3.4928061962127686
    5. 'r' → logprob: -4.867806434631348
    6. '```' → logprob: -5.117806434631348
    7. 'a' → logprob: -5.367806434631348
    8. 'data' → logprob: -5.992806434631348
    9. 'input' → logprob: -6.117806434631348
    10. 'read' → logprob: -6.742806434631348

Token 7: ' map' (ID: 4014)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4326229989528656
    2. ' ' → logprob: -1.557623028755188
    3. ' input' → logprob: -3.1826229095458984
    4. ' []' → logprob: -3.4326229095458984
    5. 'int' → logprob: -3.9326229095458984
    6. 'input' → logprob: -4.307622909545898
    7. ' map' → logprob: -4.682622909545898
    8. '"' → logprob: -4.682622909545898
    9. '  ' → logprob: -5.807622909545898
    10. ' None' → logprob: -5.932622909545898

Token 8: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08859238028526306
    2. '<|end|>' → logprob: -2.838592290878296
    3. '(lambda' → logprob: -4.338592529296875
    4. '(int' → logprob: -5.213592529296875
    5. '<|end|>' → logprob: -6.838592529296875
    6. '(token' → logprob: -6.963592529296875
    7. '```' → logprob: -7.088592529296875
    8. '(str' → logprob: -7.838592529296875
    9. '(space' → logprob: -7.963592529296875
    10. ' (' → logprob: -8.088592529296875

Token 9: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.47083669900894165
    2. ')' → logprob: -1.0958366394042969
    3. '(' → logprob: -3.845836639404297
    4. 'input' → logprob: -4.345836639404297
    5. ' input' → logprob: -6.845836639404297
    6. '(file' → logprob: -6.970836639404297
    7. '(read' → logprob: -7.095836639404297
    8. '(stdin' → logprob: -7.595836639404297
    9. '(user' → logprob: -7.720836639404297
    10. '(raw' → logprob: -7.845836639404297

Token 10: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20154821872711182
    2. ' input' → logprob: -1.7015482187271118
    3. ')' → logprob: -9.07654857635498
    4. '(input' → logprob: -11.20154857635498
    5. ' ' → logprob: -13.32654857635498
    6. ' )' → logprob: -13.70154857635498
    7. '	input' → logprob: -13.70154857635498
    8. '=input' → logprob: -14.07654857635498
    9. '<input' → logprob: -14.70154857635498
    10. 'raw' → logprob: -14.95154857635498

Token 11: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47544339299201965
    2. '())' → logprob: -0.9754433631896973
    3. '('' → logprob: -8.100443840026855
    4. '().' → logprob: -8.100443840026855
    5. '(()' → logprob: -8.725443840026855
    6. '()))' → logprob: -9.225443840026855
    7. '());' → logprob: -9.350443840026855
    8. '();)' → logprob: -9.475443840026855
    9. '()`' → logprob: -9.975443840026855
    10. ')' → logprob: -9.975443840026855

Token 12: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0024819616228342056
    2. 'strip' → logprob: -6.002481937408447
    3. 'rstrip' → logprob: -12.252482414245605
    4. 'read' → logprob: -13.877482414245605
    5. ' split' → logprob: -14.752482414245605
    6. '(split' → logprob: -16.37748146057129
    7. ')' → logprob: -16.50248146057129
    8. 'spl' → logprob: -17.00248146057129
    9. '_split' → logprob: -17.62748146057129
    10. 'startswith' → logprob: -18.62748146057129

Token 13: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04275890812277794
    2. '()))' → logprob: -3.2927589416503906
    3. '()' → logprob: -5.542758941650391
    4. ')' → logprob: -7.417758941650391
    5. '))' → logprob: -9.29275894165039
    6. '(' → logprob: -9.79275894165039
    7. ' ())' → logprob: -11.16775894165039
    8. '()),' → logprob: -12.16775894165039
    9. '())))' → logprob: -12.66775894165039
    10. '`()' → logprob: -12.79275894165039

Token 14: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9748167395591736
    2. '(n' → logprob: -1.8498167991638184
    3. '(' → logprob: -2.0998167991638184
    4. '()' → logprob: -2.0998167991638184
    5. 'n' → logprob: -2.8498167991638184
    6. '\n' → logprob: -3.0998167991638184
    7. '```' → logprob: -3.2248167991638184
    8. '(
' → logprob: -3.3498167991638184
    9. '()

' → logprob: -4.849816799163818
    10. '#' → logprob: -5.224816799163818

Token 15: ' initialize' (ID: 18400)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7784284353256226
    2. ' read' → logprob: -1.7784284353256226
    3. ' solve' → logprob: -1.7784284353256226
    4. ' calculate' → logprob: -2.403428554534912
    5. ' process' → logprob: -3.278428554534912
    6. ' find' → logprob: -3.403428554534912
    7. ' write' → logprob: -4.278428554534912
    8. ' count' → logprob: -4.528428554534912
    9. ' compute' → logprob: -5.403428554534912
    10. ' reverse' → logprob: -6.778428554534912

Token 16: '_s' (ID: 1278)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10189887136220932
    2. '(' → logprob: -2.3518989086151123
    3. '_(' → logprob: -8.351899147033691
    4. '(_' → logprob: -8.601899147033691
    5. '_parameters' → logprob: -8.601899147033691
    6. '```' → logprob: -8.726899147033691
    7. '_variables' → logprob: -9.351899147033691
    8. '()' → logprob: -9.851899147033691
    9. '(_)' → logprob: -10.226899147033691
    10. '_data' → logprob: -10.351899147033691

Token 17: 'un' (ID: 373)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.5644975304603577
    2. '_' → logprob: -1.189497470855713
    3. 'e' → logprob: -3.689497470855713
    4. 'ets' → logprob: -3.814497470855713
    5. '()' → logprob: -3.939497470855713
    6. 'tring' → logprob: -4.064497470855713
    7. '(' → logprob: -4.439497470855713
    8. 't' → logprob: -4.564497470855713
    9. '():' → logprob: -4.814497470855713
    10. '_set' → logprob: -5.564497470855713

Token 18: 'uke' (ID: 10307)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.7255827784538269
    2. '_set' → logprob: -2.6005828380584717
    3. '_' → logprob: -2.9755828380584717
    4. 'flower' → logprob: -2.9755828380584717
    5. 'spots' → logprob: -3.1005828380584717
    6. 's' → logprob: -3.3505828380584717
    7. '_screen' → logprob: -3.9755828380584717
    8. '()' → logprob: -3.9755828380584717
    9. 'sets' → logprob: -4.100582599639893
    10. '_cells' → logprob: -4.100582599639893

Token 19: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13142205774784088
    2. '_s' → logprob: -2.8814220428466797
    3. '_' → logprob: -3.2564220428466797
    4. '()' → logprob: -4.63142204284668
    5. 's' → logprob: -4.75642204284668
    6. '(_)' → logprob: -5.63142204284668
    7. '_sat' → logprob: -7.50642204284668
    8. '```' → logprob: -7.63142204284668
    9. '_names' → logprob: -7.88142204284668
    10. '_name' → logprob: -8.13142204284668

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11717455089092255
    2. ',' → logprob: -2.3671746253967285
    3. ')' → logprob: -4.1171746253967285
    4. ',K' → logprob: -9.49217414855957
    5. ',k' → logprob: -9.61717414855957
    6. ' ):' → logprob: -9.74217414855957
    7. 's' → logprob: -9.99217414855957
    8. ',s' → logprob: -10.49217414855957
    9. '):
' → logprob: -10.61717414855957
    10. '_' → logprob: -10.61717414855957

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04788751155138016
    2. ':' → logprob: -3.7978875637054443
    3. '_s' → logprob: -5.047887325286865
    4. '[]' → logprob: -5.797887325286865
    5. '():' → logprob: -5.797887325286865
    6. 's' → logprob: -6.547887325286865
    7. '(' → logprob: -6.672887325286865
    8. ',' → logprob: -6.797887325286865
    9. '_list' → logprob: -6.922887325286865
    10. '_' → logprob: -6.922887325286865

Token 22: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0171983242034912
    2. ' [' → logprob: -1.5171983242034912
    3. '   ' → logprob: -1.5171983242034912
    4. ' return' → logprob: -2.392198324203491
    5. 'return' (adapté à ' return') → logprob: -3.142198324203491
    6. 's' → logprob: -3.892198324203491
    7. ' []' → logprob: -4.64219856262207
    8. '[]' → logprob: -4.76719856262207
    9. ' set' → logprob: -5.14219856262207
    10. 'set' → logprob: -5.26719856262207

Token 23: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003658983623608947
    2. ' [' → logprob: -6.753658771514893
    3. '[N' → logprob: -7.378658771514893
    4. '[]' → logprob: -7.503658771514893
    5. 'set' → logprob: -7.878658771514893
    6. '{' → logprob: -8.00365924835205
    7. '[-' → logprob: -8.50365924835205
    8. '{}' → logprob: -9.50365924835205
    9. '[n' → logprob: -9.50365924835205
    10. '[[' → logprob: -9.62865924835205

Token 24: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23636537790298462
    2. 'False' → logprob: -1.6113653182983398
    3. 'True' → logprob: -5.73636531829834
    4. '[]' → logprob: -5.98636531829834
    5. '1' → logprob: -6.48636531829834
    6. '-' → logprob: -6.98636531829834
    7. '[' → logprob: -7.11136531829834
    8. 'i' → logprob: -7.61136531829834
    9. ' ' → logprob: -8.23636531829834
    10. '(' → logprob: -8.61136531829834

Token 25: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012276175431907177
    2. ']*' → logprob: -4.8872761726379395
    3. ' for' → logprob: -5.5122761726379395
    4. ']*(' → logprob: -8.262276649475098
    5. ' ]' → logprob: -8.512276649475098
    6. 'for' → logprob: -9.887276649475098
    7. ')' → logprob: -10.512276649475098
    8. ']+' → logprob: -10.512276649475098
    9. ',' → logprob: -10.887276649475098
    10. ' ' → logprob: -11.762276649475098

Token 26: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0019619399681687355
    2. '(N' → logprob: -6.251961708068848
    3. '(' → logprob: -10.376961708068848
    4. ' N' → logprob: -13.251961708068848
    5. ' (' → logprob: -14.876961708068848
    6. '	N' → logprob: -17.501962661743164
    7. '0' → logprob: -18.501962661743164
    8. '100' → logprob: -18.501962661743164
    9. '_N' → logprob: -18.626962661743164
    10. 'n' → logprob: -19.501962661743164

Token 27: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7836735844612122
    2. '<|end|>' → logprob: -1.2836735248565674
    3. 'def' → logprob: -1.5336735248565674
    4. '

' → logprob: -3.4086735248565674
    5. '<|end|>' → logprob: -4.6586737632751465
    6. '\n' → logprob: -6.1586737632751465
    7. '```' → logprob: -6.1586737632751465
    8. '[' → logprob: -7.5336737632751465
    9. '
' → logprob: -7.5336737632751465
    10. '\' → logprob: -7.6586737632751465

Token 28: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.022235386073589325
    2. '
' → logprob: -4.39723539352417
    3. '

' → logprob: -4.77223539352417
    4. '<|end|>' → logprob: -7.02223539352417
    5. '```' → logprob: -8.897234916687012
    6. ' def' → logprob: -9.647234916687012
    7. '<|end|>' → logprob: -9.772234916687012
    8. '\' → logprob: -11.397234916687012
    9. '
' → logprob: -11.522234916687012
    10. '\n' → logprob: -12.022234916687012

Token 29: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.13194839656352997
    2. ' solve' → logprob: -2.381948471069336
    3. ' count' → logprob: -5.256948471069336
    4. ' process' → logprob: -5.506948471069336
    5. ' calculate' → logprob: -5.506948471069336
    6. ' update' → logprob: -6.381948471069336
    7. ' max' → logprob: -6.381948471069336
    8. ' read' → logprob: -6.381948471069336
    9. ' find' → logprob: -6.506948471069336
    10. ' apply' → logprob: -7.131948471069336

Token 30: '_d' (ID: 1565)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.8734029531478882
    2. '_' → logprob: -2.4984030723571777
    3. '_m' → logprob: -2.8734030723571777
    4. '_s' → logprob: -2.8734030723571777
    5. '_int' → logprob: -2.8734030723571777
    6. '_a' → logprob: -3.1234030723571777
    7. '_input' → logprob: -3.7484030723571777
    8. '_pairs' → logprob: -3.8734030723571777
    9. '_n' → logprob: -3.9984030723571777
    10. '()' → logprob: -4.248403072357178

Token 31: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014547400176525116
    2. '_list' → logprob: -5.389547348022461
    3. '_i' → logprob: -6.639547348022461
    4. '_' → logprob: -6.764547348022461
    5. '_array' → logprob: -6.889547348022461
    6. 'i' → logprob: -7.139547348022461
    7. '():' → logprob: -7.764547348022461
    8. 'is' → logprob: -8.014547348022461
    9. '():
' → logprob: -8.264547348022461
    10. ' ()' → logprob: -8.389547348022461

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3632517457008362
    2. '()' → logprob: -1.3632516860961914
    3. ' ()' → logprob: -3.9882516860961914
    4. '():' → logprob: -4.238251686096191
    5. '()
' → logprob: -4.613251686096191
    6. '():
' → logprob: -6.238251686096191
    7. 'def' → logprob: -7.238251686096191
    8. ' ' → logprob: -7.488251686096191
    9. '```' → logprob: -7.488251686096191
    10. '[]' → logprob: -7.988251686096191

Token 33: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07722490280866623
    2. '   ' → logprob: -3.0772249698638916
    3. ' return' → logprob: -3.5772249698638916
    4. 'int' → logprob: -9.702224731445312
    5. ' ' → logprob: -10.327224731445312
    6. 'd' → logprob: -10.327224731445312
    7. '[]' → logprob: -10.452224731445312
    8. 'eturn' → logprob: -10.452224731445312
    9. 'def' → logprob: -10.577224731445312
    10. 'input' → logprob: -11.077224731445312

Token 34: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2699512541294098
    2. 'map' → logprob: -2.269951343536377
    3. 'list' → logprob: -2.769951343536377
    4. '[int' → logprob: -2.894951343536377
    5. ' map' → logprob: -5.269951343536377
    6. ' int' → logprob: -5.394951343536377
    7. 'input' → logprob: -6.394951343536377
    8. ' list' → logprob: -6.769951343536377
    9. '[]' → logprob: -6.769951343536377
    10. '[' → logprob: -7.519951343536377

Token 35: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.38689956068992615
    2. '(' → logprob: -1.1368995904922485
    3. ' (' → logprob: -11.261899948120117
    4. 'input' → logprob: -13.011899948120117
    5. '(

' → logprob: -13.011899948120117
    6. '()' → logprob: -13.261899948120117
    7. '(
' → logprob: -13.636899948120117
    8. '(in' → logprob: -13.761899948120117
    9. '(int' → logprob: -13.886899948120117
    10. '(open' → logprob: -14.136899948120117

Token 36: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002924587344750762
    2. '()' → logprob: -5.87792444229126
    3. ')' → logprob: -9.377924919128418
    4. '()))' → logprob: -10.877924919128418
    5. ' ())' → logprob: -12.002924919128418
    6. '().' → logprob: -12.127924919128418
    7. '(' → logprob: -13.502924919128418
    8. '())
' → logprob: -13.627924919128418
    9. '();)' → logprob: -13.877924919128418
    10. '()),' → logprob: -15.502924919128418

Token 37: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07844484597444534
    2. '<|end|>' → logprob: -3.2034449577331543
    3. '\n' → logprob: -4.578444957733154
    4. 'd' → logprob: -4.953444957733154
    5. '\' → logprob: -5.328444957733154
    6. '
' → logprob: -5.453444957733154
    7. '

' → logprob: -5.828444957733154
    8. '```' → logprob: -6.578444957733154
    9. '<|end|>' → logprob: -6.578444957733154
    10. 'n' → logprob: -7.453444957733154

Token 38: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.08361118286848068
    2. ' solve' → logprob: -3.208611249923706
    3. 'main' → logprob: -5.083611011505127
    4. '_' → logprob: -5.208611011505127
    5. ' process' → logprob: -5.333611011505127
    6. ' update' → logprob: -5.708611011505127
    7. 'solve' → logprob: -5.958611011505127
    8. '_main' → logprob: -6.208611011505127
    9. '_s' → logprob: -6.458611011505127
    10. ' apply' → logprob: -6.583611011505127

Token 39: '_A' (ID: 6829)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.0670456886291504
    2. '_s' → logprob: -1.3170456886291504
    3. '_n' → logprob: -1.9420456886291504
    4. '_a' → logprob: -2.3170456886291504
    5. '_m' → logprob: -3.3170456886291504
    6. '_' → logprob: -3.5670456886291504
    7. '_i' → logprob: -4.06704568862915
    8. '_d' → logprob: -4.06704568862915
    9. '_t' → logprob: -4.69204568862915
    10. '_p' → logprob: -4.94204568862915

Token 40: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0008345239912159741
    2. '()' → logprob: -7.2508344650268555
    3. '_' → logprob: -10.000834465026855
    4. ' ():' → logprob: -11.125834465026855
    5. '_list' → logprob: -11.375834465026855
    6. '(' → logprob: -11.500834465026855
    7. '()>' → logprob: -11.875834465026855
    8. ' ()' → logprob: -12.125834465026855
    9. 's' → logprob: -12.375834465026855
    10. '[]' → logprob: -12.500834465026855

Token 41: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05870067700743675
    2. 'return' → logprob: -3.4337005615234375
    3. '   ' → logprob: -4.3087005615234375
    4. '():' → logprob: -5.5587005615234375
    5. ' return' → logprob: -6.0587005615234375
    6. '()
' → logprob: -6.1837005615234375
    7. '():
' → logprob: -6.4337005615234375
    8. '[]' → logprob: -7.4337005615234375
    9. ' ()' → logprob: -7.6837005615234375
    10. 'map' → logprob: -9.558700561523438

Token 42: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.09109502285718918
    2. 'list' → logprob: -2.716094970703125
    3. '   ' → logprob: -4.341094970703125
    4. 'map' → logprob: -5.091094970703125
    5. ' return' → logprob: -6.466094970703125
    6. 'int' → logprob: -9.716094970703125
    7. ' list' → logprob: -9.841094970703125
    8. '[]' → logprob: -10.216094970703125
    9. '  ' → logprob: -11.091094970703125
    10. '```' → logprob: -11.341094970703125

Token 43: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.7964013814926147
    2. 'list' → logprob: -0.7964013814926147
    3. 'map' → logprob: -2.9214015007019043
    4. ' map' → logprob: -3.1714015007019043
    5. 'int' → logprob: -6.796401500701904
    6. ' int' → logprob: -8.296401023864746
    7. '[int' → logprob: -8.296401023864746
    8. ' [' → logprob: -8.796401023864746
    9. '[]' → logprob: -8.921401023864746
    10. '[' → logprob: -9.046401023864746

Token 44: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.11887636035680771
    2. '(' → logprob: -2.2438764572143555
    3. '(int' → logprob: -5.3688764572143555
    4. '(input' → logprob: -6.7438764572143555
    5. '()' → logprob: -9.868876457214355
    6. '(range' → logprob: -10.618876457214355
    7. '(s' → logprob: -10.743876457214355
    8. '(eval' → logprob: -10.993876457214355
    9. '_map' → logprob: -11.493876457214355
    10. ' (' → logprob: -11.618876457214355

Token 45: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000667044660076499
    2. 'int' → logprob: -8.125666618347168
    3. '(' → logprob: -8.250666618347168
    4. '<int' → logprob: -9.875666618347168
    5. '[int' → logprob: -10.125666618347168
    6. ',int' → logprob: -12.125666618347168
    7. '(lambda' → logprob: -12.500666618347168
    8. '=int' → logprob: -12.625666618347168
    9. ']int' → logprob: -13.375666618347168
    10. '<|end|>' → logprob: -13.500666618347168

Token 46: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.5625922083854675
    2. ',' → logprob: -0.9375922083854675
    3. '(input' → logprob: -3.3125922679901123
    4. '(' → logprob: -6.312592029571533
    5. '(),' → logprob: -8.437592506408691
    6. ' ,' → logprob: -8.937592506408691
    7. ',(' → logprob: -10.312592506408691
    8. '),' → logprob: -10.562592506408691
    9. 'input' → logprob: -10.687592506408691
    10. ')' → logprob: -11.812592506408691

Token 47: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014166681095957756
    2. ' input' → logprob: -4.264166831970215
    3. ',input' → logprob: -13.389166831970215
    4. '(input' → logprob: -14.389166831970215
    5. ')' → logprob: -14.889166831970215
    6. ' ' → logprob: -15.389166831970215
    7. '	input' → logprob: -15.389166831970215
    8. 'lambda' → logprob: -16.0141658782959
    9. '=input' → logprob: -16.1391658782959
    10. '<input' → logprob: -16.8891658782959

Token 48: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.160971628967673e-05
    2. '()' → logprob: -9.500082015991211
    3. '()))' → logprob: -12.250082015991211
    4. '())' → logprob: -14.875082015991211
    5. '.' → logprob: -15.250082015991211
    6. '(' → logprob: -15.250082015991211
    7. ')' → logprob: -15.250082015991211
    8. ' ().' → logprob: -15.375082015991211
    9. '().'' → logprob: -15.750082015991211
    10. '().__' → logprob: -16.37508201599121

Token 49: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.729906196298543e-06
    2. 'strip' → logprob: -11.625009536743164
    3. ' split' → logprob: -14.875009536743164
    4. 'rstrip' → logprob: -15.125009536743164
    5. 'spl' → logprob: -17.250009536743164
    6. '(split' → logprob: -18.000009536743164
    7. ')' → logprob: -19.375009536743164
    8. 'read' → logprob: -20.250009536743164
    9. 'startswith' → logprob: -20.500009536743164
    10. 's' → logprob: -20.625009536743164

Token 50: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4790155589580536
    2. '()))' → logprob: -0.979015588760376
    3. '())' → logprob: -6.229015350341797
    4. '()' → logprob: -6.479015350341797
    5. ')' → logprob: -6.604015350341797
    6. '(' → logprob: -10.229015350341797
    7. ')))' → logprob: -11.104015350341797
    8. '()))
' → logprob: -12.729015350341797
    9. '()));' → logprob: -12.979015350341797
    10. ' ))' → logprob: -13.229015350341797

Token 51: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10508909821510315
    2. '
' → logprob: -3.3550891876220703
    3. '```' → logprob: -3.9800891876220703
    4. '#' → logprob: -4.23008918762207
    5. '\' → logprob: -4.60508918762207
    6. '<|end|>' → logprob: -4.85508918762207
    7. '\n' → logprob: -4.98008918762207
    8. 'd' → logprob: -6.23008918762207
    9. 'n' → logprob: -6.48008918762207
    10. '

' → logprob: -6.98008918762207

Token 52: ' update' (ID: 4027)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4649944603443146
    2. ' solve' → logprob: -1.3399944305419922
    3. ' update' → logprob: -3.464994430541992
    4. ' read' → logprob: -3.964994430541992
    5. ' process' → logprob: -3.964994430541992
    6. ' count' → logprob: -4.964994430541992
    7. ' calculate' → logprob: -5.089994430541992
    8. ' apply' → logprob: -5.589994430541992
    9. ' check' → logprob: -5.839994430541992
    10. ' find' → logprob: -5.839994430541992

Token 53: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.05230329558253288
    2. '_' → logprob: -3.3023033142089844
    3. '_(' → logprob: -4.427303314208984
    4. '(' → logprob: -7.927303314208984
    5. '_S' → logprob: -8.052303314208984
    6. '_sat' → logprob: -8.177303314208984
    7. '(_' → logprob: -9.052303314208984
    8. '_a' → logprob: -9.302303314208984
    9. '_sub' → logprob: -9.427303314208984
    10. '```' → logprob: -9.552303314208984

Token 54: 'un' (ID: 373)
  Prédit: 'un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.010029704309999943
    2. '_un' → logprob: -4.7600297927856445
    3. '(un' → logprob: -7.3850297927856445
    4. 'unene' → logprob: -8.385029792785645
    5. '_' → logprob: -8.510029792785645
    6. '	un' → logprob: -8.760029792785645
    7. 'u' → logprob: -9.010029792785645
    8. 'uneka' → logprob: -10.635029792785645
    9. '```' → logprob: -11.635029792785645
    10. '   ' → logprob: -12.260029792785645

Token 55: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -0.0032475856132805347
    2. '_' → logprob: -6.3782477378845215
    3. 'uk' → logprob: -7.0032477378845215
    4. 'u' → logprob: -8.128247261047363
    5. '_u' → logprob: -9.128247261047363
    6. '(' → logprob: -10.128247261047363
    7. '```' → logprob: -10.378247261047363
    8. '   ' → logprob: -10.878247261047363
    9. '_s' → logprob: -11.128247261047363
    10. '__' → logprob: -11.128247261047363

Token 56: '_with' (ID: 14161)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30718666315078735
    2. '_s' → logprob: -1.4321866035461426
    3. 's' → logprob: -5.057186603546143
    4. '_' → logprob: -5.307186603546143
    5. '(_' → logprob: -5.307186603546143
    6. '(s' → logprob: -5.932186603546143
    7. '(N' → logprob: -5.932186603546143
    8. '(S' → logprob: -6.807186603546143
    9. '_(' → logprob: -6.807186603546143
    10. '(_)' → logprob: -7.307186603546143

Token 57: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.10336428880691528
    2. '_d' → logprob: -3.3533642292022705
    3. '(A' → logprob: -3.9783642292022705
    4. '_s' → logprob: -4.72836446762085
    5. '_' → logprob: -4.85336446762085
    6. '_a' → logprob: -5.10336446762085
    7. '_D' → logprob: -5.10336446762085
    8. 'A' → logprob: -5.72836446762085
    9. '(' → logprob: -6.72836446762085
    10. '_indices' → logprob: -6.97836446762085

Token 58: '(S' (ID: 6181)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019402218982577324
    2. '(A' → logprob: -4.144402027130127
    3. '(N' → logprob: -5.894402027130127
    4. '(S' → logprob: -9.394402503967285
    5. 's' → logprob: -9.519402503967285
    6. '()' → logprob: -9.644402503967285
    7. '(s' → logprob: -9.644402503967285
    8. '(_' → logprob: -10.019402503967285
    9. '((' → logprob: -10.019402503967285
    10. '("("' → logprob: -10.269402503967285

Token 59: 'un' (ID: 373)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10427596420049667
    2. '):' → logprob: -2.979275941848755
    3. ',A' → logprob: -3.979275941848755
    4. '[' → logprob: -5.354276180267334
    5. ',_' → logprob: -5.729276180267334
    6. ')' → logprob: -5.729276180267334
    7. 'u' → logprob: -5.979276180267334
    8. '_,' → logprob: -6.104276180267334
    9. ' ,' → logprob: -6.729276180267334
    10. 'a' → logprob: -6.979276180267334

Token 60: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -0.0033393139019608498
    2. 'u' → logprob: -6.2533392906188965
    3. 'uk' → logprob: -6.8783392906188965
    4. '_' → logprob: -9.128339767456055
    5. '_u' → logprob: -9.753339767456055
    6. 'ke' → logprob: -10.128339767456055
    7. '```' → logprob: -10.503339767456055
    8. 'ukke' → logprob: -10.628339767456055
    9. 'e' → logprob: -11.128339767456055
    10. ' uke' → logprob: -11.128339767456055

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018184591084718704
    2. ',A' → logprob: -4.393184661865234
    3. ' ,' → logprob: -6.143184661865234
    4. ',S' → logprob: -6.643184661865234
    5. ',s' → logprob: -7.393184661865234
    6. ',N' → logprob: -7.518184661865234
    7. '[' → logprob: -8.018184661865234
    8. 'A' → logprob: -9.268184661865234
    9. '_,' → logprob: -9.518184661865234
    10. 's' → logprob: -9.643184661865234

Token 62: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.28154894709587097
    2. 'A' → logprob: -1.4065489768981934
    3. ' ' → logprob: -9.656548500061035
    4. ' a' → logprob: -9.844048500061035
    5. '   ' → logprob: -9.906548500061035
    6. ')' → logprob: -10.031548500061035
    7. 'a' → logprob: -10.156548500061035
    8. '	A' → logprob: -10.719048500061035
    9. ' )' → logprob: -11.156548500061035
    10. ' i' → logprob: -11.406548500061035

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009565542452037334
    2. ',' → logprob: -5.259565353393555
    3. ')):' → logprob: -6.009565353393555
    4. ')' → logprob: -6.884565353393555
    5. ' ):' → logprob: -7.884565353393555
    6. '[' → logprob: -9.259565353393555
    7. '))' → logprob: -9.259565353393555
    8. '):
' → logprob: -9.384565353393555
    9. '[]):' → logprob: -10.259565353393555
    10. '   ' → logprob: -10.884565353393555

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07555074244737625
    2. ':' → logprob: -2.7005507946014404
    3. '```' → logprob: -5.950550556182861
    4. ' for' → logprob: -7.200550556182861
    5. '):' → logprob: -7.200550556182861
    6. '    
' → logprob: -7.950550556182861
    7. ':
' → logprob: -8.20055103302002
    8. ')' → logprob: -8.32555103302002
    9. '):
' → logprob: -9.32555103302002
    10. '[' → logprob: -9.45055103302002

Token 65: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4308501183986664
    2. 'for' (adapté à ' for') → logprob: -1.0558501482009888
    3. '   ' → logprob: -6.180850028991699
    4. '```' → logprob: -9.9308500289917
    5. '	for' → logprob: -10.8058500289917
    6. 'n' → logprob: -12.8058500289917
    7. ' ' → logprob: -14.0558500289917
    8. '`' → logprob: -14.3058500289917
    9. '[' → logprob: -14.3683500289917
    10. '``' → logprob: -15.0558500289917

Token 66: ' ii' (ID: 28354)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.33494824171066284
    2. ' a' → logprob: -1.3349483013153076
    3. 'i' → logprob: -5.0849480628967285
    4. ' ' → logprob: -5.3349480628967285
    5. 'a' → logprob: -5.4599480628967285
    6. ' _' → logprob: -5.7099480628967285
    7. '_' → logprob: -7.0849480628967285
    8. ' idx' → logprob: -7.2099480628967285
    9. ' index' → logprob: -7.8349480628967285
    10. '_i' → logprob: -8.209948539733887

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10312282294034958
    2. 'in' → logprob: -2.4781227111816406
    3. ',' → logprob: -4.353122711181641
    4. ' ' → logprob: -7.478122711181641
    5. 'n' → logprob: -8.47812271118164
    6. ' ,' → logprob: -8.72812271118164
    7. '_' → logprob: -9.35312271118164
    8. 's' → logprob: -9.60312271118164
    9. '_in' → logprob: -10.60312271118164
    10. 'i' → logprob: -10.97812271118164

Token 68: ' range' (ID: 3352)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7728787660598755
    2. ' A' → logprob: -1.1478787660598755
    3. ' range' → logprob: -1.8978787660598755
    4. 'range' → logprob: -2.647878646850586
    5. ' ' → logprob: -9.147878646850586
    6. '   ' → logprob: -10.272878646850586
    7. 'ange' → logprob: -10.522878646850586
    8. '	A' → logprob: -10.897878646850586
    9. '(range' → logprob: -11.210378646850586
    10. ' xrange' → logprob: -11.272878646850586

Token 69: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0009373087668791413
    2. '(' → logprob: -7.000937461853027
    3. '(A' → logprob: -11.250937461853027
    4. ' len' → logprob: -11.875937461853027
    5. 'len' → logprob: -12.375937461853027
    6. ' (' → logprob: -14.250937461853027
    7. '(length' → logprob: -15.625937461853027
    8. '(N' → logprob: -15.625937461853027
    9. '	len' → logprob: -15.625937461853027
    10. '(n' → logprob: -16.00093650817871

Token 70: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.02374187856912613
    2. '(S' → logprob: -3.7737419605255127
    3. '(' → logprob: -7.773741722106934
    4. '(s' → logprob: -10.023741722106934
    5. '_A' → logprob: -11.273741722106934
    6. 'A' → logprob: -11.648741722106934
    7. 'Sun' → logprob: -13.523741722106934
    8. ')' → logprob: -13.898741722106934
    9. '(a' → logprob: -14.023741722106934
    10. '_S' → logprob: -14.148741722106934

Token 71: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.009884879924356937
    2. '))' → logprob: -5.384884834289551
    3. '):' → logprob: -5.384884834289551
    4. ')):
' → logprob: -8.00988483428955
    5. ' ))' → logprob: -9.00988483428955
    6. ':' → logprob: -9.88488483428955
    7. ' ' → logprob: -10.00988483428955
    8. ')' → logprob: -10.38488483428955
    9. ' ):' → logprob: -10.38488483428955
    10. '()))' → logprob: -10.88488483428955

Token 72: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38728588819503784
    2. '       ' → logprob: -1.8872859477996826
    3. '   ' → logprob: -2.5122859477996826
    4. '):' → logprob: -2.6372859477996826
    5. '    ' → logprob: -5.5122857093811035
    6. ' :' → logprob: -5.5122857093811035
    7. '():' → logprob: -6.2622857093811035
    8. ' ):' → logprob: -6.5122857093811035
    9. ' ' → logprob: -6.8872857093811035
    10. '<|end|>' → logprob: -7.1372857093811035

Token 73: ' set' (ID: 920)
  Prédit: 'Sun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sun' → logprob: -0.18835048377513885
    2. '   ' → logprob: -2.4383504390716553
    3. 'if' → logprob: -3.4383504390716553
    4. 'index' → logprob: -4.188350677490234
    5. ' Sun' → logprob: -4.313350677490234
    6. 'idx' → logprob: -4.563350677490234
    7. ' if' → logprob: -5.438350677490234
    8. '       ' → logprob: -6.563350677490234
    9. ' idx' → logprob: -6.688350677490234
    10. 'S' → logprob: -6.938350677490234

Token 74: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.7095699906349182
    2. '_' → logprob: -2.2095699310302734
    3. '(' → logprob: -3.3345699310302734
    4. '_index' → logprob: -3.4595699310302734
    5. ')' → logprob: -3.5845699310302734
    6. '_size' → logprob: -3.7095699310302734
    7. '_idx' → logprob: -3.7095699310302734
    8. 's' → logprob: -3.9595699310302734
    9. '```' → logprob: -4.209569931030273
    10. 'sun' → logprob: -4.334569931030273

Token 75: 'un' (ID: 373)
  Prédit: 'un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.002763864118605852
    2. 'n' → logprob: -7.002763748168945
    3. 'u' → logprob: -7.002763748168945
    4. '_un' → logprob: -7.752763748168945
    5. 'uke' → logprob: -8.752763748168945
    6. '[' → logprob: -10.002763748168945
    7. '_s' → logprob: -10.502763748168945
    8. 's' → logprob: -10.627763748168945
    9. '(un' → logprob: -10.627763748168945
    10. 'up' → logprob: -10.877763748168945

Token 76: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -1.5332478142227046e-05
    2. 'uk' → logprob: -12.000015258789062
    3. 'u' → logprob: -12.625015258789062
    4. '_' → logprob: -12.875015258789062
    5. '[]' → logprob: -14.750015258789062
    6. 'ke' → logprob: -14.875015258789062
    7. '[' → logprob: -14.875015258789062
    8. ' uke' → logprob: -14.875015258789062
    9. '   ' → logprob: -15.375015258789062
    10. '```' → logprob: -15.500015258789062

Token 77: '_zero' (ID: 53468)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7136555910110474
    2. '[' → logprob: -1.4636555910110474
    3. '[S' → logprob: -2.338655471801758
    4. '_[' → logprob: -2.463655471801758
    5. '_S' → logprob: -4.088655471801758
    6. '_s' → logprob: -4.088655471801758
    7. '[_' → logprob: -4.338655471801758
    8. '(S' → logprob: -4.588655471801758
    9. '_value' → logprob: -4.713655471801758
    10. '```' → logprob: -5.338655471801758

Token 78: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.505609929561615
    2. '[' → logprob: -2.0056099891662598
    3. '_at' → logprob: -2.5056099891662598
    4. '_' → logprob: -2.6306099891662598
    5. '(' → logprob: -3.3806099891662598
    6. '[S' → logprob: -3.3806099891662598
    7. '_[' → logprob: -4.50560998916626
    8. '_(' → logprob: -5.00560998916626
    9. '_with' → logprob: -5.88060998916626
    10. '```' → logprob: -6.13060998916626

Token 79: 'un' (ID: 373)
  Prédit: 'un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -3.082895273109898e-05
    2. 'n' → logprob: -11.625030517578125
    3. '(un' → logprob: -11.750030517578125
    4. 'u' → logprob: -12.000030517578125
    5. '[' → logprob: -13.000030517578125
    6. 'unene' → logprob: -13.250030517578125
    7. 'unku' → logprob: -14.000030517578125
    8. '[]' → logprob: -14.250030517578125
    9. '_un' → logprob: -15.000030517578125
    10. 'on' → logprob: -15.000030517578125

Token 80: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -0.021395588293671608
    2. 'u' → logprob: -3.896395683288574
    3. 'uk' → logprob: -7.396395683288574
    4. 'ukke' → logprob: -8.646395683288574
    5. '_' → logprob: -10.271395683288574
    6. '(' → logprob: -12.521395683288574
    7. ' uke' → logprob: -12.521395683288574
    8. '[' → logprob: -12.646395683288574
    9. '_u' → logprob: -12.646395683288574
    10. '```' → logprob: -13.146395683288574

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00900771003216505
    2. '[' → logprob: -5.009007930755615
    3. ' ,' → logprob: -7.259007930755615
    4. ',[' → logprob: -7.384007930755615
    5. ',S' → logprob: -8.009007453918457
    6. ',A' → logprob: -8.384007453918457
    7. '[A' → logprob: -8.884007453918457
    8. ')' → logprob: -9.384007453918457
    9. '[S' → logprob: -10.009007453918457
    10. '(' → logprob: -10.134007453918457

Token 82: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.28126463294029236
    2. ' A' → logprob: -1.4062646627426147
    3. '	A' → logprob: -9.656264305114746
    4. ')' → logprob: -10.531264305114746
    5. '   ' → logprob: -12.156264305114746
    6. '(A' → logprob: -12.281264305114746
    7. ' ' → logprob: -12.531264305114746
    8. '[A' → logprob: -12.906264305114746
    9. '_A' → logprob: -13.656264305114746
    10. 'ii' → logprob: -13.781264305114746

Token 83: ',' (ID: 11)
  Prédit: '[ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[ii' → logprob: -0.0012752347392961383
    2. '[' → logprob: -7.126275062561035
    3. '[i' → logprob: -8.376275062561035
    4. ' [' → logprob: -8.626275062561035
    5. ')' → logprob: -10.751275062561035
    6. '[ix' → logprob: -11.251275062561035
    7. ')[' → logprob: -11.501275062561035
    8. '[I' → logprob: -12.876275062561035
    9. ' ' → logprob: -13.501275062561035
    10. '```' → logprob: -13.626275062561035

Token 84: ' ii' (ID: 28354)
  Prédit: ' ii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ii' → logprob: -0.524476170539856
    2. 'ii' → logprob: -0.899476170539856
    3. '[ii' → logprob: -6.649476051330566
    4. '(ii' → logprob: -10.149476051330566
    5. '[' → logprob: -12.774476051330566
    6. ')' → logprob: -12.899476051330566
    7. ' A' → logprob: -12.899476051330566
    8. ' )' → logprob: -13.149476051330566
    9. ' ' → logprob: -13.774476051330566
    10. 'A' → logprob: -13.899476051330566

Token 85: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001314295077463612
    2. ' )' → logprob: -9.125131607055664
    3. '   ' → logprob: -11.250131607055664
    4. ',' → logprob: -12.875131607055664
    5. '[' → logprob: -13.500131607055664
    6. ' ' → logprob: -13.625131607055664
    7. '       ' → logprob: -14.125131607055664
    8. ')
' → logprob: -14.250131607055664
    9. ']' → logprob: -14.625131607055664
    10. '),' → logprob: -14.875131607055664

Token 86: 'def' (ID: 1314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0976887121796608
    2. 'def' → logprob: -2.472688674926758
    3. '```' → logprob: -6.097688674926758
    4. '(' → logprob: -6.222688674926758
    5. '\' → logprob: -6.597688674926758
    6. ' ' → logprob: -7.472688674926758
    7. ')' → logprob: -7.722688674926758
    8. '_
' → logprob: -8.097688674926758
    9. '<|end|>' → logprob: -8.097688674926758
    10. '[' → logprob: -8.472688674926758

Token 87: ' set' (ID: 920)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7226095199584961
    2. ' set' → logprob: -1.347609519958496
    3. ' ' → logprob: -1.722609519958496
    4. ' update' → logprob: -2.847609519958496
    5. ' ' → logprob: -4.722609519958496
    6. ' _' → logprob: -5.472609519958496
    7. '_set' → logprob: -6.472609519958496
    8. 's' → logprob: -7.472609519958496
    9. ' space' → logprob: -7.722609519958496
    10. '  ' → logprob: -7.722609519958496

Token 88: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -2.248469718324486e-05
    2. '_' → logprob: -10.750022888183594
    3. 's' → logprob: -14.000022888183594
    4. '_sn' → logprob: -16.625022888183594
    5. '_a' → logprob: -17.500022888183594
    6. ' _' → logprob: -17.500022888183594
    7. 'underscore' → logprob: -18.375022888183594
    8. '_n' → logprob: -18.625022888183594
    9. '```' → logprob: -18.625022888183594
    10. 'sun' → logprob: -18.875022888183594

Token 89: 'un' (ID: 373)
  Prédit: 'un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.00017505438881926239
    2. 'u' → logprob: -9.250175476074219
    3. '_un' → logprob: -9.750175476074219
    4. 'unene' → logprob: -11.375175476074219
    5. '_' → logprob: -13.125175476074219
    6. '	un' → logprob: -13.625175476074219
    7. '```' → logprob: -13.875175476074219
    8. 'une' → logprob: -14.375175476074219
    9. '(un' → logprob: -14.375175476074219
    10. 'unu' → logprob: -14.625175476074219

Token 90: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -0.00016766376211307943
    2. 'uk' → logprob: -8.875167846679688
    3. 'u' → logprob: -10.875167846679688
    4. 'ukke' → logprob: -12.125167846679688
    5. '_' → logprob: -13.250167846679688
    6. 's' → logprob: -14.750167846679688
    7. 'k' → logprob: -15.500167846679688
    8. '_s' → logprob: -15.625167846679688
    9. '_take' → logprob: -15.875167846679688
    10. ' uke' → logprob: -16.125167846679688

Token 91: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -0.0005375436157919466
    2. '_' → logprob: -7.625537395477295
    3. '```' → logprob: -11.375537872314453
    4. '_s' → logprob: -11.875537872314453
    5. '0' → logprob: -12.250537872314453
    6. '__' → logprob: -12.625537872314453
    7. '_with' → logprob: -12.625537872314453
    8. '_one' → logprob: -13.125537872314453
    9. '_value' → logprob: -13.250537872314453
    10. '(_' → logprob: -13.750537872314453

Token 92: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.38687896728515625
    2. '(' → logprob: -1.1368789672851562
    3. '(s' → logprob: -12.511878967285156
    4. ' (' → logprob: -13.511878967285156
    5. '(
' → logprob: -13.886878967285156
    6. '(

' → logprob: -14.511878967285156
    7. '(A' → logprob: -15.386878967285156
    8. '_' → logprob: -15.636878967285156
    9. '()' → logprob: -16.136878967285156
    10. '```' → logprob: -16.511878967285156

Token 93: 'un' (ID: 373)
  Prédit: 'un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.00014299227041192353
    2. 'u' → logprob: -9.375143051147461
    3. '[' → logprob: -10.625143051147461
    4. 'unku' → logprob: -12.000143051147461
    5. ',' → logprob: -12.125143051147461
    6. '_un' → logprob: -12.500143051147461
    7. 'ун' → logprob: -12.750143051147461
    8. 'unce' → logprob: -12.750143051147461
    9. '(un' → logprob: -12.875143051147461
    10. 'unze' → logprob: -13.500143051147461

Token 94: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -2.558399319241289e-05
    2. 'u' → logprob: -11.125025749206543
    3. 'uk' → logprob: -11.500025749206543
    4. 'ukke' → logprob: -14.875025749206543
    5. '_' → logprob: -15.750025749206543
    6. ' uke' → logprob: -16.000024795532227
    7. '_u' → logprob: -16.875024795532227
    8. 'uket' → logprob: -18.250024795532227
    9. '__' → logprob: -18.875024795532227
    10. 'uken' → logprob: -19.000024795532227

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.407366916188039e-05
    2. ',A' → logprob: -10.000054359436035
    3. ' ,' → logprob: -11.750054359436035
    4. '[' → logprob: -15.625054359436035
    5. ')' → logprob: -15.875054359436035
    6. '[],' → logprob: -16.37505340576172
    7. ',int' → logprob: -16.50005340576172
    8. '‌,' → logprob: -16.87505340576172
    9. '[A' → logprob: -17.00005340576172
    10. ',S' → logprob: -17.25005340576172

Token 96: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3918565511703491
    2. 'A' → logprob: -1.2668565511703491
    3. ' idx' → logprob: -4.016856670379639
    4. ' index' → logprob: -4.641856670379639
    5. 'index' → logprob: -5.266856670379639
    6. 'idx' → logprob: -5.641856670379639
    7. 'i' → logprob: -6.391856670379639
    8. 'ii' → logprob: -6.641856670379639
    9. ' i' → logprob: -6.766856670379639
    10. ' ii' → logprob: -7.266856670379639

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026968008023686707
    2. ' ,' → logprob: -8.250269889831543
    3. ',index' → logprob: -13.000269889831543
    4. '[' → logprob: -13.375269889831543
    5. '   ' → logprob: -13.500269889831543
    6. ',i' → logprob: -14.000269889831543
    7. ',int' → logprob: -14.875269889831543
    8. '[ii' → logprob: -15.000269889831543
    9. '):' → logprob: -15.250269889831543
    10. ',n' → logprob: -15.500269889831543

Token 98: ' ii' (ID: 28354)
  Prédit: 'ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ii' → logprob: -0.07052161544561386
    2. ' ii' → logprob: -2.695521593093872
    3. 'i' → logprob: -7.570521831512451
    4. 'idx' → logprob: -11.070521354675293
    5. ' i' → logprob: -11.195521354675293
    6. ')' → logprob: -11.445521354675293
    7. 'index' → logprob: -11.695521354675293
    8. '   ' → logprob: -12.445521354675293
    9. 'iii' → logprob: -12.445521354675293
    10. 'jj' → logprob: -13.070521354675293

Token 99: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002661039761733264
    2. ' ):' → logprob: -9.125266075134277
    3. ',' → logprob: -9.500266075134277
    4. ')' → logprob: -9.750266075134277
    5. '):
' → logprob: -10.875266075134277
    6. '   ' → logprob: -13.000266075134277
    7. ']:' → logprob: -14.000266075134277
    8. ':' → logprob: -14.875266075134277
    9. '[' → logprob: -15.250266075134277
    10. '):
' → logprob: -15.625266075134277

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013511242344975471
    2. ' if' → logprob: -4.5135111808776855
    3. 'if' → logprob: -6.6385111808776855
    4. ' Sun' → logprob: -8.263511657714844
    5. '```' → logprob: -8.513511657714844
    6. 'Sun' → logprob: -8.763511657714844
    7. ' ' → logprob: -9.263511657714844
    8. '    
' → logprob: -9.388511657714844
    9. '(S' → logprob: -10.138511657714844
    10. 'index' → logprob: -10.138511657714844

Token 101: ' Sun' (ID: 11628)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -1.0765964984893799
    2. 'if' → logprob: -1.4515964984893799
    3. 'Sun' (adapté à ' Sun') → logprob: -1.7015964984893799
    4. 'idx' → logprob: -2.07659649848938
    5. ' index' → logprob: -3.45159649848938
    6. 'for' → logprob: -3.45159649848938
    7. ' if' → logprob: -4.076596260070801
    8. ' Sun' → logprob: -4.576596260070801
    9. ' idx' → logprob: -4.576596260070801
    10. 'i' → logprob: -5.076596260070801

Token 102: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -1.981667537620524e-06
    2. 'uk' → logprob: -14.000001907348633
    3. '[' → logprob: -15.000001907348633
    4. '```' → logprob: -15.625001907348633
    5. 'u' → logprob: -15.750001907348633
    6. ' uke' → logprob: -15.875001907348633
    7. '[]' → logprob: -16.250001907348633
    8. '_' → logprob: -16.625001907348633
    9. 's' → logprob: -17.125001907348633
    10. 'ukke' → logprob: -17.375001907348633

Token 103: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.3486740291118622
    2. '[' → logprob: -1.2236740589141846
    3. '[S' → logprob: -8.848673820495605
    4. ' [' → logprob: -10.223673820495605
    5. '[int' → logprob: -10.973673820495605
    6. '[
' → logprob: -11.723673820495605
    7. '[...]' → logprob: -12.223673820495605
    8. '```' → logprob: -12.223673820495605
    9. '\[' → logprob: -12.973673820495605
    10. '[a' → logprob: -13.348673820495605

Token 104: '[ii' (ID: 75075)
  Prédit: '[ii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ii' → logprob: -0.0001307142956648022
    2. '[' → logprob: -9.250130653381348
    3. '[A' → logprob: -11.250130653381348
    4. ' [' → logprob: -11.750130653381348
    5. '[i' → logprob: -12.625130653381348
    6. '[I' → logprob: -13.125130653381348
    7. 'ii' → logprob: -13.250130653381348
    8. '][' → logprob: -14.000130653381348
    9. ']' → logprob: -14.125130653381348
    10. '[-' → logprob: -14.250130653381348

Token 105: ']-' (ID: 27107)
  Prédit: '[ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ii' → logprob: -0.1267434060573578
    2. '[' → logprob: -2.7517433166503906
    3. ']-' → logprob: -3.3767433166503906
    4. '-' → logprob: -4.376743316650391
    5. ']' → logprob: -5.126743316650391
    6. ' -' → logprob: -6.376743316650391
    7. 'ii' → logprob: -8.62674331665039
    8. '[i' → logprob: -8.62674331665039
    9. '[-' → logprob: -9.00174331665039
    10. ' [' → logprob: -9.00174331665039

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.641841820150148e-05
    2. '<|end|>' → logprob: -11.00002670288086
    3. ' ' → logprob: -11.62502670288086
    4. '```' → logprob: -15.50002670288086
    5. '<|end|>' → logprob: -15.87502670288086
    6. '   ' → logprob: -16.00002670288086
    7. '0' → logprob: -16.56252670288086
    8. 'def' → logprob: -17.31252670288086
    9. 'to' → logprob: -17.50002670288086

Token 107: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008679220452904701
    2. ']=' → logprob: -4.758679389953613
    3. ' ]' → logprob: -10.008679389953613
    4. '=' → logprob: -10.883679389953613
    5. ']=-' → logprob: -15.383679389953613
    6. ' =' → logprob: -15.508679389953613
    7. ']==' → logprob: -15.633679389953613
    8. ']='' → logprob: -15.758679389953613
    9. ')' → logprob: -16.883678436279297
    10. ']
' → logprob: -16.883678436279297

Token 108: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.024604277219623e-05
    2. ' =' → logprob: -10.125040054321289
    3. '=

' → logprob: -17.12504005432129
    4. '=
' → logprob: -17.50004005432129
    5. '=int' → logprob: -18.12504005432129
    6. ']=' → logprob: -18.25004005432129
    7. '*=' → logprob: -19.12504005432129
    8. '-=' → logprob: -19.37504005432129
    9. '=}' → logprob: -19.37504005432129
    10. ')=' → logprob: -19.50004005432129

Token 109: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -19.750003814697266
    4. '<|end|>' → logprob: -20.125003814697266
    5. '۰' → logprob: -21.000003814697266
    6. '  ' → logprob: -21.750003814697266
    7. '```' → logprob: -21.875003814697266
    8. '000' → logprob: -22.375003814697266
    9. '０' → logprob: -22.500003814697266
    10. '00' → logprob: -22.500003814697266

Token 110: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -20.625
    4. '۰' → logprob: -20.625
    5. '```' → logprob: -21.875
    6. '０' → logprob: -22.0
    7. '`' → logprob: -22.3125
    8. '=' → logprob: -22.6875
    9. '00' → logprob: -22.6875
    10. '000' → logprob: -22.9375

Token 111: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.038733139634132385
    2. 'n' → logprob: -3.4137332439422607
    3. '#' → logprob: -6.413733005523682
    4. 'd' → logprob: -6.788733005523682
    5. '<|end|>' → logprob: -7.038733005523682
    6. 'N' → logprob: -7.163733005523682
    7. '```' → logprob: -8.91373348236084
    8. 'for' → logprob: -9.16373348236084
    9. 'a' → logprob: -9.41373348236084
    10. '\' → logprob: -9.78873348236084

Token 113: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.11293602734804153
    2. 'main' → logprob: -2.237936019897461
    3. ' solve' → logprob: -10.862936019897461
    4. 'solve' → logprob: -11.112936019897461
    5. '_main' → logprob: -11.362936019897461
    6. ' update' → logprob: -11.987936019897461
    7. ' process' → logprob: -12.112936019897461
    8. ' sun' → logprob: -12.112936019897461
    9. 'process' → logprob: -12.237936019897461
    10. ' count' → logprob: -12.362936019897461

Token 114: '_all' (ID: 13305)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6621116995811462
    2. '_s' → logprob: -1.037111759185791
    3. '()' → logprob: -2.412111759185791
    4. '_n' → logprob: -4.537111759185791
    5. '_input' → logprob: -4.787111759185791
    6. '(N' → logprob: -5.537111759185791
    7. '_data' → logprob: -5.787111759185791
    8. '(' → logprob: -6.037111759185791
    9. '_S' → logprob: -6.162111759185791
    10. '_inputs' → logprob: -6.912111759185791

Token 115: '_K' (ID: 20555)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6855699419975281
    2. '()' → logprob: -1.0605700016021729
    3. '_s' → logprob: -2.060570001602173
    4. '(S' → logprob: -5.185569763183594
    5. '(N' → logprob: -5.560569763183594
    6. '_' → logprob: -6.310569763183594
    7. '_inputs' → logprob: -6.685569763183594
    8. '_data' → logprob: -6.685569763183594
    9. '_input' → logprob: -6.685569763183594
    10. '_queries' → logprob: -6.935569763183594

Token 116: '(S' (ID: 6181)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03985031321644783
    2. '(K' → logprob: -3.4148502349853516
    3. '(' → logprob: -6.164850234985352
    4. '()' → logprob: -6.914850234985352
    5. 's' → logprob: -6.914850234985352
    6. '():
' → logprob: -7.414850234985352
    7. '(s' → logprob: -7.664850234985352
    8. '(k' → logprob: -8.039850234985352
    9. '(N' → logprob: -8.164850234985352
    10. ' ():' → logprob: -8.914850234985352

Token 117: 'un' (ID: 373)
  Prédit: 'un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.0017145700985565782
    2. 'K' → logprob: -7.876714706420898
    3. '(K' → logprob: -7.876714706420898
    4. '(S' → logprob: -8.876714706420898
    5. '):' → logprob: -9.376714706420898
    6. '_k' → logprob: -9.501714706420898
    7. '_un' → logprob: -9.751714706420898
    8. 'k' → logprob: -9.751714706420898
    9. 'unki' → logprob: -9.751714706420898
    10. '_K' → logprob: -9.876714706420898

Token 118: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -1.2113979209971149e-05
    2. 'uk' → logprob: -11.500012397766113
    3. 'u' → logprob: -14.500012397766113
    4. '_' → logprob: -14.875012397766113
    5. 'ukke' → logprob: -15.125012397766113
    6. '```' → logprob: -15.375012397766113
    7. 's' → logprob: -16.500011444091797
    8. '_s' → logprob: -17.000011444091797
    9. '   ' → logprob: -17.000011444091797
    10. ' uke' → logprob: -17.000011444091797

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.013994814362377e-05
    2. ' ,' → logprob: -10.50005054473877
    3. ',K' → logprob: -10.87505054473877
    4. ',S' → logprob: -13.87505054473877
    5. '):' → logprob: -13.87505054473877
    6. 'K' → logprob: -15.00005054473877
    7. ',
' → logprob: -15.37505054473877
    8. ',N' → logprob: -15.62505054473877
    9. ',k' → logprob: -16.000049591064453
    10. 's' → logprob: -16.000049591064453

Token 120: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.026937346905469894
    2. ' K' → logprob: -3.651937246322632
    3. ')' → logprob: -8.026937484741211
    4. 'Ks' → logprob: -9.276937484741211
    5. 'k' → logprob: -9.526937484741211
    6. '   ' → logprob: -10.026937484741211
    7. '):
' → logprob: -10.776937484741211
    8. ' ' → logprob: -10.901937484741211
    9. ' Ks' → logprob: -11.526937484741211
    10. '):' → logprob: -11.526937484741211

Token 121: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31365466117858887
    2. ',' → logprob: -1.3136546611785889
    3. '):
' → logprob: -8.813654899597168
    4. ')' → logprob: -8.938654899597168
    5. ' ,' → logprob: -10.438654899597168
    6. ' ):' → logprob: -10.438654899597168
    7. ',S' → logprob: -10.938654899597168
    8. ',K' → logprob: -11.563654899597168
    9. ':' → logprob: -11.688654899597168
    10. '   ' → logprob: -12.063654899597168

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11486177146434784
    2. 'for' → logprob: -2.6148617267608643
    3. ' for' → logprob: -3.3648617267608643
    4. 'return' → logprob: -7.989861965179443
    5. '
' → logprob: -9.114861488342285
    6. ' return' → logprob: -9.364861488342285
    7. 'K' → logprob: -9.614861488342285
    8. 'while' → logprob: -10.239861488342285
    9. '  ' → logprob: -10.614861488342285
    10. '    
' → logprob: -10.989861488342285

Token 123: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12644867599010468
    2. 'K' → logprob: -2.751448631286621
    3. '   ' → logprob: -3.001448631286621
    4. 'return' → logprob: -6.376448631286621
    5. ' for' → logprob: -6.501448631286621
    6. 'def' → logprob: -7.376448631286621
    7. 'while' → logprob: -7.501448631286621
    8. 'result' → logprob: -8.251448631286621
    9. 'results' → logprob: -8.501448631286621
    10. 'A' → logprob: -9.251448631286621

Token 124: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24919916689395905
    2. ' _' → logprob: -2.624199151992798
    3. '_i' → logprob: -3.374199151992798
    4. ' i' → logprob: -3.374199151992798
    5. 'i' → logprob: -3.749199151992798
    6. '_k' → logprob: -4.124199390411377
    7. ' k' → logprob: -4.374199390411377
    8. 'ii' → logprob: -4.499199390411377
    9. 'k' → logprob: -4.624199390411377
    10. ' ii' → logprob: -5.249199390411377

Token 125: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015426266938447952
    2. 'in' → logprob: -4.515426158905029
    3. 'n' → logprob: -5.515426158905029
    4. '_' → logprob: -8.765426635742188
    5. 'range' → logprob: -9.765426635742188
    6. ' ' → logprob: -10.265426635742188
    7. 's' → logprob: -10.890426635742188
    8. ',' → logprob: -11.390426635742188
    9. 'd' → logprob: -11.515426635742188
    10. 'nd' → logprob: -11.515426635742188

Token 126: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0052788229659199715
    2. ' range' → logprob: -5.255278587341309
    3. 'K' → logprob: -10.380278587341309
    4. 'ange' → logprob: -11.505278587341309
    5. '(range' → logprob: -14.255278587341309
    6. '   ' → logprob: -14.505278587341309
    7. '	range' → logprob: -14.505278587341309
    8. ' ' → logprob: -14.755278587341309
    9. '  ' → logprob: -15.130278587341309
    10. 'rang' → logprob: -15.255278587341309

Token 127: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.0011748670367524028
    2. '(' → logprob: -6.8761749267578125
    3. '(len' → logprob: -9.126174926757812
    4. 'K' → logprob: -10.626174926757812
    5. ' K' → logprob: -12.251174926757812
    6. ' (' → logprob: -13.751174926757812
    7. '   ' → logprob: -13.751174926757812
    8. '(k' → logprob: -14.501174926757812
    9. 'len' → logprob: -14.876174926757812
    10. '	K' → logprob: -15.251174926757812

Token 128: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016976762562990189
    2. '):
' → logprob: -6.626697540283203
    3. ' ):' → logprob: -8.001697540283203
    4. ':' → logprob: -10.876697540283203
    5. ')' → logprob: -11.876697540283203
    6. '():' → logprob: -12.501697540283203
    7. '   ' → logprob: -12.751697540283203
    8. ',' → logprob: -12.876697540283203
    9. '):
' → logprob: -14.626697540283203
    10. ' ):
' → logprob: -15.126697540283203

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13258765637874603
    2. '   ' → logprob: -2.3825876712799072
    3. '<|end|>' → logprob: -5.007587432861328
    4. 'def' → logprob: -5.507587432861328
    5. ' A' → logprob: -5.632587432861328
    6. ' pass' → logprob: -5.757587432861328
    7. 'A' → logprob: -6.007587432861328
    8. '        
' → logprob: -6.507587432861328
    9. 'd' → logprob: -6.632587432861328
    10. 'n' → logprob: -6.757587432861328

Token 130: ' process' (ID: 2273)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6394835710525513
    2. 'a' → logprob: -1.6394835710525513
    3. 'A' → logprob: -1.7644835710525513
    4. 'x' → logprob: -3.2644834518432617
    5. 'D' → logprob: -4.139483451843262
    6. 'idx' → logprob: -4.639483451843262
    7. 'k' → logprob: -5.014483451843262
    8. 'ai' → logprob: -5.514483451843262
    9. 'ii' → logprob: -5.514483451843262
    10. 'pos' → logprob: -5.764483451843262

Token 131: '_single' (ID: 46053)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.09905467182397842
    2. '_' → logprob: -3.4740545749664307
    3. '(S' → logprob: -4.09905481338501
    4. '_all' → logprob: -4.84905481338501
    5. '_input' → logprob: -4.97405481338501
    6. '_single' → logprob: -5.09905481338501
    7. '_one' → logprob: -5.72405481338501
    8. '_S' → logprob: -5.72405481338501
    9. '_k' → logprob: -5.97405481338501
    10. '(A' → logprob: -6.22405481338501

Token 132: '_input' (ID: 12507)
  Prédit: '_K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_K' → logprob: -0.11665000021457672
    2. '_k' → logprob: -2.991650104522705
    3. '_' → logprob: -3.116650104522705
    4. '_s' → logprob: -4.991650104522705
    5. '_S' → logprob: -6.241650104522705
    6. '_i' → logprob: -6.241650104522705
    7. 'K' → logprob: -7.116650104522705
    8. '(S' → logprob: -7.491650104522705
    9. '_A' → logprob: -7.616650104522705
    10. '(K' → logprob: -8.116649627685547

Token 133: '(S' (ID: 6181)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.024107936769723892
    2. '(S' → logprob: -4.024107933044434
    3. '_' → logprob: -6.149107933044434
    4. '_line' → logprob: -6.399107933044434
    5. '(' → logprob: -7.774107933044434
    6. '(i' → logprob: -8.149107933044434
    7. '(s' → logprob: -8.649107933044434
    8. 's' → logprob: -8.649107933044434
    9. '(_)' → logprob: -8.649107933044434
    10. '_s' → logprob: -8.899107933044434

Token 134: 'un' (ID: 373)
  Prédit: 'un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -6.988221684878226e-06
    2. '(un' → logprob: -12.125006675720215
    3. '_un' → logprob: -15.000006675720215
    4. 'u' → logprob: -15.500006675720215
    5. '	un' → logprob: -15.625006675720215
    6. 'sun' → logprob: -16.00000762939453
    7. '```' → logprob: -16.00000762939453
    8. 'Sun' → logprob: -16.50000762939453
    9. '[' → logprob: -16.62500762939453
    10. 'ун' → logprob: -17.00000762939453

Token 135: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -8.65707261255011e-06
    2. 'uk' → logprob: -12.125008583068848
    3. 'u' → logprob: -13.375008583068848
    4. ' uke' → logprob: -15.000008583068848
    5. '```' → logprob: -15.375008583068848
    6. 's' → logprob: -15.375008583068848
    7. 'ukke' → logprob: -15.875008583068848
    8. 'ke' → logprob: -16.000009536743164
    9. '

' → logprob: -16.375009536743164
    10. 'oke' → logprob: -16.875009536743164

Token 136: ')

' (ID: 1029)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04007161408662796
    2. ')' → logprob: -3.290071725845337
    3. ',i' → logprob: -6.540071487426758
    4. '[i' → logprob: -8.290071487426758
    5. '(i' → logprob: -10.040071487426758
    6. ' ,' → logprob: -10.165071487426758
    7. '<|end|>' → logprob: -10.165071487426758
    8. ',K' → logprob: -10.290071487426758
    9. ',)' → logprob: -10.665071487426758
    10. ',S' → logprob: -10.665071487426758

Token 137: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0019794299732893705
    2. '<|end|>' → logprob: -6.251979351043701
    3. '
' → logprob: -10.37697982788086
    4. ' def' → logprob: -12.12697982788086
    5. '```' → logprob: -12.12697982788086
    6. '<|end|>' → logprob: -12.62697982788086
    7. ':def' → logprob: -13.62697982788086
    8. '    
' → logprob: -14.25197982788086
    9. '(def' → logprob: -14.62697982788086
    10. '-def' → logprob: -15.00197982788086

Token 138: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.20465682446956635
    2. ' process' → logprob: -2.2046568393707275
    3. 'read' → logprob: -2.7046568393707275
    4. ' read' → logprob: -5.579656600952148
    5. 'def' → logprob: -5.829656600952148
    6. 'input' → logprob: -7.079656600952148
    7. ' input' → logprob: -9.329656600952148
    8. ' def' → logprob: -9.579656600952148
    9. 'print' → logprob: -10.204656600952148
    10. 'update' → logprob: -10.829656600952148

Token 139: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -2.0219828002154827e-05
    2. '_s' → logprob: -11.625020027160645
    3. '_input' → logprob: -11.625020027160645
    4. '_' → logprob: -13.625020027160645
    5. '_all' → logprob: -15.250020027160645
    6. '_SINGLE' → logprob: -15.625020027160645
    7. 'single' → logprob: -16.00002098083496
    8. '_user' → logprob: -16.12502098083496
    9. '_inputs' → logprob: -16.75002098083496
    10. '_sn' → logprob: -16.87502098083496

Token 140: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0004789320519194007
    2. 'input' → logprob: -7.875478744506836
    3. '_s' → logprob: -10.125478744506836
    4. '_' → logprob: -10.875478744506836
    5. '_line' → logprob: -12.000478744506836
    6. '(S' → logprob: -12.000478744506836
    7. 'Input' → logprob: -12.625478744506836
    8. '_inputs' → logprob: -13.000478744506836
    9. '_in' → logprob: -13.250478744506836
    10. '```' → logprob: -13.500478744506836

Token 141: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.003577857045456767
    2. '(' → logprob: -6.378577709197998
    3. '():' → logprob: -7.003577709197998
    4. '()' → logprob: -7.003577709197998
    5. '(input' → logprob: -10.753578186035156
    6. '(s' → logprob: -11.503578186035156
    7. ' (' → logprob: -11.753578186035156
    8. '(A' → logprob: -11.878578186035156
    9. ':' → logprob: -13.753578186035156
    10. '():
' → logprob: -14.003578186035156

Token 142: 'un' (ID: 373)
  Prédit: 'un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -5.931863051955588e-05
    2. ')' → logprob: -11.875059127807617
    3. '_un' → logprob: -11.875059127807617
    4. 'u' → logprob: -12.000059127807617
    5. 'unze' → logprob: -12.250059127807617
    6. 'unce' → logprob: -12.250059127807617
    7. '(S' → logprob: -12.625059127807617
    8. '):

' → logprob: -12.750059127807617
    9. '):' → logprob: -12.750059127807617
    10. ',' → logprob: -12.750059127807617

Token 143: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -8.537868779967539e-06
    2. 'uk' → logprob: -12.375008583068848
    3. 'u' → logprob: -12.625008583068848
    4. 'ke' → logprob: -15.250008583068848
    5. 'ake' → logprob: -16.37500762939453
    6. 'ukke' → logprob: -16.37500762939453
    7. '_' → logprob: -16.50000762939453
    8. '(' → logprob: -16.62500762939453
    9. '```' → logprob: -16.87500762939453
    10. 'oke' → logprob: -17.37500762939453

Token 144: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0725235790014267
    2. '):' → logprob: -2.697523593902588
    3. '):
' → logprob: -6.197523593902588
    4. ',A' → logprob: -8.57252311706543
    5. ' ,' → logprob: -9.07252311706543
    6. ')' → logprob: -9.82252311706543
    7. ',S' → logprob: -10.19752311706543
    8. ',input' → logprob: -10.32252311706543
    9. ',s' → logprob: -10.94752311706543
    10. ',K' → logprob: -11.07252311706543

Token 145: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8235761523246765
    2. 'd' → logprob: -1.6985762119293213
    3. 'a' → logprob: -1.9485762119293213
    4. 'idx' → logprob: -2.8235762119293213
    5. 'D' → logprob: -3.1985762119293213
    6. 'A' → logprob: -3.6985762119293213
    7. 'X' → logprob: -3.8235762119293213
    8. 'pos' → logprob: -3.9485762119293213
    9. 'k' → logprob: -4.073575973510742
    10. 'index' → logprob: -4.198575973510742

Token 146: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.12297410517930984
    2. 'D' → logprob: -2.497974157333374
    3. 'x' → logprob: -3.997974157333374
    4. 'a' → logprob: -5.622973918914795
    5. 'idx' → logprob: -5.872973918914795
    6. 'A' → logprob: -6.497973918914795
    7. 'p' → logprob: -6.622973918914795
    8. 'X' → logprob: -7.122973918914795
    9. 'pos' → logprob: -7.247973918914795
    10. '   ' → logprob: -7.372973918914795

Token 147: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06406275928020477
    2. '=' → logprob: -2.8140628337860107
    3. '_' → logprob: -6.314062595367432
    4. '=int' → logprob: -9.68906307220459
    5. '_=' → logprob: -9.68906307220459
    6. ',' → logprob: -10.18906307220459
    7. '=_' → logprob: -10.68906307220459
    8. '_input' → logprob: -11.18906307220459
    9. '_val' → logprob: -11.31406307220459
    10. '_value' → logprob: -11.31406307220459

Token 148: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.015704795718193054
    2. ' read' → logprob: -4.26570463180542
    3. 'int' → logprob: -6.51570463180542
    4. ' int' → logprob: -9.765705108642578
    5. '	read' → logprob: -13.390705108642578
    6. '  ' → logprob: -14.765705108642578
    7. '(read' → logprob: -15.515705108642578
    8. ' ' → logprob: -15.640705108642578
    9. 'd' → logprob: -16.015705108642578
    10. 'input' → logprob: -16.515705108642578

Token 149: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.02652275376021862
    2. '_' → logprob: -3.651522636413574
    3. 'd' → logprob: -9.276522636413574
    4. '(' → logprob: -9.651522636413574
    5. '()' → logprob: -10.526522636413574
    6. '_D' → logprob: -11.401522636413574
    7. '_a' → logprob: -12.276522636413574
    8. '```' → logprob: -12.401522636413574
    9. '__' → logprob: -12.651522636413574
    10. ' _' → logprob: -13.026522636413574

Token 150: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02981170266866684
    2. '()
' → logprob: -3.5298116207122803
    3. '()

' → logprob: -10.02981185913086
    4. '()
' → logprob: -12.15481185913086
    5. 'def' → logprob: -12.90481185913086
    6. ' ()' → logprob: -13.15481185913086
    7. '(' → logprob: -13.27981185913086
    8. '()\' → logprob: -13.27981185913086
    9. 'A' → logprob: -13.90481185913086
    10. '()<' → logprob: -14.40481185913086

Token 151: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5225138068199158
    2. '   ' → logprob: -1.2725138664245605
    3. 'a' → logprob: -2.6475138664245605
    4. 'def' → logprob: -4.3975138664245605
    5. 'k' → logprob: -4.7725138664245605
    6. '<|end|>' → logprob: -4.8975138664245605
    7. 's' → logprob: -5.3975138664245605
    8. 'n' → logprob: -5.7725138664245605
    9. 'x' → logprob: -5.7725138664245605
    10. 'if' → logprob: -6.0225138664245605

Token 152: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.053549040108919144
    2. 'if' → logprob: -3.05354905128479
    3. 'a' → logprob: -7.178548812866211
    4. ' A' → logprob: -7.303548812866211
    5. 'idx' → logprob: -7.553548812866211
    6. 'for' → logprob: -7.553548812866211
    7. 'def' → logprob: -7.678548812866211
    8. 'Sun' → logprob: -7.803548812866211
    9. 'indices' → logprob: -8.053548812866211
    10. 'i' → logprob: -8.678548812866211

Token 153: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931779980659485
    2. ' =' → logprob: -0.6931779980659485
    3. '_' → logprob: -11.568178176879883
    4. '_list' → logprob: -11.818178176879883
    5. 's' → logprob: -11.943178176879883
    6. '_=' → logprob: -13.693178176879883
    7. '=[]' → logprob: -13.693178176879883
    8. '()' → logprob: -13.818178176879883
    9. '_values' → logprob: -14.193178176879883
    10. '   ' → logprob: -14.318178176879883

Token 154: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.5759416818618774
    2. ' read' → logprob: -0.8259416818618774
    3. '(read' → logprob: -13.200942039489746
    4. '	read' → logprob: -14.950942039489746
    5. '_read' → logprob: -17.57594108581543
    6. ' ' → logprob: -18.07594108581543
    7. '.read' → logprob: -18.45094108581543
    8. 'Read' → logprob: -19.32594108581543
    9. '  ' → logprob: -19.57594108581543
    10. 'A' → logprob: -20.07594108581543

Token 155: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.0002833848411682993
    2. 'A' → logprob: -8.625283241271973
    3. '()' → logprob: -9.375283241271973
    4. '(' → logprob: -11.750283241271973
    5. '_' → logprob: -11.875283241271973
    6. '_S' → logprob: -14.375283241271973
    7. '_a' → logprob: -14.875283241271973
    8. 'def' → logprob: -15.125283241271973
    9. '```' → logprob: -15.375283241271973
    10. '_K' → logprob: -15.375283241271973

Token 156: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020161904394626617
    2. 'update' → logprob: -6.627016067504883
    3. ' update' → logprob: -7.627016067504883
    4. '
' → logprob: -10.002016067504883
    5. '(update' → logprob: -10.377016067504883
    6. 'def' → logprob: -10.627016067504883
    7. ' ' → logprob: -10.752016067504883
    8. '       ' → logprob: -10.877016067504883
    9. '    
' → logprob: -11.127016067504883
    10. '	update' → logprob: -11.377016067504883

Token 157: '   ' (ID: 271)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.38873326778411865
    2. '   ' → logprob: -1.1387332677841187
    3. ' update' → logprob: -7.263733386993408
    4. 'def' → logprob: -7.513733386993408
    5. '<|end|>' → logprob: -8.26373291015625
    6. '	update' → logprob: -9.63873291015625
    7. '  ' → logprob: -10.01373291015625
    8. '    
' → logprob: -10.01373291015625
    9. '       ' → logprob: -10.26373291015625
    10. ' ' → logprob: -10.26373291015625

Token 158: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.0003924231859855354
    2. ' update' → logprob: -8.125391960144043
    3. '   ' → logprob: -9.375391960144043
    4. 'if' → logprob: -12.125391960144043
    5. 'def' → logprob: -13.000391960144043
    6. '
' → logprob: -13.000391960144043
    7. '```' → logprob: -14.875391960144043
    8. 'for' → logprob: -15.000391960144043
    9. '	update' → logprob: -15.250391960144043
    10. '.update' → logprob: -15.500391960144043

Token 159: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.9361264946837764e-07
    2. 's' → logprob: -16.5
    3. '_' → logprob: -17.5
    4. '(s' → logprob: -20.375
    5. '_sn' → logprob: -20.375
    6. '_S' → logprob: -20.5
    7. ' _' → logprob: -21.5
    8. '\' → logprob: -21.875
    9. '```' → logprob: -22.125
    10. '(_' → logprob: -22.25

Token 160: 'un' (ID: 373)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.09002641588449478
    2. 'un' → logprob: -2.465026378631592
    3. '_un' → logprob: -7.965026378631592
    4. 'sun' → logprob: -8.09002685546875
    5. 'u' → logprob: -8.21502685546875
    6. 's' → logprob: -9.84002685546875
    7. 'uk' → logprob: -10.34002685546875
    8. '_' → logprob: -11.46502685546875
    9. '_n' → logprob: -11.59002685546875
    10. 'Sun' → logprob: -11.96502685546875

Token 161: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -5.080963092041202e-06
    2. 'uk' → logprob: -12.625004768371582
    3. '_' → logprob: -14.250004768371582
    4. 'u' → logprob: -14.625004768371582
    5. 'ke' → logprob: -15.875004768371582
    6. ' uke' → logprob: -16.1250057220459
    7. 'oke' → logprob: -16.7500057220459
    8. '_s' → logprob: -17.1250057220459
    9. '```' → logprob: -17.2500057220459
    10. '(' → logprob: -17.3750057220459

Token 162: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -14.250001907348633
    3. '_w' → logprob: -15.000001907348633
    4. '_s' → logprob: -16.250001907348633
    5. '_for' → logprob: -16.375001907348633
    6. 'with' → logprob: -16.500001907348633
    7. ' _' → logprob: -16.500001907348633
    8. '_to' → logprob: -16.750001907348633
    9. '_without' → logprob: -17.250001907348633
    10. '_in' → logprob: -17.375001907348633

Token 163: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -3.464347173576243e-05
    2. '_S' → logprob: -10.37503433227539
    3. 'A' → logprob: -12.75003433227539
    4. '_' → logprob: -15.12503433227539
    5. '_s' → logprob: -16.25003433227539
    6. '(A' → logprob: -16.62503433227539
    7. 's' → logprob: -18.75003433227539
    8. '```' → logprob: -19.12503433227539
    9. ' _' → logprob: -19.50003433227539
    10. '`' → logprob: -20.00003433227539

Token 164: '(S' (ID: 6181)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5040081739425659
    2. '(S' → logprob: -1.004008173942566
    3. '_(' → logprob: -4.1290082931518555
    4. '_S' → logprob: -4.6290082931518555
    5. '(' → logprob: -5.6290082931518555
    6. '(s' → logprob: -12.254008293151855
    7. '```' → logprob: -12.379008293151855
    8. '_=' → logprob: -12.629008293151855
    9. ' (' → logprob: -12.754008293151855
    10. '_,' → logprob: -12.754008293151855

Token 165: 'un' (ID: 373)
  Prédit: 'un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -5.7292167184641585e-05
    2. '(un' → logprob: -10.750057220458984
    3. 'uke' → logprob: -11.250057220458984
    4. 'u' → logprob: -12.375057220458984
    5. 'on' → logprob: -12.500057220458984
    6. '(' → logprob: -12.750057220458984
    7. 'n' → logprob: -13.250057220458984
    8. 'uk' → logprob: -13.250057220458984
    9. '[' → logprob: -13.375057220458984
    10. '_un' → logprob: -13.625057220458984

Token 166: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -9.968312951968983e-06
    2. 'uk' → logprob: -12.125009536743164
    3. 'u' → logprob: -13.000009536743164
    4. 'ke' → logprob: -14.250009536743164
    5. 'oke' → logprob: -14.875009536743164
    6. ' uke' → logprob: -15.375009536743164
    7. '```' → logprob: -15.875009536743164
    8. 's' → logprob: -15.875009536743164
    9. '[' → logprob: -16.125009536743164
    10. '(' → logprob: -16.875009536743164

Token 167: ',' (ID: 11)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.23872144520282745
    2. ',' → logprob: -1.738721489906311
    3. '(' → logprob: -3.3637213706970215
    4. '(A' → logprob: -6.8637213706970215
    5. ',S' → logprob: -7.3637213706970215
    6. ' ,' → logprob: -8.61372184753418
    7. ')' → logprob: -9.23872184753418
    8. ',A' → logprob: -11.11372184753418
    9. '(
' → logprob: -11.48872184753418
    10. ',
' → logprob: -11.73872184753418

Token 168: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0019288709154352546
    2. ' A' → logprob: -6.251928806304932
    3. '	A' → logprob: -16.001928329467773
    4. '   ' → logprob: -16.376928329467773
    5. ' ' → logprob: -17.001928329467773
    6. '(A' → logprob: -17.001928329467773
    7. ')' → logprob: -17.001928329467773
    8. ',A' → logprob: -18.751928329467773
    9. '_A' → logprob: -18.876928329467773
    10. '  ' → logprob: -19.126928329467773

Token 169: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.796184723294573e-06
    2. ')
' → logprob: -12.125005722045898
    3. ')

' → logprob: -15.750005722045898
    4. ' )' → logprob: -15.750005722045898
    5. '))' → logprob: -16.7500057220459
    6. ')#' → logprob: -18.3750057220459
    7. ')return' → logprob: -18.8750057220459
    8. '())' → logprob: -19.0000057220459
    9. '   ' → logprob: -19.2500057220459
    10. '<|end|>' → logprob: -19.3750057220459

Token 170: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0024204873479902744
    2. '<|end|>' → logprob: -6.377420425415039
    3. 'N' → logprob: -8.752420425415039
    4. 'if' → logprob: -9.002420425415039
    5. '#' → logprob: -9.002420425415039
    6. '```' → logprob: -9.127420425415039
    7. 'Sun' → logprob: -9.627420425415039
    8. '
' → logprob: -10.252420425415039
    9. 'print' → logprob: -10.502420425415039
    10. 'K' → logprob: -11.127420425415039

Token 171: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.017554493620991707
    2. ' def' → logprob: -4.51755428314209
    3. 'def' → logprob: -5.64255428314209
    4. 'main' → logprob: -5.89255428314209
    5. ' __' → logprob: -9.01755428314209
    6. ' process' → logprob: -9.89255428314209
    7. '__' → logprob: -11.89255428314209
    8. ' run' → logprob: -13.89255428314209
    9. 'process' → logprob: -14.39255428314209
    10. 'if' → logprob: -15.01755428314209

Token 172: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.8088369369506836
    2. '_s' → logprob: -1.4338369369506836
    3. '_remaining' → logprob: -1.8088369369506836
    4. '_final' → logprob: -3.0588369369506836
    5. '_' → logprob: -3.1838369369506836
    6. '_results' → logprob: -3.9338369369506836
    7. '_sum' → logprob: -4.558836936950684
    8. '_unique' → logprob: -5.308836936950684
    9. '_all' → logprob: -5.308836936950684
    10. '_count' → logprob: -5.808836936950684

Token 173: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.15247505903244019
    2. '(' → logprob: -2.027475118637085
    3. '()' → logprob: -4.652474880218506
    4. '_(' → logprob: -9.402475357055664
    5. '(s' → logprob: -10.027475357055664
    6. '_' → logprob: -10.777475357055664
    7. '((' → logprob: -11.277475357055664
    8. '("("' → logprob: -11.402475357055664
    9. '()(' → logprob: -11.652475357055664
    10. ' (' → logprob: -12.277475357055664

Token 174: 'un' (ID: 373)
  Prédit: 'un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -4.8351892473874614e-05
    2. '(un' → logprob: -10.500048637390137
    3. 'u' → logprob: -13.000048637390137
    4. '```' → logprob: -13.375048637390137
    5. 'unze' → logprob: -13.625048637390137
    6. 'unene' → logprob: -13.625048637390137
    7. '_un' → logprob: -13.625048637390137
    8. ')' → logprob: -13.750048637390137
    9. 'unku' → logprob: -13.750048637390137
    10. '(' → logprob: -14.000048637390137

Token 175: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -1.1472419600977446e-06
    2. 'uk' → logprob: -14.125000953674316
    3. 'u' → logprob: -15.500000953674316
    4. '```' → logprob: -17.375001907348633
    5. '

' → logprob: -17.875001907348633
    6. '_' → logprob: -17.875001907348633
    7. ' uke' → logprob: -18.000001907348633
    8. 's' → logprob: -19.000001907348633
    9. 'ukke' → logprob: -19.375001907348633
    10. '(' → logprob: -19.375001907348633

Token 176: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03935520723462105
    2. '):
' → logprob: -3.5393552780151367
    3. ')' → logprob: -4.664355278015137
    4. '():' → logprob: -9.664355278015137
    5. '):
' → logprob: -10.914355278015137
    6. '()' → logprob: -11.039355278015137
    7. ' ):' → logprob: -11.289355278015137
    8. '():
' → logprob: -12.039355278015137
    9. '):

' → logprob: -12.164355278015137
    10. '[]):' → logprob: -13.164355278015137

Token 177: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.40458944439888
    2. '   ' → logprob: -1.7795894145965576
    3. 'for' → logprob: -2.4045894145965576
    4. ' print' → logprob: -2.7795894145965576
    5. ' for' → logprob: -4.529589653015137
    6. '```' → logprob: -7.654589653015137
    7. 'count' → logprob: -8.029589653015137
    8. 'result' → logprob: -10.904589653015137
    9. '``' → logprob: -11.029589653015137
    10. ' count' → logprob: -11.404589653015137

Token 178: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0021637058816850185
    2. 'for' → logprob: -6.377163887023926
    3. 'count' → logprob: -8.377163887023926
    4. ' print' → logprob: -9.127163887023926
    5. 'result' → logprob: -9.627163887023926
    6. '   ' → logprob: -10.627163887023926
    7. 'sum' → logprob: -11.502163887023926
    8. 'total' → logprob: -12.877163887023926
    9. ' for' → logprob: -13.002163887023926
    10. 'answer' → logprob: -13.002163887023926

Token 179: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.02155100554227829
    2. '(S' → logprob: -3.8965508937835693
    3. '(max' → logprob: -7.396551132202148
    4. '(' → logprob: -8.646551132202148
    5. '(min' → logprob: -9.271551132202148
    6. '(len' → logprob: -9.396551132202148
    7. '(s' → logprob: -10.771551132202148
    8. '(all' → logprob: -11.521551132202148
    9. '('' → logprob: -12.646551132202148
    10. 'sum' → logprob: -13.021551132202148

Token 180: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0010440052719786763
    2. '(' → logprob: -6.876043796539307
    3. ')' → logprob: -11.626044273376465
    4. '(s' → logprob: -13.501044273376465
    5. ' (' → logprob: -15.626044273376465
    6. '((' → logprob: -15.751044273376465
    7. 'Sun' → logprob: -16.12604331970215
    8. '([' → logprob: -16.25104331970215
    9. 'S' → logprob: -16.37604331970215
    10. '(
' → logprob: -16.75104331970215

Token 181: 'un' (ID: 373)
  Prédit: 'un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -4.0722858102526516e-05
    2. 'Sun' → logprob: -11.000041007995605
    3. 'Un' → logprob: -12.000041007995605
    4. '(un' → logprob: -12.125041007995605
    5. 'on' → logprob: -12.375041007995605
    6. 'u' → logprob: -13.000041007995605
    7. 'uk' → logprob: -13.625041007995605
    8. '[' → logprob: -14.000041007995605
    9. 'unene' → logprob: -14.500041007995605
    10. '(' → logprob: -14.875041007995605

Token 182: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -7.896309739408025e-07
    2. '(S' → logprob: -15.000000953674316
    3. 'uk' → logprob: -15.500000953674316
    4. 'u' → logprob: -16.25
    5. 'ke' → logprob: -17.375
    6. 'oke' → logprob: -17.75
    7. '(' → logprob: -18.125
    8. 'U' → logprob: -18.375
    9. '[' → logprob: -18.625
    10. 'S' → logprob: -18.75

Token 183: '))

' (ID: 9746)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007107597775757313
    2. '()))' → logprob: -5.257107734680176
    3. '))' → logprob: -6.882107734680176
    4. ')' → logprob: -7.132107734680176
    5. '()' → logprob: -10.257107734680176
    6. '())
' → logprob: -11.757107734680176
    7. ' ())' → logprob: -13.382107734680176
    8. '(S' → logprob: -13.757107734680176
    9. '()))
' → logprob: -14.507107734680176
    10. '(' → logprob: -14.882107734680176

Token 184: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0019291093340143561
    2. 'if' → logprob: -6.25192928314209
    3. '```' → logprob: -15.12692928314209
    4. '#' → logprob: -15.87692928314209
    5. 'n' → logprob: -16.876928329467773
    6. ' def' → logprob: -17.501928329467773
    7. 'ndef' → logprob: -18.001928329467773
    8. ' if' → logprob: -18.001928329467773
    9. 'for' → logprob: -19.001928329467773
    10. '\' → logprob: -19.626928329467773

Token 185: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.048612575978040695
    2. ' main' → logprob: -3.048612594604492
    3. '_main' → logprob: -11.173612594604492
    4. 'def' → logprob: -11.423612594604492
    5. '__' → logprob: -16.173612594604492
    6. ' def' → logprob: -17.173612594604492
    7. 'solve' → logprob: -17.423612594604492
    8. '	main' → logprob: -17.548612594604492
    9. 'process' → logprob: -17.923612594604492
    10. 'run' → logprob: -18.423612594604492

Token 186: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.531315314830863e-06
    2. '()' → logprob: -13.375003814697266
    3. '():
' → logprob: -13.625003814697266
    4. ' ():' → logprob: -14.375003814697266
    5. '(' → logprob: -16.750003814697266
    6. '():
' → logprob: -18.000003814697266
    7. ':' → logprob: -18.375003814697266
    8. '():

' → logprob: -19.375003814697266
    9. '()>' → logprob: -19.625003814697266
    10. '(:' → logprob: -19.875003814697266

Token 187: '   ' (ID: 271)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.14398786425590515
    2. ' N' → logprob: -2.6439878940582275
    3. '   ' → logprob: -2.7689878940582275
    4. 'n' → logprob: -8.518987655639648
    5. ' ' → logprob: -10.143987655639648
    6. '	N' → logprob: -10.393987655639648
    7. ' n' → logprob: -12.018987655639648
    8. '  ' → logprob: -12.143987655639648
    9. '(N' → logprob: -12.268987655639648
    10. '   ' → logprob: -12.518987655639648

Token 188: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.00010020548506872728
    2. '   ' → logprob: -9.500100135803223
    3. ' N' → logprob: -11.125100135803223
    4. 'n' → logprob: -11.750100135803223
    5. ' ' → logprob: -13.500100135803223
    6. '  ' → logprob: -15.125100135803223
    7. '	N' → logprob: -15.125100135803223
    8. '    
' → logprob: -15.500100135803223
    9. '#' → logprob: -15.875100135803223
    10. 'if' → logprob: -16.62510108947754

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038956227945163846
    2. ',K' → logprob: -7.875389575958252
    3. ' ,' → logprob: -12.125389099121094
    4. 'K' → logprob: -12.500389099121094
    5. ',k' → logprob: -16.125389099121094
    6. ',
' → logprob: -16.125389099121094
    7. '，' → logprob: -17.375389099121094
    8. ',

' → logprob: -17.500389099121094
    9. '_,' → logprob: -18.125389099121094
    10. '،' → logprob: -18.500389099121094

Token 190: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.014166799373924732
    2. ' K' → logprob: -4.264166831970215
    3. ' ' → logprob: -13.889166831970215
    4. '	K' → logprob: -15.014166831970215
    5. 'k' → logprob: -15.139166831970215
    6. '  ' → logprob: -15.264166831970215
    7. '_' → logprob: -15.264166831970215
    8. '=' → logprob: -15.389166831970215
    9. '   ' → logprob: -15.764166831970215
    10. 'M' → logprob: -15.764166831970215

Token 191: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014138251543045
    2. ' =' → logprob: -1.701413869857788
    3. ')' → logprob: -15.701414108276367
    4. ',' → logprob: -15.826414108276367
    5. '＝' → logprob: -16.826414108276367
    6. '   ' → logprob: -16.826414108276367
    7. '=

' → logprob: -17.951414108276367
    8. ' ' → logprob: -18.076414108276367
    9. ')=' → logprob: -18.076414108276367
    10. ' ' → logprob: -18.201414108276367

Token 192: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.07888989895582199
    2. 'read' → logprob: -2.578889846801758
    3. '	read' → logprob: -16.078889846801758
    4. ' map' → logprob: -19.203889846801758
    5. '_read' → logprob: -19.578889846801758
    6. 'list' → logprob: -19.703889846801758
    7. '(read' → logprob: -19.703889846801758
    8. ' list' → logprob: -19.828889846801758
    9. 'map' → logprob: -20.078889846801758
    10. ' tuple' → logprob: -20.578889846801758

Token 193: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0005729287513531744
    2. '_' → logprob: -7.50057315826416
    3. 'n' → logprob: -11.75057315826416
    4. ''_' → logprob: -13.00057315826416
    5. '()' → logprob: -13.12557315826416
    6. '(' → logprob: -13.12557315826416
    7. '```' → logprob: -13.87557315826416
    8. '"_' → logprob: -14.25057315826416
    9. '_s' → logprob: -14.37557315826416
    10. 'space' → logprob: -14.75057315826416

Token 194: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.2288595288991928
    2. '_' → logprob: -1.603859543800354
    3. '(' → logprob: -6.4788594245910645
    4. '_K' → logprob: -6.7288594245910645
    5. '()' → logprob: -7.8538594245910645
    6. ' _' → logprob: -9.228859901428223
    7. 'K' → logprob: -10.478859901428223
    8. 'k' → logprob: -10.603859901428223
    9. ',' → logprob: -11.103859901428223
    10. '_space' → logprob: -11.103859901428223

Token 195: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004909569397568703
    2. '()
' → logprob: -7.625491142272949
    3. '()\' → logprob: -14.12549114227295
    4. ' ()' → logprob: -14.37549114227295
    5. '()

' → logprob: -14.37549114227295
    6. '(' → logprob: -14.62549114227295
    7. '()`' → logprob: -15.50049114227295
    8. '()
' → logprob: -15.87549114227295
    9. '()"' → logprob: -16.250490188598633
    10. '();' → logprob: -16.250490188598633

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3237694799900055
    2. 'Sun' → logprob: -1.948769450187683
    3. '
' → logprob: -2.0737695693969727
    4. '    
' → logprob: -5.073769569396973
    5. '	S' → logprob: -7.073769569396973
    6. ' Sun' → logprob: -7.698769569396973
    7. '```' → logprob: -8.573769569396973
    8. '  
' → logprob: -8.823769569396973
    9. '<|end|>' → logprob: -9.073769569396973
    10. '(S' → logprob: -9.198769569396973

Token 197: ' Sun' (ID: 11628)
  Prédit: 'Sun'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sun' (adapté à ' Sun') → logprob: -0.00012237003829795867
    2. ' Sun' → logprob: -9.3751220703125
    3. '   ' → logprob: -10.5001220703125
    4. 'sun' → logprob: -11.6251220703125
    5. 'SUN' → logprob: -15.3751220703125
    6. 'S' → logprob: -15.6251220703125
    7. '
' → logprob: -16.0001220703125
    8. ' ' → logprob: -16.2501220703125
    9. '```' → logprob: -16.3751220703125
    10. '	S' → logprob: -16.5001220703125

Token 198: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -2.5776860184123507e-06
    2. '=' → logprob: -14.00000286102295
    3. 'uk' → logprob: -14.75000286102295
    4. '   ' → logprob: -15.62500286102295
    5. '```' → logprob: -15.75000286102295
    6. ' =' → logprob: -15.87500286102295
    7. 'u' → logprob: -16.125001907348633
    8. '_' → logprob: -16.125001907348633
    9. 'ukke' → logprob: -16.375001907348633
    10. 's' → logprob: -16.375001907348633

Token 199: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693682312965393
    2. '=' → logprob: -2.126936912536621
    3. ',' → logprob: -11.751936912536621
    4. ')' → logprob: -14.126936912536621
    5. '<|end|>' → logprob: -17.376935958862305
    6. 's' → logprob: -17.501935958862305
    7. '[' → logprob: -17.501935958862305
    8. ' ' → logprob: -17.501935958862305
    9. '.' → logprob: -17.626935958862305
    10. '```' → logprob: -17.751935958862305

Token 200: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.029751179739832878
    2. ' initialize' → logprob: -3.5297510623931885
    3. '	initialize' → logprob: -14.52975082397461
    4. '_initialize' → logprob: -15.90475082397461
    5. '.initialize' → logprob: -16.52975082397461
    6. 'initial' → logprob: -17.40475082397461
    7. ' ' → logprob: -17.52975082397461
    8. '   ' → logprob: -18.02975082397461
    9. 'initialized' → logprob: -18.15475082397461
    10. 'Initialize' → logprob: -18.65475082397461

Token 201: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -5.931863051955588e-05
    2. '_' → logprob: -9.875059127807617
    3. 's' → logprob: -12.375059127807617
    4. '_S' → logprob: -13.125059127807617
    5. 'Sun' → logprob: -15.125059127807617
    6. '```' → logprob: -15.125059127807617
    7. ' _' → logprob: -15.250059127807617
    8. 'S' → logprob: -15.500059127807617
    9. '\' → logprob: -16.500059127807617
    10. 'sun' → logprob: -16.875059127807617

Token 202: 'un' (ID: 373)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.11158932000398636
    2. 'Sun' → logprob: -2.9865894317626953
    3. 'un' → logprob: -3.1115894317626953
    4. 'sun' → logprob: -5.236589431762695
    5. '_S' → logprob: -6.361589431762695
    6. 's' → logprob: -6.736589431762695
    7. 'S' → logprob: -7.111589431762695
    8. '_' → logprob: -7.611589431762695
    9. '(S' → logprob: -7.736589431762695
    10. '_un' → logprob: -8.861589431762695

Token 203: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -5.200166469876422e-06
    2. 'uk' → logprob: -13.000004768371582
    3. 'u' → logprob: -14.500004768371582
    4. '(' → logprob: -14.625004768371582
    5. '_' → logprob: -14.625004768371582
    6. 's' → logprob: -15.125004768371582
    7. '[' → logprob: -15.375004768371582
    8. 'U' → logprob: -16.1250057220459
    9. 'ukke' → logprob: -16.1250057220459
    10. '   ' → logprob: -16.2500057220459

Token 204: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -9.639096970204264e-05
    2. '(' → logprob: -9.250096321105957
    3. ' (' → logprob: -15.750096321105957
    4. '(n' → logprob: -17.500097274780273
    5. 'N' → logprob: -17.500097274780273
    6. '```' → logprob: -18.375097274780273
    7. '\(' → logprob: -19.375097274780273
    8. '(S' → logprob: -20.000097274780273
    9. '((' → logprob: -20.625097274780273
    10. '(len' → logprob: -21.000097274780273

Token 205: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004315036640036851
    2. ')
' → logprob: -7.750431537628174
    3. ')
' → logprob: -14.375431060791016
    4. ')

' → logprob: -15.125431060791016
    5. ' )' → logprob: -17.625431060791016
    6. '),' → logprob: -18.375431060791016
    7. '   ' → logprob: -19.625431060791016
    8. ',' → logprob: -20.375431060791016
    9. ').' → logprob: -20.375431060791016
    10. ' ' → logprob: -20.500431060791016

Token 206: '   ' (ID: 271)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.4646739363670349
    2. ' process' → logprob: -1.4646739959716797
    3. '   ' → logprob: -1.9646739959716797
    4. '	process' → logprob: -8.33967399597168
    5. '
' → logprob: -9.83967399597168
    6. '    
' → logprob: -12.58967399597168
    7. '(process' → logprob: -12.83967399597168
    8. 'for' → logprob: -13.21467399597168
    9. '.process' → logprob: -13.46467399597168
    10. '```' → logprob: -13.83967399597168

Token 207: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -1.8550976164988242e-05
    2. 'for' → logprob: -11.250018119812012
    3. ' process' → logprob: -12.125018119812012
    4. '   ' → logprob: -18.125019073486328
    5. '(process' → logprob: -18.750019073486328
    6. '	process' → logprob: -19.500019073486328
    7. '
' → logprob: -20.125019073486328
    8. 'proces' → logprob: -20.125019073486328
    9. '.process' → logprob: -20.250019073486328
    10. 'while' → logprob: -20.250019073486328

Token 208: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -3.128163257315464e-07
    2. 'all' → logprob: -15.5
    3. 'All' → logprob: -19.0
    4. '_single' → logprob: -19.0
    5. 's' → logprob: -19.875
    6. '_' → logprob: -19.875
    7. '_s' → logprob: -20.125
    8. '__' → logprob: -20.625
    9. '_ALL' → logprob: -21.375
    10. '_All' → logprob: -21.375

Token 209: '_K' (ID: 20555)
  Prédit: '_K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_K' → logprob: -0.0010718696285039186
    2. '_k' → logprob: -7.126071929931641
    3. '(K' → logprob: -8.50107192993164
    4. '_S' → logprob: -10.75107192993164
    5. '_' → logprob: -11.25107192993164
    6. 'K' → logprob: -11.75107192993164
    7. '_s' → logprob: -11.75107192993164
    8. '```' → logprob: -11.87607192993164
    9. '(S' → logprob: -13.25107192993164
    10. '(_' → logprob: -14.00107192993164

Token 210: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0015062900492921472
    2. '(' → logprob: -6.501506328582764
    3. ' (' → logprob: -12.501505851745605
    4. '(
' → logprob: -16.126506805419922
    5. '(s' → logprob: -17.126506805419922
    6. '(N' → logprob: -17.501506805419922
    7. '\(' → logprob: -18.001506805419922
    8. '(K' → logprob: -18.126506805419922
    9. ' ' → logprob: -18.751506805419922
    10. '​' → logprob: -19.376506805419922

Token 211: 'un' (ID: 373)
  Prédit: 'un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.00010640407708706334
    2. 'uke' → logprob: -10.250106811523438
    3. '(S' → logprob: -10.875106811523438
    4. '(' → logprob: -11.375106811523438
    5. 'u' → logprob: -11.500106811523438
    6. '(un' → logprob: -11.625106811523438
    7. '[' → logprob: -12.500106811523438
    8. 'uk' → logprob: -12.625106811523438
    9. ',' → logprob: -13.250106811523438
    10. '(C' → logprob: -13.875106811523438

Token 212: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -7.896309739408025e-07
    2. 'uk' → logprob: -14.875000953674316
    3. 'u' → logprob: -16.5
    4. 'U' → logprob: -16.625
    5. '(S' → logprob: -16.875
    6. '   ' → logprob: -17.0
    7. 'Luke' → logprob: -17.0
    8. '(' → logprob: -17.25
    9. '_' → logprob: -17.625
    10. 'S' → logprob: -17.75

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.816093228830141e-06
    2. ',K' → logprob: -13.25000286102295
    3. ' ,' → logprob: -14.00000286102295
    4. 'K' → logprob: -16.625001907348633
    5. ')' → logprob: -17.500001907348633
    6. ',
' → logprob: -17.625001907348633
    7. '(' → logprob: -18.500001907348633
    8. ',S' → logprob: -18.625001907348633
    9. ' ' → logprob: -19.250001907348633
    10. '   ' → logprob: -19.250001907348633

Token 214: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.04858884960412979
    2. ' K' → logprob: -3.048588752746582
    3. ')' → logprob: -13.548588752746582
    4. ' ' → logprob: -15.423588752746582
    5. '   ' → logprob: -17.1735897064209
    6. '
' → logprob: -17.4235897064209
    7. '	K' → logprob: -18.5485897064209
    8. ',' → logprob: -19.2985897064209
    9. ' )' → logprob: -19.2985897064209
    10. ' ' → logprob: -19.2985897064209

Token 215: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.036524842376821e-05
    2. ')
' → logprob: -10.125040054321289
    3. ')

' → logprob: -15.875040054321289
    4. ' )' → logprob: -17.12504005432129
    5. '   ' → logprob: -17.75004005432129
    6. ')
' → logprob: -17.87504005432129
    7. '))' → logprob: -18.62504005432129
    8. '),' → logprob: -19.12504005432129
    9. ')`' → logprob: -19.12504005432129
    10. ')#' → logprob: -19.25004005432129

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01279592514038086
    2. 'print' → logprob: -5.012795925140381
    3. '
' → logprob: -5.137795925140381
    4. '    
' → logprob: -9.137796401977539
    5. ' print' → logprob: -9.887796401977539
    6. '```' → logprob: -10.887796401977539
    7. '	print' → logprob: -12.012796401977539
    8. '  
' → logprob: -13.012796401977539
    9. '<|end|>' → logprob: -13.887796401977539
    10. '\n' → logprob: -13.887796401977539

Token 217: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00026503115077503026
    2. '   ' → logprob: -8.250265121459961
    3. ' print' → logprob: -12.500265121459961
    4. '	print' → logprob: -19.25026512145996
    5. '  ' → logprob: -19.37526512145996
    6. ' ' → logprob: -20.37526512145996
    7. '```' → logprob: -20.75026512145996
    8. '.print' → logprob: -21.00026512145996
    9. '(print' → logprob: -21.62526512145996
    10. '#print' → logprob: -22.50026512145996

Token 218: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.000000953674316
    3. '_results' → logprob: -15.625000953674316
    4. '_res' → logprob: -17.375001907348633
    5. '(' → logprob: -17.500001907348633
    6. '(_' → logprob: -18.250001907348633
    7. '_Result' → logprob: -18.250001907348633
    8. ' _' → logprob: -18.375001907348633
    9. '```' → logprob: -18.625001907348633
    10. 'result' → logprob: -18.875001907348633

Token 219: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.004078878089785576
    2. '(' → logprob: -5.5040788650512695
    3. '(s' → logprob: -15.50407886505127
    4. ' (' → logprob: -15.75407886505127
    5. '(
' → logprob: -15.75407886505127
    6. '(

' → logprob: -16.754079818725586
    7. '(N' → logprob: -17.879079818725586
    8. '()' → logprob: -18.629079818725586
    9. '(C' → logprob: -19.254079818725586
    10. '((' → logprob: -19.504079818725586

Token 220: 'un' (ID: 373)
  Prédit: 'Sun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sun' → logprob: -0.06695540994405746
    2. 'un' → logprob: -3.441955327987671
    3. '(S' → logprob: -4.06695556640625
    4. 'S' → logprob: -4.19195556640625
    5. 'u' → logprob: -8.56695556640625
    6. '_S' → logprob: -8.69195556640625
    7. ')' → logprob: -9.56695556640625
    8. '(' → logprob: -10.94195556640625
    9. ' Sun' → logprob: -11.31695556640625
    10. 'uk' → logprob: -11.31695556640625

Token 221: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -1.5048530030981055e-06
    2. 'uk' → logprob: -14.000001907348633
    3. 'U' → logprob: -15.125001907348633
    4. 'u' → logprob: -15.500001907348633
    5. ' uke' → logprob: -16.500001907348633
    6. 'S' → logprob: -16.750001907348633
    7. 'Luke' → logprob: -17.750001907348633
    8. '```' → logprob: -18.750001907348633
    9. 'oke' → logprob: -19.125001907348633
    10. 'ke' → logprob: -19.125001907348633

Token 222: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ')
' → logprob: -12.875003814697266
    3. '())' → logprob: -14.250003814697266
    4. '()' → logprob: -14.500003814697266
    5. ' )' → logprob: -15.750003814697266
    6. ')

' → logprob: -17.500003814697266
    7. ')`' → logprob: -18.000003814697266
    8. '))' → logprob: -18.250003814697266
    9. '`)' → logprob: -18.750003814697266
    10. ')#' → logprob: -19.000003814697266

Token 223: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16024067997932434
    2. 'main' → logprob: -1.910240650177002
    3. ' main' → logprob: -11.78524112701416
    4. ' if' → logprob: -12.28524112701416
    5. '(main' → logprob: -13.28524112701416
    6. '
' → logprob: -13.91024112701416
    7. '#' → logprob: -14.16024112701416
    8. '_main' → logprob: -14.91024112701416
    9. '	main' → logprob: -15.66024112701416
    10. '\n' → logprob: -16.035240173339844

Token 224: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05500313267111778
    2. '(' → logprob: -2.9300031661987305
    3. '()
' → logprob: -9.30500316619873
    4. '(
' → logprob: -11.05500316619873
    5. '#' → logprob: -12.43000316619873
    6. '()

' → logprob: -13.43000316619873
    7. '();' → logprob: -13.68000316619873
    8. '```' → logprob: -13.68000316619873
    9. '()\' → logprob: -13.80500316619873
    10. '()`' → logprob: -13.80500316619873


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 222
Tokens correctement prédits (1ère position, stricte): 107
Tokens correctement prédits (1ère position, avec adaptation): 119
Tokens correctement prédits (top 10): 189
Précision stricte (1ère position): 48.20%
Précision adaptée (1ère position): 53.60%
Précision (top 10): 85.14%
================================================================================
