================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

a, b, x = map(int, input().split())

y = x / a

if y <= (a * b) / 2:
    angle = 90 - math.degrees(math.atan((2 * y) / pow(b, 2)))
    print(angle)
else:
    y = a * b - y
    angle = math.degrees(math.atan((2 * y) / pow(a, 2)))
    print(angle)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'a' (ID: 64)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -8.470901229884475e-05
    2. 'import' → logprob: -10.62508487701416
    3. '```' → logprob: -11.00008487701416
    4. '\' → logprob: -11.25008487701416
    5. '.
' → logprob: -12.62508487701416
    6. 'def' → logprob: -12.75008487701416
    7. '.pi' → logprob: -12.87508487701416
    8. '\n' → logprob: -13.00008487701416
    9. '<|end|>' → logprob: -13.12508487701416
    10. '.e' → logprob: -13.25008487701416

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16828082501888275
    2. '=' → logprob: -2.293280839920044
    3. '+' → logprob: -3.543280839920044
    4. 'd' → logprob: -5.293280601501465
    5. '[' → logprob: -5.293280601501465
    6. ' ' → logprob: -5.418280601501465
    7. '*' → logprob: -5.543280601501465
    8. ')' → logprob: -6.418280601501465
    9. ',' → logprob: -6.918280601501465
    10. '_' → logprob: -7.418280601501465

Token 5: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.39453813433647156
    2. 'b' → logprob: -1.644538164138794
    3. ' ' → logprob: -2.019538164138794
    4. ' =' → logprob: -9.519537925720215
    5. '_' → logprob: -10.769537925720215
    6. '_b' → logprob: -11.144537925720215
    7. ' ,' → logprob: -11.144537925720215
    8. 'space' → logprob: -11.394537925720215
    9. '=' → logprob: -11.894537925720215
    10. '  ' → logprob: -12.269537925720215

Token 6: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12259747833013535
    2. '=' → logprob: -2.2475974559783936
    3. ',' → logprob: -4.872597694396973
    4. ' ' → logprob: -6.872597694396973
    5. ' ,' → logprob: -7.247597694396973
    6. ')' → logprob: -8.872597694396973
    7. '<|end|>' → logprob: -9.122597694396973
    8. '  ' → logprob: -10.872597694396973
    9. ' =
' → logprob: -11.247597694396973
    10. '[' → logprob: -11.872597694396973

Token 7: ' x' (ID: 1215)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.006404365878552198
    2. 'c' → logprob: -5.506404399871826
    3. ' =' → logprob: -6.131404399871826
    4. '=' → logprob: -9.131403923034668
    5. ' ' → logprob: -10.631403923034668
    6. '=c' → logprob: -12.506403923034668
    7. ' ' → logprob: -13.256403923034668
    8. ' and' → logprob: -13.631403923034668
    9. ' s' → logprob: -13.881403923034668
    10. '_c' → logprob: -14.006403923034668

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42883700132369995
    2. '=' → logprob: -1.0538370609283447
    3. ',' → logprob: -9.053836822509766
    4. ' ' → logprob: -11.553836822509766
    5. ')' → logprob: -12.553836822509766
    6. 'space' → logprob: -13.303836822509766
    7. '_' → logprob: -14.178836822509766
    8. 's' → logprob: -14.178836822509766
    9. ' ,' → logprob: -14.553836822509766
    10. '.' → logprob: -14.803836822509766

Token 9: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.3729187250137329
    2. ' ' → logprob: -1.622918725013733
    3. 'map' → logprob: -2.2479186058044434
    4. '0' → logprob: -5.247918605804443
    5. '10' → logprob: -6.747918605804443
    6. '1' → logprob: -7.122918605804443
    7. '5' → logprob: -7.622918605804443
    8. ' float' → logprob: -9.372919082641602
    9. ' int' → logprob: -9.372919082641602
    10. '3' → logprob: -9.497919082641602

Token 10: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.034638792276382446
    2. '(lambda' → logprob: -4.28463888168335
    3. '<|end|>' → logprob: -4.53463888168335
    4. '(int' → logprob: -5.65963888168335
    5. '(str' → logprob: -6.15963888168335
    6. '```' → logprob: -6.78463888168335
    7. '(token' → logprob: -8.159638404846191
    8. '<|end|>' → logprob: -8.284638404846191
    9. '()' → logprob: -8.409638404846191
    10. ' (' → logprob: -8.659638404846191

Token 11: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6254477500915527
    2. '(input' → logprob: -0.8754477500915527
    3. '(' → logprob: -3.2504477500915527
    4. ',' → logprob: -6.125447750091553
    5. '```' → logprob: -6.750447750091553
    6. 'input' → logprob: -7.375447750091553
    7. '<|end|>' → logprob: -7.500447750091553
    8. '(str' → logprob: -7.500447750091553
    9. '`)' → logprob: -7.625447750091553
    10. '(int' → logprob: -7.750447750091553

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.252267062664032
    2. ' input' → logprob: -1.5022671222686768
    3. ')' → logprob: -8.377266883850098
    4. '(input' → logprob: -9.252266883850098
    5. ',input' → logprob: -12.627266883850098
    6. ' )' → logprob: -12.752266883850098
    7. '```' → logprob: -13.127266883850098
    8. '=input' → logprob: -13.627266883850098
    9. 'math' → logprob: -14.752266883850098
    10. ' ' → logprob: -15.252266883850098

Token 13: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6980776190757751
    2. '())' → logprob: -0.8230776190757751
    3. '().' → logprob: -3.44807767868042
    4. '(' → logprob: -4.44807767868042
    5. ')' → logprob: -4.44807767868042
    6. '());' → logprob: -5.82307767868042
    7. '();)' → logprob: -6.82307767868042
    8. '(()' → logprob: -7.32307767868042
    9. '('' → logprob: -7.44807767868042
    10. '(""))' → logprob: -7.69807767868042

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009312293259426951
    2. 'strip' → logprob: -7.000931262969971
    3. 'rstrip' → logprob: -10.875930786132812
    4. ' split' → logprob: -14.000930786132812
    5. '(split' → logprob: -16.625930786132812
    6. 'read' → logprob: -17.375930786132812
    7. ')' → logprob: -18.125930786132812
    8. 'spl' → logprob: -18.250930786132812
    9. ' strip' → logprob: -19.375930786132812
    10. ' readline' → logprob: -20.125930786132812

Token 15: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009218101389706135
    2. '))' → logprob: -4.759218215942383
    3. '())' → logprob: -7.509218215942383
    4. '()' → logprob: -10.759218215942383
    5. ')))' → logprob: -11.259218215942383
    6. '`)' → logprob: -12.634218215942383
    7. ')`' → logprob: -12.884218215942383
    8. '()))' → logprob: -13.009218215942383
    9. '),' → logprob: -13.009218215942383
    10. ' )' → logprob: -13.384218215942383

Token 16: 'y' (ID: 88)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.051104240119457245
    2. 'area' → logprob: -3.5511043071746826
    3. ':' → logprob: -5.9261040687561035
    4. 's' → logprob: -6.0511040687561035
    5. 'h' → logprob: -6.1761040687561035
    6. ')' → logprob: -6.3011040687561035
    7. 'r' → logprob: -6.5511040687561035
    8. 'math' → logprob: -6.5511040687561035
    9. 'angle' → logprob: -6.9261040687561035
    10. 'height' → logprob: -6.9261040687561035

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16346392035484314
    2. '=' → logprob: -1.9134639501571655
    3. '_' → logprob: -6.663464069366455
    4. ' ' → logprob: -7.038464069366455
    5. ')' → logprob: -7.663464069366455
    6. ',' → logprob: -8.288463592529297
    7. '_space' → logprob: -9.288463592529297
    8. '/' → logprob: -9.913463592529297
    9. ' **' → logprob: -10.663463592529297
    10. '.' → logprob: -10.663463592529297

Token 18: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.844126284122467
    2. ' a' → logprob: -1.3441262245178223
    3. ' math' → logprob: -1.7191262245178223
    4. 'math' → logprob: -2.4691262245178223
    5. ' (' → logprob: -4.469126224517822
    6. ' x' → logprob: -4.844126224517822
    7. 'x' → logprob: -5.094126224517822
    8. '(math' → logprob: -5.469126224517822
    9. ' min' → logprob: -5.594126224517822
    10. 'b' → logprob: -5.844126224517822

Token 19: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.17949320375919342
    2. '/' → logprob: -2.0544931888580322
    3. '**' → logprob: -4.179493427276611
    4. ' //' → logprob: -4.679493427276611
    5. ' *' → logprob: -5.929493427276611
    6. '*' → logprob: -6.429493427276611
    7. ' **' → logprob: -6.429493427276611
    8. '%' → logprob: -6.679493427276611
    9. ' %' → logprob: -6.929493427276611
    10. '-' → logprob: -7.804493427276611

Token 20: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11580376327037811
    2. 'b' → logprob: -2.6158037185668945
    3. '2' → logprob: -3.6158037185668945
    4. 'math' → logprob: -5.6158037185668945
    5. '(a' → logprob: -5.8658037185668945
    6. '(' → logprob: -7.3658037185668945
    7. '(math' → logprob: -7.3658037185668945
    8. ' a' → logprob: -7.4908037185668945
    9. '(b' → logprob: -8.240803718566895
    10. ' (' → logprob: -8.490803718566895

Token 21: '

' (ID: 279)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5932958722114563
    2. '*' → logprob: -1.3432958126068115
    3. '<|end|>' → logprob: -2.3432958126068115
    4. ')' → logprob: -3.9682958126068115
    5. ' *' → logprob: -4.218296051025391
    6. '2' → logprob: -4.843296051025391
    7. ' ' → logprob: -4.843296051025391
    8. '
' → logprob: -5.093296051025391
    9. '/' → logprob: -5.343296051025391
    10. '*b' → logprob: -5.468296051025391

Token 22: 'if' (ID: 366)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8071470260620117
    2. '*' → logprob: -2.1821470260620117
    3. ' ' → logprob: -2.3071470260620117
    4. '
' → logprob: -2.8071470260620117
    5. '<|end|>' → logprob: -2.8071470260620117
    6. ')' → logprob: -2.9321470260620117
    7. '2' → logprob: -3.0571470260620117
    8. '**' → logprob: -3.5571470260620117
    9. '*b' → logprob: -4.182147026062012
    10. '0' → logprob: -4.307147026062012

Token 23: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.05771491676568985
    2. ' b' → logprob: -3.1827149391174316
    3. 'y' → logprob: -4.682714939117432
    4. 'b' → logprob: -5.307714939117432
    5. ' ' → logprob: -8.182714462280273
    6. ' a' → logprob: -9.432714462280273
    7. 'a' → logprob: -11.307714462280273
    8. ' x' → logprob: -12.057714462280273
    9. ' (' → logprob: -12.057714462280273
    10. ' ' → logprob: -12.182714462280273

Token 24: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.8334856629371643
    2. ' <' → logprob: -1.5834856033325195
    3. ' <=' → logprob: -1.7084856033325195
    4. ' >=' → logprob: -1.9584856033325195
    5. '>' → logprob: -3.5834856033325195
    6. ' ' → logprob: -6.0834856033325195
    7. '>=' → logprob: -6.0834856033325195
    8. '<=' → logprob: -6.2084856033325195
    9. ' ==' → logprob: -6.4584856033325195
    10. '<' → logprob: -6.4584856033325195

Token 25: ' (' (ID: 350)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.009129147045314312
    2. ' b' → logprob: -4.759129047393799
    3. '(b' → logprob: -9.134129524230957
    4. ' ' → logprob: -9.134129524230957
    5. 'math' → logprob: -9.384129524230957
    6. '1' → logprob: -9.509129524230957
    7. '2' → logprob: -10.134129524230957
    8. '0' → logprob: -10.259129524230957
    9. 'a' → logprob: -11.384129524230957
    10. '   ' → logprob: -11.509129524230957

Token 26: 'a' (ID: 64)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005710016004741192
    2. ' b' → logprob: -5.255710124969482
    3. 'math' → logprob: -9.005709648132324
    4. '2' → logprob: -9.130709648132324
    5. ' ' → logprob: -9.630709648132324
    6. '(b' → logprob: -9.880709648132324
    7. '1' → logprob: -10.755709648132324
    8. '0' → logprob: -10.880709648132324
    9. '(' → logprob: -11.130709648132324
    10. 'a' → logprob: -11.255709648132324

Token 27: ' *' (ID: 425)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0636218935251236
    2. ' /' → logprob: -2.813621997833252
    3. '**' → logprob: -6.813621997833252
    4. '*' → logprob: -8.313621520996094
    5. '2' → logprob: -9.188621520996094
    6. ')' → logprob: -9.688621520996094
    7. ' *' → logprob: -10.313621520996094
    8. '*b' → logprob: -10.938621520996094
    9. ' ' → logprob: -11.063621520996094
    10. '//' → logprob: -11.438621520996094

Token 28: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07297813892364502
    2. ' b' → logprob: -3.6979780197143555
    3. '2' → logprob: -3.8229780197143555
    4. '/' → logprob: -4.9479780197143555
    5. 'a' → logprob: -4.9479780197143555
    6. 'math' → logprob: -5.6979780197143555
    7. ' math' → logprob: -5.8229780197143555
    8. ' ' → logprob: -6.8229780197143555
    9. ' a' → logprob: -7.9479780197143555
    10. '0' → logprob: -7.9479780197143555

Token 29: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09060126543045044
    2. ' /' → logprob: -2.9656012058258057
    3. ' )' → logprob: -4.340601444244385
    4. '):' → logprob: -4.340601444244385
    5. '**' → logprob: -5.090601444244385
    6. '/' → logprob: -6.840601444244385
    7. ')/' → logprob: -7.340601444244385
    8. ' ):' → logprob: -7.715601444244385
    9. ' ' → logprob: -8.840600967407227
    10. '*' → logprob: -8.840600967407227

Token 30: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.9900299906730652
    2. '**' → logprob: -1.11503005027771
    3. '/' → logprob: -1.24003005027771
    4. '/a' → logprob: -5.490029811859131
    5. ':' → logprob: -5.865029811859131
    6. '*' → logprob: -6.365029811859131
    7. ' **' → logprob: -6.865029811859131
    8. ' *' → logprob: -7.740029811859131
    9. ' ' → logprob: -8.365030288696289
    10. '/b' → logprob: -8.490030288696289

Token 31: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.021014656871557236
    2. ' ' → logprob: -3.89601469039917
    3. '(' → logprob: -7.77101469039917
    4. ' (' → logprob: -10.396014213562012
    5. 'b' → logprob: -12.646014213562012
    6. 'a' → logprob: -13.021014213562012
    7. ' math' → logprob: -13.021014213562012
    8. '4' → logprob: -13.521014213562012
    9. '3' → logprob: -13.708514213562012
    10. '  ' → logprob: -13.771014213562012

Token 32: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005315870512276888
    2. ' ' → logprob: -8.000531196594238
    3. '(' → logprob: -8.625531196594238
    4. '```' → logprob: -12.750531196594238
    5. ' (' → logprob: -13.125531196594238
    6. '   ' → logprob: -13.375531196594238
    7. '3' → logprob: -13.875531196594238
    8. ' ' → logprob: -13.875531196594238
    9. '4' → logprob: -14.000531196594238
    10. 'a' → logprob: -14.125531196594238

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002494087442755699
    2. ' :' → logprob: -6.002493858337402
    3. ':
' → logprob: -12.002493858337402
    4. ':**' → logprob: -12.127493858337402
    5. '+:' → logprob: -13.002493858337402
    6. '):' → logprob: -13.377493858337402
    7. '**' → logprob: -14.252493858337402
    8. '.' → logprob: -14.877493858337402
    9. '>:' → logprob: -15.002493858337402
    10. '：' → logprob: -15.127493858337402

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3460428714752197
    2. '    ' → logprob: -2.8460428714752197
    3. ' math' → logprob: -3.2210428714752197
    4. '\n' → logprob: -3.3460428714752197
    5. ':' → logprob: -3.5960428714752197
    6. 'print' → logprob: -3.7210428714752197
    7. 'import' → logprob: -4.096042633056641
    8. 'math' → logprob: -4.221042633056641
    9. ' ' → logprob: -4.471042633056641
    10. ' *' → logprob: -4.596042633056641

Token 35: ' angle' (ID: 16538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09780114889144897
    2. 'math' → logprob: -2.7228012084960938
    3. ' print' → logprob: -4.472801208496094
    4. ' math' → logprob: -4.722801208496094
    5. '2' → logprob: -6.097801208496094
    6. '(' → logprob: -6.472801208496094
    7. '0' → logprob: -7.097801208496094
    8. '   ' → logprob: -7.097801208496094
    9. 'import' → logprob: -7.222801208496094
    10. '(math' → logprob: -7.972801208496094

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0008391655283048749
    2. '=' → logprob: -7.1258392333984375
    3. ' ' → logprob: -10.750839233398438
    4. 's' → logprob: -12.375839233398438
    5. '_' → logprob: -12.625839233398438
    6. ')' → logprob: -13.875839233398438
    7. '_angle' → logprob: -14.000839233398438
    8. '  ' → logprob: -14.000839233398438
    9. '   ' → logprob: -14.500839233398438
    10. ' =)' → logprob: -14.750839233398438

Token 37: ' ' (ID: 220)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.4287848174571991
    2. 'math' → logprob: -1.0537848472595215
    3. '(math' → logprob: -10.053784370422363
    4. ' ' → logprob: -10.928784370422363
    5. '180' → logprob: -11.303784370422363
    6. '   ' → logprob: -12.553784370422363
    7. '2' → logprob: -13.428784370422363
    8. '(' → logprob: -14.178784370422363
    9. '1' → logprob: -14.178784370422363
    10. '  ' → logprob: -14.803784370422363

Token 38: '90' (ID: 2744)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.00073197390884161
    2. '180' → logprob: -7.875731945037842
    3. ' math' → logprob: -8.750732421875
    4. '90' → logprob: -9.250732421875
    5. '(math' → logprob: -9.750732421875
    6. '   ' → logprob: -11.250732421875
    7. '2' → logprob: -11.500732421875
    8. '(' → logprob: -12.000732421875
    9. '360' → logprob: -12.250732421875
    10. '45' → logprob: -14.125732421875

Token 39: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11304016411304474
    2. '-' → logprob: -2.2380402088165283
    3. '<|end|>' → logprob: -8.73803997039795
    4. '*' → logprob: -10.86303997039795
    5. ' *' → logprob: -11.23803997039795
    6. '.' → logprob: -12.23803997039795
    7. '   ' → logprob: -12.73803997039795
    8. 'else' → logprob: -12.73803997039795
    9. ' ' → logprob: -12.98803997039795
    10. '0' → logprob: -13.23803997039795

Token 40: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0005570820067077875
    2. ' math' → logprob: -7.625556945800781
    3. '(math' → logprob: -9.875556945800781
    4. 'int' → logprob: -11.625556945800781
    5. '180' → logprob: -12.500556945800781
    6. '   ' → logprob: -13.375556945800781
    7. '90' → logprob: -13.875556945800781
    8. '(' → logprob: -14.375556945800781
    9. 'mat' → logprob: -14.875556945800781
    10. 'ma' → logprob: -14.875556945800781

Token 41: '.de' (ID: 3906)
  Prédit: '.de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.de' → logprob: -0.16133221983909607
    2. '.atan' → logprob: -1.9113322496414185
    3. '.as' → logprob: -7.286332130432129
    4. '.' → logprob: -8.411332130432129
    5. '.ac' → logprob: -8.536332130432129
    6. 'atan' → logprob: -14.286332130432129
    7. '.sqrt' → logprob: -14.536332130432129
    8. '.ceil' → logprob: -14.661332130432129
    9. '.sin' → logprob: -14.911332130432129
    10. 'de' → logprob: -15.036332130432129

Token 42: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -0.004007045645266771
    2. 'g' → logprob: -5.629006862640381
    3. 'gree' → logprob: -8.004007339477539
    4. 'r' → logprob: -10.504007339477539
    5. 'rees' → logprob: -10.879007339477539
    6. 'gre' → logprob: -11.879007339477539
    7. 'gs' → logprob: -12.254007339477539
    8. 'gress' → logprob: -12.504007339477539
    9. 'gr' → logprob: -12.629007339477539
    10. 'gres' → logprob: -13.254007339477539

Token 43: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.0004374638374429196
    2. '(' → logprob: -7.750437259674072
    3. 'math' → logprob: -12.00043773651123
    4. '(Math' → logprob: -15.62543773651123
    5. '((' → logprob: -16.125436782836914
    6. '(

' → logprob: -16.250436782836914
    7. ' (' → logprob: -16.750436782836914
    8. '(
' → logprob: -17.000436782836914
    9. ' math' → logprob: -17.250436782836914
    10. '(m' → logprob: -17.375436782836914

Token 44: '.atan' (ID: 157113)
  Prédit: '.atan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.atan' → logprob: -0.0184883214533329
    2. '.as' → logprob: -4.01848840713501
    3. '.ac' → logprob: -8.018487930297852
    4. '.' → logprob: -12.143487930297852
    5. '.t' → logprob: -13.018487930297852
    6. '.sin' → logprob: -13.768487930297852
    7. 'atan' → logprob: -16.01848793029785
    8. '.sqrt' → logprob: -16.14348793029785
    9. '.f' → logprob: -16.39348793029785
    10. '.at' → logprob: -16.51848793029785

Token 45: '((' (ID: 2054)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.5533802509307861
    2. '((' → logprob: -1.1783802509307861
    3. '(' → logprob: -2.803380250930786
    4. '(b' → logprob: -3.178380250930786
    5. '(a' → logprob: -4.678380012512207
    6. '2' → logprob: -5.803380012512207
    7. ' (' → logprob: -7.303380012512207
    8. 'b' → logprob: -7.428380012512207
    9. '(x' → logprob: -7.803380012512207
    10. ')' → logprob: -8.053380012512207

Token 46: '2' (ID: 17)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.0086919069290161
    2. '2' → logprob: -1.2586919069290161
    3. 'b' → logprob: -1.6336919069290161
    4. 'a' → logprob: -2.5086917877197266
    5. '(a' → logprob: -3.3836917877197266
    6. '(' → logprob: -4.383691787719727
    7. '(b' → logprob: -4.383691787719727
    8. ' y' → logprob: -5.508691787719727
    9. '(y' → logprob: -5.633691787719727
    10. 'x' → logprob: -6.258691787719727

Token 47: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5830328464508057
    2. '*' → logprob: -0.8330328464508057
    3. '*y' → logprob: -4.958032608032227
    4. ' ' → logprob: -10.708032608032227
    5. '*b' → logprob: -12.333032608032227
    6. 'y' → logprob: -12.333032608032227
    7. ' y' → logprob: -13.083032608032227
    8. '*x' → logprob: -13.208032608032227
    9. ')' → logprob: -13.208032608032227
    10. '*(' → logprob: -13.458032608032227

Token 48: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04264000058174133
    2. ' y' → logprob: -3.292639970779419
    3. 'b' → logprob: -6.042640209197998
    4. 'x' → logprob: -6.292640209197998
    5. '*y' → logprob: -8.54263973236084
    6. ' x' → logprob: -9.54263973236084
    7. ' b' → logprob: -9.91763973236084
    8. ' *' → logprob: -11.54263973236084
    9. '	y' → logprob: -11.91763973236084
    10. '*' → logprob: -11.91763973236084

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0556483119726181
    2. ' )' → logprob: -3.1806483268737793
    3. ')/(' → logprob: -4.680648326873779
    4. ' /' → logprob: -6.055648326873779
    5. '/' → logprob: -7.305648326873779
    6. ')/' → logprob: -8.680647850036621
    7. ' ' → logprob: -10.055647850036621
    8. '   ' → logprob: -10.805647850036621
    9. '/a' → logprob: -11.430647850036621
    10. '/(' → logprob: -11.680647850036621

Token 50: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.6940938830375671
    2. ' /' → logprob: -0.6940938830375671
    3. '/(' → logprob: -8.194093704223633
    4. '/
' → logprob: -8.319093704223633
    5. ')' → logprob: -8.444093704223633
    6. '/a' → logprob: -9.569093704223633
    7. ' /
' → logprob: -9.569093704223633
    8. '   ' → logprob: -10.819093704223633
    9. ' ' → logprob: -11.194093704223633
    10. ')/(' → logprob: -11.819093704223633

Token 51: ' pow' (ID: 9779)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03474702686071396
    2. 'b' → logprob: -4.034747123718262
    3. ' a' → logprob: -4.284747123718262
    4. '(a' → logprob: -6.534747123718262
    5. ' (' → logprob: -7.409747123718262
    6. ' b' → logprob: -7.909747123718262
    7. '(' → logprob: -8.409747123718262
    8. '(b' → logprob: -11.659747123718262
    9. 'x' → logprob: -12.034747123718262
    10. '   ' → logprob: -12.409747123718262

Token 52: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.4044993221759796
    2. '(a' → logprob: -1.1544992923736572
    3. 'b' → logprob: -4.404499530792236
    4. 'a' → logprob: -5.779499530792236
    5. '(' → logprob: -6.154499530792236
    6. '(x' → logprob: -11.154499053955078
    7. '((' → logprob: -12.279499053955078
    8. ')b' → logprob: -12.404499053955078
    9. '(
' → logprob: -12.779499053955078
    10. ' b' → logprob: -12.779499053955078

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0411551296710968
    2. '2' → logprob: -3.2911550998687744
    3. ' ,' → logprob: -5.9161553382873535
    4. '**' → logprob: -8.541154861450195
    5. '**,' → logprob: -9.791154861450195
    6. ' ' → logprob: -9.916154861450195
    7. '(),' → logprob: -10.416154861450195
    8. '*,' → logprob: -10.791154861450195
    9. ')' → logprob: -11.541154861450195
    10. '```' → logprob: -11.541154861450195

Token 54: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0028628890868276358
    2. ' ' → logprob: -5.877862930297852
    3. '   ' → logprob: -10.377862930297852
    4. '3' → logprob: -11.877862930297852
    5. '  ' → logprob: -12.002862930297852
    6. '1' → logprob: -13.065362930297852
    7. ' ' → logprob: -13.377862930297852
    8. 'a' → logprob: -13.440362930297852
    9. '²' → logprob: -13.815362930297852
    10. '(' → logprob: -13.815362930297852

Token 55: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.492120155598968e-05
    2. '-' → logprob: -10.625064849853516
    3. ' ' → logprob: -10.875064849853516
    4. '3' → logprob: -11.500064849853516
    5. '   ' → logprob: -12.500064849853516
    6. '1' → logprob: -12.750064849853516
    7. '²' → logprob: -13.937564849853516
    8. 'a' → logprob: -14.125064849853516
    9. '  ' → logprob: -14.500064849853516
    10. ' -' → logprob: -15.187564849853516

Token 56: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.008498981595039368
    2. ')' → logprob: -5.2584991455078125
    3. ')))
' → logprob: -6.5084991455078125
    4. '))' → logprob: -6.5084991455078125
    5. '))))' → logprob: -8.633499145507812
    6. ' ' → logprob: -10.133499145507812
    7. ')))

' → logprob: -10.508499145507812
    8. ')))
' → logprob: -11.508499145507812
    9. ')));' → logprob: -12.383499145507812
    10. '))))
' → logprob: -12.758499145507812

Token 57: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.8059138655662537
    2. ')' → logprob: -1.0559139251708984
    3. 'print' → logprob: -1.6809139251708984
    4. ' else' → logprob: -4.180913925170898
    5. ' print' → logprob: -6.180913925170898
    6. '\n' → logprob: -8.430913925170898
    7. ':' → logprob: -8.680913925170898
    8. '' → logprob: -9.055913925170898
    9. '<|end|>' → logprob: -9.180913925170898
    10. '.' → logprob: -9.305913925170898

Token 58: ' print' (ID: 2123)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13097742199897766
    2. 'print' (adapté à ' print') → logprob: -2.1309773921966553
    3. 'else' → logprob: -6.005977630615234
    4. ' print' → logprob: -6.755977630615234
    5. 'p' → logprob: -8.505977630615234
    6. ')
' → logprob: -9.880977630615234
    7. ' else' → logprob: -10.130977630615234
    8. '   ' → logprob: -10.755977630615234
    9. 'pr' → logprob: -11.630977630615234
    10. '' → logprob: -11.755977630615234

Token 59: '(angle' (ID: 66047)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4432140588760376
    2. '(angle' → logprob: -1.3182140588760376
    3. '(int' → logprob: -3.068213939666748
    4. '(math' → logprob: -3.818213939666748
    5. '(f' → logprob: -4.068213939666748
    6. '(round' → logprob: -5.443213939666748
    7. 'angle' → logprob: -8.943214416503906
    8. '('' → logprob: -9.068214416503906
    9. ' (' → logprob: -9.568214416503906
    10. '("' → logprob: -9.943214416503906

Token 60: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020902375399600714
    2. '))' → logprob: -8.500208854675293
    3. ' )' → logprob: -12.500208854675293
    4. ')
' → logprob: -13.875208854675293
    5. ')))' → logprob: -15.125208854675293
    6. ')`' → logprob: -15.375208854675293
    7. ')")' → logprob: -16.00020980834961
    8. ')**' → logprob: -16.75020980834961
    9. ' ' → logprob: -17.00020980834961
    10. '   ' → logprob: -17.37520980834961

Token 61: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0006874137907288969
    2. ' else' → logprob: -7.375687599182129
    3. 'e' → logprob: -10.000687599182129
    4. ')' → logprob: -11.625687599182129
    5. 'elif' → logprob: -12.500687599182129
    6. '```' → logprob: -13.625687599182129
    7. '	else' → logprob: -14.875687599182129
    8. 'el' → logprob: -15.250687599182129
    9. '_else' → logprob: -15.625687599182129
    10. 'elser' → logprob: -16.000686645507812

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006243953830562532
    2. ':
' → logprob: -7.500624179840088
    3. ' :' → logprob: -9.625624656677246
    4. '   ' → logprob: -12.375624656677246
    5. ' :
' → logprob: -14.375624656677246
    6. ':
' → logprob: -15.000624656677246
    7. ':

' → logprob: -15.625624656677246
    8. '：' → logprob: -16.62562370300293
    9. '{' → logprob: -17.37562370300293
    10. '):' → logprob: -17.75062370300293

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2593570053577423
    2. ' angle' → logprob: -1.50935697555542
    3. 'angle' → logprob: -5.13435697555542
    4. '```' → logprob: -7.25935697555542
    5. '    ' → logprob: -8.384357452392578
    6. ' math' → logprob: -8.759357452392578
    7. ' ' → logprob: -9.759357452392578
    8. 'import' → logprob: -9.759357452392578
    9. ' x' → logprob: -10.509357452392578
    10. ' a' → logprob: -10.509357452392578

Token 64: ' y' (ID: 342)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.0867360532283783
    2. ' angle' → logprob: -2.586735963821411
    3. '   ' → logprob: -4.96173620223999
    4. '90' → logprob: -8.336735725402832
    5. 'print' → logprob: -8.336735725402832
    6. 'y' (adapté à ' y') → logprob: -9.711735725402832
    7. 'x' → logprob: -9.961735725402832
    8. 'import' → logprob: -10.461735725402832
    9. '180' → logprob: -10.836735725402832
    10. ' y' → logprob: -10.836735725402832

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34927693009376526
    2. '=' → logprob: -1.2242769002914429
    3. ' ' → logprob: -7.599277019500732
    4. 'angle' → logprob: -9.474276542663574
    5. '2' → logprob: -9.849276542663574
    6. ',' → logprob: -10.099276542663574
    7. '_' → logprob: -10.599276542663574
    8. '```' → logprob: -10.849276542663574
    9. '   ' → logprob: -10.974276542663574
    10. '-' → logprob: -11.099276542663574

Token 66: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7674002051353455
    2. '(a' → logprob: -1.2674002647399902
    3. 'x' → logprob: -2.5174002647399902
    4. ' (' → logprob: -3.0174002647399902
    5. 'b' → logprob: -3.1424002647399902
    6. '(b' → logprob: -3.3924002647399902
    7. ' a' → logprob: -4.14240026473999
    8. '(x' → logprob: -4.39240026473999
    9. '(' → logprob: -4.76740026473999
    10. ' x' → logprob: -5.76740026473999

Token 67: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1742687076330185
    2. ' *' → logprob: -2.5492687225341797
    3. 'b' → logprob: -3.1742687225341797
    4. ' -' → logprob: -3.6742687225341797
    5. '-' → logprob: -4.54926872253418
    6. '*b' → logprob: -5.79926872253418
    7. ' b' → logprob: -7.79926872253418
    8. ' ' → logprob: -8.29926872253418
    9. '*(' → logprob: -9.54926872253418
    10. '(' → logprob: -10.17426872253418

Token 68: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0026508092414587736
    2. ' b' → logprob: -6.752650737762451
    3. 'a' → logprob: -7.877650737762451
    4. '(' → logprob: -7.877650737762451
    5. 'y' → logprob: -8.00265121459961
    6. 'x' → logprob: -8.50265121459961
    7. '(b' → logprob: -9.87765121459961
    8. '2' → logprob: -9.87765121459961
    9. '(a' → logprob: -10.75265121459961
    10. ' (' → logprob: -10.87765121459961

Token 69: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6553458571434021
    2. '-' → logprob: -0.7803458571434021
    3. '/' → logprob: -3.905345916748047
    4. ' /' → logprob: -6.155345916748047
    5. '*' → logprob: -8.780345916748047
    6. ' ' → logprob: -10.530345916748047
    7. '   ' → logprob: -11.655345916748047
    8. ' *' → logprob: -11.780345916748047
    9. '/b' → logprob: -12.155345916748047
    10. '  ' → logprob: -12.530345916748047

Token 70: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.007612544111907482
    2. ' x' → logprob: -4.882612705230713
    3. 'y' → logprob: -12.257612228393555
    4. '	x' → logprob: -14.132612228393555
    5. '   ' → logprob: -14.757612228393555
    6. ' y' → logprob: -14.757612228393555
    7. ' ' → logprob: -17.382612228393555
    8. '<|end|>' → logprob: -17.882612228393555
    9. '2' → logprob: -18.132612228393555
    10. '(x' → logprob: -18.257612228393555

Token 71: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.61082524061203
    2. 'angle' → logprob: -0.86082524061203
    3. ' angle' → logprob: -3.485825300216675
    4. '
' → logprob: -5.985825061798096
    5. '```' → logprob: -7.610825061798096
    6. ' ' → logprob: -9.110825538635254
    7. '``' → logprob: -9.735825538635254
    8. '    ' → logprob: -9.985825538635254
    9. '_angle' → logprob: -9.985825538635254
    10. '(angle' → logprob: -10.110825538635254

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.514154851436615
    2. 'angle' → logprob: -1.1391549110412598
    3. ' angle' → logprob: -2.5141549110412598
    4. '
' → logprob: -7.76415491104126
    5. '```' → logprob: -8.639154434204102
    6. '    ' → logprob: -9.389154434204102
    7. ' ' → logprob: -9.889154434204102
    8. '_angle' → logprob: -10.264154434204102
    9. '(angle' → logprob: -10.514154434204102
    10. '    
' → logprob: -10.514154434204102

Token 73: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' (adapté à ' angle') → logprob: -0.0011192612582817674
    2. ' angle' → logprob: -6.876119136810303
    3. '   ' → logprob: -9.501119613647461
    4. ' ' → logprob: -12.876119613647461
    5. '90' → logprob: -13.501119613647461
    6. 'print' → logprob: -13.751119613647461
    7. '```' → logprob: -14.126119613647461
    8. '  ' → logprob: -14.501119613647461
    9. 'theta' → logprob: -14.626119613647461
    10. '(angle' → logprob: -14.688619613647461

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008618239313364029
    2. '=' → logprob: -4.758618354797363
    3. 's' → logprob: -13.383618354797363
    4. ' ' → logprob: -13.883618354797363
    5. '_' → logprob: -14.508618354797363
    6. '   ' → logprob: -15.508618354797363
    7. ' +=' → logprob: -16.383617401123047
    8. '2' → logprob: -16.633617401123047
    9. 'angle' → logprob: -17.008617401123047
    10. ')' → logprob: -17.133617401123047

Token 75: ' math' (ID: 13324)
  Prédit: '90'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.05633150041103363
    2. 'math' → logprob: -3.3063313961029053
    3. ' ' → logprob: -4.556331634521484
    4. ' math' → logprob: -4.931331634521484
    5. '45' → logprob: -8.806331634521484
    6. '   ' → logprob: -9.306331634521484
    7. '180' → logprob: -9.431331634521484
    8. '89' → logprob: -10.556331634521484
    9. '(math' → logprob: -10.681331634521484
    10. '    ' → logprob: -12.056331634521484

Token 76: '.de' (ID: 3906)
  Prédit: '.de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.de' → logprob: -0.00026753442944027483
    2. '.atan' → logprob: -8.25026798248291
    3. '.' → logprob: -12.12526798248291
    4. '.ac' → logprob: -14.87526798248291
    5. 'degrees' → logprob: -16.375267028808594
    6. '	de' → logprob: -16.500267028808594
    7. ' .' → logprob: -16.750267028808594
    8. '.as' → logprob: -17.500267028808594
    9. ' degrees' → logprob: -17.750267028808594
    10. '.pi' → logprob: -17.750267028808594

Token 77: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -3.531315314830863e-06
    2. 'g' → logprob: -14.000003814697266
    3. 'gress' → logprob: -14.125003814697266
    4. 'gre' → logprob: -14.250003814697266
    5. 'gree' → logprob: -14.875003814697266
    6. 'gres' → logprob: -14.875003814697266
    7. 'degrees' → logprob: -14.875003814697266
    8. 'gr' → logprob: -16.750003814697266
    9. 'rees' → logprob: -17.000003814697266
    10. 'f' → logprob: -17.375003814697266

Token 78: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.020582882687449455
    2. '(' → logprob: -3.895582914352417
    3. '(Math' → logprob: -10.270583152770996
    4. 'math' → logprob: -12.895583152770996
    5. '(pow' → logprob: -14.395583152770996
    6. '(torch' → logprob: -14.520583152770996
    7. '(
' → logprob: -15.020583152770996
    8. '.math' → logprob: -15.020583152770996
    9. ' (' → logprob: -15.145583152770996
    10. '(mat' → logprob: -15.270583152770996

Token 79: '.atan' (ID: 157113)
  Prédit: '.atan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.atan' → logprob: -9.150362166110426e-05
    2. '.' → logprob: -9.375091552734375
    3. '.sqrt' → logprob: -12.375091552734375
    4. '.as' → logprob: -14.125091552734375
    5. '.at' → logprob: -14.375091552734375
    6. '.ac' → logprob: -14.500091552734375
    7. ').' → logprob: -15.375091552734375
    8. 'atan' → logprob: -15.875091552734375
    9. '.de' → logprob: -16.375091552734375
    10. '.pi' → logprob: -16.750091552734375

Token 80: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.1458485722541809
    2. '(' → logprob: -2.020848512649536
    3. '(a' → logprob: -6.145848751068115
    4. '(y' → logprob: -7.645848751068115
    5. '(((' → logprob: -8.520848274230957
    6. '(b' → logprob: -9.020848274230957
    7. ')' → logprob: -9.395848274230957
    8. '(x' → logprob: -9.395848274230957
    9. '(math' → logprob: -10.645848274230957
    10. ')((' → logprob: -11.270848274230957

Token 81: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0520193986594677
    2. '2' → logprob: -3.0520193576812744
    3. '(b' → logprob: -6.4270195960998535
    4. '(a' → logprob: -6.9270195960998535
    5. 'pow' → logprob: -7.9270195960998535
    6. '(pow' → logprob: -8.302019119262695
    7. 'b' → logprob: -9.802019119262695
    8. 'a' → logprob: -10.052019119262695
    9. '((' → logprob: -10.427019119262695
    10. ' (' → logprob: -10.677019119262695

Token 82: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.22696256637573242
    2. '*' → logprob: -1.6019625663757324
    3. '*y' → logprob: -6.601962566375732
    4. 'y' → logprob: -9.35196304321289
    5. ' y' → logprob: -9.85196304321289
    6. ' ' → logprob: -10.35196304321289
    7. '(' → logprob: -12.85196304321289
    8. '*x' → logprob: -13.22696304321289
    9. '*(' → logprob: -13.22696304321289
    10. ')' → logprob: -13.22696304321289

Token 83: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5953949689865112
    2. ' y' → logprob: -0.8453949689865112
    3. 'x' → logprob: -4.595395088195801
    4. 'a' → logprob: -5.220395088195801
    5. ' x' → logprob: -5.970395088195801
    6. ' a' → logprob: -6.845395088195801
    7. ' (' → logprob: -10.2203950881958
    8. '(' → logprob: -10.4703950881958
    9. ' ' → logprob: -10.5953950881958
    10. '	y' → logprob: -11.2203950881958

Token 84: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031512778252363205
    2. '/' → logprob: -3.90651273727417
    3. ' )' → logprob: -4.90651273727417
    4. ' /' → logprob: -5.78151273727417
    5. ')/' → logprob: -8.906513214111328
    6. '/a' → logprob: -8.906513214111328
    7. '   ' → logprob: -9.656513214111328
    8. 'a' → logprob: -10.031513214111328
    9. ' ' → logprob: -11.156513214111328
    10. '/)' → logprob: -11.156513214111328

Token 85: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.1458318829536438
    2. ' /' → logprob: -2.020831823348999
    3. ')' → logprob: -6.395832061767578
    4. '/a' → logprob: -6.645832061767578
    5. '/b' → logprob: -9.895832061767578
    6. '   ' → logprob: -10.395832061767578
    7. 'a' → logprob: -10.645832061767578
    8. '/
' → logprob: -10.895832061767578
    9. '/(' → logprob: -11.395832061767578
    10. ' ' → logprob: -11.395832061767578

Token 86: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.023589013144373894
    2. ' pow' → logprob: -4.023589134216309
    3. '(pow' → logprob: -5.273589134216309
    4. 'a' → logprob: -8.898589134216309
    5. '(a' → logprob: -9.148589134216309
    6. '(' → logprob: -10.398589134216309
    7. ' (' → logprob: -11.523589134216309
    8. '(p' → logprob: -12.148589134216309
    9. '   ' → logprob: -12.898589134216309
    10. ')' → logprob: -13.273589134216309

Token 87: '(a' (ID: 6271)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.1607854813337326
    2. '(a' → logprob: -1.910785436630249
    3. '(' → logprob: -7.535785675048828
    4. 'b' → logprob: -10.910785675048828
    5. 'a' → logprob: -11.910785675048828
    6. '(
' → logprob: -14.160785675048828
    7. ' (' → logprob: -14.160785675048828
    8. '((' → logprob: -14.910785675048828
    9. '(x' → logprob: -15.035785675048828
    10. ')' → logprob: -15.535785675048828

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010451936395838857
    2. ',b' → logprob: -8.376045227050781
    3. '(' → logprob: -8.501045227050781
    4. '2' → logprob: -8.626045227050781
    5. 'b' → logprob: -8.626045227050781
    6. '(b' → logprob: -9.001045227050781
    7. ' ,' → logprob: -9.376045227050781
    8. 'a' → logprob: -10.501045227050781
    9. ' b' → logprob: -12.126045227050781
    10. '(a' → logprob: -12.501045227050781

Token 89: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0014341588830575347
    2. ' ' → logprob: -6.751434326171875
    3. 'b' → logprob: -8.626434326171875
    4. 'a' → logprob: -9.626434326171875
    5. '   ' → logprob: -11.626434326171875
    6. ' b' → logprob: -12.876434326171875
    7. '(' → logprob: -13.376434326171875
    8. '  ' → logprob: -13.501434326171875
    9. ' a' → logprob: -13.626434326171875
    10. '1' → logprob: -13.876434326171875

Token 90: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.984787902794778e-05
    2. 'b' → logprob: -9.875100135803223
    3. ' ' → logprob: -10.000100135803223
    4. 'a' → logprob: -13.250100135803223
    5. '1' → logprob: -14.125100135803223
    6. '   ' → logprob: -15.625100135803223
    7. '(' → logprob: -15.875100135803223
    8. ' b' → logprob: -16.375099182128906
    9. '  ' → logprob: -17.000099182128906
    10. ')' → logprob: -17.125099182128906

Token 91: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0285342987626791
    2. '))' → logprob: -3.778534412384033
    3. ')' → logprob: -5.278534412384033
    4. ')))
' → logprob: -9.278533935546875
    5. '))))' → logprob: -10.153533935546875
    6. '   ' → logprob: -11.403533935546875
    7. ' ' → logprob: -11.653533935546875
    8. ')))

' → logprob: -12.153533935546875
    9. 'b' → logprob: -12.278533935546875
    10. ')));' → logprob: -12.778533935546875

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1613788902759552
    2. 'print' → logprob: -1.9113788604736328
    3. ')' → logprob: -7.161378860473633
    4. ' print' → logprob: -8.036378860473633
    5. '```' → logprob: -10.786378860473633
    6. '	print' → logprob: -11.161378860473633
    7. ')
' → logprob: -11.411378860473633
    8. '.print' → logprob: -13.161378860473633
    9. '``' → logprob: -13.411378860473633
    10. '    
' → logprob: -13.786378860473633

Token 93: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.240481914370321e-05
    2. ' print' → logprob: -10.250052452087402
    3. '   ' → logprob: -11.000052452087402
    4. ')' → logprob: -16.375051498413086
    5. '```' → logprob: -16.500051498413086
    6. '.print' → logprob: -16.875051498413086
    7. '	print' → logprob: -17.000051498413086
    8. '(print' → logprob: -18.250051498413086
    9. '``' → logprob: -20.000051498413086
    10. ' ' → logprob: -20.000051498413086

Token 94: '(angle' (ID: 66047)
  Prédit: '(angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(angle' → logprob: -3.6550729419104755e-05
    2. '(' → logprob: -10.250036239624023
    3. 'angle' → logprob: -13.875036239624023
    4. '(round' → logprob: -16.625036239624023
    5. '(abs' → logprob: -17.125036239624023
    6. '(age' → logprob: -18.375036239624023
    7. '(area' → logprob: -18.375036239624023
    8. '(math' → logprob: -18.750036239624023
    9. '(
' → logprob: -19.125036239624023
    10. ' (' → logprob: -19.125036239624023

Token 95: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001593195047462359
    2. '))' → logprob: -8.75015926361084
    3. ' )' → logprob: -14.62515926361084
    4. ')))' → logprob: -15.50015926361084
    5. ')
' → logprob: -16.375160217285156
    6. ')`' → logprob: -17.000160217285156
    7. '')' → logprob: -17.125160217285156
    8. '`)' → logprob: -18.625160217285156
    9. ')")' → logprob: -18.750160217285156
    10. ')**' → logprob: -18.875160217285156


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 93
Tokens correctement prédits (1ère position, stricte): 40
Tokens correctement prédits (1ère position, avec adaptation): 42
Tokens correctement prédits (top 10): 83
Précision stricte (1ère position): 43.01%
Précision adaptée (1ère position): 45.16%
Précision (top 10): 89.25%
================================================================================
