================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b, k = map(int, input().split())
for i in range(k):
    if i % 2 == 0:
        b += a // 2
        a //= 2
    else:
        a += b // 2
        b //= 2
print(a, b)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2113417536020279
    2. '+' → logprob: -1.7113417387008667
    3. ',' → logprob: -5.336341857910156
    4. ' =' → logprob: -5.586341857910156
    5. ' ' → logprob: -8.086341857910156
    6. ' +' → logprob: -8.586341857910156
    7. '*' → logprob: -8.711341857910156
    8. '+=' → logprob: -8.961341857910156
    9. '.' → logprob: -9.086341857910156
    10. '[' → logprob: -9.586341857910156

Token 4: ' k' (ID: 372)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23932650685310364
    2. ',' → logprob: -2.1143264770507812
    3. ' =' → logprob: -2.9893264770507812
    4. 'c' → logprob: -3.7393264770507812
    5. ' ' → logprob: -4.739326477050781
    6. ',c' → logprob: -5.614326477050781
    7. '<|end|>' → logprob: -6.614326477050781
    8. ')' → logprob: -6.864326477050781
    9. '.' → logprob: -7.114326477050781
    10. '_' → logprob: -7.364326477050781

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07682061940431595
    2. '+' → logprob: -2.7018206119537354
    3. ' =' → logprob: -5.5768208503723145
    4. '*' → logprob: -6.4518208503723145
    5. ')' → logprob: -8.076820373535156
    6. ',' → logprob: -8.201820373535156
    7. '**' → logprob: -8.576820373535156
    8. '[' → logprob: -8.701820373535156
    9. '```' → logprob: -9.076820373535156
    10. '+=' → logprob: -9.326820373535156

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03839648887515068
    2. '0' → logprob: -3.5383965969085693
    3. '1' → logprob: -5.16339635848999
    4. ' a' → logprob: -7.03839635848999
    5. 'a' → logprob: -7.41339635848999
    6. '10' → logprob: -7.78839635848999
    7. ' [' → logprob: -8.163396835327148
    8. ' map' → logprob: -8.913396835327148
    9. ' input' → logprob: -9.038396835327148
    10. 'input' → logprob: -9.413396835327148

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007844390347599983
    2. '(lambda' → logprob: -5.7578444480896
    3. '```' → logprob: -5.7578444480896
    4. '<|end|>' → logprob: -7.3828444480896
    5. ')' → logprob: -7.8828444480896
    6. '(user' → logprob: -9.632843971252441
    7. '`' → logprob: -9.757843971252441
    8. '(
' → logprob: -9.882843971252441
    9. ' (' → logprob: -10.257843971252441
    10. '<|end|>' → logprob: -10.632843971252441

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4605284631252289
    2. ')' → logprob: -1.3355284929275513
    3. '(' → logprob: -2.3355283737182617
    4. 'input' → logprob: -5.460528373718262
    5. '```' → logprob: -6.710528373718262
    6. '(user' → logprob: -7.335528373718262
    7. ' input' → logprob: -7.710528373718262
    8. '<|end|>' → logprob: -8.210528373718262
    9. ',' → logprob: -8.335528373718262
    10. '`)' → logprob: -8.335528373718262

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20145183801651
    2. ' input' → logprob: -1.7014517784118652
    3. ')' → logprob: -10.826452255249023
    4. '(input' → logprob: -10.951452255249023
    5. ',input' → logprob: -15.076452255249023
    6. '=input' → logprob: -15.326452255249023
    7. ' )' → logprob: -15.326452255249023
    8. ' ' → logprob: -16.951452255249023
    9. '_input' → logprob: -16.951452255249023
    10. '	input' → logprob: -17.076452255249023

Token 10: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0352811813354492
    2. '()' → logprob: -1.1602811813354492
    3. '())' → logprob: -1.2852811813354492
    4. ')' → logprob: -3.660281181335449
    5. '(()' → logprob: -4.660281181335449
    6. '(token' → logprob: -6.285281181335449
    7. '<|end|>' → logprob: -6.285281181335449
    8. '('' → logprob: -6.535281181335449
    9. '();)' → logprob: -6.535281181335449
    10. '().' → logprob: -7.035281181335449

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000193527273950167
    2. 'strip' → logprob: -8.62519359588623
    3. ' split' → logprob: -12.12519359588623
    4. ')' → logprob: -12.50019359588623
    5. 'rstrip' → logprob: -12.87519359588623
    6. '(split' → logprob: -13.62519359588623
    7. 'spl' → logprob: -14.62519359588623
    8. '```' → logprob: -15.12519359588623
    9. 'read' → logprob: -15.87519359588623
    10. 'startswith' → logprob: -16.375192642211914

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003068622201681137
    2. '))' → logprob: -6.503068447113037
    3. '())' → logprob: -6.628068447113037
    4. '`)' → logprob: -9.003068923950195
    5. '()' → logprob: -9.628068923950195
    6. '(' → logprob: -10.878068923950195
    7. ')`' → logprob: -11.503068923950195
    8. '')' → logprob: -12.378068923950195
    9. ' )' → logprob: -12.628068923950195
    10. ')))' → logprob: -12.628068923950195

Token 13: 'for' (ID: 1938)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1682378053665161
    2. '#' → logprob: -2.5432376861572266
    3. '*' → logprob: -4.168237686157227
    4. ':' → logprob: -4.293237686157227
    5. 'if' → logprob: -4.668237686157227
    6. '+
' → logprob: -5.043237686157227
    7. '=' → logprob: -5.293237686157227
    8. ',' → logprob: -5.293237686157227
    9. '\n' → logprob: -5.668237686157227
    10. '
' → logprob: -5.793237686157227

Token 14: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3829403519630432
    2. ' i' → logprob: -1.2579402923583984
    3. '  ' → logprob: -4.007940292358398
    4. 'i' → logprob: -4.757940292358398
    5. '_' → logprob: -5.132940292358398
    6. ' _' → logprob: -7.757940292358398
    7. ' x' → logprob: -9.132940292358398
    8. ' a' → logprob: -9.257940292358398
    9. ' ‌' → logprob: -9.757940292358398
    10. ' token' → logprob: -10.132940292358398

Token 15: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10831788182258606
    2. 'in' → logprob: -2.3583178520202637
    3. ' ' → logprob: -5.233317852020264
    4. '  ' → logprob: -6.983317852020264
    5. ' n' → logprob: -7.983317852020264
    6. '_' → logprob: -7.983317852020264
    7. 'range' → logprob: -8.358318328857422
    8. 'n' → logprob: -8.608318328857422
    9. ')' → logprob: -8.733318328857422
    10. ' range' → logprob: -9.233318328857422

Token 16: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759537816047668
    2. 'range' → logprob: -0.8259537816047668
    3. ' ' → logprob: -12.200953483581543
    4. ' a' → logprob: -12.575953483581543
    5. '	range' → logprob: -12.700953483581543
    6. 'a' → logprob: -13.700953483581543
    7. '(range' → logprob: -14.200953483581543
    8. '  ' → logprob: -15.950953483581543
    9. '.range' → logprob: -16.32595443725586
    10. 'b' → logprob: -16.32595443725586

Token 17: '(k' (ID: 12125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027555538341403008
    2. '(a' → logprob: -3.652555465698242
    3. '(k' → logprob: -7.402555465698242
    4. '(i' → logprob: -8.027555465698242
    5. '(b' → logprob: -9.027555465698242
    6. ' (' → logprob: -9.152555465698242
    7. '(len' → logprob: -10.152555465698242
    8. '((' → logprob: -10.652555465698242
    9. '(n' → logprob: -11.277555465698242
    10. '(range' → logprob: -12.152555465698242

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009094370761886239
    2. '+' → logprob: -7.875909328460693
    3. ')' → logprob: -8.375909805297852
    4. ' ):' → logprob: -8.375909805297852
    5. ':' → logprob: -10.625909805297852
    6. '):
' → logprob: -10.875909805297852
    7. ',' → logprob: -11.000909805297852
    8. ' ' → logprob: -13.250909805297852
    9. '**' → logprob: -14.000909805297852
    10. ' +' → logprob: -14.250909805297852

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0469139888882637
    2. '    
' → logprob: -4.296914100646973
    3. ':' → logprob: -4.421914100646973
    4. '    ' → logprob: -5.296914100646973
    5. '<|end|>' → logprob: -5.296914100646973
    6. ' ' → logprob: -6.171914100646973
    7. '```' → logprob: -6.171914100646973
    8. ' 
' → logprob: -6.421914100646973
    9. 'a' → logprob: -7.046914100646973
    10. ',' → logprob: -7.421914100646973

Token 20: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8474009037017822
    2. ' a' → logprob: -1.8474009037017822
    3. 'a' → logprob: -2.2224009037017822
    4. ' if' → logprob: -2.7224009037017822
    5. '    ' → logprob: -2.9724009037017822
    6. ' n' → logprob: -3.9724009037017822
    7. ' ' → logprob: -3.9724009037017822
    8. 'print' → logprob: -3.9724009037017822
    9. '```' → logprob: -4.097400665283203
    10. 'if' (adapté à ' if') → logprob: -4.097400665283203

Token 21: ' i' (ID: 575)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.06794540584087372
    2. 'a' → logprob: -3.0679454803466797
    3. ' ' → logprob: -4.19294548034668
    4. ' b' → logprob: -6.31794548034668
    5. ' i' → logprob: -6.69294548034668
    6. ' (' → logprob: -7.31794548034668
    7. '(a' → logprob: -9.06794548034668
    8. 'i' → logprob: -9.44294548034668
    9. 'b' → logprob: -10.06794548034668
    10. ' not' → logprob: -10.44294548034668

Token 22: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.7816131114959717
    2. ' ==' → logprob: -1.1566131114959717
    3. ' ' → logprob: -1.7816131114959717
    4. ' <' → logprob: -3.5316131114959717
    5. '%' → logprob: -4.156613349914551
    6. '==' → logprob: -4.656613349914551
    7. '  ' → logprob: -7.031613349914551
    8. '   ' → logprob: -7.281613349914551
    9. ' <=' → logprob: -7.531613349914551
    10. ' >' → logprob: -7.656613349914551

Token 23: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.051199380308389664
    2. ' ' → logprob: -3.676199436187744
    3. 'a' → logprob: -3.801199436187744
    4. ' a' → logprob: -6.926199436187744
    5. 'b' → logprob: -7.301199436187744
    6. '3' → logprob: -7.926199436187744
    7. ' b' → logprob: -9.051198959350586
    8. '4' → logprob: -9.926198959350586
    9. '```' → logprob: -11.301198959350586
    10. '(a' → logprob: -11.676198959350586

Token 24: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3265667259693146
    2. 'a' → logprob: -1.3265666961669922
    3. 'b' → logprob: -4.451566696166992
    4. '3' → logprob: -6.826566696166992
    5. ' ' → logprob: -8.326566696166992
    6. ' a' → logprob: -9.576566696166992
    7. '4' → logprob: -10.201566696166992
    8. '(a' → logprob: -10.451566696166992
    9. 'k' → logprob: -10.826566696166992
    10. '10' → logprob: -11.201566696166992

Token 25: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.028052451089024544
    2. '==' → logprob: -3.653052568435669
    3. ' ' → logprob: -6.40305233001709
    4. ' !=' → logprob: -10.15305233001709
    5. ' =' → logprob: -11.40305233001709
    6. '0' → logprob: -11.77805233001709
    7. ':' → logprob: -11.77805233001709
    8. '=' → logprob: -12.02805233001709
    9. '```' → logprob: -12.40305233001709
    10. ')' → logprob: -12.52805233001709

Token 26: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.46170270442962646
    2. ' ' → logprob: -1.0867027044296265
    3. '2' → logprob: -3.461702823638916
    4. '1' → logprob: -6.836702823638916
    5. '```' → logprob: -12.711702346801758
    6. '   ' → logprob: -12.836702346801758
    7. '  ' → logprob: -13.274202346801758
    8. '==' → logprob: -13.524202346801758
    9. '<|end|>' → logprob: -14.149202346801758
    10. '3' → logprob: -15.149202346801758

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6388252377510071
    2. '2' → logprob: -0.7638252377510071
    3. ' ' → logprob: -5.138825416564941
    4. '1' → logprob: -8.013825416564941
    5. '   ' → logprob: -12.638825416564941
    6. '```' → logprob: -12.763825416564941
    7. '  ' → logprob: -13.263825416564941
    8. '3' → logprob: -14.076325416564941
    9. 'a' → logprob: -14.326325416564941
    10. '==' → logprob: -15.638825416564941

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038956227945163846
    2. ' :' → logprob: -8.250389099121094
    3. ':
' → logprob: -9.250389099121094
    4. '   ' → logprob: -11.750389099121094
    5. '):' → logprob: -12.125389099121094
    6. ':**' → logprob: -12.125389099121094
    7. ',' → logprob: -12.500389099121094
    8. '       ' → logprob: -12.750389099121094
    9. ' and' → logprob: -13.250389099121094
    10. '>:' → logprob: -13.875389099121094

Token 29: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5182753205299377
    2. '       ' → logprob: -1.893275260925293
    3. '    ' → logprob: -2.393275260925293
    4. ' ' → logprob: -2.518275260925293
    5. ' a' → logprob: -3.518275260925293
    6. ':' → logprob: -3.643275260925293
    7. ' print' → logprob: -4.768275260925293
    8. ' :' → logprob: -5.393275260925293
    9. '     ' → logprob: -5.768275260925293
    10. ',' → logprob: -6.143275260925293

Token 30: ' b' (ID: 287)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.8001828193664551
    2. ' a' → logprob: -1.050182819366455
    3. 'print' → logprob: -2.550182819366455
    4. ' ' → logprob: -3.425182819366455
    5. '   ' → logprob: -3.675182819366455
    6. '       ' → logprob: -3.800182819366455
    7. 'a' → logprob: -3.800182819366455
    8. '    ' → logprob: -4.175182819366455
    9. '        ' → logprob: -6.800182819366455
    10. ' b' → logprob: -6.800182819366455

Token 31: ' +=' (ID: 2757)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.23300370573997498
    2. ' +=' → logprob: -1.7330037355422974
    3. '+=' → logprob: -4.108003616333008
    4. '-=' → logprob: -4.733003616333008
    5. ' *=' → logprob: -6.108003616333008
    6. ' =' → logprob: -6.358003616333008
    7. '-' → logprob: -6.983003616333008
    8. '=' → logprob: -7.858003616333008
    9. ' -' → logprob: -8.483003616333008
    10. ',' → logprob: -8.733003616333008

Token 32: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0009062222670763731
    2. ' a' → logprob: -7.125905990600586
    3. '1' → logprob: -9.250905990600586
    4. ' ' → logprob: -13.375905990600586
    5. 'b' → logprob: -13.625905990600586
    6. '   ' → logprob: -14.000905990600586
    7. '	a' → logprob: -14.000905990600586
    8. '(a' → logprob: -14.750905990600586
    9. '2' → logprob: -15.000905990600586
    10. '-a' → logprob: -15.875905990600586

Token 33: ' //' (ID: 602)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5404669046401978
    2. ' else' → logprob: -1.7904669046401978
    3. ' 
' → logprob: -3.165466785430908
    4. '1' → logprob: -3.290466785430908
    5. 'else' → logprob: -3.415466785430908
    6. '   ' → logprob: -3.665466785430908
    7. '<|end|>' → logprob: -3.790466785430908
    8. '    ' → logprob: -4.040466785430908
    9. '-' → logprob: -4.165466785430908
    10. '    
' → logprob: -4.290466785430908

Token 34: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.38736480474472046
    2. 'b' → logprob: -1.1373648643493652
    3. '10' → logprob: -8.012364387512207
    4. '3' → logprob: -9.762364387512207
    5. ' ' → logprob: -10.012364387512207
    6. '4' → logprob: -11.387364387512207
    7. '7' → logprob: -11.387364387512207
    8. ' b' → logprob: -11.512364387512207
    9. '100' → logprob: -11.762364387512207
    10. '5' → logprob: -12.137364387512207

Token 35: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009864693507552147
    2. 'b' → logprob: -4.634864807128906
    3. '10' → logprob: -9.259864807128906
    4. '3' → logprob: -11.634864807128906
    5. '7' → logprob: -13.759864807128906
    6. '5' → logprob: -13.884864807128906
    7. ' ' → logprob: -14.134864807128906
    8. '4' → logprob: -14.259864807128906
    9. '1' → logprob: -14.884864807128906
    10. '(' → logprob: -15.009864807128906

Token 36: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5108129382133484
    2. ' else' → logprob: -2.010812997817993
    3. '<|end|>' → logprob: -2.510812997817993
    4. 'else' → logprob: -2.885812997817993
    5. '       ' → logprob: -3.510812997817993
    6. ' ' → logprob: -3.510812997817993
    7. '    
' → logprob: -4.135812759399414
    8. ' 
' → logprob: -4.760812759399414
    9. '
' → logprob: -4.760812759399414
    10. 'a' → logprob: -5.010812759399414

Token 37: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03429662063717842
    2. '<|end|>' → logprob: -4.28429651260376
    3. ' else' → logprob: -4.78429651260376
    4. 'else' → logprob: -5.78429651260376
    5. '    
' → logprob: -6.15929651260376
    6. '       ' → logprob: -6.15929651260376
    7. ' ' → logprob: -6.15929651260376
    8. 'a' → logprob: -7.40929651260376
    9. '	else' → logprob: -7.65929651260376
    10. '```' → logprob: -8.159296989440918

Token 38: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.008234292268753052
    2. '   ' → logprob: -5.25823450088501
    3. ' a' → logprob: -6.00823450088501
    4. '       ' → logprob: -7.63323450088501
    5. 'b' → logprob: -10.258234024047852
    6. 'else' → logprob: -12.508234024047852
    7. '1' → logprob: -12.758234024047852
    8. '```' → logprob: -12.883234024047852
    9. ' ' → logprob: -13.383234024047852
    10. '    ' → logprob: -13.383234024047852

Token 39: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.10894306004047394
    2. '=' → logprob: -2.358942985534668
    3. ' //' → logprob: -5.483942985534668
    4. ' =' → logprob: -5.983942985534668
    5. '//' → logprob: -6.608942985534668
    6. '-=' → logprob: -8.233942985534668
    7. '%=' → logprob: -8.858942985534668
    8. ' -=' → logprob: -9.358942985534668
    9. ' ' → logprob: -9.858942985534668
    10. ' %=' → logprob: -10.233942985534668

Token 40: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00043972869752906263
    2. '2' → logprob: -7.750439643859863
    3. ' ' → logprob: -11.625439643859863
    4. ' =' → logprob: -15.875439643859863
    5. '4' → logprob: -17.62544059753418
    6. '=}' → logprob: -18.00044059753418
    7. '=
' → logprob: -18.75044059753418
    8. '=#' → logprob: -18.87544059753418
    9. '```' → logprob: -18.87544059753418
    10. '3' → logprob: -19.00044059753418

Token 41: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009120595059357584
    2. ' ' → logprob: -7.000912189483643
    3. '1' → logprob: -15.875911712646484
    4. '10' → logprob: -16.125911712646484
    5. '3' → logprob: -16.750911712646484
    6. '```' → logprob: -17.125911712646484
    7. '   ' → logprob: -17.375911712646484
    8. '  ' → logprob: -17.625911712646484
    9. '0' → logprob: -18.188411712646484
    10. '=' → logprob: -18.625911712646484

Token 42: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012403888104017824
    2. ' ' → logprob: -9.000123977661133
    3. '10' → logprob: -14.500123977661133
    4. '1' → logprob: -17.250123977661133
    5. '```' → logprob: -17.375123977661133
    6. '3' → logprob: -17.875123977661133
    7. '  ' → logprob: -18.250123977661133
    8. '   ' → logprob: -18.312623977661133
    9. '２' → logprob: -18.375123977661133
    10. '20' → logprob: -18.687623977661133

Token 43: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.16349346935749054
    2. ' else' → logprob: -1.9134935140609741
    3. '   ' → logprob: -6.663493633270264
    4. ' ' → logprob: -7.413493633270264
    5. 'a' → logprob: -7.538493633270264
    6. '<|end|>' → logprob: -7.538493633270264
    7. '```' → logprob: -8.663493156433105
    8. '	else' → logprob: -10.413493156433105
    9. 'elif' → logprob: -10.538493156433105
    10. 'b' → logprob: -10.788493156433105

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09656671434640884
    2. ':
' → logprob: -2.471566677093506
    3. '       ' → logprob: -4.971566677093506
    4. '   ' → logprob: -7.971566677093506
    5. '<|end|>' → logprob: -8.971567153930664
    6. 'b' → logprob: -9.596567153930664
    7. '```' → logprob: -10.346567153930664
    8. ':

' → logprob: -11.096567153930664
    9. '):
' → logprob: -11.346567153930664
    10. ',' → logprob: -11.596567153930664

Token 47: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.042453549802303314
    2. 'b' → logprob: -3.4174535274505615
    3. '       ' → logprob: -5.042453765869141
    4. ' a' → logprob: -6.542453765869141
    5. '   ' → logprob: -7.167453765869141
    6. ' b' → logprob: -9.54245376586914
    7. '```' → logprob: -11.91745376586914
    8. 'k' → logprob: -12.16745376586914
    9. '    ' → logprob: -12.16745376586914
    10. '	a' → logprob: -12.54245376586914

Token 48: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.005417784675955772
    2. 'b' → logprob: -5.255417823791504
    3. ' a' → logprob: -8.755417823791504
    4. '       ' → logprob: -11.005417823791504
    5. '(a' → logprob: -12.880417823791504
    6. 'k' → logprob: -13.005417823791504
    7. '   ' → logprob: -13.130417823791504
    8. ' b' → logprob: -13.255417823791504
    9. 'print' → logprob: -15.005417823791504
    10. '	a' → logprob: -15.505417823791504

Token 49: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3881584107875824
    2. '+=' → logprob: -1.1381584405899048
    3. ' //' → logprob: -6.888158321380615
    4. '=' → logprob: -9.388158798217773
    5. '//' → logprob: -10.013158798217773
    6. '//=' → logprob: -10.138158798217773
    7. '+=(' → logprob: -10.763158798217773
    8. '+' → logprob: -10.763158798217773
    9. ' -=' → logprob: -11.138158798217773
    10. ' +' → logprob: -11.763158798217773

Token 50: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023246178403496742
    2. ' b' → logprob: -3.7732462882995605
    3. '   ' → logprob: -14.523245811462402
    4. ' ' → logprob: -15.773245811462402
    5. 'a' → logprob: -17.14824676513672
    6. '	b' → logprob: -17.27324676513672
    7. '    ' → logprob: -17.64824676513672
    8. '  ' → logprob: -18.39824676513672
    9. '```' → logprob: -19.27324676513672
    10. '(b' → logprob: -19.39824676513672

Token 51: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.009968681260943413
    2. ' //' → logprob: -4.6349687576293945
    3. '```' → logprob: -9.259968757629395
    4. '1' → logprob: -10.009968757629395
    5. '//=' → logprob: -10.884968757629395
    6. '2' → logprob: -11.134968757629395
    7. '#' → logprob: -11.259968757629395
    8. '`' → logprob: -11.384968757629395
    9. ' ' → logprob: -11.634968757629395
    10. ''' → logprob: -13.884968757629395

Token 52: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -18.125024795532227
    4. '1' → logprob: -18.250024795532227
    5. '20' → logprob: -18.500024795532227
    6. '  ' → logprob: -18.875024795532227
    7. '3' → logprob: -20.125024795532227
    8. '10' → logprob: -20.375024795532227
    9. '0' → logprob: -21.250024795532227
    10. '۲' → logprob: -21.750024795532227

Token 53: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.500003814697266
    3. '20' → logprob: -14.750003814697266
    4. '10' → logprob: -17.000003814697266
    5. '   ' → logprob: -17.750003814697266
    6. '1' → logprob: -18.375003814697266
    7. '  ' → logprob: -18.750003814697266
    8. '3' → logprob: -19.375003814697266
    9. '0' → logprob: -20.500003814697266
    10. '4' → logprob: -21.062503814697266

Token 54: '
' (ID: 198)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2057255655527115
    2. '       ' → logprob: -1.7057255506515503
    3. '```' → logprob: -6.33072566986084
    4. 'b' → logprob: -6.45572566986084
    5. ' ' → logprob: -7.45572566986084
    6. ' b' → logprob: -8.20572566986084
    7. '   ' → logprob: -9.95572566986084
    8. '`' → logprob: -10.95572566986084
    9. '1' → logprob: -11.45572566986084
    10. '(' → logprob: -12.95572566986084

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10909784585237503
    2. 'b' → logprob: -2.609097957611084
    3. ' b' → logprob: -3.859097957611084
    4. '```' → logprob: -5.234097957611084
    5. ' ' → logprob: -5.859097957611084
    6. '   ' → logprob: -8.859097480773926
    7. '<|end|>' → logprob: -9.859097480773926
    8. '1' → logprob: -9.984097480773926
    9. '2' → logprob: -10.109097480773926
    10. '``' → logprob: -10.109097480773926

Token 56: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -3.309382373117842e-05
    2. ' b' → logprob: -10.500033378601074
    3. '   ' → logprob: -12.875033378601074
    4. '```' → logprob: -13.375033378601074
    5. '       ' → logprob: -13.500033378601074
    6. '	b' → logprob: -17.750032424926758
    7. '           ' → logprob: -18.625032424926758
    8. '    ' → logprob: -18.625032424926758
    9. '2' → logprob: -18.750032424926758
    10. '1' → logprob: -18.875032424926758

Token 57: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.23755688965320587
    2. '//=' → logprob: -1.6125569343566895
    3. '//' → logprob: -4.4875569343566895
    4. '=' → logprob: -7.2375569343566895
    5. '+=' → logprob: -10.612556457519531
    6. ' ' → logprob: -10.737556457519531
    7. '-=' → logprob: -11.237556457519531
    8. ' =' → logprob: -11.362556457519531
    9. '```' → logprob: -11.862556457519531
    10. ' -=' → logprob: -12.112556457519531

Token 58: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001040552044287324
    2. '2' → logprob: -6.876040458679199
    3. ' ' → logprob: -11.8760404586792
    4. ' =' → logprob: -15.0010404586792
    5. '/=' → logprob: -15.5010404586792
    6. '=/' → logprob: -16.126041412353516
    7. '=
' → logprob: -16.876041412353516
    8. '=}' → logprob: -17.126041412353516
    9. '+=' → logprob: -17.751041412353516
    10. '/' → logprob: -17.876041412353516

Token 59: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0024768433067947626
    2. ' ' → logprob: -6.002476692199707
    3. '   ' → logprob: -14.002476692199707
    4. '  ' → logprob: -15.627476692199707
    5. '```' → logprob: -15.752476692199707
    6. '۲' → logprob: -17.439977645874023
    7. '    ' → logprob: -18.002477645874023
    8. '２' → logprob: -18.064977645874023
    9. '       ' → logprob: -18.314977645874023
    10. '1' → logprob: -19.064977645874023

Token 60: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.875009536743164
    4. '```' → logprob: -17.125009536743164
    5. '  ' → logprob: -17.750009536743164
    6. '۲' → logprob: -18.562509536743164
    7. '２' → logprob: -18.937509536743164
    8. '    ' → logprob: -20.062509536743164
    9. '२' → logprob: -20.125009536743164
    10. '1' → logprob: -20.250009536743164

Token 61: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011435531778261065
    2. '```' → logprob: -7.376143455505371
    3. '<|end|>' → logprob: -8.251143455505371
    4. ' print' → logprob: -8.751143455505371
    5. '#' → logprob: -10.126143455505371
    6. '
' → logprob: -10.501143455505371
    7. ')' → logprob: -11.626143455505371
    8. '#print' → logprob: -12.501143455505371
    9. '(print' → logprob: -12.751143455505371
    10. '``' → logprob: -13.001143455505371

Token 62: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003659746435005218
    2. '```' → logprob: -8.0003662109375
    3. ' print' → logprob: -11.3753662109375
    4. '<|end|>' → logprob: -12.0003662109375
    5. 'a' → logprob: -12.5003662109375
    6. '``' → logprob: -12.7503662109375
    7. '#' → logprob: -13.1253662109375
    8. '`' → logprob: -14.0003662109375
    9. '
' → logprob: -14.2503662109375
    10. '(print' → logprob: -14.7503662109375

Token 63: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0006413076189346611
    2. '(' → logprob: -7.500641345977783
    3. '()' → logprob: -10.500640869140625
    4. '(b' → logprob: -10.750640869140625
    5. '((' → logprob: -11.125640869140625
    6. 'a' → logprob: -11.750640869140625
    7. '(sum' → logprob: -11.875640869140625
    8. '(max' → logprob: -12.625640869140625
    9. '(abs' → logprob: -12.875640869140625
    10. '(min' → logprob: -13.625640869140625

Token 64: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.9054008084349334e-05
    2. ',' → logprob: -10.375039100646973
    3. ',b' → logprob: -12.625039100646973
    4. ')b' → logprob: -13.500039100646973
    5. '+' → logprob: -13.750039100646973
    6. '))' → logprob: -14.375039100646973
    7. '+b' → logprob: -14.625039100646973
    8. ',)' → logprob: -15.375039100646973
    9. ')`' → logprob: -15.500039100646973
    10. ' )' → logprob: -15.875039100646973

Token 65: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12692853808403015
    2. ' b' → logprob: -2.1269285678863525
    3. ')' → logprob: -15.251928329467773
    4. ')b' → logprob: -15.626928329467773
    5. ' ' → logprob: -18.376928329467773
    6. ' )' → logprob: -18.876928329467773
    7. ''' → logprob: -18.876928329467773
    8. '	b' → logprob: -19.251928329467773
    9. ',b' → logprob: -19.251928329467773
    10. ''b' → logprob: -19.751928329467773

Token 66: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '))' → logprob: -14.875000953674316
    3. ')`' → logprob: -16.125
    4. ' )' → logprob: -17.75
    5. ')}' → logprob: -18.375
    6. '`)' → logprob: -18.5
    7. ')
' → logprob: -18.75
    8. '')' → logprob: -19.125
    9. ')#' → logprob: -19.375
    10. ')**' → logprob: -19.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 64
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 56
Précision stricte (1ère position): 31.25%
Précision adaptée (1ère position): 37.50%
Précision (top 10): 87.50%
================================================================================
