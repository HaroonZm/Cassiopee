================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import combinations, count, islice, cycle
import sys

N, K = map(int, input().split())

f = lambda x: reduce(lambda a, b: a*b, x, 1)
cnt = f(range(N-1, N-3, -1)) // 2

if cnt < K:
    print(-1)
    sys.exit()

edges = [list() for _ in range(N)]
list(map(lambda i: edges[0].append(i), range(1, N)))

def triangular_pairs(limit):
    def skip_diag(i, j): return i != j
    pairs = ((i, j) for i in range(1, N) for j in range(i+1, N) if skip_diag(i, j))
    return islice(pairs, limit)

list(map(lambda p: edges[p[0]].append(p[1]), triangular_pairs(cnt-K)))

M = sum(map(len, edges))
print(M)
[
    [print(u+1, v+1) for v in edges[u]]
        for u in range(N)
]
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.4987817108631134
    2. 'partial' → logprob: -1.248781681060791
    3. 'reduce' → logprob: -2.498781681060791
    4. ' wraps' → logprob: -3.998781681060791
    5. 'l' → logprob: -5.748781681060791
    6. ' partial' → logprob: -7.248781681060791
    7. 'cached' → logprob: -7.623781681060791
    8. 'cache' → logprob: -7.623781681060791
    9. 'cmp' → logprob: -8.74878215789795
    10. ' reduce' → logprob: -9.37378215789795

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020487118512392044
    2. '(lambda' → logprob: -4.645487308502197
    3. '.' → logprob: -5.270487308502197
    4. ',' → logprob: -5.895487308502197
    5. '\' → logprob: -7.145487308502197
    6. ' (' → logprob: -7.520487308502197
    7. '```' → logprob: -8.020486831665039
    8. 'def' → logprob: -8.645486831665039
    9. 'lambda' → logprob: -8.895486831665039
    10. '`' → logprob: -8.895486831665039

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02829861268401146
    2. 'def' → logprob: -4.653298377990723
    3. ' ' → logprob: -4.778298377990723
    4. '\' → logprob: -5.153298377990723
    5. '(
' → logprob: -7.153298377990723
    6. ',' → logprob: -7.403298377990723
    7. '```' → logprob: -7.528298377990723
    8. ' (' → logprob: -8.153298377990723
    9. 'r' → logprob: -8.653298377990723
    10. 'd' → logprob: -8.778298377990723

Token 6: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.2411840558052063
    2. ' itertools' → logprob: -2.1161839962005615
    3. ' math' → logprob: -2.7411839962005615
    4. ' collections' → logprob: -3.8661839962005615
    5. 'operator' → logprob: -4.991184234619141
    6. ' os' → logprob: -7.116184234619141
    7. 'math' → logprob: -7.991184234619141
    8. ' typing' → logprob: -8.49118423461914
    9. 'collections' → logprob: -8.99118423461914
    10. ' ' → logprob: -10.49118423461914

Token 7: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7218883037567139
    2. ' import' → logprob: -0.7218883037567139
    3. '.' → logprob: -3.596888303756714
    4. '.import' → logprob: -7.471888542175293
    5. ' .' → logprob: -8.721888542175293
    6. '	import' → logprob: -9.596888542175293
    7. ' ' → logprob: -9.846888542175293
    8. '_import' → logprob: -10.596888542175293
    9. '<|end|>' → logprob: -11.596888542175293
    10. '.im' → logprob: -12.221888542175293

Token 8: ' combinations' (ID: 43835)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.646282970905304
    2. ' cycle' → logprob: -1.7712829113006592
    3. ' accumulate' → logprob: -1.7712829113006592
    4. ' count' → logprob: -3.646282911300659
    5. 'acc' → logprob: -3.646282911300659
    6. 'count' → logprob: -4.271283149719238
    7. 'group' → logprob: -4.271283149719238
    8. ' chain' → logprob: -4.646283149719238
    9. ' permutations' → logprob: -4.646283149719238
    10. 'com' → logprob: -4.771283149719238

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16122692823410034
    2. '(
' → logprob: -2.536226987838745
    3. '\n' → logprob: -3.661226987838745
    4. '\' → logprob: -3.661226987838745
    5. 'def' → logprob: -4.786226749420166
    6. '```' → logprob: -5.286226749420166
    7. '(n' → logprob: -7.036226749420166
    8. 'import' → logprob: -7.411226749420166
    9. '
' → logprob: -7.536226749420166
    10. '`' → logprob: -8.036227226257324

Token 10: ' count' (ID: 3605)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.48691901564598083
    2. 'product' → logprob: -1.8619190454483032
    3. ' permutations' → logprob: -2.1119189262390137
    4. 'chain' → logprob: -3.1119189262390137
    5. ' product' → logprob: -3.8619189262390137
    6. ' chain' → logprob: -4.111918926239014
    7. 'group' → logprob: -4.611918926239014
    8. ' group' → logprob: -5.486918926239014
    9. 'count' → logprob: -5.611918926239014
    10. 'acc' → logprob: -5.611918926239014

Token 11: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2701934576034546
    2. '(
' → logprob: -2.020193576812744
    3. ',' → logprob: -3.145193576812744
    4. 'def' → logprob: -3.895193576812744
    5. '\n' → logprob: -4.270193576812744
    6. '\' → logprob: -5.020193576812744
    7. '
' → logprob: -5.395193576812744
    8. ',
' → logprob: -6.270193576812744
    9. '()' → logprob: -6.270193576812744
    10. '#' → logprob: -6.395193576812744

Token 12: ' is' (ID: 382)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -1.3132569789886475
    2. 'product' → logprob: -1.8132569789886475
    3. 'per' → logprob: -2.5632569789886475
    4. 'group' → logprob: -2.5632569789886475
    5. 'chain' → logprob: -2.5632569789886475
    6. 'acc' → logprob: -2.6882569789886475
    7. ' product' → logprob: -2.9382569789886475
    8. ' cycle' → logprob: -3.1882569789886475
    9. ' accumulate' → logprob: -3.1882569789886475
    10. ' permutations' → logprob: -3.3132569789886475

Token 13: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -5.2762428822461516e-05
    2. 'lic' → logprob: -10.375052452087402
    3. 'licing' → logprob: -12.875052452087402
    4. 'dis' → logprob: -13.000052452087402
    5. '```' → logprob: -13.125052452087402
    6. 'close' → logprob: -13.125052452087402
    7. 'liced' → logprob: -13.250052452087402
    8. '_' → logprob: -13.375052452087402
    9. 'l' → logprob: -13.625052452087402
    10. 'instance' → logprob: -13.625052452087402

Token 14: ',' (ID: 11)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.964293360710144
    2. '\n' → logprob: -1.714293360710144
    3. '(' → logprob: -1.964293360710144
    4. 'def' → logprob: -2.2142934799194336
    5. ',' → logprob: -2.5892934799194336
    6. '#' → logprob: -3.5892934799194336
    7. 'for' → logprob: -3.7142934799194336
    8. '(
' → logprob: -4.339293479919434
    9. '`' → logprob: -4.464293479919434
    10. '```' → logprob: -4.714293479919434

Token 15: ' cycle' (ID: 15839)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -1.4154977798461914
    2. 'product' → logprob: -1.7904977798461914
    3. 'per' → logprob: -2.0404977798461914
    4. ' group' → logprob: -2.6654977798461914
    5. 'cycle' → logprob: -2.6654977798461914
    6. 'acc' → logprob: -2.7904977798461914
    7. 'chain' → logprob: -2.9154977798461914
    8. ' product' → logprob: -3.1654977798461914
    9. 'filter' → logprob: -3.5404977798461914
    10. 'tee' → logprob: -3.6654977798461914

Token 16: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.6331334114074707
    2. '\n' → logprob: -1.5081334114074707
    3. ',' → logprob: -2.7581334114074707
    4. '```' → logprob: -2.8831334114074707
    5. '(' → logprob: -3.2581334114074707
    6. '`' → logprob: -3.2581334114074707
    7. 'import' → logprob: -4.633133411407471
    8. '(
' → logprob: -4.883133411407471
    9. '.' → logprob: -5.008133411407471
    10. 'def' → logprob: -5.133133411407471

Token 17: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6721463203430176
    2. '(' → logprob: -2.5471463203430176
    3. ',' → logprob: -2.7971463203430176
    4. '
' → logprob: -2.9221463203430176
    5. '\n' → logprob: -3.2971463203430176
    6. '(
' → logprob: -3.4221463203430176
    7. 'import' → logprob: -3.4221463203430176
    8. 'for' → logprob: -3.6721463203430176
    9. '

' → logprob: -3.7971463203430176
    10. '```' → logprob: -3.7971463203430176

Token 18: ' sys' (ID: 12228)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.8518723249435425
    2. ' math' → logprob: -1.6018723249435425
    3. ' ' → logprob: -1.7268723249435425
    4. ' collections' → logprob: -2.351872444152832
    5. ' os' → logprob: -3.226872444152832
    6. ' functools' → logprob: -3.351872444152832
    7. ' re' → logprob: -4.726872444152832
    8. ' sys' → logprob: -5.351872444152832
    9. ' operator' → logprob: -5.476872444152832
    10. ' random' → logprob: -5.601872444152832

Token 19: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2882235050201416
    2. '

' → logprob: -2.2882235050201416
    3. '\n' → logprob: -3.4132235050201416
    4. 'import' → logprob: -3.5382235050201416
    5. 'def' → logprob: -3.9132235050201416
    6. ',' → logprob: -3.9132235050201416
    7. '' → logprob: -4.4132232666015625
    8. '\' → logprob: -4.5382232666015625
    9. ',
' → logprob: -5.6632232666015625
    10. '#' → logprob: -5.6632232666015625

Token 20: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3041025400161743
    2. '#' → logprob: -2.5541024208068848
    3. '\' → logprob: -3.4291024208068848
    4. 'd' → logprob: -3.5541024208068848
    5. ',' → logprob: -3.5541024208068848
    6. '.' → logprob: -3.9291024208068848
    7. '```' → logprob: -4.429102420806885
    8. '=' → logprob: -4.429102420806885
    9. '`' → logprob: -4.554102420806885
    10. '(' → logprob: -4.804102420806885

Token 21: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7010875344276428
    2. ' =' → logprob: -0.9510875344276428
    3. '_' → logprob: -2.201087474822998
    4. ',' → logprob: -5.576087474822998
    5. ' ' → logprob: -6.326087474822998
    6. '   ' → logprob: -8.326087951660156
    7. 'umber' → logprob: -8.826087951660156
    8. 'O' → logprob: -8.951087951660156
    9. '  ' → logprob: -9.201087951660156
    10. 'um' → logprob: -9.451087951660156

Token 22: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -1.0119203329086304
    2. ' M' → logprob: -1.1369203329086304
    3. 'K' → logprob: -1.7619203329086304
    4. 'M' → logprob: -2.01192045211792
    5. ' =' → logprob: -6.51192045211792
    6. ' k' → logprob: -6.88692045211792
    7. 'k' → logprob: -6.88692045211792
    8. ' ' → logprob: -7.51192045211792
    9. ' A' → logprob: -7.88692045211792
    10. 'Q' → logprob: -7.88692045211792

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12706008553504944
    2. '=' → logprob: -2.1270601749420166
    3. ',' → logprob: -9.002059936523438
    4. '=input' → logprob: -12.252059936523438
    5. ' ' → logprob: -13.877059936523438
    6. '=int' → logprob: -14.127059936523438
    7. ')' → logprob: -14.252059936523438
    8. ' =
' → logprob: -15.002059936523438
    9. '=

' → logprob: -15.127059936523438
    10. '=sys' → logprob: -15.252059936523438

Token 24: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.3143589198589325
    2. 'map' → logprob: -1.3143589496612549
    3. ' ' → logprob: -7.189358711242676
    4. '5' → logprob: -9.189358711242676
    5. '10' → logprob: -9.439358711242676
    6. '2' → logprob: -10.564358711242676
    7. 'list' → logprob: -10.814358711242676
    8. '3' → logprob: -11.064358711242676
    9. ' list' → logprob: -11.064358711242676
    10. '1' → logprob: -11.064358711242676

Token 25: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3164469003677368
    2. '(int' → logprob: -1.5664469003677368
    3. '(lambda' → logprob: -3.3164467811584473
    4. '(str' → logprob: -3.6914467811584473
    5. '(input' → logprob: -7.316446781158447
    6. '(tuple' → logprob: -9.066447257995605
    7. '(eval' → logprob: -9.941447257995605
    8. '```' → logprob: -10.066447257995605
    9. '(len' → logprob: -10.191447257995605
    10. 'int' → logprob: -10.191447257995605

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.005257487297058
    2. '(sys' → logprob: -1.005257487297058
    3. '(' → logprob: -1.630257487297058
    4. '(input' → logprob: -2.8802576065063477
    5. ',input' → logprob: -4.380257606506348
    6. ')' → logprob: -6.505257606506348
    7. '=sys' → logprob: -7.380257606506348
    8. 'input' → logprob: -8.130257606506348
    9. ' ,' → logprob: -8.630257606506348
    10. 'sys' → logprob: -8.755257606506348

Token 27: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3399035334587097
    2. 'sys' → logprob: -1.9649035930633545
    3. ' input' → logprob: -2.3399035930633545
    4. ' sys' → logprob: -2.9649035930633545
    5. ')' → logprob: -10.339903831481934
    6. '(sys' → logprob: -10.714903831481934
    7. ' ' → logprob: -10.964903831481934
    8. '=sys' → logprob: -11.839903831481934
    9. '	sys' → logprob: -12.964903831481934
    10. ' )' → logprob: -13.339903831481934

Token 28: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.05510591343045235
    2. '())' → logprob: -3.1801059246063232
    3. '()' → logprob: -4.805105686187744
    4. ')' → logprob: -5.680105686187744
    5. '(' → logprob: -8.430106163024902
    6. '());' → logprob: -9.305106163024902
    7. '(),' → logprob: -10.305106163024902
    8. '()>' → logprob: -11.305106163024902
    9. '();' → logprob: -11.555106163024902
    10. '();)' → logprob: -11.555106163024902

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015095012495294213
    2. 'strip' → logprob: -6.501509666442871
    3. 'rstrip' → logprob: -12.626509666442871
    4. ' split' → logprob: -13.001509666442871
    5. ')' → logprob: -13.876509666442871
    6. '(split' → logprob: -15.126509666442871
    7. 'read' → logprob: -15.251509666442871
    8. 'spl' → logprob: -16.001508712768555
    9. '_split' → logprob: -18.126508712768555
    10. '```' → logprob: -18.376508712768555

Token 30: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00762366084381938
    2. '))' → logprob: -4.882623672485352
    3. '())' → logprob: -12.257623672485352
    4. '()' → logprob: -12.882623672485352
    5. '),' → logprob: -13.007623672485352
    6. '(' → logprob: -13.132623672485352
    7. ')))' → logprob: -13.507623672485352
    8. ')`' → logprob: -13.632623672485352
    9. '`)' → logprob: -14.007623672485352
    10. ' )' → logprob: -14.632623672485352

Token 31: 'f' (ID: 69)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44520270824432373
    2. 'data' → logprob: -2.1952028274536133
    3. ')' → logprob: -2.6952028274536133
    4. '```' → logprob: -3.3202028274536133
    5. '<|end|>' → logprob: -3.4452028274536133
    6. 'a' → logprob: -3.8202028274536133
    7. ' 
' → logprob: -4.445202827453613
    8. 'numbers' → logprob: -4.445202827453613
    9. '\n' → logprob: -5.195202827453613
    10. 'for' → logprob: -5.320202827453613

Token 32: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.44668251276016235
    2. 'actor' → logprob: -2.3216824531555176
    3. 'act' → logprob: -2.3216824531555176
    4. 'r' → logprob: -3.4466824531555176
    5. 'rom' → logprob: -3.5716824531555176
    6. ' =' → logprob: -4.196682453155518
    7. 'o' → logprob: -4.571682453155518
    8. '=' → logprob: -4.571682453155518
    9. 'ac' → logprob: -4.696682453155518
    10. 'a' → logprob: -4.821682453155518

Token 33: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.18752077221870422
    2. ' lambda' → logprob: -1.9375207424163818
    3. 'reduce' → logprob: -4.312520980834961
    4. '(lambda' → logprob: -4.437520980834961
    5. 'factor' → logprob: -8.062520980834961
    6. 'list' → logprob: -8.187520980834961
    7. ' reduce' → logprob: -8.812520980834961
    8. 'range' → logprob: -8.812520980834961
    9. ' factorial' → logprob: -8.937520980834961
    10. 'count' → logprob: -9.312520980834961

Token 34: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7584013938903809
    2. ' x' → logprob: -0.7584013938903809
    3. ' n' → logprob: -3.758401393890381
    4. 'n' → logprob: -4.258401393890381
    5. ' lambda' → logprob: -4.383401393890381
    6. 'a' → logprob: -5.258401393890381
    7. 'lambda' → logprob: -5.508401393890381
    8. ' a' → logprob: -6.008401393890381
    9. ' i' → logprob: -7.383401393890381
    10. 'i' → logprob: -8.383401870727539

Token 35: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008394040050916374
    2. ' :' → logprob: -7.6258392333984375
    3. ':x' → logprob: -8.500839233398438
    4. ',' → logprob: -9.250839233398438
    5. '=' → logprob: -11.000839233398438
    6. ',x' → logprob: -12.000839233398438
    7. 'x' → logprob: -12.250839233398438
    8. ' x' → logprob: -12.875839233398438
    9. '**' → logprob: -13.000839233398438
    10. '+:' → logprob: -13.125839233398438

Token 36: ' reduce' (ID: 10389)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3343614339828491
    2. ' x' → logprob: -1.4593614339828491
    3. 'reduce' → logprob: -3.8343615531921387
    4. ' reduce' → logprob: -4.834361553192139
    5. '1' → logprob: -5.084361553192139
    6. '(x' → logprob: -5.084361553192139
    7. ' ' → logprob: -5.459361553192139
    8. ' (' → logprob: -6.334361553192139
    9. '(' → logprob: -7.209361553192139
    10. 'pow' → logprob: -7.834361553192139

Token 37: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.06218256056308746
    2. '(' → logprob: -2.812182664871216
    3. '(operator' → logprob: -8.687182426452637
    4. 'lambda' → logprob: -10.937182426452637
    5. '```' → logprob: -11.062182426452637
    6. '((' → logprob: -12.437182426452637
    7. '(int' → logprob: -12.562182426452637
    8. '(f' → logprob: -13.812182426452637
    9. '(pow' → logprob: -14.437182426452637
    10. '<|end|>' → logprob: -14.562182426452637

Token 38: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.406180202960968
    2. 'a' → logprob: -1.1561801433563232
    3. ' x' → logprob: -4.156180381774902
    4. 'x' → logprob: -6.531180381774902
    5. ' ' → logprob: -7.031180381774902
    6. ' y' → logprob: -8.781180381774902
    7. ' acc' → logprob: -8.781180381774902
    8. ' i' → logprob: -9.406180381774902
    9. ' lambda' → logprob: -9.406180381774902
    10. ' o' → logprob: -9.656180381774902

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00048715711454860866
    2. ',x' → logprob: -7.875487327575684
    3. ' ,' → logprob: -9.875487327575684
    4. 'a' → logprob: -11.125487327575684
    5. ',a' → logprob: -11.625487327575684
    6. ',f' → logprob: -11.875487327575684
    7. '_,' → logprob: -12.625487327575684
    8. ',b' → logprob: -12.750487327575684
    9. 'x' → logprob: -13.125487327575684
    10. '1' → logprob: -13.250487327575684

Token 40: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.48720595240592957
    2. 'b' → logprob: -0.987205982208252
    3. ' x' → logprob: -4.612205982208252
    4. 'x' → logprob: -5.987205982208252
    5. 'a' → logprob: -8.612205505371094
    6. ' ' → logprob: -9.112205505371094
    7. ' a' → logprob: -9.112205505371094
    8. ' c' → logprob: -10.112205505371094
    9. 'c' → logprob: -10.487205505371094
    10. ' y' → logprob: -10.737205505371094

Token 41: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026399875059723854
    2. ':' → logprob: -6.6276397705078125
    3. 'a' → logprob: -6.8776397705078125
    4. ' ,' → logprob: -9.377639770507812
    5. ',a' → logprob: -10.002639770507812
    6. 'x' → logprob: -10.127639770507812
    7. ',x' → logprob: -10.252639770507812
    8. '=' → logprob: -11.627639770507812
    9. ',b' → logprob: -11.877639770507812
    10. ' :' → logprob: -12.127639770507812

Token 42: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08895047754049301
    2. ' a' → logprob: -2.4639503955841064
    3. '	a' → logprob: -12.588950157165527
    4. '(a' → logprob: -12.838950157165527
    5. ' ' → logprob: -13.088950157165527
    6. '  ' → logprob: -13.713950157165527
    7. '   ' → logprob: -14.838950157165527
    8. ' (' → logprob: -15.088950157165527
    9. '(' → logprob: -15.213950157165527
    10. '1' → logprob: -15.963950157165527

Token 43: '*b' (ID: 72162)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.009471550583839417
    2. ' *' → logprob: -4.759471416473389
    3. '*b' → logprob: -7.259471416473389
    4. '*x' → logprob: -9.384471893310547
    5. '+' → logprob: -10.509471893310547
    6. '**' → logprob: -11.634471893310547
    7. '*f' → logprob: -11.759471893310547
    8. '*a' → logprob: -12.259471893310547
    9. '*y' → logprob: -12.509471893310547
    10. '-' → logprob: -12.884471893310547

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008727083913981915
    2. ' ,' → logprob: -5.633727073669434
    3. ' if' → logprob: -5.758727073669434
    4. 'if' → logprob: -7.008727073669434
    5. '*' → logprob: -8.133727073669434
    6. ' for' → logprob: -8.383727073669434
    7. ' x' → logprob: -9.383727073669434
    8. ' *' → logprob: -9.508727073669434
    9. ' range' → logprob: -9.758727073669434
    10. ',x' → logprob: -9.883727073669434

Token 45: ' x' (ID: 1215)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14294104278087616
    2. ' range' → logprob: -2.0179409980773926
    3. '(range' → logprob: -8.51794147491455
    4. 'x' → logprob: -11.14294147491455
    5. 'list' → logprob: -11.26794147491455
    6. '[' → logprob: -11.39294147491455
    7. '	range' → logprob: -11.64294147491455
    8. 'map' → logprob: -13.01794147491455
    9. ' list' → logprob: -13.14294147491455
    10. ' xrange' → logprob: -13.26794147491455

Token 46: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1667463779449463
    2. ',' → logprob: -1.9167463779449463
    3. ')+' → logprob: -5.291746139526367
    4. ')*' → logprob: -7.416746139526367
    5. '+' → logprob: -9.041746139526367
    6. '[' → logprob: -9.166746139526367
    7. 'if' → logprob: -9.541746139526367
    8. ' if' → logprob: -9.791746139526367
    9. ' )' → logprob: -10.041746139526367
    10. ' ' → logprob: -10.041746139526367

Token 47: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01815474033355713
    2. ' ' → logprob: -4.018154621124268
    3. '2' → logprob: -14.018155097961426
    4. '  ' → logprob: -14.143155097961426
    5. ')' → logprob: -14.830655097961426
    6. '   ' → logprob: -14.830655097961426
    7. ' ' → logprob: -15.080655097961426
    8. 'x' → logprob: -15.580655097961426
    9. 'N' → logprob: -15.580655097961426
    10. 'int' → logprob: -16.01815414428711

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.968934758333489e-05
    2. ' ' → logprob: -9.625069618225098
    3. '2' → logprob: -14.375069618225098
    4. '   ' → logprob: -15.062569618225098
    5. ')' → logprob: -15.125069618225098
    6. '(' → logprob: -15.625069618225098
    7. '  ' → logprob: -15.687569618225098
    8. 'int' → logprob: -15.750069618225098
    9. 'N' → logprob: -15.812569618225098
    10. '-' → logprob: -15.937569618225098

Token 49: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.894790981779806e-05
    2. '*' → logprob: -11.750048637390137
    3. ' )' → logprob: -11.750048637390137
    4. '**' → logprob: -11.875048637390137
    5. ')*' → logprob: -12.625048637390137
    6. ')**' → logprob: -12.625048637390137
    7. '),' → logprob: -12.875048637390137
    8. ')
' → logprob: -12.875048637390137
    9. '))' → logprob: -12.875048637390137
    10. ',' → logprob: -13.125048637390137

Token 50: 'cnt' (ID: 33160)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4823963642120361
    2. '
' → logprob: -1.6073963642120361
    3. '<|end|>' → logprob: -1.6073963642120361
    4. '*' → logprob: -1.9823963642120361
    5. '\n' → logprob: -3.232396364212036
    6. 'n' → logprob: -3.732396364212036
    7. '#' → logprob: -3.857396364212036
    8. 'factor' → logprob: -4.232396125793457
    9. '+' → logprob: -4.482396125793457
    10. ' 
' → logprob: -4.482396125793457

Token 51: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7052798271179199
    2. ' =' → logprob: -0.7052798271179199
    3. '_' → logprob: -5.20527982711792
    4. ',' → logprob: -5.70527982711792
    5. 's' → logprob: -6.70527982711792
    6. ' ' → logprob: -7.33027982711792
    7. '[' → logprob: -7.45527982711792
    8. '  ' → logprob: -8.080280303955078
    9. '(' → logprob: -8.830280303955078
    10. ')' → logprob: -9.580280303955078

Token 52: ' f' (ID: 285)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029395299032330513
    2. ' ' → logprob: -3.779395341873169
    3. '[' → logprob: -5.77939510345459
    4. ' [' → logprob: -6.65439510345459
    5. 'sum' → logprob: -7.65439510345459
    6. '{' → logprob: -7.65439510345459
    7. '{}' → logprob: -8.02939510345459
    8. ' sum' → logprob: -8.52939510345459
    9. '1' → logprob: -9.90439510345459
    10. ' {' → logprob: -10.02939510345459

Token 53: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.9164791703224182
    2. '(com' → logprob: -1.0414791107177734
    3. '(' → logprob: -1.5414791107177734
    4. '(lambda' → logprob: -3.9164791107177734
    5. '(list' → logprob: -5.291479110717773
    6. '([' → logprob: -6.291479110717773
    7. '<|end|>' → logprob: -6.791479110717773
    8. '(count' → logprob: -7.041479110717773
    9. '((' → logprob: -7.416479110717773
    10. '(len' → logprob: -7.791479110717773

Token 54: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005659640301018953
    2. '(K' → logprob: -5.630659580230713
    3. '(N' → logprob: -6.255659580230713
    4. '1' → logprob: -9.380660057067871
    5. '(n' → logprob: -10.380660057067871
    6. '(k' → logprob: -11.880660057067871
    7. '(cnt' → logprob: -12.630660057067871
    8. ' (' → logprob: -12.630660057067871
    9. '(i' → logprob: -13.255660057067871
    10. '(max' → logprob: -13.755660057067871

Token 55: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7089218497276306
    2. '-K' → logprob: -1.5839219093322754
    3. ' -' → logprob: -1.8339219093322754
    4. '-' → logprob: -2.5839219093322754
    5. '))' → logprob: -2.8339219093322754
    6. '-N' → logprob: -6.083921909332275
    7. '+' → logprob: -6.583921909332275
    8. ')' → logprob: -6.708921909332275
    9. ',K' → logprob: -6.708921909332275
    10. ' ,' → logprob: -6.958921909332275

Token 56: '1' (ID: 16)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.01344749890267849
    2. '1' → logprob: -4.513447284698486
    3. ' K' → logprob: -6.763447284698486
    4. '(' → logprob: -7.513447284698486
    5. '(K' → logprob: -8.263447761535645
    6. 'k' → logprob: -9.013447761535645
    7. '2' → logprob: -9.888447761535645
    8. ' (' → logprob: -10.013447761535645
    9. ' ' → logprob: -10.013447761535645
    10. '0' → logprob: -10.575947761535645

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08988707512617111
    2. '))' → logprob: -3.4648871421813965
    3. '+' → logprob: -3.8398871421813965
    4. ')' → logprob: -4.0898871421813965
    5. ' ,' → logprob: -4.9648871421813965
    6. ' +' → logprob: -5.5898871421813965
    7. ',N' → logprob: -6.5898871421813965
    8. ' -' → logprob: -7.2148871421813965
    9. ',K' → logprob: -7.3398871421813965
    10. ' )' → logprob: -7.5898871421813965

Token 58: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0013954727910459042
    2. ' N' → logprob: -6.6263957023620605
    3. 'K' → logprob: -11.126395225524902
    4. '	N' → logprob: -11.376395225524902
    5. '(N' → logprob: -11.751395225524902
    6. '>N' → logprob: -11.876395225524902
    7. ' ' → logprob: -12.126395225524902
    8. '0' → logprob: -12.126395225524902
    9. '(' → logprob: -12.876395225524902
    10. '-N' → logprob: -13.126395225524902

Token 59: '-' (ID: 12)
  Prédit: '-K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-K' → logprob: -0.14357241988182068
    2. '-' → logprob: -2.0185723304748535
    3. 'K' → logprob: -7.7685723304748535
    4. ' -' → logprob: -7.8935723304748535
    5. '-N' → logprob: -10.143572807312012
    6. '+' → logprob: -10.393572807312012
    7. ' ' → logprob: -11.643572807312012
    8. '1' → logprob: -12.018572807312012
    9. ' K' → logprob: -12.018572807312012
    10. '-К' → logprob: -13.393572807312012

Token 60: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8886929154396057
    2. 'K' → logprob: -0.8886929154396057
    3. '-K' → logprob: -2.013692855834961
    4. '-' → logprob: -3.138692855834961
    5. ' K' → logprob: -8.138692855834961
    6. ' -' → logprob: -8.638692855834961
    7. ' ' → logprob: -10.201192855834961
    8. '```' → logprob: -10.326192855834961
    9. '>K' → logprob: -10.513692855834961
    10. '<K' → logprob: -10.701192855834961

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03521818295121193
    2. '-' → logprob: -4.035218238830566
    3. ',-' → logprob: -4.160218238830566
    4. '+' → logprob: -7.160218238830566
    5. ' -' → logprob: -7.910218238830566
    6. ')' → logprob: -9.785218238830566
    7. ' ,-' → logprob: -10.910218238830566
    8. ' ,' → logprob: -11.160218238830566
    9. '1' → logprob: -11.410218238830566
    10. ' +' → logprob: -11.535218238830566

Token 62: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.34870684146881104
    2. '-' → logprob: -1.223706841468811
    3. ' ' → logprob: -8.59870719909668
    4. '1' → logprob: -10.34870719909668
    5. '0' → logprob: -10.34870719909668
    6. '<|end|>' → logprob: -12.34870719909668
    7. '-step' → logprob: -12.59870719909668
    8. '-N' → logprob: -14.09870719909668
    9. '	' → logprob: -14.22370719909668
    10. '```' → logprob: -14.59870719909668

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -12.250011444091797
    3. '2' → logprob: -13.125011444091797
    4. '<|end|>' → logprob: -13.125011444091797
    5. '```' → logprob: -13.750011444091797
    6. ')' → logprob: -14.250011444091797
    7. '<|end|>' → logprob: -14.750011444091797
    8. '-' → logprob: -15.687511444091797
    9. ' -' → logprob: -16.062511444091797
    10. '0' → logprob: -16.500011444091797

Token 64: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6337169408798218
    2. ')' → logprob: -0.7587169408798218
    3. ' )' → logprob: -8.008716583251953
    4. ' ))' → logprob: -8.133716583251953
    5. ')))' → logprob: -8.258716583251953
    6. '),' → logprob: -9.258716583251953
    7. '+' → logprob: -10.508716583251953
    8. '))*' → logprob: -11.133716583251953
    9. ')
' → logprob: -11.258716583251953
    10. '))
' → logprob: -11.383716583251953

Token 65: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4496018588542938
    2. '*' → logprob: -1.0746018886566162
    3. ' *' → logprob: -4.824601650238037
    4. ' ' → logprob: -5.074601650238037
    5. '<|end|>' → logprob: -5.824601650238037
    6. '#' → logprob: -7.324601650238037
    7. '**' → logprob: -7.574601650238037
    8. '(' → logprob: -7.824601650238037
    9. ' )' → logprob: -7.949601650238037
    10. '+' → logprob: -8.324602127075195

Token 66: ' ' (ID: 220)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -2.4391956685576588e-05
    2. '<|end|>' → logprob: -11.250024795532227
    3. ' f' → logprob: -11.750024795532227
    4. '(f' → logprob: -13.750024795532227
    5. '	f' → logprob: -14.000024795532227
    6. '<|end|>' → logprob: -14.125024795532227
    7. ' ' → logprob: -15.750024795532227
    8. '   ' → logprob: -15.750024795532227
    9. '  ' → logprob: -16.000024795532227
    10. '(' → logprob: -16.375024795532227

Token 67: '2' (ID: 17)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -9.372294698550832e-06
    2. ' f' → logprob: -12.750009536743164
    3. '<|end|>' → logprob: -12.750009536743164
    4. '(f' → logprob: -13.625009536743164
    5. '(' → logprob: -14.750009536743164
    6. '2' → logprob: -14.875009536743164
    7. 'factor' → logprob: -14.875009536743164
    8. ' ' → logprob: -15.250009536743164
    9. '  ' → logprob: -15.500009536743164
    10. '   ' → logprob: -15.625009536743164

Token 68: '

' (ID: 279)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6359015107154846
    2. ')' → logprob: -1.5109014511108398
    3. '<|end|>' → logprob: -2.01090145111084
    4. ' ' → logprob: -2.63590145111084
    5. '**' → logprob: -4.38590145111084
    6. '+' → logprob: -4.38590145111084
    7. '#' → logprob: -4.76090145111084
    8. ' *' → logprob: -5.63590145111084
    9. '(' → logprob: -6.26090145111084
    10. '-' → logprob: -7.13590145111084

Token 69: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6239201426506042
    2. '*' → logprob: -2.248920202255249
    3. 'if' → logprob: -2.373920202255249
    4. ')' → logprob: -2.873920202255249
    5. ' ' → logprob: -3.123920202255249
    6. '#' → logprob: -3.498920202255249
    7. ' if' → logprob: -3.748920202255249
    8. 'f' → logprob: -4.24891996383667
    9. 'for' → logprob: -4.24891996383667
    10. '<|end|>' → logprob: -4.37391996383667

Token 70: ' cnt' (ID: 27340)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.02636880986392498
    2. ' N' → logprob: -4.276368618011475
    3. 'K' → logprob: -4.901368618011475
    4. ' cnt' → logprob: -5.776368618011475
    5. ' ' → logprob: -7.276368618011475
    6. 'cnt' → logprob: -8.026369094848633
    7. ' (' → logprob: -8.776369094848633
    8. 'N' → logprob: -8.901369094848633
    9. ' len' → logprob: -9.526369094848633
    10. ' f' → logprob: -9.713869094848633

Token 71: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.8284708857536316
    2. ' >' → logprob: -1.0784709453582764
    3. ' ==' → logprob: -2.4534709453582764
    4. ' <' → logprob: -2.7034709453582764
    5. ' ' → logprob: -3.8284709453582764
    6. ' <=' → logprob: -3.9534709453582764
    7. '<|end|>' → logprob: -4.953470706939697
    8. '==' → logprob: -5.078470706939697
    9. '>' → logprob: -5.203470706939697
    10. '>=' → logprob: -5.453470706939697

Token 72: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.2568749785423279
    2. 'K' → logprob: -1.5068750381469727
    3. ' ' → logprob: -5.756875038146973
    4. '=' → logprob: -7.256875038146973
    5. '1' → logprob: -8.381875038146973
    6. '2' → logprob: -8.756875038146973
    7. '0' → logprob: -9.006875038146973
    8. '10' → logprob: -9.756875038146973
    9. ' (' → logprob: -10.006875038146973
    10. '5' → logprob: -10.381875038146973

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00028624574770219624
    2. ' :' → logprob: -8.500286102294922
    3. ':
' → logprob: -9.500286102294922
    4. ',' → logprob: -12.625286102294922
    5. ':**' → logprob: -14.250286102294922
    6. ':return' → logprob: -14.375286102294922
    7. '.' → logprob: -14.875286102294922
    8. '>:' → logprob: -14.875286102294922
    9. '>' → logprob: -15.000286102294922
    10. ' or' → logprob: -15.000286102294922

Token 74: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.24235183000564575
    2. '   ' → logprob: -1.742351770401001
    3. ' sys' → logprob: -3.867351770401001
    4. 'print' → logprob: -4.36735200881958
    5. '\n' → logprob: -5.61735200881958
    6. '    ' → logprob: -7.61735200881958
    7. ' ' → logprob: -7.86735200881958
    8. '
' → logprob: -8.117351531982422
    9. '	print' → logprob: -8.117351531982422
    10. '```' → logprob: -8.242351531982422

Token 75: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.10913033783435822
    2. 'print' (adapté à ' print') → logprob: -2.734130382537842
    3. '   ' → logprob: -3.984130382537842
    4. ' sys' → logprob: -4.109130382537842
    5. ' ' → logprob: -6.859130382537842
    6. '    ' → logprob: -7.484130382537842
    7. 'sys' → logprob: -7.859130382537842
    8. '\n' → logprob: -8.109129905700684
    9. ' 
' → logprob: -8.609129905700684
    10. '```' → logprob: -8.609129905700684

Token 76: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.6352489590644836
    2. '(' → logprob: -1.1352488994598389
    3. '("' → logprob: -2.010248899459839
    4. '('' → logprob: -4.760249137878418
    5. '()' → logprob: -5.635249137878418
    6. '("-' → logprob: -7.260249137878418
    7. '-' → logprob: -7.510249137878418
    8. '(N' → logprob: -7.510249137878418
    9. '(K' → logprob: -8.010249137878418
    10. '(None' → logprob: -9.385249137878418

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. '2' → logprob: -13.000004768371582
    3. ')' → logprob: -13.750004768371582
    4. ' ' → logprob: -14.562504768371582
    5. '-' → logprob: -15.562504768371582
    6. '```' → logprob: -15.937504768371582
    7. '１' → logprob: -16.1875057220459
    8. '   ' → logprob: -16.6250057220459
    9. '10' → logprob: -17.0000057220459
    10. '_' → logprob: -17.0625057220459

Token 78: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048708755522966385
    2. ')
' → logprob: -3.04870867729187
    3. ')
' → logprob: -9.17370891571045
    4. ' )' → logprob: -12.42370891571045
    5. ')return' → logprob: -12.67370891571045
    6. ')

' → logprob: -12.92370891571045
    7. '   ' → logprob: -13.04870891571045
    8. 'else' → logprob: -13.67370891571045
    9. ')`' → logprob: -14.17370891571045
    10. '```' → logprob: -14.17370891571045

Token 79: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.038437556475400925
    2. '<|end|>' → logprob: -3.413437604904175
    3. ' else' → logprob: -5.913437366485596
    4. 'elif' → logprob: -7.288437366485596
    5. ')' → logprob: -7.413437366485596
    6. '   ' → logprob: -8.913437843322754
    7. '...' → logprob: -8.913437843322754
    8. ' ' → logprob: -9.038437843322754
    9. '```' → logprob: -9.538437843322754
    10. '
' → logprob: -9.538437843322754

Token 80: ' sys' (ID: 12228)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.02454341948032379
    2. ' else' → logprob: -4.024543285369873
    3. '
' → logprob: -6.024543285369873
    4. '\n' → logprob: -6.774543285369873
    5. '   ' → logprob: -7.274543285369873
    6. 'elif' → logprob: -8.024543762207031
    7. 'exit' → logprob: -8.149543762207031
    8. ' ' → logprob: -8.149543762207031
    9. '    
' → logprob: -8.274543762207031
    10. ')' → logprob: -8.649543762207031

Token 81: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -9.949026571121067e-05
    2. '.stdout' → logprob: -9.750099182128906
    3. '.' → logprob: -11.000099182128906
    4. 'exit' → logprob: -11.125099182128906
    5. '.stderr' → logprob: -12.625099182128906
    6. '	exit' → logprob: -12.875099182128906
    7. '   ' → logprob: -13.250099182128906
    8. '.e' → logprob: -14.125099182128906
    9. '_exit' → logprob: -15.250099182128906
    10. '.ex' → logprob: -15.250099182128906

Token 82: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019672929774969816
    2. '(' → logprob: -6.251967430114746
    3. '()
' → logprob: -11.001967430114746
    4. '0' → logprob: -11.751967430114746
    5. '()`' → logprob: -12.126967430114746
    6. '()

' → logprob: -13.251967430114746
    7. '()\' → logprob: -13.501967430114746
    8. '`()' → logprob: -14.001967430114746
    9. '1' → logprob: -14.376967430114746
    10. '().' → logprob: -14.501967430114746

Token 83: 'edges' (ID: 39127)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.7331504821777344
    2. 'for' → logprob: -1.3581504821777344
    3. 'result' → logprob: -2.6081504821777344
    4. 'rest' → logprob: -2.9831504821777344
    5. 'a' → logprob: -3.8581504821777344
    6. 'res' → logprob: -4.483150482177734
    7. '#' → logprob: -4.608150482177734
    8. ' for' → logprob: -4.983150482177734
    9. 'indices' → logprob: -5.108150482177734
    10. ')' → logprob: -5.108150482177734

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00408160500228405
    2. '=' → logprob: -5.504081726074219
    3. '=[]' → logprob: -14.004081726074219
    4. ' =
' → logprob: -14.754081726074219
    5. '_' → logprob: -14.879081726074219
    6. ':' → logprob: -14.879081726074219
    7. ' ' → logprob: -15.254081726074219
    8. ',' → logprob: -15.629081726074219
    9. ' =[' → logprob: -16.00408172607422
    10. '[' → logprob: -16.00408172607422

Token 85: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.9793029427528381
    2. 'list' → logprob: -1.3543028831481934
    3. ' list' → logprob: -1.4793028831481934
    4. ' []' → logprob: -2.6043028831481934
    5. ' [' → logprob: -3.6043028831481934
    6. '[' → logprob: -4.604302883148193
    7. '[list' → logprob: -4.604302883148193
    8. '[(' → logprob: -4.729302883148193
    9. ' [(' → logprob: -6.354302883148193
    10. 'set' → logprob: -6.354302883148193

Token 86: 'list' (ID: 2641)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.3017948865890503
    2. 'tuple' → logprob: -1.9267948865890503
    3. 'list' → logprob: -2.30179500579834
    4. '[]' → logprob: -2.30179500579834
    5. '(tuple' → logprob: -2.30179500579834
    6. '(' → logprob: -2.92679500579834
    7. '(list' → logprob: -3.05179500579834
    8. ']' → logprob: -3.30179500579834
    9. '()]' → logprob: -3.42679500579834
    10. '[' → logprob: -4.30179500579834

Token 87: '()' (ID: 416)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.004526130855083466
    2. '(com' → logprob: -5.879526138305664
    3. '(map' → logprob: -6.754526138305664
    4. 'range' → logprob: -8.254526138305664
    5. '(' → logprob: -9.129526138305664
    6. '()' → logprob: -9.754526138305664
    7. '(is' → logprob: -10.004526138305664
    8. '(i' → logprob: -10.379526138305664
    9. '((' → logprob: -11.754526138305664
    10. 'map' → logprob: -12.004526138305664

Token 88: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6423779129981995
    2. ' for' → logprob: -0.7673779129981995
    3. ')' → logprob: -4.767377853393555
    4. '()' → logprob: -7.017377853393555
    5. ' ' → logprob: -9.517377853393555
    6. '   ' → logprob: -9.642377853393555
    7. ']' → logprob: -9.892377853393555
    8. '	for' → logprob: -10.892377853393555
    9. '    ' → logprob: -11.142377853393555
    10. ',' → logprob: -11.267377853393555

Token 89: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014483846724033356
    2. ' _' → logprob: -4.88948392868042
    3. ' range' → logprob: -5.26448392868042
    4. 'range' → logprob: -6.63948392868042
    5. ' in' → logprob: -8.139483451843262
    6. '_range' → logprob: -9.889483451843262
    7. '(range' → logprob: -11.514483451843262
    8. ' ' → logprob: -11.639483451843262
    9. 'in' → logprob: -12.014483451843262
    10. '_in' → logprob: -13.389483451843262

Token 90: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0017889440059661865
    2. 'range' → logprob: -6.376789093017578
    3. ' in' → logprob: -9.626789093017578
    4. '(range' → logprob: -11.126789093017578
    5. '(' → logprob: -13.001789093017578
    6. 'i' → logprob: -13.376789093017578
    7. ' range' → logprob: -14.001789093017578
    8. '```' → logprob: -14.751789093017578
    9. '0' → logprob: -15.626789093017578
    10. ' ' → logprob: -16.251789093017578

Token 91: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006718809716403484
    2. ' range' → logprob: -5.006718635559082
    3. '(range' → logprob: -13.006718635559082
    4. '	range' → logprob: -13.881718635559082
    5. 'rang' → logprob: -16.6317195892334
    6. ' ' → logprob: -16.7567195892334
    7. 'r' → logprob: -16.8817195892334
    8. 'ran' → logprob: -17.1317195892334
    9. '  ' → logprob: -17.6317195892334
    10. 'in' → logprob: -17.8817195892334

Token 92: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -8.864272967912257e-05
    2. '(' → logprob: -9.375088691711426
    3. 'N' → logprob: -13.125088691711426
    4. '(n' → logprob: -14.250088691711426
    5. '((' → logprob: -14.625088691711426
    6. '(
' → logprob: -14.750088691711426
    7. '(K' → logprob: -16.12508773803711
    8. ' (' → logprob: -17.37508773803711
    9. ')(' → logprob: -17.37508773803711
    10. ')' → logprob: -17.50008773803711

Token 93: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.8312570318812504e-05
    2. ')' → logprob: -11.375018119812012
    3. ')]
' → logprob: -13.000018119812012
    4. ' )' → logprob: -13.250018119812012
    5. ']' → logprob: -13.500018119812012
    6. ')]

' → logprob: -14.500018119812012
    7. '+' → logprob: -14.875018119812012
    8. ')][' → logprob: -15.750018119812012
    9. ')]
' → logprob: -16.125019073486328
    10. ')].' → logprob: -16.875019073486328

Token 94: 'list' (ID: 2641)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05478624999523163
    2. ' for' → logprob: -3.429786205291748
    3. '```' → logprob: -5.429786205291748
    4. 'edges' → logprob: -5.804786205291748
    5. 'i' → logprob: -5.929786205291748
    6. 'c' → logprob: -6.429786205291748
    7. '#' → logprob: -6.929786205291748
    8. 'n' → logprob: -6.929786205291748
    9. 'f' → logprob: -7.179786205291748
    10. '_' → logprob: -7.804786205291748

Token 95: '(map' (ID: 16946)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.48833099007606506
    2. '(' → logprob: -1.6133309602737427
    3. '_' → logprob: -2.1133310794830322
    4. '(range' → logprob: -4.238330841064453
    5. '(c' → logprob: -4.363330841064453
    6. '(
' → logprob: -4.988330841064453
    7. '(count' → logprob: -5.613330841064453
    8. '(is' → logprob: -5.738330841064453
    9. '(edges' → logprob: -6.238330841064453
    10. '(map' → logprob: -6.238330841064453

Token 96: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.07158120721578598
    2. '(int' → logprob: -2.9465811252593994
    3. '(' → logprob: -4.3215813636779785
    4. '(edges' → logprob: -6.5715813636779785
    5. '(
' → logprob: -6.9465813636779785
    6. '(eval' → logprob: -8.44658088684082
    7. '(print' → logprob: -8.57158088684082
    8. '<|end|>' → logprob: -9.19658088684082
    9. '(str' → logprob: -9.57158088684082
    10. '(list' → logprob: -9.57158088684082

Token 97: ' i' (ID: 575)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.6026320457458496
    2. ' edges' → logprob: -1.1026320457458496
    3. ' lambda' → logprob: -3.2276320457458496
    4. '(edges' → logprob: -3.3526320457458496
    5. 'edges' → logprob: -4.10263204574585
    6. '<|end|>' → logprob: -4.22763204574585
    7. 'lambda' → logprob: -4.85263204574585
    8. '(' → logprob: -5.35263204574585
    9. ' (' → logprob: -6.47763204574585
    10. '_edges' → logprob: -8.852632522583008

Token 98: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4965314567089081
    2. ' i' → logprob: -1.6215314865112305
    3. '=lambda' → logprob: -2.6215314865112305
    4. '(i' → logprob: -3.4965314865112305
    5. '<|end|>' → logprob: -3.6215314865112305
    6. '=i' → logprob: -4.2465314865112305
    7. 'lambda' → logprob: -4.6215314865112305
    8. 'i' → logprob: -4.8715314865112305
    9. 'edges' → logprob: -4.9965314865112305
    10. ':i' → logprob: -5.2465314865112305

Token 99: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.462964802980423
    2. ' edges' → logprob: -1.2129647731781006
    3. 'lambda' → logprob: -3.5879647731781006
    4. '(lambda' → logprob: -4.08796501159668
    5. '(edges' → logprob: -4.08796501159668
    6. ' lambda' → logprob: -4.58796501159668
    7. '_edges' → logprob: -8.33796501159668
    8. 'print' → logprob: -8.33796501159668
    9. 'sys' → logprob: -8.58796501159668
    10. ' (' → logprob: -8.83796501159668

Token 100: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00040183294913731515
    2. '[' → logprob: -7.875401973724365
    3. '[int' → logprob: -12.375401496887207
    4. '[N' → logprob: -12.500401496887207
    5. '[I' → logprob: -12.750401496887207
    6. '.append' → logprob: -13.000401496887207
    7. 's' → logprob: -13.875401496887207
    8. '[_' → logprob: -14.000401496887207
    9. '
' → logprob: -14.125401496887207
    10. '[].' → logprob: -14.250401496887207

Token 101: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012415935285389423
    2. ' i' → logprob: -4.637415885925293
    3. '(i' → logprob: -7.137415885925293
    4. '0' → logprob: -7.512415885925293
    5. 'int' → logprob: -7.637415885925293
    6. 'N' → logprob: -9.137415885925293
    7. ']' → logprob: -9.262415885925293
    8. ')' → logprob: -9.387415885925293
    9. '
' → logprob: -9.512415885925293
    10. '[i' → logprob: -9.762415885925293

Token 102: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.28383946418762207
    2. '.append' → logprob: -1.408839464187622
    3. '.' → logprob: -6.783839225769043
    4. ' ].' → logprob: -7.533839225769043
    5. '.extend' → logprob: -8.158839225769043
    6. ']' → logprob: -8.408839225769043
    7. 'append' → logprob: -8.783839225769043
    8. '[' → logprob: -9.033839225769043
    9. ' .' → logprob: -10.158839225769043
    10. ').' → logprob: -10.408839225769043

Token 103: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.00012535012501757592
    2. ' append' → logprob: -9.12512493133545
    3. '.append' → logprob: -11.37512493133545
    4. 'extend' → logprob: -12.37512493133545
    5. '_append' → logprob: -15.12512493133545
    6. '	append' → logprob: -15.62512493133545
    7. 'add' → logprob: -15.87512493133545
    8. 'appen' → logprob: -16.125125885009766
    9. 'insert' → logprob: -17.000125885009766
    10. 'Append' → logprob: -17.125125885009766

Token 104: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.007712985388934612
    2. '((' → logprob: -5.0077128410339355
    3. '([' → logprob: -7.6327128410339355
    4. '(' → logprob: -7.8827128410339355
    5. 'i' → logprob: -9.507713317871094
    6. ')' → logprob: -11.132713317871094
    7. '(int' → logprob: -11.507713317871094
    8. '(N' → logprob: -11.757713317871094
    9. '(list' → logprob: -12.632713317871094
    10. '[i' → logprob: -12.757713317871094

Token 105: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.035710159689188004
    2. ' ,' → logprob: -4.160710334777832
    3. '),' → logprob: -5.035710334777832
    4. '+' → logprob: -5.035710334777832
    5. ' +' → logprob: -5.785710334777832
    6. ',i' → logprob: -6.285710334777832
    7. ')' → logprob: -8.035710334777832
    8. ',
' → logprob: -8.785710334777832
    9. '-' → logprob: -8.785710334777832
    10. ' ' → logprob: -8.910710334777832

Token 106: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14302723109722137
    2. ' range' → logprob: -2.0180273056030273
    3. 'is' → logprob: -8.268027305603027
    4. ' is' → logprob: -9.643027305603027
    5. '(range' → logprob: -10.893027305603027
    6. 'count' → logprob: -13.018027305603027
    7. '	range' → logprob: -13.018027305603027
    8. '[' → logprob: -13.143027305603027
    9. 'list' → logprob: -13.643027305603027
    10. ' ' → logprob: -13.893027305603027

Token 107: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.841743303695694e-05
    2. '(N' → logprob: -9.25009822845459
    3. '1' → logprob: -14.00009822845459
    4. '(n' → logprob: -14.37509822845459
    5. ' (' → logprob: -15.62509822845459
    6. '(K' → logprob: -15.87509822845459
    7. 'N' → logprob: -16.250099182128906
    8. '((' → logprob: -16.375099182128906
    9. '(
' → logprob: -16.500099182128906
    10. 'from' → logprob: -16.875099182128906

Token 108: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02817658707499504
    2. '1' → logprob: -3.6531765460968018
    3. '(N' → logprob: -6.528176784515381
    4. 'N' → logprob: -8.403176307678223
    5. ' ' → logprob: -9.528176307678223
    6. '2' → logprob: -9.653176307678223
    7. ')' → logprob: -11.528176307678223
    8. ' (' → logprob: -12.028176307678223
    9. '   ' → logprob: -12.153176307678223
    10. '(n' → logprob: -12.340676307678223

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010252383537590504
    2. ' ,' → logprob: -5.635252475738525
    3. '(N' → logprob: -5.760252475738525
    4. ',N' → logprob: -6.010252475738525
    5. '(' → logprob: -7.135252475738525
    6. 'N' → logprob: -9.010251998901367
    7. '(),' → logprob: -10.510251998901367
    8. ',K' → logprob: -10.635251998901367
    9. ')' → logprob: -10.760251998901367
    10. '<|end|>' → logprob: -11.135251998901367

Token 110: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0006570351542904973
    2. 'K' → logprob: -7.750657081604004
    3. 'min' → logprob: -9.375657081604004
    4. '1' → logprob: -9.375657081604004
    5. '3' → logprob: -10.625657081604004
    6. ' N' → logprob: -11.125657081604004
    7. 'cnt' → logprob: -12.000657081604004
    8. '4' → logprob: -12.250657081604004
    9. 'len' → logprob: -13.000657081604004
    10. '2' → logprob: -13.375657081604004

Token 111: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.019754789769649506
    2. '))' → logprob: -4.519754886627197
    3. ')' → logprob: -4.769754886627197
    4. ' ' → logprob: -10.019754409790039
    5. ')));' → logprob: -10.019754409790039
    6. ')))
' → logprob: -10.394754409790039
    7. '))))' → logprob: -10.894754409790039
    8. '-' → logprob: -11.394754409790039
    9. ')))

' → logprob: -11.769754409790039
    10. ')):' → logprob: -12.644754409790039

Token 112: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028897086158394814
    2. 'i' → logprob: -4.903897285461426
    3. 'rest' → logprob: -5.778897285461426
    4. 'idx' → logprob: -5.778897285461426
    5. 'current' → logprob: -6.403897285461426
    6. 'edges' → logprob: -6.403897285461426
    7. 'K' → logprob: -6.653897285461426
    8. ' for' → logprob: -6.903897285461426
    9. 'pos' → logprob: -7.028897285461426
    10. 'res' → logprob: -7.028897285461426

Token 113: ' triangular' (ID: 124454)
  Prédit: ' build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.8227769136428833
    2. ' dfs' → logprob: -1.1977769136428833
    3. ' connect' → logprob: -2.9477767944335938
    4. ' solve' → logprob: -3.1977767944335938
    5. ' generate' → logprob: -3.3227767944335938
    6. ' add' → logprob: -3.3227767944335938
    7. ' find' → logprob: -3.4477767944335938
    8. ' construct' → logprob: -3.5727767944335938
    9. ' search' → logprob: -4.697776794433594
    10. ' f' → logprob: -5.572776794433594

Token 114: '_pairs' (ID: 90005)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5671495795249939
    2. '(' → logprob: -1.3171496391296387
    3. '_number' → logprob: -1.9421496391296387
    4. '_numbers' → logprob: -5.192149639129639
    5. '(number' → logprob: -5.192149639129639
    6. '(num' → logprob: -5.942149639129639
    7. '_sum' → logprob: -6.442149639129639
    8. '(
' → logprob: -6.817149639129639
    9. '(N' → logprob: -6.942149639129639
    10. '(x' → logprob: -6.942149639129639

Token 115: '(limit' (ID: 112473)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3231886625289917
    2. '(N' → logprob: -1.8231886625289917
    3. '(' → logprob: -2.3231887817382812
    4. '(i' → logprob: -4.573188781738281
    5. '():' → logprob: -6.073188781738281
    6. '(x' → logprob: -6.448188781738281
    7. '(size' → logprob: -7.323188781738281
    8. '(M' → logprob: -8.448188781738281
    9. '(s' → logprob: -8.573188781738281
    10. '((' → logprob: -8.698188781738281

Token 116: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016347164055332541
    2. ',' → logprob: -6.87663459777832
    3. ':' → logprob: -8.50163459777832
    4. ')' → logprob: -9.12663459777832
    5. '=' → logprob: -9.25163459777832
    6. ' ):' → logprob: -9.37663459777832
    7. '):
' → logprob: -9.50163459777832
    8. '(n' → logprob: -11.37663459777832
    9. '(' → logprob: -12.12663459777832
    10. ' :' → logprob: -13.12663459777832

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.014684110297821e-06
    2. ' for' → logprob: -11.875008583068848
    3. 'for' → logprob: -13.500008583068848
    4. '   ' → logprob: -15.875008583068848
    5. '	for' → logprob: -16.000009536743164
    6. '    
' → logprob: -16.625009536743164
    7. '```' → logprob: -16.750009536743164
    8. 'def' → logprob: -16.750009536743164
    9. '    ' → logprob: -17.000009536743164
    10. '       ' → logprob: -17.125009536743164

Token 118: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5919511318206787
    2. '   ' → logprob: -1.4669511318206787
    3. 'i' → logprob: -1.7169511318206787
    4. 'yield' → logprob: -4.841951370239258
    5. 'acc' → logprob: -5.341951370239258
    6. 'a' → logprob: -5.341951370239258
    7. ' for' → logprob: -5.841951370239258
    8. 'def' (adapté à ' def') → logprob: -5.841951370239258
    9. 's' → logprob: -5.966951370239258
    10. 'result' → logprob: -6.091951370239258

Token 119: ' skip' (ID: 16677)
  Prédit: 'gen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gen' → logprob: -0.5055933594703674
    2. ' gen' → logprob: -2.2555932998657227
    3. 'pairs' → logprob: -2.5055932998657227
    4. 'generator' → logprob: -3.1305932998657227
    5. 'g' → logprob: -3.3805932998657227
    6. ' pairs' → logprob: -3.8805932998657227
    7. 'tri' → logprob: -4.005593299865723
    8. ' generator' → logprob: -4.130593299865723
    9. 'generate' → logprob: -4.505593299865723
    10. '_gen' → logprob: -4.630593299865723

Token 120: '_diag' (ID: 161716)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4177045524120331
    2. '_pairs' → logprob: -1.4177045822143555
    3. '(limit' → logprob: -3.7927045822143555
    4. '_' → logprob: -4.4177045822143555
    5. '(' → logprob: -4.5427045822143555
    6. 'pairs' → logprob: -4.6677045822143555
    7. '(i' → logprob: -4.9177045822143555
    8. '(skip' → logprob: -5.6677045822143555
    9. '_tokens' → logprob: -6.1677045822143555
    10. '(num' → logprob: -6.2927045822143555

Token 121: '(i' (ID: 3649)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4787999987602234
    2. '(limit' → logprob: -1.2288000583648682
    3. '(' → logprob: -3.603800058364868
    4. '(i' → logprob: -3.728800058364868
    5. '(offset' → logprob: -4.853799819946289
    6. '(l' → logprob: -5.353799819946289
    7. '(x' → logprob: -5.353799819946289
    8. '(size' → logprob: -5.853799819946289
    9. '(count' → logprob: -6.228799819946289
    10. '(a' → logprob: -6.228799819946289

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07485348731279373
    2. '):' → logprob: -2.6998534202575684
    3. '):
' → logprob: -6.574853420257568
    4. '+' → logprob: -7.449853420257568
    5. ',n' → logprob: -7.449853420257568
    6. '   ' → logprob: -7.574853420257568
    7. ',i' → logprob: -7.574853420257568
    8. ':' → logprob: -7.949853420257568
    9. ' ,' → logprob: -8.449853897094727
    10. ',j' → logprob: -9.449853897094727

Token 123: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07710152119398117
    2. 'limit' → logprob: -2.952101469039917
    3. ' j' → logprob: -4.952101707458496
    4. ' limit' → logprob: -5.452101707458496
    5. 'n' → logprob: -5.577101707458496
    6. 'i' → logprob: -6.077101707458496
    7. '   ' → logprob: -6.702101707458496
    8. 'N' → logprob: -7.202101707458496
    9. 'k' → logprob: -7.827101707458496
    10. ')' → logprob: -7.952101707458496

Token 124: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007145717274397612
    2. '):
' → logprob: -5.257145881652832
    3. ':' → logprob: -6.632145881652832
    4. ',' → logprob: -7.882145881652832
    5. '   ' → logprob: -8.882145881652832
    6. '       ' → logprob: -10.882145881652832
    7. ')' → logprob: -11.007145881652832
    8. '):
' → logprob: -11.632145881652832
    9. '<|end|>' → logprob: -11.757145881652832
    10. '=' → logprob: -12.757145881652832

Token 125: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2143505960702896
    2. '<|end|>' → logprob: -2.214350700378418
    3. ' ' → logprob: -3.714350700378418
    4. '    ' → logprob: -3.839350700378418
    5. '        ' → logprob: -4.214350700378418
    6. ' if' → logprob: -4.464350700378418
    7. '   ' → logprob: -5.339350700378418
    8. ' return' → logprob: -5.589350700378418
    9. '<|end|>' → logprob: -7.839350700378418
    10. '           ' → logprob: -7.964350700378418

Token 126: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06728826463222504
    2. 'j' → logprob: -3.4422881603240967
    3. ' i' → logprob: -3.6922881603240967
    4. '(i' → logprob: -5.817288398742676
    5. ' j' → logprob: -6.192288398742676
    6. 'False' → logprob: -6.692288398742676
    7. '0' → logprob: -7.692288398742676
    8. 'abs' → logprob: -7.817288398742676
    9. '   ' → logprob: -8.567288398742676
    10. '(j' → logprob: -8.817288398742676

Token 127: ' !=' (ID: 1666)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5680643320083618
    2. '!=' → logprob: -1.3180643320083618
    3. ' !=' → logprob: -2.4430642127990723
    4. ' <' → logprob: -2.6930642127990723
    5. '>' → logprob: -5.443064212799072
    6. '<|end|>' → logprob: -5.943064212799072
    7. '+' → logprob: -7.193064212799072
    8. '==' → logprob: -7.193064212799072
    9. ' >' → logprob: -8.31806468963623
    10. '=' → logprob: -8.31806468963623

Token 128: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.000808082812000066
    2. ' j' → logprob: -7.125808238983154
    3. '   ' → logprob: -13.750807762145996
    4. '	j' → logprob: -14.000807762145996
    5. '<|end|>' → logprob: -14.125807762145996
    6. ' ' → logprob: -14.875807762145996
    7. '  ' → logprob: -16.000808715820312
    8. '    ' → logprob: -16.125808715820312
    9. '<|end|>' → logprob: -16.375808715820312
    10. '0' → logprob: -16.500808715820312

Token 129: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.032751310616731644
    2. '   ' → logprob: -4.032751083374023
    3. '<|end|>' → logprob: -4.407751083374023
    4. ',' → logprob: -7.657751083374023
    5. '    
' → logprob: -7.782751083374023
    6. '\n' → logprob: -8.157751083374023
    7. '<|end|>' → logprob: -8.282751083374023
    8. '
' → logprob: -8.532751083374023
    9. '

' → logprob: -8.657751083374023
    10. ' ' → logprob: -9.657751083374023

Token 130: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5216885805130005
    2. '<|end|>' → logprob: -1.5216885805130005
    3. '   ' → logprob: -1.8966885805130005
    4. ':' → logprob: -4.021688461303711
    5. '\n' → logprob: -5.521688461303711
    6. '<|end|>' → logprob: -5.896688461303711
    7. '    
' → logprob: -6.021688461303711
    8. ' 
' → logprob: -6.646688461303711
    9. ':
' → logprob: -6.646688461303711
    10. ' ' → logprob: -6.771688461303711

Token 131: ' pairs' (ID: 24702)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004466912243515253
    2. ' for' → logprob: -5.629467010498047
    3. 'for' → logprob: -7.129467010498047
    4. 'def' → logprob: -11.254467010498047
    5. ' return' → logprob: -11.754467010498047
    6. ' while' → logprob: -12.004467010498047
    7. '    ' → logprob: -12.004467010498047
    8. ' def' → logprob: -12.254467010498047
    9. ' yield' → logprob: -12.254467010498047
    10. 'yield' → logprob: -12.504467010498047

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029822465032339096
    2. '=' → logprob: -3.52982234954834
    3. ' ' → logprob: -10.65482234954834
    4. '<|end|>' → logprob: -10.77982234954834
    5. ':' → logprob: -12.27982234954834
    6. ',' → logprob: -12.40482234954834
    7. '<|end|>' → logprob: -12.40482234954834
    8. '   ' → logprob: -12.65482234954834
    9. '(' → logprob: -12.77982234954834
    10. '=[]' → logprob: -13.27982234954834

Token 133: ' ((' (ID: 3536)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.6661791205406189
    2. '((' → logprob: -0.9161791205406189
    3. '(com' → logprob: -3.4161791801452637
    4. 'com' → logprob: -4.291179180145264
    5. '(filter' → logprob: -4.291179180145264
    6. 'filter' → logprob: -4.791179180145264
    7. '(is' → logprob: -5.791179180145264
    8. '[]' → logprob: -5.916179180145264
    9. '[i' → logprob: -6.291179180145264
    10. '[' → logprob: -6.541179180145264

Token 134: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006980699021369219
    2. 'x' → logprob: -5.756980895996094
    3. 'a' → logprob: -6.381980895996094
    4. '(i' → logprob: -7.256980895996094
    5. 'j' → logprob: -7.506980895996094
    6. '   ' → logprob: -8.881980895996094
    7. 'k' → logprob: -9.256980895996094
    8. ' i' → logprob: -9.506980895996094
    9. 'r' → logprob: -9.506980895996094
    10. ')' → logprob: -9.881980895996094

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02685217186808586
    2. ',j' → logprob: -3.6518521308898926
    3. ' ,' → logprob: -7.901852130889893
    4. '+' → logprob: -9.40185260772705
    5. '   ' → logprob: -10.27685260772705
    6. 'j' → logprob: -11.40185260772705
    7. ',k' → logprob: -11.40185260772705
    8. ',i' → logprob: -11.90185260772705
    9. ' +' → logprob: -12.02685260772705
    10. '  ' → logprob: -12.27685260772705

Token 136: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008716569282114506
    2. ' j' → logprob: -4.758716583251953
    3. 'i' → logprob: -10.008716583251953
    4. 'k' → logprob: -11.133716583251953
    5. '   ' → logprob: -11.633716583251953
    6. ')' → logprob: -11.633716583251953
    7. ' ' → logprob: -12.633716583251953
    8. 'n' → logprob: -13.383716583251953
    9. '    ' → logprob: -13.446216583251953
    10. 'y' → logprob: -13.633716583251953

Token 137: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03405157849192619
    2. 'for' → logprob: -4.034051418304443
    3. ' for' → logprob: -4.159051418304443
    4. ' )' → logprob: -9.284051895141602
    5. '   ' → logprob: -10.534051895141602
    6. ')
' → logprob: -11.909051895141602
    7. ' ' → logprob: -12.159051895141602
    8. '    ' → logprob: -12.284051895141602
    9. '	for' → logprob: -12.284051895141602
    10. '
' → logprob: -12.409051895141602

Token 138: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1272076815366745
    2. 'for' → logprob: -2.1272077560424805
    3. '    ' → logprob: -9.50220775604248
    4. ')' → logprob: -9.50220775604248
    5. '   ' → logprob: -9.50220775604248
    6. ' ' → logprob: -10.62720775604248
    7. '	for' → logprob: -11.62720775604248
    8. '
' → logprob: -12.37720775604248
    9. '  ' → logprob: -12.50220775604248
    10. '        ' → logprob: -12.62720775604248

Token 139: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0588790588080883
    2. ' i' → logprob: -3.0588791370391846
    3. 'j' → logprob: -4.8088788986206055
    4. ' j' → logprob: -6.4338788986206055
    5. ' in' → logprob: -8.058878898620605
    6. 'in' → logprob: -10.558878898620605
    7. '   ' → logprob: -10.808878898620605
    8. 'range' → logprob: -10.808878898620605
    9. 'count' → logprob: -11.058878898620605
    10. ' ' → logprob: -11.683878898620605

Token 140: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.281839519739151
    2. 'in' → logprob: -1.4068394899368286
    3. ',' → logprob: -7.906839370727539
    4. 'i' → logprob: -9.531839370727539
    5. ' i' → logprob: -9.656839370727539
    6. '<|end|>' → logprob: -10.281839370727539
    7. 'range' → logprob: -10.531839370727539
    8. ' ' → logprob: -10.531839370727539
    9. ')' → logprob: -10.656839370727539
    10. '<|end|>' → logprob: -11.156839370727539

Token 141: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07323797047138214
    2. 'count' → logprob: -2.948237895965576
    3. ' range' → logprob: -4.073237895965576
    4. 'is' → logprob: -7.073237895965576
    5. ' count' → logprob: -8.573238372802734
    6. 'cycle' → logprob: -10.323238372802734
    7. 'limit' → logprob: -10.698238372802734
    8. ' is' → logprob: -10.948238372802734
    9. ')' → logprob: -11.573238372802734
    10. 'in' → logprob: -11.948238372802734

Token 142: '(' (ID: 7)
  Prédit: '(limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(limit' → logprob: -0.010670709423720837
    2. 'limit' → logprob: -4.6356706619262695
    3. '(N' → logprob: -7.3856706619262695
    4. '(' → logprob: -8.26067066192627
    5. ' limit' → logprob: -10.63567066192627
    6. 'N' → logprob: -12.26067066192627
    7. '(n' → logprob: -12.88567066192627
    8. '   ' → logprob: -14.01067066192627
    9. '(len' → logprob: -14.01067066192627
    10. '1' → logprob: -14.76067066192627

Token 143: '1' (ID: 16)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.013870459981262684
    2. 'N' → logprob: -4.3888702392578125
    3. '1' → logprob: -7.0138702392578125
    4. ' limit' → logprob: -7.8888702392578125
    5. '(limit' → logprob: -10.388870239257812
    6. '0' → logprob: -10.888870239257812
    7. '2' → logprob: -12.013870239257812
    8. ' N' → logprob: -12.263870239257812
    9. 'i' → logprob: -12.388870239257812
    10. 'lim' → logprob: -12.513870239257812

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011815639212727547
    2. 'limit' → logprob: -4.761815547943115
    3. ' ,' → logprob: -7.011815547943115
    4. 'N' → logprob: -7.011815547943115
    5. ' limit' → logprob: -7.761815547943115
    6. '(limit' → logprob: -7.886815547943115
    7. ',N' → logprob: -8.136816024780273
    8. ' N' → logprob: -9.386816024780273
    9. ')' → logprob: -9.761816024780273
    10. ' ' → logprob: -10.386816024780273

Token 145: ' N' (ID: 478)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.059681423008441925
    2. 'N' → logprob: -2.9346814155578613
    3. ' limit' → logprob: -5.434681415557861
    4. ' N' → logprob: -8.05968189239502
    5. '1' → logprob: -10.43468189239502
    6. 'lim' → logprob: -10.93468189239502
    7. '   ' → logprob: -11.93468189239502
    8. 'n' → logprob: -12.05968189239502
    9. 'i' → logprob: -12.37218189239502
    10. '(limit' → logprob: -12.43468189239502

Token 146: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009434112347662449
    2. '-' → logprob: -4.884434223175049
    3. '+' → logprob: -7.384434223175049
    4. ' -' → logprob: -7.884434223175049
    5. ' )' → logprob: -8.00943374633789
    6. 'for' → logprob: -8.38443374633789
    7. '   ' → logprob: -8.75943374633789
    8. ' for' → logprob: -10.88443374633789
    9. ')
' → logprob: -11.00943374633789
    10. ' +' → logprob: -11.00943374633789

Token 147: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12763775885105133
    2. 'for' → logprob: -2.1276378631591797
    3. '   ' → logprob: -8.00263786315918
    4. '       ' → logprob: -9.37763786315918
    5. '    ' → logprob: -9.75263786315918
    6. '           ' → logprob: -9.75263786315918
    7. '	for' → logprob: -9.87763786315918
    8. ' ' → logprob: -10.75263786315918
    9. '               ' → logprob: -11.12763786315918
    10. '        ' → logprob: -11.50263786315918

Token 148: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.24013373255729675
    2. 'range' → logprob: -1.9901337623596191
    3. ' j' → logprob: -2.865133762359619
    4. ' range' → logprob: -4.115133762359619
    5. 'i' → logprob: -6.615133762359619
    6. ' in' → logprob: -6.865133762359619
    7. 'in' → logprob: -7.615133762359619
    8. '   ' → logprob: -9.115133285522461
    9. 'is' → logprob: -9.365133285522461
    10. ' i' → logprob: -9.490133285522461

Token 149: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2020130455493927
    2. 'in' → logprob: -1.7020130157470703
    3. 'range' → logprob: -8.45201301574707
    4. '(' → logprob: -8.57701301574707
    5. '(range' → logprob: -9.45201301574707
    6. ')' → logprob: -10.45201301574707
    7. '(i' → logprob: -10.82701301574707
    8. 'i' → logprob: -11.32701301574707
    9. ' range' → logprob: -11.32701301574707
    10. ',' → logprob: -11.82701301574707

Token 150: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0213854368776083
    2. ' range' → logprob: -3.896385431289673
    3. 'i' → logprob: -7.896385669708252
    4. 'is' → logprob: -8.396385192871094
    5. 'count' → logprob: -9.396385192871094
    6. 'cycle' → logprob: -9.771385192871094
    7. '(range' → logprob: -10.646385192871094
    8. '   ' → logprob: -11.396385192871094
    9. 'limit' → logprob: -11.521385192871094
    10. 'filter' → logprob: -11.646385192871094

Token 151: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.08174464851617813
    2. '(' → logprob: -2.58174467086792
    3. '(N' → logprob: -6.20674467086792
    4. '(limit' → logprob: -7.33174467086792
    5. '(max' → logprob: -8.831744194030762
    6. '(min' → logprob: -11.831744194030762
    7. 'i' → logprob: -12.331744194030762
    8. '(c' → logprob: -12.706744194030762
    9. '(count' → logprob: -12.831744194030762
    10. '1' → logprob: -13.081744194030762

Token 152: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3706616759300232
    2. '))' → logprob: -1.245661735534668
    3. ' +' → logprob: -4.245661735534668
    4. ',' → logprob: -5.245661735534668
    5. ')' → logprob: -7.245661735534668
    6. ')))' → logprob: -7.745661735534668
    7. '(' → logprob: -8.245661735534668
    8. 'N' → logprob: -8.495661735534668
    9. ',N' → logprob: -9.120661735534668
    10. '1' → logprob: -9.370661735534668

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20230764150619507
    2. 'N' → logprob: -1.7023077011108398
    3. ',' → logprob: -8.07730770111084
    4. 'limit' → logprob: -8.32730770111084
    5. '2' → logprob: -9.20230770111084
    6. '(' → logprob: -9.70230770111084
    7. '(N' → logprob: -9.82730770111084
    8. 'i' → logprob: -10.32730770111084
    9. ',N' → logprob: -10.45230770111084
    10. ' ' → logprob: -11.20230770111084

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016044863732531667
    2. ',N' → logprob: -7.0016045570373535
    3. 'N' → logprob: -7.8766045570373535
    4. 'limit' → logprob: -9.251604080200195
    5. '(N' → logprob: -9.626604080200195
    6. ' ,' → logprob: -9.751604080200195
    7. 'if' → logprob: -10.876604080200195
    8. '(' → logprob: -11.001604080200195
    9. '))' → logprob: -11.251604080200195
    10. ')' → logprob: -11.251604080200195

Token 155: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0061112819239497185
    2. 'limit' → logprob: -5.256111145019531
    3. ' N' → logprob: -7.131111145019531
    4. ' limit' → logprob: -10.131111145019531
    5. 'min' → logprob: -10.756111145019531
    6. '   ' → logprob: -12.256111145019531
    7. 'n' → logprob: -13.131111145019531
    8. '	N' → logprob: -13.256111145019531
    9. '    ' → logprob: -13.631111145019531
    10. '```' → logprob: -14.256111145019531

Token 156: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.22557075321674347
    2. ')' → logprob: -1.600570797920227
    3. ' if' → logprob: -10.100570678710938
    4. 'if' → logprob: -10.225570678710938
    5. ')))' → logprob: -10.975570678710938
    6. '))
' → logprob: -11.100570678710938
    7. ' ))' → logprob: -11.100570678710938
    8. ' )' → logprob: -11.975570678710938
    9. '   ' → logprob: -12.225570678710938
    10. '))

' → logprob: -12.475570678710938

Token 157: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08112895488739014
    2. ')' → logprob: -2.5811290740966797
    3. 'if' → logprob: -6.33112907409668
    4. '   ' → logprob: -8.08112907409668
    5. ' )' → logprob: -9.33112907409668
    6. '    ' → logprob: -11.20612907409668
    7. '	if' → logprob: -11.33112907409668
    8. ')
' → logprob: -11.45612907409668
    9. ' ' → logprob: -12.08112907409668
    10. '  ' → logprob: -12.45612907409668

Token 158: ' skip' (ID: 16677)
  Prédit: 'skip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'skip' → logprob: -0.2333090454339981
    2. ' skip' → logprob: -1.858309030532837
    3. 'i' → logprob: -3.233309030532837
    4. ' i' → logprob: -4.483309268951416
    5. 'j' → logprob: -7.358309268951416
    6. ' j' → logprob: -8.233308792114258
    7. '(skip' → logprob: -8.233308792114258
    8. 'True' → logprob: -9.108308792114258
    9. '(i' → logprob: -10.483308792114258
    10. '   ' → logprob: -10.733308792114258

Token 159: '_diag' (ID: 161716)
  Prédit: '_diag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diag' → logprob: -4.4849443838757e-06
    2. '(i' → logprob: -13.000004768371582
    3. 'diag' → logprob: -13.500004768371582
    4. '_di' → logprob: -14.750004768371582
    5. '_' → logprob: -16.000003814697266
    6. 'Diag' → logprob: -16.250003814697266
    7. '_diff' → logprob: -17.375003814697266
    8. '_dist' → logprob: -17.500003814697266
    9. '
' → logprob: -17.875003814697266
    10. 'i' → logprob: -18.000003814697266

Token 160: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.452426608419046e-05
    2. '(' → logprob: -10.37503433227539
    3. ' (' → logprob: -13.00003433227539
    4. ')' → logprob: -15.12503433227539
    5. '(j' → logprob: -15.25003433227539
    6. '(
' → logprob: -15.37503433227539
    7. '
' → logprob: -16.12503433227539
    8. '((' → logprob: -17.50003433227539
    9. '(ii' → logprob: -17.62503433227539
    10. '   ' → logprob: -18.25003433227539

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08902115374803543
    2. ',j' → logprob: -2.4640212059020996
    3. ' ,' → logprob: -9.839020729064941
    4. ',
' → logprob: -11.464020729064941
    5. 'j' → logprob: -11.839020729064941
    6. '(j' → logprob: -12.464020729064941
    7. ')' → logprob: -12.839020729064941
    8. ',i' → logprob: -13.714020729064941
    9. ' j' → logprob: -14.589020729064941
    10. '(' → logprob: -14.964020729064941

Token 162: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0009230116847902536
    2. ' j' → logprob: -7.000923156738281
    3. '<|end|>' → logprob: -12.375923156738281
    4. ')' → logprob: -13.500923156738281
    5. '   ' → logprob: -13.625923156738281
    6. ' ' → logprob: -14.375923156738281
    7. '
' → logprob: -14.625923156738281
    8. '	j' → logprob: -14.625923156738281
    9. '```' → logprob: -14.625923156738281
    10. '    ' → logprob: -14.875923156738281

Token 163: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1605546474456787
    2. ')' → logprob: -1.9105546474456787
    3. '))
' → logprob: -9.035554885864258
    4. ')))' → logprob: -9.285554885864258
    5. '):' → logprob: -10.285554885864258
    6. ')
' → logprob: -10.410554885864258
    7. '))

' → logprob: -10.660554885864258
    8. ')

' → logprob: -12.410554885864258
    9. '),' → logprob: -12.660554885864258
    10. '   ' → logprob: -12.660554885864258

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16033288836479187
    2. ')' → logprob: -1.9103329181671143
    3. '    
' → logprob: -10.410332679748535
    4. ')
' → logprob: -10.910332679748535
    5. '       ' → logprob: -11.535332679748535
    6. 'return' → logprob: -11.785332679748535
    7. '    ' → logprob: -11.910332679748535
    8. ' )' → logprob: -12.410332679748535
    9. ')return' → logprob: -12.535332679748535
    10. '.' → logprob: -12.660332679748535

Token 165: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5696977972984314
    2. ' for' → logprob: -1.3196978569030762
    3. 'for' → logprob: -2.819697856903076
    4. ')' → logprob: -3.694697856903076
    5. 'yield' → logprob: -3.694697856903076
    6. ' return' → logprob: -3.944697856903076
    7. 'return' (adapté à ' return') → logprob: -4.444697856903076
    8. ' yield' → logprob: -4.944697856903076
    9. '    ' → logprob: -5.694697856903076
    10. '    
' → logprob: -5.819697856903076

Token 166: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5384374260902405
    2. 'list' → logprob: -1.0384373664855957
    3. ' list' → logprob: -3.2884373664855957
    4. ' is' → logprob: -3.7884373664855957
    5. '(is' → logprob: -7.288437366485596
    6. 'take' → logprob: -7.663437366485596
    7. 'tuple' → logprob: -8.413437843322754
    8. '[(' → logprob: -8.538437843322754
    9. '(list' → logprob: -8.788437843322754
    10. ' (' → logprob: -8.913437843322754

Token 167: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.0013546408154070377
    2. 'slice' → logprob: -6.626354694366455
    3. '_slice' → logprob: -11.376354217529297
    4. 'lices' → logprob: -13.001354217529297
    5. 'ice' → logprob: -13.251354217529297
    6. '(slice' → logprob: -13.251354217529297
    7. '```' → logprob: -13.376354217529297
    8. '(' → logprob: -13.501354217529297
    9. 'liced' → logprob: -13.876354217529297
    10. 's' → logprob: -14.001354217529297

Token 168: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.9027791495318525e-05
    2. '(' → logprob: -10.875019073486328
    3. '(
' → logprob: -18.000019073486328
    4. ' (' → logprob: -18.125019073486328
    5. '(c' → logprob: -18.250019073486328
    6. '(com' → logprob: -18.375019073486328
    7. 'pairs' → logprob: -18.500019073486328
    8. ' ' → logprob: -19.375019073486328
    9. ' pairs' → logprob: -19.500019073486328
    10. '(pair' → logprob: -19.750019073486328

Token 169: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -7.457669562427327e-05
    2. 'pairs' → logprob: -10.12507438659668
    3. 'air' → logprob: -10.87507438659668
    4. 'a' → logprob: -12.25007438659668
    5. '(' → logprob: -13.12507438659668
    6. '```' → logprob: -13.37507438659668
    7. '(p' → logprob: -13.62507438659668
    8. '_pairs' → logprob: -13.75007438659668
    9. '...' → logprob: -13.87507438659668
    10. 'aires' → logprob: -14.12507438659668

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16205427050590515
    2. '(limit' → logprob: -1.9120543003082275
    3. '(' → logprob: -6.787054061889648
    4. ' ,' → logprob: -7.537054061889648
    5. '   ' → logprob: -9.537054061889648
    6. 'limit' → logprob: -10.662054061889648
    7. '(p' → logprob: -10.787054061889648
    8. ' limit' → logprob: -10.912054061889648
    9. ' (' → logprob: -11.287054061889648
    10. 'pairs' → logprob: -12.537054061889648

Token 171: ' limit' (ID: 5967)
  Prédit: ' limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -0.12829992175102234
    2. 'limit' → logprob: -2.1282999515533447
    3. ' K' → logprob: -6.628299713134766
    4. 'K' → logprob: -10.128299713134766
    5. '(limit' → logprob: -11.753299713134766
    6. '_limit' → logprob: -15.878299713134766
    7. '.limit' → logprob: -16.003299713134766
    8. '-limit' → logprob: -16.378299713134766
    9. ' ' → logprob: -16.503299713134766
    10. 'k' → logprob: -17.253299713134766

Token 172: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. ')
' → logprob: -12.625005722045898
    3. '))' → logprob: -13.750005722045898
    4. ' )' → logprob: -14.500005722045898
    5. '   ' → logprob: -15.750005722045898
    6. ')))' → logprob: -16.7500057220459
    7. ')

' → logprob: -16.7500057220459
    8. ' ' → logprob: -16.8750057220459
    9. '())' → logprob: -17.7500057220459
    10. ')`' → logprob: -18.1250057220459

Token 173: 'list' (ID: 2641)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16369135677814484
    2. 'result' → logprob: -3.163691282272339
    3. 'pairs' → logprob: -3.288691282272339
    4. 'res' → logprob: -4.288691520690918
    5. 'graph' → logprob: -4.413691520690918
    6. 'answer' → logprob: -4.413691520690918
    7. 'edges' → logprob: -5.163691520690918
    8. 'ans' → logprob: -5.163691520690918
    9. 'G' → logprob: -5.538691520690918
    10. 'answers' → logprob: -6.038691520690918

Token 174: '(map' (ID: 16946)
  Prédit: '(tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -0.026136450469493866
    2. '(' → logprob: -3.7761363983154297
    3. '(map' → logprob: -5.90113639831543
    4. '(trim' → logprob: -9.90113639831543
    5. '(t' → logprob: -10.65113639831543
    6. '()' → logprob: -10.90113639831543
    7. '(lambda' → logprob: -11.40113639831543
    8. '(filter' → logprob: -11.52613639831543
    9. '(range' → logprob: -12.65113639831543
    10. '(for' → logprob: -12.90113639831543

Token 175: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.28888463973999023
    2. '(edges' → logprob: -1.4138846397399902
    3. '(' → logprob: -4.91388463973999
    4. '(edge' → logprob: -8.913885116577148
    5. ')' → logprob: -10.163885116577148
    6. 'edges' → logprob: -10.413885116577148
    7. '(tr' → logprob: -10.663885116577148
    8. '(l' → logprob: -10.913885116577148
    9. '(print' → logprob: -10.913885116577148
    10. '```' → logprob: -11.288885116577148

Token 176: ' p' (ID: 275)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pair' → logprob: -1.1452891826629639
    2. 'x' → logprob: -1.2702891826629639
    3. ' pair' → logprob: -2.395289182662964
    4. ' x' → logprob: -2.520289182662964
    5. 'i' → logprob: -3.020289182662964
    6. 'e' → logprob: -3.270289182662964
    7. 'edge' → logprob: -3.895289182662964
    8. ' i' → logprob: -3.895289182662964
    9. ' e' → logprob: -4.020289421081543
    10. 'p' → logprob: -4.020289421081543

Token 177: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029782988131046295
    2. ' :' → logprob: -5.877978324890137
    3. ' edges' → logprob: -9.877978324890137
    4. 'edges' → logprob: -10.127978324890137
    5. '_edges' → logprob: -10.627978324890137
    6. '<|end|>' → logprob: -10.752978324890137
    7. ':list' → logprob: -11.502978324890137
    8. '(edges' → logprob: -11.877978324890137
    9. 's' → logprob: -12.127978324890137
    10. 'Edges' → logprob: -12.502978324890137

Token 178: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.3734402656555176
    2. '(lambda' → logprob: -2.2484402656555176
    3. 'lambda' → logprob: -2.3734402656555176
    4. ' edges' → logprob: -2.7484402656555176
    5. ' lambda' → logprob: -3.8734402656555176
    6. '   ' → logprob: -4.123440265655518
    7. '(edges' → logprob: -4.498440265655518
    8. ' ' → logprob: -8.99843978881836
    9. ' (' → logprob: -8.99843978881836
    10. 'edge' → logprob: -9.37343978881836

Token 179: '[p' (ID: 23234)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004004024958703667
    2. '[p' → logprob: -7.875400543212891
    3. 'p' → logprob: -12.37540054321289
    4. ' [' → logprob: -12.50040054321289
    5. ')[' → logprob: -13.00040054321289
    6. '[
' → logprob: -13.37540054321289
    7. '0' → logprob: -13.62540054321289
    8. '```' → logprob: -13.87540054321289
    9. '][' → logprob: -14.37540054321289
    10. ')' → logprob: -14.37540054321289

Token 180: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.470901229884475e-05
    2. '0' → logprob: -10.37508487701416
    3. '1' → logprob: -11.00008487701416
    4. '][' → logprob: -11.87508487701416
    5. '```' → logprob: -12.25008487701416
    6. ']' → logprob: -12.37508487701416
    7. 'p' → logprob: -12.75008487701416
    8. ' [' → logprob: -12.87508487701416
    9. '[i' → logprob: -13.18758487701416
    10. '-' → logprob: -13.25008487701416

Token 181: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3149806559085846
    2. '1' → logprob: -1.3149806261062622
    3. ' ' → logprob: -7.439980506896973
    4. '[' → logprob: -7.939980506896973
    5. '   ' → logprob: -8.314980506896973
    6. '-' → logprob: -9.439980506896973
    7. '])' → logprob: -9.627480506896973
    8. '```' → logprob: -9.627480506896973
    9. ']' → logprob: -9.689980506896973
    10. '
' → logprob: -10.002480506896973

Token 182: ']].' (ID: 47690)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00012678056373260915
    2. '[' → logprob: -9.500126838684082
    3. ']' → logprob: -10.750126838684082
    4. ' ].' → logprob: -11.750126838684082
    5. '()].' → logprob: -12.375126838684082
    6. '   ' → logprob: -12.500126838684082
    7. '][' → logprob: -12.625126838684082
    8. '0' → logprob: -13.000126838684082
    9. ':].' → logprob: -13.000126838684082
    10. '-' → logprob: -13.750126838684082

Token 183: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.694766489090398e-05
    2. ' append' → logprob: -9.625066757202148
    3. '.append' → logprob: -14.625066757202148
    4. '	append' → logprob: -15.500066757202148
    5. 'appen' → logprob: -16.12506675720215
    6. 'extend' → logprob: -18.25006675720215
    7. 'app' → logprob: -19.50006675720215
    8. 'add' → logprob: -19.50006675720215
    9. 'Append' → logprob: -19.62506675720215
    10. '_append' → logprob: -19.62506675720215

Token 184: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0001434690784662962
    2. 'p' → logprob: -9.125143051147461
    3. '(' → logprob: -10.500143051147461
    4. ' (' → logprob: -12.500143051147461
    5. ' p' → logprob: -13.750143051147461
    6. '(
' → logprob: -14.000143051147461
    7. '   ' → logprob: -14.500143051147461
    8. '((' → logprob: -15.000143051147461
    9. ' ' → logprob: -16.12514305114746
    10. ')' → logprob: -16.25014305114746

Token 185: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.327856630785391e-05
    2. ']' → logprob: -10.375082969665527
    3. '1' → logprob: -11.250082969665527
    4. ')' → logprob: -11.250082969665527
    5. '][' → logprob: -11.750082969665527
    6. ')])' → logprob: -12.500082969665527
    7. ']))' → logprob: -13.000082969665527
    8. '(' → logprob: -13.125082969665527
    9. '])' → logprob: -13.375082969665527
    10. ')[' → logprob: -13.500082969665527

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018375257786829025
    2. '[' → logprob: -8.625184059143066
    3. ' ' → logprob: -12.750184059143066
    4. ']' → logprob: -15.125184059143066
    5. '   ' → logprob: -15.250184059143066
    6. '])' → logprob: -15.375184059143066
    7. '0' → logprob: -16.25018310546875
    8. ')' → logprob: -16.25018310546875
    9. 'p' → logprob: -16.50018310546875
    10. '  ' → logprob: -16.62518310546875

Token 187: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0031943509820848703
    2. ')' → logprob: -5.878194332122803
    3. '   ' → logprob: -8.628194808959961
    4. ' ),' → logprob: -8.753194808959961
    5. ')),' → logprob: -10.753194808959961
    6. ' ' → logprob: -11.628194808959961
    7. '),
' → logprob: -12.378194808959961
    8. '()),' → logprob: -12.378194808959961
    9. ')
' → logprob: -13.003194808959961
    10. ')],' → logprob: -13.128194808959961

Token 188: ' triangular' (ID: 124454)
  Prédit: 'tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tri' → logprob: -0.5236619710922241
    2. ' triangular' → logprob: -0.8986619710922241
    3. ' tri' → logprob: -8.648661613464355
    4. 'triangle' → logprob: -9.023661613464355
    5. ' triangle' → logprob: -9.523661613464355
    6. '   ' → logprob: -10.148661613464355
    7. ' triang' → logprob: -10.148661613464355
    8. ' ' → logprob: -10.523661613464355
    9. 'tr' → logprob: -11.273661613464355
    10. 'filter' → logprob: -11.898661613464355

Token 189: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -2.522638169466518e-05
    2. 'pairs' → logprob: -10.750024795532227
    3. '_edges' → logprob: -14.125024795532227
    4. ')' → logprob: -14.250024795532227
    5. '_p' → logprob: -14.375024795532227
    6. 's' → logprob: -14.750024795532227
    7. '(_' → logprob: -15.375024795532227
    8. '
' → logprob: -15.625024795532227
    9. '(p' → logprob: -15.875024795532227
    10. ')_' → logprob: -16.125024795532227

Token 190: '(cnt' (ID: 102125)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.0024876687675714493
    2. '(' → logprob: -6.252487659454346
    3. 'K' → logprob: -8.252488136291504
    4. ' (' → logprob: -9.752488136291504
    5. '((' → logprob: -9.752488136291504
    6. '(cnt' → logprob: -9.877488136291504
    7. ')' → logprob: -10.127488136291504
    8. ')(' → logprob: -10.377488136291504
    9. ' K' → logprob: -11.627488136291504
    10. '(
' → logprob: -11.627488136291504

Token 191: '-K' (ID: 12249)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.060001078993082047
    2. ')' → logprob: -3.1850011348724365
    3. '))' → logprob: -4.435000896453857
    4. '-' → logprob: -6.560000896453857
    5. '):' → logprob: -7.185000896453857
    6. ')):' → logprob: -7.185000896453857
    7. ')),' → logprob: -7.310000896453857
    8. ' -' → logprob: -7.685000896453857
    9. '+' → logprob: -8.310001373291016
    10. ')));' → logprob: -8.435001373291016

Token 192: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.025773806497454643
    2. '))' → logprob: -3.775773763656616
    3. ')' → logprob: -6.025774002075195
    4. '))))' → logprob: -10.025774002075195
    5. ')))
' → logprob: -10.650774002075195
    6. ')));' → logprob: -11.025774002075195
    7. ' ' → logprob: -12.275774002075195
    8. ')))

' → logprob: -12.650774002075195
    9. ')
' → logprob: -12.900774002075195
    10. '+' → logprob: -13.025774002075195

Token 193: 'M' (ID: 44)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7605834007263184
    2. 'for' → logprob: -0.7605834007263184
    3. '<|end|>' → logprob: -3.0105834007263184
    4. ')' → logprob: -4.260583400726318
    5. ' for' → logprob: -7.135583400726318
    6. '```' → logprob: -7.760583400726318
    7. '#' → logprob: -8.635583877563477
    8. '
' → logprob: -8.635583877563477
    9. 'edges' → logprob: -10.260583877563477
    10. '...' → logprob: -10.385583877563477

Token 194: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47459709644317627
    2. '=' → logprob: -0.9745970964431763
    3. '=len' → logprob: -8.099596977233887
    4. ',' → logprob: -8.974596977233887
    5. '=int' → logprob: -9.599596977233887
    6. ')' → logprob: -12.224596977233887
    7. ' ' → logprob: -12.474596977233887
    8. '<|end|>' → logprob: -12.724596977233887
    9. ' =
' → logprob: -13.474596977233887
    10. '=
' → logprob: -13.599596977233887

Token 195: ' sum' (ID: 4215)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.7104460000991821
    2. 'sum' → logprob: -1.3354460000991821
    3. 'len' → logprob: -1.7104460000991821
    4. 'f' → logprob: -3.7104458808898926
    5. ' N' → logprob: -3.8354458808898926
    6. ' sum' → logprob: -5.210445880889893
    7. ' len' → logprob: -5.710445880889893
    8. '1' → logprob: -6.085445880889893
    9. 'cnt' → logprob: -6.585445880889893
    10. '[N' → logprob: -6.835445880889893

Token 196: '(map' (ID: 16946)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0031986311078071594
    2. '(map' → logprob: -5.753198623657227
    3. '(' → logprob: -11.253198623657227
    4. 'len' → logprob: -12.003198623657227
    5. '([' → logprob: -14.003198623657227
    6. 'map' → logprob: -14.253198623657227
    7. '((' → logprob: -15.878198623657227
    8. '(lambda' → logprob: -16.503198623657227
    9. '(list' → logprob: -16.878198623657227
    10. ',len' → logprob: -17.378198623657227

Token 197: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0006923011387698352
    2. 'len' → logprob: -7.750692367553711
    3. '(lambda' → logprob: -8.250692367553711
    4. '(' → logprob: -15.250692367553711
    5. ',len' → logprob: -16.00069236755371
    6. '
' → logprob: -17.37569236755371
    7. ' len' → logprob: -17.37569236755371
    8. 'lambda' → logprob: -17.50069236755371
    9. '	len' → logprob: -17.50069236755371
    10. '=len' → logprob: -17.50069236755371

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004995359340682626
    2. '(edges' → logprob: -8.125499725341797
    3. 'edges' → logprob: -9.000499725341797
    4. ' ,' → logprob: -9.500499725341797
    5. ' edges' → logprob: -12.500499725341797
    6. ',
' → logprob: -14.375499725341797
    7. '_edges' → logprob: -14.875499725341797
    8. '```' → logprob: -15.125499725341797
    9. 'Edges' → logprob: -15.250499725341797
    10. '.edges' → logprob: -17.250499725341797

Token 199: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.25226539373397827
    2. ' edges' → logprob: -1.502265453338623
    3. '(edges' → logprob: -8.002264976501465
    4. '.edges' → logprob: -14.127264976501465
    5. '_edges' → logprob: -15.002264976501465
    6. ')' → logprob: -15.377264976501465
    7. 'edge' → logprob: -16.00226593017578
    8. 'Edges' → logprob: -16.37726593017578
    9. ' ' → logprob: -17.87726593017578
    10. '(' → logprob: -17.87726593017578

Token 200: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0725027322769165
    2. ')' → logprob: -2.822502613067627
    3. '()))' → logprob: -4.822502613067627
    4. '())' → logprob: -6.072502613067627
    5. '()' → logprob: -9.322503089904785
    6. '))
' → logprob: -10.572503089904785
    7. ')))' → logprob: -12.572503089904785
    8. '(' → logprob: -13.072503089904785
    9. '()))
' → logprob: -13.322503089904785
    10. ')
' → logprob: -14.072503089904785

Token 201: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003868134692311287
    2. '
' → logprob: -5.628868103027344
    3. '<|end|>' → logprob: -8.378868103027344
    4. ' print' → logprob: -11.128868103027344
    5. '```' → logprob: -11.878868103027344
    6. '
' → logprob: -12.628868103027344
    7. 'for' → logprob: -12.628868103027344
    8. ')' → logprob: -13.128868103027344
    9. '\n' → logprob: -13.253868103027344
    10. ')
' → logprob: -14.253868103027344

Token 202: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.00038872790173627436
    2. '(' → logprob: -7.8753886222839355
    3. '(N' → logprob: -12.625389099121094
    4. 'M' → logprob: -13.500389099121094
    5. ' (' → logprob: -13.500389099121094
    6. '(
' → logprob: -13.750389099121094
    7. '((' → logprob: -13.875389099121094
    8. '(len' → logprob: -14.750389099121094
    9. '(f' → logprob: -16.500389099121094
    10. '('' → logprob: -17.125389099121094

Token 203: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07913333922624588
    2. ')
' → logprob: -2.5791332721710205
    3. ' )' → logprob: -8.579133033752441
    4. ' )
' → logprob: -10.829133033752441
    5. ')
' → logprob: -11.329133033752441
    6. ',' → logprob: -12.079133033752441
    7. ')

' → logprob: -12.204133033752441
    8. ')`
' → logprob: -12.579133033752441
    9. ')`' → logprob: -12.954133033752441
    10. '))' → logprob: -13.079133033752441

Token 204: '[
' (ID: 20070)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.91732100979425e-05
    2. ' for' → logprob: -10.875039100646973
    3. 'print' → logprob: -10.875039100646973
    4. '<|end|>' → logprob: -14.000039100646973
    5. '0' → logprob: -15.375039100646973
    6. '1' → logprob: -16.50004005432129
    7. '	for' → logprob: -16.87504005432129
    8. '[' → logprob: -17.37504005432129
    9. '#' → logprob: -18.62504005432129
    10. '```' → logprob: -18.62504005432129

Token 205: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00039766079862602055
    2. 'for' → logprob: -8.250397682189941
    3. ' print' → logprob: -10.000397682189941
    4. '   ' → logprob: -10.625397682189941
    5. 'f' → logprob: -10.750397682189941
    6. '(print' → logprob: -11.000397682189941
    7. 'sys' → logprob: -12.625397682189941
    8. '[
' → logprob: -12.750397682189941
    9. '[' → logprob: -12.750397682189941
    10. '("{}' → logprob: -13.125397682189941

Token 206: ' [' (ID: 723)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0023635171819478273
    2. '   ' → logprob: -7.627363681793213
    3. '(print' → logprob: -7.752363681793213
    4. ' print' → logprob: -7.877363681793213
    5. 'f' → logprob: -8.252363204956055
    6. 'for' → logprob: -8.627363204956055
    7. '(f' → logprob: -9.377363204956055
    8. '(
' → logprob: -9.877363204956055
    9. 'edges' → logprob: -9.877363204956055
    10. '[' (adapté à ' [') → logprob: -10.127363204956055

Token 207: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05151578038930893
    2. '0' → logprob: -3.676515817642212
    3. 'i' → logprob: -4.176515579223633
    4. 'p' → logprob: -6.176515579223633
    5. ' print' → logprob: -6.926515579223633
    6. 'edges' → logprob: -6.926515579223633
    7. 'str' → logprob: -7.176515579223633
    8. '   ' → logprob: -7.301515579223633
    9. 'u' → logprob: -7.426515579223633
    10. 'a' → logprob: -7.676515579223633

Token 208: '(u' (ID: 17057)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7675159573554993
    2. 'i' → logprob: -1.7675158977508545
    3. '(i' → logprob: -2.0175158977508545
    4. '(u' → logprob: -2.6425158977508545
    5. '0' → logprob: -2.8925158977508545
    6. 'a' → logprob: -3.2675158977508545
    7. 'v' → logprob: -4.392516136169434
    8. '(' → logprob: -4.642516136169434
    9. 'f' → logprob: -5.142516136169434
    10. '*' → logprob: -5.392516136169434

Token 209: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043795350939035416
    2. ',v' → logprob: -3.168795347213745
    3. ' ,' → logprob: -7.668795585632324
    4. 'v' → logprob: -8.543795585632324
    5. ' v' → logprob: -10.668795585632324
    6. ',
' → logprob: -11.043795585632324
    7. ',j' → logprob: -11.293795585632324
    8. ',d' → logprob: -11.543795585632324
    9. ',u' → logprob: -11.543795585632324
    10. ',p' → logprob: -11.668795585632324

Token 210: '1' (ID: 16)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.22610317170619965
    2. 'v' → logprob: -1.9761031866073608
    3. '1' → logprob: -2.9761030673980713
    4. ''' → logprob: -5.47610330581665
    5. ' ' → logprob: -6.35110330581665
    6. ' "' → logprob: -6.35110330581665
    7. ',v' → logprob: -6.60110330581665
    8. '0' → logprob: -6.97610330581665
    9. ',' → logprob: -7.10110330581665
    10. '   ' → logprob: -7.22610330581665

Token 211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02091028541326523
    2. ',v' → logprob: -3.8959102630615234
    3. ' ,' → logprob: -8.145910263061523
    4. ',
' → logprob: -10.395910263061523
    5. ',u' → logprob: -10.895910263061523
    6. ',p' → logprob: -11.020910263061523
    7. 'v' → logprob: -12.395910263061523
    8. '   ' → logprob: -13.270910263061523
    9. ',j' → logprob: -13.645910263061523
    10. ',e' → logprob: -14.145910263061523

Token 212: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0017284912755712867
    2. ' v' → logprob: -6.376728534698486
    3. ')' → logprob: -11.626728057861328
    4. '   ' → logprob: -12.001728057861328
    5. '(v' → logprob: -12.751728057861328
    6. '  ' → logprob: -13.501728057861328
    7. ' ' → logprob: -13.626728057861328
    8. '[v' → logprob: -13.876728057861328
    9. ')v' → logprob: -14.001728057861328
    10. '    ' → logprob: -14.251728057861328

Token 213: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002378673671046272
    2. ' +' → logprob: -8.375237464904785
    3. '[' → logprob: -12.625237464904785
    4. '1' → logprob: -14.125237464904785
    5. ')' → logprob: -14.125237464904785
    6. ')+' → logprob: -14.500237464904785
    7. ' ' → logprob: -15.000237464904785
    8. 'u' → logprob: -15.250237464904785
    9. '[u' → logprob: -15.250237464904785
    10. '()+' → logprob: -15.375237464904785

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.542423165636137e-05
    2. ' ' → logprob: -9.750085830688477
    3. '+' → logprob: -11.000085830688477
    4. '2' → logprob: -12.562585830688477
    5. ')' → logprob: -12.937585830688477
    6. ' +' → logprob: -14.687585830688477
    7. '```' → logprob: -14.875085830688477
    8. ',' → logprob: -14.875085830688477
    9. '
' → logprob: -15.250085830688477
    10. '11' → logprob: -15.437585830688477

Token 215: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003403495065867901
    2. ',' → logprob: -8.625340461730957
    3. ')
' → logprob: -9.500340461730957
    4. ')]' → logprob: -10.250340461730957
    5. '   ' → logprob: -10.500340461730957
    6. ' )' → logprob: -11.375340461730957
    7. ',)' → logprob: -13.250340461730957
    8. ']' → logprob: -13.750340461730957
    9. ' ' → logprob: -13.875340461730957
    10. ');' → logprob: -13.875340461730957

Token 216: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38076698780059814
    2. ' for' → logprob: -1.2557669878005981
    3. '   ' → logprob: -3.7557668685913086
    4. ')' → logprob: -5.130766868591309
    5. ',' → logprob: -6.880766868591309
    6. '       ' → logprob: -7.005766868591309
    7. ']' → logprob: -8.755766868591309
    8. '	for' → logprob: -8.880766868591309
    9. '    ' → logprob: -9.505766868591309
    10. '           ' → logprob: -9.880766868591309

Token 217: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.22586961090564728
    2. ' v' → logprob: -1.6008696556091309
    3. 'u' → logprob: -8.350869178771973
    4. '(v' → logprob: -8.850869178771973
    5. ' u' → logprob: -10.100869178771973
    6. '(u' → logprob: -11.725869178771973
    7. '[v' → logprob: -11.850869178771973
    8. ',v' → logprob: -12.350869178771973
    9. '	v' → logprob: -12.600869178771973
    10. '
' → logprob: -12.975869178771973

Token 218: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6326188445091248
    2. ' in' → logprob: -0.7576188445091248
    3. ' ' → logprob: -11.75761890411377
    4. ',' → logprob: -12.63261890411377
    5. 's' → logprob: -13.25761890411377
    6. 'n' → logprob: -13.38261890411377
    7. 'v' → logprob: -14.13261890411377
    8. ']' → logprob: -14.63261890411377
    9. '   ' → logprob: -14.88261890411377
    10. '    ' → logprob: -14.88261890411377

Token 219: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.004097635392099619
    2. ' edges' → logprob: -5.5040974617004395
    3. 'e' → logprob: -11.379097938537598
    4. 'u' → logprob: -12.254097938537598
    5. 'edge' → logprob: -13.879097938537598
    6. '(edges' → logprob: -14.129097938537598
    7. 'w' → logprob: -14.504097938537598
    8. 'vertices' → logprob: -15.879097938537598
    9. '_edges' → logprob: -15.879097938537598
    10. '   ' → logprob: -16.00409698486328

Token 220: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.00023154958034865558
    2. 'u' → logprob: -8.375231742858887
    3. '   ' → logprob: -15.125231742858887
    4. '[' → logprob: -15.250231742858887
    5. '[
' → logprob: -15.250231742858887
    6. ' [' → logprob: -16.50023078918457
    7. ' u' → logprob: -17.12523078918457
    8. '```' → logprob: -17.12523078918457
    9. '
' → logprob: -17.75023078918457
    10. '	u' → logprob: -18.00023078918457

Token 221: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014161885483190417
    2. ' ]' → logprob: -6.751416206359863
    3. ']]' → logprob: -9.376416206359863
    4. ']
' → logprob: -9.501416206359863
    5. ')]' → logprob: -9.501416206359863
    6. '   ' → logprob: -12.501416206359863
    7. '()]' → logprob: -13.251416206359863
    8. '])' → logprob: -13.626416206359863
    9. ' ]]' → logprob: -14.126416206359863
    10. '}]' → logprob: -14.626416206359863

Token 222: '       ' (ID: 309)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5989355444908142
    2. '   ' → logprob: -0.8489355444908142
    3. ' for' → logprob: -4.223935604095459
    4. ' ]' → logprob: -5.473935604095459
    5. 'for' → logprob: -5.598935604095459
    6. '    ' → logprob: -9.4739351272583
    7. ' ' → logprob: -10.3489351272583
    8. ' in' → logprob: -10.3489351272583
    9. '  ' → logprob: -11.2239351272583
    10. 'u' → logprob: -11.3489351272583

Token 223: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2122609615325928
    2. '   ' → logprob: -1.3372609615325928
    3. ']' → logprob: -1.7122609615325928
    4. ' in' → logprob: -1.8372609615325928
    5. 'for' (adapté à ' for') → logprob: -2.4622609615325928
    6. 'in' → logprob: -4.962261199951172
    7. ' ]' → logprob: -5.462261199951172
    8. ' ' → logprob: -6.712261199951172
    9. 'u' → logprob: -6.837261199951172
    10. '    ' → logprob: -7.337261199951172

Token 224: ' u' (ID: 337)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01104935072362423
    2. ' range' → logprob: -4.511049270629883
    3. 'u' → logprob: -13.386049270629883
    4. 'r' → logprob: -18.261049270629883
    5. ' ' → logprob: -18.636049270629883
    6. ' u' → logprob: -18.761049270629883
    7. '(range' → logprob: -19.011049270629883
    8. '   ' → logprob: -19.261049270629883
    9. 'count' → logprob: -19.261049270629883
    10. '	range' → logprob: -19.761049270629883

Token 225: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5048217177391052
    2. 'in' → logprob: -1.37982177734375
    3. ' range' → logprob: -2.62982177734375
    4. '(range' → logprob: -3.25482177734375
    5. 'range' → logprob: -3.37982177734375
    6. ' ' → logprob: -11.75482177734375
    7. '(' → logprob: -12.50482177734375
    8. '   ' → logprob: -12.50482177734375
    9. '	range' → logprob: -12.62982177734375
    10. ' xrange' → logprob: -12.75482177734375

Token 226: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078758880496025
    2. ' range' → logprob: -5.5040788650512695
    3. 'count' → logprob: -15.87907886505127
    4. '(range' → logprob: -16.379077911376953
    5. '   ' → logprob: -16.629077911376953
    6. '	range' → logprob: -17.379077911376953
    7. ' ' → logprob: -18.004077911376953
    8. '  ' → logprob: -18.629077911376953
    9. '    ' → logprob: -20.004077911376953
    10. '.range' → logprob: -20.754077911376953

Token 227: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0005775776808150113
    2. '(' → logprob: -7.625577449798584
    3. 'N' → logprob: -9.500577926635742
    4. '(
' → logprob: -11.375577926635742
    5. '(len' → logprob: -13.500577926635742
    6. ' (' → logprob: -14.125577926635742
    7. '   ' → logprob: -14.500577926635742
    8. '0' → logprob: -15.500577926635742
    9. '(n' → logprob: -16.000577926635742
    10. '1' → logprob: -16.125577926635742

Token 228: ')
' (ID: 446)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.006615654099732637
    2. ')' → logprob: -5.25661563873291
    3. ')])' → logprob: -7.38161563873291
    4. ')]
' → logprob: -7.88161563873291
    5. ')
' → logprob: -8.13161563873291
    6. '])]' → logprob: -10.50661563873291
    7. ' )' → logprob: -10.88161563873291
    8. '])' → logprob: -11.50661563873291
    9. '   ' → logprob: -11.75661563873291
    10. ']' → logprob: -11.88161563873291

Token 229: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011117222311440855
    2. ']
' → logprob: -9.25011157989502
    3. ' ]' → logprob: -12.50011157989502
    4. ')]' → logprob: -12.50011157989502
    5. '   ' → logprob: -12.75011157989502
    6. ')' → logprob: -13.12511157989502
    7. ']

' → logprob: -13.62511157989502
    8. '()]' → logprob: -14.50011157989502
    9. '<|end|>' → logprob: -15.37511157989502
    10. '`]' → logprob: -15.62511157989502


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 227
Tokens correctement prédits (1ère position, stricte): 86
Tokens correctement prédits (1ère position, avec adaptation): 86
Tokens correctement prédits (top 10): 188
Précision stricte (1ère position): 37.89%
Précision adaptée (1ère position): 37.89%
Précision (top 10): 82.82%
================================================================================
