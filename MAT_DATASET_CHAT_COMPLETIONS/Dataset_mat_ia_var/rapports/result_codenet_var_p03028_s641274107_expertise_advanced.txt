================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from functools import partial

def input(): return sys.stdin.readline().rstrip()
def II(): return int(input())
def SI(): return input()

def print_2D(matrix): print(*matrix, sep='\n')
def print_bits(arr, L): print(*(f'{x:0{L}b}' for x in arr), '', sep='\n')

def main():
    n = II()
    aa = [list(map(int, SI())) for _ in range(n - 1)]
    win = [0] * n
    for i, row in enumerate(aa, 1):
        for j, a in enumerate(row):
            mask = 1 << (i if not a else j)
            win[i if a else j] |= mask
    # Optimized DP using advanced indexing and bitwise tricks
    dpl = [1 << i for i in range(n)]
    dpr = [1 << i for i in range(n)]
    rng = range
    for d in rng(1, n):
        for i in rng(n):
            j = i + d
            if j < n and (dpl[j] & dpr[i + 1] & win[i]):
                dpl[j] |= 1 << i
            j = i - d
            if j >= 0 and (dpl[i - 1] & dpr[j] & win[i]):
                dpr[j] |= 1 << i
    # Count set bits in the intersection of possible champions
    print((dpl[-1] & dpr[0]).bit_count())

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.01821877807378769
    2. 'os' → logprob: -4.143218994140625
    3. ' Py' → logprob: -7.768218994140625
    4. ' pathlib' → logprob: -7.768218994140625
    5. ' collections' → logprob: -7.893218994140625
    6. ' math' → logprob: -8.768218994140625
    7. 'collections' → logprob: -9.018218994140625
    8. ' ' → logprob: -9.143218994140625
    9. ' typing' → logprob: -9.643218994140625
    10. ' datetime' → logprob: -9.768218994140625

Token 5: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6969289183616638
    2. ' import' → logprob: -0.6969289183616638
    3. ' ' → logprob: -6.446928977966309
    4. '.' → logprob: -6.821928977966309
    5. '_import' → logprob: -7.446928977966309
    6. '_' → logprob: -7.821928977966309
    7. '	import' → logprob: -9.571928977966309
    8. ' ' → logprob: -12.071928977966309
    9. '.import' → logprob: -12.196928977966309
    10. ' .' → logprob: -12.446928977966309

Token 6: ' partial' (ID: 13664)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.38581740856170654
    2. 'partial' → logprob: -1.8858174085617065
    3. ' wraps' → logprob: -2.010817527770996
    4. 'l' → logprob: -4.135817527770996
    5. ' l' → logprob: -5.010817527770996
    6. ' partial' → logprob: -5.135817527770996
    7. 'reduce' → logprob: -5.260817527770996
    8. 'cmp' → logprob: -8.135817527770996
    9. ' ' → logprob: -8.760817527770996
    10. 'wr' → logprob: -9.385817527770996

Token 7: '

' (ID: 279)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.658944308757782
    2. '\' → logprob: -1.9089443683624268
    3. '.' → logprob: -2.0339443683624268
    4. '(' → logprob: -2.6589443683624268
    5. '\n' → logprob: -3.2839443683624268
    6. ',' → logprob: -4.033944129943848
    7. '```' → logprob: -4.283944129943848
    8. '' → logprob: -4.533944129943848
    9. ' ' → logprob: -4.783944129943848
    10. '<|end|>' → logprob: -4.783944129943848

Token 8: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.354703426361084
    2. 'import' → logprob: -1.604703426361084
    3. '\' → logprob: -3.604703426361084
    4. '.' → logprob: -4.229703426361084
    5. '(' → logprob: -4.479703426361084
    6. ',' → logprob: -4.479703426361084
    7. 'i' → logprob: -4.979703426361084
    8. 'd' → logprob: -4.979703426361084
    9. '`' → logprob: -5.354703426361084
    10. '@' → logprob: -5.729703426361084

Token 9: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006731711328029633
    2. '_' → logprob: -5.2567315101623535
    3. ' main' → logprob: -7.5067315101623535
    4. ' _' → logprob: -8.131731986999512
    5. ' my' → logprob: -8.631731986999512
    6. ' parse' → logprob: -9.131731986999512
    7. ' calculate' → logprob: -9.756731986999512
    8. ' space' → logprob: -10.006731986999512
    9. ' add' → logprob: -10.506731986999512
    10. ' process' → logprob: -10.631731986999512

Token 10: '():' (ID: 9442)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004171833395957947
    2. '_' → logprob: -5.754171848297119
    3. '("("' → logprob: -8.379171371459961
    4. '_line' → logprob: -8.504171371459961
    5. '():' → logprob: -9.129171371459961
    6. '_text' → logprob: -10.129171371459961
    7. '(prompt' → logprob: -10.379171371459961
    8. ' (' → logprob: -10.379171371459961
    9. '(_' → logprob: -10.504171371459961
    10. '_string' → logprob: -10.504171371459961

Token 11: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19764843583106995
    2. ' sys' → logprob: -2.447648525238037
    3. ' input' → logprob: -2.447648525238037
    4. ' return' → logprob: -5.447648525238037
    5. 'input' → logprob: -7.697648525238037
    6. ' 
' → logprob: -7.822648525238037
    7. '    ' → logprob: -7.822648525238037
    8. '<|end|>' → logprob: -8.447648048400879
    9. ' )' → logprob: -9.447648048400879
    10. '   ' → logprob: -9.697648048400879

Token 12: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.203379288315773
    2. 'sys' → logprob: -1.7033792734146118
    3. 'input' → logprob: -7.078379154205322
    4. ' input' → logprob: -7.078379154205322
    5. ' next' → logprob: -8.45337963104248
    6. 'next' → logprob: -10.20337963104248
    7. ' ' → logprob: -11.70337963104248
    8. '(sys' → logprob: -12.57837963104248
    9. '""' → logprob: -12.95337963104248
    10. '__' → logprob: -13.07837963104248

Token 13: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0013190467143431306
    2. '.' → logprob: -7.12631893157959
    3. '.stdout' → logprob: -8.25131893157959
    4. '.readline' → logprob: -9.25131893157959
    5. '.argv' → logprob: -9.25131893157959
    6. '.std' → logprob: -10.87631893157959
    7. ' .' → logprob: -11.00131893157959
    8. '.input' → logprob: -11.62631893157959
    9. '.stderr' → logprob: -12.37631893157959
    10. '.exit' → logprob: -12.62631893157959

Token 14: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00040636269841343164
    2. '.read' → logprob: -8.000406265258789
    3. '.' → logprob: -9.875406265258789
    4. 'read' → logprob: -11.125406265258789
    5. ' readline' → logprob: -13.250406265258789
    6. '.readlines' → logprob: -13.625406265258789
    7. '.buffer' → logprob: -14.250406265258789
    8. ' .' → logprob: -14.750406265258789
    9. '```' → logprob: -14.750406265258789
    10. '.Read' → logprob: -16.37540626525879

Token 15: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1682141274213791
    2. '().' → logprob: -1.9182140827178955
    3. '(' → logprob: -5.668214321136475
    4. '()\' → logprob: -5.918214321136475
    5. '()
' → logprob: -6.793214321136475
    6. '
' → logprob: -8.918213844299316
    7. '(\' → logprob: -9.168213844299316
    8. '()(' → logprob: -9.418213844299316
    9. '()

' → logprob: -9.543213844299316
    10. ' ()' → logprob: -9.793213844299316

Token 16: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0026163244619965553
    2. 'rstrip' → logprob: -6.0026164054870605
    3. ' strip' → logprob: -8.877615928649902
    4. '_strip' → logprob: -14.127615928649902
    5. '-strip' → logprob: -15.627615928649902
    6. 'str' → logprob: -16.62761688232422
    7. ' ' → logprob: -17.25261688232422
    8. '```' → logprob: -17.62761688232422
    9. '(strip' → logprob: -17.75261688232422
    10. 'read' → logprob: -17.87761688232422

Token 17: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14064320921897888
    2. '()' → logprob: -2.3906431198120117
    3. '\n' → logprob: -4.265643119812012
    4. '
' → logprob: -4.515643119812012
    5. '(
' → logprob: -4.640643119812012
    6. '(

' → logprob: -6.265643119812012
    7. '()

' → logprob: -7.015643119812012
    8. '

' → logprob: -7.640643119812012
    9. '()
' → logprob: -7.890643119812012
    10. '\' → logprob: -8.640643119812012

Token 18: 'def' (ID: 1314)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5434585809707642
    2. '
' → logprob: -1.7934585809707642
    3. 'def' → logprob: -2.0434584617614746
    4. '\n' → logprob: -2.9184584617614746
    5. '```' → logprob: -3.4184584617614746
    6. '' → logprob: -4.668458461761475
    7. '\' → logprob: -5.918458461761475
    8. '<|end|>' → logprob: -6.043458461761475
    9. ' 

' → logprob: -6.168458461761475
    10. '()

' → logprob: -6.418458461761475

Token 19: ' II' (ID: 9839)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.36272192001342773
    2. 'print' → logprob: -1.6127219200134277
    3. ' main' → logprob: -2.3627219200134277
    4. 'main' → logprob: -5.862721920013428
    5. ' output' → logprob: -6.612721920013428
    6. ' map' → logprob: -6.862721920013428
    7. 'output' → logprob: -7.112721920013428
    8. '_print' → logprob: -7.362721920013428
    9. 'range' → logprob: -7.487721920013428
    10. ' range' → logprob: -7.612721920013428

Token 20: '():' (ID: 9442)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006697965785861015
    2. '():' → logprob: -5.381698131561279
    3. 'N' → logprob: -7.006698131561279
    4. 'nt' → logprob: -8.131697654724121
    5. 'NT' → logprob: -8.756697654724121
    6. 'P' → logprob: -9.131697654724121
    7. 'n' → logprob: -9.506697654724121
    8. '()>' → logprob: -9.631697654724121
    9. 'int' → logprob: -10.006697654724121
    10. '();' → logprob: -10.131697654724121

Token 21: ' return' (ID: 622)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0487019419670105
    2. 'int' → logprob: -3.0487020015716553
    3. ' ' → logprob: -9.548702239990234
    4. ' map' → logprob: -10.298702239990234
    5. ' return' → logprob: -12.173702239990234
    6. ' in' → logprob: -13.923702239990234
    7. '(int' → logprob: -14.173702239990234
    8. '  ' → logprob: -14.298702239990234
    9. '=int' → logprob: -14.673702239990234
    10. 'map' → logprob: -14.798702239990234

Token 22: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03375139459967613
    2. ' int' → logprob: -3.4087514877319336
    3. 'map' → logprob: -10.033751487731934
    4. ' map' → logprob: -10.158751487731934
    5. ' ' → logprob: -11.158751487731934
    6. '  ' → logprob: -12.283751487731934
    7. '	int' → logprob: -13.283751487731934
    8. '(int' → logprob: -13.908751487731934
    9. '   ' → logprob: -14.408751487731934
    10. 'input' → logprob: -14.908751487731934

Token 23: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.016020407900214195
    2. '(' → logprob: -4.51602029800415
    3. '(sys' → logprob: -5.39102029800415
    4. '(I' → logprob: -8.266020774841309
    5. 'input' → logprob: -9.141020774841309
    6. '()' → logprob: -11.016020774841309
    7. '((' → logprob: -11.766020774841309
    8. '(int' → logprob: -12.891020774841309
    9. ' (' → logprob: -13.891020774841309
    10. 'sys' → logprob: -13.891020774841309

Token 24: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00044127836008556187
    2. '()' → logprob: -7.750441074371338
    3. ' ())' → logprob: -12.500441551208496
    4. '())
' → logprob: -12.750441551208496
    5. '()))' → logprob: -13.000441551208496
    6. '();)' → logprob: -14.625441551208496
    7. ')' → logprob: -14.750441551208496
    8. '()]' → logprob: -15.625441551208496
    9. '().' → logprob: -15.750441551208496
    10. '())

' → logprob: -15.875441551208496

Token 25: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008166534826159477
    2. '\' → logprob: -5.383166313171387
    3. '\n' → logprob: -6.633166313171387
    4. 'd' → logprob: -7.508166313171387
    5. '
' → logprob: -7.758166313171387
    6. '#' → logprob: -8.258166313171387
    7. '```' → logprob: -8.258166313171387
    8. '' → logprob: -8.508166313171387
    9. 'n' → logprob: -9.133166313171387
    10. '    
' → logprob: -9.758166313171387

Token 26: ' SI' (ID: 41958)
  Prédit: 'MI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MI' → logprob: -1.0441666841506958
    2. 'LI' → logprob: -1.1691666841506958
    3. 'LS' → logprob: -1.6691666841506958
    4. ' LS' → logprob: -2.7941665649414062
    5. ' MI' → logprob: -2.9191665649414062
    6. 'L' → logprob: -4.544166564941406
    7. ' LI' → logprob: -4.919166564941406
    8. 'M' → logprob: -5.419166564941406
    9. 'I' → logprob: -6.044166564941406
    10. 'LL' → logprob: -6.544166564941406

Token 27: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3089520335197449
    2. '()' → logprob: -1.4339520931243896
    3. 'n' → logprob: -3.9339520931243896
    4. 'N' → logprob: -5.0589518547058105
    5. '()<' → logprob: -8.433952331542969
    6. '())' → logprob: -9.183952331542969
    7. 'input' → logprob: -9.558952331542969
    8. 'P' → logprob: -9.558952331542969
    9. '```' → logprob: -9.558952331542969
    10. '()>' → logprob: -9.683952331542969

Token 28: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.15459252893924713
    2. 'return' → logprob: -2.654592514038086
    3. ' input' → logprob: -2.904592514038086
    4. 'input' → logprob: -4.029592514038086
    5. ' ' → logprob: -8.404592514038086
    6. 'eturn' → logprob: -9.529592514038086
    7. ' str' → logprob: -11.279592514038086
    8. '  ' → logprob: -11.779592514038086
    9. '	return' → logprob: -11.904592514038086
    10. 's' → logprob: -12.029592514038086

Token 29: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6942822933197021
    2. ' input' → logprob: -0.6942822933197021
    3. 'str' → logprob: -7.569282531738281
    4. ' sys' → logprob: -8.319282531738281
    5. 'sys' → logprob: -8.569282531738281
    6. ' str' → logprob: -8.944282531738281
    7. ' ' → logprob: -10.319282531738281
    8. '  ' → logprob: -12.319282531738281
    9. 's' → logprob: -12.569282531738281
    10. ' ' → logprob: -12.694282531738281

Token 30: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1875571544806007e-05
    2. '().' → logprob: -12.125011444091797
    3. '()
' → logprob: -13.125011444091797
    4. ' ()' → logprob: -13.500011444091797
    5. '()`' → logprob: -14.375011444091797
    6. '(' → logprob: -14.500011444091797
    7. '()]' → logprob: -14.625011444091797
    8. '()

' → logprob: -15.000011444091797
    9. '())' → logprob: -15.125011444091797
    10. '`()' → logprob: -15.625011444091797

Token 31: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26214826107025146
    2. 'd' → logprob: -2.762148380279541
    3. '
' → logprob: -3.137148380279541
    4. '\n' → logprob: -3.262148380279541
    5. 'n' → logprob: -3.387148380279541
    6. '\' → logprob: -3.887148380279541
    7. '#' → logprob: -4.012148380279541
    8. 'class' → logprob: -6.012148380279541
    9. '@' → logprob: -6.512148380279541
    10. 'a' → logprob: -6.512148380279541

Token 32: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.010551813058555126
    2. ' solve' → logprob: -4.885551929473877
    3. ' partial' → logprob: -6.510551929473877
    4. 'main' → logprob: -6.885551929473877
    5. ' parse' → logprob: -8.885551452636719
    6. 'solve' → logprob: -10.135551452636719
    7. '_main' → logprob: -10.510551452636719
    8. ' test' → logprob: -10.760551452636719
    9. ' split' → logprob: -10.760551452636719
    10. '_' → logprob: -10.885551452636719

Token 33: '_' (ID: 62)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020520923135336488
    2. '()' → logprob: -10.000205039978027
    3. '<|end|>' → logprob: -10.125205039978027
    4. '("("' → logprob: -10.375205039978027
    5. '('' → logprob: -11.000205039978027
    6. '("")' → logprob: -11.125205039978027
    7. '<|end|>' → logprob: -11.750205039978027
    8. ' (' → logprob: -11.875205039978027
    9. ')' → logprob: -11.875205039978027
    10. '("""' → logprob: -12.250205039978027

Token 34: '2' (ID: 17)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.5001981258392334
    2. 'safe' → logprob: -2.0001981258392334
    3. 'raw' → logprob: -2.1251981258392334
    4. 's' → logprob: -3.3751981258392334
    5. 'partial' → logprob: -3.3751981258392334
    6. 'value' → logprob: -3.6251981258392334
    7. 'ln' → logprob: -3.7501981258392334
    8. 'f' → logprob: -3.7501981258392334
    9. 'end' → logprob: -3.7501981258392334
    10. 'text' → logprob: -3.8751981258392334

Token 35: 'D' (ID: 35)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_values' → logprob: -1.1119674444198608
    2. 'args' → logprob: -1.7369674444198608
    3. '_items' → logprob: -2.4869675636291504
    4. 'items' → logprob: -2.4869675636291504
    5. '_args' → logprob: -2.4869675636291504
    6. 'values' → logprob: -2.8619675636291504
    7. 's' → logprob: -2.9869675636291504
    8. '_vals' → logprob: -3.3619675636291504
    9. '(' → logprob: -4.11196756362915
    10. '_numbers' → logprob: -4.23696756362915

Token 36: '(matrix' (ID: 57027)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.30008333921432495
    2. '_list' → logprob: -1.5500833988189697
    3. '(' → logprob: -3.5500833988189697
    4. '_matrix' → logprob: -5.175083160400391
    5. 'array' → logprob: -5.550083160400391
    6. '(array' → logprob: -5.675083160400391
    7. 'Array' → logprob: -6.050083160400391
    8. 'List' → logprob: -7.425083160400391
    9. '_Array' → logprob: -7.925083160400391
    10. '_' → logprob: -8.05008316040039

Token 37: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39015957713127136
    2. '):' → logprob: -1.1401596069335938
    3. ')' → logprob: -5.890159606933594
    4. ' ,' → logprob: -8.390159606933594
    5. ' ):' → logprob: -9.765159606933594
    6. ':' → logprob: -10.015159606933594
    7. '[' → logprob: -10.140159606933594
    8. ',m' → logprob: -10.140159606933594
    9. ',row' → logprob: -10.515159606933594
    10. '):
' → logprob: -11.640159606933594

Token 38: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20266087353229523
    2. ' for' → logprob: -2.7026607990264893
    3. 'for' → logprob: -3.3276607990264893
    4. '    
' → logprob: -3.9526607990264893
    5. '<|end|>' → logprob: -4.577661037445068
    6. '
' → logprob: -4.952661037445068
    7. 'print' → logprob: -4.952661037445068
    8. '\' → logprob: -5.202661037445068
    9. ':
' → logprob: -5.452661037445068
    10. '\n' → logprob: -5.577661037445068

Token 39: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16274480521678925
    2. '(*' → logprob: -1.9127447605133057
    3. '(len' → logprob: -6.787744998931885
    4. '()' → logprob: -7.287744998931885
    5. '('' → logprob: -7.662744998931885
    6. '("' → logprob: -9.787744522094727
    7. '("("' → logprob: -9.787744522094727
    8. '(
' → logprob: -10.412744522094727
    9. '(*(' → logprob: -10.787744522094727
    10. '((' → logprob: -11.412744522094727

Token 40: 'matrix' (ID: 37307)
  Prédit: 'matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.3061261773109436
    2. 'map' → logprob: -1.4311261177062988
    3. '['' → logprob: -4.556126117706299
    4. '["' → logprob: -4.931126117706299
    5. '('' → logprob: -5.931126117706299
    6. '('\' → logprob: -6.556126117706299
    7. '("' → logprob: -6.681126117706299
    8. '(matrix' → logprob: -7.806126117706299
    9. '("\' → logprob: -8.056126594543457
    10. '[' → logprob: -8.056126594543457

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043460296001285315
    2. ' ,' → logprob: -8.375434875488281
    3. ')' → logprob: -9.125434875488281
    4. '(),' → logprob: -10.625434875488281
    5. 'sep' → logprob: -10.625434875488281
    6. '[' → logprob: -11.875434875488281
    7. ',se' → logprob: -11.875434875488281
    8. ',"\' → logprob: -12.375434875488281
    9. ',*' → logprob: -12.750434875488281
    10. ',len' → logprob: -12.875434875488281

Token 42: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.0007183883571997285
    2. ' sep' → logprob: -7.250718593597412
    3. 'se' → logprob: -12.000718116760254
    4. '*' → logprob: -13.250718116760254
    5. ' ' → logprob: -15.750718116760254
    6. ')' → logprob: -16.25071907043457
    7. 'separator' → logprob: -16.37571907043457
    8. '  ' → logprob: -17.00071907043457
    9. '```' → logprob: -17.87571907043457
    10. '   ' → logprob: -18.25071907043457

Token 43: '='\' (ID: 106410)
  Prédit: '='\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='\' → logprob: -0.07062270492315292
    2. '="\' → logprob: -3.070622682571411
    3. ''\' → logprob: -3.945622682571411
    4. '"\' → logprob: -6.07062292098999
    5. '=' → logprob: -9.445622444152832
    6. '('\' → logprob: -11.070622444152832
    7. '=\' → logprob: -11.320622444152832
    8. '
' → logprob: -11.570622444152832
    9. '=
' → logprob: -12.320622444152832
    10. '`\' → logprob: -12.445622444152832

Token 44: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001801801408873871
    2. '\n' → logprob: -8.6251802444458
    3. ' n' → logprob: -15.2501802444458
    4. '
' → logprob: -16.000179290771484
    5. 'r' → logprob: -16.375179290771484
    6. ''\' → logprob: -16.875179290771484
    7. '	n' → logprob: -17.625179290771484
    8. ''n' → logprob: -18.375179290771484
    9. '\' → logprob: -18.875179290771484
    10. ' ' → logprob: -19.000179290771484

Token 45: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -5.3120038501219824e-05
    2. ')' → logprob: -9.875053405761719
    3. '')
' → logprob: -14.500053405761719
    4. '',' → logprob: -14.875053405761719
    5. '")' → logprob: -15.000053405761719
    6. ''' → logprob: -15.250053405761719
    7. '');' → logprob: -16.75005340576172
    8. '')"' → logprob: -16.75005340576172
    9. '')

' → logprob: -17.62505340576172
    10. '`)' → logprob: -18.12505340576172

Token 46: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4546756148338318
    2. '
' → logprob: -1.0796756744384766
    3. '

' → logprob: -4.329675674438477
    4. '\n' → logprob: -5.329675674438477
    5. '\' → logprob: -6.204675674438477
    6. '```' → logprob: -6.204675674438477
    7. ' def' → logprob: -6.579675674438477
    8. '#' → logprob: -8.204675674438477
    9. '' → logprob: -8.579675674438477
    10. '


' → logprob: -8.704675674438477

Token 47: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.08449981361627579
    2. 'print' → logprob: -2.5844998359680176
    3. ' main' → logprob: -6.209499835968018
    4. ' input' → logprob: -6.709499835968018
    5. ' matrix' → logprob: -7.334499835968018
    6. '_' → logprob: -8.20949935913086
    7. ' map' → logprob: -8.58449935913086
    8. ' flatten' → logprob: -8.83449935913086
    9. 'input' → logprob: -9.20949935913086
    10. ' pprint' → logprob: -9.45949935913086

Token 48: '_bits' (ID: 48415)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.013343986123800278
    2. '(*' → logprob: -4.763343811035156
    3. '(' → logprob: -5.763343811035156
    4. '_(' → logprob: -6.888343811035156
    5. '()' → logprob: -8.138343811035156
    6. '_*' → logprob: -10.013343811035156
    7. '(*)' → logprob: -10.138343811035156
    8. '_matrix' → logprob: -10.513343811035156
    9. '<|end|>' → logprob: -10.513343811035156
    10. '*' → logprob: -10.888343811035156

Token 49: '(arr' (ID: 19646)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028495488688349724
    2. '_' → logprob: -5.1534953117370605
    3. '(matrix' → logprob: -5.5284953117370605
    4. '(mask' → logprob: -5.5284953117370605
    5. '(bits' → logprob: -6.1534953117370605
    6. '(num' → logprob: -6.2784953117370605
    7. '(number' → logprob: -6.5284953117370605
    8. '_mask' → logprob: -7.1534953117370605
    9. '(value' → logprob: -7.1534953117370605
    10. '(x' → logprob: -7.2784953117370605

Token 50: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006470225751399994
    2. ')' → logprob: -5.881470203399658
    3. '[]):' → logprob: -6.006470203399658
    4. ',' → logprob: -7.381470203399658
    5. '_bits' → logprob: -8.881470680236816
    6. '[' → logprob: -9.631470680236816
    7. 's' → logprob: -10.006470680236816
    8. ''):' → logprob: -10.006470680236816
    9. '():' → logprob: -10.131470680236816
    10. ' ):' → logprob: -10.256470680236816

Token 51: ' L' (ID: 451)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4306299686431885
    2. ' n' → logprob: -1.4306299686431885
    3. 'length' → logprob: -2.4306299686431885
    4. ' length' → logprob: -2.6806299686431885
    5. 'size' → logprob: -2.8056299686431885
    6. 'sep' → logprob: -2.9306299686431885
    7. ' size' → logprob: -3.1806299686431885
    8. 'bits' → logprob: -3.1806299686431885
    9. ' sep' → logprob: -3.6806299686431885
    10. 'arr' → logprob: -3.6806299686431885

Token 52: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06331927329301834
    2. '=' → logprob: -2.938319206237793
    3. ',' → logprob: -5.688319206237793
    4. ' ):' → logprob: -5.813319206237793
    5. '=None' → logprob: -7.438319206237793
    6. ')' → logprob: -7.688319206237793
    7. '):
' → logprob: -8.313319206237793
    8. '-' → logprob: -8.563319206237793
    9. 'ex' → logprob: -9.563319206237793
    10. ':' → logprob: -9.688319206237793

Token 53: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3788556456565857
    2. ' for' → logprob: -1.2538557052612305
    3. '   ' → logprob: -3.6288557052612305
    4. 'print' → logprob: -6.6288557052612305
    5. 'for' → logprob: -7.0038557052612305
    6. '    ' → logprob: -8.12885570526123
    7. ' def' → logprob: -8.25385570526123
    8. ' return' → logprob: -8.87885570526123
    9. ' ' → logprob: -9.12885570526123
    10. ' bit' → logprob: -10.00385570526123

Token 54: '(*(' (ID: 103513)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.4969041049480438
    2. '('' → logprob: -1.1219041347503662
    3. '(*(' → logprob: -3.371904134750366
    4. '(' → logprob: -4.121903896331787
    5. '("' → logprob: -4.246903896331787
    6. '('',' → logprob: -8.371904373168945
    7. '((' → logprob: -8.496904373168945
    8. '(int' → logprob: -8.996904373168945
    9. '()' → logprob: -9.121904373168945
    10. '(f' → logprob: -9.246904373168945

Token 55: 'f' (ID: 69)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.4978257119655609
    2. 'arr' → logprob: -1.8728257417678833
    3. 'f' → logprob: -2.2478256225585938
    4. 'format' → logprob: -2.4978256225585938
    5. 'str' → logprob: -4.372825622558594
    6. '1' → logprob: -4.372825622558594
    7. '''.' → logprob: -4.747825622558594
    8. ''' → logprob: -6.122825622558594
    9. '('' → logprob: -6.247825622558594
    10. 'bit' → logprob: -6.372825622558594

Token 56: ''{' (ID: 47735)
  Prédit: ''{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''{' → logprob: -0.28881070017814636
    2. '"{' → logprob: -1.5388107299804688
    3. ''' → logprob: -3.4138107299804688
    4. '"' → logprob: -6.163810729980469
    5. 'f' → logprob: -7.163810729980469
    6. ''f' → logprob: -8.788810729980469
    7. 'ormat' → logprob: -9.788810729980469
    8. '{' → logprob: -9.788810729980469
    9. 'orm' → logprob: -10.288810729980469
    10. '{{' → logprob: -10.288810729980469

Token 57: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3098996579647064
    2. 'b' → logprob: -1.5598996877670288
    3. 'num' → logprob: -3.9348995685577393
    4. 'i' → logprob: -4.309899806976318
    5. 'v' → logprob: -4.559899806976318
    6. 'val' → logprob: -5.434899806976318
    7. 'a' → logprob: -6.809899806976318
    8. 'arr' → logprob: -6.809899806976318
    9. 'bit' → logprob: -6.934899806976318
    10. 'n' → logprob: -6.934899806976318

Token 58: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005286411382257938
    2. ':b' → logprob: -5.25528621673584
    3. 'b' → logprob: -10.88028621673584
    4. ':L' → logprob: -11.13028621673584
    5. ':B' → logprob: -11.75528621673584
    6. ' :' → logprob: -12.13028621673584
    7. ':o' → logprob: -13.50528621673584
    8. ':#' → logprob: -14.13028621673584
    9. ':{' → logprob: -14.25528621673584
    10. ':X' → logprob: -14.63028621673584

Token 59: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0030342787504196167
    2. '{' → logprob: -6.1280341148376465
    3. 'b' → logprob: -7.5030341148376465
    4. 'L' → logprob: -8.628034591674805
    5. '08' → logprob: -10.378034591674805
    6. '016' → logprob: -10.503034591674805
    7. '>' → logprob: -11.628034591674805
    8. '01' → logprob: -11.878034591674805
    9. '#' → logprob: -12.003034591674805
    10. '02' → logprob: -12.128034591674805

Token 60: '{' (ID: 90)
  Prédit: '{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -2.8444881536415778e-05
    2. 'b' → logprob: -11.250028610229492
    3. '{}' → logprob: -11.625028610229492
    4. '0' → logprob: -12.875028610229492
    5. 'L' → logprob: -12.875028610229492
    6. ' {' → logprob: -15.375028610229492
    7. '${' → logprob: -16.000028610229492
    8. '4' → logprob: -16.000028610229492
    9. '
' → logprob: -16.250028610229492
    10. '16' → logprob: -16.250028610229492

Token 61: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.6399311423301697
    2. '{' → logprob: -0.7649311423301697
    3. 'b' → logprob: -6.7649312019348145
    4. '4' → logprob: -6.8899312019348145
    5. '2' → logprob: -7.0149312019348145
    6. '1' → logprob: -7.0149312019348145
    7. ' L' → logprob: -7.1399312019348145
    8. '{}' → logprob: -7.6399312019348145
    9. '8' → logprob: -7.7649312019348145
    10. '5' → logprob: -8.264930725097656

Token 62: '}' (ID: 92)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.003622404532507062
    2. '}' → logprob: -5.628622531890869
    3. '}'' → logprob: -10.878622055053711
    4. '_b' → logprob: -14.753622055053711
    5. ' b' → logprob: -14.878622055053711
    6. '$b' → logprob: -15.128622055053711
    7. '{' → logprob: -15.128622055053711
    8. 'd' → logprob: -15.128622055053711
    9. ''b' → logprob: -15.128622055053711
    10. '}')' → logprob: -15.378622055053711

Token 63: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.885492621222511e-05
    2. '}' → logprob: -9.625068664550781
    3. '{' → logprob: -13.250068664550781
    4. '$b' → logprob: -15.875068664550781
    5. ''b' → logprob: -16.12506866455078
    6. '}'' → logprob: -16.25006866455078
    7. '_b' → logprob: -16.25006866455078
    8. 'bits' → logprob: -16.37506866455078
    9. '[b' → logprob: -16.75006866455078
    10. '...' → logprob: -17.00006866455078

Token 64: '}'' (ID: 24321)
  Prédit: '}''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}'' → logprob: -0.0022493419237434864
    2. '}')' → logprob: -6.627249240875244
    3. '}' → logprob: -7.002249240875244
    4. ''}' → logprob: -12.252249717712402
    5. '}')
' → logprob: -13.002249717712402
    6. ''' → logprob: -13.252249717712402
    7. '}',' → logprob: -13.252249717712402
    8. '}')

' → logprob: -14.127249717712402
    9. '}'
' → logprob: -14.502249717712402
    10. ' }' → logprob: -14.752249717712402

Token 65: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.30968645215034485
    2. 'for' → logprob: -1.4346864223480225
    3. '}' → logprob: -4.059686660766602
    4. ')' → logprob: -4.559686660766602
    5. ' ' → logprob: -9.184686660766602
    6. '()' → logprob: -9.559686660766602
    7. '}'' → logprob: -9.684686660766602
    8. ''' → logprob: -10.184686660766602
    9. '')' → logprob: -10.309686660766602
    10. '})' → logprob: -10.684686660766602

Token 66: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04858816787600517
    2. ' x' → logprob: -3.048588275909424
    3. ' in' → logprob: -15.173587799072266
    4. ' ' → logprob: -15.423587799072266
    5. ')' → logprob: -16.298587799072266
    6. ')x' → logprob: -16.423587799072266
    7. '	x' → logprob: -17.548587799072266
    8. '<|end|>' → logprob: -17.548587799072266
    9. '```' → logprob: -17.798587799072266
    10. 'arr' → logprob: -18.298587799072266

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12696421146392822
    2. 'in' → logprob: -2.1269640922546387
    3. ' ' → logprob: -10.626964569091797
    4. ')' → logprob: -11.626964569091797
    5. 'arr' → logprob: -13.876964569091797
    6. '<|end|>' → logprob: -14.626964569091797
    7. ' )' → logprob: -14.751964569091797
    8. '  ' → logprob: -14.876964569091797
    9. ',' → logprob: -15.876964569091797
    10. '	in' → logprob: -16.376964569091797

Token 68: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.06196858361363411
    2. ' arr' → logprob: -2.8119685649871826
    3. '	arr' → logprob: -14.686968803405762
    4. ' ' → logprob: -15.436968803405762
    5. '(arr' → logprob: -15.686968803405762
    6. '[arr' → logprob: -16.936967849731445
    7. '_arr' → logprob: -17.561967849731445
    8. '<arr' → logprob: -17.936967849731445
    9. '  ' → logprob: -18.061967849731445
    10. '$arr' → logprob: -18.061967849731445

Token 69: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1316024363040924
    2. '),' → logprob: -2.1316025257110596
    3. ')' → logprob: -5.3816022872924805
    4. ' ))' → logprob: -10.25660228729248
    5. ')))' → logprob: -11.13160228729248
    6. '))
' → logprob: -12.50660228729248
    7. ' ),' → logprob: -12.75660228729248
    8. ')),' → logprob: -13.50660228729248
    9. ''))' → logprob: -13.88160228729248
    10. ' )' → logprob: -14.00660228729248

Token 70: ' '',' (ID: 20160)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.4027842581272125
    2. ' sep' → logprob: -1.1527842283248901
    3. 'end' → logprob: -4.40278434753418
    4. ' end' → logprob: -5.90278434753418
    5. ''' → logprob: -7.40278434753418
    6. ')' → logprob: -9.27778434753418
    7. ' '' → logprob: -10.02778434753418
    8. ' )' → logprob: -10.40278434753418
    9. 'separator' → logprob: -10.90278434753418
    10. ' ' → logprob: -12.40278434753418

Token 71: ' sep' (ID: 31529)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.10596849769353867
    2. 'sep' → logprob: -2.355968475341797
    3. ')' → logprob: -5.730968475341797
    4. ' end' → logprob: -6.105968475341797
    5. ' sep' → logprob: -8.980968475341797
    6. 'flush' → logprob: -9.105968475341797
    7. 'file' → logprob: -11.480968475341797
    8. ' )' → logprob: -11.605968475341797
    9. ' ' → logprob: -11.980968475341797
    10. ')
' → logprob: -12.980968475341797

Token 72: '='\' (ID: 106410)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.1028042882680893
    2. '='\' → logprob: -2.352804183959961
    3. '=' → logprob: -6.102804183959961
    4. '=''' → logprob: -8.102804183959961
    5. '=',' → logprob: -10.227804183959961
    6. '="\' → logprob: -12.102804183959961
    7. ''' → logprob: -12.352804183959961
    8. '=\' → logprob: -13.352804183959961
    9. '="' → logprob: -13.602804183959961
    10. '=('' → logprob: -13.977804183959961

Token 73: 'n' (ID: 77)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09882814437150955
    2. 'n' → logprob: -2.723828077316284
    3. ''\' → logprob: -4.348828315734863
    4. ' ' → logprob: -5.348828315734863
    5. ')' → logprob: -5.723828315734863
    6. '\n' → logprob: -5.973828315734863
    7. ' \' → logprob: -6.473828315734863
    8. '')' → logprob: -6.973828315734863
    9. ' '' → logprob: -7.348828315734863
    10. ' '\' → logprob: -7.973828315734863

Token 74: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.85366350505501e-05
    2. '')' → logprob: -9.25009822845459
    3. ' )' → logprob: -13.62509822845459
    4. '`)' → logprob: -14.62509822845459
    5. ')`' → logprob: -15.50009822845459
    6. '")' → logprob: -15.75009822845459
    7. ')
' → logprob: -16.250099182128906
    8. '))' → logprob: -16.250099182128906
    9. ')\' → logprob: -17.375099182128906
    10. ')

' → logprob: -17.375099182128906

Token 75: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005563856102526188
    2. '#' → logprob: -6.255563735961914
    3. 'class' → logprob: -6.255563735961914
    4. 'from' → logprob: -7.630563735961914
    5. 'import' → logprob: -8.130563735961914
    6. '
' → logprob: -8.380563735961914
    7. '\' → logprob: -8.630563735961914
    8. 'for' → logprob: -9.130563735961914
    9. 'n' → logprob: -9.505563735961914
    10. '\n' → logprob: -10.005563735961914

Token 76: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.45062440633773804
    2. ' partial' → logprob: -2.575624465942383
    3. ' solve' → logprob: -3.075624465942383
    4. ' is' → logprob: -3.575624465942383
    5. ' print' → logprob: -3.575624465942383
    6. ' bit' → logprob: -3.700624465942383
    7. 'main' → logprob: -3.950624465942383
    8. ' max' → logprob: -4.575624465942383
    9. ' binary' → logprob: -4.575624465942383
    10. ' count' → logprob: -4.950624465942383

Token 77: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00026073982007801533
    2. '(' → logprob: -8.750260353088379
    3. '()' → logprob: -9.250260353088379
    4. ' ():' → logprob: -12.500260353088379
    5. '(:' → logprob: -13.750260353088379
    6. ':' → logprob: -14.750260353088379
    7. '():
' → logprob: -15.125260353088379
    8. '()>' → logprob: -16.000261306762695
    9. '(":' → logprob: -16.375261306762695
    10. '(**' → logprob: -16.750261306762695

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007187137845903635
    2. '<|end|>' → logprob: -5.632187366485596
    3. '    ' → logprob: -6.007187366485596
    4. '<|end|>' → logprob: -7.882187366485596
    5. 'n' → logprob: -9.257186889648438
    6. '#' → logprob: -9.632186889648438
    7. ' pass' → logprob: -9.757186889648438
    8. '(' → logprob: -9.882186889648438
    9. '(n' → logprob: -10.132186889648438
    10. '	pass' → logprob: -10.132186889648438

Token 79: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.42229586839675903
    2. ' n' → logprob: -1.5472958087921143
    3. ' pass' → logprob: -2.6722958087921143
    4. 'N' → logprob: -3.6722958087921143
    5. ' N' → logprob: -4.297296047210693
    6. 'pass' → logprob: -4.422296047210693
    7. '   ' → logprob: -4.922296047210693
    8. 'T' → logprob: -6.922296047210693
    9. ' T' → logprob: -7.047296047210693
    10. '#' → logprob: -7.672296047210693

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009784892201423645
    2. '=' → logprob: -4.634784698486328
    3. ',' → logprob: -10.884784698486328
    4. '=int' → logprob: -11.884784698486328
    5. ' ' → logprob: -12.884784698486328
    6. '  ' → logprob: -15.384784698486328
    7. '=input' → logprob: -16.384784698486328
    8. ' =
' → logprob: -16.509784698486328
    9. ' ,' → logprob: -16.509784698486328
    10. ' =)' → logprob: -16.634784698486328

Token 81: ' II' (ID: 9839)
  Prédit: 'II'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'II' → logprob: -0.6339403390884399
    2. ' II' → logprob: -0.7589403390884399
    3. 'int' → logprob: -7.63394021987915
    4. ' int' → logprob: -7.75894021987915
    5. ' SI' → logprob: -8.633940696716309
    6. 'SI' → logprob: -8.758940696716309
    7. ' ' → logprob: -9.633940696716309
    8. 'I' → logprob: -11.883940696716309
    9. ' I' → logprob: -12.758940696716309
    10. '22' → logprob: -13.383940696716309

Token 82: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: ' aa' (ID: 40260)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.2026897668838501
    2. ' arr' → logprob: -3.0776896476745605
    3. 'a' → logprob: -3.2026896476745605
    4. 'dp' → logprob: -3.9526896476745605
    5. 's' → logprob: -4.5776896476745605
    6. 'bits' → logprob: -5.2026896476745605
    7. '   ' → logprob: -5.2026896476745605
    8. 'data' → logprob: -5.4526896476745605
    9. 'matrix' → logprob: -5.4526896476745605
    10. 'nums' → logprob: -5.5776896476745605

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47432124614715576
    2. '=' → logprob: -0.9743212461471558
    3. 'rr' → logprob: -8.724321365356445
    4. ' ' → logprob: -9.974321365356445
    5. 'r' → logprob: -11.599321365356445
    6. '=[]' → logprob: -11.974321365356445
    7. '   ' → logprob: -12.224321365356445
    8. '=[' → logprob: -12.849321365356445
    9. 'rray' → logprob: -13.099321365356445
    10. 'a' → logprob: -13.349321365356445

Token 86: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2593976557254791
    2. ' list' → logprob: -1.6343976259231567
    3. '[' → logprob: -4.134397506713867
    4. ' [' → logprob: -4.509397506713867
    5. '[list' → logprob: -5.259397506713867
    6. '[int' → logprob: -8.009397506713867
    7. '[]' → logprob: -8.384397506713867
    8. '[input' → logprob: -9.009397506713867
    9. 'map' → logprob: -9.259397506713867
    10. '[S' → logprob: -9.634397506713867

Token 87: 'list' (ID: 2641)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6354254484176636
    2. 'II' → logprob: -0.7604254484176636
    3. ' II' → logprob: -6.135425567626953
    4. ' int' → logprob: -8.135425567626953
    5. 'SI' → logprob: -8.760425567626953
    6. '0' → logprob: -9.635425567626953
    7. 'ii' → logprob: -10.385425567626953
    8. '   ' → logprob: -10.510425567626953
    9. ' ' → logprob: -10.635425567626953
    10. 'I' → logprob: -11.010425567626953

Token 88: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0001835141738411039
    2. '(' → logprob: -9.00018310546875
    3. '()]' → logprob: -11.25018310546875
    4. 'map' → logprob: -11.25018310546875
    5. '()' → logprob: -11.50018310546875
    6. '(input' → logprob: -11.87518310546875
    7. '(range' → logprob: -12.12518310546875
    8. ']' → logprob: -12.25018310546875
    9. ' map' → logprob: -13.25018310546875
    10. '(int' → logprob: -13.25018310546875

Token 89: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000528606993611902
    2. 'int' → logprob: -8.500528335571289
    3. '<|end|>' → logprob: -9.250528335571289
    4. '(' → logprob: -9.750528335571289
    5. '<int' → logprob: -10.250528335571289
    6. ',int' → logprob: -10.500528335571289
    7. ']int' → logprob: -10.500528335571289
    8. ')' → logprob: -10.625528335571289
    9. '[int' → logprob: -10.750528335571289
    10. '(lambda' → logprob: -10.875528335571289

Token 90: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.3723987340927124
    2. ',' → logprob: -1.8723987340927124
    3. '(input' → logprob: -1.8723987340927124
    4. 'input' → logprob: -5.997398853302002
    5. '(' → logprob: -7.872398853302002
    6. ')' → logprob: -8.622398376464844
    7. ' input' → logprob: -8.997398376464844
    8. '=input' → logprob: -9.372398376464844
    9. ' ,' → logprob: -10.122398376464844
    10. '(),' → logprob: -10.997398376464844

Token 91: ' SI' (ID: 41958)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005372253246605396
    2. ' input' → logprob: -5.380372047424316
    3. 'SI' → logprob: -7.255372047424316
    4. ' SI' → logprob: -11.130372047424316
    5. '   ' → logprob: -11.380372047424316
    6. ' ' → logprob: -11.755372047424316
    7. ')' → logprob: -12.630372047424316
    8. '(input' → logprob: -12.880372047424316
    9. 'Si' → logprob: -14.005372047424316
    10. '	input' → logprob: -14.505372047424316

Token 92: '()))' (ID: 16829)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.2113979209971149e-05
    2. '()' → logprob: -11.500012397766113
    3. ' ().' → logprob: -14.250012397766113
    4. '.split' → logprob: -14.250012397766113
    5. '.' → logprob: -15.625012397766113
    6. '()))' → logprob: -15.875012397766113
    7. 'split' → logprob: -16.125011444091797
    8. '(' → logprob: -16.625011444091797
    9. '   ' → logprob: -17.250011444091797
    10. ' ' → logprob: -17.500011444091797

Token 93: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.33806321024894714
    2. ')]' → logprob: -1.4630632400512695
    3. '()]' → logprob: -2.9630632400512695
    4. ')' → logprob: -5.7130632400512695
    5. '()' → logprob: -9.33806324005127
    6. ']
' → logprob: -9.58806324005127
    7. '())' → logprob: -10.08806324005127
    8. '])' → logprob: -10.83806324005127
    9. ' ]' → logprob: -10.83806324005127
    10. '`]' → logprob: -10.96306324005127

Token 94: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0951264500617981
    2. '_' → logprob: -2.8451263904571533
    3. 'range' → logprob: -3.4701263904571533
    4. ' _' → logprob: -7.220126628875732
    5. '_range' → logprob: -7.595126628875732
    6. '(range' → logprob: -9.095126152038574
    7. ' in' → logprob: -9.595126152038574
    8. '	range' → logprob: -9.970126152038574
    9. ' ' → logprob: -10.595126152038574
    10. 'in' → logprob: -12.095126152038574

Token 95: ' in' (ID: 306)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.9649558067321777
    2. 'range' → logprob: -1.0899558067321777
    3. '(' → logprob: -1.7149558067321777
    4. ' range' → logprob: -2.5899558067321777
    5. '(n' → logprob: -4.089955806732178
    6. '	range' → logprob: -6.089955806732178
    7. 'ange' → logprob: -6.214955806732178
    8. '()' → logprob: -6.464955806732178
    9. 's' → logprob: -6.589955806732178
    10. 'in' → logprob: -6.839955806732178

Token 96: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02327471412718296
    2. ' range' → logprob: -3.7732746601104736
    3. '(range' → logprob: -10.648274421691895
    4. '	range' → logprob: -13.398274421691895
    5. 'ange' → logprob: -13.898274421691895
    6. 'rang' → logprob: -14.023274421691895
    7. 'ran' → logprob: -14.648274421691895
    8. 'ra' → logprob: -15.148274421691895
    9. '[' → logprob: -15.523274421691895
    10. ' ' → logprob: -15.773274421691895

Token 97: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.494741632603109e-05
    2. '(' → logprob: -9.37508487701416
    3. '(
' → logprob: -16.750085830688477
    4. ' (' → logprob: -18.625085830688477
    5. 'n' → logprob: -18.750085830688477
    6. ')n' → logprob: -20.125085830688477
    7. '	n' → logprob: -20.875085830688477
    8. ' n' → logprob: -21.000085830688477
    9. '(

' → logprob: -21.250085830688477
    10. '((' → logprob: -21.500085830688477

Token 98: ' -' (ID: 533)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.003646280150860548
    2. ')' → logprob: -5.628646373748779
    3. ']' → logprob: -10.253645896911621
    4. ')])' → logprob: -12.503645896911621
    5. '))' → logprob: -13.003645896911621
    6. '])]' → logprob: -13.628645896911621
    7. ')}' → logprob: -14.253645896911621
    8. '])' → logprob: -14.503645896911621
    9. ')],' → logprob: -14.628645896911621
    10. ' )' → logprob: -14.628645896911621

Token 99: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0039601437747478485
    2. ' ' → logprob: -5.628960132598877
    3. '0' → logprob: -8.003960609436035
    4. '2' → logprob: -11.128960609436035
    5. '   ' → logprob: -12.128960609436035
    6. ')' → logprob: -13.503960609436035
    7. '<|end|>' → logprob: -13.628960609436035
    8. 'n' → logprob: -13.753960609436035
    9. ' n' → logprob: -14.253960609436035
    10. '(' → logprob: -14.878960609436035

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.196732960641384e-05
    2. '0' → logprob: -9.500082015991211
    3. ' ' → logprob: -12.000082015991211
    4. '2' → logprob: -14.750082015991211
    5. '   ' → logprob: -14.750082015991211
    6. ')' → logprob: -17.12508201599121
    7. '```' → logprob: -17.75008201599121
    8. '
' → logprob: -18.00008201599121
    9. '    ' → logprob: -18.25008201599121
    10. '  ' → logprob: -18.25008201599121

Token 101: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.055953722447156906
    2. ')' → logprob: -2.9309537410736084
    3. ']' → logprob: -6.930953502655029
    4. ')])' → logprob: -9.805953979492188
    5. ' )' → logprob: -11.055953979492188
    6. '))' → logprob: -12.430953979492188
    7. ')
' → logprob: -12.805953979492188
    8. ')],' → logprob: -12.930953979492188
    9. ')}' → logprob: -13.055953979492188
    10. '])]' → logprob: -13.180953979492188

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29167628288269043
    2. '
' → logprob: -1.5416762828826904
    3. '<|end|>' → logprob: -3.7916762828826904
    4. '    
' → logprob: -4.4166765213012695
    5. ')' → logprob: -7.4166765213012695
    6. 'n' → logprob: -7.5416765213012695
    7. '<|end|>' → logprob: -7.7916765213012695
    8. '[' → logprob: -7.9166765213012695
    9. '```' → logprob: -8.41667652130127
    10. ' for' → logprob: -8.54167652130127

Token 103: ' win' (ID: 4449)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0534832738339901
    2. '<|end|>' → logprob: -3.678483247756958
    3. ')' → logprob: -4.553483486175537
    4. ' ' → logprob: -5.678483486175537
    5. '    
' → logprob: -5.803483486175537
    6. '[' → logprob: -5.803483486175537
    7. '
' → logprob: -6.803483486175537
    8. ' 
' → logprob: -7.303483486175537
    9. '    ' → logprob: -7.428483486175537
    10. 'n' → logprob: -7.678483486175537

Token 104: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08358103036880493
    2. '_' → logprob: -3.58358097076416
    3. 'd' → logprob: -4.20858097076416
    4. ' =' → logprob: -4.20858097076416
    5. '_counts' → logprob: -5.33358097076416
    6. '_count' → logprob: -5.83358097076416
    7. 'ners' → logprob: -5.95858097076416
    8. 'ner' → logprob: -6.33358097076416
    9. '_nums' → logprob: -6.95858097076416
    10. '_map' → logprob: -6.95858097076416

Token 105: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22585508227348328
    2. ' [' → logprob: -1.9758551120758057
    3. '[n' → logprob: -3.3508551120758057
    4. '[a' → logprob: -4.600854873657227
    5. '0' → logprob: -5.100854873657227
    6. '[]' → logprob: -5.475854873657227
    7. '[-' → logprob: -6.350854873657227
    8. ' ' → logprob: -7.350854873657227
    9. ' []' → logprob: -7.475854873657227
    10. '['' → logprob: -7.475854873657227

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6022242903709412
    2. 'False' → logprob: -0.8522242903709412
    3. '-' → logprob: -4.852224349975586
    4. 'True' → logprob: -5.352224349975586
    5. ' False' → logprob: -5.352224349975586
    6. '1' → logprob: -5.727224349975586
    7. ' ' → logprob: -5.977224349975586
    8. '[' → logprob: -7.477224349975586
    9. 'None' → logprob: -7.852224349975586
    10. 'n' → logprob: -7.977224349975586

Token 107: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025165196508169174
    2. ']*' → logprob: -3.77516508102417
    3. ']*(' → logprob: -7.02516508102417
    4. ' for' → logprob: -7.52516508102417
    5. 'for' → logprob: -9.025165557861328
    6. ',' → logprob: -9.150165557861328
    7. '(n' → logprob: -9.150165557861328
    8. ' ]' → logprob: -9.775165557861328
    9. ')]' → logprob: -10.025165557861328
    10. ')' → logprob: -11.150165557861328

Token 108: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.3879516124725342
    2. '
' → logprob: -1.3879516124725342
    3. ' for' → logprob: -1.8879516124725342
    4. 'for' → logprob: -2.137951612472534
    5. ' *' → logprob: -3.012951612472534
    6. '(n' → logprob: -3.137951612472534
    7. '<|end|>' → logprob: -3.262951612472534
    8. '+' → logprob: -3.762951612472534
    9. '[' → logprob: -4.262951850891113
    10. ']' → logprob: -4.637951850891113

Token 109: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.26399925351142883
    2. '(n' → logprob: -1.5139992237091064
    3. '(' → logprob: -4.6389994621276855
    4. ' n' → logprob: -6.3889994621276855
    5. ' (' → logprob: -7.7639994621276855
    6. '   ' → logprob: -10.388998985290527
    7. ' ' → logprob: -10.701498985290527
    8. '(
' → logprob: -10.888998985290527
    9. '3' → logprob: -11.076498985290527
    10. '2' → logprob: -11.138998985290527

Token 110: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08545824885368347
    2. '   ' → logprob: -3.335458278656006
    3. '    
' → logprob: -4.210458278656006
    4. '<|end|>' → logprob: -4.210458278656006
    5. ' 
' → logprob: -5.335458278656006
    6. '\n' → logprob: -5.835458278656006
    7. '[' → logprob: -6.585458278656006
    8. '  
' → logprob: -6.585458278656006
    9. '' → logprob: -6.960458278656006
    10. 'n' → logprob: -7.585458278656006

Token 111: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4855588674545288
    2. '   ' → logprob: -1.2355588674545288
    3. '<|end|>' → logprob: -2.9855589866638184
    4. '    
' → logprob: -3.8605589866638184
    5. 'for' → logprob: -5.235558986663818
    6. ' 
' → logprob: -5.360558986663818
    7. ' for' → logprob: -5.735558986663818
    8. '\n' → logprob: -6.235558986663818
    9. 'n' → logprob: -6.485558986663818
    10. '  
' → logprob: -6.735558986663818

Token 112: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.13104382157325745
    2. ' for' → logprob: -2.1310439109802246
    3. '   ' → logprob: -5.881043910980225
    4. 'i' → logprob: -8.006043434143066
    5. 'stack' → logprob: -8.131043434143066
    6. 'win' → logprob: -9.006043434143066
    7. 'def' → logprob: -9.756043434143066
    8. '	for' → logprob: -9.881043434143066
    9. 'dp' → logprob: -9.881043434143066
    10. ' ' → logprob: -10.006043434143066

Token 113: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.021006250753998756
    2. ' _' → logprob: -4.396006107330322
    3. 'i' → logprob: -5.271006107330322
    4. '_' → logprob: -6.271006107330322
    5. ' ' → logprob: -7.021006107330322
    6. ' x' → logprob: -8.89600658416748
    7. ' j' → logprob: -9.39600658416748
    8. '_i' → logprob: -9.77100658416748
    9. ' a' → logprob: -10.02100658416748
    10. ' ' → logprob: -10.64600658416748

Token 114: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04000231623649597
    2. 'in' → logprob: -3.2900023460388184
    3. ' ' → logprob: -6.790002346038818
    4. ',' → logprob: -8.41500186920166
    5. 'n' → logprob: -8.54000186920166
    6. '_' → logprob: -8.91500186920166
    7. '  ' → logprob: -9.79000186920166
    8. ' _' → logprob: -10.04000186920166
    9. '	in' → logprob: -10.41500186920166
    10. ' i' → logprob: -10.79000186920166

Token 115: ' row' (ID: 5225)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0466105937957764
    2. 'a' → logprob: -1.1716105937957764
    3. ' row' → logprob: -1.7966105937957764
    4. 'row' → logprob: -2.5466105937957764
    5. ' aa' → logprob: -4.5466108322143555
    6. 'arr' → logprob: -4.9216108322143555
    7. ' arr' → logprob: -4.9216108322143555
    8. 'aa' → logprob: -5.0466108322143555
    9. 'vals' → logprob: -5.2966108322143555
    10. 'x' → logprob: -5.2966108322143555

Token 116: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15046417713165283
    2. 'in' → logprob: -2.0254640579223633
    3. ',' → logprob: -4.900464057922363
    4. ' ' → logprob: -8.275464057922363
    5. ' ,' → logprob: -10.400464057922363
    6. '	in' → logprob: -11.275464057922363
    7. ',in' → logprob: -12.025464057922363
    8. ' i' → logprob: -12.525464057922363
    9. 'n' → logprob: -14.025464057922363
    10. ')' → logprob: -14.150464057922363

Token 117: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.10020720958709717
    2. ' enumerate' → logprob: -2.3502073287963867
    3. '(en' → logprob: -15.350207328796387
    4. 'en' → logprob: -16.22520637512207
    5. 'enum' → logprob: -16.60020637512207
    6. 'Enumer' → logprob: -17.47520637512207
    7. 'range' → logprob: -17.72520637512207
    8. '```' → logprob: -18.22520637512207
    9. '.enumer' → logprob: -18.47520637512207
    10. '(' → logprob: -18.72520637512207

Token 118: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.572941179503687e-05
    2. '(range' → logprob: -10.750045776367188
    3. '(en' → logprob: -11.250045776367188
    4. ' (' → logprob: -12.375045776367188
    5. '((' → logprob: -13.500045776367188
    6. '(a' → logprob: -13.750045776367188
    7. '(ss' → logprob: -14.000045776367188
    8. '(ai' → logprob: -14.000045776367188
    9. '(nn' → logprob: -14.250045776367188
    10. '(rr' → logprob: -15.125045776367188

Token 119: 'aa' (ID: 3545)
  Prédit: 'aa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.001382497837767005
    2. ' aa' → logprob: -6.626382350921631
    3. '   ' → logprob: -10.501382827758789
    4. 'range' → logprob: -10.751382827758789
    5. 'enumer' → logprob: -13.126382827758789
    6. 'aaa' → logprob: -13.751382827758789
    7. ' ' → logprob: -13.876382827758789
    8. ')' → logprob: -14.626382827758789
    9. '(' → logprob: -14.751382827758789
    10. 'a' → logprob: -15.001382827758789

Token 120: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2037007212638855
    2. ':' → logprob: -1.7037007808685303
    3. ',' → logprob: -6.453700542449951
    4. '):
' → logprob: -8.20370101928711
    5. ']:' → logprob: -8.82870101928711
    6. '():' → logprob: -9.07870101928711
    7. ' :' → logprob: -9.70370101928711
    8. ' ):' → logprob: -10.07870101928711
    9. ':**' → logprob: -11.07870101928711
    10. ':
' → logprob: -11.45370101928711

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1890043467283249
    2. ' ' → logprob: -1.8140043020248413
    3. ' start' → logprob: -5.189004421234131
    4. '0' → logprob: -5.939004421234131
    5. 'start' → logprob: -6.939004421234131
    6. ')' → logprob: -11.439003944396973
    7. '2' → logprob: -11.814003944396973
    8. ' i' → logprob: -12.064003944396973
    9. ' )' → logprob: -12.564003944396973
    10. 'i' → logprob: -13.314003944396973

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008054904639720917
    2. 'start' → logprob: -5.258054733276367
    3. ' start' → logprob: -6.758054733276367
    4. ' ' → logprob: -6.883054733276367
    5. '0' → logprob: -7.508054733276367
    6. '2' → logprob: -10.133054733276367
    7. 'i' → logprob: -10.633054733276367
    8. ')' → logprob: -12.008054733276367
    9. '   ' → logprob: -12.758054733276367
    10. ' i' → logprob: -13.133054733276367

Token 123: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05070725455880165
    2. ':' → logprob: -3.1757073402404785
    3. '):
' → logprob: -5.1757073402404785
    4. ',' → logprob: -6.4257073402404785
    5. '   ' → logprob: -8.67570686340332
    6. ')' → logprob: -9.05070686340332
    7. ' ):' → logprob: -10.05070686340332
    8. '       ' → logprob: -10.67570686340332
    9. ' :' → logprob: -11.42570686340332
    10. '    ' → logprob: -11.42570686340332

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02387598343193531
    2. '    ' → logprob: -4.523876190185547
    3. '<|end|>' → logprob: -5.523876190185547
    4. ' ' → logprob: -5.898876190185547
    5. '        ' → logprob: -6.398876190185547
    6. '        
' → logprob: -6.773876190185547
    7. ':' → logprob: -7.023876190185547
    8. '   ' → logprob: -7.023876190185547
    9. ' 
' → logprob: -8.023876190185547
    10. ' for' → logprob: -8.523876190185547

Token 125: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38921019434928894
    2. 'for' (adapté à ' for') → logprob: -1.1392102241516113
    3. '   ' → logprob: -6.264210224151611
    4. ' win' → logprob: -9.014209747314453
    5. '    ' → logprob: -9.889209747314453
    6. 'j' → logprob: -10.264209747314453
    7. 'win' → logprob: -10.389209747314453
    8. ' ' → logprob: -10.514209747314453
    9. ' j' → logprob: -10.764209747314453
    10. ' if' → logprob: -11.139209747314453

Token 126: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.0891278013586998
    2. 'j' → logprob: -2.464127779006958
    3. ',' → logprob: -9.589127540588379
    4. ',j' → logprob: -10.464127540588379
    5. ' ' → logprob: -10.839127540588379
    6. '	j' → logprob: -11.214127540588379
    7. '   ' → logprob: -11.464127540588379
    8. '  ' → logprob: -12.089127540588379
    9. ' ,' → logprob: -12.589127540588379
    10. '_j' → logprob: -12.651627540588379

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6360567808151245
    2. ' in' → logprob: -0.8860567808151245
    3. 'in' → logprob: -2.886056900024414
    4. ' ,' → logprob: -6.136056900024414
    5. ' ' → logprob: -8.886056900024414
    6. ',row' → logprob: -10.136056900024414
    7. ',in' → logprob: -10.511056900024414
    8. '	in' → logprob: -10.511056900024414
    9. '   ' → logprob: -10.761056900024414
    10. '<|end|>' → logprob: -11.386056900024414

Token 128: ' a' (ID: 261)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.5095183849334717
    2. 'x' → logprob: -1.5095183849334717
    3. 'val' → logprob: -1.6345183849334717
    4. ' val' → logprob: -1.7595183849334717
    5. ' v' → logprob: -2.6345183849334717
    6. ' x' → logprob: -3.5095183849334717
    7. 'a' → logprob: -4.509518623352051
    8. 'c' → logprob: -4.634518623352051
    9. 'w' → logprob: -4.759518623352051
    10. ' bit' → logprob: -4.759518623352051

Token 129: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.019641291350126266
    2. 'in' → logprob: -4.019641399383545
    3. 'n' → logprob: -7.019641399383545
    4. ' ' → logprob: -8.144640922546387
    5. 's' → logprob: -10.394640922546387
    6. 'nt' → logprob: -10.394640922546387
    7. '_value' → logprob: -10.644640922546387
    8. 'j' → logprob: -10.644640922546387
    9. 't' → logprob: -10.769640922546387
    10. 'value' → logprob: -10.769640922546387

Token 130: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.47409674525260925
    2. 'enumer' → logprob: -0.9740967750549316
    3. '<|end|>' → logprob: -11.099096298217773
    4. '(en' → logprob: -13.099096298217773
    5. '.enumer' → logprob: -14.099096298217773
    6. 'en' → logprob: -14.974096298217773
    7. 'Enumer' → logprob: -15.224096298217773
    8. ' ' → logprob: -15.224096298217773
    9. '
' → logprob: -15.349096298217773
    10. ' enumer' → logprob: -16.224096298217773

Token 131: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -2.6656825866666622e-05
    2. 'row' → logprob: -10.87502670288086
    3. '(' → logprob: -12.00002670288086
    4. ' row' → logprob: -14.25002670288086
    5. '(range' → logprob: -15.37502670288086
    6. ',row' → logprob: -15.37502670288086
    7. '[row' → logprob: -16.25002670288086
    8. '	row' → logprob: -16.50002670288086
    9. '=row' → logprob: -16.50002670288086
    10. '(rows' → logprob: -17.00002670288086

Token 132: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3585722744464874
    2. '):' → logprob: -1.233572244644165
    3. '):
' → logprob: -5.733572483062744
    4. ' ,' → logprob: -6.483572483062744
    5. '   ' → logprob: -6.483572483062744
    6. '(' → logprob: -6.733572483062744
    7. ':' → logprob: -7.733572483062744
    8. ' ):' → logprob: -7.858572483062744
    9. '       ' → logprob: -7.983572483062744
    10. ')' → logprob: -8.233572006225586

Token 133: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2295140027999878
    2. ' ' → logprob: -2.1045141220092773
    3. '            ' → logprob: -2.7295141220092773
    4. '        ' → logprob: -5.604514122009277
    5. '          ' → logprob: -5.604514122009277
    6. '               ' → logprob: -5.979514122009277
    7. '<|end|>' → logprob: -6.104514122009277
    8. ' ' → logprob: -6.604514122009277
    9. ' (' → logprob: -7.229514122009277
    10. '            
' → logprob: -7.479514122009277

Token 134: ' mask' (ID: 10910)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21088829636573792
    2. ' if' → logprob: -1.8358882665634155
    3. '            ' → logprob: -4.585888385772705
    4. 'if' → logprob: -4.960888385772705
    5. '                ' → logprob: -5.710888385772705
    6. '               ' → logprob: -5.710888385772705
    7. ' win' → logprob: -5.960888385772705
    8. ' 
' → logprob: -6.460888385772705
    9. ' ' → logprob: -6.835888385772705
    10. '           ' → logprob: -7.335888385772705

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9174997210502625
    2. ' |=' → logprob: -1.0424997806549072
    3. '|' → logprob: -1.5424997806549072
    4. '=' → logprob: -3.5424997806549072
    5. ' ' → logprob: -6.292499542236328
    6. ' |' → logprob: -6.917499542236328
    7. '[' → logprob: -6.917499542236328
    8. ' ^=' → logprob: -8.042499542236328
    9. '    ' → logprob: -8.417499542236328
    10. '[i' → logprob: -8.542499542236328

Token 136: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4347040355205536
    2. ' ' → logprob: -1.184704065322876
    3. ' (' → logprob: -3.934704065322876
    4. ' win' → logprob: -4.184703826904297
    5. '(' → logprob: -5.184703826904297
    6. 'win' → logprob: -5.184703826904297
    7. '(win' → logprob: -7.809703826904297
    8. '0' → logprob: -9.184703826904297
    9. '2' → logprob: -10.059703826904297
    10. '[' → logprob: -11.122203826904297

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07920052111148834
    2. '(' → logprob: -2.579200506210327
    3. 'win' → logprob: -9.579200744628906
    4. ' ' → logprob: -9.829200744628906
    5. '0' → logprob: -9.954200744628906
    6. ' (' → logprob: -10.329200744628906
    7. '[' → logprob: -10.829200744628906
    8. 'a' → logprob: -10.829200744628906
    9. '(win' → logprob: -10.829200744628906
    10. '(a' → logprob: -11.454200744628906

Token 138: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.3953908681869507
    2. ' <<' → logprob: -1.1453908681869507
    3. '<' → logprob: -4.89539098739624
    4. '<<<' → logprob: -8.020390510559082
    5. ' <<=' → logprob: -8.145390510559082
    6. ' <' → logprob: -9.020390510559082
    7. '<<(' → logprob: -9.395390510559082
    8. '>' → logprob: -10.645390510559082
    9. ' ' → logprob: -10.645390510559082
    10. '1' → logprob: -11.145390510559082

Token 139: ' (' (ID: 350)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.050972264260053635
    2. 'a' → logprob: -3.4259722232818604
    3. 'i' → logprob: -5.0509724617004395
    4. '(' → logprob: -5.3009724617004395
    5. ' j' → logprob: -5.6759724617004395
    6. '(j' → logprob: -6.8009724617004395
    7. '(a' → logprob: -7.9259724617004395
    8. '(i' → logprob: -8.175971984863281
    9. ' (' → logprob: -8.675971984863281
    10. ' a' → logprob: -9.050971984863281

Token 140: 'i' (ID: 72)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5433694124221802
    2. 'j' → logprob: -0.9183694124221802
    3. 'i' → logprob: -4.418369293212891
    4. 'n' → logprob: -5.668369293212891
    5. ' a' → logprob: -6.543369293212891
    6. ' j' → logprob: -6.543369293212891
    7. '(' → logprob: -7.543369293212891
    8. '(a' → logprob: -8.41836929321289
    9. '(j' → logprob: -8.41836929321289
    10. ' i' → logprob: -9.41836929321289

Token 141: ' if' (ID: 538)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4206725060939789
    2. ' -' → logprob: -1.1706725358963013
    3. '+' → logprob: -3.9206724166870117
    4. ')' → logprob: -5.420672416687012
    5. ' +' → logprob: -5.920672416687012
    6. '+j' → logprob: -5.920672416687012
    7. '-j' → logprob: -6.795672416687012
    8. ' ' → logprob: -7.170672416687012
    9. ' |' → logprob: -7.295672416687012
    10. '|' → logprob: -8.170672416687012

Token 142: ' not' (ID: 625)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6341786980628967
    2. ' a' → logprob: -0.8841786980628967
    3. ' j' → logprob: -3.384178638458252
    4. 'j' → logprob: -3.884178638458252
    5. ' i' → logprob: -7.009178638458252
    6. 'i' → logprob: -7.384178638458252
    7. ' ' → logprob: -8.38417911529541
    8. ' not' → logprob: -9.00917911529541
    9. ' (' → logprob: -10.00917911529541
    10. '   ' → logprob: -10.38417911529541

Token 143: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4719945192337036
    2. 'j' → logprob: -1.8469945192337036
    3. ' a' → logprob: -2.096994400024414
    4. ' j' → logprob: -2.471994400024414
    5. 'i' → logprob: -5.971994400024414
    6. ' win' → logprob: -6.346994400024414
    7. ' i' → logprob: -6.596994400024414
    8. 'win' → logprob: -6.596994400024414
    9. ' (' → logprob: -6.721994400024414
    10. '(a' → logprob: -6.846994400024414

Token 144: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.03202655166387558
    2. 'else' → logprob: -3.532026529312134
    3. '==' → logprob: -6.407026767730713
    4. ' ==' → logprob: -7.532026767730713
    5. ' ' → logprob: -10.407026290893555
    6. ')' → logprob: -10.532026290893555
    7. '-' → logprob: -12.032026290893555
    8. '	else' → logprob: -12.532026290893555
    9. '>' → logprob: -12.907026290893555
    10. ' )' → logprob: -13.219526290893555

Token 145: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5818005800247192
    2. 'j' → logprob: -0.8318005800247192
    3. '0' → logprob: -5.58180046081543
    4. ' ' → logprob: -6.95680046081543
    5. 'i' → logprob: -7.70680046081543
    6. ' i' → logprob: -7.70680046081543
    7. ' (' → logprob: -9.33180046081543
    8. '    ' → logprob: -10.08180046081543
    9. '(j' → logprob: -10.45680046081543
    10. '   ' → logprob: -11.45680046081543

Token 146: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07516169548034668
    2. '+' → logprob: -3.0751616954803467
    3. ' )' → logprob: -4.075161933898926
    4. ')
' → logprob: -5.450161933898926
    5. '))' → logprob: -6.200161933898926
    6. ' +' → logprob: -6.450161933898926
    7. ')))' → logprob: -8.325161933898926
    8. '-' → logprob: -8.450161933898926
    9. ' )
' → logprob: -8.950161933898926
    10. '           ' → logprob: -9.075161933898926

Token 147: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24894829094409943
    2. '<|end|>' → logprob: -1.873948335647583
    3. '           ' → logprob: -4.123948097229004
    4. '<|end|>' → logprob: -4.373948097229004
    5. ' ' → logprob: -4.623948097229004
    6. '
' → logprob: -4.748948097229004
    7. '               ' → logprob: -5.748948097229004
    8. '       ' → logprob: -5.998948097229004
    9. ')
' → logprob: -6.123948097229004
    10. '[' → logprob: -6.623948097229004

Token 148: ' win' (ID: 4449)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1211433410644531
    2. ' win' → logprob: -1.4961433410644531
    3. 'win' (adapté à ' win') → logprob: -1.7461433410644531
    4. '           ' → logprob: -1.9961433410644531
    5. 'if' → logprob: -2.246143341064453
    6. ' ' → logprob: -4.371143341064453
    7. '               ' → logprob: -5.496143341064453
    8. '       ' → logprob: -5.621143341064453
    9. ')' → logprob: -6.121143341064453
    10. '<|end|>' → logprob: -6.121143341064453

Token 149: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.30015185475349426
    2. '[i' → logprob: -1.8001518249511719
    3. '|' → logprob: -2.425151824951172
    4. ' |=' → logprob: -6.050151824951172
    5. '[j' → logprob: -6.050151824951172
    6. ' ^=' → logprob: -8.675151824951172
    7. '^' → logprob: -8.800151824951172
    8. '[token' → logprob: -9.550151824951172
    9. '[a' → logprob: -9.800151824951172
    10. '[
' → logprob: -9.800151824951172

Token 150: ' if' (ID: 538)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1915639042854309
    2. '|' → logprob: -1.8165638446807861
    3. '[' → logprob: -5.691564083099365
    4. ']+=' → logprob: -6.191564083099365
    5. ' |=' → logprob: -6.316564083099365
    6. ']|' → logprob: -6.441564083099365
    7. ' |' → logprob: -6.816564083099365
    8. ' ]' → logprob: -6.816564083099365
    9. ')' → logprob: -7.941564083099365
    10. '[i' → logprob: -9.566563606262207

Token 151: ' a' (ID: 261)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6832538843154907
    2. 'a' → logprob: -1.6832538843154907
    3. ' a' → logprob: -1.8082538843154907
    4. 'not' → logprob: -1.9332538843154907
    5. '(not' → logprob: -8.30825424194336
    6. ' (' → logprob: -8.68325424194336
    7. ' ' → logprob: -10.37075424194336
    8. ' ' → logprob: -10.43325424194336
    9. '!' → logprob: -10.43325424194336
    10. '(a' → logprob: -10.74575424194336

Token 152: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.05559564754366875
    2. 'else' → logprob: -3.180595636367798
    3. '==' → logprob: -4.805595874786377
    4. ' ==' → logprob: -6.180595874786377
    5. ']' → logprob: -6.305595874786377
    6. ']==' → logprob: -8.555595397949219
    7. ' ]' → logprob: -9.305595397949219
    8. ' ' → logprob: -9.305595397949219
    9. '        ' → logprob: -11.430595397949219
    10. '	else' → logprob: -12.180595397949219

Token 153: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3133690655231476
    2. ' j' → logprob: -1.3133690357208252
    3. '0' → logprob: -9.688368797302246
    4. ' ' → logprob: -11.438368797302246
    5. ' i' → logprob: -11.563368797302246
    6. 'i' → logprob: -11.563368797302246
    7. '	j' → logprob: -12.063368797302246
    8. '_j' → logprob: -13.813368797302246
    9. '1' → logprob: -14.188368797302246
    10. '(j' → logprob: -14.250868797302246

Token 154: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008065548725426197
    2. '|' → logprob: -5.133065700531006
    3. ' ]' → logprob: -6.883065700531006
    4. ']|' → logprob: -7.508065700531006
    5. ' |' → logprob: -8.508065223693848
    6. ')]' → logprob: -9.008065223693848
    7. ')' → logprob: -9.383065223693848
    8. ']+=' → logprob: -9.508065223693848
    9. ' |=' → logprob: -10.633065223693848
    10. ']
' → logprob: -12.008065223693848

Token 155: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.004783495794981718
    2. ' |=' → logprob: -6.129783630371094
    3. ']' → logprob: -6.754783630371094
    4. ']+=' → logprob: -7.629783630371094
    5. '+=' → logprob: -8.129783630371094
    6. '=' → logprob: -8.254783630371094
    7. '^' → logprob: -8.879783630371094
    8. ' ^=' → logprob: -9.254783630371094
    9. '[' → logprob: -9.504783630371094
    10. '|=
' → logprob: -10.379783630371094

Token 156: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.023255378007888794
    2. ' mask' → logprob: -3.7732553482055664
    3. '	mask' → logprob: -12.648255348205566
    4. '(mask' → logprob: -12.898255348205566
    5. '1' → logprob: -13.398255348205566
    6. ' ' → logprob: -13.773255348205566
    7. 'm' → logprob: -14.773255348205566
    8. ' ' → logprob: -15.398255348205566
    9. '_mask' → logprob: -15.398255348205566
    10. '   ' → logprob: -16.023256301879883

Token 157: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04453682526946068
    2. '\n' → logprob: -4.044536590576172
    3. '<|end|>' → logprob: -4.419536590576172
    4. ' 
' → logprob: -5.044536590576172
    5. '    
' → logprob: -6.294536590576172
    6. '   ' → logprob: -6.544536590576172
    7. '  
' → logprob: -6.669536590576172
    8. ' ' → logprob: -7.544536590576172
    9. '[' → logprob: -7.919536590576172
    10. '```' → logprob: -8.294536590576172

Token 158: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3354746103286743
    2. '<|end|>' → logprob: -1.3354746103286743
    3. '
' → logprob: -1.4604746103286743
    4. '\n' → logprob: -2.2104744911193848
    5. ')' → logprob: -2.5854744911193848
    6. ' ' → logprob: -4.335474491119385
    7. '```' → logprob: -4.460474491119385
    8. '#' (adapté à ' #') → logprob: -5.085474491119385
    9. '       ' → logprob: -5.710474491119385
    10. '[' → logprob: -5.835474491119385

Token 160: ' Optim' (ID: 38267)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9683399796485901
    2. ' #' → logprob: -2.0933399200439453
    3. ' return' → logprob: -2.3433399200439453
    4. '#' → logprob: -2.5933399200439453
    5. ' for' → logprob: -2.7183399200439453
    6. ' pass' → logprob: -2.8433399200439453
    7. ' if' → logprob: -3.2183399200439453
    8. ' n' → logprob: -3.8433399200439453
    9. 'for' → logprob: -3.9683399200439453
    10. '   ' → logprob: -4.218339920043945

Token 161: 'ized' (ID: 2110)
  Prédit: 'ized'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ized' → logprob: -0.46882179379463196
    2. 'ize' → logprob: -1.2188217639923096
    3. 'e' → logprob: -3.8438217639923096
    4. '#' → logprob: -4.218822002410889
    5. 'izing' → logprob: -4.218822002410889
    6. 'ization' → logprob: -4.593822002410889
    7. '```' → logprob: -5.468822002410889
    8. 'al' → logprob: -5.843822002410889
    9. 'ze' → logprob: -6.343822002410889
    10. 'def' → logprob: -6.468822002410889

Token 162: ' DP' (ID: 51992)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5471285581588745
    2. 'for' → logprob: -1.5471285581588745
    3. 'dp' → logprob: -2.547128677368164
    4. 'def' → logprob: -2.672128677368164
    5. ' dp' → logprob: -4.172128677368164
    6. 'win' → logprob: -4.672128677368164
    7. ' win' → logprob: -5.422128677368164
    8. ' #' → logprob: -5.797128677368164
    9. 'stack' → logprob: -5.797128677368164
    10. ' def' → logprob: -6.172128677368164

Token 163: ' using' (ID: 2360)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7646481990814209
    2. ' dp' → logprob: -1.514648199081421
    3. '   ' → logprob: -2.514648199081421
    4. 'def' → logprob: -2.764648199081421
    5. '
' → logprob: -3.139648199081421
    6. ':' → logprob: -3.389648199081421
    7. ' for' → logprob: -3.389648199081421
    8. ' win' → logprob: -4.8896484375
    9. '<|end|>' → logprob: -5.3896484375
    10. 'win' → logprob: -5.5146484375

Token 164: ' advanced' (ID: 12990)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.08001384884119034
    2. ' bit' → logprob: -3.3300137519836426
    3. 'memo' → logprob: -3.5800137519836426
    4. ' memo' → logprob: -5.455013751983643
    5. 'mask' → logprob: -7.080013751983643
    6. 'bottom' → logprob: -7.205013751983643
    7. 'top' → logprob: -7.330013751983643
    8. ' functools' → logprob: -7.580013751983643
    9. 'fun' → logprob: -7.705013751983643
    10. 'bits' → logprob: -7.955013751983643

Token 165: ' indexing' (ID: 105989)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.31996190547943115
    2. ' techniques' → logprob: -1.8199619054794312
    3. 'bit' → logprob: -2.3199620246887207
    4. '_bit' → logprob: -5.944962024688721
    5. ' technique' → logprob: -6.319962024688721
    6. ' subset' → logprob: -6.819962024688721
    7. ' memo' → logprob: -6.944962024688721
    8. 'mask' → logprob: -7.444962024688721
    9. ' mask' → logprob: -7.569962024688721
    10. ' indexing' → logprob: -7.569962024688721

Token 166: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5658124685287476
    2. '
' → logprob: -1.3158124685287476
    3. '<|end|>' → logprob: -1.9408124685287476
    4. '    
' → logprob: -5.440812587738037
    5. 'def' → logprob: -5.815812587738037
    6. 'import' → logprob: -6.065812587738037
    7. '<|end|>' → logprob: -6.315812587738037
    8. ' for' → logprob: -6.565812587738037
    9. 'dp' → logprob: -6.940812587738037
    10. ',' → logprob: -6.940812587738037

Token 167: ' bit' (ID: 3546)
  Prédit: ' numpy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numpy' → logprob: -0.9658174514770508
    2. 'bit' → logprob: -1.3408174514770508
    3. ' bit' → logprob: -1.5908174514770508
    4. 'numpy' → logprob: -2.215817451477051
    5. ' memo' → logprob: -4.715817451477051
    6. ' itertools' → logprob: -5.215817451477051
    7. 'memo' → logprob: -5.715817451477051
    8. 'num' → logprob: -5.965817451477051
    9. 'mask' → logprob: -6.215817451477051
    10. ' num' → logprob: -6.215817451477051

Token 168: 'wise' (ID: 7480)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.28449469804763794
    2. 'set' → logprob: -1.9094946384429932
    3. ' manipulation' → logprob: -2.909494638442993
    4. 'man' → logprob: -3.909494638442993
    5. 'm' → logprob: -4.034494876861572
    6. '```' → logprob: -6.284494876861572
    7. 'sets' → logprob: -7.034494876861572
    8. '   ' → logprob: -7.284494876861572
    9. 'count' → logprob: -7.534494876861572
    10. '-' → logprob: -7.784494876861572

Token 169: ' tricks' (ID: 38224)
  Prédit: 'operations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operations' → logprob: -0.6722649335861206
    2. ' operations' → logprob: -0.7972649335861206
    3. 'operators' → logprob: -4.29726505279541
    4. ' manipulation' → logprob: -4.92226505279541
    5. 'dp' → logprob: -4.92226505279541
    6. 'ops' → logprob: -5.54726505279541
    7. ' operators' → logprob: -5.92226505279541
    8. 'operation' → logprob: -6.42226505279541
    9. 'mask' → logprob: -7.92226505279541
    10. 'or' → logprob: -8.17226505279541

Token 170: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14366452395915985
    2. '<|end|>' → logprob: -2.643664598464966
    3. '
' → logprob: -2.893664598464966
    4. '    
' → logprob: -5.268664360046387
    5. '<|end|>' → logprob: -7.393664360046387
    6. ',' → logprob: -8.393664360046387
    7. 'def' → logprob: -8.518664360046387
    8. '    ' → logprob: -8.518664360046387
    9. ')' → logprob: -8.643664360046387
    10. '```' → logprob: -9.518664360046387

Token 171: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: ' d' (ID: 272)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0586607456207275
    2. '<|end|>' → logprob: -1.3086607456207275
    3. ' dp' → logprob: -1.6836607456207275
    4. ')' → logprob: -3.1836607456207275
    5. '   ' → logprob: -3.4336607456207275
    6. ' ' → logprob: -3.6836607456207275
    7. 'def' → logprob: -3.9336607456207275
    8. '
' → logprob: -4.183660507202148
    9. 'n' → logprob: -4.558660507202148
    10. ' n' → logprob: -4.683660507202148

Token 173: 'pl' (ID: 528)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0004427051462698728
    2. ' =' → logprob: -8.000442504882812
    3. '=' → logprob: -10.250442504882812
    4. 'P' → logprob: -10.875442504882812
    5. '[' → logprob: -11.500442504882812
    6. 'ef' → logprob: -11.500442504882812
    7. ' p' → logprob: -11.875442504882812
    8. '```' → logprob: -12.500442504882812
    9. '   ' → logprob: -12.875442504882812
    10. 'f' → logprob: -13.125442504882812

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21165792644023895
    2. 'p' → logprob: -2.336658000946045
    3. '=' → logprob: -2.461658000946045
    4. 'o' → logprob: -6.336658000946045
    5. ',' → logprob: -6.711658000946045
    6. '=[]' → logprob: -7.336658000946045
    7. 'eft' → logprob: -7.336658000946045
    8. '[' → logprob: -7.586658000946045
    9. 'ist' → logprob: -7.836658000946045
    10. '0' → logprob: -7.836658000946045

Token 175: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008071460761129856
    2. '[[' → logprob: -5.758071422576904
    3. '[-' → logprob: -6.508071422576904
    4. 'win' → logprob: -6.758071422576904
    5. ' [' → logprob: -7.258071422576904
    6. '{' → logprob: -7.633071422576904
    7. '[{' → logprob: -7.883071422576904
    8. '{}' → logprob: -8.258071899414062
    9. '[n' → logprob: -8.508071899414062
    10. '[(' → logprob: -9.508071899414062

Token 176: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.225196972489357
    2. '[' → logprob: -2.6001970767974854
    3. '{}' → logprob: -2.7251970767974854
    4. '-' → logprob: -3.4751970767974854
    5. '[-' → logprob: -4.725196838378906
    6. '(' → logprob: -4.850196838378906
    7. 'win' → logprob: -5.725196838378906
    8. '{' → logprob: -6.100196838378906
    9. 'set' → logprob: -6.350196838378906
    10. 'default' → logprob: -6.600196838378906

Token 177: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.49392691254615784
    2. ']' → logprob: -1.2439268827438354
    3. ' <<' → logprob: -2.368927001953125
    4. ']<<' → logprob: -4.993927001953125
    5. '<<(' → logprob: -7.368927001953125
    6. ' ]' → logprob: -9.243927001953125
    7. '0' → logprob: -9.493927001953125
    8. ']*(' → logprob: -9.868927001953125
    9. ']*' → logprob: -10.118927001953125
    10. ']+' → logprob: -10.493927001953125

Token 178: ' i' (ID: 575)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9248376488685608
    2. 'n' → logprob: -1.049837589263916
    3. 'i' → logprob: -2.299837589263916
    4. '(' → logprob: -2.924837589263916
    5. '(n' → logprob: -3.549837589263916
    6. '(i' → logprob: -3.549837589263916
    7. '31' → logprob: -4.799837589263916
    8. '30' → logprob: -5.174837589263916
    9. '20' → logprob: -5.299837589263916
    10. '32' → logprob: -5.299837589263916

Token 179: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07963280379772186
    2. 'for' → logprob: -2.5796327590942383
    3. ' ' → logprob: -7.579632759094238
    4. ')' → logprob: -9.079632759094238
    5. ']' → logprob: -9.329632759094238
    6. '	for' → logprob: -11.204632759094238
    7. '   ' → logprob: -13.204632759094238
    8. '  ' → logprob: -13.329632759094238
    9. ' ]' → logprob: -13.329632759094238
    10. ' ' → logprob: -13.829632759094238

Token 180: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.08086632192134857
    2. 'range' → logprob: -2.5808663368225098
    3. 'i' → logprob: -6.70586633682251
    4. ' i' → logprob: -7.20586633682251
    5. '(range' → logprob: -13.080865859985352
    6. '_' → logprob: -13.580865859985352
    7. '	range' → logprob: -13.705865859985352
    8. '
' → logprob: -13.830865859985352
    9. ' in' → logprob: -14.080865859985352
    10. '_range' → logprob: -14.205865859985352

Token 181: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026850420981645584
    2. 'in' → logprob: -3.651850461959839
    3. 'range' → logprob: -8.276850700378418
    4. ' range' → logprob: -8.276850700378418
    5. ' ' → logprob: -10.901850700378418
    6. '<|end|>' → logprob: -11.526850700378418
    7. 's' → logprob: -12.401850700378418
    8. 'n' → logprob: -12.776850700378418
    9. '(range' → logprob: -14.151850700378418
    10. ')' → logprob: -14.651850700378418

Token 182: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061975300312042236
    2. ' range' → logprob: -2.8119752407073975
    3. '	range' → logprob: -13.436975479125977
    4. '(range' → logprob: -13.686975479125977
    5. 'ran' → logprob: -13.936975479125977
    6. 'r' → logprob: -14.311975479125977
    7. ' ' → logprob: -14.436975479125977
    8. 'rang' → logprob: -14.811975479125977
    9. 'ra' → logprob: -14.936975479125977
    10. ')' → logprob: -15.311975479125977

Token 183: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03203047439455986
    2. 'n' → logprob: -3.5320305824279785
    3. ' n' → logprob: -6.7820305824279785
    4. '(' → logprob: -7.0320305824279785
    5. ' (' → logprob: -8.40703010559082
    6. '	n' → logprob: -11.28203010559082
    7. ')n' → logprob: -11.78203010559082
    8. '   ' → logprob: -12.40703010559082
    9. '(
' → logprob: -13.40703010559082
    10. '(len' → logprob: -13.78203010559082

Token 184: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004978670622222126
    2. ' )' → logprob: -8.375497817993164
    3. '+' → logprob: -8.750497817993164
    4. ')]
' → logprob: -9.500497817993164
    5. ')' → logprob: -11.500497817993164
    6. '   ' → logprob: -12.250497817993164
    7. ')][' → logprob: -12.250497817993164
    8. ']' → logprob: -12.625497817993164
    9. ' ]' → logprob: -12.875497817993164
    10. ' +' → logprob: -13.625497817993164

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4888973534107208
    2. '<|end|>' → logprob: -1.9888973236083984
    3. 'd' → logprob: -2.1138973236083984
    4. '
' → logprob: -2.2388973236083984
    5. ' d' → logprob: -5.113897323608398
    6. '[' → logprob: -5.113897323608398
    7. 'dp' → logprob: -6.488897323608398
    8. ',' → logprob: -6.863897323608398
    9. '    
' → logprob: -6.863897323608398
    10. ' for' → logprob: -7.238897323608398

Token 186: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.5177391171455383
    2. 'dp' → logprob: -1.3927390575408936
    3. '   ' → logprob: -2.6427390575408936
    4. 'for' → logprob: -3.1427390575408936
    5. ' for' → logprob: -3.6427390575408936
    6. ' d' → logprob: -5.017739295959473
    7. ' dp' → logprob: -5.767739295959473
    8. 'mask' → logprob: -7.017739295959473
    9. 'max' → logprob: -7.892739295959473
    10. 'dl' → logprob: -8.017739295959473

Token 187: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.0012678514467552304
    2. 'pl' → logprob: -7.501267910003662
    3. '=' → logprob: -9.001267433166504
    4. 'p' → logprob: -9.126267433166504
    5. 'pu' → logprob: -9.251267433166504
    6. 'pri' → logprob: -9.376267433166504
    7. ' =' → logprob: -10.001267433166504
    8. 'pur' → logprob: -10.376267433166504
    9. '```' → logprob: -10.751267433166504
    10. '   ' → logprob: -11.001267433166504

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08910108357667923
    2. '=' → logprob: -2.4641010761260986
    3. ' =[' → logprob: -9.08910083770752
    4. ' ' → logprob: -10.46410083770752
    5. '[' → logprob: -11.58910083770752
    6. '=[]' → logprob: -12.71410083770752
    7. '=[' → logprob: -12.71410083770752
    8. ',' → logprob: -14.08910083770752
    9. ' [' → logprob: -14.46410083770752
    10. ' =
' → logprob: -14.71410083770752

Token 189: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.119938924908638
    2. ' [' → logprob: -2.494938850402832
    3. 'd' → logprob: -3.869938850402832
    4. ' d' → logprob: -4.994938850402832
    5. '[(' → logprob: -6.869938850402832
    6. ' ' → logprob: -7.619938850402832
    7. '0' → logprob: -8.244938850402832
    8. '1' → logprob: -8.244938850402832
    9. '(' → logprob: -8.619938850402832
    10. '[d' → logprob: -8.744938850402832

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5832743644714355
    2. '(' → logprob: -1.0832743644714355
    3. '0' → logprob: -2.4582743644714355
    4. '[' → logprob: -5.3332743644714355
    5. '((' → logprob: -5.7082743644714355
    6. '~' → logprob: -5.9582743644714355
    7. 'win' → logprob: -5.9582743644714355
    8. ' (' → logprob: -6.9582743644714355
    9. 'd' → logprob: -7.3332743644714355
    10. ' ' → logprob: -7.4582743644714355

Token 191: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.3508557379245758
    2. '<<' → logprob: -1.2258557081222534
    3. ']' → logprob: -6.100855827331543
    4. '
' → logprob: -10.475855827331543
    5. ']<<' → logprob: -10.475855827331543
    6. 'for' → logprob: -10.725855827331543
    7. ')' → logprob: -11.225855827331543
    8. ' for' → logprob: -11.600855827331543
    9. '<n' → logprob: -11.850855827331543
    10. '<' → logprob: -11.850855827331543

Token 192: ' i' (ID: 575)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.26514673233032227
    2. 'i' → logprob: -2.0151467323303223
    3. '(n' → logprob: -2.5151467323303223
    4. ' n' → logprob: -4.765146732330322
    5. '(i' → logprob: -5.765146732330322
    6. ' i' → logprob: -6.140146732330322
    7. '0' → logprob: -6.390146732330322
    8. ' (' → logprob: -6.890146732330322
    9. 'j' → logprob: -6.890146732330322
    10. '(' → logprob: -7.015146732330322

Token 193: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04499435797333717
    2. 'for' → logprob: -3.169994354248047
    3. ')' → logprob: -6.669994354248047
    4. ' ' → logprob: -7.419994354248047
    5. ']' → logprob: -9.544994354248047
    6. ' )' → logprob: -11.294994354248047
    7. '	for' → logprob: -11.419994354248047
    8. ' in' → logprob: -12.419994354248047
    9. ',' → logprob: -12.544994354248047
    10. ' ]' → logprob: -12.544994354248047

Token 194: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.23606644570827484
    2. 'range' → logprob: -1.611066460609436
    3. 'i' → logprob: -5.2360663414001465
    4. ' i' → logprob: -5.4860663414001465
    5. '(range' → logprob: -6.8610663414001465
    6. '(i' → logprob: -9.736066818237305
    7. ' in' → logprob: -11.361066818237305
    8. 'in' → logprob: -12.736066818237305
    9. ' xrange' → logprob: -12.986066818237305
    10. ' ' → logprob: -13.361066818237305

Token 195: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10285461694002151
    2. 'in' → logprob: -2.8528547286987305
    3. ' range' → logprob: -3.8528547286987305
    4. 'range' → logprob: -3.9778547286987305
    5. '(range' → logprob: -9.22785472869873
    6. 'n' → logprob: -11.22785472869873
    7. '(n' → logprob: -13.10285472869873
    8. ' n' → logprob: -13.47785472869873
    9. ' ' → logprob: -13.97785472869873
    10. '(' → logprob: -14.72785472869873

Token 196: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06198202446103096
    2. ' range' → logprob: -2.8119819164276123
    3. '(range' → logprob: -11.311982154846191
    4. 're' → logprob: -14.686982154846191
    5. 'r' → logprob: -15.061982154846191
    6. ' ' → logprob: -15.311982154846191
    7. '	range' → logprob: -15.561982154846191
    8. '   ' → logprob: -15.811982154846191
    9. 'ran' → logprob: -15.811982154846191
    10. 'rang' → logprob: -16.436981201171875

Token 197: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0007728204363957047
    2. 'range' → logprob: -8.000772476196289
    3. 'n' → logprob: -8.125772476196289
    4. '(' → logprob: -9.000772476196289
    5. '(range' → logprob: -11.500772476196289
    6. ')' → logprob: -13.375772476196289
    7. ' range' → logprob: -13.625772476196289
    8. '   ' → logprob: -13.875772476196289
    9. ' (' → logprob: -14.000772476196289
    10. ')(' → logprob: -14.125772476196289

Token 198: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0002153378736693412
    2. ')]
' → logprob: -9.125215530395508
    3. ')' → logprob: -10.250215530395508
    4. ']' → logprob: -10.750215530395508
    5. '   ' → logprob: -10.750215530395508
    6. ' )' → logprob: -11.500215530395508
    7. '       ' → logprob: -12.875215530395508
    8. ')]

' → logprob: -13.250215530395508
    9. ')])' → logprob: -13.375215530395508
    10. ')}' → logprob: -13.500215530395508

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13859206438064575
    2. '
' → logprob: -2.638592004776001
    3. '<|end|>' → logprob: -3.638592004776001
    4. '    
' → logprob: -5.01359224319458
    5. 'for' → logprob: -5.26359224319458
    6. ' ' → logprob: -5.38859224319458
    7. '[' → logprob: -5.38859224319458
    8. 'def' → logprob: -5.63859224319458
    9. ' for' → logprob: -6.63859224319458
    10. '#' → logprob: -6.88859224319458

Token 200: ' rng' (ID: 76666)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3022577166557312
    2. '   ' → logprob: -1.427257776260376
    3. ' for' → logprob: -4.177257537841797
    4. 'def' → logprob: -6.427257537841797
    5. '#' → logprob: -7.177257537841797
    6. ')' → logprob: -7.427257537841797
    7. 'mask' → logprob: -7.427257537841797
    8. 'i' → logprob: -8.177257537841797
    9. 'while' → logprob: -8.177257537841797
    10. 'dp' → logprob: -8.302257537841797

Token 201: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.4855663721391466e-05
    2. '(e' → logprob: -11.750015258789062
    3. '(' → logprob: -12.500015258789062
    4. ' =' → logprob: -14.125015258789062
    5. 'es' → logprob: -14.250015258789062
    6. '_e' → logprob: -14.750015258789062
    7. '_' → logprob: -15.000015258789062
    8. '(n' → logprob: -15.125015258789062
    9. '=' → logprob: -15.250015258789062
    10. '=e' → logprob: -16.000015258789062

Token 202: ' range' (ID: 3352)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.35598427057266235
    2. 'range' → logprob: -1.6059842109680176
    3. 'n' → logprob: -2.9809842109680176
    4. '(range' → logprob: -3.7309842109680176
    5. '(' → logprob: -3.8559842109680176
    6. ' range' → logprob: -7.105984210968018
    7. '(len' → logprob: -7.355984210968018
    8. 'list' → logprob: -8.230984687805176
    9. '((' → logprob: -8.355984687805176
    10. '1' → logprob: -8.605984687805176

Token 203: '
' (ID: 198)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16038323938846588
    2. '(' → logprob: -1.9103832244873047
    3. '(len' → logprob: -9.785383224487305
    4. '(i' → logprob: -10.785383224487305
    5. 'n' → logprob: -10.910383224487305
    6. '(m' → logprob: -11.160383224487305
    7. '1' → logprob: -11.660383224487305
    8. '(k' → logprob: -11.910383224487305
    9. '(max' → logprob: -12.035383224487305
    10. '((' → logprob: -12.035383224487305

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.375708669424057
    2. '(n' → logprob: -2.25070858001709
    3. '(' → logprob: -2.50070858001709
    4. 'for' → logprob: -2.75070858001709
    5. ' for' → logprob: -3.12570858001709
    6. '()' → logprob: -5.12570858001709
    7. '<|end|>' → logprob: -6.12570858001709
    8. 'def' → logprob: -6.37570858001709
    9. 'n' → logprob: -6.75070858001709
    10. ')' → logprob: -6.87570858001709

Token 205: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5368228554725647
    2. 'for' (adapté à ' for') → logprob: -1.53682279586792
    3. '   ' → logprob: -1.66182279586792
    4. 'def' → logprob: -6.16182279586792
    5. 'n' → logprob: -6.66182279586792
    6. ' i' → logprob: -7.03682279586792
    7. ')' → logprob: -7.16182279586792
    8. '(' → logprob: -7.28682279586792
    9. '(n' → logprob: -7.41182279586792
    10. ' n' → logprob: -7.41182279586792

Token 206: ' d' (ID: 272)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7201988101005554
    2. ' length' → logprob: -1.2201988697052002
    3. ' _' → logprob: -2.9701988697052
    4. ' k' → logprob: -2.9701988697052
    5. ' mask' → logprob: -4.220198631286621
    6. '_' → logprob: -4.345198631286621
    7. ' l' → logprob: -4.345198631286621
    8. 'i' → logprob: -4.470198631286621
    9. ' sz' → logprob: -4.845198631286621
    10. ' r' → logprob: -4.970198631286621

Token 207: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04368375614285469
    2. 'in' → logprob: -3.2936837673187256
    3. 'n' → logprob: -6.7936835289001465
    4. '(n' → logprob: -7.0436835289001465
    5. 'i' → logprob: -7.1686835289001465
    6. 'd' → logprob: -7.1686835289001465
    7. ' i' → logprob: -7.6686835289001465
    8. '(' → logprob: -8.543684005737305
    9. 'ef' → logprob: -8.543684005737305
    10. 'istance' → logprob: -8.668684005737305

Token 208: ' rng' (ID: 76666)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.022960899397730827
    2. ' rng' → logprob: -3.897960901260376
    3. 'range' → logprob: -6.397960662841797
    4. ' r' → logprob: -8.647960662841797
    5. ' ' → logprob: -9.022960662841797
    6. 'rng' → logprob: -9.147960662841797
    7. '(range' → logprob: -9.772960662841797
    8. '[' → logprob: -9.897960662841797
    9. ' rg' → logprob: -10.022960662841797
    10. ' xrange' → logprob: -10.272960662841797

Token 209: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3486883342266083
    2. '(n' → logprob: -1.2236883640289307
    3. '1' → logprob: -8.598688125610352
    4. 'n' → logprob: -10.348688125610352
    5. '((' → logprob: -11.723688125610352
    6. '(max' → logprob: -12.348688125610352
    7. '(len' → logprob: -13.098688125610352
    8. '(-' → logprob: -13.098688125610352
    9. ' (' → logprob: -13.223688125610352
    10. '(
' → logprob: -13.473688125610352

Token 210: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19451408088207245
    2. '(' → logprob: -2.694514036178589
    3. 'n' → logprob: -2.694514036178589
    4. '(n' → logprob: -3.194514036178589
    5. '2' → logprob: -7.569514274597168
    6. '0' → logprob: -9.819514274597168
    7. ' ' → logprob: -11.319514274597168
    8. ' n' → logprob: -12.069514274597168
    9. '-' → logprob: -12.507014274597168
    10. '10' → logprob: -12.632014274597168

Token 211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009307625703513622
    2. ',n' → logprob: -5.259307861328125
    3. '(n' → logprob: -5.634307861328125
    4. '(' → logprob: -7.884307861328125
    5. ' ,' → logprob: -9.259307861328125
    6. 'n' → logprob: -11.509307861328125
    7. ',
' → logprob: -12.384307861328125
    8. ' n' → logprob: -12.759307861328125
    9. ' (' → logprob: -13.759307861328125
    10. ',(' → logprob: -14.009307861328125

Token 212: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003036457928828895
    2. ' n' → logprob: -8.125303268432617
    3. '   ' → logprob: -13.000303268432617
    4. '(n' → logprob: -13.625303268432617
    5. '10' → logprob: -13.875303268432617
    6. '
' → logprob: -14.375303268432617
    7. ' ' → logprob: -15.000303268432617
    8. '20' → logprob: -15.125303268432617
    9. '1' → logprob: -15.125303268432617
    10. '2' → logprob: -15.250303268432617

Token 213: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.390166699886322
    2. '):
' → logprob: -1.1401667594909668
    3. '+' → logprob: -5.765166759490967
    4. ')' → logprob: -10.015166282653809
    5. ' ):' → logprob: -10.015166282653809
    6. '):
' → logprob: -10.765166282653809
    7. ' +' → logprob: -10.890166282653809
    8. '   ' → logprob: -11.390166282653809
    9. ' ):
' → logprob: -12.015166282653809
    10. '-' → logprob: -13.640166282653809

Token 214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10524823516607285
    2. ' for' → logprob: -2.355248212814331
    3. '   ' → logprob: -5.73024845123291
    4. 'for' → logprob: -6.60524845123291
    5. ',' → logprob: -8.73024845123291
    6. '    ' → logprob: -8.85524845123291
    7. '	   ' → logprob: -10.23024845123291
    8. '	' → logprob: -10.98024845123291
    9. ' ' → logprob: -10.98024845123291
    10. '	for' → logprob: -11.10524845123291

Token 215: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.550682008266449
    2. 'nd' → logprob: -1.9256820678710938
    3. 'new' → logprob: -2.0506820678710938
    4. '       ' → logprob: -2.8006820678710938
    5. 'ndl' → logprob: -3.9256820678710938
    6. ' for' → logprob: -4.175682067871094
    7. ' nd' → logprob: -4.550682067871094
    8. 'd' → logprob: -4.675682067871094
    9. 'dp' → logprob: -5.050682067871094
    10. 'ld' → logprob: -5.050682067871094

Token 216: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13800489902496338
    2. 'r' → logprob: -3.263004779815674
    3. 'j' → logprob: -3.513004779815674
    4. 'l' → logprob: -3.638004779815674
    5. 'x' → logprob: -4.263004779815674
    6. 'k' → logprob: -5.263004779815674
    7. ' i' → logprob: -5.763004779815674
    8. 'a' → logprob: -6.638004779815674
    9. 's' → logprob: -6.638004779815674
    10. 'L' → logprob: -7.013004779815674

Token 217: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038826826959848404
    2. 'in' → logprob: -3.2888269424438477
    3. 'n' → logprob: -8.288826942443848
    4. ' ' → logprob: -8.538826942443848
    5. ',' → logprob: -8.788826942443848
    6. 'd' → logprob: -9.163826942443848
    7. '<|end|>' → logprob: -11.163826942443848
    8. '	in' → logprob: -11.413826942443848
    9. 'range' → logprob: -11.913826942443848
    10. '(' → logprob: -12.038826942443848

Token 218: ' rng' (ID: 76666)
  Prédit: 'rng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rng' → logprob: -0.3871854543685913
    2. 'range' → logprob: -1.3871854543685913
    3. 'r' → logprob: -3.262185573577881
    4. ' rng' → logprob: -3.762185573577881
    5. ' range' → logprob: -5.137185573577881
    6. 'rg' → logprob: -7.012185573577881
    7. 'rn' → logprob: -7.387185573577881
    8. '(r' → logprob: -7.762185573577881
    9. 'rang' → logprob: -8.449685096740723
    10. '(range' → logprob: -8.449685096740723

Token 219: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0010881858179345727
    2. '(d' → logprob: -7.5010881423950195
    3. '(' → logprob: -7.6260881423950195
    4. 'n' → logprob: -10.25108814239502
    5. 'd' → logprob: -12.25108814239502
    6. '(
' → logprob: -12.62608814239502
    7. '((' → logprob: -13.62608814239502
    8. '(len' → logprob: -13.87608814239502
    9. '(i' → logprob: -14.37608814239502
    10. '0' → logprob: -14.87608814239502

Token 220: '):
' (ID: 1883)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6013160347938538
    2. '-d' → logprob: -1.101315975189209
    3. '-' → logprob: -2.226315975189209
    4. '):' → logprob: -5.101315975189209
    5. '):
' → logprob: -5.601315975189209
    6. ' ' → logprob: -7.351315975189209
    7. '   ' → logprob: -7.351315975189209
    8. 'd' → logprob: -8.851316452026367
    9. ')' → logprob: -9.101316452026367
    10. ',' → logprob: -10.351316452026367

Token 221: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6053313612937927
    2. ' if' → logprob: -0.9803313612937927
    3. 'if' → logprob: -3.3553314208984375
    4. '       ' → logprob: -3.4803314208984375
    5. ' for' → logprob: -4.4803314208984375
    6. 'for' → logprob: -6.7303314208984375
    7. '   ' → logprob: -9.105331420898438
    8. ',' → logprob: -9.480331420898438
    9. ' and' → logprob: -9.480331420898438
    10. '               ' → logprob: -9.605331420898438

Token 222: ' j' (ID: 441)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0163938999176025
    2. 'if' → logprob: -1.0163938999176025
    3. 'mask' → logprob: -2.1413938999176025
    4. 'for' → logprob: -3.2663938999176025
    5. '           ' → logprob: -3.2663938999176025
    6. 'j' (adapté à ' j') → logprob: -4.141393661499023
    7. '       ' → logprob: -4.266393661499023
    8. 'l' → logprob: -4.891393661499023
    9. 'dp' → logprob: -4.891393661499023
    10. ' d' → logprob: -5.141393661499023

Token 223: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16247539222240448
    2. ' =' → logprob: -1.912475347518921
    3. '=i' → logprob: -6.1624755859375
    4. '=n' → logprob: -9.2874755859375
    5. '=r' → logprob: -11.6624755859375
    6. ' ' → logprob: -11.9124755859375
    7. '=
' → logprob: -12.1624755859375
    8. ' in' → logprob: -12.1624755859375
    9. '=j' → logprob: -12.1624755859375
    10. '=d' → logprob: -12.4124755859375

Token 224: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00118856446351856
    2. ' i' → logprob: -6.7511887550354
    3. '(i' → logprob: -11.376188278198242
    4. '   ' → logprob: -13.501188278198242
    5. '
' → logprob: -13.626188278198242
    6. 'd' → logprob: -13.626188278198242
    7. ' (' → logprob: -14.126188278198242
    8. 'n' → logprob: -14.501188278198242
    9. '```' → logprob: -15.251188278198242
    10. '       ' → logprob: -15.376188278198242

Token 225: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.061283644288778305
    2. '+d' → logprob: -3.311283588409424
    3. ' +' → logprob: -3.811283588409424
    4. '+i' → logprob: -7.186283588409424
    5. '-' → logprob: -9.811284065246582
    6. '+
' → logprob: -11.061284065246582
    7. 'd' → logprob: -11.311284065246582
    8. ' -' → logprob: -12.436284065246582
    9. '+D' → logprob: -13.061284065246582
    10. '+j' → logprob: -13.436284065246582

Token 226: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00033546582562848926
    2. ' d' → logprob: -8.000335693359375
    3. '1' → logprob: -18.625335693359375
    4. '
' → logprob: -19.375335693359375
    5. '	d' → logprob: -21.000335693359375
    6. '<|end|>' → logprob: -21.125335693359375
    7. ' ' → logprob: -22.000335693359375
    8. ')d' → logprob: -22.125335693359375
    9. '(d' → logprob: -22.375335693359375
    10. '[d' → logprob: -22.750335693359375

Token 227: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016378024592995644
    2. ' if' → logprob: -5.391377925872803
    3. '<n' → logprob: -5.641377925872803
    4. 'if' → logprob: -6.266377925872803
    5. '       ' → logprob: -6.266377925872803
    6. '
' → logprob: -6.891377925872803
    7. '<|end|>' → logprob: -7.266377925872803
    8. '               ' → logprob: -7.516377925872803
    9. '          ' → logprob: -7.641377925872803
    10. ' <' → logprob: -8.141378402709961

Token 228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005818352568894625
    2. ' if' → logprob: -5.8808183670043945
    3. '<|end|>' → logprob: -6.2558183670043945
    4. '
' → logprob: -7.7558183670043945
    5. '<|end|>' → logprob: -8.505818367004395
    6. '		' → logprob: -9.255818367004395
    7. 'if' → logprob: -9.880818367004395
    8. ' <' → logprob: -10.130818367004395
    9. '          ' → logprob: -10.255818367004395
    10. ' ' → logprob: -10.630818367004395

Token 229: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12394661456346512
    2. ' if' → logprob: -2.6239466667175293
    3. '           ' → logprob: -3.1239466667175293
    4. '
' → logprob: -10.623946189880371
    5. '```' → logprob: -11.623946189880371
    6. 'n' → logprob: -12.123946189880371
    7. '<|end|>' → logprob: -12.373946189880371
    8. ' ' → logprob: -12.623946189880371
    9. 'with' → logprob: -12.623946189880371
    10. ',' → logprob: -12.748946189880371

Token 230: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5231316089630127
    2. ' j' → logprob: -0.8981316089630127
    3. ' not' → logprob: -13.773131370544434
    4. ' ' → logprob: -13.773131370544434
    5. '	j' → logprob: -13.898131370544434
    6. '0' → logprob: -14.023131370544434
    7. '   ' → logprob: -14.023131370544434
    8. '```' → logprob: -14.273131370544434
    9. 'n' → logprob: -14.398131370544434
    10. 'not' → logprob: -15.148131370544434

Token 231: ' <' (ID: 464)
  Prédit: '<n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<n' → logprob: -0.6406630277633667
    2. '>=' → logprob: -1.1406630277633667
    3. ' >=' → logprob: -2.3906631469726562
    4. '<' → logprob: -4.015663146972656
    5. ' <' → logprob: -4.140663146972656
    6. ')' → logprob: -5.140663146972656
    7. '<|end|>' → logprob: -5.140663146972656
    8. ' n' → logprob: -5.390663146972656
    9. ')>=' → logprob: -5.890663146972656
    10. 'n' → logprob: -6.015663146972656

Token 232: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005530327325686812
    2. ' n' → logprob: -7.500553131103516
    3. '	n' → logprob: -16.875553131103516
    4. '
' → logprob: -17.000553131103516
    5. ')n' → logprob: -17.500553131103516
    6. '<n' → logprob: -18.625553131103516
    7. '           ' → logprob: -18.625553131103516
    8. '   ' → logprob: -18.750553131103516
    9. '(n' → logprob: -19.375553131103516
    10. ',n' → logprob: -19.500553131103516

Token 233: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1948562115430832
    2. ' and' → logprob: -2.3198561668395996
    3. ':' → logprob: -2.5698561668395996
    4. '               ' → logprob: -6.8198561668396
    5. '):
' → logprob: -7.3198561668396
    6. 'and' → logprob: -8.569856643676758
    7. '           ' → logprob: -8.944856643676758
    8. ',' → logprob: -10.319856643676758
    9. ' :
' → logprob: -10.819856643676758
    10. ':

' → logprob: -10.944856643676758

Token 234: ' (' (ID: 350)
  Prédit: '(win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(win' → logprob: -0.032347213476896286
    2. '((' → logprob: -3.6573472023010254
    3. '(not' → logprob: -5.657347202301025
    4. ' (' → logprob: -7.782347202301025
    5. '(j' → logprob: -7.907347202301025
    6. '(' → logprob: -8.032347679138184
    7. 'win' → logprob: -8.032347679138184
    8. '(i' → logprob: -8.407347679138184
    9. '(w' → logprob: -8.407347679138184
    10. '(d' → logprob: -8.532347679138184

Token 235: 'd' (ID: 67)
  Prédit: '(win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(win' → logprob: -0.362201988697052
    2. 'win' → logprob: -1.2372019290924072
    3. '(d' → logprob: -5.487202167510986
    4. '((' → logprob: -5.737202167510986
    5. 'd' → logprob: -6.112202167510986
    6. 'not' → logprob: -6.862202167510986
    7. '(not' → logprob: -7.112202167510986
    8. '(w' → logprob: -7.362202167510986
    9. ' win' → logprob: -7.612202167510986
    10. ' (' → logprob: -7.737202167510986

Token 236: 'pl' (ID: 528)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9804379940032959
    2. ' &' → logprob: -1.480437994003296
    3. 'win' → logprob: -2.480437994003296
    4. 'pl' → logprob: -3.230437994003296
    5. '+' → logprob: -3.355437994003296
    6. ',' → logprob: -3.355437994003296
    7. '&' → logprob: -3.730437994003296
    8. '==' → logprob: -4.105438232421875
    9. ' in' → logprob: -4.230438232421875
    10. ' not' → logprob: -4.355438232421875

Token 237: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.22565388679504395
    2. '[j' → logprob: -1.600653886795044
    3. ')[' → logprob: -9.725653648376465
    4. '[' → logprob: -9.850653648376465
    5. 'i' → logprob: -9.850653648376465
    6. 'j' → logprob: -10.475653648376465
    7. ')' → logprob: -11.100653648376465
    8. ' [' → logprob: -11.350653648376465
    9. '][' → logprob: -13.100653648376465
    10. '   ' → logprob: -13.225653648376465

Token 238: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05052071809768677
    2. '[i' → logprob: -3.550520658493042
    3. '[j' → logprob: -4.550520896911621
    4. ' &' → logprob: -5.175520896911621
    5. ']&' → logprob: -6.425520896911621
    6. '][' → logprob: -6.675520896911621
    7. '&' → logprob: -7.175520896911621
    8. '[' → logprob: -9.050520896911621
    9. '>>' → logprob: -9.175520896911621
    10. '   ' → logprob: -9.300520896911621

Token 239: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.31688547134399414
    2. ' &' → logprob: -1.3168854713439941
    3. '|' → logprob: -6.066885471343994
    4. '>>' → logprob: -7.691885471343994
    5. ' |' → logprob: -9.066884994506836
    6. ')' → logprob: -9.441884994506836
    7. '&
' → logprob: -9.566884994506836
    8. '&r' → logprob: -9.816884994506836
    9. '&i' → logprob: -10.066884994506836
    10. ' ' → logprob: -10.066884994506836

Token 240: ' d' (ID: 272)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.012154048308730125
    2. ' win' → logprob: -4.6371541023254395
    3. 'mask' → logprob: -6.5121541023254395
    4. '(win' → logprob: -7.7621541023254395
    5. '~' → logprob: -8.637153625488281
    6. '(' → logprob: -9.512153625488281
    7. '   ' → logprob: -9.637153625488281
    8. ' mask' → logprob: -10.387153625488281
    9. ' ~' → logprob: -10.762153625488281
    10. '	win' → logprob: -11.137153625488281

Token 241: 'pr' (ID: 638)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.11695791035890579
    2. '[i' → logprob: -2.366957902908325
    3. 'pr' → logprob: -4.491958141326904
    4. '[j' → logprob: -5.991958141326904
    5. 'p' → logprob: -6.866958141326904
    6. '[' → logprob: -7.241958141326904
    7. 'l' → logprob: -8.241957664489746
    8. '[p' → logprob: -8.741957664489746
    9. 'i' → logprob: -8.991957664489746
    10. 'r' → logprob: -9.366957664489746

Token 242: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004835226573050022
    2. '[j' → logprob: -5.37983512878418
    3. 'i' → logprob: -8.75483512878418
    4. '[' → logprob: -11.62983512878418
    5. 'j' → logprob: -11.75483512878418
    6. ' [' → logprob: -11.87983512878418
    7. '   ' → logprob: -12.12983512878418
    8. '```' → logprob: -12.62983512878418
    9. '[
' → logprob: -12.75483512878418
    10. ')' → logprob: -12.75483512878418

Token 243: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04828231409192085
    2. ')==' → logprob: -3.2982823848724365
    3. '):' → logprob: -5.298282146453857
    4. '):
' → logprob: -5.423282146453857
    5. ' )' → logprob: -7.673282146453857
    6. '==' → logprob: -8.923282623291016
    7. ')!=' → logprob: -9.423282623291016
    8. ' ==' → logprob: -10.423282623291016
    9. '[' → logprob: -11.548282623291016
    10. '))' → logprob: -11.673282623291016

Token 244: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004377022560220212
    2. 'd' → logprob: -8.00043773651123
    3. '0' → logprob: -10.37543773651123
    4. ' ' → logprob: -10.62543773651123
    5. '   ' → logprob: -10.75043773651123
    6. '           ' → logprob: -12.00043773651123
    7. '```' → logprob: -12.37543773651123
    8. ')' → logprob: -12.62543773651123
    9. '       ' → logprob: -12.87543773651123
    10. '
' → logprob: -13.93793773651123

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01820262521505356
    2. 'd' → logprob: -4.018202781677246
    3. '0' → logprob: -10.018202781677246
    4. '   ' → logprob: -13.143202781677246
    5. ' ' → logprob: -13.643202781677246
    6. 'j' → logprob: -13.768202781677246
    7. ' d' → logprob: -14.268202781677246
    8. '(d' → logprob: -14.518202781677246
    9. '```' → logprob: -14.768202781677246
    10. 'i' → logprob: -15.143202781677246

Token 246: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014417463913559914
    2. ')==' → logprob: -4.63941764831543
    3. '):' → logprob: -5.88941764831543
    4. '):
' → logprob: -6.51441764831543
    5. ' )' → logprob: -8.01441764831543
    6. '==' → logprob: -10.38941764831543
    7. '))' → logprob: -12.01441764831543
    8. ' ==' → logprob: -12.13941764831543
    9. ')!=' → logprob: -12.63941764831543
    10. ')**' → logprob: -12.88941764831543

Token 247: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08147712796926498
    2. ')==' → logprob: -2.581477165222168
    3. ' )' → logprob: -7.206477165222168
    4. '==' → logprob: -7.331477165222168
    5. '):' → logprob: -7.331477165222168
    6. '):
' → logprob: -8.206477165222168
    7. ')!=' → logprob: -8.706477165222168
    8. ' ==' → logprob: -9.581477165222168
    9. ')>>' → logprob: -12.331477165222168
    10. ')=' → logprob: -12.706477165222168

Token 248: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.010063344612717628
    2. ' win' → logprob: -5.385063171386719
    3. '(win' → logprob: -6.135063171386719
    4. 'mask' → logprob: -6.510063171386719
    5. '~' → logprob: -6.885063171386719
    6. '(' → logprob: -8.135063171386719
    7. '(~' → logprob: -8.635063171386719
    8. '   ' → logprob: -9.385063171386719
    9. ' ~' → logprob: -10.385063171386719
    10. ' (' → logprob: -10.510063171386719

Token 249: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.023466283455491066
    2. '[i' → logprob: -3.7734663486480713
    3. '[' → logprob: -9.273466110229492
    4. 'j' → logprob: -9.773466110229492
    5. '[
' → logprob: -10.648466110229492
    6. '
' → logprob: -11.273466110229492
    7. ')' → logprob: -11.273466110229492
    8. '[m' → logprob: -12.898466110229492
    9. '

' → logprob: -13.273466110229492
    10. ']' → logprob: -13.398466110229492

Token 250: ']):
' (ID: 51989)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.21829982101917267
    2. '[j' → logprob: -1.7182998657226562
    3. '[i' → logprob: -5.218299865722656
    4. ')' → logprob: -5.468299865722656
    5. ']):' → logprob: -5.468299865722656
    6. ']' → logprob: -6.593299865722656
    7. '):' → logprob: -7.343299865722656
    8. ']):
' → logprob: -7.968299865722656
    9. '[' → logprob: -8.968299865722656
    10. ']==' → logprob: -9.468299865722656

Token 251: '               ' (ID: 506)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.19421440362930298
    2. ':' → logprob: -2.194214344024658
    3. '!=' → logprob: -3.319214344024658
    4. ' ==' → logprob: -4.194214344024658
    5. ':
' → logprob: -5.444214344024658
    6. '=' → logprob: -6.319214344024658
    7. '|' → logprob: -6.444214344024658
    8. ' !=' → logprob: -6.444214344024658
    9. ' and' → logprob: -7.069214344024658
    10. 'and' → logprob: -7.069214344024658

Token 252: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.01929652877151966
    2. ' d' → logprob: -4.394296646118164
    3. '                   ' → logprob: -5.394296646118164
    4. '               ' → logprob: -6.394296646118164
    5. '           ' → logprob: -8.394296646118164
    6. '                       ' → logprob: -9.644296646118164
    7. '   ' → logprob: -10.019296646118164
    8. 'continue' → logprob: -10.269296646118164
    9. 'dp' → logprob: -10.394296646118164
    10. '
' → logprob: -11.144296646118164

Token 253: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.0013474960578605533
    2. 'pr' → logprob: -7.001347541809082
    3. 'p' → logprob: -7.751347541809082
    4. 'l' → logprob: -13.001347541809082
    5. 'pj' → logprob: -13.751347541809082
    6. 'rl' → logprob: -14.626347541809082
    7. 'Pl' → logprob: -15.126347541809082
    8. '[i' → logprob: -15.126347541809082
    9. ' pl' → logprob: -15.751347541809082
    10. 'r' → logprob: -15.751347541809082

Token 254: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.572941179503687e-05
    2. '[i' → logprob: -10.000045776367188
    3. '[' → logprob: -15.875045776367188
    4. 'j' → logprob: -17.000045776367188
    5. ' [' → logprob: -17.375045776367188
    6. '   ' → logprob: -18.875045776367188
    7. '[n' → logprob: -18.875045776367188
    8. '```' → logprob: -19.000045776367188
    9. '][' → logprob: -19.750045776367188
    10. '	j' → logprob: -19.875045776367188

Token 255: ']' (ID: 60)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.00027933192905038595
    2. ']' → logprob: -9.125279426574707
    3. ' |=' → logprob: -9.125279426574707
    4. ')' → logprob: -10.625279426574707
    5. '|=
' → logprob: -10.625279426574707
    6. ']|' → logprob: -12.125279426574707
    7. '=' → logprob: -12.500279426574707
    8. ')|' → logprob: -14.250279426574707
    9. ']=' → logprob: -14.625279426574707
    10. '^' → logprob: -15.000279426574707

Token 256: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0016096011968329549
    2. ' |=' → logprob: -6.626609802246094
    3. '=' → logprob: -8.251609802246094
    4. '|=
' → logprob: -11.001609802246094
    5. '^' → logprob: -12.876609802246094
    6. '||' → logprob: -14.751609802246094
    7. ' =' → logprob: -14.751609802246094
    8. '│' → logprob: -14.876609802246094
    9. ' |' → logprob: -15.251609802246094
    10. ' ' → logprob: -15.376609802246094

Token 257: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3150468170642853
    2. ' d' → logprob: -1.315046787261963
    3. '1' → logprob: -7.190046787261963
    4. '(' → logprob: -7.815046787261963
    5. ' ' → logprob: -8.065047264099121
    6. ' (' → logprob: -8.815047264099121
    7. '(d' → logprob: -9.565047264099121
    8. 'win' → logprob: -10.940047264099121
    9. ' win' → logprob: -11.190047264099121
    10. ' mask' → logprob: -11.440047264099121

Token 258: '1' (ID: 16)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.002896286314353347
    2. ' d' → logprob: -6.002896308898926
    3. '1' → logprob: -8.377896308898926
    4. '(' → logprob: -9.002896308898926
    5. '(d' → logprob: -11.127896308898926
    6. ' ' → logprob: -11.252896308898926
    7. 'win' → logprob: -11.502896308898926
    8. '   ' → logprob: -11.877896308898926
    9. ' (' → logprob: -12.377896308898926
    10. '	d' → logprob: -12.502896308898926

Token 259: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.03812514618039131
    2. ' <<' → logprob: -3.2881250381469727
    3. '<<(' → logprob: -9.538125038146973
    4. '0' → logprob: -12.288125038146973
    5. '<<<' → logprob: -12.913125038146973
    6. ' <<=' → logprob: -13.413125038146973
    7. '<' → logprob: -13.538125038146973
    8. ' ' → logprob: -15.038125038146973
    9. '```' → logprob: -15.413125038146973
    10. '<<"' → logprob: -15.788125038146973

Token 260: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007626626640558243
    2. 'j' → logprob: -4.882626533508301
    3. 'n' → logprob: -11.5076265335083
    4. ' i' → logprob: -11.6326265335083
    5. '	i' → logprob: -14.7576265335083
    6. ' j' → logprob: -15.3826265335083
    7. '_i' → logprob: -15.5076265335083
    8. '   ' → logprob: -16.007627487182617
    9. 'd' → logprob: -16.132627487182617
    10. '(i' → logprob: -16.382627487182617

Token 261: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1405596137046814
    2. '<|end|>' → logprob: -2.890559673309326
    3. '               ' → logprob: -3.140559673309326
    4. '
' → logprob: -3.640559673309326
    5. '            
' → logprob: -7.140559673309326
    6. '          ' → logprob: -7.140559673309326
    7. '       ' → logprob: -7.140559673309326
    8. '		' → logprob: -7.390559673309326
    9. '<|end|>' → logprob: -7.765559673309326
    10. '                   ' → logprob: -7.765559673309326

Token 262: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0501549132168293
    2. '               ' → logprob: -3.0501549243927
    3. '                   ' → logprob: -7.175154685974121
    4. '       ' → logprob: -8.425154685974121
    5. '          ' → logprob: -8.550154685974121
    6. '<|end|>' → logprob: -9.050154685974121
    7. '            ' → logprob: -9.675154685974121
    8. '              ' → logprob: -9.800154685974121
    9. '                ' → logprob: -9.800154685974121
    10. '   ' → logprob: -10.425154685974121

Token 263: ' j' (ID: 441)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11661658436059952
    2. '       ' → logprob: -3.7416164875030518
    3. '          ' → logprob: -3.9916164875030518
    4. '               ' → logprob: -4.241616725921631
    5. ' ' → logprob: -4.241616725921631
    6. '		' → logprob: -4.991616725921631
    7. '            ' → logprob: -4.991616725921631
    8. '   ' → logprob: -5.366616725921631
    9. '	' → logprob: -5.866616725921631
    10. '    ' → logprob: -5.991616725921631

Token 264: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3787200152873993
    2. '+=' → logprob: -1.5037200450897217
    3. ' +=' → logprob: -2.6287200450897217
    4. '=' → logprob: -4.503719806671143
    5. ' +' → logprob: -4.878719806671143
    6. ' ' → logprob: -7.253719806671143
    7. '==' → logprob: -8.5037202835083
    8. '<|end|>' → logprob: -8.6287202835083
    9. '++' → logprob: -8.7537202835083
    10. ' =' → logprob: -8.7537202835083

Token 265: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07915084809064865
    2. 'j' → logprob: -3.329150915145874
    3. 'n' → logprob: -3.829150915145874
    4. ' i' → logprob: -4.329150676727295
    5. 'd' → logprob: -6.454150676727295
    6. ' j' → logprob: -6.579150676727295
    7. '   ' → logprob: -6.829150676727295
    8. ' n' → logprob: -6.954150676727295
    9. ' ' → logprob: -9.329151153564453
    10. '    ' → logprob: -10.204151153564453

Token 266: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1616535633802414
    2. ' +' → logprob: -1.9116535186767578
    3. '-' → logprob: -7.411653518676758
    4. ' -' → logprob: -8.161653518676758
    5. '+d' → logprob: -8.536653518676758
    6. '+j' → logprob: -9.286653518676758
    7. '<|end|>' → logprob: -9.286653518676758
    8. ' ' → logprob: -9.536653518676758
    9. '+
' → logprob: -10.411653518676758
    10. 'd' → logprob: -11.536653518676758

Token 267: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00188211549539119
    2. '1' → logprob: -6.501882076263428
    3. ' d' → logprob: -7.876882076263428
    4. ' ' → logprob: -15.126882553100586
    5. '	d' → logprob: -17.376882553100586
    6. '
' → logprob: -17.626882553100586
    7. '```' → logprob: -18.376882553100586
    8. '   ' → logprob: -18.626882553100586
    9. '           ' → logprob: -18.751882553100586
    10. '(d' → logprob: -18.876882553100586

Token 268: '
' (ID: 198)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -5.0020742492051795e-05
    2. ' ' → logprob: -10.000049591064453
    3. '+' → logprob: -13.625049591064453
    4. '```' → logprob: -13.875049591064453
    5. '           ' → logprob: -14.375049591064453
    6. '-' → logprob: -14.750049591064453
    7. '<|end|>' → logprob: -15.250049591064453
    8. '        ' → logprob: -15.250049591064453
    9. '2' → logprob: -15.625049591064453
    10. '         ' → logprob: -15.875049591064453

Token 269: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7456957101821899
    2. '           ' → logprob: -1.24569571018219
    3. '<|end|>' → logprob: -1.74569571018219
    4. '            ' → logprob: -3.3706955909729004
    5. ' ' → logprob: -4.1206955909729
    6. 'if' → logprob: -5.7456955909729
    7. '<|end|>' → logprob: -6.3706955909729
    8. '          ' → logprob: -6.9956955909729
    9. '               ' → logprob: -7.1206955909729
    10. '		' → logprob: -7.7456955909729

Token 270: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09518053382635117
    2. '           ' → logprob: -2.4701805114746094
    3. ' if' → logprob: -5.095180511474609
    4. ' ' → logprob: -10.72018051147461
    5. '>' → logprob: -10.97018051147461
    6. '       ' → logprob: -11.34518051147461
    7. '	if' → logprob: -11.97018051147461
    8. '         ' → logprob: -12.22018051147461
    9. '   ' → logprob: -12.34518051147461
    10. '          ' → logprob: -12.34518051147461

Token 271: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.013236932456493378
    2. '0' → logprob: -4.388236999511719
    3. ' j' → logprob: -7.263236999511719
    4. 'i' → logprob: -11.513236999511719
    5. ' ' → logprob: -11.763236999511719
    6. '   ' → logprob: -12.388236999511719
    7. '-' → logprob: -14.388236999511719
    8. '	j' → logprob: -14.825736999511719
    9. '(j' → logprob: -14.888236999511719
    10. '  ' → logprob: -15.013236999511719

Token 272: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.12949223816394806
    2. '>=' → logprob: -2.5044922828674316
    3. ' >' → logprob: -3.7544922828674316
    4. '>' → logprob: -4.129492282867432
    5. ' ' → logprob: -8.754491806030273
    6. ' <' → logprob: -10.254491806030273
    7. '0' → logprob: -11.254491806030273
    8. ')' → logprob: -12.129491806030273
    9. ']>=' → logprob: -12.379491806030273
    10. ' in' → logprob: -13.004491806030273

Token 273: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017030329909175634
    2. ' ' → logprob: -6.376703262329102
    3. '   ' → logprob: -15.376703262329102
    4. '
' → logprob: -16.3767032623291
    5. ' ' → logprob: -16.6267032623291
    6. '    ' → logprob: -17.1267032623291
    7. '۰' → logprob: -17.1892032623291
    8. '           ' → logprob: -17.2517032623291
    9. 'n' → logprob: -17.5642032623291
    10. '  ' → logprob: -17.6267032623291

Token 274: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. 'd' → logprob: -17.125139236450195
    4. 'n' → logprob: -17.250139236450195
    5. '1' → logprob: -17.562639236450195
    6. '   ' → logprob: -17.625139236450195
    7. 'zero' → logprob: -17.937639236450195
    8. '
' → logprob: -18.125139236450195
    9. '۰' → logprob: -18.187639236450195
    10. '00' → logprob: -18.562639236450195

Token 275: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25343722105026245
    2. 'and' → logprob: -1.5034372806549072
    3. '           ' → logprob: -6.628437042236328
    4. '               ' → logprob: -8.878437042236328
    5. ':
' → logprob: -10.753437042236328
    6. '              ' → logprob: -11.878437042236328
    7. '          ' → logprob: -11.878437042236328
    8. ':' → logprob: -12.753437042236328
    9. '            ' → logprob: -13.253437042236328
    10. ' ' → logprob: -13.753437042236328

Token 276: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.2815757393836975
    2. ' (' → logprob: -1.4065756797790527
    3. ' not' → logprob: -8.781576156616211
    4. '(not' → logprob: -9.031576156616211
    5. '(j' → logprob: -9.781576156616211
    6. '           ' → logprob: -9.781576156616211
    7. '((' → logprob: -11.406576156616211
    8. 'not' → logprob: -11.906576156616211
    9. '   ' → logprob: -12.906576156616211
    10. '(' → logprob: -12.906576156616211

Token 277: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.014200292527675629
    2. '(d' → logprob: -4.639200210571289
    3. 'win' → logprob: -5.889200210571289
    4. ' d' → logprob: -6.889200210571289
    5. '(win' → logprob: -8.139200210571289
    6. ' (' → logprob: -9.389200210571289
    7. '   ' → logprob: -9.514200210571289
    8. '           ' → logprob: -9.889200210571289
    9. ' win' → logprob: -10.764200210571289
    10. '	d' → logprob: -11.264200210571289

Token 278: 'pl' (ID: 528)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.39310556650161743
    2. 'pl' → logprob: -1.1431055068969727
    3. 'p' → logprob: -5.143105506896973
    4. 'r' → logprob: -8.518105506896973
    5. 'l' → logprob: -9.268105506896973
    6. 'pls' → logprob: -11.518105506896973
    7. 'prs' → logprob: -11.893105506896973
    8. '_pr' → logprob: -12.080605506896973
    9. 'prt' → logprob: -12.205605506896973
    10. 'plt' → logprob: -12.393105506896973

Token 279: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07098520547151566
    2. '[j' → logprob: -2.6959853172302246
    3. 'i' → logprob: -7.195985317230225
    4. 'j' → logprob: -8.445984840393066
    5. '[' → logprob: -10.320984840393066
    6. '[
' → logprob: -11.820984840393066
    7. '   ' → logprob: -12.133484840393066
    8. ')' → logprob: -12.195984840393066
    9. ' [' → logprob: -12.383484840393066
    10. '```' → logprob: -12.633484840393066

Token 280: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006527475197799504
    2. ']&' → logprob: -7.37565279006958
    3. '&' → logprob: -12.000652313232422
    4. ']
' → logprob: -12.000652313232422
    5. '[' → logprob: -12.125652313232422
    6. ' ]' → logprob: -12.625652313232422
    7. '[j' → logprob: -14.000652313232422
    8. ' &' → logprob: -14.125652313232422
    9. '```' → logprob: -14.125652313232422
    10. '']' → logprob: -14.750652313232422

Token 281: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20157073438167572
    2. '1' → logprob: -1.701570749282837
    3. ']' → logprob: -8.826570510864258
    4. ' d' → logprob: -12.451570510864258
    5. '```' → logprob: -13.576570510864258
    6. ')' → logprob: -13.701570510864258
    7. '           ' → logprob: -14.076570510864258
    8. ' ' → logprob: -14.451570510864258
    9. 'j' → logprob: -14.701570510864258
    10. '   ' → logprob: -14.826570510864258

Token 282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5231548547744751
    2. 'd' → logprob: -0.8981548547744751
    3. ']' → logprob: -11.273155212402344
    4. ' d' → logprob: -12.398155212402344
    5. '
' → logprob: -12.523155212402344
    6. ' ' → logprob: -13.023155212402344
    7. '```' → logprob: -13.023155212402344
    8. 'j' → logprob: -13.398155212402344
    9. '   ' → logprob: -13.773155212402344
    10. ')' → logprob: -14.273155212402344

Token 283: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.028146805241703987
    2. '&' → logprob: -3.903146743774414
    3. ' &' → logprob: -5.528146743774414
    4. ']&' → logprob: -5.653146743774414
    5. ')' → logprob: -9.778146743774414
    6. ' ]' → logprob: -11.778146743774414
    7. ' ' → logprob: -12.278146743774414
    8. ']
' → logprob: -12.778146743774414
    9. 'd' → logprob: -12.903146743774414
    10. '&amp' → logprob: -13.153146743774414

Token 284: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.1798359602689743
    2. ' &' → logprob: -1.8048359155654907
    3. '&
' → logprob: -10.17983627319336
    4. '&amp' → logprob: -11.05483627319336
    5. ')' → logprob: -11.80483627319336
    6. ' &
' → logprob: -11.92983627319336
    7. '&nbsp' → logprob: -12.30483627319336
    8. ' ' → logprob: -12.42983627319336
    9. ']' → logprob: -12.92983627319336
    10. ')&' → logprob: -13.17983627319336

Token 285: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004041475709527731
    2. ' d' → logprob: -5.75404167175293
    3. 'win' → logprob: -7.12904167175293
    4. ' win' → logprob: -11.12904167175293
    5. '           ' → logprob: -11.50404167175293
    6. '          ' → logprob: -11.75404167175293
    7. '   ' → logprob: -11.87904167175293
    8. '    ' → logprob: -12.50404167175293
    9. ' ' → logprob: -13.00404167175293
    10. '       ' → logprob: -13.62904167175293

Token 286: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.5250458121299744
    2. 'pl' → logprob: -0.9000458121299744
    3. '[i' → logprob: -7.150045871734619
    4. 'l' → logprob: -8.025045394897461
    5. '[j' → logprob: -8.400045394897461
    6. 'r' → logprob: -8.900045394897461
    7. 'p' → logprob: -9.150045394897461
    8. '[' → logprob: -9.775045394897461
    9. 'pls' → logprob: -10.525045394897461
    10. 'i' → logprob: -10.775045394897461

Token 287: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.08458974957466125
    2. '[i' → logprob: -2.959589719772339
    3. 'j' → logprob: -3.584589719772339
    4. 'i' → logprob: -6.584589958190918
    5. '[' → logprob: -10.459589958190918
    6. ' j' → logprob: -10.584589958190918
    7. '[
' → logprob: -10.709589958190918
    8. '   ' → logprob: -10.834589958190918
    9. '	j' → logprob: -11.459589958190918
    10. ' [' → logprob: -12.209589958190918

Token 288: ']' (ID: 60)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.47640299797058105
    2. ' &' → logprob: -0.976402997970581
    3. ')' → logprob: -6.85140323638916
    4. ']' → logprob: -7.10140323638916
    5. 'and' → logprob: -8.97640323638916
    6. ' ' → logprob: -9.60140323638916
    7. ' and' → logprob: -9.72640323638916
    8. ')&' → logprob: -10.47640323638916
    9. '&
' → logprob: -10.72640323638916
    10. '[' → logprob: -10.85140323638916

Token 289: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.22543317079544067
    2. '&' → logprob: -1.600433111190796
    3. '&
' → logprob: -12.225433349609375
    4. 'and' → logprob: -12.600433349609375
    5. ' &
' → logprob: -12.600433349609375
    6. ' and' → logprob: -12.725433349609375
    7. '&amp' → logprob: -13.225433349609375
    8. ' ' → logprob: -14.100433349609375
    9. ' ' → logprob: -14.475433349609375
    10. '＆' → logprob: -14.850433349609375

Token 290: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.0031960124615579844
    2. ' win' → logprob: -5.7531962394714355
    3. '   ' → logprob: -11.878195762634277
    4. '           ' → logprob: -12.753195762634277
    5. '	win' → logprob: -13.128195762634277
    6. '(win' → logprob: -13.753195762634277
    7. '       ' → logprob: -13.753195762634277
    8. ' ' → logprob: -13.753195762634277
    9. '
' → logprob: -14.003195762634277
    10. '  ' → logprob: -14.628195762634277

Token 291: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05608312040567398
    2. '[j' → logprob: -2.9310832023620605
    3. 'i' → logprob: -7.0560832023620605
    4. 'j' → logprob: -8.306082725524902
    5. '[' → logprob: -9.931082725524902
    6. ' [' → logprob: -11.931082725524902
    7. '[d' → logprob: -12.181082725524902
    8. '   ' → logprob: -12.306082725524902
    9. '[
' → logprob: -12.306082725524902
    10. ' i' → logprob: -12.431082725524902

Token 292: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.03871914744377136
    2. '):' → logprob: -3.6637191772460938
    3. ']):
' → logprob: -4.788719177246094
    4. '])' → logprob: -6.413719177246094
    5. ']' → logprob: -6.913719177246094
    6. ')' → logprob: -7.413719177246094
    7. '):
' → logprob: -8.288719177246094
    8. ']:' → logprob: -8.538719177246094
    9. '-' → logprob: -9.413719177246094
    10. ')]' → logprob: -9.788719177246094

Token 293: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011670015752315521
    2. 'd' → logprob: -4.636670112609863
    3. '):
' → logprob: -7.386670112609863
    4. '              ' → logprob: -7.761670112609863
    5. ' d' → logprob: -8.261670112609863
    6. ')' → logprob: -8.761670112609863
    7. ':' → logprob: -9.136670112609863
    8. ':
' → logprob: -9.511670112609863
    9. '           ' → logprob: -9.636670112609863
    10. '):' → logprob: -9.636670112609863

Token 294: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.009638271294534206
    2. ' d' → logprob: -4.88463830947876
    3. '           ' → logprob: -6.63463830947876
    4. '               ' → logprob: -7.75963830947876
    5. '                   ' → logprob: -8.384637832641602
    6. '   ' → logprob: -11.384637832641602
    7. '          ' → logprob: -11.384637832641602
    8. '            ' → logprob: -12.009637832641602
    9. '              ' → logprob: -12.134637832641602
    10. ' ' → logprob: -12.134637832641602

Token 295: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.03682117536664009
    2. 'pl' → logprob: -3.411821126937866
    3. 'p' → logprob: -5.786821365356445
    4. 'r' → logprob: -9.661821365356445
    5. 'l' → logprob: -11.036821365356445
    6. 'PR' → logprob: -12.911821365356445
    7. 'pri' → logprob: -13.036821365356445
    8. ' pr' → logprob: -13.161821365356445
    9. 'prt' → logprob: -13.161821365356445
    10. '_pr' → logprob: -13.349321365356445

Token 296: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04868388548493385
    2. '[j' → logprob: -3.0486838817596436
    3. 'i' → logprob: -9.548684120178223
    4. '[' → logprob: -11.298684120178223
    5. 'j' → logprob: -11.798684120178223
    6. '[d' → logprob: -13.673684120178223
    7. '```' → logprob: -14.548684120178223
    8. '   ' → logprob: -15.173684120178223
    9. '[
' → logprob: -15.173684120178223
    10. '
' → logprob: -15.173684120178223

Token 297: ']' (ID: 60)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0028203281108289957
    2. ']' → logprob: -6.2528204917907715
    3. ' |=' → logprob: -7.2528204917907715
    4. ')' → logprob: -9.252820014953613
    5. ']|' → logprob: -9.502820014953613
    6. ')|' → logprob: -12.502820014953613
    7. '|=
' → logprob: -12.877820014953613
    8. ' ' → logprob: -13.877820014953613
    9. '=' → logprob: -14.002820014953613
    10. ' ]' → logprob: -14.127820014953613

Token 298: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -4.036524842376821e-05
    2. ' |=' → logprob: -10.125040054321289
    3. '=' → logprob: -15.750040054321289
    4. '|=
' → logprob: -16.25004005432129
    5. '│' → logprob: -18.12504005432129
    6. '<<' → logprob: -19.50004005432129
    7. ')|' → logprob: -19.50004005432129
    8. '```' → logprob: -19.62504005432129
    9. '"|' → logprob: -19.62504005432129
    10. '||' → logprob: -20.00004005432129

Token 299: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.061969365924596786
    2. ' ' → logprob: -2.81196928024292
    3. '(' → logprob: -14.686969757080078
    4. '   ' → logprob: -14.811969757080078
    5. 'd' → logprob: -15.436969757080078
    6. ' (' → logprob: -15.436969757080078
    7. '`' → logprob: -16.186969757080078
    8. ' ' → logprob: -16.186969757080078
    9. ' d' → logprob: -16.311969757080078
    10. '0' → logprob: -16.686969757080078

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001246348983841017
    2. ' ' → logprob: -9.00012493133545
    3. '(' → logprob: -14.37512493133545
    4. 'd' → logprob: -14.50012493133545
    5. '   ' → logprob: -17.125123977661133
    6. '
' → logprob: -18.375123977661133
    7. '[' → logprob: -18.375123977661133
    8. ' (' → logprob: -18.500123977661133
    9. ' d' → logprob: -18.875123977661133
    10. '0' → logprob: -19.000123977661133

Token 301: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.16510386765003204
    2. ' <<' → logprob: -1.9151039123535156
    3. '<' → logprob: -5.790103912353516
    4. ' ' → logprob: -7.165103912353516
    5. 'i' → logprob: -8.915103912353516
    6. '<<<' → logprob: -8.915103912353516
    7. '1' → logprob: -8.915103912353516
    8. '>>' → logprob: -9.040103912353516
    9. '0' → logprob: -9.540103912353516
    10. '   ' → logprob: -9.790103912353516

Token 302: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001992490579141304
    2. ' i' → logprob: -8.625199317932129
    3. 'j' → logprob: -11.250199317932129
    4. '   ' → logprob: -12.500199317932129
    5. ' ' → logprob: -13.500199317932129
    6. '(i' → logprob: -14.375199317932129
    7. '	i' → logprob: -15.500199317932129
    8. 'd' → logprob: -15.875199317932129
    9. '[i' → logprob: -16.000198364257812
    10. '     ' → logprob: -16.250198364257812

Token 303: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 304: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 305: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02185278758406639
    2. 'if' → logprob: -4.146852970123291
    3. 'print' → logprob: -6.146852970123291
    4. 'for' → logprob: -6.521852970123291
    5. '<|end|>' → logprob: -7.271852970123291
    6. 'def' → logprob: -8.146852493286133
    7. 'return' → logprob: -8.396852493286133
    8. '#' (adapté à ' #') → logprob: -8.771852493286133
    9. '...' → logprob: -9.021852493286133
    10. ' for' → logprob: -9.396852493286133

Token 306: ' Count' (ID: 6789)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.7106075286865234
    2. '   ' → logprob: -1.8356075286865234
    3. 'ans' → logprob: -1.9606075286865234
    4. 'dp' → logprob: -2.4606075286865234
    5. 'for' → logprob: -2.5856075286865234
    6. ' res' → logprob: -2.5856075286865234
    7. 'answer' → logprob: -2.9606075286865234
    8. 'result' → logprob: -3.0856075286865234
    9. 'print' → logprob: -3.7106075286865234
    10. ' ans' → logprob: -3.9606075286865234

Token 307: ' set' (ID: 920)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9228227138519287
    2. 'count' → logprob: -1.5478227138519287
    3. 'cnt' → logprob: -1.9228227138519287
    4. 'result' → logprob: -2.5478227138519287
    5. 'ans' → logprob: -3.0478227138519287
    6. 'answer' → logprob: -3.5478227138519287
    7. ' res' → logprob: -3.5478227138519287
    8. ' ans' → logprob: -3.5478227138519287
    9. '   ' → logprob: -3.9228227138519287
    10. ' count' → logprob: -5.672822952270508

Token 308: ' bits' (ID: 18189)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2619264125823975
    2. '_bits' → logprob: -1.2619264125823975
    3. 'bits' → logprob: -1.6369264125823975
    4. 'count' → logprob: -2.1369264125823975
    5. 's' → logprob: -2.6369264125823975
    6. ' bits' → logprob: -3.7619264125823975
    7. '_count' → logprob: -5.261926651000977
    8. 'counts' → logprob: -5.636926651000977
    9. '   ' → logprob: -5.761926651000977
    10. '_counts' → logprob: -5.886926651000977

Token 309: ' in' (ID: 306)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -1.0190805196762085
    2. 'count' → logprob: -2.019080638885498
    3. 'result' → logprob: -2.144080638885498
    4. '   ' → logprob: -2.269080638885498
    5. ' result' → logprob: -2.519080638885498
    6. 'cnt' → logprob: -3.144080638885498
    7. 'res' → logprob: -3.394080638885498
    8. ' count' → logprob: -3.644080638885498
    9. ' res' → logprob: -3.644080638885498
    10. 'ans' → logprob: -3.894080638885498

Token 310: ' the' (ID: 290)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.22846905887126923
    2. 'bin' → logprob: -2.353469133377075
    3. 'sum' → logprob: -2.603469133377075
    4. 'd' → logprob: -3.853469133377075
    5. ' win' → logprob: -5.478468894958496
    6. ' bin' → logprob: -6.103468894958496
    7. ' sum' → logprob: -6.353468894958496
    8. 'range' → logprob: -6.603468894958496
    9. ' d' → logprob: -6.728468894958496
    10. '   ' → logprob: -7.353468894958496

Token 311: ' intersection' (ID: 42002)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.32158681750297546
    2. ' win' → logprob: -2.571586847305298
    3. 'd' → logprob: -3.196586847305298
    4. 'result' → logprob: -3.571586847305298
    5. 'range' → logprob: -3.571586847305298
    6. ' result' → logprob: -4.321586608886719
    7. ' d' → logprob: -4.446586608886719
    8. ' range' → logprob: -4.446586608886719
    9. 'final' → logprob: -4.446586608886719
    10. ' final' → logprob: -4.571586608886719

Token 312: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08832548558712006
    2. ' ans' → logprob: -3.7133255004882812
    3. ' result' → logprob: -3.9633255004882812
    4. ' res' → logprob: -4.963325500488281
    5. ' count' → logprob: -5.088325500488281
    6. ' cnt' → logprob: -5.213325500488281
    7. 'count' → logprob: -5.213325500488281
    8. 'result' → logprob: -5.213325500488281
    9. 'cnt' → logprob: -5.713325500488281
    10. ' answer' → logprob: -6.088325500488281

Token 313: ' possible' (ID: 4149)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.5962947607040405
    2. 'd' → logprob: -0.9712947607040405
    3. ' d' → logprob: -3.34629487991333
    4. ' win' → logprob: -3.59629487991333
    5. '(win' → logprob: -5.22129487991333
    6. '   ' → logprob: -6.47129487991333
    7. '(d' → logprob: -7.97129487991333
    8. '(' → logprob: -8.471294403076172
    9. ' ' → logprob: -9.096294403076172
    10. ' (' → logprob: -9.471294403076172

Token 314: ' champions' (ID: 58926)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8711321353912354
    2. 'positions' → logprob: -1.2461321353912354
    3. 'm' → logprob: -1.9961321353912354
    4. 'ranges' → logprob: -2.6211321353912354
    5. ' positions' → logprob: -4.121131896972656
    6. 'states' → logprob: -4.246131896972656
    7. ' d' → logprob: -4.871131896972656
    8. 'interval' → logprob: -4.996131896972656
    9. 'mask' → logprob: -5.121131896972656
    10. 'win' → logprob: -5.246131896972656

Token 315: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05715101584792137
    2. ' result' → logprob: -3.1821510791778564
    3. 'result' → logprob: -5.182150840759277
    4. ' ans' → logprob: -5.557150840759277
    5. ' answer' → logprob: -7.307150840759277
    6. ' res' → logprob: -7.432150840759277
    7. ' count' → logprob: -7.557150840759277
    8. ' cnt' → logprob: -7.807150840759277
    9. 'count' → logprob: -7.932150840759277
    10. 'res' → logprob: -8.182150840759277

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05722486600279808
    2. ' result' → logprob: -3.932224750518799
    3. ' ans' → logprob: -4.307224750518799
    4. ' res' → logprob: -5.057224750518799
    5. 'result' → logprob: -5.807224750518799
    6. ' cnt' → logprob: -6.307224750518799
    7. ' for' → logprob: -6.557224750518799
    8. 'res' → logprob: -6.682224750518799
    9. ' possible' → logprob: -6.682224750518799
    10. ' count' → logprob: -6.807224750518799

Token 317: ' print' (ID: 2123)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.3276687860488892
    2. ' ans' → logprob: -1.3276687860488892
    3. ' res' → logprob: -1.5776687860488892
    4. 'result' → logprob: -2.8276686668395996
    5. 'ans' → logprob: -2.9526686668395996
    6. ' result' → logprob: -3.2026686668395996
    7. '   ' → logprob: -3.3276686668395996
    8. 'cnt' → logprob: -4.5776686668396
    9. ' cnt' → logprob: -4.8276686668396
    10. 'mask' → logprob: -5.2026686668396

Token 318: '((' (ID: 2054)
  Prédit: '(bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bin' → logprob: -0.002817358821630478
    2. '((' → logprob: -6.627817153930664
    3. '(sum' → logprob: -7.002817153930664
    4. '(d' → logprob: -8.252817153930664
    5. '(' → logprob: -9.252817153930664
    6. '(pop' → logprob: -9.377817153930664
    7. 'bin' → logprob: -9.627817153930664
    8. '(len' → logprob: -11.127817153930664
    9. '(bit' → logprob: -11.127817153930664
    10. '(bits' → logprob: -11.627817153930664

Token 319: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05796096473932266
    2. 'bin' → logprob: -2.9329609870910645
    3. '(d' → logprob: -6.6829609870910645
    4. 'sum' → logprob: -7.4329609870910645
    5. '(bin' → logprob: -7.8079609870910645
    6. 'len' → logprob: -8.557960510253906
    7. '(' → logprob: -8.807960510253906
    8. ' d' → logprob: -9.307960510253906
    9. 'pop' → logprob: -9.432960510253906
    10. ' bin' → logprob: -9.807960510253906

Token 320: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.00038825106457807124
    2. 'pr' → logprob: -8.500388145446777
    3. 'p' → logprob: -8.625388145446777
    4. 'l' → logprob: -13.625388145446777
    5. '[' → logprob: -14.125388145446777
    6. 'r' → logprob: -14.125388145446777
    7. '
' → logprob: -14.500388145446777
    8. ')' → logprob: -14.875388145446777
    9. '   ' → logprob: -15.375388145446777
    10. ' pl' → logprob: -15.750388145446777

Token 321: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.1441415548324585
    2. '[n' → logprob: -2.019141674041748
    3. '[' → logprob: -6.644141674041748
    4. 'n' → logprob: -9.51914119720459
    5. '.count' → logprob: -11.64414119720459
    6. '   ' → logprob: -11.95664119720459
    7. '[len' → logprob: -12.01914119720459
    8. '.index' → logprob: -12.20664119720459
    9. '[(' → logprob: -12.20664119720459
    10. '
' → logprob: -12.51914119720459

Token 322: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -14.562501907348633
    3. '   ' → logprob: -14.875001907348633
    4. '
' → logprob: -16.125001907348633
    5. '```' → logprob: -16.125001907348633
    6. '2' → logprob: -16.250001907348633
    7. ')' → logprob: -16.687501907348633
    8. '  ' → logprob: -17.312501907348633
    9. '`' → logprob: -17.812501907348633
    10. ' ' → logprob: -18.000001907348633

Token 323: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011163486167788506
    2. ']&' → logprob: -5.386163711547852
    3. '&' → logprob: -5.761163711547852
    4. ')' → logprob: -6.761163711547852
    5. '[' → logprob: -7.386163711547852
    6. ' ]' → logprob: -7.761163711547852
    7. '])' → logprob: -8.261163711547852
    8. '|' → logprob: -8.886163711547852
    9. '-' → logprob: -9.011163711547852
    10. ')&' → logprob: -9.136163711547852

Token 324: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.06245451793074608
    2. ' &' → logprob: -2.9374544620513916
    3. ')' → logprob: -5.312454700469971
    4. ')&' → logprob: -7.062454700469971
    5. '&
' → logprob: -7.687454700469971
    6. '&nbsp' → logprob: -8.937454223632812
    7. ' ' → logprob: -8.937454223632812
    8. '   ' → logprob: -9.062454223632812
    9. ' ' → logprob: -9.062454223632812
    10. '|' → logprob: -9.187454223632812

Token 325: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0630200207233429
    2. ' d' → logprob: -2.8130199909210205
    3. '   ' → logprob: -7.5630202293396
    4. ' ' → logprob: -8.438019752502441
    5. 'win' → logprob: -9.188019752502441
    6. '  ' → logprob: -9.563019752502441
    7. ' win' → logprob: -9.938019752502441
    8. '    ' → logprob: -11.063019752502441
    9. '	d' → logprob: -11.375519752502441
    10. ' (' → logprob: -11.688019752502441

Token 326: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.009251520968973637
    2. 'r' → logprob: -4.759251594543457
    3. 'pl' → logprob: -7.509251594543457
    4. ' pr' → logprob: -9.884251594543457
    5. 'p' → logprob: -10.884251594543457
    6. 'l' → logprob: -13.009251594543457
    7. '   ' → logprob: -13.384251594543457
    8. '  ' → logprob: -13.509251594543457
    9. '	pr' → logprob: -13.759251594543457
    10. '_pr' → logprob: -13.884251594543457

Token 327: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005253206938505173
    2. '[-' → logprob: -5.380253314971924
    3. '0' → logprob: -7.380253314971924
    4. '   ' → logprob: -12.630252838134766
    5. ')[' → logprob: -13.005252838134766
    6. '[
' → logprob: -13.880252838134766
    7. ' [' → logprob: -14.255252838134766
    8. '
' → logprob: -14.755252838134766
    9. ' ' → logprob: -15.505252838134766
    10. '\[' → logprob: -15.630252838134766

Token 328: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.546478935983032e-05
    2. ' ' → logprob: -11.000025749206543
    3. '   ' → logprob: -12.250025749206543
    4. '[' → logprob: -12.875025749206543
    5. '    ' → logprob: -15.125025749206543
    6. '       ' → logprob: -15.250025749206543
    7. '(' → logprob: -15.875025749206543
    8. '  ' → logprob: -16.000024795532227
    9. '1' → logprob: -16.250024795532227
    10. '     ' → logprob: -16.312524795532227

Token 329: ']).' (ID: 21953)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3613995313644409
    2. '])' → logprob: -1.611399531364441
    3. ').' → logprob: -2.9863996505737305
    4. '))' → logprob: -3.6113996505737305
    5. ']).' → logprob: -4.4863996505737305
    6. ']))' → logprob: -5.3613996505737305
    7. ')).' → logprob: -5.6113996505737305
    8. ' )' → logprob: -6.2363996505737305
    9. ')))' → logprob: -6.9863996505737305
    10. ').__' → logprob: -6.9863996505737305

Token 330: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.00027420982951298356
    2. 'count' → logprob: -9.000274658203125
    3. '__' → logprob: -9.625274658203125
    4. ' bit' → logprob: -10.625274658203125
    5. 'pop' → logprob: -11.250274658203125
    6. '```' → logprob: -11.250274658203125
    7. '.bit' → logprob: -11.750274658203125
    8. ' ' → logprob: -11.750274658203125
    9. '   ' → logprob: -12.250274658203125
    10. '
' → logprob: -12.375274658203125

Token 331: '_count' (ID: 7536)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.06201529875397682
    2. '_count' → logprob: -2.8120152950286865
    3. 'c' → logprob: -10.937015533447266
    4. 'set' → logprob: -11.812015533447266
    5. '```' → logprob: -12.187015533447266
    6. 'ount' → logprob: -12.562015533447266
    7. 'cnt' → logprob: -12.687015533447266
    8. '_length' → logprob: -13.062015533447266
    9. '   ' → logprob: -13.187015533447266
    10. '
' → logprob: -13.812015533447266

Token 332: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.006743200588971376
    2. '()' → logprob: -5.006743431091309
    3. '())
' → logprob: -11.006743431091309
    4. ')' → logprob: -12.006743431091309
    5. '()))' → logprob: -13.381743431091309
    6. ' ())' → logprob: -13.631743431091309
    7. '();)' → logprob: -14.131743431091309
    8. '()
' → logprob: -14.381743431091309
    9. '());' → logprob: -15.381743431091309
    10. '(),' → logprob: -15.631743431091309

Token 333: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 334: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 332
Tokens correctement prédits (1ère position, stricte): 115
Tokens correctement prédits (1ère position, avec adaptation): 123
Tokens correctement prédits (top 10): 263
Précision stricte (1ère position): 34.64%
Précision adaptée (1ère position): 37.05%
Précision (top 10): 79.22%
================================================================================
