================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:22:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_vals = input().split(" ")
num_A, num_B, num_coupons = [int(input_vals[idx]) for idx in range(3)]

list_A = [int(val) for val in input().split(" ")]
list_B = [int(val) for val in input().split(" ")]

coupon_list = []
for idx_coupon in range(num_coupons):
    coupon_vals = [int(val) for val in input().split(" ")]
    coupon_list.append(coupon_vals)

min_total_price = min(list_A) + min(list_B)
for coupon in coupon_list:
    idx_A, idx_B, discount = coupon
    coupon_price = list_A[idx_A - 1] + list_B[idx_B - 1] - discount
    if coupon_price < min_total_price:
        min_total_price = coupon_price

print(min_total_price)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_vals' (ID: 71688)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.6937349438667297
    2. '[' → logprob: -1.443734884262085
    3. ' [' → logprob: -1.443734884262085
    4. '[]' → logprob: -4.068735122680664
    5. '[input' → logprob: -5.568735122680664
    6. 'input' → logprob: -5.943735122680664
    7. ' ' → logprob: -5.943735122680664
    8. ' input' → logprob: -7.568735122680664
    9. ' "' → logprob: -7.943735122680664
    10. ' {}' → logprob: -8.193735122680664

Token 4: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0037845235783606768
    2. ''' → logprob: -6.378784656524658
    3. '('' → logprob: -7.128784656524658
    4. '"' → logprob: -8.0037841796875
    5. '[' → logprob: -8.1287841796875
    6. '```' → logprob: -8.8787841796875
    7. '()' → logprob: -9.0037841796875
    8. '("("' → logprob: -9.2537841796875
    9. '(
' → logprob: -9.3787841796875
    10. '`' → logprob: -10.1287841796875

Token 5: 'split' (ID: 13627)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.5560025572776794
    2. '.strip' → logprob: -1.3060026168823242
    3. '.' → logprob: -2.806002616882324
    4. '()' → logprob: -3.681002616882324
    5. 'split' → logprob: -4.056002616882324
    6. ')' → logprob: -4.181002616882324
    7. '```' → logprob: -4.556002616882324
    8. '.lower' → logprob: -5.056002616882324
    9. 'strip' → logprob: -5.431002616882324
    10. '.replace' → logprob: -6.181002616882324

Token 6: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002523992152418941
    2. '()' → logprob: -9.000252723693848
    3. '`' → logprob: -10.500252723693848
    4. '('' → logprob: -10.875252723693848
    5. '("("' → logprob: -11.000252723693848
    6. '```' → logprob: -11.000252723693848
    7. '(
' → logprob: -11.250252723693848
    8. '(

' → logprob: -11.375252723693848
    9. '(`' → logprob: -11.875252723693848
    10. ' (' → logprob: -12.375252723693848

Token 7: ' ")
' (ID: 31232)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2026834487915039
    2. '")' → logprob: -1.702683448791504
    3. '"' → logprob: -6.952683448791504
    4. ',' → logprob: -9.452683448791504
    5. ' )' → logprob: -9.452683448791504
    6. ' ")' → logprob: -9.952683448791504
    7. ')")' → logprob: -10.327683448791504
    8. '')' → logprob: -10.452683448791504
    9. ' ' → logprob: -11.452683448791504
    10. '[' → logprob: -11.952683448791504

Token 8: 'num' (ID: 4571)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8135964274406433
    2. '=' → logprob: -2.063596487045288
    3. 'if' → logprob: -2.188596487045288
    4. 'for' → logprob: -2.188596487045288
    5. 'x' → logprob: -2.313596487045288
    6. '[i' → logprob: -3.938596487045288
    7. '.' → logprob: -3.938596487045288
    8. 'n' → logprob: -4.188596248626709
    9. '`' → logprob: -4.813596248626709
    10. 'i' → logprob: -4.938596248626709

Token 9: '_A' (ID: 6829)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3225402534008026
    2. '_' → logprob: -1.322540283203125
    3. '_s' → logprob: -5.572540283203125
    4. '_vals' → logprob: -5.572540283203125
    5. 'ber' → logprob: -8.197540283203125
    6. '_values' → logprob: -8.572540283203125
    7. '1' → logprob: -8.572540283203125
    8. ' =' → logprob: -9.197540283203125
    9. '_tokens' → logprob: -9.447540283203125
    10. '[' → logprob: -9.447540283203125

Token 10: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0026560360565781593
    2. '_' → logprob: -6.877655982971191
    3. '=' → logprob: -7.627655982971191
    4. ' =' → logprob: -7.877655982971191
    5. '[' → logprob: -8.002655982971191
    6. '_s' → logprob: -8.252655982971191
    7. ' s' → logprob: -9.377655982971191
    8. ')' → logprob: -11.002655982971191
    9. '[]' → logprob: -11.502655982971191
    10. ''s' → logprob: -11.877655982971191

Token 11: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.004806515295058489
    2. ' num' → logprob: -5.6298065185546875
    3. 'input' → logprob: -6.7548065185546875
    4. '=' → logprob: -11.004806518554688
    5. '=num' → logprob: -12.129806518554688
    6. ' =' → logprob: -12.379806518554688
    7. ' input' → logprob: -12.629806518554688
    8. '*num' → logprob: -13.004806518554688
    9. ' ' → logprob: -13.629806518554688
    10. '=input' → logprob: -13.629806518554688

Token 12: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.0311485193669796
    2. '_' → logprob: -3.5311484336853027
    3. '_A' → logprob: -6.656148433685303
    4. 'B' → logprob: -9.906148910522461
    5. '```' → logprob: -10.531148910522461
    6. ' _' → logprob: -12.156148910522461
    7. '_BGR' → logprob: -12.656148910522461
    8. '<|end|>' → logprob: -12.781148910522461
    9. '_S' → logprob: -13.031148910522461
    10. '_a' → logprob: -13.156148910522461

Token 13: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.527270495891571
    2. '=' → logprob: -0.902270495891571
    3. ',' → logprob: -5.527270317077637
    4. '[' → logprob: -9.277270317077637
    5. ' ' → logprob: -10.652270317077637
    6. ' =
' → logprob: -11.527270317077637
    7. ')' → logprob: -11.777270317077637
    8. ' ,' → logprob: -11.902270317077637
    9. '=

' → logprob: -12.527270317077637
    10. ' =[' → logprob: -12.652270317077637

Token 14: ' num' (ID: 2269)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5009706616401672
    2. 'input' → logprob: -1.3759706020355225
    3. '=' → logprob: -2.6259706020355225
    4. ' input' → logprob: -2.7509706020355225
    5. '=input' → logprob: -5.625970840454102
    6. ' ' → logprob: -7.625970840454102
    7. 'int' → logprob: -7.875970840454102
    8. '*' → logprob: -8.750970840454102
    9. ' *' → logprob: -9.125970840454102
    10. 'num' → logprob: -9.375970840454102

Token 15: '_c' (ID: 1303)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25337496399879456
    2. '_C' → logprob: -1.5033749341964722
    3. '_A' → logprob: -7.003375053405762
    4. '_)' → logprob: -9.503375053405762
    5. '_

' → logprob: -9.878375053405762
    6. 'C' → logprob: -10.003375053405762
    7. '_S' → logprob: -10.128375053405762
    8. '_c' → logprob: -10.253375053405762
    9. '_,' → logprob: -10.378375053405762
    10. '__' → logprob: -10.378375053405762

Token 16: 'ou' (ID: 283)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7091871500015259
    2. ' =' → logprob: -0.7091871500015259
    3. ',' → logprob: -4.334187030792236
    4. '_' → logprob: -6.334187030792236
    5. ')' → logprob: -7.459187030792236
    6. ' ' → logprob: -8.959187507629395
    7. '[' → logprob: -9.209187507629395
    8. '<|end|>' → logprob: -9.959187507629395
    9. '_=' → logprob: -10.084187507629395
    10. ' ,' → logprob: -10.584187507629395

Token 17: 'pons' (ID: 2987)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.029908889904618263
    2. 'nts' → logprob: -3.6549088954925537
    3. 'n' → logprob: -5.654908657073975
    4. '_nt' → logprob: -9.904909133911133
    5. '=' → logprob: -10.654909133911133
    6. '```' → logprob: -11.904909133911133
    7. ',' → logprob: -12.529909133911133
    8. 'nty' → logprob: -12.529909133911133
    9. ' nt' → logprob: -12.654909133911133
    10. ' =' → logprob: -13.279909133911133

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11308754235506058
    2. '=' → logprob: -2.2380876541137695
    3. ',' → logprob: -8.36308765411377
    4. '[' → logprob: -11.48808765411377
    5. ')' → logprob: -11.86308765411377
    6. ' =
' → logprob: -12.48808765411377
    7. ' ,' → logprob: -12.61308765411377
    8. ' ' → logprob: -13.48808765411377
    9. '  ' → logprob: -13.61308765411377
    10. '<|end|>' → logprob: -14.11308765411377

Token 19: ' [' (ID: 723)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8085994124412537
    2. 'map' → logprob: -1.4335994720458984
    3. ' map' → logprob: -2.0585994720458984
    4. ' input' → logprob: -2.3085994720458984
    5. 'int' → logprob: -2.5585994720458984
    6. ' int' → logprob: -4.558599472045898
    7. '[int' → logprob: -7.183599472045898
    8. '[input' → logprob: -8.433599472045898
    9. ' [' → logprob: -9.558599472045898
    10. '[' → logprob: -10.558599472045898

Token 20: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.729906196298543e-06
    2. ' int' → logprob: -11.750009536743164
    3. ']int' → logprob: -14.250009536743164
    4. '0' → logprob: -14.375009536743164
    5. '(int' → logprob: -15.750009536743164
    6. 'input' → logprob: -15.750009536743164
    7. ']' → logprob: -16.375009536743164
    8. 'map' → logprob: -16.750009536743164
    9. '   ' → logprob: -16.750009536743164
    10. '```' → logprob: -17.125009536743164

Token 21: '(input' (ID: 10054)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.17931346595287323
    2. '(i' → logprob: -2.4293134212493896
    3. '(val' → logprob: -2.6793134212493896
    4. '(' → logprob: -5.304313659667969
    5. '(s' → logprob: -6.929313659667969
    6. ']' → logprob: -7.554313659667969
    7. '(v' → logprob: -8.054313659667969
    8. '(value' → logprob: -8.804313659667969
    9. '(token' → logprob: -8.929313659667969
    10. '(input' → logprob: -9.429313659667969

Token 22: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.03438577800989151
    2. '_val' → logprob: -4.659385681152344
    3. 'Vals' → logprob: -5.159385681152344
    4. '(' → logprob: -5.534385681152344
    5. '())' → logprob: -5.659385681152344
    6. 'vals' → logprob: -6.159385681152344
    7. ')' → logprob: -6.409385681152344
    8. '()' → logprob: -6.659385681152344
    9. '_' → logprob: -6.784385681152344
    10. '(vals' → logprob: -6.784385681152344

Token 23: '[idx' (ID: 25582)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31389543414115906
    2. '[i' → logprob: -1.3138954639434814
    3. '[token' → logprob: -8.063895225524902
    4. '[idx' → logprob: -9.313895225524902
    5. '[index' → logprob: -9.563895225524902
    6. ')]' → logprob: -9.938895225524902
    7. '[n' → logprob: -11.313895225524902
    8. '[]' → logprob: -11.438895225524902
    9. '[
' → logprob: -11.438895225524902
    10. '[count' → logprob: -11.563895225524902

Token 24: '])' (ID: 4636)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.012233308516442776
    2. ')' → logprob: -4.762233257293701
    3. '[idx' → logprob: -5.887233257293701
    4. ')])' → logprob: -7.637233257293701
    5. '])' → logprob: -8.26223373413086
    6. '])]' → logprob: -10.63723373413086
    7. ']' → logprob: -10.88723373413086
    8. 'idx' → logprob: -11.01223373413086
    9. '[' → logprob: -11.26223373413086
    10. ' ' → logprob: -12.38723373413086

Token 25: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14160366356372833
    2. '(idx' → logprob: -2.141603708267212
    3. ']' → logprob: -4.891603469848633
    4. '[idx' → logprob: -5.266603469848633
    5. 'idx' → logprob: -6.766603469848633
    6. '(
' → logprob: -8.516603469848633
    7. '[' → logprob: -8.516603469848633
    8. '()]' → logprob: -9.391603469848633
    9. '```' → logprob: -9.391603469848633
    10. ' (' → logprob: -9.891603469848633

Token 26: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.043366581201553345
    2. 'idx' → logprob: -3.1683666706085205
    3. ' range' → logprob: -8.168366432189941
    4. '	idx' → logprob: -10.043366432189941
    5. 'range' → logprob: -10.918366432189941
    6. ' in' → logprob: -11.043366432189941
    7. ' ' → logprob: -13.043366432189941
    8. '(idx' → logprob: -13.668366432189941
    9. '[idx' → logprob: -14.168366432189941
    10. '_idx' → logprob: -14.168366432189941

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03805732727050781
    2. 'in' → logprob: -3.288057327270508
    3. ' ' → logprob: -11.288057327270508
    4. '	in' → logprob: -13.788057327270508
    5. 'range' → logprob: -15.038057327270508
    6. '  ' → logprob: -15.038057327270508
    7. 'idx' → logprob: -15.788057327270508
    8. ')' → logprob: -15.788057327270508
    9. 'inx' → logprob: -15.913057327270508
    10. 'i' → logprob: -15.913057327270508

Token 28: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4742441177368164
    2. 'range' → logprob: -0.9742441177368164
    3. '[' → logprob: -8.724244117736816
    4. '(' → logprob: -13.474244117736816
    5. '(range' → logprob: -14.224244117736816
    6. ' [' → logprob: -14.224244117736816
    7. ' ' → logprob: -14.224244117736816
    8. 'input' → logprob: -14.474244117736816
    9. '	range' → logprob: -15.099244117736816
    10. '0' → logprob: -16.0992431640625

Token 29: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005246798973530531
    2. '(len' → logprob: -5.255246639251709
    3. '3' → logprob: -11.505247116088867
    4. ' (' → logprob: -13.130247116088867
    5. 'len' → logprob: -14.255247116088867
    6. '(
' → logprob: -15.380247116088867
    7. '(

' → logprob: -15.880247116088867
    8. ')' → logprob: -17.505247116088867
    9. ' len' → logprob: -17.630247116088867
    10. ']' → logprob: -18.005247116088867

Token 30: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.000585322268307209
    2. 'len' → logprob: -7.500585556030273
    3. ' ' → logprob: -10.875585556030273
    4. '0' → logprob: -11.625585556030273
    5. ' len' → logprob: -12.625585556030273
    6. ')' → logprob: -14.625585556030273
    7. '(len' → logprob: -15.375585556030273
    8. '   ' → logprob: -15.750585556030273
    9. '  ' → logprob: -16.375585556030273
    10. '1' → logprob: -16.750585556030273

Token 31: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.7835754988482222e-05
    2. ')' → logprob: -11.250018119812012
    3. ')])' → logprob: -13.000018119812012
    4. ']' → logprob: -13.875018119812012
    5. ' )' → logprob: -14.375018119812012
    6. '])]' → logprob: -15.500018119812012
    7. ')].' → logprob: -15.750018119812012
    8. ')],' → logprob: -15.875018119812012
    9. ')][' → logprob: -16.250017166137695
    10. '))' → logprob: -16.500017166137695

Token 32: 'list' (ID: 2641)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: '_A' (ID: 6829)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6464187502861023
    2. '(' → logprob: -1.021418809890747
    3. 's' → logprob: -3.396418809890747
    4. '_items' → logprob: -3.646418809890747
    5. '_A' → logprob: -4.396418571472168
    6. 'A' → logprob: -4.771418571472168
    7. '_values' → logprob: -5.146418571472168
    8. '_vals' → logprob: -5.146418571472168
    9. '_prices' → logprob: -5.146418571472168
    10. '_a' → logprob: -5.396418571472168

Token 34: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3743389844894409
    2. '.' → logprob: -1.374338984489441
    3. '_' → logprob: -4.3743391036987305
    4. '<|end|>' → logprob: -4.4993391036987305
    5. '[:]' → logprob: -5.3743391036987305
    6. '```' → logprob: -5.8743391036987305
    7. ')' → logprob: -5.9993391036987305
    8. '_values' → logprob: -6.1243391036987305
    9. '.append' → logprob: -6.4993391036987305
    10. ' =' → logprob: -6.4993391036987305

Token 35: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3412131071090698
    2. ' []' → logprob: -2.0912132263183594
    3. '[list' → logprob: -3.0912132263183594
    4. '[int' → logprob: -3.3412132263183594
    5. '[input' → logprob: -3.3412132263183594
    6. 'list' → logprob: -3.8412132263183594
    7. '[' → logprob: -4.341213226318359
    8. ' [' → logprob: -4.466213226318359
    9. ' list' → logprob: -5.966213226318359
    10. 'input' → logprob: -7.966213226318359

Token 36: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005044196150265634
    2. ' int' → logprob: -8.250504493713379
    3. '0' → logprob: -8.500504493713379
    4. ']int' → logprob: -10.625504493713379
    5. ']' → logprob: -11.625504493713379
    6. '(int' → logprob: -12.875504493713379
    7. '<int' → logprob: -14.125504493713379
    8. '[int' → logprob: -14.250504493713379
    9. 'num' → logprob: -14.500504493713379
    10. 'map' → logprob: -14.625504493713379

Token 37: '(val' (ID: 17391)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2781240940093994
    2. '(x' → logprob: -2.0281240940093994
    3. '(' → logprob: -2.2781240940093994
    4. '(i' → logprob: -4.90312385559082
    5. '(a' → logprob: -7.77812385559082
    6. '(val' → logprob: -8.90312385559082
    7. '(_' → logprob: -9.15312385559082
    8. '(s' → logprob: -9.15312385559082
    9. '(item' → logprob: -9.27812385559082
    10. '()' → logprob: -9.40312385559082

Token 38: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021271906734909862
    2. '(x' → logprob: -10.000212669372559
    3. ' )' → logprob: -10.000212669372559
    4. '())' → logprob: -10.125212669372559
    5. '()' → logprob: -10.375212669372559
    6. '(' → logprob: -11.125212669372559
    7. '(i' → logprob: -11.375212669372559
    8. 'for' → logprob: -11.500212669372559
    9. ' for' → logprob: -12.250212669372559
    10. '(input' → logprob: -12.250212669372559

Token 39: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3249682188034058
    2. '(input' → logprob: -1.3249682188034058
    3. ')' → logprob: -1.9499682188034058
    4. ' for' → logprob: -2.1999683380126953
    5. '(x' → logprob: -2.5749683380126953
    6. '(' → logprob: -2.5749683380126953
    7. '(i' → logprob: -3.1999683380126953
    8. '()' → logprob: -4.074968338012695
    9. ']' → logprob: -6.699968338012695
    10. '(val' → logprob: -7.074968338012695

Token 40: ' val' (ID: 1459)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.002082335762679577
    2. 'input' → logprob: -6.252082347869873
    3. ' range' → logprob: -8.877081871032715
    4. '(input' → logprob: -11.377081871032715
    5. 'range' → logprob: -14.127081871032715
    6. '_input' → logprob: -14.377081871032715
    7. ' the' → logprob: -15.252081871032715
    8. '=input' → logprob: -15.752081871032715
    9. ' (' → logprob: -15.877081871032715
    10. '(' → logprob: -15.877081871032715

Token 41: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004103573504835367
    2. 'in' → logprob: -5.504103660583496
    3. ' ' → logprob: -11.129103660583496
    4. '(' → logprob: -13.754103660583496
    5. '  ' → logprob: -13.879103660583496
    6. '_' → logprob: -13.879103660583496
    7. 'input' → logprob: -14.004103660583496
    8. '<|end|>' → logprob: -14.129103660583496
    9. '	in' → logprob: -14.379103660583496
    10. 's' → logprob: -14.379103660583496

Token 42: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3484918773174286
    2. 'input' → logprob: -1.223491907119751
    3. ' range' → logprob: -10.473491668701172
    4. 'range' → logprob: -11.348491668701172
    5. '(input' → logprob: -12.848491668701172
    6. ' ' → logprob: -13.098491668701172
    7. 'list' → logprob: -14.473491668701172
    8. ' list' → logprob: -14.473491668701172
    9. '	input' → logprob: -14.723491668701172
    10. '[input' → logprob: -15.910991668701172

Token 43: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.015561383217573166
    2. '()' → logprob: -4.265561580657959
    3. '()]' → logprob: -6.890561580657959
    4. '())' → logprob: -7.890561580657959
    5. '_vals' → logprob: -13.3905611038208
    6. '()].' → logprob: -13.7655611038208
    7. '(' → logprob: -14.2655611038208
    8. '()
' → logprob: -14.7655611038208
    9. '()[' → logprob: -15.1405611038208
    10. '()][' → logprob: -15.3905611038208

Token 44: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00037025497294962406
    2. 'strip' → logprob: -8.000370025634766
    3. ' split' → logprob: -10.625370025634766
    4. 'rstrip' → logprob: -11.500370025634766
    5. '(split' → logprob: -15.375370025634766
    6. '.split' → logprob: -16.125370025634766
    7. 'spl' → logprob: -16.750370025634766
    8. 'replace' → logprob: -17.750370025634766
    9. ' strip' → logprob: -18.250370025634766
    10. ')' → logprob: -18.625370025634766

Token 45: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.047475043684244156
    2. '()' → logprob: -3.9224750995635986
    3. '()]' → logprob: -4.0474748611450195
    4. '("("' → logprob: -4.9224748611450195
    5. '('' → logprob: -6.9224748611450195
    6. '(' → logprob: -7.7974748611450195
    7. '())' → logprob: -8.04747486114502
    8. '("")' → logprob: -9.29747486114502
    9. '()"' → logprob: -12.17247486114502
    10. '(""))' → logprob: -12.79747486114502

Token 46: ' "' (ID: 392)
  Prédit: '")]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")]' → logprob: -0.5995836853981018
    2. ' "' → logprob: -1.224583625793457
    3. ')]' → logprob: -1.974583625793457
    4. ')' → logprob: -4.349583625793457
    5. '")' → logprob: -6.724583625793457
    6. ']' → logprob: -6.974583625793457
    7. ' ")' → logprob: -6.974583625793457
    8. ' )' → logprob: -7.099583625793457
    9. '()' → logprob: -7.724583625793457
    10. '("' → logprob: -8.349583625793457

Token 47: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0008560742135159671
    2. ']' → logprob: -7.500855922698975
    3. ')' → logprob: -8.125856399536133
    4. ')]
' → logprob: -12.750856399536133
    5. '")]' → logprob: -13.625856399536133
    6. ' )' → logprob: -14.000856399536133
    7. ')]

' → logprob: -15.125856399536133
    8. ')],' → logprob: -15.250856399536133
    9. '')]' → logprob: -15.375856399536133
    10. '])' → logprob: -15.625856399536133

Token 48: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00018732868193183094
    2. ' list' → logprob: -9.500186920166016
    3. '
' → logprob: -9.875186920166016
    4. '<|end|>' → logprob: -11.000186920166016
    5. '```' → logprob: -11.250186920166016
    6. 'num' → logprob: -12.125186920166016
    7. '\n' → logprob: -12.250186920166016
    8. '  
' → logprob: -12.875186920166016
    9. '[' → logprob: -13.000186920166016
    10. '\' → logprob: -13.125186920166016

Token 49: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.14738829433918
    2. '_A' → logprob: -2.647388219833374
    3. '_' → logprob: -2.772388219833374
    4. '_C' → logprob: -5.772388458251953
    5. '```' → logprob: -8.772388458251953
    6. 's' → logprob: -9.397388458251953
    7. ')_' → logprob: -9.522388458251953
    8. ' _' → logprob: -9.647388458251953
    9. '_S' → logprob: -10.272388458251953
    10. '_F' → logprob: -10.647388458251953

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018155209720134735
    2. '=' → logprob: -4.018155097961426
    3. '[' → logprob: -12.893155097961426
    4. ' ' → logprob: -14.143155097961426
    5. ' =[' → logprob: -14.143155097961426
    6. '_' → logprob: -15.018155097961426
    7. ')' → logprob: -15.643155097961426
    8. '.extend' → logprob: -15.768155097961426
    9. ' +=' → logprob: -16.018156051635742
    10. 's' → logprob: -16.393156051635742

Token 51: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.1005331501364708
    2. ' [' → logprob: -2.3505332469940186
    3. '[' → logprob: -8.350533485412598
    4. '[input' → logprob: -9.600533485412598
    5. '[list' → logprob: -11.725533485412598
    6. '[Int' → logprob: -12.100533485412598
    7. '[val' → logprob: -12.975533485412598
    8. ' ' → logprob: -13.225533485412598
    9. 'int' → logprob: -13.600533485412598
    10. '[str' → logprob: -14.350533485412598

Token 52: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.762356209335849e-05
    2. ' int' → logprob: -10.25003719329834
    3. 'val' → logprob: -13.87503719329834
    4. '(int' → logprob: -14.75003719329834
    5. '   ' → logprob: -15.25003719329834
    6. ' ' → logprob: -15.62503719329834
    7. '  ' → logprob: -15.62503719329834
    8. '<int' → logprob: -16.375038146972656
    9. '[int' → logprob: -16.375038146972656
    10. ']int' → logprob: -17.875038146972656

Token 53: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -3.173704271830502e-06
    2. 'val' → logprob: -13.62500286102295
    3. '(' → logprob: -14.12500286102295
    4. '(input' → logprob: -14.62500286102295
    5. ' (' → logprob: -15.12500286102295
    6. '(vals' → logprob: -15.37500286102295
    7. '[val' → logprob: -16.125003814697266
    8. '```' → logprob: -16.625003814697266
    9. ' val' → logprob: -18.125003814697266
    10. '(x' → logprob: -18.375003814697266

Token 54: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6073498129844666
    2. ' for' → logprob: -1.4823498725891113
    3. 'for' → logprob: -1.4823498725891113
    4. '()' → logprob: -7.232349872589111
    5. '(val' → logprob: -8.982349395751953
    6. ' )' → logprob: -10.857349395751953
    7. '	for' → logprob: -10.982349395751953
    8. ' in' → logprob: -11.232349395751953
    9. 'val' → logprob: -11.357349395751953
    10. ' ' → logprob: -11.357349395751953

Token 55: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.576021134853363
    2. ' for' → logprob: -0.826021134853363
    3. ')' → logprob: -9.576021194458008
    4. '	for' → logprob: -12.826021194458008
    5. 'For' → logprob: -13.326021194458008
    6. ' in' → logprob: -13.826021194458008
    7. '(input' → logprob: -13.826021194458008
    8. '```' → logprob: -13.826021194458008
    9. 'in' → logprob: -13.951021194458008
    10. '[input' → logprob: -14.451021194458008

Token 56: ' val' (ID: 1459)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.03808612748980522
    2. 'input' → logprob: -3.288086175918579
    3. '(input' → logprob: -10.0380859375
    4. '=input' → logprob: -15.0380859375
    5. 's' → logprob: -16.0380859375
    6. '[input' → logprob: -16.1630859375
    7. ' ' → logprob: -16.6630859375
    8. 'in' → logprob: -17.1630859375
    9. '	input' → logprob: -17.1630859375
    10. '_input' → logprob: -17.2880859375

Token 57: ' in' (ID: 306)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.18567627668380737
    2. '()' → logprob: -2.310676336288452
    3. ' in' → logprob: -3.060676336288452
    4. 'in' → logprob: -4.435676097869873
    5. 'for' → logprob: -5.310676097869873
    6. ' for' → logprob: -6.310676097869873
    7. '()[' → logprob: -6.310676097869873
    8. '(in' → logprob: -6.685676097869873
    9. '(input' → logprob: -7.435676097869873
    10. '()(' → logprob: -8.685676574707031

Token 58: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06998244673013687
    2. ' input' → logprob: -2.6949825286865234
    3. '(input' → logprob: -10.069982528686523
    4. '[input' → logprob: -13.944982528686523
    5. '=input' → logprob: -14.569982528686523
    6. ' ' → logprob: -15.069982528686523
    7. '<input' → logprob: -15.069982528686523
    8. 'output' → logprob: -15.194982528686523
    9. '	input' → logprob: -15.444982528686523
    10. 's' → logprob: -15.819982528686523

Token 59: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.2352385965641588e-05
    2. '_vals' → logprob: -11.375012397766113
    3. '()' → logprob: -14.500012397766113
    4. ' ().' → logprob: -16.250011444091797
    5. '_val' → logprob: -16.500011444091797
    6. 'vals' → logprob: -17.125011444091797
    7. ').' → logprob: -18.000011444091797
    8. '()).' → logprob: -18.500011444091797
    9. '().__' → logprob: -18.625011444091797
    10. 'val' → logprob: -18.750011444091797

Token 60: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.7432603272027336e-06
    2. ' split' → logprob: -13.750001907348633
    3. 'strip' → logprob: -15.000001907348633
    4. '.split' → logprob: -16.000001907348633
    5. '(split' → logprob: -16.500001907348633
    6. 'spl' → logprob: -17.375001907348633
    7. ')' → logprob: -17.625001907348633
    8. '```' → logprob: -17.625001907348633
    9. 'plit' → logprob: -17.750001907348633
    10. 'rstrip' → logprob: -18.750001907348633

Token 61: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0002908910100813955
    2. '(' → logprob: -9.125290870666504
    3. '()' → logprob: -9.250290870666504
    4. '())' → logprob: -10.000290870666504
    5. '("("' → logprob: -11.000290870666504
    6. ')' → logprob: -11.750290870666504
    7. '"' → logprob: -12.000290870666504
    8. '(""))' → logprob: -13.125290870666504
    9. '('' → logprob: -13.375290870666504
    10. ')("' → logprob: -13.750290870666504

Token 62: ' ")' (ID: 25221)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03184042125940323
    2. ' "' → logprob: -3.5318403244018555
    3. '")' → logprob: -7.1568403244018555
    4. ')' → logprob: -7.1568403244018555
    5. ' ")' → logprob: -8.656840324401855
    6. ' )' → logprob: -8.781840324401855
    7. ' ' → logprob: -9.156840324401855
    8. ' "))' → logprob: -10.406840324401855
    9. '">' → logprob: -11.156840324401855
    10. ' "")' → logprob: -11.656840324401855

Token 63: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12748506665229797
    2. ')]' → logprob: -2.1274850368499756
    3. ')' → logprob: -7.627485275268555
    4. '])' → logprob: -10.377485275268555
    5. '()]' → logprob: -11.377485275268555
    6. ']
' → logprob: -11.502485275268555
    7. ' ]' → logprob: -11.877485275268555
    8. '`]' → logprob: -12.627485275268555
    9. '])]' → logprob: -13.002485275268555
    10. '"]' → logprob: -14.127485275268555

Token 64: 'coupon' (ID: 81500)
  Prédit: 'discount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'discount' → logprob: -1.1530681848526
    2. 'cou' → logprob: -1.1530681848526
    3. 'total' → logprob: -1.9030681848526
    4. 'result' → logprob: -2.5280680656433105
    5. 'min' → logprob: -3.9030680656433105
    6. 'sum' → logprob: -3.9030680656433105
    7. 'coupon' → logprob: -4.4030680656433105
    8. 'list' → logprob: -4.5280680656433105
    9. 'num' → logprob: -4.9030680656433105
    10. 'answer' → logprob: -4.9030680656433105

Token 65: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1039256677031517
    2. '_s' → logprob: -2.3539257049560547
    3. '_' → logprob: -6.728925704956055
    4. '_list' → logprob: -7.103925704956055
    5. '_values' → logprob: -7.478925704956055
    6. '_vals' → logprob: -7.728925704956055
    7. '_prices' → logprob: -8.728925704956055
    8. '_counts' → logprob: -9.228925704956055
    9. '_discount' → logprob: -9.478925704956055
    10. '_count' → logprob: -10.103925704956055

Token 66: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8329780101776123
    2. ' =' → logprob: -0.9579780101776123
    3. '=' → logprob: -1.7079780101776123
    4. '_' → logprob: -8.582978248596191
    5. '=[]' → logprob: -9.582978248596191
    6. '_s' → logprob: -10.582978248596191
    7. '[:]' → logprob: -10.832978248596191
    8. '_=' → logprob: -12.082978248596191
    9. '<|end|>' → logprob: -12.332978248596191
    10. 'es' → logprob: -12.457978248596191

Token 67: ' []
' (ID: 8911)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0473448783159256
    2. ' [' → logprob: -3.922344923019409
    3. '[' → logprob: -4.04734468460083
    4. '[]' → logprob: -5.67234468460083
    5. '[input' → logprob: -5.79734468460083
    6. '[list' → logprob: -6.42234468460083
    7. ' []' → logprob: -7.29734468460083
    8. '[i' → logprob: -10.547345161437988
    9. '[str' → logprob: -10.547345161437988
    10. '[c' → logprob: -10.672345161437988

Token 68: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.392202976712724e-06
    2. ' for' → logprob: -12.000006675720215
    3. '```' → logprob: -17.0000057220459
    4. 'f' → logprob: -17.1250057220459
    5. '[' → logprob: -17.3750057220459
    6. 'n' → logprob: -17.6250057220459
    7. '	for' → logprob: -17.7500057220459
    8. '
' → logprob: -18.2500057220459
    9. 'while' → logprob: -18.7500057220459
    10. 'num' → logprob: -18.8750057220459

Token 69: ' idx' (ID: 14016)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.07921560853719711
    2. '_' → logprob: -2.5792155265808105
    3. ' i' → logprob: -8.079216003417969
    4. '_i' → logprob: -11.704216003417969
    5. ' ' → logprob: -13.079216003417969
    6. ' ' → logprob: -13.079216003417969
    7. ' idx' → logprob: -13.579216003417969
    8. ' range' → logprob: -13.954216003417969
    9. 'i' → logprob: -15.204216003417969
    10. '_idx' → logprob: -15.454216003417969

Token 70: '_coupon' (ID: 197395)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03806536644697189
    2. 'in' → logprob: -3.2880654335021973
    3. ' ' → logprob: -11.163064956665039
    4. 'range' → logprob: -11.788064956665039
    5. 's' → logprob: -15.038064956665039
    6. '_' → logprob: -15.163064956665039
    7. '	in' → logprob: -15.663064956665039
    8. 'In' → logprob: -15.788064956665039
    9. ' range' → logprob: -15.913064956665039
    10. '0' → logprob: -16.16306495666504

Token 71: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038196176290512085
    2. 'in' → logprob: -3.288196086883545
    3. ' ' → logprob: -8.913196563720703
    4. '	in' → logprob: -12.163196563720703
    5. 's' → logprob: -12.413196563720703
    6. '_' → logprob: -12.913196563720703
    7. '_in' → logprob: -13.038196563720703
    8. 'range' → logprob: -13.413196563720703
    9. 'In' → logprob: -14.038196563720703
    10. ',' → logprob: -14.413196563720703

Token 72: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132626414299011
    2. ' range' → logprob: -1.313262701034546
    3. '	range' → logprob: -14.063262939453125
    4. '(range' → logprob: -15.438262939453125
    5. ' ' → logprob: -17.563262939453125
    6. '  ' → logprob: -18.063262939453125
    7. '_range' → logprob: -18.688262939453125
    8. 'rang' → logprob: -18.938262939453125
    9. 'Range' → logprob: -19.438262939453125
    10. 'ran' → logprob: -20.063262939453125

Token 73: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.014561380259692669
    2. '(' → logprob: -4.264561176300049
    3. ' (' → logprob: -7.889561176300049
    4. 'num' → logprob: -12.014561653137207
    5. ' num' → logprob: -12.389561653137207
    6. '(n' → logprob: -12.514561653137207
    7. '(len' → logprob: -12.639561653137207
    8. '(c' → logprob: -13.389561653137207
    9. '(number' → logprob: -13.514561653137207
    10. '(range' → logprob: -14.264561653137207

Token 74: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -3.128163257315464e-07
    2. '_coupon' → logprob: -15.75
    3. '_' → logprob: -16.875
    4. '_A' → logprob: -17.375
    5. '_C' → logprob: -17.875
    6. '_a' → logprob: -19.875
    7. 'c' → logprob: -20.5
    8. '__' → logprob: -21.125
    9. '_B' → logprob: -21.5
    10. 'cou' → logprob: -21.625

Token 75: 'ou' (ID: 283)
  Prédit: 'ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.0004474732850212604
    2. 'oupon' → logprob: -8.500447273254395
    3. 'cou' → logprob: -8.750447273254395
    4. 'oup' → logprob: -10.125447273254395
    5. 'o' → logprob: -10.250447273254395
    6. 'op' → logprob: -12.750447273254395
    7. 'Coupons' → logprob: -13.500447273254395
    8. 'u' → logprob: -13.625447273254395
    9. 'oun' → logprob: -13.875447273254395
    10. 'ouchers' → logprob: -14.750447273254395

Token 76: 'pons' (ID: 2987)
  Prédit: 'pons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pons' → logprob: -5.8126592193730175e-05
    2. 'pon' → logprob: -10.1250581741333
    3. '_' → logprob: -11.8750581741333
    4. 'p' → logprob: -12.6250581741333
    5. 'bons' → logprob: -13.2500581741333
    6. 'ons' → logprob: -13.6250581741333
    7. '\' → logprob: -13.8750581741333
    8. 'ponse' → logprob: -14.0000581741333
    9. 'poons' → logprob: -14.6250581741333
    10. '_p' → logprob: -15.0000581741333

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005197116639465094
    2. ')' → logprob: -5.505197048187256
    3. ':' → logprob: -6.880197048187256
    4. ' ):' → logprob: -9.755197525024414
    5. '):
' → logprob: -10.880197525024414
    6. '+' → logprob: -12.005197525024414
    7. ',' → logprob: -13.380197525024414
    8. ']:' → logprob: -13.755197525024414
    9. ' :' → logprob: -14.130197525024414
    10. ' )' → logprob: -14.380197525024414

Token 78: '   ' (ID: 271)
  Prédit: ' coupon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coupon' → logprob: -0.5370752215385437
    2. '   ' → logprob: -1.4120752811431885
    3. 'coupon' → logprob: -1.7870752811431885
    4. '    
' → logprob: -5.912075042724609
    5. '_coupon' → logprob: -7.412075042724609
    6. '	c' → logprob: -8.28707504272461
    7. '
' → logprob: -8.66207504272461
    8. ' line' → logprob: -8.91207504272461
    9. ' 
' → logprob: -8.91207504272461
    10. '```' → logprob: -9.66207504272461

Token 79: ' coupon' (ID: 28009)
  Prédit: 'coupon'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coupon' (adapté à ' coupon') → logprob: -0.07036352157592773
    2. ' coupon' → logprob: -2.6953635215759277
    3. 'input' → logprob: -8.570363998413086
    4. '   ' → logprob: -9.570363998413086
    5. 'cou' → logprob: -10.445363998413086
    6. '_coupon' → logprob: -10.570363998413086
    7. '    
' → logprob: -11.320363998413086
    8. 'c' → logprob: -11.570363998413086
    9. ' input' → logprob: -11.695363998413086
    10. 'discount' → logprob: -11.820363998413086

Token 80: '_vals' (ID: 71688)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.7077022790908813
    2. '_list' → logprob: -1.2077022790908813
    3. '_' → logprob: -2.332702159881592
    4. '_vals' → logprob: -2.457702159881592
    5. '_input' → logprob: -4.957702159881592
    6. '=' → logprob: -5.332702159881592
    7. '_code' → logprob: -5.832702159881592
    8. ' =' → logprob: -6.207702159881592
    9. '_info' → logprob: -6.457702159881592
    10. '_values' → logprob: -6.832702159881592

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011055364273488522
    2. '=' → logprob: -4.5110554695129395
    3. ' ' → logprob: -12.261054992675781
    4. '=input' → logprob: -13.636054992675781
    5. ' =[' → logprob: -15.636054992675781
    6. 'input' → logprob: -15.636054992675781
    7. ' =
' → logprob: -15.761054992675781
    8. ' =)' → logprob: -15.886054992675781
    9. '=[]' → logprob: -16.01105499267578
    10. '_' → logprob: -16.13605499267578

Token 82: ' [' (ID: 723)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2064780443906784
    2. ' input' → logprob: -2.0814781188964844
    3. '[input' → logprob: -2.8314781188964844
    4. '[' → logprob: -6.081478118896484
    5. ' [' → logprob: -7.831478118896484
    6. 'list' → logprob: -8.956478118896484
    7. '[int' → logprob: -10.081478118896484
    8. ' list' → logprob: -11.081478118896484
    9. 'int' → logprob: -12.581478118896484
    10. '[list' → logprob: -12.831478118896484

Token 83: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.643152740551159e-05
    2. ' int' → logprob: -10.250036239624023
    3. ']int' → logprob: -15.000036239624023
    4. '   ' → logprob: -15.500036239624023
    5. 'float' → logprob: -15.875036239624023
    6. '  ' → logprob: -16.500036239624023
    7. ' ' → logprob: -16.625036239624023
    8. 'input' → logprob: -16.625036239624023
    9. '[int' → logprob: -17.000036239624023
    10. '(int' → logprob: -17.500036239624023

Token 84: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.004248758312314749
    2. '(x' → logprob: -5.75424861907959
    3. '(i' → logprob: -7.25424861907959
    4. '(v' → logprob: -8.00424861907959
    5. '(s' → logprob: -11.25424861907959
    6. '(input' → logprob: -12.75424861907959
    7. 'val' → logprob: -12.75424861907959
    8. '(a' → logprob: -13.12924861907959
    9. '(' → logprob: -13.75424861907959
    10. '(n' → logprob: -14.00424861907959

Token 85: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027184249833226204
    2. 'for' → logprob: -4.52718448638916
    3. '()' → logprob: -4.65218448638916
    4. ' for' → logprob: -5.15218448638916
    5. ' ' → logprob: -8.77718448638916
    6. '(x' → logprob: -9.15218448638916
    7. ' )' → logprob: -9.15218448638916
    8. '(i' → logprob: -9.77718448638916
    9. '
' → logprob: -10.27718448638916
    10. '(val' → logprob: -10.40218448638916

Token 86: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3729467988014221
    2. 'for' → logprob: -1.2479467391967773
    3. '()' → logprob: -3.8729467391967773
    4. ')' → logprob: -5.872946739196777
    5. ' in' → logprob: -8.747946739196777
    6. '(x' → logprob: -9.247946739196777
    7. '(i' → logprob: -9.372946739196777
    8. '(' → logprob: -10.372946739196777
    9. '(val' → logprob: -10.497946739196777
    10. '(input' → logprob: -10.747946739196777

Token 87: ' val' (ID: 1459)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1272771656513214
    2. 'input' → logprob: -2.877277135848999
    3. 'val' → logprob: -3.377277135848999
    4. ' val' → logprob: -3.627277135848999
    5. ' in' → logprob: -6.877277374267578
    6. 'in' → logprob: -7.002277374267578
    7. '_input' → logprob: -8.252277374267578
    8. '(input' → logprob: -9.877277374267578
    9. ' ' → logprob: -10.127277374267578
    10. '_' → logprob: -10.127277374267578

Token 88: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024909991770982742
    2. 'in' → logprob: -6.002490997314453
    3. 'val' → logprob: -12.127490997314453
    4. ' val' → logprob: -12.377490997314453
    5. ' ' → logprob: -12.502490997314453
    6. '_' → logprob: -14.002490997314453
    7. 'input' → logprob: -15.002490997314453
    8. 's' → logprob: -16.002490997314453
    9. ' input' → logprob: -16.377490997314453
    10. '  ' → logprob: -16.502490997314453

Token 89: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47409379482269287
    2. ' input' → logprob: -0.9740937948226929
    3. '(input' → logprob: -11.099093437194824
    4. '_input' → logprob: -15.224093437194824
    5. ' ' → logprob: -15.349093437194824
    6. '<input' → logprob: -15.724093437194824
    7. 'in' → logprob: -15.724093437194824
    8. '	input' → logprob: -15.849093437194824
    9. 'Input' → logprob: -15.974093437194824
    10. '=input' → logprob: -15.974093437194824

Token 90: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008111746865324676
    2. '()' → logprob: -7.1258111000061035
    3. '(' → logprob: -12.375811576843262
    4. '())' → logprob: -14.375811576843262
    5. ' ().' → logprob: -14.375811576843262
    6. '("' → logprob: -15.625811576843262
    7. '("("' → logprob: -15.625811576843262
    8. '().'' → logprob: -16.000810623168945
    9. '()[' → logprob: -16.000810623168945
    10. '('' → logprob: -16.125810623168945

Token 91: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.60414821645827e-06
    2. 'strip' → logprob: -12.750004768371582
    3. ' split' → logprob: -13.750004768371582
    4. '(split' → logprob: -15.500004768371582
    5. 'spl' → logprob: -15.500004768371582
    6. 'rstrip' → logprob: -16.125003814697266
    7. ')' → logprob: -16.500003814697266
    8. '_split' → logprob: -18.500003814697266
    9. '.split' → logprob: -19.250003814697266
    10. '```' → logprob: -19.500003814697266

Token 92: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.008061175234615803
    2. '("("' → logprob: -5.008061408996582
    3. '"' → logprob: -6.758061408996582
    4. '(' → logprob: -9.008061408996582
    5. '('' → logprob: -10.258061408996582
    6. '()' → logprob: -10.883061408996582
    7. '```' → logprob: -13.633061408996582
    8. '("")' → logprob: -14.133061408996582
    9. '("(' → logprob: -14.383061408996582
    10. '()"' → logprob: -14.508061408996582

Token 93: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.34271374344825745
    2. ')' → logprob: -1.467713713645935
    3. '("' → logprob: -3.2177138328552246
    4. '(' → logprob: -4.092713832855225
    5. ' )' → logprob: -6.967713832855225
    6. '")' → logprob: -7.467713832855225
    7. ' ' → logprob: -7.592713832855225
    8. ')]' → logprob: -8.092713356018066
    9. '()' → logprob: -8.467713356018066
    10. ' "' → logprob: -9.092713356018066

Token 94: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.16116675734519958
    2. ')' → logprob: -1.911166787147522
    3. ']' → logprob: -7.036166667938232
    4. ' )' → logprob: -10.66116714477539
    5. ')])' → logprob: -11.53616714477539
    6. '))' → logprob: -12.03616714477539
    7. '")]' → logprob: -12.28616714477539
    8. '   ' → logprob: -12.66116714477539
    9. ')]
' → logprob: -12.66116714477539
    10. '])' → logprob: -12.78616714477539

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11638318002223969
    2. ')' → logprob: -3.1163830757141113
    3. '<|end|>' → logprob: -3.6163830757141113
    4. 'coupon' → logprob: -3.7413830757141113
    5. ' coupon' → logprob: -5.866383075714111
    6. ' ' → logprob: -5.866383075714111
    7. '
' → logprob: -5.991383075714111
    8. '	c' → logprob: -6.491383075714111
    9. '  ' → logprob: -7.241383075714111
    10. '    
' → logprob: -7.366383075714111

Token 96: ' coupon' (ID: 28009)
  Prédit: 'coupon'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coupon' (adapté à ' coupon') → logprob: -0.0021123127080500126
    2. ' coupon' → logprob: -6.75211238861084
    3. '   ' → logprob: -7.00211238861084
    4. '_coupon' → logprob: -11.12711238861084
    5. ' ' → logprob: -12.87711238861084
    6. 'if' → logprob: -13.12711238861084
    7. '
' → logprob: -13.37711238861084
    8. '	c' → logprob: -13.37711238861084
    9. 'c' → logprob: -13.50211238861084
    10. '<|end|>' → logprob: -13.62711238861084

Token 97: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00017863049288280308
    2. '_' → logprob: -8.875178337097168
    3. 's' → logprob: -11.000178337097168
    4. '_s' → logprob: -11.750178337097168
    5. '_lst' → logprob: -11.875178337097168
    6. ')_' → logprob: -13.375178337097168
    7. '_lists' → logprob: -13.625178337097168
    8. '_vals' → logprob: -13.750178337097168
    9. '_li' → logprob: -14.250178337097168
    10. '_lista' → logprob: -14.375178337097168

Token 98: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006172774359583855
    2. '.' → logprob: -5.1311726570129395
    3. '.app' → logprob: -9.631173133850098
    4. '.extend' → logprob: -9.881173133850098
    5. '.setdefault' → logprob: -10.256173133850098
    6. '<|end|>' → logprob: -10.631173133850098
    7. '.add' → logprob: -10.756173133850098
    8. '.ap' → logprob: -11.006173133850098
    9. '.push' → logprob: -11.881173133850098
    10. '.pkl' → logprob: -12.506173133850098

Token 99: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.10038544982671738
    2. '(' → logprob: -2.3503854274749756
    3. '(tuple' → logprob: -9.100385665893555
    4. '((' → logprob: -9.725385665893555
    5. '(
' → logprob: -12.225385665893555
    6. '(C' → logprob: -14.850385665893555
    7. '(

' → logprob: -15.100385665893555
    8. '(cipher' → logprob: -15.475385665893555
    9. '(convert' → logprob: -15.600385665893555
    10. '(copy' → logprob: -15.725385665893555

Token 100: 'oupon' (ID: 31421)
  Prédit: 'oupon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oupon' → logprob: -0.0010815176647156477
    2. 'oup' → logprob: -7.126081466674805
    3. 'ou' → logprob: -8.376081466674805
    4. 'o' → logprob: -10.626081466674805
    5. 'coupon' → logprob: -12.001081466674805
    6. 'upon' → logprob: -12.126081466674805
    7. 'oun' → logprob: -13.376081466674805
    8. '(' → logprob: -13.501081466674805
    9. 'op' → logprob: -13.626081466674805
    10. '```' → logprob: -13.626081466674805

Token 101: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -6.704273118884885e-07
    2. '(vals' → logprob: -15.375000953674316
    3. 'vals' → logprob: -16.25
    4. '_' → logprob: -16.5
    5. ')' → logprob: -17.0
    6. '_val' → logprob: -17.125
    7. ')_' → logprob: -17.5
    8. '_vars' → logprob: -18.25
    9. '_)' → logprob: -18.875
    10. '_idxs' → logprob: -19.0

Token 102: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.796184723294573e-06
    2. ' )' → logprob: -12.750005722045898
    3. ')
' → logprob: -13.125005722045898
    4. '))' → logprob: -15.000005722045898
    5. '   ' → logprob: -15.500005722045898
    6. ')`' → logprob: -16.6250057220459
    7. ']' → logprob: -16.8750057220459
    8. '`)' → logprob: -17.7500057220459
    9. '])' → logprob: -18.1250057220459
    10. '）' → logprob: -18.2500057220459

Token 103: 'min' (ID: 1493)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2865819931030273
    2. 'min' → logprob: -2.2865819931030273
    3. 'total' → logprob: -2.2865819931030273
    4. 'result' → logprob: -2.2865819931030273
    5. 'coupon' → logprob: -2.2865819931030273
    6. '#' → logprob: -2.5365819931030273
    7. 'list' → logprob: -3.2865819931030273
    8. 'answer' → logprob: -3.4115819931030273
    9. 'sum' → logprob: -3.4115819931030273
    10. 'discount' → logprob: -3.7865819931030273

Token 104: '_total' (ID: 23814)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4273640811443329
    2. '_price' → logprob: -1.6773641109466553
    3. '_A' → logprob: -2.4273641109466553
    4. '_cost' → logprob: -3.4273641109466553
    5. '_sum' → logprob: -3.9273641109466553
    6. '(' → logprob: -5.427363872528076
    7. '_a' → logprob: -5.677363872528076
    8. '_val' → logprob: -5.802363872528076
    9. '_total' → logprob: -5.927363872528076
    10. '_value' → logprob: -6.427363872528076

Token 105: '_price' (ID: 18814)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9351033568382263
    2. '_price' → logprob: -1.060103416442871
    3. ' =' → logprob: -1.560103416442871
    4. '_cost' → logprob: -3.685103416442871
    5. '_' → logprob: -3.810103416442871
    6. '_amount' → logprob: -6.560103416442871
    7. '_prices' → logprob: -6.935103416442871
    8. ' ' → logprob: -8.810103416442871
    9. 'Price' → logprob: -8.810103416442871
    10. '_total' → logprob: -8.935103416442871

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002495991066098213
    2. '=' → logprob: -6.002495765686035
    3. '_' → logprob: -11.252495765686035
    4. 's' → logprob: -13.002495765686035
    5. ' =
' → logprob: -13.252495765686035
    6. ' ' → logprob: -13.502495765686035
    7. ',' → logprob: -14.002495765686035
    8. ' =)' → logprob: -15.127495765686035
    9. '<|end|>' → logprob: -16.00249671936035
    10. ' _' → logprob: -16.25249671936035

Token 107: ' min' (ID: 1349)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.1715795248746872
    2. 'sum' → logprob: -2.171579599380493
    3. '0' → logprob: -3.796579599380493
    4. ' float' → logprob: -4.546579360961914
    5. '10' → logprob: -5.296579360961914
    6. ' sum' → logprob: -6.171579360961914
    7. 'min' → logprob: -6.421579360961914
    8. '100' → logprob: -7.046579360961914
    9. '999' → logprob: -8.421579360961914
    10. '1' → logprob: -8.546579360961914

Token 108: '(list' (ID: 13116)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.07374779880046844
    2. '(' → logprob: -3.6987478733062744
    3. '(min' → logprob: -3.6987478733062744
    4. '(list' → logprob: -4.073747634887695
    5. '([' → logprob: -5.948747634887695
    6. '(
' → logprob: -6.948747634887695
    7. 'sum' → logprob: -7.448747634887695
    8. '(max' → logprob: -8.698747634887695
    9. '((' → logprob: -9.698747634887695
    10. '(len' → logprob: -9.823747634887695

Token 109: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.001081756199710071
    2. '_B' → logprob: -7.001081943511963
    3. '_' → logprob: -8.876081466674805
    4. '_)' → logprob: -11.376081466674805
    5. ')' → logprob: -11.501081466674805
    6. '<|end|>' → logprob: -12.501081466674805
    7. ')_' → logprob: -13.001081466674805
    8. 'A' → logprob: -13.126081466674805
    9. ' _' → logprob: -14.626081466674805
    10. '_
' → logprob: -16.001081466674805

Token 110: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016218608943745494
    2. ' )' → logprob: -7.501621723175049
    3. ')+' → logprob: -7.751621723175049
    4. '[' → logprob: -8.001622200012207
    5. '),' → logprob: -9.001622200012207
    6. ' +' → logprob: -9.501622200012207
    7. '))' → logprob: -10.626622200012207
    8. ' ' → logprob: -11.001622200012207
    9. '+' → logprob: -11.126622200012207
    10. ',' → logprob: -11.501622200012207

Token 111: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38037243485450745
    2. '<|end|>' → logprob: -1.255372405052185
    3. '*' → logprob: -4.505372524261475
    4. ' ' → logprob: -4.755372524261475
    5. 'for' → logprob: -5.505372524261475
    6. ')' → logprob: -5.630372524261475
    7. ' +' → logprob: -6.755372524261475
    8. ' for' → logprob: -7.255372524261475
    9. '.' → logprob: -7.755372524261475
    10. '+
' → logprob: -7.880372524261475

Token 112: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.126930832862854
    2. ' min' → logprob: -2.1269307136535645
    3. '(min' → logprob: -13.876931190490723
    4. 'max' → logprob: -14.251931190490723
    5. '	min' → logprob: -15.126931190490723
    6. ' ' → logprob: -15.251931190490723
    7. '[min' → logprob: -16.126930236816406
    8. 'list' → logprob: -16.251930236816406
    9. 'mi' → logprob: -16.876930236816406
    10. '  ' → logprob: -16.876930236816406

Token 113: '(list' (ID: 13116)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47409215569496155
    2. '(list' → logprob: -0.9740921258926392
    3. '(List' → logprob: -12.099092483520508
    4. '(lista' → logprob: -12.974092483520508
    5. '(
' → logprob: -13.099092483520508
    6. '(lst' → logprob: -13.099092483520508
    7. ' (' → logprob: -13.849092483520508
    8. '("("' → logprob: -14.724092483520508
    9. '('' → logprob: -15.724092483520508
    10. '(

' → logprob: -16.099092483520508

Token 114: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -14.250001907348633
    3. ')_' → logprob: -14.875001907348633
    4. '(_' → logprob: -15.000001907348633
    5. '(B' → logprob: -15.125001907348633
    6. '_A' → logprob: -15.375001907348633
    7. '```' → logprob: -15.625001907348633
    8. '(' → logprob: -16.000001907348633
    9. ')' → logprob: -16.375001907348633
    10. '_list' → logprob: -17.250001907348633

Token 115: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020115631923545152
    2. '<|end|>' → logprob: -9.250201225280762
    3. ' )' → logprob: -9.375201225280762
    4. '+' → logprob: -12.250201225280762
    5. '-' → logprob: -12.375201225280762
    6. ')#' → logprob: -13.125201225280762
    7. ' -' → logprob: -13.250201225280762
    8. ')
' → logprob: -13.375201225280762
    9. '#' → logprob: -13.625201225280762
    10. '```' → logprob: -14.625201225280762

Token 116: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027921127155423164
    2. ' for' → logprob: -4.277921199798584
    3. 'print' → logprob: -4.777921199798584
    4. '<|end|>' → logprob: -6.152921199798584
    5. 'if' → logprob: -6.777921199798584
    6. '
' → logprob: -6.777921199798584
    7. '\n' → logprob: -8.652920722961426
    8. '*' → logprob: -8.652920722961426
    9. '+' → logprob: -8.777920722961426
    10. '-' → logprob: -9.652920722961426

Token 117: ' coupon' (ID: 28009)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.3650827407836914
    2. ' coupon' → logprob: -1.2400827407836914
    3. 'coupon' → logprob: -4.490082740783691
    4. 'idx' → logprob: -5.490082740783691
    5. ' ' → logprob: -8.115082740783691
    6. '_coupon' → logprob: -8.740082740783691
    7. '	idx' → logprob: -8.865082740783691
    8. ' _' → logprob: -9.240082740783691
    9. ' i' → logprob: -9.490082740783691
    10. ' c' → logprob: -9.615082740783691

Token 118: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07999645918607712
    2. ' in' → logprob: -3.329996347427368
    3. '_idx' → logprob: -3.954996347427368
    4. '_vals' → logprob: -4.704996585845947
    5. '_val' → logprob: -4.829996585845947
    6. 's' → logprob: -5.704996585845947
    7. '_list' → logprob: -7.704996585845947
    8. '_price' → logprob: -8.579996109008789
    9. '_idxs' → logprob: -8.829996109008789
    10. '_in' → logprob: -8.829996109008789

Token 119: ' coupon' (ID: 28009)
  Prédit: ' coupon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coupon' → logprob: -0.04859986528754234
    2. 'coupon' → logprob: -3.0485999584198
    3. '_coupon' → logprob: -12.048600196838379
    4. 'c' → logprob: -13.048600196838379
    5. '(c' → logprob: -13.548600196838379
    6. '	c' → logprob: -14.048600196838379
    7. 'Coupon' → logprob: -14.423600196838379
    8. ' ' → logprob: -14.423600196838379
    9. 'oupon' → logprob: -14.923600196838379
    10. ' coupons' → logprob: -14.923600196838379

Token 120: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.25898391008377075
    2. 's' → logprob: -1.508983850479126
    3. ':' → logprob: -5.008984088897705
    4. '_:' → logprob: -8.383983612060547
    5. '_s' → logprob: -10.133983612060547
    6. 'List' → logprob: -10.758983612060547
    7. '_' → logprob: -10.883983612060547
    8. ':
' → logprob: -12.133983612060547
    9. 'list' → logprob: -12.383983612060547
    10. '_coupon' → logprob: -12.383983612060547

Token 121: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001601539261173457
    2. '<|end|>' → logprob: -9.500160217285156
    3. ':
' → logprob: -10.125160217285156
    4. ' :' → logprob: -10.625160217285156
    5. '[' → logprob: -11.625160217285156
    6. ',' → logprob: -12.250160217285156
    7. '<|end|>' → logprob: -13.250160217285156
    8. '[:]' → logprob: -14.000160217285156
    9. ':**' → logprob: -14.250160217285156
    10. '):' → logprob: -14.500160217285156

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023281237110495567
    2. ' if' → logprob: -3.8982813358306885
    3. '<|end|>' → logprob: -6.648281097412109
    4. '    
' → logprob: -7.523281097412109
    5. 'if' → logprob: -8.52328109741211
    6. '
' → logprob: -8.64828109741211
    7. '[' → logprob: -8.89828109741211
    8. ',' → logprob: -9.77328109741211
    9. ' idx' → logprob: -10.27328109741211
    10. ' 
' → logprob: -10.77328109741211

Token 123: ' idx' (ID: 14016)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0138437747955322
    2. '   ' → logprob: -1.3888437747955322
    3. 'A' → logprob: -2.0138437747955322
    4. ' a' → logprob: -3.0138437747955322
    5. ' A' → logprob: -3.1388437747955322
    6. 'idx' (adapté à ' idx') → logprob: -3.2638437747955322
    7. ' idx' → logprob: -3.3888437747955322
    8. 'discount' → logprob: -4.263843536376953
    9. 'num' → logprob: -4.638843536376953
    10. 'index' → logprob: -4.888843536376953

Token 124: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.08741427212953568
    2. 'A' → logprob: -3.212414264678955
    3. '_a' → logprob: -3.587414264678955
    4. '_' → logprob: -4.712414264678955
    5. '_coupon' → logprob: -5.837414264678955
    6. ' =' → logprob: -6.337414264678955
    7. '0' → logprob: -7.587414264678955
    8. '1' → logprob: -7.962414264678955
    9. '=' → logprob: -7.962414264678955
    10. 'a' → logprob: -8.962414741516113

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13364627957344055
    2. '=' → logprob: -2.133646249771118
    3. ' =' → logprob: -5.133646488189697
    4. ' ,' → logprob: -8.383646011352539
    5. '0' → logprob: -8.508646011352539
    6. ',num' → logprob: -8.883646011352539
    7. 'A' → logprob: -9.883646011352539
    8. '_,' → logprob: -10.258646011352539
    9. 'a' → logprob: -11.133646011352539
    10. 'idx' → logprob: -11.258646011352539

Token 126: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.026385990902781487
    2. ' idx' → logprob: -3.651386022567749
    3. '_idx' → logprob: -9.901386260986328
    4. '	idx' → logprob: -11.026386260986328
    5. 'index' → logprob: -12.151386260986328
    6. '=' → logprob: -13.151386260986328
    7. ' =' → logprob: -13.276386260986328
    8. 'id' → logprob: -13.526386260986328
    9. ' ' → logprob: -13.526386260986328
    10. 'x' → logprob: -13.651386260986328

Token 127: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.02839781530201435
    2. '_A' → logprob: -4.153398036956787
    3. '_coupon' → logprob: -5.153398036956787
    4. '_' → logprob: -6.028398036956787
    5. '_,' → logprob: -6.653398036956787
    6. '_C' → logprob: -6.778398036956787
    7. '_c' → logprob: -7.528398036956787
    8. ',' → logprob: -7.778398036956787
    9. '<|end|>' → logprob: -7.778398036956787
    10. 'coupon' → logprob: -9.528397560119629

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4644324481487274
    2. '=' → logprob: -1.3394324779510498
    3. ' =' → logprob: -2.21443247795105
    4. ' ,' → logprob: -8.589432716369629
    5. ',num' → logprob: -9.589432716369629
    6. ' ' → logprob: -11.464432716369629
    7. '=int' → logprob: -12.089432716369629
    8. '   ' → logprob: -12.589432716369629
    9. '=num' → logprob: -12.589432716369629
    10. ',value' → logprob: -13.089432716369629

Token 129: ' discount' (ID: 11522)
  Prédit: 'discount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'discount' → logprob: -0.04414009675383568
    2. 'disc' → logprob: -4.294139862060547
    3. ' discount' → logprob: -4.544139862060547
    4. 'coupon' → logprob: -4.919139862060547
    5. 'price' → logprob: -5.169139862060547
    6. 'amount' → logprob: -6.669139862060547
    7. 'dic' → logprob: -7.044139862060547
    8. 'dis' → logprob: -7.044139862060547
    9. 'c' → logprob: -7.294139862060547
    10. ' coupon' → logprob: -7.794139862060547

Token 130: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22541899979114532
    2. ' =' → logprob: -1.600419044494629
    3. ',' → logprob: -12.600419044494629
    4. ' ' → logprob: -13.725419044494629
    5. 'price' → logprob: -15.600419044494629
    6. ')' → logprob: -15.600419044494629
    7. '_' → logprob: -15.850419044494629
    8. '_price' → logprob: -15.850419044494629
    9. '   ' → logprob: -15.850419044494629
    10. 's' → logprob: -15.975419044494629

Token 131: ' coupon' (ID: 28009)
  Prédit: 'coupon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coupon' → logprob: -0.1273164302110672
    2. ' coupon' → logprob: -2.127316474914551
    3. '[c' → logprob: -8.62731647491455
    4. 'c' → logprob: -8.87731647491455
    5. '   ' → logprob: -10.25231647491455
    6. '	c' → logprob: -11.62731647491455
    7. '(c' → logprob: -11.62731647491455
    8. 'cou' → logprob: -11.87731647491455
    9. '_coupon' → logprob: -12.50231647491455
    10. ' ' → logprob: -13.50231647491455

Token 132: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22888949513435364
    2. '<|end|>' → logprob: -2.1038894653320312
    3. ' 
' → logprob: -3.3538894653320312
    4. '  
' → logprob: -3.7288894653320312
    5. '    
' → logprob: -4.353889465332031
    6. '   
' → logprob: -5.353889465332031
    7. ' ' → logprob: -6.103889465332031
    8. '=' → logprob: -7.228889465332031
    9. ',' → logprob: -7.478889465332031
    10. '<|end|>' → logprob: -7.478889465332031

Token 133: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22594237327575684
    2. '   ' → logprob: -1.9759423732757568
    3. '    
' → logprob: -3.100942373275757
    4. ' 
' → logprob: -4.725942611694336
    5. '  
' → logprob: -5.225942611694336
    6. '   
' → logprob: -6.475942611694336
    7. '<|end|>' → logprob: -6.975942611694336
    8. ' if' → logprob: -7.225942611694336
    9. 'if' → logprob: -8.475942611694336
    10. '  ' → logprob: -8.475942611694336

Token 134: ' coupon' (ID: 28009)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.8968512415885925
    2. '
' → logprob: -1.2718513011932373
    3. ' total' → logprob: -1.7718513011932373
    4. 'current' → logprob: -3.1468513011932373
    5. ' current' → logprob: -4.146851062774658
    6. ' min' → logprob: -4.146851062774658
    7. 'price' → logprob: -4.146851062774658
    8. 'min' → logprob: -4.271851062774658
    9. '    
' → logprob: -4.396851062774658
    10. ' price' → logprob: -4.896851062774658

Token 135: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.05303862690925598
    2. '_total' → logprob: -3.0530385971069336
    3. '_discount' → logprob: -6.803038597106934
    4. '_val' → logprob: -7.053038597106934
    5. '_cost' → logprob: -7.053038597106934
    6. '_min' → logprob: -7.678038597106934
    7. '_' → logprob: -7.928038597106934
    8. '_sum' → logprob: -8.178038597106934
    9. '_value' → logprob: -9.178038597106934
    10. '_idx' → logprob: -9.178038597106934

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519806921482086
    2. '=' → logprob: -1.5019806623458862
    3. 's' → logprob: -10.126980781555176
    4. ' ' → logprob: -11.876980781555176
    5. '_' → logprob: -13.501980781555176
    6. ' =
' → logprob: -14.876980781555176
    7. '>' → logprob: -15.126980781555176
    8. ')' → logprob: -15.126980781555176
    9. '   ' → logprob: -15.376980781555176
    10. ' ' → logprob: -15.751980781555176

Token 137: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0004070778959430754
    2. ' list' → logprob: -8.375407218933105
    3. '(list' → logprob: -8.750407218933105
    4. 'max' → logprob: -11.125407218933105
    5. '   ' → logprob: -13.250407218933105
    6. '[list' → logprob: -14.375407218933105
    7. ' (' → logprob: -15.375407218933105
    8. '	list' → logprob: -16.00040626525879
    9. '=list' → logprob: -16.12540626525879
    10. '
' → logprob: -16.25040626525879

Token 138: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -1.9385402993066236e-05
    2. 'A' → logprob: -10.875019073486328
    3. '```' → logprob: -16.250019073486328
    4. '[A' → logprob: -16.625019073486328
    5. '_B' → logprob: -17.125019073486328
    6. '_' → logprob: -17.125019073486328
    7. 's' → logprob: -17.750019073486328
    8. '[' → logprob: -18.000019073486328
    9. ' _' → logprob: -18.125019073486328
    10. '[_' → logprob: -18.375019073486328

Token 139: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.750001907348633
    3. '[int' → logprob: -15.625001907348633
    4. '[id' → logprob: -16.000001907348633
    5. '[i' → logprob: -16.250001907348633
    6. '[index' → logprob: -17.375001907348633
    7. '[
' → logprob: -17.625001907348633
    8. ' [' → logprob: -17.750001907348633
    9. '[num' → logprob: -18.000001907348633
    10. 'idx' → logprob: -18.125001907348633

Token 140: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -5.44312788406387e-05
    2. '_idx' → logprob: -10.625054359436035
    3. 'A' → logprob: -11.375054359436035
    4. '[idx' → logprob: -12.125054359436035
    5. 'idx' → logprob: -13.125054359436035
    6. '_B' → logprob: -13.125054359436035
    7. '(idx' → logprob: -13.625054359436035
    8. '_IDX' → logprob: -13.750054359436035
    9. '```' → logprob: -13.875054359436035
    10. ')' → logprob: -14.000054359436035

Token 141: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003183041699230671
    2. ' ]' → logprob: -8.37531852722168
    3. ']+' → logprob: -9.87531852722168
    4. '-' → logprob: -10.75031852722168
    5. ']*' → logprob: -11.75031852722168
    6. ']-' → logprob: -12.75031852722168
    7. ' -' → logprob: -13.00031852722168
    8. ']
' → logprob: -14.50031852722168
    9. '']' → logprob: -15.12531852722168
    10. '"]' → logprob: -15.25031852722168

Token 142: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009189624106511474
    2. ' ' → logprob: -7.000918865203857
    3. '<|end|>' → logprob: -12.250919342041016
    4. ']' → logprob: -13.875919342041016
    5. '```' → logprob: -14.750919342041016
    6. ')' → logprob: -14.875919342041016
    7. '   ' → logprob: -15.000919342041016
    8. '<|end|>' → logprob: -16.000919342041016
    9. '  ' → logprob: -16.375919342041016
    10. '0' → logprob: -16.625919342041016

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6656825866666622e-05
    2. ' ' → logprob: -10.62502670288086
    3. '<|end|>' → logprob: -13.37502670288086
    4. ')' → logprob: -15.50002670288086
    5. '```' → logprob: -16.06252670288086
    6. '   ' → logprob: -16.93752670288086
    7. ']' → logprob: -17.25002670288086
    8. '0' → logprob: -17.25002670288086
    9. '>' → logprob: -17.31252670288086
    10. '<|end|>' → logprob: -17.81252670288086

Token 144: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04965114966034889
    2. ']+' → logprob: -3.0496511459350586
    3. '+' → logprob: -6.924651145935059
    4. ')' → logprob: -9.924651145935059
    5. ' ]' → logprob: -11.174651145935059
    6. ')+' → logprob: -11.674651145935059
    7. ' +' → logprob: -11.924651145935059
    8. '+]' → logprob: -15.174651145935059
    9. '']' → logprob: -15.299651145935059
    10. '>' → logprob: -15.299651145935059

Token 145: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.632627546787262
    2. ' +' → logprob: -0.757627546787262
    3. '+
' → logprob: -11.007627487182617
    4. '
' → logprob: -13.007627487182617
    5. ' ' → logprob: -13.132627487182617
    6. ' +
' → logprob: -13.132627487182617
    7. ' plus' → logprob: -13.507627487182617
    8. 'plus' → logprob: -14.132627487182617
    9. '   ' → logprob: -14.382627487182617
    10. '+b' → logprob: -14.882627487182617

Token 146: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.16022463142871857
    2. ' list' → logprob: -1.9102246761322021
    3. ' ' → logprob: -16.03522491455078
    4. '	list' → logprob: -16.16022491455078
    5. '$list' → logprob: -16.91022491455078
    6. '(list' → logprob: -17.03522491455078
    7. 'List' → logprob: -17.41022491455078
    8. '_list' → logprob: -17.66022491455078
    9. '=list' → logprob: -18.28522491455078
    10. '   ' → logprob: -18.53522491455078

Token 147: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -4.4849443838757e-06
    2. '```' → logprob: -12.750004768371582
    3. ' _' → logprob: -14.500004768371582
    4. '_' → logprob: -14.750004768371582
    5. '_A' → logprob: -15.500004768371582
    6. ')_' → logprob: -16.500003814697266
    7. 'B' → logprob: -16.500003814697266
    8. '`' → logprob: -16.625003814697266
    9. '[_' → logprob: -16.875003814697266
    10. '"_' → logprob: -17.250003814697266

Token 148: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -14.125001907348633
    3. 'idx' → logprob: -14.625001907348633
    4. '[int' → logprob: -16.125001907348633
    5. '(idx' → logprob: -17.000001907348633
    6. '[i' → logprob: -17.375001907348633
    7. ' idx' → logprob: -17.625001907348633
    8. '[
' → logprob: -17.750001907348633
    9. '[id' → logprob: -17.875001907348633
    10. ' [' → logprob: -18.500001907348633

Token 149: '_B' (ID: 3201)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.5008334517478943
    2. '_B' → logprob: -1.375833511352539
    3. 'idx' → logprob: -2.125833511352539
    4. 'B' → logprob: -4.000833511352539
    5. '-' → logprob: -6.125833511352539
    6. ' idx' → logprob: -7.000833511352539
    7. '_idx' → logprob: -8.375833511352539
    8. '(idx' → logprob: -9.375833511352539
    9. '[' → logprob: -9.500833511352539
    10. '```' → logprob: -9.750833511352539

Token 150: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3485202491283417
    2. '-' → logprob: -1.223520278930664
    3. ' ' → logprob: -9.598520278930664
    4. ']' → logprob: -13.348520278930664
    5. ')' → logprob: -13.973520278930664
    6. '<|end|>' → logprob: -13.973520278930664
    7. '[' → logprob: -14.223520278930664
    8. '1' → logprob: -14.223520278930664
    9. 'user' → logprob: -14.723520278930664
    10. '`' → logprob: -14.723520278930664

Token 151: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005929982289671898
    2. ' ' → logprob: -5.130929946899414
    3. '   ' → logprob: -15.005929946899414
    4. '-' → logprob: -15.443429946899414
    5. '```' → logprob: -15.818429946899414
    6. '<|end|>' → logprob: -16.568429946899414
    7. ')' → logprob: -16.630929946899414
    8. '１' → logprob: -16.630929946899414
    9. ']' → logprob: -16.693429946899414
    10. '  ' → logprob: -17.193429946899414

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003602094016969204
    2. ' ' → logprob: -5.628602027893066
    3. '```' → logprob: -14.316102027893066
    4. '   ' → logprob: -14.753602027893066
    5. '2' → logprob: -15.128602027893066
    6. '<|end|>' → logprob: -16.066102981567383
    7. '-' → logprob: -16.128602981567383
    8. '１' → logprob: -16.503602981567383
    9. '۱' → logprob: -16.691102981567383
    10. '  ' → logprob: -16.878602981567383

Token 153: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12413204461336136
    2. ' -' → logprob: -2.3741321563720703
    3. '-dis' → logprob: -3.7491321563720703
    4. '-disc' → logprob: -9.24913215637207
    5. ' ' → logprob: -13.74913215637207
    6. ' discount' → logprob: -13.99913215637207
    7. '   ' → logprob: -14.12413215637207
    8. '-c' → logprob: -14.37413215637207
    9. '-d' → logprob: -14.37413215637207
    10. ')' → logprob: -14.87413215637207

Token 154: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13107571005821228
    2. ' -' → logprob: -2.381075620651245
    3. '-dis' → logprob: -3.506075620651245
    4. '-min' → logprob: -8.506075859069824
    5. '-disc' → logprob: -9.756075859069824
    6. '   ' → logprob: -10.631075859069824
    7. '-code' → logprob: -11.256075859069824
    8. '-if' → logprob: -11.381075859069824
    9. '-price' → logprob: -11.631075859069824
    10. 'discount' → logprob: -11.881075859069824

Token 155: ' discount' (ID: 11522)
  Prédit: 'discount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'discount' → logprob: -0.00594479450955987
    2. ' discount' → logprob: -5.130944728851318
    3. 'dis' → logprob: -11.130945205688477
    4. '   ' → logprob: -14.255945205688477
    5. 'max' → logprob: -14.880945205688477
    6. '(dis' → logprob: -15.630945205688477
    7. ' ' → logprob: -16.005945205688477
    8. 'disc' → logprob: -16.005945205688477
    9. '  ' → logprob: -17.630945205688477
    10. 'd' → logprob: -17.630945205688477

Token 156: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0015256908955052495
    2. 'if' → logprob: -6.62652587890625
    3. ' if' → logprob: -9.25152587890625
    4. '
' → logprob: -9.87652587890625
    5. 'min' → logprob: -10.25152587890625
    6. '<|end|>' → logprob: -12.12652587890625
    7. '' → logprob: -12.62652587890625
    8. '  
' → logprob: -13.12652587890625
    9. '   ' → logprob: -13.62652587890625
    10. '    
' → logprob: -13.87652587890625

Token 157: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006751255132257938
    2. 'min' → logprob: -5.38175106048584
    3. '   ' → logprob: -6.88175106048584
    4. 'if' → logprob: -7.25675106048584
    5. ' if' → logprob: -9.00675106048584
    6. '
' → logprob: -9.25675106048584
    7. '    
' → logprob: -9.38175106048584
    8. ' min' → logprob: -9.88175106048584
    9. '  
' → logprob: -11.50675106048584
    10. ',' → logprob: -12.25675106048584

Token 158: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.019368544220924377
    2. 'min' → logprob: -4.019368648529053
    3. '
' → logprob: -6.769368648529053
    4. ' if' → logprob: -9.644368171691895
    5. '   ' → logprob: -12.769368171691895
    6. ' min' → logprob: -14.144368171691895
    7. '    
' → logprob: -14.144368171691895
    8. '(min' → logprob: -16.26936912536621
    9. '[min' → logprob: -16.26936912536621
    10. ')' → logprob: -17.39436912536621

Token 159: ' coupon' (ID: 28009)
  Prédit: ' coupon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coupon' → logprob: -0.10022306442260742
    2. 'coupon' → logprob: -2.3502230644226074
    3. '	c' → logprob: -12.225223541259766
    4. 'min' → logprob: -12.350223541259766
    5. ' min' → logprob: -13.225223541259766
    6. 'c' → logprob: -13.225223541259766
    7. ' ' → logprob: -13.475223541259766
    8. '(c' → logprob: -14.100223541259766
    9. '_coupon' → logprob: -14.475223541259766
    10. '   ' → logprob: -15.100223541259766

Token 160: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.000321995816193521
    2. 'price' → logprob: -8.750322341918945
    3. '<' → logprob: -10.375322341918945
    4. '_discount' → logprob: -10.625322341918945
    5. 'Price' → logprob: -10.875322341918945
    6. '_prices' → logprob: -10.875322341918945
    7. '_PRICE' → logprob: -11.250322341918945
    8. '_' → logprob: -11.250322341918945
    9. 's' → logprob: -12.250322341918945
    10. ' ' → logprob: -12.375322341918945

Token 161: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1602420061826706
    2. ' <' → logprob: -1.910241961479187
    3. ' ' → logprob: -11.285242080688477
    4. '<m' → logprob: -13.785242080688477
    5. 'min' → logprob: -14.285242080688477
    6. '

' → logprob: -14.660242080688477
    7. '```' → logprob: -14.785242080688477
    8. ' ' → logprob: -14.910242080688477
    9. '<len' → logprob: -15.035242080688477
    10. '<num' → logprob: -15.035242080688477

Token 162: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -2.7610454708337784e-05
    2. ' min' → logprob: -10.500027656555176
    3. '	min' → logprob: -16.75002670288086
    4. '=min' → logprob: -18.87502670288086
    5. '_min' → logprob: -19.00002670288086
    6. '   ' → logprob: -19.12502670288086
    7. '(min' → logprob: -19.87502670288086
    8. '
' → logprob: -21.00002670288086
    9. ':min' → logprob: -21.37502670288086
    10. '[min' → logprob: -21.37502670288086

Token 163: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.25
    3. 'total' → logprob: -16.5
    4. '_price' → logprob: -17.75
    5. '_min' → logprob: -18.375
    6. '_coupon' → logprob: -18.875
    7. 'Total' → logprob: -19.125
    8. '_tot' → logprob: -19.375
    9. '_Total' → logprob: -20.25
    10. ' _' → logprob: -20.375

Token 164: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -1.27099974633893e-05
    2. 'price' → logprob: -11.875012397766113
    3. '_total' → logprob: -12.125012397766113
    4. 'Price' → logprob: -16.37501335144043
    5. '_' → logprob: -16.50001335144043
    6. 'total' → logprob: -16.62501335144043
    7. '_prices' → logprob: -16.75001335144043
    8. '_PRICE' → logprob: -17.50001335144043
    9. '_pr' → logprob: -18.62501335144043
    10. '	price' → logprob: -19.00001335144043

Token 165: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00046033994294703007
    2. ':
' → logprob: -7.750460147857666
    3. '):' → logprob: -11.250460624694824
    4. '   ' → logprob: -11.500460624694824
    5. ':min' → logprob: -13.125460624694824
    6. ' :' → logprob: -13.500460624694824
    7. '=' → logprob: -14.125460624694824
    8. '       ' → logprob: -14.875460624694824
    9. '_min' → logprob: -15.000460624694824
    10. ',' → logprob: -15.000460624694824

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030749855563044548
    2. '   ' → logprob: -3.780749797821045
    3. 'min' → logprob: -5.280749797821045
    4. ' min' → logprob: -6.155749797821045
    5. '	min' → logprob: -8.655750274658203
    6. ':' → logprob: -11.030750274658203
    7. '    
' → logprob: -11.280750274658203
    8. '	   ' → logprob: -11.530750274658203
    9. '(min' → logprob: -11.780750274658203
    10. '    ' → logprob: -11.905750274658203

Token 167: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.03786588832736015
    2. ' min' → logprob: -3.6628658771514893
    3. '       ' → logprob: -4.662866115570068
    4. '   ' → logprob: -6.537866115570068
    5. '           ' → logprob: -7.537866115570068
    6. '	min' → logprob: -9.53786563873291
    7. '```' → logprob: -13.16286563873291
    8. '_min' → logprob: -13.41286563873291
    9. ' ' → logprob: -14.03786563873291
    10. '
' → logprob: -14.53786563873291

Token 168: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -9.849109119386412e-06
    2. 'total' → logprob: -11.750009536743164
    3. 'Total' → logprob: -13.500009536743164
    4. '<|end|>' → logprob: -14.875009536743164
    5. '_TOTAL' → logprob: -16.875009536743164
    6. '_' → logprob: -17.000009536743164
    7. ' total' → logprob: -17.250009536743164
    8. '	total' → logprob: -17.250009536743164
    9. '_Total' → logprob: -17.500009536743164
    10. ' _' → logprob: -18.750009536743164

Token 169: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.0005804349202662706
    2. '_total' → logprob: -7.500580310821533
    3. 'price' → logprob: -11.125580787658691
    4. 'total' → logprob: -11.375580787658691
    5. '_prices' → logprob: -14.125580787658691
    6. 'Price' → logprob: -15.500580787658691
    7. '_purchase' → logprob: -16.625579833984375
    8. '_PRICE' → logprob: -16.750579833984375
    9. '_' → logprob: -16.875579833984375
    10. '	price' → logprob: -17.375579833984375

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132629096508026
    2. '=' → logprob: -1.313262939453125
    3. '=c' → logprob: -13.688262939453125
    4. '＝' → logprob: -17.063262939453125
    5. '=

' → logprob: -17.188262939453125
    6. ' =
' → logprob: -17.438262939453125
    7. '=cut' → logprob: -18.188262939453125
    8. ' =)' → logprob: -18.813262939453125
    9. ' ' → logprob: -19.063262939453125
    10. '=
' → logprob: -19.438262939453125

Token 171: ' coupon' (ID: 28009)
  Prédit: 'coupon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coupon' → logprob: -0.018156379461288452
    2. ' coupon' → logprob: -4.0181565284729
    3. 'c' → logprob: -12.268156051635742
    4. 'cou' → logprob: -13.893156051635742
    5. '_coupon' → logprob: -14.768156051635742
    6. '   ' → logprob: -15.518156051635742
    7. '	c' → logprob: -15.518156051635742
    8. 'coin' → logprob: -17.018156051635742
    9. 'Coupon' → logprob: -17.768156051635742
    10. '```' → logprob: -17.768156051635742

Token 172: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -6.0033853515051305e-05
    2. 'price' → logprob: -9.750060081481934
    3. 'Price' → logprob: -13.625060081481934
    4. '[' → logprob: -16.000059127807617
    5. ' price' → logprob: -16.375059127807617
    6. '_coupon' → logprob: -16.625059127807617
    7. '_' → logprob: -16.750059127807617
    8. '_PRICE' → logprob: -17.500059127807617
    9. '_prices' → logprob: -17.875059127807617
    10. '	price' → logprob: -18.250059127807617

Token 173: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001831565605243668
    2. '
' → logprob: -8.62518310546875
    3. ' print' → logprob: -13.00018310546875
    4. '

' → logprob: -15.37518310546875
    5. '    
' → logprob: -15.37518310546875
    6. '  
' → logprob: -15.37518310546875
    7. ')' → logprob: -15.75018310546875
    8. '```' → logprob: -15.75018310546875
    9. '
' → logprob: -16.12518310546875
    10. ' 
' → logprob: -16.25018310546875

Token 174: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. '
' → logprob: -15.5
    3. '```' → logprob: -17.75
    4. ' print' → logprob: -17.875
    5. 'pr' → logprob: -21.375
    6. '  
' → logprob: -21.625
    7. '    
' → logprob: -22.25
    8. '#print' → logprob: -22.375
    9. '``' → logprob: -23.125
    10. '
' → logprob: -23.125

Token 175: '(min' (ID: 26035)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07890333980321884
    2. '(min' → logprob: -2.5789034366607666
    3. '("("' → logprob: -12.078903198242188
    4. '(max' → logprob: -12.578903198242188
    5. '(`' → logprob: -13.578903198242188
    6. '()' → logprob: -13.578903198242188
    7. '('' → logprob: -13.953903198242188
    8. '(
' → logprob: -15.203903198242188
    9. '(m' → logprob: -15.578903198242188
    10. '((' → logprob: -15.828903198242188

Token 176: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -3.128163257315464e-07
    2. 'total' → logprob: -16.375
    3. ')_' → logprob: -17.0
    4. '_' → logprob: -17.625
    5. 'Total' → logprob: -18.125
    6. '_tot' → logprob: -18.375
    7. ' _' → logprob: -18.875
    8. 'otal' → logprob: -19.25
    9. ')' → logprob: -19.25
    10. '_to' → logprob: -19.375

Token 177: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -1.9743012671824545e-05
    2. '_' → logprob: -11.500020027160645
    3. 'price' → logprob: -12.125020027160645
    4. '_p' → logprob: -14.125020027160645
    5. '_prices' → logprob: -14.375020027160645
    6. '_score' → logprob: -14.625020027160645
    7. 'print' → logprob: -14.750020027160645
    8. '_total' → logprob: -14.875020027160645
    9. 'Price' → logprob: -15.125020027160645
    10. '_val' → logprob: -15.500020027160645

Token 178: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -13.625000953674316
    3. ')
' → logprob: -16.500001907348633
    4. ')`' → logprob: -17.750001907348633
    5. '))' → logprob: -19.250001907348633
    6. ')#' → logprob: -20.000001907348633
    7. '')' → logprob: -20.125001907348633
    8. '```' → logprob: -20.250001907348633
    9. ')}' → logprob: -20.375001907348633
    10. '),' → logprob: -20.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 176
Tokens correctement prédits (1ère position, stricte): 84
Tokens correctement prédits (1ère position, avec adaptation): 88
Tokens correctement prédits (top 10): 155
Précision stricte (1ère position): 47.73%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 88.07%
================================================================================
