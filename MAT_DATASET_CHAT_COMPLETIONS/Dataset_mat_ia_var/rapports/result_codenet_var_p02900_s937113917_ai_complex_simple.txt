================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:43:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from math import isqrt
from operator import mul

A, B = map(int, input().split())

prime_decompose = lambda n: list(
    reduce(
        lambda acc, val: acc + [val[0]]*val[1],
        (
            (p, lambda x, y=0: (lambda f: f(f,x,y))(lambda f, n, c: f(f, n//p, c+1) if n%p==0 else c))(n)
            for p in range(2, isqrt(n)+1)
            if any((n:=n) and not n%p or None for _ in [0]) or None
        ),
        [] if n > 1 else []
    ) + ([n] if n > 1 else [])
)

def compute_prime_factors_set(num):
    s, x = set(), num
    for p in range(2, isqrt(x)+2):
        while x%p==0:
            s.add(p)
            x//=p
    if x>1:s.add(x)
    return s

A_dec = compute_prime_factors_set(A)
B_dec = compute_prime_factors_set(B)

ans = sum(map(lambda x: 1, filter(lambda x: x in B_dec, A_dec)))+1

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.6123510599136353
    2. 'wrap' → logprob: -0.8623510599136353
    3. 'reduce' → logprob: -3.4873509407043457
    4. 'l' → logprob: -6.112350940704346
    5. ' wraps' → logprob: -6.362350940704346
    6. 'cached' → logprob: -7.612350940704346
    7. 'cache' → logprob: -7.987350940704346
    8. 'cmp' → logprob: -9.112351417541504
    9. '```' → logprob: -9.237351417541504
    10. ' partial' → logprob: -9.487351417541504

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019195254892110825
    2. '(lambda' → logprob: -4.394195079803467
    3. '.' → logprob: -5.144195079803467
    4. ',' → logprob: -8.019195556640625
    5. ' (' → logprob: -8.519195556640625
    6. '```' → logprob: -9.519195556640625
    7. '(
' → logprob: -10.144195556640625
    8. '\(' → logprob: -10.269195556640625
    9. '\' → logprob: -10.394195556640625
    10. 'lambda' → logprob: -11.019195556640625

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028644466772675514
    2. '\' → logprob: -4.153644561767578
    3. 'def' → logprob: -5.028644561767578
    4. '(
' → logprob: -6.028644561767578
    5. '(lambda' → logprob: -6.653644561767578
    6. ',' → logprob: -7.653644561767578
    7. '\n' → logprob: -7.778644561767578
    8. '```' → logprob: -7.903644561767578
    9. '\(' → logprob: -8.403644561767578
    10. '`' → logprob: -9.278644561767578

Token 6: ' math' (ID: 13324)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.8141523599624634
    2. ' math' → logprob: -0.9391523599624634
    3. 'operator' → logprob: -2.814152240753174
    4. ' itertools' → logprob: -2.814152240753174
    5. 'math' → logprob: -3.689152240753174
    6. ' collections' → logprob: -4.064152240753174
    7. 'collections' → logprob: -6.064152240753174
    8. ' os' → logprob: -6.814152240753174
    9. 'os' → logprob: -8.439152717590332
    10. 'it' → logprob: -9.439152717590332

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.01146475039422512
    2. 'import' → logprob: -4.761464595794678
    3. ' ' → logprob: -5.886464595794678
    4. '	import' → logprob: -11.261465072631836
    5. ' sqrt' → logprob: -11.261465072631836
    6. '.sqrt' → logprob: -11.636465072631836
    7. '<|end|>' → logprob: -12.136465072631836
    8. '_import' → logprob: -12.261465072631836
    9. ' imports' → logprob: -12.261465072631836
    10. ' importar' → logprob: -12.386465072631836

Token 8: ' is' (ID: 382)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.2218693345785141
    2. 'sqrt' → logprob: -2.3468692302703857
    3. ' sqrt' → logprob: -2.7218692302703857
    4. ' factorial' → logprob: -3.9718692302703857
    5. ' prod' → logprob: -5.471869468688965
    6. ' ceil' → logprob: -5.596869468688965
    7. 'prod' → logprob: -6.221869468688965
    8. 'pow' → logprob: -6.346869468688965
    9. 'g' → logprob: -6.471869468688965
    10. 'factor' → logprob: -6.721869468688965

Token 9: 'qrt' (ID: 17629)
  Prédit: 'qrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qrt' → logprob: -0.0008852534228935838
    2. 'close' → logprob: -7.125885486602783
    3. 'finite' → logprob: -10.125885009765625
    4. 'prime' → logprob: -11.125885009765625
    5. 'nan' → logprob: -11.625885009765625
    6. 'n' → logprob: -12.125885009765625
    7. 'inf' → logprob: -12.500885009765625
    8. 'nt' → logprob: -12.750885009765625
    9. 'q' → logprob: -13.500885009765625
    10. 'quare' → logprob: -14.250885009765625

Token 10: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.5144026279449463
    2. '\' → logprob: -1.7644026279449463
    3. '```' → logprob: -1.8894026279449463
    4. '(' → logprob: -2.0144026279449463
    5. '
' → logprob: -2.1394026279449463
    6. 'def' → logprob: -2.2644026279449463
    7. '(
' → logprob: -2.6394026279449463
    8. '`' → logprob: -4.264402389526367
    9. ',' → logprob: -5.514402389526367
    10. '``' → logprob: -6.389402389526367

Token 11: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.49462440609931946
    2. '```' → logprob: -1.369624376296997
    3. '

' → logprob: -2.744624376296997
    4. '
' → logprob: -3.244624376296997
    5. '\' → logprob: -4.119624614715576
    6. '\n' → logprob: -4.994624614715576
    7. '``' → logprob: -5.369624614715576
    8. '(' → logprob: -7.119624614715576
    9. '
' → logprob: -7.119624614715576
    10. '`

' → logprob: -7.244624614715576

Token 12: ' operator' (ID: 11019)
  Prédit: ' sym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sym' → logprob: -0.9011770486831665
    2. ' operator' → logprob: -0.9011770486831665
    3. ' itertools' → logprob: -2.401176929473877
    4. 'operator' → logprob: -3.526176929473877
    5. ' fractions' → logprob: -3.651176929473877
    6. ' typing' → logprob: -4.026176929473877
    7. ' collections' → logprob: -4.526176929473877
    8. 'sym' → logprob: -5.026176929473877
    9. 'collections' → logprob: -6.151176929473877
    10. 'typing' → logprob: -6.776176929473877

Token 13: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.16893315315246582
    2. 'import' → logprob: -1.9189331531524658
    3. '.' → logprob: -4.793932914733887
    4. ' ' → logprob: -8.793932914733887
    5. ' .' → logprob: -9.043932914733887
    6. '<|end|>' → logprob: -9.668932914733887
    7. '_import' → logprob: -11.293932914733887
    8. '	import' → logprob: -11.918932914733887
    9. '.import' → logprob: -12.168932914733887
    10. ' as' → logprob: -12.293932914733887

Token 14: ' mul' (ID: 9975)
  Prédit: ' mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.2542065382003784
    2. 'mul' → logprob: -1.5042065382003784
    3. '.mul' → logprob: -7.004206657409668
    4. ' add' → logprob: -7.629206657409668
    5. 'pow' → logprob: -8.504206657409668
    6. '_mul' → logprob: -8.629206657409668
    7. ' import' → logprob: -9.004206657409668
    8. 'add' → logprob: -9.379206657409668
    9. '```' → logprob: -9.629206657409668
    10. ' ' → logprob: -9.754206657409668

Token 15: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48403656482696533
    2. '\n' → logprob: -1.9840365648269653
    3. '

' → logprob: -2.109036445617676
    4. '\' → logprob: -3.359036445617676
    5. '
' → logprob: -3.484036445617676
    6. '(' → logprob: -3.609036445617676
    7. '```' → logprob: -4.484036445617676
    8. ',' → logprob: -4.984036445617676
    9. '(
' → logprob: -6.234036445617676
    10. ',

' → logprob: -6.609036445617676

Token 16: 'A' (ID: 32)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07641009241342545
    2. '```' → logprob: -3.5764100551605225
    3. '\' → logprob: -4.201410293579102
    4. '\n' → logprob: -4.951410293579102
    5. '(' → logprob: -4.951410293579102
    6. '

' → logprob: -5.201410293579102
    7. ',' → logprob: -6.451410293579102
    8. ',

' → logprob: -6.451410293579102
    9. '`

' → logprob: -6.576410293579102
    10. '(

' → logprob: -7.076410293579102

Token 17: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0932762622833252
    2. '_' → logprob: -1.2182762622833252
    3. '=' → logprob: -1.3432762622833252
    4. ',' → logprob: -3.468276262283325
    5. '[' → logprob: -3.593276262283325
    6. '.' → logprob: -4.343276023864746
    7. 'I' → logprob: -5.093276023864746
    8. 'L' → logprob: -5.218276023864746
    9. 'B' → logprob: -6.218276023864746
    10. ' ' → logprob: -6.343276023864746

Token 18: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6989389657974243
    2. ' B' → logprob: -0.6989389657974243
    3. 'n' → logprob: -6.823938846588135
    4. ' ' → logprob: -7.323938846588135
    5. 'b' → logprob: -7.448938846588135
    6. '*' → logprob: -7.573938846588135
    7. 'N' → logprob: -7.823938846588135
    8. ' n' → logprob: -7.948938846588135
    9. 'K' → logprob: -8.573939323425293
    10. 'm' → logprob: -8.573939323425293

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18005132675170898
    2. '=' → logprob: -1.805051326751709
    3. ',' → logprob: -8.180051803588867
    4. ' ' → logprob: -11.305051803588867
    5. ')' → logprob: -12.430051803588867
    6. '<|end|>' → logprob: -12.680051803588867
    7. ' =
' → logprob: -13.555051803588867
    8. '  ' → logprob: -13.930051803588867
    9. ' ,' → logprob: -14.055051803588867
    10. ' =)' → logprob: -14.305051803588867

Token 20: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5612618327140808
    2. 'map' → logprob: -1.4362618923187256
    3. ' ' → logprob: -2.0612618923187256
    4. '0' → logprob: -3.8112618923187256
    5. '1' → logprob: -4.0612616539001465
    6. '10' → logprob: -4.4362616539001465
    7. 'input' → logprob: -5.3112616539001465
    8. 'int' → logprob: -6.4362616539001465
    9. '2' → logprob: -6.8112616539001465
    10. ' input' → logprob: -6.9362616539001465

Token 21: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6032843589782715
    2. '(int' → logprob: -0.8532843589782715
    3. '(lambda' → logprob: -4.2282843589782715
    4. '(str' → logprob: -4.8532843589782715
    5. '(input' → logprob: -5.9782843589782715
    6. '<|end|>' → logprob: -7.2282843589782715
    7. 'int' → logprob: -8.35328483581543
    8. '(eval' → logprob: -8.47828483581543
    9. '[int' → logprob: -8.85328483581543
    10. '(range' → logprob: -9.10328483581543

Token 22: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6842244863510132
    2. '(' → logprob: -1.3092244863510132
    3. ')' → logprob: -2.0592246055603027
    4. 'input' → logprob: -2.4342246055603027
    5. ',' → logprob: -5.559224605560303
    6. ',input' → logprob: -6.059224605560303
    7. ' input' → logprob: -6.309224605560303
    8. '```' → logprob: -7.559224605560303
    9. '(int' → logprob: -7.684224605560303
    10. '=input' → logprob: -8.809224128723145

Token 23: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06206907704472542
    2. ' input' → logprob: -2.8120691776275635
    3. ')' → logprob: -9.812068939208984
    4. '(input' → logprob: -10.062068939208984
    5. ',input' → logprob: -13.312068939208984
    6. '=input' → logprob: -14.312068939208984
    7. ' ' → logprob: -14.312068939208984
    8. '	input' → logprob: -14.687068939208984
    9. ' )' → logprob: -14.812068939208984
    10. '```' → logprob: -16.437068939208984

Token 24: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7787218689918518
    2. '())' → logprob: -0.7787218689918518
    3. '().' → logprob: -3.528721809387207
    4. '(' → logprob: -3.653721809387207
    5. ')' → logprob: -4.278721809387207
    6. '());' → logprob: -5.153721809387207
    7. '(()' → logprob: -6.028721809387207
    8. '(),' → logprob: -6.403721809387207
    9. '();)' → logprob: -7.653721809387207
    10. '()))' → logprob: -7.903721809387207

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00010402000043541193
    2. 'strip' → logprob: -9.250103950500488
    3. ' split' → logprob: -12.500103950500488
    4. 'rstrip' → logprob: -13.375103950500488
    5. 'spl' → logprob: -14.125103950500488
    6. 'read' → logprob: -14.375103950500488
    7. '```' → logprob: -14.875103950500488
    8. ')' → logprob: -14.875103950500488
    9. '(split' → logprob: -15.000103950500488
    10. 'startswith' → logprob: -16.250104904174805

Token 26: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10026803612709045
    2. '))' → logprob: -2.3502681255340576
    3. '),' → logprob: -10.725268363952637
    4. '()' → logprob: -11.100268363952637
    5. '())' → logprob: -11.350268363952637
    6. ')))' → logprob: -12.850268363952637
    7. ')`' → logprob: -13.100268363952637
    8. '`)' → logprob: -13.350268363952637
    9. '(' → logprob: -13.600268363952637
    10. ')
' → logprob: -14.225268363952637

Token 27: 'prime' (ID: 46441)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0389031171798706
    2. 'g' → logprob: -1.9139031171798706
    3. '```' → logprob: -2.28890323638916
    4. 'div' → logprob: -2.53890323638916
    5. ':' → logprob: -2.53890323638916
    6. 'if' → logprob: -2.78890323638916
    7. 'n' → logprob: -2.91390323638916
    8. 'd' → logprob: -3.66390323638916
    9. ')' → logprob: -3.91390323638916
    10. ':
' → logprob: -4.78890323638916

Token 28: '_de' (ID: 5047)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14453521370887756
    2. '_f' → logprob: -2.1445353031158447
    3. 'f' → logprob: -4.894535064697266
    4. '_s' → logprob: -5.269535064697266
    5. '_factor' → logprob: -5.644535064697266
    6. '_' → logprob: -7.644535064697266
    7. ' =' → logprob: -9.019535064697266
    8. '_candidates' → logprob: -9.019535064697266
    9. '_div' → logprob: -9.144535064697266
    10. 'factor' → logprob: -9.269535064697266

Token 29: 'compose' (ID: 65322)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.049654893577098846
    2. 'ns' → logprob: -3.924654960632324
    3. 'ms' → logprob: -4.549654960632324
    4. 'nts' → logprob: -5.299654960632324
    5. 'fs' → logprob: -6.049654960632324
    6. 'nds' → logprob: -6.549654960632324
    7. 'rs' → logprob: -6.674654960632324
    8. 'fic' → logprob: -6.799654960632324
    9. 'com' → logprob: -6.799654960632324
    10. 'cies' → logprob: -7.174654960632324

Token 30: ' =' (ID: 314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.24072003364562988
    2. '(' → logprob: -1.6157200336456299
    3. '(d' → logprob: -4.240719795227051
    4. ' =' → logprob: -7.740719795227051
    5. '=' → logprob: -8.74071979522705
    6. 's' → logprob: -9.99071979522705
    7. '(A' → logprob: -10.24071979522705
    8. ' (' → logprob: -10.49071979522705
    9. '_d' → logprob: -10.74071979522705
    10. 'r' → logprob: -11.61571979522705

Token 31: ' lambda' (ID: 27871)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.35635098814964294
    2. '(lambda' → logprob: -1.4813510179519653
    3. 'lambda' → logprob: -2.981350898742676
    4. '{' → logprob: -4.856350898742676
    5. 'dict' → logprob: -4.981350898742676
    6. '[]' → logprob: -5.606350898742676
    7. '(' → logprob: -6.356350898742676
    8. ' lambda' → logprob: -7.731350898742676
    9. 'default' → logprob: -8.106350898742676
    10. ' {}' → logprob: -8.106350898742676

Token 32: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2103852480649948
    2. 'n' → logprob: -2.085385322570801
    3. ' x' → logprob: -3.210385322570801
    4. 'x' → logprob: -3.710385322570801
    5. 'N' → logprob: -7.960385322570801
    6. ' N' → logprob: -8.5853853225708
    7. 'a' → logprob: -10.8353853225708
    8. ' a' → logprob: -10.9603853225708
    9. '(n' → logprob: -11.0853853225708
    10. ' num' → logprob: -11.2103853225708

Token 33: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0035165678709745407
    2. ' :' → logprob: -6.003516674041748
    3. ':[' → logprob: -8.25351619720459
    4. '[:' → logprob: -8.62851619720459
    5. ',:' → logprob: -8.75351619720459
    6. ',' → logprob: -9.00351619720459
    7. ':n' → logprob: -9.12851619720459
    8. '=:' → logprob: -9.25351619720459
    9. '=' → logprob: -11.00351619720459
    10. '_:' → logprob: -11.00351619720459

Token 34: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.60920250415802
    2. '[]' → logprob: -1.85920250415802
    3. ' [' → logprob: -2.6092023849487305
    4. '(lambda' → logprob: -2.7342023849487305
    5. ' (' → logprob: -3.2342023849487305
    6. '[(' → logprob: -3.3592023849487305
    7. '{' → logprob: -3.9842023849487305
    8. '(' → logprob: -4.3592023849487305
    9. ' []' → logprob: -4.7342023849487305
    10. 'lambda' → logprob: -4.9842023849487305

Token 35: '(
' (ID: 1607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7186557054519653
    2. '(filter' → logprob: -0.9686557054519653
    3. '(re' → logprob: -2.593655586242676
    4. '(lambda' → logprob: -3.593655586242676
    5. '(pr' → logprob: -5.093655586242676
    6. '(iter' → logprob: -5.093655586242676
    7. '(chain' → logprob: -5.343655586242676
    8. '(f' → logprob: -6.093655586242676
    9. '(m' → logprob: -6.343655586242676
    10. '()' → logprob: -6.718655586242676

Token 36: '   ' (ID: 271)
  Prédit: 'filter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'filter' → logprob: -0.756579577922821
    2. 'reduce' → logprob: -1.1315796375274658
    3. ')' → logprob: -2.631579637527466
    4. '(filter' → logprob: -2.631579637527466
    5. '(i' → logprob: -4.631579399108887
    6. 'next' → logprob: -5.006579399108887
    7. 'prime' → logprob: -5.131579399108887
    8. 'i' → logprob: -5.631579399108887
    9. ' ' → logprob: -5.631579399108887
    10. 'pr' → logprob: -5.631579399108887

Token 37: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' (adapté à ' reduce') → logprob: -0.549225926399231
    2. 'filter' → logprob: -1.299225926399231
    3. '(filter' → logprob: -3.0492258071899414
    4. '(i' → logprob: -3.4242258071899414
    5. 'prime' → logprob: -4.299225807189941
    6. 'i' → logprob: -4.674225807189941
    7. 'next' → logprob: -5.049225807189941
    8. '(
' → logprob: -5.299225807189941
    9. 'x' → logprob: -5.549225807189941
    10. 'range' → logprob: -5.549225807189941

Token 38: '(
' (ID: 1607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2373775988817215
    2. '(lambda' → logprob: -1.737377643585205
    3. '(
' → logprob: -3.362377643585205
    4. '(m' → logprob: -7.862377643585205
    5. '(operator' → logprob: -9.737377166748047
    6. '(
' → logprob: -9.987377166748047
    7. '(

' → logprob: -10.112377166748047
    8. '(list' → logprob: -10.237377166748047
    9. '(int' → logprob: -10.362377166748047
    10. '((' → logprob: -10.362377166748047

Token 39: '       ' (ID: 309)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.6099340915679932
    2. '(
' → logprob: -1.4849340915679932
    3. '   ' → logprob: -1.9849340915679932
    4. 'lambda' → logprob: -2.734934091567993
    5. '(' → logprob: -4.359933853149414
    6. 'mul' → logprob: -4.984933853149414
    7. '       ' → logprob: -6.234933853149414
    8. 'list' → logprob: -6.734933853149414
    9. ' lambda' → logprob: -6.984933853149414
    10. ' ' → logprob: -7.109933853149414

Token 40: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' (adapté à ' lambda') → logprob: -0.3509126901626587
    2. '(lambda' → logprob: -1.2259126901626587
    3. '   ' → logprob: -6.475912570953369
    4. 'list' → logprob: -7.600912570953369
    5. '(
' → logprob: -8.600913047790527
    6. ' lambda' → logprob: -9.100913047790527
    7. '=lambda' → logprob: -10.225913047790527
    8. '       ' → logprob: -10.600913047790527
    9. 'mul' → logprob: -11.350913047790527
    10. ')' → logprob: -11.725913047790527

Token 41: ' acc' (ID: 1259)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5777486562728882
    2. ' acc' → logprob: -1.8277486562728882
    3. ' factors' → logprob: -2.7027487754821777
    4. ' f' → logprob: -3.2027487754821777
    5. 'acc' → logprob: -3.3277487754821777
    6. 'div' → logprob: -4.202748775482178
    7. ' res' → logprob: -4.452748775482178
    8. '(lambda' → logprob: -4.452748775482178
    9. ' lambda' → logprob: -4.827748775482178
    10. 'lambda' → logprob: -4.827748775482178

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00042567000491544604
    2. ',n' → logprob: -9.000425338745117
    3. 'lambda' → logprob: -9.500425338745117
    4. ' ,' → logprob: -10.000425338745117
    5. '       ' → logprob: -10.000425338745117
    6. '=lambda' → logprob: -10.250425338745117
    7. ',x' → logprob: -11.125425338745117
    8. ',
' → logprob: -11.500425338745117
    9. ' lambda' → logprob: -11.500425338745117
    10. 'a' → logprob: -11.625425338745117

Token 43: ' val' (ID: 1459)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.698418140411377
    2. 'x' → logprob: -1.698418140411377
    3. ' p' → logprob: -2.073418140411377
    4. 'i' → logprob: -2.948418140411377
    5. 'd' → logprob: -3.073418140411377
    6. ' x' → logprob: -3.698418140411377
    7. ' d' → logprob: -3.698418140411377
    8. ' i' → logprob: -4.198418140411377
    9. 'f' → logprob: -5.073418140411377
    10. ' ' → logprob: -5.823418140411377

Token 44: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010847324738278985
    2. 's' → logprob: -7.376084804534912
    3. ',' → logprob: -9.251084327697754
    4. ',:' → logprob: -9.251084327697754
    5. ' :' → logprob: -9.376084327697754
    6. ':
' → logprob: -9.376084327697754
    7. 'er' → logprob: -9.626084327697754
    8. '__:' → logprob: -11.876084327697754
    9. '_:' → logprob: -12.126084327697754
    10. '=' → logprob: -12.626084327697754

Token 45: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.1435079723596573
    2. ' acc' → logprob: -2.393507957458496
    3. '(acc' → logprob: -3.393507957458496
    4. '   ' → logprob: -6.643507957458496
    5. '(
' → logprob: -6.768507957458496
    6. '[' → logprob: -6.768507957458496
    7. '[*' → logprob: -6.768507957458496
    8. '(' → logprob: -6.893507957458496
    9. 'val' → logprob: -7.643507957458496
    10. '[val' → logprob: -7.643507957458496

Token 46: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5332656502723694
    2. '+' → logprob: -0.9082656502723694
    3. '+[' → logprob: -5.908265590667725
    4. ' if' → logprob: -6.033265590667725
    5. 'if' → logprob: -6.283265590667725
    6. '.append' → logprob: -7.158265590667725
    7. '*' → logprob: -7.658265590667725
    8. '[:-' → logprob: -7.658265590667725
    9. '[:]' → logprob: -7.658265590667725
    10. '=' → logprob: -9.158266067504883

Token 47: ' [' (ID: 723)
  Prédit: '[val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[val' → logprob: -0.39516809582710266
    2. '[(' → logprob: -1.5201680660247803
    3. '([' → logprob: -3.1451680660247803
    4. '[' → logprob: -3.5201680660247803
    5. '([(' → logprob: -4.270168304443359
    6. ' [(' → logprob: -5.145168304443359
    7. ' [' → logprob: -5.270168304443359
    8. '[((' → logprob: -5.520168304443359
    9. '(val' → logprob: -6.395168304443359
    10. ' ([' → logprob: -6.770168304443359

Token 48: 'val' (ID: 1105)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.5240297317504883
    2. 'val' → logprob: -1.0240297317504883
    3. '(' → logprob: -3.7740297317504883
    4. '[val' → logprob: -4.399029731750488
    5. '1' → logprob: -5.524029731750488
    6. '(n' → logprob: -5.649029731750488
    7. '*' → logprob: -6.024029731750488
    8. '[' → logprob: -7.024029731750488
    9. '(lambda' → logprob: -8.149029731750488
    10. ' val' → logprob: -8.399029731750488

Token 49: '[' (ID: 58)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02858063578605652
    2. '[' → logprob: -4.653580665588379
    3. ',' → logprob: -5.028580665588379
    4. ' for' → logprob: -5.528580665588379
    5. '*' → logprob: -5.903580665588379
    6. ']*' → logprob: -6.153580665588379
    7. 'for' → logprob: -7.028580665588379
    8. '**' → logprob: -7.403580665588379
    9. ' if' → logprob: -8.028580665588379
    10. '   ' → logprob: -8.153580665588379

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02767973579466343
    2. '1' → logprob: -3.652679681777954
    3. '-' → logprob: -6.652679920196533
    4. ' ' → logprob: -10.777679443359375
    5. '[' → logprob: -11.465179443359375
    6. ']' → logprob: -11.715179443359375
    7. '2' → logprob: -11.840179443359375
    8. '(' → logprob: -11.965179443359375
    9. '::-' → logprob: -12.152679443359375
    10. '
' → logprob: -12.527679443359375

Token 51: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.2451913207769394
    2. ']' → logprob: -1.6201913356781006
    3. ']*' → logprob: -4.6201910972595215
    4. '],' → logprob: -5.1201910972595215
    5. '**' → logprob: -7.2451910972595215
    6. '[' → logprob: -7.4951910972595215
    7. '[val' → logprob: -7.8701910972595215
    8. ')]' → logprob: -8.12019157409668
    9. ',' → logprob: -8.12019157409668
    10. ']],' → logprob: -8.49519157409668

Token 52: '*' (ID: 9)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.41665011644363403
    2. '*' → logprob: -1.4166500568389893
    3. ' if' → logprob: -3.6666500568389893
    4. ' for' → logprob: -4.166650295257568
    5. ' *' → logprob: -4.291650295257568
    6. ' **' → logprob: -4.416650295257568
    7. ')' → logprob: -4.791650295257568
    8. ')*' → logprob: -5.416650295257568
    9. ',' → logprob: -5.541650295257568
    10. 'if' → logprob: -6.041650295257568

Token 53: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -5.848420551046729e-05
    2. ' val' → logprob: -10.1250581741333
    3. '(val' → logprob: -11.0000581741333
    4. '   ' → logprob: -13.8750581741333
    5. '	val' → logprob: -15.0000581741333
    6. '(' → logprob: -15.7500581741333
    7. '  ' → logprob: -16.250059127807617
    8. '[val' → logprob: -16.500059127807617
    9. '```' → logprob: -16.750059127807617
    10. ' (' → logprob: -17.250059127807617

Token 54: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.53050296427682e-05
    2. '1' → logprob: -9.37508487701416
    3. '```' → logprob: -15.50008487701416
    4. '[
' → logprob: -16.500085830688477
    5. '][' → logprob: -16.750085830688477
    6. '<|end|>' → logprob: -17.375085830688477
    7. ' [' → logprob: -17.500085830688477
    8. '2' → logprob: -17.875085830688477
    9. ':' → logprob: -18.125085830688477
    10. '[...,' → logprob: -18.375085830688477

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.12500286102295
    3. ']' → logprob: -15.75000286102295
    4. '[' → logprob: -16.000003814697266
    5. '<|end|>' → logprob: -16.562503814697266
    6. '१' → logprob: -16.937503814697266
    7. '```' → logprob: -16.937503814697266
    8. '-' → logprob: -17.062503814697266
    9. '
' → logprob: -17.187503814697266
    10. '۱' → logprob: -17.250003814697266

Token 56: '],
' (ID: 2274)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.40092456340789795
    2. '   ' → logprob: -2.1509246826171875
    3. ']' → logprob: -2.5259246826171875
    4. ',' → logprob: -2.5259246826171875
    5. '       ' → logprob: -4.1509246826171875
    6. '),' → logprob: -4.5259246826171875
    7. '],
' → logprob: -4.6509246826171875
    8. ' if' → logprob: -5.4009246826171875
    9. ')' → logprob: -5.6509246826171875
    10. 'if' → logprob: -5.9009246826171875

Token 57: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.261319637298584
    2. ')' → logprob: -1.511319637298584
    3. '[(' → logprob: -1.511319637298584
    4. '       ' → logprob: -2.886319637298584
    5. '[
' → logprob: -3.136319637298584
    6. 'is' → logprob: -3.386319637298584
    7. 'filter' → logprob: -3.761319637298584
    8. 'enumer' → logprob: -3.761319637298584
    9. '[' → logprob: -4.136319637298584
    10. ' [(' → logprob: -4.136319637298584

Token 58: ' (
' (ID: 4112)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.2810482978820801
    2. '[((' → logprob: -2.53104829788208
    3. '((' → logprob: -2.65604829788208
    4. 'filter' → logprob: -3.65604829788208
    5. '[
' → logprob: -3.90604829788208
    6. '[' → logprob: -4.03104829788208
    7. ')' → logprob: -4.90604829788208
    8. '(
' (adapté à ' (
') → logprob: -5.15604829788208
    9. '   ' → logprob: -5.78104829788208
    10. 'prime' → logprob: -5.90604829788208

Token 59: '           ' (ID: 352)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.9005410075187683
    2. '(n' → logprob: -2.150541067123413
    3. '   ' → logprob: -2.275541067123413
    4. '(is' → logprob: -2.400541067123413
    5. '(
' → logprob: -2.650541067123413
    6. ' (' → logprob: -3.400541067123413
    7. '(lambda' → logprob: -3.525541067123413
    8. '(' → logprob: -3.775541067123413
    9. '(val' → logprob: -3.900541067123413
    10. '[(' → logprob: -4.025540828704834

Token 60: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6111385822296143
    2. '(n' → logprob: -1.9861385822296143
    3. '(
' → logprob: -2.8611385822296143
    4. '(' (adapté à ' (') → logprob: -2.8611385822296143
    5. '(lambda' → logprob: -2.8611385822296143
    6. '(val' → logprob: -3.6111385822296143
    7. '(p' → logprob: -3.6111385822296143
    8. '   ' → logprob: -4.111138343811035
    9. '[(' → logprob: -4.361138343811035
    10. ' (' → logprob: -4.861138343811035

Token 61: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4312560260295868
    2. '(i' → logprob: -1.9312560558319092
    3. 'i' → logprob: -2.681256055831909
    4. '(p' → logprob: -2.681256055831909
    5. 'prime' → logprob: -3.681256055831909
    6. 'f' → logprob: -5.68125581741333
    7. 'k' → logprob: -5.68125581741333
    8. 'factor' → logprob: -5.68125581741333
    9. 'd' → logprob: -5.80625581741333
    10. '(f' → logprob: -5.93125581741333

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006766928127035499
    2. ',is' → logprob: -8.750677108764648
    3. ',p' → logprob: -9.125677108764648
    4. ' ,' → logprob: -9.250677108764648
    5. ',num' → logprob: -9.500677108764648
    6. 'p' → logprob: -9.625677108764648
    7. ',n' → logprob: -10.125677108764648
    8. ',count' → logprob: -10.875677108764648
    9. ',
' → logprob: -11.375677108764648
    10. 'n' → logprob: -11.750677108764648

Token 63: ' lambda' (ID: 27871)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1302366852760315
    2. 'c' → logprob: -3.3802366256713867
    3. 'cnt' → logprob: -4.130236625671387
    4. 'exp' → logprob: -4.255236625671387
    5. 'n' → logprob: -4.380236625671387
    6. '0' → logprob: -4.630236625671387
    7. 'count' → logprob: -4.880236625671387
    8. 'sum' → logprob: -4.880236625671387
    9. ' e' → logprob: -5.130236625671387
    10. 'q' → logprob: -6.005236625671387

Token 64: ' x' (ID: 1215)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7245285511016846
    2. ' n' → logprob: -1.8495285511016846
    3. 'e' → logprob: -2.0995285511016846
    4. 'count' → logprob: -2.9745285511016846
    5. 'c' → logprob: -3.3495285511016846
    6. '(n' → logprob: -3.3495285511016846
    7. ' e' → logprob: -3.9745285511016846
    8. 'q' → logprob: -4.3495283126831055
    9. 'cnt' → logprob: -4.4745283126831055
    10. 'x' → logprob: -4.5995283126831055

Token 65: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9749085903167725
    2. 'x' → logprob: -1.0999085903167725
    3. 'n' → logprob: -1.7249085903167725
    4. 'p' → logprob: -3.3499085903167725
    5. ' n' → logprob: -3.3499085903167725
    6. ' x' → logprob: -4.224908828735352
    7. '(n' → logprob: -5.474908828735352
    8. ' p' → logprob: -5.599908828735352
    9. 'pow' → logprob: -5.849908828735352
    10. '(x' → logprob: -6.474908828735352

Token 66: ' y' (ID: 342)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7951564788818359
    2. 'y' → logprob: -1.795156478881836
    3. 'q' → logprob: -2.545156478881836
    4. ' y' → logprob: -2.795156478881836
    5. ' p' → logprob: -3.045156478881836
    6. 'c' → logprob: -3.045156478881836
    7. 'n' → logprob: -3.420156478881836
    8. 'd' → logprob: -3.795156478881836
    9. 'f' → logprob: -4.420156478881836
    10. 'x' → logprob: -4.795156478881836

Token 67: '=' (ID: 28)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008512092754244804
    2. ' :' → logprob: -5.258512020111084
    3. ':x' → logprob: -6.633512020111084
    4. ':p' → logprob: -7.258512020111084
    5. '=' → logprob: -7.883512020111084
    6. ':(' → logprob: -7.883512020111084
    7. ':is' → logprob: -9.008512496948242
    8. ':
' → logprob: -9.383512496948242
    9. 'x' → logprob: -10.258512496948242
    10. 'p' → logprob: -10.508512496948242

Token 68: '0' (ID: 15)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7094931602478027
    2. 'x' → logprob: -0.7094931602478027
    3. 'is' → logprob: -5.084493160247803
    4. '0' → logprob: -5.959493160247803
    5. ' x' → logprob: -6.334493160247803
    6. '2' → logprob: -6.709493160247803
    7. 'n' → logprob: -6.709493160247803
    8. ' p' → logprob: -6.834493160247803
    9. '1' → logprob: -7.709493160247803
    10. 'y' → logprob: -7.834493160247803

Token 69: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025314295198768377
    2. ' :' → logprob: -6.3775315284729
    3. ':p' → logprob: -8.502531051635742
    4. ':x' → logprob: -8.877531051635742
    5. 'x' → logprob: -9.002531051635742
    6. ',' → logprob: -9.252531051635742
    7. '):' → logprob: -9.377531051635742
    8. ':
' → logprob: -10.627531051635742
    9. ')' → logprob: -10.752531051635742
    10. 'p' → logprob: -11.127531051635742

Token 70: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20048925280570984
    2. ' x' → logprob: -2.2004892826080322
    3. 'is' → logprob: -3.9504892826080322
    4. ' (' → logprob: -4.200489044189453
    5. '(x' → logprob: -4.950489044189453
    6. ' is' → logprob: -5.200489044189453
    7. '(' → logprob: -5.325489044189453
    8. 'y' → logprob: -5.575489044189453
    9. ' y' → logprob: -5.700489044189453
    10. '0' → logprob: -5.950489044189453

Token 71: 'lambda' (ID: 35280)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.13671983778476715
    2. '(x' → logprob: -3.1367199420928955
    3. 'y' → logprob: -3.2617199420928955
    4. '(lambda' → logprob: -4.386719703674316
    5. '   ' → logprob: -4.886719703674316
    6. '(' → logprob: -5.386719703674316
    7. 'is' → logprob: -5.511719703674316
    8. '(y' → logprob: -5.636719703674316
    9. ' x' → logprob: -5.761719703674316
    10. 'lambda' → logprob: -6.011719703674316

Token 72: ' f' (ID: 285)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6261716485023499
    2. '(x' → logprob: -1.751171588897705
    3. '(lambda' → logprob: -2.001171588897705
    4. ' x' → logprob: -3.001171588897705
    5. ' (' → logprob: -3.626171588897705
    6. 'y' → logprob: -3.876171588897705
    7. 'lambda' → logprob: -4.376171588897705
    8. '(y' → logprob: -4.501171588897705
    9. ' y' → logprob: -4.751171588897705
    10. '(is' → logprob: -4.751171588897705

Token 73: ':' (ID: 25)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -1.266204595565796
    2. 'lambda' → logprob: -1.266204595565796
    3. '(lambda' → logprob: -2.141204595565796
    4. 'x' → logprob: -2.641204595565796
    5. 'p' → logprob: -3.141204595565796
    6. 'n' → logprob: -3.141204595565796
    7. 'y' → logprob: -3.516204595565796
    8. ' y' → logprob: -4.141204833984375
    9. ' (' → logprob: -4.266204833984375
    10. '(n' → logprob: -4.516204833984375

Token 74: ' f' (ID: 285)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.007747769355774
    2. '(lambda' → logprob: -1.507747769355774
    3. '(x' → logprob: -2.0077476501464844
    4. 'f' → logprob: -2.5077476501464844
    5. 'lambda' → logprob: -2.8827476501464844
    6. '   ' → logprob: -3.7577476501464844
    7. ' (' → logprob: -3.7577476501464844
    8. '(f' → logprob: -3.8827476501464844
    9. 'y' → logprob: -3.8827476501464844
    10. '(y' → logprob: -4.257747650146484

Token 75: '(f' (ID: 1526)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.07845773547887802
    2. '(f' → logprob: -2.828457832336426
    3. 'lambda' → logprob: -5.078457832336426
    4. '(x' → logprob: -5.328457832336426
    5. 'f' → logprob: -6.703457832336426
    6. '(p' → logprob: -6.828457832336426
    7. '(y' → logprob: -7.078457832336426
    8. '(' → logprob: -7.328457832336426
    9. 'x' → logprob: -7.953457832336426
    10. '((' → logprob: -8.328457832336426

Token 76: ',x' (ID: 29748)
  Prédit: ')('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.45932239294052124
    2. '(lambda' → logprob: -1.334322452545166
    3. '(x' → logprob: -3.209322452545166
    4. '(p' → logprob: -3.834322452545166
    5. ')' → logprob: -4.334322452545166
    6. ',' → logprob: -4.459322452545166
    7. 'p' → logprob: -6.084322452545166
    8. '(' → logprob: -6.209322452545166
    9. '))(' → logprob: -6.209322452545166
    10. ',p' → logprob: -6.459322452545166

Token 77: ',y' (ID: 16103)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.13507170975208282
    2. ' //' → logprob: -2.1350717544555664
    3. ')' → logprob: -5.885071754455566
    4. ',y' → logprob: -6.885071754455566
    5. 'and' → logprob: -7.385071754455566
    6. 'y' → logprob: -7.385071754455566
    7. 'p' → logprob: -7.635071754455566
    8. ',' → logprob: -7.885071754455566
    9. '//=' → logprob: -7.885071754455566
    10. '%' → logprob: -8.385071754455566

Token 78: '))(' (ID: 72297)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -1.509613037109375
    2. ')' → logprob: -1.884613037109375
    3. '))(' → logprob: -2.134613037109375
    4. '(lambda' → logprob: -2.509613037109375
    5. 'lambda' → logprob: -2.759613037109375
    6. '+' → logprob: -2.884613037109375
    7. ')(' → logprob: -3.134613037109375
    8. '//' → logprob: -3.259613037109375
    9. ',' → logprob: -3.509613037109375
    10. '   ' → logprob: -3.509613037109375

Token 79: 'lambda' (ID: 35280)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.5290735960006714
    2. 'lambda' → logprob: -0.9040735960006714
    3. '(lambda' → logprob: -5.154073715209961
    4. '    ' → logprob: -10.154073715209961
    5. '=lambda' → logprob: -10.529073715209961
    6. ' (' → logprob: -11.029073715209961
    7. '   ' → logprob: -11.279073715209961
    8. ')' → logprob: -11.279073715209961
    9. '           ' → logprob: -11.404073715209961
    10. 'y' → logprob: -12.029073715209961

Token 80: ' f' (ID: 285)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.5943858623504639
    2. 'lambda' → logprob: -1.8443858623504639
    3. 'x' → logprob: -2.094385862350464
    4. ' n' → logprob: -2.219385862350464
    5. ' lambda' → logprob: -2.219385862350464
    6. 'z' → logprob: -2.219385862350464
    7. 'a' → logprob: -2.844385862350464
    8. ' x' → logprob: -3.344385862350464
    9. ' z' → logprob: -3.594385862350464
    10. 'f' → logprob: -4.469386100769043

Token 81: ',' (ID: 11)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.0444167852401733
    2. ' lambda' → logprob: -1.2944167852401733
    3. 'p' → logprob: -2.169416904449463
    4. 'x' → logprob: -2.544416904449463
    5. 'n' → logprob: -2.794416904449463
    6. 'y' → logprob: -3.169416904449463
    7. ' x' → logprob: -3.919416904449463
    8. ' n' → logprob: -4.044416904449463
    9. ' p' → logprob: -4.294416904449463
    10. ' y' → logprob: -4.919416904449463

Token 82: ' n' (ID: 297)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6641479730606079
    2. 'n' → logprob: -1.539147973060608
    3. 'z' → logprob: -2.5391478538513184
    4. ' n' → logprob: -2.5391478538513184
    5. ' x' → logprob: -2.7891478538513184
    6. 'a' → logprob: -4.164147853851318
    7. ' z' → logprob: -4.664147853851318
    8. ' lambda' → logprob: -5.289147853851318
    9. 'k' → logprob: -5.664147853851318
    10. 'lambda' → logprob: -5.664147853851318

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37352606654167175
    2. ',p' → logprob: -2.748526096343994
    3. ',n' → logprob: -2.998526096343994
    4. 'x' → logprob: -3.123526096343994
    5. ',x' → logprob: -3.248526096343994
    6. 'p' → logprob: -3.623526096343994
    7. 'n' → logprob: -4.248526096343994
    8. 't' → logprob: -4.498526096343994
    9. ',v' → logprob: -4.873526096343994
    10. ',val' → logprob: -4.873526096343994

Token 84: ' c' (ID: 274)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20166632533073425
    2. ' n' → logprob: -2.5766663551330566
    3. 'k' → logprob: -3.9516663551330566
    4. 'y' → logprob: -3.9516663551330566
    5. 'z' → logprob: -4.201666355133057
    6. 'm' → logprob: -4.701666355133057
    7. 'p' → logprob: -5.076666355133057
    8. '   ' → logprob: -5.201666355133057
    9. 'x' → logprob: -5.451666355133057
    10. 'd' → logprob: -5.701666355133057

Token 85: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00842568464577198
    2. 'n' → logprob: -5.633425712585449
    3. '=lambda' → logprob: -6.633425712585449
    4. ' :' → logprob: -6.883425712585449
    5. '=' → logprob: -7.133425712585449
    6. ':n' → logprob: -8.00842571258545
    7. 't' → logprob: -8.13342571258545
    8. 'ambda' → logprob: -8.13342571258545
    9. ':
' → logprob: -8.63342571258545
    10. 'lambda' → logprob: -9.38342571258545

Token 86: ' f' (ID: 285)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.2260937690734863
    2. 'n' → logprob: -1.3510937690734863
    3. ' is' → logprob: -2.2260937690734863
    4. 'f' → logprob: -2.3510937690734863
    5. ' (' → logprob: -2.8510937690734863
    6. 'is' → logprob: -3.3510937690734863
    7. 'p' → logprob: -3.4760937690734863
    8. '(n' → logprob: -3.7260937690734863
    9. ' f' → logprob: -4.226093769073486
    10. 'x' → logprob: -4.476093769073486

Token 87: '(f' (ID: 1526)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.4235855340957642
    2. '(n' → logprob: -1.6735855340957642
    3. 'n' → logprob: -1.9235855340957642
    4. ' f' → logprob: -2.0485854148864746
    5. '(lambda' → logprob: -2.1735854148864746
    6. ' n' → logprob: -2.4235854148864746
    7. 'lambda' → logprob: -3.9235854148864746
    8. '   ' → logprob: -4.173585414886475
    9. ' lambda' → logprob: -4.548585414886475
    10. '    ' → logprob: -4.798585414886475

Token 88: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11700309067964554
    2. ' n' → logprob: -2.3670032024383545
    3. ',n' → logprob: -4.992002964019775
    4. '(n' → logprob: -5.742002964019775
    5. ',' → logprob: -5.867002964019775
    6. ')' → logprob: -6.742002964019775
    7. 'is' → logprob: -7.492002964019775
    8. ' is' → logprob: -7.867002964019775
    9. ')n' → logprob: -7.867002964019775
    10. 'p' → logprob: -8.242003440856934

Token 89: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09539686888456345
    2. 'is' → logprob: -2.4703967571258545
    3. 'p' → logprob: -5.720396995544434
    4. ' n' → logprob: -6.720396995544434
    5. ' is' → logprob: -7.970396995544434
    6. 'x' → logprob: -8.345396995544434
    7. 'prime' → logprob: -8.345396995544434
    8. 'B' → logprob: -8.470396995544434
    9. '(is' → logprob: -8.845396995544434
    10. '(n' → logprob: -8.970396995544434

Token 90: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.16553552448749542
    2. ' //' → logprob: -2.0405354499816895
    3. 'is' → logprob: -4.5405354499816895
    4. '   ' → logprob: -5.4155354499816895
    5. ' is' → logprob: -6.5405354499816895
    6. '+' → logprob: -6.9155354499816895
    7. ',' → logprob: -7.0405354499816895
    8. ' ' → logprob: -7.4155354499816895
    9. '#' → logprob: -7.6655354499816895
    10. '    ' → logprob: -8.040535926818848

Token 91: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0020479592494666576
    2. 'is' → logprob: -6.502048015594482
    3. 'x' → logprob: -8.252047538757324
    4. ' p' → logprob: -8.627047538757324
    5. '2' → logprob: -10.752047538757324
    6. '   ' → logprob: -11.252047538757324
    7. 'n' → logprob: -11.252047538757324
    8. ' is' → logprob: -11.252047538757324
    9. 'y' → logprob: -11.689547538757324
    10. '    ' → logprob: -12.439547538757324

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7372480034828186
    2. ' if' → logprob: -0.7372480034828186
    3. 'if' → logprob: -3.612247943878174
    4. ',p' → logprob: -5.237247943878174
    5. 'p' → logprob: -5.612247943878174
    6. ' ' → logprob: -5.862247943878174
    7. ')' → logprob: -6.362247943878174
    8. ' ,' → logprob: -7.112247943878174
    9. ',c' → logprob: -7.987247943878174
    10. '   ' → logprob: -8.362248420715332

Token 93: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.020996320992708206
    2. ' c' → logprob: -3.895996332168579
    3. ' ' → logprob: -8.52099609375
    4. '(c' → logprob: -9.14599609375
    5. '   ' → logprob: -10.14599609375
    6. '0' → logprob: -10.27099609375
    7. '    ' → logprob: -11.02099609375
    8. 'p' → logprob: -11.52099609375
    9. ' (' → logprob: -11.77099609375
    10. '  ' → logprob: -11.77099609375

Token 94: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016307314857840538
    2. ' +' → logprob: -4.266307353973389
    3. '+p' → logprob: -6.641307353973389
    4. '+(' → logprob: -7.766307353973389
    5. '+y' → logprob: -8.39130687713623
    6. '+c' → logprob: -9.51630687713623
    7. ' if' → logprob: -9.89130687713623
    8. '+x' → logprob: -11.14130687713623
    9. 'if' → logprob: -11.14130687713623
    10. '+n' → logprob: -11.89130687713623

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.030382772907614708
    2. 'y' → logprob: -4.2803826332092285
    3. '(y' → logprob: -5.7803826332092285
    4. 'x' → logprob: -6.0303826332092285
    5. ' ' → logprob: -6.2803826332092285
    6. '(' → logprob: -6.4053826332092285
    7. 'int' → logprob: -6.4053826332092285
    8. '(n' → logprob: -7.1553826332092285
    9. '(x' → logprob: -7.2803826332092285
    10. 'c' → logprob: -7.4053826332092285

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09968306869268417
    2. ' if' → logprob: -2.7246830463409424
    3. 'if' → logprob: -3.8496830463409424
    4. '   ' → logprob: -6.0996832847595215
    5. ' )' → logprob: -6.0996832847595215
    6. '))' → logprob: -6.2246832847595215
    7. '       ' → logprob: -7.9746832847595215
    8. ' ' → logprob: -8.349682807922363
    9. '           ' → logprob: -8.599682807922363
    10. ')))' → logprob: -8.724682807922363

Token 97: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14715422689914703
    2. 'if' → logprob: -2.2721543312072754
    3. ')' → logprob: -4.147154331207275
    4. '(n' → logprob: -5.147154331207275
    5. '(p' → logprob: -5.647154331207275
    6. '(x' → logprob: -5.647154331207275
    7. '           ' → logprob: -6.897154331207275
    8. '   ' → logprob: -7.272154331207275
    9. ' ' → logprob: -7.397154331207275
    10. '))' → logprob: -7.397154331207275

Token 98: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1607077270746231
    2. ' n' → logprob: -1.910707712173462
    3. '(n' → logprob: -9.285707473754883
    4. '   ' → logprob: -9.410707473754883
    5. 'x' → logprob: -9.535707473754883
    6. 'p' → logprob: -10.098207473754883
    7. '	n' → logprob: -10.223207473754883
    8. ' ' → logprob: -10.660707473754883
    9. 'is' → logprob: -11.223207473754883
    10. '(' → logprob: -11.348207473754883

Token 99: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0703032985329628
    2. ' %' → logprob: -2.695303201675415
    3. '%x' → logprob: -8.695302963256836
    4. '%e' → logprob: -9.320302963256836
    5. '%c' → logprob: -11.195302963256836
    6. '%b' → logprob: -11.195302963256836
    7. '%d' → logprob: -11.445302963256836
    8. ' ' → logprob: -11.570302963256836
    9. '[p' → logprob: -11.570302963256836
    10. '%n' → logprob: -11.695302963256836

Token 100: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0010416212026029825
    2. ' p' → logprob: -6.876041412353516
    3. '   ' → logprob: -12.501041412353516
    4. ' ' → logprob: -13.376041412353516
    5. '<|end|>' → logprob: -14.376041412353516
    6. '	p' → logprob: -14.751041412353516
    7. '    ' → logprob: -15.001041412353516
    8. 'prime' → logprob: -15.001041412353516
    9. '<p' → logprob: -15.376041412353516
    10. '  ' → logprob: -15.501041412353516

Token 101: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2824532091617584
    2. ' ==' → logprob: -1.407453179359436
    3. '0' → logprob: -7.0324530601501465
    4. ' ' → logprob: -8.657453536987305
    5. ')==' → logprob: -9.657453536987305
    6. '=' → logprob: -9.907453536987305
    7. ')' → logprob: -10.407453536987305
    8. '2' → logprob: -10.532453536987305
    9. 'p' → logprob: -11.032453536987305
    10. '===' → logprob: -11.282453536987305

Token 102: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4514637589454651
    2. 'p' → logprob: -1.0764636993408203
    3. ' ' → logprob: -4.07646369934082
    4. ' p' → logprob: -5.20146369934082
    5. '   ' → logprob: -11.07646369934082
    6. '  ' → logprob: -12.57646369934082
    7. '	p' → logprob: -12.95146369934082
    8. '    ' → logprob: -13.32646369934082
    9. '     ' → logprob: -14.26396369934082
    10. '<p' → logprob: -14.45146369934082

Token 103: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.004525300115346909
    2. 'else' → logprob: -5.754525184631348
    3. ')' → logprob: -7.129525184631348
    4. ' p' → logprob: -8.504525184631348
    5. ' ' → logprob: -9.129525184631348
    6. 'p' → logprob: -9.754525184631348
    7. ' )' → logprob: -9.754525184631348
    8. ' n' → logprob: -10.504525184631348
    9. '0' → logprob: -10.754525184631348
    10. '(p' → logprob: -11.504525184631348

Token 104: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20239247381687164
    2. ' c' → logprob: -1.7023924589157104
    3. '(c' → logprob: -7.952392578125
    4. ' (' → logprob: -9.077392578125
    5. '           ' → logprob: -9.327392578125
    6. '(' → logprob: -9.577392578125
    7. 'x' → logprob: -10.202392578125
    8. '   ' → logprob: -10.577392578125
    9. '    ' → logprob: -10.577392578125
    10. '       ' → logprob: -10.702392578125

Token 105: '))(' (ID: 72297)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2739816904067993
    2. '))
' → logprob: -1.8989816904067993
    3. ')))' → logprob: -3.7739815711975098
    4. '(p' → logprob: -4.52398157119751
    5. '+' → logprob: -5.02398157119751
    6. ')' → logprob: -5.02398157119751
    7. ' else' → logprob: -5.14898157119751
    8. ' ))' → logprob: -5.14898157119751
    9. ')),
' → logprob: -5.27398157119751
    10. ' ))
' → logprob: -5.64898157119751

Token 106: 'n' (ID: 77)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7109248638153076
    2. 'A' → logprob: -1.0859248638153076
    3. 'B' → logprob: -2.7109248638153076
    4. ' A' → logprob: -3.9609248638153076
    5. ' p' → logprob: -4.085925102233887
    6. 'is' → logprob: -4.210925102233887
    7. 'n' → logprob: -4.210925102233887
    8. 'x' → logprob: -5.335925102233887
    9. ' B' → logprob: -5.460925102233887
    10. 'val' → logprob: -5.460925102233887

Token 107: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5897058248519897
    2. ')
' → logprob: -1.0897058248519897
    3. '))' → logprob: -3.4647059440612793
    4. '[' → logprob: -4.089705944061279
    5. 'p' → logprob: -4.339705944061279
    6. '))
' → logprob: -4.714705944061279
    7. ',' → logprob: -4.714705944061279
    8. ' )' → logprob: -5.464705944061279
    9. '   ' → logprob: -5.589705944061279
    10. ' )
' → logprob: -5.714705944061279

Token 108: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7122431397438049
    2. ')
' → logprob: -1.4622430801391602
    3. ' for' → logprob: -1.4622430801391602
    4. 'for' → logprob: -4.21224308013916
    5. '[' → logprob: -4.33724308013916
    6. '   ' → logprob: -4.71224308013916
    7. ' ' → logprob: -5.96224308013916
    8. '
' → logprob: -6.71224308013916
    9. ' )' → logprob: -6.71224308013916
    10. '))' → logprob: -6.96224308013916

Token 109: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5601439476013184
    2. ' for' → logprob: -0.9351439476013184
    3. ')' → logprob: -3.8101439476013184
    4. '   ' → logprob: -5.060143947601318
    5. 'p' → logprob: -5.310143947601318
    6. '
' → logprob: -7.310143947601318
    7. '(p' → logprob: -7.685143947601318
    8. ' ' → logprob: -7.935143947601318
    9. ' p' → logprob: -8.185144424438477
    10. '       ' → logprob: -8.310144424438477

Token 110: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02975974604487419
    2. ' p' → logprob: -3.529759645462036
    3. ' ' → logprob: -12.779759407043457
    4. '
' → logprob: -13.279759407043457
    5. '	p' → logprob: -14.154759407043457
    6. '   ' → logprob: -14.154759407043457
    7. '(p' → logprob: -14.529759407043457
    8. '  ' → logprob: -14.654759407043457
    9. ' ' → logprob: -15.154759407043457
    10. '<p' → logprob: -15.529759407043457

Token 111: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05509442090988159
    2. 'in' → logprob: -2.9300944805145264
    3. ')' → logprob: -8.805094718933105
    4. 'range' → logprob: -10.555094718933105
    5. ' ' → logprob: -11.805094718933105
    6. ',' → logprob: -12.055094718933105
    7. 'p' → logprob: -12.680094718933105
    8. ' )' → logprob: -12.805094718933105
    9. 'is' → logprob: -12.805094718933105
    10. '),' → logprob: -13.430094718933105

Token 112: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14298279583454132
    2. ' range' → logprob: -2.0179827213287354
    3. '[' → logprob: -9.267982482910156
    4. 'is' → logprob: -9.767982482910156
    5. '(range' → logprob: -9.892982482910156
    6. 'prime' → logprob: -10.142982482910156
    7. ' is' → logprob: -11.767982482910156
    8. 'list' → logprob: -11.767982482910156
    9. '	range' → logprob: -11.767982482910156
    10. '2' → logprob: -12.017982482910156

Token 113: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04469596967101097
    2. '2' → logprob: -3.1696958541870117
    3. ' ' → logprob: -6.419695854187012
    4. ' (' → logprob: -11.169695854187012
    5. '   ' → logprob: -11.419695854187012
    6. 'from' → logprob: -11.544695854187012
    7. ')' → logprob: -11.794695854187012
    8. '(
' → logprob: -12.044695854187012
    9. '[' → logprob: -13.044695854187012
    10. '1' → logprob: -13.044695854187012

Token 114: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00031413204851560295
    2. ' ' → logprob: -8.125313758850098
    3. '1' → logprob: -11.750313758850098
    4. 'from' → logprob: -12.750313758850098
    5. '   ' → logprob: -13.000313758850098
    6. 'is' → logprob: -13.875313758850098
    7. ')' → logprob: -14.000313758850098
    8. '(' → logprob: -14.125313758850098
    9. 'A' → logprob: -14.750313758850098
    10. '3' → logprob: -15.125313758850098

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010301886359229684
    2. ',p' → logprob: -7.751029968261719
    3. ' ,' → logprob: -7.751029968261719
    4. ',n' → logprob: -9.626029968261719
    5. ',int' → logprob: -10.126029968261719
    6. '1' → logprob: -10.876029968261719
    7. ',A' → logprob: -10.876029968261719
    8. '(' → logprob: -12.376029968261719
    9. 'p' → logprob: -12.376029968261719
    10. '(p' → logprob: -12.626029968261719

Token 116: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.00013250234769657254
    2. ' is' → logprob: -9.00013256072998
    3. 'A' → logprob: -11.75013256072998
    4. ')is' → logprob: -14.25013256072998
    5. '   ' → logprob: -15.50013256072998
    6. '(is' → logprob: -15.62513256072998
    7. '	is' → logprob: -16.625131607055664
    8. ')' → logprob: -16.750131607055664
    9. 'int' → logprob: -17.000131607055664
    10. 'B' → logprob: -17.625131607055664

Token 117: 'qrt' (ID: 17629)
  Prédit: 'qrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qrt' → logprob: -0.00018208740220870823
    2. 'sqrt' → logprob: -8.625182151794434
    3. 's' → logprob: -13.500182151794434
    4. 'rt' → logprob: -14.250182151794434
    5. 'ert' → logprob: -15.500182151794434
    6. 'r' → logprob: -16.250181198120117
    7. 'crt' → logprob: -17.000181198120117
    8. ' sqrt' → logprob: -17.125181198120117
    9. 't' → logprob: -17.125181198120117
    10. 'prt' → logprob: -17.625181198120117

Token 118: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.024611815810203552
    2. '(B' → logprob: -3.774611711502075
    3. '(' → logprob: -6.774611949920654
    4. '(A' → logprob: -8.649611473083496
    5. 'B' → logprob: -10.649611473083496
    6. 'n' → logprob: -11.524611473083496
    7. '(N' → logprob: -12.024611473083496
    8. '(p' → logprob: -12.899611473083496
    9. '(
' → logprob: -13.649611473083496
    10. 'A' → logprob: -13.649611473083496

Token 119: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.1602601855993271
    2. ')' → logprob: -1.9102602005004883
    3. ' )' → logprob: -11.660260200500488
    4. '))+' → logprob: -11.910260200500488
    5. '(n' → logprob: -12.035260200500488
    6. 'n' → logprob: -12.285260200500488
    7. ')**' → logprob: -13.160260200500488
    8. '   ' → logprob: -13.660260200500488
    9. ' ' → logprob: -13.785260200500488
    10. ')n' → logprob: -13.910260200500488

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038145645521581173
    2. ' ' → logprob: -7.8753814697265625
    3. '2' → logprob: -14.250381469726562
    4. '   ' → logprob: -15.125381469726562
    5. '  ' → logprob: -15.875381469726562
    6. '(' → logprob: -16.000381469726562
    7. '+' → logprob: -16.250381469726562
    8. '```' → logprob: -16.875381469726562
    9. ')' → logprob: -17.500381469726562
    10. '
' → logprob: -17.625381469726562

Token 121: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13485391438007355
    2. '))' → logprob: -2.3848538398742676
    3. '+' → logprob: -4.384853839874268
    4. ')))' → logprob: -4.509853839874268
    5. '):' → logprob: -6.009853839874268
    6. '),' → logprob: -6.384853839874268
    7. ')),' → logprob: -6.759853839874268
    8. 'if' → logprob: -7.134853839874268
    9. ')])' → logprob: -7.134853839874268
    10. '   ' → logprob: -7.509853839874268

Token 122: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3314976096153259
    2. 'if' → logprob: -2.2064976692199707
    3. ' if' → logprob: -2.5814976692199707
    4. '))' → logprob: -2.5814976692199707
    5. '   ' → logprob: -4.706497669219971
    6. ')))' → logprob: -5.706497669219971
    7. '),' → logprob: -5.956497669219971
    8. '```' → logprob: -6.581497669219971
    9. ')),' → logprob: -6.831497669219971
    10. ')
' → logprob: -6.831497669219971

Token 123: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16698125004768372
    2. 'if' (adapté à ' if') → logprob: -2.9169812202453613
    3. '   ' → logprob: -3.2919812202453613
    4. '))' → logprob: -3.9169812202453613
    5. '),' → logprob: -4.416981220245361
    6. ')
' → logprob: -4.541981220245361
    7. '       ' → logprob: -4.916981220245361
    8. ' if' → logprob: -5.041981220245361
    9. ')))' → logprob: -6.166981220245361
    10. '):' → logprob: -6.916981220245361

Token 124: ' any' (ID: 1062)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04864652454853058
    2. ' n' → logprob: -3.0486464500427246
    3. '(n' → logprob: -10.798646926879883
    4. '   ' → logprob: -11.048646926879883
    5. 'not' → logprob: -12.423646926879883
    6. ' not' → logprob: -12.798646926879883
    7. '           ' → logprob: -12.798646926879883
    8. '	n' → logprob: -12.798646926879883
    9. ' ' → logprob: -13.423646926879883
    10. ' ' → logprob: -13.548646926879883

Token 125: '((' (ID: 2054)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2046077698469162
    2. '(lambda' → logprob: -2.2046077251434326
    3. '(' → logprob: -2.9546077251434326
    4. '(p' → logprob: -5.079607963562012
    5. '(
' → logprob: -5.204607963562012
    6. '((' → logprob: -5.704607963562012
    7. 'n' → logprob: -5.704607963562012
    8. '(x' → logprob: -6.954607963562012
    9. ' (' → logprob: -7.579607963562012
    10. 'lambda' → logprob: -7.704607963562012

Token 126: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.061607059091329575
    2. ' n' → logprob: -3.1866071224212646
    3. '(n' → logprob: -4.6866068840026855
    4. 'p' → logprob: -5.9366068840026855
    5. '[n' → logprob: -6.4366068840026855
    6. ' (' → logprob: -7.4366068840026855
    7. 'x' → logprob: -7.4366068840026855
    8. ')' → logprob: -7.5616068840026855
    9. '   ' → logprob: -7.6866068840026855
    10. '(p' → logprob: -7.9366068840026855

Token 127: ':=' (ID: 33860)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.10059460997581482
    2. ' %' → logprob: -2.3505945205688477
    3. '%i' → logprob: -8.725594520568848
    4. '%n' → logprob: -9.600594520568848
    5. '%x' → logprob: -9.725594520568848
    6. ' ' → logprob: -10.850594520568848
    7. '%d' → logprob: -11.225594520568848
    8. '%s' → logprob: -11.475594520568848
    9. '%e' → logprob: -11.600594520568848
    10. '%
' → logprob: -12.100594520568848

Token 128: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04236442968249321
    2. ' n' → logprob: -3.2923643589019775
    3. 'p' → logprob: -6.542364597320557
    4. '(n' → logprob: -6.667364597320557
    5. '   ' → logprob: -8.292364120483398
    6. 'x' → logprob: -8.292364120483398
    7. '[n' → logprob: -8.542364120483398
    8. ')' → logprob: -8.792364120483398
    9. 'val' → logprob: -9.292364120483398
    10. ' p' → logprob: -9.417364120483398

Token 129: ')' (ID: 8)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.479007363319397
    2. ' %' → logprob: -0.979007363319397
    3. '%n' → logprob: -6.229007244110107
    4. ')' → logprob: -7.229007244110107
    5. '%x' → logprob: -7.479007244110107
    6. ')%' → logprob: -7.604007244110107
    7. '%i' → logprob: -7.729007244110107
    8. '%d' → logprob: -8.604007720947266
    9. '%e' → logprob: -8.729007720947266
    10. '%b' → logprob: -9.354007720947266

Token 130: ' and' (ID: 326)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.16312503814697266
    2. ' %' → logprob: -2.1631250381469727
    3. '==' → logprob: -4.413125038146973
    4. '%n' → logprob: -4.413125038146973
    5. ')' → logprob: -5.288125038146973
    6. ' ==' → logprob: -6.163125038146973
    7. '%i' → logprob: -6.913125038146973
    8. '%e' → logprob: -6.913125038146973
    9. ')%' → logprob: -7.288125038146973
    10. '%x' → logprob: -7.663125038146973

Token 131: ' not' (ID: 625)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5345137119293213
    2. 'n' → logprob: -0.9095137119293213
    3. '(n' → logprob: -4.909513473510742
    4. ' (' → logprob: -6.034513473510742
    5. ' p' → logprob: -7.784513473510742
    6. 'p' → logprob: -7.909513473510742
    7. ' not' → logprob: -8.159513473510742
    8. '(p' → logprob: -9.159513473510742
    9. '   ' → logprob: -9.409513473510742
    10. 'not' → logprob: -9.784513473510742

Token 132: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8941294550895691
    2. '(n' → logprob: -0.8941294550895691
    3. ' n' → logprob: -2.019129514694214
    4. ' (' → logprob: -3.019129514694214
    5. '(' → logprob: -8.769129753112793
    6. '(p' → logprob: -9.644129753112793
    7. '
' → logprob: -10.269129753112793
    8. 'p' → logprob: -10.706629753112793
    9. ' ' → logprob: -10.831629753112793
    10. '[n' → logprob: -11.331629753112793

Token 133: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.07056716829538345
    2. ' %' → logprob: -2.6955671310424805
    3. '%n' → logprob: -8.19556713104248
    4. '%x' → logprob: -9.19556713104248
    5. '%e' → logprob: -9.69556713104248
    6. ')' → logprob: -9.82056713104248
    7. '%i' → logprob: -10.57056713104248
    8. '%E' → logprob: -10.82056713104248
    9. '```' → logprob: -11.07056713104248
    10. ')%' → logprob: -11.44556713104248

Token 134: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0001940040965564549
    2. ' p' → logprob: -8.62519359588623
    3. '2' → logprob: -12.00019359588623
    4. '
' → logprob: -13.25019359588623
    5. '   ' → logprob: -14.00019359588623
    6. ')' → logprob: -14.00019359588623
    7. ' ' → logprob: -14.12519359588623
    8. '```' → logprob: -14.25019359588623
    9. '<|end|>' → logprob: -14.75019359588623
    10. '<p' → logprob: -15.37519359588623

Token 135: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7367628812789917
    2. '==' → logprob: -0.7367628812789917
    3. ')==' → logprob: -3.2367630004882812
    4. '))' → logprob: -6.361763000488281
    5. ' ==' → logprob: -6.611763000488281
    6. ')))' → logprob: -9.361763000488281
    7. '),' → logprob: -9.611763000488281
    8. '):' → logprob: -10.361763000488281
    9. '0' → logprob: -10.486763000488281
    10. ']==' → logprob: -11.611763000488281

Token 136: ' None' (ID: 4662)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.7774785757064819
    2. ' False' → logprob: -1.652478575706482
    3. ' n' → logprob: -2.6524786949157715
    4. 'p' → logprob: -2.7774786949157715
    5. 'n' → logprob: -2.7774786949157715
    6. ' p' → logprob: -3.1524786949157715
    7. ' True' → logprob: -3.5274786949157715
    8. 'True' → logprob: -3.7774786949157715
    9. ' not' → logprob: -4.0274786949157715
    10. '(n' → logprob: -4.6524786949157715

Token 137: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09898234158754349
    2. '))' → logprob: -2.848982334136963
    3. ')
' → logprob: -4.223982334136963
    4. ')),' → logprob: -5.098982334136963
    5. ')))' → logprob: -5.348982334136963
    6. 'for' → logprob: -5.848982334136963
    7. ' for' → logprob: -6.098982334136963
    8. ')),
' → logprob: -6.598982334136963
    9. '),' → logprob: -6.723982334136963
    10. '):' → logprob: -7.473982334136963

Token 138: ' _' (ID: 1175)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3662911057472229
    2. '_' → logprob: -1.6162910461425781
    3. ' p' → logprob: -2.366291046142578
    4. ' _' → logprob: -4.366291046142578
    5. '_)' → logprob: -7.866291046142578
    6. '_p' → logprob: -8.491291046142578
    7. 'n' → logprob: -8.616291046142578
    8. '_),' → logprob: -9.241291046142578
    9. ' n' → logprob: -9.491291046142578
    10. 'prime' → logprob: -9.616291046142578

Token 139: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6695879101753235
    2. ' in' → logprob: -1.1695878505706787
    3. 'in' → logprob: -1.7945878505706787
    4. ')' → logprob: -4.919588088989258
    5. ' _' → logprob: -6.419588088989258
    6. 'p' → logprob: -7.169588088989258
    7. 'range' → logprob: -7.544588088989258
    8. '_)' → logprob: -8.669588088989258
    9. ' ' → logprob: -9.169588088989258
    10. '[' → logprob: -9.169588088989258

Token 140: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06140461564064026
    2. '[' → logprob: -3.4364047050476074
    3. ' range' → logprob: -4.061404705047607
    4. '_' → logprob: -4.936404705047607
    5. 'p' → logprob: -6.561404705047607
    6. 'iter' → logprob: -7.811404705047607
    7. '_)' → logprob: -7.811404705047607
    8. '(' → logprob: -8.43640422821045
    9. '_[' → logprob: -9.06140422821045
    10. ')' → logprob: -9.31140422821045

Token 141: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0034648904111236334
    2. '_' → logprob: -7.128464698791504
    3. '[' → logprob: -7.253464698791504
    4. 'None' → logprob: -7.378464698791504
    5. 'range' → logprob: -7.378464698791504
    6. '1' → logprob: -7.753464698791504
    7. 'True' → logprob: -9.503464698791504
    8. '()' → logprob: -10.253464698791504
    9. '[]' → logprob: -10.253464698791504
    10. '...' → logprob: -10.503464698791504

Token 142: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4367395341396332
    2. ']))' → logprob: -1.5617395639419556
    3. ']):' → logprob: -2.561739444732666
    4. ']' → logprob: -3.061739444732666
    5. '])):
' → logprob: -5.436739444732666
    6. '])]' → logprob: -5.686739444732666
    7. ']),' → logprob: -5.936739444732666
    8. ')])' → logprob: -6.061739444732666
    9. '])))' → logprob: -6.186739444732666
    10. ')]' → logprob: -6.561739444732666

Token 143: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20883813500404358
    2. ')' → logprob: -2.4588382244110107
    3. '))' → logprob: -3.3338382244110107
    4. ')))' → logprob: -3.9588382244110107
    5. '   ' → logprob: -4.458837985992432
    6. '           ' → logprob: -4.583837985992432
    7. '),' → logprob: -4.708837985992432
    8. '),
' → logprob: -4.958837985992432
    9. ')
' → logprob: -5.083837985992432
    10. ')),' → logprob: -6.208837985992432

Token 144: ' None' (ID: 4662)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.1285319328308105
    2. 'n' → logprob: -2.0035319328308105
    3. ' p' → logprob: -2.1285319328308105
    4. '(n' → logprob: -2.6285319328308105
    5. 'False' → logprob: -2.7535319328308105
    6. 'p' → logprob: -2.7535319328308105
    7. ' not' → logprob: -3.1285319328308105
    8. ' False' → logprob: -3.1285319328308105
    9. ' (' → logprob: -3.5035319328308105
    10. ' True' → logprob: -4.0035319328308105

Token 145: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0328556299209595
    2. '       ' → logprob: -1.1578556299209595
    3. ')))' → logprob: -2.40785551071167
    4. '))' → logprob: -2.65785551071167
    5. '),' → logprob: -3.28285551071167
    6. ')
' → logprob: -3.53285551071167
    7. '),
' → logprob: -3.65785551071167
    8. ')),' → logprob: -3.65785551071167
    9. '   ' → logprob: -4.15785551071167
    10. '           ' → logprob: -4.15785551071167

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2935684323310852
    2. ')' → logprob: -2.1685683727264404
    3. ')))' → logprob: -2.9185683727264404
    4. '))' → logprob: -3.1685683727264404
    5. '   ' → logprob: -3.6685683727264404
    6. '),' → logprob: -4.9185686111450195
    7. '           ' → logprob: -5.6685686111450195
    8. ')
' → logprob: -6.0435686111450195
    9. ')),' → logprob: -6.1685686111450195
    10. '),
' → logprob: -6.5435686111450195

Token 147: ' ),
' (ID: 4954)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45110493898391724
    2. ')' → logprob: -1.8261048793792725
    3. '       ' → logprob: -2.3261048793792725
    4. '),' → logprob: -2.4511048793792725
    5. '))' → logprob: -4.951105117797852
    6. '),
' (adapté à ' ),
') → logprob: -5.201105117797852
    7. ')))' → logprob: -6.076105117797852
    8. ')
' → logprob: -6.576105117797852
    9. ')),' → logprob: -7.326105117797852
    10. ')+' → logprob: -7.951105117797852

Token 148: '       ' (ID: 309)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.5213387608528137
    2. '   ' → logprob: -1.646338701248169
    3. '       ' → logprob: -2.646338701248169
    4. '[' → logprob: -3.271338701248169
    5. ' [(' → logprob: -3.271338701248169
    6. 'default' → logprob: -3.646338701248169
    7. ')' → logprob: -3.771338701248169
    8. ' [' → logprob: -5.271338939666748
    9. '[key' → logprob: -5.896338939666748
    10. '[]' → logprob: -6.271338939666748

Token 149: ' []' (ID: 6126)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.12809522449970245
    2. '[]' (adapté à ' []') → logprob: -2.8780951499938965
    3. '[' → logprob: -3.7530951499938965
    4. '[n' → logprob: -4.1280951499938965
    5. '[(' → logprob: -4.1280951499938965
    6. '[p' → logprob: -6.1280951499938965
    7. '[])
' → logprob: -6.5030951499938965
    8. ' []
' → logprob: -7.2530951499938965
    9. '[])' → logprob: -7.3780951499938965
    10. '[int' → logprob: -7.7530951499938965

Token 150: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4841859042644501
    2. '   ' → logprob: -0.9841859340667725
    3. '))' → logprob: -4.984185695648193
    4. ')))' → logprob: -7.109185695648193
    5. '),' → logprob: -7.234185695648193
    6. '```' → logprob: -7.484185695648193
    7. '       ' → logprob: -7.609185695648193
    8. ')
' → logprob: -7.734185695648193
    9. '),
' → logprob: -9.859186172485352
    10. ',
' → logprob: -10.984186172485352

Token 151: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0012720199301838875
    2. ' n' → logprob: -7.001272201538086
    3. 'A' → logprob: -9.126272201538086
    4. 'not' → logprob: -9.251272201538086
    5. '1' → logprob: -9.376272201538086
    6. 'B' → logprob: -10.501272201538086
    7. '0' → logprob: -10.876272201538086
    8. '(n' → logprob: -12.001272201538086
    9. '```' → logprob: -12.626272201538086
    10. ' not' → logprob: -13.001272201538086

Token 152: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.12070182710886002
    2. '==' → logprob: -3.370701789855957
    3. 'else' → logprob: -3.495701789855957
    4. ' >' → logprob: -3.870701789855957
    5. ' else' → logprob: -4.370701789855957
    6. ')' → logprob: -4.995701789855957
    7. '!=' → logprob: -5.370701789855957
    8. '0' → logprob: -6.370701789855957
    9. ' ==' → logprob: -7.120701789855957
    10. ' !=' → logprob: -7.995701789855957

Token 153: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025797015987336636
    2. ' ' → logprob: -6.002579689025879
    3. '0' → logprob: -9.377579689025879
    4. '
' → logprob: -12.127579689025879
    5. '2' → logprob: -12.627579689025879
    6. '```' → logprob: -12.815079689025879
    7. '   ' → logprob: -13.315079689025879
    8. '

' → logprob: -13.377579689025879
    9. '=' → logprob: -13.627579689025879
    10. 'B' → logprob: -15.002579689025879

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022571911104023457
    2. '0' → logprob: -6.252257347106934
    3. ' ' → logprob: -8.127257347106934
    4. '
' → logprob: -11.877257347106934
    5. '2' → logprob: -12.439757347106934
    6. '```' → logprob: -12.439757347106934
    7. '

' → logprob: -12.564757347106934
    8. '   ' → logprob: -12.689757347106934
    9. '=' → logprob: -12.939757347106934
    10. 'B' → logprob: -13.314757347106934

Token 155: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5237119793891907
    2. ' else' → logprob: -0.8987119793891907
    3. ')' → logprob: -8.273712158203125
    4. '       ' → logprob: -9.023712158203125
    5. '```' → logprob: -9.523712158203125
    6. '   ' → logprob: -10.273712158203125
    7. '+' → logprob: -10.898712158203125
    8. ' ' → logprob: -11.148712158203125
    9. '[' → logprob: -11.398712158203125
    10. '        ' → logprob: -12.023712158203125

Token 156: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1710922718048096
    2. '[]' → logprob: -1.2960922718048096
    3. '[n' → logprob: -1.2960922718048096
    4. '[])' → logprob: -2.9210922718048096
    5. '[]
' → logprob: -3.2960922718048096
    6. ' [' → logprob: -3.6710922718048096
    7. '[p' → logprob: -4.7960920333862305
    8. ' []' → logprob: -5.0460920333862305
    9. ' [])' → logprob: -5.6710920333862305
    10. '[])
' → logprob: -6.9210920333862305

Token 157: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021436894312500954
    2. '   ' → logprob: -4.89643669128418
    3. '),' → logprob: -4.89643669128418
    4. '))' → logprob: -5.77143669128418
    5. ')))' → logprob: -6.27143669128418
    6. '),
' → logprob: -8.27143669128418
    7. ')
' → logprob: -8.27143669128418
    8. '```' → logprob: -8.52143669128418
    9. ',
' → logprob: -9.64643669128418
    10. '       ' → logprob: -9.77143669128418

Token 158: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' (adapté à ' )') → logprob: -0.018454967066645622
    2. '))' → logprob: -4.5184550285339355
    3. ')
' → logprob: -6.0184550285339355
    4. '),' → logprob: -6.1434550285339355
    5. '   ' → logprob: -6.5184550285339355
    6. ')))' → logprob: -6.8934550285339355
    7. '),
' → logprob: -9.393454551696777
    8. '```' → logprob: -9.643454551696777
    9. ')),' → logprob: -9.893454551696777
    10. ')+' → logprob: -11.018454551696777

Token 159: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002226264216005802
    2. '   ' → logprob: -6.75222635269165
    3. '))' → logprob: -8.002225875854492
    4. ')
' → logprob: -8.252225875854492
    5. '),' → logprob: -8.752225875854492
    6. ')))' → logprob: -9.877225875854492
    7. ',
' → logprob: -10.627225875854492
    8. '[' → logprob: -10.752225875854492
    9. ',' → logprob: -10.752225875854492
    10. '       ' → logprob: -10.877225875854492

Token 160: ' ([' (ID: 31338)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.01657162234187126
    2. ' ([' → logprob: -4.641571521759033
    3. '[n' → logprob: -5.266571521759033
    4. ' [' → logprob: -7.516571521759033
    5. '[' → logprob: -7.891571521759033
    6. '   ' → logprob: -8.141571998596191
    7. '(([' → logprob: -8.641571998596191
    8. '[p' → logprob: -9.641571998596191
    9. '(
' → logprob: -10.266571998596191
    10. ' ' → logprob: -10.641571998596191

Token 161: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04413290321826935
    2. '[n' → logprob: -3.794132947921753
    3. ' n' → logprob: -4.794132709503174
    4. '1' → logprob: -4.794132709503174
    5. ' [' → logprob: -6.544132709503174
    6. '   ' → logprob: -7.169132709503174
    7. '[' → logprob: -7.419132709503174
    8. '(n' → logprob: -7.544132709503174
    9. '[A' → logprob: -8.544133186340332
    10. ' ' → logprob: -9.044133186340332

Token 162: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.3319124011322856e-05
    2. ' ]' → logprob: -11.625022888183594
    3. '],' → logprob: -12.250022888183594
    4. ']>' → logprob: -12.750022888183594
    5. '>' → logprob: -12.875022888183594
    6. ',' → logprob: -14.250022888183594
    7. ':]' → logprob: -14.500022888183594
    8. '])' → logprob: -14.625022888183594
    9. ']==' → logprob: -15.125022888183594
    10. '-' → logprob: -15.375022888183594

Token 163: ' if' (ID: 538)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.5128082633018494
    2. ' if' → logprob: -1.1378083229064941
    3. ']' → logprob: -3.512808322906494
    4. 'if' → logprob: -4.012808322906494
    5. ',)' → logprob: -4.387808322906494
    6. ')' → logprob: -4.637808322906494
    7. '[' → logprob: -5.637808322906494
    8. '(n' → logprob: -5.762808322906494
    9. '```' → logprob: -7.262808322906494
    10. '[:' → logprob: -7.262808322906494

Token 164: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.033699993044137955
    2. ' n' → logprob: -3.4086999893188477
    3. '(n' → logprob: -10.408699989318848
    4. '   ' → logprob: -11.908699989318848
    5. '>' → logprob: -12.533699989318848
    6. ' (' → logprob: -12.908699989318848
    7. '(' → logprob: -13.283699989318848
    8. '0' → logprob: -13.283699989318848
    9. ' ' → logprob: -13.658699989318848
    10. '```' → logprob: -14.033699989318848

Token 165: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0486002042889595
    2. ' >' → logprob: -3.048600196838379
    3. 'and' → logprob: -12.173600196838379
    4. ' ' → logprob: -12.673600196838379
    5. '[' → logprob: -14.673600196838379
    6. ' and' → logprob: -14.673600196838379
    7. '!=' → logprob: -14.923600196838379
    8. ')' → logprob: -14.923600196838379
    9. ' not' → logprob: -15.173600196838379
    10. '```' → logprob: -15.173600196838379

Token 166: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008084330474957824
    2. ' ' → logprob: -7.125808238983154
    3. '   ' → logprob: -13.500808715820312
    4. '```' → logprob: -14.000808715820312
    5. '
' → logprob: -14.375808715820312
    6. '>' → logprob: -15.000808715820312
    7. '

' → logprob: -15.625808715820312
    8. '0' → logprob: -15.750808715820312
    9. ')' → logprob: -16.500808715820312
    10. '  ' → logprob: -16.625808715820312

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2961512513575144e-05
    2. ' ' → logprob: -10.750022888183594
    3. '

' → logprob: -15.000022888183594
    4. '
' → logprob: -15.250022888183594
    5. '   ' → logprob: -15.500022888183594
    6. '0' → logprob: -15.500022888183594
    7. '```' → logprob: -15.750022888183594
    8. '2' → logprob: -16.625022888183594
    9. 'B' → logprob: -16.625022888183594
    10. 'A' → logprob: -17.500022888183594

Token 168: ' else' (ID: 1203)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.1973688155412674
    2. ' and' → logprob: -1.822368860244751
    3. 'else' → logprob: -4.447368621826172
    4. ' else' → logprob: -5.197368621826172
    5. ')' → logprob: -9.447368621826172
    6. '   ' → logprob: -9.697368621826172
    7. '```' → logprob: -10.697368621826172
    8. ' ' → logprob: -10.822368621826172
    9. '  ' → logprob: -11.197368621826172
    10. '>' → logprob: -11.822368621826172

Token 169: ' [])
' (ID: 64395)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.1186366006731987
    2. ' [' → logprob: -2.2436366081237793
    3. '[]' → logprob: -5.743636608123779
    4. '[])' → logprob: -7.243636608123779
    5. '[' → logprob: -7.618636608123779
    6. ' [])' → logprob: -7.993636608123779
    7. ' ' → logprob: -8.368636131286621
    8. ' []' → logprob: -8.618636131286621
    9. '   ' → logprob: -8.868636131286621
    10. '(n' → logprob: -8.993636131286621

Token 170: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016182278341148049
    2. ')
' → logprob: -9.625162124633789
    3. '):' → logprob: -10.375162124633789
    4. '   ' → logprob: -11.125162124633789
    5. '[' → logprob: -11.250162124633789
    6. ':' → logprob: -11.250162124633789
    7. ')[' → logprob: -11.500162124633789
    8. '))' → logprob: -12.625162124633789
    9. ' )' → logprob: -13.125162124633789
    10. ')))' → logprob: -13.500162124633789

Token 171: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12701945006847382
    2. '(' → logprob: -3.0020194053649902
    3. ':' → logprob: -4.00201940536499
    4. ',' → logprob: -4.12701940536499
    5. '[' → logprob: -4.25201940536499
    6. '(
' → logprob: -5.50201940536499
    7. '=' → logprob: -6.25201940536499
    8. '(n' → logprob: -6.50201940536499
    9. '```' → logprob: -6.50201940536499
    10. ' ' → logprob: -6.62701940536499

Token 172: ' compute' (ID: 23864)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.05914998799562454
    2. ' main' → logprob: -3.184149980545044
    3. 'g' → logprob: -4.684150218963623
    4. ' l' → logprob: -5.184150218963623
    5. ' common' → logprob: -8.809149742126465
    6. 'l' → logprob: -8.934149742126465
    7. 'main' → logprob: -9.059149742126465
    8. ' factor' → logprob: -9.184149742126465
    9. ' multiply' → logprob: -9.184149742126465
    10. ' solve' → logprob: -9.434149742126465

Token 173: '_prime' (ID: 98616)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.35362735390663147
    2. '_sum' → logprob: -2.1036274433135986
    3. '_product' → logprob: -2.3536274433135986
    4. '(' → logprob: -4.1036272048950195
    5. '_l' → logprob: -4.3536272048950195
    6. '_div' → logprob: -4.9786272048950195
    7. '_factor' → logprob: -5.4786272048950195
    8. '(A' → logprob: -5.6036272048950195
    9. '_difference' → logprob: -5.6036272048950195
    10. '():' → logprob: -5.7286272048950195

Token 174: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.016315754503011703
    2. '_factor' → logprob: -4.266315937042236
    3. 'f' → logprob: -6.391315937042236
    4. '_de' → logprob: -7.891315937042236
    5. 'factor' → logprob: -9.641315460205078
    6. '_div' → logprob: -10.766315460205078
    7. '```' → logprob: -12.391315460205078
    8. ' factors' → logprob: -12.641315460205078
    9. '_' → logprob: -13.266315460205078
    10. '_ex' → logprob: -13.766315460205078

Token 175: 'actors' (ID: 37126)
  Prédit: 'actors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -0.054971884936094284
    2. 'actor' → logprob: -2.929971933364868
    3. '_' → logprob: -10.679971694946289
    4. 'act' → logprob: -11.179971694946289
    5. '(' → logprob: -11.679971694946289
    6. 'requencies' → logprob: -11.679971694946289
    7. '```' → logprob: -12.304971694946289
    8. 'actoring' → logprob: -12.429971694946289
    9. 'Actors' → logprob: -12.804971694946289
    10. 'requency' → logprob: -12.929971694946289

Token 176: '_set' (ID: 5451)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.26385384798049927
    2. '(' → logprob: -1.7638537883758545
    3. '_counts' → logprob: -3.5138537883758545
    4. '_count' → logprob: -3.7638537883758545
    5. '(A' → logprob: -5.263854026794434
    6. '_list' → logprob: -7.263854026794434
    7. '(N' → logprob: -8.138854026794434
    8. ' (' → logprob: -8.888854026794434
    9. '(x' → logprob: -9.013854026794434
    10. '_f' → logprob: -9.138854026794434

Token 177: '(num' (ID: 15828)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09240664541721344
    2. '(A' → logprob: -2.967406749725342
    3. '(' → logprob: -3.467406749725342
    4. '(N' → logprob: -6.717406749725342
    5. '(num' → logprob: -6.967406749725342
    6. '(number' → logprob: -6.967406749725342
    7. '(a' → logprob: -7.217406749725342
    8. '(s' → logprob: -7.592406749725342
    9. '():' → logprob: -7.842406749725342
    10. '(numbers' → logprob: -7.967406749725342

Token 178: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020960131660103798
    2. '):
' → logprob: -3.8959600925445557
    3. 's' → logprob: -8.395959854125977
    4. ':' → logprob: -9.395959854125977
    5. ')' → logprob: -9.895959854125977
    6. '(n' → logprob: -10.770959854125977
    7. '):
' → logprob: -11.520959854125977
    8. '   ' → logprob: -12.270959854125977
    9. '):

' → logprob: -12.395959854125977
    10. ',' → logprob: -12.520959854125977

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.041768160182983e-05
    2. ':' → logprob: -10.500080108642578
    3. ' return' → logprob: -11.750080108642578
    4. 'def' → logprob: -11.875080108642578
    5. 'return' → logprob: -12.000080108642578
    6. '```' → logprob: -12.000080108642578
    7. '<|end|>' → logprob: -12.375080108642578
    8. ',' → logprob: -12.500080108642578
    9. '   ' → logprob: -12.500080108642578
    10. ':
' → logprob: -13.000080108642578

Token 180: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6437487602233887
    2. 'return' → logprob: -1.2687487602233887
    3. ' return' → logprob: -2.0187487602233887
    4. 'f' → logprob: -3.0187487602233887
    5. ' factors' → logprob: -5.018748760223389
    6. 'from' → logprob: -6.518748760223389
    7. 'pr' → logprob: -7.143748760223389
    8. ' from' → logprob: -7.768748760223389
    9. 'counter' → logprob: -8.268749237060547
    10. 'def' → logprob: -8.268749237060547

Token 181: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6634576916694641
    2. 'et' → logprob: -0.7884576916694641
    3. '=set' → logprob: -4.163457870483398
    4. '=' → logprob: -4.413457870483398
    5. 'ets' → logprob: -6.288457870483398
    6. '_' → logprob: -8.038457870483398
    7. 's' → logprob: -9.038457870483398
    8. '(' → logprob: -9.538457870483398
    9. 'e' → logprob: -10.163457870483398
    10. 'um' → logprob: -10.413457870483398

Token 182: ' x' (ID: 1215)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.8768420219421387
    2. 'e' → logprob: -1.3768420219421387
    3. 'acc' → logprob: -3.1268420219421387
    4. 'lst' → logprob: -3.1268420219421387
    5. 'i' → logprob: -3.3768420219421387
    6. 'res' → logprob: -3.6268420219421387
    7. 'count' → logprob: -3.7518420219421387
    8. 'cnt' → logprob: -4.126842021942139
    9. 'counter' → logprob: -4.251842021942139
    10. ' factors' → logprob: -4.251842021942139

Token 183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0629461407661438
    2. ' =' → logprob: -2.812946081161499
    3. ',' → logprob: -7.312946319580078
    4. '=set' → logprob: -8.312946319580078
    5. '   ' → logprob: -10.687946319580078
    6. '=[]' → logprob: -10.812946319580078
    7. 'et' → logprob: -12.562946319580078
    8. 's' → logprob: -12.812946319580078
    9. '=[],' → logprob: -13.312946319580078
    10. '=int' → logprob: -13.437946319580078

Token 184: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.03491315618157387
    2. 'num' → logprob: -4.034913063049316
    3. '0' → logprob: -5.159913063049316
    4. '[],' → logprob: -5.659913063049316
    5. '{},' → logprob: -6.034913063049316
    6. '{' → logprob: -6.284913063049316
    7. 'prime' → logprob: -6.409913063049316
    8. '1' → logprob: -7.534913063049316
    9. ' set' → logprob: -8.034913063049316
    10. 'n' → logprob: -9.409913063049316

Token 185: '(),' (ID: 2547)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2252960503101349
    2. '(pr' → logprob: -1.7252960205078125
    3. 'prime' → logprob: -4.4752960205078125
    4. '(),' → logprob: -4.6002960205078125
    5. '()
' → logprob: -6.3502960205078125
    6. '([]' → logprob: -8.975296020507812
    7. '()

' → logprob: -9.600296020507812
    8. '([' → logprob: -10.100296020507812
    9. 'pr' → logprob: -10.600296020507812
    10. '()`' → logprob: -10.725296020507812

Token 186: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.024433603510260582
    2. ' num' → logprob: -3.8994336128234863
    3. '1' → logprob: -6.149433612823486
    4. 'n' → logprob: -6.899433612823486
    5. '   ' → logprob: -8.899433135986328
    6. '[]' → logprob: -9.399433135986328
    7. 'x' → logprob: -9.399433135986328
    8. ' ' → logprob: -9.899433135986328
    9. '2' → logprob: -9.899433135986328
    10. '[num' → logprob: -9.899433135986328

Token 187: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14972476661205292
    2. 'while' → logprob: -2.5247247219085693
    3. '   ' → logprob: -3.7747247219085693
    4. ',' → logprob: -3.7747247219085693
    5. ' while' → logprob: -4.774724960327148
    6. ',
' → logprob: -6.649724960327148
    7. '    
' → logprob: -7.274724960327148
    8. '  
' → logprob: -7.399724960327148
    9. '<|end|>' → logprob: -7.774724960327148
    10. '	while' → logprob: -8.149724960327148

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4798657298088074
    2. ':' → logprob: -1.9798657894134521
    3. ',' → logprob: -2.479865789413452
    4. 'while' → logprob: -2.604865789413452
    5. ' while' → logprob: -2.729865789413452
    6. ':
' → logprob: -5.604865550994873
    7. '<|end|>' → logprob: -5.729865550994873
    8. '    
' → logprob: -5.979865550994873
    9. '
' → logprob: -5.979865550994873
    10. ',
' → logprob: -6.604865550994873

Token 189: ' for' (ID: 395)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.10521165281534195
    2. 'while' → logprob: -3.1052117347717285
    3. '   ' → logprob: -3.3552117347717285
    4. ' for' → logprob: -3.9802117347717285
    5. 'for' (adapté à ' for') → logprob: -6.9802117347717285
    6. '
' → logprob: -8.73021125793457
    7. '    
' → logprob: -9.10521125793457
    8. ' i' → logprob: -9.23021125793457
    9. ' 
' → logprob: -10.35521125793457
    10. '	while' → logprob: -11.10521125793457

Token 190: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.14264269173145294
    2. 'i' → logprob: -2.2676427364349365
    3. ' p' → logprob: -3.8926427364349365
    4. ' i' → logprob: -5.642642498016357
    5. 'f' → logprob: -5.767642498016357
    6. 'd' → logprob: -6.892642498016357
    7. 'factor' → logprob: -7.267642498016357
    8. 'prime' → logprob: -8.892642974853516
    9. ' factor' → logprob: -9.142642974853516
    10. ' f' → logprob: -9.267642974853516

Token 191: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10071048885583878
    2. 'in' → logprob: -2.350710391998291
    3. ',' → logprob: -7.850710391998291
    4. ' ' → logprob: -10.22571086883545
    5. ')' → logprob: -10.60071086883545
    6. 'p' → logprob: -11.22571086883545
    7. '   ' → logprob: -11.35071086883545
    8. ',p' → logprob: -12.10071086883545
    9. '  ' → logprob: -12.60071086883545
    10. ' p' → logprob: -12.60071086883545

Token 192: ' range' (ID: 3352)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.5251498222351074
    2. 'range' → logprob: -0.9001498222351074
    3. '[' → logprob: -7.275149822235107
    4. ' range' → logprob: -7.400149822235107
    5. ' prime' → logprob: -8.025150299072266
    6. 'pr' → logprob: -9.525150299072266
    7. '(' → logprob: -9.650150299072266
    8. '2' → logprob: -9.900150299072266
    9. 'factor' → logprob: -10.150150299072266
    10. '(range' → logprob: -10.650150299072266

Token 193: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10036636143922806
    2. '2' → logprob: -2.3503663539886475
    3. ' ' → logprob: -9.725366592407227
    4. ',' → logprob: -10.350366592407227
    5. 'from' → logprob: -10.600366592407227
    6. '   ' → logprob: -10.850366592407227
    7. ' (' → logprob: -12.225366592407227
    8. '```' → logprob: -12.725366592407227
    9. 'def' → logprob: -12.975366592407227
    10. '1' → logprob: -12.975366592407227

Token 194: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.875009536743164
    3. '1' → logprob: -14.000009536743164
    4. ')' → logprob: -14.250009536743164
    5. 'from' → logprob: -15.375009536743164
    6. '   ' → logprob: -15.500009536743164
    7. 'is' → logprob: -16.375009536743164
    8. '```' → logprob: -16.750009536743164
    9. '
' → logprob: -16.875009536743164
    10. '(' → logprob: -17.562509536743164

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016563729150220752
    2. ',is' → logprob: -9.375165939331055
    3. ' ,' → logprob: -9.750165939331055
    4. ',x' → logprob: -11.250165939331055
    5. 'is' → logprob: -12.500165939331055
    6. ',p' → logprob: -13.625165939331055
    7. '   ' → logprob: -14.125165939331055
    8. ',int' → logprob: -14.375165939331055
    9. '```' → logprob: -14.500165939331055
    10. ',
' → logprob: -14.875165939331055

Token 196: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0025439164601266384
    2. ' is' → logprob: -6.502543926239014
    3. 'x' → logprob: -6.877543926239014
    4. '   ' → logprob: -12.252543449401855
    5. ' x' → logprob: -12.752543449401855
    6. 'int' → logprob: -14.002543449401855
    7. 'num' → logprob: -14.502543449401855
    8. ' ' → logprob: -15.252543449401855
    9. '(is' → logprob: -15.377543449401855
    10. '	is' → logprob: -15.377543449401855

Token 197: 'qrt' (ID: 17629)
  Prédit: 'qrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qrt' → logprob: -5.1689596148207784e-05
    2. 'sqrt' → logprob: -9.875051498413086
    3. 'rt' → logprob: -16.500051498413086
    4. 'q' → logprob: -17.875051498413086
    5. 'int' → logprob: -18.000051498413086
    6. '(' → logprob: -18.375051498413086
    7. 'root' → logprob: -18.500051498413086
    8. 'qt' → logprob: -18.500051498413086
    9. 'is' → logprob: -18.750051498413086
    10. 'qr' → logprob: -19.250051498413086

Token 198: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.001272258348762989
    2. '(num' → logprob: -7.001272201538086
    3. 'x' → logprob: -8.251272201538086
    4. '(' → logprob: -9.501272201538086
    5. '(p' → logprob: -11.001272201538086
    6. 'num' → logprob: -12.876272201538086
    7. ' x' → logprob: -13.251272201538086
    8. ')' → logprob: -13.501272201538086
    9. ' (' → logprob: -13.751272201538086
    10. '(n' → logprob: -14.876272201538086

Token 199: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.5199208855628967
    2. '(num' → logprob: -1.269920825958252
    3. ')' → logprob: -2.269920825958252
    4. '(x' → logprob: -3.894920825958252
    5. 'num' → logprob: -8.01992130279541
    6. '(' → logprob: -8.39492130279541
    7. '[num' → logprob: -8.89492130279541
    8. 'x' → logprob: -9.39492130279541
    9. '(n' → logprob: -10.01992130279541
    10. '(p' → logprob: -10.51992130279541

Token 200: '2' (ID: 17)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.48388388752937317
    2. '1' → logprob: -2.108883857727051
    3. '(p' → logprob: -2.483883857727051
    4. '(num' → logprob: -2.858883857727051
    5. ')' → logprob: -3.608883857727051
    6. 'p' → logprob: -3.858883857727051
    7. 'x' → logprob: -3.983883857727051
    8. '(' → logprob: -4.358883857727051
    9. '2' → logprob: -4.483883857727051
    10. ' (' → logprob: -4.608883857727051

Token 201: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07912056148052216
    2. '):' → logprob: -2.579120635986328
    3. '):
' → logprob: -9.079120635986328
    4. ' ):
' → logprob: -9.704120635986328
    5. '   ' → logprob: -10.829120635986328
    6. '):

' → logprob: -11.204120635986328
    7. ' ):' → logprob: -11.829120635986328
    8. '():
' → logprob: -12.579120635986328
    9. '()):
' → logprob: -12.704120635986328
    10. ')' → logprob: -13.579120635986328

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3566201627254486
    2. ':' → logprob: -1.356620192527771
    3. '   ' → logprob: -4.2316203117370605
    4. ' if' → logprob: -4.6066203117370605
    5. ':
' → logprob: -5.2316203117370605
    6. ' :' → logprob: -5.8566203117370605
    7. '<|end|>' → logprob: -5.8566203117370605
    8. ' while' → logprob: -6.3566203117370605
    9. ',' → logprob: -6.6066203117370605
    10. ' ' → logprob: -7.4816203117370605

Token 203: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.10326819121837616
    2. 'while' (adapté à ' while') → logprob: -2.9782681465148926
    3. ' if' → logprob: -3.3532681465148926
    4. '       ' → logprob: -4.978268146514893
    5. 'if' → logprob: -5.728268146514893
    6. '   ' → logprob: -7.103268146514893
    7. '    ' → logprob: -7.103268146514893
    8. '	while' → logprob: -8.85326862335205
    9. '
' → logprob: -9.72826862335205
    10. '```' → logprob: -9.72826862335205

Token 204: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.16044051945209503
    2. 'x' → logprob: -1.9104405641555786
    3. ' num' → logprob: -9.285440444946289
    4. 'num' → logprob: -9.410440444946289
    5. ' n' → logprob: -11.160440444946289
    6. 'n' → logprob: -11.160440444946289
    7. '(x' → logprob: -12.035440444946289
    8. ' not' → logprob: -12.785440444946289
    9. '	x' → logprob: -13.035440444946289
    10. ' (' → logprob: -13.910440444946289

Token 205: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.03839132934808731
    2. ' %' → logprob: -3.288391351699829
    3. '%x' → logprob: -8.53839111328125
    4. '%n' → logprob: -9.78839111328125
    5. '%i' → logprob: -9.91339111328125
    6. '%d' → logprob: -11.28839111328125
    7. '%e' → logprob: -11.28839111328125
    8. '%s' → logprob: -11.41339111328125
    9. '%m' → logprob: -12.41339111328125
    10. '%b' → logprob: -12.91339111328125

Token 206: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.682846287731081e-05
    2. ' p' → logprob: -9.625066757202148
    3. '2' → logprob: -14.750066757202148
    4. '   ' → logprob: -15.875066757202148
    5. ' ' → logprob: -16.25006675720215
    6. '<|end|>' → logprob: -16.25006675720215
    7. '  ' → logprob: -18.12506675720215
    8. '=' → logprob: -18.25006675720215
    9. '```' → logprob: -18.37506675720215
    10. '	p' → logprob: -18.37506675720215

Token 207: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1269984394311905
    2. ' ==' → logprob: -2.1269984245300293
    3. ')==' → logprob: -10.251998901367188
    4. '=' → logprob: -11.501998901367188
    5. ']==' → logprob: -11.626998901367188
    6. '===' → logprob: -11.751998901367188
    7. '()==' → logprob: -13.001998901367188
    8. '```' → logprob: -13.126998901367188
    9. ' ' → logprob: -13.376998901367188
    10. '   ' → logprob: -15.001998901367188

Token 208: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -17.62504005432129
    4. '  ' → logprob: -19.50004005432129
    5. '00' → logprob: -19.62504005432129
    6. '
' → logprob: -20.87504005432129
    7. 'p' → logprob: -21.12504005432129
    8. '```' → logprob: -21.50004005432129
    9. '۰' → logprob: -21.75004005432129
    10. '000' → logprob: -22.12504005432129

Token 209: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4361441731452942
    2. ':' → logprob: -1.0611441135406494
    3. ' and' → logprob: -5.8111443519592285
    4. '):
' → logprob: -6.0611443519592285
    5. '       ' → logprob: -6.5611443519592285
    6. 'and' → logprob: -8.68614387512207
    7. '):' → logprob: -9.18614387512207
    8. ':

' → logprob: -9.43614387512207
    9. '   ' → logprob: -9.81114387512207
    10. '           ' → logprob: -9.93614387512207

Token 210: '           ' (ID: 352)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8325831294059753
    2. '       ' → logprob: -1.3325831890106201
    3. ' s' → logprob: -1.9575831890106201
    4. '           ' → logprob: -2.70758318901062
    5. 'x' → logprob: -2.95758318901062
    6. 's' → logprob: -3.33258318901062
    7. '```' → logprob: -6.207582950592041
    8. '        ' → logprob: -6.832582950592041
    9. '   ' → logprob: -7.207582950592041
    10. ' p' → logprob: -7.832582950592041

Token 211: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.4403442442417145
    2. ' s' → logprob: -1.065344214439392
    3. 'x' → logprob: -4.940344333648682
    4. ' x' → logprob: -5.440344333648682
    5. '   ' → logprob: -10.065343856811523
    6. '           ' → logprob: -10.315343856811523
    7. ' ' → logprob: -13.315343856811523
    8. '               ' → logprob: -13.690343856811523
    9. ' 
' → logprob: -13.940343856811523
    10. ' ' → logprob: -13.940343856811523

Token 212: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.018951283767819405
    2. '.' → logprob: -4.018951416015625
    3. ' .' → logprob: -7.143951416015625
    4. 'add' → logprob: -11.893951416015625
    5. '.update' → logprob: -13.143951416015625
    6. '   ' → logprob: -14.643951416015625
    7. '.insert' → logprob: -14.768951416015625
    8. '.Add' → logprob: -14.768951416015625
    9. ' add' → logprob: -15.268951416015625
    10. ').' → logprob: -15.268951416015625

Token 213: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0004969134461134672
    2. '(' → logprob: -7.625496864318848
    3. 'p' → logprob: -12.625496864318848
    4. ' (' → logprob: -12.875496864318848
    5. '(
' → logprob: -12.875496864318848
    6. ' p' → logprob: -14.625496864318848
    7. '((' → logprob: -18.500497817993164
    8. '(pr' → logprob: -18.625497817993164
    9. '(

' → logprob: -18.875497817993164
    10. '	p' → logprob: -19.125497817993164

Token 214: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0059469291009008884
    2. ')' → logprob: -5.505947113037109
    3. '           ' → logprob: -6.380947113037109
    4. ')
' → logprob: -9.25594711303711
    5. ' )
' → logprob: -9.75594711303711
    6. ');' → logprob: -12.25594711303711
    7. ')

' → logprob: -12.38094711303711
    8. '),' → logprob: -13.00594711303711
    9. ')x' → logprob: -13.00594711303711
    10. '               ' → logprob: -13.00594711303711

Token 215: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029845595359802246
    2. '
' → logprob: -3.779845714569092
    3. 'x' → logprob: -6.029845714569092
    4. '            
' → logprob: -6.904845714569092
    5. ',' → logprob: -7.029845714569092
    6. '<|end|>' → logprob: -7.154845714569092
    7. ' x' → logprob: -7.779845714569092
    8. '       ' → logprob: -8.029845237731934
    9. '```' → logprob: -8.654845237731934
    10. ' 
' → logprob: -8.654845237731934

Token 216: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.07985614240169525
    2. ' x' → logprob: -2.5798561573028564
    3. '           ' → logprob: -6.954855918884277
    4. '       ' → logprob: -12.454855918884277
    5. '               ' → logprob: -12.579855918884277
    6. '   ' → logprob: -13.204855918884277
    7. '	x' → logprob: -13.704855918884277
    8. '```' → logprob: -14.329855918884277
    9. ' ' → logprob: -15.329855918884277
    10. '            ' → logprob: -15.704855918884277

Token 217: '//=' (ID: 171954)
  Prédit: '//='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.1002611368894577
    2. ' //' → logprob: -2.3502612113952637
    3. '=' → logprob: -10.100260734558105
    4. '//' → logprob: -11.475260734558105
    5. ' =' → logprob: -13.350260734558105
    6. ' ' → logprob: -14.100260734558105
    7. '```' → logprob: -15.600260734558105
    8. '   ' → logprob: -15.600260734558105
    9. '/=' → logprob: -15.975260734558105
    10. '#' → logprob: -16.975261688232422

Token 218: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.088346359931165e-07
    2. ' p' → logprob: -14.250000953674316
    3. '2' → logprob: -16.5
    4. '
' → logprob: -18.375
    5. '   ' → logprob: -19.125
    6. '<p' → logprob: -19.375
    7. '	p' → logprob: -19.625
    8. '```' → logprob: -19.625
    9. ' ' → logprob: -21.5
    10. '10' → logprob: -22.125

Token 219: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10599047690629959
    2. ' 
' → logprob: -3.355990409851074
    3. '   ' → logprob: -3.855990409851074
    4. '    
' → logprob: -4.230990409851074
    5. '  
' → logprob: -4.605990409851074
    6. 's' → logprob: -5.730990409851074
    7. '<|end|>' → logprob: -5.855990409851074
    8. ' ' → logprob: -6.105990409851074
    9. '1' → logprob: -6.230990409851074
    10. ' s' → logprob: -6.355990409851074

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032692354172468185
    2. ' if' → logprob: -3.5326924324035645
    3. 'if' → logprob: -6.4076924324035645
    4. 's' → logprob: -8.157691955566406
    5. ' s' → logprob: -8.282691955566406
    6. ' while' → logprob: -8.282691955566406
    7. '
' → logprob: -8.532691955566406
    8. '       ' → logprob: -9.532691955566406
    9. 'while' → logprob: -9.657691955566406
    10. ',' → logprob: -9.907691955566406

Token 221: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09123247116804123
    2. ' if' → logprob: -2.4662325382232666
    3. 'for' → logprob: -6.7162322998046875
    4. '   ' → logprob: -7.5912322998046875
    5. 'return' → logprob: -8.091232299804688
    6. 's' → logprob: -9.591232299804688
    7. 'while' → logprob: -9.716232299804688
    8. '```' → logprob: -9.716232299804688
    9. ' for' → logprob: -9.841232299804688
    10. ' return' → logprob: -11.341232299804688

Token 222: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.474078893661499
    2. ' x' → logprob: -0.974078893661499
    3. '   ' → logprob: -13.599079132080078
    4. '	x' → logprob: -15.224079132080078
    5. ' ' → logprob: -15.474079132080078
    6. '
' → logprob: -16.974079132080078
    7. ' ' → logprob: -17.849079132080078
    8. '>x' → logprob: -18.224079132080078
    9. '    ' → logprob: -18.599079132080078
    10. ')x' → logprob: -18.599079132080078

Token 223: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0008055794751271605
    2. ' >' → logprob: -7.125805377960205
    3. ' ' → logprob: -15.000805854797363
    4. '!=' → logprob: -15.500805854797363
    5. ' ' → logprob: -15.625805854797363
    6. '">' → logprob: -16.375804901123047
    7. '```' → logprob: -16.375804901123047
    8. '   ' → logprob: -16.875804901123047
    9. '[' → logprob: -17.000804901123047
    10. '>
' → logprob: -17.375804901123047

Token 224: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '
' → logprob: -16.875011444091797
    4. '   ' → logprob: -17.375011444091797
    5. '```' → logprob: -18.250011444091797
    6. '

' → logprob: -18.500011444091797
    7. '１' → logprob: -19.875011444091797
    8. ' ' → logprob: -20.312511444091797
    9. '  ' → logprob: -20.312511444091797
    10. '۱' → logprob: -20.312511444091797

Token 225: ':s' (ID: 31023)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4768703281879425
    2. ':
' → logprob: -0.9768702983856201
    3. ' s' → logprob: -6.601870536804199
    4. ':s' → logprob: -7.476870536804199
    5. '       ' → logprob: -7.726870536804199
    6. '   ' → logprob: -8.3518705368042
    7. 's' → logprob: -9.2268705368042
    8. ' :' → logprob: -10.2268705368042
    9. ' :
' → logprob: -11.1018705368042
    10. '):
' → logprob: -11.3518705368042

Token 226: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0003455944824963808
    2. '.' → logprob: -8.000345230102539
    3. 'add' → logprob: -11.875345230102539
    4. ' .' → logprob: -13.250345230102539
    5. '   ' → logprob: -14.375345230102539
    6. '.Add' → logprob: -15.250345230102539
    7. '.
' → logprob: -16.00034523010254
    8. '.append' → logprob: -16.12534523010254
    9. 's' → logprob: -16.50034523010254
    10. '.insert' → logprob: -16.62534523010254

Token 227: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.0325924449716695e-05
    2. '(' → logprob: -12.12501049041748
    3. 'x' → logprob: -12.25001049041748
    4. '(
' → logprob: -16.500009536743164
    5. ' (' → logprob: -19.250009536743164
    6. ' x' → logprob: -20.250009536743164
    7. '	x' → logprob: -21.125009536743164
    8. '```' → logprob: -21.250009536743164
    9. '((' → logprob: -21.500009536743164
    10. '(int' → logprob: -21.625009536743164

Token 228: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04883239418268204
    2. ')
' → logprob: -3.048832416534424
    3. ')return' → logprob: -8.798831939697266
    4. ' )' → logprob: -9.923831939697266
    5. ')
' → logprob: -11.048831939697266
    6. ')

' → logprob: -11.173831939697266
    7. ' )
' → logprob: -11.798831939697266
    8. ')n' → logprob: -12.923831939697266
    9. ')#' → logprob: -13.923831939697266
    10. ')set' → logprob: -14.298831939697266

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3054320216178894
    2. 'return' → logprob: -1.6804320812225342
    3. ' return' → logprob: -2.680432081222534
    4. '
' → logprob: -5.805431842803955
    5. ':return' → logprob: -6.055431842803955
    6. 'def' → logprob: -6.430431842803955
    7. '(return' → logprob: -7.805431842803955
    8. '	return' → logprob: -8.180432319641113
    9. ')' → logprob: -8.680432319641113
    10. ',' → logprob: -8.805432319641113

Token 230: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5780994296073914
    2. 'return' (adapté à ' return') → logprob: -0.8280994296073914
    3. '   ' → logprob: -6.203099250793457
    4. '
' → logprob: -9.828099250793457
    5. ':return' → logprob: -10.203099250793457
    6. ' ' → logprob: -10.953099250793457
    7. '	return' → logprob: -11.203099250793457
    8. ' 
' → logprob: -12.828099250793457
    9. 'def' → logprob: -13.328099250793457
    10. '_return' → logprob: -13.453099250793457

Token 231: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005233763717114925
    2. ' s' → logprob: -5.2552337646484375
    3. '{s' → logprob: -18.255233764648438
    4. '(s' → logprob: -19.005233764648438
    5. ' ' → logprob: -19.255233764648438
    6. '   ' → logprob: -20.005233764648438
    7. '`s' → logprob: -20.255233764648438
    8. '	s' → logprob: -20.755233764648438
    9. ' ' → logprob: -21.505233764648438
    10. '_s' → logprob: -21.880233764648438

Token 232: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.90635746717453
    2. 'def' → logprob: -2.156357526779175
    3. '_' → logprob: -2.656357526779175
    4. 'result' → logprob: -2.781357526779175
    5. 'g' → logprob: -3.156357526779175
    6. 'next' → logprob: -3.281357526779175
    7. 'print' → logprob: -3.406357526779175
    8. 'for' → logprob: -3.656357526779175
    9. '*' → logprob: -3.781357526779175
    10. 'factor' → logprob: -4.281357288360596

Token 233: 'A' (ID: 32)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.27436894178390503
    2. 'result' → logprob: -2.52436900138855
    3. 'def' → logprob: -2.77436900138855
    4. 'common' → logprob: -4.149368762969971
    5. 'C' → logprob: -4.399368762969971
    6. ')' → logprob: -4.649368762969971
    7. 'print' → logprob: -4.774368762969971
    8. 'c' → logprob: -4.899368762969971
    9. 'res' → logprob: -5.024368762969971
    10. '#' → logprob: -5.149368762969971

Token 234: '_dec' (ID: 33390)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42538365721702576
    2. '%' → logprob: -1.4253836870193481
    3. ' %' → logprob: -3.1753835678100586
    4. '*' → logprob: -3.9253835678100586
    5. '+' → logprob: -4.550383567810059
    6. ',B' → logprob: -4.925383567810059
    7. '**' → logprob: -5.050383567810059
    8. '%B' → logprob: -5.800383567810059
    9. '>' → logprob: -5.925383567810059
    10. ' ,' → logprob: -5.925383567810059

Token 235: ' =' (ID: 314)
  Prédit: 'om'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'om' → logprob: -0.11274925619363785
    2. 'omp' → logprob: -2.7377493381500244
    3. 'prime' → logprob: -4.362749099731445
    4. '_prime' → logprob: -4.612749099731445
    5. '=' → logprob: -4.737749099731445
    6. ' =' → logprob: -5.737749099731445
    7. '```' → logprob: -6.112749099731445
    8. '_com' → logprob: -6.987749099731445
    9. 'compose' → logprob: -7.112749099731445
    10. '_de' → logprob: -7.112749099731445

Token 236: ' compute' (ID: 23864)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.004764626733958721
    2. ' prime' → logprob: -5.379764556884766
    3. 'set' → logprob: -9.629764556884766
    4. 'A' → logprob: -10.254764556884766
    5. 'list' → logprob: -10.879764556884766
    6. 'compute' → logprob: -12.129764556884766
    7. '[' → logprob: -12.504764556884766
    8. 'sorted' → logprob: -12.754764556884766
    9. 'prim' → logprob: -13.754764556884766
    10. 'principal' → logprob: -13.879764556884766

Token 237: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.00043126524542458355
    2. 'prime' → logprob: -7.750431060791016
    3. 'A' → logprob: -15.500431060791016
    4. 'a' → logprob: -15.875431060791016
    5. 'Prime' → logprob: -16.000431060791016
    6. '```' → logprob: -16.625431060791016
    7. ' prime' → logprob: -16.875431060791016
    8. '\' → logprob: -18.125431060791016
    9. '(A' → logprob: -18.375431060791016
    10. '_' → logprob: -18.625431060791016

Token 238: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.018152287229895592
    2. 'f' → logprob: -4.018152236938477
    3. 'factor' → logprob: -14.143152236938477
    4. 'Factors' → logprob: -14.393152236938477
    5. '_factor' → logprob: -15.018152236938477
    6. 's' → logprob: -15.393152236938477
    7. 'A' → logprob: -15.893152236938477
    8. '```' → logprob: -16.018152236938477
    9. '_' → logprob: -16.143152236938477
    10. '\' → logprob: -16.768152236938477

Token 239: 'actors' (ID: 37126)
  Prédit: 'actors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -0.0013354785041883588
    2. 'ctors' → logprob: -6.751335620880127
    3. 'Factors' → logprob: -10.126335144042969
    4. 'ators' → logprob: -10.501335144042969
    5. 'acters' → logprob: -10.751335144042969
    6. 'actor' → logprob: -10.876335144042969
    7. 'a' → logprob: -11.251335144042969
    8. '```' → logprob: -11.751335144042969
    9. 'A' → logprob: -12.251335144042969
    10. 'ectors' → logprob: -12.626335144042969

Token 240: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.07898551225662231
    2. 'set' → logprob: -2.5789854526519775
    3. 'A' → logprob: -9.578985214233398
    4. 'f' → logprob: -11.453985214233398
    5. 'Set' → logprob: -11.703985214233398
    6. 's' → logprob: -11.953985214233398
    7. '_f' → logprob: -14.203985214233398
    8. ' set' → logprob: -15.953985214233398
    9. '(A' → logprob: -16.0789852142334
    10. 'S' → logprob: -16.7039852142334

Token 241: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -6.24179228907451e-05
    2. '(B' → logprob: -9.750061988830566
    3. '(' → logprob: -12.625061988830566
    4. 'A' → logprob: -14.750061988830566
    5. '((' → logprob: -15.250061988830566
    6. '(
' → logprob: -15.750061988830566
    7. '(a' → logprob: -17.500062942504883
    8. ' (' → logprob: -18.500062942504883
    9. ')(' → logprob: -18.875062942504883
    10. '```' → logprob: -18.875062942504883

Token 242: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009766122326254845
    2. ')
' → logprob: -4.634766101837158
    3. ')
' → logprob: -12.134766578674316
    4. ')

' → logprob: -14.134766578674316
    5. ')#' → logprob: -14.259766578674316
    6. ')+' → logprob: -14.384766578674316
    7. '),' → logprob: -14.384766578674316
    8. ' )' → logprob: -14.634766578674316
    9. ').' → logprob: -14.759766578674316
    10. '|' → logprob: -14.759766578674316

Token 243: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0005244385101832449
    2. ' B' → logprob: -8.500524520874023
    3. 'if' → logprob: -8.625524520874023
    4. 'for' → logprob: -11.250524520874023
    5. ' if' → logprob: -11.625524520874023
    6. '```' → logprob: -11.625524520874023
    7. 'common' → logprob: -11.625524520874023
    8. 's' → logprob: -11.750524520874023
    9. 'prime' → logprob: -11.875524520874023
    10. 'A' → logprob: -12.125524520874023

Token 244: '_dec' (ID: 33390)
  Prédit: '_dec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dec' → logprob: -2.3557529857498594e-05
    2. '_set' → logprob: -11.12502384185791
    3. '_' → logprob: -12.75002384185791
    4. ' =' → logprob: -13.75002384185791
    5. '_de' → logprob: -13.87502384185791
    6. ',' → logprob: -14.37502384185791
    7. 'dec' → logprob: -14.87502384185791
    8. '_add' → logprob: -14.87502384185791
    9. ' _' → logprob: -15.12502384185791
    10. '_def' → logprob: -15.37502384185791

Token 245: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0067154900170862675
    2. ' compute' → logprob: -5.006715297698975
    3. '.compute' → logprob: -16.006715774536133
    4. 'calculate' → logprob: -17.881715774536133
    5. 'computer' → logprob: -18.631715774536133
    6. '{' → logprob: -19.256715774536133
    7. 'com' → logprob: -19.256715774536133
    8. ' ' → logprob: -19.381715774536133
    9. 'comput' → logprob: -19.506715774536133
    10. '(com' → logprob: -19.631715774536133

Token 247: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.16918109357357025
    2. '_f' → logprob: -2.2941811084747314
    3. 'prime' → logprob: -2.9191811084747314
    4. 'f' → logprob: -7.794180870056152
    5. '_b' → logprob: -8.294180870056152
    6. '_factor' → logprob: -10.544180870056152
    7. 'compute' → logprob: -10.544180870056152
    8. '(B' → logprob: -10.544180870056152
    9. '_set' → logprob: -10.919180870056152
    10. 'set' → logprob: -11.294180870056152

Token 248: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.0016380504239350557
    2. 'Factors' → logprob: -7.251637935638428
    3. 'f' → logprob: -7.376637935638428
    4. 'set' → logprob: -8.626638412475586
    5. '_set' → logprob: -9.251638412475586
    6. 'B' → logprob: -10.751638412475586
    7. '_' → logprob: -14.376638412475586
    8. '(B' → logprob: -14.376638412475586
    9. '_de' → logprob: -14.376638412475586
    10. ' factors' → logprob: -14.501638412475586

Token 249: 'actors' (ID: 37126)
  Prédit: 'actors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -0.00011272187111899257
    2. 'actor' → logprob: -9.125112533569336
    3. 'Actors' → logprob: -13.625112533569336
    4. 'Factors' → logprob: -14.500112533569336
    5. 'f' → logprob: -14.875112533569336
    6. '(B' → logprob: -15.250112533569336
    7. '_f' → logprob: -15.875112533569336
    8. '{' → logprob: -15.875112533569336
    9. '```' → logprob: -15.875112533569336
    10. 'A' → logprob: -16.125112533569336

Token 250: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.14707818627357483
    2. 'set' → logprob: -2.022078275680542
    3. 'Set' → logprob: -5.647078037261963
    4. 'B' → logprob: -7.147078037261963
    5. '(B' → logprob: -10.522078514099121
    6. '_f' → logprob: -10.772078514099121
    7. 's' → logprob: -12.272078514099121
    8. 'f' → logprob: -12.272078514099121
    9. 'S' → logprob: -12.647078514099121
    10. '_s' → logprob: -12.897078514099121

Token 251: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -2.696889623621246e-06
    2. 'B' → logprob: -13.12500286102295
    3. '(A' → logprob: -15.37500286102295
    4. '(' → logprob: -15.37500286102295
    5. ' (' → logprob: -15.62500286102295
    6. '(
' → logprob: -17.125001907348633
    7. '(b' → logprob: -17.875001907348633
    8. ' B' → logprob: -19.000001907348633
    9. '((' → logprob: -19.125001907348633
    10. '<B' → logprob: -19.500001907348633

Token 252: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.815280696377158e-05
    2. ')
' → logprob: -9.750078201293945
    3. '())' → logprob: -11.500078201293945
    4. '()' → logprob: -12.750078201293945
    5. ')

' → logprob: -13.625078201293945
    6. ')#' → logprob: -13.750078201293945
    7. ').' → logprob: -13.875078201293945
    8. '))' → logprob: -14.375078201293945
    9. ' )' → logprob: -14.375078201293945
    10. ')set' → logprob: -14.750078201293945

Token 253: 'ans' (ID: 616)
  Prédit: 'common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'common' → logprob: -0.38011446595191956
    2. 'C' → logprob: -2.1301145553588867
    3. 'g' → logprob: -2.6301145553588867
    4. 'result' → logprob: -3.6301145553588867
    5. 'if' → logprob: -4.130114555358887
    6. 'print' → logprob: -4.130114555358887
    7. 'diff' → logprob: -4.130114555358887
    8. 'intersection' → logprob: -4.505114555358887
    9. 'inter' → logprob: -4.630114555358887
    10. 'union' → logprob: -5.755114555358887

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.034707531332969666
    2. '=' → logprob: -3.409707546234131
    3. '_' → logprob: -7.034707546234131
    4. ',' → logprob: -10.409707069396973
    5. ')' → logprob: -10.784707069396973
    6. ' =
' → logprob: -11.159707069396973
    7. '<|end|>' → logprob: -11.159707069396973
    8. '_=' → logprob: -11.284707069396973
    9. '[' → logprob: -11.534707069396973
    10. '```' → logprob: -11.534707069396973

Token 255: ' sum' (ID: 4215)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4440714120864868
    2. 'A' → logprob: -1.5690714120864868
    3. '1' → logprob: -3.3190712928771973
    4. '0' → logprob: -3.3190712928771973
    5. ' len' → logprob: -4.194071292877197
    6. '(A' → logprob: -4.319071292877197
    7. '(len' → logprob: -4.319071292877197
    8. ' A' → logprob: -4.694071292877197
    9. 'min' → logprob: -4.694071292877197
    10. 'sum' → logprob: -5.194071292877197

Token 256: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.140893816947937
    2. '(p' → logprob: -3.2658939361572266
    3. '((' → logprob: -3.3908939361572266
    4. '(A' → logprob: -3.6408939361572266
    5. '(a' → logprob: -4.015893936157227
    6. '([' → logprob: -5.140893936157227
    7. '(x' → logprob: -6.015893936157227
    8. '(
' → logprob: -6.265893936157227
    9. '({' → logprob: -6.640893936157227
    10. '(min' → logprob: -7.015893936157227

Token 257: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.396577388048172
    2. '(int' → logprob: -2.1465773582458496
    3. '(abs' → logprob: -2.2715773582458496
    4. '(min' → logprob: -3.1465773582458496
    5. '(' → logprob: -3.6465773582458496
    6. 'abs' → logprob: -4.27157735824585
    7. 'min' → logprob: -5.27157735824585
    8. 'lambda' → logprob: -5.77157735824585
    9. '(
' → logprob: -5.89657735824585
    10. '(max' → logprob: -6.14657735824585

Token 258: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1201308965682983
    2. 'p' → logprob: -1.6201308965682983
    3. ' x' → logprob: -1.7451308965682983
    4. 'lambda' → logprob: -2.120131015777588
    5. ' p' → logprob: -2.495131015777588
    6. ' lambda' → logprob: -2.620131015777588
    7. 'f' → logprob: -5.620131015777588
    8. 'a' → logprob: -5.745131015777588
    9. '   ' → logprob: -5.995131015777588
    10. 'c' → logprob: -6.245131015777588

Token 259: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0049568163231015205
    2. ' :' → logprob: -6.1299567222595215
    3. ',' → logprob: -6.3799567222595215
    4. ':A' → logprob: -7.3799567222595215
    5. ',A' → logprob: -9.12995719909668
    6. 'lambda' → logprob: -9.37995719909668
    7. 'A' → logprob: -9.62995719909668
    8. '   ' → logprob: -10.25495719909668
    9. '=lambda' → logprob: -10.25495719909668
    10. ':B' → logprob: -10.62995719909668

Token 260: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4802160859107971
    2. '(x' → logprob: -1.9802160263061523
    3. '1' → logprob: -2.1052160263061523
    4. 'A' → logprob: -3.3552160263061523
    5. 'B' → logprob: -4.355216026306152
    6. '(' → logprob: -4.480216026306152
    7. '(A' → logprob: -4.480216026306152
    8. 'max' → logprob: -4.855216026306152
    9. 'lambda' → logprob: -4.855216026306152
    10. 'abs' → logprob: -4.980216026306152

Token 261: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4957767426967621
    2. '1' → logprob: -1.7457767724990845
    3. '(x' → logprob: -2.745776653289795
    4. 'A' → logprob: -3.120776653289795
    5. 'abs' → logprob: -4.120776653289795
    6. 'B' → logprob: -4.120776653289795
    7. 'max' → logprob: -4.495776653289795
    8. 'int' → logprob: -4.620776653289795
    9. '(' → logprob: -4.620776653289795
    10. '(A' → logprob: -4.745776653289795

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3025032579898834
    2. ':' → logprob: -2.1775033473968506
    3. ' in' → logprob: -2.5525033473968506
    4. 'in' → logprob: -3.9275033473968506
    5. ' if' → logprob: -5.3025031089782715
    6. ',x' → logprob: -5.3025031089782715
    7. ' x' → logprob: -5.4275031089782715
    8. '+' → logprob: -5.6775031089782715
    9. '(x' → logprob: -5.6775031089782715
    10. 'x' → logprob: -5.9275031089782715

Token 263: ' filter' (ID: 6690)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1185186505317688
    2. ' A' → logprob: -2.243518590927124
    3. 'filter' → logprob: -6.243518829345703
    4. '   ' → logprob: -7.118518829345703
    5. ' filter' → logprob: -7.243518829345703
    6. '(A' → logprob: -7.368518829345703
    7. ' ' → logprob: -7.368518829345703
    8. ' (' → logprob: -8.618518829345703
    9. '  ' → logprob: -8.993518829345703
    10. 'set' → logprob: -9.118518829345703

Token 264: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0014313090359792113
    2. '(' → logprob: -7.251431465148926
    3. '(A' → logprob: -7.376431465148926
    4. '(
' → logprob: -9.751431465148926
    5. '(B' → logprob: -11.126431465148926
    6. 'lambda' → logprob: -11.376431465148926
    7. 'A' → logprob: -12.626431465148926
    8. '((' → logprob: -12.876431465148926
    9. '   ' → logprob: -13.501431465148926
    10. '(ans' → logprob: -13.751431465148926

Token 265: ' x' (ID: 1215)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7707065343856812
    2. 'lambda' → logprob: -1.6457065343856812
    3. 'x' → logprob: -1.8957065343856812
    4. 'y' → logprob: -2.7707066535949707
    5. 'a' → logprob: -3.0207066535949707
    6. ' lambda' → logprob: -4.145706653594971
    7. 'f' → logprob: -4.395706653594971
    8. ' p' → logprob: -4.395706653594971
    9. ' y' → logprob: -4.520706653594971
    10. '(lambda' → logprob: -5.020706653594971

Token 266: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002817835658788681
    2. ' :' → logprob: -6.252817630767822
    3. '=lambda' → logprob: -8.12781810760498
    4. 'lambda' → logprob: -8.37781810760498
    5. '(lambda' → logprob: -9.12781810760498
    6. ':
' → logprob: -9.75281810760498
    7. ':x' → logprob: -10.00281810760498
    8. ' lambda' → logprob: -10.62781810760498
    9. ' in' → logprob: -10.62781810760498
    10. ':A' → logprob: -11.00281810760498

Token 267: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.028471270576119423
    2. ' x' → logprob: -3.9034712314605713
    3. 'lambda' → logprob: -5.02847146987915
    4. ' lambda' → logprob: -7.27847146987915
    5. '(lambda' → logprob: -8.403470993041992
    6. '(x' → logprob: -8.403470993041992
    7. '   ' → logprob: -9.278470993041992
    8. 'A' → logprob: -10.028470993041992
    9. ' (' → logprob: -10.903470993041992
    10. ' ' → logprob: -11.278470993041992

Token 268: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4298897385597229
    2. ' in' → logprob: -1.0548896789550781
    3. 'not' → logprob: -7.679889678955078
    4. ' not' → logprob: -8.054889678955078
    5. ' ' → logprob: -9.054889678955078
    6. 's' → logprob: -10.179889678955078
    7. 'A' → logprob: -10.304889678955078
    8. '   ' → logprob: -10.429889678955078
    9. ' A' → logprob: -10.679889678955078
    10. ':' → logprob: -10.679889678955078

Token 269: ' B' (ID: 418)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05012974143028259
    2. 'B' → logprob: -3.1751296520233154
    3. ' A' → logprob: -5.0501298904418945
    4. ' B' → logprob: -8.175129890441895
    5. '   ' → logprob: -8.675129890441895
    6. '(A' → logprob: -8.800129890441895
    7. ' ' → logprob: -10.175129890441895
    8. '(B' → logprob: -11.050129890441895
    9. '  ' → logprob: -11.300129890441895
    10. ' (' → logprob: -11.925129890441895

Token 270: '_dec' (ID: 33390)
  Prédit: '_dec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dec' → logprob: -0.004352028947323561
    2. 'A' → logprob: -5.87935209274292
    3. 'dec' → logprob: -7.75435209274292
    4. '_de' → logprob: -8.004351615905762
    5. ',' → logprob: -8.629351615905762
    6. ')' → logprob: -8.754351615905762
    7. 'Dec' → logprob: -9.129351615905762
    8. ',A' → logprob: -9.129351615905762
    9. '   ' → logprob: -10.129351615905762
    10. ' A' → logprob: -10.504351615905762

Token 271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009182424284517765
    2. ',A' → logprob: -5.384182453155518
    3. ' ,' → logprob: -6.009182453155518
    4. 'A' → logprob: -6.509182453155518
    5. ' and' → logprob: -8.63418197631836
    6. 'and' → logprob: -8.75918197631836
    7. '   ' → logprob: -9.38418197631836
    8. ' A' → logprob: -9.38418197631836
    9. '(A' → logprob: -9.50918197631836
    10. '(),' → logprob: -11.63418197631836

Token 272: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.20166650414466858
    2. ' A' → logprob: -1.7016664743423462
    3. '   ' → logprob: -8.326666831970215
    4. '	A' → logprob: -11.951666831970215
    5. '       ' → logprob: -13.451666831970215
    6. '    ' → logprob: -14.701666831970215
    7. '           ' → logprob: -14.701666831970215
    8. ' ' → logprob: -14.826666831970215
    9. '  ' → logprob: -14.951666831970215
    10. ',A' → logprob: -15.326666831970215

Token 273: '_dec' (ID: 33390)
  Prédit: '_dec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dec' → logprob: -1.4855663721391466e-05
    2. '))' → logprob: -12.125015258789062
    3. ')))' → logprob: -12.875015258789062
    4. 'dec' → logprob: -13.625015258789062
    5. 'Dec' → logprob: -13.625015258789062
    6. ')' → logprob: -13.875015258789062
    7. '_de' → logprob: -14.000015258789062
    8. ',' → logprob: -15.000015258789062
    9. '),' → logprob: -15.125015258789062
    10. '   ' → logprob: -15.125015258789062

Token 274: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.004719903226941824
    2. '))' → logprob: -5.5047197341918945
    3. ')' → logprob: -7.5047197341918945
    4. '))))' → logprob: -10.379719734191895
    5. ')))
' → logprob: -10.504719734191895
    6. ' ' → logprob: -10.879719734191895
    7. ')));' → logprob: -12.379719734191895
    8. '   ' → logprob: -12.504719734191895
    9. ')))

' → logprob: -13.004719734191895
    10. '())))' → logprob: -14.379719734191895

Token 275: '+' (ID: 10)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008291634730994701
    2. '
' → logprob: -7.125829219818115
    3. ' print' → logprob: -11.125828742980957
    4. '<|end|>' → logprob: -12.250828742980957
    5. ')' → logprob: -13.625828742980957
    6. '
' → logprob: -13.875828742980957
    7. ')
' → logprob: -14.250828742980957
    8. '+' → logprob: -14.625828742980957
    9. '+
' → logprob: -15.125828742980957
    10. 'for' → logprob: -15.125828742980957

Token 276: '1' (ID: 16)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.017578857019543648
    2. ' sum' → logprob: -4.767579078674316
    3. '0' → logprob: -5.517579078674316
    4. '1' → logprob: -6.017579078674316
    5. 'len' → logprob: -6.142579078674316
    6. '(sum' → logprob: -8.892579078674316
    7. 'int' → logprob: -9.767579078674316
    8. ' len' → logprob: -10.142579078674316
    9. ' ' → logprob: -10.142579078674316
    10. '(len' → logprob: -11.517579078674316

Token 277: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015740707516670227
    2. '<|end|>' → logprob: -4.265740871429443
    3. ' print' → logprob: -6.890740871429443
    4. '
' → logprob: -8.140740394592285
    5. ')' → logprob: -9.265740394592285
    6. '\n' → logprob: -10.015740394592285
    7. '(print' → logprob: -10.265740394592285
    8. '\' → logprob: -10.265740394592285
    9. '#' → logprob: -11.265740394592285
    10. '```' → logprob: -11.265740394592285

Token 278: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 279: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.20161868631839752
    2. '(' → logprob: -1.7016186714172363
    3. '('' → logprob: -9.826619148254395
    4. '(print' → logprob: -9.826619148254395
    5. '("("' → logprob: -10.576619148254395
    6. '()' → logprob: -10.701619148254395
    7. '(`' → logprob: -11.451619148254395
    8. '(answer' → logprob: -11.701619148254395
    9. '(
' → logprob: -12.701619148254395
    10. '((' → logprob: -12.701619148254395

Token 280: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ')
' → logprob: -12.875006675720215
    3. ')`' → logprob: -13.125006675720215
    4. ' )' → logprob: -14.250006675720215
    5. '))' → logprob: -14.625006675720215
    6. '`)' → logprob: -14.750006675720215
    7. '```' → logprob: -16.1250057220459
    8. '#' → logprob: -16.5000057220459
    9. ')#' → logprob: -16.6250057220459
    10. '()' → logprob: -16.8750057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 278
Tokens correctement prédits (1ère position, stricte): 112
Tokens correctement prédits (1ère position, avec adaptation): 119
Tokens correctement prédits (top 10): 215
Précision stricte (1ère position): 40.29%
Précision adaptée (1ère position): 42.81%
Précision (top 10): 77.34%
================================================================================
