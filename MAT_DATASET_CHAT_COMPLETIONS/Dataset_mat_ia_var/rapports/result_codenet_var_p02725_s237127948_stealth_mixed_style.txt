================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:20:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
K,N=[int(x) for x in input().split()]
A=list(map(int,input().split()))
def get_diff(a,n,k):
    res=[]
    for idx in range(n-1):
        res+=[a[idx+1]-a[idx]]
    res.append(a[0]+k-a[-1])
    return res
B=[]
for j in range(N):
    if j!=N-1:
        B.append(A[j+1]-A[j])
B.extend([A[0]+K-A[N-1]]) if B else None
max_diff = 0
for x in range(len(B)):
    if B[x]>max_diff:
        max_diff=B[x]
print(K-max_diff)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'K' (ID: 42)
  → Token d'amorce (pas de prédiction)

Token 1: ',N' (ID: 49539)
  → Token d'amorce (pas de prédiction)

Token 2: '=[' (ID: 13370)
  → Token d'amorce (pas de prédiction)

Token 3: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0016613778425380588
    2. ']int' → logprob: -7.37666130065918
    3. 'map' → logprob: -7.50166130065918
    4. '10' → logprob: -9.12666130065918
    5. '0' → logprob: -9.12666130065918
    6. ']' → logprob: -9.50166130065918
    7. 'list' → logprob: -10.12666130065918
    8. ' int' → logprob: -10.25166130065918
    9. '5' → logprob: -10.75166130065918
    10. '[int' → logprob: -10.75166130065918

Token 4: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.19806058704853058
    2. '(' → logprob: -2.0730605125427246
    3. '(i' → logprob: -2.9480605125427246
    4. '(input' → logprob: -7.448060512542725
    5. ']' → logprob: -7.823060512542725
    6. '(s' → logprob: -8.573060989379883
    7. '(
' → logprob: -9.698060989379883
    8. '()]' → logprob: -9.948060989379883
    9. '(a' → logprob: -10.198060989379883
    10. '(item' → logprob: -10.823060989379883

Token 5: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00823440682142973
    2. 'for' → logprob: -5.13323450088501
    3. '(i' → logprob: -7.13323450088501
    4. '(x' → logprob: -7.25823450088501
    5. ' for' → logprob: -8.008234024047852
    6. ')i' → logprob: -9.383234024047852
    7. 'input' → logprob: -9.508234024047852
    8. '(input' → logprob: -9.633234024047852
    9. 'i' → logprob: -10.258234024047852
    10. ')x' → logprob: -10.758234024047852

Token 6: ' for' (ID: 395)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5714141130447388
    2. '(input' → logprob: -1.1964141130447388
    3. '(i' → logprob: -2.946413993835449
    4. 'for' → logprob: -3.821413993835449
    5. ' input' → logprob: -3.946413993835449
    6. 'i' → logprob: -4.071413993835449
    7. ' for' → logprob: -4.446413993835449
    8. '(x' → logprob: -5.446413993835449
    9. ']' → logprob: -6.821413993835449
    10. '=input' → logprob: -6.946413993835449

Token 7: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.12693671882152557
    2. 'input' → logprob: -2.126936674118042
    3. '=input' → logprob: -12.001936912536621
    4. ' raw' → logprob: -13.876936912536621
    5. ' in' → logprob: -14.376936912536621
    6. '(input' → logprob: -14.751936912536621
    7. 'raw' → logprob: -15.751936912536621
    8. ',input' → logprob: -16.376935958862305
    9. '<|end|>' → logprob: -16.376935958862305
    10. '<input' → logprob: -16.751935958862305

Token 8: ' in' (ID: 306)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4241442084312439
    2. '(input' → logprob: -1.5491442680358887
    3. ' input' → logprob: -2.5491442680358887
    4. ' in' → logprob: -3.5491442680358887
    5. 'in' → logprob: -3.9241442680358887
    6. '=input' → logprob: -5.299144268035889
    7. '<|end|>' → logprob: -7.299144268035889
    8. '(' → logprob: -7.674144268035889
    9. ',input' → logprob: -8.67414379119873
    10. '<input' → logprob: -9.92414379119873

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04858794063329697
    2. ' input' → logprob: -3.0485880374908447
    3. '(input' → logprob: -14.548587799072266
    4. '=input' → logprob: -17.048587799072266
    5. '<input' → logprob: -17.423587799072266
    6. '```' → logprob: -17.548587799072266
    7. ',input' → logprob: -18.048587799072266
    8. '	input' → logprob: -18.173587799072266
    9. ' ' → logprob: -19.423587799072266
    10. '[input' → logprob: -19.423587799072266

Token 10: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.07575200498104095
    2. '().' → logprob: -3.075752019882202
    3. '()' → logprob: -3.700752019882202
    4. '()][' → logprob: -6.700751781463623
    5. '()].' → logprob: -7.200751781463623
    6. '()>' → logprob: -10.700752258300781
    7. '()],' → logprob: -10.700752258300781
    8. '())' → logprob: -11.200752258300781
    9. '()`' → logprob: -12.075752258300781
    10. '(' → logprob: -12.075752258300781

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004473540757317096
    2. 'strip' → logprob: -8.000447273254395
    3. 'rstrip' → logprob: -9.125447273254395
    4. ' split' → logprob: -13.000447273254395
    5. 'spl' → logprob: -14.500447273254395
    6. '(split' → logprob: -15.625447273254395
    7. 'read' → logprob: -16.50044822692871
    8. '```' → logprob: -18.25044822692871
    9. 'replace' → logprob: -18.62544822692871
    10. 's' → logprob: -19.37544822692871

Token 12: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.00324615859426558
    2. '(' → logprob: -5.878246307373047
    3. '()' → logprob: -8.128246307373047
    4. ']' → logprob: -9.503246307373047
    5. '('' → logprob: -10.253246307373047
    6. ']()' → logprob: -11.753246307373047
    7. '())' → logprob: -12.253246307373047
    8. '()],' → logprob: -12.378246307373047
    9. '`]' → logprob: -12.378246307373047
    10. '()][' → logprob: -12.378246307373047

Token 13: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13167184591293335
    2. 'r' → logprob: -3.631671905517578
    3. 'd' → logprob: -3.881671905517578
    4. 's' → logprob: -4.131671905517578
    5. '#' → logprob: -4.381671905517578
    6. 'A' → logprob: -4.756671905517578
    7. 'for' → logprob: -5.256671905517578
    8. 'i' → logprob: -5.381671905517578
    9. ',' → logprob: -5.506671905517578
    10. '
' → logprob: -5.631671905517578

Token 14: '=list' (ID: 93413)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003999326843768358
    2. '.' → logprob: -6.12899923324585
    3. '[A' → logprob: -7.12899923324585
    4. '\[' → logprob: -8.253999710083008
    5. '=' → logprob: -8.378999710083008
    6. '[K' → logprob: -9.003999710083008
    7. '[:]' → logprob: -9.003999710083008
    8. '[]' → logprob: -9.378999710083008
    9. 'A' → logprob: -10.128999710083008
    10. '[i' → logprob: -10.378999710083008

Token 15: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009799322579056025
    2. '(range' → logprob: -7.750979900360107
    3. '(int' → logprob: -8.000980377197266
    4. '([' → logprob: -10.625980377197266
    5. '[int' → logprob: -10.625980377197266
    6. '(input' → logprob: -10.625980377197266
    7. '()' → logprob: -10.625980377197266
    8. '(A' → logprob: -10.750980377197266
    9. '(a' → logprob: -10.875980377197266
    10. '(map' → logprob: -11.125980377197266

Token 16: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.018169725313782692
    2. '(' → logprob: -4.01816987991333
    3. '(lambda' → logprob: -12.143169403076172
    4. '<int' → logprob: -12.518169403076172
    5. '(
' → logprob: -12.768169403076172
    6. 'int' → logprob: -12.893169403076172
    7. '(list' → logprob: -13.518169403076172
    8. '(input' → logprob: -14.018169403076172
    9. '(str' → logprob: -14.268169403076172
    10. '=int' → logprob: -14.268169403076172

Token 17: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0441388376057148
    2. '(' → logprob: -3.2941389083862305
    3. ',input' → logprob: -5.1691389083862305
    4. ',' → logprob: -8.41913890838623
    5. ' (' → logprob: -10.04413890838623
    6. ')' → logprob: -10.16913890838623
    7. 'input' → logprob: -10.91913890838623
    8. '=input' → logprob: -11.54413890838623
    9. '(int' → logprob: -11.79413890838623
    10. ' input' → logprob: -11.91913890838623

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00525854155421257
    2. '()' → logprob: -5.380258560180664
    3. '()))' → logprob: -7.505258560180664
    4. '())' → logprob: -9.880258560180664
    5. '()));' → logprob: -11.505258560180664
    6. '())))' → logprob: -11.630258560180664
    7. '(' → logprob: -12.255258560180664
    8. '()>' → logprob: -13.130258560180664
    9. '())).' → logprob: -13.255258560180664
    10. ' ().' → logprob: -13.505258560180664

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.200166469876422e-06
    2. 'strip' → logprob: -12.375004768371582
    3. ' split' → logprob: -14.250004768371582
    4. 'rstrip' → logprob: -15.375004768371582
    5. 'spl' → logprob: -16.6250057220459
    6. '(split' → logprob: -17.3750057220459
    7. 's' → logprob: -19.1250057220459
    8. '.split' → logprob: -20.0000057220459
    9. '_split' → logprob: -20.1250057220459
    10. 'plit' → logprob: -20.7500057220459

Token 20: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.20911698043346405
    2. '())' → logprob: -1.7091169357299805
    3. '()' → logprob: -5.3341169357299805
    4. '))' → logprob: -6.8341169357299805
    5. '(' → logprob: -6.9591169357299805
    6. ')' → logprob: -7.2091169357299805
    7. '()));' → logprob: -10.83411693572998
    8. '())))' → logprob: -11.20911693572998
    9. '()),' → logprob: -11.70911693572998
    10. ' ())' → logprob: -11.70911693572998

Token 21: 'def' (ID: 1314)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7778961062431335
    2. 'for' → logprob: -1.4028961658477783
    3. 'd' → logprob: -2.2778961658477783
    4. 'c' → logprob: -3.2778961658477783
    5. 's' → logprob: -3.4028961658477783
    6. 'C' → logprob: -3.4028961658477783
    7. 'a' → logprob: -3.9028961658477783
    8. 'dp' → logprob: -4.402895927429199
    9. 'i' → logprob: -4.902895927429199
    10. 'count' → logprob: -4.902895927429199

Token 22: ' get' (ID: 717)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9207307696342468
    2. ' max' → logprob: -1.4207308292388916
    3. ' f' → logprob: -2.6707308292388916
    4. ' solve' → logprob: -2.6707308292388916
    5. ' binary' → logprob: -2.7957308292388916
    6. ' main' → logprob: -3.9207308292388916
    7. ' count' → logprob: -3.9207308292388916
    8. ' a' → logprob: -4.0457305908203125
    9. ' solution' → logprob: -4.6707305908203125
    10. ' ' → logprob: -4.7957305908203125

Token 23: '_diff' (ID: 41047)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.40487149357795715
    2. '_' → logprob: -1.2798714637756348
    3. '_min' → logprob: -3.9048714637756348
    4. '_sum' → logprob: -5.029871463775635
    5. '_div' → logprob: -5.154871463775635
    6. '_k' → logprob: -5.779871463775635
    7. '_m' → logprob: -5.904871463775635
    8. '_factor' → logprob: -6.154871463775635
    9. '_l' → logprob: -6.404871463775635
    10. '_g' → logprob: -6.529871463775635

Token 24: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023636171594262123
    2. '(a' → logprob: -4.648636341094971
    3. '(A' → logprob: -5.648636341094971
    4. '(i' → logprob: -6.023636341094971
    5. '(_' → logprob: -6.273636341094971
    6. 's' → logprob: -6.523636341094971
    7. '_' → logprob: -6.648636341094971
    8. '(x' → logprob: -6.898636341094971
    9. ' (' → logprob: -7.773636341094971
    10. '_(' → logprob: -8.148635864257812

Token 25: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8770949840545654
    2. '):' → logprob: -1.5020949840545654
    3. ')' → logprob: -1.6270949840545654
    4. '[' → logprob: -2.1270949840545654
    5. '[i' → logprob: -4.6270952224731445
    6. '_' → logprob: -5.5020952224731445
    7. 's' → logprob: -5.6270952224731445
    8. '[]):' → logprob: -5.6270952224731445
    9. '[n' → logprob: -5.8770952224731445
    10. ',a' → logprob: -6.2520952224731445

Token 26: ',k' (ID: 35155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7764172554016113
    2. ',' → logprob: -1.0264172554016113
    3. '):' → logprob: -1.7764172554016113
    4. ',u' → logprob: -5.776417255401611
    5. ',a' → logprob: -6.401417255401611
    6. 'u' → logprob: -6.401417255401611
    7. ',n' → logprob: -7.026417255401611
    8. '[' → logprob: -7.276417255401611
    9. ',i' → logprob: -8.026416778564453
    10. ',t' → logprob: -8.026416778564453

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01101327408105135
    2. ')' → logprob: -4.761013507843018
    3. ',' → logprob: -6.136013507843018
    4. ')):' → logprob: -10.13601303100586
    5. ',a' → logprob: -10.38601303100586
    6. ''):' → logprob: -10.76101303100586
    7. '):
' → logprob: -10.88601303100586
    8. '_' → logprob: -11.26101303100586
    9. ' ):' → logprob: -11.38601303100586
    10. ',i' → logprob: -11.38601303100586

Token 28: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3066479563713074
    2. '   ' → logprob: -1.5566480159759521
    3. ' ' → logprob: -3.931648015975952
    4. '(' → logprob: -3.931648015975952
    5. '[' → logprob: -6.056647777557373
    6. ':
' → logprob: -6.431647777557373
    7. ' :' → logprob: -6.431647777557373
    8. '):' → logprob: -6.931647777557373
    9. '():' → logprob: -7.181647777557373
    10. ')' → logprob: -7.431647777557373

Token 29: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3691356182098389
    2. ' max' → logprob: -1.3691356182098389
    3. ' min' → logprob: -2.369135618209839
    4. ' dp' → logprob: -2.369135618209839
    5. ' if' → logprob: -2.869135618209839
    6. 'max' → logprob: -3.244135618209839
    7. ' m' → logprob: -3.869135618209839
    8. 'd' → logprob: -3.994135618209839
    9. ' a' → logprob: -3.994135618209839
    10. '    ' → logprob: -4.119135856628418

Token 30: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4864327013492584
    2. ' =' → logprob: -0.986432671546936
    3. '=[]' → logprob: -4.4864325523376465
    4. '=max' → logprob: -7.4864325523376465
    5. '={}' → logprob: -8.611433029174805
    6. '=[]
' → logprob: -9.611433029174805
    7. '=int' → logprob: -9.986433029174805
    8. '=-' → logprob: -10.736433029174805
    9. '=res' → logprob: -10.861433029174805
    10. '=""' → logprob: -10.986433029174805

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2691795527935028
    2. ' for' → logprob: -1.7691795825958252
    3. 'for' → logprob: -2.894179582595825
    4. ' ' → logprob: -5.144179344177246
    5. ',' → logprob: -7.019179344177246
    6. '  ' → logprob: -7.269179344177246
    7. '[' → logprob: -7.269179344177246
    8. '	for' → logprob: -7.519179344177246
    9. '<|end|>' → logprob: -8.269179344177246
    10. ':' → logprob: -8.769179344177246

Token 32: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3930457830429077
    2. ' for' → logprob: -1.1430457830429077
    3. '   ' → logprob: -5.268045902252197
    4. 'i' → logprob: -7.768045902252197
    5. ' ' → logprob: -8.893045425415039
    6. ' i' → logprob: -9.018045425415039
    7. 'a' → logprob: -9.768045425415039
    8. 'd' → logprob: -9.893045425415039
    9. 'diff' → logprob: -10.518045425415039
    10. '  ' → logprob: -10.768045425415039

Token 33: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.018896888941526413
    2. 'i' → logprob: -4.01889705657959
    3. ' ' → logprob: -7.51889705657959
    4. '_' → logprob: -9.76889705657959
    5. ' _' → logprob: -10.51889705657959
    6. ' j' → logprob: -10.89389705657959
    7. '	i' → logprob: -10.89389705657959
    8. ' range' → logprob: -11.01889705657959
    9. 'range' → logprob: -11.26889705657959
    10. ' a' → logprob: -11.51889705657959

Token 34: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.30671489238739014
    2. 'in' → logprob: -1.4317148923873901
    3. ',' → logprob: -3.8067150115966797
    4. ' ,' → logprob: -6.43171501159668
    5. ',in' → logprob: -7.43171501159668
    6. ' ' → logprob: -8.68171501159668
    7. ',value' → logprob: -8.93171501159668
    8. '	in' → logprob: -9.30671501159668
    9. ',n' → logprob: -9.43171501159668
    10. ',a' → logprob: -10.05671501159668

Token 35: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16088363528251648
    2. ' range' → logprob: -1.9108836650848389
    3. 'a' → logprob: -7.53588342666626
    4. ' a' → logprob: -9.785883903503418
    5. 'A' → logprob: -10.285883903503418
    6. '	range' → logprob: -11.785883903503418
    7. ' ' → logprob: -11.910883903503418
    8. ' A' → logprob: -11.910883903503418
    9. '   ' → logprob: -12.285883903503418
    10. '(range' → logprob: -13.035883903503418

Token 36: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.13828255236148834
    2. '(' → logprob: -2.763282537460327
    3. '(k' → logprob: -3.263282537460327
    4. '(len' → logprob: -3.888282537460327
    5. '(N' → logprob: -5.638282775878906
    6. '(K' → logprob: -5.638282775878906
    7. '(a' → logprob: -9.263282775878906
    8. ' (' → logprob: -10.388282775878906
    9. 'n' → logprob: -10.888282775878906
    10. 'len' → logprob: -11.263282775878906

Token 37: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5729308724403381
    2. '-' → logprob: -0.9479308724403381
    3. '-k' → logprob: -3.3229308128356934
    4. ' -' → logprob: -4.822930812835693
    5. '-K' → logprob: -5.947930812835693
    6. '):
' → logprob: -6.822930812835693
    7. '   ' → logprob: -7.822930812835693
    8. ' ):' → logprob: -9.197931289672852
    9. ')' → logprob: -9.572931289672852
    10. ' ' → logprob: -9.822931289672852

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1451495736837387
    2. 'k' → logprob: -2.0201494693756104
    3. ' k' → logprob: -6.6451497077941895
    4. ' ' → logprob: -6.8951497077941895
    5. 'K' → logprob: -9.270149230957031
    6. '2' → logprob: -10.020149230957031
    7. '(k' → logprob: -11.770149230957031
    8. ' K' → logprob: -12.645149230957031
    9. '   ' → logprob: -13.270149230957031
    10. '(' → logprob: -13.645149230957031

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04301438108086586
    2. ',' → logprob: -3.4180142879486084
    3. '):
' → logprob: -4.7930145263671875
    4. ')' → logprob: -7.5430145263671875
    5. '):
' → logprob: -9.043014526367188
    6. ' ):' → logprob: -9.043014526367188
    7. ':' → logprob: -9.543014526367188
    8. ' ' → logprob: -10.168014526367188
    9. '-' → logprob: -10.168014526367188
    10. '   ' → logprob: -10.293014526367188

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3709818720817566
    2. '    ' → logprob: -2.1209819316864014
    3. ' ' → logprob: -2.3709819316864014
    4. '   ' → logprob: -2.7459819316864014
    5. '+' → logprob: -4.495981693267822
    6. ',' → logprob: -5.870981693267822
    7. '[' → logprob: -5.995981693267822
    8. '1' → logprob: -6.120981693267822
    9. ':' → logprob: -6.370981693267822
    10. '        ' → logprob: -6.495981693267822

Token 41: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.7221310138702393
    2. ' res' → logprob: -0.8471310138702393
    3. '   ' → logprob: -3.4721310138702393
    4. ' for' → logprob: -3.9721310138702393
    5. '       ' → logprob: -4.22213077545166
    6. ' if' → logprob: -4.59713077545166
    7. 'for' → logprob: -5.59713077545166
    8. 'diff' → logprob: -5.84713077545166
    9. 'if' → logprob: -6.22213077545166
    10. ' diff' → logprob: -6.72213077545166

Token 42: '+' (ID: 10)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0012298731599003077
    2. '.' → logprob: -6.751229763031006
    3. '.extend' → logprob: -10.126230239868164
    4. ' .' → logprob: -12.126230239868164
    5. '.ap' → logprob: -12.251230239868164
    6. '].' → logprob: -12.376230239868164
    7. '.app' → logprob: -13.251230239868164
    8. '+.' → logprob: -14.251230239868164
    9. '   ' → logprob: -14.626230239868164
    10. ').' → logprob: -14.751230239868164

Token 43: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0793306827545166
    2. '=[' → logprob: -2.5793306827545166
    3. '=[]' → logprob: -9.204330444335938
    4. '[' → logprob: -9.704330444335938
    5. '=len' → logprob: -9.704330444335938
    6. '.append' → logprob: -9.829330444335938
    7. '=['' → logprob: -10.704330444335938
    8. '=(' → logprob: -10.704330444335938
    9. '=A' → logprob: -10.704330444335938
    10. '=int' → logprob: -10.829330444335938

Token 44: 'a' (ID: 64)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6726018190383911
    2. 'a' → logprob: -0.9226018190383911
    3. 'A' → logprob: -2.7976016998291016
    4. ' abs' → logprob: -4.422601699829102
    5. '(a' → logprob: -5.172601699829102
    6. 'k' → logprob: -5.922601699829102
    7. '(abs' → logprob: -6.172601699829102
    8. ' a' → logprob: -6.547601699829102
    9. '[a' → logprob: -6.547601699829102
    10. ' A' → logprob: -6.672601699829102

Token 45: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00025776340044103563
    2. 'idx' → logprob: -9.00025749206543
    3. '[' → logprob: -10.25025749206543
    4. ']' → logprob: -10.25025749206543
    5. '[i' → logprob: -11.37525749206543
    6. ' idx' → logprob: -12.12525749206543
    7. '   ' → logprob: -12.12525749206543
    8. '][' → logprob: -12.25025749206543
    9. '(idx' → logprob: -12.50025749206543
    10. ' [' → logprob: -12.75025749206543

Token 46: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.177305668592453
    2. ']-' → logprob: -2.0523056983947754
    3. ']' → logprob: -3.5523056983947754
    4. ']+' → logprob: -6.427305698394775
    5. '+k' → logprob: -6.427305698394775
    6. ' +' → logprob: -7.677305698394775
    7. '],' → logprob: -8.052305221557617
    8. ']]' → logprob: -8.052305221557617
    9. '+]' → logprob: -8.427305221557617
    10. ' ]' → logprob: -8.552305221557617

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002058427082374692
    2. ']' → logprob: -6.752058506011963
    3. '-' → logprob: -7.627058506011963
    4. ' ' → logprob: -8.502058029174805
    5. ' -' → logprob: -9.252058029174805
    6. ']-' → logprob: -9.627058029174805
    7. '   ' → logprob: -11.752058029174805
    8. '  ' → logprob: -12.877058029174805
    9. '0' → logprob: -12.877058029174805
    10. '`' → logprob: -13.127058029174805

Token 48: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16302092373371124
    2. ' -' → logprob: -2.0380208492279053
    3. ']-' → logprob: -4.038021087646484
    4. ']' → logprob: -6.288021087646484
    5. '-a' → logprob: -8.413021087646484
    6. ' ' → logprob: -8.913021087646484
    7. ' ]' → logprob: -9.288021087646484
    8. '   ' → logprob: -9.413021087646484
    9. ')-' → logprob: -10.663021087646484
    10. '	' → logprob: -10.788021087646484

Token 49: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0002036595979006961
    2. ' a' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.87520408630371
    4. ' ' → logprob: -16.87520408630371
    5. '	a' → logprob: -17.12520408630371
    6. '<|end|>' → logprob: -17.75020408630371
    7. 'A' → logprob: -18.25020408630371
    8. ')a' → logprob: -18.75020408630371
    9. 'а' → logprob: -18.75020408630371
    10. '  ' → logprob: -18.87520408630371

Token 50: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -8.65707261255011e-06
    2. '[' → logprob: -12.250008583068848
    3. 's' → logprob: -13.250008583068848
    4. 'idx' → logprob: -13.375008583068848
    5. ']' → logprob: -16.000009536743164
    6. 'x' → logprob: -16.375009536743164
    7. '[s' → logprob: -16.625009536743164
    8. '[x' → logprob: -16.875009536743164
    9. '```' → logprob: -17.125009536743164
    10. '	idx' → logprob: -17.250009536743164

Token 51: ']]
' (ID: 29446)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.2021493911743164
    2. ']' → logprob: -1.7021493911743164
    3. ')' → logprob: -8.452149391174316
    4. ' ]' → logprob: -9.077149391174316
    5. '+' → logprob: -9.452149391174316
    6. ']]' → logprob: -9.577149391174316
    7. '])]' → logprob: -9.702149391174316
    8. '   ' → logprob: -10.202149391174316
    9. ']+' → logprob: -10.202149391174316
    10. '}]' → logprob: -10.327149391174316

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027595888823270798
    2. '    
' → logprob: -4.5275959968566895
    3. '
' → logprob: -5.0275959968566895
    4. '\n' → logprob: -5.7775959968566895
    5. ' 
' → logprob: -6.9025959968566895
    6. ' ' → logprob: -7.1525959968566895
    7. '<|end|>' → logprob: -7.2775959968566895
    8. '[' → logprob: -7.5275959968566895
    9. 'return' → logprob: -7.6525959968566895
    10. '    ' → logprob: -7.7775959968566895

Token 53: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08416924625635147
    2. ' ' → logprob: -3.5841691493988037
    3. 'return' → logprob: -4.084169387817383
    4. ' return' → logprob: -4.334169387817383
    5. ' 
' → logprob: -5.084169387817383
    6. '    
' → logprob: -5.834169387817383
    7. '\n' → logprob: -5.959169387817383
    8. '<|end|>' → logprob: -6.209169387817383
    9. '[' → logprob: -6.334169387817383
    10. '  ' → logprob: -6.959169387817383

Token 54: '.append' (ID: 3709)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5617631673812866
    2. '(a' → logprob: -0.9367631673812866
    3. '(abs' → logprob: -4.311763286590576
    4. '(res' → logprob: -4.436763286590576
    5. '(max' → logprob: -5.311763286590576
    6. '((' → logprob: -6.061763286590576
    7. '(A' → logprob: -6.561763286590576
    8. '(k' → logprob: -6.686763286590576
    9. '(K' → logprob: -6.936763286590576
    10. '(sum' → logprob: -7.061763286590576

Token 56: '[' (ID: 58)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.007322404999285936
    2. '[n' → logprob: -5.132322311401367
    3. '[' → logprob: -6.632322311401367
    4. '[N' → logprob: -10.007322311401367
    5. '[len' → logprob: -10.507322311401367
    6. '[idx' → logprob: -13.632322311401367
    7. '[
' → logprob: -15.007322311401367
    8. 'n' → logprob: -15.257322311401367
    9. '[end' → logprob: -15.507322311401367
    10. '[k' → logprob: -15.757322311401367

Token 57: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4384690523147583
    2. 'n' → logprob: -2.0634689331054688
    3. '0' → logprob: -2.1884689331054688
    4. '-n' → logprob: -2.1884689331054688
    5. '-N' → logprob: -6.313468933105469
    6. 'N' → logprob: -6.938468933105469
    7. 'len' → logprob: -7.938468933105469
    8. '-K' → logprob: -8.563468933105469
    9. ' -' → logprob: -9.063468933105469
    10. '-k' → logprob: -9.188468933105469

Token 58: ']+' (ID: 15344)
  Prédit: ')-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.2589419484138489
    2. ')' → logprob: -1.758941888809204
    3. ')+' → logprob: -3.133941888809204
    4. '+' → logprob: -5.008942127227783
    5. '-' → logprob: -5.633942127227783
    6. ']-' → logprob: -7.508942127227783
    7. '))' → logprob: -7.883942127227783
    8. ' )' → logprob: -7.883942127227783
    9. ')-(' → logprob: -8.383941650390625
    10. '-)' → logprob: -9.008941650390625

Token 59: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3735247552394867
    2. 'K' → logprob: -1.748524785041809
    3. '100' → logprob: -3.2485246658325195
    4. 'a' → logprob: -3.4985246658325195
    5. '(k' → logprob: -3.7485246658325195
    6. '(' → logprob: -4.1235246658325195
    7. '360' → logprob: -4.7485246658325195
    8. 'max' → logprob: -4.7485246658325195
    9. '10' → logprob: -5.7485246658325195
    10. '(a' → logprob: -5.9985246658325195

Token 60: '-a' (ID: 8575)
  Prédit: '-a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-a' → logprob: -0.5059759020805359
    2. '-' → logprob: -1.0059759616851807
    3. ' -' → logprob: -3.6309759616851807
    4. ')' → logprob: -6.005975723266602
    5. '-)' → logprob: -6.380975723266602
    6. '-A' → logprob: -7.380975723266602
    7. '-n' → logprob: -10.005975723266602
    8. ')-' → logprob: -10.630975723266602
    9. '-ai' → logprob: -11.005975723266602
    10. ' )' → logprob: -11.255975723266602

Token 61: '[-' (ID: 17503)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.015177739784121513
    2. '[a' → logprob: -4.8901777267456055
    3. '[-' → logprob: -5.1401777267456055
    4. ' a' → logprob: -6.5151777267456055
    5. '[' → logprob: -8.640177726745605
    6. '	a' → logprob: -11.265177726745605
    7. '[n' → logprob: -12.765177726745605
    8. '   ' → logprob: -12.890177726745605
    9. '1' → logprob: -13.390177726745605
    10. '_a' → logprob: -14.015177726745605

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.750001907348633
    3. ']' → logprob: -15.750001907348633
    4. '۱' → logprob: -16.625001907348633
    5. '１' → logprob: -16.750001907348633
    6. '])' → logprob: -16.875001907348633
    7. '```' → logprob: -17.312501907348633
    8. '১' → logprob: -17.312501907348633
    9. '१' → logprob: -17.937501907348633
    10. ']]' → logprob: -18.062501907348633

Token 63: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010700009443098679
    2. ')
' → logprob: -10.375106811523438
    3. '])' → logprob: -10.500106811523438
    4. '))' → logprob: -10.625106811523438
    5. ' )' → logprob: -11.375106811523438
    6. ')]' → logprob: -13.250106811523438
    7. ')return' → logprob: -13.250106811523438
    8. ')])' → logprob: -13.250106811523438
    9. ')`' → logprob: -13.625106811523438
    10. 'def' → logprob: -14.250106811523438

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01629018969833851
    2. ' return' → logprob: -5.141290187835693
    3. 'return' → logprob: -5.391290187835693
    4. '	return' → logprob: -5.641290187835693
    5. '<|end|>' → logprob: -6.391290187835693
    6. '    
' → logprob: -8.516290664672852
    7. ':return' → logprob: -9.516290664672852
    8. '```' → logprob: -9.641290664672852
    9. '
' → logprob: -9.641290664672852
    10. ' ' → logprob: -10.266290664672852

Token 65: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2185506671667099
    2. '   ' → logprob: -1.718550682067871
    3. ' return' → logprob: -4.093550682067871
    4. '	return' → logprob: -8.968550682067871
    5. '```' → logprob: -9.343550682067871
    6. ' ' → logprob: -10.093550682067871
    7. '<|end|>' → logprob: -10.593550682067871
    8. 'res' → logprob: -11.343550682067871
    9. 'def' → logprob: -11.843550682067871
    10. ':return' → logprob: -13.093550682067871

Token 66: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0018040573922917247
    2. ' res' → logprob: -6.376803874969482
    3. 'sum' → logprob: -9.75180435180664
    4. 'max' → logprob: -10.25180435180664
    5. 'min' → logprob: -12.62680435180664
    6. '(res' → logprob: -13.12680435180664
    7. '[' → logprob: -13.87680435180664
    8. 'tuple' → logprob: -14.50180435180664
    9. 'sorted' → logprob: -14.75180435180664
    10. 'list' → logprob: -15.00180435180664

Token 67: '
' (ID: 198)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.4582825899124146
    2. 'print' → logprob: -1.8332825899124146
    3. 'def' → logprob: -2.083282470703125
    4. 'd' → logprob: -2.208282470703125
    5. 'max' → logprob: -2.458282470703125
    6. 'for' → logprob: -2.708282470703125
    7. 'sum' → logprob: -3.583282470703125
    8. 's' → logprob: -3.958282470703125
    9. 'D' → logprob: -4.083282470703125
    10. 'dif' → logprob: -4.333282470703125

Token 68: 'B' (ID: 33)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.3447452783584595
    2. 'def' → logprob: -1.7197452783584595
    3. 'd' → logprob: -1.8447452783584595
    4. 'print' → logprob: -2.59474515914917
    5. 'for' → logprob: -2.71974515914917
    6. 's' → logprob: -3.34474515914917
    7. 'p' → logprob: -3.84474515914917
    8. 'a' → logprob: -3.96974515914917
    9. 'dif' → logprob: -3.96974515914917
    10. 'b' → logprob: -3.96974515914917

Token 69: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22933714091777802
    2. ' =' → logprob: -1.6043370962142944
    3. '=get' → logprob: -6.229337215423584
    4. '=[]' → logprob: -6.854337215423584
    5. '=[' → logprob: -8.479336738586426
    6. '.' → logprob: -8.979336738586426
    7. '[' → logprob: -9.104336738586426
    8. '=A' → logprob: -10.104336738586426
    9. '.append' → logprob: -10.229336738586426
    10. '=find' → logprob: -10.229336738586426

Token 70: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012980565428733826
    2. 'diff' → logprob: -5.5129804611206055
    3. 'prev' → logprob: -6.6379804611206055
    4. ' for' → logprob: -6.7629804611206055
    5. 'C' → logprob: -7.3879804611206055
    6. 'A' → logprob: -7.5129804611206055
    7. '=' → logprob: -7.6379804611206055
    8. 'current' → logprob: -7.6379804611206055
    9. 'curr' → logprob: -7.7629804611206055
    10. 'd' → logprob: -8.012980461120605

Token 71: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.015207558870315552
    2. ' idx' → logprob: -4.640207767486572
    3. 'i' → logprob: -6.015207767486572
    4. ' _' → logprob: -6.515207767486572
    5. ' x' → logprob: -7.015207767486572
    6. '_' → logprob: -8.140207290649414
    7. 'idx' → logprob: -9.015207290649414
    8. 'x' → logprob: -10.265207290649414
    9. '_i' → logprob: -10.515207290649414
    10. ' k' → logprob: -10.640207290649414

Token 72: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.429162859916687
    2. 'in' → logprob: -1.054162859916687
    3. ' ' → logprob: -7.804162979125977
    4. 'n' → logprob: -10.804162979125977
    5. 'range' → logprob: -11.554162979125977
    6. '	in' → logprob: -11.554162979125977
    7. '```' → logprob: -13.054162979125977
    8. '  ' → logprob: -13.429162979125977
    9. '   ' → logprob: -13.554162979125977
    10. ',' → logprob: -14.054162979125977

Token 73: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033760786755010486
    2. ' range' → logprob: -8.000337600708008
    3. 'A' → logprob: -13.750337600708008
    4. 'B' → logprob: -14.000337600708008
    5. '(range' → logprob: -16.375337600708008
    6. 'r' → logprob: -17.500337600708008
    7. 'ran' → logprob: -17.625337600708008
    8. 'rang' → logprob: -17.750337600708008
    9. 'in' → logprob: -18.250337600708008
    10. '	range' → logprob: -18.375337600708008

Token 74: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.9790279269218445
    2. '(' → logprob: -1.1040279865264893
    3. '(K' → logprob: -1.2290279865264893
    4. '(n' → logprob: -9.47902774810791
    5. '(k' → logprob: -9.85402774810791
    6. '(len' → logprob: -10.22902774810791
    7. ' (' → logprob: -11.10402774810791
    8. '(M' → logprob: -12.22902774810791
    9. '((' → logprob: -12.47902774810791
    10. ' ' → logprob: -12.72902774810791

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07299653440713882
    2. '-' → logprob: -2.6979966163635254
    3. '):
' → logprob: -5.947996616363525
    4. '+' → logprob: -8.447996139526367
    5. ')' → logprob: -9.572996139526367
    6. ' -' → logprob: -9.822996139526367
    7. '-K' → logprob: -10.447996139526367
    8. ' ):' → logprob: -10.697996139526367
    9. '):
' → logprob: -11.447996139526367
    10. '//' → logprob: -11.572996139526367

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31373879313468933
    2. ' B' → logprob: -1.9387388229370117
    3. 'B' → logprob: -3.0637388229370117
    4. ' if' → logprob: -3.4387388229370117
    5. ' for' → logprob: -3.6887388229370117
    6. ':' → logprob: -5.438738822937012
    7. ' ' → logprob: -5.563738822937012
    8. '+' → logprob: -6.313738822937012
    9. 'for' → logprob: -6.313738822937012
    10. 'if' → logprob: -6.438738822937012

Token 77: ' if' (ID: 538)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.33438006043434143
    2. 'for' → logprob: -1.959380030632019
    3. 'if' (adapté à ' if') → logprob: -2.4593801498413086
    4. ' for' → logprob: -4.334380149841309
    5. ' if' → logprob: -4.459380149841309
    6. ' B' → logprob: -4.834380149841309
    7. 'A' → logprob: -5.209380149841309
    8. 'i' → logprob: -5.709380149841309
    9. 'diff' → logprob: -5.834380149841309
    10. '   ' → logprob: -5.959380149841309

Token 78: ' j' (ID: 441)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.25455713272094727
    2. 'A' → logprob: -1.7545571327209473
    3. ' B' → logprob: -4.504557132720947
    4. ' j' → logprob: -4.504557132720947
    5. ' K' → logprob: -4.629557132720947
    6. 'j' → logprob: -4.879557132720947
    7. 'K' → logprob: -5.754557132720947
    8. ' get' → logprob: -5.754557132720947
    9. 'B' → logprob: -5.879557132720947
    10. 'get' → logprob: -7.129557132720947

Token 79: '!=' (ID: 11408)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0655081272125244
    2. '==' → logprob: -1.8155081272125244
    3. '<=' → logprob: -2.4405081272125244
    4. ' ==' → logprob: -2.8155081272125244
    5. '>=' → logprob: -3.0655081272125244
    6. ' <=' → logprob: -3.1905081272125244
    7. '!=' → logprob: -3.1905081272125244
    8. ' <' → logprob: -3.1905081272125244
    9. '>' → logprob: -3.3155081272125244
    10. '<' → logprob: -3.4405081272125244

Token 80: 'N' (ID: 45)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.06164516508579254
    2. '0' → logprob: -3.061645269393921
    3. ' K' → logprob: -4.561645030975342
    4. ' ' → logprob: -6.936645030975342
    5. 'N' → logprob: -7.061645030975342
    6. 'i' → logprob: -7.561645030975342
    7. '1' → logprob: -9.9366455078125
    8. 'j' → logprob: -10.6866455078125
    9. 'B' → logprob: -11.4366455078125
    10. 'A' → logprob: -11.4366455078125

Token 81: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0003987336531281471
    2. ' -' → logprob: -8.125398635864258
    3. '1' → logprob: -9.250398635864258
    4. ' ' → logprob: -13.000398635864258
    5. '   ' → logprob: -13.000398635864258
    6. '```' → logprob: -14.625398635864258
    7. '()-' → logprob: -15.062898635864258
    8. ''-' → logprob: -15.250398635864258
    9. '-
' → logprob: -15.500398635864258
    10. '−' → logprob: -16.000398635864258

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.160971628967673e-05
    2. ' ' → logprob: -9.875082015991211
    3. 'K' → logprob: -11.250082015991211
    4. '2' → logprob: -11.250082015991211
    5. '-' → logprob: -14.437582015991211
    6. '   ' → logprob: -14.500082015991211
    7. '```' → logprob: -14.812582015991211
    8. 'j' → logprob: -14.875082015991211
    9. ' K' → logprob: -14.937582015991211
    10. 'B' → logprob: -15.312582015991211

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15733171999454498
    2. ' and' → logprob: -2.157331705093384
    3. ':
' → logprob: -3.782331705093384
    4. 'and' → logprob: -5.032331943511963
    5. '   ' → logprob: -7.907331943511963
    6. ' :' → logprob: -8.657331466674805
    7. ' ' → logprob: -10.657331466674805
    8. ' :
' → logprob: -10.657331466674805
    9. '):' → logprob: -12.032331466674805
    10. ':

' → logprob: -12.157331466674805

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4334717392921448
    2. ' and' → logprob: -1.1834716796875
    3. ':' → logprob: -3.4334716796875
    4. '   ' → logprob: -4.9334716796875
    5. 'and' → logprob: -6.5584716796875
    6. '	' → logprob: -7.1834716796875
    7. ':
' → logprob: -7.6834716796875
    8. '<|end|>' → logprob: -7.6834716796875
    9. '	   ' → logprob: -8.1834716796875
    10. ' ' → logprob: -8.1834716796875

Token 85: ' B' (ID: 418)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8606998324394226
    2. ' B' → logprob: -0.9856998324394226
    3. 'B' (adapté à ' B') → logprob: -2.2356998920440674
    4. '       ' → logprob: -2.4856998920440674
    5. '    ' → logprob: -5.860699653625488
    6. ' if' → logprob: -6.110699653625488
    7. ' print' → logprob: -6.610699653625488
    8. '           ' → logprob: -6.985699653625488
    9. ' and' → logprob: -7.235699653625488
    10. '```' → logprob: -7.235699653625488

Token 86: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.045934177935123444
    2. '.' → logprob: -3.6709342002868652
    3. '+.' → logprob: -4.920934200286865
    4. '.extend' → logprob: -5.295934200286865
    5. '+' → logprob: -5.545934200286865
    6. '+=' → logprob: -5.920934200286865
    7. ' .' → logprob: -8.545933723449707
    8. 'append' → logprob: -9.295933723449707
    9. ' +=' → logprob: -9.420933723449707
    10. '.ap' → logprob: -9.920933723449707

Token 87: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.045769669115543365
    2. '(get' → logprob: -3.295769691467285
    3. 'A' → logprob: -5.795769691467285
    4. '(K' → logprob: -6.295769691467285
    5. 'get' → logprob: -6.670769691467285
    6. '(' → logprob: -7.670769691467285
    7. '(B' → logprob: -8.045769691467285
    8. '((' → logprob: -8.170769691467285
    9. '(abs' → logprob: -8.670769691467285
    10. 'K' → logprob: -8.920769691467285

Token 88: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.898723561083898e-05
    2. '[' → logprob: -9.625079154968262
    3. ')' → logprob: -12.875079154968262
    4. ')[' → logprob: -12.875079154968262
    5. ' [' → logprob: -13.375079154968262
    6. '[
' → logprob: -13.625079154968262
    7. '[i' → logprob: -14.000079154968262
    8. '[++' → logprob: -14.875079154968262
    9. '   ' → logprob: -15.125079154968262
    10. '[(' → logprob: -15.375079154968262

Token 89: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.058789025992155075
    2. ']+' → logprob: -3.058789014816284
    3. ']' → logprob: -5.183789253234863
    4. '])' → logprob: -6.058789253234863
    5. ' +' → logprob: -6.808789253234863
    6. ']-' → logprob: -7.183789253234863
    7. '+]' → logprob: -9.308789253234863
    8. ' ]' → logprob: -9.808789253234863
    9. '])-' → logprob: -10.058789253234863
    10. '+j' → logprob: -10.433789253234863

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07122236490249634
    2. ']' → logprob: -2.6962223052978516
    3. ']-' → logprob: -6.946222305297852
    4. '])' → logprob: -9.196222305297852
    5. '-' → logprob: -10.071222305297852
    6. '`]' → logprob: -10.071222305297852
    7. '']' → logprob: -10.321222305297852
    8. '0' → logprob: -10.946222305297852
    9. ' ' → logprob: -11.196222305297852
    10. ' ]' → logprob: -11.321222305297852

Token 91: ']-' (ID: 27107)
  Prédit: ']-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']-' → logprob: -0.5975214242935181
    2. ']' → logprob: -1.347521424293518
    3. '-' → logprob: -2.5975213050842285
    4. ' -' → logprob: -2.8475213050842285
    5. ' ]' → logprob: -3.2225213050842285
    6. ')' → logprob: -5.0975213050842285
    7. ')-' → logprob: -5.3475213050842285
    8. '-A' → logprob: -6.0975213050842285
    9. ' )' → logprob: -6.2225213050842285
    10. '])' → logprob: -6.7225213050842285

Token 92: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -3.4121114822482923e-06
    2. ' A' → logprob: -12.625003814697266
    3. '>A' → logprob: -18.125003814697266
    4. '	A' → logprob: -19.750003814697266
    5. '<|end|>' → logprob: -20.750003814697266
    6. '_A' → logprob: -20.875003814697266
    7. 'Ａ' → logprob: -21.250003814697266
    8. '```' → logprob: -21.500003814697266
    9. 'a' → logprob: -21.750003814697266
    10. '   ' → logprob: -22.000003814697266

Token 93: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0022314980160444975
    2. '[' → logprob: -6.377231597900391
    3. '[A' → logprob: -7.877231597900391
    4. 'A' → logprob: -9.37723159790039
    5. ']' → logprob: -10.37723159790039
    6. '][' → logprob: -11.50223159790039
    7. '[
' → logprob: -12.12723159790039
    8. '])' → logprob: -12.25223159790039
    9. 'j' → logprob: -13.25223159790039
    10. '```' → logprob: -13.25223159790039

Token 94: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05724884197115898
    2. '))' → logprob: -3.557248830795288
    3. ')
' → logprob: -3.682248830795288
    4. '))
' → logprob: -6.432249069213867
    5. '])' → logprob: -9.057249069213867
    6. 'else' → logprob: -9.557249069213867
    7. '   ' → logprob: -10.182249069213867
    8. ' )' → logprob: -10.557249069213867
    9. ')
' → logprob: -10.807249069213867
    10. ')

' → logprob: -11.432249069213867

Token 95: 'B' (ID: 33)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5514366030693054
    2. ' else' → logprob: -1.3014366626739502
    3. '   ' → logprob: -1.9264366626739502
    4. ')' → logprob: -5.801436424255371
    5. '
' → logprob: -6.551436424255371
    6. '<|end|>' → logprob: -7.176436424255371
    7. ')
' → logprob: -8.426436424255371
    8. '```' → logprob: -9.051436424255371
    9. 'B' → logprob: -9.551436424255371
    10. 's' → logprob: -9.676436424255371

Token 96: '.extend' (ID: 34151)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3197348117828369
    2. '<|end|>' → logprob: -1.319734811782837
    3. '[]' → logprob: -5.444734573364258
    4. '<|end|>' → logprob: -7.069734573364258
    5. '[-' → logprob: -8.319734573364258
    6. '#' → logprob: -8.944734573364258
    7. '[Index' → logprob: -9.319734573364258
    8. '[index' → logprob: -9.319734573364258
    9. '.' → logprob: -9.319734573364258
    10. '+' → logprob: -9.694734573364258

Token 97: '([' (ID: 5194)
  Prédit: '(get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.5776000022888184
    2. '([' → logprob: -1.0776000022888184
    3. '(A' → logprob: -2.3276000022888184
    4. '([(' → logprob: -8.452600479125977
    5. '(' → logprob: -8.577600479125977
    6. '(B' → logprob: -8.702600479125977
    7. '((' → logprob: -9.077600479125977
    8. 'get' → logprob: -10.077600479125977
    9. '(a' → logprob: -10.952600479125977
    10. '(C' → logprob: -11.202600479125977

Token 98: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.035820122808218
    2. 'K' → logprob: -3.5358200073242188
    3. ' A' → logprob: -5.535820007324219
    4. '(A' → logprob: -6.410820007324219
    5. '(' → logprob: -8.535820007324219
    6. ' K' → logprob: -8.910820007324219
    7. '(K' → logprob: -10.410820007324219
    8. ' (' → logprob: -10.660820007324219
    9. '0' → logprob: -10.660820007324219
    10. 'k' → logprob: -11.285820007324219

Token 99: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '0' → logprob: -14.500000953674316
    3. '[
' → logprob: -14.625000953674316
    4. '
' → logprob: -16.375001907348633
    5. ' [' → logprob: -16.625001907348633
    6. '(' → logprob: -17.125001907348633
    7. '   ' → logprob: -17.875001907348633
    8. '][' → logprob: -18.125001907348633
    9. '```' → logprob: -18.125001907348633
    10. ']' → logprob: -18.125001907348633

Token 100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.1557283111615106e-05
    2. '[' → logprob: -10.375041961669922
    3. ' ' → logprob: -11.750041961669922
    4. '   ' → logprob: -14.875041961669922
    5. '-' → logprob: -14.937541961669922
    6. '1' → logprob: -15.000041961669922
    7. '
' → logprob: -15.250041961669922
    8. 'N' → logprob: -15.437541961669922
    9. '(' → logprob: -15.625041961669922
    10. '

' → logprob: -15.875041961669922

Token 101: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.05953070893883705
    2. '+' → logprob: -3.059530735015869
    3. ']' → logprob: -4.559530735015869
    4. ' +' → logprob: -8.434530258178711
    5. '}+' → logprob: -9.809530258178711
    6. '+]' → logprob: -9.934530258178711
    7. ')+' → logprob: -10.809530258178711
    8. ' ]' → logprob: -10.809530258178711
    9. ']+=' → logprob: -11.059530258178711
    10. '[' → logprob: -11.559530258178711

Token 102: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00017994173686020076
    2. ' K' → logprob: -8.6251802444458
    3. ' ' → logprob: -16.125179290771484
    4. 'N' → logprob: -16.625179290771484
    5. '>K' → logprob: -16.750179290771484
    6. 'k' → logprob: -16.875179290771484
    7. '(K' → logprob: -17.000179290771484
    8. '	K' → logprob: -17.125179290771484
    9. ',K' → logprob: -17.375179290771484
    10. '   ' → logprob: -17.625179290771484

Token 103: '-A' (ID: 9406)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.788533627986908
    2. '-A' → logprob: -0.788533627986908
    3. '-' → logprob: -2.4135336875915527
    4. '-K' → logprob: -6.538533687591553
    5. '-N' → logprob: -10.788533210754395
    6. '-B' → logprob: -12.413533210754395
    7. ' ' → logprob: -12.538533210754395
    8. '-I' → logprob: -14.038533210754395
    9. '-А' → logprob: -14.288533210754395
    10. '-E' → logprob: -14.663533210754395

Token 104: '[N' (ID: 49776)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -8.780830830801278e-05
    2. '[N' → logprob: -9.50008773803711
    3. '[' → logprob: -12.00008773803711
    4. '-' → logprob: -12.62508773803711
    5. '[
' → logprob: -14.37508773803711
    6. '[L' → logprob: -14.62508773803711
    7. 'nd' → logprob: -14.75008773803711
    8. 'L' → logprob: -15.37508773803711
    9. 'N' → logprob: -15.37508773803711
    10. 'user' → logprob: -15.50008773803711

Token 105: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00026264708139933646
    2. '1' → logprob: -8.500262260437012
    3. ' -' → logprob: -9.750262260437012
    4. ']-' → logprob: -15.250262260437012
    5. '−' → logprob: -15.750262260437012
    6. '[-' → logprob: -15.750262260437012
    7. '[' → logprob: -16.125263214111328
    8. '   ' → logprob: -17.750263214111328
    9. ' ' → logprob: -17.750263214111328
    10. '()-' → logprob: -17.750263214111328

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.500011444091797
    3. '   ' → logprob: -14.250011444091797
    4. '-' → logprob: -15.500011444091797
    5. '[' → logprob: -16.312511444091797
    6. '```' → logprob: -16.437511444091797
    7. '  ' → logprob: -16.500011444091797
    8. ']' → logprob: -16.500011444091797
    9. '2' → logprob: -17.000011444091797
    10. '])' → logprob: -17.687511444091797

Token 107: ']])' (ID: 64959)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.04190373048186302
    2. ')])' → logprob: -3.5419037342071533
    3. ']])' → logprob: -4.541903495788574
    4. ']' → logprob: -7.416903495788574
    5. ')' → logprob: -7.541903495788574
    6. '])
' → logprob: -8.666903495788574
    7. '])]' → logprob: -10.041903495788574
    8. ']])
' → logprob: -10.916903495788574
    9. ']))' → logprob: -11.041903495788574
    10. ')])
' → logprob: -11.666903495788574

Token 108: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: ' B' (ID: 418)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.5275558829307556
    2. 'N' → logprob: -1.0275559425354004
    3. ' K' → logprob: -4.1525559425354
    4. ' len' → logprob: -4.6525559425354
    5. 'K' → logprob: -5.1525559425354
    6. ' not' → logprob: -5.4025559425354
    7. ' j' → logprob: -5.4025559425354
    8. 'len' → logprob: -5.6525559425354
    9. 'j' → logprob: -6.2775559425354
    10. ' B' → logprob: -6.7775559425354

Token 110: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.47777727246284485
    2. ' else' → logprob: -1.4777772426605225
    3. '==' → logprob: -1.9777772426605225
    4. '!=' → logprob: -5.352777481079102
    5. ' ==' → logprob: -6.102777481079102
    6. 'len' → logprob: -6.727777481079102
    7. '.' → logprob: -7.102777481079102
    8. 'not' → logprob: -7.227777481079102
    9. '<|end|>' → logprob: -7.352777481079102
    10. 'is' → logprob: -7.977777481079102

Token 111: ' None' (ID: 4662)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.024674272164702415
    2. ' B' → logprob: -3.7746741771698
    3. '[]' → logprob: -7.399674415588379
    4. 'None' → logprob: -7.399674415588379
    5. '[' → logprob: -9.149674415588379
    6. ' None' → logprob: -10.774674415588379
    7. ' []' → logprob: -11.149674415588379
    8. 'True' → logprob: -11.399674415588379
    9. '...' → logprob: -11.524674415588379
    10. ' [' → logprob: -11.524674415588379

Token 112: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: 'max' (ID: 3228)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5884893536567688
    2. 'max' → logprob: -1.213489294052124
    3. 'C' → logprob: -2.338489294052124
    4. '<|end|>' → logprob: -4.213489532470703
    5. 'for' → logprob: -4.588489532470703
    6. 'if' → logprob: -5.713489532470703
    7. '#' → logprob: -5.713489532470703
    8. 'sum' → logprob: -5.838489532470703
    9. 'D' → logprob: -5.963489532470703
    10. 'B' → logprob: -6.338489532470703

Token 114: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.3842790722846985
    2. '_val' → logprob: -1.7592790126800537
    3. '_gap' → logprob: -2.3842790126800537
    4. '_B' → logprob: -3.3842790126800537
    5. '_len' → logprob: -4.759279251098633
    6. '_' → logprob: -5.009279251098633
    7. '_value' → logprob: -6.634279251098633
    8. '_b' → logprob: -6.634279251098633
    9. 'B' → logprob: -6.759279251098633
    10. '_sum' → logprob: -8.384279251098633

Token 115: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08411270380020142
    2. ' =' → logprob: -2.8341126441955566
    3. '=max' → logprob: -3.8341126441955566
    4. '_=' → logprob: -9.334113121032715
    5. '=_' → logprob: -9.334113121032715
    6. '=len' → logprob: -10.584113121032715
    7. '=int' → logprob: -11.084113121032715
    8. '=B' → logprob: -11.209113121032715
    9. '=index' → logprob: -11.334113121032715
    10. '_' → logprob: -11.334113121032715

Token 116: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.014165511354804039
    2. ' max' → logprob: -4.26416540145874
    3. '0' → logprob: -13.264165878295898
    4. '(max' → logprob: -15.389165878295898
    5. 'min' → logprob: -17.3891658782959
    6. '	max' → logprob: -18.0141658782959
    7. '   ' → logprob: -18.0141658782959
    8. ' ' → logprob: -18.0141658782959
    9. '=max' → logprob: -18.2641658782959
    10. 'float' → logprob: -18.3891658782959

Token 117: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -5.085517113911919e-05
    2. ' max' → logprob: -10.00005054473877
    3. '0' → logprob: -12.37505054473877
    4. '(max' → logprob: -14.00005054473877
    5. 'min' → logprob: -16.750051498413086
    6. 'sum' → logprob: -16.875051498413086
    7. 'float' → logprob: -17.000051498413086
    8. 'get' → logprob: -17.625051498413086
    9. 'K' → logprob: -17.750051498413086
    10. '-max' → logprob: -17.875051498413086

Token 118: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10467927902936935
    2. '
' → logprob: -2.6046793460845947
    3. ' for' → logprob: -4.229679107666016
    4. 'max' → logprob: -5.229679107666016
    5. '<|end|>' → logprob: -5.229679107666016
    6. 'current' → logprob: -10.229679107666016
    7. 'prev' → logprob: -10.729679107666016
    8. ' 
' → logprob: -10.979679107666016
    9. 'i' → logprob: -11.229679107666016
    10. ' max' → logprob: -11.354679107666016

Token 119: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007948591373860836
    2. 'max' → logprob: -5.007948398590088
    3. ' for' → logprob: -7.507948398590088
    4. '
' → logprob: -8.757948875427246
    5. 'current' → logprob: -8.882948875427246
    6. 'idx' → logprob: -9.382948875427246
    7. 'min' → logprob: -9.507948875427246
    8. 'prev' → logprob: -9.632948875427246
    9. 'i' → logprob: -9.757948875427246
    10. 'start' → logprob: -10.007948875427246

Token 120: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7491149306297302
    2. ' d' → logprob: -1.999114990234375
    3. ' diff' → logprob: -1.999114990234375
    4. 'i' → logprob: -2.374114990234375
    5. 'diff' → logprob: -2.499114990234375
    6. 'd' → logprob: -2.624114990234375
    7. ' val' → logprob: -5.499114990234375
    8. ' x' → logprob: -6.374114990234375
    9. 'x' → logprob: -6.999114990234375
    10. 'val' → logprob: -7.624114990234375

Token 121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02060530334711075
    2. 'in' → logprob: -3.8956053256988525
    3. ' ' → logprob: -10.145605087280273
    4. '_in' → logprob: -12.020605087280273
    5. 'diff' → logprob: -12.270605087280273
    6. '	in' → logprob: -13.145605087280273
    7. 'In' → logprob: -13.270605087280273
    8. ',' → logprob: -13.395605087280273
    9. '   ' → logprob: -13.770605087280273
    10. '  ' → logprob: -13.770605087280273

Token 122: ' range' (ID: 3352)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.01423285249620676
    2. 'range' → logprob: -4.889232635498047
    3. 'get' → logprob: -5.389232635498047
    4. ' B' → logprob: -6.514232635498047
    5. ' range' → logprob: -8.139232635498047
    6. 'A' → logprob: -8.389232635498047
    7. ' get' → logprob: -10.389232635498047
    8. ' ' → logprob: -13.764232635498047
    9. '[get' → logprob: -14.264232635498047
    10. 'res' → logprob: -14.264232635498047

Token 123: '(len' (ID: 14990)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.09979203343391418
    2. '(' → logprob: -2.474792003631592
    3. '(len' → logprob: -4.599792003631592
    4. '(K' → logprob: -7.599792003631592
    5. '(n' → logprob: -8.47479248046875
    6. ' (' → logprob: -11.47479248046875
    7. 'len' → logprob: -12.84979248046875
    8. '((' → logprob: -13.22479248046875
    9. '(max' → logprob: -13.22479248046875
    10. '(int' → logprob: -13.22479248046875

Token 124: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0004634392389561981
    2. '(A' → logprob: -8.000463485717773
    3. '(get' → logprob: -9.250463485717773
    4. '(' → logprob: -11.375463485717773
    5. 'B' → logprob: -11.500463485717773
    6. '(res' → logprob: -13.125463485717773
    7. ' (' → logprob: -13.375463485717773
    8. '(max' → logprob: -13.500463485717773
    9. '(D' → logprob: -14.000463485717773
    10. '(K' → logprob: -14.250463485717773

Token 125: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.37756872177124023
    2. '):' → logprob: -1.2525687217712402
    3. ')):
' → logprob: -4.25256872177124
    4. ')):' → logprob: -4.87756872177124
    5. '-' → logprob: -5.00256872177124
    6. ')' → logprob: -10.627569198608398
    7. ' -' → logprob: -10.752569198608398
    8. ' ):
' → logprob: -11.002569198608398
    9. ' ):' → logprob: -11.002569198608398
    10. '))' → logprob: -11.002569198608398

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011502816341817379
    2. ' if' → logprob: -4.761502742767334
    3. ' max' → logprob: -6.136502742767334
    4. 'max' → logprob: -7.511502742767334
    5. ':' → logprob: -9.761503219604492
    6. 'if' → logprob: -9.886503219604492
    7. ',' → logprob: -11.261503219604492
    8. '```' → logprob: -11.511503219604492
    9. ',max' → logprob: -11.886503219604492
    10. ' ' → logprob: -11.886503219604492

Token 127: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24031250178813934
    2. ' if' → logprob: -2.3653125762939453
    3. ' for' → logprob: -3.1153125762939453
    4. 'if' (adapté à ' if') → logprob: -3.4903125762939453
    5. 'for' → logprob: -3.4903125762939453
    6. 'max' → logprob: -4.740312576293945
    7. ' max' → logprob: -5.240312576293945
    8. ' ' → logprob: -9.365312576293945
    9. ' current' → logprob: -9.490312576293945
    10. 'current' → logprob: -10.740312576293945

Token 128: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.2519638240337372
    2. 'B' → logprob: -1.5019638538360596
    3. '   ' → logprob: -10.62696361541748
    4. ' max' → logprob: -12.62696361541748
    5. ' ' → logprob: -13.00196361541748
    6. '(B' → logprob: -13.25196361541748
    7. 'max' → logprob: -13.37696361541748
    8. '	B' → logprob: -13.87696361541748
    9. ' ' → logprob: -15.25196361541748
    10. '    ' → logprob: -15.50196361541748

Token 129: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -6.153795766294934e-06
    2. '[' → logprob: -12.625005722045898
    3. ' [' → logprob: -13.625005722045898
    4. '>x' → logprob: -14.250005722045898
    5. '>' → logprob: -15.250005722045898
    6. '[
' → logprob: -15.500005722045898
    7. '[max' → logprob: -15.875005722045898
    8. ' >' → logprob: -16.0000057220459
    9. 'x' → logprob: -16.2500057220459
    10. '>[' → logprob: -17.2500057220459

Token 130: ']>' (ID: 54651)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.020142287015914917
    2. ' >' → logprob: -4.020142078399658
    3. ']>' → logprob: -6.520142078399658
    4. ']' → logprob: -7.770142078399658
    5. ' ' → logprob: -10.270142555236816
    6. '>x' → logprob: -11.020142555236816
    7. ')>' → logprob: -11.770142555236816
    8. ' ]' → logprob: -11.770142555236816
    9. '>]' → logprob: -12.145142555236816
    10. '">' → logprob: -12.270142555236816

Token 131: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0024758970830589533
    2. ' max' → logprob: -6.002475738525391
    3. '	max' → logprob: -16.37747573852539
    4. ' ' → logprob: -17.12747573852539
    5. '   ' → logprob: -17.50247573852539
    6. '=max' → logprob: -17.62747573852539
    7. '0' → logprob: -17.87747573852539
    8. '(max' → logprob: -18.12747573852539
    9. '
' → logprob: -18.50247573852539
    10. '_max' → logprob: -18.75247573852539

Token 132: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -7.505351095460355e-05
    2. '_max' → logprob: -10.000075340270996
    3. 'diff' → logprob: -10.875075340270996
    4. 'max' → logprob: -11.625075340270996
    5. '_' → logprob: -14.500075340270996
    6. ' _' → logprob: -14.875075340270996
    7. ' max' → logprob: -15.750075340270996
    8. '_difference' → logprob: -16.25007438659668
    9. 'Diff' → logprob: -16.37507438659668
    10. '_d' → logprob: -16.50007438659668

Token 133: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2542528510093689
    2. ':' → logprob: -1.5042529106140137
    3. ':max' → logprob: -6.754252910614014
    4. 'max' → logprob: -7.629252910614014
    5. ' :
' → logprob: -8.379252433776855
    6. '):
' → logprob: -9.129252433776855
    7. '       ' → logprob: -9.254252433776855
    8. '   ' → logprob: -9.504252433776855
    9. '=max' → logprob: -9.629252433776855
    10. ' max' → logprob: -9.879252433776855

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6394340991973877
    2. ' max' → logprob: -1.3894340991973877
    3. 'max' → logprob: -1.5144340991973877
    4. '
' → logprob: -6.514433860778809
    5. '   ' → logprob: -6.889433860778809
    6. '	max' → logprob: -8.639433860778809
    7. ':
' → logprob: -8.639433860778809
    8. ',max' → logprob: -9.139433860778809
    9. '(max' → logprob: -9.514433860778809
    10. '_max' → logprob: -10.014433860778809

Token 135: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.12692862749099731
    2. ' max' → logprob: -2.1269285678863525
    3. '       ' → logprob: -15.376928329467773
    4. '           ' → logprob: -16.001928329467773
    5. '
' → logprob: -16.501928329467773
    6. '_max' → logprob: -16.501928329467773
    7. '	max' → logprob: -17.376928329467773
    8. '   ' → logprob: -17.376928329467773
    9. 'x' → logprob: -18.126928329467773
    10. ' ' → logprob: -19.376928329467773

Token 136: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -4.584861744660884e-05
    2. 'diff' → logprob: -10.000045776367188
    3. 'Diff' → logprob: -15.750045776367188
    4. '_difference' → logprob: -16.375045776367188
    5. '	diff' → logprob: -16.750045776367188
    6. '_d' → logprob: -17.250045776367188
    7. 'max' → logprob: -17.250045776367188
    8. '_' → logprob: -17.375045776367188
    9. '_DIFF' → logprob: -17.875045776367188
    10. '```' → logprob: -18.250045776367188

Token 137: '=B' (ID: 139140)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.047374095767736435
    2. ' =' → logprob: -3.5473740100860596
    3. '=B' → logprob: -4.047374248504639
    4. '=b' → logprob: -14.04737377166748
    5. '=

' → logprob: -16.922374725341797
    6. '=x' → logprob: -16.922374725341797
    7. ' ' → logprob: -17.047374725341797
    8. '=
' → logprob: -17.297374725341797
    9. '=A' → logprob: -17.297374725341797
    10. '=D' → logprob: -18.172374725341797

Token 138: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.1279553291387856e-05
    2. '[' → logprob: -11.625011444091797
    3. ' [' → logprob: -13.125011444091797
    4. 'x' → logprob: -15.875011444091797
    5. '```' → logprob: -16.125011444091797
    6. '[
' → logprob: -16.875011444091797
    7. '\[' → logprob: -18.875011444091797
    8. ' x' → logprob: -19.000011444091797
    9. '   ' → logprob: -19.250011444091797
    10. ' ' → logprob: -19.375011444091797

Token 139: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007666255696676672
    2. '])' → logprob: -7.750766754150391
    3. ']' → logprob: -8.75076675415039
    4. ')
' → logprob: -9.25076675415039
    5. '<|end|>' → logprob: -10.50076675415039
    6. ')]' → logprob: -10.87576675415039
    7. ' )' → logprob: -11.87576675415039
    8. '+' → logprob: -11.87576675415039
    9. ')return' → logprob: -12.00076675415039
    10. ')])' → logprob: -13.37576675415039

Token 140: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07771561294794083
    2. 'max' → logprob: -3.4527156352996826
    3. 'total' → logprob: -4.7027153968811035
    4. 'result' → logprob: -4.8277153968811035
    5. 'ans' → logprob: -4.8277153968811035
    6. 'sum' → logprob: -5.3277153968811035
    7. 'answer' → logprob: -5.4527153968811035
    8. 'res' → logprob: -6.0777153968811035
    9. 'm' → logprob: -7.2027153968811035
    10. 'mean' → logprob: -7.4527153968811035

Token 141: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.10093971341848373
    2. '(max' → logprob: -2.9759397506713867
    3. '((' → logprob: -3.6009397506713867
    4. '(' → logprob: -4.475939750671387
    5. 'K' → logprob: -5.475939750671387
    6. 'max' → logprob: -6.975939750671387
    7. '(int' → logprob: -7.600939750671387
    8. '(k' → logprob: -8.850939750671387
    9. '(sum' → logprob: -9.100939750671387
    10. '(round' → logprob: -9.100939750671387

Token 142: '-max' (ID: 102577)
  Prédit: '-max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-max' → logprob: -0.8693681359291077
    2. ' -' → logprob: -1.119368076324463
    3. '-' → logprob: -1.369368076324463
    4. '-Max' → logprob: -11.119368553161621
    5. '-end' → logprob: -11.869368553161621
    6. '-min' → logprob: -12.744368553161621
    7. ')' → logprob: -12.994368553161621
    8. '-m' → logprob: -13.994368553161621
    9. ',max' → logprob: -15.119368553161621
    10. ',' → logprob: -15.494368553161621

Token 143: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -2.7729658540920354e-05
    2. 'diff' → logprob: -10.500027656555176
    3. 'Diff' → logprob: -16.750028610229492
    4. '_DIFF' → logprob: -17.375028610229492
    5. '	diff' → logprob: -17.625028610229492
    6. '(diff' → logprob: -17.625028610229492
    7. 'max' → logprob: -19.500028610229492
    8. '(max' → logprob: -20.250028610229492
    9. '_difference' → logprob: -20.625028610229492
    10. 'iff' → logprob: -21.250028610229492

Token 144: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ' )' → logprob: -13.250001907348633
    3. '))' → logprob: -17.125001907348633
    4. ')
' → logprob: -17.125001907348633
    5. ')`' → logprob: -17.375001907348633
    6. '`)' → logprob: -17.500001907348633
    7. '）' → logprob: -18.625001907348633
    8. '')' → logprob: -18.750001907348633
    9. '")' → logprob: -18.875001907348633
    10. ')}' → logprob: -19.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 142
Tokens correctement prédits (1ère position, stricte): 62
Tokens correctement prédits (1ère position, avec adaptation): 66
Tokens correctement prédits (top 10): 116
Précision stricte (1ère position): 43.66%
Précision adaptée (1ère position): 46.48%
Précision (top 10): 81.69%
================================================================================
