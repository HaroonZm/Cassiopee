================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
inp = input()
data = inp.split()
ans = int(data[0]) - int(data[1]) + 1
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'inp' (ID: 74055)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014360661152750254
    2. '('' → logprob: -7.126436233520508
    3. ''' → logprob: -7.876436233520508
    4. '("("' → logprob: -9.001436233520508
    5. '"' → logprob: -10.001436233520508
    6. '()' → logprob: -11.001436233520508
    7. '(
' → logprob: -11.126436233520508
    8. '`' → logprob: -11.376436233520508
    9. ' (' → logprob: -11.626436233520508
    10. '```' → logprob: -11.876436233520508

Token 4: 'data' (ID: 1074)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.001309286686591804
    2. '_' → logprob: -8.376309394836426
    3. 'if' → logprob: -8.501309394836426
    4. '+' → logprob: -8.501309394836426
    5. '=' → logprob: -9.126309394836426
    6. '.strip' → logprob: -9.376309394836426
    7. ')' → logprob: -9.626309394836426
    8. ' ' → logprob: -9.626309394836426
    9. ''' → logprob: -10.001309394836426
    10. '[' → logprob: -10.126309394836426

Token 5: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.022743239998817444
    2. '.' → logprob: -3.8977432250976562
    3. '[:]' → logprob: -7.272743225097656
    4. 's' → logprob: -8.022743225097656
    5. '[
' → logprob: -8.397743225097656
    6. '[]' → logprob: -8.772743225097656
    7. '[:' → logprob: -9.397743225097656
    8. '['' → logprob: -9.772743225097656
    9. '[data' → logprob: -9.772743225097656
    10. '=' → logprob: -9.897743225097656

Token 6: ' inp' (ID: 64450)
  Prédit: ' inp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inp' → logprob: -0.24834299087524414
    2. 'inp' → logprob: -1.6233429908752441
    3. ' []' → logprob: -3.873342990875244
    4. '[]' → logprob: -6.998342990875244
    5. ' ' → logprob: -8.748342514038086
    6. ' input' → logprob: -8.748342514038086
    7. 'input' → logprob: -8.998342514038086
    8. ' {}' → logprob: -9.123342514038086
    9. '(inp' → logprob: -9.373342514038086
    10. '[in' → logprob: -9.498342514038086

Token 7: '.split' (ID: 10347)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11932791024446487
    2. '[' → logprob: -2.244328022003174
    3. '.split' → logprob: -5.619328022003174
    4. '+' → logprob: -6.869328022003174
    5. '.strip' → logprob: -7.369328022003174
    6. '[:]' → logprob: -8.119327545166016
    7. '```' → logprob: -8.994327545166016
    8. '.lower' → logprob: -9.119327545166016
    9. '.upper' → logprob: -9.619327545166016
    10. '.replace' → logprob: -9.619327545166016

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03153599798679352
    2. '('' → logprob: -3.781536102294922
    3. '("("' → logprob: -4.906536102294922
    4. ''' → logprob: -8.156536102294922
    5. '`' → logprob: -8.781536102294922
    6. '()' → logprob: -9.156536102294922
    7. '((' → logprob: -9.281536102294922
    8. ' (' → logprob: -9.906536102294922
    9. '(
' → logprob: -10.031536102294922
    10. '(`' → logprob: -10.531536102294922

Token 9: 'ans' (ID: 616)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13397693634033203
    2. 'x' → logprob: -3.133976936340332
    3. 'if' → logprob: -3.883976936340332
    4. 'n' → logprob: -4.008976936340332
    5. 'num' → logprob: -4.133976936340332
    6. '(' → logprob: -5.633976936340332
    7. '.' → logprob: -5.758976936340332
    8. 'for' → logprob: -5.758976936340332
    9. '#' → logprob: -5.883976936340332
    10. 'i' → logprob: -6.258976936340332

Token 10: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0873349905014038
    2. ' =' → logprob: -1.4623349905014038
    3. '_' → logprob: -1.7123349905014038
    4. '=' → logprob: -1.8373349905014038
    5. '.' → logprob: -2.7123351097106934
    6. '.append' → logprob: -4.462335109710693
    7. '[:]' → logprob: -4.962335109710693
    8. '(' → logprob: -6.837335109710693
    9. '[]' → logprob: -6.837335109710693
    10. 's' → logprob: -7.087335109710693

Token 11: ' int' (ID: 677)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7300288677215576
    2. '[]' → logprob: -0.7300288677215576
    3. 'int' → logprob: -4.355029106140137
    4. ' []' → logprob: -4.480029106140137
    5. ' ' → logprob: -5.355029106140137
    6. 'data' → logprob: -5.480029106140137
    7. '[int' → logprob: -6.605029106140137
    8. 'len' → logprob: -7.855029106140137
    9. 'sum' → logprob: -8.105029106140137
    10. ' int' → logprob: -8.230029106140137

Token 12: '(data' (ID: 4819)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023371264338493347
    2. '(data' → logprob: -3.8983712196350098
    3. '('' → logprob: -6.64837121963501
    4. '("("' → logprob: -7.52337121963501
    5. '(ans' → logprob: -7.89837121963501
    6. 'data' → logprob: -7.89837121963501
    7. ''' → logprob: -9.523371696472168
    8. '`' → logprob: -10.148371696472168
    9. '((' → logprob: -10.523371696472168
    10. '```' → logprob: -11.273371696472168

Token 13: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.676981345459353e-06
    2. ')' → logprob: -12.500005722045898
    3. '0' → logprob: -13.875005722045898
    4. ' [' → logprob: -14.500005722045898
    5. '[-' → logprob: -16.1250057220459
    6. '[
' → logprob: -16.6250057220459
    7. '```' → logprob: -17.2500057220459
    8. '[len' → logprob: -17.3750057220459
    9. ' ' → logprob: -17.5000057220459
    10. '   ' → logprob: -17.7500057220459

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000643691688310355
    2. '1' → logprob: -7.375643730163574
    3. ' ' → logprob: -11.375643730163574
    4. '-' → logprob: -12.250643730163574
    5. ')' → logprob: -15.375643730163574
    6. '2' → logprob: -15.500643730163574
    7. ']' → logprob: -15.875643730163574
    8. '])' → logprob: -16.000642776489258
    9. '```' → logprob: -16.125642776489258
    10. '   ' → logprob: -16.875642776489258

Token 15: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.025310618802905083
    2. ']' → logprob: -3.775310516357422
    3. ')' → logprob: -6.900310516357422
    4. ' ])' → logprob: -7.400310516357422
    5. '+' → logprob: -8.275310516357422
    6. '])+' → logprob: -9.525310516357422
    7. ']+' → logprob: -9.650310516357422
    8. ' ]' → logprob: -11.525310516357422
    9. ']))' → logprob: -11.525310516357422
    10. ')])' → logprob: -12.650310516357422

Token 16: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03517582640051842
    2. ' +' → logprob: -3.7851758003234863
    3. '<|end|>' → logprob: -4.660175800323486
    4. ' ' → logprob: -6.660175800323486
    5. '*' → logprob: -7.660175800323486
    6. ')' → logprob: -8.035176277160645
    7. '-' → logprob: -9.160176277160645
    8. ' *' → logprob: -10.035176277160645
    9. '<|end|>' → logprob: -10.410176277160645
    10. '%' → logprob: -10.535176277160645

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.038195375353097916
    2. ' int' → logprob: -3.2881953716278076
    3. '1' → logprob: -8.788195610046387
    4. ' ' → logprob: -14.288195610046387
    5. '(int' → logprob: -15.163195610046387
    6. '=int' → logprob: -15.163195610046387
    7. '<int' → logprob: -16.41319465637207
    8. '	int' → logprob: -17.03819465637207
    9. '[int' → logprob: -17.53819465637207
    10. ':int' → logprob: -17.66319465637207

Token 18: '(data' (ID: 4819)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6933784484863281
    2. '(data' → logprob: -0.6933784484863281
    3. '('' → logprob: -9.193378448486328
    4. '("("' → logprob: -9.693378448486328
    5. '(user' → logprob: -10.693378448486328
    6. '<|end|>' → logprob: -10.943378448486328
    7. 'data' → logprob: -11.818378448486328
    8. '((' → logprob: -12.193378448486328
    9. '(`' → logprob: -12.943378448486328
    10. '(
' → logprob: -13.943378448486328

Token 19: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00013274075172375888
    2. 'data' → logprob: -9.25013256072998
    3. '[data' → logprob: -10.75013256072998
    4. ']' → logprob: -12.00013256072998
    5. ')' → logprob: -13.12513256072998
    6. '][' → logprob: -13.50013256072998
    7. ' data' → logprob: -13.62513256072998
    8. ' [' → logprob: -14.00013256072998
    9. '1' → logprob: -14.37513256072998
    10. '```' → logprob: -14.50013256072998

Token 20: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8325677703833207e-05
    2. ' ' → logprob: -11.000028610229492
    3. '0' → logprob: -11.875028610229492
    4. '2' → logprob: -12.875028610229492
    5. '])' → logprob: -14.000028610229492
    6. '-' → logprob: -15.000028610229492
    7. ']' → logprob: -15.437528610229492
    8. '   ' → logprob: -15.500028610229492
    9. ')' → logprob: -15.812528610229492
    10. '```' → logprob: -16.375028610229492

Token 21: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.10543835163116455
    2. ')' → logprob: -2.355438232421875
    3. ']' → logprob: -5.355438232421875
    4. ')])' → logprob: -8.105438232421875
    5. ')]' → logprob: -9.105438232421875
    6. ']))' → logprob: -10.230438232421875
    7. '])]' → logprob: -10.980438232421875
    8. '))' → logprob: -11.230438232421875
    9. ''])' → logprob: -11.855438232421875
    10. '）' → logprob: -12.855438232421875

Token 22: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 23: ' ' (ID: 220)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.05427771061658859
    2. ' int' → logprob: -3.0542776584625244
    3. '1' → logprob: -5.1792778968811035
    4. ' ' → logprob: -10.429277420043945
    5. '0' → logprob: -12.429277420043945
    6. '(int' → logprob: -12.804277420043945
    7. '32' → logprob: -13.554277420043945
    8. '2' → logprob: -13.929277420043945
    9. 'data' → logprob: -14.429277420043945
    10. '<int' → logprob: -14.679277420043945

Token 24: '1' (ID: 16)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004746841266751289
    2. '1' → logprob: -5.379746913909912
    3. ' int' → logprob: -9.629746437072754
    4. '(int' → logprob: -10.754746437072754
    5. '2' → logprob: -10.879746437072754
    6. '0' → logprob: -12.129746437072754
    7. '3' → logprob: -12.754746437072754
    8. '10' → logprob: -13.129746437072754
    9. ' ' → logprob: -13.254746437072754
    10. '4' → logprob: -13.504746437072754

Token 25: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017486036522313952
    2. '(ans' → logprob: -6.376748561859131
    3. '("("' → logprob: -10.376749038696289
    4. '('' → logprob: -11.376749038696289
    5. '(`' → logprob: -13.626749038696289
    6. '()' → logprob: -14.376749038696289
    7. '((' → logprob: -15.001749038696289
    8. '(

' → logprob: -15.001749038696289
    9. '(
' → logprob: -15.126749038696289
    10. '(paren' → logprob: -15.501749038696289

Token 28: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. '))' → logprob: -15.625
    3. ' )' → logprob: -16.0
    4. '')' → logprob: -16.625
    5. ')`' → logprob: -17.25
    6. '`)' → logprob: -17.5
    7. '）' → logprob: -19.25
    8. '(' → logprob: -19.625
    9. '")' → logprob: -19.75
    10. '()' → logprob: -20.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 26
Tokens correctement prédits (1ère position, stricte): 8
Tokens correctement prédits (1ère position, avec adaptation): 8
Tokens correctement prédits (top 10): 17
Précision stricte (1ère position): 30.77%
Précision adaptée (1ère position): 30.77%
Précision (top 10): 65.38%
================================================================================
