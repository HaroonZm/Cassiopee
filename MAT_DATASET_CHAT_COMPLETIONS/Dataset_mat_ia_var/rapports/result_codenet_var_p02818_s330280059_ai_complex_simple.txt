================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import sub
from itertools import accumulate, islice

A,B,K = map(int,input().split())

def fancy_logic(A,B,K):
    cases = [
        lambda : (reduce(sub, (A,K)), B),
        lambda : (0, list(islice(accumulate([-K, A, B]),2))[-1]),
        lambda : (0,0)
    ]
    idx = min(reduce(lambda x, y: x + (K > y), [A, A+B]), 2)
    return cases[idx]()

print(*fancy_logic(A,B,K))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3026095926761627
    2. 'partial' → logprob: -1.8026095628738403
    3. 'reduce' → logprob: -2.55260968208313
    4. 'l' → logprob: -4.677609443664551
    5. ' wraps' → logprob: -4.802609443664551
    6. 'cached' → logprob: -8.05260944366455
    7. 'cache' → logprob: -8.55260944366455
    8. 'cmp' → logprob: -9.05260944366455
    9. ' partial' → logprob: -9.42760944366455
    10. ' l' → logprob: -9.80260944366455

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020487118512392044
    2. '(lambda' → logprob: -4.645487308502197
    3. '.' → logprob: -5.270487308502197
    4. ',' → logprob: -5.895487308502197
    5. '\' → logprob: -7.145487308502197
    6. ' (' → logprob: -7.520487308502197
    7. '```' → logprob: -8.020486831665039
    8. 'def' → logprob: -8.645486831665039
    9. 'lambda' → logprob: -8.895486831665039
    10. '`' → logprob: -8.895486831665039

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028644466772675514
    2. '\' → logprob: -4.153644561767578
    3. 'def' → logprob: -5.028644561767578
    4. '(
' → logprob: -6.028644561767578
    5. '(lambda' → logprob: -6.653644561767578
    6. ',' → logprob: -7.653644561767578
    7. '\n' → logprob: -7.778644561767578
    8. '```' → logprob: -7.903644561767578
    9. '\(' → logprob: -8.403644561767578
    10. '`' → logprob: -9.278644561767578

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.1674761325120926
    2. ' itertools' → logprob: -2.292476177215576
    3. ' math' → logprob: -3.917476177215576
    4. ' collections' → logprob: -3.917476177215576
    5. 'operator' → logprob: -4.417476177215576
    6. 'collections' → logprob: -7.792476177215576
    7. ' typing' → logprob: -8.042475700378418
    8. 'math' → logprob: -8.167475700378418
    9. ' os' → logprob: -8.667475700378418
    10. ' ' → logprob: -9.667475700378418

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.022899029776453972
    2. 'import' → logprob: -3.8978989124298096
    3. ' ' → logprob: -6.397899150848389
    4. '.' → logprob: -7.522899150848389
    5. ' .' → logprob: -9.14789867401123
    6. '.import' → logprob: -10.64789867401123
    7. '	import' → logprob: -11.77289867401123
    8. '<|end|>' → logprob: -13.02289867401123
    9. '_import' → logprob: -13.39789867401123
    10. ' ' → logprob: -13.52289867401123

Token 8: ' sub' (ID: 1543)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.30121177434921265
    2. ' import' → logprob: -1.8012118339538574
    3. ' mul' → logprob: -3.0512118339538574
    4. 'add' → logprob: -3.8012118339538574
    5. ' ' → logprob: -4.051211833953857
    6. 'import' → logprob: -5.426211833953857
    7. 'mul' → logprob: -6.301211833953857
    8. ' item' → logprob: -7.051211833953857
    9. ' icon' → logprob: -8.4262113571167
    10. '```' → logprob: -9.3012113571167

Token 9: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010621525347232819
    2. '\' → logprob: -5.885621547698975
    3. '\n' → logprob: -6.260621547698975
    4. '(
' → logprob: -6.510621547698975
    5. '\(' → logprob: -6.760621547698975
    6. ',' → logprob: -7.135621547698975
    7. ')' → logprob: -7.385621547698975
    8. ' (' → logprob: -7.760621547698975
    9. '```' → logprob: -7.760621547698975
    10. '`' → logprob: -8.760621070861816

Token 10: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5364780426025391
    2. ',' → logprob: -1.786478042602539
    3. '(
' → logprob: -2.161478042602539
    4. '\' → logprob: -4.036478042602539
    5. '\n' → logprob: -4.161478042602539
    6. 'result' → logprob: -4.286478042602539
    7. 'def' → logprob: -4.286478042602539
    8. 'print' → logprob: -4.286478042602539
    9. 'a' → logprob: -4.786478042602539
    10. '#' → logprob: -4.911478042602539

Token 11: ' itertools' (ID: 103178)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -1.0642181634902954
    2. ' functools' → logprob: -1.6892181634902954
    3. 'math' → logprob: -1.9392181634902954
    4. ' math' → logprob: -2.314218044281006
    5. '_' → logprob: -2.564218044281006
    6. ' operator' → logprob: -3.064218044281006
    7. 'fun' → logprob: -3.189218044281006
    8. ' itertools' → logprob: -3.564218044281006
    9. 'import' → logprob: -4.064218044281006
    10. 'collections' → logprob: -5.564218044281006

Token 12: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5676029920578003
    2. ' import' → logprob: -1.0676029920578003
    3. '.' → logprob: -2.44260311126709
    4. ' .' → logprob: -6.69260311126709
    5. '.import' → logprob: -7.69260311126709
    6. ' ' → logprob: -8.94260311126709
    7. '	import' → logprob: -9.19260311126709
    8. '_import' → logprob: -9.44260311126709
    9. '.im' → logprob: -9.56760311126709
    10. 'ertools' → logprob: -10.19260311126709

Token 13: ' accumulate' (ID: 74226)
  Prédit: ' accumulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accumulate' → logprob: -0.8365640640258789
    2. ' group' → logprob: -1.336564064025879
    3. ' cycle' → logprob: -2.086564064025879
    4. 'acc' → logprob: -2.836564064025879
    5. ' chain' → logprob: -3.461564064025879
    6. 'com' → logprob: -3.836564064025879
    7. ' permutations' → logprob: -4.336564064025879
    8. 'group' → logprob: -4.836564064025879
    9. 'cycle' → logprob: -4.961564064025879
    10. ' product' → logprob: -4.961564064025879

Token 14: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003321246011182666
    2. '(
' → logprob: -6.628321170806885
    3. '(lambda' → logprob: -6.753321170806885
    4. 'def' → logprob: -7.628321170806885
    5. ',' → logprob: -8.753321647644043
    6. '#' → logprob: -9.753321647644043
    7. ')' → logprob: -11.503321647644043
    8. '[' → logprob: -11.753321647644043
    9. '(range' → logprob: -11.753321647644043
    10. '(

' → logprob: -11.753321647644043

Token 15: ' is' (ID: 382)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -1.273183822631836
    2. ' chain' → logprob: -1.398183822631836
    3. 'product' → logprob: -2.148183822631836
    4. 'group' → logprob: -2.523183822631836
    5. 'com' → logprob: -3.148183822631836
    6. ' product' → logprob: -3.398183822631836
    7. ' group' → logprob: -3.523183822631836
    8. 'count' → logprob: -3.648183822631836
    9. 'drop' → logprob: -4.023183822631836
    10. 'take' → logprob: -4.023183822631836

Token 16: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -9.960946772480384e-05
    2. 'l' → logprob: -9.750099182128906
    3. 'lic' → logprob: -10.500099182128906
    4. '#' → logprob: -12.625099182128906
    5. '```' → logprob: -13.375099182128906
    6. 'lices' → logprob: -13.500099182128906
    7. 'licing' → logprob: -13.625099182128906
    8. 'liced' → logprob: -14.125099182128906
    9. '``' → logprob: -14.375099182128906
    10. 'li' → logprob: -14.375099182128906

Token 17: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05213187262415886
    2. '(
' → logprob: -3.0521318912506104
    3. 'def' → logprob: -7.302131652832031
    4. ',' → logprob: -7.302131652832031
    5. '(

' → logprob: -7.552131652832031
    6. '\' → logprob: -8.552131652832031
    7. '(acc' → logprob: -8.927131652832031
    8. ' (' → logprob: -9.052131652832031
    9. '\n' → logprob: -9.052131652832031
    10. '(lambda' → logprob: -9.302131652832031

Token 18: 'A' (ID: 32)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04175247997045517
    2. '(
' → logprob: -3.291752576828003
    3. 'def' → logprob: -6.416752338409424
    4. ',' → logprob: -7.166752338409424
    5. '(

' → logprob: -8.291752815246582
    6. '(lambda' → logprob: -8.666752815246582
    7. '\' → logprob: -9.291752815246582
    8. '#' → logprob: -9.291752815246582
    9. '```' → logprob: -9.291752815246582
    10. '(
' → logprob: -9.666752815246582

Token 19: ',B' (ID: 19853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38751059770584106
    2. '=' → logprob: -1.3875105381011963
    3. '.' → logprob: -4.012510776519775
    4. '_' → logprob: -4.262510776519775
    5. ',' → logprob: -4.512510776519775
    6. '[' → logprob: -5.262510776519775
    7. 'C' → logprob: -5.262510776519775
    8. ' ' → logprob: -5.387510776519775
    9. 'c' → logprob: -5.637510776519775
    10. 's' → logprob: -6.262510776519775

Token 20: ',K' (ID: 107147)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016660958528518677
    2. '=' → logprob: -4.141661167144775
    3. ',' → logprob: -7.641661167144775
    4. ' ,' → logprob: -9.766660690307617
    5. ' ' → logprob: -9.891660690307617
    6. ' =[' → logprob: -11.641660690307617
    7. '_' → logprob: -12.016660690307617
    8. '[' → logprob: -12.016660690307617
    9. ')' → logprob: -12.391660690307617
    10. '  ' → logprob: -12.516660690307617

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02991374582052231
    2. '=' → logprob: -3.5299136638641357
    3. ',' → logprob: -8.779913902282715
    4. ' =
' → logprob: -12.404913902282715
    5. ' ,' → logprob: -13.529913902282715
    6. ' ' → logprob: -14.029913902282715
    7. ' =[' → logprob: -14.279913902282715
    8. '=int' → logprob: -14.904913902282715
    9. ' =
' → logprob: -15.154913902282715
    10. '=

' → logprob: -15.404913902282715

Token 22: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.16354966163635254
    2. 'map' → logprob: -1.9135496616363525
    3. ' ' → logprob: -6.663549423217773
    4. ' input' → logprob: -7.413549423217773
    5. '0' → logprob: -7.538549423217773
    6. '10' → logprob: -8.288549423217773
    7. ' list' → logprob: -8.413549423217773
    8. 'input' → logprob: -8.913549423217773
    9. '5' → logprob: -9.413549423217773
    10. '1' → logprob: -9.538549423217773

Token 23: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03596619516611099
    2. '(' → logprob: -3.785966157913208
    3. '(str' → logprob: -5.410966396331787
    4. '(input' → logprob: -5.785966396331787
    5. '(lambda' → logprob: -6.410966396331787
    6. 'int' → logprob: -6.660966396331787
    7. '<|end|>' → logprob: -6.660966396331787
    8. 'input' → logprob: -8.785965919494629
    9. '[int' → logprob: -8.910965919494629
    10. '(eval' → logprob: -9.035965919494629

Token 24: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.22167938947677612
    2. '(' → logprob: -2.471679449081421
    3. ')' → logprob: -2.721679449081421
    4. ',' → logprob: -3.721679449081421
    5. ',input' → logprob: -4.471679210662842
    6. 'input' → logprob: -4.596679210662842
    7. ')(' → logprob: -7.721679210662842
    8. '),' → logprob: -7.971679210662842
    9. '<|end|>' → logprob: -8.2216796875
    10. '(int' → logprob: -8.4716796875

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0271812342107296
    2. '())' → logprob: -4.027181148529053
    3. '()' → logprob: -5.152181148529053
    4. ')' → logprob: -5.777181148529053
    5. '(' → logprob: -9.777181625366211
    6. '());' → logprob: -11.527181625366211
    7. '();)' → logprob: -11.652181625366211
    8. '()[' → logprob: -12.152181625366211
    9. '(),' → logprob: -12.527181625366211
    10. '()>' → logprob: -12.652181625366211

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.578184497309849e-05
    2. 'strip' → logprob: -9.500085830688477
    3. ' split' → logprob: -11.625085830688477
    4. 'rstrip' → logprob: -13.750085830688477
    5. '(split' → logprob: -14.500085830688477
    6. 'spl' → logprob: -15.875085830688477
    7. ')' → logprob: -16.000085830688477
    8. 's' → logprob: -16.500085830688477
    9. '```' → logprob: -17.750085830688477
    10. ' ' → logprob: -17.750085830688477

Token 27: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010282238014042377
    2. '))' → logprob: -4.635282039642334
    3. '())' → logprob: -7.885282039642334
    4. '),' → logprob: -10.260282516479492
    5. '(' → logprob: -10.260282516479492
    6. '()' → logprob: -11.010282516479492
    7. '`)' → logprob: -11.010282516479492
    8. '('' → logprob: -11.385282516479492
    9. ')`' → logprob: -12.010282516479492
    10. ')))' → logprob: -12.135282516479492

Token 28: 'def' (ID: 1314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09680436551570892
    2. 'data' → logprob: -3.59680438041687
    3. 'print' → logprob: -4.346804141998291
    4. 'lst' → logprob: -4.471804141998291
    5. 'arr' → logprob: -4.721804141998291
    6. 'x' → logprob: -4.971804141998291
    7. ')' → logprob: -5.471804141998291
    8. 'numbers' → logprob: -5.846804141998291
    9. 's' → logprob: -6.096804141998291
    10. '```' → logprob: -6.221804141998291

Token 29: ' fancy' (ID: 39357)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.5116816163063049
    2. ' gcd' → logprob: -2.26168155670166
    3. ' solve' → logprob: -2.63668155670166
    4. ' pow' → logprob: -3.63668155670166
    5. ' range' → logprob: -3.88668155670166
    6. ' combine' → logprob: -4.26168155670166
    7. ' comb' → logprob: -4.51168155670166
    8. ' func' → logprob: -4.63668155670166
    9. ' factorial' → logprob: -4.76168155670166
    10. ' accumulate' → logprob: -4.76168155670166

Token 30: '_logic' (ID: 131254)
  Prédit: '_add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.5838209986686707
    2. '_' → logprob: -2.7088210582733154
    3. '_sub' → logprob: -2.8338210582733154
    4. '_sum' → logprob: -2.9588210582733154
    5. '_factor' → logprob: -3.3338210582733154
    6. '_div' → logprob: -3.3338210582733154
    7. '_map' → logprob: -3.4588210582733154
    8. '_sort' → logprob: -3.5838210582733154
    9. '_mul' → logprob: -3.9588210582733154
    10. '_sequence' → logprob: -4.083820819854736

Token 31: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3261362910270691
    2. '(x' → logprob: -1.7011363506317139
    3. '(a' → logprob: -2.701136350631714
    4. '(n' → logprob: -3.826136350631714
    5. '(s' → logprob: -6.076136112213135
    6. '(:' → logprob: -6.826136112213135
    7. '():' → logprob: -7.826136112213135
    8. '(A' → logprob: -7.951136112213135
    9. '(line' → logprob: -7.951136112213135
    10. '(i' → logprob: -8.076136589050293

Token 32: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008426038548350334
    2. ' ,' → logprob: -5.383426189422607
    3. '):' → logprob: -6.383426189422607
    4. '+' → logprob: -7.133426189422607
    5. ',B' → logprob: -7.633426189422607
    6. '-' → logprob: -8.25842571258545
    7. ')' → logprob: -9.25842571258545
    8. '*' → logprob: -9.50842571258545
    9. ' +' → logprob: -9.63342571258545
    10. ',b' → logprob: -9.75842571258545

Token 33: ',K' (ID: 107147)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1160057783126831
    2. ',' → logprob: -2.2410058975219727
    3. ')' → logprob: -6.116005897521973
    4. ' ):' → logprob: -8.241005897521973
    5. '):
' → logprob: -8.991005897521973
    6. ' ,' → logprob: -9.366005897521973
    7. ':' → logprob: -9.741005897521973
    8. ',A' → logprob: -9.866005897521973
    9. ',f' → logprob: -10.116005897521973
    10. ',B' → logprob: -10.116005897521973

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0074610961601138115
    2. ')' → logprob: -5.132461071014404
    3. ',' → logprob: -6.882461071014404
    4. ' ):' → logprob: -7.882461071014404
    5. ':' → logprob: -9.257461547851562
    6. '):
' → logprob: -11.382461547851562
    7. '=' → logprob: -12.757461547851562
    8. ' )' → logprob: -13.132461547851562
    9. ')):' → logprob: -13.382461547851562
    10. ' :' → logprob: -13.382461547851562

Token 35: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09048420935869217
    2. '   ' → logprob: -2.590484142303467
    3. '):' → logprob: -6.340484142303467
    4. ' ' → logprob: -6.465484142303467
    5. ':
' → logprob: -6.715484142303467
    6. '    ' → logprob: -6.715484142303467
    7. '\n' → logprob: -6.965484142303467
    8. ' :' → logprob: -7.090484142303467
    9. '    
' → logprob: -7.090484142303467
    10. ')' → logprob: -7.215484142303467

Token 36: ' cases' (ID: 7911)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.5385247468948364
    2. ' res' → logprob: -2.038524627685547
    3. ' return' → logprob: -2.163524627685547
    4. ' acc' → logprob: -3.163524627685547
    5. ' if' → logprob: -3.538524627685547
    6. ' for' → logprob: -3.538524627685547
    7. ' yield' → logprob: -3.913524627685547
    8. 'result' → logprob: -4.038524627685547
    9. ' ans' → logprob: -4.538524627685547
    10. '   ' → logprob: -5.288524627685547

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011165606789290905
    2. '=' → logprob: -4.761165618896484
    3. ':' → logprob: -6.261165618896484
    4. ' :' → logprob: -8.136165618896484
    5. ' ' → logprob: -9.136165618896484
    6. '   ' → logprob: -9.136165618896484
    7. '  ' → logprob: -10.636165618896484
    8. ',' → logprob: -11.011165618896484
    9. '[:]' → logprob: -11.136165618896484
    10. '=[]' → logprob: -11.261165618896484

Token 38: ' [
' (ID: 4240)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9093566536903381
    2. '[]' → logprob: -1.4093565940856934
    3. ' [' → logprob: -1.7843565940856934
    4. ' []' → logprob: -2.9093565940856934
    5. '{}' → logprob: -3.5343565940856934
    6. '[
' → logprob: -3.6593565940856934
    7. '{' → logprob: -3.6593565940856934
    8. ' {' → logprob: -4.034356594085693
    9. '[{' → logprob: -4.784356594085693
    10. '[(' → logprob: -5.159356594085693

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1745654344558716
    2. '(lambda' → logprob: -1.2995654344558716
    3. ' lambda' → logprob: -2.174565315246582
    4. 'lambda' → logprob: -2.299565315246582
    5. ' (' → logprob: -2.424565315246582
    6. '   ' → logprob: -2.424565315246582
    7. '(' → logprob: -4.674565315246582
    8. '    ' → logprob: -5.299565315246582
    9. '[' → logprob: -5.549565315246582
    10. '(A' → logprob: -6.674565315246582

Token 40: ' lambda' (ID: 27871)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6633889079093933
    2. '(lambda' → logprob: -1.163388967514038
    3. ' lambda' → logprob: -3.163388967514038
    4. '   ' → logprob: -3.413388967514038
    5. '(' → logprob: -3.538388967514038
    6. '       ' → logprob: -3.663388967514038
    7. 'lambda' (adapté à ' lambda') → logprob: -3.788388967514038
    8. '(A' → logprob: -5.163388729095459
    9. '    ' → logprob: -5.663388729095459
    10. '[' → logprob: -6.538388729095459

Token 41: ' :' (ID: 712)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.23156918585300446
    2. 'x' → logprob: -2.356569290161133
    3. ' a' → logprob: -2.481569290161133
    4. 'a' → logprob: -3.731569290161133
    5. ' n' → logprob: -7.106569290161133
    6. ' A' → logprob: -7.106569290161133
    7. ' i' → logprob: -7.731569290161133
    8. ' b' → logprob: -7.731569290161133
    9. ' acc' → logprob: -8.356569290161133
    10. 'A' → logprob: -8.731569290161133

Token 42: ' (' (ID: 350)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.6165828704833984
    2. 'A' → logprob: -1.2415828704833984
    3. ' max' → logprob: -3.4915828704833984
    4. ' min' → logprob: -4.116582870483398
    5. ' (' → logprob: -4.116582870483398
    6. '(A' → logprob: -4.241582870483398
    7. 'max' → logprob: -4.491582870483398
    8. ' abs' → logprob: -4.491582870483398
    9. '0' → logprob: -4.866582870483398
    10. 'abs' → logprob: -4.991582870483398

Token 43: 'reduce' (ID: 49119)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.17853398621082306
    2. '0' → logprob: -3.6785340309143066
    3. 'a' → logprob: -3.8035340309143066
    4. ' A' → logprob: -3.8035340309143066
    5. 'x' → logprob: -3.9285340309143066
    6. 'i' → logprob: -4.303534030914307
    7. 'B' → logprob: -4.553534030914307
    8. 'max' → logprob: -4.678534030914307
    9. 'acc' → logprob: -5.553534030914307
    10. '(A' → logprob: -5.553534030914307

Token 44: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.11376175284385681
    2. '(lambda' → logprob: -2.3637616634368896
    3. '(' → logprob: -4.488761901855469
    4. '(operator' → logprob: -6.988761901855469
    5. ')' → logprob: -7.113761901855469
    6. ',' → logprob: -8.738761901855469
    7. ' (' → logprob: -8.988761901855469
    8. 'sub' → logprob: -10.363761901855469
    9. '(s' → logprob: -10.613761901855469
    10. '(abs' → logprob: -10.738761901855469

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017524510622024536
    2. ',A' → logprob: -4.517524719238281
    3. ',B' → logprob: -6.142524719238281
    4. ',[' → logprob: -6.392524719238281
    5. ' ,' → logprob: -6.642524719238281
    6. ',(' → logprob: -7.392524719238281
    7. '   ' → logprob: -9.392524719238281
    8. ',
' → logprob: -10.142524719238281
    9. '(' → logprob: -10.142524719238281
    10. 'A' → logprob: -10.392524719238281

Token 46: ' (' (ID: 350)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.6744519472122192
    2. '[' → logprob: -1.7994519472122192
    3. ' [' → logprob: -1.7994519472122192
    4. ' range' → logprob: -2.0494518280029297
    5. '(range' → logprob: -2.1744518280029297
    6. '[A' → logprob: -2.1744518280029297
    7. ')' → logprob: -3.5494518280029297
    8. 're' → logprob: -4.17445182800293
    9. ' (' → logprob: -4.54945182800293
    10. '(A' → logprob: -5.17445182800293

Token 47: 'A' (ID: 32)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.1919535994529724
    2. 'range' → logprob: -2.191953659057617
    3. 'acc' → logprob: -3.441953659057617
    4. '1' → logprob: -5.066953659057617
    5. 'A' → logprob: -5.441953659057617
    6. '(range' → logprob: -5.816953659057617
    7. '(is' → logprob: -5.941953659057617
    8. 're' → logprob: -6.316953659057617
    9. 'map' → logprob: -6.441953659057617
    10. '[i' → logprob: -6.441953659057617

Token 48: ',K' (ID: 107147)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3847603499889374
    2. ' for' → logprob: -2.2597603797912598
    3. '+B' → logprob: -3.0097603797912598
    4. ',B' → logprob: -3.5097603797912598
    5. ' -' → logprob: -3.6347603797912598
    6. ' +' → logprob: -4.00976037979126
    7. '-' → logprob: -4.13476037979126
    8. '+i' → logprob: -4.50976037979126
    9. '+' → logprob: -4.63476037979126
    10. ',)' → logprob: -4.75976037979126

Token 49: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -1.5474787950515747
    2. ',' → logprob: -2.047478675842285
    3. ' -' → logprob: -2.172478675842285
    4. '-' → logprob: -2.297478675842285
    5. ',B' → logprob: -2.297478675842285
    6. '+i' → logprob: -2.672478675842285
    7. '-i' → logprob: -2.797478675842285
    8. ' +' → logprob: -3.422478675842285
    9. '))),' → logprob: -3.672478675842285
    10. '+B' → logprob: -3.672478675842285

Token 50: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.654369592666626
    2. 'B' → logprob: -1.279369592666626
    3. ' lambda' → logprob: -2.654369592666626
    4. ' reduce' → logprob: -3.904369592666626
    5. ')' → logprob: -4.154369354248047
    6. ' A' → logprob: -4.154369354248047
    7. 'lambda' → logprob: -4.279369354248047
    8. 'reduce' → logprob: -4.404369354248047
    9. 'A' → logprob: -4.654369354248047
    10. ' K' → logprob: -4.654369354248047

Token 51: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.19566936790943146
    2. '),
' → logprob: -1.945669412612915
    3. ')' → logprob: -4.445669174194336
    4. '-' → logprob: -5.070669174194336
    5. ')),' → logprob: -5.820669174194336
    6. ' -' → logprob: -6.070669174194336
    7. '   ' → logprob: -6.195669174194336
    8. ' ),' → logprob: -6.445669174194336
    9. '),

' → logprob: -6.570669174194336
    10. '+' → logprob: -6.945669174194336

Token 52: '       ' (ID: 309)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.7425699234008789
    2. ' lambda' → logprob: -0.8675699234008789
    3. '),' → logprob: -3.117569923400879
    4. ' ),' → logprob: -3.742569923400879
    5. '   ' → logprob: -4.242569923400879
    6. '       ' → logprob: -5.242569923400879
    7. '    ' → logprob: -5.742569923400879
    8. '),
' → logprob: -5.992569923400879
    9. ' ),
' → logprob: -5.992569923400879
    10. '(lambda' → logprob: -6.117569923400879

Token 53: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.06233299523591995
    2. 'lambda' (adapté à ' lambda') → logprob: -2.812333106994629
    3. '(lambda' → logprob: -8.562333106994629
    4. '   ' → logprob: -9.437333106994629
    5. '    ' → logprob: -10.062333106994629
    6. '       ' → logprob: -10.687333106994629
    7. '=lambda' → logprob: -12.312333106994629
    8. ' None' → logprob: -12.437333106994629
    9. '```' → logprob: -13.062333106994629
    10. '      ' → logprob: -13.312333106994629

Token 54: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.05519627779722214
    2. ':' → logprob: -2.9301962852478027
    3. ' lambda' → logprob: -8.930195808410645
    4. ' ' → logprob: -9.555195808410645
    5. '=lambda' → logprob: -10.055195808410645
    6. 'lambda' → logprob: -10.930195808410645
    7. '    ' → logprob: -11.680195808410645
    8. '()' → logprob: -12.305195808410645
    9. ' )' → logprob: -12.555195808410645
    10. '   ' → logprob: -12.555195808410645

Token 55: ' (' (ID: 350)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.7993246912956238
    2. '(B' → logprob: -0.9243246912956238
    3. ' (' → logprob: -2.0493247509002686
    4. '(' → logprob: -5.1743245124816895
    5. '((' → logprob: -5.2993245124816895
    6. '(K' → logprob: -5.5493245124816895
    7. '(re' → logprob: -5.6743245124816895
    8. '(None' → logprob: -6.6743245124816895
    9. '(max' → logprob: -7.2993245124816895
    10. '(abs' → logprob: -7.5493245124816895

Token 56: '0' (ID: 15)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.789998471736908
    2. '(A' → logprob: -0.914998471736908
    3. ' A' → logprob: -2.5399985313415527
    4. ' (' → logprob: -2.9149985313415527
    5. '(' → logprob: -5.414998531341553
    6. ',' → logprob: -6.914998531341553
    7. '   ' → logprob: -7.039998531341553
    8. '(B' → logprob: -7.289998531341553
    9. ',A' → logprob: -7.289998531341553
    10. 'reduce' → logprob: -7.414998531341553

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012135679135099053
    2. ',K' → logprob: -7.876213550567627
    3. ' ,' → logprob: -8.251214027404785
    4. ',B' → logprob: -8.251214027404785
    5. ',A' → logprob: -8.626214027404785
    6. '   ' → logprob: -10.001214027404785
    7. '),' → logprob: -10.251214027404785
    8. '    ' → logprob: -11.876214027404785
    9. '       ' → logprob: -12.626214027404785
    10. ')' → logprob: -12.626214027404785

Token 58: ' list' (ID: 1562)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.1840903759002686
    2. ' B' → logprob: -1.1840903759002686
    3. 'reduce' → logprob: -2.0590903759002686
    4. ' max' → logprob: -2.3090903759002686
    5. ' reduce' → logprob: -2.5590903759002686
    6. 'max' → logprob: -2.6840903759002686
    7. '0' → logprob: -5.684090614318848
    8. ' ' → logprob: -6.184090614318848
    9. ')' → logprob: -6.309090614318848
    10. 'K' → logprob: -6.684090614318848

Token 59: '(is' (ID: 16171)
  Prédit: '(is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.34693217277526855
    2. '(range' → logprob: -1.3469321727752686
    3. '(acc' → logprob: -3.7219321727752686
    4. '(' → logprob: -5.846932411193848
    5. '(filter' → logprob: -6.096932411193848
    6. 'is' → logprob: -6.721932411193848
    7. 'acc' → logprob: -7.221932411193848
    8. 'range' → logprob: -8.096932411193848
    9. '(re' → logprob: -8.346932411193848
    10. ')' → logprob: -8.346932411193848

Token 60: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.00033200893085449934
    2. 'slice' → logprob: -8.37533187866211
    3. 'ice' → logprob: -10.00033187866211
    4. 'ce' → logprob: -10.75033187866211
    5. 'lace' → logprob: -10.87533187866211
    6. 'n' → logprob: -13.37533187866211
    7. 'lices' → logprob: -13.62533187866211
    8. '_slice' → logprob: -13.62533187866211
    9. '```' → logprob: -13.62533187866211
    10. 'licing' → logprob: -13.75033187866211

Token 61: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.0005309910629875958
    2. '(' → logprob: -8.375531196594238
    3. '(ac' → logprob: -9.375531196594238
    4. '(f' → logprob: -9.625531196594238
    5. ')' → logprob: -10.250531196594238
    6. '(lambda' → logprob: -10.250531196594238
    7. '(A' → logprob: -11.000531196594238
    8. 'acc' → logprob: -11.250531196594238
    9. ')(' → logprob: -11.875531196594238
    10. '	acc' → logprob: -12.125531196594238

Token 62: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.0017224266193807125
    2. 'om' → logprob: -7.00172233581543
    3. 'um' → logprob: -7.25172233581543
    4. 'ulate' → logprob: -9.62672233581543
    5. 'umul' → logprob: -10.62672233581543
    6. 'umu' → logprob: -13.12672233581543
    7. 'cum' → logprob: -13.37672233581543
    8. 'ul' → logprob: -13.50172233581543
    9. 'uminate' → logprob: -14.25172233581543
    10. 'umal' → logprob: -14.62672233581543

Token 63: '([-' (ID: 99080)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.5927194952964783
    2. '(lambda' → logprob: -0.9677194952964783
    3. '(sub' → logprob: -3.467719554901123
    4. '(' → logprob: -4.467719554901123
    5. '([' → logprob: -4.592719554901123
    6. '(B' → logprob: -5.717719554901123
    7. '(A' → logprob: -5.842719554901123
    8. '(str' → logprob: -6.342719554901123
    9. '(acc' → logprob: -6.342719554901123
    10. '(re' → logprob: -6.717719554901123

Token 64: 'K' (ID: 42)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3791702687740326
    2. 'B' → logprob: -1.754170298576355
    3. 'A' → logprob: -3.1291701793670654
    4. 'K' → logprob: -3.6291701793670654
    5. '2' → logprob: -4.3791704177856445
    6. 'sub' → logprob: -4.8791704177856445
    7. '(' → logprob: -5.0041704177856445
    8. '0' → logprob: -5.2541704177856445
    9. 'b' → logprob: -5.3791704177856445
    10. ')' → logprob: -5.5041704177856445

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6469246745109558
    2. ']*' → logprob: -1.5219247341156006
    3. ',A' → logprob: -2.6469247341156006
    4. ']' → logprob: -3.7719247341156006
    5. ' for' → logprob: -4.0219244956970215
    6. ',B' → logprob: -4.1469244956970215
    7. ' +' → logprob: -4.1469244956970215
    8. '+i' → logprob: -4.5219244956970215
    9. '*i' → logprob: -4.5219244956970215
    10. ']+' → logprob: -4.6469244956970215

Token 66: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -1.6016995906829834
    2. '0' → logprob: -1.8516995906829834
    3. ' B' → logprob: -1.8516995906829834
    4. 'B' → logprob: -1.9766995906829834
    5. 'A' → logprob: -2.3516995906829834
    6. ' ' → logprob: -2.3516995906829834
    7. '-' → logprob: -2.8516995906829834
    8. '1' → logprob: -3.4766995906829834
    9. ' -' → logprob: -3.6016995906829834
    10. '*' → logprob: -4.7266998291015625

Token 67: ',' (ID: 11)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '],' → logprob: -0.3333803415298462
    2. '-K' → logprob: -2.5833802223205566
    3. ']),' → logprob: -3.2083802223205566
    4. '+' → logprob: -3.5833802223205566
    5. '])),' → logprob: -3.5833802223205566
    6. ' -' → logprob: -3.8333802223205566
    7. '+B' → logprob: -4.333380222320557
    8. ']' → logprob: -4.583380222320557
    9. ' +' → logprob: -4.583380222320557
    10. '-' → logprob: -4.583380222320557

Token 68: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.5032742619514465
    2. 'B' → logprob: -1.1282742023468018
    3. '-' → logprob: -3.8782742023468018
    4. '-B' → logprob: -4.003274440765381
    5. ' -' → logprob: -4.628274440765381
    6. ' ' → logprob: -5.003274440765381
    7. '0' → logprob: -5.503274440765381
    8. '-K' → logprob: -6.003274440765381
    9. ' K' → logprob: -6.128274440765381
    10. '1' → logprob: -7.003274440765381

Token 69: ']),' (ID: 19560)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.4357141852378845
    2. ']),' → logprob: -1.1857142448425293
    3. '])),' → logprob: -3.6857142448425293
    4. '),' → logprob: -4.685714244842529
    5. ']))' → logprob: -5.810714244842529
    6. '-' → logprob: -6.185714244842529
    7. ' ],' → logprob: -6.560714244842529
    8. ']' → logprob: -6.810714244842529
    9. '-K' → logprob: -6.935714244842529
    10. '+' → logprob: -7.310714244842529

Token 70: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5663716793060303
    2. '3' → logprob: -1.1913716793060303
    3. '1' → logprob: -2.1913716793060303
    4. ' ' → logprob: -5.191371917724609
    5. '4' → logprob: -5.316371917724609
    6. 'None' → logprob: -6.066371917724609
    7. 'K' → logprob: -6.691371917724609
    8. '0' → logprob: -7.316371917724609
    9. '5' → logprob: -7.566371917724609
    10. '6' → logprob: -8.06637191772461

Token 71: '))' (ID: 915)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0349590927362442
    2. '))),' → logprob: -4.034959316253662
    3. '))' → logprob: -4.659959316253662
    4. ')' → logprob: -5.284959316253662
    5. '),' → logprob: -6.784959316253662
    6. '))))' → logprob: -8.034958839416504
    7. ')),' → logprob: -8.284958839416504
    8. '))),
' → logprob: -8.534958839416504
    9. ')))),' → logprob: -9.284958839416504
    10. ')));' → logprob: -9.784958839416504

Token 72: '[-' (ID: 17503)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07876672595739365
    2. ')),' → logprob: -3.0787668228149414
    3. ')' → logprob: -3.8287668228149414
    4. ')),
' → logprob: -5.328766822814941
    5. '))
' → logprob: -6.828766822814941
    6. '),' → logprob: -7.078766822814941
    7. ')))' → logprob: -7.578766822814941
    8. '       ' → logprob: -8.953766822814941
    9. '),
' → logprob: -9.203766822814941
    10. '   ' → logprob: -9.578766822814941

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2019873410463333
    2. '2' → logprob: -1.701987385749817
    3. '3' → logprob: -7.701987266540527
    4. ' ' → logprob: -10.389487266540527
    5. 'K' → logprob: -11.014487266540527
    6. '0' → logprob: -11.514487266540527
    7. '4' → logprob: -11.701987266540527
    8. '])' → logprob: -11.701987266540527
    9. ')' → logprob: -11.764487266540527
    10. '-' → logprob: -12.014487266540527

Token 74: ']),
' (ID: 34147)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.8052292466163635
    2. ')),' → logprob: -1.1802291870117188
    3. ')),
' → logprob: -1.6802291870117188
    4. ')' → logprob: -2.9302291870117188
    5. '),' → logprob: -6.055229187011719
    6. '))
' → logprob: -6.805229187011719
    7. ')))' → logprob: -7.180229187011719
    8. '),
' → logprob: -7.430229187011719
    9. ')),
' → logprob: -7.680229187011719
    10. '))),' → logprob: -8.430229187011719

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02925662323832512
    2. '   ' → logprob: -4.029256820678711
    3. ')' → logprob: -5.029256820678711
    4. ',' → logprob: -7.029256820678711
    5. 'lambda' → logprob: -7.029256820678711
    6. '0' → logprob: -7.154256820678711
    7. '),' → logprob: -7.279256820678711
    8. ']' → logprob: -7.529256820678711
    9. ',
' → logprob: -9.279256820678711
    10. ' lambda' → logprob: -9.404256820678711

Token 76: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' (adapté à ' lambda') → logprob: -0.5994449257850647
    2. ' lambda' → logprob: -0.8494449257850647
    3. '       ' → logprob: -3.97444486618042
    4. '   ' → logprob: -5.72444486618042
    5. ']' → logprob: -7.34944486618042
    6. '(lambda' → logprob: -9.099445343017578
    7. ' ' → logprob: -9.224445343017578
    8. '0' → logprob: -9.724445343017578
    9. ' None' → logprob: -9.849445343017578
    10. '    ' → logprob: -10.224445343017578

Token 77: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.01828455924987793
    2. ':' → logprob: -4.018284797668457
    3. ' ' → logprob: -9.268284797668457
    4. '  ' → logprob: -11.518284797668457
    5. '-' → logprob: -12.393284797668457
    6. '+' → logprob: -12.768284797668457
    7. ' ' → logprob: -12.768284797668457
    8. ' :
' → logprob: -13.393284797668457
    9. '0' → logprob: -13.455784797668457
    10. ' ()' → logprob: -13.830784797668457

Token 78: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.05437198653817177
    2. '(A' → logprob: -3.4293720722198486
    3. '(B' → logprob: -4.5543718338012695
    4. '(' → logprob: -5.9293718338012695
    5. ' ((' → logprob: -6.1793718338012695
    6. '(K' → logprob: -7.1793718338012695
    7. ' ' → logprob: -7.4293718338012695
    8. '((' → logprob: -7.6793718338012695
    9. '(lambda' → logprob: -7.6793718338012695
    10. '(max' → logprob: -7.6793718338012695

Token 79: '0' (ID: 15)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.46621543169021606
    2. ' A' → logprob: -2.2162153720855713
    3. '0' → logprob: -2.8412153720855713
    4. '(A' → logprob: -2.8412153720855713
    5. 'B' → logprob: -2.9662153720855713
    6. 'max' → logprob: -3.9662153720855713
    7. ' (' → logprob: -4.09121561050415
    8. 'K' → logprob: -4.21621561050415
    9. ' max' → logprob: -4.71621561050415
    10. ' B' → logprob: -4.96621561050415

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011594036914175376
    2. ' ,' → logprob: -10.250116348266602
    3. ',B' → logprob: -10.500116348266602
    4. ',K' → logprob: -11.250116348266602
    5. '),' → logprob: -11.375116348266602
    6. ',
' → logprob: -11.375116348266602
    7. '+' → logprob: -12.375116348266602
    8. ',

' → logprob: -13.000116348266602
    9. ')' → logprob: -13.125116348266602
    10. ',A' → logprob: -13.500116348266602

Token 81: '0' (ID: 15)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -1.256181001663208
    2. ' A' → logprob: -1.631181001663208
    3. 'B' → logprob: -2.006181001663208
    4. ' max' → logprob: -2.631181001663208
    5. 'A' → logprob: -2.756181001663208
    6. ' list' → logprob: -2.881181001663208
    7. 'max' → logprob: -3.631181001663208
    8. '0' → logprob: -3.756181001663208
    9. ' K' → logprob: -3.756181001663208
    10. ' ' → logprob: -4.006180763244629

Token 82: ')
' (ID: 446)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.3802184462547302
    2. ')' → logprob: -1.255218505859375
    3. '),
' → logprob: -3.505218505859375
    4. '   ' → logprob: -7.630218505859375
    5. '       ' → logprob: -8.505218505859375
    6. '))' → logprob: -8.880218505859375
    7. ' ),' → logprob: -9.505218505859375
    8. ')
' → logprob: -9.505218505859375
    9. ' )' → logprob: -10.005218505859375
    10. '),
' → logprob: -10.005218505859375

Token 83: '   ' (ID: 271)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.242240771651268
    2. '   ' → logprob: -1.9922407865524292
    3. ',' → logprob: -2.6172406673431396
    4. '       ' → logprob: -6.242240905761719
    5. ')' → logprob: -6.617240905761719
    6. ',
' → logprob: -6.742240905761719
    7. ' ]' → logprob: -8.117240905761719
    8. '],' → logprob: -8.242240905761719
    9. ')]' → logprob: -8.367240905761719
    10. ']
' → logprob: -8.992240905761719

Token 84: ' ]
' (ID: 10213)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03762504458427429
    2. '   ' → logprob: -3.5376250743865967
    3. ',' → logprob: -5.537624835968018
    4. ')' → logprob: -6.912624835968018
    5. ' ]' → logprob: -7.162624835968018
    6. ']

' → logprob: -7.287624835968018
    7. ']
' (adapté à ' ]
') → logprob: -7.287624835968018
    8. ')]' → logprob: -8.412625312805176
    9. ',
' → logprob: -8.787625312805176
    10. '       ' → logprob: -9.037625312805176

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1892277002334595
    2. '[' → logprob: -1.3142277002334595
    3. ']' → logprob: -1.3142277002334595
    4. ')' → logprob: -3.18922758102417
    5. '[
' → logprob: -3.31422758102417
    6. 'if' → logprob: -4.31422758102417
    7. ',' → logprob: -4.43922758102417
    8. '<|end|>' → logprob: -4.68922758102417
    9. ':' → logprob: -4.81422758102417
    10. '    
' → logprob: -5.18922758102417

Token 86: ' idx' (ID: 14016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9853042364120483
    2. ']' → logprob: -1.6103042364120483
    3. 'if' → logprob: -1.7353042364120483
    4. ')' → logprob: -2.485304355621338
    5. ' if' → logprob: -3.485304355621338
    6. 'return' → logprob: -3.610304355621338
    7. 'for' → logprob: -3.860304355621338
    8. 'result' → logprob: -3.860304355621338
    9. 'def' → logprob: -4.610304355621338
    10. '[' → logprob: -4.735304355621338

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1797523945569992
    2. '=' → logprob: -1.8047523498535156
    3. ' ' → logprob: -12.679752349853516
    4. '=int' → logprob: -13.304752349853516
    5. ',' → logprob: -14.054752349853516
    6. ')' → logprob: -15.054752349853516
    7. 'ex' → logprob: -15.054752349853516
    8. 'x' → logprob: -15.679752349853516
    9. ' =
' → logprob: -15.679752349853516
    10. 's' → logprob: -16.054752349853516

Token 88: ' min' (ID: 1349)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.048594355583191
    2. ' (' → logprob: -1.673594355583191
    3. ' ' → logprob: -1.923594355583191
    4. ' min' → logprob: -2.1735944747924805
    5. ' A' → logprob: -3.4235944747924805
    6. ' int' → logprob: -3.4235944747924805
    7. '(A' → logprob: -3.7985944747924805
    8. ' K' → logprob: -4.0485944747924805
    9. ' abs' → logprob: -4.0485944747924805
    10. 'min' → logprob: -4.1735944747924805

Token 89: '(re' (ID: 8178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1999915838241577
    2. '(K' → logprob: -1.3249915838241577
    3. '((' → logprob: -1.6999915838241577
    4. '(A' → logprob: -2.3249917030334473
    5. '(max' → logprob: -2.4499917030334473
    6. '(abs' → logprob: -3.0749917030334473
    7. '(len' → logprob: -4.449991703033447
    8. '(B' → logprob: -5.199991703033447
    9. '(((' → logprob: -6.824991703033447
    10. '(sum' → logprob: -7.449991703033447

Token 90: 'duce' (ID: 21375)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8255375623703003
    2. 's' → logprob: -1.2005375623703003
    3. 'n' → logprob: -1.7005375623703003
    4. 'g' → logprob: -4.57553768157959
    5. 'f' → logprob: -4.57553768157959
    6. 'm' → logprob: -4.82553768157959
    7. 'nd' → logprob: -5.32553768157959
    8. 'K' → logprob: -5.45053768157959
    9. ')' → logprob: -5.82553768157959
    10. 'len' → logprob: -5.95053768157959

Token 91: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5915753841400146
    2. '(sub' → logprob: -1.0915753841400146
    3. '(lambda' → logprob: -2.2165753841400146
    4. '(len' → logprob: -7.216575622558594
    5. 'sub' → logprob: -8.091575622558594
    6. '(
' → logprob: -8.216575622558594
    7. '(operator' → logprob: -8.216575622558594
    8. '(int' → logprob: -9.591575622558594
    9. '<|end|>' → logprob: -10.466575622558594
    10. '(abs' → logprob: -10.591575622558594

Token 92: ' x' (ID: 1215)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.3595244586467743
    2. ' sub' → logprob: -2.2345244884490967
    3. '(lambda' → logprob: -2.8595244884490967
    4. '<|end|>' → logprob: -2.8595244884490967
    5. 'lambda' → logprob: -3.2345244884490967
    6. 'sub' → logprob: -4.484524250030518
    7. ' ' → logprob: -4.859524250030518
    8. ',' → logprob: -4.984524250030518
    9. '=lambda' → logprob: -5.609524250030518
    10. ' ,' → logprob: -5.984524250030518

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007487599737942219
    2. ' ,' → logprob: -5.632487773895264
    3. ',x' → logprob: -5.632487773895264
    4. ',int' → logprob: -10.132487297058105
    5. ',
' → logprob: -10.382487297058105
    6. ',n' → logprob: -10.382487297058105
    7. ',A' → logprob: -10.507487297058105
    8. ',y' → logprob: -10.757487297058105
    9. ',index' → logprob: -11.007487297058105
    10. ',k' → logprob: -11.132487297058105

Token 94: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.6992519497871399
    2. ' lambda' → logprob: -1.3242518901824951
    3. 'y' → logprob: -1.5742518901824951
    4. 'lambda' → logprob: -3.574251890182495
    5. ' ' → logprob: -7.324252128601074
    6. 'x' → logprob: -8.074252128601074
    7. ' x' → logprob: -8.699252128601074
    8. ' idx' → logprob: -8.824252128601074
    9. 'idx' → logprob: -9.449252128601074
    10. '  ' → logprob: -9.824252128601074

Token 95: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04021956026554108
    2. ',' → logprob: -3.66521954536438
    3. ' :' → logprob: -4.415219783782959
    4. ':x' → logprob: -7.540219783782959
    5. ',x' → logprob: -7.665219783782959
    6. ',y' → logprob: -9.2902193069458
    7. ':
' → logprob: -9.4152193069458
    8. ' ,' → logprob: -9.5402193069458
    9. 'x' → logprob: -9.6652193069458
    10. '=lambda' → logprob: -9.6652193069458

Token 96: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.29363125562667847
    2. ' x' → logprob: -1.5436313152313232
    3. 'lambda' → logprob: -4.293631076812744
    4. ' lambda' → logprob: -4.418631076812744
    5. ' max' → logprob: -5.043631076812744
    6. 'sub' → logprob: -5.918631076812744
    7. ' sub' → logprob: -5.918631076812744
    8. 'max' → logprob: -6.293631076812744
    9. '(lambda' → logprob: -8.543631553649902
    10. ' int' → logprob: -8.668631553649902

Token 97: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7959218621253967
    2. ',' → logprob: -1.420921802520752
    3. ' +' → logprob: -2.295921802520752
    4. ' if' → logprob: -2.420921802520752
    5. '(lambda' → logprob: -4.170921802520752
    6. ',y' → logprob: -4.295921802520752
    7. '-' → logprob: -4.295921802520752
    8. '+y' → logprob: -4.545921802520752
    9. 'y' → logprob: -4.795921802520752
    10. '=lambda' → logprob: -5.170921802520752

Token 98: ' (' (ID: 350)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3137578070163727
    2. ' y' → logprob: -1.4387577772140503
    3. '1' → logprob: -3.81375789642334
    4. ' ' → logprob: -5.56375789642334
    5. ' (' → logprob: -6.56375789642334
    6. '(y' → logprob: -6.56375789642334
    7. 'int' → logprob: -7.31375789642334
    8. ' int' → logprob: -7.43875789642334
    9. 'abs' → logprob: -7.43875789642334
    10. ' abs' → logprob: -8.31375789642334

Token 99: 'K' (ID: 42)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.48899027705192566
    2. '1' → logprob: -1.363990306854248
    3. ' y' → logprob: -2.613990306854248
    4. ' ' → logprob: -4.238990306854248
    5. '(y' → logprob: -4.738990306854248
    6. 'int' → logprob: -5.113990306854248
    7. ' (' → logprob: -5.488990306854248
    8. 'A' → logprob: -5.738990306854248
    9. ' int' → logprob: -5.863990306854248
    10. '(A' → logprob: -6.113990306854248

Token 100: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6670059561729431
    2. '>' → logprob: -1.417006015777588
    3. ' >=' → logprob: -2.292006015777588
    4. '>=' → logprob: -3.167006015777588
    5. ' ==' → logprob: -3.792006015777588
    6. ' ' → logprob: -4.417006015777588
    7. '-' → logprob: -4.542006015777588
    8. '==' → logprob: -4.542006015777588
    9. ' y' → logprob: -4.792006015777588
    10. ' <' → logprob: -4.917006015777588

Token 101: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10091913491487503
    2. ' y' → logprob: -2.975919246673584
    3. 'A' → logprob: -3.600919246673584
    4. '0' → logprob: -4.850919246673584
    5. 'x' → logprob: -5.600919246673584
    6. ' A' → logprob: -6.850919246673584
    7. ' ' → logprob: -7.225919246673584
    8. 'B' → logprob: -7.600919246673584
    9. '(' → logprob: -7.600919246673584
    10. '(A' → logprob: -7.600919246673584

Token 102: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04582327976822853
    2. '),' → logprob: -4.170823097229004
    3. ',y' → logprob: -4.795823097229004
    4. ',A' → logprob: -5.295823097229004
    5. ',K' → logprob: -5.420823097229004
    6. ',B' → logprob: -5.420823097229004
    7. ' ,' → logprob: -5.545823097229004
    8. ',),' → logprob: -8.045823097229004
    9. ')' → logprob: -8.170823097229004
    10. 'A' → logprob: -8.420823097229004

Token 103: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6632508635520935
    2. ' [' → logprob: -0.7882508635520935
    3. '[A' → logprob: -4.288250923156738
    4. '[B' → logprob: -5.038250923156738
    5. 'range' → logprob: -6.038250923156738
    6. ' range' → logprob: -6.288250923156738
    7. ' (' → logprob: -6.663250923156738
    8. '[K' → logprob: -7.413250923156738
    9. 'B' → logprob: -7.663250923156738
    10. '(B' → logprob: -7.663250923156738

Token 104: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.42698559165000916
    2. '0' → logprob: -1.8019856214523315
    3. 'a' → logprob: -2.926985502243042
    4. 'x' → logprob: -3.551985502243042
    5. 'B' → logprob: -3.801985502243042
    6. 'i' → logprob: -4.051985740661621
    7. 'case' → logprob: -4.551985740661621
    8. 'y' → logprob: -5.051985740661621
    9. ' A' → logprob: -5.051985740661621
    10. 'b' → logprob: -5.176985740661621

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2311924546957016
    2. ',B' → logprob: -1.7311924695968628
    3. ',K' → logprob: -4.356192588806152
    4. ' ,' → logprob: -4.981192588806152
    5. ',A' → logprob: -5.481192588806152
    6. ',i' → logprob: -5.856192588806152
    7. ']' → logprob: -7.731192588806152
    8. ',y' → logprob: -8.106192588806152
    9. ']+' → logprob: -8.231192588806152
    10. ',x' → logprob: -8.356192588806152

Token 106: ' A' (ID: 355)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1428861916065216
    2. ' B' → logprob: -2.017886161804199
    3. 'A' → logprob: -9.0178861618042
    4. ' A' → logprob: -10.3928861618042
    5. ' ' → logprob: -10.7678861618042
    6. '0' → logprob: -11.7678861618042
    7. 'K' → logprob: -11.8928861618042
    8. '   ' → logprob: -12.5178861618042
    9. '(B' → logprob: -12.8303861618042
    10. '	B' → logprob: -12.9553861618042

Token 107: '+B' (ID: 185895)
  Prédit: '+B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+B' → logprob: -0.24813523888587952
    2. '+' → logprob: -1.7481352090835571
    3. ' +' → logprob: -3.9981353282928467
    4. ',' → logprob: -4.248135089874268
    5. '-' → logprob: -4.623135089874268
    6. ',B' → logprob: -6.873135089874268
    7. 'B' → logprob: -7.248135089874268
    8. '+b' → logprob: -7.873135089874268
    9. '-B' → logprob: -8.123135566711426
    10. ' -' → logprob: -9.123135566711426

Token 108: ']),' (ID: 19560)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4541325569152832
    2. ']),' → logprob: -1.7041325569152832
    3. '],' → logprob: -2.079132556915283
    4. ',A' → logprob: -4.204132556915283
    5. ']))' → logprob: -4.329132556915283
    6. ',K' → logprob: -4.704132556915283
    7. ' ,' → logprob: -5.329132556915283
    8. ']' → logprob: -5.954132556915283
    9. ',B' → logprob: -6.079132556915283
    10. '])' → logprob: -6.329132556915283

Token 109: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.18464207649230957
    2. ' ' → logprob: -1.9346420764923096
    3. '2' → logprob: -4.6846418380737305
    4. 'len' → logprob: -4.6846418380737305
    5. ' len' → logprob: -5.1846418380737305
    6. '1' → logprob: -11.30964183807373
    7. ' K' → logprob: -11.93464183807373
    8. ')' → logprob: -12.05964183807373
    9. '   ' → logprob: -12.05964183807373
    10. '  ' → logprob: -12.18464183807373

Token 110: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.28727826476097107
    2. '3' → logprob: -1.7872782945632935
    3. 'len' → logprob: -2.662278175354004
    4. ' ' → logprob: -4.787278175354004
    5. ' len' → logprob: -5.537278175354004
    6. '   ' → logprob: -9.412278175354004
    7. '1' → logprob: -9.912278175354004
    8. '(len' → logprob: -11.287278175354004
    9. '           ' → logprob: -11.474778175354004
    10. ')' → logprob: -11.537278175354004

Token 111: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.787507714354433e-05
    2. '+' → logprob: -10.37504768371582
    3. ')+' → logprob: -12.00004768371582
    4. ')
' → logprob: -12.12504768371582
    5. ' )' → logprob: -13.12504768371582
    6. '))' → logprob: -13.50004768371582
    7. ')

' → logprob: -14.50004768371582
    8. '),' → logprob: -14.87504768371582
    9. ')))' → logprob: -15.75004768371582
    10. ')`' → logprob: -16.00004768371582

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7229388952255249
    2. '
' → logprob: -1.597938895225525
    3. 'return' → logprob: -1.972938895225525
    4. ')' → logprob: -3.2229390144348145
    5. '    
' → logprob: -3.3479390144348145
    6. '\n' → logprob: -3.5979390144348145
    7. ' return' → logprob: -3.8479390144348145
    8. ' ' → logprob: -4.4729390144348145
    9. '' → logprob: -5.3479390144348145
    10. '	return' → logprob: -5.3479390144348145

Token 113: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6579331755638123
    2. ')' → logprob: -1.407933235168457
    3. '   ' → logprob: -1.532933235168457
    4. ' return' → logprob: -4.407933235168457
    5. ')
' → logprob: -5.907933235168457
    6. 'result' → logprob: -6.782933235168457
    7. '(' → logprob: -6.907933235168457
    8. '    
' → logprob: -7.282933235168457
    9. '
' → logprob: -7.282933235168457
    10. '()' → logprob: -7.532933235168457

Token 114: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.0005542247672565281
    2. ' cases' → logprob: -7.500554084777832
    3. 'case' → logprob: -13.875554084777832
    4. 'cas' → logprob: -15.375554084777832
    5. 'list' → logprob: -17.75055503845215
    6. '(c' → logprob: -17.87555503845215
    7. '_cases' → logprob: -18.12555503845215
    8. '[c' → logprob: -18.50055503845215
    9. '   ' → logprob: -18.75055503845215
    10. 'Cases' → logprob: -18.75055503845215

Token 115: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.02673855423927307
    2. '[' → logprob: -3.6517386436462402
    3. '[index' → logprob: -9.276738166809082
    4. '```' → logprob: -9.276738166809082
    5. '(idx' → logprob: -9.651738166809082
    6. '<|end|>' → logprob: -10.026738166809082
    7. '()[' → logprob: -10.151738166809082
    8. '[id' → logprob: -11.026738166809082
    9. 'idx' → logprob: -11.276738166809082
    10. '[
' → logprob: -11.651738166809082

Token 116: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18082697689533234
    2. ']()' → logprob: -1.805827021598816
    3. '()' → logprob: -7.6808271408081055
    4. '())' → logprob: -7.8058271408081055
    5. ')(' → logprob: -9.055827140808105
    6. ' )' → logprob: -10.555827140808105
    7. ')]' → logprob: -11.055827140808105
    8. ']' → logprob: -11.180827140808105
    9. '）' → logprob: -11.555827140808105
    10. '`()' → logprob: -11.805827140808105

Token 117: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018676597625017166
    2. '()[' → logprob: -4.0186767578125
    3. '(' → logprob: -7.8936767578125
    4. '()
' → logprob: -9.8936767578125
    5. '().' → logprob: -10.3936767578125
    6. '().__' → logprob: -11.0186767578125
    7. '()(' → logprob: -11.7686767578125
    8. '[' → logprob: -11.8936767578125
    9. '()['' → logprob: -11.8936767578125
    10. '()]' → logprob: -12.0186767578125

Token 118: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11451280862092972
    2. '(' → logprob: -2.2395129203796387
    3. '(
' → logprob: -7.739512920379639
    4. '()' → logprob: -7.864512920379639
    5. '[' → logprob: -8.48951244354248
    6. ':' → logprob: -8.61451244354248
    7. '#' → logprob: -9.36451244354248
    8. '```' → logprob: -9.61451244354248
    9. '\n' → logprob: -10.11451244354248
    10. ' ' → logprob: -10.23951244354248

Token 119: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016350116580724716
    2. '(f' → logprob: -4.141350269317627
    3. '(print' → logprob: -8.391349792480469
    4. '('' → logprob: -10.141349792480469
    5. '(
' → logprob: -11.266349792480469
    6. '("' → logprob: -12.016349792480469
    7. '("("' → logprob: -12.141349792480469
    8. ' (' → logprob: -12.141349792480469
    9. '((' → logprob: -12.766349792480469
    10. '()' → logprob: -13.141349792480469

Token 120: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0059648193418979645
    2. ' fancy' → logprob: -5.130964756011963
    3. '(f' → logprob: -10.505965232849121
    4. ')' → logprob: -12.255965232849121
    5. 'Fancy' → logprob: -13.630965232849121
    6. ' f' → logprob: -13.755965232849121
    7. '(' → logprob: -15.005965232849121
    8. ' ' → logprob: -15.380965232849121
    9. ' fanc' → logprob: -15.380965232849121
    10. '[f' → logprob: -15.630965232849121

Token 121: 'ancy' (ID: 8830)
  Prédit: 'ancy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ancy' → logprob: -1.5048530030981055e-06
    2. 'anc' → logprob: -14.375001907348633
    3. 'an' → logprob: -14.875001907348633
    4. 'ant' → logprob: -15.875001907348633
    5. 'ancybox' → logprob: -16.250001907348633
    6. 'a' → logprob: -16.750001907348633
    7. 'ancies' → logprob: -17.000001907348633
    8. '
' → logprob: -17.625001907348633
    9. 'ency' → logprob: -17.875001907348633
    10. '**' → logprob: -18.000001907348633

Token 122: '_logic' (ID: 131254)
  Prédit: '_logic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_logic' → logprob: -2.45848218582978e-06
    2. '_log' → logprob: -13.00000286102295
    3. 'logic' → logprob: -16.250001907348633
    4. '_lo' → logprob: -17.375001907348633
    5. '_' → logprob: -17.625001907348633
    6. '_logits' → logprob: -18.250001907348633
    7. ' logic' → logprob: -18.375001907348633
    8. '_l' → logprob: -18.875001907348633
    9. '_logo' → logprob: -19.000001907348633
    10. 'Logic' → logprob: -19.875001907348633

Token 123: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0011729635298252106
    2. '(' → logprob: -6.75117301940918
    3. ')' → logprob: -14.12617301940918
    4. ')(' → logprob: -14.37617301940918
    5. '(
' → logprob: -14.50117301940918
    6. '((' → logprob: -15.00117301940918
    7. '(B' → logprob: -15.50117301940918
    8. ' (' → logprob: -15.87617301940918
    9. '(`' → logprob: -15.87617301940918
    10. '(AST' → logprob: -17.12617301940918

Token 124: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5764756798744202
    2. ',B' → logprob: -0.8264756798744202
    3. ' ,' → logprob: -7.951475620269775
    4. ',K' → logprob: -9.076476097106934
    5. ',b' → logprob: -9.951476097106934
    6. ',
' → logprob: -11.951476097106934
    7. 'B' → logprob: -12.701476097106934
    8. ',M' → logprob: -13.451476097106934
    9. ',S' → logprob: -13.576476097106934
    10. ')' → logprob: -13.701476097106934

Token 125: ',K' (ID: 107147)
  Prédit: ',K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',K' → logprob: -0.02348107285797596
    2. ',' → logprob: -3.8984811305999756
    3. '))' → logprob: -6.1484808921813965
    4. 'K' → logprob: -7.3984808921813965
    5. ')' → logprob: -8.898481369018555
    6. ',k' → logprob: -10.898481369018555
    7. ' ,' → logprob: -11.398481369018555
    8. '),' → logprob: -12.148481369018555
    9. ' K' → logprob: -12.898481369018555
    10. '(K' → logprob: -13.148481369018555

Token 126: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07889506965875626
    2. '))' → logprob: -2.578895092010498
    3. ')))' → logprob: -13.07889461517334
    4. '())' → logprob: -13.57889461517334
    5. ')
' → logprob: -14.32889461517334
    6. ' )' → logprob: -15.20389461517334
    7. '()' → logprob: -15.32889461517334
    8. ')`' → logprob: -15.32889461517334
    9. ')")' → logprob: -15.82889461517334
    10. '))
' → logprob: -16.078895568847656


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 124
Tokens correctement prédits (1ère position, stricte): 48
Tokens correctement prédits (1ère position, avec adaptation): 50
Tokens correctement prédits (top 10): 89
Précision stricte (1ère position): 38.71%
Précision adaptée (1ère position): 40.32%
Précision (top 10): 71.77%
================================================================================
