================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:22:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
P = 998244353
A = pow(10, 18, P)
N = int(input())

def calc():
    import collections
    totoro = lambda x: {G[y]:None for y in X[x]}
    MeowMex = lambda used: next((i for i in range(N+1) if i not in used), 0)
    M = int(input())
    X = [[] for _ in range(N)]
    for _ in range(M):
        a,b = (int(z) for z in input().split())
        x_idx = N-min(a,b)
        y_idx = N-max(a,b)
        X[x_idx].append(y_idx)
    G = [0]*N
    for idx in range(N):
        used = totoro(idx)
        G[idx] = MeowMex(used)
    hat = [0]*1024
    z = 1
    lst = list(range(N-1,-1,-1))
    for wish in lst:
        z = z*A%P
        hat[G[wish]] = (hat[G[wish]]+z)%P
    return hat

H1 = calc()
H2 = calc()
H3 = calc()

answer = 0
jrange = list(range(1024))
for aaa in jrange:
    if not H1[aaa]: continue
    for bbb in jrange:
        if H2[bbb]==0: continue
        answer = (answer + H1[aaa]*H2[bbb]*H3[aaa^bbb])%P

print(answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'P' (ID: 47)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: '998' (ID: 34589)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25824445486068726
    2. '[]' → logprob: -2.508244514465332
    3. '{' → logprob: -2.758244514465332
    4. '{}' → logprob: -3.758244514465332
    5. 'np' → logprob: -4.383244514465332
    6. '(' → logprob: -4.883244514465332
    7. '0' → logprob: -5.008244514465332
    8. '```' → logprob: -5.008244514465332
    9. '10' → logprob: -5.633244514465332
    10. '"' → logprob: -6.008244514465332

Token 4: '244' (ID: 25291)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2123401165008545
    2. '+' → logprob: -2.0873401165008545
    3. '.' → logprob: -3.5873401165008545
    4. '**' → logprob: -3.7123401165008545
    5. '\' → logprob: -5.962340354919434
    6. '```' → logprob: -5.962340354919434
    7. ';' → logprob: -6.462340354919434
    8. '#' → logprob: -6.587340354919434
    9. ')' → logprob: -6.712340354919434
    10. ',' → logprob: -6.962340354919434

Token 5: '353' (ID: 32996)
  Prédit: ';'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ';' → logprob: -1.1653460264205933
    2. '.' → logprob: -1.2903460264205933
    3. '4' → logprob: -2.665346145629883
    4. '!' → logprob: -2.915346145629883
    5. '9' → logprob: -3.165346145629883
    6. '*' → logprob: -3.290346145629883
    7. ',' → logprob: -3.540346145629883
    8. '=' → logprob: -3.540346145629883
    9. '```' → logprob: -3.665346145629883
    10. '%' → logprob: -3.915346145629883

Token 6: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.18479153513908386
    2. '**' → logprob: -2.1847915649414062
    3. '+' → logprob: -3.1847915649414062
    4. '```' → logprob: -5.434791564941406
    5. '\' → logprob: -6.434791564941406
    6. '#' → logprob: -6.559791564941406
    7. '\n' → logprob: -6.559791564941406
    8. '=' → logprob: -6.684791564941406
    9. ' **' → logprob: -7.059791564941406
    10. '.' → logprob: -7.309791564941406

Token 7: 'A' (ID: 32)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3754606544971466
    2. '**' → logprob: -1.5004606246948242
    3. '+' → logprob: -2.750460624694824
    4. '#' → logprob: -5.375460624694824
    5. '\n' → logprob: -5.375460624694824
    6. '```' → logprob: -5.500460624694824
    7. '\' → logprob: -5.875460624694824
    8. ',' → logprob: -6.000460624694824
    9. '_' → logprob: -6.250460624694824
    10. ' **' → logprob: -6.875460624694824

Token 8: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12685367465019226
    2. '=' → logprob: -2.8768537044525146
    3. ' =' → logprob: -3.0018537044525146
    4. ' ' → logprob: -5.8768534660339355
    5. '.' → logprob: -6.0018534660339355
    6. ',' → logprob: -6.1268534660339355
    7. '[i' → logprob: -6.3768534660339355
    8. '_' → logprob: -6.6268534660339355
    9. '+' → logprob: -7.1268534660339355
    10. '*' → logprob: -8.251853942871094

Token 9: ' pow' (ID: 9779)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.4018395245075226
    2. '[' → logprob: -1.7768394947052002
    3. ' []' → logprob: -2.2768394947052
    4. ' ' → logprob: -3.0268394947052
    5. '[]' → logprob: -4.901839733123779
    6. '0' → logprob: -6.401839733123779
    7. '[int' → logprob: -7.026839733123779
    8. '<|end|>' → logprob: -8.276839256286621
    9. ' [[]' → logprob: -9.276839256286621
    10. '1' → logprob: -9.401839256286621

Token 10: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003703758353367448
    2. '(P' → logprob: -6.378703594207764
    3. '(A' → logprob: -6.503703594207764
    4. '(pow' → logprob: -8.003704071044922
    5. '(a' → logprob: -9.753704071044922
    6. '(
' → logprob: -9.753704071044922
    7. ')' → logprob: -11.378704071044922
    8. '(base' → logprob: -11.878704071044922
    9. '(`' → logprob: -12.128704071044922
    10. '(p' → logprob: -12.128704071044922

Token 11: '10' (ID: 702)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8211403489112854
    2. 'A' → logprob: -0.9461403489112854
    3. '10' → logprob: -2.6961402893066406
    4. 'P' → logprob: -3.1961402893066406
    5. '3' → logprob: -4.446140289306641
    6. ')' → logprob: -4.446140289306641
    7. 'a' → logprob: -5.071140289306641
    8. '998' → logprob: -5.196140289306641
    9. '9' → logprob: -5.321140289306641
    10. '5' → logprob: -5.321140289306641

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0369405522942543
    2. ' ,' → logprob: -3.411940574645996
    3. ',P' → logprob: -6.036940574645996
    4. ',n' → logprob: -8.286940574645996
    5. '10' → logprob: -8.286940574645996
    6. '9' → logprob: -9.786940574645996
    7. ' ' → logprob: -9.911940574645996
    8. ')' → logprob: -10.036940574645996
    9. 'P' → logprob: -10.661940574645996
    10. '0' → logprob: -10.661940574645996

Token 13: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0024241716600954533
    2. '6' → logprob: -6.502424240112305
    3. ' ' → logprob: -7.752424240112305
    4. '7' → logprob: -8.877424240112305
    5. '18' → logprob: -8.877424240112305
    6. '8' → logprob: -9.002424240112305
    7. '5' → logprob: -10.502424240112305
    8. '10' → logprob: -10.627424240112305
    9. '100' → logprob: -11.877424240112305
    10. '12' → logprob: -11.877424240112305

Token 14: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.003733687801286578
    2. '6' → logprob: -6.5037336349487305
    3. '18' → logprob: -7.0037336349487305
    4. '10' → logprob: -8.37873363494873
    5. ' ' → logprob: -8.50373363494873
    6. '7' → logprob: -8.50373363494873
    7. '8' → logprob: -8.62873363494873
    8. '5' → logprob: -9.00373363494873
    9. '12' → logprob: -9.37873363494873
    10. '100' → logprob: -9.37873363494873

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0105424914509058
    2. ')' → logprob: -4.885542392730713
    3. ' ,' → logprob: -6.635542392730713
    4. '**' → logprob: -7.135542392730713
    5. '**,' → logprob: -8.010542869567871
    6. '```' → logprob: -8.135542869567871
    7. '`,' → logprob: -10.010542869567871
    8. '%' → logprob: -10.135542869567871
    9. ' ' → logprob: -10.885542869567871
    10. '18' → logprob: -11.385542869567871

Token 16: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0038763161282986403
    2. ' P' → logprob: -6.253876209259033
    3. '998' → logprob: -6.253876209259033
    4. ' ' → logprob: -11.128876686096191
    5. ')' → logprob: -12.378876686096191
    6. '999' → logprob: -12.628876686096191
    7. '`' → logprob: -15.503876686096191
    8. '	P' → logprob: -16.128875732421875
    9. '```' → logprob: -16.503875732421875
    10. '(P' → logprob: -17.003875732421875

Token 17: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. '```' → logprob: -14.50000286102295
    3. '))' → logprob: -14.87500286102295
    4. '**' → logprob: -15.12500286102295
    5. ')`' → logprob: -15.12500286102295
    6. '`)' → logprob: -15.37500286102295
    7. ' )' → logprob: -15.50000286102295
    8. '')' → logprob: -15.87500286102295
    9. ')
' → logprob: -16.250001907348633
    10. '),' → logprob: -16.375001907348633

Token 18: 'N' (ID: 45)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6929513812065125
    2. '+' → logprob: -1.5679514408111572
    3. ')' → logprob: -2.3179514408111572
    4. '%' → logprob: -2.5679514408111572
    5. '#' → logprob: -2.8179514408111572
    6. '-' → logprob: -3.6929514408111572
    7. '**' → logprob: -4.567951202392578
    8. '\' → logprob: -5.942951202392578
    9. '```' → logprob: -6.067951202392578
    10. '(' → logprob: -6.067951202392578

Token 19: ' =' (ID: 314)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.9733214378356934
    2. '+' → logprob: -1.4733214378356934
    3. ')' → logprob: -2.4733214378356934
    4. '**' → logprob: -2.5983214378356934
    5. '[' → logprob: -2.7233214378356934
    6. ' ' → logprob: -3.5983214378356934
    7. '#' → logprob: -3.7233214378356934
    8. '*' → logprob: -3.8483214378356934
    9. '=' → logprob: -3.8483214378356934
    10. ' **' → logprob: -3.9733214378356934

Token 20: ' int' (ID: 677)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2321346402168274
    2. ' ' → logprob: -2.3571345806121826
    3. '100' → logprob: -2.7321345806121826
    4. '1' → logprob: -4.357134819030762
    5. '18' → logprob: -5.107134819030762
    6. '998' → logprob: -5.232134819030762
    7. '0' → logprob: -5.482134819030762
    8. 'int' → logprob: -5.607134819030762
    9. '5' → logprob: -6.107134819030762
    10. '2' → logprob: -6.232134819030762

Token 21: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004337310325354338
    2. ''' → logprob: -6.254337310791016
    3. '('' → logprob: -6.504337310791016
    4. ')' → logprob: -8.379337310791016
    5. '`' → logprob: -9.254337310791016
    6. '```' → logprob: -9.254337310791016
    7. '()' → logprob: -9.379337310791016
    8. '(
' → logprob: -9.504337310791016
    9. '<|end|>' → logprob: -9.504337310791016
    10. '(input' → logprob: -9.879337310791016

Token 22: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09033141285181046
    2. '(' → logprob: -3.2153313159942627
    3. '())' → logprob: -3.5903313159942627
    4. '()' → logprob: -4.090331554412842
    5. '`)' → logprob: -7.340331554412842
    6. '))' → logprob: -7.965331554412842
    7. '')' → logprob: -8.340331077575684
    8. '('' → logprob: -8.590331077575684
    9. '")' → logprob: -8.840331077575684
    10. '`' → logprob: -9.590331077575684

Token 23: 'def' (ID: 1314)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5215610861778259
    2. 'a' → logprob: -2.3965611457824707
    3. 'res' → logprob: -2.3965611457824707
    4. 'print' → logprob: -2.6465611457824707
    5. 'ans' → logprob: -2.8965611457824707
    6. ')' → logprob: -4.021561145782471
    7. 's' → logprob: -4.146561145782471
    8. 'r' → logprob: -4.396561145782471
    9. 'x' → logprob: -4.396561145782471
    10. 'for' → logprob: -4.646561145782471

Token 24: ' calc' (ID: 25691)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.6234872937202454
    2. ' f' → logprob: -2.2484872341156006
    3. ' pow' → logprob: -2.3734872341156006
    4. ' main' → logprob: -2.6234872341156006
    5. ' count' → logprob: -2.7484872341156006
    6. ' m' → logprob: -3.9984872341156006
    7. ' factorial' → logprob: -3.9984872341156006
    8. ' ' → logprob: -4.62348747253418
    9. ' a' → logprob: -4.74848747253418
    10. ' calculate' → logprob: -4.87348747253418

Token 25: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0483417510986328
    2. '_factor' → logprob: -1.2983417510986328
    3. '_sum' → logprob: -2.048341751098633
    4. '_' → logprob: -2.673341751098633
    5. 'ulate' → logprob: -3.173341751098633
    6. '_pow' → logprob: -3.548341751098633
    7. '_power' → logprob: -4.298341751098633
    8. '_square' → logprob: -4.798341751098633
    9. ')' → logprob: -4.923341751098633
    10. '_value' → logprob: -5.298341751098633

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20180106163024902
    2. '    ' → logprob: -2.326801061630249
    3. ' ' → logprob: -2.701801061630249
    4. ')' → logprob: -5.201801300048828
    5. '(' → logprob: -6.201801300048828
    6. '<|end|>' → logprob: -6.451801300048828
    7. '\' → logprob: -6.826801300048828
    8. 'a' → logprob: -6.951801300048828
    9. '    
' → logprob: -7.326801300048828
    10. ' 
' → logprob: -7.326801300048828

Token 27: ' import' (ID: 1588)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.6086958646774292
    2. ' ' → logprob: -1.9836958646774292
    3. ' r' → logprob: -2.1086959838867188
    4. '   ' → logprob: -2.4836959838867188
    5. ' result' → logprob: -2.4836959838867188
    6. 'result' → logprob: -2.7336959838867188
    7. 'x' → logprob: -2.9836959838867188
    8. ' 
' → logprob: -3.2336959838867188
    9. ' x' → logprob: -3.4836959838867188
    10. 'a' → logprob: -3.7336959838867188

Token 28: ' collections' (ID: 22690)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.7238673567771912
    2. ' math' → logprob: -0.7238673567771912
    3. 'sys' → logprob: -3.848867416381836
    4. 'math' → logprob: -4.848867416381836
    5. ' itertools' → logprob: -7.473867416381836
    6. ' ' → logprob: -8.473867416381836
    7. ' functools' → logprob: -9.098867416381836
    8. ' collections' → logprob: -9.598867416381836
    9. 'collections' → logprob: -10.348867416381836
    10. ' sym' → logprob: -10.723867416381836

Token 29: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9614277482032776
    2. 'deque' → logprob: -1.4614276885986328
    3. '   ' → logprob: -2.461427688598633
    4. 'c' → logprob: -2.961427688598633
    5. 'D' → logprob: -2.961427688598633
    6. '
' → logprob: -3.211427688598633
    7. '_' → logprob: -4.086427688598633
    8. '_counter' → logprob: -4.211427688598633
    9. 'dq' → logprob: -4.211427688598633
    10. 'C' → logprob: -4.711427688598633

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42414095997810364
    2. '_' → logprob: -3.1741409301757812
    3. '    ' → logprob: -3.1741409301757812
    4. 'deque' → logprob: -3.1741409301757812
    5. 'd' → logprob: -3.5491409301757812
    6. ' defaultdict' → logprob: -4.174140930175781
    7. ' ' → logprob: -4.299140930175781
    8. 'Counter' → logprob: -4.299140930175781
    9. '```' → logprob: -4.674140930175781
    10. 'c' → logprob: -4.674140930175781

Token 31: ' tot' (ID: 2417)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7942430973052979
    2. 'c' → logprob: -1.7942430973052979
    3. 'dp' → logprob: -2.669243097305298
    4. ' counter' → logprob: -3.044243097305298
    5. '   ' → logprob: -3.169243097305298
    6. 'counter' → logprob: -3.419243097305298
    7. ' dp' → logprob: -3.419243097305298
    8. ' d' → logprob: -3.544243097305298
    9. 'deque' → logprob: -4.044242858886719
    10. 'D' → logprob: -4.419242858886719

Token 32: 'oro' (ID: 8527)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.016082582995295525
    2. '=' → logprob: -4.891082763671875
    3. ' =' → logprob: -4.891082763671875
    4. 'als' → logprob: -7.641082763671875
    5. 'a' → logprob: -9.016082763671875
    6. 'l' → logprob: -10.391082763671875
    7. '```' → logprob: -10.516082763671875
    8. '_count' → logprob: -10.891082763671875
    9. 'ally' → logprob: -10.891082763671875
    10. '[' → logprob: -10.891082763671875

Token 33: ' =' (ID: 314)
  Prédit: '.Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Counter' → logprob: -0.7431380152702332
    2. 'l' → logprob: -1.868138074874878
    3. ' =' → logprob: -2.493138074874878
    4. '=' → logprob: -2.618138074874878
    5. 'Counter' → logprob: -2.743138074874878
    6. 'r' → logprob: -3.618138074874878
    7. ' ' → logprob: -3.618138074874878
    8. '_counter' → logprob: -4.118137836456299
    9. 'deque' → logprob: -4.243137836456299
    10. 'u' → logprob: -4.993137836456299

Token 34: ' lambda' (ID: 27871)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.011057846248149872
    2. 'collections' → logprob: -4.5110578536987305
    3. ' ' → logprob: -12.76105785369873
    4. ' []' → logprob: -13.13605785369873
    5. '.collections' → logprob: -13.51105785369873
    6. ' collection' → logprob: -13.51105785369873
    7. ' defaultdict' → logprob: -14.26105785369873
    8. ' [' → logprob: -14.38605785369873
    9. '[]' → logprob: -14.88605785369873
    10. '[' → logprob: -15.26105785369873

Token 35: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9140340685844421
    2. 'x' → logprob: -1.539034128189087
    3. ' s' → logprob: -2.164034128189087
    4. ' n' → logprob: -2.664034128189087
    5. 's' → logprob: -3.039034128189087
    6. 'n' → logprob: -3.414034128189087
    7. ' a' → logprob: -3.539034128189087
    8. 'a' → logprob: -3.914034128189087
    9. ':' → logprob: -4.914033889770508
    10. ' c' → logprob: -5.039033889770508

Token 36: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03219243139028549
    2. ' :' → logprob: -4.032192230224609
    3. ':x' → logprob: -4.907192230224609
    4. ',' → logprob: -5.157192230224609
    5. ',x' → logprob: -8.03219223022461
    6. ',:' → logprob: -8.90719223022461
    7. '=' → logprob: -10.40719223022461
    8. ':,' → logprob: -10.53219223022461
    9. ' ,' → logprob: -10.65719223022461
    10. '_:' → logprob: -10.90719223022461

Token 37: ' {' (ID: 354)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9204199314117432
    2. ' collections' → logprob: -1.6704199314117432
    3. 'collections' → logprob: -1.7954199314117432
    4. 'x' → logprob: -1.9204199314117432
    5. ' (' → logprob: -3.170419931411743
    6. ' ' → logprob: -4.295419692993164
    7. '[' → logprob: -5.170419692993164
    8. '(' → logprob: -5.170419692993164
    9. '(x' → logprob: -5.420419692993164
    10. ' sum' → logprob: -5.795419692993164

Token 38: 'G' (ID: 38)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5891597270965576
    2. 'x' → logprob: -0.9641597270965576
    3. 'i' → logprob: -3.7141597270965576
    4. 'c' → logprob: -3.9641597270965576
    5. '**' → logprob: -5.589159965515137
    6. ' x' → logprob: -5.714159965515137
    7. '   ' → logprob: -5.964159965515137
    8. ' k' → logprob: -6.339159965515137
    9. '}' → logprob: -6.339159965515137
    10. 'n' → logprob: -6.964159965515137

Token 39: '[y' (ID: 34551)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029448548331856728
    2. ':' → logprob: -5.154448509216309
    3. '(x' → logprob: -5.529448509216309
    4. ':x' → logprob: -5.529448509216309
    5. ' x' → logprob: -6.029448509216309
    6. '   ' → logprob: -6.029448509216309
    7. 'i' → logprob: -6.779448509216309
    8. '}' → logprob: -6.904448509216309
    9. '[x' → logprob: -7.029448509216309
    10. ')x' → logprob: -7.716948509216309

Token 40: ']:' (ID: 12433)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42743173241615295
    2. ']' → logprob: -1.9274317026138306
    3. ':x' → logprob: -2.92743182182312
    4. 'x' → logprob: -3.05243182182312
    5. ']:' → logprob: -3.80243182182312
    6. ':y' → logprob: -3.80243182182312
    7. 'for' → logprob: -4.177431583404541
    8. '+' → logprob: -4.427431583404541
    9. 'y' → logprob: -5.302431583404541
    10. ' for' → logprob: -5.427431583404541

Token 41: 'None' (ID: 8505)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12341621518135071
    2. 'G' → logprob: -2.8734161853790283
    3. 'y' → logprob: -3.9984161853790283
    4. 'max' → logprob: -3.9984161853790283
    5. '(x' → logprob: -5.123416423797607
    6. '0' → logprob: -5.623416423797607
    7. '(G' → logprob: -6.123416423797607
    8. 'i' → logprob: -6.498416423797607
    9. ' x' → logprob: -6.498416423797607
    10. '(max' → logprob: -6.873416423797607

Token 42: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12809062004089355
    2. 'for' → logprob: -2.1280906200408936
    3. ' ' → logprob: -7.753090858459473
    4. ' y' → logprob: -8.878090858459473
    5. '()' → logprob: -9.003090858459473
    6. '   ' → logprob: -9.253090858459473
    7. '	for' → logprob: -9.628090858459473
    8. '    ' → logprob: -9.753090858459473
    9. 'y' → logprob: -9.753090858459473
    10. '(y' → logprob: -9.878090858459473

Token 43: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.7266452312469482
    2. 'y' → logprob: -0.8516452312469482
    3. 'x' → logprob: -2.8516452312469482
    4. ' x' → logprob: -4.101645469665527
    5. ' range' → logprob: -4.476645469665527
    6. 'range' → logprob: -5.601645469665527
    7. ' ' → logprob: -9.039145469665527
    8. ' xrange' → logprob: -9.976645469665527
    9. 'A' → logprob: -10.039145469665527
    10. '	y' → logprob: -10.351645469665527

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013473725877702236
    2. 'in' → logprob: -4.5134735107421875
    3. ' x' → logprob: -7.1384735107421875
    4. 'x' → logprob: -8.138473510742188
    5. ' y' → logprob: -8.138473510742188
    6. ' range' → logprob: -8.388473510742188
    7. 'y' → logprob: -8.513473510742188
    8. ' ' → logprob: -8.513473510742188
    9. 'range' → logprob: -8.763473510742188
    10. '<|end|>' → logprob: -9.263473510742188

Token 45: ' X' (ID: 2127)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6427101492881775
    2. 'x' → logprob: -1.0177102088928223
    3. ' range' → logprob: -2.2677102088928223
    4. ' x' → logprob: -4.767710208892822
    5. 'A' → logprob: -8.142709732055664
    6. ' A' → logprob: -9.517709732055664
    7. 'G' → logprob: -9.892709732055664
    8. 'collections' → logprob: -10.142709732055664
    9. ' xrange' → logprob: -10.142709732055664
    10. '[' → logprob: -10.267709732055664

Token 46: '[x' (ID: 17295)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.33326485753059387
    2. 'range' → logprob: -2.2082648277282715
    3. ' for' → logprob: -3.5832648277282715
    4. 'for' → logprob: -3.5832648277282715
    5. ' if' → logprob: -3.9582648277282715
    6. '(x' → logprob: -4.3332648277282715
    7. ' range' → logprob: -4.4582648277282715
    8. '}' → logprob: -4.5832648277282715
    9. ']' → logprob: -4.5832648277282715
    10. ' x' → logprob: -4.7082648277282715

Token 47: ']}
' (ID: 55354)
  Prédit: ']}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']}' → logprob: -0.06744472682476044
    2. '}' → logprob: -3.0674448013305664
    3. ']' → logprob: -4.317444801330566
    4. ')}' → logprob: -6.192444801330566
    5. '])' → logprob: -6.942444801330566
    6. '}}' → logprob: -7.192444801330566
    7. '[' → logprob: -7.567444801330566
    8. ' }' → logprob: -8.317444801330566
    9. '}]' → logprob: -8.567444801330566
    10. '})' → logprob: -8.817444801330566

Token 48: '   ' (ID: 271)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.005571082700043917
    2. ' }' → logprob: -6.130570888519287
    3. '   ' → logprob: -6.505570888519287
    4. ',' → logprob: -7.380570888519287
    5. ' ' → logprob: -8.005571365356445
    6. '[' → logprob: -8.255571365356445
    7. '(' → logprob: -8.755571365356445
    8. '  ' → logprob: -8.755571365356445
    9. '}
' → logprob: -9.630571365356445
    10. '       ' → logprob: -10.005571365356445

Token 49: ' Me' (ID: 2896)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6087954640388489
    2. '   ' → logprob: -1.108795404434204
    3. ')' → logprob: -3.483795404434204
    4. '[' → logprob: -3.733795404434204
    5. '(x' → logprob: -4.233795642852783
    6. ' ' → logprob: -4.358795642852783
    7. '}' → logprob: -4.358795642852783
    8. '  ' → logprob: -4.608795642852783
    9. '()' → logprob: -5.233795642852783
    10. ':' → logprob: -5.608795642852783

Token 50: 'ow' (ID: 384)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9821681380271912
    2. 'mu' → logprob: -2.732168197631836
    3. 'n' → logprob: -2.982168197631836
    4. 'G' → logprob: -3.232168197631836
    5. 'M' → logprob: -3.482168197631836
    6. 'ru' → logprob: -3.607168197631836
    7. 'mo' → logprob: -3.669668197631836
    8. 'r' → logprob: -3.669668197631836
    9. 'ng' → logprob: -3.732168197631836
    10. 'ow' → logprob: -3.919668197631836

Token 51: 'Mex' (ID: 90647)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07665710896253586
    2. '=' → logprob: -2.9516570568084717
    3. ' ' → logprob: -5.576657295227051
    4. 's' → logprob: -6.201657295227051
    5. 'w' → logprob: -6.201657295227051
    6. 'a' → logprob: -6.701657295227051
    7. 't' → logprob: -6.826657295227051
    8. 'cat' → logprob: -6.826657295227051
    9. 'y' → logprob: -6.951657295227051
    10. '   ' → logprob: -7.201657295227051

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44004470109939575
    2. '=' → logprob: -1.315044641494751
    3. 'a' → logprob: -4.06504487991333
    4. 'i' → logprob: -4.44004487991333
    5. 't' → logprob: -4.69004487991333
    6. ' ' → logprob: -5.06504487991333
    7. 'o' → logprob: -5.44004487991333
    8. 's' → logprob: -5.56504487991333
    9. 'ow' → logprob: -5.81504487991333
    10. 'w' → logprob: -5.81504487991333

Token 53: ' lambda' (ID: 27871)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.32021835446357727
    2. 'collections' → logprob: -1.9452183246612549
    3. ' lambda' → logprob: -2.695218324661255
    4. 'lambda' → logprob: -4.195218563079834
    5. ' set' → logprob: -4.945218563079834
    6. ' []' → logprob: -5.195218563079834
    7. '[]' → logprob: -5.195218563079834
    8. ' len' → logprob: -5.570218563079834
    9. 'len' → logprob: -5.695218563079834
    10. ' [' → logprob: -5.695218563079834

Token 54: ' used' (ID: 2061)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.12785784900188446
    2. 'x' → logprob: -3.0028579235076904
    3. ' y' → logprob: -3.0028579235076904
    4. ' z' → logprob: -5.127857685089111
    5. ' s' → logprob: -5.877857685089111
    6. 'y' → logprob: -6.127857685089111
    7. ' G' → logprob: -6.127857685089111
    8. ' k' → logprob: -6.627857685089111
    9. ' a' → logprob: -7.127857685089111
    10. ' i' → logprob: -7.252857685089111

Token 55: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4114951491355896
    2. ',' → logprob: -1.7864952087402344
    3. ' :' → logprob: -1.9114952087402344
    4. ' ,' → logprob: -5.161495208740234
    5. ',y' → logprob: -5.661495208740234
    6. ',x' → logprob: -5.661495208740234
    7. 'x' → logprob: -6.536495208740234
    8. 'y' → logprob: -7.161495208740234
    9. ':x' → logprob: -7.161495208740234
    10. ' x' → logprob: -7.286495208740234

Token 56: ' next' (ID: 2613)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {' → logprob: -1.8828924894332886
    2. ' [' → logprob: -2.007892608642578
    3. '{' → logprob: -2.257892608642578
    4. ' used' → logprob: -2.507892608642578
    5. ' sum' → logprob: -2.882892608642578
    6. ' len' → logprob: -3.007892608642578
    7. ' all' → logprob: -3.007892608642578
    8. 'len' → logprob: -3.257892608642578
    9. ' (' → logprob: -3.507892608642578
    10. '[' → logprob: -3.507892608642578

Token 57: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.6688644289970398
    2. '(iter' → logprob: -1.2938644886016846
    3. '(x' → logprob: -2.5438644886016846
    4. '(' → logprob: -2.9188644886016846
    5. '(y' → logprob: -3.2938644886016846
    6. '(k' → logprob: -4.0438642501831055
    7. '(i' → logprob: -4.1688642501831055
    8. '(key' → logprob: -6.1688642501831055
    9. '(g' → logprob: -6.2938642501831055
    10. '(filter' → logprob: -6.6688642501831055

Token 58: 'i' (ID: 72)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.9509759545326233
    2. 'i' → logprob: -1.2009758949279785
    3. 'u' → logprob: -2.4509758949279785
    4. 'z' → logprob: -2.7009758949279785
    5. 'g' → logprob: -3.3259758949279785
    6. '(i' → logprob: -3.7009758949279785
    7. 'k' → logprob: -4.0759758949279785
    8. 'x' → logprob: -4.0759758949279785
    9. 'c' → logprob: -4.3259758949279785
    10. 'v' → logprob: -4.8259758949279785

Token 59: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.026370316743850708
    2. 'for' → logprob: -3.6513702869415283
    3. ' ' → logprob: -10.02637004852295
    4. '	for' → logprob: -11.27637004852295
    5. '  ' → logprob: -13.02637004852295
    6. ' i' → logprob: -13.40137004852295
    7. '   ' → logprob: -13.46387004852295
    8. '```' → logprob: -13.96387004852295
    9. '
' → logprob: -14.21387004852295
    10. '+' → logprob: -14.33887004852295

Token 60: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38795772194862366
    2. 'range' → logprob: -1.1379576921463013
    3. ' used' → logprob: -7.012957572937012
    4. 'used' → logprob: -9.262957572937012
    5. '(range' → logprob: -9.762957572937012
    6. '[' → logprob: -11.512957572937012
    7. ' ' → logprob: -11.887957572937012
    8. ' xrange' → logprob: -13.137957572937012
    9. '   ' → logprob: -13.387957572937012
    10. 'ran' → logprob: -13.637957572937012

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.27191948890686035
    2. ',' → logprob: -1.6469194889068604
    3. 'in' → logprob: -3.1469194889068604
    4. ',x' → logprob: -6.896919250488281
    5. ',y' → logprob: -8.396919250488281
    6. ',n' → logprob: -8.896919250488281
    7. ',i' → logprob: -9.146919250488281
    8. ' ,' → logprob: -9.396919250488281
    9. ',p' → logprob: -9.646919250488281
    10. 'not' → logprob: -9.896919250488281

Token 62: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5777385830879211
    2. ' range' → logprob: -0.8277385830879211
    3. 'used' → logprob: -7.0777387619018555
    4. ' used' → logprob: -7.2027387619018555
    5. '[' → logprob: -9.827738761901855
    6. ' ' → logprob: -10.702738761901855
    7. 'X' → logprob: -10.827738761901855
    8. '(range' → logprob: -10.827738761901855
    9. '   ' → logprob: -10.952738761901855
    10. ' xrange' → logprob: -11.265238761901855

Token 63: '(N' (ID: 10564)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.6291130185127258
    2. '(' → logprob: -1.254112958908081
    3. '(N' → logprob: -2.129112958908081
    4. 'len' → logprob: -4.25411319732666
    5. '(P' → logprob: -4.62911319732666
    6. '(n' → logprob: -5.00411319732666
    7. '   ' → logprob: -5.37911319732666
    8. '16' → logprob: -5.75411319732666
    9. '7' → logprob: -6.25411319732666
    10. ' len' → logprob: -6.37911319732666

Token 64: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006358877755701542
    2. ' if' → logprob: -5.381359100341797
    3. ' )' → logprob: -7.006359100341797
    4. 'if' → logprob: -7.381359100341797
    5. '+' → logprob: -9.006359100341797
    6. ' ' → logprob: -10.881359100341797
    7. '   ' → logprob: -11.006359100341797
    8. '))' → logprob: -11.131359100341797
    9. '-' → logprob: -11.256359100341797
    10. ' +' → logprob: -12.631359100341797

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006392880342900753
    2. ' ' → logprob: -5.256392955780029
    3. '2' → logprob: -7.006392955780029
    4. ')' → logprob: -10.006392478942871
    5. '-' → logprob: -10.131392478942871
    6. '3' → logprob: -10.506392478942871
    7. '7' → logprob: -10.506392478942871
    8. '6' → logprob: -11.443892478942871
    9. '+' → logprob: -11.631392478942871
    10. '4' → logprob: -11.818892478942871

Token 66: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2079906016588211
    2. ' if' → logprob: -1.7079906463623047
    3. 'if' → logprob: -5.207990646362305
    4. ' )' → logprob: -6.957990646362305
    5. '   ' → logprob: -9.582990646362305
    6. '+' → logprob: -10.957990646362305
    7. '))' → logprob: -11.207990646362305
    8. ' ' → logprob: -11.332990646362305
    9. '       ' → logprob: -13.082990646362305
    10. '    ' → logprob: -13.332990646362305

Token 67: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.012522722594439983
    2. 'if' → logprob: -4.3875226974487305
    3. ')' → logprob: -12.26252269744873
    4. '+' → logprob: -12.63752269744873
    5. '   ' → logprob: -13.13752269744873
    6. ' ' → logprob: -13.26252269744873
    7. '    ' → logprob: -15.26252269744873
    8. ' )' → logprob: -15.38752269744873
    9. '  ' → logprob: -16.262523651123047
    10. '),' → logprob: -16.387523651123047

Token 68: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.37460213899612427
    2. 'i' → logprob: -1.6246020793914795
    3. ' not' → logprob: -2.2496020793914795
    4. 'not' → logprob: -4.749602317810059
    5. ' used' → logprob: -6.999602317810059
    6. ' (' → logprob: -9.187102317810059
    7. '(i' → logprob: -9.312102317810059
    8. 'used' → logprob: -9.312102317810059
    9. '   ' → logprob: -10.124602317810059
    10. '(not' → logprob: -10.937102317810059

Token 69: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.02056220732629299
    2. 'not' → logprob: -3.895562171936035
    3. ')' → logprob: -11.895562171936035
    4. ' ' → logprob: -12.020562171936035
    5. ' no' → logprob: -13.520562171936035
    6. ' if' → logprob: -13.645562171936035
    7. '
' → logprob: -14.145562171936035
    8. 'if' → logprob: -14.395562171936035
    9. '   ' → logprob: -14.645562171936035
    10. '	not' → logprob: -14.895562171936035

Token 70: ' in' (ID: 306)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.09560598433017731
    2. ' in' → logprob: -2.4706060886383057
    3. 'used' → logprob: -5.095605850219727
    4. 'in' → logprob: -7.720605850219727
    5. '<|end|>' → logprob: -11.345605850219727
    6. ' to' → logprob: -11.595605850219727
    7. ' ' → logprob: -11.595605850219727
    8. ' not' → logprob: -12.220605850219727
    9. '_used' → logprob: -12.220605850219727
    10. ' seen' → logprob: -12.470605850219727

Token 71: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.16023285686969757
    2. ' used' → logprob: -1.9102329015731812
    3. '   ' → logprob: -13.035232543945312
    4. '.used' → logprob: -13.535232543945312
    5. 'us' → logprob: -13.910232543945312
    6. 'user' → logprob: -14.535232543945312
    7. ' ' → logprob: -14.660232543945312
    8. 'set' → logprob: -14.785232543945312
    9. 'use' → logprob: -15.160232543945312
    10. '{' → logprob: -15.347732543945312

Token 72: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0034733170177787542
    2. ' ),' → logprob: -5.753473281860352
    3. '()),' → logprob: -9.378473281860352
    4. ')),' → logprob: -9.503473281860352
    5. '))' → logprob: -10.253473281860352
    6. ')' → logprob: -10.503473281860352
    7. '   ' → logprob: -10.878473281860352
    8. ' ' → logprob: -11.253473281860352
    9. ' and' → logprob: -11.878473281860352
    10. '  ' → logprob: -12.128473281860352

Token 73: ' ' (ID: 220)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.11671120673418045
    2. 'None' → logprob: -2.366711139678955
    3. '0' → logprob: -5.366711139678955
    4. ' ' → logprob: -5.741711139678955
    5. ' -' → logprob: -6.366711139678955
    6. ' default' → logprob: -6.366711139678955
    7. ' N' → logprob: -6.366711139678955
    8. '-' → logprob: -7.116711139678955
    9. ' P' → logprob: -7.741711139678955
    10. 'N' → logprob: -7.741711139678955

Token 74: '0' (ID: 15)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.15416663885116577
    2. ' None' → logprob: -2.2791666984558105
    3. '0' → logprob: -4.1541666984558105
    4. 'i' → logprob: -5.0291666984558105
    5. 'N' → logprob: -5.4041666984558105
    6. '-' → logprob: -5.5291666984558105
    7. ' ' → logprob: -5.6541666984558105
    8. '   ' → logprob: -6.9041666984558105
    9. ' i' → logprob: -7.0291666984558105
    10. '  ' → logprob: -7.2791666984558105

Token 75: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004299540014471859
    2. ' )' → logprob: -8.5004301071167
    3. ')
' → logprob: -9.0004301071167
    4. '))' → logprob: -9.7504301071167
    5. ')

' → logprob: -10.2504301071167
    6. ')))' → logprob: -13.3754301071167
    7. ' if' → logprob: -13.6254301071167
    8. '())' → logprob: -13.7504301071167
    9. '   ' → logprob: -14.2504301071167
    10. 'if' → logprob: -14.2504301071167

Token 76: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' M' (ID: 391)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.0679032802581787
    2. ' used' → logprob: -1.5679032802581787
    3. '    
' → logprob: -2.4429032802581787
    4. '   ' → logprob: -2.6929032802581787
    5. ')' → logprob: -2.8179032802581787
    6. '
' → logprob: -3.3179032802581787
    7. ' ' → logprob: -3.5679032802581787
    8. '  
' → logprob: -3.8179032802581787
    9. 'used' → logprob: -4.067903518676758
    10. 'def' → logprob: -4.192903518676758

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1568184345960617
    2. 'e' → logprob: -2.406818389892578
    3. '=' → logprob: -3.656818389892578
    4. 'E' → logprob: -4.031818389892578
    5. ' ' → logprob: -6.281818389892578
    6. '  ' → logprob: -6.406818389892578
    7. '   ' → logprob: -7.031818389892578
    8. 'ex' → logprob: -7.156818389892578
    9. ',' → logprob: -7.344318389892578
    10. 'X' → logprob: -7.594318389892578

Token 79: ' int' (ID: 677)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.12562620639801025
    2. 'collections' → logprob: -2.5006260871887207
    3. ' {}' → logprob: -4.375626087188721
    4. ' [' → logprob: -4.625626087188721
    5. '{}' → logprob: -5.125626087188721
    6. '[' → logprob: -6.125626087188721
    7. ' []' → logprob: -6.750626087188721
    8. ' [{}' → logprob: -7.250626087188721
    9. ' ' → logprob: -7.375626087188721
    10. ' {' → logprob: -7.500626087188721

Token 80: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2829402685165405
    2. '(input' → logprob: -1.9079402685165405
    3. '(N' → logprob: -2.78294038772583
    4. '(len' → logprob: -4.15794038772583
    5. '(P' → logprob: -4.65794038772583
    6. '()' → logprob: -5.40794038772583
    7. '(pow' → logprob: -5.90794038772583
    8. '((' → logprob: -7.03294038772583
    9. '(M' → logprob: -7.40794038772583
    10. '('' → logprob: -7.65794038772583

Token 81: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00891436729580164
    2. '()' → logprob: -5.133914470672607
    3. '())
' → logprob: -5.883914470672607
    4. '()
' → logprob: -9.63391399383545
    5. '())

' → logprob: -9.75891399383545
    6. ')' → logprob: -11.00891399383545
    7. '(' → logprob: -11.13391399383545
    8. '())
' → logprob: -11.38391399383545
    9. ' ())' → logprob: -11.50891399383545
    10. '();)' → logprob: -12.00891399383545

Token 82: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -1.3995460271835327
    2. ')' → logprob: -1.5245460271835327
    3. ' X' → logprob: -2.8995461463928223
    4. ' G' → logprob: -3.0245461463928223
    5. 'G' → logprob: -3.1495461463928223
    6. ' ' → logprob: -3.2745461463928223
    7. ' used' → logprob: -3.4620461463928223
    8. 'S' → logprob: -3.8995461463928223
    9. 'B' → logprob: -4.024546146392822
    10. ' )' → logprob: -4.087046146392822

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05121387913823128
    2. '=' → logprob: -3.1762139797210693
    3. '[' → logprob: -4.92621374130249
    4. ',' → logprob: -9.051214218139648
    5. ' ' → logprob: -9.051214218139648
    6. '<|end|>' → logprob: -9.051214218139648
    7. 's' → logprob: -9.301214218139648
    8. '[]' → logprob: -9.676214218139648
    9. ')' → logprob: -9.676214218139648
    10. ' =[' → logprob: -9.801214218139648

Token 85: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.36801666021347046
    2. ' [' → logprob: -1.3680167198181152
    3. ' [[]' → logprob: -3.6180167198181152
    4. '[]' → logprob: -3.9930167198181152
    5. ' []' → logprob: -5.118016719818115
    6. '[int' → logprob: -7.743016719818115
    7. 'collections' → logprob: -8.368016242980957
    8. '[input' → logprob: -8.618016242980957
    9. '[list' → logprob: -8.743016242980957
    10. ' [{}' → logprob: -8.868016242980957

Token 86: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2524508237838745
    2. ' for' → logprob: -1.5024508237838745
    3. ']' → logprob: -8.002450942993164
    4. ')' → logprob: -9.752450942993164
    5. '   ' → logprob: -10.002450942993164
    6. ',' → logprob: -10.627450942993164
    7. '	for' → logprob: -10.752450942993164
    8. ' ' → logprob: -11.627450942993164
    9. '
' → logprob: -11.877450942993164
    10. '()' → logprob: -13.002450942993164

Token 87: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04237859696149826
    2. ' _' → logprob: -3.4173786640167236
    3. ' range' → logprob: -4.7923784255981445
    4. 'range' → logprob: -8.292378425598145
    5. ' in' → logprob: -9.667378425598145
    6. '_range' → logprob: -10.042378425598145
    7. ' ' → logprob: -10.542378425598145
    8. ' i' → logprob: -12.167378425598145
    9. 'i' → logprob: -12.917378425598145
    10. '_M' → logprob: -13.167378425598145

Token 88: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.42062997817993164
    2. 'range' → logprob: -1.1706299781799316
    3. ' in' → logprob: -3.6706299781799316
    4. '(range' → logprob: -5.045629978179932
    5. 'in' → logprob: -7.170629978179932
    6. '(' → logprob: -8.920629501342773
    7. 'i' → logprob: -9.170629501342773
    8. 's' → logprob: -9.545629501342773
    9. '(M' → logprob: -9.795629501342773
    10. 'x' → logprob: -10.545629501342773

Token 89: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2565595805644989
    2. ' range' → logprob: -1.5065596103668213
    3. '(range' → logprob: -5.381559371948242
    4. '(N' → logprob: -11.631559371948242
    5. '(' → logprob: -13.256559371948242
    6. '(M' → logprob: -13.381559371948242
    7. ' ' → logprob: -13.506559371948242
    8. ' xrange' → logprob: -13.631559371948242
    9. '	range' → logprob: -13.881559371948242
    10. ' (' → logprob: -14.006559371948242

Token 90: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.31551337242126465
    2. '(M' → logprob: -1.3155133724212646
    3. '(' → logprob: -6.440513610839844
    4. ' (' → logprob: -8.065513610839844
    5. 'M' → logprob: -8.440513610839844
    6. 'N' → logprob: -9.440513610839844
    7. '(n' → logprob: -11.940513610839844
    8. ' N' → logprob: -12.065513610839844
    9. ' M' → logprob: -12.190513610839844
    10. '((' → logprob: -12.315513610839844

Token 91: ')]
' (ID: 11587)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04370680823922157
    2. ')]' → logprob: -3.1687068939208984
    3. ' +' → logprob: -7.293706893920898
    4. ')' → logprob: -11.668706893920898
    5. '1' → logprob: -12.668706893920898
    6. ')]
' → logprob: -12.793706893920898
    7. ' )' → logprob: -13.043706893920898
    8. ')])' → logprob: -13.418706893920898
    9. ')]

' → logprob: -14.043706893920898
    10. '()+' → logprob: -14.418706893920898

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8339622616767883
    2. '<|end|>' → logprob: -1.2089622020721436
    3. '    
' → logprob: -2.2089622020721436
    4. '
' → logprob: -3.9589622020721436
    5. '  
' → logprob: -3.9589622020721436
    6. 'for' → logprob: -3.9589622020721436
    7. ')' → logprob: -4.083962440490723
    8. ' ' → logprob: -4.208962440490723
    9. ' 
' → logprob: -4.208962440490723
    10. '' → logprob: -4.708962440490723

Token 93: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1849948763847351
    2. ' for' → logprob: -1.8099949359893799
    3. '<|end|>' → logprob: -6.184994697570801
    4. ')' → logprob: -6.309994697570801
    5. '   ' → logprob: -7.809994697570801
    6. '
' → logprob: -7.934994697570801
    7. ' ' → logprob: -9.1849946975708
    8. 'x' → logprob: -9.8099946975708
    9. '```' → logprob: -9.8099946975708
    10. ' 
' → logprob: -9.8099946975708

Token 94: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.01422556210309267
    2. '_' → logprob: -4.264225482940674
    3. ' i' → logprob: -9.764225959777832
    4. ' ' → logprob: -12.514225959777832
    5. '_i' → logprob: -15.389225959777832
    6. ' ' → logprob: -15.514225959777832
    7. 'i' → logprob: -15.889225959777832
    8. ' __' → logprob: -16.514225006103516
    9. ' _
' → logprob: -16.889225006103516
    10. ' ‌' → logprob: -17.264225006103516

Token 95: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3139380216598511
    2. 'in' → logprob: -1.313938021659851
    3. 'range' → logprob: -7.688938140869141
    4. 'n' → logprob: -9.93893814086914
    5. ' ' → logprob: -9.93893814086914
    6. 'i' → logprob: -10.43893814086914
    7. ' _' → logprob: -11.06393814086914
    8. 's' → logprob: -11.31393814086914
    9. '_' → logprob: -11.43893814086914
    10. 'import' → logprob: -12.18893814086914

Token 96: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0017086135921999812
    2. ' range' → logprob: -6.376708507537842
    3. '(range' → logprob: -13.001708984375
    4. ' ' → logprob: -13.501708984375
    5. 'input' → logprob: -14.501708984375
    6. ')' → logprob: -14.876708984375
    7. '	range' → logprob: -15.126708984375
    8. 'r' → logprob: -15.251708984375
    9. '  ' → logprob: -15.501708984375
    10. '[' → logprob: -15.751708984375

Token 97: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -1.9027791495318525e-05
    2. 'M' → logprob: -11.625019073486328
    3. ' (' → logprob: -11.875019073486328
    4. '(' → logprob: -13.250019073486328
    5. ' M' → logprob: -13.625019073486328
    6. '	M' → logprob: -17.500019073486328
    7. ' ' → logprob: -18.375019073486328
    8. '(m' → logprob: -18.375019073486328
    9. '(
' → logprob: -19.875019073486328
    10. '   ' → logprob: -19.875019073486328

Token 98: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08795131742954254
    2. ' ):' → logprob: -2.587951421737671
    3. ')' → logprob: -5.212951183319092
    4. '):
' → logprob: -6.087951183319092
    5. ' )' → logprob: -6.837951183319092
    6. ' ):
' → logprob: -8.58795166015625
    7. ':' → logprob: -11.08795166015625
    8. ' ' → logprob: -11.83795166015625
    9. ',' → logprob: -12.21295166015625
    10. '):

' → logprob: -12.71295166015625

Token 99: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5923760533332825
    2. 'a' (adapté à ' a') → logprob: -1.3423759937286377
    3. ' u' → logprob: -1.8423759937286377
    4. ' a' → logprob: -3.9673759937286377
    5. 'x' → logprob: -5.342376232147217
    6. 'i' → logprob: -6.842376232147217
    7. 's' → logprob: -6.967376232147217
    8. 'l' → logprob: -8.092375755310059
    9. ' x' → logprob: -8.217375755310059
    10. ' s' → logprob: -8.467375755310059

Token 101: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0322963185608387
    2. ' ,' → logprob: -4.032296180725098
    3. ',b' → logprob: -4.282296180725098
    4. ',a' → logprob: -9.157296180725098
    5. 'b' → logprob: -9.782296180725098
    6. '_,' → logprob: -11.032296180725098
    7. 'a' → logprob: -11.782296180725098
    8. ',n' → logprob: -11.907296180725098
    9. ',v' → logprob: -12.032296180725098
    10. '1' → logprob: -12.282296180725098

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1798672080039978
    2. '=' → logprob: -1.8048672676086426
    3. '=input' → logprob: -9.554866790771484
    4. ',' → logprob: -10.804866790771484
    5. '=int' → logprob: -11.679866790771484
    6. ',a' → logprob: -11.929866790771484
    7. ' ' → logprob: -12.304866790771484
    8. '=a' → logprob: -12.804866790771484
    9. '=line' → logprob: -12.929866790771484
    10. ' ,' → logprob: -14.054866790771484

Token 103: ' (' (ID: 350)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.018169142305850983
    2. 'map' → logprob: -4.018168926239014
    3. ' list' → logprob: -11.768169403076172
    4. ' input' → logprob: -11.768169403076172
    5. ' ' → logprob: -13.643169403076172
    6. '	map' → logprob: -14.018169403076172
    7. 'input' → logprob: -14.143169403076172
    8. 'list' → logprob: -15.268169403076172
    9. '   ' → logprob: -15.768169403076172
    10. '[' → logprob: -16.143169403076172

Token 104: 'int' (ID: 491)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.47409674525260925
    2. ' map' → logprob: -0.9740967750549316
    3. 'int' → logprob: -11.224096298217773
    4. '	map' → logprob: -13.599096298217773
    5. ' ' → logprob: -13.849096298217773
    6. 'list' → logprob: -14.099096298217773
    7. 'input' → logprob: -14.224096298217773
    8. ' int' → logprob: -14.474096298217773
    9. '(map' → logprob: -14.474096298217773
    10. ')' → logprob: -14.849096298217773

Token 105: '(z' (ID: 27674)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0034488493110984564
    2. 'input' → logprob: -5.878448963165283
    3. '(' → logprob: -8.128448486328125
    4. '(x' → logprob: -9.003448486328125
    5. '()' → logprob: -9.753448486328125
    6. ')' → logprob: -10.128448486328125
    7. ' input' → logprob: -10.128448486328125
    8. '=input' → logprob: -10.503448486328125
    9. '(
' → logprob: -11.128448486328125
    10. ',input' → logprob: -11.128448486328125

Token 106: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.603601336479187
    2. '()' → logprob: -0.853601336479187
    3. 'input' → logprob: -5.103601455688477
    4. '(input' → logprob: -5.103601455688477
    5. '(x' → logprob: -5.353601455688477
    6. '())' → logprob: -5.353601455688477
    7. '(z' → logprob: -6.103601455688477
    8. 'for' → logprob: -7.228601455688477
    9. ' for' → logprob: -7.853601455688477
    10. '(' → logprob: -8.103601455688477

Token 107: ' for' (ID: 395)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6407725214958191
    2. '()' → logprob: -1.5157725811004639
    3. '(input' → logprob: -2.265772581100464
    4. ')' → logprob: -2.765772581100464
    5. '-' → logprob: -3.640772581100464
    6. 'for' → logprob: -4.140772342681885
    7. ' input' → logprob: -4.265772342681885
    8. '()-' → logprob: -4.265772342681885
    9. ' for' → logprob: -5.015772342681885
    10. '=input' → logprob: -5.640772342681885

Token 108: ' z' (ID: 579)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.038044705986976624
    2. 'input' → logprob: -3.2880446910858154
    3. '=input' → logprob: -13.663044929504395
    4. '(input' → logprob: -14.038044929504395
    5. '	input' → logprob: -14.913044929504395
    6. '_input' → logprob: -15.288044929504395
    7. ' raw' → logprob: -15.913044929504395
    8. ' ' → logprob: -16.038043975830078
    9. ',input' → logprob: -16.163043975830078
    10. '[input' → logprob: -16.413043975830078

Token 109: ' in' (ID: 306)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.14273716509342194
    2. 'input' → logprob: -2.0177371501922607
    3. '=input' → logprob: -10.39273738861084
    4. '(input' → logprob: -11.39273738861084
    5. ' in' → logprob: -11.64273738861084
    6. ' range' → logprob: -12.64273738861084
    7. 'range' → logprob: -13.14273738861084
    8. '	input' → logprob: -13.64273738861084
    9. '[input' → logprob: -13.64273738861084
    10. 'in' → logprob: -13.89273738861084

Token 110: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12693072855472565
    2. ' input' → logprob: -2.1269307136535645
    3. ' ' → logprob: -13.751931190490723
    4. '(input' → logprob: -14.626931190490723
    5. '=input' → logprob: -15.251931190490723
    6. '
' → logprob: -15.876931190490723
    7. '	input' → logprob: -16.126930236816406
    8. 'range' → logprob: -16.251930236816406
    9. '[input' → logprob: -16.251930236816406
    10. '<input' → logprob: -16.376930236816406

Token 111: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.12258882028982e-05
    2. '()' → logprob: -9.75006103515625
    3. ' ().' → logprob: -13.37506103515625
    4. '(' → logprob: -14.37506103515625
    5. '())' → logprob: -14.37506103515625
    6. '("").' → logprob: -16.37506103515625
    7. '()
' → logprob: -17.87506103515625
    8. 'split' → logprob: -17.87506103515625
    9. '.split' → logprob: -18.00006103515625
    10. ')' → logprob: -18.37506103515625

Token 112: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001938631059601903
    2. 'strip' → logprob: -6.251938819885254
    3. 'rstrip' → logprob: -11.751938819885254
    4. ' split' → logprob: -13.251938819885254
    5. 'spl' → logprob: -15.126938819885254
    6. '(split' → logprob: -16.501937866210938
    7. 's' → logprob: -17.126937866210938
    8. ' strip' → logprob: -18.876937866210938
    9. '.split' → logprob: -19.376937866210938
    10. 'replace' → logprob: -20.001937866210938

Token 113: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07924214750528336
    2. '()' → logprob: -2.57924222946167
    3. '(' → logprob: -8.454241752624512
    4. ')' → logprob: -9.704241752624512
    5. ' ())' → logprob: -10.204241752624512
    6. '('' → logprob: -11.329241752624512
    7. '())
' → logprob: -11.454241752624512
    8. '());' → logprob: -11.954241752624512
    9. '();)' → logprob: -12.954241752624512
    10. '()]' → logprob: -13.454241752624512

Token 114: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: ' x' (ID: 1215)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.4459739923477173
    2. ' X' → logprob: -1.0709739923477173
    3. '   ' → logprob: -4.695973873138428
    4. '<|end|>' → logprob: -5.570973873138428
    5. '       ' → logprob: -6.820973873138428
    6. ' ' → logprob: -7.070973873138428
    7. 'a' → logprob: -7.820973873138428
    8. 'A' → logprob: -7.945973873138428
    9. '
' → logprob: -7.945973873138428
    10. '	X' → logprob: -8.445974349975586

Token 116: '_idx' (ID: 15257)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.28381577134132385
    2. ',a' → logprob: -2.158815860748291
    3. '[' → logprob: -3.408815860748291
    4. ' =' → logprob: -3.533815860748291
    5. 'a' → logprob: -3.783815860748291
    6. '[x' → logprob: -3.783815860748291
    7. '=' → logprob: -4.908815860748291
    8. '=a' → logprob: -5.283815860748291
    9. ',' → logprob: -5.658815860748291
    10. ',x' → logprob: -6.533815860748291

Token 117: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8740501403808594
    2. ',a' → logprob: -1.2490501403808594
    3. ' =' → logprob: -1.6240501403808594
    4. 'a' → logprob: -2.9990501403808594
    5. '[a' → logprob: -3.7490501403808594
    6. '=a' → logprob: -4.374050140380859
    7. '[' → logprob: -5.499050140380859
    8. '=' → logprob: -5.999050140380859
    9. ' ,' → logprob: -6.749050140380859
    10. ']' → logprob: -6.874050140380859

Token 118: ' N' (ID: 478)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023383839055895805
    2. ' a' → logprob: -3.773383855819702
    3. '(a' → logprob: -9.773384094238281
    4. 'b' → logprob: -10.148384094238281
    5. 'x' → logprob: -11.898384094238281
    6. '	a' → logprob: -11.898384094238281
    7. '[a' → logprob: -12.273384094238281
    8. '   ' → logprob: -12.398384094238281
    9. ' (' → logprob: -12.523384094238281
    10. ' ' → logprob: -12.648384094238281

Token 119: '-min' (ID: 20045)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.35135647654533386
    2. 'a' → logprob: -1.6013565063476562
    3. ' -' → logprob: -2.6013565063476562
    4. '[a' → logprob: -4.726356506347656
    5. 'x' → logprob: -5.226356506347656
    6. '[' → logprob: -6.476356506347656
    7. '-a' → logprob: -6.601356506347656
    8. ' a' → logprob: -7.101356506347656
    9. '1' → logprob: -7.726356506347656
    10. 'b' → logprob: -8.101356506347656

Token 120: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00027825910365208983
    2. '(' → logprob: -8.37527847290039
    3. 'a' → logprob: -10.25027847290039
    4. '(x' → logprob: -11.50027847290039
    5. '((' → logprob: -14.25027847290039
    6. '(n' → logprob: -14.50027847290039
    7. '(min' → logprob: -15.37527847290039
    8. '(
' → logprob: -15.62527847290039
    9. '([' → logprob: -15.87527847290039
    10. '(N' → logprob: -16.25027847290039

Token 121: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.1737372875213623
    2. ',' → logprob: -2.6737372875213623
    3. '(a' → logprob: -3.0487372875213623
    4. ',a' → logprob: -3.4237372875213623
    5. '(b' → logprob: -5.298737525939941
    6. '(' → logprob: -6.673737525939941
    7. 'a' → logprob: -7.173737525939941
    8. ',N' → logprob: -7.423737525939941
    9. ',n' → logprob: -7.798737525939941
    10. ')' → logprob: -8.048737525939941

Token 122: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17312020063400269
    2. ')-' → logprob: -1.9231202602386475
    3. ',' → logprob: -5.298120021820068
    4. '),' → logprob: -6.173120021820068
    5. ' )' → logprob: -6.173120021820068
    6. '-' → logprob: -6.298120021820068
    7. ' ,' → logprob: -7.548120021820068
    8. ' -' → logprob: -8.423120498657227
    9. ',N' → logprob: -8.548120498657227
    10. ')
' → logprob: -8.798120498657227

Token 123: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' y' (ID: 342)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.10031266510486603
    2. '<|end|>' → logprob: -2.9753127098083496
    3. '
' → logprob: -4.10031270980835
    4. ' X' → logprob: -4.10031270980835
    5. '       ' → logprob: -6.60031270980835
    6. ',' → logprob: -6.85031270980835
    7. ' ' → logprob: -6.97531270980835
    8. 'x' → logprob: -6.97531270980835
    9. ')' → logprob: -7.10031270980835
    10. '.' → logprob: -7.35031270980835

Token 125: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0004032634024042636
    2. ' =' → logprob: -8.00040340423584
    3. '=' → logprob: -10.12540340423584
    4. '=_' → logprob: -11.50040340423584
    5. 'x' → logprob: -12.37540340423584
    6. '_' → logprob: -12.37540340423584
    7. '_idxs' → logprob: -12.75040340423584
    8. '_x' → logprob: -13.12540340423584
    9. 'idx' → logprob: -13.12540340423584
    10. '_IDX' → logprob: -15.25040340423584

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054883863776922226
    2. '=' → logprob: -2.9298839569091797
    3. ' ' → logprob: -13.92988395690918
    4. ')' → logprob: -15.67988395690918
    5. '_' → logprob: -16.17988395690918
    6. ' ' → logprob: -16.30488395690918
    7. '=x' → logprob: -16.42988395690918
    8. ' =
' → logprob: -16.67988395690918
    9. 'x' → logprob: -16.92988395690918
    10. ',' → logprob: -17.05488395690918

Token 127: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2793086767196655
    2. ' N' → logprob: -1.9043086767196655
    3. 'max' → logprob: -3.029308795928955
    4. ' max' → logprob: -3.904308795928955
    5. 'min' → logprob: -4.529308795928955
    6. ' min' → logprob: -5.404308795928955
    7. ' ' → logprob: -6.154308795928955
    8. 'abs' → logprob: -6.154308795928955
    9. 'x' → logprob: -6.279308795928955
    10. ' abs' → logprob: -6.404308795928955

Token 128: '-max' (ID: 102577)
  Prédit: '-min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-min' → logprob: -0.15672895312309265
    2. '-' → logprob: -2.406728982925415
    3. '-max' → logprob: -2.906728982925415
    4. '-int' → logprob: -8.781728744506836
    5. ' -' → logprob: -9.031728744506836
    6. '-minus' → logprob: -11.156728744506836
    7. '-mini' → logprob: -13.531728744506836
    8. '-me' → logprob: -13.531728744506836
    9. '-Min' → logprob: -13.656728744506836
    10. '-
' → logprob: -13.906728744506836

Token 129: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -9.85366350505501e-05
    2. '(' → logprob: -9.62509822845459
    3. '(min' → logprob: -10.87509822845459
    4. '(x' → logprob: -11.87509822845459
    5. '((' → logprob: -13.25009822845459
    6. ' (' → logprob: -13.25009822845459
    7. 'a' → logprob: -14.00009822845459
    8. '(y' → logprob: -15.00009822845459
    9. '(b' → logprob: -15.12509822845459
    10. '(max' → logprob: -15.12509822845459

Token 130: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.013170585967600346
    2. '(b' → logprob: -5.0131707191467285
    3. '-b' → logprob: -5.3881707191467285
    4. ',' → logprob: -7.6381707191467285
    5. ',y' → logprob: -7.8881707191467285
    6. '(y' → logprob: -8.01317024230957
    7. '(x' → logprob: -8.13817024230957
    8. '[b' → logprob: -9.01317024230957
    9. ',x' → logprob: -9.51317024230957
    10. '[' → logprob: -10.13817024230957

Token 131: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00039051592466421425
    2. ')
' → logprob: -8.00039005279541
    3. ')

' → logprob: -11.87539005279541
    4. ')+' → logprob: -11.87539005279541
    5. '<|end|>' → logprob: -12.00039005279541
    6. ')]' → logprob: -12.12539005279541
    7. ' )' → logprob: -12.25039005279541
    8. '))' → logprob: -12.37539005279541
    9. '])' → logprob: -13.00039005279541
    10. ']' → logprob: -13.25039005279541

Token 132: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: ' X' (ID: 2127)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5881807804107666
    2. 'X' (adapté à ' X') → logprob: -1.4631807804107666
    3. ')' → logprob: -2.9631807804107666
    4. '   ' → logprob: -3.2131807804107666
    5. '<|end|>' → logprob: -3.3381807804107666
    6. '
' → logprob: -3.7131807804107666
    7. ')
' → logprob: -4.2131805419921875
    8. ' X' → logprob: -4.3381805419921875
    9. ' ' → logprob: -4.5881805419921875
    10. '[' → logprob: -5.7131805419921875

Token 134: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.8232690460281447e-05
    2. '[' → logprob: -10.250048637390137
    3. '```' → logprob: -12.125048637390137
    4. 'x' → logprob: -12.750048637390137
    5. '[
' → logprob: -14.125048637390137
    6. ' [' → logprob: -14.500048637390137
    7. '][' → logprob: -14.500048637390137
    8. '\[' → logprob: -14.750048637390137
    9. '[s' → logprob: -15.000048637390137
    10. ']' → logprob: -15.375048637390137

Token 135: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -9.567575034452602e-05
    2. 'idx' → logprob: -9.62509536743164
    3. 'x' → logprob: -11.50009536743164
    4. '```' → logprob: -12.25009536743164
    5. '_idxs' → logprob: -12.50009536743164
    6. '_IDX' → logprob: -13.50009536743164
    7. '[idx' → logprob: -13.50009536743164
    8. ']' → logprob: -13.50009536743164
    9. '][' → logprob: -13.50009536743164
    10. '[x' → logprob: -13.50009536743164

Token 136: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.002641175640746951
    2. ').' → logprob: -6.002641201019287
    3. ']' → logprob: -9.252640724182129
    4. '.append' → logprob: -10.002640724182129
    5. ' ].' → logprob: -11.252640724182129
    6. '.' → logprob: -12.002640724182129
    7. ')' → logprob: -13.252640724182129
    8. '}.' → logprob: -13.877640724182129
    9. '   ' → logprob: -14.752640724182129
    10. 'append' → logprob: -15.002640724182129

Token 137: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.259079363080673e-05
    2. ' append' → logprob: -11.875012397766113
    3. '.append' → logprob: -12.250012397766113
    4. '<|end|>' → logprob: -15.000012397766113
    5. '	append' → logprob: -15.500012397766113
    6. 'Append' → logprob: -15.750012397766113
    7. '_append' → logprob: -15.875012397766113
    8. 'insert' → logprob: -17.87501335144043
    9. 'appen' → logprob: -18.25001335144043
    10. 'pop' → logprob: -18.37501335144043

Token 138: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0005629229708574712
    2. '(' → logprob: -7.500563144683838
    3. 'y' → logprob: -11.75056266784668
    4. '(
' → logprob: -13.75056266784668
    5. '((' → logprob: -14.87556266784668
    6. '(x' → logprob: -15.12556266784668
    7. ' (' → logprob: -16.00056266784668
    8. '(user' → logprob: -17.25056266784668
    9. '(py' → logprob: -17.50056266784668
    10. '('' → logprob: -17.50056266784668

Token 139: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0007274442468769848
    2. 'y' → logprob: -7.875727653503418
    3. '[y' → logprob: -8.250727653503418
    4. 'idx' → logprob: -10.000727653503418
    5. 'x' → logprob: -10.875727653503418
    6. '[_' → logprob: -12.375727653503418
    7. '(y' → logprob: -12.875727653503418
    8. 's' → logprob: -13.375727653503418
    9. '_y' → logprob: -13.375727653503418
    10. '[' → logprob: -13.500727653503418

Token 140: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017803447553887963
    2. ' )' → logprob: -9.625178337097168
    3. ')
' → logprob: -9.875178337097168
    4. '<|end|>' → logprob: -9.875178337097168
    5. ')return' → logprob: -13.625178337097168
    6. '   ' → logprob: -13.875178337097168
    7. '<|end|>' → logprob: -14.000178337097168
    8. '[' → logprob: -14.125178337097168
    9. '#' → logprob: -14.250178337097168
    10. '
' → logprob: -14.500178337097168

Token 141: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8145067095756531
    2. '<|end|>' → logprob: -0.8145067095756531
    3. '   ' → logprob: -2.564506769180298
    4. '
' → logprob: -4.064506530761719
    5. ' ' → logprob: -5.064506530761719
    6. '<|end|>' → logprob: -6.314506530761719
    7. '    
' → logprob: -6.439506530761719
    8. ' )' → logprob: -6.814506530761719
    9. '\n' → logprob: -6.814506530761719
    10. '    ' → logprob: -7.064506530761719

Token 142: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.6287980079650879
    2. ')' → logprob: -1.003798007965088
    3. '   ' → logprob: -3.128798007965088
    4. ':' → logprob: -4.378798007965088
    5. ' ' → logprob: -5.128798007965088
    6. '    
' → logprob: -5.878798007965088
    7. ' )' → logprob: -5.878798007965088
    8. '<|end|>' → logprob: -5.878798007965088
    9. '.' → logprob: -6.003798007965088
    10. '#' → logprob: -6.128798007965088

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06237521395087242
    2. '=' → logprob: -2.81237530708313
    3. ',' → logprob: -7.937375068664551
    4. ')' → logprob: -11.06237506866455
    5. '[' → logprob: -11.06237506866455
    6. '<|end|>' → logprob: -12.81237506866455
    7. ' ' → logprob: -13.06237506866455
    8. '.' → logprob: -13.06237506866455
    9. '=[]' → logprob: -13.18737506866455
    10. ']' → logprob: -13.93737506866455

Token 144: ' [' (ID: 723)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.528763473033905
    2. '{}' → logprob: -1.7787635326385498
    3. '[' → logprob: -2.02876353263855
    4. 'list' → logprob: -3.90376353263855
    5. 'collections' → logprob: -3.90376353263855
    6. ' [' → logprob: -4.028763294219971
    7. ' {' → logprob: -4.278763294219971
    8. ' {}' → logprob: -5.403763294219971
    9. '[-' → logprob: -5.403763294219971
    10. 'dict' → logprob: -5.528763294219971

Token 145: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14956064522266388
    2. '1' → logprob: -3.0245606899261475
    3. 'i' → logprob: -3.2745606899261475
    4. '-' → logprob: -4.024560451507568
    5. '998' → logprob: -5.024560451507568
    6. 'False' → logprob: -5.274560451507568
    7. 'N' → logprob: -5.649560451507568
    8. 'pow' → logprob: -6.149560451507568
    9. '[]' → logprob: -6.399560451507568
    10. 'P' → logprob: -6.399560451507568

Token 146: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029488246887922287
    2. ']*' → logprob: -4.2794880867004395
    3. ']*(' → logprob: -4.7794880867004395
    4. ' for' → logprob: -5.0294880867004395
    5. ' ]' → logprob: -9.154488563537598
    6. 'for' → logprob: -9.154488563537598
    7. '
' → logprob: -11.529488563537598
    8. ']+' → logprob: -11.779488563537598
    9. '<|end|>' → logprob: -12.029488563537598
    10. ',' → logprob: -12.279488563537598

Token 147: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.008507848717272282
    2. '(N' → logprob: -4.88350772857666
    3. '(' → logprob: -7.13350772857666
    4. ' N' → logprob: -9.88350772857666
    5. ' (' → logprob: -10.50850772857666
    6. '   ' → logprob: -12.13350772857666
    7. 'len' → logprob: -13.13350772857666
    8. ' ' → logprob: -13.50850772857666
    9. 'n' → logprob: -13.50850772857666
    10. '[N' → logprob: -13.63350772857666

Token 148: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 149: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.23114590346813202
    2. ' for' → logprob: -1.8561458587646484
    3. 'i' → logprob: -4.231145858764648
    4. '<|end|>' → logprob: -4.231145858764648
    5. '   ' → logprob: -5.481145858764648
    6. 'G' → logprob: -6.356145858764648
    7. 'idx' → logprob: -6.356145858764648
    8. '0' → logprob: -6.356145858764648
    9. 'def' → logprob: -6.606145858764648
    10. ')' → logprob: -6.606145858764648

Token 151: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04175888001918793
    2. 'i' → logprob: -3.7917587757110596
    3. ' x' → logprob: -4.291759014129639
    4. 'x' → logprob: -5.916759014129639
    5. ' v' → logprob: -8.16675853729248
    6. ' j' → logprob: -8.29175853729248
    7. ' u' → logprob: -8.29175853729248
    8. ' _' → logprob: -8.54175853729248
    9. ' k' → logprob: -8.79175853729248
    10. ' ' → logprob: -8.97925853729248

Token 152: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013096443144604564
    2. 'in' → logprob: -6.751309871673584
    3. ',' → logprob: -9.126309394836426
    4. '<|end|>' → logprob: -11.751309394836426
    5. ' ' → logprob: -11.876309394836426
    6. ' ,' → logprob: -12.626309394836426
    7. '	in' → logprob: -12.751309394836426
    8. 's' → logprob: -13.001309394836426
    9. 'd' → logprob: -13.876309394836426
    10. 'range' → logprob: -14.313809394836426

Token 153: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005111848935484886
    2. ' reversed' → logprob: -5.6301116943359375
    3. 'range' → logprob: -6.5051116943359375
    4. ' xrange' → logprob: -12.505111694335938
    5. '	range' → logprob: -12.630111694335938
    6. '(range' → logprob: -13.005111694335938
    7. ' ' → logprob: -13.130111694335938
    8. ' reverse' → logprob: -14.692611694335938
    9. ')' → logprob: -15.067611694335938
    10. '[' → logprob: -15.067611694335938

Token 154: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3194495737552643
    2. ' N' → logprob: -1.944449543952942
    3. '(N' → logprob: -2.0694496631622314
    4. '(' → logprob: -5.569449424743652
    5. '	N' → logprob: -9.319449424743652
    6. ' (' → logprob: -9.944449424743652
    7. '   ' → logprob: -9.944449424743652
    8. '1' → logprob: -9.944449424743652
    9. ' ' → logprob: -10.319449424743652
    10. '<|end|>' → logprob: -11.819449424743652

Token 155: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05527760460972786
    2. ' -' → logprob: -3.1802775859832764
    3. '):
' → logprob: -4.6802778244018555
    4. '):' → logprob: -5.9302778244018555
    5. ')' → logprob: -9.180277824401855
    6. ',' → logprob: -10.055277824401855
    7. ',-' → logprob: -10.555277824401855
    8. '   ' → logprob: -10.555277824401855
    9. ' ):' → logprob: -11.305277824401855
    10. ' ' → logprob: -11.430277824401855

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3079380691051483
    2. '<|end|>' → logprob: -1.4329380989074707
    3. '   ' → logprob: -4.182938098907471
    4. ' G' → logprob: -4.807938098907471
    5. '<|end|>' → logprob: -6.807938098907471
    6. ' ' → logprob: -7.307938098907471
    7. '
' → logprob: -8.682937622070312
    8. ' 
' → logprob: -8.807937622070312
    9. ',' → logprob: -9.182937622070312
    10. '    
' → logprob: -9.182937622070312

Token 157: ' used' (ID: 2061)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.42972081899642944
    2. ' G' → logprob: -1.1797208786010742
    3. ' if' → logprob: -5.304720878601074
    4. ' used' → logprob: -5.304720878601074
    5. 'if' → logprob: -5.804720878601074
    6. '   ' → logprob: -5.929720878601074
    7. '    ' → logprob: -5.929720878601074
    8. 's' → logprob: -5.929720878601074
    9. 'x' → logprob: -6.429720878601074
    10. ' s' → logprob: -6.554720878601074

Token 158: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03828924149274826
    2. '=' → logprob: -3.2882893085479736
    3. '=set' → logprob: -8.788289070129395
    4. ' ' → logprob: -10.288289070129395
    5. 's' → logprob: -10.788289070129395
    6. '<|end|>' → logprob: -11.038289070129395
    7. '  ' → logprob: -11.788289070129395
    8. ',' → logprob: -13.413289070129395
    9. '={}' → logprob: -13.600789070129395
    10. ' ={' → logprob: -13.850789070129395

Token 159: ' tot' (ID: 2417)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.810076892375946
    2. 'tot' → logprob: -1.1850769519805908
    3. '{' → logprob: -1.4350769519805908
    4. ' set' → logprob: -5.185076713562012
    5. ' tot' → logprob: -5.560076713562012
    6. ' {' → logprob: -7.310076713562012
    7. '{}' → logprob: -8.685076713562012
    8. '[' → logprob: -8.935076713562012
    9. '{s' → logprob: -9.060076713562012
    10. ' ' → logprob: -9.497576713562012

Token 160: 'oro' (ID: 8527)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -1.054943561553955
    2. 'oro' → logprob: -1.554943561553955
    3. 'idx' → logprob: -1.554943561553955
    4. 'or' → logprob: -1.679943561553955
    5. '[idx' → logprob: -4.179943561553955
    6. 'ro' → logprob: -5.179943561553955
    7. 'oru' → logprob: -5.929943561553955
    8. '(x' → logprob: -6.054943561553955
    9. 'index' → logprob: -6.304943561553955
    10. '(' → logprob: -6.429943561553955

Token 161: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.002088758163154125
    2. '(' → logprob: -6.62708854675293
    3. '(x' → logprob: -7.50208854675293
    4. '(index' → logprob: -9.87708854675293
    5. '(X' → logprob: -10.00208854675293
    6. '[idx' → logprob: -10.62708854675293
    7. ' (' → logprob: -11.37708854675293
    8. 'idx' → logprob: -11.50208854675293
    9. '((' → logprob: -11.62708854675293
    10. '(N' → logprob: -11.75208854675293

Token 162: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007661751471459866
    2. ')
' → logprob: -5.007661819458008
    3. ').' → logprob: -7.382661819458008
    4. ' )' → logprob: -8.757661819458008
    5. '(G' → logprob: -10.007661819458008
    6. ')

' → logprob: -10.632661819458008
    7. '))' → logprob: -10.632661819458008
    8. '(' → logprob: -12.132661819458008
    9. ')set' → logprob: -12.132661819458008
    10. ')+' → logprob: -12.382661819458008

Token 163: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3127361238002777
    2. '
' → logprob: -1.8127361536026
    3. '<|end|>' → logprob: -3.3127360343933105
    4. '|' → logprob: -4.0627360343933105
    5. ')' → logprob: -4.4377360343933105
    6. '.union' → logprob: -5.0627360343933105
    7. ' |' → logprob: -5.1877360343933105
    8. '    ' → logprob: -5.4377360343933105
    9. '    
' → logprob: -5.8127360343933105
    10. ' ' → logprob: -6.0627360343933105

Token 164: ' G' (ID: 499)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.6670175790786743
    2. ' used' → logprob: -1.2920175790786743
    3. 'G' (adapté à ' G') → logprob: -2.6670174598693848
    4. ' G' → logprob: -3.1670174598693848
    5. ' for' → logprob: -3.6670174598693848
    6. ' if' → logprob: -4.292017459869385
    7. 'for' → logprob: -4.292017459869385
    8. '   ' → logprob: -4.417017459869385
    9. 'if' → logprob: -4.792017459869385
    10. ' Me' → logprob: -5.417017459869385

Token 165: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.006828324869275093
    2. '[' → logprob: -5.006828308105469
    3. '[index' → logprob: -11.006828308105469
    4. 'idx' → logprob: -11.131828308105469
    5. '<|end|>' → logprob: -11.631828308105469
    6. '[i' → logprob: -12.256828308105469
    7. '[ix' → logprob: -12.256828308105469
    8. ' =' → logprob: -12.506828308105469
    9. '```' → logprob: -12.506828308105469
    10. '[x' → logprob: -12.506828308105469

Token 166: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011698178946971893
    2. ' ]' → logprob: -4.511698246002197
    3. ')' → logprob: -8.011697769165039
    4. ' =' → logprob: -9.011697769165039
    5. '=' → logprob: -10.011697769165039
    6. ']=' → logprob: -10.011697769165039
    7. '-' → logprob: -10.136697769165039
    8. ' )' → logprob: -10.511697769165039
    9. '+' → logprob: -11.386697769165039
    10. ' -' → logprob: -12.261697769165039

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25199171900749207
    2. '=' → logprob: -1.5019917488098145
    3. ' +=' → logprob: -10.251991271972656
    4. '<|end|>' → logprob: -11.626991271972656
    5. '+=' → logprob: -11.751991271972656
    6. ' ' → logprob: -12.001991271972656
    7. ')' → logprob: -13.751991271972656
    8. ',' → logprob: -14.001991271972656
    9. '+' → logprob: -14.876991271972656
    10. ' |=' → logprob: -15.251991271972656

Token 168: ' Me' (ID: 2896)
  Prédit: 'Me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Me' → logprob: -0.48010051250457764
    2. ' Me' → logprob: -0.9801005125045776
    3. ' max' → logprob: -5.980100631713867
    4. 'max' → logprob: -6.605100631713867
    5. '1' → logprob: -7.480100631713867
    6. ' ' → logprob: -8.355100631713867
    7. 'Max' → logprob: -8.605100631713867
    8. '-Me' → logprob: -8.605100631713867
    9. '	Me' → logprob: -8.730100631713867
    10. '(Me' → logprob: -8.855100631713867

Token 169: 'ow' (ID: 384)
  Prédit: 'ow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ow' → logprob: -4.723352049040841e-06
    2. 'w' → logprob: -13.375004768371582
    3. ' ow' → logprob: -13.750004768371582
    4. '
' → logprob: -14.250004768371582
    5. 'o' → logprob: -14.625004768371582
    6. 'Ow' → logprob: -15.000004768371582
    7. 'ows' → logprob: -16.250003814697266
    8. '

' → logprob: -16.250003814697266
    9. 'aw' → logprob: -16.375003814697266
    10. '[' → logprob: -17.125003814697266

Token 170: 'Mex' (ID: 90647)
  Prédit: 'Mex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mex' → logprob: -1.2113979209971149e-05
    2. ' Mex' → logprob: -12.875012397766113
    3. 'M' → logprob: -13.250012397766113
    4. 'Me' → logprob: -13.375012397766113
    5. '_mex' → logprob: -13.375012397766113
    6. 'mex' → logprob: -13.500012397766113
    7. 'Mexico' → logprob: -14.000012397766113
    8. 'e' → logprob: -15.375012397766113
    9. 'Mé' → logprob: -15.625012397766113
    10. 'used' → logprob: -15.625012397766113

Token 171: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003184233792126179
    2. ' (' → logprob: -8.75031852722168
    3. '(set' → logprob: -9.12531852722168
    4. '(use' → logprob: -10.75031852722168
    5. '({' → logprob: -11.00031852722168
    6. '(us' → logprob: -12.75031852722168
    7. '(s' → logprob: -12.87531852722168
    8. '(using' → logprob: -13.37531852722168
    9. '((' → logprob: -13.62531852722168
    10. '(
' → logprob: -13.75031852722168

Token 172: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.06557667255401611
    2. '(' → logprob: -3.1905765533447266
    3. ' used' → logprob: -3.8155765533447266
    4. 'set' → logprob: -8.940576553344727
    5. ' (' → logprob: -9.940576553344727
    6. '(set' → logprob: -10.565576553344727
    7. '{' → logprob: -10.690576553344727
    8. '   ' → logprob: -10.815576553344727
    9. ')' → logprob: -11.315576553344727
    10. ' ' → logprob: -11.940576553344727

Token 173: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006238518748432398
    2. ')+' → logprob: -5.8812384605407715
    3. ' )' → logprob: -6.1312384605407715
    4. '())' → logprob: -7.7562384605407715
    5. '+' → logprob: -8.00623893737793
    6. '()' → logprob: -9.00623893737793
    7. ')
' → logprob: -9.13123893737793
    8. '))' → logprob: -9.38123893737793
    9. ')set' → logprob: -10.38123893737793
    10. ' ' → logprob: -10.75623893737793

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24836614727973938
    2. '
' → logprob: -2.373366117477417
    3. '<|end|>' → logprob: -2.873366117477417
    4. 'return' → logprob: -3.123366117477417
    5. ')' → logprob: -5.123366355895996
    6. ' return' → logprob: -5.248366355895996
    7. '	return' → logprob: -5.623366355895996
    8. '    
' → logprob: -6.123366355895996
    9. '\n' → logprob: -6.248366355895996
    10. 'for' → logprob: -6.623366355895996

Token 175: ' hat' (ID: 4545)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5139310359954834
    2. '()' → logprob: -2.6389310359954834
    3. 'ch' → logprob: -3.0139310359954834
    4. 'o' → logprob: -3.2639310359954834
    5. ' =' → logprob: -3.5139310359954834
    6. 'a' → logprob: -3.7639310359954834
    7. 'e' → logprob: -3.7639310359954834
    8. 'h' → logprob: -3.8889310359954834
    9. '=' → logprob: -3.8889310359954834
    10. 'ai' → logprob: -4.0139312744140625

Token 177: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.279280424118042
    2. ' ' → logprob: -1.279280424118042
    3. ' G' → logprob: -2.154280424118042
    4. ' max' → logprob: -2.154280424118042
    5. ' [' → logprob: -2.779280424118042
    6. ' sum' → logprob: -3.029280424118042
    7. 'max' → logprob: -3.779280424118042
    8. 'sum' → logprob: -3.904280424118042
    9. 'G' → logprob: -4.029280662536621
    10. '[' → logprob: -4.654280662536621

Token 178: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005697573069483042
    2. '1' → logprob: -5.630697727203369
    3. 'G' → logprob: -7.880697727203369
    4. ' ' → logprob: -7.880697727203369
    5. 'False' → logprob: -8.130697250366211
    6. '-' → logprob: -8.130697250366211
    7. 'P' → logprob: -8.755697250366211
    8. '(' → logprob: -9.130697250366211
    9. 'A' → logprob: -9.380697250366211
    10. 'N' → logprob: -9.880697250366211

Token 179: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1942281424999237
    2. ']*' → logprob: -2.319228172302246
    3. ']*(' → logprob: -2.569228172302246
    4. ' for' → logprob: -6.819228172302246
    5. ' ]' → logprob: -8.819228172302246
    6. '
' → logprob: -9.194228172302246
    7. ']+' → logprob: -9.194228172302246
    8. ',' → logprob: -10.194228172302246
    9. 'for' → logprob: -10.694228172302246
    10. ']
' → logprob: -10.694228172302246

Token 180: '102' (ID: 7672)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3189149796962738
    2. '(N' → logprob: -1.3189150094985962
    3. '(' → logprob: -5.568914890289307
    4. ' (' → logprob: -7.443914890289307
    5. '(P' → logprob: -7.943914890289307
    6. 'P' → logprob: -7.943914890289307
    7. ' N' → logprob: -8.568915367126465
    8. '(n' → logprob: -9.943915367126465
    9. '(len' → logprob: -10.193915367126465
    10. 'len' → logprob: -10.193915367126465

Token 181: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.01001081895083189
    2. '5' → logprob: -4.635010719299316
    3. '40' → logprob: -9.760010719299316
    4. '3' → logprob: -10.135010719299316
    5. ']' → logprob: -10.135010719299316
    6. '2' → logprob: -10.510010719299316
    7. '0' → logprob: -10.635010719299316
    8. ')' → logprob: -10.635010719299316
    9. '[' → logprob: -11.635010719299316
    10. '41' → logprob: -11.885010719299316

Token 182: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 183: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7623425126075745
    2. '<|end|>' → logprob: -1.1373424530029297
    3. 'hat' → logprob: -1.8873424530029297
    4. '   ' → logprob: -3.3873424530029297
    5. ' for' → logprob: -4.38734245300293
    6. 'def' → logprob: -5.76234245300293
    7. 'count' → logprob: -6.51234245300293
    8. 'counter' → logprob: -6.76234245300293
    9. 'idx' → logprob: -6.88734245300293
    10. 'cnt' → logprob: -7.13734245300293

Token 184: ' z' (ID: 579)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7201571464538574
    2. 'hat' → logprob: -0.7201571464538574
    3. ' for' → logprob: -4.095157146453857
    4. ' hat' → logprob: -5.595157146453857
    5. 'mask' → logprob: -6.345157146453857
    6. 'current' → logprob: -7.470157146453857
    7. '   ' → logprob: -7.845157146453857
    8. 'h' → logprob: -7.970157146453857
    9. 'cur' → logprob: -8.095157623291016
    10. 'sum' → logprob: -8.220157623291016

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4256189167499542
    2. '=' → logprob: -1.4256188869476318
    3. 'x' → logprob: -2.800618886947632
    4. 'for' → logprob: -3.800618886947632
    5. '   ' → logprob: -4.925619125366211
    6. 'idx' → logprob: -5.675619125366211
    7. ' ' → logprob: -5.800619125366211
    8. 'ex' → logprob: -6.550619125366211
    9. '<|end|>' → logprob: -6.550619125366211
    10. '  ' → logprob: -7.050619125366211

Token 186: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1739894598722458
    2. ' ' → logprob: -2.5489895343780518
    3. '1' → logprob: -3.5489895343780518
    4. 'N' → logprob: -3.7989895343780518
    5. 'A' → logprob: -4.423989295959473
    6. ' N' → logprob: -5.548989295959473
    7. ' A' → logprob: -5.673989295959473
    8. 'P' → logprob: -6.548989295959473
    9. '(' → logprob: -6.673989295959473
    10. 'pow' → logprob: -6.673989295959473

Token 187: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09317456185817719
    2. 'N' → logprob: -3.468174457550049
    3. 'A' → logprob: -3.593174457550049
    4. '1' → logprob: -4.218174457550049
    5. 'G' → logprob: -5.343174457550049
    6. 'P' → logprob: -5.593174457550049
    7. 'len' → logprob: -6.843174457550049
    8. 'pow' → logprob: -6.968174457550049
    9. '(' → logprob: -7.218174457550049
    10. '10' → logprob: -7.468174457550049

Token 188: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22195680439472198
    2. '<|end|>' → logprob: -2.471956729888916
    3. '+' → logprob: -3.346956729888916
    4. ' ' → logprob: -4.096956729888916
    5. ' 
' → logprob: -4.221956729888916
    6. '   ' → logprob: -4.471956729888916
    7. ' for' → logprob: -4.596956729888916
    8. 'for' → logprob: -4.846956729888916
    9. '<<' → logprob: -5.221956729888916
    10. '*' → logprob: -6.346956729888916

Token 189: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0457370281219482
    2. '   ' → logprob: -1.4207370281219482
    3. ' for' → logprob: -1.5457370281219482
    4. '<|end|>' → logprob: -1.6707370281219482
    5. ' ' → logprob: -5.795737266540527
    6. '<|end|>' → logprob: -7.170737266540527
    7. '  ' → logprob: -7.670737266540527
    8. '	for' → logprob: -8.295737266540527
    9. '
' → logprob: -8.545737266540527
    10. '0' → logprob: -8.795737266540527

Token 190: ' lst' (ID: 33384)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06540773808956146
    2. ' for' → logprob: -2.8154077529907227
    3. '   ' → logprob: -6.940407752990723
    4. 'while' → logprob: -7.315407752990723
    5. 'hat' → logprob: -7.690407752990723
    6. 'z' → logprob: -7.940407752990723
    7. 'i' → logprob: -8.440407752990723
    8. 'range' → logprob: -8.815407752990723
    9. '0' → logprob: -9.190407752990723
    10. ' while' → logprob: -9.440407752990723

Token 191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021182727068662643
    2. '=' → logprob: -4.021182537078857
    3. 'st' → logprob: -6.771182537078857
    4. ' ' → logprob: -7.146182537078857
    5. '=[]' → logprob: -7.771182537078857
    6. 'ist' → logprob: -8.896183013916016
    7. '_' → logprob: -8.896183013916016
    8. 'x' → logprob: -10.146183013916016
    9. ',' → logprob: -10.271183013916016
    10. ' =[' → logprob: -10.396183013916016

Token 192: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.08727096021175385
    2. '[' → logprob: -3.337270975112915
    3. '[]' → logprob: -3.962270975112915
    4. ' []' → logprob: -4.087270736694336
    5. '[N' → logprob: -6.087270736694336
    6. ' ' → logprob: -6.212270736694336
    7. '0' → logprob: -6.337270736694336
    8. '[P' → logprob: -6.962270736694336
    9. '[A' → logprob: -6.962270736694336
    10. ' range' → logprob: -7.087270736694336

Token 193: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.3424433171749115
    2. '(G' → logprob: -1.4674433469772339
    3. '(map' → logprob: -3.0924432277679443
    4. '(re' → logprob: -4.842443466186523
    5. '(X' → logprob: -6.342443466186523
    6. '(' → logprob: -6.342443466186523
    7. '(en' → logprob: -7.217443466186523
    8. '(filter' → logprob: -7.467443466186523
    9. '()' → logprob: -8.092443466186523
    10. '(input' → logprob: -8.092443466186523

Token 194: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6406427621841431
    2. '(N' → logprob: -0.7656427621841431
    3. '(len' → logprob: -5.7656426429748535
    4. '102' → logprob: -6.1406426429748535
    5. '(P' → logprob: -6.7656426429748535
    6. '(n' → logprob: -7.3906426429748535
    7. '(z' → logprob: -7.7656426429748535
    8. 'N' → logprob: -8.765643119812012
    9. '(max' → logprob: -10.390643119812012
    10. '(-' → logprob: -10.390643119812012

Token 195: '-' (ID: 12)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12139024585485458
    2. '-' → logprob: -2.4963903427124023
    3. ',' → logprob: -4.371390342712402
    4. ' ))' → logprob: -5.121390342712402
    5. ' -' → logprob: -5.746390342712402
    6. '))[' → logprob: -5.996390342712402
    7. '))
' → logprob: -6.121390342712402
    8. '+' → logprob: -6.371390342712402
    9. ' ,' → logprob: -6.496390342712402
    10. ',-' → logprob: -6.746390342712402

Token 196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006881289882585406
    2. '2' → logprob: -8.125688552856445
    3. '-' → logprob: -8.375688552856445
    4. ' ' → logprob: -9.000688552856445
    5. '3' → logprob: -11.625688552856445
    6. ' -' → logprob: -11.750688552856445
    7. '10' → logprob: -12.750688552856445
    8. '4' → logprob: -13.313188552856445
    9. 'N' → logprob: -13.688188552856445
    10. 'len' → logprob: -13.750688552856445

Token 197: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03449622541666031
    2. ',-' → logprob: -3.534496307373047
    3. ' ,' → logprob: -5.534496307373047
    4. ' ,-' → logprob: -7.534496307373047
    5. '))' → logprob: -8.784496307373047
    6. ' -' → logprob: -10.034496307373047
    7. '-' → logprob: -10.534496307373047
    8. '+' → logprob: -11.409496307373047
    9. ')' → logprob: -12.284496307373047
    10. '0' → logprob: -13.034496307373047

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -15.375003814697266
    4. '-' → logprob: -16.875003814697266
    5. '   ' → logprob: -17.000003814697266
    6. '2' → logprob: -17.312503814697266
    7. '
' → logprob: -17.375003814697266
    8. '１' → logprob: -17.875003814697266
    9. '

' → logprob: -18.000003814697266
    10. '۱' → logprob: -18.062503814697266

Token 199: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.00414761109277606
    2. ',' → logprob: -5.504147529602051
    3. '-' → logprob: -10.37914752960205
    4. ' ,-' → logprob: -10.62914752960205
    5. '1' → logprob: -11.37914752960205
    6. ' ,' → logprob: -14.00414752960205
    7. ',
' → logprob: -15.00414752960205
    8. '```' → logprob: -15.25414752960205
    9. ',None' → logprob: -15.37914752960205
    10. ' -' → logprob: -15.37914752960205

Token 200: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -13.500003814697266
    3. '-' → logprob: -13.750003814697266
    4. '```' → logprob: -14.500003814697266
    5. '   ' → logprob: -15.500003814697266
    6. '2' → logprob: -15.875003814697266
    7. '

' → logprob: -16.875003814697266
    8. '１' → logprob: -17.187503814697266
    9. '
' → logprob: -17.687503814697266
    10. '  ' → logprob: -17.687503814697266

Token 201: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0006538204033859074
    2. '))
' → logprob: -8.250654220581055
    3. ')' → logprob: -8.375654220581055
    4. ' ))' → logprob: -9.000654220581055
    5. ',' → logprob: -10.625654220581055
    6. '))

' → logprob: -12.500654220581055
    7. ')))' → logprob: -12.625654220581055
    8. '));' → logprob: -13.000654220581055
    9. ' ' → logprob: -13.625654220581055
    10. '),' → logprob: -14.375654220581055

Token 202: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0490366220474243
    2. 'for' → logprob: -1.1740366220474243
    3. '<|end|>' → logprob: -1.1740366220474243
    4. '   ' → logprob: -4.674036502838135
    5. ')' → logprob: -4.799036502838135
    6. '
' → logprob: -5.049036502838135
    7. ' ' → logprob: -5.424036502838135
    8. '	for' → logprob: -7.799036502838135
    9. '<|end|>' → logprob: -7.799036502838135
    10. ':' → logprob: -7.924036502838135

Token 203: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.23238082230091095
    2. ' for' → logprob: -1.6073808670043945
    3. '<|end|>' → logprob: -5.1073808670043945
    4. '   ' → logprob: -8.107380867004395
    5. ')' → logprob: -8.732380867004395
    6. ' ' → logprob: -8.857380867004395
    7. 'x' → logprob: -10.107380867004395
    8. 'i' → logprob: -10.232380867004395
    9. '[' → logprob: -10.232380867004395
    10. '+' → logprob: -10.607380867004395

Token 204: ' wish' (ID: 8115)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6237313151359558
    2. ' i' → logprob: -1.6237313747406006
    3. 'x' → logprob: -1.8737313747406006
    4. ' x' → logprob: -3.2487313747406006
    5. ' idx' → logprob: -3.6237313747406006
    6. 'idx' → logprob: -4.2487311363220215
    7. 'v' → logprob: -4.9987311363220215
    8. 'k' → logprob: -5.3737311363220215
    9. ' v' → logprob: -5.6237311363220215
    10. 'l' → logprob: -6.2487311363220215

Token 205: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011603808030486107
    2. 'in' → logprob: -5.386603832244873
    3. ' ' → logprob: -6.261603832244873
    4. '_idx' → logprob: -6.261603832244873
    5. 'idx' → logprob: -6.761603832244873
    6. 'x' → logprob: -6.886603832244873
    7. '_' → logprob: -7.761603832244873
    8. 'dx' → logprob: -9.136603355407715
    9. 'ex' → logprob: -9.386603355407715
    10. 'd' → logprob: -9.761603355407715

Token 206: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.2986036539077759
    2. ' lst' → logprob: -1.4236036539077759
    3. ' range' → logprob: -4.548603534698486
    4. 'range' → logprob: -5.048603534698486
    5. 'G' → logprob: -9.798604011535645
    6. ' ' → logprob: -10.173604011535645
    7. 'l' → logprob: -10.298604011535645
    8. ' G' → logprob: -10.298604011535645
    9. '   ' → logprob: -10.736104011535645
    10. '(lst' → logprob: -11.298604011535645

Token 207: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009320637909695506
    2. ':
' → logprob: -7.000932216644287
    3. ' :' → logprob: -11.000931739807129
    4. '):' → logprob: -13.000931739807129
    5. '<|end|>' → logprob: -14.750931739807129
    6. ':

' → logprob: -14.875931739807129
    7. '):
' → logprob: -15.500931739807129
    8. ':
' → logprob: -15.875931739807129
    9. ':**' → logprob: -16.125932693481445
    10. ',' → logprob: -16.250932693481445

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039190616458654404
    2. '   ' → logprob: -3.7891905307769775
    3. '<|end|>' → logprob: -5.039190769195557
    4. '
' → logprob: -5.914190769195557
    5. 'hat' → logprob: -6.289190769195557
    6. ' z' → logprob: -6.914190769195557
    7. ' hat' → logprob: -7.289190769195557
    8. '        
' → logprob: -7.539190769195557
    9. 'z' → logprob: -8.164190292358398
    10. ',' → logprob: -8.414190292358398

Token 209: ' z' (ID: 579)
  Prédit: 'hat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hat' → logprob: -1.0218302011489868
    2. '   ' → logprob: -1.3968302011489868
    3. 'z' (adapté à ' z') → logprob: -2.2718300819396973
    4. '
' → logprob: -2.5218300819396973
    5. 'h' → logprob: -3.0218300819396973
    6. ' hat' → logprob: -3.7718300819396973
    7. 's' → logprob: -3.8968300819396973
    8. '       ' → logprob: -4.021830081939697
    9. 'v' → logprob: -4.396830081939697
    10. 'val' → logprob: -4.646830081939697

Token 210: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.7341798543930054
    2. ' ^=' → logprob: -1.3591798543930054
    3. ' <<=' → logprob: -2.234179973602295
    4. ' *=' → logprob: -2.859179973602295
    5. '^' → logprob: -2.984179973602295
    6. '=' → logprob: -3.984179973602295
    7. ' =' → logprob: -3.984179973602295
    8. '<<' → logprob: -4.734179973602295
    9. '+=' → logprob: -7.109179973602295
    10. '*' → logprob: -7.234179973602295

Token 211: ' z' (ID: 579)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.01859797164797783
    2. 'z' → logprob: -4.1435980796813965
    3. '(A' → logprob: -7.1435980796813965
    4. ' (' → logprob: -7.2685980796813965
    5. '(' → logprob: -7.6435980796813965
    6. '(G' → logprob: -8.143597602844238
    7. '(P' → logprob: -8.768597602844238
    8. 'A' → logprob: -9.893597602844238
    9. ' z' → logprob: -10.143597602844238
    10. 'G' → logprob: -12.143597602844238

Token 212: '*A' (ID: 166365)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.029459543526172638
    2. ' *' → logprob: -3.9044594764709473
    3. '*A' → logprob: -4.779459476470947
    4. '*z' → logprob: -7.779459476470947
    5. '*(' → logprob: -10.404459953308105
    6. '*a' → logprob: -12.154459953308105
    7. '<<' → logprob: -12.529459953308105
    8. '*g' → logprob: -12.654459953308105
    9. '*x' → logprob: -12.779459953308105
    10. '*C' → logprob: -12.904459953308105

Token 213: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.02672821655869484
    2. ' %' → logprob: -3.6517281532287598
    3. '
' → logprob: -8.151728630065918
    4. '%x' → logprob: -9.276728630065918
    5. '%D' → logprob: -12.026728630065918
    6. '%A' → logprob: -12.151728630065918
    7. '%B' → logprob: -12.401728630065918
    8. '%=' → logprob: -12.526728630065918
    9. '%C' → logprob: -12.651728630065918
    10. '%n' → logprob: -12.776728630065918

Token 214: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -7.896309739408025e-07
    2. ' P' → logprob: -14.250000953674316
    3. '998' → logprob: -17.5
    4. '(P' → logprob: -18.625
    5. ' ' → logprob: -20.5
    6. '	P' → logprob: -20.75
    7. '=P' → logprob: -21.0
    8. '.P' → logprob: -21.375
    9. '\P' → logprob: -21.5
    10. '<P' → logprob: -21.625

Token 215: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04848744347691536
    2. '
' → logprob: -3.548487424850464
    3. '   ' → logprob: -4.048487663269043
    4. '<|end|>' → logprob: -7.798487663269043
    5. ',' → logprob: -8.798487663269043
    6. 'hat' → logprob: -9.173487663269043
    7. '        
' → logprob: -9.423487663269043
    8. '           ' → logprob: -9.548487663269043
    9. ' ' → logprob: -9.673487663269043
    10. '...' → logprob: -9.798487663269043

Token 216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023098846431821585
    2. '   ' → logprob: -6.252309799194336
    3. '
' → logprob: -8.752309799194336
    4. '<|end|>' → logprob: -9.877309799194336
    5. 'hat' → logprob: -9.877309799194336
    6. '```' → logprob: -10.502309799194336
    7. ',' → logprob: -11.002309799194336
    8. 's' → logprob: -11.752309799194336
    9. '        
' → logprob: -11.752309799194336
    10. 'def' → logprob: -12.002309799194336

Token 217: ' hat' (ID: 4545)
  Prédit: 'hat'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hat' (adapté à ' hat') → logprob: -0.017612121999263763
    2. '   ' → logprob: -5.017611980438232
    3. 'for' → logprob: -5.142611980438232
    4. 'h' → logprob: -6.892611980438232
    5. 'g' → logprob: -7.517611980438232
    6. ' hat' → logprob: -8.01761245727539
    7. 's' → logprob: -8.26761245727539
    8. 'x' → logprob: -8.39261245727539
    9. 'idx' → logprob: -8.51761245727539
    10. 'v' → logprob: -8.64261245727539

Token 218: '[G' (ID: 187982)
  Prédit: '[z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -0.36969268321990967
    2. '[w' → logprob: -1.7446926832199097
    3. '[G' → logprob: -2.369692802429199
    4. '[' → logprob: -3.369692802429199
    5. '[g' → logprob: -5.619692802429199
    6. '[h' → logprob: -6.619692802429199
    7. '[s' → logprob: -8.2446928024292
    8. '[A' → logprob: -8.4946928024292
    9. ' [' → logprob: -8.9946928024292
    10. '[(' → logprob: -8.9946928024292

Token 219: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.00024477019906044006
    2. '[' → logprob: -8.875245094299316
    3. 'wish' → logprob: -9.875245094299316
    4. ']' → logprob: -10.750245094299316
    5. '][' → logprob: -11.875245094299316
    6. 'w' → logprob: -12.125245094299316
    7. '   ' → logprob: -12.750245094299316
    8. '[
' → logprob: -12.750245094299316
    9. '[idx' → logprob: -13.000245094299316
    10. '
' → logprob: -13.500245094299316

Token 220: 'ish' (ID: 1109)
  Prédit: 'ish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ish' → logprob: -0.00020592445798683912
    2. 'ist' → logprob: -9.125205993652344
    3. 'sh' → logprob: -10.000205993652344
    4. 'is' → logprob: -10.250205993652344
    5. 'ishlist' → logprob: -11.625205993652344
    6. 'wish' → logprob: -13.750205993652344
    7. ']' → logprob: -14.250205993652344
    8. '```' → logprob: -14.375205993652344
    9. 'ash' → logprob: -14.500205993652344
    10. 'list' → logprob: -14.500205993652344

Token 221: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.11850223690271378
    2. ']' → logprob: -2.243502140045166
    3. ']+' → logprob: -6.118502140045166
    4. ']^' → logprob: -6.993502140045166
    5. ']]=' → logprob: -7.118502140045166
    6. ']+=' → logprob: -7.493502140045166
    7. ']*' → logprob: -7.618502140045166
    8. ' ]]' → logprob: -8.118502616882324
    9. ' ]' → logprob: -8.743502616882324
    10. ']]]' → logprob: -10.118502616882324

Token 222: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02235395647585392
    2. ' +=' → logprob: -4.6473541259765625
    3. '=' → logprob: -5.1473541259765625
    4. ' ^=' → logprob: -5.3973541259765625
    5. '^' → logprob: -6.3973541259765625
    6. ' =' → logprob: -8.147354125976562
    7. ']+=' → logprob: -8.772354125976562
    8. '|' → logprob: -10.647354125976562
    9. ' |=' → logprob: -10.897354125976562
    10. '+=(' → logprob: -11.772354125976562

Token 223: ' (' (ID: 350)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.022001715376973152
    2. '(h' → logprob: -4.39700174331665
    3. ' (' → logprob: -5.64700174331665
    4. '(w' → logprob: -6.14700174331665
    5. 'z' → logprob: -6.27200174331665
    6. 'hat' → logprob: -7.27200174331665
    7. '(' → logprob: -7.39700174331665
    8. '(max' → logprob: -8.647001266479492
    9. ' z' → logprob: -9.397001266479492
    10. ' hat' → logprob: -9.522001266479492

Token 224: 'hat' (ID: 13274)
  Prédit: 'hat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hat' → logprob: -0.0026711381506174803
    2. ' hat' → logprob: -6.002671241760254
    3. '(h' → logprob: -8.752671241760254
    4. 'h' → logprob: -11.627671241760254
    5. '_hat' → logprob: -12.252671241760254
    6. '(' → logprob: -12.502671241760254
    7. ' (' → logprob: -12.627671241760254
    8. '   ' → logprob: -13.002671241760254
    9. 'hut' → logprob: -13.127671241760254
    10. '
' → logprob: -13.502671241760254

Token 225: '[G' (ID: 187982)
  Prédit: '[G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[G' → logprob: -0.024080708622932434
    2. 'G' → logprob: -3.774080753326416
    3. 'hat' → logprob: -7.399080753326416
    4. '[' → logprob: -8.524080276489258
    5. '[g' → logprob: -11.149080276489258
    6. '
' → logprob: -13.274080276489258
    7. '(G' → logprob: -13.274080276489258
    8. ' G' → logprob: -13.399080276489258
    9. '```' → logprob: -13.899080276489258
    10. '	G' → logprob: -14.524080276489258

Token 226: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.20292286574840546
    2. 'wish' → logprob: -1.7029228210449219
    3. 'wishlist' → logprob: -6.702922821044922
    4. ' wish' → logprob: -9.327922821044922
    5. '[' → logprob: -9.702922821044922
    6. 'w' → logprob: -9.827922821044922
    7. '<w' → logprob: -10.327922821044922
    8. '>w' → logprob: -11.327922821044922
    9. 'wist' → logprob: -11.452922821044922
    10. '	w' → logprob: -12.327922821044922

Token 227: 'ish' (ID: 1109)
  Prédit: 'ish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ish' → logprob: -0.001706247916445136
    2. 'wish' → logprob: -6.876706123352051
    3. 'sh' → logprob: -7.501706123352051
    4. ']' → logprob: -10.75170612335205
    5. 'ishlist' → logprob: -10.87670612335205
    6. '```' → logprob: -11.50170612335205
    7. ' wish' → logprob: -11.62670612335205
    8. '[' → logprob: -11.75170612335205
    9. 'ist' → logprob: -12.12670612335205
    10. ')' → logprob: -12.37670612335205

Token 228: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07903563976287842
    2. ']+' → logprob: -2.579035758972168
    3. ' ]' → logprob: -9.329035758972168
    4. ']*' → logprob: -10.579035758972168
    5. ']]' → logprob: -10.954035758972168
    6. ']+=' → logprob: -11.954035758972168
    7. '+' → logprob: -13.204035758972168
    8. '']' → logprob: -13.954035758972168
    9. ']
' → logprob: -14.204035758972168
    10. '"]' → logprob: -14.829035758972168

Token 229: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2037421315908432
    2. ' +' → logprob: -1.7037421464920044
    3. '*z' → logprob: -6.453742027282715
    4. '*' → logprob: -8.078742027282715
    5. ' *' → logprob: -8.828742027282715
    6. '+w' → logprob: -9.328742027282715
    7. '+A' → logprob: -10.078742027282715
    8. '-z' → logprob: -10.078742027282715
    9. '+x' → logprob: -10.953742027282715
    10. '+h' → logprob: -11.203742027282715

Token 230: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.004641711246222258
    2. ' z' → logprob: -5.379641532897949
    3. '   ' → logprob: -11.12964153289795
    4. '
' → logprob: -13.12964153289795
    5. '       ' → logprob: -13.75464153289795
    6. '	z' → logprob: -13.87964153289795
    7. '1' → logprob: -14.87964153289795
    8. ' ' → logprob: -14.87964153289795
    9. '
' → logprob: -15.25464153289795
    10. '(z' → logprob: -15.25464153289795

Token 231: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3132784366607666
    2. ')%' → logprob: -1.3132784366607666
    3. ' )' → logprob: -11.563278198242188
    4. '*' → logprob: -12.813278198242188
    5. '   ' → logprob: -13.313278198242188
    6. '%' → logprob: -14.313278198242188
    7. ')
' → logprob: -14.313278198242188
    8. '       ' → logprob: -14.938278198242188
    9. ')#' → logprob: -15.563278198242188
    10. ')>>' → logprob: -15.688278198242188

Token 232: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.6240566083070007e-06
    2. ' P' → logprob: -13.500001907348633
    3. '(P' → logprob: -15.750001907348633
    4. '998' → logprob: -18.500001907348633
    5. '[P' → logprob: -18.875001907348633
    6. '```' → logprob: -18.875001907348633
    7. ' ' → logprob: -19.625001907348633
    8. '	P' → logprob: -19.750001907348633
    9. '`' → logprob: -20.000001907348633
    10. '=P' → logprob: -20.125001907348633

Token 233: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 234: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 235: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5966479182243347
    2. '   ' → logprob: -1.0966479778289795
    3. '<|end|>' → logprob: -3.2216479778289795
    4. 'hat' → logprob: -3.8466479778289795
    5. '#' → logprob: -3.9716479778289795
    6. 'print' → logprob: -4.7216477394104
    7. 'for' → logprob: -4.9716477394104
    8. ')' → logprob: -5.2216477394104
    9. 'def' → logprob: -5.7216477394104
    10. 'sum' → logprob: -6.4716477394104

Token 236: ' hat' (ID: 4545)
  Prédit: 'hat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hat' → logprob: -0.2258787453174591
    2. ' hat' → logprob: -2.1008787155151367
    3. 'sum' → logprob: -2.9758787155151367
    4. ' sum' → logprob: -3.7258787155151367
    5. ' ' → logprob: -6.475878715515137
    6. '(sum' → logprob: -7.475878715515137
    7. '0' → logprob: -7.600878715515137
    8. '
' → logprob: -8.413378715515137
    9. 'tuple' → logprob: -8.788378715515137
    10. '(' → logprob: -8.913378715515137

Token 237: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 238: 'H' (ID: 39)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5137258768081665
    2. ')' → logprob: -1.5137258768081665
    3. 'hat' → logprob: -1.7637258768081665
    4. '[' → logprob: -2.013725757598877
    5. '<|end|>' → logprob: -2.138725757598877
    6. 'P' → logprob: -2.513725757598877
    7. '(' → logprob: -4.138725757598877
    8. 'def' → logprob: -4.638725757598877
    9. ',' → logprob: -5.388725757598877
    10. '
' → logprob: -5.513725757598877

Token 239: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31844645738601685
    2. '=' → logprob: -1.818446397781372
    3. '[' → logprob: -2.693446397781372
    4. '_' → logprob: -4.193446636199951
    5. ',' → logprob: -4.568446636199951
    6. '<|end|>' → logprob: -5.443446636199951
    7. ' ' → logprob: -5.693446636199951
    8. '.' → logprob: -5.943446636199951
    9. ')' → logprob: -6.193446636199951
    10. '(' → logprob: -7.443446636199951

Token 240: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22910909354686737
    2. ',' → logprob: -1.8541090488433838
    3. '=' → logprob: -3.104109048843384
    4. ' ,' → logprob: -6.854109287261963
    5. ',H' → logprob: -6.854109287261963
    6. '1' → logprob: -7.604109287261963
    7. '[' → logprob: -9.104108810424805
    8. ')' → logprob: -9.229108810424805
    9. 'H' → logprob: -9.479108810424805
    10. '   ' → logprob: -9.479108810424805

Token 241: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.03804688900709152
    2. ' calc' → logprob: -3.2880468368530273
    3. '(calc' → logprob: -12.413046836853027
    4. ' ' → logprob: -14.788046836853027
    5. '   ' → logprob: -14.788046836853027
    6. 'cal' → logprob: -15.163046836853027
    7. '.calc' → logprob: -15.163046836853027
    8. '[' → logprob: -17.413047790527344
    9. '[]' → logprob: -17.538047790527344
    10. '_calc' → logprob: -17.788047790527344

Token 242: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006734318565577269
    2. '()
' → logprob: -5.006734371185303
    3. '()

' → logprob: -11.506733894348145
    4. '()`' → logprob: -12.881733894348145
    5. '(),' → logprob: -13.381733894348145
    6. '()
' → logprob: -13.881733894348145
    7. '(' → logprob: -14.256733894348145
    8. '()"' → logprob: -14.381733894348145
    9. ' ()' → logprob: -14.631733894348145
    10. '()\' → logprob: -14.631733894348145

Token 243: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.8550976164988242e-05
    2. '
' → logprob: -11.750018119812012
    3. 'print' → logprob: -12.250018119812012
    4. 'import' → logprob: -13.625018119812012
    5. '```' → logprob: -14.000018119812012
    6. ' H' → logprob: -14.125018119812012
    7. '_H' → logprob: -14.625018119812012
    8. 'def' → logprob: -14.625018119812012
    9. '_' → logprob: -15.000018119812012
    10. '#' → logprob: -15.250018119812012

Token 244: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014239625306800008
    2. '1' → logprob: -9.000142097473145
    3. '=' → logprob: -11.625142097473145
    4. ' =' → logprob: -11.750142097473145
    5. '```' → logprob: -14.125142097473145
    6. ' ' → logprob: -14.500142097473145
    7. '_' → logprob: -15.250142097473145
    8. '
' → logprob: -15.500142097473145
    9. '_=' → logprob: -16.25014305114746
    10. 'H' → logprob: -16.62514305114746

Token 245: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759414434432983
    2. ' =' → logprob: -0.8259414434432983
    3. ' ' → logprob: -13.95094108581543
    4. ',' → logprob: -14.70094108581543
    5. ' ' → logprob: -15.95094108581543
    6. '=

' → logprob: -15.95094108581543
    7. '＝' → logprob: -16.20094108581543
    8. '=
' → logprob: -16.32594108581543
    9. ' =
' → logprob: -16.45094108581543
    10. '[' → logprob: -17.82594108581543

Token 246: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.1427226960659027
    2. ' calc' → logprob: -2.0177226066589355
    3. '(calc' → logprob: -10.142723083496094
    4. 'cal' → logprob: -13.017723083496094
    5. ' ' → logprob: -13.267723083496094
    6. '[' → logprob: -13.392723083496094
    7. '.calc' → logprob: -14.017723083496094
    8. ' [' → logprob: -14.517723083496094
    9. '(' → logprob: -14.892723083496094
    10. '[]' → logprob: -15.392723083496094

Token 247: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.248469718324486e-05
    2. '(' → logprob: -11.125022888183594
    3. '()
' → logprob: -12.250022888183594
    4. '()`' → logprob: -14.500022888183594
    5. '()]' → logprob: -14.625022888183594
    6. '()

' → logprob: -15.125022888183594
    7. '()>' → logprob: -15.125022888183594
    8. '();' → logprob: -15.125022888183594
    9. ' ()' → logprob: -15.375022888183594
    10. '()<' → logprob: -15.750022888183594

Token 248: 'H' (ID: 39)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.163543701171875
    2. 'res' → logprob: -1.413543701171875
    3. 'hat' → logprob: -1.913543701171875
    4. 'ans' → logprob: -2.538543701171875
    5. 'answer' → logprob: -2.788543701171875
    6. 'print' → logprob: -3.288543701171875
    7. 'H' → logprob: -3.413543701171875
    8. 'h' → logprob: -3.788543701171875
    9. '^' → logprob: -4.163543701171875
    10. 'for' → logprob: -5.288543701171875

Token 249: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.040883395820856094
    2. '1' → logprob: -3.6658833026885986
    3. '[' → logprob: -4.415883541107178
    4. '=' → logprob: -6.540883541107178
    5. ' =' → logprob: -7.415883541107178
    6. '.' → logprob: -9.41588306427002
    7. '_' → logprob: -9.66588306427002
    8. '[
' → logprob: -10.29088306427002
    9. '#' → logprob: -10.41588306427002
    10. '(' → logprob: -10.79088306427002

Token 250: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09048192203044891
    2. '=' → logprob: -2.465481996536255
    3. ' ' → logprob: -7.090481758117676
    4. ' =[' → logprob: -8.465481758117676
    5. '[' → logprob: -8.840481758117676
    6. '=[' → logprob: -8.965481758117676
    7. '<|end|>' → logprob: -9.215481758117676
    8. '=[]' → logprob: -10.465481758117676
    9. '  ' → logprob: -10.465481758117676
    10. ')' → logprob: -11.715481758117676

Token 251: ' calc' (ID: 25691)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.387019544839859
    2. '[(' → logprob: -1.8870195150375366
    3. ' [' → logprob: -2.012019634246826
    4. ' [(' → logprob: -3.512019634246826
    5. '[P' → logprob: -6.262019634246826
    6. '[h' → logprob: -6.637019634246826
    7. '([' → logprob: -7.637019634246826
    8. '(' → logprob: -7.762019634246826
    9. '[((' → logprob: -8.387019157409668
    10. '[len' → logprob: -8.512019157409668

Token 252: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -5.3954463510308415e-05
    2. '(' → logprob: -10.250054359436035
    3. '()
' → logprob: -12.375054359436035
    4. '()<' → logprob: -12.375054359436035
    5. '()(' → logprob: -13.000054359436035
    6. '()>' → logprob: -13.375054359436035
    7. '()`' → logprob: -14.000054359436035
    8. ' ()' → logprob: -14.000054359436035
    9. '().' → logprob: -14.375054359436035
    10. '();' → logprob: -14.500054359436035

Token 253: 'answer' (ID: 17021)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9578046798706055
    2. 'result' → logprob: -1.9578046798706055
    3. 'res' → logprob: -2.2078046798706055
    4. 'ans' → logprob: -2.3328046798706055
    5. 'hat' → logprob: -2.4578046798706055
    6. 'H' → logprob: -2.9578046798706055
    7. 'h' → logprob: -3.3328046798706055
    8. 'answer' → logprob: -3.5828046798706055
    9. 'for' → logprob: -3.8328046798706055
    10. 'return' → logprob: -4.8328046798706055

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03366414085030556
    2. '=' → logprob: -3.4086642265319824
    3. '[' → logprob: -12.658663749694824
    4. '<|end|>' → logprob: -12.783663749694824
    5. '(' → logprob: -13.033663749694824
    6. '[:]' → logprob: -13.283663749694824
    7. ' ' → logprob: -13.533663749694824
    8. ')' → logprob: -13.783663749694824
    9. 's' → logprob: -14.033663749694824
    10. ' =[' → logprob: -14.033663749694824

Token 255: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5477710962295532
    2. ' (' → logprob: -1.9227710962295532
    3. 'sum' → logprob: -2.6727709770202637
    4. ' sum' → logprob: -2.9227709770202637
    5. '(H' → logprob: -3.1727709770202637
    6. '(sum' → logprob: -3.1727709770202637
    7. ' ' → logprob: -3.5477709770202637
    8. '(' → logprob: -3.5477709770202637
    9. '(P' → logprob: -5.547770977020264
    10. '(h' → logprob: -5.797770977020264

Token 256: '0' (ID: 15)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -1.0246719121932983
    2. '0' → logprob: -1.1496719121932983
    3. 'sum' → logprob: -1.7746719121932983
    4. '(sum' → logprob: -2.399672031402588
    5. '(' → logprob: -3.649672031402588
    6. '(h' → logprob: -4.024672031402588
    7. '[' → logprob: -4.524672031402588
    8. '[(' → logprob: -5.649672031402588
    9. 'H' → logprob: -6.149672031402588
    10. '((' → logprob: -6.649672031402588

Token 257: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4347788393497467
    2. ' for' → logprob: -1.1847788095474243
    3. '
' → logprob: -3.809778928756714
    4. '+' → logprob: -4.434778690338135
    5. '[' → logprob: -5.934778690338135
    6. '+=' → logprob: -5.934778690338135
    7. '<|end|>' → logprob: -6.059778690338135
    8. ' +=' → logprob: -6.309778690338135
    9. '```' → logprob: -7.434778690338135
    10. '=' → logprob: -7.434778690338135

Token 258: 'j' (ID: 73)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0313398540019989
    2. ' for' → logprob: -3.5313398838043213
    3. '<|end|>' → logprob: -6.906339645385742
    4. '+' → logprob: -8.406339645385742
    5. '```' → logprob: -8.531339645385742
    6. '
' → logprob: -9.531339645385742
    7. '[' → logprob: -9.781339645385742
    8. '[
' → logprob: -12.031339645385742
    9. 'answer' → logprob: -12.156339645385742
    10. ')' → logprob: -12.281339645385742

Token 259: 'range' (ID: 20967)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5361565351486206
    2. ' =' → logprob: -0.9111565351486206
    3. ' in' → logprob: -4.78615665435791
    4. 'in' → logprob: -6.66115665435791
    5. ',' → logprob: -6.91115665435791
    6. '<|end|>' → logprob: -7.28615665435791
    7. ')' → logprob: -7.91115665435791
    8. 'for' → logprob: -7.91115665435791
    9. ' ' → logprob: -8.16115665435791
    10. ' for' → logprob: -8.53615665435791

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327730417251587
    2. '=' → logprob: -1.313277244567871
    3. ' ' → logprob: -11.813277244567871
    4. 'range' → logprob: -12.813277244567871
    5. '   ' → logprob: -13.563277244567871
    6. ' ' → logprob: -14.813277244567871
    7. 'for' → logprob: -14.813277244567871
    8. '  ' → logprob: -14.938277244567871
    9. 's' → logprob: -14.938277244567871
    10. '1' → logprob: -14.938277244567871

Token 261: ' list' (ID: 1562)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08435125648975372
    2. ' range' → logprob: -2.5843513011932373
    3. 'len' → logprob: -6.334351062774658
    4. 'N' → logprob: -6.459351062774658
    5. '(range' → logprob: -7.459351062774658
    6. '102' → logprob: -7.834351062774658
    7. ' N' → logprob: -8.084351539611816
    8. ' len' → logprob: -8.709351539611816
    9. ' ' → logprob: -8.834351539611816
    10. 'min' → logprob: -9.959351539611816

Token 262: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -1.3782830137643032e-05
    2. 'range' → logprob: -11.25001335144043
    3. '(' → logprob: -14.25001335144043
    4. '
' → logprob: -18.50001335144043
    5. '```' → logprob: -18.87501335144043
    6. '(
' → logprob: -19.00001335144043
    7. '(re' → logprob: -19.12501335144043
    8. ' range' → logprob: -19.37501335144043
    9. '`' → logprob: -19.75001335144043
    10. '((' → logprob: -19.87501335144043

Token 263: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02469753846526146
    2. '(N' → logprob: -4.149697303771973
    3. '(len' → logprob: -4.899697303771973
    4. '(P' → logprob: -7.774697303771973
    5. '(-' → logprob: -8.524697303771973
    6. '(H' → logprob: -9.024697303771973
    7. '(j' → logprob: -9.149697303771973
    8. '((' → logprob: -9.149697303771973
    9. '(max' → logprob: -9.774697303771973
    10. '(K' → logprob: -10.399697303771973

Token 264: '102' (ID: 7672)
  Prédit: '102'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '102' → logprob: -0.9541879892349243
    2. '4' → logprob: -1.5791879892349243
    3. '3' → logprob: -2.3291878700256348
    4. '(' → logprob: -2.5791878700256348
    5. '101' → logprob: -3.0791878700256348
    6. '64' → logprob: -3.8291878700256348
    7. '8' → logprob: -3.8291878700256348
    8. '11' → logprob: -4.079187870025635
    9. '16' → logprob: -4.204187870025635
    10. 'N' → logprob: -4.704187870025635

Token 265: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.60414821645827e-06
    2. '5' → logprob: -13.000004768371582
    3. '3' → logprob: -13.625004768371582
    4. '```' → logprob: -14.750004768371582
    5. '
' → logprob: -15.125004768371582
    6. ')' → logprob: -17.062503814697266
    7. '
' → logprob: -17.187503814697266
    8. '４' → logprob: -17.375003814697266
    9. '0' → logprob: -17.500003814697266
    10. '{' → logprob: -17.500003814697266

Token 266: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.009974467568099499
    2. '))
' → logprob: -4.634974479675293
    3. '+' → logprob: -10.134974479675293
    4. ' ))' → logprob: -10.134974479675293
    5. ')' → logprob: -10.259974479675293
    6. '))

' → logprob: -10.384974479675293
    7. ',' → logprob: -10.759974479675293
    8. ')))' → logprob: -10.884974479675293
    9. '**' → logprob: -11.634974479675293
    10. '   ' → logprob: -12.884974479675293

Token 267: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.8802491215174086e-05
    2. ' for' → logprob: -10.875028610229492
    3. '```' → logprob: -12.000028610229492
    4. '
' → logprob: -13.000028610229492
    5. '``' → logprob: -14.000028610229492
    6. '   ' → logprob: -14.375028610229492
    7. '	for' → logprob: -17.375028610229492
    8. 'i' → logprob: -17.500028610229492
    9. 'answer' → logprob: -18.250028610229492
    10. '`
' → logprob: -18.375028610229492

Token 268: ' aaa' (ID: 170080)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7037126421928406
    2. ' i' → logprob: -1.0787127017974854
    3. 'x' → logprob: -3.0787127017974854
    4. ' x' → logprob: -3.4537127017974854
    5. 'k' → logprob: -3.9537127017974854
    6. ' k' → logprob: -4.328712463378906
    7. 'j' → logprob: -4.453712463378906
    8. 'a' → logprob: -4.453712463378906
    9. ' j' → logprob: -4.453712463378906
    10. ' a' → logprob: -4.953712463378906

Token 269: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1398339867591858
    2. 'in' → logprob: -2.139833927154541
    3. '1' → logprob: -4.639833927154541
    4. '0' → logprob: -6.139833927154541
    5. '_' → logprob: -7.514833927154541
    6. '[' → logprob: -9.1398344039917
    7. '_in' → logprob: -9.1398344039917
    8. '3' → logprob: -10.0148344039917
    9. ' ' → logprob: -10.1398344039917
    10. 'a' → logprob: -10.3898344039917

Token 270: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011097577400505543
    2. ' j' → logprob: -4.511097431182861
    3. '   ' → logprob: -10.51109790802002
    4. ' ' → logprob: -11.76109790802002
    5. 'range' → logprob: -12.26109790802002
    6. 'H' → logprob: -13.13609790802002
    7. '	j' → logprob: -13.13609790802002
    8. ' range' → logprob: -13.38609790802002
    9. '    ' → logprob: -14.13609790802002
    10. '  ' → logprob: -14.38609790802002

Token 271: 'range' (ID: 20967)
  Prédit: 'range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002273774443892762
    2. 'ange' → logprob: -9.000226974487305
    3. 'in' → logprob: -9.500226974487305
    4. 'r' → logprob: -11.625226974487305
    5. 'j' → logprob: -12.000226974487305
    6. 'rage' → logprob: -12.875226974487305
    7. '(range' → logprob: -12.875226974487305
    8. '_range' → logprob: -13.875226974487305
    9. '   ' → logprob: -14.000226974487305
    10. ' in' → logprob: -14.000226974487305

Token 272: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012220130302011967
    2. ' in' → logprob: -6.876222133636475
    3. ':
' → logprob: -9.126221656799316
    4. ' :' → logprob: -10.251221656799316
    5. ',' → logprob: -10.376221656799316
    6. '=' → logprob: -12.751221656799316
    7. 'in' → logprob: -13.126221656799316
    8. '[' → logprob: -13.376221656799316
    9. '   ' → logprob: -13.501221656799316
    10. ' for' → logprob: -13.501221656799316

Token 273: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7439315915107727
    2. '   ' → logprob: -0.9939315915107727
    3. 'for' → logprob: -1.868931531906128
    4. ' answer' → logprob: -8.743931770324707
    5. '	for' → logprob: -9.243931770324707
    6. 'answer' → logprob: -9.993931770324707
    7. '```' → logprob: -10.868931770324707
    8. '       ' → logprob: -11.243931770324707
    9. ' ' → logprob: -11.993931770324707
    10. '  ' → logprob: -12.868931770324707

Token 274: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007337202783674002
    2. ' for' → logprob: -5.0073370933532715
    3. '   ' → logprob: -7.7573370933532715
    4. 'answer' → logprob: -8.63233757019043
    5. '	for' → logprob: -12.00733757019043
    6. ' answer' → logprob: -12.13233757019043
    7. ' ' → logprob: -12.75733757019043
    8. '  ' → logprob: -14.38233757019043
    9. '```' → logprob: -15.13233757019043
    10. 'if' (adapté à ' if') → logprob: -15.63233757019043

Token 275: ' not' (ID: 625)
  Prédit: 'hat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hat' → logprob: -1.1076663732528687
    2. 'H' → logprob: -1.3576663732528687
    3. ' H' → logprob: -1.6076663732528687
    4. ' hat' → logprob: -1.9826663732528687
    5. ' aaa' → logprob: -3.857666492462158
    6. ' (' → logprob: -4.107666492462158
    7. '(' → logprob: -4.982666492462158
    8. '(H' → logprob: -4.982666492462158
    9. ' answer' → logprob: -5.232666492462158
    10. '   ' → logprob: -5.482666492462158

Token 276: ' H' (ID: 487)
  Prédit: 'hat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hat' → logprob: -1.1066958904266357
    2. 'H' → logprob: -1.4816958904266357
    3. '(H' → logprob: -1.9816958904266357
    4. ' hat' → logprob: -2.7316958904266357
    5. ' (' → logprob: -2.7316958904266357
    6. '(' → logprob: -2.9816958904266357
    7. '((' → logprob: -3.3566958904266357
    8. ' H' → logprob: -3.3566958904266357
    9. '(h' → logprob: -4.606696128845215
    10. '(a' → logprob: -4.606696128845215

Token 277: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008496735244989395
    2. '[' → logprob: -4.8834967613220215
    3. '2' → logprob: -7.8834967613220215
    4. '3' → logprob: -7.8834967613220215
    5. '```' → logprob: -10.133496284484863
    6. '
' → logprob: -11.195996284484863
    7. ' [' → logprob: -11.195996284484863
    8. '   ' → logprob: -11.383496284484863
    9. 'answer' → logprob: -11.945996284484863
    10. '[
' → logprob: -12.070996284484863

Token 278: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.135819760151207e-05
    2. ' [' → logprob: -10.00007152557373
    3. '```' → logprob: -11.62507152557373
    4. '[a' → logprob: -12.50007152557373
    5. '[
' → logprob: -12.75007152557373
    6. '   ' → logprob: -13.12507152557373
    7. '\[' → logprob: -13.25007152557373
    8. '[[' → logprob: -13.62507152557373
    9. 'aaa' → logprob: -13.75007152557373
    10. '[i' → logprob: -14.75007152557373

Token 279: 'aaa' (ID: 55894)
  Prédit: 'aaa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aaa' → logprob: -8.792751032160595e-05
    2. ' aaa' → logprob: -9.62508773803711
    3. '[' → logprob: -11.50008773803711
    4. 'aa' → logprob: -12.50008773803711
    5. '
' → logprob: -13.00008773803711
    6. '   ' → logprob: -13.25008773803711
    7. '```' → logprob: -14.00008773803711
    8. '  ' → logprob: -14.50008773803711
    9. 'abc' → logprob: -14.75008773803711
    10. 'aaaa' → logprob: -14.75008773803711

Token 280: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.012037810869514942
    2. ']:
' → logprob: -4.637037754058838
    3. ']' → logprob: -6.262037754058838
    4. ']==' → logprob: -8.012038230895996
    5. ' ]' → logprob: -11.262038230895996
    6. ']:
' → logprob: -11.512038230895996
    7. ':' → logprob: -12.012038230895996
    8. ']>' → logprob: -12.512038230895996
    9. ']:

' → logprob: -12.512038230895996
    10. '[' → logprob: -14.137038230895996

Token 281: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004728211089968681
    2. ' continue' → logprob: -5.754728317260742
    3. 'continue' → logprob: -6.754728317260742
    4. '   ' → logprob: -8.504728317260742
    5. '	continue' → logprob: -8.879728317260742
    6. '	' → logprob: -10.879728317260742
    7. '           ' → logprob: -11.379728317260742
    8. '	   ' → logprob: -13.004728317260742
    9. ' continues' → logprob: -13.629728317260742
    10. ' ' → logprob: -14.004728317260742

Token 282: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.825100839138031
    2. '       ' → logprob: -0.825100839138031
    3. ' for' → logprob: -2.325100898742676
    4. 'for' → logprob: -3.700100898742676
    5. '    ' → logprob: -7.325100898742676
    6. '<|end|>' → logprob: -8.825100898742676
    7. '	for' → logprob: -9.575100898742676
    8. ' ' → logprob: -9.825100898742676
    9. '     ' → logprob: -10.325100898742676
    10. '
' → logprob: -10.575100898742676

Token 283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12665201723575592
    2. ' for' → logprob: -2.2516520023345947
    3. 'for' → logprob: -4.376652240753174
    4. '       ' → logprob: -7.751652240753174
    5. '    ' → logprob: -8.126651763916016
    6. '
' → logprob: -9.251651763916016
    7. ' ' → logprob: -9.251651763916016
    8. '    
' → logprob: -9.376651763916016
    9. '	for' → logprob: -9.501651763916016
    10. '<|end|>' → logprob: -10.626651763916016

Token 284: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.016229551285505295
    2. '   ' → logprob: -4.516229629516602
    3. ' for' → logprob: -5.266229629516602
    4. '	for' → logprob: -12.641229629516602
    5. ' ' → logprob: -13.891229629516602
    6. '       ' → logprob: -14.516229629516602
    7. '  ' → logprob: -14.516229629516602
    8. 'k' → logprob: -17.0162296295166
    9. '    ' → logprob: -17.2662296295166
    10. '
' → logprob: -17.3912296295166

Token 285: ' b' (ID: 287)
  Prédit: 'bbb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bbb' → logprob: -0.7357479333877563
    2. ' b' → logprob: -0.9857479333877563
    3. ' j' → logprob: -1.9857479333877563
    4. 'jj' → logprob: -5.860747814178467
    5. 'aaa' → logprob: -6.360747814178467
    6. ' y' → logprob: -6.610747814178467
    7. 'j' → logprob: -6.860747814178467
    8. ' aaa' → logprob: -6.985747814178467
    9. 'b' → logprob: -7.610747814178467
    10. ' jj' → logprob: -7.860747814178467

Token 286: 'bb' (ID: 10029)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3698289096355438
    2. 'bb' → logprob: -1.7448289394378662
    3. 'in' → logprob: -2.494828939437866
    4. 'range' → logprob: -3.119828939437866
    5. 'aa' → logprob: -5.494828701019287
    6. 'rr' → logprob: -6.869828701019287
    7. 'jj' → logprob: -7.244828701019287
    8. 'a' → logprob: -7.869828701019287
    9. '_range' → logprob: -7.994828701019287
    10. '_in' → logprob: -7.994828701019287

Token 287: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038063984364271164
    2. 'in' → logprob: -3.2880640029907227
    3. ' ' → logprob: -10.913064002990723
    4. '  ' → logprob: -13.663064002990723
    5. '   ' → logprob: -14.038064002990723
    6. 'n' → logprob: -14.788064002990723
    7. 'import' → logprob: -14.913064002990723
    8. '	in' → logprob: -15.288064002990723
    9. 'In' → logprob: -15.913064002990723
    10. ' ' → logprob: -15.913064002990723

Token 288: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008689741604030132
    2. ' j' → logprob: -4.758689880371094
    3. 'range' → logprob: -10.383689880371094
    4. '   ' → logprob: -10.508689880371094
    5. ' ' → logprob: -12.008689880371094
    6. '[j' → logprob: -12.633689880371094
    7. ' range' → logprob: -13.133689880371094
    8. '  ' → logprob: -13.383689880371094
    9. '    ' → logprob: -13.633689880371094
    10. '	j' → logprob: -14.508689880371094

Token 289: 'range' (ID: 20967)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5773019790649414
    2. 'range' → logprob: -0.8273019790649414
    3. ' j' → logprob: -6.827301979064941
    4. 'r' → logprob: -9.077301979064941
    5. '   ' → logprob: -9.952301979064941
    6. ' ' → logprob: -10.702301979064941
    7. 'ange' → logprob: -10.827301979064941
    8. '[j' → logprob: -11.202301979064941
    9. '```' → logprob: -11.202301979064941
    10. '  ' → logprob: -11.452301979064941

Token 290: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0612577423453331
    2. ':
' → logprob: -3.311257839202881
    3. '       ' → logprob: -4.061257839202881
    4. ' in' → logprob: -5.686257839202881
    5. '<|end|>' → logprob: -6.436257839202881
    6. '   ' → logprob: -8.561257362365723
    7. 'in' → logprob: -8.936257362365723
    8. '[' → logprob: -9.311257362365723
    9. ' :' → logprob: -10.061257362365723
    10. 'if' → logprob: -10.186257362365723

Token 291: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020050073508173227
    2. '<|end|>' → logprob: -6.752005100250244
    3. ' if' → logprob: -7.502005100250244
    4. '   ' → logprob: -8.877004623413086
    5. ' ' → logprob: -10.752004623413086
    6. '               ' → logprob: -10.877004623413086
    7. '	' → logprob: -11.127004623413086
    8. '```' → logprob: -11.127004623413086
    9. '    ' → logprob: -11.377004623413086
    10. 'if' → logprob: -11.502004623413086

Token 292: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3095940947532654
    2. 'if' (adapté à ' if') → logprob: -1.8095941543579102
    3. '       ' → logprob: -2.30959415435791
    4. '           ' → logprob: -6.05959415435791
    5. '               ' → logprob: -8.05959415435791
    6. ' ' → logprob: -8.43459415435791
    7. '<|end|>' → logprob: -8.80959415435791
    8. '   ' → logprob: -9.05959415435791
    9. '	if' → logprob: -10.68459415435791
    10. '        ' → logprob: -11.43459415435791

Token 293: ' H' (ID: 487)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03920448571443558
    2. 'not' → logprob: -3.2892045974731445
    3. ' H' → logprob: -7.4142045974731445
    4. 'H' → logprob: -7.5392045974731445
    5. '(not' → logprob: -11.539204597473145
    6. ' ' → logprob: -11.789204597473145
    7. '   ' → logprob: -12.789204597473145
    8. ' ' → logprob: -13.039204597473145
    9. ' (' → logprob: -13.539204597473145
    10. '(H' → logprob: -13.539204597473145

Token 294: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.24446530640125275
    2. '[' → logprob: -2.1194653511047363
    3. 'not' → logprob: -2.4944653511047363
    4. ' not' → logprob: -4.369465351104736
    5. '2' → logprob: -7.369465351104736
    6. '[b' → logprob: -8.119464874267578
    7. '```' → logprob: -8.619464874267578
    8. 'H' → logprob: -8.744464874267578
    9. 'bbb' → logprob: -9.619464874267578
    10. '[
' → logprob: -10.119464874267578

Token 295: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. ' [' → logprob: -15.250000953674316
    3. '[
' → logprob: -15.875000953674316
    4. 'bbb' → logprob: -16.75
    5. '```' → logprob: -17.0
    6. '[b' → logprob: -17.375
    7. '[[' → logprob: -18.125
    8. '][' → logprob: -18.375
    9. ' not' → logprob: -18.875
    10. '   ' → logprob: -19.0

Token 296: 'bbb' (ID: 105015)
  Prédit: 'bbb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bbb' → logprob: -0.0022323327139019966
    2. '[' → logprob: -6.127232551574707
    3. '[b' → logprob: -10.252232551574707
    4. 'aaa' → logprob: -12.627232551574707
    5. 'not' → logprob: -12.877232551574707
    6. '```' → logprob: -13.127232551574707
    7. 'ccc' → logprob: -13.877232551574707
    8. 'bb' → logprob: -14.502232551574707
    9. '   ' → logprob: -14.877232551574707
    10. '][' → logprob: -15.002232551574707

Token 297: ']==' (ID: 34128)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.6659970283508301
    2. '[' → logprob: -1.66599702835083
    3. ']==' → logprob: -1.66599702835083
    4. ']' → logprob: -2.66599702835083
    5. ':' → logprob: -3.79099702835083
    6. '==' → logprob: -4.41599702835083
    7. ' ==' → logprob: -6.79099702835083
    8. ']>' → logprob: -6.91599702835083
    9. ']:
' → logprob: -7.79099702835083
    10. '][' → logprob: -8.165996551513672

Token 298: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005929274018853903
    2. ' ' → logprob: -5.130929470062256
    3. '   ' → logprob: -15.130928993225098
    4. ' ' → logprob: -15.380928993225098
    5. '       ' → logprob: -17.755929946899414
    6. '  ' → logprob: -17.755929946899414
    7. '=' → logprob: -18.630929946899414
    8. '           ' → logprob: -18.630929946899414
    9. '    ' → logprob: -18.755929946899414
    10. '1' → logprob: -18.755929946899414

Token 299: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07569663226604462
    2. '           ' → logprob: -3.3256967067718506
    3. ' or' → logprob: -3.5756967067718506
    4. '       ' → logprob: -5.9506964683532715
    5. ':
' → logprob: -6.2006964683532715
    6. ' continue' → logprob: -6.5756964683532715
    7. ' and' → logprob: -7.0756964683532715
    8. ':return' → logprob: -7.0756964683532715
    9. ' :' → logprob: -8.07569694519043
    10. '               ' → logprob: -8.20069694519043

Token 300: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.03828314691781998
    2. '           ' → logprob: -3.663283109664917
    3. 'continue' → logprob: -4.663283348083496
    4. '               ' → logprob: -6.038283348083496
    5. '            ' → logprob: -10.413283348083496
    6. ' ' → logprob: -10.538283348083496
    7. '	continue' → logprob: -11.413283348083496
    8. '                   ' → logprob: -12.788283348083496
    9. ' continu' → logprob: -13.038283348083496
    10. '             ' → logprob: -13.038283348083496

Token 301: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016886276425793767
    2. '           ' → logprob: -6.501688480377197
    3. ' for' → logprob: -9.501688957214355
    4. '<|end|>' → logprob: -9.751688957214355
    5. '        ' → logprob: -11.001688957214355
    6. ',' → logprob: -11.751688957214355
    7. '        
' → logprob: -11.751688957214355
    8. '   ' → logprob: -12.751688957214355
    9. '      ' → logprob: -13.001688957214355
    10. '               ' → logprob: -13.126688957214355

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008410554379224777
    2. ' for' → logprob: -5.508410453796387
    3. '           ' → logprob: -5.508410453796387
    4. '        ' → logprob: -8.883410453796387
    5. 'for' → logprob: -10.383410453796387
    6. '	' → logprob: -11.008410453796387
    7. ' ' → logprob: -11.508410453796387
    8. '   ' → logprob: -11.633410453796387
    9. ',' → logprob: -11.633410453796387
    10. '      ' → logprob: -11.758410453796387

Token 303: ' answer' (ID: 6052)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6118507981300354
    2. 'for' → logprob: -0.9868507981300354
    3. '       ' → logprob: -2.4868507385253906
    4. '           ' → logprob: -6.486850738525391
    5. '   ' → logprob: -10.11185073852539
    6. '        ' → logprob: -10.73685073852539
    7. '	for' → logprob: -10.86185073852539
    8. '               ' → logprob: -11.48685073852539
    9. '```' → logprob: -11.48685073852539
    10. ' ' → logprob: -11.73685073852539

Token 304: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38706469535827637
    2. ' +=' → logprob: -1.1370646953582764
    3. '+=(' → logprob: -8.762064933776855
    4. '   ' → logprob: -11.137064933776855
    5. ']+=' → logprob: -11.887064933776855
    6. ' ^=' → logprob: -12.637064933776855
    7. '+' → logprob: -13.012064933776855
    8. '```' → logprob: -13.012064933776855
    9. '    ' → logprob: -13.137064933776855
    10. ' ' → logprob: -13.637064933776855

Token 305: ' (' (ID: 350)
  Prédit: '(answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.10165704041719437
    2. ' (' → logprob: -2.3516571521759033
    3. '(' → logprob: -6.851656913757324
    4. '(ans' → logprob: -8.351656913757324
    5. '       ' → logprob: -9.226656913757324
    6. '   ' → logprob: -10.101656913757324
    7. '  ' → logprob: -12.976656913757324
    8. ' ' → logprob: -13.226656913757324
    9. '           ' → logprob: -13.351656913757324
    10. '(a' → logprob: -13.601656913757324

Token 306: 'answer' (ID: 17021)
  Prédit: 'answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.018275195732712746
    2. '(answer' → logprob: -4.018275260925293
    3. ' answer' → logprob: -9.018275260925293
    4. '	answer' → logprob: -13.393275260925293
    5. '(' → logprob: -14.268275260925293
    6. ' (' → logprob: -14.518275260925293
    7. '.answer' → logprob: -15.018275260925293
    8. 'ans' → logprob: -15.393275260925293
    9. '
' → logprob: -15.393275260925293
    10. 'ANSWER' → logprob: -15.893275260925293

Token 307: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759783387184143
    2. '+' → logprob: -0.8259783387184143
    3. '+(' → logprob: -11.07597827911377
    4. '+
' → logprob: -11.20097827911377
    5. ' +
' → logprob: -12.32597827911377
    6. ' +(' → logprob: -13.82597827911377
    7. '+a' → logprob: -14.20097827911377
    8. '+j' → logprob: -14.32597827911377
    9. '+b' → logprob: -14.45097827911377
    10. '
' → logprob: -14.70097827911377

Token 308: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.04873168095946312
    2. ' H' → logprob: -3.048731565475464
    3. '   ' → logprob: -9.548731803894043
    4. '(H' → logprob: -10.673731803894043
    5. ' ' → logprob: -10.923731803894043
    6. '  ' → logprob: -12.173731803894043
    7. ' (' → logprob: -12.298731803894043
    8. 'aaa' → logprob: -12.673731803894043
    9. '(' → logprob: -12.923731803894043
    10. '    ' → logprob: -13.048731803894043

Token 309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. '[' → logprob: -12.375004768371582
    3. '```' → logprob: -14.625004768371582
    4. '3' → logprob: -16.8750057220459
    5. '_' → logprob: -17.0000057220459
    6. '
' → logprob: -17.3750057220459
    7. ' ' → logprob: -17.5000057220459
    8. 'H' → logprob: -17.6250057220459
    9. '`' → logprob: -18.0000057220459
    10. '   ' → logprob: -18.0000057220459

Token 310: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.6312321753939614e-05
    2. ')[' → logprob: -10.750036239624023
    3. ')' → logprob: -12.625036239624023
    4. '```' → logprob: -12.625036239624023
    5. ' [' → logprob: -12.875036239624023
    6. '[
' → logprob: -13.250036239624023
    7. '   ' → logprob: -14.125036239624023
    8. ' ' → logprob: -15.125036239624023
    9. '\[' → logprob: -15.125036239624023
    10. '][' → logprob: -15.375036239624023

Token 311: 'aaa' (ID: 55894)
  Prédit: 'aaa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aaa' → logprob: -0.00016384923947043717
    2. '[' → logprob: -9.125164031982422
    3. ' aaa' → logprob: -10.000164031982422
    4. '```' → logprob: -12.750164031982422
    5. 'bbb' → logprob: -13.125164031982422
    6. 'aa' → logprob: -13.625164031982422
    7. '   ' → logprob: -13.750164031982422
    8. 'abc' → logprob: -14.500164031982422
    9. ']' → logprob: -15.000164031982422
    10. ' ' → logprob: -15.125164031982422

Token 312: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0131419962272048
    2. ' *' → logprob: -4.388142108917236
    3. '   ' → logprob: -8.263141632080078
    4. '*b' → logprob: -9.013141632080078
    5. ']*' → logprob: -9.388141632080078
    6. '*(' → logprob: -10.263141632080078
    7. '][' → logprob: -10.638141632080078
    8. '[' → logprob: -10.763141632080078
    9. '  ' → logprob: -11.138141632080078
    10. '*[' → logprob: -11.388141632080078

Token 313: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0008059371029958129
    2. ' H' → logprob: -7.125805854797363
    3. 'bbb' → logprob: -14.375805854797363
    4. '   ' → logprob: -15.500805854797363
    5. ' ' → logprob: -15.500805854797363
    6. '
' → logprob: -16.00080680847168
    7. '```' → logprob: -16.75080680847168
    8. '  ' → logprob: -17.00080680847168
    9. 'b' → logprob: -17.12580680847168
    10. '           ' → logprob: -17.25080680847168

Token 314: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006887765601277351
    2. '[' → logprob: -5.006887912750244
    3. 'bbb' → logprob: -8.881887435913086
    4. '```' → logprob: -11.131887435913086
    5. '3' → logprob: -12.506887435913086
    6. '[b' → logprob: -13.006887435913086
    7. '   ' → logprob: -13.006887435913086
    8. '_' → logprob: -13.256887435913086
    9. '
' → logprob: -13.381887435913086
    10. '  ' → logprob: -14.256887435913086

Token 315: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. 'bbb' → logprob: -14.750000953674316
    3. ' [' → logprob: -15.000000953674316
    4. '[
' → logprob: -15.875000953674316
    5. '```' → logprob: -16.500001907348633
    6. '[b' → logprob: -16.750001907348633
    7. '[[' → logprob: -16.875001907348633
    8. '\[' → logprob: -17.125001907348633
    9. '   ' → logprob: -17.375001907348633
    10. '

' → logprob: -17.500001907348633

Token 316: 'bbb' (ID: 105015)
  Prédit: 'bbb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bbb' → logprob: -1.1160349458805285e-05
    2. '[' → logprob: -11.500011444091797
    3. '[b' → logprob: -14.500011444091797
    4. 'bb' → logprob: -15.875011444091797
    5. 'ccc' → logprob: -15.875011444091797
    6. ' b' → logprob: -16.250011444091797
    7. '```' → logprob: -17.375011444091797
    8. ' ' → logprob: -17.875011444091797
    9. '  ' → logprob: -17.875011444091797
    10. 'aaa' → logprob: -18.000011444091797

Token 317: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0015860318671911955
    2. '%' → logprob: -7.376585960388184
    3. ' *' → logprob: -7.876585960388184
    4. ')%' → logprob: -8.626585960388184
    5. ')' → logprob: -8.751585960388184
    6. '*C' → logprob: -9.751585960388184
    7. ')*' → logprob: -10.251585960388184
    8. '   ' → logprob: -10.376585960388184
    9. '*c' → logprob: -11.126585960388184
    10. '[' → logprob: -11.376585960388184

Token 318: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00033796546631492674
    2. ' H' → logprob: -8.000337600708008
    3. ' ' → logprob: -14.250337600708008
    4. '   ' → logprob: -14.875337600708008
    5. '(H' → logprob: -15.375337600708008
    6. '
' → logprob: -15.500337600708008
    7. 'pow' → logprob: -15.500337600708008
    8. 'sum' → logprob: -15.750337600708008
    9. '  ' → logprob: -15.875337600708008
    10. '(' → logprob: -16.000337600708008

Token 319: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -13.750000953674316
    3. '
' → logprob: -16.500001907348633
    4. '```' → logprob: -16.500001907348633
    5. '   ' → logprob: -17.375001907348633
    6. '  ' → logprob: -18.062501907348633
    7. ' ' → logprob: -18.125001907348633
    8. '``' → logprob: -18.500001907348633
    9. '`' → logprob: -19.000001907348633
    10. '

' → logprob: -19.062501907348633

Token 320: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38963061571121216
    2. '[(' → logprob: -1.1396305561065674
    3. '[j' → logprob: -6.5146307945251465
    4. '[((' → logprob: -6.7646307945251465
    5. '[
' → logprob: -9.764630317687988
    6. '[c' → logprob: -10.264630317687988
    7. '[cnt' → logprob: -12.639630317687988
    8. '[np' → logprob: -12.639630317687988
    9. '[-' → logprob: -12.764630317687988
    10. '[[' → logprob: -12.889630317687988

Token 321: 'aaa' (ID: 55894)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.017703652381897
    2. '[' → logprob: -1.017703652381897
    3. 'ccc' → logprob: -2.2677035331726074
    4. '[(' → logprob: -2.5177035331726074
    5. 'aaa' → logprob: -2.7677035331726074
    6. 'bbb' → logprob: -4.517703533172607
    7. '[j' → logprob: -4.517703533172607
    8. '((' → logprob: -5.267703533172607
    9. '(j' → logprob: -7.392703533172607
    10. '[b' → logprob: -7.642703533172607

Token 322: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.07005002349615097
    2. ' ^' → logprob: -2.695050001144409
    3. 'bbb' → logprob: -10.070050239562988
    4. '^^' → logprob: -11.070050239562988
    5. ']^' → logprob: -11.320050239562988
    6. '^(' → logprob: -11.820050239562988
    7. '
' → logprob: -11.820050239562988
    8. ']' → logprob: -11.820050239562988
    9. '[' → logprob: -12.195050239562988
    10. ' ' → logprob: -12.445050239562988

Token 323: 'bbb' (ID: 105015)
  Prédit: 'bbb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bbb' → logprob: -6.392202976712724e-06
    2. ' b' → logprob: -12.125006675720215
    3. 'bb' → logprob: -15.000006675720215
    4. 'ccc' → logprob: -15.750006675720215
    5. ' ' → logprob: -16.1250057220459
    6. '```' → logprob: -16.2500057220459
    7. '
' → logprob: -16.6250057220459
    8. '  ' → logprob: -16.8750057220459
    9. 'bbbb' → logprob: -17.1250057220459
    10. '   ' → logprob: -17.5000057220459

Token 324: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07897394895553589
    2. ')%' → logprob: -2.5789740085601807
    3. ' )' → logprob: -9.453973770141602
    4. '])' → logprob: -13.328973770141602
    5. '   ' → logprob: -13.453973770141602
    6. '）' → logprob: -14.203973770141602
    7. ')
' → logprob: -15.328973770141602
    8. '))' → logprob: -15.328973770141602
    9. '    ' → logprob: -15.453973770141602
    10. ')#' → logprob: -15.453973770141602

Token 325: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.03399281203746796
    2. ' %' → logprob: -3.4089927673339844
    3. ')%' → logprob: -8.533992767333984
    4. ')' → logprob: -9.033992767333984
    5. ' %=' → logprob: -10.658992767333984
    6. '
' → logprob: -13.658992767333984
    7. '%n' → logprob: -14.033992767333984
    8. '%c' → logprob: -14.033992767333984
    9. '%D' → logprob: -14.658992767333984
    10. '%b' → logprob: -14.658992767333984

Token 326: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -5.512236498361744e-07
    2. '998' → logprob: -15.250000953674316
    3. ' P' → logprob: -15.500000953674316
    4. '(P' → logprob: -20.5
    5. '	P' → logprob: -22.25
    6. '999' → logprob: -23.0
    7. '"P' → logprob: -23.0
    8. '\P' → logprob: -23.125
    9. '.P' → logprob: -23.375
    10. '```' → logprob: -23.5

Token 327: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 328: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.3915141355246305e-05
    2. '
' → logprob: -10.87502384185791
    3. ' print' → logprob: -12.87502384185791
    4. ')' → logprob: -13.75002384185791
    5. 'answer' → logprob: -15.00002384185791
    6. '<|end|>' → logprob: -15.25002384185791
    7. '```' → logprob: -15.37502384185791
    8. '
' → logprob: -16.500024795532227
    9. '(print' → logprob: -17.000024795532227
    10. '  
' → logprob: -17.125024795532227

Token 329: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.00044711565715260804
    2. '(' → logprob: -7.7504472732543945
    3. 'answer' → logprob: -11.125447273254395
    4. '()' → logprob: -14.375447273254395
    5. '(ans' → logprob: -14.375447273254395
    6. ' (' → logprob: -14.875447273254395
    7. '('' → logprob: -16.500446319580078
    8. '(question' → logprob: -16.750446319580078
    9. '(
' → logprob: -17.875446319580078
    10. '("' → logprob: -17.875446319580078

Token 330: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.625
    3. ')`' → logprob: -17.5
    4. ')
' → logprob: -18.0
    5. '))' → logprob: -19.5
    6. '`)' → logprob: -20.625
    7. '）' → logprob: -20.625
    8. '),' → logprob: -20.875
    9. '')' → logprob: -21.0
    10. '())' → logprob: -21.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 328
Tokens correctement prédits (1ère position, stricte): 131
Tokens correctement prédits (1ère position, avec adaptation): 139
Tokens correctement prédits (top 10): 254
Précision stricte (1ère position): 39.94%
Précision adaptée (1ère position): 42.38%
Précision (top 10): 77.44%
================================================================================
