================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

class Calc:
    def __init__(self, n):
        self.n = n

    def result(self):
        answer = 1e18
        for j in range(1, int(self.n**0.5) + 1):
            if not self.n % j:
                res = j + (self.n // j) - 2
                if res < answer:
                    answer = res
        return int(answer)


def composite_approach(x):
    # functional/paradigm-lambda
    print(
        int(
            min(
                (i + (x//i) - 2 for i in range(1, int(math.sqrt(x))+1) if x % i == 0),
                default=1e18
            )
        )
    )

def main():
    N = None
    for elem in sys.stdin:
        N = int(elem.strip().split()[0])
        break

    # OO + imperative
    obj = Calc(N)
    imperative = obj.result()

    if imperative < 0:
        composite_approach(N)
    else:
        # mixture: switch to composite_approach if odd, else imperative
        (lambda v: print(v) if N%2==0 else composite_approach(N))(imperative)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0011708177626132965
    2. 'os' → logprob: -6.751170635223389
    3. ' re' → logprob: -15.501171112060547
    4. '"os' → logprob: -15.876171112060547
    5. ' math' → logprob: -16.126171112060547
    6. '_os' → logprob: -16.251171112060547
    7. ' json' → logprob: -16.876171112060547
    8. '	os' → logprob: -17.251171112060547
    9. ' numpy' → logprob: -19.001171112060547
    10. ' io' → logprob: -19.126171112060547

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4576801061630249
    2. '\n' → logprob: -1.832680106163025
    3. '\' → logprob: -2.3326802253723145
    4. 'import' → logprob: -3.0826802253723145
    5. '```' → logprob: -3.8326802253723145
    6. '
' → logprob: -4.2076802253723145
    7. '<|end|>' → logprob: -4.2076802253723145
    8. ',' → logprob: -5.5826802253723145
    9. '

' → logprob: -5.8326802253723145
    10. '<|end|>' → logprob: -6.5826802253723145

Token 6: 'class' (ID: 1444)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8861402273178101
    2. '\' → logprob: -1.38614022731781
    3. 'import' → logprob: -2.1361403465270996
    4. '\n' → logprob: -2.2611403465270996
    5. 'def' → logprob: -3.5111403465270996
    6. '```' → logprob: -3.6361403465270996
    7. ',' → logprob: -4.3861403465271
    8. '#' → logprob: -4.6361403465271
    9. '
' → logprob: -4.6361403465271
    10. '' → logprob: -5.3861403465271

Token 7: ' Calc' (ID: 78951)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.036238234490156174
    2. ' Calculator' → logprob: -4.286238193511963
    3. ' My' → logprob: -4.786238193511963
    4. ' Space' → logprob: -5.286238193511963
    5. ' Math' → logprob: -5.411238193511963
    6. ' Vector' → logprob: -6.661238193511963
    7. ' Factor' → logprob: -7.661238193511963
    8. ' ' → logprob: -7.911238193511963
    9. ' A' → logprob: -8.536238670349121
    10. ' Complex' → logprob: -8.661238670349121

Token 8: ':
' (ID: 734)
  Prédit: 'ulator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ulator' → logprob: -0.08828499913215637
    2. 'culator' → logprob: -2.838284969329834
    3. ':' → logprob: -3.963284969329834
    4. 'ul' → logprob: -5.713284969329834
    5. '(' → logprob: -6.588284969329834
    6. 'uator' → logprob: -7.213284969329834
    7. 'ulating' → logprob: -7.713284969329834
    8. 'ulate' → logprob: -8.713285446166992
    9. '():' → logprob: -8.963285446166992
    10. 'ulation' → logprob: -9.338285446166992

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3482033312320709
    2. '(' → logprob: -1.5982033014297485
    3. ' ' → logprob: -2.848203420639038
    4. '    ' → logprob: -3.848203420639038
    5. ':' → logprob: -5.973203182220459
    6. ' (' → logprob: -6.098203182220459
    7. 'def' → logprob: -6.223203182220459
    8. '  ' → logprob: -6.473203182220459
    9. ' def' → logprob: -7.098203182220459
    10. '    
' → logprob: -7.473203182220459

Token 10: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3004436492919922
    2. 'def' (adapté à ' def') → logprob: -1.4254436492919922
    3. '   ' → logprob: -4.675443649291992
    4. ' ' → logprob: -4.925443649291992
    5. ' 
' → logprob: -7.175443649291992
    6. '    ' → logprob: -7.675443649291992
    7. '    
' → logprob: -7.800443649291992
    8. '     
' → logprob: -8.800443649291992
    9. '   
' → logprob: -9.425443649291992
    10. '\' → logprob: -9.425443649291992

Token 11: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.37115180492401123
    2. ' def' → logprob: -1.4961518049240112
    3. ' init' → logprob: -3.121151924133301
    4. 'itialize' → logprob: -4.371151924133301
    5. 'init' → logprob: -4.746151924133301
    6. 'it' → logprob: -5.371151924133301
    7. ' add' → logprob: -5.746151924133301
    8. ' _' → logprob: -6.371151924133301
    9. ' ```' → logprob: -6.496151924133301
    10. ' `' → logprob: -6.496151924133301

Token 12: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. ' init' → logprob: -16.0
    3. '_init' → logprob: -16.875
    4. 'ini' → logprob: -19.5
    5. 'int' → logprob: -20.375
    6. 'in' → logprob: -21.25
    7. 'i' → logprob: -21.625
    8. '	init' → logprob: -22.0
    9. 'inite' → logprob: -22.0
    10. 'innit' → logprob: -22.375

Token 13: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.38807111978530884
    2. '__' → logprob: -1.138071060180664
    3. '__((' → logprob: -7.763071060180664
    4. '__(
' → logprob: -7.763071060180664
    5. '__('' → logprob: -8.138071060180664
    6. '__(*' → logprob: -11.138071060180664
    7. '__.__' → logprob: -11.263071060180664
    8. '__("' → logprob: -11.513071060180664
    9. '___' → logprob: -12.013071060180664
    10. '```' → logprob: -12.388071060180664

Token 14: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002572865632828325
    2. ' self' → logprob: -8.37525749206543
    3. ')' → logprob: -11.00025749206543
    4. '(self' → logprob: -11.75025749206543
    5. ' ' → logprob: -14.12525749206543
    6. ',self' → logprob: -14.75025749206543
    7. ' )' → logprob: -15.37525749206543
    8. '_self' → logprob: -15.50025749206543
    9. ',' → logprob: -15.75025749206543
    10. 's' → logprob: -15.75025749206543

Token 15: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6181446313858032
    2. ',' → logprob: -0.9931446313858032
    3. '(' → logprob: -2.7431445121765137
    4. 'self' → logprob: -4.618144512176514
    5. ' )' → logprob: -4.868144512176514
    6. '_' → logprob: -5.493144512176514
    7. ' ' → logprob: -6.368144512176514
    8. ' ,' → logprob: -7.243144512176514
    9. '):' → logprob: -8.118144989013672
    10. 's' → logprob: -8.118144989013672

Token 16: ' n' (ID: 297)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -1.3305885791778564
    2. ' value' → logprob: -1.8305885791778564
    3. 'a' → logprob: -2.2055885791778564
    4. ' self' → logprob: -2.2055885791778564
    5. ' numbers' → logprob: -2.3305885791778564
    6. 'self' → logprob: -2.7055885791778564
    7. ' a' → logprob: -3.0805885791778564
    8. 'x' → logprob: -3.2055885791778564
    9. 'value' → logprob: -3.5805885791778564
    10. ' x' → logprob: -3.8305885791778564

Token 17: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08248994499444962
    2. 'umber' → logprob: -3.2074899673461914
    3. '):' → logprob: -4.207489967346191
    4. '=' → logprob: -4.582489967346191
    5. 'u' → logprob: -4.832489967346191
    6. ':' → logprob: -6.082489967346191
    7. 'um' → logprob: -6.457489967346191
    8. 'a' → logprob: -7.332489967346191
    9. 'umbers' → logprob: -7.957489967346191
    10. '_' → logprob: -8.207489967346191

Token 18: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013167526572942734
    2. '    ' → logprob: -5.013167381286621
    3. 'n' → logprob: -5.763167381286621
    4. '   ' → logprob: -6.513167381286621
    5. 'self' → logprob: -7.138167381286621
    6. '     ' → logprob: -8.013167381286621
    7. ' ' → logprob: -8.638167381286621
    8. ' self' → logprob: -9.013167381286621
    9. ' n' → logprob: -9.763167381286621
    10. '        ' → logprob: -9.888167381286621

Token 19: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.26550036668777466
    2. 'self' (adapté à ' self') → logprob: -1.7655003070831299
    3. 'n' → logprob: -3.01550030708313
    4. '       ' → logprob: -5.140500545501709
    5. ' ' → logprob: -5.515500545501709
    6. ' n' → logprob: -6.265500545501709
    7. ' ' → logprob: -7.140500545501709
    8. '   ' → logprob: -7.890500545501709
    9. 's' → logprob: -10.64050006866455
    10. '        ' → logprob: -10.89050006866455

Token 20: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.014450833201408386
    2. '.n' → logprob: -4.264451026916504
    3. '.value' → logprob: -9.139451026916504
    4. ' .' → logprob: -9.389451026916504
    5. '.number' → logprob: -9.889451026916504
    6. '.num' → logprob: -11.264451026916504
    7. '._' → logprob: -11.389451026916504
    8. '.val' → logprob: -12.514451026916504
    9. '.name' → logprob: -13.264451026916504
    10. '.a' → logprob: -13.389451026916504

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6333174705505371
    2. ' =' → logprob: -0.7583174705505371
    3. ' ' → logprob: -7.383317470550537
    4. '_' → logprob: -9.758317947387695
    5. '  ' → logprob: -11.508317947387695
    6. '.' → logprob: -12.133317947387695
    7. ')' → logprob: -12.383317947387695
    8. ',' → logprob: -13.133317947387695
    9. ' ' → logprob: -13.133317947387695
    10. 'space' → logprob: -13.258317947387695

Token 22: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3132673501968384
    2. ' n' → logprob: -1.3132673501968384
    3. ' ' → logprob: -12.813267707824707
    4. ' ' → logprob: -12.813267707824707
    5. '	n' → logprob: -15.313267707824707
    6. '_n' → logprob: -17.31326675415039
    7. '_' → logprob: -18.06326675415039
    8. ' ‌' → logprob: -18.31326675415039
    9. 'space' → logprob: -18.93826675415039
    10. 'x' → logprob: -19.18826675415039

Token 23: '

' (ID: 279)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.1506413221359253
    2. '.' → logprob: -1.4006413221359253
    3. '\n' → logprob: -1.7756413221359253
    4. '   ' → logprob: -2.025641441345215
    5. ':' → logprob: -3.400641441345215
    6. ',' → logprob: -4.025641441345215
    7. '
' → logprob: -4.275641441345215
    8. ''' → logprob: -4.525641441345215
    9. '    
' → logprob: -4.525641441345215
    10. '*' → logprob: -5.150641441345215

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01486127357929945
    2. '    
' → logprob: -4.514861106872559
    3. '
' → logprob: -6.514861106872559
    4. 'def' → logprob: -7.514861106872559
    5. ' ' → logprob: -7.889861106872559
    6. ' 
' → logprob: -8.389861106872559
    7. '\n' → logprob: -8.764861106872559
    8. ' def' → logprob: -8.889861106872559
    9. '       ' → logprob: -9.014861106872559
    10. '  
' → logprob: -9.014861106872559

Token 25: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2661930322647095
    2. ' def' → logprob: -1.5161930322647095
    3. '   ' → logprob: -4.26619291305542
    4. ' ' → logprob: -9.141193389892578
    5. 'de' → logprob: -12.141193389892578
    6. '    ' → logprob: -12.516193389892578
    7. '	def' → logprob: -12.516193389892578
    8. 'd' → logprob: -12.891193389892578
    9. '       ' → logprob: -13.516193389892578
    10. '  ' → logprob: -14.016193389892578

Token 26: ' result' (ID: 1534)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07311654090881348
    2. ' factorial' → logprob: -3.3231165409088135
    3. ' square' → logprob: -4.198116302490234
    4. ' add' → logprob: -4.323116302490234
    5. ' space' → logprob: -6.198116302490234
    6. ' factor' → logprob: -6.573116302490234
    7. ' ```' → logprob: -7.823116302490234
    8. '_' → logprob: -8.073116302490234
    9. ' sqrt' → logprob: -8.198116302490234
    10. 'factor' → logprob: -8.198116302490234

Token 27: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008728617802262306
    2. '(self' → logprob: -5.008728504180908
    3. ' (' → logprob: -7.508728504180908
    4. ':' → logprob: -7.633728504180908
    5. '_' → logprob: -7.758728504180908
    6. '(s' → logprob: -9.008728981018066
    7. ')' → logprob: -9.008728981018066
    8. 's' → logprob: -9.008728981018066
    9. ',' → logprob: -10.508728981018066
    10. '```' → logprob: -10.758728981018066

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5109096169471741
    2. ')' → logprob: -1.0109095573425293
    3. ',' → logprob: -3.3859095573425293
    4. ' ):' → logprob: -6.760909557342529
    5. ' )' → logprob: -7.385909557342529
    6. ' ,' → logprob: -8.635910034179688
    7. '.' → logprob: -9.010910034179688
    8. '*' → logprob: -9.635910034179688
    9. '):
' → logprob: -10.135910034179688
    10. ':' → logprob: -10.385910034179688

Token 29: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15243534743785858
    2. '\' → logprob: -2.277435302734375
    3. '\n' → logprob: -4.027435302734375
    4. 'return' → logprob: -5.402435302734375
    5. ' 
' → logprob: -5.902435302734375
    6. '(' → logprob: -6.027435302734375
    7. ' ' → logprob: -6.277435302734375
    8. ':' → logprob: -6.402435302734375
    9. ' return' → logprob: -6.527435302734375
    10. '0' → logprob: -7.527435302734375

Token 30: ' answer' (ID: 6052)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7817381024360657
    2. ' return' → logprob: -0.9067381024360657
    3. 'r' → logprob: -2.781738042831421
    4. ' ' → logprob: -3.531738042831421
    5. ' \' → logprob: -4.65673828125
    6. '       ' → logprob: -4.78173828125
    7. 's' → logprob: -5.03173828125
    8. '(' → logprob: -5.90673828125
    9. '\' → logprob: -5.90673828125
    10. '0' → logprob: -6.03173828125

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10460692644119263
    2. '=' → logprob: -2.354606866836548
    3. '.' → logprob: -5.979607105255127
    4. ' ' → logprob: -6.854607105255127
    5. 's' → logprob: -8.354606628417969
    6. '_' → logprob: -8.604606628417969
    7. ')' → logprob: -9.479606628417969
    8. '(' → logprob: -9.479606628417969
    9. 'space' → logprob: -10.229606628417969
    10. '  ' → logprob: -10.354606628417969

Token 32: ' ' (ID: 220)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.4425445795059204
    2. ' self' → logprob: -1.0675445795059204
    3. 'math' → logprob: -5.567544460296631
    4. ' ' → logprob: -5.692544460296631
    5. '0' → logprob: -5.817544460296631
    6. 'self' → logprob: -5.942544460296631
    7. ' sum' → logprob: -7.192544460296631
    8. ' int' → logprob: -9.192544937133789
    9. 'sum' → logprob: -9.942544937133789
    10. '1' → logprob: -10.692544937133789

Token 33: '1' (ID: 16)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.09437142312526703
    2. '0' → logprob: -3.3443713188171387
    3. 'self' → logprob: -3.3443713188171387
    4. ' math' → logprob: -4.094371318817139
    5. 'sum' → logprob: -6.344371318817139
    6. ' self' → logprob: -7.094371318817139
    7. '(math' → logprob: -9.344371795654297
    8. ' ' → logprob: -9.844371795654297
    9. '1' → logprob: -10.344371795654297
    10. 'int' → logprob: -10.594371795654297

Token 34: 'e' (ID: 68)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2712000608444214
    2. '*' → logprob: -2.521200180053711
    3. '+' → logprob: -2.771200180053711
    4. ' ' → logprob: -3.271200180053711
    5. ' *' → logprob: -3.646200180053711
    6. '.' → logprob: -4.521200180053711
    7. '2' → logprob: -5.271200180053711
    8. ' +' → logprob: -6.021200180053711
    9. ' 
' → logprob: -6.521200180053711
    10. ' for' → logprob: -6.521200180053711

Token 35: '18' (ID: 1157)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0033470401540398598
    2. '9' → logprob: -7.003346920013428
    3. '+' → logprob: -7.253346920013428
    4. '308' → logprob: -8.003347396850586
    5. '6' → logprob: -8.128347396850586
    6. '100' → logprob: -8.253347396850586
    7. '0' → logprob: -8.503347396850586
    8. '2' → logprob: -8.628347396850586
    9. '309' → logprob: -8.628347396850586
    10. '10' → logprob: -9.628347396850586

Token 36: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.37816861271858215
    2. '**' → logprob: -2.6281685829162598
    3. '-' → logprob: -2.8781685829162598
    4. '\' → logprob: -3.1281685829162598
    5. '+' → logprob: -3.7531685829162598
    6. '
' → logprob: -3.7531685829162598
    7. ' ' → logprob: -3.8781685829162598
    8. ')' → logprob: -4.37816858291626
    9. '#' → logprob: -4.50316858291626
    10. '<|end|>' → logprob: -4.62816858291626

Token 37: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9789945483207703
    2. ' 
' → logprob: -1.603994607925415
    3. '\' → logprob: -1.728994607925415
    4. '\n' → logprob: -2.353994607925415
    5. ' ' → logprob: -3.103994607925415
    6. '    
' → logprob: -3.853994607925415
    7. '<|end|>' → logprob: -3.853994607925415
    8. '' → logprob: -4.978994369506836
    9. ',' → logprob: -4.978994369506836
    10. '   ' → logprob: -5.228994369506836

Token 38: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1819130182266235
    2. ' 
' → logprob: -1.3069130182266235
    3. 'for' (adapté à ' for') → logprob: -2.306912899017334
    4. ' for' → logprob: -2.431912899017334
    5. '\n' → logprob: -2.681912899017334
    6. '
' → logprob: -2.806912899017334
    7. '       ' → logprob: -3.681912899017334
    8. '\' → logprob: -4.181912899017334
    9. '<|end|>' → logprob: -4.556912899017334
    10. '        
' → logprob: -4.681912899017334

Token 39: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5236712098121643
    2. ' i' → logprob: -0.8986712098121643
    3. ' _' → logprob: -8.39867115020752
    4. 'i' → logprob: -8.39867115020752
    5. ' x' → logprob: -10.77367115020752
    6. '  ' → logprob: -10.89867115020752
    7. '_' → logprob: -10.89867115020752
    8. ' in' → logprob: -11.52367115020752
    9. '```' → logprob: -12.14867115020752
    10. ' ' → logprob: -12.39867115020752

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02599940076470375
    2. 'in' → logprob: -3.7759993076324463
    3. ' ' → logprob: -6.025999546051025
    4. ' ,' → logprob: -9.650999069213867
    5. ' i' → logprob: -9.775999069213867
    6. ',' → logprob: -9.775999069213867
    7. 'n' → logprob: -9.900999069213867
    8. '  ' → logprob: -10.900999069213867
    9. 'j' → logprob: -11.150999069213867
    10. '_' → logprob: -11.275999069213867

Token 41: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.003236417192965746
    2. 'range' → logprob: -5.753236293792725
    3. ' ' → logprob: -10.253236770629883
    4. '  ' → logprob: -12.378236770629883
    5. ' self' → logprob: -12.503236770629883
    6. '	range' → logprob: -12.503236770629883
    7. ' ' → logprob: -12.628236770629883
    8. ' xrange' → logprob: -12.753236770629883
    9. '   ' → logprob: -13.128236770629883
    10. '(range' → logprob: -14.128236770629883

Token 42: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024582950863987207
    2. ' (' → logprob: -6.502458095550537
    3. '(self' → logprob: -7.502458095550537
    4. '(s' → logprob: -8.502458572387695
    5. '(n' → logprob: -8.627458572387695
    6. '(
' → logprob: -12.002458572387695
    7. '(len' → logprob: -12.002458572387695
    8. '((' → logprob: -13.002458572387695
    9. '(int' → logprob: -13.252458572387695
    10. '(j' → logprob: -13.377458572387695

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013934537768363953
    2. '2' → logprob: -4.63893461227417
    3. 'self' → logprob: -5.88893461227417
    4. '       ' → logprob: -7.13893461227417
    5. ' ' → logprob: -8.388934135437012
    6. '0' → logprob: -9.013934135437012
    7. '(' → logprob: -9.388934135437012
    8. '   ' → logprob: -9.763934135437012
    9. '           ' → logprob: -9.888934135437012
    10. ' self' → logprob: -10.638934135437012

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2812153398990631
    2. ' ,' → logprob: -1.4062153100967407
    3. ' ' → logprob: -10.28121566772461
    4. '(' → logprob: -11.03121566772461
    5. ',self' → logprob: -12.78121566772461
    6. ' ,
' → logprob: -12.90621566772461
    7. ' (' → logprob: -13.28121566772461
    8. ',
' → logprob: -13.28121566772461
    9. '(self' → logprob: -13.65621566772461
    10. ',n' → logprob: -14.28121566772461

Token 45: ' int' (ID: 677)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7255751490592957
    2. ' int' → logprob: -1.2255752086639404
    3. 'self' → logprob: -1.7255752086639404
    4. 'int' → logprob: -3.2255752086639404
    5. ' math' → logprob: -5.475574970245361
    6. ' ' → logprob: -8.47557544708252
    7. 'math' → logprob: -9.10057544708252
    8. '    ' → logprob: -11.35057544708252
    9. '   ' → logprob: -11.97557544708252
    10. '       ' → logprob: -11.97557544708252

Token 46: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10058975219726562
    2. '(math' → logprob: -2.3505897521972656
    3. '(self' → logprob: -8.600589752197266
    4. '(s' → logprob: -8.850589752197266
    5. ' (' → logprob: -10.850589752197266
    6. '((' → logprob: -11.100589752197266
    7. '(
' → logprob: -11.600589752197266
    8. '(Math' → logprob: -12.225589752197266
    9. ' ' → logprob: -13.225589752197266
    10. '(pow' → logprob: -14.100589752197266

Token 47: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4898434579372406
    2. '.math' → logprob: -1.239843487739563
    3. '(math' → logprob: -2.9898433685302734
    4. ' ' → logprob: -4.489843368530273
    5. 'math' → logprob: -4.489843368530273
    6. '.n' → logprob: -4.739843368530273
    7. ' math' → logprob: -4.989843368530273
    8. 'n' → logprob: -5.489843368530273
    9. '(' → logprob: -5.864843368530273
    10. '.m' → logprob: -7.239843368530273

Token 48: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.10226558148860931
    2. ' **' → logprob: -2.3522655963897705
    3. ' ' → logprob: -7.227265357971191
    4. ')' → logprob: -7.727265357971191
    5. ')+' → logprob: -8.102265357971191
    6. ')**' → logprob: -8.727265357971191
    7. ' +' → logprob: -9.852265357971191
    8. ' )' → logprob: -10.102265357971191
    9. '))' → logprob: -10.352265357971191
    10. '+' → logprob: -10.352265357971191

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00479204161092639
    2. '(' → logprob: -5.879792213439941
    3. ' ' → logprob: -6.379792213439941
    4. '.' → logprob: -8.254792213439941
    5. ' (' → logprob: -11.129792213439941
    6. '   ' → logprob: -11.629792213439941
    7. '    ' → logprob: -13.254792213439941
    8. '1' → logprob: -13.629792213439941
    9. '  ' → logprob: -14.254792213439941
    10. '     ' → logprob: -14.629792213439941

Token 50: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.15310683415737e-05
    2. '1' → logprob: -12.000021934509277
    3. '2' → logprob: -12.375021934509277
    4. '0' → logprob: -12.625021934509277
    5. ' .' → logprob: -13.250021934509277
    6. '5' → logprob: -13.500021934509277
    7. '```' → logprob: -13.875021934509277
    8. '3' → logprob: -14.125021934509277
    9. ' ' → logprob: -14.937521934509277
    10. '6' → logprob: -15.250021934509277

Token 51: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -9.968312951968983e-06
    2. '25' → logprob: -13.062509536743164
    3. '75' → logprob: -13.437509536743164
    4. '```' → logprob: -13.562509536743164
    5. 'five' → logprob: -13.750009536743164
    6. '   ' → logprob: -14.687509536743164
    7. '05' → logprob: -15.500009536743164
    8. '

' → logprob: -15.562509536743164
    9. '6' → logprob: -15.937509536743164
    10. '٥' → logprob: -15.937509536743164

Token 52: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20480690896511078
    2. ')+' → logprob: -1.704806923866272
    3. ' )' → logprob: -5.704806804656982
    4. ' ' → logprob: -11.07980728149414
    5. '())' → logprob: -11.45480728149414
    6. '+' → logprob: -11.82980728149414
    7. '()' → logprob: -11.95480728149414
    8. '   ' → logprob: -12.57980728149414
    9. ' +' → logprob: -12.70480728149414
    10. '")+' → logprob: -13.07980728149414

Token 53: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31336209177970886
    2. ' +' → logprob: -1.3133621215820312
    3. ')+' → logprob: -9.688362121582031
    4. ' ' → logprob: -11.188362121582031
    5. ')' → logprob: -11.563362121582031
    6. '()+' → logprob: -11.688362121582031
    7. '):' → logprob: -13.563362121582031
    8. ' plus' → logprob: -13.813362121582031
    9. ' +
' → logprob: -14.563362121582031
    10. '    ' → logprob: -14.563362121582031

Token 54: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.043683409690856934
    2. ' ' → logprob: -3.1686835289001465
    3. '2' → logprob: -7.2936835289001465
    4. '   ' → logprob: -13.418683052062988
    5. '```' → logprob: -14.043683052062988
    6. ' ' → logprob: -14.793683052062988
    7. '  ' → logprob: -15.043683052062988
    8. '    ' → logprob: -15.293683052062988
    9. '	' → logprob: -15.543683052062988
    10. '+' → logprob: -15.856183052062988

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001943395473062992
    2. ' ' → logprob: -6.251943588256836
    3. '2' → logprob: -11.251943588256836
    4. '   ' → logprob: -13.876943588256836
    5. '  ' → logprob: -14.501943588256836
    6. '    ' → logprob: -16.126943588256836
    7. '(' → logprob: -16.626943588256836
    8. '```' → logprob: -17.001943588256836
    9. '+' → logprob: -17.251943588256836
    10. ' ' → logprob: -17.314443588256836

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.032498978078365326
    2. ':' → logprob: -3.532499074935913
    3. ' ):' → logprob: -6.032498836517334
    4. '):
' → logprob: -8.907499313354492
    5. ')' → logprob: -9.032499313354492
    6. ',' → logprob: -10.032499313354492
    7. ' :' → logprob: -10.657499313354492
    8. '+' → logprob: -12.907499313354492
    9. ' ' → logprob: -13.032499313354492
    10. ' )' → logprob: -13.407499313354492

Token 57: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03668650612235069
    2. ' :' → logprob: -4.411686420440674
    3. '       ' → logprob: -5.161686420440674
    4. ' ' → logprob: -5.286686420440674
    5. '        ' → logprob: -5.536686420440674
    6. '<|end|>' → logprob: -5.786686420440674
    7. '):' → logprob: -6.536686420440674
    8. ':
' → logprob: -6.786686420440674
    9. ' if' → logprob: -7.036686420440674
    10. '           ' → logprob: -7.036686420440674

Token 58: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09105030447244644
    2. ':' → logprob: -3.091050386428833
    3. ' if' → logprob: -3.841050386428833
    4. 'if' (adapté à ' if') → logprob: -4.591050148010254
    5. '<|end|>' → logprob: -5.841050148010254
    6. ' :' → logprob: -5.966050148010254
    7. '        ' → logprob: -6.966050148010254
    8. '    ' → logprob: -6.966050148010254
    9. '  ' → logprob: -7.091050148010254
    10. ' 
' → logprob: -8.466050148010254

Token 59: ' not' (ID: 625)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.007837054319679737
    2. 'self' → logprob: -4.882836818695068
    3. ' ' → logprob: -8.757837295532227
    4. ' ' → logprob: -10.132837295532227
    5. ' (' → logprob: -12.007837295532227
    6. '	self' → logprob: -12.132837295532227
    7. '(self' → logprob: -12.257837295532227
    8. '    ' → logprob: -12.382837295532227
    9. ' not' → logprob: -12.507837295532227
    10. ' n' → logprob: -12.632837295532227

Token 60: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0032907098066061735
    2. 'self' → logprob: -6.00329065322876
    3. ' (' → logprob: -7.87829065322876
    4. '(self' → logprob: -8.378291130065918
    5. ' ' → logprob: -8.878291130065918
    6. ' n' → logprob: -10.503291130065918
    7. ' ' → logprob: -10.878291130065918
    8. ' j' → logprob: -11.378291130065918
    9. '	self' → logprob: -13.128291130065918
    10. '(' → logprob: -13.128291130065918

Token 61: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.007713934872299433
    2. '.' → logprob: -4.882713794708252
    3. ' .' → logprob: -9.63271427154541
    4. 'n' → logprob: -10.75771427154541
    5. '.j' → logprob: -11.38271427154541
    6. ' n' → logprob: -13.50771427154541
    7. '.i' → logprob: -13.75771427154541
    8. ' ' → logprob: -13.75771427154541
    9. '.s' → logprob: -14.13271427154541
    10. ').' → logprob: -14.38271427154541

Token 62: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4748147428035736
    2. '%' → logprob: -0.974814772605896
    3. ' ' → logprob: -7.2248148918151855
    4. '%i' → logprob: -11.974814414978027
    5. ' ' → logprob: -13.474814414978027
    6. '%x' → logprob: -15.599814414978027
    7. ' 

' → logprob: -15.849814414978027
    8. ' %=' → logprob: -15.974814414978027
    9. ' %
' → logprob: -16.349815368652344
    10. '%s' → logprob: -16.474815368652344

Token 63: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1269480586051941
    2. ' j' → logprob: -2.126948118209839
    3. '	j' → logprob: -11.251948356628418
    4. ' ' → logprob: -12.501948356628418
    5. ' ' → logprob: -13.626948356628418
    6. '   ' → logprob: -13.751948356628418
    7. '  ' → logprob: -15.251948356628418
    8. '    ' → logprob: -15.626948356628418
    9. '<|end|>' → logprob: -15.751948356628418
    10. '$j' → logprob: -16.2519474029541

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01687747612595558
    2. '==' → logprob: -4.5168776512146
    3. ' ==' → logprob: -5.7668776512146
    4. ' :' → logprob: -6.0168776512146
    5. '):' → logprob: -8.766877174377441
    6. ':**' → logprob: -10.266877174377441
    7. '=' → logprob: -10.766877174377441
    8. ' and' → logprob: -11.391877174377441
    9. ':
' → logprob: -12.516877174377441
    10. '<|end|>' → logprob: -13.266877174377441

Token 65: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5930445790290833
    2. ':' → logprob: -1.0930445194244385
    3. ' ' → logprob: -2.8430445194244385
    4. '           ' → logprob: -4.218044757843018
    5. ' 
' → logprob: -4.718044757843018
    6. ':
' → logprob: -5.218044757843018
    7. '            ' → logprob: -5.468044757843018
    8. '                ' → logprob: -5.718044757843018
    9. '                
' → logprob: -5.718044757843018
    10. ',' → logprob: -5.968044757843018

Token 66: ' res' (ID: 694)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.4729477167129517
    2. ' answer' → logprob: -1.7229477167129517
    3. ' k' → logprob: -2.097947597503662
    4. ' x' → logprob: -2.847947597503662
    5. ' other' → logprob: -2.972947597503662
    6. ' for' → logprob: -3.222947597503662
    7. ' i' → logprob: -3.597947597503662
    8. ' if' → logprob: -3.597947597503662
    9. 'answer' → logprob: -3.722947597503662
    10. ' ' → logprob: -3.972947597503662

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009801188483834267
    2. '=' → logprob: -5.134801387786865
    3. '1' → logprob: -6.259801387786865
    4. 'ult' → logprob: -6.509801387786865
    5. ' ' → logprob: -8.384800910949707
    6. '   ' → logprob: -8.759800910949707
    7. 't' → logprob: -11.259800910949707
    8. 'u' → logprob: -11.759800910949707
    9. '    ' → logprob: -11.759800910949707
    10. '  ' → logprob: -12.134800910949707

Token 68: ' j' (ID: 441)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.3169162273406982
    2. ' max' → logprob: -1.3169162273406982
    3. ' min' → logprob: -1.9419162273406982
    4. ' j' → logprob: -1.9419162273406982
    5. ' math' → logprob: -2.8169162273406982
    6. 'self' → logprob: -3.4419162273406982
    7. 'max' → logprob: -3.6919162273406982
    8. 'min' → logprob: -3.8169162273406982
    9. 'j' → logprob: -4.316916465759277
    10. ' (' → logprob: -4.441916465759277

Token 69: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.05265553668141365
    2. '*' → logprob: -3.1776554584503174
    3. ' +' → logprob: -4.9276556968688965
    4. ' ' → logprob: -6.6776556968688965
    5. '+' → logprob: -7.0526556968688965
    6. ',' → logprob: -9.302655220031738
    7. ' **' → logprob: -10.677655220031738
    8. '**' → logprob: -10.677655220031738
    9. ' *
' → logprob: -10.677655220031738
    10. ' ' → logprob: -10.927655220031738

Token 70: ' (' (ID: 350)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.09226241707801819
    2. 'self' → logprob: -2.4672625064849854
    3. ' (' → logprob: -6.342262268066406
    4. ' ' → logprob: -7.092262268066406
    5. ' math' → logprob: -7.842262268066406
    6. '(self' → logprob: -8.592262268066406
    7. '<|end|>' → logprob: -10.217262268066406
    8. ' int' → logprob: -10.717262268066406
    9. 'int' → logprob: -11.342262268066406
    10. ' ' → logprob: -11.717262268066406

Token 71: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16072934865951538
    2. ' self' → logprob: -1.9107294082641602
    3. ' ' → logprob: -8.66072940826416
    4. ')' → logprob: -8.78572940826416
    5. '(self' → logprob: -9.78572940826416
    6. ' (' → logprob: -10.53572940826416
    7. '<|end|>' → logprob: -11.16072940826416
    8. ' )' → logprob: -11.53572940826416
    9. '  ' → logprob: -11.91072940826416
    10. 'n' → logprob: -12.03572940826416

Token 72: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.02073550596833229
    2. '.' → logprob: -3.895735502243042
    3. ' .' → logprob: -9.145735740661621
    4. 'n' → logprob: -10.270735740661621
    5. '.user' → logprob: -11.020735740661621
    6. ' ' → logprob: -11.645735740661621
    7. '//' → logprob: -13.020735740661621
    8. ')' → logprob: -13.270735740661621
    9. '	n' → logprob: -13.395735740661621
    10. ').' → logprob: -13.395735740661621

Token 73: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.49230214953422546
    2. ' //' → logprob: -0.9923021793365479
    3. ' ' → logprob: -4.367301940917969
    4. ')' → logprob: -5.617301940917969
    5. ' )' → logprob: -6.742301940917969
    6. ' /' → logprob: -9.117301940917969
    7. ')//' → logprob: -9.242301940917969
    8. '/j' → logprob: -9.367301940917969
    9. '/' → logprob: -9.492301940917969
    10. 'j' → logprob: -9.992301940917969

Token 74: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004085524007678032
    2. ' j' → logprob: -5.504085540771484
    3. '	j' → logprob: -11.879085540771484
    4. '_j' → logprob: -16.004085540771484
    5. '<|end|>' → logprob: -16.629085540771484
    6. '*j' → logprob: -17.754085540771484
    7. '$j' → logprob: -17.754085540771484
    8. ')' → logprob: -18.004085540771484
    9. ',j' → logprob: -18.629085540771484
    10. ' ' → logprob: -18.754085540771484

Token 75: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008080331608653069
    2. ')
' → logprob: -5.75808048248291
    3. ' )' → logprob: -5.88308048248291
    4. '-' → logprob: -6.50808048248291
    5. ' -' → logprob: -7.88308048248291
    6. ' )
' → logprob: -9.88308048248291
    7. ')**' → logprob: -9.88308048248291
    8. '       ' → logprob: -10.50808048248291
    9. ' ' → logprob: -11.25808048248291
    10. ' ' → logprob: -11.38308048248291

Token 76: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10468217730522156
    2. '-' → logprob: -2.854682207107544
    3. ' -' → logprob: -3.604682207107544
    4. '               ' → logprob: -5.479681968688965
    5. ' 
' → logprob: -5.729681968688965
    6. ' ' → logprob: -6.604681968688965
    7. '+' → logprob: -6.854681968688965
    8. '+
' → logprob: -7.104681968688965
    9. '
' → logprob: -7.229681968688965
    10. '-
' → logprob: -7.604681968688965

Token 77: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023976430296897888
    2. '1' → logprob: -4.0239763259887695
    3. ' ' → logprob: -5.1489763259887695
    4. '3' → logprob: -13.52397632598877
    5. '  ' → logprob: -14.52397632598877
    6. '   ' → logprob: -14.77397632598877
    7. ' ' → logprob: -15.08647632598877
    8. '           ' → logprob: -15.14897632598877
    9. '２' → logprob: -15.71147632598877
    10. '<|end|>' → logprob: -16.461477279663086

Token 78: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01611894741654396
    2. '1' → logprob: -4.141119003295898
    3. ' ' → logprob: -9.391119003295898
    4. '   ' → logprob: -15.266119003295898
    5. '  ' → logprob: -15.766119003295898
    6. '3' → logprob: -15.766119003295898
    7. ' ' → logprob: -16.0786190032959
    8. '```' → logprob: -16.0786190032959
    9. '２' → logprob: -16.7036190032959
    10. 'two' → logprob: -17.2661190032959

Token 79: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3354330360889435
    2. '               ' → logprob: -2.335433006286621
    3. '           ' → logprob: -2.960433006286621
    4. '<|end|>' → logprob: -2.960433006286621
    5. ' 
' → logprob: -3.210433006286621
    6. ' if' → logprob: -4.585433006286621
    7. '
' → logprob: -4.710433006286621
    8. '            
' → logprob: -5.710433006286621
    9. 'if' → logprob: -5.710433006286621
    10. '                
' → logprob: -5.835433006286621

Token 80: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32456591725349426
    2. '           ' → logprob: -2.074565887451172
    3. '               ' → logprob: -2.324565887451172
    4. ' if' → logprob: -4.199565887451172
    5. 'if' → logprob: -5.074565887451172
    6. '            
' → logprob: -5.324565887451172
    7. ' 
' → logprob: -5.324565887451172
    8. '
' → logprob: -5.699565887451172
    9. '                
' → logprob: -5.699565887451172
    10. '*' → logprob: -6.074565887451172

Token 81: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7849544286727905
    2. 'if' (adapté à ' if') → logprob: -0.9099544286727905
    3. '               ' → logprob: -2.03495454788208
    4. '           ' → logprob: -5.40995454788208
    5. 'answer' → logprob: -5.53495454788208
    6. ' answer' → logprob: -7.15995454788208
    7. '
' → logprob: -7.28495454788208
    8. '                   ' → logprob: -8.409954071044922
    9. '       ' → logprob: -9.034954071044922
    10. ' ' → logprob: -9.409954071044922

Token 82: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.0008143932209350169
    2. 'res' → logprob: -7.125814437866211
    3. ' answer' → logprob: -11.750814437866211
    4. '(res' → logprob: -13.875814437866211
    5. ' ans' → logprob: -14.750814437866211
    6. ' ' → logprob: -15.875814437866211
    7. ' (' → logprob: -16.00081443786621
    8. 'answer' → logprob: -16.00081443786621
    9. '	res' → logprob: -16.12581443786621
    10. '                   ' → logprob: -16.50081443786621

Token 83: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.006797663867473602
    2. '<' → logprob: -5.006797790527344
    3. ' ' → logprob: -9.506797790527344
    4. '<|end|>' → logprob: -12.256797790527344
    5. ' \<' → logprob: -14.631797790527344
    6. '<int' → logprob: -15.006797790527344
    7. '0' → logprob: -15.381797790527344
    8. ' <",' → logprob: -15.506797790527344
    9. '<class' → logprob: -15.506797790527344
    10. ')' → logprob: -15.631797790527344

Token 84: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.02975199744105339
    2. ' answer' → logprob: -3.529752016067505
    3. '	answer' → logprob: -13.654751777648926
    4. 'Answer' → logprob: -15.279751777648926
    5. '_answer' → logprob: -16.529752731323242
    6. 'ans' → logprob: -16.904752731323242
    7. '(answer' → logprob: -17.029752731323242
    8. '.answer' → logprob: -17.779752731323242
    9. 'ANSWER' → logprob: -18.279752731323242
    10. ' ' → logprob: -19.404752731323242

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08896007388830185
    2. ':
' → logprob: -2.4639601707458496
    3. '           ' → logprob: -12.338959693908691
    4. ':
' → logprob: -12.588959693908691
    5. '):
' → logprob: -12.963959693908691
    6. ':

' → logprob: -12.963959693908691
    7. '):' → logprob: -13.713959693908691
    8. '<|end|>' → logprob: -13.713959693908691
    9. '               ' → logprob: -13.838959693908691
    10. ' :
' → logprob: -13.963959693908691

Token 86: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04605725035071373
    2. 'answer' → logprob: -3.7960572242736816
    3. '                    
' → logprob: -4.921057224273682
    4. '               ' → logprob: -5.046057224273682
    5. '
' → logprob: -5.796057224273682
    6. ' answer' → logprob: -6.296057224273682
    7. '                       ' → logprob: -6.296057224273682
    8. '                
' → logprob: -8.04605770111084
    9. '           ' → logprob: -8.42105770111084
    10. '                        
' → logprob: -8.42105770111084

Token 87: ' answer' (ID: 6052)
  Prédit: ' answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' answer' → logprob: -0.313326358795166
    2. 'answer' (adapté à ' answer') → logprob: -1.813326358795166
    3. '                   ' → logprob: -2.313326358795166
    4. '                       ' → logprob: -5.188326358795166
    5. '                    ' → logprob: -8.063325881958008
    6. '               ' → logprob: -8.313325881958008
    7. '	answer' → logprob: -8.313325881958008
    8. 'Answer' → logprob: -8.688325881958008
    9. '
' → logprob: -9.438325881958008
    10. '           ' → logprob: -9.938325881958008

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0067156096920371056
    2. '=' → logprob: -5.006715774536133
    3. ' ' → logprob: -15.756715774536133
    4. ' =
' → logprob: -17.506715774536133
    5. '    ' → logprob: -18.756715774536133
    6. '＝' → logprob: -18.756715774536133
    7. '<|end|>' → logprob: -19.381715774536133
    8. '.' → logprob: -19.631715774536133
    9. ' =)' → logprob: -19.631715774536133
    10. '   ' → logprob: -19.756715774536133

Token 89: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.4740781784057617
    2. ' res' → logprob: -0.9740781784057617
    3. '	res' → logprob: -14.474078178405762
    4. '
' → logprob: -15.849078178405762
    5. '                   ' → logprob: -15.974078178405762
    6. ' ' → logprob: -16.474079132080078
    7. '$res' → logprob: -16.474079132080078
    8. '               ' → logprob: -16.849079132080078
    9. '_res' → logprob: -17.099079132080078
    10. '                ' → logprob: -17.224079132080078

Token 90: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025302249938249588
    2. '
' → logprob: -3.7753021717071533
    3. 'return' → logprob: -7.150302410125732
    4. '        
' → logprob: -7.275302410125732
    5. ' return' → logprob: -8.525301933288574
    6. '   ' → logprob: -8.775301933288574
    7. '    
' → logprob: -9.525301933288574
    8. '```' → logprob: -9.775301933288574
    9. '
' → logprob: -11.025301933288574
    10. '           ' → logprob: -11.525301933288574

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012021434493362904
    2. '
' → logprob: -4.887021541595459
    3. 'return' → logprob: -6.137021541595459
    4. '        
' → logprob: -6.887021541595459
    5. ' return' → logprob: -7.387021541595459
    6. '   ' → logprob: -8.0120210647583
    7. '    
' → logprob: -9.1370210647583
    8. '```' → logprob: -10.2620210647583
    9. '	' → logprob: -10.3870210647583
    10. '	return' → logprob: -11.0120210647583

Token 92: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024756586644798517
    2. 'return' (adapté à ' return') → logprob: -6.502475738525391
    3. '   ' → logprob: -7.002475738525391
    4. ' return' → logprob: -9.87747573852539
    5. '
' → logprob: -12.12747573852539
    6. '           ' → logprob: -12.50247573852539
    7. '               ' → logprob: -14.12747573852539
    8. '```' → logprob: -14.12747573852539
    9. '	return' → logprob: -14.75247573852539
    10. '        
' → logprob: -15.37747573852539

Token 93: ' int' (ID: 677)
  Prédit: ' answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' answer' → logprob: -0.693182647228241
    2. 'answer' → logprob: -0.693182647228241
    3. 'int' → logprob: -10.443182945251465
    4. ' int' → logprob: -12.068182945251465
    5. '	answer' → logprob: -15.443182945251465
    6. '(answer' → logprob: -15.943182945251465
    7. ' ' → logprob: -16.31818199157715
    8. ' ' → logprob: -16.56818199157715
    9. '   ' → logprob: -17.19318199157715
    10. 'ans' → logprob: -17.69318199157715

Token 94: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.0007535241893492639
    2. 'answer' → logprob: -7.375753402709961
    3. '(' → logprob: -9.000753402709961
    4. ' answer' → logprob: -13.500753402709961
    5. '(ans' → logprob: -13.625753402709961
    6. '	answer' → logprob: -14.125753402709961
    7. ' (' → logprob: -15.875753402709961
    8. '(
' → logprob: -16.75075340270996
    9. '.answer' → logprob: -17.50075340270996
    10. 'Answer' → logprob: -17.62575340270996

Token 95: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000730781932361424
    2. '<|end|>' → logprob: -7.250730991363525
    3. ')return' → logprob: -11.625730514526367
    4. ')
' → logprob: -12.375730514526367
    5. '}' → logprob: -13.375730514526367
    6. ' )' → logprob: -13.500730514526367
    7. '<|end|>' → logprob: -13.500730514526367
    8. '```' → logprob: -13.875730514526367
    9. ')}}' → logprob: -14.125730514526367
    10. ')}' → logprob: -14.750730514526367

Token 96: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: ' composite' (ID: 40773)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.38919979333877563
    2. ' ' → logprob: -1.3891997337341309
    3. ' main' → logprob: -2.889199733734131
    4. ' _' → logprob: -4.514199733734131
    5. ' __' → logprob: -5.264199733734131
    6. ' a' → logprob: -7.889199733734131
    7. ' sys' → logprob: -8.514200210571289
    8. ' space' → logprob: -8.889200210571289
    9. ' ▁' → logprob: -9.014200210571289
    10. ' ‌' → logprob: -9.514200210571289

Token 98: '_' (ID: 62)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.8941740393638611
    2. '(' → logprob: -1.1441740989685059
    3. '_factor' → logprob: -2.519174098968506
    4. '_s' → logprob: -3.394174098968506
    5. 's' → logprob: -3.519174098968506
    6. '_checker' → logprob: -3.894174098968506
    7. '_number' → logprob: -4.019174098968506
    8. '_filter' → logprob: -4.269174098968506
    9. '_generator' → logprob: -4.519174098968506
    10. '_' → logprob: -4.519174098968506

Token 99: 'appro' (ID: 14671)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.4698938727378845
    2. 'check' → logprob: -1.4698939323425293
    3. 'calc' → logprob: -3.3448939323425293
    4. 'checker' → logprob: -3.4698939323425293
    5. 'numbers' → logprob: -3.7198939323425293
    6. 'num' → logprob: -4.344893932342529
    7. 'factor' → logprob: -5.219893932342529
    8. 'finder' → logprob: -5.469893932342529
    9. 'index' → logprob: -5.469893932342529
    10. 'test' → logprob: -5.719893932342529

Token 100: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.12730950117111206
    2. 'x' → logprob: -2.127309560775757
    3. 'ch' → logprob: -9.752309799194336
    4. 'ax' → logprob: -9.752309799194336
    5. 'xim' → logprob: -9.877309799194336
    6. 'xi' → logprob: -9.877309799194336
    7. 'aches' → logprob: -10.127309799194336
    8. 'a' → logprob: -11.127309799194336
    9. 'xima' → logprob: -11.252309799194336
    10. 'xac' → logprob: -11.502309799194336

Token 101: '(x' (ID: 4061)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3629949688911438
    2. '(' → logprob: -1.237994909286499
    3. '(n' → logprob: -4.362995147705078
    4. '(params' → logprob: -8.362995147705078
    5. ' ():' → logprob: -8.737995147705078
    6. '(s' → logprob: -8.737995147705078
    7. '(user' → logprob: -9.487995147705078
    8. ':' → logprob: -9.487995147705078
    9. '(num' → logprob: -9.487995147705078
    10. '()' → logprob: -9.612995147705078

Token 102: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006107489578425884
    2. '):
' → logprob: -5.881107330322266
    3. ' ):' → logprob: -6.256107330322266
    4. ',' → logprob: -6.881107330322266
    5. ')' → logprob: -8.631107330322266
    6. ':' → logprob: -9.131107330322266
    7. ' :' → logprob: -11.006107330322266
    8. '):
' → logprob: -11.256107330322266
    9. ' ,' → logprob: -11.756107330322266
    10. '   ' → logprob: -12.006107330322266

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009789824252948165
    2. '    
' → logprob: -7.625978946685791
    3. ':' → logprob: -9.00097942352295
    4. '    ' → logprob: -9.62597942352295
    5. 'n' → logprob: -9.87597942352295
    6. ' return' → logprob: -10.25097942352295
    7. 'return' → logprob: -10.37597942352295
    8. '<|end|>' → logprob: -10.37597942352295
    9. '       ' → logprob: -10.62597942352295
    10. ' for' → logprob: -11.00097942352295

Token 104: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.226714849472046
    2. 'calc' → logprob: -1.601714849472046
    3. '   ' → logprob: -1.726714849472046
    4. 'return' → logprob: -1.851714849472046
    5. ' return' → logprob: -2.601714849472046
    6. ' c' → logprob: -3.726714849472046
    7. 'if' → logprob: -3.726714849472046
    8. ' if' → logprob: -3.976714849472046
    9. ' calc' → logprob: -3.976714849472046
    10. 'result' → logprob: -6.601715087890625

Token 105: ' functional' (ID: 20483)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.6158804893493652
    2. 'if' → logprob: -2.1158804893493652
    3. ' res' → logprob: -2.2408804893493652
    4. ' for' → logprob: -2.4908804893493652
    5. '   ' → logprob: -2.8658804893493652
    6. ' result' → logprob: -2.9908804893493652
    7. ' return' → logprob: -2.9908804893493652
    8. 'result' → logprob: -3.1158804893493652
    9. 'for' → logprob: -3.2408804893493652
    10. ' n' → logprob: -3.3658804893493652

Token 106: '/par' (ID: 191933)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4087622165679932
    2. ' return' → logprob: -1.7837622165679932
    3. ' approach' → logprob: -2.033762216567993
    4. '   ' → logprob: -2.283762216567993
    5. ' def' → logprob: -2.283762216567993
    6. 'return' → logprob: -3.033762216567993
    7. ':' → logprob: -3.158762216567993
    8. ' code' → logprob: -3.408762216567993
    9. '_' → logprob: -3.533762216567993
    10. ' ' → logprob: -4.408761978149414

Token 107: 'ad' (ID: 324)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5755648016929626
    2. 'def' → logprob: -0.9505648016929626
    3. 'am' → logprob: -3.0755648612976074
    4. '   ' → logprob: -6.700564861297607
    5. 'ent' → logprob: -6.825564861297607
    6. ' def' → logprob: -6.950564861297607
    7. 'ad' → logprob: -7.325564861297607
    8. 'et' → logprob: -8.32556438446045
    9. 'ams' → logprob: -9.45056438446045
    10. 'allel' → logprob: -9.57556438446045

Token 108: 'igm' (ID: 57986)
  Prédit: 'igm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igm' → logprob: -0.06368856877088547
    2. 'ig' → logprob: -2.8136885166168213
    3. 'im' → logprob: -7.5636887550354
    4. '   ' → logprob: -7.9386887550354
    5. '```' → logprob: -8.688688278198242
    6. 'igma' → logprob: -8.938688278198242
    7. 'ime' → logprob: -9.688688278198242
    8. '>' → logprob: -10.063688278198242
    9. ' ' → logprob: -10.313688278198242
    10. ')' → logprob: -10.313688278198242

Token 109: '-l' (ID: 2887)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.071378469467163
    2. ' =' → logprob: -1.571378469467163
    3. ' approach' → logprob: -1.946378469467163
    4. '   ' → logprob: -2.446378469467163
    5. 'def' → logprob: -2.571378469467163
    6. ' return' → logprob: -2.821378469467163
    7. ' programming' → logprob: -3.571378469467163
    8. ' style' → logprob: -4.321378707885742
    9. '_' → logprob: -4.821378707885742
    10. '=' → logprob: -5.071378707885742

Token 110: 'ambda' (ID: 12104)
  Prédit: 'ike'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ike' → logprob: -1.4005783796310425
    2. 'e' → logprob: -1.7755783796310425
    3. 'ess' → logprob: -2.025578498840332
    4. 'ist' → logprob: -2.275578498840332
    5. 'ine' → logprob: -2.775578498840332
    6. 'oop' → logprob: -2.775578498840332
    7. 'ib' → logprob: -3.025578498840332
    8. '```' → logprob: -3.775578498840332
    9. 'ength' → logprob: -3.900578498840332
    10. 'def' → logprob: -4.025578498840332

Token 111: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7291466593742371
    2. ' return' → logprob: -1.2291467189788818
    3. ' =' → logprob: -1.9791467189788818
    4. 'return' → logprob: -3.604146718978882
    5. ' approach' → logprob: -3.854146718978882
    6. ':' → logprob: -4.229146480560303
    7. '=' → logprob: -5.604146480560303
    8. ':
' → logprob: -6.104146480560303
    9. ' :' → logprob: -6.229146480560303
    10. ' ' → logprob: -6.479146480560303

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5684322714805603
    2. ' return' → logprob: -1.193432331085205
    3. 'return' → logprob: -2.193432331085205
    4. ' approach' → logprob: -5.318432331085205
    5. ' result' → logprob: -6.193432331085205
    6. '
' → logprob: -6.568432331085205
    7. 'result' → logprob: -6.568432331085205
    8. ':' → logprob: -6.818432331085205
    9. 'def' → logprob: -6.943432331085205
    10. 'factor' → logprob: -6.943432331085205

Token 113: ' print' (ID: 2123)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6508824229240417
    2. 'return' → logprob: -1.1508824825286865
    3. 'f' → logprob: -2.9008824825286865
    4. '   ' → logprob: -3.0258824825286865
    5. ' f' → logprob: -4.275882244110107
    6. ' factors' → logprob: -5.275882244110107
    7. ' approach' → logprob: -5.525882244110107
    8. ' if' → logprob: -5.525882244110107
    9. 'factor' → logprob: -5.650882244110107
    10. ' find' → logprob: -5.775882244110107

Token 114: '(
' (ID: 1607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31182900071144104
    2. '((' → logprob: -2.061829090118408
    3. '(lambda' → logprob: -2.311829090118408
    4. '(list' → logprob: -3.561829090118408
    5. '(sum' → logprob: -4.936829090118408
    6. '(f' → logprob: -6.061829090118408
    7. '(max' → logprob: -6.311829090118408
    8. '(x' → logprob: -7.436829090118408
    9. '(len' → logprob: -8.06182861328125
    10. '(calc' → logprob: -8.81182861328125

Token 115: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5232136845588684
    2. ' (' → logprob: -1.3982136249542236
    3. 'list' → logprob: -2.7732136249542236
    4. ' list' → logprob: -3.5232136249542236
    5. '(list' → logprob: -4.273213863372803
    6. '(' → logprob: -4.523213863372803
    7. '       ' → logprob: -5.023213863372803
    8. '    ' → logprob: -5.148213863372803
    9. '(lambda' → logprob: -5.148213863372803
    10. 'lambda' → logprob: -5.773213863372803

Token 116: ' int' (ID: 677)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.5620499849319458
    2. 'Calc' → logprob: -1.8120499849319458
    3. 'min' → logprob: -2.3120498657226562
    4. 'lambda' → logprob: -2.4370498657226562
    5. ' (' → logprob: -2.5620498657226562
    6. '(lambda' → logprob: -2.6870498657226562
    7. '(' → logprob: -2.8120498657226562
    8. '   ' → logprob: -2.9370498657226562
    9. '(C' → logprob: -3.5620498657226562
    10. '*' → logprob: -4.062049865722656

Token 117: '(
' (ID: 1607)
  Prédit: '(math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.6023320555686951
    2. '(x' → logprob: -1.6023321151733398
    3. '((' → logprob: -1.9773321151733398
    4. '(' → logprob: -2.60233211517334
    5. '(sum' → logprob: -4.10233211517334
    6. '(C' → logprob: -4.85233211517334
    7. '(max' → logprob: -5.85233211517334
    8. '(
' → logprob: -5.97733211517334
    9. '(calc' → logprob: -6.35233211517334
    10. '(((' → logprob: -6.60233211517334

Token 118: '           ' (ID: 352)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0942072868347168
    2. 'math' → logprob: -1.7192072868347168
    3. '(x' → logprob: -2.344207286834717
    4. 'min' → logprob: -2.344207286834717
    5. 'max' → logprob: -2.469207286834717
    6. '(' → logprob: -3.219207286834717
    7. 'sum' → logprob: -3.594207286834717
    8. '(math' → logprob: -3.594207286834717
    9. 'Calc' → logprob: -3.719207286834717
    10. '(C' → logprob: -3.719207286834717

Token 119: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.0017432469176128507
    2. ' min' → logprob: -7.751743316650391
    3. 'x' → logprob: -8.00174331665039
    4. '(min' → logprob: -8.00174331665039
    5. 'sum' → logprob: -9.00174331665039
    6. '   ' → logprob: -9.25174331665039
    7. '(' → logprob: -9.25174331665039
    8. 'math' → logprob: -9.75174331665039
    9. 'lambda' → logprob: -9.75174331665039
    10. 'reduce' → logprob: -10.12674331665039

Token 120: '(
' (ID: 1607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8207452893257141
    2. '((' → logprob: -1.9457452297210693
    3. '(x' → logprob: -2.1957452297210693
    4. '(map' → logprob: -2.1957452297210693
    5. '(
' → logprob: -2.3207452297210693
    6. '(j' → logprob: -2.8207452297210693
    7. '([' → logprob: -3.9457452297210693
    8. '(i' → logprob: -5.320745468139648
    9. '([(' → logprob: -5.570745468139648
    10. '(((' → logprob: -5.820745468139648

Token 121: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.8064274787902832
    2. '(x' → logprob: -2.056427478790283
    3. '(i' → logprob: -2.056427478790283
    4. 'j' → logprob: -2.431427478790283
    5. 'map' → logprob: -2.431427478790283
    6. 'x' → logprob: -2.556427478790283
    7. '(j' → logprob: -2.806427478790283
    8. '(map' → logprob: -2.931427478790283
    9. '[j' → logprob: -3.431427478790283
    10. '[' → logprob: -3.681427478790283

Token 122: ' (' (ID: 350)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.854119598865509
    2. '(map' → logprob: -1.6041195392608643
    3. '(x' → logprob: -2.1041195392608643
    4. 'x' → logprob: -2.6041195392608643
    5. '(j' → logprob: -3.2291195392608643
    6. 'j' → logprob: -3.2291195392608643
    7. '(i' → logprob: -3.2291195392608643
    8. '[j' → logprob: -4.479119777679443
    9. '(
' → logprob: -4.979119777679443
    10. '(' (adapté à ' (') → logprob: -5.104119777679443

Token 123: 'i' (ID: 72)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8583405613899231
    2. 'i' → logprob: -1.7333405017852783
    3. '(j' → logprob: -1.7333405017852783
    4. '(i' → logprob: -1.9833405017852783
    5. 'a' → logprob: -3.4833405017852783
    6. '(a' → logprob: -4.483340740203857
    7. 'x' → logprob: -4.983340740203857
    8. 'lambda' → logprob: -5.108340740203857
    9. '(x' → logprob: -5.233340740203857
    10. 'k' → logprob: -5.358340740203857

Token 124: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6372244358062744
    2. '+' → logprob: -1.1372244358062744
    3. ' for' → logprob: -2.0122244358062744
    4. 'for' → logprob: -4.762224197387695
    5. ' ' → logprob: -5.887224197387695
    6. '+i' → logprob: -6.137224197387695
    7. ',' → logprob: -7.012224197387695
    8. '+j' → logprob: -7.262224197387695
    9. '+(' → logprob: -7.887224197387695
    10. ' plus' → logprob: -8.512224197387695

Token 125: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.653623640537262
    2. 'x' → logprob: -0.778623640537262
    3. ' (' → logprob: -5.278623580932617
    4. '(n' → logprob: -5.403623580932617
    5. '(' → logprob: -5.653623580932617
    6. ' x' → logprob: -5.903623580932617
    7. '((' → logprob: -6.028623580932617
    8. 'j' → logprob: -6.903623580932617
    9. 'n' → logprob: -7.778623580932617
    10. '(j' → logprob: -7.778623580932617

Token 126: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004996309522539377
    2. '(x' → logprob: -5.504996299743652
    3. ' x' → logprob: -7.129996299743652
    4. '(' → logprob: -9.504996299743652
    5. ' (' → logprob: -11.004996299743652
    6. 'int' → logprob: -11.879996299743652
    7. '   ' → logprob: -12.504996299743652
    8. 'div' → logprob: -12.754996299743652
    9. '(int' → logprob: -13.504996299743652
    10. '{x' → logprob: -13.754996299743652

Token 127: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.5760948061943054
    2. ' //' → logprob: -0.8260948061943054
    3. ' ' → logprob: -9.326094627380371
    4. '/i' → logprob: -11.201094627380371
    5. 'i' → logprob: -11.451094627380371
    6. ')' → logprob: -12.076094627380371
    7. 'x' → logprob: -12.201094627380371
    8. ' /' → logprob: -12.201094627380371
    9. ')//' → logprob: -12.451094627380371
    10. '  ' → logprob: -12.951094627380371

Token 128: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005897291121073067
    2. ' i' → logprob: -7.500589847564697
    3. '(i' → logprob: -11.000589370727539
    4. '(' → logprob: -12.500589370727539
    5. ' ' → logprob: -12.500589370727539
    6. ' (' → logprob: -12.875589370727539
    7. 'j' → logprob: -13.250589370727539
    8. '   ' → logprob: -13.500589370727539
    9. '
' → logprob: -14.125589370727539
    10. '  ' → logprob: -14.125589370727539

Token 129: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.056942254304885864
    2. ' -' → logprob: -3.3069422245025635
    3. '-' → logprob: -4.056942462921143
    4. ')-' → logprob: -6.806942462921143
    5. ' )' → logprob: -8.431941986083984
    6. '()' → logprob: -10.181941986083984
    7. '   ' → logprob: -10.431941986083984
    8. ' ' → logprob: -11.556941986083984
    9. ' for' → logprob: -12.306941986083984
    10. '  ' → logprob: -12.806941986083984

Token 130: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4312724769115448
    2. '-' → logprob: -1.0562725067138672
    3. ')' → logprob: -6.181272506713867
    4. ' for' → logprob: -7.806272506713867
    5. 'for' → logprob: -10.306272506713867
    6. ' ' → logprob: -10.556272506713867
    7. ')-' → logprob: -10.806272506713867
    8. '   ' → logprob: -11.681272506713867
    9. ' )' → logprob: -13.056272506713867
    10. '  ' → logprob: -13.556272506713867

Token 131: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006725549232214689
    2. ' ' → logprob: -5.006725311279297
    3. '   ' → logprob: -12.006725311279297
    4. '           ' → logprob: -13.631725311279297
    5. '       ' → logprob: -14.006725311279297
    6. '  ' → logprob: -14.381725311279297
    7. '               ' → logprob: -15.256725311279297
    8. ' ' → logprob: -15.631725311279297
    9. ')' → logprob: -15.756725311279297
    10. '1' → logprob: -15.944225311279297

Token 132: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005570820067077875
    2. ' ' → logprob: -7.500556945800781
    3. '   ' → logprob: -13.125556945800781
    4. '           ' → logprob: -14.500556945800781
    5. '       ' → logprob: -15.063056945800781
    6. ')' → logprob: -15.125556945800781
    7. '1' → logprob: -15.188056945800781
    8. '  ' → logprob: -15.438056945800781
    9. '               ' → logprob: -16.50055694580078
    10. '     ' → logprob: -16.68805694580078

Token 133: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4826599359512329
    2. 'for' → logprob: -1.107659935951233
    3. ')' → logprob: -3.1076598167419434
    4. '           ' → logprob: -5.107659816741943
    5. '               ' → logprob: -6.607659816741943
    6. ' )' → logprob: -9.107660293579102
    7. '            ' → logprob: -9.232660293579102
    8. '                ' → logprob: -10.232660293579102
    9. '                   ' → logprob: -10.357660293579102
    10. ' ' → logprob: -10.482660293579102

Token 134: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.054940395057201385
    2. ' i' → logprob: -2.9299404621124268
    3. '                   ' → logprob: -10.429940223693848
    4. '           ' → logprob: -12.179940223693848
    5. '	i' → logprob: -12.179940223693848
    6. '               ' → logprob: -12.429940223693848
    7. '                           ' → logprob: -12.804940223693848
    8. ' ' → logprob: -12.929940223693848
    9. '                               ' → logprob: -13.304940223693848
    10. '   ' → logprob: -13.554940223693848

Token 135: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14269694685935974
    2. 'in' → logprob: -2.0176968574523926
    3. ' i' → logprob: -11.89269733428955
    4. 'i' → logprob: -12.39269733428955
    5. ')' → logprob: -12.51769733428955
    6. '                ' → logprob: -13.26769733428955
    7. '               ' → logprob: -13.39269733428955
    8. '                   ' → logprob: -14.01769733428955
    9. '	in' → logprob: -14.14269733428955
    10. ' ' → logprob: -14.76769733428955

Token 136: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.11284423619508743
    2. 'range' → logprob: -2.237844228744507
    3. ' ' → logprob: -12.112844467163086
    4. '	range' → logprob: -12.112844467163086
    5. ' filter' → logprob: -12.612844467163086
    6. 'filter' → logprob: -12.862844467163086
    7. ' xrange' → logprob: -12.987844467163086
    8. '(range' → logprob: -13.487844467163086
    9. '  ' → logprob: -15.487844467163086
    10. 'x' → logprob: -15.612844467163086

Token 137: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002714681322686374
    2. '1' → logprob: -8.500271797180176
    3. ' (' → logprob: -10.250271797180176
    4. ' ' → logprob: -10.875271797180176
    5. '   ' → logprob: -11.625271797180176
    6. '(
' → logprob: -13.875271797180176
    7. '                   ' → logprob: -14.500271797180176
    8. '               ' → logprob: -14.500271797180176
    9. '       ' → logprob: -14.750271797180176
    10. ')' → logprob: -14.750271797180176

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003373534418642521
    2. '(' → logprob: -5.753373622894287
    3. ' ' → logprob: -8.628373146057129
    4. '2' → logprob: -12.503373146057129
    5. '   ' → logprob: -12.503373146057129
    6. ',' → logprob: -12.628373146057129
    7. ' (' → logprob: -13.503373146057129
    8. ')' → logprob: -13.753373146057129
    9. '[' → logprob: -14.253373146057129
    10. '
' → logprob: -14.815873146057129

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03853609785437584
    2. '(' → logprob: -3.2885360717773438
    3. ' ,' → logprob: -8.163536071777344
    4. '1' → logprob: -8.663536071777344
    5. '(x' → logprob: -11.538536071777344
    6. ',x' → logprob: -11.538536071777344
    7. ',int' → logprob: -11.663536071777344
    8. '(int' → logprob: -12.163536071777344
    9. 'int' → logprob: -14.038536071777344
    10. ',(' → logprob: -14.413536071777344

Token 140: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.28340962529182434
    2. ' int' → logprob: -1.408409595489502
    3. 'math' → logprob: -6.533409595489502
    4. ' math' → logprob: -7.908409595489502
    5. '(int' → logprob: -8.03341007232666
    6. ' x' → logprob: -9.90841007232666
    7. 'x' → logprob: -10.40841007232666
    8. '   ' → logprob: -11.53341007232666
    9. ' ' → logprob: -12.65841007232666
    10. '    ' → logprob: -12.65841007232666

Token 141: '(math' (ID: 86464)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00860038585960865
    2. '(' → logprob: -5.258600234985352
    3. '(int' → logprob: -6.133600234985352
    4. '(math' → logprob: -7.383600234985352
    5. '((' → logprob: -7.508600234985352
    6. ' (' → logprob: -10.883600234985352
    7. '(
' → logprob: -13.883600234985352
    8. '(pow' → logprob: -14.133600234985352
    9. 'x' → logprob: -14.258600234985352
    10. '(s' → logprob: -14.633600234985352

Token 142: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.0008747781976126134
    2. '(x' → logprob: -8.125874519348145
    3. 'sqrt' → logprob: -8.500874519348145
    4. '.is' → logprob: -9.000874519348145
    5. '.floor' → logprob: -9.125874519348145
    6. '.ceil' → logprob: -9.750874519348145
    7. '.' → logprob: -10.250874519348145
    8. '.x' → logprob: -11.375874519348145
    9. 'x' → logprob: -11.375874519348145
    10. '```' → logprob: -12.125874519348145

Token 143: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0005865143029950559
    2. 'x' → logprob: -7.87558650970459
    3. '(' → logprob: -8.50058650970459
    4. ' (' → logprob: -13.50058650970459
    5. '(
' → logprob: -14.37558650970459
    6. ' x' → logprob: -14.62558650970459
    7. '((' → logprob: -14.75058650970459
    8. ')x' → logprob: -16.500587463378906
    9. '{x' → logprob: -17.000587463378906
    10. '	x' → logprob: -17.375587463378906

Token 144: '))+' (ID: 103968)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18609210848808289
    2. ')+' → logprob: -2.1860921382904053
    3. '))' → logprob: -3.5610921382904053
    4. '))+' → logprob: -3.5610921382904053
    5. ' )' → logprob: -7.936091899871826
    6. ')))' → logprob: -8.686092376708984
    7. '())' → logprob: -10.561092376708984
    8. ' ))' → logprob: -11.561092376708984
    9. '+' → logprob: -11.686092376708984
    10. '**' → logprob: -11.811092376708984

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020686816424131393
    2. ' ' → logprob: -3.8956868648529053
    3. '+' → logprob: -9.645687103271484
    4. ' +' → logprob: -10.770687103271484
    5. '(' → logprob: -10.895687103271484
    6. '2' → logprob: -11.020687103271484
    7. '   ' → logprob: -11.895687103271484
    8. '  ' → logprob: -12.395687103271484
    9. ')+' → logprob: -12.395687103271484
    10. ')' → logprob: -12.770687103271484

Token 146: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04839850589632988
    2. ' if' → logprob: -3.548398494720459
    3. 'if' → logprob: -4.673398494720459
    4. '))' → logprob: -5.298398494720459
    5. ')))' → logprob: -5.548398494720459
    6. '           ' → logprob: -9.298398971557617
    7. '))))' → logprob: -10.173398971557617
    8. ' )' → logprob: -10.923398971557617
    9. '       ' → logprob: -11.173398971557617
    10. '               ' → logprob: -11.298398971557617

Token 147: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05665191262960434
    2. 'if' → logprob: -2.9316518306732178
    3. ')' → logprob: -6.931652069091797
    4. '           ' → logprob: -7.306652069091797
    5. '               ' → logprob: -10.181652069091797
    6. '       ' → logprob: -10.306652069091797
    7. '))' → logprob: -11.306652069091797
    8. '          ' → logprob: -12.306652069091797
    9. '	if' → logprob: -12.431652069091797
    10. '            ' → logprob: -12.556652069091797

Token 148: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6306541562080383
    2. ' x' → logprob: -1.0056540966033936
    3. ' not' → logprob: -2.3806540966033936
    4. 'not' → logprob: -4.755654335021973
    5. '(x' → logprob: -7.630654335021973
    6. '(not' → logprob: -8.755654335021973
    7. ' (' → logprob: -10.255654335021973
    8. ' ' → logprob: -10.255654335021973
    9. '   ' → logprob: -10.318154335021973
    10. ' ' → logprob: -10.818154335021973

Token 149: ' %' (ID: 1851)
  Prédit: '%i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%i' → logprob: -0.6803081035614014
    2. '%' → logprob: -1.1803081035614014
    3. ' %' → logprob: -1.6803081035614014
    4. '%x' → logprob: -10.55530834197998
    5. '%e' → logprob: -12.43030834197998
    6. '%s' → logprob: -13.18030834197998
    7. '%d' → logprob: -13.30530834197998
    8. ' ' → logprob: -13.30530834197998
    9. '%
' → logprob: -14.43030834197998
    10. ' ' → logprob: -14.55530834197998

Token 150: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03805101290345192
    2. ' i' → logprob: -3.288051128387451
    3. ' ' → logprob: -12.413050651550293
    4. '	i' → logprob: -13.038050651550293
    5. '   ' → logprob: -13.413050651550293
    6. '  ' → logprob: -13.913050651550293
    7. ' ' → logprob: -15.538050651550293
    8. '{i' → logprob: -15.663050651550293
    9. '(i' → logprob: -15.913050651550293
    10. '*i' → logprob: -16.53805160522461

Token 151: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1806163340806961
    2. ' ==' → logprob: -1.8056163787841797
    3. ')==' → logprob: -7.30561637878418
    4. ')' → logprob: -8.80561637878418
    5. '0' → logprob: -10.68061637878418
    6. ']==' → logprob: -11.93061637878418
    7. '==
' → logprob: -12.05561637878418
    8. '===' → logprob: -12.43061637878418
    9. ' ' → logprob: -12.55561637878418
    10. '),' → logprob: -13.93061637878418

Token 152: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010330495424568653
    2. ' ' → logprob: -6.876032829284668
    3. '   ' → logprob: -15.626032829284668
    4. '  ' → logprob: -16.876033782958984
    5. '     ' → logprob: -18.876033782958984
    6. ' ' → logprob: -18.876033782958984
    7. '00' → logprob: -19.126033782958984
    8. '=' → logprob: -19.251033782958984
    9. '۰' → logprob: -19.376033782958984
    10. '           ' → logprob: -19.501033782958984

Token 153: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. ')' → logprob: -19.062585830688477
    4. '   ' → logprob: -19.312585830688477
    5. '  ' → logprob: -19.312585830688477
    6. '۰' → logprob: -19.500085830688477
    7. ' ' → logprob: -19.937585830688477
    8. 'i' → logprob: -20.250085830688477
    9. '```' → logprob: -20.250085830688477
    10. '
' → logprob: -20.312585830688477

Token 154: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06125841289758682
    2. ')))' → logprob: -3.436258316040039
    3. ')
' → logprob: -4.686258316040039
    4. '           ' → logprob: -4.811258316040039
    5. '))' → logprob: -5.436258316040039
    6. '               ' → logprob: -5.936258316040039
    7. '))))' → logprob: -6.186258316040039
    8. '       ' → logprob: -7.436258316040039
    9. '),' → logprob: -10.186258316040039
    10. ')));' → logprob: -10.311258316040039

Token 155: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.942895233631134
    2. ')))' → logprob: -1.5678951740264893
    3. '           ' → logprob: -1.6928951740264893
    4. ')' → logprob: -2.3178951740264893
    5. '0' → logprob: -2.8178951740264893
    6. '))' → logprob: -3.4428951740264893
    7. '               ' → logprob: -3.8178951740264893
    8. '1' → logprob: -6.692895412445068
    9. ')
' → logprob: -6.817895412445068
    10. '   ' → logprob: -6.817895412445068

Token 156: ' default' (ID: 2787)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' (adapté à ' default') → logprob: -0.0007416110602207482
    2. ' default' → logprob: -7.250741481781006
    3. '           ' → logprob: -10.750741958618164
    4. 'key' → logprob: -12.250741958618164
    5. 'float' → logprob: -12.625741958618164
    6. '   ' → logprob: -14.250741958618164
    7. '               ' → logprob: -14.500741958618164
    8. '       ' → logprob: -15.250741958618164
    9. '            ' → logprob: -15.875741958618164
    10. 'fallback' → logprob: -16.250741958618164

Token 157: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15883475542068481
    2. '=int' → logprob: -2.40883469581604
    3. '=sys' → logprob: -3.78383469581604
    4. '1' → logprob: -3.90883469581604
    5. '=float' → logprob: -4.408834934234619
    6. '0' → logprob: -6.408834934234619
    7. '=None' → logprob: -8.533834457397461
    8. 'int' → logprob: -10.658834457397461
    9. ')' → logprob: -10.908834457397461
    10. 'float' → logprob: -11.158834457397461

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09219501167535782
    2. '10' → logprob: -2.8421950340270996
    3. 'int' → logprob: -3.5921950340270996
    4. '100' → logprob: -7.0921950340271
    5. '0' → logprob: -7.4671950340271
    6. 'float' → logprob: -7.5921950340271
    7. '999' → logprob: -8.842194557189941
    8. ' ' → logprob: -9.592194557189941
    9. 'math' → logprob: -10.217194557189941
    10. '[int' → logprob: -11.342194557189941

Token 159: 'e' (ID: 68)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2898162305355072
    2. ')))' → logprob: -2.03981614112854
    3. 'e' → logprob: -3.16481614112854
    4. '000' → logprob: -3.41481614112854
    5. '))' → logprob: -3.53981614112854
    6. ')
' → logprob: -5.164816379547119
    7. '0' → logprob: -5.164816379547119
    8. '00' → logprob: -5.789816379547119
    9. '))))' → logprob: -6.289816379547119
    10. '),' → logprob: -8.414815902709961

Token 160: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.0005936628440394998
    2. '9' → logprob: -8.000594139099121
    3. '20' → logprob: -9.500594139099121
    4. '19' → logprob: -9.750594139099121
    5. '10' → logprob: -9.875594139099121
    6. '15' → logprob: -11.375594139099121
    7. '100' → logprob: -11.375594139099121
    8. '+' → logprob: -11.375594139099121
    9. '99' → logprob: -11.375594139099121
    10. '12' → logprob: -11.750594139099121

Token 161: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7458392381668091
    2. '           ' → logprob: -0.9958392381668091
    3. ')))' → logprob: -2.1208391189575195
    4. '       ' → logprob: -3.3708391189575195
    5. '               ' → logprob: -7.3708391189575195
    6. ')
' → logprob: -7.4958391189575195
    7. '))))' → logprob: -8.12083911895752
    8. '))' → logprob: -8.49583911895752
    9. ')));' → logprob: -8.99583911895752
    10. '),' → logprob: -9.99583911895752

Token 162: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22385942935943604
    2. ')))' → logprob: -2.2238593101501465
    3. '       ' → logprob: -2.8488593101501465
    4. ')' → logprob: -3.4738593101501465
    5. ')
' → logprob: -6.3488593101501465
    6. '               ' → logprob: -7.2238593101501465
    7. '))))' → logprob: -7.7238593101501465
    8. '))' → logprob: -7.9738593101501465
    9. ')));' → logprob: -10.098859786987305
    10. '),
' → logprob: -10.348859786987305

Token 163: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.532576322555542
    2. '       ' → logprob: -1.532576322555542
    3. ')))' → logprob: -1.657576322555542
    4. ')
' (adapté à ' )
') → logprob: -5.907576560974121
    5. '           ' → logprob: -6.407576560974121
    6. '))' → logprob: -6.532576560974121
    7. '))))' → logprob: -8.032576560974121
    8. '   ' → logprob: -9.782576560974121
    9. ')));' → logprob: -10.032576560974121
    10. ' )' → logprob: -10.657576560974121

Token 164: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3126879334449768
    2. '       ' → logprob: -1.437687873840332
    3. ')))' → logprob: -4.062687873840332
    4. '))' → logprob: -4.312687873840332
    5. '   ' → logprob: -8.937687873840332
    6. ')
' → logprob: -9.187687873840332
    7. ' )' → logprob: -9.687687873840332
    8. '           ' → logprob: -9.812687873840332
    9. '))))' → logprob: -9.812687873840332
    10. '),' → logprob: -11.687687873840332

Token 165: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05387125536799431
    2. '   ' → logprob: -3.3038711547851562
    3. '       ' → logprob: -4.553871154785156
    4. '))' → logprob: -5.928871154785156
    5. ')))' → logprob: -6.053871154785156
    6. ')
' (adapté à ' )
') → logprob: -9.178871154785156
    7. ' )' → logprob: -10.178871154785156
    8. '))))' → logprob: -11.803871154785156
    9. '           ' → logprob: -12.553871154785156
    10. '     ' → logprob: -12.928871154785156

Token 166: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008710184134542942
    2. '   ' → logprob: -4.7587103843688965
    3. '       ' → logprob: -9.633709907531738
    4. ' )' → logprob: -11.633709907531738
    5. ')
' → logprob: -11.883709907531738
    6. '))' → logprob: -13.008709907531738
    7. '<|end|>' → logprob: -13.008709907531738
    8. '`)' → logprob: -13.258709907531738
    9. '#' → logprob: -13.633709907531738
    10. '	' → logprob: -13.883709907531738

Token 167: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004353181866463274
    2. ')
' → logprob: -7.8754353523254395
    3. ')

' (adapté à ' )

') → logprob: -10.250434875488281
    4. '   ' → logprob: -11.875434875488281
    5. ' )' → logprob: -12.375434875488281
    6. '<|end|>' → logprob: -12.750434875488281
    7. 'def' → logprob: -13.625434875488281
    8. '}' → logprob: -14.500434875488281
    9. '#' → logprob: -14.500434875488281
    10. '
' → logprob: -14.875434875488281

Token 168: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24056878685951233
    2. '(' → logprob: -2.2405688762664795
    3. '<|end|>' → logprob: -3.3655688762664795
    4. '#' → logprob: -3.7405688762664795
    5. 'x' → logprob: -3.9905688762664795
    6. '\n' → logprob: -4.6155686378479
    7. '```' → logprob: -5.7405686378479
    8. 'n' → logprob: -5.9905686378479
    9. '(
' → logprob: -6.1155686378479
    10. '.' → logprob: -6.2405686378479

Token 169: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.015220485627651215
    2. ' factorial' → logprob: -5.015220642089844
    3. ' gcd' → logprob: -6.390220642089844
    4. ' __' → logprob: -6.640220642089844
    5. ' test' → logprob: -6.765220642089844
    6. ' prime' → logprob: -7.390220642089844
    7. ' solve' → logprob: -7.765220642089844
    8. ' simple' → logprob: -7.765220642089844
    9. ' factor' → logprob: -7.890220642089844
    10. ' basic' → logprob: -8.265220642089844

Token 170: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.580929347255733e-05
    2. '():
' → logprob: -11.625016212463379
    3. ' ():' → logprob: -12.250016212463379
    4. ':' → logprob: -13.750016212463379
    5. '()' → logprob: -14.875016212463379
    6. '(' → logprob: -15.125016212463379
    7. '(":' → logprob: -16.250015258789062
    8. '():
' → logprob: -16.375015258789062
    9. '():

' → logprob: -16.875015258789062
    10. '_' → logprob: -17.000015258789062

Token 171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.077916219830513
    2. ' n' → logprob: -3.077916145324707
    3. 'n' → logprob: -3.827916145324707
    4. 'x' → logprob: -5.702916145324707
    5. ' x' → logprob: -6.202916145324707
    6. ' import' → logprob: -7.202916145324707
    7. ' for' → logprob: -8.077916145324707
    8. ' input' → logprob: -8.827916145324707
    9. 'import' → logprob: -8.827916145324707
    10. '	n' → logprob: -8.952916145324707

Token 172: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6697430610656738
    2. 'import' → logprob: -1.1697430610656738
    3. 'x' → logprob: -2.169743061065674
    4. '   ' → logprob: -3.419743061065674
    5. ' n' → logprob: -4.419743061065674
    6. ' import' → logprob: -4.919743061065674
    7. 'for' → logprob: -5.294743061065674
    8. 'if' → logprob: -5.669743061065674
    9. ' x' → logprob: -6.794743061065674
    10. ' for' → logprob: -7.544743061065674

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16026240587234497
    2. '=' → logprob: -1.9102623462677002
    3. '=int' → logprob: -10.410262107849121
    4. ':' → logprob: -12.535262107849121
    5. ',' → logprob: -13.535262107849121
    6. '=input' → logprob: -13.910262107849121
    7. ' ' → logprob: -14.160262107849121
    8. ' ' → logprob: -14.910262107849121
    9. ')' → logprob: -15.160262107849121
    10. ' =
' → logprob: -15.160262107849121

Token 174: ' None' (ID: 4662)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.474082350730896
    2. ' int' → logprob: -0.974082350730896
    3. ' ' → logprob: -13.224081993103027
    4. '   ' → logprob: -13.474081993103027
    5. '(int' → logprob: -14.974081993103027
    6. '  ' → logprob: -15.099081993103027
    7. '	int' → logprob: -15.224081993103027
    8. '10' → logprob: -15.224081993103027
    9. '100' → logprob: -15.474081993103027
    10. '<int' → logprob: -15.599081993103027

Token 175: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5644137263298035
    2. 'try' → logprob: -1.3144137859344482
    3. 'while' → logprob: -2.5644137859344482
    4. 'N' → logprob: -2.8144137859344482
    5. ' for' → logprob: -4.439413547515869
    6. 'if' → logprob: -5.189413547515869
    7. ' while' → logprob: -5.689413547515869
    8. ' try' → logprob: -5.939413547515869
    9. 'import' → logprob: -6.439413547515869
    10. '   ' → logprob: -7.939413547515869

Token 178: ' elem' (ID: 23108)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.15958979725837708
    2. ' i' → logprob: -2.7845897674560547
    3. 'line' → logprob: -3.1595897674560547
    4. '_' → logprob: -4.159589767456055
    5. ' arg' → logprob: -4.534589767456055
    6. ' _' → logprob: -4.534589767456055
    7. 'i' → logprob: -5.409589767456055
    8. 'arg' → logprob: -7.409589767456055
    9. ' N' → logprob: -8.534589767456055
    10. '_line' → logprob: -8.534589767456055

Token 179: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002023804932832718
    2. 'in' → logprob: -6.377023696899414
    3. 's' → logprob: -8.627023696899414
    4. ' ' → logprob: -9.002023696899414
    5. '	in' → logprob: -11.752023696899414
    6. ' ' → logprob: -13.002023696899414
    7. '  ' → logprob: -13.377023696899414
    8. '_in' → logprob: -13.502023696899414
    9. '<|end|>' → logprob: -14.002023696899414
    10. '_' → logprob: -14.127023696899414

Token 180: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2014264017343521
    2. 'sys' → logprob: -1.701426386833191
    3. '(sys' → logprob: -12.32642650604248
    4. '	sys' → logprob: -12.45142650604248
    5. '=sys' → logprob: -13.57642650604248
    6. 'input' → logprob: -13.70142650604248
    7. '   ' → logprob: -14.57642650604248
    8. ' input' → logprob: -15.07642650604248
    9. ' ' → logprob: -15.32642650604248
    10. ' iter' → logprob: -15.32642650604248

Token 181: '.stdin' (ID: 93480)
  Prédit: '.argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.argv' → logprob: -0.3135664165019989
    2. '.stdin' → logprob: -1.3135664463043213
    3. ' .' → logprob: -8.438566207885742
    4. '.' → logprob: -9.438566207885742
    5. 'argv' → logprob: -11.813566207885742
    6. 'stdin' → logprob: -15.063566207885742
    7. '   ' → logprob: -15.438566207885742
    8. '.input' → logprob: -15.563566207885742
    9. '.modules' → logprob: -15.688566207885742
    10. '.stdout' → logprob: -16.313566207885742

Token 182: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20797482132911682
    2. '.readline' → logprob: -1.7079747915267944
    3. '.readlines' → logprob: -5.207974910736084
    4. ':
' → logprob: -7.582974910736084
    5. ' :' → logprob: -8.457974433898926
    6. '.' → logprob: -8.707974433898926
    7. ' readline' → logprob: -10.332974433898926
    8. 'read' → logprob: -10.582974433898926
    9. '<|end|>' → logprob: -10.582974433898926
    10. '.read' → logprob: -10.957974433898926

Token 183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010375719284638762
    2. '<|end|>' → logprob: -7.62603759765625
    3. ':' → logprob: -8.00103759765625
    4. '   ' → logprob: -9.62603759765625
    5. '        
' → logprob: -10.00103759765625
    6. ',' → logprob: -10.25103759765625
    7. '<|end|>' → logprob: -11.00103759765625
    8. ' if' → logprob: -11.62603759765625
    9. ' ' → logprob: -12.37603759765625
    10. ':
' → logprob: -12.37603759765625

Token 184: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.41882482171058655
    2. ' if' → logprob: -1.7938247919082642
    3. '       ' → logprob: -2.4188249111175537
    4. 'N' (adapté à ' N') → logprob: -3.1688249111175537
    5. ' n' → logprob: -3.4188249111175537
    6. 'n' → logprob: -5.293824672698975
    7. '   ' → logprob: -5.668824672698975
    8. 'if' → logprob: -6.543824672698975
    9. ' line' → logprob: -7.418824672698975
    10. ' x' → logprob: -8.168825149536133

Token 185: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759537816047668
    2. ' =' → logprob: -0.8259537816047668
    3. '=int' → logprob: -11.200953483581543
    4. ' ' → logprob: -15.075953483581543
    5. '＝' → logprob: -15.575953483581543
    6. '=

' → logprob: -16.57595443725586
    7. ' ' → logprob: -16.70095443725586
    8. ' =
' → logprob: -16.82595443725586
    9. 'int' → logprob: -17.07595443725586
    10. '=
' → logprob: -17.95095443725586

Token 186: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.013592381961643696
    2. ' int' → logprob: -4.51359224319458
    3. 'elem' → logprob: -6.01359224319458
    4. ' elem' → logprob: -9.263592720031738
    5. '   ' → logprob: -14.138592720031738
    6. '=int' → logprob: -15.263592720031738
    7. '(int' → logprob: -15.638592720031738
    8. '       ' → logprob: -16.888591766357422
    9. '    ' → logprob: -17.138591766357422
    10. '           ' → logprob: -17.388591766357422

Token 187: '(elem' (ID: 61564)
  Prédit: '(elem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(elem' → logprob: -5.908022285439074e-05
    2. '(' → logprob: -9.750059127807617
    3. 'elem' → logprob: -14.625059127807617
    4. '(ele' → logprob: -15.125059127807617
    5. ' (' → logprob: -17.375059127807617
    6. '(expr' → logprob: -17.625059127807617
    7. '	elem' → logprob: -18.000059127807617
    8. '(
' → logprob: -18.500059127807617
    9. '(e' → logprob: -19.375059127807617
    10. ' elem' → logprob: -19.375059127807617

Token 188: '.strip' (ID: 40613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16030262410640717
    2. '.strip' → logprob: -1.9103026390075684
    3. '.rstrip' → logprob: -9.53530216217041
    4. 'strip' → logprob: -12.41030216217041
    5. ' )' → logprob: -14.53530216217041
    6. '())' → logprob: -14.78530216217041
    7. '.' → logprob: -14.78530216217041
    8. 'rstrip' → logprob: -15.16030216217041
    9. '.readline' → logprob: -16.160303115844727
    10. ' strip' → logprob: -16.285303115844727

Token 189: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0006797884125262499
    2. ')' → logprob: -7.750679969787598
    3. '()' → logprob: -8.625679969787598
    4. '())
' → logprob: -9.625679969787598
    5. '(' → logprob: -13.500679969787598
    6. ' ())' → logprob: -14.000679969787598
    7. '()))' → logprob: -14.125679969787598
    8. '())

' → logprob: -15.250679969787598
    9. '();)' → logprob: -16.12567901611328
    10. '()
' → logprob: -16.25067901611328

Token 190: 'split' (ID: 13627)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026496173813939095
    2. ')
' → logprob: -6.752649784088135
    3. 'rstrip' → logprob: -7.252649784088135
    4. 'decode' → logprob: -8.752649307250977
    5. '')' → logprob: -8.877649307250977
    6. 'split' → logprob: -9.127649307250977
    7. '0' → logprob: -9.502649307250977
    8. '())' → logprob: -9.627649307250977
    9. 'replace' → logprob: -9.752649307250977
    10. 'strip' → logprob: -9.877649307250977

Token 191: '()[' (ID: 20778)
  Prédit: '()['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.019595937803387642
    2. '()' → logprob: -4.019596099853516
    3. '())' → logprob: -6.894596099853516
    4. '('' → logprob: -7.894596099853516
    5. '('.')[' → logprob: -10.644596099853516
    6. '())[' → logprob: -10.769596099853516
    7. '(' → logprob: -12.769596099853516
    8. '(None' → logprob: -13.269596099853516
    9. '(',' → logprob: -13.644596099853516
    10. '()))' → logprob: -13.894596099853516

Token 192: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. '[' → logprob: -10.250045776367188
    3. ' ' → logprob: -12.500045776367188
    4. '-' → logprob: -12.750045776367188
    5. ')[' → logprob: -13.375045776367188
    6. '   ' → logprob: -14.125045776367188
    7. '][' → logprob: -14.625045776367188
    8. '()[' → logprob: -15.375045776367188
    9. ')' → logprob: -15.875045776367188
    10. '])[' → logprob: -16.375045776367188

Token 193: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.253090865968261e-06
    2. '))' → logprob: -12.750009536743164
    3. ' )' → logprob: -12.750009536743164
    4. ')
' → logprob: -13.000009536743164
    5. '])' → logprob: -15.000009536743164
    6. '       ' → logprob: -15.500009536743164
    7. '   ' → logprob: -15.875009536743164
    8. ')`' → logprob: -16.000009536743164
    9. '})' → logprob: -16.625009536743164
    10. ')))' → logprob: -17.000009536743164

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029787063598632812
    2. '<|end|>' → logprob: -3.654787063598633
    3. '
' → logprob: -6.029787063598633
    4. '   ' → logprob: -7.654787063598633
    5. '        
' → logprob: -7.904787063598633
    6. ' if' → logprob: -9.654787063598633
    7. ',' → logprob: -10.404787063598633
    8. ' 
' → logprob: -10.904787063598633
    9. '<|end|>' → logprob: -10.904787063598633
    10. ')' → logprob: -11.029787063598633

Token 195: ' break' (ID: 2338)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.45173171162605286
    2. ' if' → logprob: -2.3267316818237305
    3. 'if' → logprob: -2.5767316818237305
    4. 'c' → logprob: -2.8267316818237305
    5. ' calc' → logprob: -2.9517316818237305
    6. 'ca' → logprob: -3.3267316818237305
    7. '   ' → logprob: -4.3267316818237305
    8. ' c' → logprob: -4.9517316818237305
    9. '       ' → logprob: -5.0767316818237305
    10. ' break' → logprob: -5.3267316818237305

Token 196: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006515587214380503
    2. '<|end|>' → logprob: -5.3815155029296875
    3. '    
' → logprob: -7.0065155029296875
    4. '   ' → logprob: -7.1315155029296875
    5. ' 
' → logprob: -9.756515502929688
    6. '  
' → logprob: -9.881515502929688
    7. '\n' → logprob: -10.881515502929688
    8. '        
' → logprob: -11.381515502929688
    9. '' → logprob: -11.506515502929688
    10. '
' → logprob: -11.631515502929688

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03121219202876091
    2. '
' → logprob: -4.281212329864502
    3. '    
' → logprob: -4.281212329864502
    4. ' if' → logprob: -6.406212329864502
    5. 'if' → logprob: -7.906212329864502
    6. '<|end|>' → logprob: -8.281211853027344
    7. 'calc' → logprob: -8.781211853027344
    8. '  
' → logprob: -9.031211853027344
    9. ' 
' → logprob: -9.031211853027344
    10. 'c' → logprob: -9.531211853027344

Token 198: ' #' (ID: 1069)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.17030556499958038
    2. 'c' → logprob: -2.0453054904937744
    3. 'if' → logprob: -4.0453057289123535
    4. 'calculator' → logprob: -5.0453057289123535
    5. 'cal' → logprob: -7.2953057289123535
    6. '   ' → logprob: -7.4203057289123535
    7. ' calc' → logprob: -7.4203057289123535
    8. ' if' → logprob: -7.4203057289123535
    9. 'obj' → logprob: -7.9203057289123535
    10. ' c' → logprob: -9.295305252075195

Token 199: ' OO' (ID: 145595)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.7918817400932312
    2. ' calc' → logprob: -1.166881799697876
    3. 'c' → logprob: -2.916881799697876
    4. ' c' → logprob: -3.166881799697876
    5. ' if' → logprob: -3.166881799697876
    6. ' result' → logprob: -3.666881799697876
    7. ' obj' → logprob: -4.291881561279297
    8. 'if' → logprob: -4.291881561279297
    9. 'obj' → logprob: -4.291881561279297
    10. 'result' → logprob: -4.541881561279297

Token 200: ' +' (ID: 659)
  Prédit: ' approach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.36210447549819946
    2. ' calc' → logprob: -1.9871044158935547
    3. '   ' → logprob: -2.2371044158935547
    4. 'calc' → logprob: -3.9871044158935547
    5. ' Calc' → logprob: -4.112104415893555
    6. '
' → logprob: -5.237104415893555
    7. 'Calc' → logprob: -5.487104415893555
    8. ' c' → logprob: -5.862104415893555
    9. 'c' → logprob: -6.362104415893555
    10. ' method' → logprob: -6.612104415893555

Token 201: ' imperative' (ID: 73047)
  Prédit: 'functional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'functional' → logprob: -0.45118698477745056
    2. ' functional' → logprob: -1.326187014579773
    3. 'Calc' → logprob: -3.0761868953704834
    4. ' Calc' → logprob: -4.0761871337890625
    5. 'calc' → logprob: -4.4511871337890625
    6. ' procedural' → logprob: -4.8261871337890625
    7. ' calc' → logprob: -5.4511871337890625
    8. 'com' → logprob: -5.7011871337890625
    9. 'proced' → logprob: -5.7011871337890625
    10. 'Functional' → logprob: -6.7011871337890625

Token 202: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3264659345149994
    2. '
' → logprob: -1.3264659643173218
    3. ' calc' → logprob: -5.076466083526611
    4. 'calc' → logprob: -6.076466083526611
    5. '<|end|>' → logprob: -6.326466083526611
    6. '    
' → logprob: -6.701466083526611
    7. ' c' → logprob: -7.951466083526611
    8. ' 
' → logprob: -8.701465606689453
    9. ' Calc' → logprob: -8.951465606689453
    10. '  ' → logprob: -8.951465606689453

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14270605146884918
    2. ' calc' → logprob: -3.0177061557769775
    3. '
' → logprob: -3.1427061557769775
    4. 'calc' → logprob: -3.7677061557769775
    5. ' c' → logprob: -4.392705917358398
    6. 'c' → logprob: -5.767705917358398
    7. '    
' → logprob: -7.267705917358398
    8. 'Calc' → logprob: -8.392705917358398
    9. ' Calc' → logprob: -9.017705917358398
    10. ' obj' → logprob: -9.267705917358398

Token 204: ' obj' (ID: 4099)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.2361890822649002
    2. 'c' → logprob: -1.8611891269683838
    3. 'print' → logprob: -3.861189126968384
    4. 'obj' (adapté à ' obj') → logprob: -3.986189126968384
    5. ' calc' → logprob: -4.861188888549805
    6. ' c' → logprob: -6.361188888549805
    7. 'result' → logprob: -6.486188888549805
    8. 'calculator' → logprob: -6.861188888549805
    9. 'Calc' → logprob: -7.236188888549805
    10. 'cal' → logprob: -7.236188888549805

Token 205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300056770443916
    2. '=' → logprob: -3.1680004596710205
    3. ' ' → logprob: -14.668000221252441
    4. ' ' → logprob: -15.043000221252441
    5. '_' → logprob: -15.793000221252441
    6. '   ' → logprob: -16.418001174926758
    7. '.' → logprob: -16.418001174926758
    8. 'ect' → logprob: -16.543001174926758
    9. '	' → logprob: -16.793001174926758
    10. '  ' → logprob: -17.293001174926758

Token 206: ' Calc' (ID: 78951)
  Prédit: 'Calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calc' → logprob: -0.12694038450717926
    2. ' Calc' → logprob: -2.1269404888153076
    3. '   ' → logprob: -12.126940727233887
    4. 'Cal' → logprob: -12.751940727233887
    5. 'Calculator' → logprob: -13.126940727233887
    6. 'Calcul' → logprob: -14.751940727233887
    7. ' calc' → logprob: -14.876940727233887
    8. ' ' → logprob: -14.876940727233887
    9. '    ' → logprob: -16.00193977355957
    10. 'C' → logprob: -16.00193977355957

Token 207: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0001596771035110578
    2. '(' → logprob: -8.75015926361084
    3. 'N' → logprob: -14.50015926361084
    4. '(
' → logprob: -15.00015926361084
    5. '(n' → logprob: -15.00015926361084
    6. ' (' → logprob: -17.250160217285156
    7. '(int' → logprob: -18.500160217285156
    8. '((' → logprob: -18.750160217285156
    9. '```' → logprob: -19.750160217285156
    10. '(S' → logprob: -19.875160217285156

Token 208: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4741138517856598
    2. ')
' → logprob: -0.9741138219833374
    3. ')
' → logprob: -10.474113464355469
    4. ')

' → logprob: -12.599113464355469
    5. ' )
' → logprob: -13.474113464355469
    6. ' )' → logprob: -13.724113464355469
    7. '   ' → logprob: -13.724113464355469
    8. ').' → logprob: -14.099113464355469
    9. ' ' → logprob: -15.599113464355469
    10. '),' → logprob: -15.849113464355469

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5773427486419678
    2. 'print' → logprob: -0.8273427486419678
    3. ' print' → logprob: -6.577342987060547
    4. '	print' → logprob: -12.202342987060547
    5. '```' → logprob: -13.202342987060547
    6. '    
' → logprob: -13.452342987060547
    7. '<|end|>' → logprob: -13.577342987060547
    8. '       ' → logprob: -14.577342987060547
    9. 'result' → logprob: -15.202342987060547
    10. '
' → logprob: -16.202342987060547

Token 210: ' imperative' (ID: 73047)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5048530030981055e-06
    2. ' print' → logprob: -13.500001907348633
    3. 'result' → logprob: -17.625001907348633
    4. '   ' → logprob: -18.375001907348633
    5. '
' → logprob: -20.625001907348633
    6. '```' → logprob: -20.750001907348633
    7. '	print' → logprob: -21.750001907348633
    8. 'pr' → logprob: -22.500001907348633
    9. '#print' → logprob: -22.875001907348633
    10. '       ' → logprob: -22.875001907348633

Token 211: ' =' (ID: 314)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.17088814079761505
    2. '.' → logprob: -2.9208881855010986
    3. 'result' → logprob: -3.4208881855010986
    4. '_' → logprob: -3.9208881855010986
    5. ' =' → logprob: -4.1708879470825195
    6. ' result' → logprob: -5.0458879470825195
    7. 'ly' → logprob: -5.2958879470825195
    8. '.result' → logprob: -5.4208879470825195
    9. ' approach' → logprob: -5.5458879470825195
    10. ' .' → logprob: -6.0458879470825195

Token 212: ' obj' (ID: 4099)
  Prédit: 'obj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'obj' → logprob: -0.38687223196029663
    2. ' obj' → logprob: -1.1368722915649414
    3. '(obj' → logprob: -14.761872291564941
    4. '	obj' → logprob: -15.261872291564941
    5. '   ' → logprob: -16.261871337890625
    6. '$obj' → logprob: -16.511871337890625
    7. '=obj' → logprob: -16.511871337890625
    8. '[obj' → logprob: -16.761871337890625
    9. 'str' → logprob: -16.886871337890625
    10. ' ' → logprob: -17.011871337890625

Token 213: '.result' (ID: 22965)
  Prédit: '.result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.result' → logprob: -7.839121826691553e-05
    2. 'result' → logprob: -9.500078201293945
    3. '.' → logprob: -12.625078201293945
    4. ' .' → logprob: -16.875078201293945
    5. '	result' → logprob: -17.125078201293945
    6. ' result' → logprob: -17.375078201293945
    7. '```' → logprob: -18.125078201293945
    8. ').' → logprob: -18.250078201293945
    9. '.method' → logprob: -18.250078201293945
    10. ',result' → logprob: -18.375078201293945

Token 214: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.2994620242971e-06
    2. '()
' → logprob: -11.875008583068848
    3. '()

' → logprob: -14.750008583068848
    4. '()`' → logprob: -14.750008583068848
    5. '()"' → logprob: -15.875008583068848
    6. ' ()' → logprob: -16.00000762939453
    7. '(' → logprob: -16.62500762939453
    8. '()]' → logprob: -17.25000762939453
    9. '()
' → logprob: -17.50000762939453
    10. '()}' → logprob: -18.00000762939453

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29967978596687317
    2. '
' → logprob: -1.9246797561645508
    3. 'com' → logprob: -2.424679756164551
    4. '    
' → logprob: -4.424679756164551
    5. ' composite' → logprob: -4.549679756164551
    6. '<|end|>' → logprob: -6.674679756164551
    7. '	com' → logprob: -8.17467975616455
    8. '(com' → logprob: -9.42467975616455
    9. '  
' → logprob: -10.04967975616455
    10. '```' → logprob: -10.04967975616455

Token 216: ' if' (ID: 538)
  Prédit: 'functional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'functional' → logprob: -0.31695181131362915
    2. 'com' → logprob: -1.3169517517089844
    3. ' functional' → logprob: -6.816951751708984
    4. '
' → logprob: -7.066951751708984
    5. '#' → logprob: -7.316951751708984
    6. 'print' → logprob: -7.691951751708984
    7. '   ' → logprob: -8.191951751708984
    8. '    
' → logprob: -9.191951751708984
    9. ' composite' → logprob: -9.441951751708984
    10. 'lambda' → logprob: -9.441951751708984

Token 217: ' imperative' (ID: 73047)
  Prédit: ' imperative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' imperative' → logprob: -0.33333054184913635
    2. 'imper' → logprob: -1.333330512046814
    3. 'im' → logprob: -4.5833306312561035
    4. ' not' → logprob: -5.5833306312561035
    5. ' N' → logprob: -6.5833306312561035
    6. ' imper' → logprob: -6.5833306312561035
    7. ' len' → logprob: -7.2083306312561035
    8. 'not' → logprob: -7.4583306312561035
    9. ' __' → logprob: -7.8333306312561035
    10. ' ' → logprob: -8.083330154418945

Token 218: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5017545223236084
    2. ' ==' → logprob: -1.1267545223236084
    3. '==' → logprob: -3.8767545223236084
    4. '<' → logprob: -4.3767547607421875
    5. ' <=' → logprob: -4.3767547607421875
    6. ' !=' → logprob: -4.5017547607421875
    7. ' >' → logprob: -4.7517547607421875
    8. '>' → logprob: -6.2517547607421875
    9. ' >=' → logprob: -6.6267547607421875
    10. ' ' → logprob: -7.7517547607421875

Token 219: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0370705127716064
    2. 'float' → logprob: -1.7870705127716064
    3. 'com' → logprob: -2.0370705127716064
    4. '100' → logprob: -2.1620705127716064
    5. '10' → logprob: -2.1620705127716064
    6. 'int' → logprob: -3.2870705127716064
    7. ' ' → logprob: -3.9120705127716064
    8. '(' → logprob: -4.162070274353027
    9. 'math' → logprob: -4.162070274353027
    10. ' float' → logprob: -4.912070274353027

Token 220: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.697408139705658
    2. 'int' → logprob: -1.6974081993103027
    3. '10' → logprob: -1.8224081993103027
    4. 'float' → logprob: -2.5724081993103027
    5. '(' → logprob: -3.3224081993103027
    6. 'com' → logprob: -3.8224081993103027
    7. '100' → logprob: -4.197408199310303
    8. 'math' → logprob: -5.447408199310303
    9. 'N' → logprob: -7.572408199310303
    10. '2' → logprob: -7.697408199310303

Token 221: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024780353996902704
    2. ' :' → logprob: -6.877478122711182
    3. ' or' → logprob: -7.127478122711182
    4. ':
' → logprob: -7.377478122711182
    5. 'or' → logprob: -11.627477645874023
    6. ':return' → logprob: -13.252477645874023
    7. ' and' → logprob: -13.377477645874023
    8. '.' → logprob: -14.002477645874023
    9. ' :
' → logprob: -14.002477645874023
    10. '   ' → logprob: -14.377477645874023

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05163239315152168
    2. '   ' → logprob: -3.3016324043273926
    3. '0' → logprob: -5.051632404327393
    4. ' ' → logprob: -6.426632404327393
    5. '=' → logprob: -6.551632404327393
    6. ' or' → logprob: -6.676632404327393
    7. '1' → logprob: -7.676632404327393
    8. ' print' → logprob: -7.801632404327393
    9. ':
' → logprob: -7.926632404327393
    10. ':' → logprob: -7.926632404327393

Token 223: ' composite' (ID: 40773)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1014438048005104
    2. 'print' → logprob: -2.6014437675476074
    3. ' print' → logprob: -4.226443767547607
    4. '   ' → logprob: -5.101443767547607
    5. 'return' → logprob: -7.976443767547607
    6. ' return' → logprob: -8.226444244384766
    7. 'imper' → logprob: -8.226444244384766
    8. 'pass' → logprob: -8.976444244384766
    9. ' composite' → logprob: -9.351444244384766
    10. 'com' → logprob: -9.351444244384766

Token 224: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00012761499965563416
    2. 'appro' → logprob: -9.500127792358398
    3. 'Appro' → logprob: -10.500127792358398
    4. ' _' → logprob: -11.750127792358398
    5. ' approach' → logprob: -12.250127792358398
    6. '_method' → logprob: -13.625127792358398
    7. '   ' → logprob: -13.875127792358398
    8. '_APPRO' → logprob: -14.250127792358398
    9. '_app' → logprob: -14.375127792358398
    10. '```' → logprob: -14.500127792358398

Token 225: 'appro' (ID: 14671)
  Prédit: 'appro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appro' → logprob: -3.941161776310764e-05
    2. '_' → logprob: -11.125039100646973
    3. ' approach' → logprob: -12.250039100646973
    4. 'com' → logprob: -12.250039100646973
    5. 'app' → logprob: -12.750039100646973
    6. 'ap' → logprob: -13.000039100646973
    7. 'print' → logprob: -14.125039100646973
    8. 'Appro' → logprob: -14.125039100646973
    9. 'approx' → logprob: -14.250039100646973
    10. '```' → logprob: -14.500039100646973

Token 226: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -8.180258191714529e-06
    2. 'ch' → logprob: -11.875008583068848
    3. 'a' → logprob: -15.375008583068848
    4. ' ach' → logprob: -16.00000762939453
    5. '```' → logprob: -16.00000762939453
    6. 'ad' → logprob: -16.25000762939453
    7. 'arch' → logprob: -16.50000762939453
    8. '_' → logprob: -16.50000762939453
    9. 'achto' → logprob: -16.62500762939453
    10. 'ache' → logprob: -16.75000762939453

Token 227: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0013713110238313675
    2. '(' → logprob: -6.626371383666992
    3. ' (' → logprob: -10.626371383666992
    4. '(n' → logprob: -11.501371383666992
    5. '(
' → logprob: -12.501371383666992
    6. '((' → logprob: -13.376371383666992
    7. '(x' → logprob: -13.751371383666992
    8. '()' → logprob: -13.876371383666992
    9. '('' → logprob: -14.376371383666992
    10. ' ' → logprob: -14.876371383666992

Token 228: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001063655479811132
    2. '   ' → logprob: -7.501063823699951
    3. ')
' → logprob: -7.626063823699951
    4. ' )' → logprob: -11.126063346862793
    5. '       ' → logprob: -11.876063346862793
    6. ')
' → logprob: -15.376063346862793
    7. '))' → logprob: -15.626063346862793
    8. '())' → logprob: -15.751063346862793
    9. ')return' → logprob: -16.37606430053711
    10. '()' → logprob: -16.50106430053711

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16176258027553558
    2. 'else' → logprob: -2.0367624759674072
    3. ' else' → logprob: -4.036762714385986
    4. '<|end|>' → logprob: -7.536762714385986
    5. 'elif' → logprob: -8.661762237548828
    6. '	else' → logprob: -8.786762237548828
    7. ')' → logprob: -9.036762237548828
    8. ' ' → logprob: -9.161762237548828
    9. '    
' → logprob: -10.286762237548828
    10. '       ' → logprob: -10.911762237548828

Token 230: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2586633861064911
    2. 'else' (adapté à ' else') → logprob: -1.5086634159088135
    3. ' else' → logprob: -5.008663177490234
    4. 'elif' → logprob: -11.008663177490234
    5. '	else' → logprob: -11.383663177490234
    6. ' ' → logprob: -12.758663177490234
    7. '  ' → logprob: -15.133663177490234
    8. '       ' → logprob: -15.883663177490234
    9. '    ' → logprob: -15.883663177490234
    10. ' elif' → logprob: -16.008663177490234

Token 231: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5323959589004517
    2. '       ' → logprob: -1.5323959589004517
    3. ':
' → logprob: -1.6573959589004517
    4. '   ' → logprob: -5.282395839691162
    5. '    ' → logprob: -7.907395839691162
    6. '{' → logprob: -8.03239631652832
    7. '      ' → logprob: -10.03239631652832
    8. '        
' → logprob: -10.15739631652832
    9. '           ' → logprob: -10.28239631652832
    10. '     ' → logprob: -10.53239631652832

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011690281331539154
    2. 'print' → logprob: -4.761690139770508
    3. ' print' → logprob: -6.011690139770508
    4. '   ' → logprob: -7.386690139770508
    5. '           ' → logprob: -14.136690139770508
    6. '```' → logprob: -15.636690139770508
    7. '    ' → logprob: -15.886690139770508
    8. ' ' → logprob: -15.886690139770508
    9. '	print' → logprob: -16.011690139770508
    10. '      ' → logprob: -16.636690139770508

Token 233: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.015305552864447e-05
    2. ' print' → logprob: -9.750060081481934
    3. '       ' → logprob: -13.250060081481934
    4. '   ' → logprob: -16.50006103515625
    5. '	print' → logprob: -20.62506103515625
    6. '```' → logprob: -21.25006103515625
    7. '           ' → logprob: -21.75006103515625
    8. '
' → logprob: -23.50006103515625
    9. '.print' → logprob: -24.37506103515625
    10. ' ' → logprob: -24.62506103515625

Token 234: ' mixture' (ID: 27467)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002742935437709093
    2. ' print' → logprob: -6.002742767333984
    3. '       ' → logprob: -8.252742767333984
    4. '   ' → logprob: -12.127742767333984
    5. '           ' → logprob: -13.627742767333984
    6. '	print' → logprob: -17.877742767333984
    7. '               ' → logprob: -18.502742767333984
    8. ' ' → logprob: -19.002742767333984
    9. '```' → logprob: -19.502742767333984
    10. '
' → logprob: -19.502742767333984

Token 235: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10222846269607544
    2. ' =' → logprob: -3.4772284030914307
    3. ':' → logprob: -3.7272284030914307
    4. ' composite' → logprob: -4.22722864151001
    5. ' of' → logprob: -4.47722864151001
    6. '   ' → logprob: -4.72722864151001
    7. ':
' → logprob: -6.60222864151001
    8. '           ' → logprob: -6.97722864151001
    9. '=' → logprob: -7.10222864151001
    10. ' print' → logprob: -7.22722864151001

Token 236: ' switch' (ID: 6160)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3928358256816864
    2. 'print' → logprob: -1.1428358554840088
    3. '       ' → logprob: -5.14283561706543
    4. ' composite' → logprob: -9.64283561706543
    5. '   ' → logprob: -10.89283561706543
    6. ' ' → logprob: -11.64283561706543
    7. '           ' → logprob: -12.01783561706543
    8. '	print' → logprob: -13.14283561706543
    9. 'com' → logprob: -13.39283561706543
    10. ' ' → logprob: -13.89283561706543

Token 237: ' to' (ID: 316)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.47838929295539856
    2. '   ' → logprob: -1.9783892631530762
    3. ' composite' → logprob: -2.978389263153076
    4. ' imperative' → logprob: -3.353389263153076
    5. '(com' → logprob: -3.603389263153076
    6. 'imper' → logprob: -3.728389263153076
    7. '       ' → logprob: -3.978389263153076
    8. 'case' → logprob: -4.228389263153076
    9. '()' → logprob: -4.728389263153076
    10. 'com' → logprob: -4.728389263153076

Token 238: ' composite' (ID: 40773)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.09019940346479416
    2. 'print' → logprob: -2.7151994705200195
    3. ' composite' → logprob: -3.9651994705200195
    4. ' print' → logprob: -7.7151994705200195
    5. 'lambda' → logprob: -8.21519947052002
    6. 'functional' → logprob: -8.84019947052002
    7. ' lambda' → logprob: -9.46519947052002
    8. '   ' → logprob: -10.21519947052002
    9. '(com' → logprob: -10.71519947052002
    10. 'f' → logprob: -10.71519947052002

Token 239: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.696889623621246e-06
    2. 'appro' → logprob: -13.25000286102295
    3. '_com' → logprob: -14.62500286102295
    4. '_method' → logprob: -16.375001907348633
    5. 'Appro' → logprob: -16.875001907348633
    6. '```' → logprob: -17.375001907348633
    7. '_function' → logprob: -17.750001907348633
    8. '(com' → logprob: -17.875001907348633
    9. '\' → logprob: -18.000001907348633
    10. '‌' → logprob: -18.000001907348633

Token 240: 'appro' (ID: 14671)
  Prédit: 'appro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appro' → logprob: -0.007684823591262102
    2. '_' → logprob: -4.882684707641602
    3. ' approach' → logprob: -10.007684707641602
    4. 'functional' → logprob: -11.257684707641602
    5. 'par' → logprob: -11.882684707641602
    6. 'Appro' → logprob: -13.132684707641602
    7. '```' → logprob: -13.257684707641602
    8. 'function' → logprob: -13.382684707641602
    9. '_code' → logprob: -13.757684707641602
    10. 'code' → logprob: -13.882684707641602

Token 241: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.00019340807921253145
    2. 'ch' → logprob: -8.87519359588623
    3. 'arch' → logprob: -10.75019359588623
    4. 'appro' → logprob: -11.25019359588623
    5. '   ' → logprob: -12.75019359588623
    6. '_' → logprob: -12.87519359588623
    7. '```' → logprob: -12.87519359588623
    8. 'ad' → logprob: -13.50019359588623
    9. 'ac' → logprob: -13.75019359588623
    10. 'a' → logprob: -14.00019359588623

Token 242: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09668674319982529
    2. 'com' → logprob: -2.596686840057373
    3. '(com' → logprob: -4.721686840057373
    4. ' composite' → logprob: -4.971686840057373
    5. '()' → logprob: -6.596686840057373
    6. '   ' → logprob: -7.971686840057373
    7. '(' → logprob: -10.471686363220215
    8. '           ' → logprob: -11.846686363220215
    9. '	com' → logprob: -11.846686363220215
    10. '        
' → logprob: -12.096686363220215

Token 243: ' odd' (ID: 14210)
  Prédit: 'imper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'imper' → logprob: -0.49459177255630493
    2. ' imperative' → logprob: -1.2445917129516602
    3. ' N' → logprob: -3.11959171295166
    4. 'N' → logprob: -3.24459171295166
    5. 'im' → logprob: -4.11959171295166
    6. 'imp' → logprob: -7.11959171295166
    7. ' ' → logprob: -8.11959171295166
    8. '   ' → logprob: -8.24459171295166
    9. '  ' → logprob: -8.49459171295166
    10. ' imper' → logprob: -8.74459171295166

Token 244: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6512932181358337
    2. '       ' → logprob: -1.0262932777404785
    3. '   ' → logprob: -2.5262932777404785
    4. 'if' → logprob: -3.4012932777404785
    5. ' ' → logprob: -6.7762932777404785
    6. '_' → logprob: -7.0262932777404785
    7. '    ' → logprob: -7.1512932777404785
    8. ' (' → logprob: -7.2762932777404785
    9. ':' → logprob: -7.5262932777404785
    10. '(' → logprob: -7.7762932777404785

Token 245: ' else' (ID: 1203)
  Prédit: ' composite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' composite' → logprob: -1.1015534400939941
    2. '       ' → logprob: -1.2265534400939941
    3. 'com' → logprob: -1.7265534400939941
    4. ' if' → logprob: -2.476553440093994
    5. 'if' → logprob: -2.726553440093994
    6. '           ' → logprob: -3.351553440093994
    7. '        ' → logprob: -5.101553440093994
    8. 'print' → logprob: -6.351553440093994
    9. '   ' → logprob: -6.601553440093994
    10. '    ' → logprob: -7.601553440093994

Token 246: ' imperative' (ID: 73047)
  Prédit: ' composite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' composite' → logprob: -0.7281688451766968
    2. 'com' → logprob: -1.7281688451766968
    3. 'print' → logprob: -1.8531688451766968
    4. ' print' → logprob: -2.3531689643859863
    5. '       ' → logprob: -2.4781689643859863
    6. ' imperative' → logprob: -6.603168964385986
    7. '           ' → logprob: -6.853168964385986
    8. 'imper' → logprob: -7.853168964385986
    9. '        ' → logprob: -8.353168487548828
    10. '   ' → logprob: -8.353168487548828

Token 247: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10521186888217926
    2. '   ' → logprob: -3.3552119731903076
    3. ' if' → logprob: -3.3552119731903076
    4. '
' → logprob: -3.6052119731903076
    5. 'if' → logprob: -6.4802117347717285
    6. '        
' → logprob: -7.6052117347717285
    7. '           ' → logprob: -8.355212211608887
    8. '    
' → logprob: -8.355212211608887
    9. '    ' → logprob: -9.355212211608887
    10. '\n' → logprob: -9.480212211608887

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005041812546551228
    2. ' if' → logprob: -8.500504493713379
    3. '   ' → logprob: -8.625504493713379
    4. 'if' → logprob: -9.250504493713379
    5. '           ' → logprob: -11.125504493713379
    6. '```' → logprob: -12.625504493713379
    7. 'print' → logprob: -13.125504493713379
    8. '	' → logprob: -14.000504493713379
    9. '    ' → logprob: -14.125504493713379
    10. '        
' → logprob: -14.250504493713379

Token 249: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1147985458374023
    2. ' if' → logprob: -1.2397985458374023
    3. '       ' → logprob: -1.7397985458374023
    4. 'if' → logprob: -1.8647985458374023
    5. ' composite' → logprob: -3.8647985458374023
    6. ' print' → logprob: -3.9897985458374023
    7. 'com' → logprob: -4.489798545837402
    8. '   ' → logprob: -6.614798545837402
    9. '(com' → logprob: -10.989798545837402
    10. ' ' → logprob: -11.864798545837402

Token 250: 'lambda' (ID: 35280)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.062398627400398254
    2. ' composite' → logprob: -2.812398672103882
    3. '   ' → logprob: -8.562398910522461
    4. '(com' → logprob: -9.062398910522461
    5. 'imper' → logprob: -9.687398910522461
    6. 'print' → logprob: -11.062398910522461
    7. ')' → logprob: -11.187398910522461
    8. '
' → logprob: -12.187398910522461
    9. ' imperative' → logprob: -12.562398910522461
    10. ' ' → logprob: -12.812398910522461

Token 251: ' v' (ID: 323)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6491113305091858
    2. ' odd' → logprob: -2.024111270904541
    3. ' n' → logprob: -2.274111270904541
    4. 'x' → logprob: -2.399111270904541
    5. ':' → logprob: -3.024111270904541
    6. 'n' → logprob: -3.649111270904541
    7. ' N' → logprob: -3.899111270904541
    8. 'odd' → logprob: -4.399111270904541
    9. 'N' → logprob: -4.524111270904541
    10. ' val' → logprob: -5.024111270904541

Token 252: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023310350254178047
    2. ' :' → logprob: -3.898310422897339
    3. ' v' → logprob: -6.39831018447876
    4. ':v' → logprob: -7.52331018447876
    5. '   ' → logprob: -8.648310661315918
    6. 'v' → logprob: -9.398310661315918
    7. ':
' → logprob: -9.773310661315918
    8. '       ' → logprob: -9.898310661315918
    9. '    ' → logprob: -10.023310661315918
    10. ',v' → logprob: -11.023310661315918

Token 253: ' print' (ID: 2123)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.4754590094089508
    2. ' composite' → logprob: -0.9754589796066284
    3. '   ' → logprob: -7.225459098815918
    4. '       ' → logprob: -8.100459098815918
    5. '(com' → logprob: -9.100459098815918
    6. 'print' → logprob: -10.225459098815918
    7. 'v' → logprob: -10.475459098815918
    8. '           ' → logprob: -10.475459098815918
    9. ' ' → logprob: -10.600459098815918
    10. ' v' → logprob: -11.100459098815918

Token 254: '(v' (ID: 6932)
  Prédit: '(im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(im' → logprob: -0.934120774269104
    2. '('' → logprob: -1.434120774269104
    3. '(com' → logprob: -1.934120774269104
    4. '("' → logprob: -1.934120774269104
    5. '(v' → logprob: -2.6841206550598145
    6. '(' → logprob: -4.6841206550598145
    7. '(f' → logprob: -7.6841206550598145
    8. 'com' → logprob: -7.8091206550598145
    9. '(('' → logprob: -8.184121131896973
    10. '((' → logprob: -8.309121131896973

Token 255: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4281018078327179
    2. '))(' → logprob: -1.5531017780303955
    3. ')' → logprob: -2.8031017780303955
    4. '))' → logprob: -3.3031017780303955
    5. 'if' → logprob: -3.5531017780303955
    6. ')(' → logprob: -5.928102016448975
    7. ' ))' → logprob: -6.303102016448975
    8. '()' → logprob: -6.553102016448975
    9. ' )' → logprob: -7.053102016448975
    10. '(im' → logprob: -7.553102016448975

Token 256: ' if' (ID: 538)
  Prédit: '(im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(im' → logprob: -0.023129714652895927
    2. '(' → logprob: -4.023129940032959
    3. ')(' → logprob: -5.898129940032959
    4. '(v' → logprob: -6.523129940032959
    5. '(if' → logprob: -8.2731294631958
    6. ')' → logprob: -8.8981294631958
    7. 'imper' → logprob: -9.3981294631958
    8. ' if' → logprob: -9.6481294631958
    9. 'im' → logprob: -10.1481294631958
    10. ' ' → logprob: -10.6481294631958

Token 257: ' N' (ID: 478)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0390378013253212
    2. ' v' → logprob: -3.2890377044677734
    3. '(v' → logprob: -7.539037704467773
    4. ' not' → logprob: -8.789037704467773
    5. 'not' → logprob: -8.789037704467773
    6. '   ' → logprob: -10.164037704467773
    7. 'imper' → logprob: -10.414037704467773
    8. ' ' → logprob: -10.539037704467773
    9. '	v' → logprob: -11.289037704467773
    10. ' ' → logprob: -11.789037704467773

Token 258: '%' (ID: 4)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0486837700009346
    2. '%' → logprob: -3.0486838817596436
    3. ' ' → logprob: -9.298684120178223
    4. ' ' → logprob: -12.798684120178223
    5. ' &' → logprob: -13.673684120178223
    6. '&' → logprob: -15.923684120178223
    7. ' %
' → logprob: -16.173683166503906
    8. '==' → logprob: -16.923683166503906
    9. '  ' → logprob: -16.923683166503906
    10. '```' → logprob: -16.923683166503906

Token 259: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007181499968282878
    2. ' ' → logprob: -7.250718116760254
    3. '==' → logprob: -12.125718116760254
    4. '```' → logprob: -13.750718116760254
    5. '   ' → logprob: -14.875718116760254
    6. ' ==' → logprob: -15.625718116760254
    7. '  ' → logprob: -15.813218116760254
    8. '=' → logprob: -15.875718116760254
    9. '
' → logprob: -15.938218116760254
    10. '...' → logprob: -16.43821907043457

Token 260: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14313003420829773
    2. ' ==' → logprob: -2.01813006401062
    3. ' else' → logprob: -8.6431303024292
    4. 'else' → logprob: -8.7681303024292
    5. '0' → logprob: -10.7681303024292
    6. '=' → logprob: -10.8931303024292
    7. ' ' → logprob: -11.0181303024292
    8. '!=' → logprob: -11.1431303024292
    9. ')' → logprob: -11.7681303024292
    10. ' !=' → logprob: -11.7681303024292

Token 261: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009577934979461133
    2. ' ' → logprob: -7.25095796585083
    3. '2' → logprob: -8.375957489013672
    4. '1' → logprob: -11.125957489013672
    5. '=' → logprob: -13.625957489013672
    6. '==' → logprob: -14.500957489013672
    7. '```' → logprob: -15.438457489013672
    8. '   ' → logprob: -16.000957489013672
    9. '
' → logprob: -16.063457489013672
    10. ')' → logprob: -16.875957489013672

Token 262: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.008627933450043201
    2. 'else' → logprob: -4.758627891540527
    3. '        ' → logprob: -11.758627891540527
    4. '       ' → logprob: -12.508627891540527
    5. ' ' → logprob: -14.508627891540527
    6. '    ' → logprob: -15.008627891540527
    7. '   ' → logprob: -15.258627891540527
    8. ' ' → logprob: -15.633627891540527
    9. '         ' → logprob: -15.758627891540527
    10. ' and' → logprob: -16.008628845214844

Token 263: ' composite' (ID: 40773)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.19508448243141174
    2. ' composite' → logprob: -1.8200844526290894
    3. '(com' → logprob: -4.195084571838379
    4. '           ' → logprob: -10.320084571838379
    5. 'print' → logprob: -10.570084571838379
    6. '	com' → logprob: -11.320084571838379
    7. '   ' → logprob: -11.320084571838379
    8. '       ' → logprob: -11.820084571838379
    9. '(' → logprob: -11.945084571838379
    10. ' (' → logprob: -12.070084571838379

Token 264: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9361264946837764e-07
    2. 'appro' → logprob: -16.25
    3. '\' → logprob: -18.5
    4. 'Appro' → logprob: -18.75
    5. '_com' → logprob: -19.125
    6. '```' → logprob: -19.25
    7. ')' → logprob: -19.875
    8. 'v' → logprob: -19.875
    9. '-' → logprob: -20.25
    10. '_ass' → logprob: -20.5

Token 265: 'appro' (ID: 14671)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008625566959381104
    2. 'appro' → logprob: -4.758625507354736
    3. 'v' → logprob: -11.758625984191895
    4. '(v' → logprob: -13.383625984191895
    5. 'Appro' → logprob: -14.508625984191895
    6. 'apro' → logprob: -15.633625984191895
    7. '```' → logprob: -16.008625030517578
    8. 'print' → logprob: -16.258625030517578
    9. ' approach' → logprob: -16.383625030517578
    10. '_ass' → logprob: -16.758625030517578

Token 266: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.0008582198061048985
    2. 'ch' → logprob: -7.375858306884766
    3. 'appro' → logprob: -9.125858306884766
    4. 'arch' → logprob: -10.625858306884766
    5. '   ' → logprob: -10.875858306884766
    6. 'ac' → logprob: -11.750858306884766
    7. 'ah' → logprob: -11.875858306884766
    8. '_' → logprob: -12.000858306884766
    9. 'a' → logprob: -12.125858306884766
    10. '```' → logprob: -12.375858306884766

Token 267: '(N' (ID: 10564)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.11476622521877289
    2. '(N' → logprob: -2.2397661209106445
    3. '(' → logprob: -7.2397661209106445
    4. 'N' → logprob: -7.6147661209106445
    5. 'v' → logprob: -8.114766120910645
    6. ' (' → logprob: -8.489766120910645
    7. ')(' → logprob: -9.239766120910645
    8. '(n' → logprob: -9.489766120910645
    9. ')' → logprob: -10.489766120910645
    10. '(x' → logprob: -11.864766120910645

Token 268: '))(' (ID: 72297)
  Prédit: ')('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.13007645308971405
    2. '))(' → logprob: -2.1300764083862305
    3. ')' → logprob: -6.8800764083862305
    4. ' )(' → logprob: -7.0050764083862305
    5. '(v' → logprob: -7.6300764083862305
    6. ')v' → logprob: -7.8800764083862305
    7. '))' → logprob: -8.50507640838623
    8. '   ' → logprob: -10.13007640838623
    9. ' ))' → logprob: -10.50507640838623
    10. ')(
' → logprob: -11.13007640838623

Token 269: 'imper' (ID: 108176)
  Prédit: 'imper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imper' → logprob: -0.004702822305262089
    2. 'im' → logprob: -5.629703044891357
    3. ' imperative' → logprob: -7.254703044891357
    4. 'N' → logprob: -8.1297025680542
    5. 'v' → logprob: -9.8797025680542
    6. '   ' → logprob: -11.0047025680542
    7. ' imper' → logprob: -12.0047025680542
    8. 'imp' → logprob: -12.2547025680542
    9. ' N' → logprob: -12.3797025680542
    10. '  ' → logprob: -13.0047025680542

Token 270: 'ative' (ID: 1799)
  Prédit: 'ative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -3.531315314830863e-06
    2. 'a' → logprob: -12.750003814697266
    3. 'ate' → logprob: -16.000003814697266
    4. 'e' → logprob: -16.125003814697266
    5. '-' → logprob: -16.750003814697266
    6. 't' → logprob: -16.875003814697266
    7. 'ive' → logprob: -17.125003814697266
    8. '
' → logprob: -17.250003814697266
    9. 'itive' → logprob: -17.750003814697266
    10. '   ' → logprob: -17.750003814697266

Token 271: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. ' )' → logprob: -13.000003814697266
    3. ')
' → logprob: -13.625003814697266
    4. '))' → logprob: -14.375003814697266
    5. '   ' → logprob: -17.375003814697266
    6. ')}' → logprob: -18.375003814697266
    7. ')

' → logprob: -18.750003814697266
    8. ')))' → logprob: -18.750003814697266
    9. ')return' → logprob: -19.375003814697266
    10. ')`' → logprob: -19.375003814697266

Token 272: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.301394023466855e-05
    2. '
' → logprob: -10.000062942504883
    3. '<|end|>' → logprob: -11.750062942504883
    4. ' if' → logprob: -11.875062942504883
    5. '```' → logprob: -13.625062942504883
    6. 'main' → logprob: -15.000062942504883
    7. '    
' → logprob: -15.250062942504883
    8. '\n' → logprob: -15.375062942504883
    9. '#' → logprob: -15.375062942504883
    10. '  
' → logprob: -15.500062942504883

Token 273: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.005236598663032055
    2. '__' → logprob: -5.255236625671387
    3. ' ' → logprob: -13.005236625671387
    4. ' ' → logprob: -15.255236625671387
    5. '_' → logprob: -15.755236625671387
    6. 'name' → logprob: -16.50523567199707
    7. '/__' → logprob: -17.88023567199707
    8. ' name' → logprob: -18.38023567199707
    9. '___' → logprob: -18.38023567199707
    10. '_name' → logprob: -18.50523567199707

Token 274: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.015065020881593227
    2. ' ==' → logprob: -4.6400651931762695
    3. '==' → logprob: -5.3900651931762695
    4. ' __' → logprob: -7.5150651931762695
    5. '=="' → logprob: -9.76506519317627
    6. '__.__' → logprob: -9.89006519317627
    7. '__.' → logprob: -10.26506519317627
    8. '=='' → logprob: -11.64006519317627
    9. '.__' → logprob: -12.39006519317627
    10. '[' → logprob: -12.51506519317627

Token 275: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.619311974034645e-05
    2. '==' → logprob: -10.750036239624023
    3. '__.__' → logprob: -11.250036239624023
    4. ' ==' → logprob: -15.000036239624023
    5. '__.' → logprob: -15.250036239624023
    6. '__('' → logprob: -15.500036239624023
    7. '=="' → logprob: -15.625036239624023
    8. '___' → logprob: -15.875036239624023
    9. '____' → logprob: -16.125036239624023
    10. '__["' → logprob: -16.125036239624023

Token 276: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3264623284339905
    2. ' ==' → logprob: -1.9514622688293457
    3. '__' → logprob: -2.2014622688293457
    4. '=="' → logprob: -3.7014622688293457
    5. '=='' → logprob: -6.826462268829346
    6. '==
' → logprob: -10.951462745666504
    7. '===' → logprob: -11.451462745666504
    8. '=' → logprob: -11.951462745666504
    9. '___' → logprob: -12.826462745666504
    10. ' =="' → logprob: -13.201462745666504

Token 277: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20153555274009705
    2. ''' → logprob: -1.7015355825424194
    3. ' "__' → logprob: -9.57653522491455
    4. '__' → logprob: -9.95153522491455
    5. ' '__' → logprob: -12.45153522491455
    6. '"user' → logprob: -14.82653522491455
    7. '('__' → logprob: -15.95153522491455
    8. '("__' → logprob: -16.076536178588867
    9. ''"' → logprob: -16.201536178588867
    10. '"class' → logprob: -16.701536178588867

Token 278: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7061237692832947
    2. 'main' → logprob: -0.7061237692832947
    3. '"' → logprob: -4.4561238288879395
    4. ''' → logprob: -6.9561238288879395
    5. 'name' → logprob: -8.581123352050781
    6. '__":
' → logprob: -10.206123352050781
    7. ' main' → logprob: -10.956123352050781
    8. '_main' → logprob: -11.081123352050781
    9. '```' → logprob: -11.081123352050781
    10. '=="' → logprob: -11.831123352050781

Token 279: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.10057444870471954
    2. '__' → logprob: -2.350574493408203
    3. '__':
' → logprob: -8.475574493408203
    4. '__.' → logprob: -9.225574493408203
    5. '__.__' → logprob: -9.850574493408203
    6. '__["' → logprob: -12.350574493408203
    7. '.' → logprob: -13.475574493408203
    8. '__",' → logprob: -14.725574493408203
    9. '.__' → logprob: -14.850574493408203
    10. '__("' → logprob: -15.100574493408203

Token 280: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.030626507475972176
    2. ' main' → logprob: -4.03062629699707
    3. '__' → logprob: -4.40562629699707
    4. '	main' → logprob: -9.40562629699707
    5. '"' → logprob: -10.28062629699707
    6. '   ' → logprob: -10.53062629699707
    7. '_main' → logprob: -10.78062629699707
    8. ' __' → logprob: -11.15562629699707
    9. ''' → logprob: -12.40562629699707
    10. '____' → logprob: -13.28062629699707

Token 281: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.6240566083070007e-06
    2. ' main' → logprob: -13.500001907348633
    3. '	main' → logprob: -16.750001907348633
    4. '   ' → logprob: -17.625001907348633
    5. 'import' → logprob: -20.000001907348633
    6. '_main' → logprob: -22.500001907348633
    7. '.main' → logprob: -23.250001907348633
    8. '(main' → logprob: -23.250001907348633
    9. '    
' → logprob: -23.500001907348633
    10. '```' → logprob: -24.250001907348633

Token 282: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 280
Tokens correctement prédits (1ère position, stricte): 111
Tokens correctement prédits (1ère position, avec adaptation): 116
Tokens correctement prédits (top 10): 218
Précision stricte (1ère position): 39.64%
Précision adaptée (1ère position): 41.43%
Précision (top 10): 77.86%
================================================================================
