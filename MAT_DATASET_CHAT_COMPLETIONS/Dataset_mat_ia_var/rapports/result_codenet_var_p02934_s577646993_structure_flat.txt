================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:47:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
s = list(map(int, input().split()))
n_ = 0
i = 0
while i < len(s):
    n_ += 1 / s[i]
    i += 1
print(1 / n_)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010807292710524052
    2. '(n' → logprob: -10.250107765197754
    3. ''' → logprob: -10.625107765197754
    4. '('' → logprob: -11.375107765197754
    5. '```' → logprob: -11.625107765197754
    6. '(
' → logprob: -12.000107765197754
    7. '()' → logprob: -12.375107765197754
    8. '("("' → logprob: -12.375107765197754
    9. '`' → logprob: -12.500107765197754
    10. ')' → logprob: -13.125107765197754

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03871168941259384
    2. ')' → logprob: -3.5387117862701416
    3. '()' → logprob: -4.9137115478515625
    4. '())' → logprob: -7.1637115478515625
    5. '(
' → logprob: -8.663711547851562
    6. '```' → logprob: -9.163711547851562
    7. '(()' → logprob: -9.413711547851562
    8. '("("' → logprob: -9.663711547851562
    9. '('' → logprob: -9.913711547851562
    10. '`' → logprob: -10.163711547851562

Token 5: 's' (ID: 82)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6515942215919495
    2. 'for' → logprob: -1.4015941619873047
    3. 'i' → logprob: -2.1515941619873047
    4. 's' → logprob: -2.7765941619873047
    5. 'x' → logprob: -4.651594161987305
    6. ')' → logprob: -5.151594161987305
    7. 'a' → logprob: -5.401594161987305
    8. '*' → logprob: -5.401594161987305
    9. ' ' → logprob: -5.651594161987305
    10. 'f' → logprob: -5.901594161987305

Token 6: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -1.1446903944015503
    2. ' =' → logprob: -1.2696903944015503
    3. '=' → logprob: -1.8946903944015503
    4. 'tr' → logprob: -2.39469051361084
    5. '.' → logprob: -2.76969051361084
    6. '[' → logprob: -3.01969051361084
    7. 't' → logprob: -4.14469051361084
    8. 'trip' → logprob: -5.64469051361084
    9. 'u' → logprob: -5.76969051361084
    10. '[i' → logprob: -5.89469051361084

Token 7: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06323803216218948
    2. ' input' → logprob: -2.9382381439208984
    3. '""' → logprob: -5.188238143920898
    4. '''' → logprob: -6.688238143920898
    5. '0' → logprob: -7.688238143920898
    6. '"' → logprob: -7.938238143920898
    7. ' ' → logprob: -8.313238143920898
    8. ''' → logprob: -8.438238143920898
    9. ' ""' → logprob: -10.188238143920898
    10. '[]' → logprob: -10.438238143920898

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004098195640835911
    2. '(s' → logprob: -8.000410079956055
    3. '(
' → logprob: -11.375410079956055
    4. '("("' → logprob: -11.375410079956055
    5. 's' → logprob: -11.625410079956055
    6. '('' → logprob: -11.875410079956055
    7. '(input' → logprob: -12.125410079956055
    8. '()' → logprob: -12.375410079956055
    9. '(range' → logprob: -12.375410079956055
    10. ' (' → logprob: -12.750410079956055

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3414458632469177
    2. '(' → logprob: -1.8414459228515625
    3. '(str' → logprob: -2.0914459228515625
    4. '(lambda' → logprob: -5.3414459228515625
    5. '(input' → logprob: -6.5914459228515625
    6. 'int' → logprob: -8.216445922851562
    7. '(eval' → logprob: -8.966445922851562
    8. 'str' → logprob: -8.966445922851562
    9. ')' → logprob: -9.716445922851562
    10. '<int' → logprob: -9.841445922851562

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.001922683441080153
    2. '(' → logprob: -6.876922607421875
    3. ')' → logprob: -7.751922607421875
    4. '))' → logprob: -8.751922607421875
    5. '(user' → logprob: -9.626922607421875
    6. ',input' → logprob: -9.751922607421875
    7. '=input' → logprob: -9.876922607421875
    8. 'input' → logprob: -10.751922607421875
    9. '```' → logprob: -11.001922607421875
    10. '(
' → logprob: -11.626922607421875

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006742492783814669
    2. ' input' → logprob: -5.006742477416992
    3. '(input' → logprob: -10.631742477416992
    4. ')' → logprob: -13.506742477416992
    5. ',input' → logprob: -13.631742477416992
    6. '=input' → logprob: -16.131742477416992
    7. 'list' → logprob: -16.256742477416992
    8. '	input' → logprob: -16.631742477416992
    9. ' ' → logprob: -17.131742477416992
    10. '_input' → logprob: -17.256742477416992

Token 12: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7418004870414734
    2. '())' → logprob: -1.3668005466461182
    3. '()))' → logprob: -1.4918005466461182
    4. '().' → logprob: -3.241800546646118
    5. '(' → logprob: -6.116800308227539
    6. '()));' → logprob: -6.991800308227539
    7. ')' → logprob: -7.866800308227539
    8. '())))' → logprob: -7.866800308227539
    9. '()>' → logprob: -8.241800308227539
    10. '());' → logprob: -8.866800308227539

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001522718113847077
    2. 'strip' → logprob: -6.501522541046143
    3. 'rstrip' → logprob: -11.1265230178833
    4. ' split' → logprob: -12.2515230178833
    5. '(split' → logprob: -14.1265230178833
    6. ')' → logprob: -16.751522064208984
    7. 'spl' → logprob: -16.876522064208984
    8. ' strip' → logprob: -17.501522064208984
    9. 's' → logprob: -18.126522064208984
    10. 'replace' → logprob: -19.001522064208984

Token 14: '()))
' (ID: 24521)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0782967805862427
    2. ')' → logprob: -1.2032967805862427
    3. '))' → logprob: -1.2032967805862427
    4. '()))' → logprob: -3.328296661376953
    5. '())' → logprob: -3.828296661376953
    6. '()' → logprob: -7.078296661376953
    7. '('' → logprob: -7.578296661376953
    8. ')))' → logprob: -8.578296661376953
    9. '(
' → logprob: -9.453296661376953
    10. ''))' → logprob: -10.328296661376953

Token 15: 'n' (ID: 77)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3077217936515808
    2. 'c' → logprob: -2.5577218532562256
    3. 'for' → logprob: -2.8077218532562256
    4. 'm' → logprob: -3.4327218532562256
    5. 'a' → logprob: -3.5577218532562256
    6. 'd' → logprob: -4.3077216148376465
    7. 'count' → logprob: -4.5577216148376465
    8. 'result' → logprob: -5.1827216148376465
    9. 'sum' → logprob: -5.1827216148376465
    10. 'k' → logprob: -5.6827216148376465

Token 16: '_' (ID: 62)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 17: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.5034189224243164
    2. 'sum' → logprob: -2.2534189224243164
    3. 's' → logprob: -2.3784189224243164
    4. '_' → logprob: -3.1284189224243164
    5. 'n' → logprob: -3.7534189224243164
    6. '**' → logprob: -4.003418922424316
    7. 'u' → logprob: -4.628418922424316
    8. 'ums' → logprob: -4.878418922424316
    9. 'umsum' → logprob: -5.003418922424316
    10. '-' → logprob: -5.128418922424316

Token 18: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1490885019302368
    2. '0' → logprob: -1.5240885019302368
    3. 'len' → logprob: -1.5240885019302368
    4. ' n' → logprob: -2.0240883827209473
    5. 'sum' → logprob: -3.1490883827209473
    6. ' len' → logprob: -3.8990883827209473
    7. 's' → logprob: -4.524088382720947
    8. '[' → logprob: -5.024088382720947
    9. '[]' → logprob: -5.149088382720947
    10. ' sum' → logprob: -5.274088382720947

Token 19: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7451727390289307
    2. 'len' → logprob: -0.9951727390289307
    3. 'sum' → logprob: -3.1201727390289307
    4. '{}' → logprob: -3.2451727390289307
    5. '0' → logprob: -3.7451727390289307
    6. '[]' → logprob: -4.370172500610352
    7. '[n' → logprob: -4.745172500610352
    8. '[' → logprob: -4.745172500610352
    9. '[len' → logprob: -4.870172500610352
    10. '{' → logprob: -5.620172500610352

Token 20: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19656431674957275
    2. ' for' → logprob: -1.9465643167495728
    3. ' ' → logprob: -4.571564197540283
    4. '
' → logprob: -5.196564197540283
    5. '' → logprob: -5.696564197540283
    6. '+' → logprob: -6.071564197540283
    7. 'f' → logprob: -6.071564197540283
    8. 'i' → logprob: -6.071564197540283
    9. ')' → logprob: -6.321564197540283
    10. '<|end|>' → logprob: -6.321564197540283

Token 21: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04620511457324028
    2. ' for' → logprob: -3.5462050437927246
    3. 'i' → logprob: -5.421205043792725
    4. ' ' → logprob: -5.546205043792725
    5. 'f' → logprob: -6.421205043792725
    6. '
' → logprob: -6.671205043792725
    7. '```' → logprob: -6.796205043792725
    8. '<|end|>' → logprob: -7.046205043792725
    9. '+' → logprob: -7.296205043792725
    10. 's' → logprob: -7.671205043792725

Token 22: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.161985993385315
    2. '=' → logprob: -1.786985993385315
    3. '+' → logprob: -1.911985993385315
    4. ' ' → logprob: -2.0369858741760254
    5. 'n' → logprob: -2.1619858741760254
    6. ' =' → logprob: -2.6619858741760254
    7. ' +=' → logprob: -3.2869858741760254
    8. ' n' → logprob: -5.411985874176025
    9. '+=' → logprob: -5.411985874176025
    10. ' <' → logprob: -6.411985874176025

Token 23: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2818138897418976
    2. ' ' → logprob: -1.4068138599395752
    3. '1' → logprob: -7.531814098358154
    4. ' n' → logprob: -9.531813621520996
    5. 'n' → logprob: -10.031813621520996
    6. '2' → logprob: -12.406813621520996
    7. 's' → logprob: -12.781813621520996
    8. ' s' → logprob: -14.406813621520996
    9. ' -' → logprob: -14.844313621520996
    10. '3' → logprob: -14.906813621520996

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006618858315050602
    2. '1' → logprob: -5.756618976593018
    3. ' ' → logprob: -5.756618976593018
    4. 'n' → logprob: -8.63161849975586
    5. '2' → logprob: -10.38161849975586
    6. '-' → logprob: -10.50661849975586
    7. 'len' → logprob: -11.75661849975586
    8. ' n' → logprob: -12.00661849975586
    9. 's' → logprob: -12.13161849975586
    10. 'i' → logprob: -12.63161849975586

Token 25: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6730645298957825
    2. '<|end|>' → logprob: -1.2980644702911377
    3. 'while' → logprob: -2.5480644702911377
    4. ' while' → logprob: -2.7980644702911377
    5. '+' → logprob: -3.1730644702911377
    6. ':' → logprob: -5.048064708709717
    7. ',' → logprob: -5.173064708709717
    8. '
' → logprob: -5.298064708709717
    9. '<|end|>' → logprob: -5.923064708709717
    10. ')' → logprob: -5.923064708709717

Token 26: 'while' (ID: 7032)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.945485532283783
    2. ' while' → logprob: -1.3204855918884277
    3. 'while' → logprob: -1.4454855918884277
    4. ' ' → logprob: -2.4454855918884277
    5. '<|end|>' → logprob: -4.570485591888428
    6. ',' → logprob: -6.070485591888428
    7. ':' → logprob: -6.695485591888428
    8. ' ,' → logprob: -6.820485591888428
    9. 'n' → logprob: -7.070485591888428
    10. ')' → logprob: -7.320485591888428

Token 27: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0201409999281168
    2. 'i' → logprob: -4.145141124725342
    3. ' n' → logprob: -5.895141124725342
    4. ' ' → logprob: -6.770141124725342
    5. 'n' → logprob: -9.020140647888184
    6. ' s' → logprob: -10.770140647888184
    7. 's' → logprob: -11.270140647888184
    8. ' ' → logprob: -11.520140647888184
    9. ' (' → logprob: -11.895140647888184
    10. ' True' → logprob: -12.145140647888184

Token 28: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06462714076042175
    2. '<' → logprob: -2.814627170562744
    3. ' <=' → logprob: -6.189627170562744
    4. ' ' → logprob: -8.064626693725586
    5. '<=' → logprob: -8.939626693725586
    6. '<n' → logprob: -9.064626693725586
    7. '<len' → logprob: -10.564626693725586
    8. '<size' → logprob: -12.689626693725586
    9. ' <
' → logprob: -12.689626693725586
    10. '+' → logprob: -12.939626693725586

Token 29: ' len' (ID: 4631)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.03382676839828491
    2. 'n' → logprob: -3.4088268280029297
    3. ' len' → logprob: -9.65882682800293
    4. ' ' → logprob: -9.78382682800293
    5. 'len' → logprob: -9.78382682800293
    6. '(n' → logprob: -13.28382682800293
    7. ' ' → logprob: -13.40882682800293
    8. '_n' → logprob: -14.78382682800293
    9. '	n' → logprob: -15.28382682800293
    10. '<n' → logprob: -16.40882682800293

Token 30: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.026615861803293228
    2. '(' → logprob: -3.651615858078003
    3. '(n' → logprob: -8.276616096496582
    4. 's' → logprob: -9.901616096496582
    5. ' (' → logprob: -11.901616096496582
    6. ')' → logprob: -13.401616096496582
    7. '(
' → logprob: -13.776616096496582
    8. '(i' → logprob: -14.401616096496582
    9. ' s' → logprob: -15.026616096496582
    10. '(

' → logprob: -15.526616096496582

Token 31: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10283870249986649
    2. '):' → logprob: -2.4778387546539307
    3. ' and' → logprob: -4.477838516235352
    4. '):
' → logprob: -6.977838516235352
    5. ' )' → logprob: -7.227838516235352
    6. 'and' → logprob: -7.852838516235352
    7. ' ):' → logprob: -8.352838516235352
    8. '[' → logprob: -10.352838516235352
    9. ' ' → logprob: -10.477838516235352
    10. '[i' → logprob: -10.477838516235352

Token 32: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2120666801929474
    2. '   ' → logprob: -2.087066650390625
    3. '<|end|>' → logprob: -3.587066650390625
    4. '    ' → logprob: -4.587066650390625
    5. 's' → logprob: -4.962066650390625
    6. ' if' → logprob: -5.462066650390625
    7. 'n' → logprob: -5.587066650390625
    8. ' 
' → logprob: -5.837066650390625
    9. '+' → logprob: -5.962066650390625
    10. '  ' → logprob: -6.337066650390625

Token 33: ' n' (ID: 297)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.43365922570228577
    2. ' if' → logprob: -1.8086591958999634
    3. 'n' (adapté à ' n') → logprob: -2.558659315109253
    4. 's' → logprob: -3.308659315109253
    5. '   ' → logprob: -3.308659315109253
    6. ' ' → logprob: -4.183659076690674
    7. ' n' → logprob: -4.933659076690674
    8. '    ' → logprob: -5.433659076690674
    9. ' s' → logprob: -5.558659076690674
    10. 'i' → logprob: -5.808659076690674

Token 34: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00010568885772954673
    2. '_[' → logprob: -10.125105857849121
    3. '_=' → logprob: -10.750105857849121
    4. '+' → logprob: -11.125105857849121
    5. ' +=' → logprob: -11.500105857849121
    6. '_]' → logprob: -12.250105857849121
    7. '[' → logprob: -12.500105857849121
    8. '+=' → logprob: -12.500105857849121
    9. '_)' → logprob: -13.250105857849121
    10. '_^(' → logprob: -13.750105857849121

Token 35: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.25594162940979004
    2. '+=' → logprob: -1.50594162940979
    3. '=' → logprob: -6.380941390991211
    4. '+' → logprob: -6.755941390991211
    5. ' =' → logprob: -7.005941390991211
    6. ' +' → logprob: -9.630941390991211
    7. ' ' → logprob: -9.755941390991211
    8. ' -=' → logprob: -10.130941390991211
    9. ' ^=' → logprob: -11.255941390991211
    10. ' |=' → logprob: -11.505941390991211

Token 36: ' ' (ID: 220)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6328897476196289
    2. 's' → logprob: -0.7578897476196289
    3. '1' → logprob: -8.507889747619629
    4. ' ' → logprob: -9.632889747619629
    5. '(s' → logprob: -12.632889747619629
    6. 'i' → logprob: -12.945389747619629
    7. '	s' → logprob: -13.257889747619629
    8. 'int' → logprob: -13.445389747619629
    9. ' ' → logprob: -13.507889747619629
    10. '   ' → logprob: -13.507889747619629

Token 37: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0004433011345099658
    2. '1' → logprob: -8.125443458557129
    3. ' s' → logprob: -9.125443458557129
    4. 'i' → logprob: -11.750443458557129
    5. 'abs' → logprob: -12.000443458557129
    6. 'int' → logprob: -12.250443458557129
    7. '(s' → logprob: -12.375443458557129
    8. '(' → logprob: -12.750443458557129
    9. 'max' → logprob: -12.750443458557129
    10. ' ' → logprob: -13.250443458557129

Token 38: ' /' (ID: 820)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9000383019447327
    2. 'if' → logprob: -1.525038242340088
    3. ' ' → logprob: -1.775038242340088
    4. '   ' → logprob: -2.400038242340088
    5. 'i' → logprob: -3.150038242340088
    6. 's' → logprob: -3.525038242340088
    7. '<|end|>' → logprob: -4.150038242340088
    8. '    
' → logprob: -4.775038242340088
    9. '    ' → logprob: -5.025038242340088
    10. ' i' → logprob: -6.275038242340088

Token 39: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0001979378139367327
    2. '2' → logprob: -9.250198364257812
    3. ' s' → logprob: -9.875198364257812
    4. '(' → logprob: -10.875198364257812
    5. '(s' → logprob: -11.250198364257812
    6. 'n' → logprob: -12.000198364257812
    7. '10' → logprob: -12.250198364257812
    8. '3' → logprob: -13.875198364257812
    9. '9' → logprob: -14.250198364257812
    10. '`s' → logprob: -14.500198364257812

Token 40: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.029828354716300964
    2. '[' → logprob: -3.5298283100128174
    3. '[s' → logprob: -9.779828071594238
    4. '[j' → logprob: -12.529828071594238
    5. '[n' → logprob: -12.654828071594238
    6. '```' → logprob: -12.654828071594238
    7. '\[' → logprob: -12.904828071594238
    8. ' [' → logprob: -13.904828071594238
    9. '[m' → logprob: -14.029828071594238
    10. 's' → logprob: -14.029828071594238

Token 41: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00505586015060544
    2. '])' → logprob: -5.630055904388428
    3. ']' → logprob: -7.130055904388428
    4. '[i' → logprob: -8.13005542755127
    5. '[' → logprob: -8.50505542755127
    6. ' )' → logprob: -10.13005542755127
    7. ')])' → logprob: -10.75505542755127
    8. ')]' → logprob: -10.88005542755127
    9. '))' → logprob: -11.38005542755127
    10. ')
' → logprob: -11.38005542755127

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08710085600614548
    2. 'i' → logprob: -3.3371007442474365
    3. ' i' → logprob: -3.5871007442474365
    4. '    
' → logprob: -5.087100982666016
    5. '+' → logprob: -5.962100982666016
    6. '*i' → logprob: -6.087100982666016
    7. ' ' → logprob: -6.462100982666016
    8. '
' → logprob: -6.587100982666016
    9. ' 
' → logprob: -6.837100982666016
    10. '   
' → logprob: -6.962100982666016

Token 43: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.051744576543569565
    2. ' i' → logprob: -3.4267444610595703
    3. '   ' → logprob: -4.42674446105957
    4. '+' → logprob: -6.55174446105957
    5. ' ' → logprob: -6.80174446105957
    6. 'if' → logprob: -6.92674446105957
    7. '*i' → logprob: -7.42674446105957
    8. ' if' → logprob: -7.92674446105957
    9. 'n' → logprob: -8.17674446105957
    10. ' 
' → logprob: -8.55174446105957

Token 44: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.41764867305755615
    2. '+' → logprob: -1.1676486730575562
    3. ' +=' → logprob: -3.5426487922668457
    4. '++' → logprob: -7.042648792266846
    5. '+++' → logprob: -7.917648792266846
    6. '=' → logprob: -10.167648315429688
    7. ' +' → logprob: -10.292648315429688
    8. '<|end|>' → logprob: -10.292648315429688
    9. '+='' → logprob: -11.417648315429688
    10. '+="' → logprob: -11.417648315429688

Token 45: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '```' → logprob: -17.750158309936523
    4. '   ' → logprob: -18.375158309936523
    5. '+' → logprob: -19.000158309936523
    6. '0' → logprob: -19.875158309936523
    7. ' ' → logprob: -19.875158309936523
    8. '１' → logprob: -20.125158309936523
    9. '<|end|>' → logprob: -20.625158309936523
    10. '2' → logprob: -20.875158309936523

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -16.000009536743164
    4. '   ' → logprob: -18.125009536743164
    5. '+' → logprob: -18.187509536743164
    6. '2' → logprob: -18.500009536743164
    7. '<|end|>' → logprob: -19.687509536743164
    8. '１' → logprob: -19.687509536743164
    9. '0' → logprob: -19.812509536743164
    10. '۱' → logprob: -19.875009536743164

Token 47: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4509570598602295
    2. '
' → logprob: -2.2009570598602295
    3. 'n' → logprob: -2.8259570598602295
    4. ')' → logprob: -3.0759570598602295
    5. 'h' → logprob: -3.0759570598602295
    6. 'result' → logprob: -3.4509570598602295
    7. '/' → logprob: -4.325957298278809
    8. 'p' → logprob: -4.450957298278809
    9. 'if' → logprob: -5.325957298278809
    10. '#' → logprob: -5.450957298278809

Token 48: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5595309734344482
    2. 'h' → logprob: -1.1845309734344482
    3. 'result' → logprob: -3.4345309734344482
    4. 'p' → logprob: -3.5595309734344482
    5. ')' → logprob: -4.684531211853027
    6. 'n' → logprob: -4.809531211853027
    7. 'm' → logprob: -5.309531211853027
    8. 'if' → logprob: -5.684531211853027
    9. 'r' → logprob: -5.809531211853027
    10. '/' → logprob: -5.934531211853027

Token 49: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003045450896024704
    2. '(round' → logprob: -6.753045558929443
    3. '(sum' → logprob: -7.128045558929443
    4. '(n' → logprob: -7.378045558929443
    5. '((' → logprob: -8.628045082092285
    6. '()' → logprob: -9.003045082092285
    7. '('' → logprob: -10.128045082092285
    8. '("("' → logprob: -10.753045082092285
    9. '(s' → logprob: -11.003045082092285
    10. '(len' → logprob: -11.003045082092285

Token 50: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.44912809133529663
    2. '1' → logprob: -1.0741281509399414
    3. '2' → logprob: -4.199128150939941
    4. 'round' → logprob: -6.324128150939941
    5. 'len' → logprob: -6.449128150939941
    6. '3' → logprob: -6.949128150939941
    7. '(n' → logprob: -8.949128150939941
    8. ' n' → logprob: -8.949128150939941
    9. '(' → logprob: -9.199128150939941
    10. '4' → logprob: -9.449128150939941

Token 51: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0012158327735960484
    2. ' /' → logprob: -7.126215934753418
    3. ')' → logprob: -8.501215934753418
    4. '/)' → logprob: -8.626215934753418
    5. '/n' → logprob: -10.626215934753418
    6. '/')' → logprob: -13.126215934753418
    7. '/

' → logprob: -14.626215934753418
    8. '/(' → logprob: -14.876215934753418
    9. '/
' → logprob: -15.126215934753418
    10. ')/' → logprob: -15.126215934753418

Token 52: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00023107275774236768
    2. ' n' → logprob: -8.37523078918457
    3. '_n' → logprob: -15.37523078918457
    4. '(n' → logprob: -16.00023078918457
    5. '	n' → logprob: -16.62523078918457
    6. ')n' → logprob: -17.12523078918457
    7. ')' → logprob: -18.37523078918457
    8. '-n' → logprob: -19.25023078918457
    9. ' ' → logprob: -19.37523078918457
    10. '   ' → logprob: -19.62523078918457

Token 53: '_)' (ID: 35080)
  Prédit: '_)'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_)' → logprob: -0.00036834771162830293
    2. '_' → logprob: -8.000368118286133
    3. ')' → logprob: -10.500368118286133
    4. '_)
' → logprob: -12.250368118286133
    5. '`)' → logprob: -15.500368118286133
    6. '_),' → logprob: -15.750368118286133
    7. '_

' → logprob: -15.875368118286133
    8. '_
' → logprob: -16.875368118286133
    9. '__)' → logprob: -17.375368118286133
    10. '^)' → logprob: -17.500368118286133


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 51
Tokens correctement prédits (1ère position, stricte): 14
Tokens correctement prédits (1ère position, avec adaptation): 15
Tokens correctement prédits (top 10): 39
Précision stricte (1ère position): 27.45%
Précision adaptée (1ère position): 29.41%
Précision (top 10): 76.47%
================================================================================
