================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def main():
    A, P = map(int, sys.stdin.readline().split())
    print(divmod(3 * A + P, 2)[0])

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.035847846418619156
    2. '\n' → logprob: -4.0358476638793945
    3. 'import' → logprob: -4.7858476638793945
    4. '<|end|>' → logprob: -5.2858476638793945
    5. '\' → logprob: -7.0358476638793945
    6. '<|end|>' → logprob: -7.5358476638793945
    7. 'newline' → logprob: -7.9108476638793945
    8. ',' → logprob: -8.160847663879395
    9. '[' → logprob: -8.285847663879395
    10. '' → logprob: -8.285847663879395

Token 4: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4300311207771301
    2. ' space' → logprob: -2.0550310611724854
    3. ' main' → logprob: -2.9300310611724854
    4. ' process' → logprob: -3.0550310611724854
    5. ' read' → logprob: -3.8050310611724854
    6. ' my' → logprob: -4.0550312995910645
    7. ' calculate' → logprob: -4.1800312995910645
    8. ' hello' → logprob: -4.5550312995910645
    9. ' a' → logprob: -5.0550312995910645
    10. '_' → logprob: -5.3050312995910645

Token 5: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03294741362333298
    2. '():' → logprob: -3.657947301864624
    3. ':' → logprob: -5.657947540283203
    4. '(:' → logprob: -5.907947540283203
    5. '(
' → logprob: -9.407947540283203
    6. '```' → logprob: -9.532947540283203
    7. '):' → logprob: -9.907947540283203
    8. '(":' → logprob: -10.032947540283203
    9. ' (' → logprob: -10.157947540283203
    10. '(`' → logprob: -10.407947540283203

Token 6: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11130161583423615
    2. '(' → logprob: -2.8613016605377197
    3. '\' → logprob: -3.6113016605377197
    4. '    ' → logprob: -4.986301422119141
    5. 'print' → logprob: -5.861301422119141
    6. ':' → logprob: -5.986301422119141
    7. '()' → logprob: -6.611301422119141
    8. '(sys' → logprob: -6.611301422119141
    9. '\n' → logprob: -6.736301422119141
    10. '    
' → logprob: -6.736301422119141

Token 7: ' A' (ID: 355)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07734153419733047
    2. '   ' → logprob: -2.8273415565490723
    3. 'pass' → logprob: -4.952341556549072
    4. ' print' → logprob: -6.077341556549072
    5. '    ' → logprob: -6.452341556549072
    6. 'p' → logprob: -7.077341556549072
    7. 'if' → logprob: -7.202341556549072
    8. ' ' → logprob: -7.327341556549072
    9. 'prin' → logprob: -7.827341556549072
    10. 'pr' → logprob: -7.952341556549072

Token 8: ',' (ID: 11)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rg' → logprob: -0.3652220666408539
    2. ' =' → logprob: -1.7402220964431763
    3. '.' → logprob: -3.2402219772338867
    4. '=' → logprob: -3.6152219772338867
    5. 'r' → logprob: -3.8652219772338867
    6. 'rray' → logprob: -4.240221977233887
    7. ' ' → logprob: -4.865221977233887
    8. ':' → logprob: -5.365221977233887
    9. '[' → logprob: -5.490221977233887
    10. 'RG' → logprob: -5.615221977233887

Token 9: ' P' (ID: 398)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.18607419729232788
    2. 'B' → logprob: -1.9360742568969727
    3. ' ' → logprob: -3.8110742568969727
    4. ' =' → logprob: -6.061074256896973
    5. '=' → logprob: -7.936074256896973
    6. '_' → logprob: -8.186074256896973
    7. '  ' → logprob: -9.186074256896973
    8. 'b' → logprob: -9.811074256896973
    9. 'space' → logprob: -10.311074256896973
    10. ')' → logprob: -10.436074256896973

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07901614159345627
    2. '=' → logprob: -2.5790162086486816
    3. ')' → logprob: -9.704015731811523
    4. ' ' → logprob: -9.954015731811523
    5. ',' → logprob: -11.704015731811523
    6. '.' → logprob: -13.079015731811523
    7. '_' → logprob: -13.579015731811523
    8. ' =)' → logprob: -14.079015731811523
    9. ' )' → logprob: -14.204015731811523
    10. '  ' → logprob: -14.204015731811523

Token 11: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.07170570641756058
    2. 'map' → logprob: -2.8217058181762695
    3. ' input' → logprob: -4.8217058181762695
    4. 'input' → logprob: -6.9467058181762695
    5. ' list' → logprob: -7.5717058181762695
    6. 'list' → logprob: -9.82170581817627
    7. ' ' → logprob: -9.94670581817627
    8. ' sys' → logprob: -10.82170581817627
    9. ' [' → logprob: -11.32170581817627
    10. ' int' → logprob: -12.32170581817627

Token 12: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4124993085861206
    2. '(int' → logprob: -1.7874993085861206
    3. '(lambda' → logprob: -2.41249942779541
    4. '(str' → logprob: -2.66249942779541
    5. '<|end|>' → logprob: -4.66249942779541
    6. '```' → logprob: -8.28749942779541
    7. '<|end|>' → logprob: -8.66249942779541
    8. 'int' → logprob: -8.78749942779541
    9. '(list' → logprob: -9.03749942779541
    10. '(eval' → logprob: -9.03749942779541

Token 13: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34514427185058594
    2. '(sys' → logprob: -1.595144271850586
    3. '(' → logprob: -2.595144271850586
    4. ',' → logprob: -4.970144271850586
    5. '(input' → logprob: -5.470144271850586
    6. ')(' → logprob: -7.345144271850586
    7. '```' → logprob: -7.595144271850586
    8. 'sys' → logprob: -8.095144271850586
    9. '(stdin' → logprob: -8.220144271850586
    10. ' (' → logprob: -8.595144271850586

Token 14: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.6344768404960632
    2. ' input' → logprob: -1.134476900100708
    3. 'input' → logprob: -2.384476900100708
    4. 'sys' → logprob: -2.884476900100708
    5. ')' → logprob: -8.884476661682129
    6. ' )' → logprob: -11.134476661682129
    7. ' ' → logprob: -11.259476661682129
    8. '=sys' → logprob: -12.884476661682129
    9. '	sys' → logprob: -12.884476661682129
    10. '(sys' → logprob: -13.009476661682129

Token 15: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.04913875460624695
    2. '.argv' → logprob: -3.1741387844085693
    3. '.' → logprob: -5.29913854598999
    4. ' .' → logprob: -6.92413854598999
    5. '.readline' → logprob: -9.424139022827148
    6. '.stdout' → logprob: -10.174139022827148
    7. '.std' → logprob: -11.424139022827148
    8. '.input' → logprob: -12.424139022827148
    9. '.import' → logprob: -13.924139022827148
    10. '.standard' → logprob: -13.924139022827148

Token 16: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00602798443287611
    2. '.' → logprob: -5.256028175354004
    3. '.read' → logprob: -7.256028175354004
    4. '.readlines' → logprob: -10.131028175354004
    5. ').' → logprob: -10.381028175354004
    6. ')' → logprob: -11.881028175354004
    7. '().' → logprob: -12.631028175354004
    8. ' .' → logprob: -13.131028175354004
    9. '.)' → logprob: -13.256028175354004
    10. ' readline' → logprob: -13.756028175354004

Token 17: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03821751847863197
    2. '())' → logprob: -3.288217544555664
    3. '()' → logprob: -8.913217544555664
    4. '()))' → logprob: -10.663217544555664
    5. ')' → logprob: -11.038217544555664
    6. '(' → logprob: -14.788217544555664
    7. ' ())' → logprob: -14.788217544555664
    8. '()[' → logprob: -15.413217544555664
    9. '()).' → logprob: -15.663217544555664
    10. '()),' → logprob: -15.913217544555664

Token 18: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.16469082236289978
    2. 'strip' → logprob: -1.9146908521652222
    3. 'rstrip' → logprob: -5.414690971374512
    4. 'read' → logprob: -12.289690971374512
    5. ' split' → logprob: -13.539690971374512
    6. ' strip' → logprob: -16.289690017700195
    7. 'rs' → logprob: -17.414690017700195
    8. '(split' → logprob: -17.539690017700195
    9. 'spl' → logprob: -18.039690017700195
    10. 'replace' → logprob: -18.164690017700195

Token 19: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04801568388938904
    2. '())' → logprob: -3.423015594482422
    3. '))' → logprob: -4.298015594482422
    4. '()' → logprob: -7.673015594482422
    5. '()))' → logprob: -9.048015594482422
    6. ')))' → logprob: -10.798015594482422
    7. ')
' → logprob: -10.923015594482422
    8. '),' → logprob: -11.423015594482422
    9. '(' → logprob: -11.798015594482422
    10. '())
' → logprob: -11.923015594482422

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5109185576438904
    2. ')' → logprob: -1.0109186172485352
    3. ' 
' → logprob: -5.010918617248535
    4. '    
' → logprob: -5.135918617248535
    5. '\n' → logprob: -5.260918617248535
    6. '
' → logprob: -5.510918617248535
    7. 'a' → logprob: -6.135918617248535
    8. 'print' → logprob: -6.760918617248535
    9. ' ' → logprob: -7.010918617248535
    10. 'result' → logprob: -7.010918617248535

Token 21: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.228015422821045
    2. 'total' → logprob: -1.978015422821045
    3. ' total' → logprob: -2.103015422821045
    4. 'S' → logprob: -2.603015422821045
    5. ' S' → logprob: -2.853015422821045
    6. ')' → logprob: -2.978015422821045
    7. 's' → logprob: -3.103015422821045
    8. 'result' → logprob: -3.228015422821045
    9. 'print' (adapté à ' print') → logprob: -3.728015422821045
    10. 'a' → logprob: -3.728015422821045

Token 22: '(div' (ID: 73108)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03149811178445816
    2. '(A' → logprob: -3.9064981937408447
    3. '((' → logprob: -4.531497955322266
    4. '(sum' → logprob: -10.156497955322266
    5. '(a' → logprob: -10.906497955322266
    6. '('' → logprob: -11.281497955322266
    7. '()' → logprob: -11.281497955322266
    8. '(int' → logprob: -11.406497955322266
    9. '(((' → logprob: -11.531497955322266
    10. '(max' → logprob: -12.281497955322266

Token 23: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.10151488333940506
    2. 'ide' → logprob: -2.3515148162841797
    3. 'ision' → logprob: -6.72651481628418
    4. '(A' → logprob: -10.35151481628418
    5. '(' → logprob: -10.47651481628418
    6. '(a' → logprob: -11.60151481628418
    7. '()' → logprob: -11.60151481628418
    8. 'A' → logprob: -12.10151481628418
    9. 'de' → logprob: -12.35151481628418
    10. '_mod' → logprob: -12.85151481628418

Token 24: '(' (ID: 7)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.16157729923725128
    2. '(' → logprob: -1.9115773439407349
    3. '((' → logprob: -6.786577224731445
    4. ' (' → logprob: -8.911577224731445
    5. '(P' → logprob: -10.411577224731445
    6. '(
' → logprob: -10.786577224731445
    7. ')' → logprob: -11.036577224731445
    8. 'A' → logprob: -11.536577224731445
    9. '(a' → logprob: -12.036577224731445
    10. ' ' → logprob: -13.661577224731445

Token 25: '3' (ID: 18)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1086309403181076
    2. ' A' → logprob: -2.358630895614624
    3. '(A' → logprob: -5.233631134033203
    4. '3' → logprob: -6.733631134033203
    5. ' (' → logprob: -7.233631134033203
    6. '(' → logprob: -7.483631134033203
    7. '2' → logprob: -8.733631134033203
    8. '   ' → logprob: -8.733631134033203
    9. ' ' → logprob: -9.608631134033203
    10. 'P' → logprob: -10.108631134033203

Token 26: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9534709453582764
    2. ' *' → logprob: -0.9534709453582764
    3. '*A' → logprob: -2.3284709453582764
    4. 'A' → logprob: -2.8284709453582764
    5. ',' → logprob: -3.4534709453582764
    6. '*(' → logprob: -4.4534711837768555
    7. ' A' → logprob: -4.4534711837768555
    8. '(A' → logprob: -4.9534711837768555
    9. ' (' → logprob: -5.3284711837768555
    10. ' ,' → logprob: -6.0784711837768555

Token 27: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.038639213889837265
    2. ' A' → logprob: -3.2886393070220947
    3. '(A' → logprob: -7.913639068603516
    4. ' (' → logprob: -8.913639068603516
    5. '(' → logprob: -9.663639068603516
    6. ' ' → logprob: -10.913639068603516
    7. 'P' → logprob: -12.038639068603516
    8. '	A' → logprob: -13.663639068603516
    9. '   ' → logprob: -14.038639068603516
    10. '*A' → logprob: -14.101139068603516

Token 28: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.48512905836105347
    2. ' +' → logprob: -1.2351291179656982
    3. ',' → logprob: -2.4851291179656982
    4. ' ,' → logprob: -5.235128879547119
    5. ',P' → logprob: -5.610128879547119
    6. '+,' → logprob: -7.735128879547119
    7. ' plus' → logprob: -8.235129356384277
    8. ' ' → logprob: -8.735129356384277
    9. '+p' → logprob: -8.985129356384277
    10. ',+' → logprob: -9.860129356384277

Token 29: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.002911265939474106
    2. ' P' → logprob: -5.87791109085083
    3. '2' → logprob: -10.752911567687988
    4. '3' → logprob: -11.127911567687988
    5. '5' → logprob: -11.127911567687988
    6. '9' → logprob: -11.252911567687988
    7. ' ' → logprob: -11.627911567687988
    8. '   ' → logprob: -12.127911567687988
    9. '1' → logprob: -12.252911567687988
    10. '7' → logprob: -12.502911567687988

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006473306100815535
    2. ' ,' → logprob: -5.131473541259766
    3. '6' → logprob: -7.756473541259766
    4. '7' → logprob: -11.256473541259766
    5. '10' → logprob: -11.506473541259766
    6. '4' → logprob: -11.881473541259766
    7. '2' → logprob: -11.881473541259766
    8. '44' → logprob: -12.006473541259766
    9. '46' → logprob: -12.131473541259766
    10. '36' → logprob: -12.256473541259766

Token 31: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.232493564719334e-05
    2. ' ' → logprob: -9.500082015991211
    3. '3' → logprob: -12.375082015991211
    4. '4' → logprob: -12.875082015991211
    5. '  ' → logprob: -15.625082015991211
    6. ')' → logprob: -15.750082015991211
    7. '   ' → logprob: -16.25008201599121
    8. '10' → logprob: -16.37508201599121
    9. '２' → logprob: -16.50008201599121
    10. '19' → logprob: -17.00008201599121

Token 32: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.375123023986816
    3. '3' → logprob: -10.250123023986816
    4. '4' → logprob: -13.000123023986816
    5. '  ' → logprob: -15.375123023986816
    6. '10' → logprob: -15.625123023986816
    7. '19' → logprob: -16.000123977661133
    8. ')' → logprob: -16.125123977661133
    9. '   ' → logprob: -16.125123977661133
    10. '9' → logprob: -16.375123977661133

Token 33: ')[' (ID: 13637)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.048682406544685364
    2. ')' → logprob: -3.048682451248169
    3. ')))' → logprob: -9.42368221282959
    4. ' ))' → logprob: -12.04868221282959
    5. '))
' → logprob: -12.54868221282959
    6. ' ' → logprob: -13.79868221282959
    7. ' )' → logprob: -14.17368221282959
    8. ')[' → logprob: -14.17368221282959
    9. '()))' → logprob: -14.54868221282959
    10. ')
' → logprob: -15.17368221282959

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11817754060029984
    2. '1' → logprob: -2.243177652359009
    3. '])' → logprob: -5.99317741394043
    4. ')' → logprob: -6.49317741394043
    5. ']' → logprob: -7.11817741394043
    6. ')])' → logprob: -8.36817741394043
    7. ')]' → logprob: -8.61817741394043
    8. ']))' → logprob: -9.99317741394043
    9. ' ' → logprob: -10.74317741394043
    10. '])]' → logprob: -10.86817741394043

Token 35: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011059258133172989
    2. '))' → logprob: -4.511059284210205
    3. '])' → logprob: -12.261058807373047
    4. ' )' → logprob: -13.011058807373047
    5. ')))' → logprob: -13.011058807373047
    6. '})' → logprob: -14.261058807373047
    7. ')
' → logprob: -14.511058807373047
    8. ')])' → logprob: -14.636058807373047
    9. '）' → logprob: -15.636058807373047
    10. ')]' → logprob: -16.386058807373047

Token 36: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0005189551156945527
    2. '__' → logprob: -7.625518798828125
    3. ' ' → logprob: -11.250518798828125
    4. ' ' → logprob: -11.625518798828125
    5. '_' → logprob: -12.125518798828125
    6. ' _' → logprob: -12.875518798828125
    7. ' ___' → logprob: -14.875518798828125
    8. '  ' → logprob: -15.500518798828125
    9. ' ​' → logprob: -16.375518798828125
    10. ' main' → logprob: -16.500518798828125

Token 38: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04841519892215729
    2. ' ==' → logprob: -3.298415184020996
    3. '==' → logprob: -5.298415184020996
    4. ' __' → logprob: -6.048415184020996
    5. '.' → logprob: -6.548415184020996
    6. '__.__' → logprob: -7.548415184020996
    7. '.__' → logprob: -7.673415184020996
    8. ' .' → logprob: -8.298415184020996
    9. '_' → logprob: -9.548415184020996
    10. '[' → logprob: -10.048415184020996

Token 39: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -8.180258191714529e-06
    2. '_' → logprob: -12.125008583068848
    3. '==' → logprob: -13.750008583068848
    4. '___' → logprob: -13.875008583068848
    5. '__.__' → logprob: -14.750008583068848
    6. '____' → logprob: -15.875008583068848
    7. '__.' → logprob: -16.62500762939453
    8. ' ==' → logprob: -17.37500762939453
    9. '__)' → logprob: -18.00000762939453
    10. '__

' → logprob: -18.12500762939453

Token 40: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.039045825600624084
    2. '__' → logprob: -3.789045810699463
    3. '==' → logprob: -4.164045810699463
    4. '=="' → logprob: -9.914046287536621
    5. ' =="' → logprob: -10.664046287536621
    6. '_' → logprob: -10.914046287536621
    7. ' =' → logprob: -11.164046287536621
    8. '=='' → logprob: -12.039046287536621
    9. '=' → logprob: -12.039046287536621
    10. ' ' → logprob: -12.539046287536621

Token 41: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5760368704795837
    2. ''' → logprob: -0.8260368704795837
    3. ' "' → logprob: -10.07603645324707
    4. '__' → logprob: -10.32603645324707
    5. ' "__' → logprob: -11.20103645324707
    6. ' '' → logprob: -12.32603645324707
    7. ' '__' → logprob: -13.07603645324707
    8. ''s' → logprob: -14.57603645324707
    9. '"user' → logprob: -14.70103645324707
    10. ' ' → logprob: -15.07603645324707

Token 42: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -8.65707261255011e-06
    2. 'name' → logprob: -12.750008583068848
    3. ' main' → logprob: -13.125008583068848
    4. 'm' → logprob: -13.125008583068848
    5. '_main' → logprob: -14.625008583068848
    6. 'built' → logprob: -15.125008583068848
    7. 'py' → logprob: -15.625008583068848
    8. 'python' → logprob: -15.750008583068848
    9. 'maine' → logprob: -15.875008583068848
    10. 'builtin' → logprob: -16.125009536743164

Token 43: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10036905854940414
    2. '__":
' → logprob: -2.3503689765930176
    3. '_' → logprob: -8.975369453430176
    4. '"' → logprob: -11.225369453430176
    5. '__["' → logprob: -11.850369453430176
    6. '_"' → logprob: -11.850369453430176
    7. '__:' → logprob: -12.725369453430176
    8. '__("' → logprob: -13.100369453430176
    9. '__",' → logprob: -13.975369453430176
    10. '__':
' → logprob: -14.225369453430176

Token 44: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0002270198310725391
    2. 'main' → logprob: -8.625226974487305
    3. '	main' → logprob: -10.125226974487305
    4. '   ' → logprob: -13.125226974487305
    5. ' ' → logprob: -13.250226974487305
    6. ' __' → logprob: -13.750226974487305
    7. ' ' → logprob: -13.875226974487305
    8. '_main' → logprob: -14.125226974487305
    9. '(main' → logprob: -15.375226974487305
    10. '    ' → logprob: -15.875226974487305

Token 45: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.014166101813316345
    2. 'main' (adapté à ' main') → logprob: -4.264165878295898
    3. '	main' → logprob: -12.889165878295898
    4. '   ' → logprob: -17.0141658782959
    5. '(main' → logprob: -18.0141658782959
    6. ' ma' → logprob: -18.1391658782959
    7. '_main' → logprob: -18.3891658782959
    8. ' ' → logprob: -18.8891658782959
    9. '.main' → logprob: -19.1391658782959
    10. ' mains' → logprob: -19.3891658782959

Token 46: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000111768240458332
    2. ']()' → logprob: -10.00011157989502
    3. '(' → logprob: -10.62511157989502
    4. '`()' → logprob: -11.00011157989502
    5. '()
' → logprob: -11.50011157989502
    6. ' ()' → logprob: -12.25011157989502
    7. '|()
' → logprob: -12.87511157989502
    8. '()`' → logprob: -13.37511157989502
    9. '>()' → logprob: -13.87511157989502
    10. '()\' → logprob: -13.87511157989502


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 44
Tokens correctement prédits (1ère position, stricte): 19
Tokens correctement prédits (1ère position, avec adaptation): 19
Tokens correctement prédits (top 10): 35
Précision stricte (1ère position): 43.18%
Précision adaptée (1ère position): 43.18%
Précision (top 10): 79.55%
================================================================================
