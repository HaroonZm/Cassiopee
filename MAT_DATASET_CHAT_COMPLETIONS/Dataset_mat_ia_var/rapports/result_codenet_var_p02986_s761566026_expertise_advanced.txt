================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:53:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
import operator as op
from itertools import (
    combinations, permutations, product,
    combinations_with_replacement, accumulate
)
from heapq import heapify, heappop, heappush, heappushpop
from bisect import bisect_left, bisect_right
from collections import Counter, defaultdict, deque
from functools import reduce, partial, lru_cache

sys.setrecursionlimit(1 << 20)
input = sys.stdin.readline

INF = float('inf')
LINF = (1 << 63) - 1
NIL = -LINF
MOD = 10 ** 9 + 7
MGN = 4

def AST(exp: bool, msg: str = ""):
    if not exp:
        raise AssertionError(msg)

def TAST(exp: bool, msg=""):
    if not exp:
        print(f"TAssertionError: {msg}", file=sys.stderr)
        while True: pass

def EPR(msg): print(msg, file=sys.stderr)

II = lambda: int(input())
IF = lambda: float(input())
IS = lambda: input().rstrip('\n')
ILCI = lambda n: [II() for _ in range(n)]
ILCF = lambda n: [IF() for _ in range(n)]
ILI = lambda: list(map(int, input().split()))
ILLI = lambda n: [list(map(int, input().split())) for _ in range(n)]
ILF = lambda: list(map(float, input().split()))
ILLF = lambda n: [list(map(float, input().split())) for _ in range(n)]
LTOS = lambda lst, sep=' ': sep.join(map(str, lst))
DEC = lambda lst: [x - 1 for x in lst]
INC = lambda lst: [x + 1 for x in lst]

class Queue(deque):
    def is_empty(self) -> bool: return not self
    def enqueue(self, item) -> None: self.appendleft(item)
    def insert(self, item) -> None: self.enqueue(item)
    def dequeue(self): return self.pop()
    def front(self): return self[-1]
    def pop(self) -> None: super().pop()
    def size(self) -> int: return len(self)

class LCA:
    def __init__(self, N: int):
        self.N = N
        self.graph = [list() for _ in range(N)]
        self.weights = [list() for _ in range(N)]
        self.depth = [0] * N
        self.costs = [0] * N
        self.l = (N-1).bit_length()
        self.parent = [[-1] * self.l for _ in range(N)]
    def add_edge(self, a: int, b: int, c=0):
        self.graph[a].append(b)
        self.weights[a].append(c)
        self.graph[b].append(a)
        self.weights[b].append(c)
    def _bfs(self, root: int):
        que = Queue([root])
        vis = [False] * self.N
        while que:
            v = que.dequeue()
            vis[v] = True
            for (nv, cost) in zip(self.graph[v], self.weights[v]):
                if not vis[nv]:
                    self.depth[nv] = self.depth[v] + 1
                    self.costs[nv] = self.costs[v] + cost
                    self.parent[nv][0] = v
                    que.enqueue(nv)
    def init(self, root: int=0):
        self.root = root
        self._bfs(root)
        for k in range(self.l-1):
            for v in range(self.N):
                if self.parent[v][k] != -1:
                    self.parent[v][k+1] = self.parent[self.parent[v][k]][k]
    def lca(self, u: int, v: int) -> int:
        if self.depth[u] < self.depth[v]:
            u, v = v, u
        for k in reversed(range(self.l)):
            if self.parent[u][k] != -1 and self.depth[self.parent[u][k]] >= self.depth[v]:
                u = self.parent[u][k]
        if u == v:
            return u
        for k in reversed(range(self.l)):
            if self.parent[u][k] != -1 and self.parent[u][k] != self.parent[v][k]:
                u = self.parent[u][k]
                v = self.parent[v][k]
        return self.parent[u][0]
    def dist(self, a: int, b: int):
        c = self.lca(a, b)
        return self.costs[a] + self.costs[b] - 2 * self.costs[c]
    def length(self, a: int, b: int):
        c = self.lca(a, b)
        return self.depth[a] + self.depth[b] - 2 * self.depth[c]

def main():
    N, Q = ILI()
    lca = LCA(N)
    edges = [[] for _ in range(N)]
    for _ in range(N-1):
        a, b, col, dist = ILI()
        a -= 1; b -= 1
        edges[a].append((b, dist, col))
        edges[b].append((a, dist, col))
        lca.add_edge(a, b, dist)
    lca.init()
    ans = [0] * Q
    queries = [[] for _ in range(N)]
    for qi in range(Q):
        cx, dy, a, b = ILI()
        a -= 1; b -= 1
        c = lca.lca(a, b)
        ans[qi] = lca.costs[a] + lca.costs[b] - 2 * lca.costs[c]
        queries[a].append((cx, qi, 1, dy))
        queries[b].append((cx, qi, 1, dy))
        queries[c].append((cx, qi, -2, dy))
    cnt = [0] * N
    sum_ = [0] * N

    # Iterative DFS using a manual stack for performance
    stack = [(0, -1, 0, 0)]  # (node, parent, last_color, last_cost)
    call_stack = []
    state = [0]*N
    ptr = [0]*N

    # To handle arbitrary colors, use dicts as sparse arrays for performance if colors are large
    cntc = defaultdict(int)
    sumc = defaultdict(int)
    query_at_node = queries
    while stack:
        v, p, pre_col, pre_cost = stack[-1]
        if state[v] == 0:
            for (col, qid, coeff, dist_) in query_at_node[v]:
                x = -sumc[col] + dist_ * cntc[col]
                ans[qid] += x * coeff
            state[v] = 1
        if ptr[v] < len(edges[v]):
            to, cost, col = edges[v][ptr[v]]
            ptr[v] += 1
            if to == p: continue
            cntc[col] += 1
            sumc[col] += cost
            stack.append((to, v, col, cost))
        else:
            if v != 0:
                cntc[pre_col] -= 1
                sumc[pre_col] -= pre_cost
            stack.pop()
    print(*ans, sep='\n')

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6406390070915222
    2. '.' → logprob: -0.8906390070915222
    3. 'import' → logprob: -4.015638828277588
    4. 'newline' → logprob: -4.265638828277588
    5. '\' → logprob: -4.765638828277588
    6. '<|end|>' → logprob: -5.015638828277588
    7. '```' → logprob: -5.390638828277588
    8. '
' → logprob: -5.765638828277588
    9. '<|end|>' → logprob: -6.515638828277588
    10. '' → logprob: -6.515638828277588

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0009122979827225208
    2. 'os' → logprob: -7.000912189483643
    3. '"os' → logprob: -15.0009126663208
    4. ' math' → logprob: -16.375911712646484
    5. ' re' → logprob: -16.500911712646484
    6. '_os' → logprob: -16.750911712646484
    7. '	os' → logprob: -16.875911712646484
    8. ' o' → logprob: -17.750911712646484
    9. ' json' → logprob: -18.000911712646484
    10. ' io' → logprob: -18.375911712646484

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.17448298633098602
    2. '\n' → logprob: -2.799483060836792
    3. '
' → logprob: -3.799483060836792
    4. '<|end|>' → logprob: -3.924483060836792
    5. 'import' → logprob: -4.049482822418213
    6. '\' → logprob: -4.549482822418213
    7. '

' → logprob: -4.924482822418213
    8. '```' → logprob: -5.049482822418213
    9. '<|end|>' → logprob: -5.049482822418213
    10. ',' → logprob: -5.799482822418213

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.38091859221458435
    2. '\n' → logprob: -2.505918502807617
    3. 'import' → logprob: -2.505918502807617
    4. '
' → logprob: -3.130918502807617
    5. '\' → logprob: -3.505918502807617
    6. '```' → logprob: -3.630918502807617
    7. '<|end|>' → logprob: -3.880918502807617
    8. '

' → logprob: -4.505918502807617
    9. ',' → logprob: -4.630918502807617
    10. '<|end|>' → logprob: -6.255918502807617

Token 7: ' operator' (ID: 11019)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.2555094063282013
    2. ' os' → logprob: -1.505509376525879
    3. 'random' → logprob: -6.005509376525879
    4. ' random' → logprob: -7.630509376525879
    5. 're' → logprob: -8.130509376525879
    6. ' re' → logprob: -8.505509376525879
    7. 'cmath' → logprob: -10.630509376525879
    8. 'numpy' → logprob: -11.005509376525879
    9. 'collections' → logprob: -11.255509376525879
    10. ' itertools' → logprob: -11.380509376525879

Token 8: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02710604853928089
    2. ',' → logprob: -5.027106285095215
    3. '<|end|>' → logprob: -5.277106285095215
    4. 'import' → logprob: -5.402106285095215
    5. '\' → logprob: -5.652106285095215
    6. '```' → logprob: -6.277106285095215
    7. '\n' → logprob: -6.652106285095215
    8. '#' → logprob: -7.152106285095215
    9. '(' → logprob: -7.277106285095215
    10. '
' → logprob: -7.652106285095215

Token 9: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.6940551400184631
    2. ' op' → logprob: -0.6940551400184631
    3. 'ops' → logprob: -7.569055080413818
    4. ' ' → logprob: -9.194055557250977
    5. ' opr' → logprob: -9.569055557250977
    6. '	op' → logprob: -9.819055557250977
    7. 'oper' → logprob: -10.069055557250977
    8. '_op' → logprob: -10.194055557250977
    9. 'opt' → logprob: -10.569055557250977
    10. 'opr' → logprob: -11.319055557250977

Token 10: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6502882242202759
    2. '.' → logprob: -1.2752882242202759
    3. '\' → logprob: -2.9002881050109863
    4. ',' → logprob: -3.4002881050109863
    5. '<|end|>' → logprob: -3.4002881050109863
    6. '#' → logprob: -4.150288105010986
    7. '\n' → logprob: -4.400288105010986
    8. '
' → logprob: -4.525288105010986
    9. '```' → logprob: -4.900288105010986
    10. '' → logprob: -5.650288105010986

Token 11: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9867166876792908
    2. ',' → logprob: -1.2367167472839355
    3. '.' → logprob: -2.2367167472839355
    4. '#' → logprob: -2.3617167472839355
    5. 'def' → logprob: -2.9867167472839355
    6. 'from' → logprob: -3.7367167472839355
    7. '*' → logprob: -4.6117167472839355
    8. '<|end|>' → logprob: -4.7367167472839355
    9. '```' → logprob: -4.7367167472839355
    10. '\' → logprob: -4.8617167472839355

Token 12: ' itertools' (ID: 103178)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.1402740180492401
    2. 'fun' → logprob: -2.6402740478515625
    3. ' collections' → logprob: -3.5152740478515625
    4. 'collections' → logprob: -3.8902740478515625
    5. ' itertools' → logprob: -5.5152740478515625
    6. ' fractions' → logprob: -6.6402740478515625
    7. ' math' → logprob: -6.8902740478515625
    8. 'fra' → logprob: -7.1402740478515625
    9. 'math' → logprob: -7.1402740478515625
    10. 'operator' → logprob: -8.140274047851562

Token 13: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.18249468505382538
    2. 'import' → logprob: -1.8074946403503418
    3. '.' → logprob: -6.307494640350342
    4. '_import' → logprob: -8.6824951171875
    5. '<|end|>' → logprob: -8.6824951171875
    6. 'ertools' → logprob: -8.9324951171875
    7. '.import' → logprob: -9.1824951171875
    8. '	import' → logprob: -9.3074951171875
    9. '.im' → logprob: -10.0574951171875
    10. ' ' → logprob: -10.1824951171875

Token 14: ' (
' (ID: 4112)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.9409626126289368
    2. 'count' → logprob: -1.190962553024292
    3. 'com' → logprob: -1.565962553024292
    4. 'product' → logprob: -2.690962553024292
    5. 'chain' → logprob: -4.690962791442871
    6. 'is' → logprob: -5.315962791442871
    7. 'import' → logprob: -5.315962791442871
    8. 'group' → logprob: -5.940962791442871
    9. 'cycle' → logprob: -6.190962791442871
    10. ' permutations' → logprob: -6.315962791442871

Token 15: '   ' (ID: 271)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.788320779800415
    2. 'chain' → logprob: -1.163320779800415
    3. 'product' → logprob: -2.163320779800415
    4. 'com' → logprob: -3.538320779800415
    5. ' chain' → logprob: -4.163320541381836
    6. 'cycle' → logprob: -4.163320541381836
    7. 'acc' → logprob: -4.288320541381836
    8. 'per' → logprob: -4.288320541381836
    9. ' product' → logprob: -4.663320541381836
    10. ' count' → logprob: -4.913320541381836

Token 16: ' combinations' (ID: 43835)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.7405403852462769
    2. 'product' → logprob: -1.6155403852462769
    3. 'count' → logprob: -1.7405403852462769
    4. 'per' → logprob: -2.7405405044555664
    5. 'com' → logprob: -3.2405405044555664
    6. 'acc' → logprob: -3.9905405044555664
    7. 'is' → logprob: -4.615540504455566
    8. 'cycle' → logprob: -4.740540504455566
    9. 'group' → logprob: -5.615540504455566
    10. '   ' → logprob: -5.865540504455566

Token 17: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0805678740143776
    2. ',' → logprob: -2.5805678367614746
    3. ',)' → logprob: -7.455567836761475
    4. ',
' → logprob: -7.705567836761475
    5. '<|end|>' → logprob: -7.830567836761475
    6. ' )' → logprob: -9.580568313598633
    7. '),' → logprob: -10.205568313598633
    8. '```' → logprob: -10.580568313598633
    9. '   ' → logprob: -10.705568313598633
    10. 'import' → logprob: -10.955568313598633

Token 18: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.12644656002521515
    2. 'per' → logprob: -2.501446485519409
    3. ' product' → logprob: -4.501446723937988
    4. '   ' → logprob: -4.626446723937988
    5. 'product' → logprob: -4.876446723937988
    6. 'count' → logprob: -6.251446723937988
    7. ' chain' → logprob: -6.376446723937988
    8. 'com' → logprob: -6.751446723937988
    9. 'chain' → logprob: -7.126446723937988
    10. ' count' → logprob: -7.376446723937988

Token 19: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07045939564704895
    2. ',' → logprob: -2.6954593658447266
    3. ' )' → logprob: -8.320459365844727
    4. '   ' → logprob: -8.695459365844727
    5. ',)' → logprob: -10.195459365844727
    6. '```' → logprob: -11.195459365844727
    7. '<|end|>' → logprob: -11.195459365844727
    8. '),' → logprob: -11.695459365844727
    9. ',
' → logprob: -11.945459365844727
    10. ' ,' → logprob: -12.320459365844727

Token 20: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.7060564756393433
    2. 'product' → logprob: -0.7060564756393433
    3. '   ' → logprob: -5.081056594848633
    4. 'chain' → logprob: -6.331056594848633
    5. ' group' → logprob: -6.956056594848633
    6. 'com' → logprob: -7.206056594848633
    7. ')' → logprob: -7.206056594848633
    8. ' chain' → logprob: -7.331056594848633
    9. 'group' → logprob: -7.706056594848633
    10. 'acc' → logprob: -7.706056594848633

Token 21: ',
' (ID: 412)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007755214814096689
    2. ',' → logprob: -4.882755279541016
    3. ' )' → logprob: -9.257755279541016
    4. '   ' → logprob: -11.132755279541016
    5. ',)' → logprob: -11.382755279541016
    6. '<|end|>' → logprob: -11.507755279541016
    7. '```' → logprob: -12.007755279541016
    8. '),' → logprob: -13.382755279541016
    9. ')
' → logprob: -13.507755279541016
    10. '`)' → logprob: -13.507755279541016

Token 22: '   ' (ID: 271)
  Prédit: ' chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chain' → logprob: -1.006507158279419
    2. '   ' → logprob: -1.256507158279419
    3. 'chain' → logprob: -2.256507158279419
    4. ')' → logprob: -2.256507158279419
    5. 'acc' → logprob: -3.756507158279419
    6. ' count' → logprob: -4.13150691986084
    7. 'st' → logprob: -4.13150691986084
    8. 'count' → logprob: -4.25650691986084
    9. ' accumulate' → logprob: -4.25650691986084
    10. ' st' → logprob: -4.63150691986084

Token 23: ' combinations' (ID: 43835)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -1.459212303161621
    2. 'chain' → logprob: -1.584212303161621
    3. '   ' → logprob: -1.834212303161621
    4. 'com' → logprob: -2.459212303161621
    5. ' chain' → logprob: -2.709212303161621
    6. 'st' → logprob: -2.959212303161621
    7. ')' → logprob: -3.209212303161621
    8. 'count' → logprob: -3.209212303161621
    9. ' accumulate' → logprob: -3.834212303161621
    10. 'group' → logprob: -4.084212303161621

Token 24: '_with' (ID: 14161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1956496685743332
    2. ',' → logprob: -2.0706496238708496
    3. '_with' → logprob: -3.3206496238708496
    4. 's' → logprob: -5.57064962387085
    5. ',)' → logprob: -6.19564962387085
    6. '_,' → logprob: -6.32064962387085
    7. 'with' → logprob: -6.57064962387085
    8. '`)' → logprob: -7.57064962387085
    9. '_from' → logprob: -7.57064962387085
    10. '_)' → logprob: -7.69564962387085

Token 25: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.00035214703530073166
    2. 'replacement' → logprob: -8.125351905822754
    3. ' replacement' → logprob: -10.000351905822754
    4. 're' → logprob: -12.875351905822754
    5. '-re' → logprob: -13.500351905822754
    6. '_' → logprob: -13.500351905822754
    7. '```' → logprob: -13.750351905822754
    8. 'Replacement' → logprob: -13.750351905822754
    9. '_rep' → logprob: -13.875351905822754
    10. '(re' → logprob: -14.625351905822754

Token 26: 'placement' (ID: 17947)
  Prédit: 'placement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placement' → logprob: -8.172891830326989e-05
    2. 'e' → logprob: -9.750082015991211
    3. 'p' → logprob: -11.500082015991211
    4. 'place' → logprob: -12.125082015991211
    5. 'pl' → logprob: -13.000082015991211
    6. 'placements' → logprob: -13.625082015991211
    7. 'petition' → logprob: -13.750082015991211
    8. 'pe' → logprob: -13.875082015991211
    9. ' placement' → logprob: -14.125082015991211
    10. 'Placement' → logprob: -14.875082015991211

Token 27: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.566264295950532e-05
    2. ' )' → logprob: -9.750085830688477
    3. ',' → logprob: -11.625085830688477
    4. ')
' → logprob: -12.375085830688477
    5. ')

' → logprob: -12.500085830688477
    6. '`)' → logprob: -12.750085830688477
    7. ')`' → logprob: -13.625085830688477
    8. 'import' → logprob: -13.750085830688477
    9. '),' → logprob: -13.750085830688477
    10. '   ' → logprob: -14.000085830688477

Token 28: ' accumulate' (ID: 74226)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -1.1549491882324219
    2. ')' → logprob: -1.6549491882324219
    3. ' accumulate' → logprob: -2.029949188232422
    4. ' group' → logprob: -2.154949188232422
    5. 'count' → logprob: -2.779949188232422
    6. 'group' → logprob: -3.529949188232422
    7. '   ' → logprob: -3.529949188232422
    8. ' count' → logprob: -3.654949188232422
    9. ' chain' → logprob: -3.779949188232422
    10. 'chain' → logprob: -4.279949188232422

Token 29: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00471717631444335
    2. ',' → logprob: -5.3797173500061035
    3. ' )' → logprob: -9.754716873168945
    4. ')
' → logprob: -11.879716873168945
    5. ',)' → logprob: -12.004716873168945
    6. ')

' → logprob: -12.379716873168945
    7. '   ' → logprob: -12.379716873168945
    8. ',
' → logprob: -12.379716873168945
    9. 'import' → logprob: -12.754716873168945
    10. '),' → logprob: -13.129716873168945

Token 30: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002512071805540472
    2. ',' → logprob: -8.375250816345215
    3. ' )' → logprob: -11.750250816345215
    4. ',)' → logprob: -12.375250816345215
    5. ')

' → logprob: -12.875250816345215
    6. ')
' → logprob: -13.125250816345215
    7. '```' → logprob: -14.250250816345215
    8. ',
' → logprob: -14.375250816345215
    9. '   ' → logprob: -14.625250816345215
    10. 'import' → logprob: -14.625250816345215

Token 31: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.0757504552602768
    2. '
' → logprob: -3.4507503509521484
    3. ',' → logprob: -4.075750350952148
    4. 'def' → logprob: -5.075750350952148
    5. ',

' → logprob: -5.200750350952148
    6. ')

' → logprob: -6.200750350952148
    7. ')' → logprob: -6.325750350952148
    8. '


' → logprob: -6.325750350952148
    9. '#' → logprob: -6.575750350952148
    10. ',
' → logprob: -6.950750350952148

Token 32: ' heap' (ID: 37237)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.27455565333366394
    2. ' collections' → logprob: -1.6495556831359863
    3. 'collections' → logprob: -3.5245556831359863
    4. 'fun' → logprob: -4.524555683135986
    5. ' fractions' → logprob: -6.399555683135986
    6. ' typing' → logprob: -6.524555683135986
    7. ' math' → logprob: -6.649555683135986
    8. ' ' → logprob: -7.024555683135986
    9. 'fra' → logprob: -7.024555683135986
    10. ' os' → logprob: -8.399555206298828

Token 33: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.2664456789934775e-06
    2. 'queue' → logprob: -14.125000953674316
    3. 'import' → logprob: -14.500000953674316
    4. ' import' → logprob: -18.500001907348633
    5. 'n' → logprob: -18.875001907348633
    6. ' queue' → logprob: -18.875001907348633
    7. 'dict' → logprob: -19.125001907348633
    8. ' ' → logprob: -20.000001907348633
    9. 'i' → logprob: -20.375001907348633
    10. 'ify' → logprob: -20.375001907348633

Token 34: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.009964430704712868
    2. 'import' → logprob: -4.634964466094971
    3. ' ' → logprob: -8.634963989257812
    4. '<|end|>' → logprob: -10.884963989257812
    5. '	import' → logprob: -12.634963989257812
    6. '_import' → logprob: -12.759963989257812
    7. ' imports' → logprob: -13.634963989257812
    8. ' im' → logprob: -14.509963989257812
    9. '_' → logprob: -14.759963989257812
    10. '.' → logprob: -14.884963989257812

Token 35: ' heap' (ID: 37237)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13916230201721191
    2. ' he' → logprob: -2.264162302017212
    3. ' n' → logprob: -3.889162302017212
    4. 'he' → logprob: -6.264162063598633
    5. 'nl' → logprob: -6.639162063598633
    6. ' merge' → logprob: -7.264162063598633
    7. ' heap' → logprob: -7.389162063598633
    8. ' nl' → logprob: -8.514162063598633
    9. 'merge' → logprob: -8.639162063598633
    10. 'n' → logprob: -8.764162063598633

Token 36: 'ify' (ID: 1985)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8137303590774536
    2. 'q' → logprob: -1.3137303590774536
    3. 'ify' → logprob: -1.5637303590774536
    4. 'replace' → logprob: -2.938730239868164
    5. 'push' → logprob: -4.438730239868164
    6. 'f' → logprob: -5.188730239868164
    7. 'ush' → logprob: -6.688730239868164
    8. 'pl' → logprob: -6.813730239868164
    9. 'app' → logprob: -6.813730239868164
    10. 'lify' → logprob: -7.188730239868164

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023131117632146925
    2. ',
' → logprob: -9.250231742858887
    3. '<|end|>' → logprob: -10.125231742858887
    4. 'import' → logprob: -10.875231742858887
    5. ' ,' → logprob: -11.125231742858887
    6. ',h' → logprob: -11.500231742858887
    7. ',use' → logprob: -11.875231742858887
    8. ',line' → logprob: -13.000231742858887
    9. ',n' → logprob: -13.125231742858887
    10. ',s' → logprob: -13.250231742858887

Token 38: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.5768461227416992
    2. 'he' → logprob: -0.8268461227416992
    3. 'heap' → logprob: -7.826846122741699
    4. ' ' → logprob: -8.8268461227417
    5. '.he' → logprob: -9.0768461227417
    6. '```' → logprob: -9.5768461227417
    7. ' heap' → logprob: -9.7018461227417
    8. ' n' → logprob: -10.7018461227417
    9. 'nl' → logprob: -10.7018461227417
    10. '   ' → logprob: -11.3268461227417

Token 39: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0007127894787117839
    2. 'ap' → logprob: -7.250712871551514
    3. 'a' → logprob: -12.875712394714355
    4. 'appen' → logprob: -16.875713348388672
    5. ' app' → logprob: -17.500713348388672
    6. 'q' → logprob: -17.625713348388672
    7. 'ап' → logprob: -17.625713348388672
    8. 'aq' → logprob: -17.625713348388672
    9. '[' → logprob: -17.875713348388672
    10. 'n' → logprob: -18.125713348388672

Token 40: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.04300319775938988
    2. 'op' → logprob: -3.1680030822753906
    3. 'osh' → logprob: -13.29300308227539
    4. '   ' → logprob: -14.66800308227539
    5. '

' → logprob: -14.79300308227539
    6. '[' → logprob: -15.04300308227539
    7. 'us' → logprob: -15.79300308227539
    8. 'o' → logprob: -15.91800308227539
    9. '```' → logprob: -16.16800308227539
    10. '
' → logprob: -16.29300308227539

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.960946772480384e-05
    2. ',
' → logprob: -9.875099182128906
    3. 'import' → logprob: -11.250099182128906
    4. 'from' → logprob: -11.250099182128906
    5. 'he' → logprob: -11.750099182128906
    6. ' ,' → logprob: -13.250099182128906
    7. '```' → logprob: -13.250099182128906
    8. '<|end|>' → logprob: -13.375099182128906
    9. ',h' → logprob: -13.875099182128906
    10. ',\
' → logprob: -14.125099182128906

Token 42: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.6031557321548462
    2. 'he' → logprob: -0.8531557321548462
    3. 'heap' → logprob: -3.8531556129455566
    4. ' heap' → logprob: -5.228155612945557
    5. ' ' → logprob: -9.103156089782715
    6. '```' → logprob: -9.353156089782715
    7. ' heaps' → logprob: -10.978156089782715
    8. '.he' → logprob: -11.790656089782715
    9. '   ' → logprob: -12.040656089782715
    10. 'h' → logprob: -12.103156089782715

Token 43: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -5.431207682704553e-05
    2. 'ap' → logprob: -9.875054359436035
    3. 'APP' → logprob: -13.375054359436035
    4. 'a' → logprob: -14.875054359436035
    5. 'App' → logprob: -15.375054359436035
    6. 'pp' → logprob: -15.625054359436035
    7. ' app' → logprob: -16.12505340576172
    8. '_app' → logprob: -16.25005340576172
    9. 'e' → logprob: -16.37505340576172
    10. '(app' → logprob: -16.50005340576172

Token 44: 'ush' (ID: 1776)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.34851697087287903
    2. 'ush' → logprob: -1.2235169410705566
    3. 'o' → logprob: -10.223517417907715
    4. 'osh' → logprob: -11.473517417907715
    5. 'p' → logprob: -11.598517417907715
    6. 'sh' → logprob: -11.848517417907715
    7. 'e' → logprob: -12.973517417907715
    8. '   ' → logprob: -13.473517417907715
    9. '

' → logprob: -13.973517417907715
    10. '
' → logprob: -14.348517417907715

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24362725019454956
    2. '
' → logprob: -2.4936273097991943
    3. ',
' → logprob: -3.2436273097991943
    4. 'import' → logprob: -3.4936273097991943
    5. '\n' → logprob: -4.118627071380615
    6. '

' → logprob: -4.493627071380615
    7. '' → logprob: -5.118627071380615
    8. '#' → logprob: -5.118627071380615
    9. '<|end|>' → logprob: -5.243627071380615
    10. ')' → logprob: -5.493627071380615

Token 46: ' he' (ID: 501)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.8414005041122437
    2. ' he' → logprob: -1.2164005041122437
    3. ' heap' → logprob: -1.8414005041122437
    4. 'he' → logprob: -2.591400623321533
    5. ' n' → logprob: -3.716400623321533
    6. 'nl' → logprob: -4.466400623321533
    7. 'n' → logprob: -6.091400623321533
    8. ' heaps' → logprob: -7.966400623321533
    9. ' ' → logprob: -8.466400146484375
    10. 'merge' → logprob: -8.841400146484375

Token 47: 'app' (ID: 903)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.06493775546550751
    2. 'app' → logprob: -2.8149378299713135
    3. 'q' → logprob: -7.189937591552734
    4. 'p' → logprob: -7.314937591552734
    5. 'a' → logprob: -7.814937591552734
    6. 'lp' → logprob: -8.314937591552734
    7. 'st' → logprob: -9.064937591552734
    8. 'aph' → logprob: -9.439937591552734
    9. 'ап' → logprob: -9.564937591552734
    10. 'n' → logprob: -9.564937591552734

Token 48: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0012657057959586382
    2. 'op' → logprob: -7.251265525817871
    3. 'u' → logprob: -8.251265525817871
    4. 'us' → logprob: -8.751265525817871
    5. '   ' → logprob: -10.876265525817871
    6. '

' → logprob: -10.876265525817871
    7. 'o' → logprob: -11.001265525817871
    8. 'l' → logprob: -11.251265525817871
    9. 'p' → logprob: -11.876265525817871
    10. 'ut' → logprob: -12.251265525817871

Token 49: 'pop' (ID: 15042)
  Prédit: 'pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.0029186380561441183
    2. '_pop' → logprob: -6.502918720245361
    3. '_' → logprob: -7.502918720245361
    4. 'append' → logprob: -8.752918243408203
    5. 'diff' → logprob: -9.627918243408203
    6. 'replace' → logprob: -9.877918243408203
    7. '_unique' → logprob: -10.252918243408203
    8. '_append' → logprob: -10.252918243408203
    9. 'back' → logprob: -10.377918243408203
    10. '_tail' → logprob: -10.377918243408203

Token 50: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33160755038261414
    2. '
' → logprob: -2.4566075801849365
    3. '\n' → logprob: -2.5816075801849365
    4. ')' → logprob: -3.4566075801849365
    5. '<|end|>' → logprob: -3.5816075801849365
    6. ',
' → logprob: -4.081607341766357
    7. '

' → logprob: -4.956607341766357
    8. '' → logprob: -5.081607341766357
    9. 'newline' → logprob: -5.081607341766357
    10. 'import' → logprob: -5.081607341766357

Token 51: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9843882322311401
    2. '
' → logprob: -1.1093882322311401
    3. '

' → logprob: -1.6093882322311401
    4. '<|end|>' → logprob: -3.1093883514404297
    5. ',
' → logprob: -3.8593883514404297
    6. ',

' → logprob: -5.23438835144043
    7. 'import' → logprob: -5.35938835144043
    8. '\n' → logprob: -5.60938835144043
    9. ')' → logprob: -5.73438835144043
    10. 'def' → logprob: -5.98438835144043

Token 52: ' bis' (ID: 7204)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.20843297243118286
    2. 'collections' → logprob: -1.708432912826538
    3. ' functools' → logprob: -5.208433151245117
    4. 'bis' → logprob: -8.083433151245117
    5. ' bis' → logprob: -8.208433151245117
    6. 'random' → logprob: -9.208433151245117
    7. ' queue' → logprob: -9.208433151245117
    8. '_' → logprob: -9.333433151245117
    9. ' random' → logprob: -9.458433151245117
    10. ' threading' → logprob: -9.708433151245117

Token 53: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.306760805164231e-05
    2. 'e' → logprob: -11.62501335144043
    3. 'ec' → logprob: -13.25001335144043
    4. 't' → logprob: -13.37501335144043
    5. 'ections' → logprob: -15.37501335144043
    6. 'ection' → logprob: -15.75001335144043
    7. 'ector' → logprob: -16.37501335144043
    8. 'ectl' → logprob: -16.50001335144043
    9. 'ort' → logprob: -16.50001335144043
    10. 'ecta' → logprob: -16.62501335144043

Token 54: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.01104311365634203
    2. 'import' → logprob: -4.636043071746826
    3. ' ' → logprob: -6.886043071746826
    4. '_import' → logprob: -9.011043548583984
    5. '	import' → logprob: -10.136043548583984
    6. '_' → logprob: -10.136043548583984
    7. '<|end|>' → logprob: -10.511043548583984
    8. ' _' → logprob: -11.636043548583984
    9. ' importar' → logprob: -12.011043548583984
    10. ' im' → logprob: -12.011043548583984

Token 55: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.00658605108037591
    2. 'bis' → logprob: -5.131586074829102
    3. ' ins' → logprob: -7.381586074829102
    4. 'ins' → logprob: -10.381586074829102
    5. '	b' → logprob: -13.006586074829102
    6. ' ' → logprob: -14.381586074829102
    7. ' b' → logprob: -15.256586074829102
    8. '_ins' → logprob: -16.0065860748291
    9. 'Bis' → logprob: -16.2565860748291
    10. '.b' → logprob: -17.1315860748291

Token 56: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -4.320199877838604e-07
    2. 'e' → logprob: -15.375
    3. 'ected' → logprob: -16.75
    4. 'ectl' → logprob: -17.75
    5. 'ecta' → logprob: -18.0
    6. 'ectin' → logprob: -18.5
    7. 'ec' → logprob: -18.5
    8. 'ection' → logprob: -19.125
    9. 'ects' → logprob: -19.25
    10. 'ectar' → logprob: -19.75

Token 57: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.016370641067624092
    2. '_right' → logprob: -4.14137077331543
    3. '<|end|>' → logprob: -8.39137077331543
    4. ',' → logprob: -10.01637077331543
    5. '_' → logprob: -10.51637077331543
    6. 'left' → logprob: -10.89137077331543
    7. 'right' → logprob: -12.39137077331543
    8. ' ' → logprob: -12.51637077331543
    9. '```' → logprob: -12.89137077331543
    10. '_LEFT' → logprob: -13.14137077331543

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000902884581591934
    2. ',b' → logprob: -7.2509026527404785
    3. ',
' → logprob: -9.125903129577637
    4. 'import' → logprob: -10.000903129577637
    5. 'from' → logprob: -11.625903129577637
    6. '
' → logprob: -11.625903129577637
    7. ' ,' → logprob: -11.875903129577637
    8. 'def' → logprob: -13.000903129577637
    9. '```' → logprob: -13.000903129577637
    10. ',B' → logprob: -13.750903129577637

Token 59: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.08897937834262848
    2. ' bis' → logprob: -2.463979482650757
    3. 'ins' → logprob: -10.963979721069336
    4. 'b' → logprob: -11.213979721069336
    5. ' ins' → logprob: -12.838979721069336
    6. '```' → logprob: -12.963979721069336
    7. ' ' → logprob: -13.713979721069336
    8. '	b' → logprob: -14.776479721069336
    9. 'bs' → logprob: -15.651479721069336
    10. 's' → logprob: -16.026479721069336

Token 60: 'ect' (ID: 534)
  Prédit: 'sect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -0.0022815766278654337
    2. 's' → logprob: -6.752281665802002
    3. 'ect' → logprob: -7.377281665802002
    4. 'ct' → logprob: -8.002281188964844
    5. 'n' → logprob: -10.127281188964844
    6. '```' → logprob: -10.252281188964844
    7. 'с' → logprob: -10.877281188964844
    8. 'section' → logprob: -11.877281188964844
    9. 'se' → logprob: -12.002281188964844
    10. 'so' → logprob: -12.752281188964844

Token 61: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.0022229375317692757
    2. 'ight' → logprob: -6.627223014831543
    3. 'right' → logprob: -7.252223014831543
    4. '_' → logprob: -9.252223014831543
    5. 'Right' → logprob: -10.127223014831543
    6. 'igh' → logprob: -11.627223014831543
    7. '<|end|>' → logprob: -11.877223014831543
    8. '_RIGHT' → logprob: -12.002223014831543
    9. '```' → logprob: -12.002223014831543
    10. '_Right' → logprob: -12.127223014831543

Token 62: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24238382279872894
    2. '
' → logprob: -1.9923838376998901
    3. ',
' → logprob: -3.7423837184906006
    4. '

' → logprob: -3.9923837184906006
    5. 'import' → logprob: -3.9923837184906006
    6. 'from' → logprob: -4.74238395690918
    7. 'def' → logprob: -6.24238395690918
    8. '```' → logprob: -6.24238395690918
    9. ',

' → logprob: -7.24238395690918
    10. '\n' → logprob: -7.24238395690918

Token 63: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4006057679653168
    2. ',
' → logprob: -2.4006056785583496
    3. 'import' → logprob: -2.9006056785583496
    4. 'def' → logprob: -2.9006056785583496
    5. 'from' → logprob: -3.0256056785583496
    6. '
' → logprob: -4.02560567855835
    7. '```' → logprob: -4.27560567855835
    8. ')

' → logprob: -4.52560567855835
    9. '

' → logprob: -4.52560567855835
    10. ',

' → logprob: -4.77560567855835

Token 64: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.2303246557712555
    2. 'collections' → logprob: -1.605324625968933
    3. ' functools' → logprob: -5.855324745178223
    4. ' math' → logprob: -7.105324745178223
    5. ' typing' → logprob: -7.230324745178223
    6. 'math' → logprob: -9.105324745178223
    7. ' itertools' → logprob: -9.730324745178223
    8. ' array' → logprob: -9.855324745178223
    9. 'typing' → logprob: -10.105324745178223
    10. ' random' → logprob: -10.355324745178223

Token 65: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1286715567111969
    2. 'abc' → logprob: -2.378671646118164
    3. ' import' → logprob: -3.753671646118164
    4. '.' → logprob: -5.628671646118164
    5. 'from' → logprob: -8.628671646118164
    6. ' abc' → logprob: -9.003671646118164
    7. '.Counter' → logprob: -9.253671646118164
    8. 'ections' → logprob: -9.878671646118164
    9. 'a' → logprob: -10.128671646118164
    10. '<|end|>' → logprob: -10.128671646118164

Token 66: ' Counter' (ID: 32251)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.01759244315326214
    2. ' deque' → logprob: -4.142592430114746
    3. 'deque' → logprob: -7.142592430114746
    4. ' Counter' → logprob: -7.767592430114746
    5. ' named' → logprob: -9.267592430114746
    6. ' ' → logprob: -9.392592430114746
    7. 'default' → logprob: -9.517592430114746
    8. ' abc' → logprob: -9.642592430114746
    9. 'Counter' → logprob: -11.517592430114746
    10. 'named' → logprob: -12.267592430114746

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08465415984392166
    2. 'from' → logprob: -3.2096540927886963
    3. '
' → logprob: -4.334654331207275
    4. '

' → logprob: -4.584654331207275
    5. 'import' → logprob: -4.834654331207275
    6. ',
' → logprob: -5.709654331207275
    7. 'Counter' → logprob: -6.459654331207275
    8. 'def' → logprob: -6.709654331207275
    9. '


' → logprob: -7.584654331207275
    10. '```' → logprob: -7.834654331207275

Token 68: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.9042988419532776
    2. 'default' → logprob: -1.0292987823486328
    3. 'deque' → logprob: -1.5292987823486328
    4. ' deque' → logprob: -3.904298782348633
    5. 'named' → logprob: -7.404298782348633
    6. 'Ordered' → logprob: -8.404298782348633
    7. ' named' → logprob: -9.529298782348633
    8. 'de' → logprob: -9.779298782348633
    9. 'Deque' → logprob: -10.154298782348633
    10. ' default' → logprob: -10.529298782348633

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.033226627856492996
    2. '
' → logprob: -4.908226490020752
    3. 'from' → logprob: -4.908226490020752
    4. '

' → logprob: -5.658226490020752
    5. '<|end|>' → logprob: -5.658226490020752
    6. 'import' → logprob: -6.033226490020752
    7. ')' → logprob: -6.283226490020752
    8. ',
' → logprob: -6.408226490020752
    9. 'def' → logprob: -6.658226490020752
    10. ' ,' → logprob: -6.908226490020752

Token 70: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.42916566133499146
    2. ' deque' → logprob: -1.0541656017303467
    3. 'Ordered' → logprob: -8.804165840148926
    4. 'named' → logprob: -9.179165840148926
    5. ' named' → logprob: -9.429165840148926
    6. ' Ordered' → logprob: -9.804165840148926
    7. 'Deque' → logprob: -10.054165840148926
    8. 'de' → logprob: -10.429165840148926
    9. ' ' → logprob: -14.179165840148926
    10. ' de' → logprob: -14.679165840148926

Token 71: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5892021656036377
    2. '
' → logprob: -1.5892021656036377
    3. ')' → logprob: -2.2142021656036377
    4. '<|end|>' → logprob: -2.9642021656036377
    5. '

' → logprob: -3.8392021656036377
    6. 'import' → logprob: -4.339201927185059
    7. 'from' → logprob: -4.339201927185059
    8. 'def' → logprob: -4.589201927185059
    9. ',
' → logprob: -4.589201927185059
    10. ')

' → logprob: -5.714201927185059

Token 72: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7164425849914551
    2. '

' → logprob: -1.716442584991455
    3. 'import' → logprob: -2.591442584991455
    4. '
' → logprob: -2.591442584991455
    5. 'from' → logprob: -2.591442584991455
    6. 'def' → logprob: -2.966442584991455
    7. '<|end|>' → logprob: -4.216442584991455
    8. ')' → logprob: -4.841442584991455
    9. ' 

' → logprob: -4.841442584991455
    10. ',
' → logprob: -5.716442584991455

Token 73: ' functools' (ID: 142636)
  Prédit: ' functools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.37256333231925964
    2. ' typing' → logprob: -1.247563362121582
    3. ' itertools' → logprob: -5.122563362121582
    4. 'typing' → logprob: -5.747563362121582
    5. ' math' → logprob: -5.872563362121582
    6. ' fractions' → logprob: -5.872563362121582
    7. ' collections' → logprob: -5.997563362121582
    8. ' dat' → logprob: -6.997563362121582
    9. ' ' → logprob: -6.997563362121582
    10. 'collections' → logprob: -7.622563362121582

Token 74: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.13355085253715515
    2. 'import' → logprob: -2.1335508823394775
    3. '_import' → logprob: -5.883550643920898
    4. ' ' → logprob: -6.133550643920898
    5. '<|end|>' → logprob: -7.133550643920898
    6. '_' → logprob: -8.258550643920898
    7. '	import' → logprob: -8.258550643920898
    8. '.' → logprob: -9.258550643920898
    9. ' _' → logprob: -9.383550643920898
    10. '<|end|>' → logprob: -10.508550643920898

Token 75: ' reduce' (ID: 10389)
  Prédit: ' reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.9727134704589844
    2. ' l' → logprob: -1.2227134704589844
    3. 'reduce' → logprob: -1.3477134704589844
    4. 'l' → logprob: -2.8477134704589844
    5. ' partial' → logprob: -5.597713470458984
    6. ' wraps' → logprob: -5.597713470458984
    7. 'partial' → logprob: -6.472713470458984
    8. 'wrap' → logprob: -8.222713470458984
    9. ' ' → logprob: -8.597713470458984
    10. 'cmp' → logprob: -9.722713470458984

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0045410809107124805
    2. ',
' → logprob: -6.129540920257568
    3. 'from' → logprob: -6.879540920257568
    4. ' ,' → logprob: -7.754540920257568
    5. 'import' → logprob: -7.879540920257568
    6. '
' → logprob: -8.879541397094727
    7. ' as' → logprob: -9.504541397094727
    8. '<|end|>' → logprob: -9.879541397094727
    9. ' from' → logprob: -10.129541397094727
    10. 'def' → logprob: -10.379541397094727

Token 77: ' partial' (ID: 13664)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.19760705530643463
    2. ' l' → logprob: -2.1976070404052734
    3. 'partial' → logprob: -2.8226070404052734
    4. ' partial' → logprob: -5.322607040405273
    5. 'wrap' → logprob: -6.447607040405273
    6. ' wraps' → logprob: -6.822607040405273
    7. 'cmp' → logprob: -7.447607040405273
    8. 'cache' → logprob: -7.697607040405273
    9. '	l' → logprob: -9.697607040405273
    10. 'cached' → logprob: -9.947607040405273

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04889415204524994
    2. ',
' → logprob: -3.423894166946411
    3. 'from' → logprob: -4.798893928527832
    4. '
' → logprob: -5.548893928527832
    5. 'def' → logprob: -7.048893928527832
    6. ')' → logprob: -7.548893928527832
    7. 'import' → logprob: -7.923893928527832
    8. '<|end|>' → logprob: -8.298893928527832
    9. ',

' → logprob: -9.048893928527832
    10. '

' → logprob: -9.173893928527832

Token 79: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.011093330569565296
    2. ' l' → logprob: -5.2610931396484375
    3. 'wrap' → logprob: -5.5110931396484375
    4. ' wraps' → logprob: -7.0110931396484375
    5. 'cmp' → logprob: -7.7610931396484375
    6. 'cache' → logprob: -8.011093139648438
    7. 'cached' → logprob: -9.511093139648438
    8. '	l' → logprob: -10.261093139648438
    9. 'wr' → logprob: -11.636093139648438
    10. ' ' → logprob: -12.386093139648438

Token 80: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.003979854751378298
    2. 'z' → logprob: -6.378979682922363
    3. 'ambda' → logprob: -6.378979682922363
    4. 'en' → logprob: -8.628979682922363
    5. 'a' → logprob: -9.378979682922363
    6. 'amb' → logprob: -9.378979682922363
    7. '```' → logprob: -10.753979682922363
    8. 'fu' → logprob: -11.128979682922363
    9. 'map' → logprob: -11.128979682922363
    10. 'e' → logprob: -11.128979682922363

Token 81: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.011345475912094116
    2. '_c' → logprob: -5.011345386505127
    3. '_' → logprob: -5.386345386505127
    4. '_
' → logprob: -11.636345863342285
    5. 'c' → logprob: -11.886345863342285
    6. '_

' → logprob: -12.136345863342285
    7. '_cached' → logprob: -12.261345863342285
    8. 'cache' → logprob: -12.761345863342285
    9. '_CACHE' → logprob: -13.011345863342285
    10. '_\' → logprob: -13.136345863342285

Token 82: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38178953528404236
    2. 'from' → logprob: -2.381789445877075
    3. ')' → logprob: -2.506789445877075
    4. ',
' → logprob: -3.006789445877075
    5. '
' → logprob: -3.256789445877075
    6. 'import' → logprob: -3.631789445877075
    7. '\n' → logprob: -4.881789684295654
    8. 'def' → logprob: -5.131789684295654
    9. '

' → logprob: -5.756789684295654
    10. '#' → logprob: -6.381789684295654

Token 83: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.41488850116729736
    2. '#' → logprob: -1.9148885011672974
    3. 'import' → logprob: -2.789888381958008
    4. '
' → logprob: -3.539888381958008
    5. 'from' → logprob: -3.914888381958008
    6. 'class' → logprob: -4.039888381958008
    7. ')' → logprob: -4.164888381958008
    8. '@' → logprob: -4.414888381958008
    9. ',' → logprob: -4.539888381958008
    10. 'd' → logprob: -5.539888381958008

Token 84: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -3.4881879400927573e-05
    2. ' .' → logprob: -10.500035285949707
    3. '.`' → logprob: -13.125035285949707
    4. '.​' → logprob: -14.125035285949707
    5. '.)' → logprob: -14.500035285949707
    6. ' ' → logprob: -14.750035285949707
    7. '.
' → logprob: -14.875035285949707
    8. '.exit' → logprob: -15.125035285949707
    9. '.]' → logprob: -15.125035285949707
    10. '.

' → logprob: -15.250035285949707

Token 85: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5122016668319702
    2. '_limit' → logprob: -2.1372017860412598
    3. '_rec' → logprob: -2.7622017860412598
    4. ' _' → logprob: -3.6372017860412598
    5. '_stack' → logprob: -3.6372017860412598
    6. '_exc' → logprob: -3.8872017860412598
    7. '_execution' → logprob: -4.51220178604126
    8. '_attr' → logprob: -4.63720178604126
    9. '_opt' → logprob: -4.76220178604126
    10. '_version' → logprob: -4.76220178604126

Token 86: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.01055535301566124
    2. 'ursive' → logprob: -5.135555267333984
    3. '_limit' → logprob: -6.635555267333984
    4. 'urs' → logprob: -6.635555267333984
    5. 'ur' → logprob: -7.010555267333984
    6. 'limit' → logprob: -7.760555267333984
    7. '_' → logprob: -7.885555267333984
    8. 'urse' → logprob: -10.010555267333984
    9. '_set' → logprob: -10.385555267333984
    10. 'urf' → logprob: -10.510555267333984

Token 87: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.31339478492736816
    2. '_limit' → logprob: -1.3133947849273682
    3. '_depth' → logprob: -9.313394546508789
    4. 'lim' → logprob: -11.563394546508789
    5. '_lim' → logprob: -11.688394546508789
    6. '_' → logprob: -11.813394546508789
    7. ' limit' → logprob: -11.938394546508789
    8. 'depth' → logprob: -12.563394546508789
    9. '_LIMIT' → logprob: -13.313394546508789
    10. ' _' → logprob: -13.813394546508789

Token 88: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.635164754698053e-05
    2. '(
' → logprob: -9.875066757202148
    3. '(

' → logprob: -11.875066757202148
    4. ' (' → logprob: -12.875066757202148
    5. '("("' → logprob: -13.250066757202148
    6. '<|end|>' → logprob: -13.625066757202148
    7. '((' → logprob: -13.750066757202148
    8. '()' → logprob: -15.625066757202148
    9. '(
' → logprob: -15.625066757202148
    10. '(**' → logprob: -15.875066757202148

Token 89: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.01866641454398632
    2. '100' → logprob: -4.0186662673950195
    3. ' ' → logprob: -7.6436662673950195
    4. '1' → logprob: -10.76866626739502
    5. '300' → logprob: -12.64366626739502
    6. '999' → logprob: -12.64366626739502
    7. '9' → logprob: -12.76866626739502
    8. '500' → logprob: -13.01866626739502
    9. '900' → logprob: -13.64366626739502
    10. '200' → logprob: -14.14366626739502

Token 90: ' <<' (ID: 2256)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.22807274758815765
    2. '00' → logprob: -2.1030726432800293
    3. '0' → logprob: -2.6030726432800293
    4. '500' → logprob: -5.853072643280029
    5. '50' → logprob: -6.353072643280029
    6. '5' → logprob: -6.478072643280029
    7. '6' → logprob: -7.478072643280029
    8. '050' → logprob: -8.853073120117188
    9. '8' → logprob: -8.978073120117188
    10. '07' → logprob: -9.103073120117188

Token 91: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.01676974818110466
    2. '25' → logprob: -4.391769886016846
    3. '2' → logprob: -5.766769886016846
    4. ' ' → logprob: -7.391769886016846
    5. '1' → logprob: -7.891769886016846
    6. '15' → logprob: -10.391769409179688
    7. '21' → logprob: -10.641769409179688
    8. '17' → logprob: -10.766769409179688
    9. '26' → logprob: -11.266769409179688
    10. '27' → logprob: -11.516769409179688

Token 92: '20' (ID: 455)
  Prédit: '25'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -0.026353128254413605
    2. '20' → logprob: -3.651353120803833
    3. '30' → logprob: -11.276352882385254
    4. '2' → logprob: -11.401352882385254
    5. '15' → logprob: -11.651352882385254
    6. '21' → logprob: -11.776352882385254
    7. '24' → logprob: -12.401352882385254
    8. '27' → logprob: -12.651352882385254
    9. '23' → logprob: -13.776352882385254
    10. '22' → logprob: -14.151352882385254

Token 93: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. ' )' → logprob: -12.375004768371582
    3. ')
' → logprob: -15.250004768371582
    4. '))' → logprob: -16.625003814697266
    5. ')`' → logprob: -18.250003814697266
    6. ')

' → logprob: -18.375003814697266
    7. '),' → logprob: -18.375003814697266
    8. ')#' → logprob: -18.875003814697266
    9. ' ' → logprob: -19.125003814697266
    10. '```' → logprob: -19.375003814697266

Token 94: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3308618366718292
    2. '

' → logprob: -1.3308618068695068
    3. '
' → logprob: -4.455862045288086
    4. 'def' → logprob: -6.080862045288086
    5. 'n' → logprob: -6.955862045288086
    6. '


' → logprob: -7.705862045288086
    7. '#' → logprob: -7.955862045288086
    8. 'class' → logprob: -7.955862045288086
    9. '\n' → logprob: -8.330862045288086
    10. '' → logprob: -8.330862045288086

Token 95: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0075259399600327015
    2. '()' → logprob: -5.75752592086792
    3. '.' → logprob: -7.00752592086792
    4. '=' → logprob: -7.13252592086792
    5. ' =' → logprob: -7.25752592086792
    6. '(
' → logprob: -7.38252592086792
    7. ')' → logprob: -8.257526397705078
    8. '<|end|>' → logprob: -8.257526397705078
    9. '```' → logprob: -8.257526397705078
    10. ',' → logprob: -9.507526397705078

Token 96: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.027808893471956253
    2. ' input' → logprob: -3.777808904647827
    3. ' ' → logprob: -5.777808666229248
    4. 'sys' → logprob: -7.027808666229248
    5. 'input' → logprob: -8.277809143066406
    6. ' lambda' → logprob: -8.277809143066406
    7. ' iter' → logprob: -11.027809143066406
    8. '	sys' → logprob: -11.152809143066406
    9. ' raw' → logprob: -11.277809143066406
    10. '=sys' → logprob: -11.777809143066406

Token 97: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.007008521351963282
    2. '.readline' → logprob: -5.2570085525512695
    3. '.stdin' → logprob: -6.3820085525512695
    4. ' .' → logprob: -10.88200855255127
    5. '.​' → logprob: -11.38200855255127
    6. '.read' → logprob: -11.75700855255127
    7. '.`' → logprob: -11.75700855255127
    8. '.\' → logprob: -11.88200855255127
    9. '.stdout' → logprob: -12.25700855255127
    10. '.
' → logprob: -12.63200855255127

Token 98: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00014060820103622973
    2. '.read' → logprob: -9.375140190124512
    3. '.buffer' → logprob: -9.875140190124512
    4. 'buffer' → logprob: -13.000140190124512
    5. '.' → logprob: -13.625140190124512
    6. 'read' → logprob: -15.000140190124512
    7. '.stdin' → logprob: -15.750140190124512
    8. '.readlines' → logprob: -16.125141143798828
    9. ' readline' → logprob: -16.875141143798828
    10. '.Buffered' → logprob: -17.375141143798828

Token 99: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5823099613189697
    2. 'def' → logprob: -1.0823099613189697
    3. '

' → logprob: -2.4573099613189697
    4. 'class' → logprob: -5.082309722900391
    5. '\n' → logprob: -6.207309722900391
    6. '\' → logprob: -6.332309722900391
    7. '```' → logprob: -6.332309722900391
    8. '
' → logprob: -7.082309722900391
    9. '    
' → logprob: -7.332309722900391
    10. '#' → logprob: -7.582309722900391

Token 100: 'INF' (ID: 64358)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20651964843273163
    2. '
' → logprob: -2.206519603729248
    3. 'class' → logprob: -2.831519603729248
    4. '

' → logprob: -4.581519603729248
    5. 'n' → logprob: -5.581519603729248
    6. '#' → logprob: -6.831519603729248
    7. 'd' → logprob: -7.081519603729248
    8. '\' → logprob: -7.331519603729248
    9. '\n' → logprob: -8.331520080566406
    10. '
' → logprob: -8.706520080566406

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1445223093032837
    2. '=' → logprob: -2.019522190093994
    3. '_' → logprob: -6.769522190093994
    4. ',' → logprob: -8.269522666931152
    5. ' ' → logprob: -8.894522666931152
    6. ')' → logprob: -9.269522666931152
    7. '.' → logprob: -9.644522666931152
    8. '>' → logprob: -10.144522666931152
    9. ' ,' → logprob: -11.269522666931152
    10. ' _' → logprob: -11.269522666931152

Token 102: ' float' (ID: 4428)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4349892735481262
    2. 'float' → logprob: -1.1849892139434814
    3. ' float' → logprob: -3.4349892139434814
    4. ' ' → logprob: -4.3099894523620605
    5. '1' → logprob: -6.6849894523620605
    6. 'int' → logprob: -9.809988975524902
    7. '(float' → logprob: -12.434988975524902
    8. ' int' → logprob: -12.934988975524902
    9. 'inf' → logprob: -13.559988975524902
    10. '9' → logprob: -14.059988975524902

Token 103: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00024144348572008312
    2. '(' → logprob: -8.75024127960205
    3. ''' → logprob: -9.87524127960205
    4. '("' → logprob: -10.87524127960205
    5. '('+' → logprob: -12.00024127960205
    6. '"' → logprob: -13.12524127960205
    7. '32' → logprob: -13.87524127960205
    8. ''in' → logprob: -14.50024127960205
    9. '```' → logprob: -15.12524127960205
    10. '('-' → logprob: -15.37524127960205

Token 104: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.8040006160736084
    2. ''' → logprob: -1.3040006160736084
    3. 'inf' → logprob: -1.3040006160736084
    4. ''ex' → logprob: -6.0540008544921875
    5. '"' → logprob: -6.5540008544921875
    6. ''i' → logprob: -7.0540008544921875
    7. '64' → logprob: -7.5540008544921875
    8. ''ins' → logprob: -7.5540008544921875
    9. ''im' → logprob: -7.6790008544921875
    10. ''import' → logprob: -8.054000854492188

Token 105: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931696534156799
    2. '')' → logprob: -0.6931696534156799
    3. ')'' → logprob: -11.818169593811035
    4. ' )' → logprob: -12.068169593811035
    5. '")' → logprob: -12.568169593811035
    6. ''' → logprob: -13.568169593811035
    7. ' ')' → logprob: -13.943169593811035
    8. '')
' → logprob: -14.068169593811035
    9. '.')' → logprob: -14.318169593811035
    10. '()' → logprob: -14.443169593811035

Token 106: 'LIN' (ID: 61147)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7926896214485168
    2. 'def' → logprob: -0.7926896214485168
    3. 'class' → logprob: -2.917689561843872
    4. '

' → logprob: -3.542689561843872
    5. '#' → logprob: -5.792689800262451
    6. '\n' → logprob: -6.292689800262451
    7. 'n' → logprob: -6.292689800262451
    8. '```' → logprob: -6.417689800262451
    9. '\' → logprob: -7.292689800262451
    10. '
' → logprob: -7.417689800262451

Token 107: 'F' (ID: 37)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.12766000628471375
    2. 'EM' → logprob: -2.377660036087036
    3. 'AL' → logprob: -5.002659797668457
    4. 'EL' → logprob: -5.252659797668457
    5. 'UX' → logprob: -5.502659797668457
    6. 'EAR' → logprob: -5.752659797668457
    7. 'EC' → logprob: -6.377659797668457
    8. 'EN' → logprob: -6.502659797668457
    9. 'EA' → logprob: -7.377659797668457
    10. 'EQ' → logprob: -7.502659797668457

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408607602119446
    2. '=' → logprob: -0.9740860462188721
    3. ')' → logprob: -13.099085807800293
    4. ',' → logprob: -13.599085807800293
    5. '=int' → logprob: -13.724085807800293
    6. ' ' → logprob: -13.724085807800293
    7. '=float' → logprob: -14.224085807800293
    8. '＝' → logprob: -14.849085807800293
    9. 'O' → logprob: -14.974085807800293
    10. 'INF' → logprob: -15.349085807800293

Token 109: ' (' (ID: 350)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.09200182557106018
    2. '10' → logprob: -3.0920019149780273
    3. '1' → logprob: -3.8420019149780273
    4. 'int' → logprob: -4.592001914978027
    5. ' float' → logprob: -4.967001914978027
    6. ' ' → logprob: -6.092001914978027
    7. '922' → logprob: -7.342001914978027
    8. '(' → logprob: -7.967001914978027
    9. 'inf' → logprob: -8.217001914978027
    10. '(float' → logprob: -8.342001914978027

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004224515287205577
    2. '10' → logprob: -8.250422477722168
    3. 'float' → logprob: -8.875422477722168
    4. 'int' → logprob: -12.250422477722168
    5. '922' → logprob: -12.500422477722168
    6. ' ' → logprob: -12.625422477722168
    7. '2' → logprob: -13.000422477722168
    8. '9' → logprob: -13.750422477722168
    9. '<<' → logprob: -13.875422477722168
    10. ')' → logprob: -14.000422477722168

Token 111: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.25193992257118225
    2. '<<' → logprob: -1.5019398927688599
    3. '1' → logprob: -11.75193977355957
    4. ' <<
' → logprob: -14.12693977355957
    5. ' ' → logprob: -14.75193977355957
    6. ')' → logprob: -15.25193977355957
    7. 'll' → logprob: -15.37693977355957
    8. ' ' → logprob: -15.50193977355957
    9. ')<<' → logprob: -15.62693977355957
    10. '<<(' → logprob: -15.62693977355957

Token 112: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '60' → logprob: -0.03757660463452339
    2. '63' → logprob: -3.537576675415039
    3. '62' → logprob: -5.037576675415039
    4. '61' → logprob: -6.662576675415039
    5. '59' → logprob: -10.912576675415039
    6. '64' → logprob: -12.287576675415039
    7. '53' → logprob: -12.787576675415039
    8. '55' → logprob: -13.287576675415039
    9. '58' → logprob: -14.912576675415039
    10. '50' → logprob: -15.287576675415039

Token 113: '63' (ID: 8876)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.024257808923721313
    2. '63' → logprob: -3.7742578983306885
    3. '62' → logprob: -7.024257659912109
    4. '61' → logprob: -9.14925765991211
    5. '59' → logprob: -11.64925765991211
    6. '64' → logprob: -12.27425765991211
    7. '50' → logprob: -13.89925765991211
    8. '53' → logprob: -14.77425765991211
    9. '58' → logprob: -14.89925765991211
    10. '55' → logprob: -15.02425765991211

Token 114: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.3120038501219824e-05
    2. ')-' → logprob: -10.125053405761719
    3. ' )' → logprob: -11.250053405761719
    4. '-' → logprob: -16.87505340576172
    5. '）' → logprob: -18.50005340576172
    6. ' -' → logprob: -18.75005340576172
    7. '-)' → logprob: -18.87505340576172
    8. ')n' → logprob: -19.00005340576172
    9. 'n' → logprob: -19.50005340576172
    10. '()' → logprob: -19.62505340576172

Token 115: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18087679147720337
    2. ' -' → logprob: -1.8058767318725586
    3. ')' → logprob: -6.805876731872559
    4. ')-' → logprob: -11.055876731872559
    5. '-)' → logprob: -12.180876731872559
    6. ' )' → logprob: -14.055876731872559
    7. '1' → logprob: -14.805876731872559
    8. '```' → logprob: -15.180876731872559
    9. '()-' → logprob: -15.430876731872559
    10. 'minus' → logprob: -15.555876731872559

Token 116: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '```' → logprob: -19.375019073486328
    4. '  ' → logprob: -20.437519073486328
    5. '{' → logprob: -20.625019073486328
    6. '...' → logprob: -20.687519073486328
    7. '11' → logprob: -20.750019073486328
    8. '１' → logprob: -20.750019073486328
    9. ' ' → logprob: -20.812519073486328
    10. '۱' → logprob: -20.875019073486328

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -18.875001907348633
    4. '{' → logprob: -19.562501907348633
    5. '11' → logprob: -19.937501907348633
    6. '

' → logprob: -20.250001907348633
    7. '111' → logprob: -20.500001907348633
    8. '2' → logprob: -20.562501907348633
    9. '   ' → logprob: -20.625001907348633
    10. '１' → logprob: -20.687501907348633

Token 118: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004460147116333246
    2. '

' → logprob: -6.129460334777832
    3. '
' → logprob: -7.379460334777832
    4. '#' → logprob: -7.879460334777832
    5. ')' → logprob: -7.879460334777832
    6. '\n' → logprob: -7.879460334777832
    7. 'newline' → logprob: -9.129460334777832
    8. '```' → logprob: -9.504460334777832
    9. ' 
' → logprob: -9.754460334777832
    10. '' → logprob: -9.754460334777832

Token 119: 'N' (ID: 45)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.6428934335708618
    2. 'def' → logprob: -0.8928934335708618
    3. 'class' → logprob: -3.6428933143615723
    4. '#' → logprob: -4.142893314361572
    5. ')' → logprob: -4.142893314361572
    6. 'mod' → logprob: -6.392893314361572
    7. 'N' → logprob: -6.642893314361572
    8. 'MAX' → logprob: -7.017893314361572
    9. 'DP' → logprob: -7.142893314361572
    10. 'DEBUG' → logprob: -8.01789379119873

Token 120: 'IL' (ID: 2654)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23497962951660156
    2. '=' → logprob: -1.6099796295166016
    3. ',' → logprob: -4.859979629516602
    4. ' ' → logprob: -6.484979629516602
    5. '_' → logprob: -8.984979629516602
    6. '  ' → logprob: -10.109979629516602
    7. ' ,' → logprob: -10.234979629516602
    8. '   ' → logprob: -10.984979629516602
    9. 'um' → logprob: -12.234979629516602
    10. ' =
' → logprob: -12.734979629516602

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38694286346435547
    2. '=' → logprob: -1.1369428634643555
    3. '=-' → logprob: -10.136942863464355
    4. '=None' → logprob: -11.136942863464355
    5. ',' → logprob: -11.636942863464355
    6. '_' → logprob: -13.261942863464355
    7. ':' → logprob: -13.261942863464355
    8. 'L' → logprob: -14.011942863464355
    9. ' ' → logprob: -14.386942863464355
    10. ')' → logprob: -14.886942863464355

Token 122: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7695140242576599
    2. '-' → logprob: -0.8945140242576599
    3. ' None' → logprob: -2.2695140838623047
    4. 'None' → logprob: -4.144514083862305
    5. ' ' → logprob: -5.019514083862305
    6. '-n' → logprob: -7.269514083862305
    7. '-none' → logprob: -7.394514083862305
    8. '0' → logprob: -7.769514083862305
    9. ' ' → logprob: -9.644514083862305
    10. '_None' → logprob: -10.144514083862305

Token 123: 'LIN' (ID: 61147)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. '(' → logprob: -12.625008583068848
    3. '2' → logprob: -13.250008583068848
    4. ' ' → logprob: -13.375008583068848
    5. '10' → logprob: -14.250008583068848
    6. '922' → logprob: -14.750008583068848
    7. ' (' → logprob: -15.750008583068848
    8. '.' → logprob: -16.37500762939453
    9. '<|end|>' → logprob: -16.50000762939453
    10. '!' → logprob: -17.00000762939453

Token 124: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.34854739904403687
    2. 'K' → logprob: -1.5985474586486816
    3. 'E' → logprob: -2.9735474586486816
    4. 'T' → logprob: -3.2235474586486816
    5. '1' → logprob: -7.348547458648682
    6. 'FT' → logprob: -8.473546981811523
    7. '```' → logprob: -9.848546981811523
    8. 'EF' → logprob: -10.098546981811523
    9. 'IT' → logprob: -10.598546981811523
    10. 'k' → logprob: -10.973546981811523

Token 125: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6569459438323975
    2. '

' → logprob: -1.5319459438323975
    3. 'def' → logprob: -2.7819459438323975
    4. '#' → logprob: -2.9069459438323975
    5. 'class' → logprob: -3.0319459438323975
    6. ')' → logprob: -3.9069459438323975
    7. '+' → logprob: -4.281946182250977
    8. '1' → logprob: -4.406946182250977
    9. '0' → logprob: -4.531946182250977
    10. '
' → logprob: -4.531946182250977

Token 126: 'MOD' (ID: 52135)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14376674592494965
    2. '

' → logprob: -2.6437666416168213
    3. '#' → logprob: -3.8937666416168213
    4. '<|end|>' → logprob: -4.6437668800354
    5. '0' → logprob: -5.1437668800354
    6. 'class' → logprob: -5.6437668800354
    7. 'def' → logprob: -5.7687668800354
    8. ' 

' → logprob: -5.8937668800354
    9. '
' → logprob: -6.0187668800354
    10. '1' → logprob: -6.0187668800354

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5063855051994324
    2. ' ' → logprob: -1.1313855648040771
    3. '=' → logprob: -2.631385564804077
    4. '_' → logprob: -6.381385326385498
    5. ' ,' → logprob: -7.756385326385498
    6. ',' → logprob: -8.256385803222656
    7. ' _' → logprob: -9.131385803222656
    8. ' )' → logprob: -9.506385803222656
    9. ')' → logprob: -10.381385803222656
    10. '  ' → logprob: -10.631385803222656

Token 128: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47581395506858826
    2. '10' → logprob: -0.9758139848709106
    3. '100' → logprob: -6.600813865661621
    4. '998' → logprob: -8.100813865661621
    5. '1' → logprob: -9.600813865661621
    6. 'int' → logprob: -13.975813865661621
    7. ' 
' → logprob: -14.100813865661621
    8. '9' → logprob: -14.475813865661621
    9. '999' → logprob: -14.600813865661621
    10. ' (' → logprob: -14.600813865661621

Token 129: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10198963433504105
    2. '100' → logprob: -2.35198974609375
    3. '998' → logprob: -6.35198974609375
    4. '1' → logprob: -10.85198974609375
    5. ' ' → logprob: -11.35198974609375
    6. '(' → logprob: -11.97698974609375
    7. 'int' → logprob: -14.97698974609375
    8. '999' → logprob: -15.10198974609375
    9. '987' → logprob: -17.10198974609375
    10. '2' → logprob: -17.22698974609375

Token 130: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.07599509507417679
    2. '000' → logprob: -2.9509952068328857
    3. '09' → logprob: -3.9509952068328857
    4. '**' → logprob: -6.825994968414307
    5. '00' → logprob: -8.325995445251465
    6. '009' → logprob: -8.450995445251465
    7. ' ' → logprob: -9.325995445251465
    8. '007' → logprob: -11.950995445251465
    9. '_' → logprob: -12.325995445251465
    10. '+' → logprob: -12.575995445251465

Token 131: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -9.088346359931165e-07
    2. '09' → logprob: -14.125000953674316
    3. ' ' → logprob: -16.375
    4. '+' → logprob: -19.5
    5. '```' → logprob: -19.625
    6. '
' → logprob: -20.625
    7. '９' → logprob: -21.0
    8. '   ' → logprob: -21.125
    9. '10' → logprob: -23.0
    10. '  ' → logprob: -23.125

Token 132: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -15.25
    3. '```' → logprob: -19.25
    4. ' ' → logprob: -20.125
    5. '９' → logprob: -20.125
    6. '+' → logprob: -20.25
    7. '10' → logprob: -20.625
    8. '
' → logprob: -20.75
    9. '19' → logprob: -21.875
    10. '   ' → logprob: -22.625

Token 133: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009575550211593509
    2. ' +' → logprob: -7.000957489013672
    3. '7' → logprob: -10.000957489013672
    4. '＋' → logprob: -14.500957489013672
    5. '+
' → logprob: -16.125957489013672
    6. 'plus' → logprob: -17.500957489013672
    7. ' plus' → logprob: -17.875957489013672
    8. ' ' → logprob: -18.250957489013672
    9. '```' → logprob: -18.625957489013672
    10. ' ' → logprob: -18.750957489013672

Token 134: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '+' → logprob: -19.75
    4. '７' → logprob: -21.875
    5. '07' → logprob: -22.5
    6. '   ' → logprob: -22.75
    7. '```' → logprob: -22.75
    8. '9' → logprob: -23.875
    9. '  ' → logprob: -24.0
    10. '' → logprob: -24.0

Token 135: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '７' → logprob: -21.875
    3. ' ' → logprob: -22.25
    4. '+' → logprob: -22.375
    5. '9' → logprob: -22.75
    6. '07' → logprob: -22.75
    7. '

' → logprob: -23.625
    8. '```' → logprob: -24.25
    9. '   ' → logprob: -24.375
    10. '
' → logprob: -25.25

Token 136: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4937167465686798
    2. '
' → logprob: -0.9937167167663574
    3. '<|end|>' → logprob: -4.993716716766357
    4. 'def' → logprob: -5.618716716766357
    5. '


' → logprob: -5.868716716766357
    6. '' → logprob: -6.743716716766357
    7. ' 

' → logprob: -6.868716716766357
    8. '
' → logprob: -7.243716716766357
    9. '```' → logprob: -7.618716716766357
    10. '#' → logprob: -7.743716716766357

Token 137: 'MG' (ID: 37091)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6374710202217102
    2. '

' → logprob: -0.7624710202217102
    3. 'def' → logprob: -6.1374711990356445
    4. '
' → logprob: -6.3874711990356445
    5. '' → logprob: -8.387471199035645
    6. 'class' → logprob: -8.512471199035645
    7. '


' → logprob: -8.762471199035645
    8. '
 
' → logprob: -9.887471199035645
    9. '
    
' → logprob: -10.012471199035645
    10. '\n' → logprob: -10.012471199035645

Token 138: 'N' (ID: 45)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.28529003262519836
    2. 'OD' → logprob: -1.535290002822876
    3. 'D' → logprob: -4.035290241241455
    4. 'T' → logprob: -5.660290241241455
    5. '=' → logprob: -6.285290241241455
    6. 'ODE' → logprob: -6.410290241241455
    7. 'C' → logprob: -7.035290241241455
    8. 'L' → logprob: -7.660290241241455
    9. 'R' → logprob: -7.660290241241455
    10. 'MOD' → logprob: -7.660290241241455

Token 139: ' =' (ID: 314)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.017233852297067642
    2. '=' → logprob: -5.392233848571777
    3. 'IT' → logprob: -5.517233848571777
    4. 'E' → logprob: -6.142233848571777
    5. 'IC' → logprob: -6.642233848571777
    6. ' =' → logprob: -6.767233848571777
    7. 'I' → logprob: -6.767233848571777
    8. 'ET' → logprob: -7.142233848571777
    9. 'O' → logprob: -7.517233848571777
    10. 'D' → logprob: -8.767233848571777

Token 140: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.22273387014865875
    2. '100' → logprob: -2.347733974456787
    3. ' ' → logprob: -2.597733974456787
    4. '998' → logprob: -4.972733974456787
    5. '2' → logprob: -5.222733974456787
    6. '20' → logprob: -5.722733974456787
    7. 'int' → logprob: -6.222733974456787
    8. '1' → logprob: -6.347733974456787
    9. '0' → logprob: -6.347733974456787
    10. '[]' → logprob: -6.847733974456787

Token 141: '4' (ID: 19)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07157854735851288
    2. '998' → logprob: -3.1965785026550293
    3. '100' → logprob: -4.446578502655029
    4. '2' → logprob: -5.446578502655029
    5. 'int' → logprob: -6.196578502655029
    6. '20' → logprob: -6.321578502655029
    7. '(' → logprob: -6.321578502655029
    8. '3' → logprob: -6.821578502655029
    9. '1' → logprob: -6.946578502655029
    10. '0' → logprob: -7.571578502655029

Token 142: '

' (ID: 279)
  Prédit: '096'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '096' → logprob: -0.6460679173469543
    2. '0' → logprob: -1.0210678577423096
    3. '2' → logprob: -3.6460678577423096
    4. '5' → logprob: -3.8960678577423096
    5. '56' → logprob: -4.896068096160889
    6. '8' → logprob: -5.146068096160889
    7. '3' → logprob: -5.271068096160889
    8. '7' → logprob: -5.271068096160889
    9. '1' → logprob: -5.396068096160889
    10. '16' → logprob: -5.646068096160889

Token 143: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11620032787322998
    2. '
' → logprob: -2.7412004470825195
    3. 'class' → logprob: -3.3662004470825195
    4. '

' → logprob: -5.8662004470825195
    5. '#' → logprob: -5.9912004470825195
    6. 'n' → logprob: -5.9912004470825195
    7. 'd' → logprob: -7.2412004470825195
    8. ' 
' → logprob: -8.24120044708252
    9. '\' → logprob: -8.36620044708252
    10. '' → logprob: -8.61620044708252

Token 144: ' AST' (ID: 41607)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.12425049394369125
    2. ' solve' → logprob: -2.2492504119873047
    3. ' factorial' → logprob: -5.499250411987305
    4. ' dfs' → logprob: -5.749250411987305
    5. '_' → logprob: -6.624250411987305
    6. ' factor' → logprob: -7.624250411987305
    7. 'solve' → logprob: -7.874250411987305
    8. 'main' → logprob: -8.374250411987305
    9. '_main' → logprob: -8.499250411987305
    10. ' gcd' → logprob: -8.749250411987305

Token 145: '(exp' (ID: 51367)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.8126959204673767
    2. ':' → logprob: -1.0626959800720215
    3. ' =' → logprob: -2.9376959800720215
    4. '():' → logprob: -3.9376959800720215
    5. '(' → logprob: -4.1876959800720215
    6. 'ER' → logprob: -4.3126959800720215
    7. 'er' → logprob: -4.3126959800720215
    8. 'Parser' → logprob: -4.6876959800720215
    9. '_node' → logprob: -4.6876959800720215
    10. 'Eval' → logprob: -5.0626959800720215

Token 146: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030098605901002884
    2. ')' → logprob: -4.2800984382629395
    3. ',' → logprob: -4.5300984382629395
    4. '):
' → logprob: -6.0300984382629395
    5. 'r' → logprob: -6.1550984382629395
    6. 'ress' → logprob: -9.405098915100098
    7. '(' → logprob: -9.530098915100098
    8. ':' → logprob: -9.905098915100098
    9. '[' → logprob: -9.905098915100098
    10. 's' → logprob: -10.155098915100098

Token 147: ' bool' (ID: 3792)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.00991828739643097
    2. ' str' → logprob: -4.884918212890625
    3. ')' → logprob: -6.759918212890625
    4. 'object' → logprob: -6.884918212890625
    5. 'int' → logprob: -10.384918212890625
    6. '[str' → logprob: -10.384918212890625
    7. 'list' → logprob: -11.134918212890625
    8. ' ' → logprob: -11.759918212890625
    9. ' object' → logprob: -11.759918212890625
    10. '):' → logprob: -12.009918212890625

Token 148: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.43821173906326294
    2. ')' → logprob: -1.0632116794586182
    3. ',' → logprob: -4.688211917877197
    4. ':' → logprob: -9.188211441040039
    5. '):
' → logprob: -9.563211441040039
    6. ')->' → logprob: -10.313211441040039
    7. ' ):' → logprob: -11.188211441040039
    8. '[' → logprob: -11.438211441040039
    9. '=' → logprob: -11.813211441040039
    10. ' )' → logprob: -12.688211441040039

Token 149: ' msg' (ID: 6981)
  Prédit: 'msg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'msg' → logprob: -0.12085606157779694
    2. ' msg' → logprob: -2.6208560466766357
    3. 'message' → logprob: -3.6208560466766357
    4. ' message' → logprob: -4.495856285095215
    5. 'err' → logprob: -7.120856285095215
    6. 'mes' → logprob: -8.120856285095215
    7. 'errmsg' → logprob: -8.245856285095215
    8. '   ' → logprob: -8.620856285095215
    9. ' ' → logprob: -8.745856285095215
    10. 'expr' → logprob: -9.245856285095215

Token 150: ':' (ID: 25)
  Prédit: '=None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.4075705409049988
    2. '=' → logprob: -1.5325706005096436
    3. '):' → logprob: -2.4075706005096436
    4. '='' → logprob: -3.6575706005096436
    5. ':' → logprob: -6.6575703620910645
    6. '="' → logprob: -6.7825703620910645
    7. ')' → logprob: -8.782570838928223
    8. '=False' → logprob: -9.032570838928223
    9. '=[]' → logprob: -10.157570838928223
    10. 'or' → logprob: -11.032570838928223

Token 151: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.285252183675766
    2. 'str' → logprob: -2.035252094268799
    3. ')' → logprob: -3.910252094268799
    4. ''' → logprob: -4.035252094268799
    5. ' msg' → logprob: -4.035252094268799
    6. ' None' → logprob: -4.035252094268799
    7. 'msg' → logprob: -4.035252094268799
    8. 'None' → logprob: -4.535252094268799
    9. ' ' → logprob: -5.910252094268799
    10. '):' → logprob: -5.910252094268799

Token 152: ' =' (ID: 314)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16082952916622162
    2. ')' → logprob: -1.9108295440673828
    3. '):
' → logprob: -8.285829544067383
    4. '=' → logprob: -8.535829544067383
    5. '=None' → logprob: -9.660829544067383
    6. ')=' → logprob: -10.660829544067383
    7. ':' → logprob: -10.910829544067383
    8. ')->' → logprob: -10.910829544067383
    9. ' ):' → logprob: -11.785829544067383
    10. '):
' → logprob: -11.910829544067383

Token 153: ' "")' (ID: 23805)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4615548551082611
    2. ''' → logprob: -1.0865548849105835
    3. 'None' → logprob: -3.586554765701294
    4. ' '')' → logprob: -6.461555004119873
    5. ' "")' → logprob: -6.836555004119873
    6. ' None' → logprob: -7.836555004119873
    7. ')' → logprob: -8.086554527282715
    8. '""' → logprob: -8.086554527282715
    9. '"",' → logprob: -8.336554527282715
    10. '   ' → logprob: -8.461554527282715

Token 154: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018744789122138172
    2. '):' → logprob: -8.750187873840332
    3. '->' → logprob: -11.375187873840332
    4. ':
' → logprob: -12.000187873840332
    5. ' ->' → logprob: -12.750187873840332
    6. '():' → logprob: -13.125187873840332
    7. ' :' → logprob: -13.250187873840332
    8. ')' → logprob: -13.875187873840332
    9. ':**' → logprob: -13.875187873840332
    10. ':return' → logprob: -14.125187873840332

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001144026406109333
    2. ' if' → logprob: -7.126143932342529
    3. 'assert' → logprob: -9.126144409179688
    4. 'if' → logprob: -9.126144409179688
    5. ' assert' → logprob: -9.751144409179688
    6. '	assert' → logprob: -11.001144409179688
    7. '
' → logprob: -11.001144409179688
    8. '    
' → logprob: -11.251144409179688
    9. '	if' → logprob: -11.626144409179688
    10. '   ' → logprob: -13.376144409179688

Token 156: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6537256240844727
    2. '   ' → logprob: -1.2787256240844727
    3. ' if' → logprob: -1.6537256240844727
    4. 'assert' → logprob: -4.778725624084473
    5. ' assert' → logprob: -6.403725624084473
    6. ' ' → logprob: -9.903725624084473
    7. '	if' → logprob: -10.778725624084473
    8. '    ' → logprob: -11.153725624084473
    9. 'import' → logprob: -11.903725624084473
    10. '  ' → logprob: -12.903725624084473

Token 157: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.14273075759410858
    2. ' not' → logprob: -2.017730712890625
    3. 'exp' → logprob: -10.767730712890625
    4. '   ' → logprob: -10.892730712890625
    5. '	not' → logprob: -11.767730712890625
    6. '(not' → logprob: -12.392730712890625
    7. '
' → logprob: -13.267730712890625
    8. ' ' → logprob: -13.767730712890625
    9. '!' → logprob: -14.892730712890625
    10. ' ' → logprob: -15.642730712890625

Token 158: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.0205531008541584
    2. ' exp' → logprob: -3.8955531120300293
    3. '(exp' → logprob: -11.520552635192871
    4. '	exp' → logprob: -14.520552635192871
    5. ' ' → logprob: -15.020552635192871
    6. ' ' → logprob: -16.145553588867188
    7. '.exp' → logprob: -16.145553588867188
    8. '_exp' → logprob: -16.145553588867188
    9. '   ' → logprob: -16.520553588867188
    10. '
' → logprob: -17.145553588867188

Token 159: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06198270246386528
    2. ':
' → logprob: -2.8119826316833496
    3. ':return' → logprob: -11.686983108520508
    4. ' :' → logprob: -12.686983108520508
    5. ':
' → logprob: -13.686983108520508
    6. '   ' → logprob: -14.061983108520508
    7. ' :
' → logprob: -14.561983108520508
    8. ' or' → logprob: -15.436983108520508
    9. 'raise' → logprob: -15.436983108520508
    10. ':

' → logprob: -15.686983108520508

Token 160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08978071808815002
    2. ':' → logprob: -3.089780807495117
    3. 'raise' → logprob: -3.589780807495117
    4. ' raise' → logprob: -4.964780807495117
    5. ':
' → logprob: -5.589780807495117
    6. '
' → logprob: -6.964780807495117
    7. ',' → logprob: -7.589780807495117
    8. '   ' → logprob: -8.089780807495117
    9. ' :' → logprob: -9.839780807495117
    10. '	raise' → logprob: -9.964780807495117

Token 161: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.2570960521697998
    2. ' raise' → logprob: -1.5070960521697998
    3. '       ' → logprob: -5.382096290588379
    4. 'assert' → logprob: -7.632096290588379
    5. 'print' → logprob: -10.632096290588379
    6. '	raise' → logprob: -11.257096290588379
    7. 'sys' → logprob: -11.382096290588379
    8. '_raise' → logprob: -11.882096290588379
    9. ' assert' → logprob: -12.257096290588379
    10. ' sys' → logprob: -12.632096290588379

Token 162: ' Assertion' (ID: 97382)
  Prédit: 'Assertion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Assertion' → logprob: -7.862962229410186e-05
    2. ' Assertion' → logprob: -9.500078201293945
    3. 'Value' → logprob: -13.125078201293945
    4. 'Assert' → logprob: -13.750078201293945
    5. 'assert' → logprob: -15.000078201293945
    6. 'Exception' → logprob: -15.625078201293945
    7. 'Runtime' → logprob: -16.125078201293945
    8. '_assert' → logprob: -17.750078201293945
    9. 'Assertions' → logprob: -18.000078201293945
    10. 'ASSERT' → logprob: -20.375078201293945

Token 163: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: 0.0
    2. 'rror' → logprob: -19.125
    3. 'Erro' → logprob: -19.375
    4. 'E' → logprob: -21.125
    5. 'Er' → logprob: -21.125
    6. ' Error' → logprob: -21.25
    7. 'error' → logprob: -21.875
    8. '	Error' → logprob: -22.0
    9. '_Error' → logprob: -22.75
    10. 'Err' → logprob: -22.75

Token 164: '(msg' (ID: 15182)
  Prédit: '(msg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(msg' → logprob: -0.001946725882589817
    2. 'msg' → logprob: -7.001946926116943
    3. '(' → logprob: -7.126946926116943
    4. ' msg' → logprob: -8.626946449279785
    5. ',msg' → logprob: -10.751946449279785
    6. '[msg' → logprob: -11.001946449279785
    7. ' (' → logprob: -11.626946449279785
    8. '(
' → logprob: -13.126946449279785
    9. '	msg' → logprob: -13.251946449279785
    10. ',' → logprob: -14.376946449279785

Token 165: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1875571544806007e-05
    2. ')
' → logprob: -11.875011444091797
    3. ' )' → logprob: -12.750011444091797
    4. '   ' → logprob: -13.375011444091797
    5. '")' → logprob: -15.750011444091797
    6. '())' → logprob: -16.500011444091797
    7. ')`' → logprob: -17.125011444091797
    8. '))' → logprob: -17.375011444091797
    9. '`)' → logprob: -17.625011444091797
    10. '')' → logprob: -17.625011444091797

Token 166: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4441077709197998
    2. 'def' → logprob: -1.5691077709197998
    3. '<|end|>' → logprob: -2.0691077709198
    4. '#' → logprob: -4.819108009338379
    5. ')' → logprob: -4.944108009338379
    6. '

' → logprob: -5.819108009338379
    7. '<|end|>' → logprob: -6.819108009338379
    8. '    
' → logprob: -7.194108009338379
    9. ' 
' → logprob: -7.319108009338379
    10. '\n' → logprob: -7.444108009338379

Token 167: ' T' (ID: 353)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03912905976176262
    2. 'main' → logprob: -3.9141290187835693
    3. ' solve' → logprob: -4.789129257202148
    4. ' dfs' → logprob: -6.039129257202148
    5. ' gcd' → logprob: -6.539129257202148
    6. ' pow' → logprob: -7.039129257202148
    7. 'solve' → logprob: -7.414129257202148
    8. ' factorial' → logprob: -7.539129257202148
    9. ' factor' → logprob: -7.664129257202148
    10. ' input' → logprob: -7.789129257202148

Token 168: 'AST' (ID: 10141)
  Prédit: 'ype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ype' → logprob: -1.2982598543167114
    2. 'r' → logprob: -1.7982598543167114
    3. 'est' → logprob: -2.298259735107422
    4. 'ry' → logprob: -2.423259735107422
    5. 'YPE' → logprob: -2.923259735107422
    6. 'ree' → logprob: -3.048259735107422
    7. 'rans' → logprob: -3.423259735107422
    8. 'arget' → logprob: -3.548259735107422
    9. 'yp' → logprob: -3.673259735107422
    10. 'O' → logprob: -4.173259735107422

Token 169: '(exp' (ID: 51367)
  Prédit: '(exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(exp' → logprob: -0.005645644385367632
    2. '(' → logprob: -5.505645751953125
    3. '(expr' → logprob: -7.255645751953125
    4. '(assert' → logprob: -9.505645751953125
    5. '(bool' → logprob: -9.630645751953125
    6. 'exp' → logprob: -9.630645751953125
    7. '(e' → logprob: -10.005645751953125
    8. '(ex' → logprob: -10.130645751953125
    9. '(ast' → logprob: -10.130645751953125
    10. '(expression' → logprob: -10.130645751953125

Token 170: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06289566308259964
    2. ',' → logprob: -2.8128957748413086
    3. '(exp' → logprob: -7.812895774841309
    4. '):' → logprob: -8.312895774841309
    5. 'exp' → logprob: -8.562895774841309
    6. ' :' → logprob: -10.562895774841309
    7. ')' → logprob: -10.937895774841309
    8. '(bool' → logprob: -12.062895774841309
    9. '(' → logprob: -12.187895774841309
    10. '[' → logprob: -12.562895774841309

Token 171: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.10380714386701584
    2. ' bool' → logprob: -2.353807210922241
    3. 'exp' → logprob: -6.728806972503662
    4. 'str' → logprob: -7.978806972503662
    5. 'True' → logprob: -7.978806972503662
    6. ' op' → logprob: -8.35380744934082
    7. 'int' → logprob: -8.47880744934082
    8. '(bool' → logprob: -8.72880744934082
    9. ' str' → logprob: -8.97880744934082
    10. 'List' → logprob: -9.35380744934082

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012929741060361266
    2. '):' → logprob: -6.876293182373047
    3. ')' → logprob: -8.876293182373047
    4. ' ,' → logprob: -10.001293182373047
    5. ',msg' → logprob: -10.251293182373047
    6. '):
' → logprob: -10.626293182373047
    7. ',
' → logprob: -12.126293182373047
    8. '=' → logprob: -13.376293182373047
    9. 'msg' → logprob: -13.876293182373047
    10. ':' → logprob: -14.001293182373047

Token 173: ' msg' (ID: 6981)
  Prédit: 'msg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'msg' → logprob: -0.2520056366920471
    2. ' msg' → logprob: -1.5020055770874023
    3. 'msgs' → logprob: -11.002005577087402
    4. ')' → logprob: -11.877005577087402
    5. 'ms' → logprob: -12.127005577087402
    6. '	msg' → logprob: -12.627005577087402
    7. ' ' → logprob: -12.752005577087402
    8. 'func' → logprob: -12.877005577087402
    9. 'n' → logprob: -13.002005577087402
    10. ' msgs' → logprob: -13.252005577087402

Token 174: '="' (ID: 580)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10470085591077805
    2. ' =' → logprob: -2.354700803756714
    3. ':' → logprob: -5.479701042175293
    4. '=None' → logprob: -8.854701042175293
    5. '="' → logprob: -9.604701042175293
    6. '=""' → logprob: -10.104701042175293
    7. ')' → logprob: -10.479701042175293
    8. '=''' → logprob: -11.604701042175293
    9. '='' → logprob: -12.229701042175293
    10. ' ' → logprob: -12.354701042175293

Token 175: '"):
' (ID: 33645)
  Prédit: '"):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"):' → logprob: -0.051662396639585495
    2. '"):
' → logprob: -3.1766624450683594
    3. '")' → logprob: -4.801662445068359
    4. '"):
' → logprob: -8.67666244506836
    5. '"' → logprob: -9.92666244506836
    6. '""' → logprob: -10.05166244506836
    7. '):' → logprob: -10.17666244506836
    8. ':' → logprob: -10.67666244506836
    9. ''):' → logprob: -11.17666244506836
    10. ' "' → logprob: -11.42666244506836

Token 176: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23630233108997345
    2. '   ' → logprob: -1.736302375793457
    3. ':
' → logprob: -3.861302375793457
    4. ')' → logprob: -5.986302375793457
    5. '):' → logprob: -6.111302375793457
    6. '):
' → logprob: -6.111302375793457
    7. 'AST' → logprob: -6.611302375793457
    8. ' AST' → logprob: -6.736302375793457
    9. '_AST' → logprob: -6.736302375793457
    10. '(AST' → logprob: -7.361302375793457

Token 177: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0618029832839966
    2. '   ' → logprob: -1.3118029832839966
    3. ' AST' → logprob: -1.3118029832839966
    4. ' assert' → logprob: -2.811802864074707
    5. 'AST' → logprob: -3.686802864074707
    6. 'if' (adapté à ' if') → logprob: -4.061802864074707
    7. '    ' → logprob: -5.436802864074707
    8. 'assert' → logprob: -5.561802864074707
    9. ' try' → logprob: -6.186802864074707
    10. 'try' → logprob: -6.936802864074707

Token 178: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.08993469178676605
    2. 'not' → logprob: -2.4649345874786377
    3. ' __' → logprob: -7.714934825897217
    4. 'exp' → logprob: -8.464934349060059
    5. '__' → logprob: -8.839934349060059
    6. ' exp' → logprob: -9.214934349060059
    7. 'type' → logprob: -11.089934349060059
    8. ' ' → logprob: -11.089934349060059
    9. ' type' → logprob: -11.214934349060059
    10. ' isinstance' → logprob: -11.464934349060059

Token 179: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.47414469718933105
    2. ' exp' → logprob: -0.974144697189331
    3. '__' → logprob: -10.59914493560791
    4. '(exp' → logprob: -11.22414493560791
    5. ' isinstance' → logprob: -12.09914493560791
    6. ' ' → logprob: -12.22414493560791
    7. ' __' → logprob: -13.09914493560791
    8. '	exp' → logprob: -13.28664493560791
    9. 'type' → logprob: -13.34914493560791
    10. 'not' → logprob: -13.53664493560791

Token 180: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011211101897060871
    2. ':
' → logprob: -4.511210918426514
    3. ' :' → logprob: -9.011211395263672
    4. 'raise' → logprob: -11.136211395263672
    5. ':return' → logprob: -11.886211395263672
    6. '       ' → logprob: -12.261211395263672
    7. '   ' → logprob: -12.261211395263672
    8. ' and' → logprob: -13.011211395263672
    9. ':
' → logprob: -13.136211395263672
    10. ' or' → logprob: -13.261211395263672

Token 181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.620120108127594
    2. 'raise' → logprob: -1.3701200485229492
    3. ' raise' → logprob: -1.6201200485229492
    4. ' return' → logprob: -5.870120048522949
    5. ' AST' → logprob: -5.870120048522949
    6. 'return' → logprob: -6.370120048522949
    7. '   ' → logprob: -6.870120048522949
    8. 'AST' → logprob: -6.870120048522949
    9. '	raise' → logprob: -8.37012004852295
    10. 'assert' → logprob: -8.99512004852295

Token 182: ' print' (ID: 2123)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.1872273087501526
    2. ' return' → logprob: -2.562227249145508
    3. 'raise' → logprob: -2.937227249145508
    4. 'return' → logprob: -4.437227249145508
    5. ' print' → logprob: -5.062227249145508
    6. '   ' → logprob: -5.062227249145508
    7. ' assert' → logprob: -5.812227249145508
    8. 'print' (adapté à ' print') → logprob: -5.812227249145508
    9. 'assert' → logprob: -6.187227249145508
    10. '    ' → logprob: -6.187227249145508

Token 183: '(f' (ID: 1526)
  Prédit: '(msg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(msg' → logprob: -0.028620032593607903
    2. '(f' → logprob: -3.7786200046539307
    3. '("' → logprob: -5.40362024307251
    4. '(' → logprob: -7.15362024307251
    5. '()' → logprob: -10.153619766235352
    6. '("[' → logprob: -11.653619766235352
    7. '(ms' → logprob: -11.778619766235352
    8. '('' → logprob: -12.028619766235352
    9. 'msg' → logprob: -12.778619766235352
    10. '("")' → logprob: -13.153619766235352

Token 184: '"T' (ID: 130630)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.22455789148807526
    2. '(f' → logprob: -2.349557876586914
    3. '"[' → logprob: -3.849557876586914
    4. 'Assertion' → logprob: -3.849557876586914
    5. '"T' → logprob: -3.849557876586914
    6. ''' → logprob: -4.474557876586914
    7. '("' → logprob: -4.974557876586914
    8. ' f' → logprob: -5.224557876586914
    9. 'f' → logprob: -5.599557876586914
    10. ' Assertion' → logprob: -5.724557876586914

Token 185: 'Assertion' (ID: 80434)
  Prédit: 'AST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AST' → logprob: -0.37306371331214905
    2. 'EST' → logprob: -1.8730636835098267
    3. 'est' → logprob: -2.373063802719116
    4. 'esting' → logprob: -3.998063802719116
    5. 'A' → logprob: -4.498063564300537
    6. 'Assertion' → logprob: -4.873063564300537
    7. ' AST' → logprob: -5.873063564300537
    8. 'erm' → logprob: -6.123063564300537
    9. ' Assertion' → logprob: -6.123063564300537
    10. 'Error' → logprob: -6.248063564300537

Token 186: 'Error' (ID: 2255)
  Prédit: ' failed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' failed' → logprob: -0.10103195905685425
    2. 'ion' → logprob: -3.726032018661499
    3. ' Failed' → logprob: -3.726032018661499
    4. 'failed' → logprob: -4.22603178024292
    5. 'Failed' → logprob: -4.60103178024292
    6. 'Error' → logprob: -4.85103178024292
    7. ':' → logprob: -4.97603178024292
    8. ' failure' → logprob: -6.10103178024292
    9. ' error' → logprob: -6.72603178024292
    10. '{' → logprob: -6.97603178024292

Token 187: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017164701130241156
    2. '{' → logprob: -7.376716613769531
    3. '(msg' → logprob: -7.626716613769531
    4. '({' → logprob: -8.376716613769531
    5. ':{' → logprob: -8.501716613769531
    6. ' :' → logprob: -8.876716613769531
    7. ' {' → logprob: -11.501716613769531
    8. '):' → logprob: -12.376716613769531
    9. '('{' → logprob: -12.751716613769531
    10. '[msg' → logprob: -12.751716613769531

Token 188: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.1271652728319168
    2. '{' → logprob: -2.1271653175354004
    3. ' msg' → logprob: -9.002164840698242
    4. '[msg' → logprob: -9.752164840698242
    5. 'msg' → logprob: -10.002164840698242
    6. '(msg' → logprob: -12.127164840698242
    7. ',msg' → logprob: -13.252164840698242
    8. ')' → logprob: -14.127164840698242
    9. '$msg' → logprob: -14.502164840698242
    10. ' {(' → logprob: -14.627164840698242

Token 189: 'msg' (ID: 6243)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.3878868520259857
    2. 'msg' → logprob: -1.137886881828308
    3. ' {' → logprob: -7.262887001037598
    4. '[msg' → logprob: -8.887887001037598
    5. ' msg' → logprob: -8.887887001037598
    6. '(msg' → logprob: -10.512887001037598
    7. ',msg' → logprob: -12.137887001037598
    8. '$msg' → logprob: -13.137887001037598
    9. '
' → logprob: -14.012887001037598
    10. '	msg' → logprob: -14.137887001037598

Token 190: '}",' (ID: 20115)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.22175541520118713
    2. '}")' → logprob: -2.0967555046081543
    3. ')")' → logprob: -2.5967555046081543
    4. ')' → logprob: -7.096755504608154
    5. '")
' → logprob: -8.096755027770996
    6. ')")
' → logprob: -8.846755027770996
    7. '",' → logprob: -9.346755027770996
    8. ')",' → logprob: -9.846755027770996
    9. '}")
' → logprob: -9.846755027770996
    10. ' )' → logprob: -10.971755027770996

Token 191: ' file' (ID: 1974)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.1437205821275711
    2. ' file' → logprob: -2.0187206268310547
    3. 'flush' → logprob: -7.143720626831055
    4. ' flush' → logprob: -9.268720626831055
    5. ')' → logprob: -9.643720626831055
    6. ' ' → logprob: -11.268720626831055
    7. ')
' → logprob: -11.268720626831055
    8. ',file' → logprob: -11.268720626831055
    9. 'end' → logprob: -11.393720626831055
    10. ' ' → logprob: -11.643720626831055

Token 192: '=sys' (ID: 149200)
  Prédit: '=sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=sys' → logprob: -0.01104935072362423
    2. '=' → logprob: -4.511049270629883
    3. '(sys' → logprob: -14.261049270629883
    4. ' =' → logprob: -14.761049270629883
    5. 'sys' → logprob: -15.636049270629883
    6. '=subprocess' → logprob: -16.386049270629883
    7. ')' → logprob: -16.636049270629883
    8. '=file' → logprob: -16.761049270629883
    9. '=torch' → logprob: -17.511049270629883
    10. '=_' → logprob: -18.011049270629883

Token 193: '.stderr' (ID: 87058)
  Prédit: '.stderr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stderr' → logprob: -0.0001302374730585143
    2. '.stdout' → logprob: -9.125130653381348
    3. '.' → logprob: -11.125130653381348
    4. 'stderr' → logprob: -12.250130653381348
    5. '(stderr' → logprob: -14.000130653381348
    6. '.stdin' → logprob: -15.375130653381348
    7. '.st' → logprob: -15.625130653381348
    8. ' .' → logprob: -16.12512969970703
    9. ' stderr' → logprob: -16.12512969970703
    10. '.exit' → logprob: -16.37512969970703

Token 194: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009881574660539627
    2. ')
' → logprob: -4.634881496429443
    3. '       ' → logprob: -9.259881973266602
    4. '   ' → logprob: -11.384881973266602
    5. ' )' → logprob: -11.634881973266602
    6. ')return' → logprob: -12.259881973266602
    7. ')
' → logprob: -13.634881973266602
    8. ');' → logprob: -14.009881973266602
    9. ')

' → logprob: -14.634881973266602
    10. ' )
' → logprob: -15.009881973266602

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18818099796772003
    2. '   ' → logprob: -1.8131810426712036
    3. '<|end|>' → logprob: -5.563180923461914
    4. 'def' → logprob: -5.688180923461914
    5. 'raise' → logprob: -8.438180923461914
    6. 'import' → logprob: -8.563180923461914
    7. '
' → logprob: -9.313180923461914
    8. ')' → logprob: -9.563180923461914
    9. '#' → logprob: -9.563180923461914
    10. '    ' → logprob: -9.688180923461914

Token 196: ' while' (ID: 2049)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8484444618225098
    2. 'sys' → logprob: -1.3484444618225098
    3. 'exit' → logprob: -1.4734444618225098
    4. ' sys' → logprob: -3.5984444618225098
    5. ' return' → logprob: -4.09844446182251
    6. 'pass' → logprob: -4.34844446182251
    7. 'raise' → logprob: -4.34844446182251
    8. 'import' → logprob: -4.97344446182251
    9. ' exit' → logprob: -5.47344446182251
    10. ' raise' → logprob: -7.34844446182251

Token 197: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.003643191885203123
    2. 'True' → logprob: -5.628643035888672
    3. ' ' → logprob: -10.628643035888672
    4. '(True' → logprob: -11.753643035888672
    5. ' Tru' → logprob: -12.503643035888672
    6. ' ' → logprob: -13.003643035888672
    7. ' False' → logprob: -13.628643035888672
    8. '  ' → logprob: -13.628643035888672
    9. '   ' → logprob: -14.253643035888672
    10. '1' → logprob: -14.503643035888672

Token 198: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6305304169654846
    2. '           ' → logprob: -0.8805304169654846
    3. ' pass' → logprob: -3.75553035736084
    4. ':
' → logprob: -4.63053035736084
    5. 'pass' → logprob: -5.38053035736084
    6. ' :' → logprob: -5.50553035736084
    7. '       ' → logprob: -5.75553035736084
    8. '   ' → logprob: -5.88053035736084
    9. ',' → logprob: -6.00553035736084
    10. '<|end|>' → logprob: -7.38053035736084

Token 199: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.20936869084835052
    2. '           ' → logprob: -1.9593687057495117
    3. 'pass' → logprob: -3.7093687057495117
    4. '       ' → logprob: -3.9593687057495117
    5. '   ' → logprob: -5.709368705749512
    6. '...' → logprob: -7.959368705749512
    7. ' continue' → logprob: -8.584368705749512
    8. '               ' → logprob: -9.084368705749512
    9. '	pass' → logprob: -9.084368705749512
    10. ' ' → logprob: -9.584368705749512

Token 200: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8819855451583862
    2. '<|end|>' → logprob: -1.1319855451583862
    3. 'def' → logprob: -1.5069855451583862
    4. '#' → logprob: -4.131985664367676
    5. '\n' → logprob: -5.006985664367676
    6. '

' → logprob: -5.381985664367676
    7. ' 
' → logprob: -5.381985664367676
    8. '<|end|>' → logprob: -6.256985664367676
    9. '    
' → logprob: -6.506985664367676
    10. '\' → logprob: -6.506985664367676

Token 202: ' E' (ID: 457)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2128879874944687
    2. ' solve' → logprob: -2.83788800239563
    3. ' gcd' → logprob: -3.33788800239563
    4. 'main' → logprob: -3.96288800239563
    5. ' pow' → logprob: -4.837887763977051
    6. ' l' → logprob: -4.837887763977051
    7. ' factorial' → logprob: -4.962887763977051
    8. ' dfs' → logprob: -5.337887763977051
    9. 'pow' → logprob: -5.462887763977051
    10. ' is' → logprob: -5.587887763977051

Token 203: 'PR' (ID: 8621)
  Prédit: 'xp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xp' → logprob: -1.0775049924850464
    2. 'XP' → logprob: -1.4525049924850464
    3. 'RR' → logprob: -1.9525049924850464
    4. 'x' → logprob: -2.452505111694336
    5. 'VAL' → logprob: -3.077505111694336
    6. 'val' → logprob: -3.202505111694336
    7. 'rror' → logprob: -3.327505111694336
    8. 'X' → logprob: -4.327505111694336
    9. 'xit' → logprob: -4.702505111694336
    10. 'R' → logprob: -4.952505111694336

Token 204: '(msg' (ID: 15182)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.08131657540798187
    2. '(' → logprob: -2.7063164710998535
    3. 'ot' → logprob: -6.3313164710998535
    4. 'o' → logprob: -6.3313164710998535
    5. '(int' → logprob: -6.7063164710998535
    6. '(fmt' → logprob: -6.9563164710998535
    7. 'def' → logprob: -7.2063164710998535
    8. '('' → logprob: -7.4563164710998535
    9. '("""' → logprob: -7.4563164710998535
    10. '()' → logprob: -7.8313164710998535

Token 205: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.655657172203064
    2. '=' → logprob: -1.030657172203064
    3. ':' → logprob: -2.2806572914123535
    4. '="' → logprob: -4.5306572914123535
    5. '):
' → logprob: -4.9056572914123535
    6. ' =' → logprob: -7.0306572914123535
    7. '=None' → logprob: -7.2806572914123535
    8. ')' → logprob: -7.5306572914123535
    9. ' :' → logprob: -7.9056572914123535
    10. ' ):' → logprob: -8.280656814575195

Token 206: ' print' (ID: 2123)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.2462930828332901
    2. '   ' → logprob: -1.621293067932129
    3. 'raise' → logprob: -4.621293067932129
    4. ' print' → logprob: -4.746293067932129
    5. 'print' → logprob: -7.996293067932129
    6. '    
' → logprob: -7.996293067932129
    7. '	raise' → logprob: -8.371293067932129
    8. '    ' → logprob: -8.371293067932129
    9. ' 
' → logprob: -8.496293067932129
    10. '
' → logprob: -8.621293067932129

Token 207: '(msg' (ID: 15182)
  Prédit: '(msg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(msg' → logprob: -0.04895862191915512
    2. '(f' → logprob: -3.0489585399627686
    3. '(' → logprob: -7.923958778381348
    4. '((' → logprob: -12.173958778381348
    5. '(sys' → logprob: -14.048958778381348
    6. 'msg' → logprob: -14.298958778381348
    7. '(err' → logprob: -14.673958778381348
    8. '(
' → logprob: -15.173958778381348
    9. '(eval' → logprob: -15.173958778381348
    10. '(stderr' → logprob: -15.298958778381348

Token 208: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00539561128243804
    2. ',' → logprob: -5.255395412445068
    3. ');' → logprob: -9.005395889282227
    4. ',)' → logprob: -11.505395889282227
    5. ' )' → logprob: -11.630395889282227
    6. ',end' → logprob: -11.630395889282227
    7. '())' → logprob: -13.005395889282227
    8. ')`' → logprob: -13.130395889282227
    9. '()' → logprob: -13.505395889282227
    10. '),' → logprob: -13.880395889282227

Token 209: ' file' (ID: 1974)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.0010478160111233592
    2. ' file' → logprob: -7.251047611236572
    3. 'flush' → logprob: -8.00104808807373
    4. 'end' → logprob: -13.25104808807373
    5. ' flush' → logprob: -14.50104808807373
    6. ')' → logprob: -15.75104808807373
    7. ' ' → logprob: -15.87604808807373
    8. 'fl' → logprob: -16.751047134399414
    9. '
' → logprob: -16.876047134399414
    10. ',file' → logprob: -17.251047134399414

Token 210: '=sys' (ID: 149200)
  Prédit: '=sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=sys' → logprob: -1.0206720617134124e-05
    2. '=' → logprob: -11.50001049041748
    3. 'sys' → logprob: -17.000009536743164
    4. '(sys' → logprob: -17.125009536743164
    5. ' =' → logprob: -18.875009536743164
    6. ' sys' → logprob: -18.875009536743164
    7. '=subprocess' → logprob: -19.375009536743164
    8. '	sys' → logprob: -19.375009536743164
    9. '=os' → logprob: -20.250009536743164
    10. '=
' → logprob: -20.625009536743164

Token 211: '.stderr' (ID: 87058)
  Prédit: '.stderr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stderr' → logprob: -1.8789383830153383e-05
    2. '.stdout' → logprob: -11.125019073486328
    3. 'stderr' → logprob: -12.500019073486328
    4. '.stdin' → logprob: -16.375019073486328
    5. ' stderr' → logprob: -16.750019073486328
    6. '.st' → logprob: -16.875019073486328
    7. '(stderr' → logprob: -16.875019073486328
    8. '=sys' → logprob: -17.000019073486328
    9. '.' → logprob: -17.750019073486328
    10. '.std' → logprob: -18.000019073486328

Token 212: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.895480277715251e-06
    2. ' )' → logprob: -11.750008583068848
    3. ');' → logprob: -15.125008583068848
    4. ')`' → logprob: -15.250008583068848
    5. ')
' → logprob: -15.500008583068848
    6. ',' → logprob: -16.500009536743164
    7. '))' → logprob: -16.875009536743164
    8. '),' → logprob: -17.125009536743164
    9. ')}' → logprob: -17.375009536743164
    10. '   ' → logprob: -17.625009536743164

Token 213: 'II' (ID: 6013)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012684457935392857
    2. 'class' → logprob: -5.137684345245361
    3. '
' → logprob: -6.137684345245361
    4. '\n' → logprob: -6.387684345245361
    5. '\' → logprob: -6.887684345245361
    6. '#' → logprob: -7.012684345245361
    7. '

' → logprob: -8.88768482208252
    8. 'n' → logprob: -9.01268482208252
    9. ' 
' → logprob: -9.13768482208252
    10. 'd' → logprob: -9.13768482208252

Token 214: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6960017681121826
    2. 'n' → logprob: -1.1960017681121826
    3. ' =' → logprob: -2.1960017681121826
    4. '()' → logprob: -3.0710017681121826
    5. 'N' → logprob: -4.196002006530762
    6. 'P' → logprob: -4.321002006530762
    7. 'p' → logprob: -4.821002006530762
    8. 'nt' → logprob: -6.321002006530762
    9. 'np' → logprob: -7.821002006530762
    10. '=input' → logprob: -7.946002006530762

Token 215: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6522112488746643
    2. 'int' → logprob: -0.9022112488746643
    3. ' lambda' → logprob: -3.2772111892700195
    4. 'input' → logprob: -3.4022111892700195
    5. ' int' → logprob: -6.9022111892700195
    6. ' input' → logprob: -6.9022111892700195
    7. '(lambda' → logprob: -8.90221118927002
    8. ' ' → logprob: -9.77721118927002
    9. '  ' → logprob: -10.52721118927002
    10. 'sys' → logprob: -10.65221118927002

Token 216: ':' (ID: 25)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5997030735015869
    2. ':' → logprob: -0.8497030735015869
    3. 'lambda' → logprob: -4.349702835083008
    4. ':int' → logprob: -5.224702835083008
    5. '():' → logprob: -5.599702835083008
    6. ' int' → logprob: -7.599702835083008
    7. 'sys' → logprob: -7.724702835083008
    8. ' lambda' → logprob: -8.099702835083008
    9. 'input' → logprob: -9.974702835083008
    10. ' :' → logprob: -10.224702835083008

Token 217: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.024094553664326668
    2. ' int' → logprob: -3.774094581604004
    3. 'map' → logprob: -7.524094581604004
    4. ' map' → logprob: -8.899094581604004
    5. 'sys' → logprob: -9.024094581604004
    6. ' sys' → logprob: -10.274094581604004
    7. 'input' → logprob: -11.399094581604004
    8. ' ' → logprob: -13.274094581604004
    9. '	int' → logprob: -13.899094581604004
    10. 'list' → logprob: -14.149094581604004

Token 218: '(input' (ID: 10054)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.010832746513187885
    2. '(' → logprob: -4.760832786560059
    3. '(input' → logprob: -6.760832786560059
    4. '(sys' → logprob: -7.010832786560059
    5. 'input' → logprob: -9.510832786560059
    6. '()
' → logprob: -10.760832786560059
    7. '(
' → logprob: -10.885832786560059
    8. ' ()' → logprob: -11.260832786560059
    9. '().' → logprob: -11.385832786560059
    10. '();' → logprob: -12.385832786560059

Token 219: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07951314747333527
    2. '().' → logprob: -2.5795130729675293
    3. '()' → logprob: -7.829513072967529
    4. '())
' → logprob: -8.454513549804688
    5. '()
' → logprob: -12.329513549804688
    6. ' ())' → logprob: -12.454513549804688
    7. '(' → logprob: -13.079513549804688
    8. '()))' → logprob: -13.829513549804688
    9. '())

' → logprob: -14.954513549804688
    10. ')' → logprob: -15.079513549804688

Token 220: 'IF' (ID: 4648)
  Prédit: 'MI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MI' → logprob: -0.894951581954956
    2. 'I' → logprob: -1.769951581954956
    3. 'LI' → logprob: -2.269951581954956
    4. 'IS' → logprob: -2.519951581954956
    5. 'IL' → logprob: -2.894951581954956
    6. 'LS' → logprob: -3.019951581954956
    7. 'IR' → logprob: -3.144951581954956
    8. 'SI' → logprob: -3.519951581954956
    9. '()' → logprob: -4.394951820373535
    10. 'IJ' → logprob: -4.769951820373535

Token 221: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10289248824119568
    2. '=' → logprob: -3.1028923988342285
    3. '=lambda' → logprob: -3.6028923988342285
    4. '()' → logprob: -3.8528923988342285
    5. 'I' → logprob: -5.9778923988342285
    6. '_' → logprob: -7.6028923988342285
    7. '=int' → logprob: -8.352892875671387
    8. ' ' → logprob: -8.727892875671387
    9. '  ' → logprob: -8.852892875671387
    10. '=input' → logprob: -8.977892875671387

Token 222: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.05070781707763672
    2. ' lambda' → logprob: -3.0507078170776367
    3. 'loat' → logprob: -6.800707817077637
    4. '(lambda' → logprob: -7.050707817077637
    5. '=lambda' → logprob: -9.425707817077637
    6. 'float' → logprob: -10.550707817077637
    7. '   ' → logprob: -11.675707817077637
    8. 'input' → logprob: -11.925707817077637
    9. 'lam' → logprob: -11.925707817077637
    10. '  ' → logprob: -13.175707817077637

Token 223: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0235923882573843
    2. '():' → logprob: -3.898592472076416
    3. 'input' → logprob: -6.773592472076416
    4. ' input' → logprob: -7.648592472076416
    5. ' :' → logprob: -7.898592472076416
    6. '()' → logprob: -8.148591995239258
    7. 'map' → logprob: -8.398591995239258
    8. ' map' → logprob: -8.898591995239258
    9. 'int' → logprob: -9.023591995239258
    10. 'float' → logprob: -9.648591995239258

Token 224: ' float' (ID: 4428)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06011221557855606
    2. 'float' → logprob: -3.060112237930298
    3. 'int' → logprob: -5.435111999511719
    4. 'list' → logprob: -5.560111999511719
    5. ' input' → logprob: -5.810111999511719
    6. 'map' → logprob: -8.685111999511719
    7. ' float' → logprob: -9.685111999511719
    8. ' list' → logprob: -11.435111999511719
    9. 'sys' → logprob: -12.185111999511719
    10. 'str' → logprob: -13.185111999511719

Token 225: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00015598179015796632
    2. '(' → logprob: -9.75015640258789
    3. '()' → logprob: -9.75015640258789
    4. 'input' → logprob: -10.25015640258789
    5. '=input' → logprob: -13.12515640258789
    6. ' (' → logprob: -13.75015640258789
    7. ',input' → logprob: -15.00015640258789
    8. '(
' → logprob: -15.50015640258789
    9. ' input' → logprob: -15.62515640258789
    10. ')' → logprob: -16.75015640258789

Token 226: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0007752045057713985
    2. '())
' → logprob: -7.250775337219238
    3. '()' → logprob: -10.000775337219238
    4. ')' → logprob: -11.875775337219238
    5. '().' → logprob: -12.000775337219238
    6. ' ())' → logprob: -12.125775337219238
    7. '()
' → logprob: -13.750775337219238
    8. '())

' → logprob: -16.125774383544922
    9. '())
' → logprob: -16.500774383544922
    10. '(' → logprob: -16.500774383544922

Token 227: 'IS' (ID: 2291)
  Prédit: 'IS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IS' → logprob: -0.0005755512393079698
    2. 'LS' → logprob: -8.62557601928711
    3. 'IN' → logprob: -9.12557601928711
    4. 'S' → logprob: -9.12557601928711
    5. 'IL' → logprob: -9.62557601928711
    6. 'SI' → logprob: -9.87557601928711
    7. 'I' → logprob: -10.62557601928711
    8. 'LI' → logprob: -11.50057601928711
    9. 'INS' → logprob: -11.62557601928711
    10. 'Is' → logprob: -12.50057601928711

Token 228: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5078184604644775
    2. ' =' → logprob: -1.2578184604644775
    3. 'tr' → logprob: -2.7578184604644775
    4. '=' → logprob: -3.5078184604644775
    5. '().' → logprob: -4.882818222045898
    6. 'TR' → logprob: -5.007818222045898
    7. 'tring' → logprob: -6.007818222045898
    8. '=lambda' → logprob: -6.132818222045898
    9. ' ()' → logprob: -7.132818222045898
    10. '().__' → logprob: -9.007818222045898

Token 229: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.1390087753534317
    2. ' lambda' → logprob: -2.1390087604522705
    3. 'input' → logprob: -4.51400899887085
    4. ' input' → logprob: -6.88900899887085
    5. '(lambda' → logprob: -10.639008522033691
    6. '   ' → logprob: -12.139008522033691
    7. '=lambda' → logprob: -13.639008522033691
    8. 'str' → logprob: -13.764008522033691
    9. ' ' → logprob: -14.264008522033691
    10. '    ' → logprob: -14.514008522033691

Token 230: ':' (ID: 25)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014620129019021988
    2. ' input' → logprob: -4.264620304107666
    3. 'lambda' → logprob: -7.764620304107666
    4. ' lambda' → logprob: -11.389619827270508
    5. ':' → logprob: -11.764619827270508
    6. 'str' → logprob: -12.139619827270508
    7. '(input' → logprob: -12.639619827270508
    8. 'sys' → logprob: -12.889619827270508
    9. '=input' → logprob: -14.639619827270508
    10. ' ' → logprob: -14.639619827270508

Token 231: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0004311460361350328
    2. ' input' → logprob: -7.750431060791016
    3. 'sys' → logprob: -15.500431060791016
    4. '(input' → logprob: -16.000431060791016
    5. '=input' → logprob: -16.375431060791016
    6. 'list' → logprob: -16.875431060791016
    7. 'str' → logprob: -18.000431060791016
    8. '[input' → logprob: -18.125431060791016
    9. 'lambda' → logprob: -18.375431060791016
    10. '	input' → logprob: -18.875431060791016

Token 232: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003372502396814525
    2. '()' → logprob: -8.000337600708008
    3. ')' → logprob: -14.125337600708008
    4. ' ().' → logprob: -14.625337600708008
    5. '.' → logprob: -15.000337600708008
    6. '()
' → logprob: -16.250337600708008
    7. '(' → logprob: -17.500337600708008
    8. '.strip' → logprob: -17.500337600708008
    9. '().__' → logprob: -17.625337600708008
    10. ').' → logprob: -17.625337600708008

Token 233: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0024764856789261103
    2. 'rstrip' → logprob: -6.002476692199707
    3. ' strip' → logprob: -14.002476692199707
    4. 'split' → logprob: -18.87747573852539
    5. 'str' → logprob: -19.00247573852539
    6. 'read' → logprob: -19.37747573852539
    7. '(strip' → logprob: -19.87747573852539
    8. 'r' → logprob: -20.12747573852539
    9. 'rs' → logprob: -20.50247573852539
    10. '_strip' → logprob: -20.62747573852539

Token 234: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002690032823011279
    2. '()
' → logprob: -6.002689838409424
    3. '()\' → logprob: -9.377690315246582
    4. '().' → logprob: -10.002690315246582
    5. '()

' → logprob: -10.002690315246582
    6. '())' → logprob: -11.502690315246582
    7. '(' → logprob: -11.877690315246582
    8. ')' → logprob: -12.002690315246582
    9. '()]' → logprob: -12.127690315246582
    10. ' ()' → logprob: -13.002690315246582

Token 235: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.870950215263292e-05
    2. '\n' → logprob: -10.250048637390137
    3. ')' → logprob: -11.500048637390137
    4. 'nl' → logprob: -13.625048637390137
    5. 'newline' → logprob: -14.500048637390137
    6. ')\' → logprob: -14.875048637390137
    7. 'nn' → logprob: -15.500048637390137
    8. '012' → logprob: -15.500048637390137
    9. '\' → logprob: -16.000049591064453
    10. '
' → logprob: -16.250049591064453

Token 236: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00740312272682786
    2. '')' → logprob: -5.0074028968811035
    3. '())' → logprob: -7.8824028968811035
    4. ')
' → logprob: -8.632403373718262
    5. '()' → logprob: -9.132403373718262
    6. ' )' → logprob: -11.257403373718262
    7. '')
' → logprob: -12.257403373718262
    8. '")' → logprob: -12.507403373718262
    9. '())
' → logprob: -14.757403373718262
    10. ')

' → logprob: -14.757403373718262

Token 237: 'IL' (ID: 2654)
  Prédit: 'IL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IL' → logprob: -0.559805154800415
    2. 'LS' → logprob: -2.184805154800415
    3. 'ILS' → logprob: -2.559805154800415
    4. 'I' → logprob: -2.934805154800415
    5. 'IA' → logprob: -3.184805154800415
    6. 'IS' → logprob: -3.184805154800415
    7. 'IN' → logprob: -3.309805154800415
    8. 'IM' → logprob: -3.434805154800415
    9. 'MI' → logprob: -4.434804916381836
    10. 'IR' → logprob: -5.184804916381836

Token 238: 'CI' (ID: 14325)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26379719376564026
    2. '=' → logprob: -1.8887971639633179
    3. 'ambda' → logprob: -3.2637972831726074
    4. '=lambda' → logprob: -3.2637972831726074
    5. 'I' → logprob: -7.013797283172607
    6. 'lambda' → logprob: -7.138797283172607
    7. 'ist' → logprob: -7.388797283172607
    8. '(lambda' → logprob: -7.763797283172607
    9. 'ine' → logprob: -8.13879680633545
    10. '   ' → logprob: -8.38879680633545

Token 239: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3141815662384033
    2. '=' → logprob: -1.4391815662384033
    3. '=lambda' → logprob: -3.4391815662384033
    4. 'ambda' → logprob: -8.189181327819824
    5. 'I' → logprob: -10.314181327819824
    6. 'lambda' → logprob: -10.564181327819824
    7. 'ist' → logprob: -11.564181327819824
    8. '   ' → logprob: -11.814181327819824
    9. 'C' → logprob: -12.064181327819824
    10. '(lambda' → logprob: -12.189181327819824

Token 240: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.07023339718580246
    2. ' lambda' → logprob: -2.9452333450317383
    3. 'list' → logprob: -4.320233345031738
    4. '(lambda' → logprob: -6.570233345031738
    5. ' list' → logprob: -7.820233345031738
    6. '=lambda' → logprob: -9.570233345031738
    7. 'map' → logprob: -10.945233345031738
    8. 'lam' → logprob: -10.945233345031738
    9. 'tuple' → logprob: -12.195233345031738
    10. '[' → logprob: -12.320233345031738

Token 241: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3635496199131012
    2. ' list' → logprob: -1.3635495901107788
    3. ':list' → logprob: -3.7385497093200684
    4. 'list' → logprob: -4.113549709320068
    5. ' :' → logprob: -5.863549709320068
    6. ' map' → logprob: -5.988549709320068
    7. 'map' → logprob: -6.738549709320068
    8. '():' → logprob: -6.738549709320068
    9. 's' → logprob: -7.863549709320068
    10. ' n' → logprob: -8.86354923248291

Token 242: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011107014492154121
    2. '=' → logprob: -5.261106967926025
    3. '=[' → logprob: -5.386106967926025
    4. ':[' → logprob: -7.011106967926025
    5. ' :' → logprob: -8.636107444763184
    6. '=[]' → logprob: -9.386107444763184
    7. '=list' → logprob: -10.261107444763184
    8. ':list' → logprob: -10.261107444763184
    9. '=None' → logprob: -11.511107444763184
    10. 'list' → logprob: -12.136107444763184

Token 243: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.07478512078523636
    2. 'list' → logprob: -2.8247852325439453
    3. '[int' → logprob: -5.449785232543945
    4. ' list' → logprob: -5.574785232543945
    5. '[' → logprob: -5.824785232543945
    6. ' [' → logprob: -6.699785232543945
    7. '[List' → logprob: -8.324785232543945
    8. '[l' → logprob: -9.574785232543945
    9. '[line' → logprob: -9.949785232543945
    10. '[n' → logprob: -11.199785232543945

Token 244: 'II' (ID: 6013)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00010831133840838447
    2. 'list' → logprob: -9.50010871887207
    3. ' int' → logprob: -10.50010871887207
    4. '[int' → logprob: -13.37510871887207
    5. 'II' → logprob: -13.75010871887207
    6. '
' → logprob: -13.75010871887207
    7. '*' → logprob: -14.00010871887207
    8. '  ' → logprob: -15.25010871887207
    9. ' ' → logprob: -15.87510871887207
    10. 'input' → logprob: -16.12510871887207

Token 245: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1472419600977446e-06
    2. '()]' → logprob: -14.000000953674316
    3. '()
' → logprob: -15.625000953674316
    4. ' ()' → logprob: -16.625001907348633
    5. 'for' → logprob: -17.875001907348633
    6. ' for' → logprob: -19.625001907348633
    7. '()<<' → logprob: -20.000001907348633
    8. '(' → logprob: -20.125001907348633
    9. ']' → logprob: -20.250001907348633
    10. '()

' → logprob: -20.500001907348633

Token 246: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1475277841091156
    2. ' for' → logprob: -2.1475276947021484
    3. '()' → logprob: -3.8975276947021484
    4. '	for' → logprob: -10.022527694702148
    5. '   ' → logprob: -10.272527694702148
    6. ']' → logprob: -12.647527694702148
    7. '```' → logprob: -13.022527694702148
    8. 'fo' → logprob: -13.022527694702148
    9. ' ' → logprob: -13.147527694702148
    10. '0' → logprob: -13.397527694702148

Token 247: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9862216504407115e-05
    2. ' _' → logprob: -11.250020027160645
    3. '_i' → logprob: -12.000020027160645
    4. '_
' → logprob: -15.000020027160645
    5. 'i' → logprob: -15.750020027160645
    6. '
' → logprob: -16.875019073486328
    7. '_=' → logprob: -16.875019073486328
    8. '_

' → logprob: -17.625019073486328
    9. '_in' → logprob: -17.625019073486328
    10. '__' → logprob: -17.875019073486328

Token 248: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0002390594017924741
    2. 'in' → logprob: -8.375239372253418
    3. ' ' → logprob: -12.250239372253418
    4. 'i' → logprob: -13.125239372253418
    5. 'range' → logprob: -13.875239372253418
    6. 'n' → logprob: -15.125239372253418
    7. '

' → logprob: -16.2502384185791
    8. ' _' → logprob: -16.3752384185791
    9. '  ' → logprob: -16.6252384185791
    10. ' i' → logprob: -17.3752384185791

Token 249: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004079708829522133
    2. ' range' → logprob: -5.504079818725586
    3. '	range' → logprob: -14.879079818725586
    4. ' ' → logprob: -15.379079818725586
    5. '  ' → logprob: -15.754079818725586
    6. 'r' → logprob: -16.129079818725586
    7. '   ' → logprob: -16.129079818725586
    8. 'ra' → logprob: -16.379079818725586
    9. '(range' → logprob: -16.504079818725586
    10. '_' → logprob: -16.754079818725586

Token 250: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.0087516784551553e-05
    2. 'n' → logprob: -11.75001049041748
    3. '(' → logprob: -13.12501049041748
    4. '	n' → logprob: -17.250009536743164
    5. '(
' → logprob: -17.375009536743164
    6. ' n' → logprob: -17.875009536743164
    7. ' (' → logprob: -18.125009536743164
    8. '   ' → logprob: -18.500009536743164
    9. '
' → logprob: -20.125009536743164
    10. '    ' → logprob: -21.125009536743164

Token 251: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.03825894743204117
    2. ']' → logprob: -3.2882590293884277
    3. ']
' → logprob: -9.03825855255127
    4. ')]
' → logprob: -9.91325855255127
    5. ')' → logprob: -10.03825855255127
    6. '()]' → logprob: -13.78825855255127
    7. ' ]' → logprob: -13.78825855255127
    8. ')],' → logprob: -14.16325855255127
    9. '])' → logprob: -14.28825855255127
    10. ']

' → logprob: -14.91325855255127

Token 252: 'IL' (ID: 2654)
  Prédit: 'IL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IL' → logprob: -0.015973370522260666
    2. 'ILS' → logprob: -4.8909735679626465
    3. 'I' → logprob: -5.7659735679626465
    4. 'IM' → logprob: -6.8909735679626465
    5. 'IS' → logprob: -7.3909735679626465
    6. 'ILI' → logprob: -7.6409735679626465
    7. 'IP' → logprob: -7.7659735679626465
    8. 'IC' → logprob: -7.8909735679626465
    9. 'IR' → logprob: -8.515973091125488
    10. 'L' → logprob: -8.640973091125488

Token 253: 'CF' (ID: 16495)
  Prédit: 'CI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'CI' → logprob: -0.7075223326683044
    2. 'C' → logprob: -0.9575223326683044
    3. 'I' → logprob: -2.707522392272949
    4. ' =' → logprob: -2.957522392272949
    5. '=' → logprob: -6.332522392272949
    6. 'S' → logprob: -6.457522392272949
    7. 'ST' → logprob: -8.58252239227295
    8. 'SI' → logprob: -8.83252239227295
    9. 'IC' → logprob: -8.95752239227295
    10. 'ist' → logprob: -9.08252239227295

Token 254: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8135688304901123
    2. ' =' → logprob: -0.8135688304901123
    3. '=lambda' → logprob: -2.1885688304901123
    4. 'I' → logprob: -7.063569068908691
    5. 'lambda' → logprob: -8.313569068908691
    6. '(lambda' → logprob: -8.313569068908691
    7. 'ambda' → logprob: -11.063569068908691
    8. 'C' → logprob: -12.188569068908691
    9. 'def' → logprob: -13.063569068908691
    10. ' lambda' → logprob: -13.188569068908691

Token 255: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.20463864505290985
    2. ' lambda' → logprob: -1.7046386003494263
    3. '(lambda' → logprob: -5.829638481140137
    4. '=lambda' → logprob: -8.204638481140137
    5. 'def' → logprob: -12.204638481140137
    6. 'ambda' → logprob: -14.079638481140137
    7. ' =' → logprob: -14.454638481140137
    8. '   ' → logprob: -15.204638481140137
    9. '_lambda' → logprob: -15.454638481140137
    10. ' lamb' → logprob: -15.829638481140137

Token 256: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.025675632059574127
    2. ' n' → logprob: -3.7756755352020264
    3. '(n' → logprob: -6.0256757736206055
    4. 'int' → logprob: -12.025675773620605
    5. 'def' → logprob: -13.150675773620605
    6. '	n' → logprob: -13.400675773620605
    7. '   ' → logprob: -13.775675773620605
    8. ' ' → logprob: -15.150675773620605
    9. '  ' → logprob: -15.400675773620605
    10. 'float' → logprob: -15.525675773620605

Token 257: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.963691804325208e-05
    2. ' :' → logprob: -10.500029563903809
    3. '=' → logprob: -14.000029563903809
    4. ':[' → logprob: -14.750029563903809
    5. 'def' → logprob: -15.250029563903809
    6. ')' → logprob: -16.000030517578125
    7. '[' → logprob: -16.625030517578125
    8. 'n' → logprob: -16.875030517578125
    9. ']' → logprob: -17.375030517578125
    10. '   ' → logprob: -17.500030517578125

Token 258: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005255933851003647
    2. ' [' → logprob: -5.255255699157715
    3. '[df' → logprob: -12.005255699157715
    4. '[f' → logprob: -12.130255699157715
    5. '   ' → logprob: -12.505255699157715
    6. '[int' → logprob: -13.255255699157715
    7. ' ' → logprob: -13.755255699157715
    8. '[list' → logprob: -14.505255699157715
    9. '[input' → logprob: -14.630255699157715
    10. '[F' → logprob: -14.880255699157715

Token 259: 'IF' (ID: 4648)
  Prédit: 'IF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IF' → logprob: -0.2522677183151245
    2. 'float' → logprob: -1.5022677183151245
    3. 'int' → logprob: -8.752267837524414
    4. ' IF' → logprob: -9.627267837524414
    5. ' float' → logprob: -9.877267837524414
    6. 'FF' → logprob: -10.002267837524414
    7. '
' → logprob: -11.627267837524414
    8. ' ' → logprob: -13.252267837524414
    9. '   ' → logprob: -13.502267837524414
    10. '(IF' → logprob: -13.502267837524414

Token 260: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.9361264946837764e-07
    2. ' ()' → logprob: -16.125
    3. '()
' → logprob: -18.75
    4. '()]' → logprob: -19.0
    5. '(' → logprob: -19.5
    6. ')' → logprob: -20.75
    7. 'for' → logprob: -21.375
    8. ' for' → logprob: -21.625
    9. '()\' → logprob: -23.375
    10. ']' → logprob: -23.625

Token 261: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47502070665359497
    2. 'for' → logprob: -0.975020706653595
    3. '()' → logprob: -6.975020885467529
    4. ')' → logprob: -12.100020408630371
    5. '	for' → logprob: -13.475020408630371
    6. ' ' → logprob: -14.350020408630371
    7. '   ' → logprob: -15.350020408630371
    8. ']' → logprob: -16.100021362304688
    9. 'or' → logprob: -16.100021362304688
    10. ' ()' → logprob: -16.225021362304688

Token 262: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.062020789831876755
    2. ' _' → logprob: -2.812020778656006
    3. ' range' → logprob: -11.062021255493164
    4. ' n' → logprob: -11.312021255493164
    5. '_n' → logprob: -11.437021255493164
    6. ' in' → logprob: -11.937021255493164
    7. 'n' → logprob: -12.187021255493164
    8. '_range' → logprob: -13.187021255493164
    9. 'range' → logprob: -14.437021255493164
    10. '_in' → logprob: -16.187021255493164

Token 263: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5777845978736877
    2. ' range' → logprob: -1.452784538269043
    3. ' in' → logprob: -2.202784538269043
    4. 'range' → logprob: -2.452784538269043
    5. ' _' → logprob: -5.327784538269043
    6. '_range' → logprob: -5.952784538269043
    7. '(range' → logprob: -7.577784538269043
    8. 'n' → logprob: -8.077784538269043
    9. 'in' → logprob: -10.327784538269043
    10. 'ange' → logprob: -10.452784538269043

Token 264: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.39418694376945496
    2. ' range' → logprob: -1.1441869735717773
    3. 'n' → logprob: -5.019186973571777
    4. ' n' → logprob: -7.894186973571777
    5. '_range' → logprob: -8.519186973571777
    6. '(n' → logprob: -9.769186973571777
    7. '(range' → logprob: -10.519186973571777
    8. '_n' → logprob: -11.519186973571777
    9. '_' → logprob: -11.894186973571777
    10. '   ' → logprob: -13.394186973571777

Token 265: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5761289596557617
    2. '(n' → logprob: -0.8261289596557617
    3. ' n' → logprob: -8.576128959655762
    4. '(' → logprob: -14.576128959655762
    5. ' (' → logprob: -15.076128959655762
    6. '	n' → logprob: -16.576129913330078
    7. '   ' → logprob: -16.576129913330078
    8. '
' → logprob: -16.826129913330078
    9. '_n' → logprob: -17.451129913330078
    10. '       ' → logprob: -17.951129913330078

Token 266: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00025442568585276604
    2. ')]
' → logprob: -8.37525463104248
    3. 'n' → logprob: -10.87525463104248
    4. ')' → logprob: -13.00025463104248
    5. ']' → logprob: -13.62525463104248
    6. '(n' → logprob: -14.25025463104248
    7. ')]

' → logprob: -15.25025463104248
    8. '()' → logprob: -15.87525463104248
    9. '_n' → logprob: -16.875253677368164
    10. '')]' → logprob: -16.875253677368164

Token 267: 'ILI' (ID: 89829)
  Prédit: 'IL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'IL' → logprob: -0.10007315129041672
    2. 'ILS' → logprob: -2.7250730991363525
    3. 'IS' → logprob: -3.6000730991363525
    4. 'IT' → logprob: -7.725073337554932
    5. 'I' → logprob: -8.350072860717773
    6. 'ISC' → logprob: -8.725072860717773
    7. 'LS' → logprob: -8.975072860717773
    8. 'S' → logprob: -8.975072860717773
    9. 'AIL' → logprob: -8.975072860717773
    10. 'IP' → logprob: -9.225072860717773

Token 268: ' =' (ID: 314)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.3193562924861908
    2. ' =' → logprob: -1.8193563222885132
    3. '=' → logprob: -2.9443562030792236
    4. 'ambda' → logprob: -3.5693562030792236
    5. '=lambda' → logprob: -3.9443562030792236
    6. 'lambda' → logprob: -5.194356441497803
    7. 'n' → logprob: -6.569356441497803
    8. '(lambda' → logprob: -6.694356441497803
    9. 'c' → logprob: -7.069356441497803
    10. 'mb' → logprob: -7.319356441497803

Token 269: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.10585193336009979
    2. ' lambda' → logprob: -2.355851888656616
    3. '(lambda' → logprob: -5.230852127075195
    4. 'ambda' → logprob: -8.355852127075195
    5. '=lambda' → logprob: -10.230852127075195
    6. 'lam' → logprob: -13.105852127075195
    7. 'list' → logprob: -13.230852127075195
    8. '_lambda' → logprob: -13.855852127075195
    9. '   ' → logprob: -14.355852127075195
    10. '    ' → logprob: -14.480852127075195

Token 270: ':' (ID: 25)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12884783744812012
    2. 'n' → logprob: -2.12884783744812
    3. '(n' → logprob: -6.878848075866699
    4. ' list' → logprob: -8.0038480758667
    5. 'int' → logprob: -8.5038480758667
    6. 'lambda' → logprob: -8.8788480758667
    7. 'list' → logprob: -9.1288480758667
    8. ' lambda' → logprob: -10.3788480758667
    9. '  ' → logprob: -10.7538480758667
    10. ' ' → logprob: -11.0038480758667

Token 271: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.9888433093437925e-05
    2. ' list' → logprob: -10.500040054321289
    3. '[list' → logprob: -11.750040054321289
    4. 'map' → logprob: -12.500040054321289
    5. '[' → logprob: -14.500040054321289
    6. '	list' → logprob: -17.62504005432129
    7. '[int' → logprob: -17.87504005432129
    8. '(list' → logprob: -18.12504005432129
    9. '_list' → logprob: -18.62504005432129
    10. '[l' → logprob: -19.00004005432129

Token 272: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.081584716506768e-05
    2. '(' → logprob: -11.000020980834961
    3. 'map' → logprob: -12.625020980834961
    4. ' map' → logprob: -15.250020980834961
    5. '	map' → logprob: -16.00002098083496
    6. '()' → logprob: -16.12502098083496
    7. '(int' → logprob: -16.25002098083496
    8. '(m' → logprob: -16.62502098083496
    9. '_map' → logprob: -17.37502098083496
    10. '(
' → logprob: -17.62502098083496

Token 273: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014176911674439907
    2. 'int' → logprob: -4.264176845550537
    3. '<int' → logprob: -12.514177322387695
    4. ' int' → logprob: -12.514177322387695
    5. '(' → logprob: -13.139177322387695
    6. ',int' → logprob: -13.514177322387695
    7. '=int' → logprob: -13.639177322387695
    8. '[int' → logprob: -14.389177322387695
    9. '	int' → logprob: -14.889177322387695
    10. ':int' → logprob: -15.139177322387695

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.87172532081604
    2. 'input' → logprob: -1.12172532081604
    3. ',input' → logprob: -1.37172532081604
    4. ' input' → logprob: -6.246725082397461
    5. '(input' → logprob: -7.871725082397461
    6. ' ,' → logprob: -10.746725082397461
    7. '	input' → logprob: -11.371725082397461
    8. '   ' → logprob: -11.621725082397461
    9. '=input' → logprob: -12.371725082397461
    10. '<input' → logprob: -12.371725082397461

Token 275: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008616345934569836
    2. ' input' → logprob: -4.7586164474487305
    3. '   ' → logprob: -13.75861644744873
    4. ' ' → logprob: -15.25861644744873
    5. 'sys' → logprob: -15.63361644744873
    6. '(input' → logprob: -16.258615493774414
    7. '  ' → logprob: -16.508615493774414
    8. '	input' → logprob: -16.883615493774414
    9. ',input' → logprob: -17.008615493774414
    10. '
' → logprob: -17.258615493774414

Token 276: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.961759259458631e-06
    2. '()' → logprob: -12.250004768371582
    3. ' ().' → logprob: -16.2500057220459
    4. '(' → logprob: -18.5000057220459
    5. '()
' → logprob: -19.1250057220459
    6. '.strip' → logprob: -19.8750057220459
    7. ')' → logprob: -20.2500057220459
    8. '()))' → logprob: -20.2500057220459
    9. '.readline' → logprob: -20.3750057220459
    10. '().__' → logprob: -20.5000057220459

Token 277: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.24658845365047455
    2. 'strip' → logprob: -1.7465884685516357
    3. 'rstrip' → logprob: -3.9965884685516357
    4. 'str' → logprob: -4.746588230133057
    5. 'read' → logprob: -4.746588230133057
    6. '().' → logprob: -4.871588230133057
    7. ')' → logprob: -7.621588230133057
    8. '.readline' → logprob: -8.996588706970215
    9. 's' → logprob: -9.996588706970215
    10. 'sys' → logprob: -10.246588706970215

Token 278: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.037843286991119385
    2. '))' → logprob: -3.4128432273864746
    3. '()' → logprob: -5.912843227386475
    4. '()))
' → logprob: -6.537843227386475
    5. '))
' → logprob: -11.662843704223633
    6. '(' → logprob: -11.662843704223633
    7. '()))

' → logprob: -12.162843704223633
    8. '())' → logprob: -12.537843704223633
    9. ' ))' → logprob: -12.537843704223633
    10. '()));' → logprob: -12.662843704223633

Token 279: 'ILLI' (ID: 83024)
  Prédit: 'IL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'IL' → logprob: -0.6339690685272217
    2. 'ILS' → logprob: -0.8839690685272217
    3. 'LS' → logprob: -4.383969306945801
    4. 'def' → logprob: -4.758969306945801
    5. 'ILT' → logprob: -5.633969306945801
    6. 'IS' → logprob: -5.883969306945801
    7. 'I' → logprob: -6.133969306945801
    8. 'IRS' → logprob: -6.383969306945801
    9. 'ILL' → logprob: -6.383969306945801
    10. 'IR' → logprob: -6.508969306945801

Token 280: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6596201658248901
    2. ' =' → logprob: -0.7846201658248901
    3. 'st' → logprob: -4.03462028503418
    4. 'ambda' → logprob: -5.28462028503418
    5. '=lambda' → logprob: -6.40962028503418
    6. '()' → logprob: -6.78462028503418
    7. 'mb' → logprob: -7.90962028503418
    8. 'I' → logprob: -8.78462028503418
    9. '(lambda' → logprob: -8.90962028503418
    10. 'lambda' → logprob: -9.40962028503418

Token 281: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.011964662000536919
    2. ' lambda' → logprob: -4.511964797973633
    3. '(lambda' → logprob: -7.011964797973633
    4. '=lambda' → logprob: -11.136964797973633
    5. 'list' → logprob: -14.886964797973633
    6. '   ' → logprob: -15.261964797973633
    7. 'lam' → logprob: -16.011964797973633
    8. '    ' → logprob: -16.886964797973633
    9. 'ambda' → logprob: -17.011964797973633
    10. '_lambda' → logprob: -18.136964797973633

Token 282: ' n' (ID: 297)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03523670881986618
    2. ' list' → logprob: -3.6602365970611572
    3. 'lambda' → logprob: -4.785236835479736
    4. 'int' → logprob: -8.410236358642578
    5. ' lambda' → logprob: -8.785236358642578
    6. ':list' → logprob: -9.910236358642578
    7. '=list' → logprob: -10.410236358642578
    8. '(lambda' → logprob: -11.035236358642578
    9. ':' → logprob: -11.035236358642578
    10. '   ' → logprob: -11.160236358642578

Token 283: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003539605299010873
    2. '():' → logprob: -5.753539562225342
    3. '=' → logprob: -8.3785400390625
    4. '(n' → logprob: -9.8785400390625
    5. '=lambda' → logprob: -9.8785400390625
    6. ' :' → logprob: -11.3785400390625
    7. 'n' → logprob: -12.3785400390625
    8. 'lambda' → logprob: -12.7535400390625
    9. '()' → logprob: -13.0035400390625
    10. 'def' → logprob: -13.2535400390625

Token 284: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.00939738005399704
    2. '[' → logprob: -5.009397506713867
    3. '[List' → logprob: -6.509397506713867
    4. ' [' → logprob: -7.134397506713867
    5. '[int' → logprob: -8.134397506713867
    6. '[l' → logprob: -10.009397506713867
    7. '[line' → logprob: -10.509397506713867
    8. '[input' → logprob: -12.509397506713867
    9. '[layer' → logprob: -12.759397506713867
    10. '[array' → logprob: -12.884397506713867

Token 285: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06229647621512413
    2. 'ILI' → logprob: -2.8122963905334473
    3. 'LI' → logprob: -8.937296867370605
    4. ' list' → logprob: -9.062296867370605
    5. 'LIST' → logprob: -10.562296867370605
    6. 'ILLI' → logprob: -11.062296867370605
    7. 'IL' → logprob: -11.687296867370605
    8. 'ili' → logprob: -12.062296867370605
    9. 'I' → logprob: -12.687296867370605
    10. '[' → logprob: -12.812296867370605

Token 286: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -8.41866585687967e-06
    2. 'map' → logprob: -12.125008583068848
    3. '(' → logprob: -13.375008583068848
    4. '	map' → logprob: -14.250008583068848
    5. ' map' → logprob: -14.625008583068848
    6. '.map' → logprob: -16.12500762939453
    7. ',map' → logprob: -17.37500762939453
    8. '(
' → logprob: -17.75000762939453
    9. '_map' → logprob: -18.25000762939453
    10. '()' → logprob: -18.25000762939453

Token 287: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0031988697592169046
    2. 'int' → logprob: -5.753199100494385
    3. ' int' → logprob: -12.253198623657227
    4. '<int' → logprob: -12.378198623657227
    5. '=int' → logprob: -12.503198623657227
    6. '[int' → logprob: -12.503198623657227
    7. ',int' → logprob: -12.753198623657227
    8. ']int' → logprob: -13.628198623657227
    9. '	int' → logprob: -15.128198623657227
    10. '(' → logprob: -15.878198623657227

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00193149340339005
    2. ',input' → logprob: -6.251931667327881
    3. ' ,' → logprob: -13.001931190490723
    4. ',int' → logprob: -15.001931190490723
    5. 'input' → logprob: -15.626931190490723
    6. '(input' → logprob: -16.00193214416504
    7. ',
' → logprob: -17.50193214416504
    8. '(),' → logprob: -18.12693214416504
    9. '```' → logprob: -18.62693214416504
    10. '
' → logprob: -18.75193214416504

Token 289: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00407923199236393
    2. ' input' → logprob: -5.504079341888428
    3. '(input' → logprob: -14.25407886505127
    4. ' ' → logprob: -16.379079818725586
    5. ',input' → logprob: -17.754079818725586
    6. ')' → logprob: -18.004079818725586
    7. '<input' → logprob: -18.379079818725586
    8. '	input' → logprob: -18.379079818725586
    9. '
' → logprob: -18.754079818725586
    10. '   ' → logprob: -18.879079818725586

Token 290: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.180258191714529e-06
    2. ',' → logprob: -11.750008583068848
    3. '(),' → logprob: -16.37500762939453
    4. '()' → logprob: -16.37500762939453
    5. ' ().' → logprob: -16.50000762939453
    6. '()
' → logprob: -18.50000762939453
    7. '(' → logprob: -19.12500762939453
    8. '.' → logprob: -19.37500762939453
    9. ' ' → logprob: -19.37500762939453
    10. ' .' → logprob: -19.50000762939453

Token 291: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.5577775128767826e-06
    2. ' split' → logprob: -12.500005722045898
    3. 'spl' → logprob: -14.125005722045898
    4. '(split' → logprob: -15.250005722045898
    5. ')' → logprob: -15.375005722045898
    6. 'rstrip' → logprob: -15.500005722045898
    7. '```' → logprob: -15.625005722045898
    8. 'strip' → logprob: -15.875005722045898
    9. '().' → logprob: -17.3750057220459
    10. '_split' → logprob: -17.5000057220459

Token 292: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.11856153607368469
    2. '))' → logprob: -2.2435615062713623
    3. '(n' → logprob: -5.868561744689941
    4. 'n' → logprob: -6.243561744689941
    5. '()' → logprob: -7.993561744689941
    6. '())' → logprob: -8.493561744689941
    7. '().' → logprob: -8.493561744689941
    8. '()[' → logprob: -9.493561744689941
    9. '(' → logprob: -10.243561744689941
    10. '()))
' → logprob: -10.993561744689941

Token 293: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11685748398303986
    2. '(n' → logprob: -2.7418575286865234
    3. 'for' → logprob: -3.1168575286865234
    4. '(' → logprob: -7.241857528686523
    5. ' for' → logprob: -7.241857528686523
    6. ')' → logprob: -9.866857528686523
    7. '())' → logprob: -10.991857528686523
    8. '()]' → logprob: -11.241857528686523
    9. '(for' → logprob: -11.491857528686523
    10. '()
' → logprob: -12.491857528686523

Token 294: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0015068859793245792
    2. ' _' → logprob: -6.501506805419922
    3. ' range' → logprob: -12.376506805419922
    4. '_range' → logprob: -15.251506805419922
    5. 'range' → logprob: -16.126506805419922
    6. ' ' → logprob: -17.751506805419922
    7. ' in' → logprob: -17.751506805419922
    8. '_i' → logprob: -19.501506805419922
    9. '_in' → logprob: -19.751506805419922
    10. '_n' → logprob: -20.001506805419922

Token 295: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10433729737997055
    2. ' range' → logprob: -2.604337215423584
    3. ' in' → logprob: -4.104337215423584
    4. '_' → logprob: -4.854337215423584
    5. 'in' → logprob: -7.479337215423584
    6. '_range' → logprob: -8.354337692260742
    7. ' _' → logprob: -10.979337692260742
    8. '(range' → logprob: -11.979337692260742
    9. '_in' → logprob: -12.104337692260742
    10. '	range' → logprob: -13.604337692260742

Token 296: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16028860211372375
    2. ' range' → logprob: -1.9102885723114014
    3. '_' → logprob: -10.41028881072998
    4. '_range' → logprob: -10.41028881072998
    5. '(range' → logprob: -12.41028881072998
    6. 'n' → logprob: -16.160287857055664
    7. '	range' → logprob: -16.160287857055664
    8. ' in' → logprob: -17.910287857055664
    9. '_n' → logprob: -17.910287857055664
    10. '(n' → logprob: -18.785287857055664

Token 297: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00043162284418940544
    2. 'n' → logprob: -7.750431537628174
    3. '(' → logprob: -14.000432014465332
    4. ' n' → logprob: -16.375431060791016
    5. ' (' → logprob: -18.125431060791016
    6. '_n' → logprob: -19.875431060791016
    7. '	n' → logprob: -20.000431060791016
    8. '(
' → logprob: -20.250431060791016
    9. '
' → logprob: -20.875431060791016
    10. '[n' → logprob: -22.625431060791016

Token 298: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.009810513816773891
    2. '()]' → logprob: -4.759810447692871
    3. ']' → logprob: -6.759810447692871
    4. '()' → logprob: -10.884810447692871
    5. ')' → logprob: -12.134810447692871
    6. '())' → logprob: -12.134810447692871
    7. ')]
' → logprob: -13.009810447692871
    8. '])' → logprob: -13.759810447692871
    9. '])]' → logprob: -14.009810447692871
    10. ']()' → logprob: -14.384810447692871

Token 299: 'IL' (ID: 2654)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0466645956039429
    2. 'IL' → logprob: -1.4216645956039429
    3. 'IR' → logprob: -2.0466647148132324
    4. 'D' → logprob: -2.9216647148132324
    5. 'S' → logprob: -3.1716647148132324
    6. 'ILS' → logprob: -3.4216647148132324
    7. 'LS' → logprob: -3.6716647148132324
    8. 'IS' → logprob: -3.9216647148132324
    9. 'I' → logprob: -4.671664714813232
    10. 'IP' → logprob: -4.796664714813232

Token 300: 'F' (ID: 37)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.41393429040908813
    2. 'C' → logprob: -1.9139342308044434
    3. 'CI' → logprob: -2.2889342308044434
    4. 'S' → logprob: -2.7889342308044434
    5. 'LI' → logprob: -4.538934230804443
    6. ' =' → logprob: -5.288934230804443
    7. 'L' → logprob: -5.788934230804443
    8. 'SI' → logprob: -6.163934230804443
    9. 'IC' → logprob: -6.413934230804443
    10. 'F' → logprob: -7.038934230804443

Token 301: ' =' (ID: 314)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.15530262887477875
    2. '=' → logprob: -2.0303025245666504
    3. ' =' → logprob: -5.03030252456665
    4. '=lambda' → logprob: -5.40530252456665
    5. 'CI' → logprob: -6.90530252456665
    6. 'C' → logprob: -8.905303001403809
    7. 'LI' → logprob: -9.155303001403809
    8. 'lambda' → logprob: -9.405303001403809
    9. 'F' → logprob: -9.780303001403809
    10. 'IC' → logprob: -10.155303001403809

Token 302: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.003930218052119017
    2. ' lambda' → logprob: -5.75393009185791
    3. '(lambda' → logprob: -7.37893009185791
    4. '=lambda' → logprob: -9.00393009185791
    5. '   ' → logprob: -12.87893009185791
    6. 'ambda' → logprob: -13.25393009185791
    7. 'lam' → logprob: -15.37893009185791
    8. '_lambda' → logprob: -15.75393009185791
    9. 'def' → logprob: -16.128931045532227
    10. ' =' → logprob: -16.253931045532227

Token 303: ':' (ID: 25)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.39419716596603394
    2. '=lambda' → logprob: -1.3941972255706787
    3. '=' → logprob: -3.7691972255706787
    4. ' =' → logprob: -3.8941972255706787
    5. 'ambda' → logprob: -4.1441969871521
    6. '():' → logprob: -4.6441969871521
    7. '()' → logprob: -5.6441969871521
    8. ':' → logprob: -6.0191969871521
    9. '(lambda' → logprob: -6.6441969871521
    10. ' lambda' → logprob: -6.7691969871521

Token 304: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0019293478690087795
    2. ' list' → logprob: -6.25192928314209
    3. 'float' → logprob: -15.37692928314209
    4. 'map' → logprob: -16.251930236816406
    5. '   ' → logprob: -16.376930236816406
    6. 'lambda' → logprob: -16.376930236816406
    7. 'li' → logprob: -16.876930236816406
    8. '
' → logprob: -17.251930236816406
    9. '	list' → logprob: -17.251930236816406
    10. ' ' → logprob: -17.501930236816406

Token 305: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -3.531315314830863e-06
    2. 'map' → logprob: -13.000003814697266
    3. '(float' → logprob: -14.250003814697266
    4. '(' → logprob: -14.750003814697266
    5. '_map' → logprob: -16.750003814697266
    6. '	map' → logprob: -16.875003814697266
    7. ' map' → logprob: -17.125003814697266
    8. '(list' → logprob: -18.625003814697266
    9. ',map' → logprob: -18.750003814697266
    10. '.map' → logprob: -19.625003814697266

Token 306: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -5.080963092041202e-06
    2. 'float' → logprob: -12.500004768371582
    3. '(' → logprob: -14.000004768371582
    4. '=float' → logprob: -15.375004768371582
    5. ',float' → logprob: -15.750004768371582
    6. ' float' → logprob: -16.3750057220459
    7. '<float' → logprob: -16.7500057220459
    8. '(int' → logprob: -16.7500057220459
    9. '	float' → logprob: -17.2500057220459
    10. '```' → logprob: -19.1250057220459

Token 307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.062237448990345
    2. ',input' → logprob: -2.812237501144409
    3. 'input' → logprob: -9.062237739562988
    4. '(input' → logprob: -9.812237739562988
    5. ',float' → logprob: -9.937237739562988
    6. ' ,' → logprob: -9.937237739562988
    7. ' input' → logprob: -14.062237739562988
    8. '(' → logprob: -14.312237739562988
    9. 'float' → logprob: -15.187237739562988
    10. ')' → logprob: -15.687237739562988

Token 308: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014165272004902363
    2. ' input' → logprob: -4.26416540145874
    3. '(input' → logprob: -13.264164924621582
    4. ',input' → logprob: -18.1391658782959
    5. ' ' → logprob: -18.7641658782959
    6. '<input' → logprob: -19.1391658782959
    7. '	input' → logprob: -19.1391658782959
    8. '[input' → logprob: -19.6391658782959
    9. '=input' → logprob: -19.7641658782959
    10. '_input' → logprob: -20.3891658782959

Token 309: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.5776860184123507e-06
    2. '()' → logprob: -13.00000286102295
    3. ' ().' → logprob: -15.50000286102295
    4. '.' → logprob: -17.000001907348633
    5. '))' → logprob: -17.625001907348633
    6. '(' → logprob: -18.125001907348633
    7. '()))' → logprob: -18.500001907348633
    8. ')' → logprob: -18.500001907348633
    9. ' .' → logprob: -18.875001907348633
    10. '())' → logprob: -19.500001907348633

Token 310: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.0339031834737398e-05
    2. ')' → logprob: -11.250020027160645
    3. '))' → logprob: -13.000020027160645
    4. 'strip' → logprob: -13.375020027160645
    5. ' split' → logprob: -13.375020027160645
    6. 'spl' → logprob: -13.750020027160645
    7. '(split' → logprob: -15.000020027160645
    8. 'rstrip' → logprob: -15.750020027160645
    9. '().' → logprob: -16.00002098083496
    10. '.split' → logprob: -16.50002098083496

Token 311: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.019429463893175125
    2. '))' → logprob: -4.019429683685303
    3. '()))
' → logprob: -7.144429683685303
    4. '()' → logprob: -7.894429683685303
    5. '())' → logprob: -9.144429206848145
    6. '(' → logprob: -12.769429206848145
    7. '))
' → logprob: -12.894429206848145
    8. '()));' → logprob: -13.019429206848145
    9. '()))

' → logprob: -14.144429206848145
    10. ')' → logprob: -14.644429206848145

Token 312: 'ILL' (ID: 16050)
  Prédit: 'ILS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ILS' → logprob: -0.786405086517334
    2. 'IL' → logprob: -1.161405086517334
    3. 'IS' → logprob: -2.536405086517334
    4. 'IFS' → logprob: -3.036405086517334
    5. 'def' → logprob: -3.411405086517334
    6. 'S' → logprob: -4.161405086517334
    7. 'LS' → logprob: -4.411405086517334
    8. 'I' → logprob: -5.036405086517334
    9. 'INF' → logprob: -5.536405086517334
    10. 'IP' → logprob: -5.911405086517334

Token 313: 'F' (ID: 37)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0001737431448418647
    2. '=' → logprob: -9.000173568725586
    3. 'i' → logprob: -11.250173568725586
    4. '=[]' → logprob: -11.875173568725586
    5. '[' → logprob: -12.125173568725586
    6. ' =' → logprob: -12.250173568725586
    7. 'ambda' → logprob: -12.375173568725586
    8. '(' → logprob: -12.750173568725586
    9. 'l' → logprob: -13.250173568725586
    10. 'n' → logprob: -13.375173568725586

Token 314: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11897638440132141
    2. '=lambda' → logprob: -2.618976354598999
    3. ' =' → logprob: -3.243976354598999
    4. '(lambda' → logprob: -8.493976593017578
    5. 'lambda' → logprob: -9.493976593017578
    6. ' lambda' → logprob: -13.118976593017578
    7. 'ambda' → logprob: -13.618976593017578
    8. '＝' → logprob: -14.243976593017578
    9. '(' → logprob: -14.868976593017578
    10. '_lambda' → logprob: -14.868976593017578

Token 315: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.10176720470190048
    2. ' lambda' → logprob: -2.3517673015594482
    3. '(lambda' → logprob: -6.476767063140869
    4. '=lambda' → logprob: -10.851767539978027
    5. 'ambda' → logprob: -14.101767539978027
    6. 'n' → logprob: -15.976767539978027
    7. '.lambda' → logprob: -16.10176658630371
    8. '_lambda' → logprob: -16.72676658630371
    9. ' ' → logprob: -17.22676658630371
    10. 'λ' → logprob: -17.97676658630371

Token 316: ' n' (ID: 297)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.3211292624473572
    2. 'n' → logprob: -1.321129322052002
    3. '(lambda' → logprob: -5.571129322052002
    4. ' lambda' → logprob: -6.071129322052002
    5. '(n' → logprob: -6.821129322052002
    6. ' n' → logprob: -7.821129322052002
    7. '=lambda' → logprob: -9.071128845214844
    8. 'def' → logprob: -9.946128845214844
    9. 'ambda' → logprob: -10.321128845214844
    10. '(' → logprob: -10.946128845214844

Token 317: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28408706188201904
    2. '=' → logprob: -1.409087061882019
    3. '=lambda' → logprob: -6.534087181091309
    4. ')' → logprob: -7.409087181091309
    5. 'def' → logprob: -8.159087181091309
    6. ' =' → logprob: -8.534087181091309
    7. '(n' → logprob: -8.909087181091309
    8. '):' → logprob: -9.409087181091309
    9. 'n' → logprob: -9.784087181091309
    10. '=n' → logprob: -10.909087181091309

Token 318: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.10582330077886581
    2. '[' → logprob: -2.355823278427124
    3. '[List' → logprob: -5.605823516845703
    4. ' [' → logprob: -6.355823516845703
    5. '[l' → logprob: -8.730823516845703
    6. '[n' → logprob: -11.480823516845703
    7. '[line' → logprob: -11.855823516845703
    8. '[int' → logprob: -13.355823516845703
    9. '[L' → logprob: -13.730823516845703
    10. '[len' → logprob: -13.855823516845703

Token 319: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.1008713702030946e-06
    2. ' list' → logprob: -13.125001907348633
    3. '
' → logprob: -19.000001907348633
    4. '   ' → logprob: -20.125001907348633
    5. 'List' → logprob: -20.500001907348633
    6. '	list' → logprob: -20.500001907348633
    7. '[' → logprob: -20.500001907348633
    8. ']' → logprob: -20.750001907348633
    9. '[list' → logprob: -20.750001907348633
    10. '```' → logprob: -21.250001907348633

Token 320: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0004336493439041078
    2. 'map' → logprob: -7.750433444976807
    3. '	map' → logprob: -13.875433921813965
    4. '(' → logprob: -14.000433921813965
    5. ' map' → logprob: -14.250433921813965
    6. '.map' → logprob: -15.250433921813965
    7. ',map' → logprob: -15.375433921813965
    8. '<|end|>' → logprob: -17.50043296813965
    9. '/map' → logprob: -18.00043296813965
    10. ' (' → logprob: -18.25043296813965

Token 321: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.014211570844054222
    2. 'float' → logprob: -4.264211654663086
    3. '=float' → logprob: -10.389211654663086
    4. '<float' → logprob: -12.139211654663086
    5. ',float' → logprob: -12.139211654663086
    6. ' float' → logprob: -12.514211654663086
    7. '(' → logprob: -13.889211654663086
    8. '	float' → logprob: -14.014211654663086
    9. 'flo' → logprob: -14.139211654663086
    10. '```' → logprob: -15.889211654663086

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.657694418914616e-05
    2. ',input' → logprob: -9.875056266784668
    3. 'input' → logprob: -12.500056266784668
    4. ',float' → logprob: -13.875056266784668
    5. ' ,' → logprob: -15.500056266784668
    6. 'float' → logprob: -16.500057220458984
    7. '(input' → logprob: -16.625057220458984
    8. ',int' → logprob: -18.125057220458984
    9. '```' → logprob: -18.250057220458984
    10. 'import' → logprob: -18.625057220458984

Token 323: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004096685443073511
    2. ' input' → logprob: -5.504096508026123
    3. '(input' → logprob: -11.004096984863281
    4. ')' → logprob: -14.629096984863281
    5. ',input' → logprob: -14.754096984863281
    6. 'float' → logprob: -15.004096984863281
    7. '<input' → logprob: -15.629096984863281
    8. '=input' → logprob: -16.25409698486328
    9. '[input' → logprob: -16.62909698486328
    10. '_input' → logprob: -16.62909698486328

Token 324: '().' (ID: 1454)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07708717882633209
    2. '().' → logprob: -2.827087163925171
    3. '(),' → logprob: -4.32708740234375
    4. '()' → logprob: -7.32708740234375
    5. ',input' → logprob: -8.07708740234375
    6. ' ,' → logprob: -8.82708740234375
    7. ' ' → logprob: -9.20208740234375
    8. '))' → logprob: -9.32708740234375
    9. 'split' → logprob: -9.45208740234375
    10. 'input' → logprob: -10.07708740234375

Token 325: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.014208638109266758
    2. 'input' → logprob: -4.264208793640137
    3. ')' → logprob: -11.264208793640137
    4. ' split' → logprob: -11.389208793640137
    5. ' input' → logprob: -11.889208793640137
    6. '(input' → logprob: -12.639208793640137
    7. '
' → logprob: -12.764208793640137
    8. ' ' → logprob: -13.389208793640137
    9. 'strip' → logprob: -13.639208793640137
    10. 'skip' → logprob: -13.639208793640137

Token 326: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0007244677981361747
    2. '))' → logprob: -7.2507243156433105
    3. '())' → logprob: -11.375724792480469
    4. '()' → logprob: -13.250724792480469
    5. '()))
' → logprob: -14.000724792480469
    6. '()[' → logprob: -15.750724792480469
    7. '()
' → logprob: -16.12572479248047
    8. '(' → logprob: -16.75072479248047
    9. '"))' → logprob: -17.25072479248047
    10. ' ))' → logprob: -17.37572479248047

Token 327: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16040436923503876
    2. ' for' → logprob: -1.9104043245315552
    3. ')' → logprob: -8.660404205322266
    4. '()' → logprob: -12.410404205322266
    5. '	for' → logprob: -14.035404205322266
    6. '   ' → logprob: -14.160404205322266
    7. '
' → logprob: -15.035404205322266
    8. ']' → logprob: -15.160404205322266
    9. 'def' → logprob: -15.660404205322266
    10. '(n' → logprob: -15.785404205322266

Token 328: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008681347593665123
    2. ' _' → logprob: -4.758681297302246
    3. '_range' → logprob: -10.133681297302246
    4. ' range' → logprob: -10.633681297302246
    5. 'range' → logprob: -13.758681297302246
    6. ' in' → logprob: -14.133681297302246
    7. ' ' → logprob: -14.508681297302246
    8. '_in' → logprob: -14.758681297302246
    9. '
' → logprob: -15.508681297302246
    10. ' 
' → logprob: -17.133682250976562

Token 329: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.44051069021224976
    2. ' range' → logprob: -1.5655107498168945
    3. '_' → logprob: -2.3155107498168945
    4. 'range' → logprob: -3.1905107498168945
    5. 'in' → logprob: -5.5655107498168945
    6. '_range' → logprob: -6.3155107498168945
    7. '(range' → logprob: -6.6905107498168945
    8. ' _' → logprob: -7.6905107498168945
    9. '_in' → logprob: -9.940510749816895
    10. 'n' → logprob: -11.065510749816895

Token 330: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10164617002010345
    2. ' range' → logprob: -2.3516461849212646
    3. '_' → logprob: -7.2266459465026855
    4. '_range' → logprob: -7.3516459465026855
    5. '(range' → logprob: -9.976646423339844
    6. ' _' → logprob: -11.101646423339844
    7. ' in' → logprob: -11.976646423339844
    8. 'n' → logprob: -13.976646423339844
    9. '	range' → logprob: -14.476646423339844
    10. '
' → logprob: -14.851646423339844

Token 331: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01432004477828741
    2. '(n' → logprob: -4.264319896697998
    3. ' n' → logprob: -8.764320373535156
    4. '(' → logprob: -16.264320373535156
    5. '	n' → logprob: -16.514320373535156
    6. ' (' → logprob: -16.514320373535156
    7. '_n' → logprob: -16.764320373535156
    8. 'range' → logprob: -17.014320373535156
    9. '
' → logprob: -18.389320373535156
    10. ')n' → logprob: -19.014320373535156

Token 332: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0407918356359005
    2. ']' → logprob: -3.2907917499542236
    3. '()]' → logprob: -5.915791988372803
    4. ')' → logprob: -10.290791511535645
    5. ')]
' → logprob: -12.540791511535645
    6. '])]' → logprob: -12.665791511535645
    7. '])' → logprob: -12.915791511535645
    8. ']
' → logprob: -13.290791511535645
    9. '(n' → logprob: -13.415791511535645
    10. ')])' → logprob: -13.915791511535645

Token 333: 'LT' (ID: 38436)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2916281223297119
    2. 'DL' → logprob: -3.291628122329712
    3. 'IR' → logprob: -3.666628122329712
    4. 'D' → logprob: -3.666628122329712
    5. '#' → logprob: -3.791628122329712
    6. 'DP' → logprob: -4.166627883911133
    7. 'LS' → logprob: -4.291627883911133
    8. 'IS' → logprob: -4.416627883911133
    9. 'DR' → logprob: -4.541627883911133
    10. 'IL' → logprob: -5.041627883911133

Token 334: 'OS' (ID: 3360)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.576781690120697
    2. '=lambda' → logprob: -0.951781690120697
    3. '=' → logprob: -3.076781749725342
    4. 'ambda' → logprob: -5.951781749725342
    5. 'S' → logprob: -6.451781749725342
    6. 'lambda' → logprob: -7.451781749725342
    7. 'I' → logprob: -7.826781749725342
    8. '=[]' → logprob: -8.451781272888184
    9. '(lambda' → logprob: -8.951781272888184
    10. 'L' → logprob: -9.076781272888184

Token 335: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.035569239407777786
    2. '=' → logprob: -3.410569190979004
    3. '=lambda' → logprob: -6.285569190979004
    4. 'lambda' → logprob: -10.785569190979004
    5. 'ambda' → logprob: -11.410569190979004
    6. 'S' → logprob: -12.035569190979004
    7. '(lambda' → logprob: -12.410569190979004
    8. 's' → logprob: -12.535569190979004
    9. ' ' → logprob: -12.535569190979004
    10. 'f' → logprob: -13.535569190979004

Token 336: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.0041166311129927635
    2. ' lambda' → logprob: -5.504116535186768
    3. '(lambda' → logprob: -10.379117012023926
    4. '=lambda' → logprob: -12.129117012023926
    5. 'str' → logprob: -13.754117012023926
    6. 'lam' → logprob: -15.379117012023926
    7. '   ' → logprob: -16.50411605834961
    8. '_lambda' → logprob: -16.50411605834961
    9. '  ' → logprob: -16.75411605834961
    10. '    ' → logprob: -17.12911605834961

Token 337: ' lst' (ID: 33384)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.1756359338760376
    2. ' lambda' → logprob: -2.550635814666748
    3. 's' → logprob: -3.175635814666748
    4. ':' → logprob: -3.675635814666748
    5. 'str' → logprob: -5.175635814666748
    6. ' s' → logprob: -5.800635814666748
    7. '(lambda' → logprob: -6.300635814666748
    8. 'list' → logprob: -6.425635814666748
    9. 'n' → logprob: -7.425635814666748
    10. 'int' → logprob: -7.425635814666748

Token 338: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006933112628757954
    2. '=' → logprob: -5.131933212280273
    3. ' :' → logprob: -8.006933212280273
    4. '='' → logprob: -8.006933212280273
    5. '"' → logprob: -9.631933212280273
    6. '":' → logprob: -9.881933212280273
    7. '':' → logprob: -10.131933212280273
    8. '=lambda' → logprob: -10.256933212280273
    9. '="' → logprob: -10.381933212280273
    10. '''.' → logprob: -10.756933212280273

Token 339: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.5752025246620178
    2. ''' → logprob: -1.450202465057373
    3. '"' → logprob: -2.075202465057373
    4. ' sep' → logprob: -3.450202465057373
    5. 'lambda' → logprob: -3.700202465057373
    6. 'str' → logprob: -4.575202465057373
    7. ' lambda' → logprob: -5.200202465057373
    8. '''.' → logprob: -6.325202465057373
    9. '''' → logprob: -6.950202465057373
    10. ' '' → logprob: -7.200202465057373

Token 340: '='' (ID: 2053)
  Prédit: '=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.0615326352417469
    2. '=' → logprob: -3.061532735824585
    3. '=''' → logprob: -4.811532497406006
    4. '=',' → logprob: -5.936532497406006
    5. '="' → logprob: -6.936532497406006
    6. '=""' → logprob: -8.186532974243164
    7. '='\' → logprob: -8.436532974243164
    8. ':' → logprob: -8.561532974243164
    9. '='',' → logprob: -8.811532974243164
    10. '=None' → logprob: -8.936532974243164

Token 341: ' ':' (ID: 30751)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02068856917321682
    2. '''' → logprob: -4.145688533782959
    3. '"' → logprob: -5.645688533782959
    4. ''\' → logprob: -7.145688533782959
    5. '""' → logprob: -8.770689010620117
    6. ' '' → logprob: -9.395689010620117
    7. '"":' → logprob: -9.895689010620117
    8. '':' → logprob: -11.895689010620117
    9. '''.' → logprob: -12.020689010620117
    10. '"\' → logprob: -12.645689010620117

Token 342: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.0005996193503960967
    2. 'return' → logprob: -8.00059986114502
    3. ' sep' → logprob: -8.25059986114502
    4. 'str' → logprob: -13.62559986114502
    5. ' return' → logprob: -13.75059986114502
    6. 'print' → logprob: -15.62559986114502
    7. '''.' → logprob: -15.62559986114502
    8. 'se' → logprob: -15.75059986114502
    9. 'separator' → logprob: -16.000598907470703
    10. 'f' → logprob: -16.750598907470703

Token 343: '.join' (ID: 11004)
  Prédit: '.join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.join' → logprob: -0.07923091948032379
    2. '.' → logprob: -2.579231023788452
    3. 'join' → logprob: -8.079231262207031
    4. '.j' → logprob: -11.204231262207031
    5. ' .' → logprob: -11.329231262207031
    6. ').' → logprob: -12.954231262207031
    7. '.write' → logprob: -14.579231262207031
    8. 'j' → logprob: -14.704231262207031
    9. ' ' → logprob: -15.079231262207031
    10. 'return' → logprob: -15.454231262207031

Token 344: '(map' (ID: 16946)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.3106464147567749
    2. 'lst' → logprob: -1.560646414756775
    3. 'str' → logprob: -3.0606465339660645
    4. '(map' → logprob: -5.0606465339660645
    5. '[str' → logprob: -5.9356465339660645
    6. '(str' → logprob: -7.1856465339660645
    7. '(lst' → logprob: -7.9356465339660645
    8. 'list' → logprob: -9.810646057128906
    9. ' map' → logprob: -11.685646057128906
    10. '[' → logprob: -13.810646057128906

Token 345: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00523719098418951
    2. 'str' → logprob: -5.255237102508545
    3. '(chr' → logprob: -13.630237579345703
    4. '[str' → logprob: -14.255237579345703
    5. '```' → logprob: -14.630237579345703
    6. '=str' → logprob: -14.755237579345703
    7. '	str' → logprob: -15.630237579345703
    8. '
' → logprob: -15.755237579345703
    9. ' str' → logprob: -16.380237579345703
    10. '(' → logprob: -16.380237579345703

Token 346: ',' (ID: 11)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.33050456643104553
    2. ',' → logprob: -1.3305045366287231
    3. 'lst' → logprob: -4.330504417419434
    4. ',l' → logprob: -5.580504417419434
    5. '(' → logprob: -9.705504417419434
    6. ' lst' → logprob: -10.080504417419434
    7. ' ,' → logprob: -10.955504417419434
    8. ',
' → logprob: -11.830504417419434
    9. ',list' → logprob: -12.080504417419434
    10. ',(' → logprob: -12.080504417419434

Token 347: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.000553151941858232
    2. ' lst' → logprob: -7.500553131103516
    3. '(lst' → logprob: -16.375553131103516
    4. 'list' → logprob: -18.000553131103516
    5. '   ' → logprob: -19.250553131103516
    6. ' ' → logprob: -19.500553131103516
    7. '    ' → logprob: -20.375553131103516
    8. '
' → logprob: -20.500553131103516
    9. '_lst' → logprob: -20.625553131103516
    10. '.lst' → logprob: -20.875553131103516

Token 348: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0381050631403923
    2. ')' → logprob: -3.288105010986328
    3. '()))' → logprob: -10.413105010986328
    4. ')))' → logprob: -11.163105010986328
    5. '())' → logprob: -11.288105010986328
    6. '))
' → logprob: -12.663105010986328
    7. '()' → logprob: -13.038105010986328
    8. ' ))' → logprob: -14.538105010986328
    9. ')
' → logprob: -15.788105010986328
    10. '))

' → logprob: -15.788105010986328

Token 349: 'DEC' (ID: 57617)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023464540019631386
    2. ')' → logprob: -4.023464679718018
    3. '
' → logprob: -6.148464679718018
    4. '<|end|>' → logprob: -6.398464679718018
    5. '#' → logprob: -7.898464679718018
    6. 'newline' → logprob: -8.77346420288086
    7. '\' → logprob: -9.14846420288086
    8. '\n' → logprob: -9.27346420288086
    9. ',' → logprob: -9.39846420288086
    10. '<|end|>' → logprob: -9.52346420288086

Token 350: ' =' (ID: 314)
  Prédit: 'IMAL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IMAL' → logprob: -0.9868302941322327
    2. '=' → logprob: -1.111830234527588
    3. 'imal' → logprob: -2.236830234527588
    4. ' =' → logprob: -2.361830234527588
    5. '=lambda' → logprob: -2.486830234527588
    6. 'def' → logprob: -5.111830234527588
    7. 'imals' → logprob: -5.861830234527588
    8. 'IM' → logprob: -6.236830234527588
    9. ')' → logprob: -7.611830234527588
    10. '(lambda' → logprob: -7.736830234527588

Token 351: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.10333570837974548
    2. ' lambda' → logprob: -2.6033356189727783
    3. '(lambda' → logprob: -3.8533356189727783
    4. '=lambda' → logprob: -6.978335857391357
    5. '2' → logprob: -7.728335857391357
    6. '3' → logprob: -8.6033353805542
    7. '4' → logprob: -8.6033353805542
    8. 'round' → logprob: -8.7283353805542
    9. '6' → logprob: -8.9783353805542
    10. '10' → logprob: -9.2283353805542

Token 352: ' lst' (ID: 33384)
  Prédit: 'round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'round' → logprob: -1.1890088319778442
    2. 'lambda' → logprob: -1.1890088319778442
    3. 'x' → logprob: -1.5640088319778442
    4. ' x' → logprob: -2.3140087127685547
    5. ' lambda' → logprob: -3.5640087127685547
    6. 'float' → logprob: -4.064008712768555
    7. 'int' → logprob: -4.814008712768555
    8. ' round' → logprob: -5.189008712768555
    9. ':' → logprob: -5.314008712768555
    10. 'n' → logprob: -5.439008712768555

Token 353: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.709404706954956
    2. ':' → logprob: -0.709404706954956
    3. ' :' → logprob: -4.834404945373535
    4. '=' → logprob: -5.959404945373535
    5. '(lst' → logprob: -6.084404945373535
    6. '=lambda' → logprob: -6.834404945373535
    7. ' ,' → logprob: -7.209404945373535
    8. ',l' → logprob: -7.959404945373535
    9. ' lst' → logprob: -8.459404945373535
    10. '[::-' → logprob: -8.959404945373535

Token 354: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2874663472175598
    2. '[len' → logprob: -2.662466287612915
    3. '[l' → logprob: -3.287466287612915
    4. ' [' → logprob: -3.287466287612915
    5. '[min' → logprob: -3.412466287612915
    6. '[list' → logprob: -3.662466287612915
    7. 'list' → logprob: -4.037466526031494
    8. '[max' → logprob: -5.037466526031494
    9. '[L' → logprob: -5.412466526031494
    10. '[(' → logprob: -5.787466526031494

Token 355: 'x' (ID: 87)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10879165679216385
    2. 'float' → logprob: -3.7337915897369385
    3. 'list' → logprob: -3.9837915897369385
    4. 'x' → logprob: -3.9837915897369385
    5. 'lst' → logprob: -4.483791828155518
    6. 'round' → logprob: -4.608791828155518
    7. 'Decimal' → logprob: -5.608791828155518
    8. 'len' → logprob: -6.108791828155518
    9. '-' → logprob: -6.108791828155518
    10. 'decimal' → logprob: -6.358791828155518

Token 356: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12742610275745392
    2. ' -' → logprob: -2.1274261474609375
    3. '+' → logprob: -8.377426147460938
    4. ' for' → logprob: -9.502426147460938
    5. '>>' → logprob: -10.252426147460938
    6. '//' → logprob: -10.752426147460938
    7. ' +' → logprob: -11.002426147460938
    8. '-dec' → logprob: -11.252426147460938
    9. '.decode' → logprob: -11.252426147460938
    10. '.dec' → logprob: -11.377426147460938

Token 357: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013132700696587563
    2. '0' → logprob: -4.763132572174072
    3. ' ' → logprob: -5.888132572174072
    4. '.' → logprob: -6.388132572174072
    5. 'lst' → logprob: -11.38813304901123
    6. '(' → logprob: -11.88813304901123
    7. ' .' → logprob: -12.13813304901123
    8. 'int' → logprob: -12.63813304901123
    9. '2' → logprob: -12.88813304901123
    10. 'Decimal' → logprob: -13.01313304901123

Token 358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.755678961984813e-05
    2. ' ' → logprob: -10.125077247619629
    3. '0' → logprob: -10.500077247619629
    4. '.' → logprob: -12.625077247619629
    5. 'lst' → logprob: -13.000077247619629
    6. '(' → logprob: -13.125077247619629
    7. 'x' → logprob: -14.750077247619629
    8. 'int' → logprob: -15.125077247619629
    9. 'len' → logprob: -15.250077247619629
    10. '```' → logprob: -15.750077247619629

Token 359: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1602521538734436
    2. 'for' → logprob: -1.9102520942687988
    3. '	for' → logprob: -10.535252571105957
    4. '   ' → logprob: -14.035252571105957
    5. ' ' → logprob: -14.660252571105957
    6. ')' → logprob: -17.03525161743164
    7. '
' → logprob: -17.53525161743164
    8. 'x' → logprob: -17.53525161743164
    9. ',' → logprob: -18.16025161743164
    10. '  ' → logprob: -18.28525161743164

Token 360: ' x' (ID: 1215)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.0018165516667068005
    2. ' lst' → logprob: -6.626816749572754
    3. 'x' → logprob: -7.626816749572754
    4. ' x' → logprob: -13.126816749572754
    5. '_lst' → logprob: -14.876816749572754
    6. '(lst' → logprob: -14.876816749572754
    7. 'list' → logprob: -15.626816749572754
    8. 'ls' → logprob: -15.626816749572754
    9. '.lst' → logprob: -16.001815795898438
    10. '_' → logprob: -16.126815795898438

Token 361: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2519359588623047
    2. ' in' → logprob: -1.5019359588623047
    3. 'lst' → logprob: -12.376935958862305
    4. ' ' → logprob: -13.751935958862305
    5. '
' → logprob: -15.251935958862305
    6. '<|end|>' → logprob: -15.376935958862305
    7. 'inp' → logprob: -15.626935958862305
    8. 'x' → logprob: -16.126935958862305
    9. '	in' → logprob: -16.126935958862305
    10. ' lst' → logprob: -16.251935958862305

Token 362: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -8.923874702304602e-05
    2. ' lst' → logprob: -9.375089645385742
    3. 'list' → logprob: -12.625089645385742
    4. 'lt' → logprob: -14.750089645385742
    5. '(lst' → logprob: -15.125089645385742
    6. '_lst' → logprob: -15.750089645385742
    7. '[' → logprob: -16.750089645385742
    8. 'lit' → logprob: -16.750089645385742
    9. 'ls' → logprob: -16.875089645385742
    10. 'x' → logprob: -17.250089645385742

Token 363: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.248469718324486e-05
    2. ' ]' → logprob: -11.000022888183594
    3. ']
' → logprob: -12.500022888183594
    4. ')]' → logprob: -13.625022888183594
    5. ')' → logprob: -14.625022888183594
    6. '()]' → logprob: -15.250022888183594
    7. '])' → logprob: -16.500022888183594
    8. ']

' → logprob: -17.875022888183594
    9. '}' → logprob: -18.500022888183594
    10. '']' → logprob: -19.000022888183594

Token 364: 'INC' (ID: 58311)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018426407128572464
    2. '
' → logprob: -5.268426418304443
    3. ')' → logprob: -5.518426418304443
    4. '#' → logprob: -5.893426418304443
    5. 'class' → logprob: -6.643426418304443
    6. '\' → logprob: -7.268426418304443
    7. '\n' → logprob: -8.018425941467285
    8. 'DL' → logprob: -8.143425941467285
    9. '<|end|>' → logprob: -8.268425941467285
    10. 'from' → logprob: -8.393425941467285

Token 365: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016085047274827957
    2. ' =' → logprob: -4.141085147857666
    3. '=lambda' → logprob: -9.891084671020508
    4. '＝' → logprob: -16.641084671020508
    5. '=
' → logprob: -17.266084671020508
    6. '<|end|>' → logprob: -17.266084671020508
    7. ' ' → logprob: -17.641084671020508
    8. '=}' → logprob: -18.141084671020508
    9. '=[]' → logprob: -19.016084671020508
    10. 's' → logprob: -19.141084671020508

Token 366: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.06230375915765762
    2. ' lambda' → logprob: -2.8123037815093994
    3. '(lambda' → logprob: -8.06230354309082
    4. '=lambda' → logprob: -10.93730354309082
    5. 'def' → logprob: -13.06230354309082
    6. '   ' → logprob: -14.68730354309082
    7. 'lam' → logprob: -15.43730354309082
    8. ' ' → logprob: -16.43730354309082
    9. '_lambda' → logprob: -16.93730354309082
    10. 'ambda' → logprob: -17.06230354309082

Token 367: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.15196490287780762
    2. 'lambda' → logprob: -2.1519649028778076
    3. ' lambda' → logprob: -4.401965141296387
    4. ' lst' → logprob: -4.401965141296387
    5. '(lambda' → logprob: -9.151965141296387
    6. '(lst' → logprob: -9.401965141296387
    7. '=lambda' → logprob: -11.901965141296387
    8. 'def' → logprob: -12.276965141296387
    9. 'list' → logprob: -12.276965141296387
    10. ' ' → logprob: -12.526965141296387

Token 368: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010036430321633816
    2. '=' → logprob: -4.635036468505859
    3. '=lambda' → logprob: -8.51003646850586
    4. ' :' → logprob: -10.51003646850586
    5. ' =' → logprob: -10.88503646850586
    6. '(lst' → logprob: -11.51003646850586
    7. 'lambda' → logprob: -11.88503646850586
    8. 'def' → logprob: -12.51003646850586
    9. ':list' → logprob: -13.13503646850586
    10. ':=' → logprob: -13.13503646850586

Token 369: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5549721121788025
    2. '[x' → logprob: -1.0549721717834473
    3. '[' → logprob: -2.5549721717834473
    4. '[l' → logprob: -12.929971694946289
    5. '[i' → logprob: -13.054971694946289
    6. '   ' → logprob: -13.429971694946289
    7. '[s' → logprob: -13.554971694946289
    8. '[t' → logprob: -13.804971694946289
    9. '[y' → logprob: -14.054971694946289
    10. '[list' → logprob: -14.054971694946289

Token 370: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.2200749754119897e-06
    2. ' x' → logprob: -13.375001907348633
    3. '(x' → logprob: -15.375001907348633
    4. '[x' → logprob: -15.500001907348633
    5. '   ' → logprob: -15.875001907348633
    6. '
' → logprob: -17.000001907348633
    7. '  ' → logprob: -17.500001907348633
    8. ' ' → logprob: -17.500001907348633
    9. '[' → logprob: -18.250001907348633
    10. '	x' → logprob: -18.375001907348633

Token 371: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20141783356666565
    2. '+' → logprob: -1.7014178037643433
    3. '+x' → logprob: -12.951417922973633
    4. ' ' → logprob: -14.201417922973633
    5. '＋' → logprob: -14.951417922973633
    6. '   ' → logprob: -15.326417922973633
    7. 'x' → logprob: -15.701417922973633
    8. ' x' → logprob: -16.326417922973633
    9. ' +
' → logprob: -16.451417922973633
    10. '
' → logprob: -16.576417922973633

Token 372: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01105159055441618
    2. ' ' → logprob: -4.511051654815674
    3. 'for' → logprob: -13.511051177978516
    4. ' for' → logprob: -13.761051177978516
    5. ' x' → logprob: -14.136051177978516
    6. 'x' → logprob: -14.386051177978516
    7. '0' → logprob: -17.261051177978516
    8. '   ' → logprob: -17.386051177978516
    9. '-' → logprob: -17.761051177978516
    10. '```' → logprob: -18.136051177978516

Token 373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.249780638725497e-05
    2. ' ' → logprob: -10.500032424926758
    3. 'lst' → logprob: -12.500032424926758
    4. 'x' → logprob: -13.750032424926758
    5. 'for' → logprob: -16.250032424926758
    6. ' lst' → logprob: -17.000032424926758
    7. '```' → logprob: -17.500032424926758
    8. '[' → logprob: -17.625032424926758
    9. '0' → logprob: -17.750032424926758
    10. ' x' → logprob: -17.750032424926758

Token 374: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10020741820335388
    2. 'for' → logprob: -2.3502073287963867
    3. '	for' → logprob: -14.225207328796387
    4. ')' → logprob: -17.350208282470703
    5. 'lst' → logprob: -17.350208282470703
    6. ' in' → logprob: -17.600208282470703
    7. ' ' → logprob: -17.975208282470703
    8. '()' → logprob: -18.100208282470703
    9. ' lst' → logprob: -18.100208282470703
    10. '   ' → logprob: -19.225208282470703

Token 375: ' x' (ID: 1215)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -3.333223139634356e-05
    2. ' lst' → logprob: -10.375033378601074
    3. 'x' → logprob: -13.375033378601074
    4. '(lst' → logprob: -14.500033378601074
    5. 'list' → logprob: -17.250032424926758
    6. '_lst' → logprob: -18.000032424926758
    7. 'ls' → logprob: -18.375032424926758
    8. '.lst' → logprob: -19.000032424926758
    9. 'l' → logprob: -19.625032424926758
    10. '
' → logprob: -19.875032424926758

Token 376: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07858701050281525
    2. 'in' → logprob: -2.703587055206299
    3. 'lst' → logprob: -5.078587055206299
    4. '(lst' → logprob: -6.078587055206299
    5. ' lst' → logprob: -9.45358657836914
    6. ' ' → logprob: -12.70358657836914
    7. '
' → logprob: -13.32858657836914
    8. '_lst' → logprob: -13.82858657836914
    9. '  ' → logprob: -14.07858657836914
    10. ']' → logprob: -14.07858657836914

Token 377: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.00014048899174667895
    2. ' lst' → logprob: -8.875140190124512
    3. 'list' → logprob: -15.000140190124512
    4. '(lst' → logprob: -15.500140190124512
    5. '_lst' → logprob: -17.750141143798828
    6. '.lst' → logprob: -18.375141143798828
    7. '```' → logprob: -19.375141143798828
    8. 'range' → logprob: -19.875141143798828
    9. '
' → logprob: -20.125141143798828
    10. 'lit' → logprob: -20.250141143798828

Token 378: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011427151912357658
    2. '()]' → logprob: -9.500114440917969
    3. ']
' → logprob: -11.125114440917969
    4. ' ]' → logprob: -11.375114440917969
    5. 'lst' → logprob: -11.500114440917969
    6. ')]' → logprob: -13.500114440917969
    7. 'def' → logprob: -14.375114440917969
    8. '(lst' → logprob: -15.500114440917969
    9. ']

' → logprob: -15.625114440917969
    10. '])' → logprob: -15.750114440917969

Token 379: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.043678849935531616
    2. 'class' → logprob: -3.5436787605285645
    3. '#' → logprob: -4.5436787605285645
    4. 'from' → logprob: -7.4186787605285645
    5. ')' → logprob: -7.6686787605285645
    6. '@' → logprob: -7.6686787605285645
    7. 'd' → logprob: -7.9186787605285645
    8. 'import' → logprob: -8.293679237365723
    9. 'D' → logprob: -8.418679237365723
    10. '
' → logprob: -9.293679237365723

Token 380: ' Queue' (ID: 35581)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.8550168871879578
    2. ' deque' → logprob: -1.8550169467926025
    3. 'Counter' → logprob: -1.9800169467926025
    4. ' Counter' → logprob: -2.3550169467926025
    5. 'Deque' → logprob: -3.1050169467926025
    6. ' defaultdict' → logprob: -3.2300169467926025
    7. 'Segment' → logprob: -3.4800169467926025
    8. ' Segment' → logprob: -3.7300169467926025
    9. ' Union' → logprob: -5.605016708374023
    10. '_' → logprob: -5.730016708374023

Token 381: '(de' (ID: 20586)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018518301658332348
    2. 'deque' → logprob: -9.625185012817383
    3. ':
' → logprob: -10.000185012817383
    4. '():' → logprob: -10.750185012817383
    5. '(' → logprob: -11.125185012817383
    6. '(object' → logprob: -11.750185012817383
    7. ' deque' → logprob: -11.750185012817383
    8. 'Deque' → logprob: -11.750185012817383
    9. '(de' → logprob: -12.250185012817383
    10. '>:' → logprob: -13.000185012817383

Token 382: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0001831565605243668
    2. 'queue' → logprob: -9.50018310546875
    3. 'q' → logprob: -9.75018310546875
    4. 'f' → logprob: -10.37518310546875
    5. 'ques' → logprob: -11.75018310546875
    6. 'qu' → logprob: -12.00018310546875
    7. 'deque' → logprob: -12.75018310546875
    8. '```' → logprob: -13.75018310546875
    9. 'quest' → logprob: -16.00018310546875
    10. 'fault' → logprob: -16.25018310546875

Token 383: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017123052384704351
    2. '):
' → logprob: -6.376712322235107
    3. '[' → logprob: -12.37671184539795
    4. ')' → logprob: -12.75171184539795
    5. ' ):' → logprob: -13.50171184539795
    6. '[int' → logprob: -14.25171184539795
    7. '):
' → logprob: -14.87671184539795
    8. '):

' → logprob: -14.87671184539795
    9. '[]):' → logprob: -15.00171184539795
    10. ':' → logprob: -17.126712799072266

Token 384: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2869761884212494
    2. ':' → logprob: -1.4119762182235718
    3. ' :' → logprob: -6.161976337432861
    4. ' def' → logprob: -6.161976337432861
    5. '    ' → logprob: -7.536976337432861
    6. 'def' → logprob: -8.036975860595703
    7. '):' → logprob: -8.411975860595703
    8. ':
' → logprob: -8.536975860595703
    9. ':def' → logprob: -9.411975860595703
    10. '():' → logprob: -9.661975860595703

Token 385: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22189806401729584
    2. ' def' → logprob: -2.096898078918457
    3. 'def' (adapté à ' def') → logprob: -2.596898078918457
    4. ' pass' → logprob: -6.471898078918457
    5. 'pass' → logprob: -9.721898078918457
    6. '    ' → logprob: -11.471898078918457
    7. '    
' → logprob: -11.721898078918457
    8. '	def' → logprob: -11.846898078918457
    9. '
' → logprob: -12.096898078918457
    10. ' """' → logprob: -12.596898078918457

Token 386: ' is' (ID: 382)
  Prédit: ' append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' append' → logprob: -0.6090779900550842
    2. 'append' → logprob: -1.4840779304504395
    3. ' __' → logprob: -1.8590779304504395
    4. '__' → logprob: -3.1090779304504395
    5. 'init' → logprob: -4.2340779304504395
    6. ' p' → logprob: -4.8590779304504395
    7. 'p' → logprob: -5.8590779304504395
    8. '_append' → logprob: -6.8590779304504395
    9. ' init' → logprob: -7.1090779304504395
    10. '```' → logprob: -8.359078407287598

Token 387: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -0.011352897621691227
    2. 'empty' → logprob: -4.511353015899658
    3. '_full' → logprob: -9.1363525390625
    4. '_' → logprob: -9.1363525390625
    5. 'Empty' → logprob: -9.5113525390625
    6. 'full' → logprob: -12.5113525390625
    7. '_EMPTY' → logprob: -12.6363525390625
    8. '_em' → logprob: -13.1363525390625
    9. '-empty' → logprob: -13.2613525390625
    10. ' empty' → logprob: -13.3863525390625

Token 388: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004376836586743593
    2. '():' → logprob: -5.7543768882751465
    3. '()' → logprob: -7.2543768882751465
    4. '(' → logprob: -8.004376411437988
    5. 'self' → logprob: -8.879376411437988
    6. '():
' → logprob: -11.379376411437988
    7. '(s' → logprob: -12.504376411437988
    8. ':' → logprob: -13.879376411437988
    9. 's' → logprob: -14.754376411437988
    10. '(se' → logprob: -15.004376411437988

Token 389: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007670864462852478
    2. '):
' → logprob: -5.007670879364014
    3. ')' → logprob: -7.007670879364014
    4. '()' → logprob: -10.632670402526855
    5. 'self' → logprob: -11.007670402526855
    6. '():' → logprob: -12.132670402526855
    7. ' ):' → logprob: -13.257670402526855
    8. '()):
' → logprob: -13.632670402526855
    9. '):

' → logprob: -14.882670402526855
    10. '):
' → logprob: -15.257670402526855

Token 390: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0019658661913126707
    2. 'self' → logprob: -6.3769659996032715
    3. '(' → logprob: -8.626965522766113
    4. '():' → logprob: -9.626965522766113
    5. 'def' → logprob: -11.876965522766113
    6. '   ' → logprob: -13.126965522766113
    7. ' self' → logprob: -13.251965522766113
    8. '(s' → logprob: -13.251965522766113
    9. ' (' → logprob: -13.626965522766113
    10. '()' → logprob: -13.626965522766113

Token 391: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0022112776059657335
    2. ' bool' → logprob: -6.127211093902588
    3. 'None' → logprob: -11.127211570739746
    4. 'int' → logprob: -12.627211570739746
    5. 'self' → logprob: -12.877211570739746
    6. 'True' → logprob: -13.127211570739746
    7. '(bool' → logprob: -14.252211570739746
    8. '()' → logprob: -14.752211570739746
    9. '<bool' → logprob: -15.002211570739746
    10. '    ' → logprob: -15.002211570739746

Token 392: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007027461193501949
    2. ':
' → logprob: -5.007027626037598
    3. '():' → logprob: -8.507027626037598
    4. ':return' → logprob: -9.757027626037598
    5. '       ' → logprob: -10.882027626037598
    6. '():
' → logprob: -11.132027626037598
    7. '   ' → logprob: -11.507027626037598
    8. '):' → logprob: -12.007027626037598
    9. '):
' → logprob: -13.757027626037598
    10. ':def' → logprob: -15.382027626037598

Token 393: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12547142803668976
    2. '<|end|>' → logprob: -2.750471353530884
    3. ' return' → logprob: -3.500471353530884
    4. '
' → logprob: -4.125471591949463
    5. 'return' → logprob: -5.500471591949463
    6. '   ' → logprob: -6.500471591949463
    7. ' 
' → logprob: -7.875471591949463
    8. '        
' → logprob: -7.875471591949463
    9. ' ' → logprob: -8.125471115112305
    10. '    ' → logprob: -8.500471115112305

Token 394: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7494593858718872
    2. 'not' → logprob: -0.7494593858718872
    3. 'len' → logprob: -2.9994592666625977
    4. ' len' → logprob: -5.499459266662598
    5. 'self' → logprob: -7.124459266662598
    6. ' self' → logprob: -10.374459266662598
    7. ' ' → logprob: -11.749459266662598
    8. '   ' → logprob: -12.124459266662598
    9. '  ' → logprob: -13.499459266662598
    10. '    ' → logprob: -14.624459266662598

Token 395: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008627460338175297
    2. ' self' → logprob: -4.758627414703369
    3. 'len' → logprob: -11.508627891540527
    4. 'bool' → logprob: -13.133627891540527
    5. '(self' → logprob: -14.883627891540527
    6. ' len' → logprob: -15.008627891540527
    7. '	self' → logprob: -16.25862693786621
    8. '
' → logprob: -17.38362693786621
    9. ' bool' → logprob: -17.38362693786621
    10. '[self' → logprob: -18.25862693786621

Token 396: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6325815916061401
    2. ')' → logprob: -0.8825815916061401
    3. '.__' → logprob: -4.38258171081543
    4. '<|end|>' → logprob: -4.38258171081543
    5. '.append' → logprob: -4.75758171081543
    6. '.p' → logprob: -5.25758171081543
    7. 'len' → logprob: -5.38258171081543
    8. '.clear' → logprob: -6.25758171081543
    9. 'deque' → logprob: -6.63258171081543
    10. ' or' → logprob: -7.00758171081543

Token 397: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22712653875350952
    2. '
' → logprob: -2.1021265983581543
    3. '    
' → logprob: -2.7271265983581543
    4. '<|end|>' → logprob: -4.477126598358154
    5. 'def' → logprob: -5.727126598358154
    6. '        
' → logprob: -8.727126121520996
    7. '

' → logprob: -8.852126121520996
    8. '  
' → logprob: -8.977126121520996
    9. ' 
' → logprob: -8.977126121520996
    10. ' def' → logprob: -9.352126121520996

Token 398: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 399: ' enqueue' (ID: 117229)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.19405165314674377
    2. 'enqueue' → logprob: -2.194051742553711
    3. 'push' → logprob: -3.819051742553711
    4. 'p' → logprob: -4.694051742553711
    5. 'peek' → logprob: -4.694051742553711
    6. 'de' → logprob: -4.694051742553711
    7. 'put' → logprob: -5.319051742553711
    8. 'front' → logprob: -5.694051742553711
    9. 'clear' → logprob: -6.444051742553711
    10. 'append' → logprob: -6.694051742553711

Token 400: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -13.50000286102295
    3. 'self' → logprob: -13.75000286102295
    4. '(s' → logprob: -15.37500286102295
    5. ' (' → logprob: -16.500003814697266
    6. '(
' → logprob: -16.625003814697266
    7. ' self' → logprob: -17.875003814697266
    8. '<|end|>' → logprob: -17.875003814697266
    9. '(sel' → logprob: -18.250003814697266
    10. 'def' → logprob: -18.500003814697266

Token 401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006087943911552429
    2. 'self' → logprob: -7.875608921051025
    3. ' ,' → logprob: -9.000608444213867
    4. '(self' → logprob: -9.750608444213867
    5. ',self' → logprob: -10.750608444213867
    6. ',item' → logprob: -11.375608444213867
    7. ',value' → logprob: -12.000608444213867
    8. ')' → logprob: -13.250608444213867
    9. ',x' → logprob: -13.625608444213867
    10. '<|end|>' → logprob: -14.125608444213867

Token 402: ' item' (ID: 2169)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.21583957970142365
    2. 'item' → logprob: -2.4658396244049072
    3. ' x' → logprob: -2.4658396244049072
    4. ' item' → logprob: -3.9658396244049072
    5. 'self' → logprob: -5.965839385986328
    6. 'value' → logprob: -6.840839385986328
    7. ' val' → logprob: -7.590839385986328
    8. 'val' → logprob: -7.715839385986328
    9. 'v' → logprob: -7.965839385986328
    10. ' value' → logprob: -9.215839385986328

Token 403: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00549580343067646
    2. 'self' → logprob: -5.630496025085449
    3. '):
' → logprob: -6.505496025085449
    4. ')' → logprob: -8.00549602508545
    5. '(self' → logprob: -10.63049602508545
    6. ':' → logprob: -11.13049602508545
    7. ',' → logprob: -11.38049602508545
    8. ' ):' → logprob: -12.50549602508545
    9. '):
' → logprob: -12.63049602508545
    10. ' self' → logprob: -12.75549602508545

Token 404: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.010147951543331146
    2. ':' → logprob: -4.760148048400879
    3. 'self' → logprob: -7.260148048400879
    4. '   ' → logprob: -7.635148048400879
    5. '):' → logprob: -8.885148048400879
    6. '       ' → logprob: -9.635148048400879
    7. ' self' → logprob: -9.885148048400879
    8. ':self' → logprob: -10.760148048400879
    9. '(' → logprob: -11.010148048400879
    10. ')' → logprob: -11.260148048400879

Token 405: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.6945307850837708
    2. 'None' → logprob: -0.6945307850837708
    3. ' self' → logprob: -7.069530963897705
    4. 'self' → logprob: -7.569530963897705
    5. ' ' → logprob: -12.069530487060547
    6. '   ' → logprob: -12.444530487060547
    7. '(None' → logprob: -13.569530487060547
    8. '  ' → logprob: -13.819530487060547
    9. 'void' → logprob: -13.819530487060547
    10. '_None' → logprob: -14.319530487060547

Token 406: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005962691269814968
    2. ':
' → logprob: -5.13096284866333
    3. '):' → logprob: -10.630962371826172
    4. '):
' → logprob: -12.880962371826172
    5. ':self' → logprob: -13.005962371826172
    6. '   ' → logprob: -13.505962371826172
    7. '       ' → logprob: -13.630962371826172
    8. ' :' → logprob: -14.130962371826172
    9. '():' → logprob: -14.255962371826172
    10. ':
' → logprob: -14.880962371826172

Token 407: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6977574825286865
    2. '       ' → logprob: -1.3227574825286865
    3. 'self' → logprob: -1.4477574825286865
    4. '
' → logprob: -7.947757720947266
    5. '   ' → logprob: -8.822757720947266
    6. '.append' → logprob: -9.072757720947266
    7. '	self' → logprob: -9.697757720947266
    8. 'append' → logprob: -10.072757720947266
    9. 'super' → logprob: -11.072757720947266
    10. ' super' → logprob: -11.322757720947266

Token 408: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.7835754988482222e-05
    2. '.' → logprob: -11.250018119812012
    3. '.extend' → logprob: -12.750018119812012
    4. 'append' → logprob: -13.250018119812012
    5. '.enqueue' → logprob: -16.625017166137695
    6. '.push' → logprob: -17.000017166137695
    7. '.app' → logprob: -17.250017166137695
    8. ' .' → logprob: -17.500017166137695
    9. '.Append' → logprob: -17.750017166137695
    10. '_append' → logprob: -18.125017166137695

Token 409: 'left' (ID: 4530)
  Prédit: '(item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.0002120038407156244
    2. '(' → logprob: -8.750211715698242
    3. 'left' → logprob: -9.875211715698242
    4. ' (' → logprob: -14.625211715698242
    5. '(x' → logprob: -14.875211715698242
    6. '=item' → logprob: -15.375211715698242
    7. 'right' → logprob: -15.625211715698242
    8. ',item' → logprob: -15.750211715698242
    9. '(items' → logprob: -16.000211715698242
    10. '_left' → logprob: -16.500211715698242

Token 410: '(item' (ID: 10016)
  Prédit: '(item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.00018268341955263168
    2. '(' → logprob: -8.62518310546875
    3. '(
' → logprob: -13.87518310546875
    4. ' (' → logprob: -14.12518310546875
    5. 'item' → logprob: -14.87518310546875
    6. '(items' → logprob: -15.00018310546875
    7. '=item' → logprob: -15.75018310546875
    8. '<|end|>' → logprob: -15.75018310546875
    9. ')item' → logprob: -16.00018310546875
    10. '(Item' → logprob: -16.25018310546875

Token 411: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022373280953615904
    2. ')
' → logprob: -6.127237319946289
    3. '<|end|>' → logprob: -10.377237319946289
    4. '   ' → logprob: -11.377237319946289
    5. ')

' → logprob: -12.377237319946289
    6. ' )' → logprob: -13.252237319946289
    7. '
' → logprob: -13.627237319946289
    8. '()' → logprob: -14.377237319946289
    9. '())' → logprob: -14.627237319946289
    10. '<|end|>' → logprob: -14.877237319946289

Token 412: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32452285289764404
    2. 'def' → logprob: -1.324522852897644
    3. ' def' → logprob: -4.574522972106934
    4. '
' → logprob: -7.199522972106934
    5. '	def' → logprob: -9.949522972106934
    6. '    
' → logprob: -10.199522972106934
    7. ' ' → logprob: -10.949522972106934
    8. '    ' → logprob: -10.949522972106934
    9. '  ' → logprob: -11.324522972106934
    10. '<|end|>' → logprob: -13.199522972106934

Token 413: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3228994607925415
    2. '   ' → logprob: -1.5728994607925415
    3. ' def' → logprob: -2.697899341583252
    4. '    
' → logprob: -7.072899341583252
    5. '    ' → logprob: -9.57289981842041
    6. '
' → logprob: -9.69789981842041
    7. '	def' → logprob: -9.94789981842041
    8. ' ' → logprob: -10.19789981842041
    9. ' 
' → logprob: -10.57289981842041
    10. '  ' → logprob: -10.69789981842041

Token 414: ' insert' (ID: 10898)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.20188504457473755
    2. ' dequeue' → logprob: -1.7018849849700928
    3. 'deque' → logprob: -8.076885223388672
    4. 'enqueue' → logprob: -9.201885223388672
    5. '.dequeue' → logprob: -10.701885223388672
    6. 'pop' → logprob: -10.951885223388672
    7. ' deque' → logprob: -11.701885223388672
    8. '	de' → logprob: -12.701885223388672
    9. 'p' → logprob: -12.826885223388672
    10. ' enqueue' → logprob: -13.451885223388672

Token 415: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.10515058785676956
    2. 'right' → logprob: -2.4801506996154785
    3. 'self' → logprob: -5.6051506996154785
    4. '<|end|>' → logprob: -6.1051506996154785
    5. '_right' → logprob: -6.4801506996154785
    6. '(' → logprob: -6.4801506996154785
    7. 'at' → logprob: -6.6051506996154785
    8. 'last' → logprob: -6.6051506996154785
    9. 'tail' → logprob: -7.2301506996154785
    10. ')' → logprob: -7.6051506996154785

Token 416: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5781813859939575
    2. 'right' → logprob: -1.4531813859939575
    3. ',' → logprob: -2.328181266784668
    4. 'item' → logprob: -3.578181266784668
    5. 'last' → logprob: -3.828181266784668
    6. '(item' → logprob: -4.578181266784668
    7. 'left' → logprob: -4.578181266784668
    8. '_last' → logprob: -4.953181266784668
    9. '(self' → logprob: -5.078181266784668
    10. '<|end|>' → logprob: -5.203181266784668

Token 417: ' item' (ID: 2169)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.1394350528717041
    2. ' item' → logprob: -2.264435052871704
    3. 'index' → logprob: -3.889435052871704
    4. 'self' → logprob: -5.639434814453125
    5. ' index' → logprob: -6.514434814453125
    6. '<|end|>' → logprob: -8.764434814453125
    7. ' self' → logprob: -9.014434814453125
    8. 'idx' → logprob: -9.264434814453125
    9. ')' → logprob: -9.389434814453125
    10. '0' → logprob: -9.889434814453125

Token 418: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0432375967502594
    2. ')' → logprob: -3.5432376861572266
    3. '(self' → logprob: -5.543237686157227
    4. 'self' → logprob: -5.668237686157227
    5. '(item' → logprob: -5.793237686157227
    6. ',item' → logprob: -6.293237686157227
    7. '):' → logprob: -7.293237686157227
    8. ')item' → logprob: -9.168237686157227
    9. ')(' → logprob: -9.418237686157227
    10. '):
' → logprob: -9.543237686157227

Token 419: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.29939791560173035
    2. '(item' → logprob: -1.4243979454040527
    3. ')' → logprob: -4.424397945404053
    4. 'self' → logprob: -5.799397945404053
    5. 'append' → logprob: -7.424397945404053
    6. '(' → logprob: -7.549397945404053
    7. 'def' → logprob: -8.049397468566895
    8. ',' → logprob: -8.174397468566895
    9. '):' → logprob: -8.674397468566895
    10. '.append' → logprob: -8.799397468566895

Token 420: ' None' (ID: 4662)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5496597290039062
    2. ' self' → logprob: -0.9246597290039062
    3. 'append' → logprob: -4.424659729003906
    4. 'None' → logprob: -4.799659729003906
    5. ' None' → logprob: -5.299659729003906
    6. ' append' → logprob: -7.174659729003906
    7. 'enqueue' → logprob: -9.924659729003906
    8. '.append' → logprob: -10.299659729003906
    9. ' ' → logprob: -11.049659729003906
    10. 'right' → logprob: -11.362159729003906

Token 421: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002378142438828945
    2. 'self' → logprob: -6.752377986907959
    3. '   ' → logprob: -7.752377986907959
    4. '       ' → logprob: -8.002378463745117
    5. ':
' → logprob: -9.002378463745117
    6. ':self' → logprob: -9.002378463745117
    7. '):' → logprob: -9.502378463745117
    8. 'append' → logprob: -10.252378463745117
    9. ' self' → logprob: -10.502378463745117
    10. ' :' → logprob: -11.002378463745117

Token 422: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.20185717940330505
    2. 'self' → logprob: -1.7018572092056274
    3. '   ' → logprob: -8.576857566833496
    4. '       ' → logprob: -8.576857566833496
    5. '	self' → logprob: -9.951857566833496
    6. '=self' → logprob: -12.701857566833496
    7. '(self' → logprob: -12.701857566833496
    8. '    ' → logprob: -13.201857566833496
    9. ' ' → logprob: -13.326857566833496
    10. 'he' → logprob: -13.826857566833496

Token 423: '.enqueue' (ID: 91071)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001559139578603208
    2. '.' → logprob: -7.251559257507324
    3. 'append' → logprob: -7.501559257507324
    4. '.enqueue' → logprob: -8.251559257507324
    5. '.extend' → logprob: -11.001559257507324
    6. '.insert' → logprob: -11.626559257507324
    7. '.push' → logprob: -12.626559257507324
    8. '_append' → logprob: -13.376559257507324
    9. ' .' → logprob: -13.626559257507324
    10. 'enqueue' → logprob: -13.876559257507324

Token 424: '(item' (ID: 10016)
  Prédit: '(item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.0006062911124899983
    2. '(' → logprob: -7.500606060028076
    3. '<|end|>' → logprob: -10.375606536865234
    4. '(x' → logprob: -12.375606536865234
    5. '(
' → logprob: -12.625606536865234
    6. '(items' → logprob: -12.875606536865234
    7. '(user' → logprob: -13.250606536865234
    8. ')' → logprob: -13.250606536865234
    9. ',item' → logprob: -13.375606536865234
    10. '(token' → logprob: -13.625606536865234

Token 425: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00030412263004109263
    2. ')
' → logprob: -8.125304222106934
    3. '())' → logprob: -13.000304222106934
    4. ' )' → logprob: -13.500304222106934
    5. ')

' → logprob: -13.625304222106934
    6. '()' → logprob: -13.875304222106934
    7. '<|end|>' → logprob: -13.875304222106934
    8. '   ' → logprob: -14.000304222106934
    9. '')' → logprob: -16.125303268432617
    10. ')return' → logprob: -16.875303268432617

Token 426: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026301460340619087
    2. 'def' → logprob: -3.901301383972168
    3. ' def' → logprob: -5.276301383972168
    4. '
' → logprob: -8.651301383972168
    5. '<|end|>' → logprob: -8.901301383972168
    6. '	def' → logprob: -9.026301383972168
    7. ')' → logprob: -9.776301383972168
    8. ' ' → logprob: -9.901301383972168
    9. '    ' → logprob: -10.401301383972168
    10. '  ' → logprob: -10.651301383972168

Token 427: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.020729904994368553
    2. ' def' → logprob: -4.520730018615723
    3. '   ' → logprob: -4.645730018615723
    4. '	def' → logprob: -10.770730018615723
    5. 'deque' → logprob: -12.520730018615723
    6. 'de' → logprob: -13.145730018615723
    7. '    
' → logprob: -13.270730018615723
    8. '    ' → logprob: -13.520730018615723
    9. ' ' → logprob: -13.645730018615723
    10. ')' → logprob: -14.645730018615723

Token 428: ' dequeue' (ID: 118122)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.5429250597953796
    2. 'de' → logprob: -1.5429251194000244
    3. ' dequeue' → logprob: -2.2929251194000244
    4. ' append' → logprob: -2.6679251194000244
    5. 'enqueue' → logprob: -4.542924880981445
    6. 'pop' → logprob: -4.917924880981445
    7. 'p' → logprob: -5.292924880981445
    8. 'extend' → logprob: -5.417924880981445
    9. 'deque' → logprob: -5.667924880981445
    10. ' pop' → logprob: -7.042924880981445

Token 429: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.3795937522663735e-05
    2. '()' → logprob: -10.75002384185791
    3. '(' → logprob: -13.75002384185791
    4. 'self' → logprob: -13.87502384185791
    5. ' (' → logprob: -16.625022888183594
    6. '():' → logprob: -17.250022888183594
    7. 'def' → logprob: -17.875022888183594
    8. ' self' → logprob: -17.875022888183594
    9. 's' → logprob: -18.125022888183594
    10. '   ' → logprob: -18.250022888183594

Token 430: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001017551330733113
    2. '):' → logprob: -9.375102043151855
    3. ' )' → logprob: -12.000102043151855
    4. '):
' → logprob: -12.250102043151855
    5. '()' → logprob: -12.375102043151855
    6. ')->' → logprob: -14.250102043151855
    7. '())' → logprob: -14.625102043151855
    8. 'self' → logprob: -15.125102043151855
    9. ')
' → logprob: -16.25010108947754
    10. '):

' → logprob: -16.87510108947754

Token 431: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.47413408756256104
    2. 'return' → logprob: -0.974134087562561
    3. '   ' → logprob: -10.34913444519043
    4. ' self' → logprob: -11.34913444519043
    5. 'self' → logprob: -11.47413444519043
    6. '	return' → logprob: -12.97413444519043
    7. ':return' → logprob: -15.72413444519043
    8. '    ' → logprob: -16.34913444519043
    9. ' ' → logprob: -16.59913444519043
    10. '```' → logprob: -16.97413444519043

Token 432: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001170460251159966
    2. ' self' → logprob: -6.751170635223389
    3. '(self' → logprob: -16.501171112060547
    4. 'super' → logprob: -16.751171112060547
    5. '	self' → logprob: -16.751171112060547
    6. 'pop' → logprob: -17.376171112060547
    7. 'sel' → logprob: -18.751171112060547
    8. ' ' → logprob: -19.126171112060547
    9. '   ' → logprob: -19.501171112060547
    10. '
' → logprob: -19.501171112060547

Token 433: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0380459688603878
    2. 'pop' → logprob: -3.288045883178711
    3. '.p' → logprob: -12.413045883178711
    4. 'Pop' → logprob: -15.788045883178711
    5. '[-' → logprob: -16.16304588317871
    6. ' pop' → logprob: -16.28804588317871
    7. '.' → logprob: -16.78804588317871
    8. '_pop' → logprob: -17.41304588317871
    9. '(pop' → logprob: -17.66304588317871
    10. '	pop' → logprob: -17.78804588317871

Token 434: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 435: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 436: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07851769030094147
    2. '   ' → logprob: -2.7035176753997803
    3. 'class' → logprob: -5.953517913818359
    4. '<|end|>' → logprob: -6.453517913818359
    5. ' def' → logprob: -6.828517913818359
    6. '    ' → logprob: -7.078517913818359
    7. '    
' → logprob: -7.203517913818359
    8. ' ' → logprob: -7.578517913818359
    9. '#' → logprob: -8.32851791381836
    10. ')' → logprob: -8.57851791381836

Token 437: ' front' (ID: 5567)
  Prédit: 'peek'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'peek' → logprob: -0.23800227046012878
    2. 'size' → logprob: -1.7380023002624512
    3. 'front' → logprob: -4.613002300262451
    4. 'clear' → logprob: -5.238002300262451
    5. '__' → logprob: -5.363002300262451
    6. 'top' → logprob: -5.988002300262451
    7. 'enqueue' → logprob: -5.988002300262451
    8. 'put' → logprob: -6.863002300262451
    9. 'pop' → logprob: -6.863002300262451
    10. ' peek' → logprob: -6.988002300262451

Token 438: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007816236466169357
    2. '()' → logprob: -4.882816314697266
    3. '(' → logprob: -8.882816314697266
    4. '<|end|>' → logprob: -10.757816314697266
    5. 'self' → logprob: -11.382816314697266
    6. '   ' → logprob: -11.632816314697266
    7. '():' → logprob: -12.132816314697266
    8. '@property' → logprob: -12.382816314697266
    9. '<|end|>' → logprob: -12.882816314697266
    10. ')' → logprob: -12.882816314697266

Token 439: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1346183568239212
    2. '(self' → logprob: -2.6346182823181152
    3. '):' → logprob: -3.2596182823181152
    4. '()' → logprob: -4.384618282318115
    5. '():' → logprob: -6.759618282318115
    6. '())' → logprob: -6.884618282318115
    7. ')->' → logprob: -7.384618282318115
    8. 'self' → logprob: -8.384618759155273
    9. ')return' → logprob: -9.384618759155273
    10. '):
' → logprob: -9.884618759155273

Token 440: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.475034236907959
    2. ' return' → logprob: -0.975034236907959
    3. '   ' → logprob: -7.600034236907959
    4. ' if' → logprob: -8.225034713745117
    5. 'if' → logprob: -8.975034713745117
    6. '       ' → logprob: -10.725034713745117
    7. '	return' → logprob: -11.350034713745117
    8. '    ' → logprob: -11.850034713745117
    9. ':return' → logprob: -12.225034713745117
    10. ' ' → logprob: -12.600034713745117

Token 441: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00023119196703191847
    2. ' self' → logprob: -8.37523078918457
    3. 'None' → logprob: -15.25023078918457
    4. '	self' → logprob: -16.25023078918457
    5. ' ' → logprob: -16.75023078918457
    6. '(self' → logprob: -17.00023078918457
    7. '0' → logprob: -17.12523078918457
    8. '   ' → logprob: -17.25023078918457
    9. '
' → logprob: -17.87523078918457
    10. '  ' → logprob: -18.87523078918457

Token 442: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.693618893623352
    2. '[-' → logprob: -0.693618893623352
    3. '()' → logprob: -8.818618774414062
    4. '[]' → logprob: -8.943618774414062
    5. '[::-' → logprob: -9.818618774414062
    6. '<|end|>' → logprob: -10.318618774414062
    7. ')' → logprob: -10.443618774414062
    8. '[len' → logprob: -10.693618774414062
    9. '[:]' → logprob: -10.818618774414062
    10. 'opleft' → logprob: -11.568618774414062

Token 443: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. 'item' → logprob: -17.500001907348633
    4. ']' → logprob: -17.875001907348633
    5. '```' → logprob: -18.875001907348633
    6. ')' → logprob: -19.500001907348633
    7. '[' → logprob: -19.500001907348633
    8. '   ' → logprob: -19.500001907348633
    9. '0' → logprob: -19.875001907348633
    10. '  ' → logprob: -20.000001907348633

Token 444: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 445: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013347860425710678
    2. 'def' → logprob: -4.388347625732422
    3. '<|end|>' → logprob: -7.388347625732422
    4. 'class' → logprob: -9.763347625732422
    5. '	def' → logprob: -10.513347625732422
    6. '#' → logprob: -10.513347625732422
    7. '```' → logprob: -10.638347625732422
    8. '    ' → logprob: -11.013347625732422
    9. ')' → logprob: -11.388347625732422
    10. '    
' → logprob: -11.638347625732422

Token 446: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.129018634557724
    2. '   ' → logprob: -2.254018545150757
    3. '    ' → logprob: -4.629018783569336
    4. 'class' → logprob: -6.629018783569336
    5. 'rear' → logprob: -7.004018783569336
    6. 'end' → logprob: -7.254018783569336
    7. '  ' → logprob: -7.254018783569336
    8. '    
' → logprob: -7.504018783569336
    9. ' def' → logprob: -7.504018783569336
    10. ' ' → logprob: -7.879018783569336

Token 447: ' pop' (ID: 2735)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.02632143348455429
    2. 'rear' → logprob: -4.0263214111328125
    3. 'clear' → logprob: -5.7763214111328125
    4. 'pop' → logprob: -6.1513214111328125
    5. '__' → logprob: -6.6513214111328125
    6. 'peek' → logprob: -7.2763214111328125
    7. 'size' → logprob: -8.151321411132812
    8. '_back' → logprob: -8.526321411132812
    9. 'empty' → logprob: -9.401321411132812
    10. 'reverse' → logprob: -9.901321411132812

Token 448: '(self' (ID: 2402)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.003311985172331333
    2. '()' → logprob: -7.003312110900879
    3. 'le' → logprob: -7.128312110900879
    4. '_left' → logprob: -7.878312110900879
    5. 'opleft' → logprob: -7.878312110900879
    6. 'lef' → logprob: -8.003312110900879
    7. '(' → logprob: -8.503312110900879
    8. 'Left' → logprob: -8.878312110900879
    9. ')' → logprob: -9.753312110900879
    10. 'front' → logprob: -10.503312110900879

Token 449: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15481241047382355
    2. 'left' → logprob: -2.0298123359680176
    3. 'opleft' → logprob: -4.654812335968018
    4. 'le' → logprob: -7.029812335968018
    5. 'lef' → logprob: -7.029812335968018
    6. '_left' → logprob: -7.904812335968018
    7. '())' → logprob: -8.529812812805176
    8. '<|end|>' → logprob: -9.904812812805176
    9. '()' → logprob: -10.654812812805176
    10. 'right' → logprob: -10.904812812805176

Token 450: ' ->' (ID: 2747)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.24347232282161713
    2. 'left' → logprob: -1.6184723377227783
    3. '<|end|>' → logprob: -4.868472099304199
    4. '_left' → logprob: -5.368472099304199
    5. 'opleft' → logprob: -6.368472099304199
    6. ')' → logprob: -7.118472099304199
    7. 'def' → logprob: -7.243472099304199
    8. 'front' → logprob: -7.993472099304199
    9. '())' → logprob: -8.4934720993042
    10. '_front' → logprob: -8.6184720993042

Token 451: ' None' (ID: 4662)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.04878197982907295
    2. 'self' → logprob: -4.048781871795654
    3. 'super' → logprob: -4.423781871795654
    4. 'None' → logprob: -4.548781871795654
    5. 'p' → logprob: -5.673781871795654
    6. 'item' → logprob: -6.798781871795654
    7. 'de' → logprob: -7.048781871795654
    8. '   ' → logprob: -7.298781871795654
    9. 'object' → logprob: -7.548781871795654
    10. 'return' → logprob: -8.173782348632812

Token 452: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18340732157230377
    2. '   ' → logprob: -2.9334073066711426
    3. 'super' → logprob: -3.5584073066711426
    4. '       ' → logprob: -4.183407306671143
    5. '():' → logprob: -4.183407306671143
    6. ':
' → logprob: -4.433407306671143
    7. '):' → logprob: -4.433407306671143
    8. 'self' → logprob: -4.558407306671143
    9. '(super' → logprob: -5.058407306671143
    10. '(self' → logprob: -5.683407306671143

Token 453: ' super' (ID: 2539)
  Prédit: ' super'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' super' → logprob: -0.22617392241954803
    2. 'super' → logprob: -1.9761738777160645
    3. ' self' → logprob: -3.6011738777160645
    4. 'self' → logprob: -3.8511738777160645
    5. ' return' → logprob: -4.4761738777160645
    6. 'return' → logprob: -6.2261738777160645
    7. '   ' → logprob: -6.4761738777160645
    8. '	super' → logprob: -9.101174354553223
    9. '    ' → logprob: -9.726174354553223
    10. '       ' → logprob: -9.851174354553223

Token 454: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.000204851632588543
    2. '()' → logprob: -8.500205039978027
    3. '().__' → logprob: -13.750205039978027
    4. '(' → logprob: -15.125205039978027
    5. '.pop' → logprob: -16.87520408630371
    6. '(pop' → logprob: -18.12520408630371
    7. '();' → logprob: -19.12520408630371
    8. 'pop' → logprob: -19.25020408630371
    9. '.' → logprob: -19.62520408630371
    10. '():' → logprob: -19.62520408630371

Token 455: 'pop' (ID: 15042)
  Prédit: 'pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -2.696889623621246e-06
    2. 'p' → logprob: -13.62500286102295
    3. '.pop' → logprob: -13.75000286102295
    4. ' pop' → logprob: -15.12500286102295
    5. '_pop' → logprob: -16.500001907348633
    6. 'deque' → logprob: -17.250001907348633
    7. 'clear' → logprob: -17.500001907348633
    8. '(pop' → logprob: -17.875001907348633
    9. '	pop' → logprob: -18.000001907348633
    10. 'remove' → logprob: -18.750001907348633

Token 456: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.3425219549390022e-05
    2. '(' → logprob: -11.87501335144043
    3. '()
' → logprob: -12.25001335144043
    4. 'def' → logprob: -14.75001335144043
    5. '()

' → logprob: -15.25001335144043
    6. ' ()' → logprob: -15.37501335144043
    7. '())' → logprob: -15.87501335144043
    8. '()\' → logprob: -16.12501335144043
    9. '();' → logprob: -16.50001335144043
    10. '()`' → logprob: -16.75001335144043

Token 457: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 458: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 459: ' size' (ID: 2349)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8052072525024414
    2. 'clear' → logprob: -0.9302072525024414
    3. ' clear' → logprob: -2.8052072525024414
    4. ' p' → logprob: -3.3052072525024414
    5. 'peek' → logprob: -3.6802072525024414
    6. 'append' → logprob: -4.680207252502441
    7. '__' → logprob: -4.805207252502441
    8. 'pop' → logprob: -5.055207252502441
    9. 'empty' → logprob: -6.055207252502441
    10. 'push' → logprob: -6.430207252502441

Token 460: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.125006675720215
    3. '()' → logprob: -14.125006675720215
    4. '(s' → logprob: -15.875006675720215
    5. 'self' → logprob: -16.2500057220459
    6. '   ' → logprob: -17.0000057220459
    7. ' (' → logprob: -17.1250057220459
    8. '(Self' → logprob: -18.0000057220459
    9. '=self' → logprob: -18.1250057220459
    10. ' self' → logprob: -18.3750057220459

Token 461: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052706994116306305
    2. '(self' → logprob: -3.0527069568634033
    3. 'self' → logprob: -5.927707195281982
    4. '()' → logprob: -6.927707195281982
    5. ')->' → logprob: -8.427706718444824
    6. '):' → logprob: -8.802706718444824
    7. ')(' → logprob: -10.052706718444824
    8. '())' → logprob: -11.052706718444824
    9. '   ' → logprob: -11.552706718444824
    10. '->' → logprob: -12.427706718444824

Token 462: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00028576893964782357
    2. '->' → logprob: -8.875286102294922
    3. 'self' → logprob: -9.000286102294922
    4. '   ' → logprob: -12.125286102294922
    5. ' ->' → logprob: -12.125286102294922
    6. ')' → logprob: -13.125286102294922
    7. '(' → logprob: -13.125286102294922
    8. '=self' → logprob: -13.250286102294922
    9. ' self' → logprob: -13.375286102294922
    10. '=' → logprob: -13.750286102294922

Token 463: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014178793877363205
    2. ' int' → logprob: -4.26417875289917
    3. 'len' → logprob: -11.139179229736328
    4. ' len' → logprob: -14.389179229736328
    5. 'return' → logprob: -15.889179229736328
    6. '	int' → logprob: -17.639179229736328
    7. '(int' → logprob: -17.889179229736328
    8. '<int' → logprob: -18.389179229736328
    9. 'self' → logprob: -18.764179229736328
    10. ' return' → logprob: -18.889179229736328

Token 464: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4921436607837677
    2. ':' → logprob: -1.4921436309814453
    3. '():' → logprob: -2.2421436309814453
    4. '->' → logprob: -4.242143630981445
    5. '()' → logprob: -4.367143630981445
    6. '   ' → logprob: -4.617143630981445
    7. 'self' → logprob: -4.617143630981445
    8. 'return' → logprob: -5.742143630981445
    9. ':return' → logprob: -5.992143630981445
    10. '       ' → logprob: -5.992143630981445

Token 465: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03810529410839081
    2. ' return' → logprob: -3.2881052494049072
    3. '   ' → logprob: -9.913105010986328
    4. '       ' → logprob: -11.663105010986328
    5. 'len' → logprob: -12.288105010986328
    6. '	return' → logprob: -14.038105010986328
    7. '    ' → logprob: -15.913105010986328
    8. ' ' → logprob: -16.413105010986328
    9. ':return' → logprob: -17.288105010986328
    10. '  ' → logprob: -17.538105010986328

Token 466: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0001584850688232109
    2. ' len' → logprob: -8.750158309936523
    3. '   ' → logprob: -18.125158309936523
    4. 'super' → logprob: -18.250158309936523
    5. '	len' → logprob: -18.250158309936523
    6. ' ' → logprob: -18.500158309936523
    7. '(len' → logprob: -18.625158309936523
    8. 'self' → logprob: -18.750158309936523
    9. '  ' → logprob: -19.125158309936523
    10. ' super' → logprob: -22.125158309936523

Token 467: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.968312951968983e-06
    2. 'self' → logprob: -11.875009536743164
    3. '(' → logprob: -12.750009536743164
    4. ' self' → logprob: -18.000009536743164
    5. 's' → logprob: -18.500009536743164
    6. '(
' → logprob: -18.750009536743164
    7. '	self' → logprob: -18.875009536743164
    8. '()' → logprob: -19.125009536743164
    9. '[self' → logprob: -19.625009536743164
    10. ' (' → logprob: -20.000009536743164

Token 468: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.9153885558771435e-06
    2. ')
' → logprob: -12.250005722045898
    3. '())' → logprob: -15.375005722045898
    4. ')set' → logprob: -15.750005722045898
    5. '))' → logprob: -15.875005722045898
    6. ')return' → logprob: -16.0000057220459
    7. ')

' → logprob: -16.1250057220459
    8. 'self' → logprob: -16.7500057220459
    9. ' )' → logprob: -17.1250057220459
    10. '()' → logprob: -17.7500057220459

Token 469: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6936336159706116
    2. 'class' → logprob: -0.8186336159706116
    3. 'def' → logprob: -3.693633556365967
    4. '<|end|>' → logprob: -4.318633556365967
    5. ')' → logprob: -5.443633556365967
    6. '#' → logprob: -5.443633556365967
    7. '   ' → logprob: -5.943633556365967
    8. '    
' → logprob: -6.068633556365967
    9. ' class' → logprob: -6.818633556365967
    10. '```' → logprob: -6.818633556365967

Token 470: ' L' (ID: 451)
  Prédit: 'Stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Stack' → logprob: -0.0030068231280893087
    2. 'Priority' → logprob: -6.378006935119629
    3. 'Counter' → logprob: -8.128006935119629
    4. 'Deque' → logprob: -8.128006935119629
    5. 'Node' → logprob: -8.378006935119629
    6. ' Stack' → logprob: -8.753006935119629
    7. 'stack' → logprob: -9.878006935119629
    8. 'Segment' → logprob: -9.878006935119629
    9. 'Union' → logprob: -10.253006935119629
    10. 'Tree' → logprob: -10.378006935119629

Token 471: 'CA' (ID: 6781)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.00533099751919508
    2. 'ink' → logprob: -6.380331039428711
    3. 'RU' → logprob: -7.005331039428711
    4. 'IST' → logprob: -7.255331039428711
    5. 'inear' → logprob: -8.005331039428711
    6. 'ine' → logprob: -8.005331039428711
    7. 'list' → logprob: -8.255331039428711
    8. 'L' → logprob: -8.505331039428711
    9. 'og' → logprob: -8.880331039428711
    10. 'ocal' → logprob: -8.880331039428711

Token 472: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001995131839066744
    2. ':
' → logprob: -6.751995086669922
    3. '(Tree' → logprob: -8.001995086669922
    4. '():' → logprob: -8.501995086669922
    5. '(Node' → logprob: -9.001995086669922
    6. '):' → logprob: -10.626995086669922
    7. '<Tree' → logprob: -11.001995086669922
    8. '(' → logprob: -11.251995086669922
    9. '(Binary' → logprob: -11.376995086669922
    10. 'Node' → logprob: -11.376995086669922

Token 473: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03547997027635574
    2. ' def' → logprob: -3.78548002243042
    3. 'def' → logprob: -4.41048002243042
    4. '	def' → logprob: -12.410479545593262
    5. 'class' → logprob: -13.160479545593262
    6. '   ' → logprob: -13.160479545593262
    7. '__' → logprob: -14.035479545593262
    8. '    ' → logprob: -14.660479545593262
    9. '    
' → logprob: -14.785479545593262
    10. ' __' → logprob: -15.160479545593262

Token 474: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.056481797248125076
    2. ' def' → logprob: -2.9314818382263184
    3. '__' → logprob: -7.181481838226318
    4. 'class' → logprob: -7.681481838226318
    5. '   ' → logprob: -8.05648136138916
    6. ' __' → logprob: -10.43148136138916
    7. '"""' → logprob: -11.93148136138916
    8. 'import' → logprob: -12.30648136138916
    9. 'from' → logprob: -12.43148136138916
    10. 'de' → logprob: -12.93148136138916

Token 475: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.254781574010849
    2. '__' → logprob: -1.5047816038131714
    3. ' __' → logprob: -6.379781723022461
    4. '_init' → logprob: -7.004781723022461
    5. ' init' → logprob: -8.379781723022461
    6. 'def' → logprob: -11.629781723022461
    7. 'int' → logprob: -12.879781723022461
    8. 'in' → logprob: -13.254781723022461
    9. '___' → logprob: -14.004781723022461
    10. ' def' → logprob: -14.629781723022461

Token 476: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'inite' → logprob: -19.75
    3. ' init' → logprob: -19.875
    4. '```' → logprob: -20.25
    5. 'in' → logprob: -20.5
    6. 'int' → logprob: -20.75
    7. 'ini' → logprob: -21.0
    8. '_init' → logprob: -21.75
    9. '(init' → logprob: -22.125
    10. '
' → logprob: -22.375

Token 477: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0037107658572494984
    2. '(self' → logprob: -5.628710746765137
    3. '__' → logprob: -9.378710746765137
    4. '__(
' → logprob: -10.753710746765137
    5. '(' → logprob: -12.753710746765137
    6. '_(' → logprob: -13.878710746765137
    7. ' (' → logprob: -15.503710746765137
    8. '__((' → logprob: -15.503710746765137
    9. '(this' → logprob: -15.878710746765137
    10. '<>(' → logprob: -16.378711700439453

Token 478: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00014132341311778873
    2. ' self' → logprob: -8.875141143798828
    3. '   ' → logprob: -14.500141143798828
    4. '(self' → logprob: -14.625141143798828
    5. ')' → logprob: -16.250141143798828
    6. '       ' → logprob: -16.750141143798828
    7. '
' → logprob: -16.875141143798828
    8. '0' → logprob: -17.000141143798828
    9. 's' → logprob: -17.125141143798828
    10. ')(' → logprob: -17.125141143798828

Token 479: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21103321015834808
    2. 'self' → logprob: -1.7110332250595093
    3. ' self' → logprob: -5.086033344268799
    4. '(self' → logprob: -5.961033344268799
    5. ' (' → logprob: -7.961033344268799
    6. ',self' → logprob: -8.08603286743164
    7. ' ,' → logprob: -9.46103286743164
    8. '   ' → logprob: -9.96103286743164
    9. ')(' → logprob: -11.21103286743164
    10. '       ' → logprob: -11.71103286743164

Token 480: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.043585386127233505
    2. 'self' → logprob: -3.9185853004455566
    3. 'graph' → logprob: -4.418585300445557
    4. ' n' → logprob: -4.793585300445557
    5. 'N' → logprob: -7.043585300445557
    6. 'tree' → logprob: -7.668585300445557
    7. '   ' → logprob: -7.668585300445557
    8. ' graph' → logprob: -8.043585777282715
    9. 'g' → logprob: -9.418585777282715
    10. ' self' → logprob: -9.418585777282715

Token 481: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0048721120692789555
    2. ':' → logprob: -5.3798723220825195
    3. '):' → logprob: -8.62987232208252
    4. ':int' → logprob: -9.75487232208252
    5. ' ,' → logprob: -11.75487232208252
    6. '   ' → logprob: -12.62987232208252
    7. '):
' → logprob: -13.00487232208252
    8. ' :' → logprob: -15.00487232208252
    9. ' ):' → logprob: -15.00487232208252
    10. 'int' → logprob: -15.12987232208252

Token 482: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.5861724831629544e-05
    2. ' int' → logprob: -10.000056266784668
    3. 'self' → logprob: -12.125056266784668
    4. '   ' → logprob: -12.375056266784668
    5. '       ' → logprob: -15.000056266784668
    6. ')' → logprob: -15.375056266784668
    7. '
' → logprob: -16.37505531311035
    8. '(int' → logprob: -16.50005531311035
    9. '[int' → logprob: -16.62505531311035
    10. ',int' → logprob: -16.87505531311035

Token 483: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004141072859056294
    2. '):' → logprob: -7.87541389465332
    3. ' ,' → logprob: -10.62541389465332
    4. ')' → logprob: -12.62541389465332
    5. '):
' → logprob: -12.62541389465332
    6. '   ' → logprob: -13.25041389465332
    7. ' ):' → logprob: -13.87541389465332
    8. ',
' → logprob: -15.62541389465332
    9. ' ' → logprob: -17.00041389465332
    10. '       ' → logprob: -17.12541389465332

Token 484: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18556635081768036
    2. ',' → logprob: -2.3105664253234863
    3. ' parent' → logprob: -3.6855664253234863
    4. '   ' → logprob: -3.8105664253234863
    5. 'self' → logprob: -5.185566425323486
    6. ' self' → logprob: -5.435566425323486
    7. '    ' → logprob: -5.810566425323486
    8. ' graph' → logprob: -6.185566425323486
    9. 'graph' → logprob: -6.435566425323486
    10. 'parent' → logprob: -6.560566425323486

Token 485: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0017932282062247396
    2. 'import' → logprob: -6.501793384552002
    3. 'from' → logprob: -8.376792907714844
    4. '   ' → logprob: -10.126792907714844
    5. ' self' → logprob: -11.501792907714844
    6. '       ' → logprob: -11.626792907714844
    7. 'super' → logprob: -13.626792907714844
    8. '	self' → logprob: -16.126792907714844
    9. ' ' → logprob: -16.626792907714844
    10. 'pass' → logprob: -16.626792907714844

Token 486: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.04420497640967369
    2. '.n' → logprob: -3.2942049503326416
    3. '.parent' → logprob: -5.544205188751221
    4. '.depth' → logprob: -6.794205188751221
    5. '.size' → logprob: -7.794205188751221
    6. '.LOG' → logprob: -7.919205188751221
    7. '._' → logprob: -9.669204711914062
    8. 'N' → logprob: -9.919204711914062
    9. '.log' → logprob: -10.044204711914062
    10. '.V' → logprob: -10.294204711914062

Token 487: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07895280420780182
    2. ' =' → logprob: -2.5789527893066406
    3. '=N' → logprob: -9.82895278930664
    4. '   ' → logprob: -12.32895278930664
    5. ',' → logprob: -12.70395278930664
    6. ' ' → logprob: -14.45395278930664
    7. '    ' → logprob: -14.95395278930664
    8. '       ' → logprob: -15.57895278930664
    9. 'import' → logprob: -16.20395278930664
    10. '  ' → logprob: -16.45395278930664

Token 488: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0007110013975761831
    2. ' N' → logprob: -7.250710964202881
    3. '   ' → logprob: -13.750711441040039
    4. '	N' → logprob: -17.62571144104004
    5. ' ' → logprob: -19.50071144104004
    6. '       ' → logprob: -20.12571144104004
    7. '[N' → logprob: -20.62571144104004
    8. '_N' → logprob: -20.75071144104004
    9. '    ' → logprob: -21.00071144104004
    10. '(N' → logprob: -21.25071144104004

Token 489: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23797960579395294
    2. '
' → logprob: -1.7379796504974365
    3. '<|end|>' → logprob: -3.3629796504974365
    4. 'self' → logprob: -7.112979412078857
    5. ',' → logprob: -8.612979888916016
    6. '<|end|>' → logprob: -9.362979888916016
    7. '        
' → logprob: -10.112979888916016
    8. ',
' → logprob: -10.112979888916016
    9. ' self' → logprob: -10.237979888916016
    10. ';' → logprob: -11.487979888916016

Token 490: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005817875266075134
    2. 'self' → logprob: -5.255817890167236
    3. '
' → logprob: -8.255817413330078
    4. '<|end|>' → logprob: -8.755817413330078
    5. ' self' → logprob: -9.255817413330078
    6. ',' → logprob: -10.255817413330078
    7. '   ' → logprob: -11.005817413330078
    8. 'import' → logprob: -12.755817413330078
    9. '        
' → logprob: -12.880817413330078
    10. '	self' → logprob: -13.130817413330078

Token 491: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0012638057814911008
    2. 'import' → logprob: -7.251263618469238
    3. 'from' → logprob: -7.626263618469238
    4. 'LOG' → logprob: -10.751263618469238
    5. ' self' → logprob: -11.126263618469238
    6. '   ' → logprob: -11.376263618469238
    7. 'lg' → logprob: -12.501263618469238
    8. 'max' → logprob: -12.626263618469238
    9. 'log' → logprob: -13.126263618469238
    10. 'MAX' → logprob: -13.251263618469238

Token 492: '.graph' (ID: 18104)
  Prédit: '.LOG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.LOG' → logprob: -0.09131766855716705
    2. '.log' → logprob: -2.591317653656006
    3. '.depth' → logprob: -5.216317653656006
    4. '.parent' → logprob: -5.966317653656006
    5. 'LOG' → logprob: -6.966317653656006
    6. '.MAX' → logprob: -7.466317653656006
    7. '.Log' → logprob: -7.841317653656006
    8. '.l' → logprob: -8.216318130493164
    9. '.L' → logprob: -8.341318130493164
    10. '.max' → logprob: -8.466318130493164

Token 493: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868798017501831
    2. '=' → logprob: -1.136879801750183
    3. ':' → logprob: -12.136879920959473
    4. '=[]' → logprob: -13.011879920959473
    5. '   ' → logprob: -14.261879920959473
    6. ' ' → logprob: -15.011879920959473
    7. '=[' → logprob: -16.386878967285156
    8. '  ' → logprob: -17.011878967285156
    9. '[:]' → logprob: -17.386878967285156
    10. '[' → logprob: -17.886878967285156

Token 494: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0025514080189168453
    2. 'default' → logprob: -6.002551555633545
    3. ' [[]' → logprob: -9.502551078796387
    4. ' defaultdict' → logprob: -14.627551078796387
    5. '[]' → logprob: -15.377551078796387
    6. '{' → logprob: -16.377552032470703
    7. '.default' → logprob: -16.752552032470703
    8. '(default' → logprob: -17.252552032470703
    9. '[:]' → logprob: -17.877552032470703
    10. ' [' → logprob: -18.002552032470703

Token 495: 'list' (ID: 2641)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.5451681974809617e-05
    2. '[]
' → logprob: -11.500015258789062
    3. ' []' → logprob: -12.500015258789062
    4. '[]

' → logprob: -14.125015258789062
    5. 'deque' → logprob: -15.125015258789062
    6. ']' → logprob: -15.250015258789062
    7. 'list' → logprob: -15.875015258789062
    8. '[]}' → logprob: -16.750015258789062
    9. '[' → logprob: -17.375015258789062
    10. 'set' → logprob: -17.500015258789062

Token 496: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018249567598104477
    2. '()]' → logprob: -4.01824951171875
    3. ']()' → logprob: -9.76824951171875
    4. '[]' → logprob: -10.14324951171875
    5. '()
' → logprob: -14.01824951171875
    6. ']' → logprob: -14.26824951171875
    7. '()][' → logprob: -14.26824951171875
    8. '()<<' → logprob: -15.26824951171875
    9. '()]
' → logprob: -15.51824951171875
    10. ' ()' → logprob: -15.89324951171875

Token 497: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011921331752091646
    2. 'for' → logprob: -6.876192092895508
    3. ' for' → logprob: -8.876192092895508
    4. '()]' → logprob: -11.376192092895508
    5. '[]' → logprob: -12.126192092895508
    6. ']' → logprob: -13.751192092895508
    7. ']()' → logprob: -14.001192092895508
    8. ' ()' → logprob: -14.751192092895508
    9. '()
' → logprob: -15.501192092895508
    10. '   ' → logprob: -16.251192092895508

Token 498: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9504606825648807e-05
    2. ' _' → logprob: -11.250019073486328
    3. '_range' → logprob: -13.000019073486328
    4. 'range' → logprob: -13.125019073486328
    5. ' range' → logprob: -13.625019073486328
    6. '_=' → logprob: -15.375019073486328
    7. 'i' → logprob: -15.500019073486328
    8. 'in' → logprob: -15.875019073486328
    9. '_
' → logprob: -16.000019073486328
    10. '_i' → logprob: -16.125019073486328

Token 499: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0054398467764258385
    2. 'in' → logprob: -5.505439758300781
    3. ' range' → logprob: -6.755439758300781
    4. '_' → logprob: -9.130439758300781
    5. '_range' → logprob: -9.505439758300781
    6. ' in' → logprob: -11.380439758300781
    7. '(range' → logprob: -14.005439758300781
    8. '	range' → logprob: -14.380439758300781
    9. '.range' → logprob: -16.63043975830078
    10. 'i' → logprob: -16.63043975830078

Token 500: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008126051397994161
    2. ' range' → logprob: -7.250812530517578
    3. '_range' → logprob: -9.500812530517578
    4. '_' → logprob: -10.500812530517578
    5. '	range' → logprob: -15.500812530517578
    6. '(range' → logprob: -16.625812530517578
    7. '
' → logprob: -17.375812530517578
    8. '   ' → logprob: -18.500812530517578
    9. '__' → logprob: -19.750812530517578
    10. '.range' → logprob: -19.875812530517578

Token 501: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.6405310816480778e-05
    2. '(self' → logprob: -11.125016212463379
    3. 'N' → logprob: -13.500016212463379
    4. 'self' → logprob: -16.375017166137695
    5. '(' → logprob: -17.000017166137695
    6. '(n' → logprob: -17.125017166137695
    7. '(M' → logprob: -17.875017166137695
    8. '   ' → logprob: -19.750017166137695
    9. '((' → logprob: -20.500017166137695
    10. '	N' → logprob: -20.500017166137695

Token 502: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.6087021473795176e-05
    2. ']' → logprob: -10.250045776367188
    3. ')]
' → logprob: -12.000045776367188
    4. ')' → logprob: -13.625045776367188
    5. ' )' → logprob: -13.750045776367188
    6. ' ]' → logprob: -14.000045776367188
    7. '       ' → logprob: -14.875045776367188
    8. '()]' → logprob: -15.625045776367188
    9. '   ' → logprob: -15.875045776367188
    10. ')]

' → logprob: -16.250045776367188

Token 503: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20982061326503754
    2. '   ' → logprob: -1.7098206281661987
    3. 'self' → logprob: -5.209820747375488
    4. ' self' → logprob: -6.834820747375488
    5. '<|end|>' → logprob: -6.834820747375488
    6. '
' → logprob: -7.709820747375488
    7. ' ' → logprob: -9.459820747375488
    8. '	self' → logprob: -9.584820747375488
    9. ',' → logprob: -10.209820747375488
    10. 'def' → logprob: -10.334820747375488

Token 504: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10426468402147293
    2. '       ' → logprob: -2.604264736175537
    3. ' self' → logprob: -3.854264736175537
    4. 'from' → logprob: -6.604264736175537
    5. 'import' → logprob: -6.729264736175537
    6. '   ' → logprob: -6.979264736175537
    7. 'for' → logprob: -8.979264259338379
    8. 'def' → logprob: -9.229264259338379
    9. ' from' → logprob: -10.104264259338379
    10. '
' → logprob: -10.729264259338379

Token 505: '.weights' (ID: 144733)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.parent' → logprob: -1.0139330625534058
    2. '.LOG' → logprob: -1.1389330625534058
    3. '.depth' → logprob: -1.2639330625534058
    4. '.log' → logprob: -4.513933181762695
    5. '.par' → logprob: -4.763933181762695
    6. '._' → logprob: -5.638933181762695
    7. 'LOG' → logprob: -6.263933181762695
    8. '.P' → logprob: -6.388933181762695
    9. '.dep' → logprob: -6.638933181762695
    10. '.level' → logprob: -6.763933181762695

Token 506: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34906768798828125
    2. ' =' → logprob: -1.2240676879882812
    3. '=[]' → logprob: -7.474067687988281
    4. '=None' → logprob: -10.724067687988281
    5. ':' → logprob: -10.849067687988281
    6. '   ' → logprob: -12.474067687988281
    7. '<|end|>' → logprob: -12.974067687988281
    8. ',' → logprob: -13.224067687988281
    9. '=[]
' → logprob: -13.474067687988281
    10. '=[' → logprob: -14.099067687988281

Token 507: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000546718598343432
    2. 'default' → logprob: -8.5005464553833
    3. '[]' → logprob: -8.7505464553833
    4. '[list' → logprob: -9.8755464553833
    5. 'None' → logprob: -10.2505464553833
    6. '{}' → logprob: -10.3755464553833
    7. '[N' → logprob: -10.3755464553833
    8. ' [' → logprob: -11.5005464553833
    9. '[[' → logprob: -12.2505464553833
    10. '[n' → logprob: -12.6255464553833

Token 508: 'list' (ID: 2641)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.17755605280399323
    2. '0' → logprob: -2.802556037902832
    3. '{}' → logprob: -2.927556037902832
    4. 'dict' → logprob: -3.552556037902832
    5. 'list' → logprob: -5.177556037902832
    6. 'None' → logprob: -5.427556037902832
    7. 'default' → logprob: -5.427556037902832
    8. ']' → logprob: -5.927556037902832
    9. 'N' → logprob: -6.552556037902832
    10. '{' → logprob: -8.052556037902832

Token 509: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006760960444808006
    2. '()]' → logprob: -5.006761074066162
    3. ']()' → logprob: -10.631760597229004
    4. '()
' → logprob: -11.006760597229004
    5. ' ()' → logprob: -13.256760597229004
    6. ']' → logprob: -14.381760597229004
    7. '[]' → logprob: -14.756760597229004
    8. '()]
' → logprob: -14.756760597229004
    9. '()<<' → logprob: -15.131760597229004
    10. '()

' → logprob: -15.631760597229004

Token 510: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.031070634722709656
    2. 'for' → logprob: -3.9060707092285156
    3. '()]' → logprob: -4.906070709228516
    4. ' for' → logprob: -5.906070709228516
    5. ']' → logprob: -8.531070709228516
    6. ']()' → logprob: -9.156070709228516
    7. '()]
' → logprob: -11.531070709228516
    8. '()
' → logprob: -11.906070709228516
    9. '())' → logprob: -12.281070709228516
    10. 'def' → logprob: -12.281070709228516

Token 511: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.135819760151207e-05
    2. ' _' → logprob: -10.37507152557373
    3. 'range' → logprob: -10.62507152557373
    4. ' range' → logprob: -11.75007152557373
    5. '(range' → logprob: -12.25007152557373
    6. '_=' → logprob: -13.87507152557373
    7. '(' → logprob: -14.00007152557373
    8. '_range' → logprob: -14.37507152557373
    9. '_
' → logprob: -15.62507152557373
    10. '(_' → logprob: -15.75007152557373

Token 512: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008040298125706613
    2. ' range' → logprob: -7.6258039474487305
    3. 'in' → logprob: -8.25080394744873
    4. '(range' → logprob: -10.00080394744873
    5. ' in' → logprob: -11.62580394744873
    6. '_range' → logprob: -15.00080394744873
    7. '	range' → logprob: -15.75080394744873
    8. '.range' → logprob: -17.375804901123047
    9. '(' → logprob: -17.625804901123047
    10. '_' → logprob: -17.875804901123047

Token 513: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011056192219257355
    2. ' range' → logprob: -4.511056423187256
    3. '(range' → logprob: -11.761055946350098
    4. '_range' → logprob: -14.636055946350098
    5. '
' → logprob: -16.886056900024414
    6. '	range' → logprob: -16.886056900024414
    7. '_' → logprob: -17.136056900024414
    8. '   ' → logprob: -19.761056900024414
    9. '.range' → logprob: -19.886056900024414
    10. 'N' → logprob: -20.136056900024414

Token 514: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.014441429637372494
    2. 'range' → logprob: -4.26444149017334
    3. ' range' → logprob: -8.76444149017334
    4. 'N' → logprob: -9.13944149017334
    5. '(range' → logprob: -11.63944149017334
    6. ' (' → logprob: -13.13944149017334
    7. '(' → logprob: -13.26444149017334
    8. '[N' → logprob: -15.13944149017334
    9. '   ' → logprob: -15.51444149017334
    10. 'self' → logprob: -15.63944149017334

Token 515: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17198462784290314
    2. ')]' → logprob: -1.9219846725463867
    3. ')' → logprob: -4.546984672546387
    4. ']
' → logprob: -7.296984672546387
    5. '       ' → logprob: -8.421984672546387
    6. '])' → logprob: -8.921984672546387
    7. '   ' → logprob: -10.421984672546387
    8. '()]' → logprob: -11.296984672546387
    9. ')
' → logprob: -12.171984672546387
    10. ' ]' → logprob: -12.421984672546387

Token 516: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029154305811971426
    2. 'self' → logprob: -6.877915382385254
    3. '
' → logprob: -7.002915382385254
    4. '   ' → logprob: -7.752915382385254
    5. '<|end|>' → logprob: -8.127915382385254
    6. ' self' → logprob: -8.502915382385254
    7. ',' → logprob: -11.252915382385254
    8. '	self' → logprob: -12.002915382385254
    9. ' ' → logprob: -12.252915382385254
    10. '```' → logprob: -12.377915382385254

Token 517: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.025854315608739853
    2. '       ' → logprob: -4.025854110717773
    3. ' self' → logprob: -5.025854110717773
    4. '   ' → logprob: -7.275854110717773
    5. '
' → logprob: -8.275854110717773
    6. 'for' → logprob: -9.025854110717773
    7. ' for' → logprob: -11.900854110717773
    8. '	self' → logprob: -12.025854110717773
    9. 'def' → logprob: -12.275854110717773
    10. ' ' → logprob: -12.275854110717773

Token 518: '.depth' (ID: 89791)
  Prédit: '.depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -0.7127618193626404
    2. '.parent' → logprob: -0.8377618193626404
    3. '.LOG' → logprob: -3.337761878967285
    4. '.par' → logprob: -3.837761878967285
    5. '.log' → logprob: -5.087761878967285
    6. '.dist' → logprob: -5.962761878967285
    7. '.dep' → logprob: -6.462761878967285
    8. '.first' → logprob: -7.087761878967285
    9. '.level' → logprob: -7.212761878967285
    10. '.P' → logprob: -7.212761878967285

Token 519: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142191648483276
    2. ' =' → logprob: -1.7014219760894775
    3. ' ' → logprob: -12.826421737670898
    4. 's' → logprob: -13.326421737670898
    5. '   ' → logprob: -13.576421737670898
    6. '=[]' → logprob: -13.701421737670898
    7. '=[' → logprob: -14.201421737670898
    8. ',' → logprob: -14.826421737670898
    9. ':' → logprob: -14.826421737670898
    10. '[' → logprob: -15.326421737670898

Token 520: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04528253152966499
    2. '[N' → logprob: -3.2952826023101807
    3. '[-' → logprob: -5.045282363891602
    4. ' [' → logprob: -7.295282363891602
    5. '[n' → logprob: -9.670282363891602
    6. '[int' → logprob: -11.295282363891602
    7. '[self' → logprob: -12.295282363891602
    8. '[len' → logprob: -12.670282363891602
    9. ' [-' → logprob: -12.795282363891602
    10. '[node' → logprob: -13.170282363891602

Token 521: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043234288692474365
    2. '-' → logprob: -3.168234348297119
    3. 'None' → logprob: -9.168233871459961
    4. 'N' → logprob: -9.543233871459961
    5. ' -' → logprob: -10.543233871459961
    6. 'INF' → logprob: -11.543233871459961
    7. ' ' → logprob: -11.668233871459961
    8. '-N' → logprob: -12.168233871459961
    9. '   ' → logprob: -12.543233871459961
    10. '-INF' → logprob: -14.543233871459961

Token 522: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02722751721739769
    2. ']*' → logprob: -3.9022274017333984
    3. ']*(' → logprob: -5.527227401733398
    4. ' for' → logprob: -6.152227401733398
    5. 'for' → logprob: -7.527227401733398
    6. ' ]' → logprob: -11.527227401733398
    7. ']+' → logprob: -12.777227401733398
    8. '   ' → logprob: -13.152227401733398
    9. ')' → logprob: -13.652227401733398
    10. '	for' → logprob: -13.777227401733398

Token 523: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10506098717451096
    2. ']*' → logprob: -2.9800610542297363
    3. ' for' → logprob: -4.230061054229736
    4. ']*(' → logprob: -4.605061054229736
    5. 'for' → logprob: -4.730061054229736
    6. '   ' → logprob: -5.855061054229736
    7. ' *' → logprob: -5.855061054229736
    8. '
' → logprob: -5.980061054229736
    9. '*' → logprob: -6.105061054229736
    10. '       ' → logprob: -6.480061054229736

Token 524: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.981667537620524e-06
    2. 'self' → logprob: -13.250001907348633
    3. ' N' → logprob: -16.625001907348633
    4. '   ' → logprob: -17.500001907348633
    5. '(N' → logprob: -18.750001907348633
    6. '       ' → logprob: -19.750001907348633
    7. '	N' → logprob: -20.375001907348633
    8. '(' → logprob: -22.250001907348633
    9. 'Ｎ' → logprob: -22.375001907348633
    10. '
' → logprob: -22.625001907348633

Token 525: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01298374030739069
    2. 'self' → logprob: -5.012983798980713
    3. '
' → logprob: -5.887983798980713
    4. '<|end|>' → logprob: -6.387983798980713
    5. '   ' → logprob: -7.012983798980713
    6. ' self' → logprob: -7.512983798980713
    7. ',' → logprob: -8.512983322143555
    8. ' ' → logprob: -10.637983322143555
    9. ',
' → logprob: -10.887983322143555
    10. '        
' → logprob: -10.887983322143555

Token 526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0627729594707489
    2. 'self' → logprob: -2.8127729892730713
    3. ' self' → logprob: -7.812772750854492
    4. '   ' → logprob: -8.312772750854492
    5. '<|end|>' → logprob: -9.062772750854492
    6. '	self' → logprob: -10.812772750854492
    7. '
' → logprob: -12.187772750854492
    8. ' ' → logprob: -12.312772750854492
    9. '	' → logprob: -13.187772750854492
    10. '[self' → logprob: -13.562772750854492

Token 527: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0018102485919371247
    2. '       ' → logprob: -6.626810073852539
    3. ' self' → logprob: -8.751810073852539
    4. 'from' → logprob: -9.001810073852539
    5. 'import' → logprob: -9.001810073852539
    6. '   ' → logprob: -9.626810073852539
    7. '
' → logprob: -12.376810073852539
    8. 'def' → logprob: -13.001810073852539
    9. '	self' → logprob: -13.751810073852539
    10. 'class' → logprob: -14.001810073852539

Token 528: '.cost' (ID: 80655)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.047838758677244186
    2. '.LOG' → logprob: -3.7978386878967285
    3. '.par' → logprob: -4.2978386878967285
    4. '.P' → logprob: -5.6728386878967285
    5. '.pa' → logprob: -6.5478386878967285
    6. '.parents' → logprob: -6.5478386878967285
    7. '.log' → logprob: -6.7978386878967285
    8. '.MAX' → logprob: -6.9228386878967285
    9. '.max' → logprob: -7.0478386878967285
    10. 'parent' → logprob: -7.6728386878967285

Token 529: 's' (ID: 82)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38791623711586
    2. '=' → logprob: -1.1379162073135376
    3. 's' → logprob: -6.887916088104248
    4. '=[]' → logprob: -11.387916564941406
    5. '   ' → logprob: -12.512916564941406
    6. '=[' → logprob: -12.762916564941406
    7. ' ' → logprob: -13.387916564941406
    8. '<|end|>' → logprob: -13.887916564941406
    9. ' =[' → logprob: -14.012916564941406
    10. '[' → logprob: -14.262916564941406

Token 530: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869379460811615
    2. '=' → logprob: -1.1369379758834839
    3. '=[]' → logprob: -9.886938095092773
    4. '=[' → logprob: -11.386938095092773
    5. ' =[' → logprob: -13.636938095092773
    6. ':' → logprob: -14.011938095092773
    7. ',' → logprob: -14.511938095092773
    8. '=None' → logprob: -14.636938095092773
    9. '<|end|>' → logprob: -14.636938095092773
    10. '[' → logprob: -14.761938095092773

Token 531: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00019340807921253145
    2. ' [' → logprob: -8.62519359588623
    3. '[N' → logprob: -11.25019359588623
    4. '[-' → logprob: -15.25019359588623
    5. '   ' → logprob: -16.375192642211914
    6. '[len' → logprob: -16.500192642211914
    7. '[n' → logprob: -16.750192642211914
    8. 'None' → logprob: -16.750192642211914
    9. '[node' → logprob: -16.750192642211914
    10. '[length' → logprob: -17.125192642211914

Token 532: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016180499223992229
    2. 'INF' → logprob: -6.626617908477783
    3. 'LIN' → logprob: -8.501618385314941
    4. '[' → logprob: -10.001618385314941
    5. 'inf' → logprob: -11.251618385314941
    6. 'N' → logprob: -11.626618385314941
    7. 'None' → logprob: -11.876618385314941
    8. '[N' → logprob: -12.501618385314941
    9. '[]' → logprob: -12.876618385314941
    10. ']' → logprob: -13.876618385314941

Token 533: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00409015454351902
    2. ']*' → logprob: -5.504090309143066
    3. '*' → logprob: -12.004090309143066
    4. ' ]' → logprob: -12.754090309143066
    5. ')' → logprob: -14.004090309143066
    6. ' *' → logprob: -14.129090309143066
    7. '   ' → logprob: -14.879090309143066
    8. ' for' → logprob: -15.004090309143066
    9. ']*(' → logprob: -15.254090309143066
    10. ' ' → logprob: -15.754090309143066

Token 534: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1270540952682495
    2. ' *' → logprob: -2.127054214477539
    3. '*N' → logprob: -9.127054214477539
    4. ')' → logprob: -12.127054214477539
    5. ']*' → logprob: -13.002054214477539
    6. '*(' → logprob: -13.127054214477539
    7. ']' → logprob: -13.377054214477539
    8. '*n' → logprob: -13.627054214477539
    9. '   ' → logprob: -14.002054214477539
    10. ')*' → logprob: -14.127054214477539

Token 535: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.981667537620524e-06
    2. ' N' → logprob: -13.500001907348633
    3. '   ' → logprob: -14.500001907348633
    4. '       ' → logprob: -17.125001907348633
    5. '
' → logprob: -18.875001907348633
    6. 'self' → logprob: -18.875001907348633
    7. ' ' → logprob: -19.000001907348633
    8. '(N' → logprob: -19.625001907348633
    9. '  ' → logprob: -20.000001907348633
    10. '```' → logprob: -20.250001907348633

Token 536: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033658118918538094
    2. 'self' → logprob: -5.753365993499756
    3. ' self' → logprob: -9.628365516662598
    4. '   ' → logprob: -10.128365516662598
    5. ',' → logprob: -10.378365516662598
    6. '
' → logprob: -10.503365516662598
    7. '<|end|>' → logprob: -11.003365516662598
    8. ' ' → logprob: -12.628365516662598
    9. '	self' → logprob: -14.128365516662598
    10. '      ' → logprob: -14.628365516662598

Token 537: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04390088468790054
    2. 'self' → logprob: -3.168900966644287
    3. ' self' → logprob: -7.543900966644287
    4. '   ' → logprob: -8.043900489807129
    5. '
' → logprob: -10.918900489807129
    6. '	self' → logprob: -12.043900489807129
    7. ' ' → logprob: -12.168900489807129
    8. 'def' → logprob: -12.168900489807129
    9. 'import' → logprob: -12.418900489807129
    10. 'from' → logprob: -12.793900489807129

Token 538: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0048690419644117355
    2. '       ' → logprob: -5.379868984222412
    3. '   ' → logprob: -9.12986946105957
    4. ' self' → logprob: -10.12986946105957
    5. 'import' → logprob: -10.25486946105957
    6. 'from' → logprob: -10.50486946105957
    7. 'def' → logprob: -11.00486946105957
    8. 'for' → logprob: -11.75486946105957
    9. 'max' → logprob: -12.62986946105957
    10. '	self' → logprob: -13.37986946105957

Token 539: '.l' (ID: 1000)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.5760582089424133
    2. '.LOG' → logprob: -1.0760581493377686
    3. '.par' → logprob: -3.3260581493377686
    4. '.log' → logprob: -3.7010581493377686
    5. '.P' → logprob: -3.9510581493377686
    6. '.parents' → logprob: -5.201058387756348
    7. '.pa' → logprob: -5.951058387756348
    8. '.MAX' → logprob: -6.076058387756348
    9. '.max' → logprob: -6.451058387756348
    10. '.k' → logprob: -6.951058387756348

Token 540: ' =' (ID: 314)
  Prédit: 'og'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'og' → logprob: -0.02922814153134823
    2. 'g' → logprob: -3.9042282104492188
    3. 'ogs' → logprob: -5.154228210449219
    4. 'en' → logprob: -7.154228210449219
    5. 'ca' → logprob: -7.654228210449219
    6. 'v' → logprob: -8.029228210449219
    7. 'n' → logprob: -8.404228210449219
    8. 'vl' → logprob: -9.154228210449219
    9. 'max' → logprob: -9.154228210449219
    10. 'ogn' → logprob: -9.154228210449219

Token 541: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4893430173397064
    2. 'N' → logprob: -2.1143429279327393
    3. '(N' → logprob: -2.2393429279327393
    4. '20' → logprob: -2.6143429279327393
    5. '(' → logprob: -3.6143429279327393
    6. 'self' → logprob: -3.9893429279327393
    7. '1' → logprob: -4.364343166351318
    8. '(M' → logprob: -5.114343166351318
    9. '(self' → logprob: -5.364343166351318
    10. '[N' → logprob: -5.364343166351318

Token 542: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.47430554032325745
    2. 'self' → logprob: -0.9743055105209351
    3. ' self' → logprob: -9.349305152893066
    4. '(self' → logprob: -9.599305152893066
    5. ' N' → logprob: -10.349305152893066
    6. '(N' → logprob: -10.724305152893066
    7. '
' → logprob: -11.974305152893066
    8. '   ' → logprob: -12.349305152893066
    9. 'math' → logprob: -12.599305152893066
    10. 'max' → logprob: -14.099305152893066

Token 543: '-' (ID: 12)
  Prédit: '.bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.11688729375600815
    2. ').' → logprob: -2.241887331008911
    3. '-' → logprob: -5.616887092590332
    4. ' ).' → logprob: -8.241887092590332
    5. '.' → logprob: -9.366887092590332
    6. ' .' → logprob: -10.241887092590332
    7. ' -' → logprob: -11.491887092590332
    8. '
' → logprob: -11.991887092590332
    9. 'bit' → logprob: -12.491887092590332
    10. '].' → logprob: -12.741887092590332

Token 544: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002566979732364416
    2. ').' → logprob: -6.502566814422607
    3. 'bit' → logprob: -8.127567291259766
    4. '0' → logprob: -8.377567291259766
    5. ' ' → logprob: -8.752567291259766
    6. '
' → logprob: -9.002567291259766
    7. '.bit' → logprob: -9.377567291259766
    8. '=' → logprob: -10.627567291259766
    9. 'import' → logprob: -11.002567291259766
    10. '.' → logprob: -11.002567291259766

Token 545: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.00017874970217235386
    2. '.bit' → logprob: -8.750178337097168
    3. ' ).' → logprob: -11.625178337097168
    4. ')' → logprob: -12.125178337097168
    5. '
' → logprob: -13.500178337097168
    6. '.' → logprob: -13.875178337097168
    7. '+' → logprob: -14.125178337097168
    8. 'bit' → logprob: -14.125178337097168
    9. '].' → logprob: -14.750178337097168
    10. '   ' → logprob: -14.875178337097168

Token 546: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -2.7968066206085496e-05
    2. '.bit' → logprob: -11.125027656555176
    3. '```' → logprob: -11.375027656555176
    4. ' bit' → logprob: -14.000027656555176
    5. '
' → logprob: -15.000027656555176
    6. '**' → logprob: -15.000027656555176
    7. ' ' → logprob: -16.500028610229492
    8. '_bit' → logprob: -16.625028610229492
    9. '  ' → logprob: -16.875028610229492
    10. '   ' → logprob: -17.250028610229492

Token 547: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.000712074339389801
    2. 'length' → logprob: -7.250711917877197
    3. 'ength' → logprob: -14.000712394714355
    4. 'l' → logprob: -14.625712394714355
    5. '_LENGTH' → logprob: -14.625712394714355
    6. '```' → logprob: -16.37571144104004
    7. 'leng' → logprob: -16.37571144104004
    8. '_l' → logprob: -16.75071144104004
    9. 'Length' → logprob: -16.75071144104004
    10. 'len' → logprob: -17.12571144104004

Token 548: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004674811381846666
    2. '       ' → logprob: -6.379674911499023
    3. '<|end|>' → logprob: -7.129674911499023
    4. ')' → logprob: -7.379674911499023
    5. '+' → logprob: -7.879674911499023
    6. ' ()' → logprob: -8.129674911499023
    7. ' +' → logprob: -8.254674911499023
    8. '()+' → logprob: -8.879674911499023
    9. '        ' → logprob: -9.254674911499023
    10. '(' → logprob: -9.379674911499023

Token 549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014248794177547097
    2. 'self' → logprob: -7.126424789428711
    3. '<|end|>' → logprob: -8.251424789428711
    4. '
' → logprob: -8.626424789428711
    5. '   ' → logprob: -9.501424789428711
    6. ' self' → logprob: -9.876424789428711
    7. ',' → logprob: -10.501424789428711
    8. ')' → logprob: -11.876424789428711
    9. '	self' → logprob: -12.126424789428711
    10. ' ' → logprob: -12.876424789428711

Token 550: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02087935246527195
    2. '       ' → logprob: -3.8958792686462402
    3. ' self' → logprob: -8.020879745483398
    4. '   ' → logprob: -12.395879745483398
    5. '	self' → logprob: -13.770879745483398
    6. 'def' → logprob: -14.020879745483398
    7. ' ' → logprob: -14.395879745483398
    8. '(self' → logprob: -15.145879745483398
    9. '[self' → logprob: -15.270879745483398
    10. '
' → logprob: -15.770879745483398

Token 551: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.20174135267734528
    2. '.par' → logprob: -2.5767414569854736
    3. '.up' → logprob: -3.3267414569854736
    4. '.parents' → logprob: -3.7017414569854736
    5. '.' → logprob: -4.0767412185668945
    6. '.pa' → logprob: -4.7017412185668945
    7. '.dp' → logprob: -5.3267412185668945
    8. '.P' → logprob: -5.5767412185668945
    9. '.p' → logprob: -5.9517412185668945
    10. '.table' → logprob: -5.9517412185668945

Token 552: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014143168926239
    2. ' =' → logprob: -1.7014143466949463
    3. ':' → logprob: -14.451414108276367
    4. '   ' → logprob: -15.576414108276367
    5. ' ' → logprob: -16.076414108276367
    6. '=[' → logprob: -16.201414108276367
    7. '[' → logprob: -16.451414108276367
    8. '=[[' → logprob: -17.451414108276367
    9. '=[]' → logprob: -17.701414108276367
    10. ' =[' → logprob: -17.701414108276367

Token 553: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.00872211717069149
    2. '[' → logprob: -4.758722305297852
    3. ' [[' → logprob: -9.508722305297852
    4. '[list' → logprob: -10.758722305297852
    5. '[List' → logprob: -12.383722305297852
    6. '[
' → logprob: -13.383722305297852
    7. '[self' → logprob: -13.508722305297852
    8. '[node' → logprob: -14.008722305297852
    9. '[array' → logprob: -14.008722305297852
    10. ' [' → logprob: -14.758722305297852

Token 554: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.000758288602810353
    2. 'N' → logprob: -7.500758171081543
    3. '-N' → logprob: -8.750758171081543
    4. 'None' → logprob: -10.250758171081543
    5. ' -' → logprob: -12.000758171081543
    6. '0' → logprob: -12.250758171081543
    7. '   ' → logprob: -15.500758171081543
    8. '[-' → logprob: -15.625758171081543
    9. '
' → logprob: -16.75075912475586
    10. '(-' → logprob: -16.75075912475586

Token 555: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '-' → logprob: -16.875
    4. 'N' → logprob: -18.25
    5. '１' → logprob: -18.25
    6. '(' → logprob: -18.375
    7. '   ' → logprob: -18.75
    8. '

' → logprob: -18.875
    9. '
' → logprob: -19.75
    10. '```' → logprob: -20.0

Token 556: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28047508001327515
    2. ']' → logprob: -1.90547513961792
    3. 'for' → logprob: -2.53047513961792
    4. ']*' → logprob: -4.15547513961792
    5. ']*(' → logprob: -7.65547513961792
    6. '	for' → logprob: -11.155474662780762
    7. ' ]' → logprob: -11.280474662780762
    8. '   ' → logprob: -11.780474662780762
    9. ')' → logprob: -12.405474662780762
    10. ',' → logprob: -12.905474662780762

Token 557: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3133905827999115
    2. 'for' → logprob: -1.3133906126022339
    3. ']' → logprob: -10.063390731811523
    4. '   ' → logprob: -10.063390731811523
    5. '       ' → logprob: -10.938390731811523
    6. ']*' → logprob: -12.063390731811523
    7. '	for' → logprob: -12.188390731811523
    8. '           ' → logprob: -12.438390731811523
    9. ' ' → logprob: -13.313390731811523
    10. '        ' → logprob: -13.313390731811523

Token 558: ' self' (ID: 1051)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0055961026810109615
    2. 'self' → logprob: -5.255596160888672
    3. '(N' → logprob: -8.380596160888672
    4. '(self' → logprob: -9.005596160888672
    5. ' N' → logprob: -12.630596160888672
    6. '(' → logprob: -12.880596160888672
    7. '   ' → logprob: -13.005596160888672
    8. ' self' → logprob: -13.505596160888672
    9. ' (' → logprob: -14.255596160888672
    10. '
' → logprob: -16.380596160888672

Token 559: '.l' (ID: 1000)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.23160171508789062
    2. 'l' → logprob: -1.6066017150878906
    3. '(N' → logprob: -5.356601715087891
    4. '.N' → logprob: -7.356601715087891
    5. 'self' → logprob: -7.856601715087891
    6. ' (' → logprob: -8.98160171508789
    7. '
' → logprob: -9.35660171508789
    8. '(' → logprob: -10.23160171508789
    9. '       ' → logprob: -10.35660171508789
    10. '   ' → logprob: -10.35660171508789

Token 560: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.027117189019918442
    2. 'for' → logprob: -3.6521172523498535
    3. ']' → logprob: -7.2771172523498535
    4. ' ]' → logprob: -9.652116775512695
    5. ' ' → logprob: -10.652116775512695
    6. '	for' → logprob: -11.527116775512695
    7. '       ' → logprob: -12.152116775512695
    8. '<|end|>' → logprob: -12.402116775512695
    9. '        ' → logprob: -12.652116775512695
    10. '   ' → logprob: -12.777116775512695

Token 561: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0006375004886649549
    2. ' _' → logprob: -7.375637531280518
    3. ' range' → logprob: -11.50063705444336
    4. '_range' → logprob: -15.00063705444336
    5. '_
' → logprob: -15.87563705444336
    6. '_=' → logprob: -15.87563705444336
    7. 'range' → logprob: -16.12563705444336
    8. '_
' → logprob: -16.62563705444336
    9. '_

' → logprob: -16.87563705444336
    10. ' i' → logprob: -17.62563705444336

Token 562: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4639889895915985
    2. 'in' → logprob: -1.213989019393921
    3. 'range' → logprob: -2.713989019393921
    4. ' range' → logprob: -4.838988780975342
    5. '(range' → logprob: -10.9639892578125
    6. ' ' → logprob: -12.7139892578125
    7. '	range' → logprob: -12.9639892578125
    8. '   ' → logprob: -13.2139892578125
    9. '_' → logprob: -13.2139892578125
    10. '_range' → logprob: -13.3389892578125

Token 563: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07888989895582199
    2. ' range' → logprob: -2.578889846801758
    3. '_range' → logprob: -16.328889846801758
    4. '   ' → logprob: -17.203889846801758
    5. '	range' → logprob: -17.453889846801758
    6. '_' → logprob: -17.828889846801758
    7. '(range' → logprob: -18.828889846801758
    8. ' ' → logprob: -18.828889846801758
    9. '  ' → logprob: -19.828889846801758
    10. '
' → logprob: -20.703889846801758

Token 564: '(N' (ID: 10564)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5801916122436523
    2. 'range' → logprob: -0.8301916122436523
    3. '(N' → logprob: -5.580191612243652
    4. 'N' → logprob: -8.455191612243652
    5. '(range' → logprob: -8.705191612243652
    6. '[N' → logprob: -9.955191612243652
    7. '   ' → logprob: -10.330191612243652
    8. '       ' → logprob: -11.955191612243652
    9. ' (' → logprob: -13.205191612243652
    10. ' N' → logprob: -13.830191612243652

Token 565: ')]
' (ID: 11587)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3552187383174896
    2. ']' → logprob: -1.605218768119812
    3. ')]' → logprob: -2.3552186489105225
    4. '])]' → logprob: -6.355218887329102
    5. ' ])' → logprob: -7.605218887329102
    6. ')' → logprob: -7.980218887329102
    7. '       ' → logprob: -8.105218887329102
    8. ' ]' → logprob: -8.605218887329102
    9. ')])' → logprob: -8.730218887329102
    10. '   ' → logprob: -10.980218887329102

Token 566: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 567: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3187624216079712
    2. '   ' → logprob: -1.8187624216079712
    3. 'def' (adapté à ' def') → logprob: -2.5687623023986816
    4. '<|end|>' → logprob: -4.068762302398682
    5. '    
' → logprob: -4.943762302398682
    6. ')' → logprob: -5.568762302398682
    7. ' def' → logprob: -5.818762302398682
    8. ' 
' → logprob: -7.193762302398682
    9. '```' → logprob: -7.943762302398682
    10. ')
' → logprob: -8.19376277923584

Token 568: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.23045985400676727
    2. ' add' → logprob: -1.6054598093032837
    3. 'build' → logprob: -5.730459690093994
    4. ' build' → logprob: -6.605459690093994
    5. '_add' → logprob: -8.105460166931152
    6. 'init' → logprob: -9.855460166931152
    7. ' addedge' → logprob: -11.105460166931152
    8. '	add' → logprob: -11.480460166931152
    9. 'dfs' → logprob: -11.605460166931152
    10. '__' → logprob: -11.855460166931152

Token 569: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0013046413660049438
    2. '_node' → logprob: -6.876304626464844
    3. 'edge' → logprob: -9.501304626464844
    4. '_' → logprob: -9.626304626464844
    5. '(self' → logprob: -9.626304626464844
    6. '_vertex' → logprob: -10.501304626464844
    7. '(' → logprob: -10.626304626464844
    8. '_edges' → logprob: -13.126304626464844
    9. '(_' → logprob: -13.251304626464844
    10. '_child' → logprob: -13.501304626464844

Token 570: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00013524403038900346
    2. '(' → logprob: -9.00013542175293
    3. ' (' → logprob: -12.25013542175293
    4. '(s' → logprob: -13.00013542175293
    5. 'self' → logprob: -13.37513542175293
    6. '(
' → logprob: -13.50013542175293
    7. '(u' → logprob: -14.12513542175293
    8. '   ' → logprob: -15.25013542175293
    9. '(sel' → logprob: -15.50013542175293
    10. ' self' → logprob: -15.75013542175293

Token 571: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.022803140804171562
    2. ',' → logprob: -3.8978030681610107
    3. ')(' → logprob: -6.77280330657959
    4. 'self' → logprob: -8.02280330657959
    5. ' (' → logprob: -8.27280330657959
    6. ')' → logprob: -8.27280330657959
    7. '(u' → logprob: -8.77280330657959
    8. '(' → logprob: -10.02280330657959
    9. ',self' → logprob: -10.39780330657959
    10. ' self' → logprob: -11.77280330657959

Token 572: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.013199289329349995
    2. 'a' → logprob: -4.513199329376221
    3. ' u' → logprob: -6.513199329376221
    4. 'self' → logprob: -8.013198852539062
    5. 'frm' → logprob: -8.888198852539062
    6. 'v' → logprob: -9.388198852539062
    7. 'p' → logprob: -10.263198852539062
    8. 'from' → logprob: -10.888198852539062
    9. 'fr' → logprob: -11.138198852539062
    10. 'parent' → logprob: -11.388198852539062

Token 573: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018125296628568321
    2. ' ,' → logprob: -8.625181198120117
    3. ',a' → logprob: -13.875181198120117
    4. ':' → logprob: -15.000181198120117
    5. ',int' → logprob: -16.750181198120117
    6. ',b' → logprob: -16.750181198120117
    7. '_,' → logprob: -17.000181198120117
    8. '   ' → logprob: -17.375181198120117
    9. '‌,' → logprob: -17.500181198120117
    10. ',
' → logprob: -17.625181198120117

Token 574: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02077077329158783
    2. ' int' → logprob: -3.895770788192749
    3. '<|end|>' → logprob: -9.645771026611328
    4. ',' → logprob: -9.770771026611328
    5. ',int' → logprob: -10.520771026611328
    6. ':int' → logprob: -10.770771026611328
    7. 'b' → logprob: -11.020771026611328
    8. '(int' → logprob: -11.020771026611328
    9. '[int' → logprob: -11.395771026611328
    10. ' ' → logprob: -12.520771026611328

Token 575: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.273621405242011e-05
    2. ' ,' → logprob: -10.375032424926758
    3. ',b' → logprob: -13.875032424926758
    4. ',a' → logprob: -15.000032424926758
    5. '   ' → logprob: -17.125032424926758
    6. ',
' → logprob: -17.250032424926758
    7. '‌,' → logprob: -17.500032424926758
    8. ',n' → logprob: -17.625032424926758
    9. ',int' → logprob: -18.625032424926758
    10. ',u' → logprob: -19.250032424926758

Token 576: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005233882926404476
    2. ' b' → logprob: -5.2552337646484375
    3. '   ' → logprob: -17.005233764648438
    4. '	b' → logprob: -17.130233764648438
    5. '    ' → logprob: -18.380233764648438
    6. ' ' → logprob: -19.005233764648438
    7. '  ' → logprob: -19.630233764648438
    8. '    
' → logprob: -21.130233764648438
    9. ')b' → logprob: -21.130233764648438
    10. '
' → logprob: -21.505233764648438

Token 577: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8206473871250637e-05
    2. ' ,' → logprob: -10.500028610229492
    3. '   ' → logprob: -15.250028610229492
    4. ',b' → logprob: -15.375028610229492
    5. ',int' → logprob: -16.125028610229492
    6. ',a' → logprob: -17.125028610229492
    7. ',
' → logprob: -17.500028610229492
    8. ':' → logprob: -17.625028610229492
    9. '‌,' → logprob: -17.625028610229492
    10. '):' → logprob: -18.125028610229492

Token 578: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12840570509433746
    2. ' int' → logprob: -2.128405809402466
    3. ')' → logprob: -7.253405570983887
    4. 'b' → logprob: -7.753405570983887
    5. ' b' → logprob: -8.378405570983887
    6. ':int' → logprob: -9.753405570983887
    7. 'a' → logprob: -11.003405570983887
    8. '):
' → logprob: -12.003405570983887
    9. '   ' → logprob: -12.003405570983887
    10. ' ' → logprob: -12.128405570983887

Token 579: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02219715714454651
    2. ')' → logprob: -4.397197246551514
    3. '):' → logprob: -4.647197246551514
    4. ' ,' → logprob: -10.897196769714355
    5. '):
' → logprob: -10.897196769714355
    6. '   ' → logprob: -11.397196769714355
    7. '):
' → logprob: -14.272196769714355
    8. '),' → logprob: -14.272196769714355
    9. ' )' → logprob: -14.397196769714355
    10. ' ):' → logprob: -14.397196769714355

Token 580: ' c' (ID: 274)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.08805513381958008
    2. 'c' → logprob: -2.71305513381958
    3. ' w' → logprob: -4.21305513381958
    4. 'weight' → logprob: -6.71305513381958
    5. ' c' → logprob: -7.08805513381958
    6. 'cost' → logprob: -7.08805513381958
    7. '   ' → logprob: -8.963054656982422
    8. 'wt' → logprob: -10.213054656982422
    9. ' weight' → logprob: -10.463054656982422
    10. ' cost' → logprob: -10.463054656982422

Token 581: '=' (ID: 28)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5795606374740601
    2. '=' → logprob: -0.9545606374740601
    3. '):' → logprob: -3.0795607566833496
    4. ')' → logprob: -4.95456075668335
    5. '=None' → logprob: -6.82956075668335
    6. '):
' → logprob: -8.079560279846191
    7. '   ' → logprob: -8.704560279846191
    8. ':int' → logprob: -9.079560279846191
    9. ' =' → logprob: -9.204560279846191
    10. ' ):' → logprob: -10.329560279846191

Token 582: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3490845859050751
    2. '0' → logprob: -1.2240846157073975
    3. ' ' → logprob: -7.849084377288818
    4. '=' → logprob: -8.849084854125977
    5. 'None' → logprob: -9.849084854125977
    6. 'INF' → logprob: -10.224084854125977
    7. '=None' → logprob: -11.974084854125977
    8. ')' → logprob: -12.224084854125977
    9. '   ' → logprob: -13.099084854125977
    10. ' None' → logprob: -14.224084854125977

Token 583: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0023356860037893057
    2. ')' → logprob: -6.252335548400879
    3. '):
' → logprob: -7.877335548400879
    4. ' ):' → logprob: -10.877335548400879
    5. '):
' → logprob: -12.127335548400879
    6. '   ' → logprob: -13.252335548400879
    7. ':' → logprob: -14.627335548400879
    8. ',' → logprob: -15.002335548400879
    9. '):

' → logprob: -15.377335548400879
    10. ' )' → logprob: -15.627335548400879

Token 584: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003574768779799342
    2. '):' → logprob: -7.003574848175049
    3. '   ' → logprob: -7.253574848175049
    4. ')' → logprob: -7.503574848175049
    5. ' self' → logprob: -7.503574848175049
    6. '):
' → logprob: -8.00357437133789
    7. 'self' → logprob: -8.75357437133789
    8. '        
' → logprob: -9.12857437133789
    9. ':' → logprob: -9.87857437133789
    10. ',' → logprob: -9.87857437133789

Token 585: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03371497616171837
    2. ' self' → logprob: -3.533715009689331
    3. '       ' → logprob: -5.533714771270752
    4. '	self' → logprob: -12.40871524810791
    5. '   ' → logprob: -13.90871524810791
    6. '[self' → logprob: -15.65871524810791
    7. '```' → logprob: -17.033714294433594
    8. '(self' → logprob: -17.408714294433594
    9. '	' → logprob: -18.033714294433594
    10. '#' → logprob: -18.283714294433594

Token 586: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -1.1041145626222715e-05
    2. '.' → logprob: -11.625011444091797
    3. ' .' → logprob: -13.875011444091797
    4. '.graphics' → logprob: -15.500011444091797
    5. 'graph' → logprob: -15.750011444091797
    6. '	graph' → logprob: -15.750011444091797
    7. ').' → logprob: -16.375011444091797
    8. '.grid' → logprob: -16.500011444091797
    9. '.Graph' → logprob: -17.000011444091797
    10. '.geometry' → logprob: -17.000011444091797

Token 587: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.1008713702030946e-06
    2. 'a' → logprob: -13.625001907348633
    3. '   ' → logprob: -15.250001907348633
    4. ')[' → logprob: -15.500001907348633
    5. '[' → logprob: -15.625001907348633
    6. '][' → logprob: -15.750001907348633
    7. '}[' → logprob: -16.875001907348633
    8. ' [' → logprob: -17.250001907348633
    9. '       ' → logprob: -17.375001907348633
    10. '
' → logprob: -17.625001907348633

Token 588: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.000429596402682364
    2. ').' → logprob: -8.000429153442383
    3. '       ' → logprob: -10.250429153442383
    4. ' ].' → logprob: -10.250429153442383
    5. '   ' → logprob: -11.500429153442383
    6. ']' → logprob: -11.750429153442383
    7. '][' → logprob: -13.000429153442383
    8. '.append' → logprob: -13.375429153442383
    9. ']).' → logprob: -14.875429153442383
    10. '           ' → logprob: -15.125429153442383

Token 589: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.704273118884885e-07
    2. ' append' → logprob: -14.750000953674316
    3. '.append' → logprob: -15.375000953674316
    4. 'appen' → logprob: -17.5
    5. 'add' → logprob: -19.125
    6. 'app' → logprob: -19.25
    7. '	append' → logprob: -19.875
    8. '_append' → logprob: -20.875
    9. 'push' → logprob: -21.0
    10. 'Append' → logprob: -21.0

Token 590: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.02723412774503231
    2. '((' → logprob: -3.7772340774536133
    3. 'b' → logprob: -5.527234077453613
    4. '(' → logprob: -12.652234077453613
    5. ' b' → logprob: -16.02723503112793
    6. '	b' → logprob: -16.02723503112793
    7. ' (' → logprob: -16.02723503112793
    8. '(
' → logprob: -16.52723503112793
    9. '```' → logprob: -18.15223503112793
    10. ',b' → logprob: -18.65223503112793

Token 591: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023919513449072838
    2. ')
' → logprob: -3.7739195823669434
    3. ',' → logprob: -7.648919582366943
    4. '       ' → logprob: -8.773919105529785
    5. ' )' → logprob: -11.148919105529785
    6. ')c' → logprob: -11.273919105529785
    7. ')
' → logprob: -12.148919105529785
    8. '),' → logprob: -12.273919105529785
    9. ' )
' → logprob: -13.023919105529785
    10. '   ' → logprob: -13.773919105529785

Token 592: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012013008818030357
    2. 'self' → logprob: -6.876201152801514
    3. ',' → logprob: -9.001201629638672
    4. ' self' → logprob: -10.626201629638672
    5. '<|end|>' → logprob: -11.376201629638672
    6. ')' → logprob: -12.376201629638672
    7. '#' → logprob: -14.126201629638672
    8. '   ' → logprob: -14.251201629638672
    9. '[self' → logprob: -14.751201629638672
    10. ',self' → logprob: -14.751201629638672

Token 593: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0002489423204679042
    2. ' self' → logprob: -8.500248908996582
    3. '       ' → logprob: -10.000248908996582
    4. '   ' → logprob: -17.8752498626709
    5. '	self' → logprob: -18.1252498626709
    6. '[self' → logprob: -19.7502498626709
    7. 's' → logprob: -20.0002498626709
    8. '           ' → logprob: -20.2502498626709
    9. ' ' → logprob: -20.3752498626709
    10. '0' → logprob: -20.5002498626709

Token 594: '.weights' (ID: 144733)
  Prédit: '.graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -6.392202976712724e-06
    2. 'graph' → logprob: -12.250006675720215
    3. '.' → logprob: -14.125006675720215
    4. '	graph' → logprob: -14.375006675720215
    5. '.weights' → logprob: -15.500006675720215
    6. ' .' → logprob: -17.5000057220459
    7. '.g' → logprob: -18.2500057220459
    8. ' graph' → logprob: -18.3750057220459
    9. '.graphics' → logprob: -18.5000057220459
    10. '(graph' → logprob: -18.5000057220459

Token 595: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.963691804325208e-05
    2. 'a' → logprob: -10.500029563903809
    3. '[b' → logprob: -13.375029563903809
    4. '   ' → logprob: -15.750029563903809
    5. '[c' → logprob: -16.625030517578125
    6. '[' → logprob: -16.625030517578125
    7. ' [' → logprob: -16.750030517578125
    8. '[A' → logprob: -17.250030517578125
    9. ')[' → logprob: -17.750030517578125
    10. '[u' → logprob: -17.750030517578125

Token 596: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.05135861411690712
    2. '].' → logprob: -3.051358699798584
    3. '.append' → logprob: -5.926358699798584
    4. '   ' → logprob: -9.926358222961426
    5. '       ' → logprob: -11.051358222961426
    6. ' ).' → logprob: -11.551358222961426
    7. ' ' → logprob: -11.926358222961426
    8. ')' → logprob: -12.051358222961426
    9. '.' → logprob: -12.801358222961426
    10. '}.' → logprob: -12.926358222961426

Token 597: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. '.append' → logprob: -14.875000953674316
    3. 'app' → logprob: -16.375
    4. ' append' → logprob: -17.125
    5. 'appen' → logprob: -17.375
    6. '	append' → logprob: -19.625
    7. 'add' → logprob: -21.625
    8. 'appe' → logprob: -21.875
    9. 'insert' → logprob: -22.25
    10. 'ap' → logprob: -22.375

Token 598: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.38688260316848755
    2. 'c' → logprob: -1.1368825435638428
    3. ' c' → logprob: -11.636882781982422
    4. '(' → logprob: -13.761882781982422
    5. ')c' → logprob: -14.261882781982422
    6. '	c' → logprob: -14.386882781982422
    7. '(
' → logprob: -15.136882781982422
    8. ' (' → logprob: -16.136882781982422
    9. '   ' → logprob: -17.261882781982422
    10. '
' → logprob: -17.511882781982422

Token 599: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6961212754249573
    2. ')
' → logprob: -0.6961212754249573
    3. '       ' → logprob: -5.8211212158203125
    4. ')
' → logprob: -12.821121215820312
    5. ' )
' → logprob: -14.321121215820312
    6. '),' → logprob: -14.446121215820312
    7. ' )' → logprob: -14.946121215820312
    8. ')

' → logprob: -15.571121215820312
    9. ')\
' → logprob: -15.821121215820312
    10. '<|end|>' → logprob: -16.196121215820312

Token 600: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03836781159043312
    2. 'self' → logprob: -3.288367748260498
    3. ' self' → logprob: -8.038368225097656
    4. '   ' → logprob: -13.038368225097656
    5. ',' → logprob: -14.663368225097656
    6. '	self' → logprob: -16.038368225097656
    7. '[self' → logprob: -16.038368225097656
    8. 'def' → logprob: -16.163368225097656
    9. '```' → logprob: -16.163368225097656
    10. ' ' → logprob: -16.163368225097656

Token 601: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -6.630610641877865e-06
    2. '       ' → logprob: -12.250006675720215
    3. ' self' → logprob: -13.250006675720215
    4. '   ' → logprob: -19.7500057220459
    5. '	self' → logprob: -21.3750057220459
    6. '(self' → logprob: -23.1250057220459
    7. '[self' → logprob: -23.1250057220459
    8. '        
' → logprob: -24.0000057220459
    9. 'sys' → logprob: -24.2500057220459
    10. ' ' → logprob: -24.3750057220459

Token 602: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -1.9623810658231378e-05
    2. 'graph' → logprob: -10.875020027160645
    3. '	graph' → logprob: -14.875020027160645
    4. '.' → logprob: -15.625020027160645
    5. '.class' → logprob: -18.125019073486328
    6. ' graph' → logprob: -18.750019073486328
    7. '(graph' → logprob: -18.875019073486328
    8. '.graphics' → logprob: -19.000019073486328
    9. 'class' → logprob: -19.250019073486328
    10. '.g' → logprob: -19.875019073486328

Token 603: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -3.128163257315464e-07
    2. 'b' → logprob: -15.125
    3. '[a' → logprob: -16.75
    4. '[' → logprob: -18.75
    5. '   ' → logprob: -19.75
    6. ' [' → logprob: -20.125
    7. '[c' → logprob: -21.0
    8. '```' → logprob: -21.125
    9. '[B' → logprob: -21.25
    10. '	b' → logprob: -22.125

Token 604: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -2.7133641196996905e-05
    2. '   ' → logprob: -11.75002670288086
    3. ' ].' → logprob: -12.12502670288086
    4. ']' → logprob: -12.25002670288086
    5. ').' → logprob: -12.25002670288086
    6. '[a' → logprob: -13.25002670288086
    7. '       ' → logprob: -14.12502670288086
    8. '][' → logprob: -14.75002670288086
    9. '.' → logprob: -14.87502670288086
    10. '[b' → logprob: -15.25002670288086

Token 605: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. '.append' → logprob: -15.5
    3. ' append' → logprob: -16.625
    4. 'appen' → logprob: -16.625
    5. 'app' → logprob: -16.875
    6. 'Append' → logprob: -20.25
    7. '	append' → logprob: -20.25
    8. '_append' → logprob: -21.25
    9. 'add' → logprob: -21.875
    10. 'prepend' → logprob: -22.25

Token 606: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.2378600735682994e-05
    2. 'a' → logprob: -10.375032424926758
    3. '(
' → logprob: -13.750032424926758
    4. '(' → logprob: -16.500032424926758
    5. ' (' → logprob: -19.125032424926758
    6. '((' → logprob: -19.625032424926758
    7. '(ai' → logprob: -20.375032424926758
    8. '<|end|>' → logprob: -20.750032424926758
    9. '(A' → logprob: -20.875032424926758
    10. '   ' → logprob: -20.875032424926758

Token 607: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.43316444754600525
    2. ')' → logprob: -1.0581644773483276
    3. '       ' → logprob: -5.433164596557617
    4. ' )
' → logprob: -10.183164596557617
    5. '<|end|>' → logprob: -11.308164596557617
    6. ' )' → logprob: -11.558164596557617
    7. ')
' → logprob: -11.683164596557617
    8. ',' → logprob: -12.183164596557617
    9. '   ' → logprob: -12.808164596557617
    10. '),' → logprob: -13.433164596557617

Token 608: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.3557529857498594e-05
    2. 'self' → logprob: -10.87502384185791
    3. '<|end|>' → logprob: -12.62502384185791
    4. '   ' → logprob: -14.25002384185791
    5. ',' → logprob: -15.62502384185791
    6. '           ' → logprob: -16.500022888183594
    7. '
' → logprob: -16.875022888183594
    8. '      ' → logprob: -17.000022888183594
    9. ' self' → logprob: -17.125022888183594
    10. '        
' → logprob: -17.250022888183594

Token 609: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0005745976231992245
    2. '       ' → logprob: -7.500574588775635
    3. ' self' → logprob: -10.750575065612793
    4. '   ' → logprob: -16.500574111938477
    5. '	self' → logprob: -17.375574111938477
    6. '(self' → logprob: -17.625574111938477
    7. '[self' → logprob: -17.875574111938477
    8. 'weights' → logprob: -18.000574111938477
    9. ' ' → logprob: -19.000574111938477
    10. '=self' → logprob: -19.375574111938477

Token 610: '.weights' (ID: 144733)
  Prédit: '.weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.weights' → logprob: -2.8087270038668066e-05
    2. 'weights' → logprob: -10.500027656555176
    3. ' .' → logprob: -15.875027656555176
    4. '.' → logprob: -15.875027656555176
    5. '.weight' → logprob: -17.000028610229492
    6. ' weights' → logprob: -17.125028610229492
    7. '(weights' → logprob: -17.250028610229492
    8. '.we' → logprob: -17.875028610229492
    9. '
' → logprob: -18.750028610229492
    10. 'Weights' → logprob: -18.875028610229492

Token 611: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -3.15441757265944e-05
    2. 'b' → logprob: -10.375031471252441
    3. '```' → logprob: -16.625032424926758
    4. '[' → logprob: -17.000032424926758
    5. '[a' → logprob: -17.250032424926758
    6. ')[' → logprob: -17.750032424926758
    7. ' [' → logprob: -17.875032424926758
    8. '	b' → logprob: -18.000032424926758
    9. '[
' → logprob: -18.375032424926758
    10. '   ' → logprob: -18.875032424926758

Token 612: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.4688816964626312
    2. ').' → logprob: -1.0938817262649536
    3. '.append' → logprob: -3.343881607055664
    4. '       ' → logprob: -6.093881607055664
    5. '.' → logprob: -6.968881607055664
    6. '   ' → logprob: -7.718881607055664
    7. '}.' → logprob: -8.843881607055664
    8. ' ' → logprob: -9.218881607055664
    9. '           ' → logprob: -9.718881607055664
    10. ' ].' → logprob: -10.718881607055664

Token 613: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.848420551046729e-05
    2. '.append' → logprob: -9.7500581741333
    3. ' append' → logprob: -16.625059127807617
    4. 'appen' → logprob: -16.750059127807617
    5. '	append' → logprob: -19.250059127807617
    6. 'Append' → logprob: -19.750059127807617
    7. '_append' → logprob: -20.500059127807617
    8. 'prepend' → logprob: -20.625059127807617
    9. 'app' → logprob: -21.625059127807617
    10. 'insert' → logprob: -21.875059127807617

Token 614: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00014001218369230628
    2. 'c' → logprob: -8.875140190124512
    3. '(' → logprob: -16.125139236450195
    4. '(
' → logprob: -17.125139236450195
    5. ')c' → logprob: -18.000139236450195
    6. ' c' → logprob: -19.125139236450195
    7. ' (' → logprob: -19.500139236450195
    8. '	c' → logprob: -19.750139236450195
    9. '©' → logprob: -19.875139236450195
    10. '[c' → logprob: -20.875139236450195

Token 615: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002668192028068006
    2. ')
' → logprob: -8.250267028808594
    3. '   ' → logprob: -13.250267028808594
    4. '<|end|>' → logprob: -13.500267028808594
    5. ' )' → logprob: -13.750267028808594
    6. ')

' → logprob: -14.375267028808594
    7. '       ' → logprob: -14.500267028808594
    8. '),' → logprob: -16.500267028808594
    9. '<|end|>' → logprob: -17.125267028808594
    10. 'def' → logprob: -17.125267028808594

Token 616: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027805771678686142
    2. '
' → logprob: -3.777805805206299
    3. 'def' → logprob: -6.402805805206299
    4. '<|end|>' → logprob: -7.027805805206299
    5. '    
' → logprob: -7.152805805206299
    6. ' def' → logprob: -7.402805805206299
    7. '        
' → logprob: -8.52780532836914
    8. '	def' → logprob: -8.52780532836914
    9. '<|end|>' → logprob: -10.02780532836914
    10. ',' → logprob: -10.40280532836914

Token 617: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10430409759283066
    2. ' def' → logprob: -2.604304075241089
    3. '   ' → logprob: -3.729304075241089
    4. '
' → logprob: -6.854304313659668
    5. '    
' → logprob: -11.479304313659668
    6. '	def' → logprob: -12.104304313659668
    7. '```' → logprob: -12.354304313659668
    8. ')' → logprob: -12.729304313659668
    9. ',' → logprob: -12.979304313659668
    10. ' ' → logprob: -13.979304313659668

Token 618: ' _' (ID: 1175)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.33215200901031494
    2. 'build' → logprob: -1.457152009010315
    3. ' dfs' → logprob: -3.4571518898010254
    4. ' build' → logprob: -4.457151889801025
    5. '_build' → logprob: -6.457151889801025
    6. 'init' → logprob: -6.832151889801025
    7. 'prepare' → logprob: -6.957151889801025
    8. '_d' → logprob: -7.082151889801025
    9. 'b' → logprob: -7.207151889801025
    10. '_b' → logprob: -8.082152366638184

Token 619: 'b' (ID: 65)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.03225361183285713
    2. 'build' → logprob: -3.6572535037994385
    3. 'b' → logprob: -5.407253742218018
    4. 'init' → logprob: -7.532253742218018
    5. 'prepare' → logprob: -7.907253742218018
    6. 'pre' → logprob: -8.65725326538086
    7. '_b' → logprob: -9.15725326538086
    8. 'df' → logprob: -10.15725326538086
    9. 'd' → logprob: -10.65725326538086
    10. '_' → logprob: -10.65725326538086

Token 620: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.5764413475990295
    2. 'uild' → logprob: -0.8264413475990295
    3. 'dfs' → logprob: -7.701441287994385
    4. 'ld' → logprob: -10.201441764831543
    5. 'uilt' → logprob: -13.076441764831543
    6. '_' → logprob: -13.576441764831543
    7. 'inary' → logprob: -13.701441764831543
    8. '_fs' → logprob: -13.826441764831543
    9. 'uil' → logprob: -14.076441764831543
    10. 'build' → logprob: -14.076441764831543

Token 621: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.588793960167095e-05
    2. 'self' → logprob: -10.500076293945312
    3. '(' → logprob: -10.625076293945312
    4. '(s' → logprob: -11.250076293945312
    5. 'def' → logprob: -13.000076293945312
    6. '(root' → logprob: -13.125076293945312
    7. ' (' → logprob: -13.125076293945312
    8. '   ' → logprob: -13.750076293945312
    9. '(start' → logprob: -13.875076293945312
    10. '(
' → logprob: -14.625076293945312

Token 622: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23459844291210175
    2. '(self' → logprob: -2.234598398208618
    3. 'self' → logprob: -2.359598398208618
    4. ')(' → logprob: -5.359598636627197
    5. ',self' → logprob: -6.984598636627197
    6. 'root' → logprob: -7.359598636627197
    7. 'def' → logprob: -7.609598636627197
    8. ')' → logprob: -8.109598159790039
    9. '_,' → logprob: -9.859598159790039
    10. '):' → logprob: -9.984598159790039

Token 623: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.31921231746673584
    2. 'self' → logprob: -2.1942124366760254
    3. 's' → logprob: -2.5692124366760254
    4. 'start' → logprob: -2.9442124366760254
    5. 'r' → logprob: -3.5692124366760254
    6. ')' → logprob: -5.819212436676025
    7. 'rt' → logprob: -7.694212436676025
    8. ' root' → logprob: -8.694211959838867
    9. 'v' → logprob: -8.944211959838867
    10. '0' → logprob: -9.319211959838867

Token 624: ':' (ID: 25)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2882365584373474
    2. ',' → logprob: -1.7882366180419922
    3. '(self' → logprob: -2.663236618041992
    4. '):
' → logprob: -5.163236618041992
    5. '   ' → logprob: -6.038236618041992
    6. '       ' → logprob: -6.038236618041992
    7. ' self' → logprob: -6.413236618041992
    8. '):' → logprob: -6.913236618041992
    9. ',self' → logprob: -8.538236618041992
    10. '	self' → logprob: -10.913236618041992

Token 625: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.009858318604528904
    2. 'self' → logprob: -4.634858131408691
    3. ' int' → logprob: -9.884858131408691
    4. ')' → logprob: -10.759858131408691
    5. '   ' → logprob: -10.759858131408691
    6. 'def' → logprob: -13.634858131408691
    7. '
' → logprob: -13.759858131408691
    8. ' self' → logprob: -13.759858131408691
    9. '):
' → logprob: -13.759858131408691
    10. '0' → logprob: -14.009858131408691

Token 626: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.049826737493276596
    2. '):' → logprob: -3.0498266220092773
    3. ')' → logprob: -7.299826622009277
    4. '):
' → logprob: -7.549826622009277
    5. '   ' → logprob: -10.674826622009277
    6. ' ):
' → logprob: -12.299826622009277
    7. '):

' → logprob: -12.799826622009277
    8. '       ' → logprob: -13.049826622009277
    9. ')->' → logprob: -13.674826622009277
    10. ',' → logprob: -13.799826622009277

Token 627: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003107943630311638
    2. ' queue' → logprob: -8.625310897827148
    3. '   ' → logprob: -9.500310897827148
    4. 'queue' → logprob: -10.625310897827148
    5. ' visited' → logprob: -11.250310897827148
    6. ' from' → logprob: -12.000310897827148
    7. 'from' → logprob: -12.500310897827148
    8. 'visited' → logprob: -12.750310897827148
    9. '	' → logprob: -13.875310897827148
    10. 'import' → logprob: -14.500310897827148

Token 628: ' que' (ID: 661)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.21019834280014038
    2. 'queue' → logprob: -1.9601984024047852
    3. 'from' → logprob: -3.460198402404785
    4. 'que' (adapté à ' que') → logprob: -4.460198402404785
    5. '       ' → logprob: -5.960198402404785
    6. '   ' → logprob: -6.335198402404785
    7. 'dq' → logprob: -7.335198402404785
    8. 'dist' → logprob: -8.335198402404785
    9. 'visited' → logprob: -8.835198402404785
    10. 'Q' → logprob: -8.835198402404785

Token 629: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.694138765335083
    2. ' =' → logprob: -0.944138765335083
    3. 'ue' → logprob: -2.194138765335083
    4. 'uer' → logprob: -11.569138526916504
    5. 'e' → logprob: -12.194138526916504
    6. 'u' → logprob: -12.819138526916504
    7. '   ' → logprob: -13.194138526916504
    8. 'que' → logprob: -13.194138526916504
    9. '_=' → logprob: -14.444138526916504
    10. ' ue' → logprob: -14.444138526916504

Token 630: ' Queue' (ID: 35581)
  Prédit: 'Queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Queue' → logprob: -0.08174927532672882
    2. 'deque' → logprob: -2.581749200820923
    3. ' deque' → logprob: -6.581749439239502
    4. 'Deque' → logprob: -6.706749439239502
    5. ' Queue' → logprob: -8.331748962402344
    6. 'queue' → logprob: -12.956748962402344
    7. '[' → logprob: -13.331748962402344
    8. 'de' → logprob: -14.206748962402344
    9. '[(' → logprob: -14.581748962402344
    10. 'self' → logprob: -14.706748962402344

Token 631: '([' (ID: 5194)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.13951198756694794
    2. '([' → logprob: -2.139512062072754
    3. '()' → logprob: -4.389512062072754
    4. '([(' → logprob: -9.514512062072754
    5. '()
' → logprob: -11.764512062072754
    6. '()

' → logprob: -12.014512062072754
    7. '[root' → logprob: -12.514512062072754
    8. '();' → logprob: -12.889512062072754
    9. '((' → logprob: -13.514512062072754
    10. '[(' → logprob: -14.014512062072754

Token 632: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.00673005310818553
    2. '(root' → logprob: -5.006730079650879
    3. ' root' → logprob: -11.631730079650879
    4. '[root' → logprob: -12.506730079650879
    5. '])' → logprob: -14.256730079650879
    6. ' (' → logprob: -15.006730079650879
    7. '
' → logprob: -15.756730079650879
    8. ')' → logprob: -15.756730079650879
    9. ']' → logprob: -15.881730079650879
    10. '(' → logprob: -16.006729125976562

Token 633: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07892041653394699
    2. '])
' → logprob: -2.578920364379883
    3. '])
' → logprob: -10.953920364379883
    4. ' ])' → logprob: -11.953920364379883
    5. '],' → logprob: -13.453920364379883
    6. ' ])
' → logprob: -13.828920364379883
    7. '       ' → logprob: -14.203920364379883
    8. ',' → logprob: -14.328920364379883
    9. '])

' → logprob: -14.328920364379883
    10. ']);' → logprob: -14.578920364379883

Token 634: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016404185444116592
    2. 'while' → logprob: -4.266404151916504
    3. ' while' → logprob: -6.141404151916504
    4. '   ' → logprob: -10.016404151916504
    5. '
' → logprob: -10.266404151916504
    6. '	while' → logprob: -13.391404151916504
    7. 'self' → logprob: -13.391404151916504
    8. ',' → logprob: -13.641404151916504
    9. 'for' → logprob: -14.266404151916504
    10. '        
' → logprob: -14.391404151916504

Token 635: ' vis' (ID: 1909)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.13817447423934937
    2. 'self' → logprob: -2.388174533843994
    3. '       ' → logprob: -3.513174533843994
    4. 'visited' → logprob: -5.013174533843994
    5. ' while' → logprob: -7.263174533843994
    6. ' self' → logprob: -10.263174057006836
    7. 'seen' → logprob: -10.888174057006836
    8. 'for' → logprob: -11.138174057006836
    9. 'depth' → logprob: -11.513174057006836
    10. ' visited' → logprob: -11.888174057006836

Token 636: ' =' (ID: 314)
  Prédit: 'ited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -0.002545697148889303
    2. ' =' → logprob: -6.3775458335876465
    3. '=' → logprob: -7.1275458335876465
    4. 'ed' → logprob: -10.877545356750488
    5. '=[' → logprob: -12.127545356750488
    6. '```' → logprob: -12.502545356750488
    7. 'it' → logprob: -12.877545356750488
    8. 'ITED' → logprob: -13.002545356750488
    9. '=[]' → logprob: -13.252545356750488
    10. 'isted' → logprob: -13.627545356750488

Token 637: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003507064888253808
    2. '[N' → logprob: -6.003507137298584
    3. ' [' → logprob: -7.253507137298584
    4. 'set' → logprob: -8.628506660461426
    5. '{' → logprob: -9.253506660461426
    6. '[self' → logprob: -10.003506660461426
    7. '[node' → logprob: -14.003506660461426
    8. '[n' → logprob: -14.628506660461426
    9. ' set' → logprob: -14.878506660461426
    10. '   ' → logprob: -15.628506660461426

Token 638: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -6.146429223008454e-05
    2. '0' → logprob: -9.75006103515625
    3. ' False' → logprob: -12.75006103515625
    4. '(False' → logprob: -16.12506103515625
    5. 'True' → logprob: -16.37506103515625
    6. 'N' → logprob: -18.87506103515625
    7. '   ' → logprob: -19.00006103515625
    8. '=False' → logprob: -20.00006103515625
    9. 'F' → logprob: -20.12506103515625
    10. '[' → logprob: -20.75006103515625

Token 639: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012616889551281929
    2. ']*' → logprob: -4.387617111206055
    3. ' for' → logprob: -9.512617111206055
    4. ']*(' → logprob: -10.637617111206055
    5. ',' → logprob: -12.762617111206055
    6. 'for' → logprob: -13.262617111206055
    7. ']+' → logprob: -13.387617111206055
    8. ' ]' → logprob: -13.512617111206055
    9. '*' → logprob: -14.637617111206055
    10. ' *' → logprob: -14.887617111206055

Token 640: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39863625168800354
    2. ' for' → logprob: -1.6486362218856812
    3. '*' → logprob: -3.0236363410949707
    4. ']*' → logprob: -3.2736363410949707
    5. ')' → logprob: -3.7736363410949707
    6. ' *' → logprob: -4.148636341094971
    7. '[N' → logprob: -5.773636341094971
    8. '+' → logprob: -6.398636341094971
    9. '(N' → logprob: -7.148636341094971
    10. 'for' → logprob: -7.148636341094971

Token 641: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.4034345187828876e-05
    2. ' self' → logprob: -11.25002384185791
    3. '       ' → logprob: -11.75002384185791
    4. '(self' → logprob: -13.25002384185791
    5. '
' → logprob: -14.25002384185791
    6. '           ' → logprob: -14.75002384185791
    7. '   ' → logprob: -15.75002384185791
    8. '[self' → logprob: -17.250024795532227
    9. '         ' → logprob: -18.250024795532227
    10. 'len' → logprob: -18.375024795532227

Token 642: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.06197104603052139
    2. 'N' → logprob: -2.8119709491729736
    3. ' N' → logprob: -14.186970710754395
    4. '       ' → logprob: -14.436970710754395
    5. '	N' → logprob: -14.436970710754395
    6. 'self' → logprob: -14.811970710754395
    7. '   ' → logprob: -14.936970710754395
    8. ',N' → logprob: -14.936970710754395
    9. '<N' → logprob: -15.186970710754395
    10. '.' → logprob: -15.811970710754395

Token 643: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5771920680999756
    2. '
' → logprob: -0.8271920680999756
    3. 'vis' → logprob: -7.202192306518555
    4. ' vis' → logprob: -8.077192306518555
    5. '
' → logprob: -9.452192306518555
    6. '        
' → logprob: -10.702192306518555
    7. '(vis' → logprob: -11.077192306518555
    8. ',' → logprob: -11.327192306518555
    9. ' 
' → logprob: -11.702192306518555
    10. 'visited' → logprob: -11.827192306518555

Token 644: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09504569321870804
    2. '
' → logprob: -2.970045804977417
    3. 'vis' → logprob: -3.470045804977417
    4. ' vis' → logprob: -4.970045566558838
    5. '   ' → logprob: -7.720045566558838
    6. '(vis' → logprob: -7.970045566558838
    7. '	' → logprob: -9.345046043395996
    8. '
' → logprob: -9.470046043395996
    9. '<|end|>' → logprob: -9.845046043395996
    10. ',' → logprob: -9.970046043395996

Token 645: ' while' (ID: 2049)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.00355124706402421
    2. ' vis' → logprob: -5.878551483154297
    3. '       ' → logprob: -7.253551483154297
    4. 'while' (adapté à ' while') → logprob: -10.628551483154297
    5. '
' → logprob: -12.003551483154297
    6. '        
' → logprob: -13.503551483154297
    7. ' while' → logprob: -13.503551483154297
    8. 'visited' → logprob: -13.753551483154297
    9. '   ' → logprob: -13.878551483154297
    10. '(vis' → logprob: -14.003551483154297

Token 646: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.2664979100227356
    2. 'que' → logprob: -1.5164978504180908
    3. ' not' → logprob: -4.39149808883667
    4. 'not' → logprob: -6.51649808883667
    5. ' len' → logprob: -8.016497611999512
    6. 'len' → logprob: -8.641497611999512
    7. '(' → logprob: -10.766497611999512
    8. '   ' → logprob: -11.141497611999512
    9. 'qu' → logprob: -11.266497611999512
    10. ' ' → logprob: -11.766497611999512

Token 647: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18194031715393066
    2. '.dequeue' → logprob: -2.4319403171539307
    3. '.is' → logprob: -3.0569403171539307
    4. '.pop' → logprob: -4.806940078735352
    5. '.enqueue' → logprob: -5.056940078735352
    6. '.size' → logprob: -5.556940078735352
    7. ':
' → logprob: -6.056940078735352
    8. '.front' → logprob: -6.181940078735352
    9. '.' → logprob: -6.556940078735352
    10. '):' → logprob: -6.681940078735352

Token 648: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.055039577186107635
    2. '	       ' → logprob: -3.305039644241333
    3. '	   ' → logprob: -5.180039405822754
    4. '    	   ' → logprob: -5.430039405822754
    5. '		   ' → logprob: -6.180039405822754
    6. '   ' → logprob: -7.180039405822754
    7. '    	' → logprob: -7.430039405822754
    8. '    ' → logprob: -7.930039405822754
    9. '		' → logprob: -8.055039405822754
    10. '       ' → logprob: -8.305039405822754

Token 649: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.4843457341194153
    2. 'u' → logprob: -0.9843457341194153
    3. ' u' → logprob: -5.85934591293335
    4. 'node' → logprob: -5.98434591293335
    5. 'cur' → logprob: -6.10934591293335
    6. ' v' → logprob: -6.23434591293335
    7. '   ' → logprob: -7.60934591293335
    8. ' node' → logprob: -9.609345436096191
    9. 'curr' → logprob: -9.859345436096191
    10. ' cur' → logprob: -11.609345436096191

Token 650: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014248480089008808
    2. '=' → logprob: -4.264248371124268
    3. ',' → logprob: -9.514248847961426
    4. ' ' → logprob: -11.889248847961426
    5. ' ,' → logprob: -13.639248847961426
    6. '    ' → logprob: -13.639248847961426
    7. '   ' → logprob: -15.014248847961426
    8. '	' → logprob: -15.389248847961426
    9. ',v' → logprob: -15.514248847961426
    10. ' =
' → logprob: -15.639248847961426

Token 651: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.07892834395170212
    2. ' que' → logprob: -2.578928232192993
    3. 'deque' → logprob: -10.828927993774414
    4. ' deque' → logprob: -11.953927993774414
    5. ' ' → logprob: -12.828927993774414
    6. 'qu' → logprob: -13.203927993774414
    7. '   ' → logprob: -13.203927993774414
    8. 'ques' → logprob: -13.328927993774414
    9. ' ' → logprob: -13.953927993774414
    10. 'de' → logprob: -14.703927993774414

Token 652: '.dequeue' (ID: 107752)
  Prédit: '.dequeue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dequeue' → logprob: -0.0076353782787919044
    2. '.pop' → logprob: -5.132635593414307
    3. '.p' → logprob: -6.382635593414307
    4. '.' → logprob: -11.757635116577148
    5. ' .' → logprob: -13.507635116577148
    6. 'deque' → logprob: -13.632635116577148
    7. '   ' → logprob: -13.757635116577148
    8. '.front' → logprob: -13.757635116577148
    9. '.enqueue' → logprob: -14.507635116577148
    10. 'de' → logprob: -14.632635116577148

Token 653: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5268309116363525
    2. '()' → logprob: -0.9018309116363525
    3. '           ' → logprob: -6.401830673217773
    4. ')' → logprob: -7.151830673217773
    5. '
' → logprob: -7.651830673217773
    6. '();' → logprob: -8.276830673217773
    7. ')
' → logprob: -8.776830673217773
    8. ';' → logprob: -9.526830673217773
    9. '       ' → logprob: -9.776830673217773
    10. '               ' → logprob: -9.776830673217773

Token 654: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031477732118219137
    2. ' for' → logprob: -6.003147602081299
    3. '       ' → logprob: -8.503148078918457
    4. '
' → logprob: -8.878148078918457
    5. '            
' → logprob: -9.378148078918457
    6. ' vis' → logprob: -9.503148078918457
    7. 'for' → logprob: -9.878148078918457
    8. '        
' → logprob: -10.628148078918457
    9. '   ' → logprob: -10.753148078918457
    10. '	       ' → logprob: -11.253148078918457

Token 655: ' vis' (ID: 1909)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vis' (adapté à ' vis') → logprob: -0.017822343856096268
    2. 'if' → logprob: -4.642822265625
    3. '           ' → logprob: -5.017822265625
    4. 'for' → logprob: -7.017822265625
    5. ' vis' → logprob: -8.767822265625
    6. 'E' → logprob: -8.892822265625
    7. '       ' → logprob: -9.017822265625
    8. '
' → logprob: -10.642822265625
    9. ' if' → logprob: -10.642822265625
    10. '   ' → logprob: -11.142822265625

Token 656: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.0445127372804563e-05
    2. '[' → logprob: -12.12501049041748
    3. 'v' → logprob: -12.37501049041748
    4. ' [' → logprob: -15.00001049041748
    5. '
' → logprob: -16.000009536743164
    6. ' v' → logprob: -16.500009536743164
    7. '	v' → logprob: -16.625009536743164
    8. '

' → logprob: -17.250009536743164
    9. '   ' → logprob: -17.250009536743164
    10. '[val' → logprob: -17.625009536743164

Token 657: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007776036858558655
    2. '=' → logprob: -5.257776260375977
    3. ']=' → logprob: -6.007776260375977
    4. ' =' → logprob: -9.632776260375977
    5. ' ]' → logprob: -11.507776260375977
    6. ')' → logprob: -13.007776260375977
    7. ' ' → logprob: -14.757776260375977
    8. '   ' → logprob: -14.882776260375977
    9. '=True' → logprob: -15.132776260375977
    10. '[' → logprob: -15.382776260375977

Token 658: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005535095697268844
    2. ' =' → logprob: -7.500553607940674
    3. '=True' → logprob: -14.625553131103516
    4. '=
' → logprob: -20.500553131103516
    5. ' ' → logprob: -20.625553131103516
    6. '=False' → logprob: -20.875553131103516
    7. '.=' → logprob: -20.875553131103516
    8. ')' → logprob: -21.000553131103516
    9. '=

' → logprob: -21.125553131103516
    10. '[' → logprob: -21.250553131103516

Token 659: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0004306692280806601
    2. ' True' → logprob: -7.750430583953857
    3. '(True' → logprob: -19.625431060791016
    4. '=True' → logprob: -21.000431060791016
    5. '   ' → logprob: -21.500431060791016
    6. '1' → logprob: -21.750431060791016
    7. '
' → logprob: -22.000431060791016
    8. 'False' → logprob: -22.000431060791016
    9. 'Tr' → logprob: -22.000431060791016
    10. 'true' → logprob: -22.750431060791016

Token 660: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012453491799533367
    2. '
' → logprob: -4.512453556060791
    3. ' for' → logprob: -7.012453556060791
    4. '<|end|>' → logprob: -8.387453079223633
    5. '       ' → logprob: -9.512453079223633
    6. '            
' → logprob: -9.637453079223633
    7. ' 
' → logprob: -10.387453079223633
    8. ',' → logprob: -10.512453079223633
    9. 'for' → logprob: -11.012453079223633
    10. '<|end|>' → logprob: -11.512453079223633

Token 661: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004387983120977879
    2. ' for' → logprob: -5.754387855529785
    3. 'for' → logprob: -6.754387855529785
    4. '       ' → logprob: -10.379387855529785
    5. '   ' → logprob: -11.754387855529785
    6. '	       ' → logprob: -13.879387855529785
    7. '               ' → logprob: -14.254387855529785
    8. '<|end|>' → logprob: -14.504387855529785
    9. '	   ' → logprob: -15.004387855529785
    10. '		' → logprob: -15.004387855529785

Token 662: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00032867121626622975
    2. ' for' → logprob: -8.50032901763916
    3. '           ' → logprob: -9.00032901763916
    4. '       ' → logprob: -14.12532901763916
    5. '   ' → logprob: -14.25032901763916
    6. 'if' → logprob: -15.12532901763916
    7. '
' → logprob: -16.000328063964844
    8. '```' → logprob: -16.750328063964844
    9. '	for' → logprob: -16.875328063964844
    10. '            
' → logprob: -17.625328063964844

Token 663: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000680265249684453
    2. 'idx' → logprob: -7.750680446624756
    3. 'u' → logprob: -9.250679969787598
    4. 'nv' → logprob: -9.625679969787598
    5. 'e' → logprob: -10.875679969787598
    6. '_i' → logprob: -11.250679969787598
    7. 'to' → logprob: -11.625679969787598
    8. '(i' → logprob: -11.625679969787598
    9. 'ind' → logprob: -11.625679969787598
    10. 'nx' → logprob: -12.125679969787598

Token 664: 'nv' (ID: 40002)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005149435251951218
    2. 'idx' → logprob: -6.3801493644714355
    3. 'u' → logprob: -6.8801493644714355
    4. 'to' → logprob: -7.0051493644714355
    5. 'nv' → logprob: -7.0051493644714355
    6. 'w' → logprob: -8.755149841308594
    7. 'ni' → logprob: -8.755149841308594
    8. 'nx' → logprob: -8.880149841308594
    9. 'n' → logprob: -10.255149841308594
    10. 'nid' → logprob: -10.630149841308594

Token 665: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000555416801944375
    2. ' ,' → logprob: -7.750555515289307
    3. ',n' → logprob: -9.500555038452148
    4. ',v' → logprob: -10.625555038452148
    5. '),' → logprob: -11.750555038452148
    6. ',index' → logprob: -12.625555038452148
    7. 'n' → logprob: -13.125555038452148
    8. ',)' → logprob: -13.875555038452148
    9. ',),' → logprob: -14.000555038452148
    10. ')' → logprob: -14.125555038452148

Token 666: ' cost' (ID: 3097)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.15087206661701202
    2. 'nw' → logprob: -2.150871992111206
    3. 'n' → logprob: -4.900872230529785
    4. 'weight' → logprob: -5.275872230529785
    5. 'i' → logprob: -6.150872230529785
    6. 'idx' → logprob: -6.275872230529785
    7. ')' → logprob: -6.775872230529785
    8. 'nc' → logprob: -7.150872230529785
    9. 'c' → logprob: -7.275872230529785
    10. 'wt' → logprob: -7.650872230529785

Token 667: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022010602697264403
    2. ' ,' → logprob: -9.62522029876709
    3. '),' → logprob: -9.75022029876709
    4. 's' → logprob: -10.25022029876709
    5. ',c' → logprob: -10.50022029876709
    6. ')' → logprob: -10.87522029876709
    7. '_,' → logprob: -13.12522029876709
    8. 'w' → logprob: -13.87522029876709
    9. ',index' → logprob: -13.87522029876709
    10. ',
' → logprob: -14.00022029876709

Token 668: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021956947166472673
    2. 'in' → logprob: -6.502195835113525
    3. ' in' → logprob: -7.752195835113525
    4. ' ,' → logprob: -8.877195358276367
    5. ',n' → logprob: -10.502195358276367
    6. ',in' → logprob: -10.752195358276367
    7. ',
' → logprob: -10.877195358276367
    8. ',index' → logprob: -11.002195358276367
    9. ',v' → logprob: -12.127195358276367
    10. ')' → logprob: -12.627195358276367

Token 669: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.00034750174381770194
    2. ' zip' → logprob: -8.000347137451172
    3. '(zip' → logprob: -11.375347137451172
    4. 'enumer' → logprob: -15.625347137451172
    5. '
' → logprob: -15.750347137451172
    6. ' ' → logprob: -15.875347137451172
    7. 'map' → logprob: -16.500347137451172
    8. '.zip' → logprob: -17.500347137451172
    9. '   ' → logprob: -17.500347137451172
    10. '_zip' → logprob: -18.500347137451172

Token 670: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.842555426876061e-06
    2. 'self' → logprob: -12.500004768371582
    3. '(' → logprob: -14.125004768371582
    4. '(
' → logprob: -16.1250057220459
    5. ' (' → logprob: -16.3750057220459
    6. '   ' → logprob: -17.0000057220459
    7. '((' → logprob: -17.6250057220459
    8. '(this' → logprob: -17.7500057220459
    9. ' self' → logprob: -19.2500057220459
    10. '
' → logprob: -19.3750057220459

Token 671: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -9.114600834436715e-05
    2. 'graph' → logprob: -9.750091552734375
    3. 'self' → logprob: -10.500091552734375
    4. ' .' → logprob: -13.500091552734375
    5. '.' → logprob: -13.875091552734375
    6. '(graph' → logprob: -13.875091552734375
    7. '	graph' → logprob: -14.125091552734375
    8. '.self' → logprob: -14.875091552734375
    9. '   ' → logprob: -15.625091552734375
    10. '
' → logprob: -16.000091552734375

Token 672: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.306760805164231e-05
    2. 'v' → logprob: -11.62501335144043
    3. '(v' → logprob: -14.37501335144043
    4. ' [' → logprob: -14.37501335144043
    5. ',v' → logprob: -14.50001335144043
    6. '[' → logprob: -14.87501335144043
    7. '[self' → logprob: -15.00001335144043
    8. '[
' → logprob: -15.25001335144043
    9. 'self' → logprob: -15.37501335144043
    10. '[u' → logprob: -15.62501335144043

Token 673: '],' (ID: 2155)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.18824559450149536
    2. ',' → logprob: -1.8132455348968506
    3. ',v' → logprob: -4.93824577331543
    4. '],' → logprob: -6.81324577331543
    5. ' ,' → logprob: -8.93824577331543
    6. '][' → logprob: -10.93824577331543
    7. 'v' → logprob: -11.43824577331543
    8. '[self' → logprob: -11.93824577331543
    9. '),' → logprob: -12.06324577331543
    10. '],[' → logprob: -12.18824577331543

Token 674: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008358351769857109
    2. ' self' → logprob: -7.12583589553833
    3. '   ' → logprob: -11.375835418701172
    4. '           ' → logprob: -11.625835418701172
    5. '       ' → logprob: -12.750835418701172
    6. '
' → logprob: -13.375835418701172
    7. '               ' → logprob: -13.875835418701172
    8. '  ' → logprob: -13.875835418701172
    9. '          ' → logprob: -14.125835418701172
    10. '    ' → logprob: -14.500835418701172

Token 675: '.weights' (ID: 144733)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.693223774433136
    2. '.weights' → logprob: -0.693223774433136
    3. 'self' → logprob: -9.94322395324707
    4. ' weights' → logprob: -10.69322395324707
    5. '(weights' → logprob: -12.56822395324707
    6. 'Weights' → logprob: -13.56822395324707
    7. '_weights' → logprob: -14.56822395324707
    8. 'import' → logprob: -15.44322395324707
    9. '   ' → logprob: -16.06822395324707
    10. ' .' → logprob: -16.56822395324707

Token 676: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.676981345459353e-06
    2. 'v' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.3750057220459
    4. ' [' → logprob: -18.2500057220459
    5. ')' → logprob: -18.2500057220459
    6. '[
' → logprob: -18.5000057220459
    7. ')[' → logprob: -18.6250057220459
    8. '[' → logprob: -18.8750057220459
    9. '[val' → logprob: -18.8750057220459
    10. '(v' → logprob: -19.2500057220459

Token 677: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03806915506720543
    2. '):
' → logprob: -3.288069248199463
    3. ' ):' → logprob: -11.288068771362305
    4. ')' → logprob: -12.288068771362305
    5. ']):' → logprob: -12.288068771362305
    6. '):
' → logprob: -13.163068771362305
    7. '):

' → logprob: -13.288068771362305
    8. '）：' → logprob: -14.538068771362305
    9. ']:' → logprob: -14.788068771362305
    10. ' ):
' → logprob: -15.538068771362305

Token 678: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11044833809137344
    2. ':' → logprob: -2.7354483604431152
    3. '):
' → logprob: -3.8604483604431152
    4. ':
' → logprob: -4.610448360443115
    5. '           ' → logprob: -5.610448360443115
    6. '):' → logprob: -6.485448360443115
    7. ',' → logprob: -6.610448360443115
    8. '<|end|>' → logprob: -6.860448360443115
    9. '       ' → logprob: -8.360447883605957
    10. ')' → logprob: -8.985447883605957

Token 679: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18509434163570404
    2. '               ' → logprob: -2.4350943565368652
    3. 'if' (adapté à ' if') → logprob: -2.9350943565368652
    4. '                   ' → logprob: -3.8100943565368652
    5. '           ' → logprob: -5.685094356536865
    6. '                ' → logprob: -6.310094356536865
    7. '	           ' → logprob: -8.060093879699707
    8. '	if' → logprob: -9.185093879699707
    9. '            ' → logprob: -9.185093879699707
    10. '   ' → logprob: -9.560093879699707

Token 680: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2823675572872162
    2. ' not' → logprob: -1.4073675870895386
    3. 'vis' → logprob: -7.032367706298828
    4. ' vis' → logprob: -8.782367706298828
    5. '(not' → logprob: -9.657367706298828
    6. 'nv' → logprob: -10.157367706298828
    7. '   ' → logprob: -10.657367706298828
    8. '!' → logprob: -10.907367706298828
    9. '(vis' → logprob: -11.532367706298828
    10. ' nv' → logprob: -11.657367706298828

Token 681: ' vis' (ID: 1909)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.003188286442309618
    2. ' vis' → logprob: -5.753188133239746
    3. '(vis' → logprob: -11.628188133239746
    4. 'visited' → logprob: -13.753188133239746
    5. '
' → logprob: -15.878188133239746
    6. '   ' → logprob: -16.378189086914062
    7. ' ' → logprob: -16.378189086914062
    8. 'v' → logprob: -16.878189086914062
    9. 'visi' → logprob: -17.128189086914062
    10. '.vis' → logprob: -17.503189086914062

Token 682: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.1637164789135568e-05
    2. 'nv' → logprob: -12.625011444091797
    3. '       ' → logprob: -13.375011444091797
    4. '   ' → logprob: -13.500011444091797
    5. '[' → logprob: -13.625011444091797
    6. ' [' → logprob: -14.000011444091797
    7. '```' → logprob: -14.250011444091797
    8. '[N' → logprob: -15.250011444091797
    9. '
' → logprob: -15.500011444091797
    10. '               ' → logprob: -15.625011444091797

Token 683: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -7.107425062713446e-06
    2. '[v' → logprob: -12.375006675720215
    3. '[n' → logprob: -12.875006675720215
    4. '[' → logprob: -16.75000762939453
    5. '
' → logprob: -17.00000762939453
    6. 'nv' → logprob: -18.25000762939453
    7. 'av' → logprob: -18.50000762939453
    8. ']' → logprob: -18.62500762939453
    9. 'в' → logprob: -18.62500762939453
    10. 'V' → logprob: -18.75000762939453

Token 684: ']:
' (ID: 22152)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05166454613208771
    2. ']:' → logprob: -4.051664352416992
    3. ' and' → logprob: -4.176664352416992
    4. ']:
' → logprob: -4.301664352416992
    5. 'and' → logprob: -5.926664352416992
    6. ' ]' → logprob: -6.676664352416992
    7. ']:
' → logprob: -9.926664352416992
    8. ']:

' → logprob: -10.676664352416992
    9. ']:


' → logprob: -11.301664352416992
    10. ':' → logprob: -11.551664352416992

Token 685: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6525453925132751
    2. ':
' → logprob: -1.02754545211792
    3. ':' → logprob: -2.15254545211792
    4. '):
' → logprob: -5.90254545211792
    5. '               ' → logprob: -6.77754545211792
    6. '):' → logprob: -8.027544975280762
    7. '           ' → logprob: -8.652544975280762
    8. '                       ' → logprob: -8.652544975280762
    9. ' and' → logprob: -8.902544975280762
    10. ',' → logprob: -9.402544975280762

Token 686: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.013123643584549427
    2. '                   ' → logprob: -4.638123512268066
    3. ' self' → logprob: -6.263123512268066
    4. '                       ' → logprob: -6.638123512268066
    5. '               ' → logprob: -10.138123512268066
    6. '   ' → logprob: -10.138123512268066
    7. '       ' → logprob: -10.263123512268066
    8. '           ' → logprob: -10.513123512268066
    9. '                     ' → logprob: -13.888123512268066
    10. '	self' → logprob: -13.888123512268066

Token 687: '.depth' (ID: 89791)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.350008100271225
    2. '.depth' → logprob: -1.2250081300735474
    3. 'parent' → logprob: -7.100008010864258
    4. '.' → logprob: -7.975008010864258
    5. 'depth' → logprob: -8.100008010864258
    6. ' .' → logprob: -10.600008010864258
    7. '   ' → logprob: -11.100008010864258
    8. '.cost' → logprob: -11.600008010864258
    9. '.parents' → logprob: -11.600008010864258
    10. '.queue' → logprob: -12.600008010864258

Token 688: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.093505099765025e-05
    2. '
' → logprob: -11.625020980834961
    3. ' [' → logprob: -12.250020980834961
    4. '[
' → logprob: -13.625020980834961
    5. 'nv' → logprob: -13.875020980834961
    6. '[' → logprob: -13.875020980834961
    7. '   ' → logprob: -13.875020980834961
    8. '=' → logprob: -14.125020980834961
    9. '[v' → logprob: -14.625020980834961
    10. '

' → logprob: -14.750020980834961

Token 689: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00013607845176011324
    2. '[v' → logprob: -10.000136375427246
    3. 'nv' → logprob: -10.000136375427246
    4. '[n' → logprob: -10.750136375427246
    5. ']' → logprob: -11.250136375427246
    6. ' nv' → logprob: -12.125136375427246
    7. '                   ' → logprob: -13.750136375427246
    8. 'vq' → logprob: -14.750136375427246
    9. '_nv' → logprob: -14.875136375427246
    10. 'f' → logprob: -15.000136375427246

Token 690: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5560182929039001
    2. '=' → logprob: -1.181018352508545
    3. ']' → logprob: -2.181018352508545
    4. ']=' → logprob: -5.056018352508545
    5. ' ]' → logprob: -9.056017875671387
    6. '=v' → logprob: -9.556017875671387
    7. ')' → logprob: -10.806017875671387
    8. '   ' → logprob: -11.431017875671387
    9. '    ' → logprob: -11.931017875671387
    10. ',' → logprob: -12.181017875671387

Token 691: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868730664253235
    2. ' =' → logprob: -1.1368730068206787
    3. '=self' → logprob: -13.886873245239258
    4. '=v' → logprob: -15.136873245239258
    5. '   ' → logprob: -15.386873245239258
    6. '=
' → logprob: -16.761873245239258
    7. '＝' → logprob: -16.761873245239258
    8. ' ' → logprob: -16.761873245239258
    9. '=s' → logprob: -16.886873245239258
    10. ',' → logprob: -17.136873245239258

Token 692: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007201764383353293
    2. ' self' → logprob: -7.250720024108887
    3. '                   ' → logprob: -11.625720024108887
    4. '                       ' → logprob: -14.625720024108887
    5. '   ' → logprob: -15.000720024108887
    6. '	self' → logprob: -15.000720024108887
    7. '[self' → logprob: -15.500720024108887
    8. '(self' → logprob: -16.375720977783203
    9. '=self' → logprob: -17.375720977783203
    10. '               ' → logprob: -18.125720977783203

Token 693: '.depth' (ID: 89791)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.003450041403993964
    2. '.depth' → logprob: -5.7534499168396
    3. ' depth' → logprob: -8.503450393676758
    4. 'v' → logprob: -9.628450393676758
    5. 'self' → logprob: -13.503450393676758
    6. '_depth' → logprob: -14.003450393676758
    7. 'd' → logprob: -15.128450393676758
    8. '   ' → logprob: -15.253450393676758
    9. '(depth' → logprob: -15.253450393676758
    10. '.v' → logprob: -15.628450393676758

Token 694: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.014169970527291298
    2. 'v' → logprob: -4.264170169830322
    3. ' v' → logprob: -12.389169692993164
    4. '	v' → logprob: -13.139169692993164
    5. '[' → logprob: -15.264169692993164
    6. '                   ' → logprob: -17.014169692993164
    7. '<v' → logprob: -17.514169692993164
    8. '   ' → logprob: -18.139169692993164
    9. '(v' → logprob: -19.014169692993164
    10. ')v' → logprob: -19.139169692993164

Token 695: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17657436430454254
    2. ' +' → logprob: -2.051574468612671
    3. ']' → logprob: -3.926574468612671
    4. ']+' → logprob: -4.301574230194092
    5. ')+' → logprob: -10.17657470703125
    6. ')' → logprob: -11.05157470703125
    7. '   ' → logprob: -12.30157470703125
    8. '+]' → logprob: -12.42657470703125
    9. '}+' → logprob: -12.67657470703125
    10. ' ]' → logprob: -13.80157470703125

Token 696: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3132629990577698
    2. ' +' → logprob: -1.313262939453125
    3. '＋' → logprob: -15.063262939453125
    4. '+
' → logprob: -15.313262939453125
    5. '
' → logprob: -15.688262939453125
    6. ')+' → logprob: -16.688262939453125
    7. ' +
' → logprob: -16.813262939453125
    8. ' ' → logprob: -16.813262939453125
    9. ' ' → logprob: -16.938262939453125
    10. '+self' → logprob: -17.063262939453125

Token 697: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014060820103622973
    2. ' ' → logprob: -8.875140190124512
    3. '                   ' → logprob: -14.250140190124512
    4. '   ' → logprob: -15.750140190124512
    5. '
' → logprob: -18.375141143798828
    6. '               ' → logprob: -18.500141143798828
    7. '                       ' → logprob: -19.000141143798828
    8. '           ' → logprob: -19.250141143798828
    9. '```' → logprob: -20.250141143798828
    10. '       ' → logprob: -20.375141143798828

Token 698: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '
' → logprob: -16.875001907348633
    4. '   ' → logprob: -18.125001907348633
    5. 'cost' → logprob: -18.250001907348633
    6. '                   ' → logprob: -19.375001907348633
    7. '```' → logprob: -20.000001907348633
    8. '               ' → logprob: -20.875001907348633
    9. '           ' → logprob: -21.000001907348633
    10. '                       ' → logprob: -21.250001907348633

Token 699: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -9.162282367469743e-05
    2. '                    
' → logprob: -10.750091552734375
    3. '           ' → logprob: -11.000091552734375
    4. '
' → logprob: -11.250091552734375
    5. '               ' → logprob: -11.250091552734375
    6. '                    ' → logprob: -11.625091552734375
    7. '                       ' → logprob: -12.500091552734375
    8. '                  ' → logprob: -12.875091552734375
    9. '       ' → logprob: -13.000091552734375
    10. ',' → logprob: -13.000091552734375

Token 700: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00048083928413689137
    2. '           ' → logprob: -8.500480651855469
    3. '               ' → logprob: -9.375480651855469
    4. 'self' → logprob: -9.750480651855469
    5. '                    ' → logprob: -10.375480651855469
    6. ',' → logprob: -10.750480651855469
    7. '       ' → logprob: -10.750480651855469
    8. '```' → logprob: -11.000480651855469
    9. '                       ' → logprob: -11.125480651855469
    10. '<|end|>' → logprob: -11.875480651855469

Token 701: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -5.347765181795694e-05
    2. '                   ' → logprob: -9.875053405761719
    3. ' self' → logprob: -13.500053405761719
    4. '                       ' → logprob: -15.500053405761719
    5. '   ' → logprob: -16.12505340576172
    6. '           ' → logprob: -16.25005340576172
    7. '               ' → logprob: -16.75005340576172
    8. '       ' → logprob: -17.12505340576172
    9. '```' → logprob: -17.37505340576172
    10. '                           ' → logprob: -18.25005340576172

Token 702: '.cost' (ID: 80655)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.001335359294898808
    2. '.cost' → logprob: -6.626335144042969
    3. ' costs' → logprob: -11.876335144042969
    4. ' cost' → logprob: -14.126335144042969
    5. '   ' → logprob: -14.876335144042969
    6. '_cost' → logprob: -15.001335144042969
    7. '-cost' → logprob: -15.751335144042969
    8. '(cost' → logprob: -15.876335144042969
    9. 'E' → logprob: -16.25133514404297
    10. '```' → logprob: -16.37633514404297

Token 703: 's' (ID: 82)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.988221684878226e-06
    2. '[' → logprob: -12.625006675720215
    3. 's' → logprob: -13.500006675720215
    4. ' [' → logprob: -14.375006675720215
    5. '=' → logprob: -15.125006675720215
    6. '[np' → logprob: -15.250006675720215
    7. '[v' → logprob: -15.375006675720215
    8. 'n' → logprob: -15.375006675720215
    9. '(n' → logprob: -16.00000762939453
    10. 'cost' → logprob: -16.25000762939453

Token 704: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.25000286102295
    3. ' [' → logprob: -15.62500286102295
    4. '[np' → logprob: -16.125001907348633
    5. '=' → logprob: -16.875001907348633
    6. '```' → logprob: -17.375001907348633
    7. '[v' → logprob: -17.625001907348633
    8. '[
' → logprob: -17.625001907348633
    9. '   ' → logprob: -17.625001907348633
    10. '
' → logprob: -17.875001907348633

Token 705: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1026214212179184
    2. '[n' → logprob: -2.47762131690979
    3. '[v' → logprob: -4.352621555328369
    4. 'nv' → logprob: -7.602621555328369
    5. ']' → logprob: -9.227621078491211
    6. 'n' → logprob: -9.477621078491211
    7. ' nv' → logprob: -11.852621078491211
    8. '[' → logprob: -12.102621078491211
    9. '[c' → logprob: -12.352621078491211
    10. '][' → logprob: -12.352621078491211

Token 706: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519347369670868
    2. '=' → logprob: -1.5019347667694092
    3. ']' → logprob: -12.626935005187988
    4. ')' → logprob: -13.376935005187988
    5. ' ' → logprob: -15.251935005187988
    6. ' +=' → logprob: -15.751935005187988
    7. '=c' → logprob: -16.626934051513672
    8. ']=' → logprob: -16.876934051513672
    9. '+=' → logprob: -17.126934051513672
    10. ' )' → logprob: -17.251934051513672

Token 707: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0380416102707386
    2. ' =' → logprob: -3.288041591644287
    3. '+=' → logprob: -16.163042068481445
    4. ' +=' → logprob: -17.538042068481445
    5. '＝' → logprob: -18.288042068481445
    6. '=
' → logprob: -18.413042068481445
    7. ')' → logprob: -18.538042068481445
    8. '   ' → logprob: -18.663042068481445
    9. '.=' → logprob: -18.663042068481445
    10. '=c' → logprob: -18.663042068481445

Token 708: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004265369847416878
    2. ' self' → logprob: -5.504265308380127
    3. '                   ' → logprob: -8.629265785217285
    4. '   ' → logprob: -12.879265785217285
    5. '(self' → logprob: -12.879265785217285
    6. '[self' → logprob: -13.754265785217285
    7. 'cost' → logprob: -14.504265785217285
    8. '                       ' → logprob: -14.754265785217285
    9. '	self' → logprob: -15.004265785217285
    10. '=self' → logprob: -15.254265785217285

Token 709: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -0.160291850566864
    2. 'cost' → logprob: -1.9102919101715088
    3. ' costs' → logprob: -10.28529167175293
    4. '成本' → logprob: -11.66029167175293
    5. 'Costs' → logprob: -11.66029167175293
    6. ' cost' → logprob: -11.91029167175293
    7. '```' → logprob: -13.41029167175293
    8. '.' → logprob: -13.78529167175293
    9. '_cost' → logprob: -13.91029167175293
    10. 'Cost' → logprob: -13.91029167175293

Token 710: 's' (ID: 82)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00318353995680809
    2. 'cost' → logprob: -6.503183364868164
    3. 's' → logprob: -7.628183364868164
    4. '[c' → logprob: -7.628183364868164
    5. '+' → logprob: -7.753183364868164
    6. '[s' → logprob: -9.128183364868164
    7. '[' → logprob: -9.253183364868164
    8. ' +' → logprob: -10.503183364868164
    9. '[u' → logprob: -11.628183364868164
    10. ' cost' → logprob: -12.128183364868164

Token 711: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.750436007976532e-05
    2. 'v' → logprob: -10.50003719329834
    3. '[n' → logprob: -11.62503719329834
    4. '[' → logprob: -13.87503719329834
    5. ' v' → logprob: -18.000038146972656
    6. '[
' → logprob: -18.875038146972656
    7. 'nv' → logprob: -19.250038146972656
    8. ' [' → logprob: -19.875038146972656
    9. '(v' → logprob: -20.125038146972656
    10. '[c' → logprob: -20.250038146972656

Token 712: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07890928536653519
    2. ' +' → logprob: -2.578909397125244
    3. ']' → logprob: -11.703908920288086
    4. ']+' → logprob: -12.453908920288086
    5. '+c' → logprob: -12.828908920288086
    6. '+n' → logprob: -13.828908920288086
    7. '[' → logprob: -14.078908920288086
    8. ')' → logprob: -14.203908920288086
    9. '+[' → logprob: -14.703908920288086
    10. '
' → logprob: -15.078908920288086

Token 713: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006716079078614712
    2. ' +' → logprob: -5.006716251373291
    3. '+c' → logprob: -14.256715774536133
    4. '+
' → logprob: -16.506715774536133
    5. '+k' → logprob: -17.506715774536133
    6. '＋' → logprob: -17.506715774536133
    7. '+[' → logprob: -17.756715774536133
    8. '[' → logprob: -18.131715774536133
    9. '+self' → logprob: -18.631715774536133
    10. '
' → logprob: -18.631715774536133

Token 714: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0004306692280806601
    2. ' cost' → logprob: -7.750430583953857
    3. '(cost' → logprob: -17.500431060791016
    4. 'c' → logprob: -19.500431060791016
    5. '-cost' → logprob: -20.625431060791016
    6. 'abs' → logprob: -20.625431060791016
    7. 'Cost' → logprob: -21.000431060791016
    8. '_cost' → logprob: -21.250431060791016
    9. ' ' → logprob: -21.375431060791016
    10. '   ' → logprob: -21.750431060791016

Token 715: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -4.3226136767771095e-05
    2. '           ' → logprob: -11.125042915344238
    3. '               ' → logprob: -11.125042915344238
    4. '                  ' → logprob: -12.375042915344238
    5. ',' → logprob: -12.750042915344238
    6. '
' → logprob: -13.125042915344238
    7. '                    
' → logprob: -13.750042915344238
    8. '       ' → logprob: -14.000042915344238
    9. '<|end|>' → logprob: -14.625042915344238
    10. '                       ' → logprob: -14.625042915344238

Token 716: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.5332478142227046e-05
    2. '                  ' → logprob: -12.500015258789062
    3. '           ' → logprob: -12.750015258789062
    4. '```' → logprob: -12.875015258789062
    5. '               ' → logprob: -13.250015258789062
    6. '                    
' → logprob: -13.375015258789062
    7. '                    ' → logprob: -14.250015258789062
    8. ',' → logprob: -14.500015258789062
    9. '                       ' → logprob: -14.500015258789062
    10. '				' → logprob: -14.750015258789062

Token 717: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004130641929805279
    2. '                   ' → logprob: -5.504130840301514
    3. 'que' → logprob: -10.254130363464355
    4. ' self' → logprob: -11.754130363464355
    5. '           ' → logprob: -12.754130363464355
    6. '               ' → logprob: -13.629130363464355
    7. 'queue' → logprob: -13.629130363464355
    8. '       ' → logprob: -13.629130363464355
    9. '```' → logprob: -14.254130363464355
    10. '   ' → logprob: -14.379130363464355

Token 718: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.31326824426651
    2. 'parent' → logprob: -1.3132681846618652
    3. '.enqueue' → logprob: -12.813268661499023
    4. '.' → logprob: -13.313268661499023
    5. ' parent' → logprob: -13.938268661499023
    6. '[parent' → logprob: -14.563268661499023
    7. ',parent' → logprob: -15.313268661499023
    8. '	parent' → logprob: -15.313268661499023
    9. 'enqueue' → logprob: -16.188268661499023
    10. '.queue' → logprob: -17.063268661499023

Token 719: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.014185951091349125
    2. '[v' → logprob: -4.264185905456543
    3. '[' → logprob: -10.764185905456543
    4. '```' → logprob: -14.014185905456543
    5. '[][' → logprob: -16.01418685913086
    6. 'v' → logprob: -16.13918685913086
    7. 'n' → logprob: -16.88918685913086
    8. '[node' → logprob: -17.01418685913086
    9. '[
' → logprob: -17.26418685913086
    10. '[now' → logprob: -17.88918685913086

Token 720: 'v' (ID: 85)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.4457201361656189
    2. 'v' → logprob: -1.0707201957702637
    3. '][' → logprob: -4.945720195770264
    4. ']' → logprob: -4.945720195770264
    5. 'nv' → logprob: -7.570720195770264
    6. '[n' → logprob: -7.570720195770264
    7. '[' → logprob: -7.945720195770264
    8. '       ' → logprob: -8.445719718933105
    9. '        ' → logprob: -8.445719718933105
    10. 'w' → logprob: -8.820719718933105

Token 721: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006426189211197197
    2. '][' → logprob: -7.375642776489258
    3. ')[' → logprob: -11.250642776489258
    4. ' [' → logprob: -14.500642776489258
    5. '[v' → logprob: -14.625642776489258
    6. '0' → logprob: -14.625642776489258
    7. '>[' → logprob: -14.750642776489258
    8. ']' → logprob: -15.250642776489258
    9. '[
' → logprob: -15.250642776489258
    10. '}[' → logprob: -15.250642776489258

Token 722: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -16.87500762939453
    4. '۰' → logprob: -18.68750762939453
    5. '[' → logprob: -19.18750762939453
    6. '  ' → logprob: -19.31250762939453
    7. 'v' → logprob: -19.81250762939453
    8. '０' → logprob: -19.87500762939453
    9. '00' → logprob: -20.12500762939453
    10. '1' → logprob: -20.18750762939453

Token 723: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2017393857240677
    2. ' =' → logprob: -1.7017394304275513
    3. ']' → logprob: -8.576739311218262
    4. ')' → logprob: -9.701739311218262
    5. '=v' → logprob: -9.951739311218262
    6. ' )' → logprob: -11.326739311218262
    7. ' ]' → logprob: -11.451739311218262
    8. ']=' → logprob: -12.326739311218262
    9. ' =)' → logprob: -14.201739311218262
    10. ')=' → logprob: -14.201739311218262

Token 724: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07900381088256836
    2. ' =' → logprob: -2.5790038108825684
    3. '=v' → logprob: -9.079004287719727
    4. 'v' → logprob: -17.454004287719727
    5. '＝' → logprob: -18.829004287719727
    6. ',' → logprob: -19.079004287719727
    7. ' v' → logprob: -19.579004287719727
    8. '=
' → logprob: -19.704004287719727
    9. '=n' → logprob: -19.954004287719727
    10. '=s' → logprob: -19.954004287719727

Token 725: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.339278580620885e-06
    2. ' v' → logprob: -13.000001907348633
    3. '	v' → logprob: -18.375001907348633
    4. 'vq' → logprob: -20.500001907348633
    5. ')v' → logprob: -21.000001907348633
    6. '   ' → logprob: -21.500001907348633
    7. '[v' → logprob: -21.625001907348633
    8. '
' → logprob: -21.625001907348633
    9. '$v' → logprob: -21.625001907348633
    10. 'vj' → logprob: -21.875001907348633

Token 726: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.18834188580513
    2. '<|end|>' → logprob: -2.1883418560028076
    3. '               ' → logprob: -4.188342094421387
    4. '
' → logprob: -4.313342094421387
    5. '                    
' → logprob: -4.438342094421387
    6. '           ' → logprob: -5.313342094421387
    7. ' 
' → logprob: -5.563342094421387
    8. '\n' → logprob: -6.688342094421387
    9. '       ' → logprob: -6.813342094421387
    10. '                       ' → logprob: -6.938342094421387

Token 727: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0019508942496031523
    2. '                    ' → logprob: -6.876950740814209
    3. '                    
' → logprob: -8.001951217651367
    4. '               ' → logprob: -8.751951217651367
    5. '                       ' → logprob: -9.126951217651367
    6. '           ' → logprob: -9.251951217651367
    7. '                  ' → logprob: -9.251951217651367
    8. '       ' → logprob: -10.501951217651367
    9. '                ' → logprob: -11.001951217651367
    10. '				' → logprob: -11.376951217651367

Token 728: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' (adapté à ' que') → logprob: -0.006739881355315447
    2. '                   ' → logprob: -5.006740093231201
    3. '               ' → logprob: -11.631739616394043
    4. '           ' → logprob: -12.131739616394043
    5. ' que' → logprob: -12.506739616394043
    6. '                       ' → logprob: -12.881739616394043
    7. '                  ' → logprob: -13.381739616394043
    8. 'queue' → logprob: -14.631739616394043
    9. 'ques' → logprob: -14.756739616394043
    10. '                    ' → logprob: -14.756739616394043

Token 729: '.enqueue' (ID: 91071)
  Prédit: '.enqueue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.enqueue' → logprob: -1.2233183042553719e-05
    2. '.append' → logprob: -11.625012397766113
    3. '.' → logprob: -13.250012397766113
    4. '.Enqueue' → logprob: -14.750012397766113
    5. '.en' → logprob: -15.250012397766113
    6. '.dequeue' → logprob: -15.375012397766113
    7. 'enqueue' → logprob: -15.500012397766113
    8. '.put' → logprob: -16.500011444091797
    9. '.insert' → logprob: -16.500011444091797
    10. ' .' → logprob: -16.500011444091797

Token 730: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -13.250004768371582
    3. 'nv' → logprob: -13.250004768371582
    4. ' (' → logprob: -15.250004768371582
    5. ' nv' → logprob: -15.750004768371582
    6. '(
' → logprob: -15.750004768371582
    7. 'n' → logprob: -16.125003814697266
    8. '(nx' → logprob: -16.625003814697266
    9. '_nv' → logprob: -17.375003814697266
    10. '(nn' → logprob: -18.125003814697266

Token 731: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -4.251091377227567e-05
    2. '(n' → logprob: -10.375042915344238
    3. 'nv' → logprob: -12.250042915344238
    4. ' nv' → logprob: -12.625042915344238
    5. 'w' → logprob: -13.750042915344238
    6. '(v' → logprob: -14.125042915344238
    7. '(' → logprob: -14.750042915344238
    8. '```' → logprob: -15.500042915344238
    9. 'n' → logprob: -16.250041961669922
    10. 'av' → logprob: -16.375041961669922

Token 732: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002730098320171237
    2. '<|end|>' → logprob: -6.002729892730713
    3. ' )' → logprob: -9.127730369567871
    4. ')
' → logprob: -9.502730369567871
    5. '<|end|>' → logprob: -10.377730369567871
    6. '())' → logprob: -10.627730369567871
    7. '                   ' → logprob: -12.252730369567871
    8. ')return' → logprob: -13.377730369567871
    9. '')' → logprob: -14.002730369567871
    10. '       ' → logprob: -14.127730369567871

Token 733: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00446774298325181
    2. '                   ' → logprob: -6.254467964172363
    3. '        ' → logprob: -7.004467964172363
    4. '           ' → logprob: -8.254467964172363
    5. ')' → logprob: -8.504467964172363
    6. '<|end|>' → logprob: -8.504467964172363
    7. '```' → logprob: -8.504467964172363
    8. '   ' → logprob: -8.629467964172363
    9. '
' → logprob: -8.879467964172363
    10. '               ' → logprob: -9.379467964172363

Token 734: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21789656579494476
    2. '   ' → logprob: -2.2178964614868164
    3. 'def' (adapté à ' def') → logprob: -2.4678964614868164
    4. ' def' → logprob: -7.842896461486816
    5. 'for' → logprob: -7.967896461486816
    6. ')' → logprob: -8.217896461486816
    7. 'self' → logprob: -8.342896461486816
    8. ' for' → logprob: -8.342896461486816
    9. '<|end|>' → logprob: -8.342896461486816
    10. '	' → logprob: -9.217896461486816

Token 735: ' init' (ID: 6327)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.663613498210907
    2. ' build' → logprob: -0.788613498210907
    3. '_build' → logprob: -3.5386135578155518
    4. 'prepare' → logprob: -7.788613319396973
    5. 'init' → logprob: -8.163613319396973
    6. '_init' → logprob: -8.788613319396973
    7. ' preprocess' → logprob: -9.163613319396973
    8. ' prepare' → logprob: -9.538613319396973
    9. 'pre' → logprob: -9.788613319396973
    10. ' init' → logprob: -10.163613319396973

Token 736: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00018029935017693788
    2. '(root' → logprob: -9.2501802444458
    3. '(' → logprob: -9.5001802444458
    4. ' (' → logprob: -11.8751802444458
    5. '(s' → logprob: -14.1251802444458
    6. '(sel' → logprob: -15.0001802444458
    7. '_root' → logprob: -15.3751802444458
    8. '()' → logprob: -15.6251802444458
    9. '(se' → logprob: -15.7501802444458
    10. '(
' → logprob: -15.8751802444458

Token 737: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1279553291387856e-05
    2. 'self' → logprob: -12.125011444091797
    3. ' ,' → logprob: -12.750011444091797
    4. '):' → logprob: -13.125011444091797
    5. ',self' → logprob: -14.750011444091797
    6. ',
' → logprob: -15.500011444091797
    7. '(self' → logprob: -16.000011444091797
    8. ',start' → logprob: -16.500011444091797
    9. '):
' → logprob: -16.875011444091797
    10. '   ' → logprob: -17.625011444091797

Token 738: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.004398309625685215
    2. ' root' → logprob: -5.504398345947266
    3. 'self' → logprob: -8.254398345947266
    4. 'r' → logprob: -10.129398345947266
    5. ' ' → logprob: -12.254398345947266
    6. '   ' → logprob: -12.379398345947266
    7. 'roots' → logprob: -12.379398345947266
    8. '	root' → logprob: -13.379398345947266
    9. '0' → logprob: -13.629398345947266
    10. ' self' → logprob: -13.879398345947266

Token 739: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6943009495735168
    2. ':' → logprob: -0.9443009495735168
    3. '):' → logprob: -2.194300889968872
    4. ')' → logprob: -9.444300651550293
    5. '):
' → logprob: -10.194300651550293
    6. ':int' → logprob: -10.319300651550293
    7. ' ):' → logprob: -10.944300651550293
    8. ' =' → logprob: -11.694300651550293
    9. ' :' → logprob: -12.694300651550293
    10. '=None' → logprob: -12.819300651550293

Token 740: ' int' (ID: 677)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.035644013434648514
    2. 'int' → logprob: -3.410644054412842
    3. 'self' → logprob: -6.785644054412842
    4. ' int' → logprob: -7.660644054412842
    5. ' ' → logprob: -8.410643577575684
    6. '=' → logprob: -9.410643577575684
    7. ')' → logprob: -10.285643577575684
    8. ':' → logprob: -11.035643577575684
    9. ' self' → logprob: -11.035643577575684
    10. ':int' → logprob: -11.660643577575684

Token 741: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003740694955922663
    2. '):
' → logprob: -8.375373840332031
    3. ')' → logprob: -8.875373840332031
    4. '   ' → logprob: -13.875373840332031
    5. ' ):' → logprob: -13.875373840332031
    6. '):
' → logprob: -14.000373840332031
    7. '=' → logprob: -14.750373840332031
    8. ':' → logprob: -15.000373840332031
    9. ')->' → logprob: -16.00037384033203
    10. ',' → logprob: -17.12537384033203

Token 742: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7968066206085496e-05
    2. '=' → logprob: -10.875027656555176
    3. ' ' → logprob: -11.875027656555176
    4. '   ' → logprob: -13.750027656555176
    5. ')' → logprob: -14.375027656555176
    6. '-' → logprob: -16.125028610229492
    7. 'None' → logprob: -16.875028610229492
    8. '1' → logprob: -17.250028610229492
    9. '):
' → logprob: -17.375028610229492
    10. ',' → logprob: -17.375028610229492

Token 743: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006807856727391481
    2. '):
' → logprob: -5.006807804107666
    3. ')' → logprob: -9.381808280944824
    4. '):
' → logprob: -12.506808280944824
    5. '   ' → logprob: -12.631808280944824
    6. ' ):' → logprob: -14.006808280944824
    7. '       ' → logprob: -15.756808280944824
    8. ':' → logprob: -16.506807327270508
    9. ')：' → logprob: -16.631807327270508
    10. ')->' → logprob: -17.631807327270508

Token 744: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033999193692579865
    2. 'self' → logprob: -8.500340461730957
    3. ' self' → logprob: -9.250340461730957
    4. '
' → logprob: -10.750340461730957
    5. '   ' → logprob: -11.500340461730957
    6. ')' → logprob: -13.125340461730957
    7. '```' → logprob: -13.250340461730957
    8. ',' → logprob: -13.625340461730957
    9. '	' → logprob: -13.875340461730957
    10. '	self' → logprob: -14.250340461730957

Token 745: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0011063982965424657
    2. ' self' → logprob: -7.501106262207031
    3. '       ' → logprob: -7.501106262207031
    4. '	self' → logprob: -14.751106262207031
    5. '   ' → logprob: -15.126106262207031
    6. '(self' → logprob: -17.00110626220703
    7. '[self' → logprob: -18.25110626220703
    8. 'for' → logprob: -18.50110626220703
    9. '```' → logprob: -18.62610626220703
    10. '#' → logprob: -18.87610626220703

Token 746: '.root' (ID: 25375)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '._' → logprob: -2.1008713702030946e-06
    2. '_b' → logprob: -13.875001907348633
    3. '.' → logprob: -14.750001907348633
    4. '.b' → logprob: -15.250001907348633
    5. ' .' → logprob: -15.750001907348633
    6. ')._' → logprob: -16.375001907348633
    7. '.depth' → logprob: -16.875001907348633
    8. ']._' → logprob: -16.875001907348633
    9. '   ' → logprob: -17.000001907348633
    10. '_depth' → logprob: -18.125001907348633

Token 747: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15802255272865295
    2. '=' → logprob: -2.78302264213562
    3. ')' → logprob: -3.15802264213562
    4. '=_' → logprob: -3.90802264213562
    5. '._' → logprob: -4.408022403717041
    6. '_b' → logprob: -5.783022403717041
    7. ')_' → logprob: -6.533022403717041
    8. '   ' → logprob: -7.033022403717041
    9. ' )' → logprob: -7.408022403717041
    10. ' _' → logprob: -7.908022403717041

Token 748: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.0019287518225610256
    2. ' root' → logprob: -6.251928806304932
    3. '0' → logprob: -16.251928329467773
    4. '	root' → logprob: -17.376928329467773
    5. '(root' → logprob: -17.751928329467773
    6. '[root' → logprob: -18.876928329467773
    7. 'r' → logprob: -19.501928329467773
    8. '
' → logprob: -19.876928329467773
    9. '   ' → logprob: -20.376928329467773
    10. '=root' → logprob: -20.626928329467773

Token 749: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020829280838370323
    2. '
' → logprob: -6.627082824707031
    3. 'self' → logprob: -7.377082824707031
    4. ' self' → logprob: -9.877082824707031
    5. ',' → logprob: -10.252082824707031
    6. '   ' → logprob: -10.377082824707031
    7. '	' → logprob: -13.127082824707031
    8. '	self' → logprob: -13.377082824707031
    9. '        
' → logprob: -13.752082824707031
    10. '#' → logprob: -13.752082824707031

Token 750: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019043108448386192
    2. '
' → logprob: -4.39404296875
    3. 'self' → logprob: -5.26904296875
    4. ' self' → logprob: -7.01904296875
    5. '   ' → logprob: -8.51904296875
    6. '```' → logprob: -9.26904296875
    7. ',' → logprob: -9.89404296875
    8. '#' → logprob: -10.01904296875
    9. '	' → logprob: -11.26904296875
    10. '	self' → logprob: -11.39404296875

Token 751: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.0325924449716695e-05
    2. '       ' → logprob: -11.75001049041748
    3. 'for' → logprob: -13.75001049041748
    4. ' self' → logprob: -14.00001049041748
    5. 'vis' → logprob: -15.62501049041748
    6. '   ' → logprob: -15.87501049041748
    7. '
' → logprob: -16.875009536743164
    8. '	self' → logprob: -17.500009536743164
    9. 'que' → logprob: -18.250009536743164
    10. '        
' → logprob: -18.500009536743164

Token 752: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00031139038037508726
    2. '_b' → logprob: -8.375311851501465
    3. '.depth' → logprob: -10.125311851501465
    4. '_depth' → logprob: -10.750311851501465
    5. '.parent' → logprob: -11.625311851501465
    6. '.b' → logprob: -12.875311851501465
    7. '_parent' → logprob: -13.000311851501465
    8. 'depth' → logprob: -13.000311851501465
    9. '.' → logprob: -14.250311851501465
    10. ' .' → logprob: -14.750311851501465

Token 753: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.8624639324116288e-06
    2. '_b' → logprob: -13.250001907348633
    3. ' bfs' → logprob: -16.875001907348633
    4. 'dfs' → logprob: -17.750001907348633
    5. 'init' → logprob: -18.750001907348633
    6. '```' → logprob: -18.750001907348633
    7. 'bf' → logprob: -19.500001907348633
    8. '   ' → logprob: -20.000001907348633
    9. '_init' → logprob: -20.125001907348633
    10. 'bst' → logprob: -20.375001907348633

Token 754: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -3.292907877039397e-06
    2. '_fs' → logprob: -12.75000286102295
    3. 'f' → logprob: -15.62500286102295
    4. 'FS' → logprob: -16.250003814697266
    5. ' fs' → logprob: -16.875003814697266
    6. 'fsm' → logprob: -18.125003814697266
    7. '(fs' → logprob: -18.750003814697266
    8. '_f' → logprob: -19.375003814697266
    9. 'dfs' → logprob: -19.500003814697266
    10. '=' → logprob: -19.875003814697266

Token 755: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -0.0002625278721097857
    2. 'root' → logprob: -8.250262260437012
    3. '(' → logprob: -14.000262260437012
    4. '(
' → logprob: -15.500262260437012
    5. '[root' → logprob: -16.500263214111328
    6. ' root' → logprob: -16.625263214111328
    7. '(self' → logprob: -18.500263214111328
    8. '=root' → logprob: -19.125263214111328
    9. '(ROOT' → logprob: -19.125263214111328
    10. '_root' → logprob: -19.500263214111328

Token 756: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12693734467029572
    2. ')
' → logprob: -2.1269373893737793
    3. ')
' → logprob: -11.751936912536621
    4. ' )' → logprob: -14.501936912536621
    5. ')

' → logprob: -15.001936912536621
    6. '       ' → logprob: -15.501936912536621
    7. ' )
' → logprob: -15.626936912536621
    8. '),' → logprob: -17.251937866210938
    9. '   ' → logprob: -17.501937866210938
    10. ')return' → logprob: -17.626937866210938

Token 757: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20768208801746368
    2. 'for' → logprob: -1.7076821327209473
    3. ' for' → logprob: -5.082682132720947
    4. '   ' → logprob: -10.332681655883789
    5. '	for' → logprob: -11.707681655883789
    6. '```' → logprob: -12.957681655883789
    7. 'from' → logprob: -13.207681655883789
    8. 'import' → logprob: -15.707681655883789
    9. ' ' → logprob: -15.832681655883789
    10. '        
' → logprob: -15.832681655883789

Token 758: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00010664248111424968
    2. ' for' → logprob: -9.250106811523438
    3. '       ' → logprob: -11.500106811523438
    4. '```' → logprob: -15.500106811523438
    5. 'from' → logprob: -16.000106811523438
    6. '	for' → logprob: -17.625106811523438
    7. '   ' → logprob: -18.625106811523438
    8. '``' → logprob: -20.000106811523438
    9. '﻿' → logprob: -21.750106811523438
    10. 'n' → logprob: -21.875106811523438

Token 759: ' k' (ID: 372)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3202933967113495
    2. 'i' → logprob: -1.6952934265136719
    3. 'k' → logprob: -2.445293426513672
    4. 'd' → logprob: -6.195293426513672
    5. 'l' → logprob: -7.320293426513672
    6. 'p' → logprob: -8.695293426513672
    7. 'h' → logprob: -8.820293426513672
    8. 'e' → logprob: -9.070293426513672
    9. 'lv' → logprob: -9.570293426513672
    10. 'x' → logprob: -9.695293426513672

Token 760: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06994632631540298
    2. 'in' → logprob: -2.6949462890625
    3. ' ' → logprob: -12.4449462890625
    4. '   ' → logprob: -13.8199462890625
    5. '1' → logprob: -13.9449462890625
    6. '
' → logprob: -13.9449462890625
    7. 'import' → logprob: -13.9449462890625
    8. '  ' → logprob: -14.1949462890625
    9. 'range' → logprob: -15.1949462890625
    10. ',' → logprob: -15.3199462890625

Token 761: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.704273118884885e-07
    2. ' range' → logprob: -14.250000953674316
    3. '(range' → logprob: -19.5
    4. '   ' → logprob: -20.0
    5. '	range' → logprob: -20.0
    6. '
' → logprob: -20.625
    7. 'r' → logprob: -21.625
    8. 'ran' → logprob: -22.5
    9. 'ra' → logprob: -23.0
    10. 'rang' → logprob: -23.125

Token 762: '(self' (ID: 2402)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00027254095766693354
    2. 'self' → logprob: -8.250272750854492
    3. '(self' → logprob: -12.125272750854492
    4. '(' → logprob: -12.125272750854492
    5. '
' → logprob: -15.750272750854492
    6. '   ' → logprob: -15.750272750854492
    7. ' ' → logprob: -17.000272750854492
    8. ' self' → logprob: -18.000272750854492
    9. '0' → logprob: -18.625272750854492
    10. '

' → logprob: -20.625272750854492

Token 763: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.3740898072719574
    2. 'l' → logprob: -1.7490898370742798
    3. '1' → logprob: -1.9990898370742798
    4. '-' → logprob: -6.12408971786499
    5. '   ' → logprob: -9.124090194702148
    6. ' ' → logprob: -9.124090194702148
    7. '	l' → logprob: -9.374090194702148
    8. 'self' → logprob: -10.499090194702148
    9. ')' → logprob: -10.624090194702148
    10. '_l' → logprob: -10.874090194702148

Token 764: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4915027320384979
    2. '-' → logprob: -1.2415027618408203
    3. '):' → logprob: -2.3665027618408203
    4. '):
' → logprob: -5.36650276184082
    5. '1' → logprob: -7.36650276184082
    6. ' ):' → logprob: -8.99150276184082
    7. '   ' → logprob: -10.11650276184082
    8. ' ' → logprob: -10.49150276184082
    9. ')' → logprob: -10.86650276184082
    10. '):
' → logprob: -11.61650276184082

Token 765: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '2' → logprob: -16.625003814697266
    4. '0' → logprob: -18.625003814697266
    5. '```' → logprob: -18.625003814697266
    6. '   ' → logprob: -18.750003814697266
    7. '１' → logprob: -19.187503814697266
    8. ')' → logprob: -19.687503814697266
    9. '  ' → logprob: -19.750003814697266
    10. '-' → logprob: -20.312503814697266

Token 766: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1683468222618103
    2. ',' → logprob: -2.418346881866455
    3. '):
' → logprob: -3.293346881866455
    4. ',-' → logprob: -4.043346881866455
    5. ' ):' → logprob: -4.918346881866455
    6. ' ,' → logprob: -6.668346881866455
    7. '-' → logprob: -7.043346881866455
    8. ' -' → logprob: -7.418346881866455
    9. ' ,-' → logprob: -7.918346881866455
    10. '):-' → logprob: -8.043346405029297

Token 767: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013130700215697289
    2. '   ' → logprob: -4.6381306648254395
    3. ' for' → logprob: -5.8881306648254395
    4. '           ' → logprob: -8.388131141662598
    5. 'for' → logprob: -8.513131141662598
    6. ',' → logprob: -9.638131141662598
    7. ' ' → logprob: -10.638131141662598
    8. '.' → logprob: -11.388131141662598
    9. '	   ' → logprob: -11.388131141662598
    10. '	for' → logprob: -11.638131141662598

Token 768: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04415196180343628
    2. ' for' → logprob: -3.294152021408081
    3. '   ' → logprob: -5.419151782989502
    4. '           ' → logprob: -7.044151782989502
    5. '               ' → logprob: -7.169151782989502
    6. '       ' → logprob: -12.04415225982666
    7. ' ' → logprob: -12.41915225982666
    8. '	for' → logprob: -12.41915225982666
    9. 'range' → logprob: -12.79415225982666
    10. ' range' → logprob: -14.79415225982666

Token 769: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0007432799902744591
    2. 'i' → logprob: -7.250743389129639
    3. 'u' → logprob: -10.87574291229248
    4. ' v' → logprob: -12.12574291229248
    5. 'node' → logprob: -12.25074291229248
    6. 'j' → logprob: -12.75074291229248
    7. 'x' → logprob: -13.87574291229248
    8. 'k' → logprob: -15.62574291229248
    9. '   ' → logprob: -16.875743865966797
    10. 'n' → logprob: -17.250743865966797

Token 770: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021886874455958605
    2. 'in' → logprob: -6.127188682556152
    3. 'n' → logprob: -13.252188682556152
    4. ' ' → logprob: -14.252188682556152
    5. 's' → logprob: -15.377188682556152
    6. 'v' → logprob: -15.502188682556152
    7. '<|end|>' → logprob: -15.752188682556152
    8. 'range' → logprob: -15.877188682556152
    9. 'In' → logprob: -16.62718963623047
    10. '	in' → logprob: -16.75218963623047

Token 771: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.842555426876061e-06
    2. ' range' → logprob: -12.250004768371582
    3. '(range' → logprob: -18.8750057220459
    4. '	range' → logprob: -21.3750057220459
    5. '   ' → logprob: -22.1250057220459
    6. 'ran' → logprob: -22.5000057220459
    7. 'rang' → logprob: -23.0000057220459
    8. 'r' → logprob: -23.0000057220459
    9. 'ra' → logprob: -23.3750057220459
    10. ' ' → logprob: -23.7500057220459

Token 772: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.020998427644371986
    2. '(self' → logprob: -4.020998477935791
    3. '           ' → logprob: -6.645998477935791
    4. ' self' → logprob: -6.770998477935791
    5. '               ' → logprob: -8.020998001098633
    6. '0' → logprob: -10.145998001098633
    7. '   ' → logprob: -11.020998001098633
    8. '                   ' → logprob: -12.395998001098633
    9. '1' → logprob: -12.645998001098633
    10. '	self' → logprob: -13.270998001098633

Token 773: '.N' (ID: 4439)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01818084716796875
    2. 'self' → logprob: -4.018180847167969
    3. ')' → logprob: -11.643180847167969
    4. 's' → logprob: -12.143180847167969
    5. ' self' → logprob: -12.143180847167969
    6. '(N' → logprob: -13.143180847167969
    7. '   ' → logprob: -13.268180847167969
    8. '.N' → logprob: -13.393180847167969
    9. '(self' → logprob: -13.643180847167969
    10. '       ' → logprob: -14.018180847167969

Token 774: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3133384883403778
    2. '):' → logprob: -1.3133385181427002
    3. '):
' → logprob: -10.563338279724121
    4. ':' → logprob: -11.063338279724121
    5. '               ' → logprob: -12.063338279724121
    6. ')' → logprob: -12.438338279724121
    7. '           ' → logprob: -12.438338279724121
    8. ':
' → logprob: -12.438338279724121
    9. ' ):' → logprob: -12.688338279724121
    10. ' ):
' → logprob: -12.688338279724121

Token 775: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013023802312090993
    2. '           ' → logprob: -8.001302719116211
    3. 'self' → logprob: -8.001302719116211
    4. ' self' → logprob: -8.251302719116211
    5. '       ' → logprob: -9.626302719116211
    6. '   ' → logprob: -9.626302719116211
    7. ' for' → logprob: -9.876302719116211
    8. ' if' → logprob: -10.001302719116211
    9. 'for' → logprob: -10.251302719116211
    10. 'if' → logprob: -10.626302719116211

Token 776: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0404074601829052
    2. ' self' → logprob: -3.915407419204712
    3. '               ' → logprob: -4.165407657623291
    4. 'if' (adapté à ' if') → logprob: -6.165407657623291
    5. '                   ' → logprob: -6.415407657623291
    6. '   ' → logprob: -8.790407180786133
    7. ' if' → logprob: -9.290407180786133
    8. 'v' → logprob: -9.790407180786133
    9. '[self' → logprob: -10.540407180786133
    10. 'next' → logprob: -11.415407180786133

Token 777: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03929881379008293
    2. ' self' → logprob: -3.2892987728118896
    3. '(self' → logprob: -6.789299011230469
    4. '               ' → logprob: -9.539299011230469
    5. '                   ' → logprob: -10.664299011230469
    6. '   ' → logprob: -10.789299011230469
    7. '[self' → logprob: -12.039299011230469
    8. '	self' → logprob: -12.789299011230469
    9. '           ' → logprob: -12.914299011230469
    10. ' ' → logprob: -13.039299011230469

Token 778: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0006297559011727571
    2. 'parent' → logprob: -7.375629901885986
    3. '[parent' → logprob: -13.625629425048828
    4. '.' → logprob: -14.250629425048828
    5. '_parent' → logprob: -14.625629425048828
    6. '.Parent' → logprob: -15.875629425048828
    7. '	parent' → logprob: -16.000629425048828
    8. '.user' → logprob: -16.250629425048828
    9. 'Parent' → logprob: -16.375629425048828
    10. ' parent' → logprob: -16.500629425048828

Token 779: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. 'v' → logprob: -15.875
    3. '[n' → logprob: -17.375
    4. ' [' → logprob: -19.0
    5. '[self' → logprob: -19.0
    6. '```' → logprob: -19.125
    7. '[k' → logprob: -19.75
    8. '<v' → logprob: -19.875
    9. '[u' → logprob: -20.0
    10. '[' → logprob: -20.0

Token 780: '][' (ID: 2696)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.027150023728609085
    2. '][' → logprob: -3.6521499156951904
    3. '[' → logprob: -7.2771501541137695
    4. ' [' → logprob: -9.90215015411377
    5. 'k' → logprob: -10.15215015411377
    6. '[
' → logprob: -10.90215015411377
    7. '[v' → logprob: -11.40215015411377
    8. '
' → logprob: -12.02715015411377
    9. '>[' → logprob: -12.15215015411377
    10. '   ' → logprob: -12.27715015411377

Token 781: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.816093228830141e-06
    2. ' k' → logprob: -12.87500286102295
    3. '   ' → logprob: -15.87500286102295
    4. '0' → logprob: -17.000001907348633
    5. '	k' → logprob: -17.125001907348633
    6. '[k' → logprob: -17.500001907348633
    7. '(k' → logprob: -18.125001907348633
    8. '{k' → logprob: -18.750001907348633
    9. ' ' → logprob: -19.500001907348633
    10. '"k' → logprob: -20.625001907348633

Token 782: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23904608190059662
    2. ']!=' → logprob: -1.7390460968017578
    3. '+' → logprob: -3.614046096801758
    4. '][' → logprob: -5.239046096801758
    5. ']>=' → logprob: -6.239046096801758
    6. ']==' → logprob: -6.614046096801758
    7. '[' → logprob: -7.739046096801758
    8. '!=' → logprob: -7.864046096801758
    9. '!=-' → logprob: -8.489046096801758
    10. '][-' → logprob: -9.114046096801758

Token 783: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.12691204249858856
    2. ']' → logprob: -2.8769121170043945
    3. ']!=' → logprob: -3.3769121170043945
    4. '!=-' → logprob: -4.2519121170043945
    5. ' !=' → logprob: -4.8769121170043945
    6. '>=' → logprob: -5.3769121170043945
    7. '[' → logprob: -7.0019121170043945
    8. '+' → logprob: -7.6269121170043945
    9. '==' → logprob: -8.251912117004395
    10. '>' → logprob: -8.501912117004395

Token 784: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009117019944824278
    2. ' -' → logprob: -7.000911712646484
    3. '   ' → logprob: -15.375911712646484
    4. '−' → logprob: -18.000911712646484
    5. ' ' → logprob: -18.250911712646484
    6. '  ' → logprob: -18.500911712646484
    7. '	' → logprob: -19.500911712646484
    8. '‌' → logprob: -20.000911712646484
    9. '-N' → logprob: -20.250911712646484
    10. '-n' → logprob: -20.500911712646484

Token 785: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.625003814697266
    3. ' -' → logprob: -16.125003814697266
    4. '-' → logprob: -16.375003814697266
    5. '```' → logprob: -17.187503814697266
    6. '<|end|>' → logprob: -17.625003814697266
    7. '   ' → logprob: -17.687503814697266
    8. '  ' → logprob: -17.812503814697266
    9. ')' → logprob: -18.312503814697266
    10. '１' → logprob: -18.687503814697266

Token 786: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3953785002231598
    2. ':' → logprob: -1.1453784704208374
    3. '                   ' → logprob: -5.020378589630127
    4. ' and' → logprob: -6.520378589630127
    5. 'and' → logprob: -9.270378112792969
    6. ',' → logprob: -9.770378112792969
    7. '):
' → logprob: -10.020378112792969
    8. '                       ' → logprob: -10.145378112792969
    9. '[' → logprob: -10.270378112792969
    10. '               ' → logprob: -10.270378112792969

Token 787: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003005464968737215
    2. ',' → logprob: -9.750300407409668
    3. '                       ' → logprob: -10.250300407409668
    4. ':' → logprob: -10.625300407409668
    5. '=' → logprob: -10.750300407409668
    6. ' =' → logprob: -10.750300407409668
    7. ' self' → logprob: -10.875300407409668
    8. '				' → logprob: -11.250300407409668
    9. '               ' → logprob: -11.250300407409668
    10. '                  ' → logprob: -11.500300407409668

Token 788: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.09006160497665405
    2. '                       ' → logprob: -2.590061664581299
    3. ' self' → logprob: -4.715061664581299
    4. '                   ' → logprob: -6.340061664581299
    5. '   ' → logprob: -8.21506118774414
    6. ' ' → logprob: -9.84006118774414
    7. '               ' → logprob: -11.09006118774414
    8. '	self' → logprob: -11.46506118774414
    9. '[self' → logprob: -11.71506118774414
    10. '  ' → logprob: -11.96506118774414

Token 789: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0015325936255976558
    2. 'parent' → logprob: -6.501532554626465
    3. '.' → logprob: -10.876532554626465
    4. '[parent' → logprob: -12.126532554626465
    5. '][' → logprob: -13.626532554626465
    6. ' parent' → logprob: -13.751532554626465
    7. '].' → logprob: -13.751532554626465
    8. '_parent' → logprob: -14.251532554626465
    9. '	parent' → logprob: -14.376532554626465
    10. '.Parent' → logprob: -14.626532554626465

Token 790: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.080963092041202e-06
    2. '][' → logprob: -12.500004768371582
    3. 'v' → logprob: -13.750004768371582
    4. '[' → logprob: -16.3750057220459
    5. '```' → logprob: -17.1250057220459
    6. '=v' → logprob: -17.3750057220459
    7. '<v' → logprob: -17.6250057220459
    8. '	v' → logprob: -17.8750057220459
    9. ' [' → logprob: -18.5000057220459
    10. '(v' → logprob: -18.6250057220459

Token 791: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00613841088488698
    2. '[k' → logprob: -5.131138324737549
    3. '[v' → logprob: -9.506138801574707
    4. '[' → logprob: -9.506138801574707
    5. ']' → logprob: -11.131138801574707
    6. ')[' → logprob: -11.506138801574707
    7. ' ][' → logprob: -11.631138801574707
    8. 'k' → logprob: -12.131138801574707
    9. '"][' → logprob: -12.506138801574707
    10. '>[' → logprob: -12.756138801574707

Token 792: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.961759259458631e-06
    2. 'self' → logprob: -12.750004768371582
    3. ' k' → logprob: -13.375004768371582
    4. '[k' → logprob: -15.250004768371582
    5. '   ' → logprob: -16.2500057220459
    6. '(k' → logprob: -16.6250057220459
    7. '           ' → logprob: -18.2500057220459
    8. '       ' → logprob: -18.2500057220459
    9. ' ' → logprob: -18.3750057220459
    10. '	k' → logprob: -18.6250057220459

Token 793: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01267716009169817
    2. ' +' → logprob: -4.387677192687988
    3. ']' → logprob: -9.012677192687988
    4. '1' → logprob: -10.887677192687988
    5. '][' → logprob: -11.887677192687988
    6. '+
' → logprob: -12.137677192687988
    7. '+]' → logprob: -12.137677192687988
    8. '[' → logprob: -12.512677192687988
    9. ']+' → logprob: -14.137677192687988
    10. ' +
' → logprob: -14.262677192687988

Token 794: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.50000286102295
    3. ']' → logprob: -13.62500286102295
    4. '   ' → logprob: -15.87500286102295
    5. '```' → logprob: -16.625003814697266
    6. ')' → logprob: -18.000003814697266
    7. '=' → logprob: -18.375003814697266
    8. ']=' → logprob: -18.500003814697266
    9. 'def' → logprob: -18.750003814697266
    10. '           ' → logprob: -18.875003814697266

Token 795: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015408077742904425
    2. ']=' → logprob: -7.376540660858154
    3. ' ]' → logprob: -7.501540660858154
    4. '=' → logprob: -8.501541137695312
    5. ' =' → logprob: -8.751541137695312
    6. ')' → logprob: -16.626541137695312
    7. '   ' → logprob: -16.751541137695312
    8. '[' → logprob: -17.126541137695312
    9. '    ' → logprob: -17.376541137695312
    10. ']
' → logprob: -18.501541137695312

Token 796: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759574770927429
    2. ' =' → logprob: -0.8259574770927429
    3. ']=' → logprob: -11.450957298278809
    4. ']' → logprob: -12.075957298278809
    5. '=self' → logprob: -14.075957298278809
    6. '[' → logprob: -15.200957298278809
    7. '=
' → logprob: -15.825957298278809
    8. '=[' → logprob: -16.075958251953125
    9. ')=' → logprob: -16.575958251953125
    10. ' =[' → logprob: -16.700958251953125

Token 797: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004088373854756355
    2. ' self' → logprob: -5.504088401794434
    3. '                   ' → logprob: -11.629088401794434
    4. '                       ' → logprob: -14.879088401794434
    5. '	self' → logprob: -15.504088401794434
    6. '[self' → logprob: -15.504088401794434
    7. '               ' → logprob: -16.004087448120117
    8. '(self' → logprob: -16.254087448120117
    9. '   ' → logprob: -16.504087448120117
    10. '           ' → logprob: -17.754087448120117

Token 798: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.02329031564295292
    2. 'parent' → logprob: -3.7732903957366943
    3. 'self' → logprob: -10.273290634155273
    4. '[parent' → logprob: -12.648290634155273
    5. ' parent' → logprob: -12.773290634155273
    6. '.' → logprob: -13.148290634155273
    7. '	parent' → logprob: -14.273290634155273
    8. '_parent' → logprob: -14.648290634155273
    9. '[self' → logprob: -15.273290634155273
    10. '.Parent' → logprob: -15.523290634155273

Token 799: '[self' (ID: 33734)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.6240566083070007e-06
    2. '[self' → logprob: -13.875001907348633
    3. 'v' → logprob: -14.500001907348633
    4. 'self' → logprob: -17.375001907348633
    5. '[' → logprob: -19.000001907348633
    6. ' [' → logprob: -20.500001907348633
    7. '[
' → logprob: -20.875001907348633
    8. '	v' → logprob: -21.000001907348633
    9. '```' → logprob: -21.125001907348633
    10. '(v' → logprob: -21.250001907348633

Token 800: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0005176475970074534
    2. 'parent' → logprob: -8.000517845153809
    3. '[v' → logprob: -9.000517845153809
    4. '[parent' → logprob: -10.125517845153809
    5. '.v' → logprob: -11.875517845153809
    6. 'v' → logprob: -12.375517845153809
    7. 'self' → logprob: -12.500517845153809
    8. '[self' → logprob: -12.625517845153809
    9. '	parent' → logprob: -15.375517845153809
    10. ' parent' → logprob: -15.750517845153809

Token 801: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.988221684878226e-06
    2. 'v' → logprob: -11.875006675720215
    3. '	v' → logprob: -18.50000762939453
    4. '[' → logprob: -18.62500762939453
    5. '```' → logprob: -18.87500762939453
    6. ' v' → logprob: -19.12500762939453
    7. ' [' → logprob: -19.87500762939453
    8. '][' → logprob: -20.12500762939453
    9. '(v' → logprob: -20.12500762939453
    10. '<v' → logprob: -20.37500762939453

Token 802: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.1080467781284824e-05
    2. 'v' → logprob: -10.250041007995605
    3. '][' → logprob: -12.125041007995605
    4. '```' → logprob: -16.750041961669922
    5. '[' → logprob: -17.125041961669922
    6. '<v' → logprob: -18.125041961669922
    7. '	v' → logprob: -18.500041961669922
    8. ']' → logprob: -18.625041961669922
    9. ' [' → logprob: -18.750041961669922
    10. '[self' → logprob: -19.125041961669922

Token 803: 'k' (ID: 74)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004085758700966835
    2. '[v' → logprob: -5.504085540771484
    3. ' v' → logprob: -12.254085540771484
    4. '```' → logprob: -13.629085540771484
    5. '	v' → logprob: -14.379085540771484
    6. '][' → logprob: -14.879085540771484
    7. ')v' → logprob: -15.504085540771484
    8. '(v' → logprob: -16.379085540771484
    9. ',v' → logprob: -17.379085540771484
    10. '   ' → logprob: -17.629085540771484

Token 804: ']][' (ID: 61032)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00011546355381142348
    2. 'v' → logprob: -9.500115394592285
    3. '][' → logprob: -10.125115394592285
    4. '[' → logprob: -16.0001163482666
    5. '```' → logprob: -16.3751163482666
    6. '   ' → logprob: -16.7501163482666
    7. '(v' → logprob: -16.8751163482666
    8. '       ' → logprob: -17.3751163482666
    9. ' v' → logprob: -17.5001163482666
    10. '           ' → logprob: -17.6251163482666

Token 805: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.961759259458631e-06
    2. ' k' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.6250057220459
    4. '	k' → logprob: -16.7500057220459
    5. ' ' → logprob: -17.0000057220459
    6. '{k' → logprob: -17.7500057220459
    7. '[k' → logprob: -19.0000057220459
    8. '```' → logprob: -19.2500057220459
    9. ']' → logprob: -19.5000057220459
    10. '  ' → logprob: -19.7500057220459

Token 806: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006394077208824456
    2. '<|end|>' → logprob: -7.75063943862915
    3. ' ]' → logprob: -8.750638961791992
    4. ']
' → logprob: -10.750638961791992
    5. ']()' → logprob: -11.875638961791992
    6. ')' → logprob: -12.125638961791992
    7. '()]' → logprob: -13.000638961791992
    8. ']>' → logprob: -13.125638961791992
    9. '](' → logprob: -13.250638961791992
    10. '<|end|>' → logprob: -13.375638961791992

Token 807: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 808: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2211897373199463
    2. ')' → logprob: -1.7211897373199463
    3. '<|end|>' → logprob: -1.7211897373199463
    4. '   ' → logprob: -2.3461897373199463
    5. '0' → logprob: -2.7211897373199463
    6. '.' → logprob: -3.0961897373199463
    7. ':' → logprob: -3.2211897373199463
    8. ']' → logprob: -3.8461897373199463
    9. '#' → logprob: -3.9711897373199463
    10. '[' → logprob: -4.096189498901367

Token 809: ' l' (ID: 305)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.6485337615013123
    2. 'l' → logprob: -0.7735337615013123
    3. 'get' → logprob: -4.648533821105957
    4. '_query' → logprob: -6.273533821105957
    5. 'lift' → logprob: -6.898533821105957
    6. 'ancestor' → logprob: -6.898533821105957
    7. '_l' → logprob: -7.523533821105957
    8. '_' → logprob: -8.523533821105957
    9. '__' → logprob: -8.523533821105957
    10. 'lowest' → logprob: -8.523533821105957

Token 810: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -0.008696474134922028
    2. 'e' → logprob: -5.883696556091309
    3. 'ink' → logprob: -6.008696556091309
    4. 'eft' → logprob: -6.633696556091309
    5. 'ist' → logprob: -7.633696556091309
    6. 'ift' → logprob: -8.008696556091309
    7. 'ength' → logprob: -8.508696556091309
    8. 'en' → logprob: -8.758696556091309
    9. 'ev' → logprob: -8.758696556091309
    10. '   ' → logprob: -9.133696556091309

Token 811: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001938750152476132
    2. '(' → logprob: -6.251938819885254
    3. '   ' → logprob: -12.876938819885254
    4. '(
' → logprob: -13.001938819885254
    5. 'def' → logprob: -13.501938819885254
    6. 'self' → logprob: -13.876938819885254
    7. ' (' → logprob: -13.876938819885254
    8. '(a' → logprob: -14.376938819885254
    9. '(v' → logprob: -15.126938819885254
    10. '(u' → logprob: -15.251938819885254

Token 812: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.305326966568828e-05
    2. 'self' → logprob: -9.500093460083008
    3. ' ,' → logprob: -11.625093460083008
    4. ',v' → logprob: -12.250093460083008
    5. ',
' → logprob: -13.500093460083008
    6. ',self' → logprob: -13.875093460083008
    7. '(self' → logprob: -14.125093460083008
    8. ',a' → logprob: -14.500093460083008
    9. '   ' → logprob: -15.750093460083008
    10. 'a' → logprob: -15.750093460083008

Token 813: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.002663288963958621
    2. ' u' → logprob: -6.5026631355285645
    3. 'a' → logprob: -6.8776631355285645
    4. 'x' → logprob: -9.877663612365723
    5. 'self' → logprob: -10.252663612365723
    6. '   ' → logprob: -10.627663612365723
    7. ')' → logprob: -11.752663612365723
    8. ' ' → logprob: -12.877663612365723
    9. ' a' → logprob: -13.002663612365723
    10. 'v' → logprob: -14.002663612365723

Token 814: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010777069255709648
    2. ' ,' → logprob: -6.876077651977539
    3. ',u' → logprob: -10.126077651977539
    4. '   ' → logprob: -12.751077651977539
    5. ',v' → logprob: -13.501077651977539
    6. ',
' → logprob: -15.876077651977539
    7. ',int' → logprob: -16.12607765197754
    8. ',b' → logprob: -16.12607765197754
    9. ' ' → logprob: -16.12607765197754
    10. '  ' → logprob: -16.87607765197754

Token 815: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1602666825056076
    2. ' int' → logprob: -1.910266637802124
    3. ',' → logprob: -11.035266876220703
    4. ':int' → logprob: -11.785266876220703
    5. ',int' → logprob: -12.160266876220703
    6. '   ' → logprob: -12.160266876220703
    7. ' ' → logprob: -12.910266876220703
    8. '(int' → logprob: -13.285266876220703
    9. 'u' → logprob: -13.660266876220703
    10. ' u' → logprob: -13.785266876220703

Token 816: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015908108616713434
    2. ' ,' → logprob: -8.75015926361084
    3. ',u' → logprob: -15.00015926361084
    4. ',v' → logprob: -15.37515926361084
    5. ',
' → logprob: -16.625158309936523
    6. '   ' → logprob: -18.000158309936523
    7. ',b' → logprob: -18.375158309936523
    8. ',n' → logprob: -18.750158309936523
    9. '_,' → logprob: -18.750158309936523
    10. '‌,' → logprob: -19.000158309936523

Token 817: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.12692862749099731
    2. ' v' → logprob: -2.1269285678863525
    3. '	v' → logprob: -15.001928329467773
    4. '   ' → logprob: -15.751928329467773
    5. ' ' → logprob: -16.251928329467773
    6. '  ' → logprob: -17.626928329467773
    7. ')v' → logprob: -18.751928329467773
    8. '    ' → logprob: -18.876928329467773
    9. ')' → logprob: -20.251928329467773
    10. ',v' → logprob: -21.001928329467773

Token 818: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6160851120948792
    2. ',' → logprob: -0.9910851120948792
    3. ')' → logprob: -2.4910850524902344
    4. '):
' → logprob: -5.616085052490234
    5. ' ):' → logprob: -6.366085052490234
    6. ' )' → logprob: -7.991085052490234
    7. ' ,' → logprob: -8.866085052490234
    8. '   ' → logprob: -9.991085052490234
    9. '):
' → logprob: -10.991085052490234
    10. ':' → logprob: -11.116085052490234

Token 819: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.6405310816480778e-05
    2. ' int' → logprob: -11.125016212463379
    3. ')' → logprob: -13.500016212463379
    4. '   ' → logprob: -15.625016212463379
    5. '[int' → logprob: -17.250017166137695
    6. '(int' → logprob: -17.875017166137695
    7. ':int' → logprob: -17.875017166137695
    8. '=int' → logprob: -18.625017166137695
    9. '	int' → logprob: -19.000017166137695
    10. ' ' → logprob: -19.125017166137695

Token 820: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5133073329925537
    2. '):' → logprob: -1.0133073329925537
    3. '):
' → logprob: -3.2633073329925537
    4. '):
' → logprob: -9.138307571411133
    5. ' )' → logprob: -10.013307571411133
    6. ' ):' → logprob: -10.138307571411133
    7. ')->' → logprob: -12.013307571411133
    8. '   ' → logprob: -12.763307571411133
    9. '):

' → logprob: -12.763307571411133
    10. ' ):
' → logprob: -12.763307571411133

Token 821: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01001305878162384
    2. '):' → logprob: -4.885013103485107
    3. ':
' → logprob: -6.260013103485107
    4. '->' → logprob: -8.63501262664795
    5. ')' → logprob: -9.26001262664795
    6. '):
' → logprob: -9.76001262664795
    7. ' ->' → logprob: -9.76001262664795
    8. '():' → logprob: -10.01001262664795
    9. '       ' → logprob: -10.63501262664795
    10. '   ' → logprob: -11.26001262664795

Token 822: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.6240566083070007e-06
    2. ' int' → logprob: -13.625001907348633
    3. '[int' → logprob: -15.250001907348633
    4. '(int' → logprob: -16.375001907348633
    5. '   ' → logprob: -16.750001907348633
    6. '
' → logprob: -17.125001907348633
    7. '```' → logprob: -17.750001907348633
    8. ' ' → logprob: -18.250001907348633
    9. ':int' → logprob: -19.250001907348633
    10. '<int' → logprob: -19.250001907348633

Token 823: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023568058386445045
    2. ':
' → logprob: -4.273568153381348
    3. '       ' → logprob: -4.898568153381348
    4. '):' → logprob: -6.898568153381348
    5. '):
' → logprob: -7.398568153381348
    6. '   ' → logprob: -8.648568153381348
    7. ',' → logprob: -10.273568153381348
    8. ')' → logprob: -10.773568153381348
    9. '():
' → logprob: -10.898568153381348
    10. '():' → logprob: -11.148568153381348

Token 824: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014108279719948769
    2. '   ' → logprob: -7.376410961151123
    3. '    ' → logprob: -7.626410961151123
    4. ' 
' → logprob: -9.376410484313965
    5. '        
' → logprob: -10.126410484313965
    6. '        ' → logprob: -10.251410484313965
    7. '
' → logprob: -10.751410484313965
    8. '	' → logprob: -10.876410484313965
    9. ' if' → logprob: -11.001410484313965
    10. '    
' → logprob: -11.251410484313965

Token 825: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.27099974633893e-05
    2. ' if' → logprob: -11.750012397766113
    3. '   ' → logprob: -12.875012397766113
    4. '       ' → logprob: -13.250012397766113
    5. 'AST' → logprob: -14.500012397766113
    6. '#' → logprob: -18.12501335144043
    7. '```' → logprob: -18.25001335144043
    8. 'def' → logprob: -18.75001335144043
    9. '	if' → logprob: -19.25001335144043
    10. '           ' → logprob: -20.00001335144043

Token 826: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002075933152809739
    2. ' self' → logprob: -8.500207901000977
    3. 'u' → logprob: -13.500207901000977
    4. '(self' → logprob: -13.500207901000977
    5. '	self' → logprob: -13.750207901000977
    6. '   ' → logprob: -15.875207901000977
    7. '[self' → logprob: -17.625207901000977
    8. '
' → logprob: -18.875207901000977
    9. '=self' → logprob: -18.875207901000977
    10. ' ' → logprob: -19.000207901000977

Token 827: '.depth' (ID: 89791)
  Prédit: '.depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -0.0009124171338044107
    2. 'depth' → logprob: -7.000912189483643
    3. ' depth' → logprob: -15.7509126663208
    4. '.' → logprob: -15.8759126663208
    5. '(depth' → logprob: -16.000911712646484
    6. ' .' → logprob: -16.000911712646484
    7. '   ' → logprob: -16.625911712646484
    8. '.distance' → logprob: -16.625911712646484
    9. '_depth' → logprob: -17.125911712646484
    10. '.deep' → logprob: -17.250911712646484

Token 828: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -7.226628895296017e-06
    2. 'u' → logprob: -11.875007629394531
    3. '[v' → logprob: -15.625007629394531
    4. ' [' → logprob: -15.875007629394531
    5. '(u' → logprob: -19.00000762939453
    6. ' u' → logprob: -19.62500762939453
    7. '[
' → logprob: -20.12500762939453
    8. '   ' → logprob: -20.12500762939453
    9. '
' → logprob: -20.50000762939453
    10. '```' → logprob: -20.50000762939453

Token 829: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3168771266937256
    2. '<' → logprob: -1.3168771266937256
    3. '>' → logprob: -5.816877365112305
    4. ' >' → logprob: -7.566877365112305
    5. '<u' → logprob: -10.066877365112305
    6. ')' → logprob: -10.566877365112305
    7. '<v' → logprob: -11.066877365112305
    8. ' ' → logprob: -11.316877365112305
    9. ']' → logprob: -11.691877365112305
    10. '[' → logprob: -12.316877365112305

Token 830: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.03724197670817375
    2. ' <' → logprob: -3.4122419357299805
    3. '>' → logprob: -5.6622419357299805
    4. '<u' → logprob: -9.91224193572998
    5. ' >' → logprob: -10.03724193572998
    6. '<v' → logprob: -11.41224193572998
    7. '[' → logprob: -13.03724193572998
    8. ' ' → logprob: -13.41224193572998
    9. '<div' → logprob: -13.91224193572998
    10. '<span' → logprob: -14.16224193572998

Token 831: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.47411516308784485
    2. 'self' → logprob: -0.9741151332855225
    3. '=self' → logprob: -10.849115371704102
    4. '	self' → logprob: -12.099115371704102
    5. '(self' → logprob: -12.349115371704102
    6. '   ' → logprob: -12.849115371704102
    7. '[self' → logprob: -13.474115371704102
    8. ' ' → logprob: -13.474115371704102
    9. ' v' → logprob: -13.974115371704102
    10. 'v' → logprob: -13.974115371704102

Token 832: '.depth' (ID: 89791)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.026257341727614403
    2. ' depth' → logprob: -3.776257276535034
    3. ' ' → logprob: -7.026257514953613
    4. ' v' → logprob: -7.526257514953613
    5. ' u' → logprob: -7.776257514953613
    6. '=' → logprob: -7.901257514953613
    7. 'u' → logprob: -8.526257514953613
    8. 'v' → logprob: -8.526257514953613
    9. '.depth' → logprob: -8.776257514953613
    10. '(depth' → logprob: -9.526257514953613

Token 833: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.4070900082588196
    2. 'v' → logprob: -1.1570899486541748
    3. '[u' → logprob: -4.407090187072754
    4. ' v' → logprob: -4.907090187072754
    5. 'u' → logprob: -7.907090187072754
    6. '[' → logprob: -10.282090187072754
    7. ' u' → logprob: -11.782090187072754
    8. '   ' → logprob: -12.282090187072754
    9. ' [' → logprob: -12.407090187072754
    10. '       ' → logprob: -12.657090187072754

Token 834: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022052209824323654
    2. ':
' → logprob: -4.02205228805542
    3. '):' → logprob: -5.77205228805542
    4. '):
' → logprob: -7.64705228805542
    5. ' :' → logprob: -8.897051811218262
    6. '       ' → logprob: -10.022051811218262
    7. ')' → logprob: -10.147051811218262
    8. ' ):' → logprob: -11.022051811218262
    9. ':return' → logprob: -11.147051811218262
    10. '           ' → logprob: -11.397051811218262

Token 835: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0969117134809494
    2. 'u' → logprob: -2.971911668777466
    3. '           ' → logprob: -4.721911907196045
    4. ' v' → logprob: -4.971911907196045
    5. ' u' → logprob: -5.721911907196045
    6. ':
' → logprob: -5.846911907196045
    7. ' 
' → logprob: -5.971911907196045
    8. ':' → logprob: -6.096911907196045
    9. 'v' → logprob: -6.221911907196045
    10. ',' → logprob: -6.346911907196045

Token 836: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.12849293649196625
    2. 'v' → logprob: -2.378492832183838
    3. ' u' → logprob: -3.628492832183838
    4. ' v' → logprob: -6.878492832183838
    5. '       ' → logprob: -8.128493309020996
    6. '   ' → logprob: -13.003493309020996
    7. '	u' → logprob: -13.003493309020996
    8. '(u' → logprob: -13.628493309020996
    9. '	v' → logprob: -14.378493309020996
    10. '=u' → logprob: -14.753493309020996

Token 837: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025526012177579105
    2. ' ,' → logprob: -8.500255584716797
    3. ',v' → logprob: -10.625255584716797
    4. ',u' → logprob: -11.250255584716797
    5. '=' → logprob: -11.750255584716797
    6. ')' → logprob: -13.250255584716797
    7. 'u' → logprob: -13.375255584716797
    8. ' =' → logprob: -14.125255584716797
    9. '),' → logprob: -14.875255584716797
    10. '=u' → logprob: -15.375255584716797

Token 838: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0011703446507453918
    2. ' v' → logprob: -6.7511701583862305
    3. '<|end|>' → logprob: -16.251171112060547
    4. '	v' → logprob: -16.876171112060547
    5. '
' → logprob: -17.876171112060547
    6. '           ' → logprob: -18.001171112060547
    7. ')v' → logprob: -18.501171112060547
    8. '       ' → logprob: -18.876171112060547
    9. 'vq' → logprob: -19.376171112060547
    10. '    ' → logprob: -19.876171112060547

Token 839: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750604182481766
    2. ' =' → logprob: -3.5297505855560303
    3. '=
' → logprob: -16.52975082397461
    4. '=

' → logprob: -17.90475082397461
    5. '=u' → logprob: -18.77975082397461
    6. '=v' → logprob: -19.02975082397461
    7. ',' → logprob: -19.27975082397461
    8. '＝' → logprob: -19.27975082397461
    9. ' =
' → logprob: -19.40475082397461
    10. ' ' → logprob: -19.77975082397461

Token 840: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004081959370523691
    2. ' v' → logprob: -5.504081726074219
    3. '	v' → logprob: -12.879081726074219
    4. '   ' → logprob: -14.254081726074219
    5. '           ' → logprob: -15.129081726074219
    6. '    ' → logprob: -16.62908172607422
    7. '
' → logprob: -17.12908172607422
    8. ')v' → logprob: -17.25408172607422
    9. '       ' → logprob: -18.12908172607422
    10. '(v' → logprob: -18.62908172607422

Token 841: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 842: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.048590775579214096
    2. ' u' → logprob: -3.048590660095215
    3. '<|end|>' → logprob: -12.923590660095215
    4. '	u' → logprob: -13.923590660095215
    5. '
' → logprob: -17.29859161376953
    6. ' ' → logprob: -17.67359161376953
    7. ' 
' → logprob: -18.29859161376953
    8. '    ' → logprob: -18.92359161376953
    9. 'user' → logprob: -18.92359161376953
    10. '[u' → logprob: -19.29859161376953

Token 843: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.0230309963226318
    2. '
' → logprob: -1.2730309963226318
    3. '       ' → logprob: -1.8980309963226318
    4. '<|end|>' → logprob: -2.773030996322632
    5. '        
' → logprob: -3.148030996322632
    6. '  
' → logprob: -3.148030996322632
    7. '[' → logprob: -3.648030996322632
    8. '\n' → logprob: -4.148031234741211
    9. '    
' → logprob: -4.398031234741211
    10. '   
' → logprob: -6.398031234741211

Token 844: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0458335243165493
    2. '        
' → logprob: -4.045833587646484
    3. ' 
' → logprob: -4.295833587646484
    4. '  
' → logprob: -5.420833587646484
    5. '[' → logprob: -6.295833587646484
    6. '
' → logprob: -6.420833587646484
    7. '    
' → logprob: -6.420833587646484
    8. '\n' → logprob: -6.920833587646484
    9. '   ' → logprob: -7.545833587646484
    10. '\
' → logprob: -7.545833587646484

Token 845: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01865401677787304
    2. ' for' → logprob: -4.893653869628906
    3. 'diff' → logprob: -4.893653869628906
    4. '       ' → logprob: -5.768653869628906
    5. 'while' → logprob: -9.018653869628906
    6. '   ' → logprob: -9.018653869628906
    7. '
' → logprob: -10.393653869628906
    8. 'if' → logprob: -10.518653869628906
    9. 'u' → logprob: -10.768653869628906
    10. ' diff' → logprob: -11.268653869628906

Token 846: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.048676732927560806
    2. 'i' → logprob: -3.0486767292022705
    3. 'd' → logprob: -9.548676490783691
    4. ' k' → logprob: -11.673676490783691
    5. ' i' → logprob: -13.048676490783691
    6. 'x' → logprob: -13.298676490783691
    7. 'j' → logprob: -13.548676490783691
    8. 'shift' → logprob: -14.048676490783691
    9. 'h' → logprob: -14.173676490783691
    10. 'diff' → logprob: -14.673676490783691

Token 847: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00593117019161582
    2. 'in' → logprob: -5.130931377410889
    3. ' ' → logprob: -13.75593090057373
    4. '   ' → logprob: -14.50593090057373
    5. ' i' → logprob: -15.13093090057373
    6. ' _' → logprob: -15.75593090057373
    7. ',' → logprob: -15.88093090057373
    8. '	in' → logprob: -16.130931854248047
    9. '  ' → logprob: -16.380931854248047
    10. '_in' → logprob: -16.505931854248047

Token 848: ' reversed' (ID: 57184)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002059380756691098
    2. 're' → logprob: -6.502059459686279
    3. ' range' → logprob: -7.502059459686279
    4. ' reversed' → logprob: -12.252058982849121
    5. 'reverse' → logprob: -15.752058982849121
    6. 'rev' → logprob: -18.502059936523438
    7. 'r' → logprob: -18.627059936523438
    8. '(range' → logprob: -19.002059936523438
    9. ' ' → logprob: -19.877059936523438
    10. '	range' → logprob: -20.127059936523438

Token 849: '(range' (ID: 50017)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4741774797439575
    2. '(range' → logprob: -0.9741774797439575
    3. ' range' → logprob: -9.224177360534668
    4. '(' → logprob: -13.474177360534668
    5. '	range' → logprob: -14.849177360534668
    6. '(
' → logprob: -17.349178314208984
    7. '
' → logprob: -17.474178314208984
    8. '(self' → logprob: -17.974178314208984
    9. '_range' → logprob: -18.974178314208984
    10. ')' → logprob: -19.099178314208984

Token 850: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00020377879263833165
    2. 'self' → logprob: -9.000204086303711
    3. '(' → logprob: -9.625204086303711
    4. ' (' → logprob: -12.125204086303711
    5. ' self' → logprob: -12.375204086303711
    6. '(
' → logprob: -13.125204086303711
    7. ')' → logprob: -13.250204086303711
    8. '[self' → logprob: -14.625204086303711
    9. ')(' → logprob: -16.12520408630371
    10. '
' → logprob: -16.87520408630371

Token 851: '.l' (ID: 1000)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0470149889588356
    2. '(self' → logprob: -3.2970149517059326
    3. '.l' → logprob: -5.047015190124512
    4. ' self' → logprob: -6.547015190124512
    5. 'l' → logprob: -7.047015190124512
    6. '.self' → logprob: -9.922015190124512
    7. '.' → logprob: -10.047015190124512
    8. '       ' → logprob: -10.422015190124512
    9. '   ' → logprob: -10.922015190124512
    10. ' .' → logprob: -11.297015190124512

Token 852: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.3499690890312195
    2. ')):' → logprob: -1.2249691486358643
    3. '))' → logprob: -7.224968910217285
    4. '       ' → logprob: -8.349968910217285
    5. '[' → logprob: -8.849968910217285
    6. ')):
' → logprob: -8.974968910217285
    7. '           ' → logprob: -9.974968910217285
    8. ' ' → logprob: -9.974968910217285
    9. '+' → logprob: -10.099968910217285
    10. ' ))' → logprob: -10.599968910217285

Token 853: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005884233396500349
    2. ' if' → logprob: -6.005884170532227
    3. '       ' → logprob: -6.880884170532227
    4. 'if' → logprob: -7.005884170532227
    5. ':' → logprob: -7.130884170532227
    6. '<|end|>' → logprob: -8.755884170532227
    7. ',' → logprob: -8.880884170532227
    8. '               ' → logprob: -10.130884170532227
    9. ' :' → logprob: -10.505884170532227
    10. ':
' → logprob: -10.630884170532227

Token 854: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6356020569801331
    2. ' if' → logprob: -0.7606020569801331
    3. '           ' → logprob: -6.635601997375488
    4. '       ' → logprob: -6.635601997375488
    5. '<|end|>' → logprob: -8.385601997375488
    6. '	if' → logprob: -10.385601997375488
    7. 'while' → logprob: -10.635601997375488
    8. '   ' → logprob: -11.010601997375488
    9. ' ' → logprob: -11.135601997375488
    10. ' while' → logprob: -11.510601997375488

Token 855: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1725326031446457
    2. ' self' → logprob: -1.922532558441162
    3. '(self' → logprob: -4.422532558441162
    4. ' (' → logprob: -8.42253303527832
    5. '((' → logprob: -12.29753303527832
    6. '	self' → logprob: -13.42253303527832
    7. '   ' → logprob: -13.54753303527832
    8. ' ' → logprob: -14.17253303527832
    9. '(' → logprob: -14.79753303527832
    10. '[self' → logprob: -15.29753303527832

Token 856: '.parent' (ID: 17454)
  Prédit: '.depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -0.02212999016046524
    2. 'depth' → logprob: -3.897130012512207
    3. '.parent' → logprob: -6.522130012512207
    4. 'parent' → logprob: -9.147130012512207
    5. ' depth' → logprob: -12.522130012512207
    6. '[parent' → logprob: -13.647130012512207
    7. '(depth' → logprob: -14.022130012512207
    8. '.' → logprob: -14.147130012512207
    9. ' .' → logprob: -14.397130012512207
    10. ' ' → logprob: -14.897130012512207

Token 857: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.723973582556937e-05
    2. '[v' → logprob: -11.000017166137695
    3. 'u' → logprob: -14.500017166137695
    4. '[' → logprob: -17.500017166137695
    5. ' [' → logprob: -18.500017166137695
    6. '```' → logprob: -18.500017166137695
    7. ' u' → logprob: -18.625017166137695
    8. '   ' → logprob: -19.250017166137695
    9. '(u' → logprob: -19.625017166137695
    10. '	u' → logprob: -19.625017166137695

Token 858: '][' (ID: 2696)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.7005751132965088
    2. '[u' → logprob: -0.7005751132965088
    3. '][' → logprob: -5.20057487487793
    4. '[v' → logprob: -7.07557487487793
    5. '[' → logprob: -7.32557487487793
    6. ')[' → logprob: -8.95057487487793
    7. ' [' → logprob: -9.07557487487793
    8. '[token' → logprob: -10.82557487487793
    9. '[t' → logprob: -11.07557487487793
    10. '>[' → logprob: -11.32557487487793

Token 859: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.3856492842023727e-06
    2. 'u' → logprob: -14.750000953674316
    3. ' k' → logprob: -14.750000953674316
    4. '[k' → logprob: -14.875000953674316
    5. 'v' → logprob: -16.875001907348633
    6. '
' → logprob: -17.125001907348633
    7. '[' → logprob: -17.625001907348633
    8. ']' → logprob: -17.875001907348633
    9. ')' → logprob: -18.000001907348633
    10. '[u' → logprob: -18.000001907348633

Token 860: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7330899238586426
    2. '!=' → logprob: -0.9830899238586426
    3. ']!=' → logprob: -2.3580899238586426
    4. '!=-' → logprob: -3.4830899238586426
    5. ' !=' → logprob: -3.9830899238586426
    6. '>=' → logprob: -7.108089923858643
    7. ']>=' → logprob: -7.858089923858643
    8. ' ]' → logprob: -9.358089447021484
    9. ')!=' → logprob: -9.983089447021484
    10. 'is' → logprob: -10.608089447021484

Token 861: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.04794398322701454
    2. '!=-' → logprob: -3.6729440689086914
    3. '>=' → logprob: -4.422944068908691
    4. ' !=' → logprob: -4.672944068908691
    5. ']!=' → logprob: -10.172944068908691
    6. ')!=' → logprob: -11.797944068908691
    7. '!==' → logprob: -12.172944068908691
    8. ' >=' → logprob: -12.422944068908691
    9. 'is' → logprob: -13.172944068908691
    10. 'and' → logprob: -13.297944068908691

Token 862: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002036595979006961
    2. ' -' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.00020408630371
    4. ' ' → logprob: -20.50020408630371
    5. 'N' → logprob: -20.75020408630371
    6. '-n' → logprob: -20.75020408630371
    7. '       ' → logprob: -21.00020408630371
    8. '  ' → logprob: -21.00020408630371
    9. '           ' → logprob: -21.00020408630371
    10. '
' → logprob: -21.62520408630371

Token 863: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00524075236171484
    2. '-' → logprob: -5.2552409172058105
    3. ' -' → logprob: -12.130240440368652
    4. 'N' → logprob: -14.380240440368652
    5. ' ' → logprob: -14.505240440368652
    6. '   ' → logprob: -15.630240440368652
    7. '```' → logprob: -16.25524139404297
    8. '
' → logprob: -16.75524139404297
    9. '-N' → logprob: -17.81774139404297
    10. '

' → logprob: -18.06774139404297

Token 864: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.006721298210322857
    2. 'and' → logprob: -5.006721496582031
    3. '            ' → logprob: -13.131721496582031
    4. ' ' → logprob: -13.131721496582031
    5. '	and' → logprob: -14.506721496582031
    6. '                ' → logprob: -15.006721496582031
    7. '           ' → logprob: -15.131721496582031
    8. '<|end|>' → logprob: -15.756721496582031
    9. '        ' → logprob: -15.881721496582031
    10. '               ' → logprob: -15.881721496582031

Token 865: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07890267670154572
    2. ' self' → logprob: -2.5789027214050293
    3. '(self' → logprob: -12.328902244567871
    4. '           ' → logprob: -12.453902244567871
    5. '   ' → logprob: -13.203902244567871
    6. '               ' → logprob: -13.703902244567871
    7. '                   ' → logprob: -13.953902244567871
    8. '	self' → logprob: -15.453902244567871
    9. '[self' → logprob: -15.828902244567871
    10. ' ' → logprob: -16.203903198242188

Token 866: '.depth' (ID: 89791)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.05607128515839577
    2. '.depth' → logprob: -2.9310712814331055
    3. ' depth' → logprob: -6.9310712814331055
    4. 'self' → logprob: -8.681071281433105
    5. '(depth' → logprob: -10.431071281433105
    6. '_depth' → logprob: -12.056071281433105
    7. '_DEPTH' → logprob: -13.056071281433105
    8. '-depth' → logprob: -14.181071281433105
    9. '.' → logprob: -14.306071281433105
    10. 'Depth' → logprob: -14.431071281433105

Token 867: '[self' (ID: 33734)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0021999788004904985
    2. 'u' → logprob: -6.127200126647949
    3. '[self' → logprob: -11.62720012664795
    4. 'self' → logprob: -13.62720012664795
    5. '[' → logprob: -13.62720012664795
    6. '```' → logprob: -14.00220012664795
    7. '	u' → logprob: -14.25220012664795
    8. '[
' → logprob: -14.62720012664795
    9. '   ' → logprob: -14.75220012664795
    10. ' u' → logprob: -15.12720012664795

Token 868: '.parent' (ID: 17454)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0007510208524763584
    2. 'u' → logprob: -7.25075101852417
    3. 'parent' → logprob: -10.750751495361328
    4. '[parent' → logprob: -10.875751495361328
    5. '[' → logprob: -15.750751495361328
    6. ' u' → logprob: -16.000751495361328
    7. '	u' → logprob: -16.125751495361328
    8. '[
' → logprob: -16.250751495361328
    9. '[v' → logprob: -16.500751495361328
    10. '[self' → logprob: -16.500751495361328

Token 869: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.00010926496179308742
    2. 'u' → logprob: -9.125109672546387
    3. '(u' → logprob: -16.00010871887207
    4. '```' → logprob: -16.25010871887207
    5. '[' → logprob: -16.62510871887207
    6. '	u' → logprob: -17.12510871887207
    7. '[v' → logprob: -17.25010871887207
    8. '<u' → logprob: -17.37510871887207
    9. ' u' → logprob: -17.50010871887207
    10. '][' → logprob: -18.25010871887207

Token 870: '][' (ID: 2696)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0012313035549595952
    2. '][' → logprob: -6.7512311935424805
    3. 'u' → logprob: -9.87623119354248
    4. '[v' → logprob: -11.87623119354248
    5. '[k' → logprob: -14.25123119354248
    6. '```' → logprob: -14.62623119354248
    7. ']' → logprob: -14.75123119354248
    8. '[' → logprob: -14.75123119354248
    9. '
' → logprob: -15.50123119354248
    10. '   ' → logprob: -15.50123119354248

Token 871: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.022684400901198387
    2. 'u' → logprob: -4.272684574127197
    3. '[k' → logprob: -4.897684574127197
    4. '[u' → logprob: -6.897684574127197
    5. ' k' → logprob: -12.272684097290039
    6. '[' → logprob: -13.772684097290039
    7. '```' → logprob: -13.772684097290039
    8. '   ' → logprob: -14.272684097290039
    9. '	k' → logprob: -14.647684097290039
    10. ']' → logprob: -14.772684097290039

Token 872: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16196273267269135
    2. '[u' → logprob: -1.9119627475738525
    3. ']>=' → logprob: -6.661962509155273
    4. 'u' → logprob: -7.911962509155273
    5. ']<=' → logprob: -9.911962509155273
    6. ']<' → logprob: -10.661962509155273
    7. '[' → logprob: -12.161962509155273
    8. ' ]' → logprob: -12.286962509155273
    9. '[v' → logprob: -13.161962509155273
    10. ']+' → logprob: -13.911962509155273

Token 873: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.0037585131358355284
    2. ' >=' → logprob: -6.128758430480957
    3. '[u' → logprob: -6.503758430480957
    4. 'u' → logprob: -10.253758430480957
    5. ']>=' → logprob: -10.878758430480957
    6. ')>=' → logprob: -12.253758430480957
    7. '[v' → logprob: -12.378758430480957
    8. '≥' → logprob: -12.503758430480957
    9. '[' → logprob: -12.878758430480957
    10. '>' → logprob: -13.253758430480957

Token 874: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.306760805164231e-05
    2. ' self' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.87501335144043
    4. '
' → logprob: -18.62501335144043
    5. '(self' → logprob: -18.75001335144043
    6. '[self' → logprob: -18.75001335144043
    7. '           ' → logprob: -19.00001335144043
    8. '=self' → logprob: -19.12501335144043
    9. '       ' → logprob: -19.50001335144043
    10. '	self' → logprob: -19.87501335144043

Token 875: '.depth' (ID: 89791)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015741224342491478
    2. ' self' → logprob: -9.125157356262207
    3. 'depth' → logprob: -10.000157356262207
    4. '[self' → logprob: -13.000157356262207
    5. '   ' → logprob: -14.500157356262207
    6. '       ' → logprob: -16.500158309936523
    7. '           ' → logprob: -17.000158309936523
    8. ' depth' → logprob: -17.000158309936523
    9. '(self' → logprob: -17.250158309936523
    10. '	self' → logprob: -17.750158309936523

Token 876: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.2519640326499939
    2. 'v' → logprob: -1.5019640922546387
    3. '   ' → logprob: -11.25196361541748
    4. ' v' → logprob: -12.12696361541748
    5. '[' → logprob: -12.62696361541748
    6. '```' → logprob: -12.75196361541748
    7. '(v' → logprob: -13.00196361541748
    8. '[u' → logprob: -13.00196361541748
    9. '	v' → logprob: -13.75196361541748
    10. '           ' → logprob: -13.87696361541748

Token 877: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8134613633155823
    2. '):' → logprob: -1.9384613037109375
    3. '[k' → logprob: -2.1884613037109375
    4. '):
' → logprob: -2.3134613037109375
    5. ':
' → logprob: -2.6884613037109375
    6. '               ' → logprob: -2.9384613037109375
    7. '           ' → logprob: -3.1884613037109375
    8. ']:' → logprob: -4.3134613037109375
    9. '[' → logprob: -5.1884613037109375
    10. '       ' → logprob: -5.3134613037109375

Token 878: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8836734294891357
    2. ':' → logprob: -1.2586734294891357
    3. '           ' → logprob: -2.0086734294891357
    4. 'u' → logprob: -2.2586734294891357
    5. '       ' → logprob: -3.2586734294891357
    6. ' u' → logprob: -4.508673667907715
    7. '):' → logprob: -6.008673667907715
    8. '   ' → logprob: -6.258673667907715
    9. ':
' → logprob: -6.633673667907715
    10. ' :' → logprob: -6.758673667907715

Token 879: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.0041173421777784824
    2. ' u' → logprob: -5.504117488861084
    3. '               ' → logprob: -10.879117012023926
    4. '                   ' → logprob: -11.004117012023926
    5. '	u' → logprob: -12.754117012023926
    6. '           ' → logprob: -15.129117012023926
    7. '   ' → logprob: -15.754117012023926
    8. '[u' → logprob: -18.004117965698242
    9. '                       ' → logprob: -18.004117965698242
    10. '                ' → logprob: -18.504117965698242

Token 880: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602250337600708
    2. ' =' → logprob: -1.9102250337600708
    3. '=self' → logprob: -14.910224914550781
    4. '=k' → logprob: -15.785224914550781
    5. '=u' → logprob: -16.03522491455078
    6. ' ' → logprob: -16.41022491455078
    7. '=
' → logprob: -16.78522491455078
    8. ')' → logprob: -17.53522491455078
    9. ' =
' → logprob: -17.78522491455078
    10. '.=' → logprob: -17.78522491455078

Token 881: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0017030329909175634
    2. ' self' → logprob: -6.376703262329102
    3. '[self' → logprob: -15.376703262329102
    4. '               ' → logprob: -15.626703262329102
    5. '   ' → logprob: -16.0017032623291
    6. '           ' → logprob: -16.0017032623291
    7. '(self' → logprob: -16.2517032623291
    8. 'parent' → logprob: -16.6267032623291
    9. '	self' → logprob: -16.8767032623291
    10. '                   ' → logprob: -17.3767032623291

Token 882: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.011051355861127377
    2. 'parent' → logprob: -4.511051177978516
    3. '.' → logprob: -13.261051177978516
    4. ' parent' → logprob: -13.886051177978516
    5. '[parent' → logprob: -15.011051177978516
    6. '	parent' → logprob: -15.261051177978516
    7. '_parent' → logprob: -16.136051177978516
    8. ' .' → logprob: -16.761051177978516
    9. '.Parent' → logprob: -17.011051177978516
    10. 'Parent' → logprob: -17.136051177978516

Token 883: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.00010950337309623137
    2. 'u' → logprob: -9.125109672546387
    3. '[v' → logprob: -15.250109672546387
    4. '][' → logprob: -15.875109672546387
    5. '[' → logprob: -16.50010871887207
    6. '[user' → logprob: -17.37510871887207
    7. '```' → logprob: -17.50010871887207
    8. '	u' → logprob: -17.87510871887207
    9. ' u' → logprob: -18.12510871887207
    10. '(u' → logprob: -18.87510871887207

Token 884: '][' (ID: 2696)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.00408932426944375
    2. '][' → logprob: -5.50408935546875
    3. 'u' → logprob: -12.00408935546875
    4. '[v' → logprob: -12.50408935546875
    5. '```' → logprob: -15.12908935546875
    6. ']' → logprob: -15.75408935546875
    7. '[' → logprob: -15.87908935546875
    8. '
' → logprob: -16.12908935546875
    9. '   ' → logprob: -16.50408935546875
    10. '}[' → logprob: -16.87908935546875

Token 885: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.3795937522663735e-05
    2. 'u' → logprob: -11.00002384185791
    3. '[k' → logprob: -12.37502384185791
    4. ' k' → logprob: -13.37502384185791
    5. 'v' → logprob: -14.37502384185791
    6. '[u' → logprob: -14.87502384185791
    7. '```' → logprob: -16.250022888183594
    8. '   ' → logprob: -16.375022888183594
    9. ')' → logprob: -16.500022888183594
    10. ']' → logprob: -16.625022888183594

Token 886: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03385811299085617
    2. ']' → logprob: -3.408858060836792
    3. '           ' → logprob: -9.533858299255371
    4. '       ' → logprob: -9.658858299255371
    5. '               ' → logprob: -10.783858299255371
    6. '])' → logprob: -11.408858299255371
    7. '<|end|>' → logprob: -11.408858299255371
    8. '}' → logprob: -12.283858299255371
    9. ' )' → logprob: -12.283858299255371
    10. ')]' → logprob: -12.408858299255371

Token 887: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2177233695983887
    2. ' 
' → logprob: -1.2177233695983887
    3. '       ' → logprob: -2.4677233695983887
    4. '<|end|>' → logprob: -2.5927233695983887
    5. '.' → logprob: -3.3427233695983887
    6. ':' → logprob: -3.4677233695983887
    7. '```' → logprob: -3.4677233695983887
    8. ')' → logprob: -3.4677233695983887
    9. '  
' → logprob: -4.217723369598389
    10. ' ' → logprob: -4.342723369598389

Token 888: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04216068238019943
    2. ' if' → logprob: -3.667160749435425
    3. '   ' → logprob: -4.917160511016846
    4. 'if' (adapté à ' if') → logprob: -6.167160511016846
    5. 's' → logprob: -6.667160511016846
    6. ' ' → logprob: -6.917160511016846
    7. ',' → logprob: -7.167160511016846
    8. ' 
' → logprob: -7.667160511016846
    9. '    ' → logprob: -8.167160987854004
    10. '        
' → logprob: -8.167160987854004

Token 889: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0007105246186256409
    2. ' u' → logprob: -7.250710487365723
    3. '	u' → logprob: -14.750710487365723
    4. '[u' → logprob: -16.37571144104004
    5. '   ' → logprob: -16.87571144104004
    6. '
' → logprob: -18.50071144104004
    7. '(u' → logprob: -18.62571144104004
    8. 'user' → logprob: -18.75071144104004
    9. '       ' → logprob: -19.37571144104004
    10. '```' → logprob: -19.62571144104004

Token 890: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.008618000894784927
    2. ' ==' → logprob: -4.758617877960205
    3. '==
' → logprob: -13.008618354797363
    4. '=' → logprob: -14.008618354797363
    5. '!=' → logprob: -15.508618354797363
    6. ']==' → logprob: -16.008617401123047
    7. ')==' → logprob: -17.383617401123047
    8. '===' → logprob: -17.508617401123047
    9. '```' → logprob: -18.008617401123047
    10. '==-' → logprob: -18.133617401123047

Token 891: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.339278580620885e-06
    2. ' v' → logprob: -13.000001907348633
    3. '	v' → logprob: -21.000001907348633
    4. ')v' → logprob: -23.875001907348633
    5. '   ' → logprob: -24.625001907348633
    6. '```' → logprob: -24.875001907348633
    7. '$v' → logprob: -25.125001907348633
    8. '_v' → logprob: -25.125001907348633
    9. '[v' → logprob: -25.250001907348633
    10. 'vq' → logprob: -25.375001907348633

Token 892: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08517035841941833
    2. ':return' → logprob: -2.710170269012451
    3. ':
' → logprob: -4.335170269012451
    4. ' return' → logprob: -7.085170269012451
    5. '       ' → logprob: -7.960170269012451
    6. 'return' → logprob: -8.21017074584961
    7. '           ' → logprob: -9.08517074584961
    8. ' ' → logprob: -9.58517074584961
    9. '   ' → logprob: -9.83517074584961
    10. ',' → logprob: -9.83517074584961

Token 893: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5229204297065735
    2. ' return' → logprob: -1.0229203701019287
    3. '       ' → logprob: -3.8979203701019287
    4. ':return' → logprob: -4.397920608520508
    5. 'return' → logprob: -4.772920608520508
    6. '   ' → logprob: -6.147920608520508
    7. '	return' → logprob: -6.772920608520508
    8. ':' → logprob: -7.147920608520508
    9. '	       ' → logprob: -7.397920608520508
    10. '		' → logprob: -7.397920608520508

Token 894: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008631822653114796
    2. ' return' → logprob: -4.758631706237793
    3. 'u' → logprob: -11.383631706237793
    4. '       ' → logprob: -12.758631706237793
    5. '           ' → logprob: -13.008631706237793
    6. '{return' → logprob: -14.633631706237793
    7. ':return' → logprob: -16.25863265991211
    8. '	return' → logprob: -16.38363265991211
    9. '
' → logprob: -17.00863265991211
    10. ' u' → logprob: -17.13363265991211

Token 895: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0011720098555088043
    2. 'v' → logprob: -6.751172065734863
    3. ' u' → logprob: -13.251172065734863
    4. ' v' → logprob: -19.876171112060547
    5. '	u' → logprob: -20.126171112060547
    6. '   ' → logprob: -21.376171112060547
    7. '[u' → logprob: -22.501171112060547
    8. '
' → logprob: -22.876171112060547
    9. '<u' → logprob: -23.626171112060547
    10. '```' → logprob: -23.626171112060547

Token 896: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04781262204051018
    2. '
' → logprob: -3.9228127002716064
    3. '<|end|>' → logprob: -4.047812461853027
    4. '        
' → logprob: -5.422812461853027
    5. ' for' → logprob: -6.422812461853027
    6. ' 
' → logprob: -7.172812461853027
    7. '   ' → logprob: -7.547812461853027
    8. '  
' → logprob: -7.797812461853027
    9. 'for' → logprob: -7.922812461853027
    10. '	' → logprob: -8.422812461853027

Token 897: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02364407852292061
    2. 'for' → logprob: -4.023643970489502
    3. ' for' → logprob: -5.273643970489502
    4. '   ' → logprob: -8.39864444732666
    5. '
' → logprob: -9.52364444732666
    6. '```' → logprob: -10.64864444732666
    7. '        
' → logprob: -11.89864444732666
    8. '[' → logprob: -12.02364444732666
    9. '#' → logprob: -12.77364444732666
    10. ',' → logprob: -12.89864444732666

Token 898: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4479113519191742
    2. 'for' (adapté à ' for') → logprob: -1.4479113817214966
    3. '       ' → logprob: -2.072911262512207
    4. '   ' → logprob: -9.072911262512207
    5. '	for' → logprob: -11.322911262512207
    6. '    ' → logprob: -11.822911262512207
    7. '           ' → logprob: -11.947911262512207
    8. '        ' → logprob: -12.572911262512207
    9. '        
' → logprob: -12.947911262512207
    10. '```' → logprob: -12.947911262512207

Token 899: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.7729658540920354e-05
    2. ' k' → logprob: -10.500027656555176
    3. 're' → logprob: -15.875027656555176
    4. '```' → logprob: -18.125028610229492
    5. '   ' → logprob: -18.875028610229492
    6. ' ' → logprob: -18.875028610229492
    7. '	k' → logprob: -19.125028610229492
    8. '
' → logprob: -19.250028610229492
    9. 'r' → logprob: -20.375028610229492
    10. '`' → logprob: -20.375028610229492

Token 900: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009762464091181755
    2. 'in' → logprob: -4.634762287139893
    3. 's' → logprob: -13.13476276397705
    4. '[::-' → logprob: -13.75976276397705
    5. '```' → logprob: -14.25976276397705
    6. 're' → logprob: -14.38476276397705
    7. '
' → logprob: -14.63476276397705
    8. '   ' → logprob: -14.88476276397705
    9. 'd' → logprob: -15.13476276397705
    10. '       ' → logprob: -15.50976276397705

Token 901: ' reversed' (ID: 57184)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -6.704273118884885e-07
    2. ' reversed' → logprob: -14.500000953674316
    3. 'range' → logprob: -16.125
    4. '
' → logprob: -18.625
    5. '   ' → logprob: -20.125
    6. 'reverse' → logprob: -21.0
    7. '	re' → logprob: -21.25
    8. '```' → logprob: -21.875
    9. ' ' → logprob: -22.125
    10. 'r' → logprob: -22.5

Token 902: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -4.596781946020201e-05
    2. 'range' → logprob: -10.000045776367188
    3. '(' → logprob: -14.625045776367188
    4. ' range' → logprob: -16.875045776367188
    5. ' (' → logprob: -18.625045776367188
    6. '	range' → logprob: -18.625045776367188
    7. '(
' → logprob: -19.375045776367188
    8. '(rank' → logprob: -19.875045776367188
    9. '(self' → logprob: -20.250045776367188
    10. '_range' → logprob: -20.500045776367188

Token 903: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.723352049040841e-06
    2. 'self' → logprob: -12.875004768371582
    3. '(' → logprob: -13.500004768371582
    4. '[self' → logprob: -14.125004768371582
    5. '(
' → logprob: -17.375003814697266
    6. ' (' → logprob: -17.375003814697266
    7. '=self' → logprob: -18.500003814697266
    8. ' self' → logprob: -18.625003814697266
    9. '(range' → logprob: -18.750003814697266
    10. 's' → logprob: -19.125003814697266

Token 904: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -7.100059156073257e-05
    2. 'self' → logprob: -9.875070571899414
    3. 'l' → logprob: -10.875070571899414
    4. '.' → logprob: -16.375070571899414
    5. ' .' → logprob: -16.500070571899414
    6. ').' → logprob: -16.750070571899414
    7. '
' → logprob: -16.875070571899414
    8. '.parent' → logprob: -17.000070571899414
    9. ')' → logprob: -17.125070571899414
    10. '(l' → logprob: -17.250070571899414

Token 905: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0015261677326634526
    2. ')):
' → logprob: -7.626526355743408
    3. '()):
' → logprob: -7.751526355743408
    4. '       ' → logprob: -8.00152587890625
    5. '):' → logprob: -8.87652587890625
    6. '():
' → logprob: -9.25152587890625
    7. ']):
' → logprob: -11.00152587890625
    8. '   ' → logprob: -12.12652587890625
    9. '"):
' → logprob: -12.75152587890625
    10. '           ' → logprob: -12.75152587890625

Token 906: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0601394958794117
    2. '       ' → logprob: -3.4351394176483154
    3. '<|end|>' → logprob: -4.0601396560668945
    4. ' if' → logprob: -5.0601396560668945
    5. ':' → logprob: -7.3101396560668945
    6. '        ' → logprob: -7.8101396560668945
    7. '   ' → logprob: -8.060139656066895
    8. '	       ' → logprob: -8.185139656066895
    9. ',' → logprob: -8.810139656066895
    10. '               ' → logprob: -8.810139656066895

Token 907: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6384287476539612
    2. 'if' (adapté à ' if') → logprob: -1.1384286880493164
    3. ' if' → logprob: -1.8884286880493164
    4. '       ' → logprob: -9.138428688049316
    5. '               ' → logprob: -9.513428688049316
    6. '   ' → logprob: -10.013428688049316
    7. '
' → logprob: -11.763428688049316
    8. '```' → logprob: -12.513428688049316
    9. 'for' → logprob: -13.138428688049316
    10. '	if' → logprob: -13.513428688049316

Token 908: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023373709991574287
    2. ' self' → logprob: -3.773373603820801
    3. '(self' → logprob: -9.0233736038208
    4. '   ' → logprob: -12.1483736038208
    5. ' ' → logprob: -13.7733736038208
    6. '[self' → logprob: -14.8983736038208
    7. '
' → logprob: -15.1483736038208
    8. '	self' → logprob: -15.5233736038208
    9. '    ' → logprob: -16.148374557495117
    10. '  ' → logprob: -16.148374557495117

Token 909: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0005547016044147313
    2. 'parent' → logprob: -7.50055456161499
    3. '[parent' → logprob: -13.625555038452148
    4. '.' → logprob: -15.750555038452148
    5. '.user' → logprob: -16.25055503845215
    6. 'self' → logprob: -16.75055503845215
    7. ' .' → logprob: -17.00055503845215
    8. '	parent' → logprob: -17.00055503845215
    9. ',parent' → logprob: -17.00055503845215
    10. '
' → logprob: -17.25055503845215

Token 910: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -5.319370302458992e-06
    2. 'u' → logprob: -12.250005722045898
    3. '[v' → logprob: -14.625005722045898
    4. '```' → logprob: -17.5000057220459
    5. '<u' → logprob: -17.6250057220459
    6. '(u' → logprob: -18.2500057220459
    7. '[' → logprob: -18.5000057220459
    8. '[
' → logprob: -18.7500057220459
    9. '
' → logprob: -18.8750057220459
    10. '[user' → logprob: -19.5000057220459

Token 911: '][' (ID: 2696)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.00864541344344616
    2. '][' → logprob: -5.133645534515381
    3. '[k' → logprob: -6.008645534515381
    4. '[v' → logprob: -8.758645057678223
    5. ')[' → logprob: -10.133645057678223
    6. '```' → logprob: -10.258645057678223
    7. '}[' → logprob: -12.008645057678223
    8. 'u' → logprob: -12.383645057678223
    9. '[' → logprob: -12.383645057678223
    10. '>[' → logprob: -12.883645057678223

Token 912: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0003370118502061814
    2. '[k' → logprob: -8.000336647033691
    3. ' k' → logprob: -14.500336647033691
    4. 'u' → logprob: -15.250336647033691
    5. '{k' → logprob: -15.375336647033691
    6. 'v' → logprob: -15.500336647033691
    7. '[u' → logprob: -16.000337600708008
    8. '[' → logprob: -16.500337600708008
    9. '"k' → logprob: -16.875337600708008
    10. ',k' → logprob: -17.250337600708008

Token 913: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6746183633804321
    2. ']' → logprob: -1.4246183633804321
    3. ']!=' → logprob: -1.7996183633804321
    4. ' !=' → logprob: -2.5496182441711426
    5. '!=-' → logprob: -5.674618244171143
    6. ')!=' → logprob: -6.049618244171143
    7. ')' → logprob: -8.0496187210083
    8. '[' → logprob: -8.4246187210083
    9. '()!=' → logprob: -9.6746187210083
    10. 'and' → logprob: -10.1746187210083

Token 914: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.02910495363175869
    2. ' !=' → logprob: -3.6541049480438232
    3. '!=-' → logprob: -5.904105186462402
    4. 'and' → logprob: -10.779105186462402
    5. '[' → logprob: -11.529105186462402
    6. ')!=' → logprob: -11.654105186462402
    7. ']!=' → logprob: -11.654105186462402
    8. '()!=' → logprob: -11.779105186462402
    9. '```' → logprob: -12.154105186462402
    10. '!==' → logprob: -12.404105186462402

Token 915: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.704273118884885e-07
    2. ' -' → logprob: -14.250000953674316
    3. 'k' → logprob: -17.125
    4. '   ' → logprob: -21.125
    5. 'self' → logprob: -21.5
    6. '−' → logprob: -21.625
    7. '
' → logprob: -21.75
    8. '```' → logprob: -22.0
    9. 'v' → logprob: -22.75
    10. '           ' → logprob: -23.125

Token 916: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003609339939430356
    2. '-' → logprob: -5.6286091804504395
    3. ' ' → logprob: -13.003609657287598
    4. '```' → logprob: -13.003609657287598
    5. ' -' → logprob: -13.128609657287598
    6. '
' → logprob: -14.003609657287598
    7. 'k' → logprob: -15.128609657287598
    8. 'int' → logprob: -15.503609657287598
    9. '   ' → logprob: -15.753609657287598
    10. '-
' → logprob: -16.12860870361328

Token 917: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.048588961362838745
    2. 'and' → logprob: -3.048588991165161
    3. '            ' → logprob: -14.548588752746582
    4. ' ' → logprob: -14.548588752746582
    5. '           ' → logprob: -15.048588752746582
    6. '	and' → logprob: -16.2985897064209
    7. ',' → logprob: -16.6735897064209
    8. ' и' → logprob: -16.9235897064209
    9. '                ' → logprob: -17.2985897064209
    10. '               ' → logprob: -17.4235897064209

Token 918: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08933919668197632
    2. ' self' → logprob: -2.464339256286621
    3. '               ' → logprob: -8.589339256286621
    4. '           ' → logprob: -8.839339256286621
    5. '(self' → logprob: -10.589339256286621
    6. '                   ' → logprob: -11.089339256286621
    7. '   ' → logprob: -12.214339256286621
    8. '            ' → logprob: -12.214339256286621
    9. '[self' → logprob: -12.339339256286621
    10. '              ' → logprob: -12.589339256286621

Token 919: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.20187383890151978
    2. 'parent' → logprob: -1.701873779296875
    3. 'self' → logprob: -7.826873779296875
    4. ' parent' → logprob: -10.451873779296875
    5. '[parent' → logprob: -10.951873779296875
    6. 'u' → logprob: -11.826873779296875
    7. '_parent' → logprob: -12.326873779296875
    8. '	parent' → logprob: -13.576873779296875
    9. ',parent' → logprob: -14.576873779296875
    10. '(parent' → logprob: -14.826873779296875

Token 920: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.00033784625702537596
    2. '[v' → logprob: -8.000337600708008
    3. 'u' → logprob: -13.000337600708008
    4. 'v' → logprob: -16.375337600708008
    5. '(u' → logprob: -17.625337600708008
    6. '```' → logprob: -17.750337600708008
    7. '<u' → logprob: -19.000337600708008
    8. '	u' → logprob: -19.375337600708008
    9. '[user' → logprob: -19.625337600708008
    10. '[' → logprob: -19.625337600708008

Token 921: '][' (ID: 2696)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00802711583673954
    2. '[u' → logprob: -5.258027076721191
    3. '][' → logprob: -6.008027076721191
    4. '[v' → logprob: -8.133027076721191
    5. 'k' → logprob: -10.883027076721191
    6. ')[' → logprob: -11.883027076721191
    7. 's' → logprob: -13.258027076721191
    8. '[
' → logprob: -13.383027076721191
    9. '[' → logprob: -13.758027076721191
    10. '```' → logprob: -13.883027076721191

Token 922: 'k' (ID: 74)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0019461298361420631
    2. '[v' → logprob: -6.876945972442627
    3. 'u' → logprob: -7.626945972442627
    4. 'k' → logprob: -8.376946449279785
    5. '[k' → logprob: -9.251946449279785
    6. '[u' → logprob: -9.376946449279785
    7. ' v' → logprob: -12.876946449279785
    8. '```' → logprob: -13.001946449279785
    9. 'vk' → logprob: -13.126946449279785
    10. '
' → logprob: -13.126946449279785

Token 923: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.49074819684028625
    2. ']!=' → logprob: -1.6157481670379639
    3. ']' → logprob: -1.7407481670379639
    4. ' !=' → logprob: -4.365748405456543
    5. ')!=' → logprob: -7.990748405456543
    6. '[u' → logprob: -7.990748405456543
    7. '[' → logprob: -9.240748405456543
    8. '()!=' → logprob: -9.490748405456543
    9. '```' → logprob: -9.740748405456543
    10. 'u' → logprob: -9.990748405456543

Token 924: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0009448148775845766
    2. ' !=' → logprob: -7.0009446144104
    3. ']!=' → logprob: -11.250945091247559
    4. '()!=' → logprob: -11.500945091247559
    5. ')!=' → logprob: -12.250945091247559
    6. '!==' → logprob: -12.375945091247559
    7. '```' → logprob: -14.375945091247559
    8. '!' → logprob: -15.500945091247559
    9. '!=(' → logprob: -16.125944137573242
    10. '!=-' → logprob: -16.250944137573242

Token 925: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005536287208087742
    2. ' self' → logprob: -7.500553607940674
    3. '   ' → logprob: -15.500554084777832
    4. '           ' → logprob: -15.500554084777832
    5. '       ' → logprob: -16.750553131103516
    6. '(self' → logprob: -16.750553131103516
    7. '
' → logprob: -17.125553131103516
    8. 'parent' → logprob: -17.500553131103516
    9. '	self' → logprob: -17.625553131103516
    10. '               ' → logprob: -18.000553131103516

Token 926: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0007111206650733948
    2. 'parent' → logprob: -7.250710964202881
    3. '[parent' → logprob: -13.750711441040039
    4. '	parent' → logprob: -17.00071144104004
    5. ' .' → logprob: -17.00071144104004
    6. '
' → logprob: -17.50071144104004
    7. '.' → logprob: -18.37571144104004
    8. ' parent' → logprob: -18.62571144104004
    9. ',parent' → logprob: -18.62571144104004
    10. '```' → logprob: -18.75071144104004

Token 927: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.5094070477061905e-05
    2. 'v' → logprob: -11.125015258789062
    3. '[u' → logprob: -15.250015258789062
    4. '(v' → logprob: -17.625015258789062
    5. '```' → logprob: -18.000015258789062
    6. '<v' → logprob: -18.500015258789062
    7. '
' → logprob: -19.125015258789062
    8. '[' → logprob: -19.125015258789062
    9. '[
' → logprob: -19.250015258789062
    10. '	v' → logprob: -20.000015258789062

Token 928: '][' (ID: 2696)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00013405199570115656
    2. '][' → logprob: -9.000134468078613
    3. '[u' → logprob: -11.750134468078613
    4. 'k' → logprob: -13.250134468078613
    5. '```' → logprob: -14.500134468078613
    6. ')[' → logprob: -15.625134468078613
    7. '}[' → logprob: -16.750133514404297
    8. '[' → logprob: -17.000133514404297
    9. '{k' → logprob: -17.375133514404297
    10. ',k' → logprob: -17.875133514404297

Token 929: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.523948907968588e-05
    2. '[k' → logprob: -10.375035285949707
    3. ' k' → logprob: -12.500035285949707
    4. '{k' → logprob: -15.875035285949707
    5. '"k' → logprob: -17.00003433227539
    6. '```' → logprob: -17.12503433227539
    7. '	k' → logprob: -17.25003433227539
    8. ',k' → logprob: -18.00003433227539
    9. '   ' → logprob: -18.25003433227539
    10. '[' → logprob: -18.75003433227539

Token 930: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.718663215637207
    2. '):
' → logprob: -0.843663215637207
    3. ':' → logprob: -3.343663215637207
    4. ']:
' → logprob: -3.843663215637207
    5. '               ' → logprob: -4.093663215637207
    6. '):' → logprob: -5.218663215637207
    7. '           ' → logprob: -6.218663215637207
    8. ']:' → logprob: -8.093663215637207
    9. 'u' → logprob: -8.218663215637207
    10. '):
' → logprob: -8.718663215637207

Token 931: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019894566386938095
    2. '           ' → logprob: -4.144894599914551
    3. 'u' → logprob: -6.519894599914551
    4. ' u' → logprob: -6.644894599914551
    5. '       ' → logprob: -7.644894599914551
    6. ':' → logprob: -8.89489459991455
    7. '   ' → logprob: -9.26989459991455
    8. ':
' → logprob: -9.64489459991455
    9. '                   ' → logprob: -9.76989459991455
    10. ' ' → logprob: -10.51989459991455

Token 932: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.004090747330337763
    2. ' u' → logprob: -5.504090785980225
    3. '                   ' → logprob: -12.004090309143066
    4. '               ' → logprob: -12.129090309143066
    5. '	u' → logprob: -14.254090309143066
    6. '           ' → logprob: -16.129091262817383
    7. '   ' → logprob: -16.754091262817383
    8. ',u' → logprob: -17.629091262817383
    9. '                ' → logprob: -18.754091262817383
    10. '[u' → logprob: -19.254091262817383

Token 933: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575940728187561
    2. '=' → logprob: -0.825940728187561
    3. ',' → logprob: -14.20094108581543
    4. '=u' → logprob: -14.70094108581543
    5. '=k' → logprob: -16.82594108581543
    6. ' ' → logprob: -17.20094108581543
    7. '=
' → logprob: -17.32594108581543
    8. ' =
' → logprob: -17.32594108581543
    9. ')' → logprob: -17.82594108581543
    10. '=

' → logprob: -18.45094108581543

Token 934: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019324433524161577
    2. ' self' → logprob: -6.251932621002197
    3. '[self' → logprob: -13.501932144165039
    4. 'parent' → logprob: -13.501932144165039
    5. '(self' → logprob: -14.376932144165039
    6. '	self' → logprob: -15.626932144165039
    7. '=self' → logprob: -16.87693214416504
    8. '
' → logprob: -17.00193214416504
    9. '   ' → logprob: -17.75193214416504
    10. '```' → logprob: -17.75193214416504

Token 935: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.20142464339733124
    2. 'parent' → logprob: -1.7014245986938477
    3. ' parent' → logprob: -12.201424598693848
    4. '[parent' → logprob: -12.576424598693848
    5. '_parent' → logprob: -13.701424598693848
    6. '	parent' → logprob: -13.951424598693848
    7. ',parent' → logprob: -15.701424598693848
    8. '(parent' → logprob: -15.826424598693848
    9. '
' → logprob: -15.826424598693848
    10. '.' → logprob: -16.326425552368164

Token 936: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -7.576873758807778e-05
    2. 'u' → logprob: -9.625075340270996
    3. '[v' → logprob: -11.625075340270996
    4. '```' → logprob: -14.625075340270996
    5. '][' → logprob: -16.625076293945312
    6. '(u' → logprob: -16.875076293945312
    7. 'v' → logprob: -17.375076293945312
    8. 's' → logprob: -18.375076293945312
    9. '[user' → logprob: -18.625076293945312
    10. '[' → logprob: -18.750076293945312

Token 937: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.16030627489089966
    2. '[k' → logprob: -1.9103062152862549
    3. 'k' → logprob: -10.910305976867676
    4. '[u' → logprob: -11.285305976867676
    5. ']' → logprob: -11.660305976867676
    6. ')[' → logprob: -12.160305976867676
    7. ',k' → logprob: -12.160305976867676
    8. '[' → logprob: -12.285305976867676
    9. ''][' → logprob: -12.410305976867676
    10. ''s' → logprob: -12.535305976867676

Token 938: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -5.512236498361744e-07
    2. '[k' → logprob: -15.250000953674316
    3. ' k' → logprob: -15.500000953674316
    4. '[' → logprob: -17.0
    5. '
' → logprob: -17.0
    6. '```' → logprob: -17.25
    7. 'u' → logprob: -17.875
    8. ']' → logprob: -18.875
    9. '   ' → logprob: -18.875
    10. ')' → logprob: -19.0

Token 939: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4687529504299164
    2. '               ' → logprob: -1.3437529802322388
    3. ')
' → logprob: -2.218752861022949
    4. ';' → logprob: -6.968752861022949
    5. '           ' → logprob: -7.343752861022949
    6. ',' → logprob: -7.468752861022949
    7. '<|end|>' → logprob: -7.593752861022949
    8. ']' → logprob: -7.718752861022949
    9. ')v' → logprob: -7.843752861022949
    10. 'v' → logprob: -8.09375286102295

Token 940: '               ' (ID: 506)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.640038788318634
    2. '               ' → logprob: -1.0150387287139893
    3. ' v' → logprob: -2.3900387287139893
    4. ',v' → logprob: -4.890038967132568
    5. '	v' → logprob: -5.265038967132568
    6. '<v' → logprob: -6.640038967132568
    7. '
' → logprob: -7.015038967132568
    8. '                
' → logprob: -7.140038967132568
    9. ')v' → logprob: -7.515038967132568
    10. '```' → logprob: -8.01503849029541

Token 941: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -1.1994775377388578e-05
    2. ' v' → logprob: -11.500012397766113
    3. '               ' → logprob: -13.250012397766113
    4. '	v' → logprob: -17.000011444091797
    5. ')v' → logprob: -20.000011444091797
    6. '       ' → logprob: -20.125011444091797
    7. ',v' → logprob: -20.250011444091797
    8. '                   ' → logprob: -21.250011444091797
    9. '           ' → logprob: -21.375011444091797
    10. '                ' → logprob: -22.250011444091797

Token 942: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693166732788086
    2. ' =' → logprob: -2.126931667327881
    3. ')' → logprob: -13.376932144165039
    4. '=k' → logprob: -13.876932144165039
    5. '=
' → logprob: -15.376932144165039
    6. ']' → logprob: -15.751932144165039
    7. '=user' → logprob: -15.751932144165039
    8. '=v' → logprob: -15.876932144165039
    9. '=u' → logprob: -16.50193214416504
    10. ' ' → logprob: -16.75193214416504

Token 943: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002615742268972099
    2. ' self' → logprob: -8.250261306762695
    3. '[self' → logprob: -15.625261306762695
    4. '(self' → logprob: -17.500261306762695
    5. '           ' → logprob: -18.125261306762695
    6. '	self' → logprob: -18.750261306762695
    7. '               ' → logprob: -18.750261306762695
    8. 'parent' → logprob: -18.875261306762695
    9. '   ' → logprob: -19.250261306762695
    10. '       ' → logprob: -20.125261306762695

Token 944: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.5759425163269043
    2. 'parent' → logprob: -0.8259425163269043
    3. '[parent' → logprob: -12.950942993164062
    4. ' parent' → logprob: -14.825942993164062
    5. '	parent' → logprob: -15.325942993164062
    6. '_parent' → logprob: -16.575942993164062
    7. '
' → logprob: -17.075942993164062
    8. 'Parent' → logprob: -18.450942993164062
    9. '-parent' → logprob: -18.575942993164062
    10. ',parent' → logprob: -18.700942993164062

Token 945: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.034592388459714e-06
    2. '[u' → logprob: -12.250005722045898
    3. 'v' → logprob: -13.625005722045898
    4. '<v' → logprob: -18.2500057220459
    5. '```' → logprob: -19.2500057220459
    6. ')v' → logprob: -19.5000057220459
    7. '[user' → logprob: -20.6250057220459
    8. '[' → logprob: -20.6250057220459
    9. '(v' → logprob: -20.7500057220459
    10. '][' → logprob: -21.0000057220459

Token 946: '][' (ID: 2696)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -4.60414821645827e-06
    2. '[u' → logprob: -13.125004768371582
    3. '][' → logprob: -13.250004768371582
    4. ')[' → logprob: -15.125004768371582
    5. '[v' → logprob: -15.375004768371582
    6. 'k' → logprob: -15.750004768371582
    7. '```' → logprob: -16.000003814697266
    8. ',k' → logprob: -18.000003814697266
    9. '[' → logprob: -18.375003814697266
    10. '[key' → logprob: -18.500003814697266

Token 947: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.5332478142227046e-05
    2. '[k' → logprob: -11.125015258789062
    3. ' k' → logprob: -14.750015258789062
    4. '{k' → logprob: -16.250015258789062
    5. '[' → logprob: -17.625015258789062
    6. '	k' → logprob: -18.250015258789062
    7. '```' → logprob: -18.875015258789062
    8. '"k' → logprob: -19.375015258789062
    9. '_k' → logprob: -20.000015258789062
    10. ',k' → logprob: -20.250015258789062

Token 948: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013207156443968415
    2. '           ' → logprob: -7.251320838928223
    3. '       ' → logprob: -8.376320838928223
    4. '               ' → logprob: -8.876320838928223
    5. ')
' → logprob: -9.376320838928223
    6. ']' → logprob: -9.376320838928223
    7. '<|end|>' → logprob: -10.376320838928223
    8. ')return' → logprob: -11.501320838928223
    9. '```' → logprob: -12.001320838928223
    10. '')' → logprob: -12.751320838928223

Token 949: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000874539720825851
    2. '	' → logprob: -8.000874519348145
    3. '   ' → logprob: -8.625874519348145
    4. '[' → logprob: -9.375874519348145
    5. '               ' → logprob: -9.500874519348145
    6. '\' → logprob: -10.000874519348145
    7. '\n' → logprob: -10.625874519348145
    8. 'return' → logprob: -10.625874519348145
    9. '\t' → logprob: -10.625874519348145
    10. ')' → logprob: -11.375874519348145

Token 950: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4794631004333496
    2. 'return' (adapté à ' return') → logprob: -0.9794631004333496
    3. ' return' → logprob: -5.22946310043335
    4. '   ' → logprob: -12.104463577270508
    5. '               ' → logprob: -13.104463577270508
    6. '
' → logprob: -13.479463577270508
    7. 'u' → logprob: -13.854463577270508
    8. '	return' → logprob: -14.104463577270508
    9. 'self' → logprob: -14.229463577270508
    10. '#' → logprob: -14.354463577270508

Token 951: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007100477814674377
    2. ' self' → logprob: -7.2507100105285645
    3. '   ' → logprob: -17.125709533691406
    4. 'parent' → logprob: -17.250709533691406
    5. '(self' → logprob: -17.500709533691406
    6. '       ' → logprob: -17.500709533691406
    7. '[self' → logprob: -17.625709533691406
    8. '	self' → logprob: -17.750709533691406
    9. '
' → logprob: -18.875709533691406
    10. '           ' → logprob: -20.375709533691406

Token 952: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0005550591740757227
    2. 'parent' → logprob: -7.500555038452148
    3. '[parent' → logprob: -13.375555038452148
    4. '	parent' → logprob: -15.250555038452148
    5. '_parent' → logprob: -16.00055503845215
    6. ' parent' → logprob: -16.62555503845215
    7. '.' → logprob: -17.25055503845215
    8. '
' → logprob: -17.50055503845215
    9. 'Parent' → logprob: -17.87555503845215
    10. ',parent' → logprob: -18.12555503845215

Token 953: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.5107177862082608e-05
    2. 'u' → logprob: -10.625024795532227
    3. '[v' → logprob: -14.375024795532227
    4. '```' → logprob: -17.250024795532227
    5. ' u' → logprob: -17.875024795532227
    6. '(u' → logprob: -17.875024795532227
    7. '[' → logprob: -18.375024795532227
    8. '	u' → logprob: -18.875024795532227
    9. '[user' → logprob: -19.250024795532227
    10. '<u' → logprob: -19.500024795532227

Token 954: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07015416771173477
    2. '][' → logprob: -2.9451541900634766
    3. '0' → logprob: -4.195154190063477
    4. '[u' → logprob: -10.945154190063477
    5. 'u' → logprob: -11.445154190063477
    6. '[k' → logprob: -11.570154190063477
    7. 'k' → logprob: -12.070154190063477
    8. ']' → logprob: -12.070154190063477
    9. ')[' → logprob: -12.320154190063477
    10. '1' → logprob: -12.320154190063477

Token 955: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. 'k' → logprob: -19.875
    4. '۰' → logprob: -20.125
    5. '1' → logprob: -20.75
    6. '０' → logprob: -21.125
    7. '00' → logprob: -21.25
    8. '
' → logprob: -21.375
    9. '   ' → logprob: -21.5
    10. '[' → logprob: -21.75

Token 956: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41162770986557007
    2. ']' → logprob: -1.1616277694702148
    3. '<|end|>' → logprob: -3.786627769470215
    4. '}' → logprob: -6.536627769470215
    5. '])' → logprob: -9.536627769470215
    6. '   ' → logprob: -10.411627769470215
    7. '<|end|>' → logprob: -10.411627769470215
    8. ')
' → logprob: -10.411627769470215
    9. ')return' → logprob: -10.661627769470215
    10. '```' → logprob: -10.661627769470215

Token 957: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 958: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 959: ' dist' (ID: 3601)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.5795787572860718
    2. 'dist' → logprob: -0.8295787572860718
    3. ' dist' → logprob: -6.579578876495361
    4. 'get' → logprob: -6.954578876495361
    5. ' distance' → logprob: -7.079578876495361
    6. 'cost' → logprob: -7.829578876495361
    7. 'depth' → logprob: -11.079578399658203
    8. ' get' → logprob: -11.329578399658203
    9. '_dist' → logprob: -12.079578399658203
    10. 'query' → logprob: -12.579578399658203

Token 960: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08163940906524658
    2. '(' → logprob: -2.581639289855957
    3. '(u' → logprob: -6.081639289855957
    4. '(
' → logprob: -8.331639289855957
    5. ' (' → logprob: -8.956639289855957
    6. '   ' → logprob: -10.581639289855957
    7. 'self' → logprob: -10.956639289855957
    8. ',' → logprob: -11.581639289855957
    9. '<|end|>' → logprob: -12.456639289855957
    10. '(s' → logprob: -12.581639289855957

Token 961: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2927491366863251
    2. '(self' → logprob: -1.5427491664886475
    3. '(u' → logprob: -4.042748928070068
    4. '(' → logprob: -4.417748928070068
    5. ')(' → logprob: -5.417748928070068
    6. 'self' → logprob: -6.417748928070068
    7. ')' → logprob: -7.042748928070068
    8. '):' → logprob: -7.292748928070068
    9. ',u' → logprob: -7.292748928070068
    10. ' (' → logprob: -8.042749404907227

Token 962: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.003984604496508837
    2. 'self' → logprob: -6.003984451293945
    3. ' u' → logprob: -6.503984451293945
    4. ' self' → logprob: -12.128984451293945
    5. 'a' → logprob: -12.753984451293945
    6. '   ' → logprob: -13.378984451293945
    7. '	u' → logprob: -16.003984451293945
    8. 'x' → logprob: -16.253984451293945
    9. ' ' → logprob: -16.253984451293945
    10. '       ' → logprob: -17.378984451293945

Token 963: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033844609279185534
    2. ' ,' → logprob: -5.753384590148926
    3. ':' → logprob: -8.628384590148926
    4. ',a' → logprob: -11.753384590148926
    5. '):' → logprob: -11.878384590148926
    6. ',b' → logprob: -12.128384590148926
    7. ':int' → logprob: -12.878384590148926
    8. '   ' → logprob: -13.628384590148926
    9. ' :' → logprob: -13.878384590148926
    10. ',int' → logprob: -14.003384590148926

Token 964: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.05656437948346138
    2. ' int' → logprob: -3.1815643310546875
    3. 'b' → logprob: -4.4315643310546875
    4. ' b' → logprob: -7.0565643310546875
    5. 'self' → logprob: -7.9315643310546875
    6. '   ' → logprob: -8.681564331054688
    7. ':int' → logprob: -9.056564331054688
    8. ' self' → logprob: -10.931564331054688
    9. ')' → logprob: -11.306564331054688
    10. ',int' → logprob: -11.806564331054688

Token 965: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.313314952421933e-05
    2. ' ,' → logprob: -9.875062942504883
    3. ',b' → logprob: -11.375062942504883
    4. ',a' → logprob: -15.750062942504883
    5. ',int' → logprob: -17.125062942504883
    6. 'b' → logprob: -17.500062942504883
    7. ',
' → logprob: -18.375062942504883
    8. '   ' → logprob: -18.375062942504883
    9. ' ' → logprob: -19.000062942504883
    10. 'a' → logprob: -19.250062942504883

Token 966: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006716079078614712
    2. ' b' → logprob: -5.006716251373291
    3. '   ' → logprob: -14.131715774536133
    4. ' ' → logprob: -18.256715774536133
    5. '	b' → logprob: -18.631715774536133
    6. '  ' → logprob: -18.881715774536133
    7. '    ' → logprob: -19.006715774536133
    8. '       ' → logprob: -21.256715774536133
    9. '    
' → logprob: -21.756715774536133
    10. ' ' → logprob: -21.756715774536133

Token 967: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3886992335319519
    2. ')' → logprob: -1.1386992931365967
    3. '):
' → logprob: -6.388699054718018
    4. ',' → logprob: -9.388699531555176
    5. ':' → logprob: -10.513699531555176
    6. ' ):' → logprob: -11.013699531555176
    7. ' )' → logprob: -11.638699531555176
    8. '):
' → logprob: -12.263699531555176
    9. '):

' → logprob: -12.763699531555176
    10. ')=' → logprob: -14.013699531555176

Token 968: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004311460361350328
    2. ' int' → logprob: -7.750431060791016
    3. '[int' → logprob: -15.625431060791016
    4. ')' → logprob: -16.000431060791016
    5. ':int' → logprob: -16.500431060791016
    6. '   ' → logprob: -17.125431060791016
    7. '(int' → logprob: -17.500431060791016
    8. '	int' → logprob: -17.500431060791016
    9. '<int' → logprob: -17.625431060791016
    10. '=int' → logprob: -18.125431060791016

Token 969: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03405480831861496
    2. '):' → logprob: -3.784054756164551
    3. '):
' → logprob: -4.534054756164551
    4. '):
' → logprob: -11.53405475616455
    5. ')->' → logprob: -13.65905475616455
    6. '):

' → logprob: -13.78405475616455
    7. ':' → logprob: -13.90905475616455
    8. ' )' → logprob: -14.15905475616455
    9. ')
' → logprob: -15.78405475616455
    10. ')`' → logprob: -16.659055709838867

Token 970: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10387075692415237
    2. ' return' → logprob: -2.4788708686828613
    3. 'return' → logprob: -4.228870868682861
    4. '   ' → logprob: -8.603870391845703
    5. '
' → logprob: -10.978870391845703
    6. ')' → logprob: -11.603870391845703
    7. ' =' → logprob: -11.603870391845703
    8. ':' → logprob: -12.103870391845703
    9. '=' → logprob: -12.353870391845703
    10. '	return' → logprob: -12.353870391845703

Token 971: ' c' (ID: 274)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06899648904800415
    2. 'd' → logprob: -3.0689964294433594
    3. ' return' → logprob: -3.9439964294433594
    4. '   ' → logprob: -8.06899642944336
    5. ' d' → logprob: -8.19399642944336
    6. 'da' → logprob: -8.81899642944336
    7. '       ' → logprob: -9.94399642944336
    8. 'depth' → logprob: -11.19399642944336
    9. 'l' → logprob: -11.94399642944336
    10. 'cd' → logprob: -12.06899642944336

Token 972: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7543370127677917
    2. ' =' → logprob: -0.8793370127677917
    3. 'ost' → logprob: -2.2543370723724365
    4. 'a' → logprob: -5.004336833953857
    5. '1' → logprob: -6.629336833953857
    6. '=self' → logprob: -8.004337310791016
    7. '_a' → logprob: -8.254337310791016
    8. '   ' → logprob: -8.504337310791016
    9. 'os' → logprob: -8.879337310791016
    10. '=a' → logprob: -9.004337310791016

Token 973: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002517158165574074
    2. ' self' → logprob: -6.002517223358154
    3. '       ' → logprob: -10.377516746520996
    4. '(self' → logprob: -12.252516746520996
    5. '   ' → logprob: -12.377516746520996
    6. '[self' → logprob: -14.502516746520996
    7. '           ' → logprob: -15.377516746520996
    8. '	self' → logprob: -15.377516746520996
    9. ' ' → logprob: -15.752516746520996
    10. '
' → logprob: -16.877517700195312

Token 974: '.l' (ID: 1000)
  Prédit: '.cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.cost' → logprob: -0.10140760987997055
    2. 'ost' → logprob: -2.351407527923584
    3. 'cost' → logprob: -6.851407527923584
    4. 'OST' → logprob: -9.226408004760742
    5. '.depth' → logprob: -10.226408004760742
    6. ' costs' → logprob: -13.976408004760742
    7. 'st' → logprob: -14.226408004760742
    8. 'Costs' → logprob: -14.351408004760742
    9. '成本' → logprob: -14.351408004760742
    10. ' cost' → logprob: -14.851408004760742

Token 975: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -0.03805388882756233
    2. 'a' → logprob: -3.5380539894104004
    3. 'ost' → logprob: -5.1630539894104
    4. 'cost' → logprob: -7.0380539894104
    5. '   ' → logprob: -7.6630539894104
    6. 'ast' → logprob: -8.538053512573242
    7. '```' → logprob: -8.913053512573242
    8. '[' → logprob: -9.163053512573242
    9. 'cs' → logprob: -9.163053512573242
    10. 'c' → logprob: -9.663053512573242

Token 976: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -13.37500286102295
    3. ' (' → logprob: -13.75000286102295
    4. 'a' → logprob: -15.62500286102295
    5. '(
' → logprob: -16.875003814697266
    6. '
' → logprob: -17.750003814697266
    7. 'def' → logprob: -18.375003814697266
    8. ',' → logprob: -18.750003814697266
    9. ')' → logprob: -19.250003814697266
    10. '(A' → logprob: -19.250003814697266

Token 977: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011778471525758505
    2. ',b' → logprob: -6.751177787780762
    3. ' ,' → logprob: -12.251177787780762
    4. 'b' → logprob: -12.876177787780762
    5. ',
' → logprob: -15.501177787780762
    6. ',c' → logprob: -17.126178741455078
    7. ' b' → logprob: -17.501178741455078
    8. ')' → logprob: -18.751178741455078
    9. '
' → logprob: -19.001178741455078
    10. 'a' → logprob: -19.251178741455078

Token 978: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.008614808320999146
    2. ' b' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.508614540100098
    4. ')b' → logprob: -15.758614540100098
    5. ')' → logprob: -17.008615493774414
    6. '       ' → logprob: -18.008615493774414
    7. ' ' → logprob: -18.383615493774414
    8. '	b' → logprob: -19.133615493774414
    9. '  ' → logprob: -19.883615493774414
    10. 'c' → logprob: -20.008615493774414

Token 979: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47415655851364136
    2. ')' → logprob: -0.9741565585136414
    3. '       ' → logprob: -10.099156379699707
    4. ' )
' → logprob: -10.724156379699707
    5. ')
' → logprob: -11.974156379699707
    6. ' )' → logprob: -12.099156379699707
    7. '   ' → logprob: -13.224156379699707
    8. ')return' → logprob: -13.974156379699707
    9. ')+' → logprob: -14.349156379699707
    10. ')

' → logprob: -14.974156379699707

Token 980: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10071985423564911
    2. 'return' → logprob: -2.350719928741455
    3. ' return' → logprob: -7.725719928741455
    4. '
' → logprob: -9.600719451904297
    5. '   ' → logprob: -13.475719451904297
    6. '	return' → logprob: -14.600719451904297
    7. ')' → logprob: -14.975719451904297
    8. '{return' → logprob: -15.225719451904297
    9. ')return' → logprob: -15.350719451904297
    10. '```' → logprob: -15.475719451904297

Token 981: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0011737978784367442
    2. '       ' → logprob: -7.001173973083496
    3. ' return' → logprob: -8.251173973083496
    4. '   ' → logprob: -14.501173973083496
    5. '
' → logprob: -14.626173973083496
    6. '{return' → logprob: -16.00117301940918
    7. '	return' → logprob: -17.12617301940918
    8. 'ret' → logprob: -17.12617301940918
    9. ')return' → logprob: -17.12617301940918
    10. ':return' → logprob: -17.12617301940918

Token 982: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019555140752345324
    2. '(self' → logprob: -6.251955509185791
    3. ' self' → logprob: -10.62695598602295
    4. '[self' → logprob: -13.25195598602295
    5. '       ' → logprob: -14.25195598602295
    6. '
' → logprob: -16.751955032348633
    7. '	self' → logprob: -17.001955032348633
    8. '=self' → logprob: -17.751955032348633
    9. '   ' → logprob: -17.876955032348633
    10. ' (' → logprob: -18.626955032348633

Token 983: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -0.006760010030120611
    2. '.depth' → logprob: -5.006760120391846
    3. 'cost' → logprob: -10.256759643554688
    4. '.dist' → logprob: -11.631759643554688
    5. 'depth' → logprob: -15.256759643554688
    6. '.distance' → logprob: -15.506759643554688
    7. '.weights' → logprob: -16.506759643554688
    8. ' .' → logprob: -16.756759643554688
    9. '.' → logprob: -17.506759643554688
    10. '成本' → logprob: -17.756759643554688

Token 984: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.9361264946837764e-07
    2. '[s' → logprob: -16.125
    3. '[a' → logprob: -17.75
    4. '[' → logprob: -18.75
    5. '{s' → logprob: -19.25
    6. '```' → logprob: -19.75
    7. ' s' → logprob: -20.25
    8. 'cost' → logprob: -20.25
    9. 'S' → logprob: -20.375
    10. 'с' → logprob: -20.5

Token 985: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -6.2729995988775045e-06
    2. 'a' → logprob: -12.000006675720215
    3. '(a' → logprob: -19.1250057220459
    4. '[
' → logprob: -20.1250057220459
    5. '[b' → logprob: -20.2500057220459
    6. '[A' → logprob: -20.6250057220459
    7. '[c' → logprob: -20.6250057220459
    8. '	a' → logprob: -20.6250057220459
    9. '#a' → logprob: -21.1250057220459
    10. '
' → logprob: -21.1250057220459

Token 986: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04184279590845108
    2. ' +' → logprob: -3.2918426990509033
    3. '+b' → logprob: -5.916842937469482
    4. '+c' → logprob: -6.916842937469482
    5. '+self' → logprob: -10.041842460632324
    6. ')' → logprob: -10.291842460632324
    7. ')+' → logprob: -11.416842460632324
    8. ']+' → logprob: -11.916842460632324
    9. ']' → logprob: -12.291842460632324
    10. '+B' → logprob: -12.666842460632324

Token 987: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018342850729823112
    2. ' +' → logprob: -4.018342971801758
    3. '+self' → logprob: -9.018342971801758
    4. '+c' → logprob: -9.768342971801758
    5. '+b' → logprob: -11.268342971801758
    6. '+B' → logprob: -14.768342971801758
    7. '＋' → logprob: -14.893342971801758
    8. '+
' → logprob: -15.018342971801758
    9. '+C' → logprob: -15.518342971801758
    10. '+r' → logprob: -15.643342971801758

Token 988: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00010950337309623137
    2. ' self' → logprob: -9.125109672546387
    3. '       ' → logprob: -14.625109672546387
    4. '(self' → logprob: -17.00010871887207
    5. '[self' → logprob: -17.62510871887207
    6. 's' → logprob: -18.25010871887207
    7. '   ' → logprob: -18.25010871887207
    8. '=self' → logprob: -19.25010871887207
    9. '           ' → logprob: -19.37510871887207
    10. '
' → logprob: -19.37510871887207

Token 989: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -0.3868836760520935
    2. 'cost' → logprob: -1.1368837356567383
    3. ' costs' → logprob: -11.636883735656738
    4. ' cost' → logprob: -12.761883735656738
    5. '成本' → logprob: -14.636883735656738
    6. 'Costs' → logprob: -15.761883735656738
    7. '.' → logprob: -16.386882781982422
    8. '_cost' → logprob: -16.386882781982422
    9. '-cost' → logprob: -16.636882781982422
    10. '(cost' → logprob: -17.011882781982422

Token 990: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.583550642360933e-05
    2. 'cost' → logprob: -10.500036239624023
    3. '[c' → logprob: -12.125036239624023
    4. '[s' → logprob: -14.125036239624023
    5. ' costs' → logprob: -14.500036239624023
    6. 'c' → logprob: -14.875036239624023
    7. '[a' → logprob: -14.875036239624023
    8. '[' → logprob: -15.750036239624023
    9. '[b' → logprob: -16.000036239624023
    10. '   ' → logprob: -16.125036239624023

Token 991: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -4.961759259458631e-06
    2. 'b' → logprob: -12.250004768371582
    3. '[
' → logprob: -16.5000057220459
    4. '[c' → logprob: -17.6250057220459
    5. '[' → logprob: -17.7500057220459
    6. ' [' → logprob: -19.2500057220459
    7. '```' → logprob: -20.0000057220459
    8. '	b' → logprob: -20.6250057220459
    9. '(b' → logprob: -20.7500057220459
    10. ',b' → logprob: -21.1250057220459

Token 992: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759458541870117
    2. ' -' → logprob: -0.8259458541870117
    3. ' ' → logprob: -12.325945854187012
    4. '   ' → logprob: -13.575945854187012
    5. '  ' → logprob: -15.325945854187012
    6. '       ' → logprob: -15.575945854187012
    7. '−' → logprob: -15.950945854187012
    8. ' ' → logprob: -17.450946807861328
    9. '    ' → logprob: -17.450946807861328
    10. '     ' → logprob: -17.575946807861328

Token 993: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10020710527896881
    2. ' -' → logprob: -2.3502070903778076
    3. '   ' → logprob: -15.475207328796387
    4. '       ' → logprob: -16.47520637512207
    5. ' ' → logprob: -16.60020637512207
    6. '-
' → logprob: -17.10020637512207
    7. '-self' → logprob: -17.47520637512207
    8. '−' → logprob: -17.60020637512207
    9. '```' → logprob: -18.60020637512207
    10. ' ' → logprob: -19.10020637512207

Token 994: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001772638875991106
    2. ' ' → logprob: -6.376772403717041
    3. 'self' → logprob: -10.0017728805542
    4. '(' → logprob: -10.8767728805542
    5. ' (' → logprob: -13.0017728805542
    6. '(self' → logprob: -13.2517728805542
    7. '   ' → logprob: -13.5017728805542
    8. ' self' → logprob: -14.6267728805542
    9. '  ' → logprob: -15.7517728805542
    10. '(
' → logprob: -16.876771926879883

Token 995: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018983196059707552
    2. ' ' → logprob: -9.375189781188965
    3. 'self' → logprob: -9.625189781188965
    4. '(' → logprob: -10.250189781188965
    5. '(self' → logprob: -13.250189781188965
    6. '   ' → logprob: -13.875189781188965
    7. ' (' → logprob: -15.375189781188965
    8. '(
' → logprob: -15.625189781188965
    9. ' self' → logprob: -16.25019073486328
    10. '  ' → logprob: -17.12519073486328

Token 996: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6099388003349304
    2. '*self' → logprob: -1.3599388599395752
    3. ' *' → logprob: -1.6099388599395752
    4. 'self' → logprob: -10.234938621520996
    5. '   ' → logprob: -13.609938621520996
    6. ' ' → logprob: -14.359938621520996
    7. '*(' → logprob: -14.734938621520996
    8. ' ' → logprob: -14.859938621520996
    9. ' self' → logprob: -14.859938621520996
    10. '
' → logprob: -15.109938621520996

Token 997: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.848420551046729e-05
    2. ' self' → logprob: -9.7500581741333
    3. '(self' → logprob: -17.125059127807617
    4. '
' → logprob: -17.250059127807617
    5. '   ' → logprob: -18.125059127807617
    6. '       ' → logprob: -18.125059127807617
    7. '[self' → logprob: -18.250059127807617
    8. '	self' → logprob: -18.375059127807617
    9. '=self' → logprob: -19.750059127807617
    10. '*self' → logprob: -20.250059127807617

Token 998: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -0.0024783893022686243
    2. 'cost' → logprob: -6.00247859954834
    3. '.c' → logprob: -13.25247859954834
    4. ' .' → logprob: -15.00247859954834
    5. ' costs' → logprob: -15.25247859954834
    6. '.' → logprob: -16.002477645874023
    7. ' cost' → logprob: -16.627477645874023
    8. 'Costs' → logprob: -16.752477645874023
    9. '成本' → logprob: -17.752477645874023
    10. '
' → logprob: -18.002477645874023

Token 999: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014398663304746151
    2. 'cost' → logprob: -4.639398574829102
    3. '.cost' → logprob: -5.389398574829102
    4. ' costs' → logprob: -9.764398574829102
    5. 'sts' → logprob: -13.139398574829102
    6. '.s' → logprob: -13.264398574829102
    7. '(cost' → logprob: -13.389398574829102
    8. '   ' → logprob: -13.889398574829102
    9. 'ost' → logprob: -14.264398574829102
    10. 'c' → logprob: -14.764398574829102

Token 1000: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -7.896309739408025e-07
    2. 'c' → logprob: -14.125000953674316
    3. '[
' → logprob: -19.25
    4. '[' → logprob: -19.875
    5. ' [' → logprob: -20.125
    6. '(c' → logprob: -22.125
    7. '
' → logprob: -23.0
    8. '	c' → logprob: -23.375
    9. '[self' → logprob: -23.5
    10. '```' → logprob: -23.875

Token 1001: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03497278690338135
    2. ')' → logprob: -3.409972667694092
    3. '])' → logprob: -7.534972667694092
    4. '<|end|>' → logprob: -7.534972667694092
    5. '[c' → logprob: -8.78497314453125
    6. ' ]' → logprob: -10.03497314453125
    7. '[' → logprob: -11.03497314453125
    8. '[a' → logprob: -12.03497314453125
    9. '   ' → logprob: -12.15997314453125
    10. ']
' → logprob: -12.15997314453125

Token 1002: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1003: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1004: ' length' (ID: 5517)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.092454433441162
    2. 'get' → logprob: -1.592454433441162
    3. 'is' → logprob: -2.592454433441162
    4. 'parent' → logprob: -2.717454433441162
    5. 'ancestor' → logprob: -2.717454433441162
    6. 'query' → logprob: -2.842454433441162
    7. 'depth' → logprob: -3.092454433441162
    8. 'path' → logprob: -3.092454433441162
    9. 'jump' → logprob: -3.967454433441162
    10. 'sub' → logprob: -4.217454433441162

Token 1005: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03427554666996002
    2. '(' → logprob: -3.409275531768799
    3. '(a' → logprob: -8.284276008605957
    4. '=' → logprob: -9.409276008605957
    5. '(
' → logprob: -9.659276008605957
    6. 'def' → logprob: -9.784276008605957
    7. ' (' → logprob: -9.909276008605957
    8. ' =' → logprob: -10.659276008605957
    9. '   ' → logprob: -10.784276008605957
    10. '()' → logprob: -11.159276008605957

Token 1006: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004106542561203241
    2. '(' → logprob: -6.254106521606445
    3. ')' → logprob: -7.254106521606445
    4. ',' → logprob: -7.629106521606445
    5. 'self' → logprob: -7.879106521606445
    6. '):' → logprob: -8.129106521606445
    7. ')(' → logprob: -8.629106521606445
    8. 'def' → logprob: -10.004106521606445
    9. ' (' → logprob: -10.254106521606445
    10. '(a' → logprob: -11.129106521606445

Token 1007: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3679536283016205
    2. 'self' → logprob: -1.2429536581039429
    3. ' a' → logprob: -4.742953777313232
    4. ' self' → logprob: -4.992953777313232
    5. 'u' → logprob: -6.117953777313232
    6. ')' → logprob: -7.242953777313232
    7. 'n' → logprob: -8.992953300476074
    8. ' u' → logprob: -9.117953300476074
    9. '):' → logprob: -9.242953300476074
    10. 'node' → logprob: -9.367953300476074

Token 1008: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003403495065867901
    2. ':' → logprob: -8.375340461730957
    3. ' ,' → logprob: -9.750340461730957
    4. ':int' → logprob: -10.875340461730957
    5. '   ' → logprob: -11.125340461730957
    6. ',int' → logprob: -11.875340461730957
    7. ',a' → logprob: -12.500340461730957
    8. ',b' → logprob: -12.500340461730957
    9. '):' → logprob: -13.750340461730957
    10. 'def' → logprob: -14.375340461730957

Token 1009: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.018170546740293503
    2. ' int' → logprob: -4.018170356750488
    3. ':int' → logprob: -11.643170356750488
    4. '(int' → logprob: -12.393170356750488
    5. 'a' → logprob: -13.393170356750488
    6. '[int' → logprob: -13.518170356750488
    7. '   ' → logprob: -13.768170356750488
    8. 'self' → logprob: -14.268170356750488
    9. '=int' → logprob: -14.268170356750488
    10. 'def' → logprob: -14.518170356750488

Token 1010: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004007600946351886
    2. ',b' → logprob: -8.50040054321289
    3. ' ,' → logprob: -9.00040054321289
    4. ',int' → logprob: -10.62540054321289
    5. '   ' → logprob: -10.75040054321289
    6. ':' → logprob: -11.62540054321289
    7. ':int' → logprob: -11.87540054321289
    8. ',a' → logprob: -12.25040054321289
    9. 'def' → logprob: -12.50040054321289
    10. ',
' → logprob: -14.37540054321289

Token 1011: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04302065819501877
    2. ' b' → logprob: -3.168020725250244
    3. '   ' → logprob: -10.918020248413086
    4. ' ' → logprob: -14.043020248413086
    5. '    ' → logprob: -14.293020248413086
    6. '       ' → logprob: -14.418020248413086
    7. '  ' → logprob: -14.668020248413086
    8. '           ' → logprob: -14.918020248413086
    9. '	b' → logprob: -16.043020248413086
    10. ' ' → logprob: -16.043020248413086

Token 1012: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2749900221824646
    2. '):
' → logprob: -1.5249900817871094
    3. ':' → logprob: -3.8999900817871094
    4. ')' → logprob: -6.149990081787109
    5. '):
' → logprob: -8.77499008178711
    6. ',' → logprob: -9.27499008178711
    7. ':int' → logprob: -9.39999008178711
    8. '   ' → logprob: -10.14999008178711
    9. '):

' → logprob: -11.02499008178711
    10. ' ):' → logprob: -11.39999008178711

Token 1013: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005242414306849241
    2. ' int' → logprob: -5.255242347717285
    3. 'b' → logprob: -12.130242347717285
    4. ')' → logprob: -14.005242347717285
    5. '   ' → logprob: -14.005242347717285
    6. '1' → logprob: -14.630242347717285
    7. '(int' → logprob: -14.755242347717285
    8. ':int' → logprob: -15.255242347717285
    9. ' b' → logprob: -15.755242347717285
    10. 'a' → logprob: -15.755242347717285

Token 1014: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20408466458320618
    2. '):
' → logprob: -1.7040846347808838
    3. ')' → logprob: -5.954084873199463
    4. '):
' → logprob: -9.704084396362305
    5. '):

' → logprob: -12.329084396362305
    6. '   ' → logprob: -13.329084396362305
    7. ',' → logprob: -13.454084396362305
    8. ')=' → logprob: -13.704084396362305
    9. ' ):' → logprob: -13.829084396362305
    10. ':' → logprob: -14.829084396362305

Token 1015: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009517362341284752
    2. 'return' → logprob: -5.009517192840576
    3. ' return' → logprob: -5.884517192840576
    4. '   ' → logprob: -11.259517669677734
    5. '	return' → logprob: -14.134517669677734
    6. ':' → logprob: -14.509517669677734
    7. ':return' → logprob: -14.509517669677734
    8. '	' → logprob: -14.634517669677734
    9. '```' → logprob: -14.759517669677734
    10. ' ' → logprob: -15.884517669677734

Token 1016: ' c' (ID: 274)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.006141965277493
    2. '       ' → logprob: -5.2561421394348145
    3. ' return' → logprob: -7.0061421394348145
    4. '```' → logprob: -14.756141662597656
    5. '   ' → logprob: -15.006141662597656
    6. 'def' → logprob: -15.506141662597656
    7. 'c' (adapté à ' c') → logprob: -16.006141662597656
    8. '	return' → logprob: -16.006141662597656
    9. 'self' → logprob: -16.006141662597656
    10. 'd' → logprob: -16.131141662597656

Token 1017: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0380435548722744
    2. '=' → logprob: -3.28804349899292
    3. '=self' → logprob: -13.788043975830078
    4. '=c' → logprob: -14.413043975830078
    5. ')' → logprob: -15.288043975830078
    6. ' ' → logprob: -16.413043975830078
    7. '   ' → logprob: -17.038043975830078
    8. 'c' → logprob: -17.288043975830078
    9. ':' → logprob: -17.288043975830078
    10. ',' → logprob: -17.663043975830078

Token 1018: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889022678136826
    2. ' self' → logprob: -2.578890323638916
    3. '(self' → logprob: -15.828889846801758
    4. '[self' → logprob: -15.953889846801758
    5. '	self' → logprob: -16.328889846801758
    6. 'a' → logprob: -16.703889846801758
    7. '=self' → logprob: -17.328889846801758
    8. '
' → logprob: -17.828889846801758
    9. 'l' → logprob: -18.578889846801758
    10. ' ' → logprob: -18.703889846801758

Token 1019: '.l' (ID: 1000)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0036372500471770763
    2. '.l' → logprob: -5.628637313842773
    3. 'a' → logprob: -10.503637313842773
    4. 'lc' → logprob: -12.003637313842773
    5. 'la' → logprob: -13.503637313842773
    6. '	l' → logprob: -14.003637313842773
    7. ' l' → logprob: -14.253637313842773
    8. 'c' → logprob: -15.253637313842773
    9. ',l' → logprob: -15.878637313842773
    10. '```' → logprob: -16.378637313842773

Token 1020: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -1.8193366486229934e-05
    2. 'a' → logprob: -11.625018119812012
    3. 'c' → logprob: -11.750018119812012
    4. '   ' → logprob: -14.000018119812012
    5. 'cat' → logprob: -15.750018119812012
    6. 'l' → logprob: -16.625019073486328
    7. '
' → logprob: -17.000019073486328
    8. 'class' → logprob: -17.250019073486328
    9. '```' → logprob: -17.375019073486328
    10. 'oca' → logprob: -18.250019073486328

Token 1021: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.625
    3. 'a' → logprob: -18.125
    4. ' (' → logprob: -18.75
    5. '(
' → logprob: -20.125
    6. '(self' → logprob: -20.125
    7. '   ' → logprob: -22.125
    8. ' a' → logprob: -22.25
    9. ',' → logprob: -22.5
    10. '[a' → logprob: -23.125

Token 1022: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004236435634084046
    2. ',a' → logprob: -8.250423431396484
    3. ' ,' → logprob: -10.125423431396484
    4. '(a' → logprob: -10.125423431396484
    5. ',b' → logprob: -10.250423431396484
    6. 'a' → logprob: -10.250423431396484
    7. ',c' → logprob: -12.875423431396484
    8. '[a' → logprob: -12.875423431396484
    9. ')' → logprob: -13.375423431396484
    10. '),' → logprob: -13.625423431396484

Token 1023: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009125363430939615
    2. ' b' → logprob: -7.000912666320801
    3. 'a' → logprob: -13.7509126663208
    4. ' a' → logprob: -19.750911712646484
    5. ' ' → logprob: -19.875911712646484
    6. '	b' → logprob: -21.125911712646484
    7. '   ' → logprob: -21.250911712646484
    8. '
' → logprob: -21.375911712646484
    9. '           ' → logprob: -23.000911712646484
    10. '    ' → logprob: -23.000911712646484

Token 1024: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03809576854109764
    2. ')' → logprob: -3.288095712661743
    3. '       ' → logprob: -10.163095474243164
    4. ')
' → logprob: -11.288095474243164
    5. ')return' → logprob: -14.163095474243164
    6. ' )
' → logprob: -14.413095474243164
    7. 'return' → logprob: -14.663095474243164
    8. '   ' → logprob: -14.788095474243164
    9. ')`
' → logprob: -14.913095474243164
    10. ')c' → logprob: -15.038095474243164

Token 1025: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20153817534446716
    2. 'return' → logprob: -1.7015382051467896
    3. ' return' → logprob: -9.7015380859375
    4. '   ' → logprob: -9.7015380859375
    5. '
' → logprob: -13.5765380859375
    6. '	return' → logprob: -13.9515380859375
    7. 'def' → logprob: -15.5765380859375
    8. 'd' → logprob: -16.8265380859375
    9. '	' → logprob: -16.8265380859375
    10. '```' → logprob: -17.4515380859375

Token 1026: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005588700296357274
    2. '       ' → logprob: -7.500558853149414
    3. ' return' → logprob: -12.250558853149414
    4. '   ' → logprob: -14.375558853149414
    5. '
' → logprob: -14.875558853149414
    6. '```' → logprob: -15.625558853149414
    7. '	return' → logprob: -17.875558853149414
    8. '``' → logprob: -18.750558853149414
    9. '        
' → logprob: -19.000558853149414
    10. 'depth' → logprob: -19.000558853149414

Token 1027: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001202850602567196
    2. '(self' → logprob: -6.7512030601501465
    3. ' self' → logprob: -10.626202583312988
    4. '       ' → logprob: -11.751202583312988
    5. '
' → logprob: -15.501202583312988
    6. '   ' → logprob: -16.251203536987305
    7. '[self' → logprob: -16.376203536987305
    8. ' (' → logprob: -17.126203536987305
    9. '	self' → logprob: -17.751203536987305
    10. '1' → logprob: -17.876203536987305

Token 1028: '.depth' (ID: 89791)
  Prédit: '.depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -8.959636033978313e-05
    2. 'depth' → logprob: -10.000089645385742
    3. '.dist' → logprob: -10.625089645385742
    4. '.cost' → logprob: -10.875089645385742
    5. '.distance' → logprob: -14.375089645385742
    6. '.length' → logprob: -15.875089645385742
    7. '.dep' → logprob: -16.250089645385742
    8. '_DEPTH' → logprob: -18.375089645385742
    9. '.de' → logprob: -18.375089645385742
    10. '.' → logprob: -18.500089645385742

Token 1029: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.001034595537930727
    2. 'a' → logprob: -6.876034736633301
    3. '(a' → logprob: -14.5010347366333
    4. ' a' → logprob: -15.0010347366333
    5. ' [' → logprob: -15.3760347366333
    6. '[' → logprob: -15.7510347366333
    7. '[c' → logprob: -15.8760347366333
    8. '[b' → logprob: -16.126033782958984
    9. '[u' → logprob: -16.376033782958984
    10. '```' → logprob: -16.376033782958984

Token 1030: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.33409005403518677
    2. '+' → logprob: -1.334089994430542
    3. ')' → logprob: -4.084090232849121
    4. ']' → logprob: -5.959090232849121
    5. ')+' → logprob: -7.334090232849121
    6. ']+' → logprob: -8.334090232849121
    7. '[a' → logprob: -9.584090232849121
    8. ' )' → logprob: -9.834090232849121
    9. '[' → logprob: -10.209090232849121
    10. ' ' → logprob: -10.334090232849121

Token 1031: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00889322068542242
    2. ' +' → logprob: -4.758893013000488
    3. '+self' → logprob: -8.258893013000488
    4. '+b' → logprob: -11.383893013000488
    5. '+
' → logprob: -12.633893013000488
    6. '+c' → logprob: -13.258893013000488
    7. '-' → logprob: -13.758893013000488
    8. '+m' → logprob: -14.758893013000488
    9. '+B' → logprob: -14.758893013000488
    10. '+d' → logprob: -15.133893013000488

Token 1032: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4740777611732483
    2. 'self' → logprob: -0.9740777611732483
    3. '(self' → logprob: -15.099078178405762
    4. ' ' → logprob: -15.474078178405762
    5. '	self' → logprob: -16.849077224731445
    6. '1' → logprob: -16.849077224731445
    7. '[self' → logprob: -16.974077224731445
    8. '   ' → logprob: -17.599077224731445
    9. '
' → logprob: -18.099077224731445
    10. ' 
' → logprob: -18.224077224731445

Token 1033: '.depth' (ID: 89791)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.009765299037098885
    2. '.depth' → logprob: -4.634765148162842
    3. ' depth' → logprob: -11.884765625
    4. '
' → logprob: -14.009765625
    5. '(depth' → logprob: -14.509765625
    6. '.' → logprob: -15.259765625
    7. 'def' → logprob: -15.384765625
    8. '_depth' → logprob: -15.509765625
    9. ' ' → logprob: -16.384765625
    10. '
' → logprob: -16.634765625

Token 1034: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.4974866644479334e-05
    2. 'b' → logprob: -11.375015258789062
    3. '[c' → logprob: -12.625015258789062
    4. '	b' → logprob: -17.625015258789062
    5. '[
' → logprob: -17.625015258789062
    6. '   ' → logprob: -17.875015258789062
    7. '```' → logprob: -18.125015258789062
    8. '[a' → logprob: -18.375015258789062
    9. ' [' → logprob: -18.500015258789062
    10. '[' → logprob: -18.625015258789062

Token 1035: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0011717714369297028
    2. '-' → logprob: -6.751171588897705
    3. ' ' → logprob: -13.501172065734863
    4. '       ' → logprob: -16.501171112060547
    5. ' -
' → logprob: -16.626171112060547
    6. '   ' → logprob: -17.376171112060547
    7. ' –' → logprob: -18.001171112060547
    8. ' −' → logprob: -18.251171112060547
    9. ' ' → logprob: -18.751171112060547
    10. '−' → logprob: -19.251171112060547

Token 1036: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10020947456359863
    2. '-' → logprob: -2.3502094745635986
    3. '       ' → logprob: -13.72520923614502
    4. ' ' → logprob: -13.97520923614502
    5. '   ' → logprob: -14.22520923614502
    6. ' -
' → logprob: -16.225210189819336
    7. '  ' → logprob: -17.225210189819336
    8. '           ' → logprob: -17.225210189819336
    9. '-
' → logprob: -17.725210189819336
    10. '[' → logprob: -17.975210189819336

Token 1037: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011791547294706106
    2. ' ' → logprob: -6.751179218292236
    3. '(' → logprob: -11.751178741455078
    4. ' (' → logprob: -14.626178741455078
    5. '   ' → logprob: -14.751178741455078
    6. '           ' → logprob: -16.251178741455078
    7. '       ' → logprob: -16.626178741455078
    8. '               ' → logprob: -17.376178741455078
    9. '1' → logprob: -17.876178741455078
    10. '    ' → logprob: -18.501178741455078

Token 1038: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.491498531133402e-06
    2. '(' → logprob: -12.250009536743164
    3. ' ' → logprob: -12.750009536743164
    4. '   ' → logprob: -14.250009536743164
    5. '           ' → logprob: -14.500009536743164
    6. '       ' → logprob: -15.250009536743164
    7. '               ' → logprob: -15.500009536743164
    8. '                   ' → logprob: -16.500009536743164
    9. '[' → logprob: -18.250009536743164
    10. '             ' → logprob: -18.375009536743164

Token 1039: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.038268689066171646
    2. '*' → logprob: -3.288268804550171
    3. '*self' → logprob: -8.41326904296875
    4. '   ' → logprob: -12.53826904296875
    5. ' ' → logprob: -14.78826904296875
    6. ' ' → logprob: -15.28826904296875
    7. ' *
' → logprob: -15.41326904296875
    8. '*c' → logprob: -15.53826904296875
    9. '[self' → logprob: -15.66326904296875
    10. '       ' → logprob: -15.78826904296875

Token 1040: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.166338137816638e-05
    2. ' self' → logprob: -10.375031471252441
    3. '
' → logprob: -15.500031471252441
    4. '       ' → logprob: -16.500032424926758
    5. '   ' → logprob: -18.250032424926758
    6. '	self' → logprob: -18.750032424926758
    7. '(self' → logprob: -19.625032424926758
    8. '[self' → logprob: -19.750032424926758
    9. '           ' → logprob: -19.875032424926758
    10. ' ' → logprob: -20.625032424926758

Token 1041: '.depth' (ID: 89791)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.5759599804878235
    2. '.depth' → logprob: -0.8259599804878235
    3. ' depth' → logprob: -10.825960159301758
    4. '_depth' → logprob: -15.450960159301758
    5. '_DEPTH' → logprob: -15.575960159301758
    6. '.' → logprob: -16.825960159301758
    7. '(depth' → logprob: -16.825960159301758
    8. 'Depth' → logprob: -16.825960159301758
    9. '-depth' → logprob: -16.950960159301758
    10. '
' → logprob: -17.075960159301758

Token 1042: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.306760805164231e-05
    2. 'c' → logprob: -11.25001335144043
    3. '[' → logprob: -17.50001335144043
    4. '[
' → logprob: -18.12501335144043
    5. ' [' → logprob: -20.50001335144043
    6. '(c' → logprob: -21.62501335144043
    7. '   ' → logprob: -22.12501335144043
    8. '	c' → logprob: -22.50001335144043
    9. '
' → logprob: -22.62501335144043
    10. '```' → logprob: -23.25001335144043

Token 1043: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033105581533163786
    2. '<|end|>' → logprob: -5.753310680389404
    3. '}' → logprob: -9.878310203552246
    4. ')
' → logprob: -10.128310203552246
    5. ']' → logprob: -11.503310203552246
    6. '
' → logprob: -11.503310203552246
    7. '```' → logprob: -11.503310203552246
    8. ')return' → logprob: -12.753310203552246
    9. '()' → logprob: -13.128310203552246
    10. '<|end|>' → logprob: -13.628310203552246

Token 1044: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6272547841072083
    2. 'def' → logprob: -1.6272547245025635
    3. '<|end|>' → logprob: -2.3772547245025635
    4. '       ' → logprob: -2.3772547245025635
    5. ':' → logprob: -3.7522547245025635
    6. ')' → logprob: -4.502254962921143
    7. '#' → logprob: -4.752254962921143
    8. '    ' → logprob: -4.877254962921143
    9. '<|end|>' → logprob: -5.252254962921143
    10. ' ' → logprob: -5.627254962921143

Token 1045: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07224780321121216
    2. 'main' → logprob: -3.4472477436065674
    3. ' solve' → logprob: -3.6972477436065674
    4. 'solve' → logprob: -5.6972479820251465
    5. ' factorial' → logprob: -5.9472479820251465
    6. ' pow' → logprob: -6.4472479820251465
    7. ' dfs' → logprob: -6.9472479820251465
    8. ' gcd' → logprob: -7.1972479820251465
    9. 'pow' → logprob: -7.3222479820251465
    10. ' fen' → logprob: -8.322247505187988

Token 1046: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.4259644558478612e-05
    2. '():
' → logprob: -11.375014305114746
    3. '()' → logprob: -13.500014305114746
    4. ' ():' → logprob: -13.500014305114746
    5. '(' → logprob: -18.75001335144043
    6. '():
' → logprob: -19.00001335144043
    7. '().' → logprob: -20.12501335144043
    8. '()->' → logprob: -20.50001335144043
    9. '():

' → logprob: -21.37501335144043
    10. '_' → logprob: -21.37501335144043

Token 1047: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021366903092712164
    2. 'n' → logprob: -9.000213623046875
    3. ' n' → logprob: -10.375213623046875
    4. '(n' → logprob: -10.625213623046875
    5. '    
' → logprob: -11.375213623046875
    6. '    ' → logprob: -11.500213623046875
    7. '```' → logprob: -12.250213623046875
    8. '	n' → logprob: -12.875213623046875
    9. '   ' → logprob: -13.750213623046875
    10. 'N' → logprob: -13.875213623046875

Token 1048: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2713204026222229
    2. ' n' → logprob: -1.5213203430175781
    3. 'N' (adapté à ' N') → logprob: -4.146320343017578
    4. ' N' → logprob: -6.521320343017578
    5. '   ' → logprob: -6.646320343017578
    6. ' pass' → logprob: -7.896320343017578
    7. '    ' → logprob: -9.146320343017578
    8. 'pass' → logprob: -10.271320343017578
    9. '	n' → logprob: -10.396320343017578
    10. ' ' → logprob: -11.271320343017578

Token 1049: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13130269944667816
    2. ' =' → logprob: -2.38130259513855
    3. '=' → logprob: -3.50630259513855
    4. ',N' → logprob: -8.381302833557129
    5. ' ,' → logprob: -9.006302833557129
    6. '=int' → logprob: -9.381302833557129
    7. ',n' → logprob: -10.006302833557129
    8. '   ' → logprob: -10.131302833557129
    9. ' ' → logprob: -11.256302833557129
    10. '<|end|>' → logprob: -11.506302833557129

Token 1050: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.7441162467002869
    2. 'K' → logprob: -0.9941162467002869
    3. 'M' → logprob: -1.8691163063049316
    4. ' K' → logprob: -8.494115829467773
    5. ' Q' → logprob: -8.869115829467773
    6. ' M' → logprob: -9.119115829467773
    7. '=' → logprob: -10.119115829467773
    8. 'D' → logprob: -11.869115829467773
    9. ' =' → logprob: -12.119115829467773
    10. 'q' → logprob: -12.494115829467773

Token 1051: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005234002135694027
    2. ' =' → logprob: -5.2552337646484375
    3. ',' → logprob: -15.880233764648438
    4. '=N' → logprob: -17.630233764648438
    5. '=input' → logprob: -18.005233764648438
    6. ')' → logprob: -18.255233764648438
    7. ')=' → logprob: -18.255233764648438
    8. '＝' → logprob: -18.630233764648438
    9. '=sys' → logprob: -18.880233764648438
    10. '=int' → logprob: -19.505233764648438

Token 1052: ' I' (ID: 357)
  Prédit: 'ILI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ILI' → logprob: -0.14071093499660492
    2. 'map' → logprob: -2.1407108306884766
    3. 'ILLI' → logprob: -5.015710830688477
    4. ' map' → logprob: -5.265710830688477
    5. 'ILL' → logprob: -7.640710830688477
    6. 'IL' → logprob: -8.015710830688477
    7. 'II' → logprob: -8.515710830688477
    8. 'I' → logprob: -8.890710830688477
    9. 'IIl' → logprob: -9.140710830688477
    10. 'ILO' → logprob: -9.265710830688477

Token 1053: 'LI' (ID: 14313)
  Prédit: 'LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.0030075348913669586
    2. 'L' → logprob: -6.128007411956787
    3. 'I' → logprob: -7.128007411956787
    4. ' =' → logprob: -11.503007888793945
    5. '=' → logprob: -11.878007888793945
    6. ' LI' → logprob: -13.503007888793945
    7. 'NI' → logprob: -15.503007888793945
    8. 'IL' → logprob: -15.628007888793945
    9. 'LL' → logprob: -15.628007888793945
    10. 'N' → logprob: -16.003007888793945

Token 1054: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.8889261304575484e-06
    2. ' ()' → logprob: -13.500003814697266
    3. '()
' → logprob: -14.000003814697266
    4. '();' → logprob: -14.125003814697266
    5. '(' → logprob: -15.125003814697266
    6. '().' → logprob: -15.750003814697266
    7. '(),' → logprob: -16.000003814697266
    8. '()\' → logprob: -17.000003814697266
    9. '()>' → logprob: -17.250003814697266
    10. '())' → logprob: -17.625003814697266

Token 1055: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02486279048025608
    2. '
' → logprob: -3.899862766265869
    3. '    
' → logprob: -6.899862766265869
    4. '()' → logprob: -7.524862766265869
    5. '[' → logprob: -7.649862766265869
    6. '<|end|>' → logprob: -7.774862766265869
    7. ')' → logprob: -8.149863243103027
    8. '[]' → logprob: -8.399863243103027
    9. 'def' → logprob: -8.899863243103027
    10. ',' → logprob: -9.149863243103027

Token 1056: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.5220268964767456
    2. 'graph' → logprob: -1.8970268964767456
    3. 'tree' → logprob: -2.022027015686035
    4. 'edges' → logprob: -2.897027015686035
    5. 'G' → logprob: -4.147027015686035
    6. 'g' → logprob: -4.397027015686035
    7. 'L' → logprob: -5.022027015686035
    8. '   ' → logprob: -5.022027015686035
    9. 'N' → logprob: -5.397027015686035
    10. 'ls' → logprob: -5.522027015686035

Token 1057: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -0.5911737680435181
    2. ' =' → logprob: -1.466173768043518
    3. 'ist' → logprob: -2.0911736488342285
    4. 'ine' → logprob: -3.2161736488342285
    5. 'c' → logprob: -4.3411736488342285
    6. '=' → logprob: -4.8411736488342285
    7. 'ines' → logprob: -4.8411736488342285
    8. 'en' → logprob: -5.2161736488342285
    9. '   ' → logprob: -5.5911736488342285
    10. 'e' → logprob: -6.3411736488342285

Token 1058: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14327889680862427
    2. '=' → logprob: -2.0182788372039795
    3. '_obj' → logprob: -8.018279075622559
    4. '_solver' → logprob: -9.643279075622559
    5. 'obj' → logprob: -10.018279075622559
    6. '_instance' → logprob: -10.143279075622559
    7. '_tree' → logprob: -10.643279075622559
    8. 'tree' → logprob: -10.893279075622559
    9. '=L' → logprob: -11.143279075622559
    10. 'solver' → logprob: -11.143279075622559

Token 1059: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0015023599844425917
    2. ' L' → logprob: -6.501502513885498
    3. ' ' → logprob: -18.876502990722656
    4. '   ' → logprob: -19.376502990722656
    5. '=L' → logprob: -19.626502990722656
    6. '	L' → logprob: -19.876502990722656
    7. 'l' → logprob: -20.376502990722656
    8. '>L' → logprob: -21.001502990722656
    9. '(L' → logprob: -21.251502990722656
    10. '  ' → logprob: -21.251502990722656

Token 1060: 'CA' (ID: 6781)
  Prédit: 'CA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' → logprob: -3.1424973713001236e-05
    2. 'C' → logprob: -10.500031471252441
    3. 'ca' → logprob: -13.750031471252441
    4. ' CA' → logprob: -14.125031471252441
    5. '   ' → logprob: -14.125031471252441
    6. '(C' → logprob: -16.000030517578125
    7. 'c' → logprob: -16.125030517578125
    8. '(' → logprob: -16.125030517578125
    9. 'A' → logprob: -16.375030517578125
    10. ' ' → logprob: -16.750030517578125

Token 1061: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00020389800192788243
    2. 'N' → logprob: -8.500204086303711
    3. '(' → logprob: -15.000204086303711
    4. '(
' → logprob: -17.50020408630371
    5. '[N' → logprob: -18.12520408630371
    6. '   ' → logprob: -18.37520408630371
    7. '
' → logprob: -18.62520408630371
    8. ' N' → logprob: -18.87520408630371
    9. 'L' → logprob: -19.12520408630371
    10. ' (' → logprob: -19.25020408630371

Token 1062: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004082078114151955
    2. ')
' → logprob: -5.504082202911377
    3. '   ' → logprob: -12.629081726074219
    4. ')
' → logprob: -14.879081726074219
    5. ' )' → logprob: -17.00408172607422
    6. ')

' → logprob: -17.25408172607422
    7. '))' → logprob: -18.00408172607422
    8. '),' → logprob: -18.62908172607422
    9. ')#' → logprob: -18.62908172607422
    10. ' ' → logprob: -18.87908172607422

Token 1063: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019018957391381264
    2. 'for' → logprob: -8.625189781188965
    3. ' for' → logprob: -11.500189781188965
    4. '	for' → logprob: -14.625189781188965
    5. '
' → logprob: -16.87519073486328
    6. '    
' → logprob: -17.37519073486328
    7. '<|end|>' → logprob: -18.12519073486328
    8. '```' → logprob: -18.37519073486328
    9. '   ' → logprob: -19.62519073486328
    10. '       ' → logprob: -19.75019073486328

Token 1064: ' edges' (ID: 22569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019653895869851112
    2. ' for' → logprob: -6.251965522766113
    3. '   ' → logprob: -10.251965522766113
    4. '	for' → logprob: -13.376965522766113
    5. '
' → logprob: -17.751964569091797
    6. '    
' → logprob: -20.126964569091797
    7. '[' → logprob: -20.376964569091797
    8. '_for' → logprob: -20.376964569091797
    9. '```' → logprob: -20.626964569091797
    10. ' ' → logprob: -21.751964569091797

Token 1065: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05340767651796341
    2. ' =' → logprob: -3.053407669067383
    3. 'for' → logprob: -5.428407669067383
    4. '=[]' → logprob: -8.553407669067383
    5. ' for' → logprob: -9.678407669067383
    6. '=
' → logprob: -9.803407669067383
    7. '.' → logprob: -10.803407669067383
    8. '=[]
' → logprob: -10.928407669067383
    9. ':' → logprob: -11.428407669067383
    10. '   ' → logprob: -11.553407669067383

Token 1066: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3198155164718628
    2. 'ILLI' → logprob: -1.3198155164718628
    3. 'ILL' → logprob: -5.819815635681152
    4. '[]' → logprob: -6.819815635681152
    5. '[I' → logprob: -7.194815635681152
    6. ' [' → logprob: -7.569815635681152
    7. '[
' → logprob: -8.194815635681152
    8. 'ILLE' → logprob: -8.694815635681152
    9. 'ILI' → logprob: -8.819815635681152
    10. 'IL' → logprob: -8.819815635681152

Token 1067: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02986191026866436
    2. ' for' → logprob: -3.5298619270324707
    3. ']' → logprob: -10.029861450195312
    4. '   ' → logprob: -10.529861450195312
    5. '()' → logprob: -11.029861450195312
    6. '
' → logprob: -11.154861450195312
    7. ',' → logprob: -12.779861450195312
    8. ')' → logprob: -13.279861450195312
    9. '	for' → logprob: -13.529861450195312
    10. '<|end|>' → logprob: -14.029861450195312

Token 1068: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0002637199067976326
    2. ' in' → logprob: -8.750264167785645
    3. ' _' → logprob: -9.750264167785645
    4. 'in' → logprob: -10.250264167785645
    5. 'range' → logprob: -12.375264167785645
    6. '_
' → logprob: -12.875264167785645
    7. '_range' → logprob: -12.875264167785645
    8. ' range' → logprob: -13.625264167785645
    9. '_=' → logprob: -14.750264167785645
    10. '_in' → logprob: -16.000263214111328

Token 1069: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10195442289113998
    2. ' range' → logprob: -2.351954460144043
    3. ' in' → logprob: -7.351954460144043
    4. 'in' → logprob: -7.476954460144043
    5. '_' → logprob: -7.601954460144043
    6. '_range' → logprob: -11.351954460144043
    7. '(range' → logprob: -11.851954460144043
    8. '_N' → logprob: -12.476954460144043
    9. 'N' → logprob: -12.601954460144043
    10. '
' → logprob: -12.726954460144043

Token 1070: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.7697225252486533e-06
    2. ' range' → logprob: -12.500003814697266
    3. '_range' → logprob: -18.250003814697266
    4. '(range' → logprob: -18.250003814697266
    5. '
' → logprob: -19.250003814697266
    6. '   ' → logprob: -19.250003814697266
    7. '_' → logprob: -19.875003814697266
    8. 'N' → logprob: -20.375003814697266
    9. '	range' → logprob: -21.125003814697266
    10. ' ' → logprob: -21.375003814697266

Token 1071: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.04860043153166771
    2. 'N' → logprob: -3.048600435256958
    3. 'range' → logprob: -12.298600196838379
    4. '(' → logprob: -12.798600196838379
    5. ' N' → logprob: -13.548600196838379
    6. '
' → logprob: -13.673600196838379
    7. '   ' → logprob: -14.048600196838379
    8. '(n' → logprob: -14.548600196838379
    9. '_N' → logprob: -14.923600196838379
    10. 'n' → logprob: -15.173600196838379

Token 1072: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6266865134239197
    2. ']
' → logprob: -1.1266865730285645
    3. ')]' → logprob: -2.1266865730285645
    4. ')]
' → logprob: -3.8766865730285645
    5. ')' → logprob: -6.6266865730285645
    6. ']

' → logprob: -9.126686096191406
    7. ']
' → logprob: -10.126686096191406
    8. '()]
' → logprob: -10.376686096191406
    9. ')
' → logprob: -10.501686096191406
    10. '()]' → logprob: -10.876686096191406

Token 1073: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3210563063621521
    2. 'for' → logprob: -2.071056365966797
    3. ' for' → logprob: -2.071056365966797
    4. '
' → logprob: -3.821056365966797
    5. '<|end|>' → logprob: -7.946056365966797
    6. '	for' → logprob: -8.821056365966797
    7. '    
' → logprob: -9.696056365966797
    8. ' ' → logprob: -12.071056365966797
    9. '  
' → logprob: -12.071056365966797
    10. ')' → logprob: -12.321056365966797

Token 1074: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2326464056968689
    2. '   ' → logprob: -1.7326464653015137
    3. ' for' → logprob: -3.4826464653015137
    4. '	for' → logprob: -10.732645988464355
    5. '    
' → logprob: -13.607645988464355
    6. '
' → logprob: -14.232645988464355
    7. '  ' → logprob: -15.482645988464355
    8. '```' → logprob: -15.607645988464355
    9. ' ' → logprob: -15.732645988464355
    10. '    ' → logprob: -16.857646942138672

Token 1075: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.620622712536715e-05
    2. ' _' → logprob: -10.375045776367188
    3. '_i' → logprob: -11.875045776367188
    4. 'i' → logprob: -11.875045776367188
    5. 'range' → logprob: -15.500045776367188
    6. '_=' → logprob: -15.500045776367188
    7. ' in' → logprob: -15.750045776367188
    8. '_range' → logprob: -16.125045776367188
    9. ' range' → logprob: -16.125045776367188
    10. ' i' → logprob: -16.250045776367188

Token 1076: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04557322710752487
    2. 'in' → logprob: -3.1705732345581055
    3. '_' → logprob: -6.0455732345581055
    4. 'range' → logprob: -8.670573234558105
    5. ' ' → logprob: -11.170573234558105
    6. ' range' → logprob: -11.295573234558105
    7. ' _' → logprob: -13.545573234558105
    8. '  ' → logprob: -14.295573234558105
    9. 'i' → logprob: -14.670573234558105
    10. 'n' → logprob: -15.420573234558105

Token 1077: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.1637164789135568e-05
    2. ' range' → logprob: -11.375011444091797
    3. '(range' → logprob: -17.125011444091797
    4. '
' → logprob: -18.000011444091797
    5. 'r' → logprob: -18.250011444091797
    6. 'rang' → logprob: -18.250011444091797
    7. '	range' → logprob: -18.500011444091797
    8. 'IL' → logprob: -19.250011444091797
    9. 'ILI' → logprob: -19.375011444091797
    10. '_' → logprob: -19.500011444091797

Token 1078: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -8.208653162000701e-05
    2. '(' → logprob: -9.750082015991211
    3. 'N' → logprob: -11.000082015991211
    4. ' (' → logprob: -12.875082015991211
    5. 'range' → logprob: -13.875082015991211
    6. '(n' → logprob: -13.875082015991211
    7. '(Q' → logprob: -14.125082015991211
    8. '(
' → logprob: -14.375082015991211
    9. '(range' → logprob: -15.000082015991211
    10. '   ' → logprob: -15.500082015991211

Token 1079: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1002502366900444
    2. ' -' → logprob: -2.350250244140625
    3. '   ' → logprob: -10.475250244140625
    4. ' ' → logprob: -11.475250244140625
    5. '1' → logprob: -12.975250244140625
    6. '  ' → logprob: -13.475250244140625
    7. ')' → logprob: -14.725250244140625
    8. '
' → logprob: -15.100250244140625
    9. '()-' → logprob: -15.350250244140625
    10. '):
' → logprob: -16.100250244140625

Token 1080: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. ')' → logprob: -16.250009536743164
    4. '```' → logprob: -18.000009536743164
    5. '
' → logprob: -18.625009536743164
    6. '   ' → logprob: -18.750009536743164
    7. '１' → logprob: -19.125009536743164
    8. '=' → logprob: -19.187509536743164
    9. '2' → logprob: -19.437509536743164
    10. '0' → logprob: -19.437509536743164

Token 1081: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16259050369262695
    2. '):' → logprob: -1.912590503692627
    3. ':' → logprob: -6.662590503692627
    4. ':
' → logprob: -7.787590503692627
    5. '():
' → logprob: -8.287590026855469
    6. ',' → logprob: -8.787590026855469
    7. ')' → logprob: -8.912590026855469
    8. '   ' → logprob: -9.787590026855469
    9. ' ):
' → logprob: -10.912590026855469
    10. '():' → logprob: -11.537590026855469

Token 1082: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48633480072021484
    2. 'a' → logprob: -1.6113348007202148
    3. '   ' → logprob: -2.111334800720215
    4. ' a' → logprob: -3.236334800720215
    5. 'u' → logprob: -4.111334800720215
    6. ' u' → logprob: -4.861334800720215
    7. 'x' → logprob: -8.361334800720215
    8. 'b' → logprob: -8.986334800720215
    9. ' s' → logprob: -9.111334800720215
    10. '	a' → logprob: -9.736334800720215

Token 1083: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.029770394787192345
    2. 'u' → logprob: -3.5297703742980957
    3. ' a' → logprob: -11.154770851135254
    4. ' u' → logprob: -12.529770851135254
    5. 'x' → logprob: -13.904770851135254
    6. '   ' → logprob: -14.029770851135254
    7. 'A' → logprob: -16.404769897460938
    8. '	a' → logprob: -16.779769897460938
    9. 'v' → logprob: -17.529769897460938
    10. '```' → logprob: -17.654769897460938

Token 1084: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005453478079289198
    2. ',b' → logprob: -5.255453586578369
    3. ' ,' → logprob: -8.630453109741211
    4. 'b' → logprob: -10.130453109741211
    5. ' b' → logprob: -15.255453109741211
    6. ',v' → logprob: -15.255453109741211
    7. '_,' → logprob: -15.505453109741211
    8. ',
' → logprob: -15.755453109741211
    9. ',n' → logprob: -16.38045310974121
    10. ',int' → logprob: -16.75545310974121

Token 1085: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001584850688232109
    2. ' b' → logprob: -8.750158309936523
    3. ',b' → logprob: -20.000158309936523
    4. 'c' → logprob: -22.625158309936523
    5. '>b' → logprob: -22.625158309936523
    6. '*b' → logprob: -22.875158309936523
    7. 'bc' → logprob: -23.000158309936523
    8. ',' → logprob: -23.250158309936523
    9. ' ' → logprob: -23.250158309936523
    10. ')b' → logprob: -23.375158309936523

Token 1086: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14309924840927124
    2. ' =' → logprob: -2.018099308013916
    3. ',' → logprob: -7.768099308013916
    4. ' ,' → logprob: -15.268098831176758
    5. '   ' → logprob: -15.643098831176758
    6. ' ' → logprob: -15.768098831176758
    7. '＝' → logprob: -16.268098831176758
    8. '=input' → logprob: -17.018098831176758
    9. '=
' → logprob: -17.143098831176758
    10. 'c' → logprob: -17.143098831176758

Token 1087: ' col' (ID: 996)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.9424725148128346e-05
    2. 'w' → logprob: -10.625049591064453
    3. ' c' → logprob: -10.875049591064453
    4. 'd' → logprob: -12.125049591064453
    5. '_c' → logprob: -15.500049591064453
    6. '_' → logprob: -16.000049591064453
    7. ',c' → logprob: -16.000049591064453
    8. 'k' → logprob: -16.500049591064453
    9. '
' → logprob: -16.750049591064453
    10. 't' → logprob: -17.000049591064453

Token 1088: ',' (ID: 11)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.009088749997317791
    2. ' =' → logprob: -5.384088516235352
    3. '=' → logprob: -5.509088516235352
    4. ',' → logprob: -7.884088516235352
    5. 'o' → logprob: -10.509088516235352
    6. 'OR' → logprob: -13.634088516235352
    7. ' ' → logprob: -14.759088516235352
    8. 'r' → logprob: -15.009088516235352
    9. ')' → logprob: -15.009088516235352
    10. '=None' → logprob: -15.009088516235352

Token 1089: ' dist' (ID: 3601)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10415222495794296
    2. 'w' → logprob: -3.104152202606201
    3. 'cost' → logprob: -3.604152202606201
    4. '=' → logprob: -4.729152202606201
    5. '_' → logprob: -5.354152202606201
    6. ' =' → logprob: -5.604152202606201
    7. '_=' → logprob: -5.604152202606201
    8. 'd' → logprob: -5.729152202606201
    9. '_c' → logprob: -6.479152202606201
    10. 'weight' → logprob: -7.979152202606201

Token 1090: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022463142871857
    2. ' =' → logprob: -1.9102246761322021
    3. ' ' → logprob: -16.78522491455078
    4. '   ' → logprob: -16.91022491455078
    5. '_=' → logprob: -17.16022491455078
    6. 't' → logprob: -17.28522491455078
    7. ')' → logprob: -17.53522491455078
    8. '＝' → logprob: -17.53522491455078
    9. 'a' → logprob: -17.66022491455078
    10. '_' → logprob: -18.16022491455078

Token 1091: ' I' (ID: 357)
  Prédit: 'ILI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ILI' → logprob: -0.014554919674992561
    2. 'ILLI' → logprob: -4.389554977416992
    3. 'IL' → logprob: -6.764554977416992
    4. ' I' → logprob: -8.139554977416992
    5. 'ILL' → logprob: -8.639554977416992
    6. '	IL' → logprob: -9.014554977416992
    7. 'map' → logprob: -9.139554977416992
    8. 'ili' → logprob: -10.389554977416992
    9. ' map' → logprob: -10.639554977416992
    10. 'I' → logprob: -10.764554977416992

Token 1092: 'LI' (ID: 14313)
  Prédit: 'LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.0006582272471860051
    2. 'L' → logprob: -8.37565803527832
    3. '()' → logprob: -8.50065803527832
    4. '(' → logprob: -9.37565803527832
    5. 'I' → logprob: -9.87565803527832
    6. '()
' → logprob: -11.12565803527832
    7. '().' → logprob: -11.25065803527832
    8. 'li' → logprob: -11.62565803527832
    9. 'LL' → logprob: -12.37565803527832
    10. ' =' → logprob: -12.50065803527832

Token 1093: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07893264293670654
    2. '()
' → logprob: -2.578932762145996
    3. '()
' → logprob: -10.578932762145996
    4. '();' → logprob: -11.453932762145996
    5. '())' → logprob: -13.578932762145996
    6. '()\' → logprob: -13.578932762145996
    7. '()

' → logprob: -13.828932762145996
    8. '(' → logprob: -14.453932762145996
    9. ')' → logprob: -14.453932762145996
    10. ' ()' → logprob: -14.578932762145996

Token 1094: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02425397001206875
    2. 'a' → logprob: -4.399253845214844
    3. '       ' → logprob: -4.649253845214844
    4. '
' → logprob: -6.524253845214844
    5. ' a' → logprob: -7.774253845214844
    6. '	a' → logprob: -9.524253845214844
    7. '    
' → logprob: -10.149253845214844
    8. '<|end|>' → logprob: -11.149253845214844
    9. ',' → logprob: -11.274253845214844
    10. '        
' → logprob: -11.774253845214844

Token 1095: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.03565356880426407
    2. ' a' → logprob: -4.035653591156006
    3. '   ' → logprob: -4.160653591156006
    4. 'l' → logprob: -6.535653591156006
    5. ' l' → logprob: -8.535653114318848
    6. '       ' → logprob: -9.535653114318848
    7. '	a' → logprob: -11.285653114318848
    8. ' col' → logprob: -11.660653114318848
    9. 'col' → logprob: -11.910653114318848
    10. '	l' → logprob: -12.660653114318848

Token 1096: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.1460638791322708
    2. ',' → logprob: -2.521063804626465
    3. '-=' → logprob: -3.021063804626465
    4. '-' → logprob: -5.271063804626465
    5. ' =' → logprob: -7.521063804626465
    6. ' -' → logprob: -7.771063804626465
    7. ' ,' → logprob: -7.896063804626465
    8. '=' → logprob: -8.521063804626465
    9. '-,' → logprob: -9.646063804626465
    10. ' ' → logprob: -11.646063804626465

Token 1097: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -19.375015258789062
    4. '１' → logprob: -20.000015258789062
    5. '
' → logprob: -20.375015258789062
    6. '```' → logprob: -20.875015258789062
    7. 'a' → logprob: -21.000015258789062
    8. '=' → logprob: -21.375015258789062
    9. '<|end|>' → logprob: -21.750015258789062
    10. '۱' → logprob: -21.875015258789062

Token 1098: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -19.375001907348633
    4. 'a' → logprob: -19.875001907348633
    5. '```' → logprob: -20.125001907348633
    6. '１' → logprob: -20.500001907348633
    7. '<|end|>' → logprob: -20.875001907348633
    8. 'def' → logprob: -21.437501907348633
    9. '2' → logprob: -21.625001907348633
    10. '=' → logprob: -21.687501907348633

Token 1099: ';' (ID: 26)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1740485578775406
    2. '
' → logprob: -2.424048662185669
    3. ',b' → logprob: -3.674048662185669
    4. ',' → logprob: -4.17404842376709
    5. '   ' → logprob: -4.29904842376709
    6. ' b' → logprob: -5.29904842376709
    7. ';b' → logprob: -5.54904842376709
    8. ';' → logprob: -5.79904842376709
    9. '	b' → logprob: -6.04904842376709
    10. '       ' → logprob: -6.29904842376709

Token 1100: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006715370807796717
    2. ' b' → logprob: -5.006715297698975
    3. '   ' → logprob: -17.131715774536133
    4. '       ' → logprob: -18.131715774536133
    5. '	b' → logprob: -18.506715774536133
    6. ' ' → logprob: -21.631715774536133
    7. '    ' → logprob: -21.756715774536133
    8. '
' → logprob: -22.006715774536133
    9. ')b' → logprob: -22.256715774536133
    10. ',b' → logprob: -22.756715774536133

Token 1101: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.1612386852502823
    2. ' -=' → logprob: -1.911238670349121
    3. '-' → logprob: -6.911238670349121
    4. '=' → logprob: -11.161238670349121
    5. '   ' → logprob: -13.661238670349121
    6. ' ' → logprob: -14.786238670349121
    7. '<|end|>' → logprob: -15.036238670349121
    8. ',' → logprob: -15.286238670349121
    9. ' -' → logprob: -15.661238670349121
    10. '    ' → logprob: -15.911238670349121

Token 1102: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004882152716163546
    2. ' ' → logprob: -7.62548828125
    3. '   ' → logprob: -16.50048828125
    4. '```' → logprob: -17.00048828125
    5. '-' → logprob: -17.81298828125
    6. 'b' → logprob: -18.50048828125
    7. '
' → logprob: -18.56298828125
    8. 'a' → logprob: -18.87548828125
    9. '１' → logprob: -18.93798828125
    10. '<|end|>' → logprob: -18.93798828125

Token 1103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.3125057220459
    4. '```' → logprob: -17.7500057220459
    5. '-' → logprob: -18.0000057220459
    6. 'a' → logprob: -18.0625057220459
    7. 'b' → logprob: -18.2500057220459
    8. '<|end|>' → logprob: -18.3125057220459
    9. '
' → logprob: -18.7500057220459
    10. '１' → logprob: -19.4375057220459

Token 1104: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024291672743856907
    2. '
' → logprob: -6.252429008483887
    3. 'l' → logprob: -8.377429008483887
    4. '   ' → logprob: -8.752429008483887
    5. ' l' → logprob: -9.377429008483887
    6. ',l' → logprob: -11.502429008483887
    7. ',' → logprob: -12.502429008483887
    8. ';l' → logprob: -13.127429008483887
    9. '	l' → logprob: -13.252429008483887
    10. '        
' → logprob: -13.377429008483887

Token 1105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0113241421058774
    2. 'l' → logprob: -4.511323928833008
    3. '   ' → logprob: -8.511323928833008
    4. ' l' → logprob: -9.511323928833008
    5. '	l' → logprob: -15.261323928833008
    6. '      ' → logprob: -15.511323928833008
    7. '           ' → logprob: -15.511323928833008
    8. '     ' → logprob: -16.261323928833008
    9. '```' → logprob: -16.511323928833008
    10. ',l' → logprob: -16.636323928833008

Token 1106: ' edges' (ID: 22569)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.014347303658723831
    2. 'if' → logprob: -4.264347076416016
    3. '   ' → logprob: -8.764347076416016
    4. ' l' → logprob: -11.639347076416016
    5. '       ' → logprob: -11.639347076416016
    6. ' if' → logprob: -12.639347076416016
    7. '
' → logprob: -13.639347076416016
    8. '#' → logprob: -13.639347076416016
    9. '```' → logprob: -13.639347076416016
    10. '           ' → logprob: -14.639347076416016

Token 1107: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.723973582556937e-05
    2. 'a' → logprob: -11.000017166137695
    3. '[col' → logprob: -16.500017166137695
    4. '
' → logprob: -16.750017166137695
    5. '[b' → logprob: -16.875017166137695
    6. '[' → logprob: -17.000017166137695
    7. '[c' → logprob: -17.250017166137695
    8. ' a' → logprob: -17.500017166137695
    9. '```' → logprob: -17.750017166137695
    10. ' [' → logprob: -18.375017166137695

Token 1108: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.002412277041003108
    2. '.append' → logprob: -6.25241231918335
    3. '[' → logprob: -8.877411842346191
    4. '][' → logprob: -9.127411842346191
    5. '.' → logprob: -9.377411842346191
    6. '[col' → logprob: -9.627411842346191
    7. ']' → logprob: -10.377411842346191
    8. ').' → logprob: -10.752411842346191
    9. '[a' → logprob: -11.627411842346191
    10. '.col' → logprob: -11.752411842346191

Token 1109: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. ' append' → logprob: -15.375000953674316
    3. '.append' → logprob: -15.500000953674316
    4. '_append' → logprob: -17.0
    5. 'appen' → logprob: -17.5
    6. 'pend' → logprob: -18.375
    7. '	append' → logprob: -18.75
    8. 'app' → logprob: -19.375
    9. 'add' → logprob: -19.625
    10. 'Append' → logprob: -19.875

Token 1110: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.023310350254178047
    2. '(b' → logprob: -3.773310422897339
    3. '(' → logprob: -9.773310661315918
    4. '(a' → logprob: -12.148310661315918
    5. '   ' → logprob: -13.523310661315918
    6. ' (' → logprob: -14.148310661315918
    7. '(
' → logprob: -16.3983097076416
    8. '(c' → logprob: -16.5233097076416
    9. ' ((' → logprob: -16.5233097076416
    10. '(B' → logprob: -17.3983097076416

Token 1111: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1472419600977446e-06
    2. ' b' → logprob: -13.750000953674316
    3. '(b' → logprob: -17.875001907348633
    4. '   ' → logprob: -19.000001907348633
    5. ')b' → logprob: -20.125001907348633
    6. '	b' → logprob: -20.625001907348633
    7. '
' → logprob: -21.125001907348633
    8. 'col' → logprob: -21.875001907348633
    9. 'a' → logprob: -23.375001907348633
    10. ',b' → logprob: -23.625001907348633

Token 1112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.550411151489243e-05
    2. ',col' → logprob: -10.375055313110352
    3. ' ,' → logprob: -11.250055313110352
    4. ',
' → logprob: -11.500055313110352
    5. ',color' → logprob: -15.625055313110352
    6. ',b' → logprob: -15.875055313110352
    7. '‌,' → logprob: -16.12505531311035
    8. ',c' → logprob: -16.37505531311035
    9. ',d' → logprob: -16.37505531311035
    10. '<|end|>' → logprob: -16.37505531311035

Token 1113: ' dist' (ID: 3601)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.005069145001471043
    2. 'dist' → logprob: -5.880069255828857
    3. ' col' → logprob: -6.130069255828857
    4. 'color' → logprob: -10.2550687789917
    5. ' dist' → logprob: -10.6300687789917
    6. '(col' → logprob: -11.8800687789917
    7. 'cost' → logprob: -12.2550687789917
    8. '   ' → logprob: -12.7550687789917
    9. '1' → logprob: -13.3800687789917
    10. '	col' → logprob: -13.5050687789917

Token 1114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010537689086049795
    2. '))' → logprob: -7.001053810119629
    3. '))
' → logprob: -9.626053810119629
    4. ' ,' → logprob: -10.501053810119629
    5. ',col' → logprob: -10.501053810119629
    6. ',
' → logprob: -11.001053810119629
    7. ',color' → logprob: -14.251053810119629
    8. '   ' → logprob: -14.376053810119629
    9. ',))
' → logprob: -14.376053810119629
    10. '       ' → logprob: -14.626053810119629

Token 1115: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.00038980069803074
    2. ' col' → logprob: -7.875389575958252
    3. 'color' → logprob: -12.12539005279541
    4. '   ' → logprob: -13.37539005279541
    5. '	col' → logprob: -14.75039005279541
    6. '1' → logprob: -14.87539005279541
    7. ')' → logprob: -15.25039005279541
    8. '
' → logprob: -15.25039005279541
    9. 'c' → logprob: -15.62539005279541
    10. 'colm' → logprob: -15.87539005279541

Token 1116: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07911583036184311
    2. '))
' → logprob: -2.579115867614746
    3. ',' → logprob: -8.704115867614746
    4. ')' → logprob: -10.829115867614746
    5. ' ))' → logprob: -11.204115867614746
    6. '       ' → logprob: -11.704115867614746
    7. '));' → logprob: -12.454115867614746
    8. '))

' → logprob: -12.579115867614746
    9. ' ))
' → logprob: -12.829115867614746
    10. ',))
' → logprob: -12.954115867614746

Token 1117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008516820147633553
    2. ' edges' → logprob: -5.383516788482666
    3. 'edges' → logprob: -5.883516788482666
    4. '   ' → logprob: -6.883516788482666
    5. '<|end|>' → logprob: -9.883517265319824
    6. '           ' → logprob: -12.008517265319824
    7. '(edges' → logprob: -12.008517265319824
    8. '```' → logprob: -13.008517265319824
    9. ' ' → logprob: -13.133517265319824
    10. '<|end|>' → logprob: -13.258517265319824

Token 1118: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.0012159519828855991
    2. ' edges' → logprob: -6.751215934753418
    3. '       ' → logprob: -10.126215934753418
    4. '   ' → logprob: -13.001215934753418
    5. '```' → logprob: -13.251215934753418
    6. '(edges' → logprob: -14.251215934753418
    7. '.edges' → logprob: -14.376215934753418
    8. '``' → logprob: -15.751215934753418
    9. '           ' → logprob: -16.001216888427734
    10. '[' → logprob: -17.251216888427734

Token 1119: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.00019042797794099897
    2. '[a' → logprob: -8.625190734863281
    3. 'b' → logprob: -11.500190734863281
    4. '[
' → logprob: -15.500190734863281
    5. '[c' → logprob: -15.875190734863281
    6. '[' → logprob: -16.00019073486328
    7. 'a' → logprob: -16.25019073486328
    8. '```' → logprob: -16.37519073486328
    9. ' [' → logprob: -17.12519073486328
    10. '   ' → logprob: -18.00019073486328

Token 1120: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.3809088170528412
    2. ').' → logprob: -1.6309088468551636
    3. '.append' → logprob: -2.130908727645874
    4. '.' → logprob: -6.380908966064453
    5. '.app' → logprob: -8.755908966064453
    6. '       ' → logprob: -9.505908966064453
    7. '[' → logprob: -9.630908966064453
    8. ')' → logprob: -9.630908966064453
    9. ' .' → logprob: -10.005908966064453
    10. '[].' → logprob: -10.005908966064453

Token 1121: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -9.088346359931165e-07
    2. '.append' → logprob: -14.250000953674316
    3. ' append' → logprob: -15.750000953674316
    4. 'appen' → logprob: -17.25
    5. '	append' → logprob: -19.125
    6. 'Append' → logprob: -20.0
    7. 'prepend' → logprob: -20.25
    8. '_append' → logprob: -20.375
    9. 'add' → logprob: -21.25
    10. 'app' → logprob: -21.5

Token 1122: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.07890256494283676
    2. '(a' → logprob: -2.57890248298645
    3. ' (' → logprob: -11.453902244567871
    4. '   ' → logprob: -14.328902244567871
    5. 'a' → logprob: -14.703902244567871
    6. '(
' → logprob: -14.953902244567871
    7. '[(' → logprob: -15.578902244567871
    8. '(' → logprob: -15.828902244567871
    9. '```' → logprob: -15.953902244567871
    10. ' ((' → logprob: -16.203903198242188

Token 1123: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.47407975792884827
    2. 'a' → logprob: -0.9740797281265259
    3. ' (' → logprob: -13.349080085754395
    4. ' a' → logprob: -14.224080085754395
    5. '	a' → logprob: -15.974080085754395
    6. '   ' → logprob: -16.224079132080078
    7. '[a' → logprob: -16.224079132080078
    8. '(
' → logprob: -16.349079132080078
    9. ')a' → logprob: -16.849079132080078
    10. '(' → logprob: -17.349079132080078

Token 1124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6060808522743173e-05
    2. ' ,' → logprob: -10.625025749206543
    3. ',
' → logprob: -14.625025749206543
    4. ',d' → logprob: -15.000025749206543
    5. '),' → logprob: -15.125025749206543
    6. '<|end|>' → logprob: -15.375025749206543
    7. '```' → logprob: -15.875025749206543
    8. ')' → logprob: -16.00002670288086
    9. '(dist' → logprob: -17.12502670288086
    10. '   ' → logprob: -17.25002670288086

Token 1125: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.016184398904442787
    2. ' dist' → logprob: -4.141184329986572
    3. '(dist' → logprob: -8.89118480682373
    4. '   ' → logprob: -12.64118480682373
    5. ' (' → logprob: -13.26618480682373
    6. '
' → logprob: -13.26618480682373
    7. '	dist' → logprob: -13.89118480682373
    8. 'distance' → logprob: -13.89118480682373
    9. '(' → logprob: -14.14118480682373
    10. ')' → logprob: -14.26618480682373

Token 1126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013333676906768233
    2. ' ,' → logprob: -9.000133514404297
    3. ',
' → logprob: -11.750133514404297
    4. ',col' → logprob: -13.875133514404297
    5. '```' → logprob: -15.625133514404297
    6. '))' → logprob: -15.875133514404297
    7. '),' → logprob: -16.125133514404297
    8. '<|end|>' → logprob: -16.250133514404297
    9. ')' → logprob: -16.375133514404297
    10. ',d' → logprob: -16.500133514404297

Token 1127: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.02634105645120144
    2. ' col' → logprob: -3.651340961456299
    3. 'dist' → logprob: -10.776341438293457
    4. ' dist' → logprob: -11.776341438293457
    5. 'coll' → logprob: -13.026341438293457
    6. '
' → logprob: -13.276341438293457
    7. 'color' → logprob: -13.401341438293457
    8. '	col' → logprob: -13.901341438293457
    9. ')' → logprob: -14.276341438293457
    10. '(col' → logprob: -14.401341438293457

Token 1128: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004713066737167537
    2. ')
' → logprob: -8.250471115112305
    3. '))' → logprob: -8.625471115112305
    4. '       ' → logprob: -10.500471115112305
    5. ' )' → logprob: -13.500471115112305
    6. '   ' → logprob: -14.125471115112305
    7. ')

' → logprob: -14.375471115112305
    8. '))
' → logprob: -16.750471115112305
    9. ')))' → logprob: -17.375471115112305
    10. '])' → logprob: -17.750471115112305

Token 1129: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3252968192100525
    2. '
' → logprob: -1.3252968788146973
    3. ' for' → logprob: -4.825296878814697
    4. 'for' → logprob: -6.450296878814697
    5. 'def' → logprob: -6.825296878814697
    6. '    
' → logprob: -7.825296878814697
    7. '```' → logprob: -8.575296401977539
    8. '<|end|>' → logprob: -8.575296401977539
    9. '       ' → logprob: -9.075296401977539
    10. ')' → logprob: -9.700296401977539

Token 1130: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.08165226876735687
    2. '   ' → logprob: -2.7066521644592285
    3. '       ' → logprob: -4.8316521644592285
    4. 'for' → logprob: -5.8316521644592285
    5. ' l' → logprob: -7.5816521644592285
    6. ' for' → logprob: -9.081652641296387
    7. '           ' → logprob: -10.331652641296387
    8. '```' → logprob: -11.206652641296387
    9. '
' → logprob: -11.331652641296387
    10. '#' → logprob: -11.581652641296387

Token 1131: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -2.2127087504486553e-05
    2. 'c' → logprob: -11.125021934509277
    3. 'a' → logprob: -13.250021934509277
    4. 'cal' → logprob: -13.875021934509277
    5. '_ca' → logprob: -14.125021934509277
    6. '```' → logprob: -14.250021934509277
    7. ' ca' → logprob: -14.750021934509277
    8. 'oca' → logprob: -15.125021934509277
    9. 'case' → logprob: -15.250021934509277
    10. 'cat' → logprob: -15.812521934509277

Token 1132: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -6.988221684878226e-06
    2. '.' → logprob: -12.000006675720215
    3. ' .' → logprob: -15.375006675720215
    4. 'add' → logprob: -15.750006675720215
    5. '.append' → logprob: -16.50000762939453
    6. '.insert' → logprob: -17.12500762939453
    7. '.setdefault' → logprob: -17.37500762939453
    8. ')add' → logprob: -17.37500762939453
    9. ').' → logprob: -17.62500762939453
    10. '.enqueue' → logprob: -18.00000762939453

Token 1133: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -7.896309739408025e-07
    2. 'edge' → logprob: -14.875000953674316
    3. '_ed' → logprob: -15.500000953674316
    4. '_' → logprob: -16.75
    5. '_node' → logprob: -17.125
    6. '_edges' → logprob: -17.25
    7. '(edge' → logprob: -17.625
    8. '_line' → logprob: -18.0
    9. '_e' → logprob: -18.25
    10. '_event' → logprob: -18.5

Token 1134: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.2664456789934775e-06
    2. 'a' → logprob: -13.875000953674316
    3. '(' → logprob: -16.125001907348633
    4. '(
' → logprob: -16.375001907348633
    5. '((' → logprob: -20.500001907348633
    6. ' (' → logprob: -21.125001907348633
    7. ' a' → logprob: -21.375001907348633
    8. '(b' → logprob: -21.750001907348633
    9. '(A' → logprob: -21.875001907348633
    10. ')a' → logprob: -22.000001907348633

Token 1135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002753981971181929
    2. ',b' → logprob: -8.250275611877441
    3. ' ,' → logprob: -11.625275611877441
    4. ',
' → logprob: -12.500275611877441
    5. '<|end|>' → logprob: -14.250275611877441
    6. ',a' → logprob: -15.250275611877441
    7. ')' → logprob: -15.375275611877441
    8. 'b' → logprob: -15.375275611877441
    9. 'a' → logprob: -16.125274658203125
    10. '),' → logprob: -17.750274658203125

Token 1136: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029750484973192215
    2. ' b' → logprob: -3.5297505855560303
    3. ')b' → logprob: -17.65475082397461
    4. '	b' → logprob: -18.27975082397461
    5. ' ' → logprob: -18.65475082397461
    6. '   ' → logprob: -19.40475082397461
    7. '<|end|>' → logprob: -19.40475082397461
    8. '    ' → logprob: -20.02975082397461
    9. '       ' → logprob: -20.15475082397461
    10. ')' → logprob: -20.40475082397461

Token 1137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.995397365652025e-05
    2. ' ,' → logprob: -9.875089645385742
    3. ')' → logprob: -10.375089645385742
    4. 'dist' → logprob: -13.125089645385742
    5. ',
' → logprob: -13.625089645385742
    6. '),' → logprob: -13.625089645385742
    7. ',d' → logprob: -13.750089645385742
    8. '(dist' → logprob: -14.250089645385742
    9. '```' → logprob: -15.375089645385742
    10. '<|end|>' → logprob: -16.250089645385742

Token 1138: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.020544106140732765
    2. ' dist' → logprob: -3.8955440521240234
    3. '	dist' → logprob: -13.895544052124023
    4. '   ' → logprob: -14.645544052124023
    5. '       ' → logprob: -15.395544052124023
    6. '(dist' → logprob: -15.645544052124023
    7. '0' → logprob: -16.145544052124023
    8. 'Dist' → logprob: -16.395544052124023
    9. '           ' → logprob: -16.770544052124023
    10. '
' → logprob: -17.020544052124023

Token 1139: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023178798437584192
    2. ')
' → logprob: -8.750231742858887
    3. '       ' → logprob: -10.125231742858887
    4. '   ' → logprob: -10.875231742858887
    5. '<|end|>' → logprob: -11.875231742858887
    6. ' )' → logprob: -12.250231742858887
    7. ')n' → logprob: -14.625231742858887
    8. '<|end|>' → logprob: -14.625231742858887
    9. ')return' → logprob: -14.750231742858887
    10. '
' → logprob: -15.125231742858887

Token 1140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012436824617907405
    2. ' l' → logprob: -7.251243591308594
    3. '
' → logprob: -8.126243591308594
    4. 'l' → logprob: -9.376243591308594
    5. ' for' → logprob: -10.251243591308594
    6. 'def' → logprob: -10.251243591308594
    7. '```' → logprob: -10.501243591308594
    8. '	l' → logprob: -11.001243591308594
    9. '    
' → logprob: -11.501243591308594
    10. '<|end|>' → logprob: -11.626243591308594

Token 1141: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11453556269407272
    2. 'l' (adapté à ' l') → logprob: -2.2395355701446533
    3. ' l' → logprob: -6.489535331726074
    4. '
' → logprob: -9.364535331726074
    5. '```' → logprob: -9.989535331726074
    6. '    
' → logprob: -10.739535331726074
    7. '	l' → logprob: -10.864535331726074
    8. 'def' → logprob: -12.364535331726074
    9. 'for' → logprob: -12.989535331726074
    10. '   ' → logprob: -12.989535331726074

Token 1142: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -1.9027791495318525e-05
    2. 'c' → logprob: -11.250019073486328
    3. 'a' → logprob: -13.250019073486328
    4. '   ' → logprob: -13.750019073486328
    5. ' ca' → logprob: -14.375019073486328
    6. 'oca' → logprob: -14.875019073486328
    7. 'cal' → logprob: -15.125019073486328
    8. '#' → logprob: -15.125019073486328
    9. '```' → logprob: -15.625019073486328
    10. '
' → logprob: -15.750019073486328

Token 1143: '.init' (ID: 14930)
  Prédit: '.init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.init' → logprob: -1.0325924449716695e-05
    2. '.' → logprob: -11.62501049041748
    3. 'init' → logprob: -14.00001049041748
    4. '.ini' → logprob: -15.50001049041748
    5. ' .' → logprob: -16.125009536743164
    6. '.initialize' → logprob: -16.625009536743164
    7. '.in' → logprob: -17.375009536743164
    8. '.import' → logprob: -17.500009536743164
    9. ':init' → logprob: -17.875009536743164
    10. '.add' → logprob: -17.875009536743164

Token 1144: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008856359869241714
    2. '()' → logprob: -4.758856296539307
    3. '(N' → logprob: -8.508856773376465
    4. '0' → logprob: -10.883856773376465
    5. '(
' → logprob: -11.383856773376465
    6. '(l' → logprob: -12.508856773376465
    7. '()
' → logprob: -13.383856773376465
    8. '((' → logprob: -13.758856773376465
    9. '()(' → logprob: -13.758856773376465
    10. '(main' → logprob: -14.758856773376465

Token 1145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024123642593622208
    2. ' for' → logprob: -4.649123668670654
    3. '
' → logprob: -5.524123668670654
    4. '<|end|>' → logprob: -5.524123668670654
    5. '    
' → logprob: -5.649123668670654
    6. 'for' → logprob: -6.649123668670654
    7. '```' → logprob: -7.399123668670654
    8. '	for' → logprob: -8.274123191833496
    9. ' 
' → logprob: -9.399123191833496
    10. ',' → logprob: -9.649123191833496

Token 1146: ' ans' (ID: 3345)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.2092062532901764
    2. 'colors' → logprob: -2.3342063426971436
    3. 'for' → logprob: -3.4592063426971436
    4. 'res' → logprob: -3.7092063426971436
    5. '   ' → logprob: -5.3342061042785645
    6. 'query' → logprob: -5.4592061042785645
    7. 'queries' → logprob: -5.4592061042785645
    8. 'answers' → logprob: -5.4592061042785645
    9. 'col' → logprob: -5.7092061042785645
    10. ' color' → logprob: -5.9592061042785645

Token 1147: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06236827373504639
    2. '=' → logprob: -2.812368392944336
    3. 's' → logprob: -7.937368392944336
    4. ' ' → logprob: -11.187368392944336
    5. ':' → logprob: -11.687368392944336
    6. '_' → logprob: -12.062368392944336
    7. '=[]' → logprob: -12.062368392944336
    8. ',' → logprob: -12.562368392944336
    9. '   ' → logprob: -13.687368392944336
    10. ')' → logprob: -13.687368392944336

Token 1148: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0007693672669120133
    2. '[' → logprob: -7.375769138336182
    3. '[]
' → logprob: -9.25076961517334
    4. ' []' → logprob: -10.25076961517334
    5. '0' → logprob: -11.87576961517334
    6. '{}' → logprob: -14.00076961517334
    7. '""' → logprob: -14.12576961517334
    8. '[],' → logprob: -14.62576961517334
    9. '[])' → logprob: -14.87576961517334
    10. '["' → logprob: -15.00076961517334

Token 1149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00662845466285944
    2. '[]' → logprob: -5.506628513336182
    3. ']' → logprob: -7.256628513336182
    4. 'None' → logprob: -7.631628513336182
    5. 'False' → logprob: -7.631628513336182
    6. 'INF' → logprob: -8.256628036499023
    7. '"' → logprob: -8.506628036499023
    8. '-' → logprob: -8.881628036499023
    9. 'N' → logprob: -9.256628036499023
    10. '""' → logprob: -9.506628036499023

Token 1150: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0024355934001505375
    2. ']*' → logprob: -6.377435684204102
    3. ' for' → logprob: -7.627435684204102
    4. 'for' → logprob: -8.502435684204102
    5. '   ' → logprob: -10.502435684204102
    6. ' ]' → logprob: -12.377435684204102
    7. ')' → logprob: -12.877435684204102
    8. '(Q' → logprob: -13.252435684204102
    9. 'Q' → logprob: -13.502435684204102
    10. '
' → logprob: -13.627435684204102

Token 1151: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7444531917572021
    2. '   ' → logprob: -0.7444531917572021
    3. 'for' → logprob: -4.119453430175781
    4. ',' → logprob: -4.619453430175781
    5. ' for' → logprob: -4.744453430175781
    6. '    
' → logprob: -4.869453430175781
    7. ',
' → logprob: -6.119453430175781
    8. '[' → logprob: -7.244453430175781
    9. 'def' → logprob: -7.244453430175781
    10. '	for' → logprob: -7.619453430175781

Token 1152: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0003931384126190096
    2. '(Q' → logprob: -8.37539291381836
    3. 'N' → logprob: -9.37539291381836
    4. '(' → logprob: -9.87539291381836
    5. '(N' → logprob: -10.75039291381836
    6. ' Q' → logprob: -12.87539291381836
    7. '(M' → logprob: -13.37539291381836
    8. ' (' → logprob: -16.00039291381836
    9. 'M' → logprob: -16.00039291381836
    10. 'MOD' → logprob: -16.12539291381836

Token 1153: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10975605994462967
    2. '
' → logprob: -2.3597559928894043
    3. 'queries' → logprob: -5.734755992889404
    4. 'for' → logprob: -6.109755992889404
    5. 'query' → logprob: -6.359755992889404
    6. '    
' → logprob: -6.984755992889404
    7. ' for' → logprob: -7.859755992889404
    8. ' queries' → logprob: -8.359756469726562
    9. '_queries' → logprob: -9.109756469726562
    10. '	query' → logprob: -9.359756469726562

Token 1154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6662192940711975
    2. 'color' → logprob: -1.4162192344665527
    3. 'colors' → logprob: -2.1662192344665527
    4. 'queries' → logprob: -2.4162192344665527
    5. 'query' → logprob: -3.7912192344665527
    6. 'col' → logprob: -5.916219234466553
    7. ' queries' → logprob: -6.041219234466553
    8. '    
' → logprob: -6.166219234466553
    9. 'Q' → logprob: -6.916219234466553
    10. 'q' → logprob: -6.916219234466553

Token 1155: ' queries' (ID: 32122)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.35222718119621277
    2. 'colors' → logprob: -1.7272272109985352
    3. 'col' → logprob: -2.727227210998535
    4. 'query' → logprob: -3.977227210998535
    5. 'queries' (adapté à ' queries') → logprob: -4.352227210998535
    6. 'clr' → logprob: -5.977227210998535
    7. 'q' → logprob: -6.227227210998535
    8. 'cols' → logprob: -6.352227210998535
    9. 'node' → logprob: -6.477227210998535
    10. 'prev' → logprob: -6.727227210998535

Token 1156: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22546084225177765
    2. ' =' → logprob: -1.6004608869552612
    3. ':' → logprob: -10.72546100616455
    4. '=[]' → logprob: -11.10046100616455
    5. '[' → logprob: -12.72546100616455
    6. ',' → logprob: -13.22546100616455
    7. '[:]' → logprob: -13.47546100616455
    8. '.append' → logprob: -13.85046100616455
    9. 's' → logprob: -14.47546100616455
    10. '   ' → logprob: -14.47546100616455

Token 1157: ' [[]' (ID: 182908)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.018915843218564987
    2. '[' → logprob: -4.01891565322876
    3. ' []' → logprob: -7.26891565322876
    4. '[]
' → logprob: -10.643916130065918
    5. ' [[]' → logprob: -11.768916130065918
    6. '[class' → logprob: -12.143916130065918
    7. ' [' → logprob: -12.143916130065918
    8. '[len' → logprob: -12.893916130065918
    9. '[int' → logprob: -12.893916130065918
    10. '[][]' → logprob: -13.018916130065918

Token 1158: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10359129309654236
    2. ' for' → logprob: -2.353591203689575
    3. '()' → logprob: -6.478591442108154
    4. '(Q' → logprob: -6.478591442108154
    5. '   ' → logprob: -8.603590965270996
    6. ']' → logprob: -9.978590965270996
    7. ',' → logprob: -11.103590965270996
    8. '(' → logprob: -11.103590965270996
    9. ' (' → logprob: -11.728590965270996
    10. '=' → logprob: -11.728590965270996

Token 1159: ' _' (ID: 1175)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.6460281610488892
    2. 'range' → logprob: -1.1460281610488892
    3. ' range' → logprob: -2.2710280418395996
    4. 'N' → logprob: -3.3960280418395996
    5. '(Q' → logprob: -5.0210280418396
    6. '_' → logprob: -5.1460280418396
    7. '_N' → logprob: -5.5210280418396
    8. 'Q' → logprob: -6.0210280418396
    9. '_range' → logprob: -6.8960280418396
    10. ' N' → logprob: -8.396028518676758

Token 1160: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009171441197395325
    2. ' range' → logprob: -4.759171485900879
    3. 'Q' → logprob: -7.634171485900879
    4. 'q' → logprob: -10.134171485900879
    5. '(Q' → logprob: -10.759171485900879
    6. '(range' → logprob: -12.134171485900879
    7. '=' → logprob: -13.009171485900879
    8. '_range' → logprob: -13.634171485900879
    9. '(' → logprob: -13.884171485900879
    10. '   ' → logprob: -15.259171485900879

Token 1161: ' range' (ID: 3352)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.34890028834342957
    2. 'N' → logprob: -1.223900318145752
    3. '(N' → logprob: -8.723899841308594
    4. '(Q' → logprob: -9.223899841308594
    5. ' Q' → logprob: -10.223899841308594
    6. '   ' → logprob: -10.348899841308594
    7. '(M' → logprob: -10.348899841308594
    8. ' N' → logprob: -10.723899841308594
    9. 'MG' → logprob: -10.848899841308594
    10. '(' → logprob: -11.473899841308594

Token 1162: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07754938304424286
    2. 'Q' → logprob: -2.702549457550049
    3. '(N' → logprob: -4.952549457550049
    4. '(Q' → logprob: -8.57754898071289
    5. '(M' → logprob: -8.70254898071289
    6. '   ' → logprob: -10.07754898071289
    7. 'MG' → logprob: -10.45254898071289
    8. 'MOD' → logprob: -10.45254898071289
    9. ' N' → logprob: -10.57754898071289
    10. '
' → logprob: -11.32754898071289

Token 1163: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.554542064666748
    2. ')]' → logprob: -1.054542064666748
    3. ']
' → logprob: -2.804542064666748
    4. ')]
' → logprob: -4.179542064666748
    5. ')' → logprob: -6.804542064666748
    6. '()]' → logprob: -8.554542541503906
    7. '()]
' → logprob: -10.054542541503906
    8. ']
' → logprob: -10.179542541503906
    9. ']

' → logprob: -10.554542541503906
    10. '])' → logprob: -10.929542541503906

Token 1164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06264319270849228
    2. 'for' → logprob: -2.81264328956604
    3. ' for' → logprob: -7.437643051147461
    4. '
' → logprob: -9.812643051147461
    5. '	for' → logprob: -10.812643051147461
    6. '    
' → logprob: -11.437643051147461
    7. '```' → logprob: -15.812643051147461
    8. '       ' → logprob: -15.937643051147461
    9. '	
' → logprob: -16.06264305114746
    10. ' ' → logprob: -16.31264305114746

Token 1165: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003679051762446761
    2. ' for' → logprob: -5.628679275512695
    3. '   ' → logprob: -9.753679275512695
    4. '
' → logprob: -11.503679275512695
    5. 'q' → logprob: -13.128679275512695
    6. 'idx' → logprob: -13.128679275512695
    7. 'query' → logprob: -13.253679275512695
    8. 'i' → logprob: -14.128679275512695
    9. '	for' → logprob: -14.128679275512695
    10. 'from' → logprob: -14.503679275512695

Token 1166: ' qi' (ID: 64017)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04345596581697464
    2. '_q' → logprob: -3.7934560775756836
    3. '_i' → logprob: -4.668456077575684
    4. 'i' → logprob: -5.043456077575684
    5. ' _' → logprob: -6.418456077575684
    6. ' i' → logprob: -6.543456077575684
    7. 'q' → logprob: -7.043456077575684
    8. ' q' → logprob: -9.418456077575684
    9. '__' → logprob: -9.543456077575684
    10. '_range' → logprob: -10.418456077575684

Token 1167: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11311830580234528
    2. 'in' → logprob: -2.2381184101104736
    3. '_' → logprob: -8.738118171691895
    4. 'n' → logprob: -9.613118171691895
    5. ',' → logprob: -10.113118171691895
    6. 'q' → logprob: -12.238118171691895
    7. '
' → logprob: -12.363118171691895
    8. 'i' → logprob: -12.363118171691895
    9. 's' → logprob: -12.613118171691895
    10. '(' → logprob: -13.113118171691895

Token 1168: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002619318547658622
    2. ' range' → logprob: -8.250262260437012
    3. '_' → logprob: -15.000262260437012
    4. 'in' → logprob: -15.500262260437012
    5. '(range' → logprob: -16.750261306762695
    6. '_range' → logprob: -17.750261306762695
    7. '
' → logprob: -18.250261306762695
    8. '	range' → logprob: -18.500261306762695
    9. ' in' → logprob: -18.625261306762695
    10. 'r' → logprob: -18.750261306762695

Token 1169: '(Q' (ID: 14437)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.002025116002187133
    2. '(Q' → logprob: -6.252025127410889
    3. ' Q' → logprob: -9.25202465057373
    4. '	Q' → logprob: -15.37702465057373
    5. ',Q' → logprob: -15.87702465057373
    6. '(' → logprob: -16.127025604248047
    7. '   ' → logprob: -16.627025604248047
    8. ')' → logprob: -16.752025604248047
    9. '<Q' → logprob: -17.502025604248047
    10. '_Q' → logprob: -18.502025604248047

Token 1170: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.643064022064209
    2. '):' → logprob: -0.768064022064209
    3. ',' → logprob: -4.768064022064209
    4. '():
' → logprob: -6.643064022064209
    5. '   ' → logprob: -8.018064498901367
    6. '():' → logprob: -9.268064498901367
    7. ':' → logprob: -9.643064498901367
    8. '()):
' → logprob: -10.018064498901367
    9. ')' → logprob: -10.643064498901367
    10. ':
' → logprob: -11.268064498901367

Token 1171: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22819611430168152
    2. '       ' → logprob: -1.603196144104004
    3. ' line' → logprob: -6.853196144104004
    4. ',' → logprob: -7.978196144104004
    5. '    ' → logprob: -8.103196144104004
    6. ' (' → logprob: -9.228196144104004
    7. ' query' → logprob: -9.478196144104004
    8. 'a' → logprob: -9.478196144104004
    9. 'n' → logprob: -9.603196144104004
    10. ' s' → logprob: -9.853196144104004

Token 1172: ' cx' (ID: 44448)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.17411887645721436
    2. 'v' → logprob: -2.174118995666504
    3. ' u' → logprob: -3.674118995666504
    4. '       ' → logprob: -4.799118995666504
    5. '   ' → logprob: -5.049118995666504
    6. ' v' → logprob: -5.924118995666504
    7. 'x' → logprob: -6.424118995666504
    8. 'a' → logprob: -6.924118995666504
    9. 'c' → logprob: -8.174118995666504
    10. '(u' → logprob: -9.299118995666504

Token 1173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009259917424060404
    2. ' ,' → logprob: -7.5009260177612305
    3. ' =' → logprob: -8.50092601776123
    4. '=' → logprob: -9.87592601776123
    5. ',col' → logprob: -10.25092601776123
    6. ',c' → logprob: -10.37592601776123
    7. ' col' → logprob: -10.62592601776123
    8. '   ' → logprob: -12.62592601776123
    9. ',
' → logprob: -12.62592601776123
    10. ')' → logprob: -13.00092601776123

Token 1174: ' dy' (ID: 11996)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.01018489245325327
    2. 'dx' → logprob: -5.6351847648620605
    3. 'dy' → logprob: -6.1351847648620605
    4. 'd' → logprob: -6.5101847648620605
    5. 'cz' → logprob: -7.5101847648620605
    6. 'cv' → logprob: -8.010185241699219
    7. 'cx' → logprob: -8.510185241699219
    8. 'cd' → logprob: -8.635185241699219
    9. 'co' → logprob: -8.760185241699219
    10. 'y' → logprob: -8.760185241699219

Token 1175: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0504583865404129
    2. ' =' → logprob: -3.0504584312438965
    3. ',' → logprob: -6.3004584312438965
    4. ')' → logprob: -11.050457954406738
    5. 'x' → logprob: -11.550457954406738
    6. ')=' → logprob: -13.300457954406738
    7. '<|end|>' → logprob: -14.050457954406738
    8. '=line' → logprob: -14.425457954406738
    9. ',x' → logprob: -14.550457954406738
    10. 'c' → logprob: -14.675457954406738

Token 1176: ' a' (ID: 261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5123454332351685
    2. 'dz' → logprob: -1.3873454332351685
    3. ' =' → logprob: -3.137345314025879
    4. 'dx' → logprob: -3.137345314025879
    5. ' dz' → logprob: -4.387345314025879
    6. 'x' → logprob: -4.637345314025879
    7. 'cz' → logprob: -5.387345314025879
    8. '_' → logprob: -5.637345314025879
    9. ' dx' → logprob: -5.762345314025879
    10. 'z' → logprob: -5.887345314025879

Token 1177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009314118884503841
    2. 'b' → logprob: -5.634314060211182
    3. '=' → logprob: -6.009314060211182
    4. ',b' → logprob: -6.009314060211182
    5. ' =' → logprob: -7.384314060211182
    6. ' ,' → logprob: -9.25931453704834
    7. ' b' → logprob: -10.88431453704834
    8. 'x' → logprob: -11.50931453704834
    9. '<|end|>' → logprob: -12.50931453704834
    10. 'c' → logprob: -12.50931453704834

Token 1178: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00015252856246661395
    2. ' b' → logprob: -9.250152587890625
    3. 'd' → logprob: -10.500152587890625
    4. 'x' → logprob: -11.125152587890625
    5. 'db' → logprob: -12.000152587890625
    6. 'bx' → logprob: -13.375152587890625
    7. 'y' → logprob: -13.875152587890625
    8. '=' → logprob: -14.125152587890625
    9. 'c' → logprob: -14.250152587890625
    10. '_' → logprob: -14.625152587890625

Token 1179: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38694825768470764
    2. ' =' → logprob: -1.1369482278823853
    3. ',' → logprob: -9.511948585510254
    4. ')' → logprob: -14.386948585510254
    5. '   ' → logprob: -14.511948585510254
    6. '	' → logprob: -14.636948585510254
    7. ' ' → logprob: -15.011948585510254
    8. '＝' → logprob: -15.511948585510254
    9. '=
' → logprob: -15.761948585510254
    10. '=line' → logprob: -15.886948585510254

Token 1180: ' I' (ID: 357)
  Prédit: 'ILI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ILI' → logprob: -0.0007239909609779716
    2. 'IL' → logprob: -7.500723838806152
    3. 'ILLI' → logprob: -9.000723838806152
    4. ' I' → logprob: -10.375723838806152
    5. '	IL' → logprob: -12.000723838806152
    6. 'I' → logprob: -12.750723838806152
    7. 'ILL' → logprob: -13.250723838806152
    8. 'LI' → logprob: -13.500723838806152
    9. 'ili' → logprob: -13.875723838806152
    10. '   ' → logprob: -14.375723838806152

Token 1181: 'LI' (ID: 14313)
  Prédit: 'LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.0019795489497482777
    2. 'L' → logprob: -6.501979351043701
    3. 'lambda' → logprob: -8.50197982788086
    4. '[' → logprob: -10.12697982788086
    5. '(lambda' → logprob: -10.12697982788086
    6. '(' → logprob: -10.62697982788086
    7. '
' → logprob: -10.62697982788086
    8. 'li' → logprob: -11.00197982788086
    9. '(L' → logprob: -11.12697982788086
    10. '```' → logprob: -11.37697982788086

Token 1182: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.28501108288764954
    2. '()
' → logprob: -1.4100110530853271
    3. '       ' → logprob: -5.660011291503906
    4. '()\' → logprob: -9.285011291503906
    5. '():
' → logprob: -10.160011291503906
    6. '()
' → logprob: -10.410011291503906
    7. '<|end|>' → logprob: -10.410011291503906
    8. '();' → logprob: -10.535011291503906
    9. ',' → logprob: -10.535011291503906
    10. ')' → logprob: -11.160011291503906

Token 1183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12188097089529037
    2. '<|end|>' → logprob: -2.2468810081481934
    3. '<|end|>' → logprob: -6.121881008148193
    4. ',' → logprob: -6.496881008148193
    5. '[' → logprob: -6.746881008148193
    6. '		
' → logprob: -7.371881008148193
    7. '   ' → logprob: -7.621881008148193
    8. '        
' → logprob: -7.871881008148193
    9. '
' → logprob: -7.871881008148193
    10. '	' → logprob: -8.371880531311035

Token 1184: ' a' (ID: 261)
  Prédit: ' cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cx' → logprob: -0.7230211496353149
    2. '       ' → logprob: -0.8480211496353149
    3. 'cx' → logprob: -3.0980210304260254
    4. 'a' (adapté à ' a') → logprob: -4.098021030426025
    5. '(cx' → logprob: -5.098021030426025
    6. ' a' → logprob: -5.223021030426025
    7. '   ' → logprob: -5.473021030426025
    8. '	c' → logprob: -6.098021030426025
    9. '[' → logprob: -6.598021030426025
    10. 'x' → logprob: -6.848021030426025

Token 1185: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.03550584614276886
    2. '-=' → logprob: -3.910505771636963
    3. ',' → logprob: -4.285505771636963
    4. '-' → logprob: -7.410505771636963
    5. ' ,' → logprob: -8.285506248474121
    6. ' -' → logprob: -9.410506248474121
    7. '   ' → logprob: -9.785506248474121
    8. '-,' → logprob: -10.785506248474121
    9. '=' → logprob: -11.410506248474121
    10. ' ' → logprob: -11.660506248474121

Token 1186: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -18.875030517578125
    4. '
' → logprob: -19.000030517578125
    5. '<|end|>' → logprob: -19.125030517578125
    6. '```' → logprob: -19.625030517578125
    7. '0' → logprob: -19.875030517578125
    8. '１' → logprob: -20.125030517578125
    9. ',' → logprob: -20.875030517578125
    10. '=' → logprob: -21.062530517578125

Token 1187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -18.375003814697266
    4. '<|end|>' → logprob: -18.500003814697266
    5. '```' → logprob: -19.375003814697266
    6. '１' → logprob: -19.375003814697266
    7. 'a' → logprob: -19.812503814697266
    8. '۱' → logprob: -20.625003814697266
    9. '১' → logprob: -20.875003814697266
    10. '१' → logprob: -21.000003814697266

Token 1188: ';' (ID: 26)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3208237290382385
    2. ',' → logprob: -2.3208236694335938
    3. ' b' → logprob: -2.4458236694335938
    4. '       ' → logprob: -2.6958236694335938
    5. ',b' → logprob: -4.820823669433594
    6. '<|end|>' → logprob: -5.695823669433594
    7. '   ' → logprob: -5.820823669433594
    8. '	b' → logprob: -5.820823669433594
    9. '
' → logprob: -5.945823669433594
    10. ';' → logprob: -6.820823669433594

Token 1189: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004164353013038635
    2. ' b' → logprob: -5.504164218902588
    3. '       ' → logprob: -9.379164695739746
    4. '   ' → logprob: -13.629164695739746
    5. '	b' → logprob: -15.879164695739746
    6. '    ' → logprob: -16.75416374206543
    7. ' ' → logprob: -17.12916374206543
    8. '        ' → logprob: -17.50416374206543
    9. '           ' → logprob: -17.87916374206543
    10. '      ' → logprob: -18.00416374206543

Token 1190: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.4760720431804657
    2. '-=' → logprob: -0.9760720729827881
    3. '-' → logprob: -6.226071834564209
    4. '   ' → logprob: -11.851072311401367
    5. '=' → logprob: -12.601072311401367
    6. ' ' → logprob: -13.351072311401367
    7. ' -' → logprob: -14.226072311401367
    8. ',' → logprob: -14.226072311401367
    9. '
' → logprob: -14.601072311401367
    10. '```' → logprob: -14.726072311401367

Token 1191: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '<|end|>' → logprob: -20.000017166137695
    4. '```' → logprob: -20.250017166137695
    5. '0' → logprob: -20.500017166137695
    6. '   ' → logprob: -21.000017166137695
    7. '
' → logprob: -21.500017166137695
    8. '-' → logprob: -21.625017166137695
    9. '１' → logprob: -21.750017166137695
    10. '۱' → logprob: -22.875017166137695

Token 1192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -19.875
    4. '0' → logprob: -21.0
    5. '   ' → logprob: -21.625
    6. '
' → logprob: -21.875
    7. '１' → logprob: -23.25
    8. '<|end|>' → logprob: -23.5
    9. '-' → logprob: -24.0
    10. '[' → logprob: -24.5

Token 1193: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6098700165748596
    2. '<|end|>' → logprob: -0.8598700165748596
    3. '
' → logprob: -3.734869956970215
    4. '<|end|>' → logprob: -5.109869956970215
    5. '[' → logprob: -7.484869956970215
    6. '   ' → logprob: -7.609869956970215
    7. ',' → logprob: -7.859869956970215
    8. ')' → logprob: -7.859869956970215
    9. '        
' → logprob: -8.109869956970215
    10. ' ' → logprob: -8.484869956970215

Token 1194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02108702063560486
    2. '<|end|>' → logprob: -4.146087169647217
    3. '
' → logprob: -5.896087169647217
    4. '   ' → logprob: -6.396087169647217
    5. ')' → logprob: -8.896086692810059
    6. 'tokens' → logprob: -9.021086692810059
    7. '<|end|>' → logprob: -9.396086692810059
    8. ' ' → logprob: -10.021086692810059
    9. ',' → logprob: -10.271086692810059
    10. '        
' → logprob: -10.521086692810059

Token 1195: ' c' (ID: 274)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05361943691968918
    2. 'queries' → logprob: -3.303619384765625
    3. 'c' (adapté à ' c') → logprob: -4.678619384765625
    4. '   ' → logprob: -5.678619384765625
    5. '#' → logprob: -7.803619384765625
    6. '
' → logprob: -7.803619384765625
    7. 'cx' → logprob: -7.803619384765625
    8. ' queries' → logprob: -8.053619384765625
    9. 'query' → logprob: -8.803619384765625
    10. 'def' → logprob: -9.053619384765625

Token 1196: ' =' (ID: 314)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.024116670712828636
    2. ',' → logprob: -4.024116516113281
    3. ' =' → logprob: -5.399116516113281
    4. '=' → logprob: -6.899116516113281
    5. ' -=' → logprob: -9.524116516113281
    6. ',x' → logprob: -9.899116516113281
    7. '_,' → logprob: -10.399116516113281
    8. '
' → logprob: -10.524116516113281
    9. '   ' → logprob: -10.649116516113281
    10. 'X' → logprob: -10.774116516113281

Token 1197: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10654400289058685
    2. ' l' → logprob: -2.606544017791748
    3. 'x' → logprob: -3.856544017791748
    4. 'cx' → logprob: -5.481544017791748
    5. ' cx' → logprob: -7.481544017791748
    6. 'a' → logprob: -7.731544017791748
    7. '(l' → logprob: -8.48154354095459
    8. 'L' → logprob: -8.48154354095459
    9. '(cx' → logprob: -9.48154354095459
    10. 'lx' → logprob: -9.60654354095459

Token 1198: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -0.0068765184842050076
    2. 'a' → logprob: -5.006876468658447
    3. 'c' → logprob: -9.381876945495605
    4. 'cx' → logprob: -11.131876945495605
    5. '```' → logprob: -11.881876945495605
    6. '   ' → logprob: -12.006876945495605
    7. 'ax' → logprob: -12.006876945495605
    8. 'la' → logprob: -12.631876945495605
    9. 'l' → logprob: -12.756876945495605
    10. '=' → logprob: -12.819376945495605

Token 1199: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -1.0280383548888494e-06
    2. '=l' → logprob: -15.625000953674316
    3. '```' → logprob: -15.625000953674316
    4. 'a' → logprob: -15.750000953674316
    5. ' .' → logprob: -15.875000953674316
    6. '.' → logprob: -16.250001907348633
    7. '=' → logprob: -17.125001907348633
    8. ',l' → logprob: -17.750001907348633
    9. '	l' → logprob: -18.000001907348633
    10. ').' → logprob: -18.125001907348633

Token 1200: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -8.537868779967539e-06
    2. 'c' → logprob: -11.875008583068848
    3. 'a' → logprob: -14.125008583068848
    4. ' ca' → logprob: -14.750008583068848
    5. '```' → logprob: -16.25000762939453
    6. '_ca' → logprob: -17.25000762939453
    7. '   ' → logprob: -17.50000762939453
    8. 'cal' → logprob: -17.62500762939453
    9. 'cap' → logprob: -17.62500762939453
    10. 'cao' → logprob: -17.62500762939453

Token 1201: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.1557283111615106e-05
    2. 'a' → logprob: -10.125041961669922
    3. '(' → logprob: -14.500041961669922
    4. '(b' → logprob: -15.000041961669922
    5. '(
' → logprob: -15.500041961669922
    6. ' (' → logprob: -15.875041961669922
    7. 'b' → logprob: -17.250041961669922
    8. '[a' → logprob: -17.375041961669922
    9. '```' → logprob: -18.250041961669922
    10. '((' → logprob: -18.625041961669922

Token 1202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07231468707323074
    2. ',b' → logprob: -2.697314739227295
    3. 'b' → logprob: -6.697314739227295
    4. '[b' → logprob: -6.947314739227295
    5. '(b' → logprob: -9.947314262390137
    6. ' ,' → logprob: -10.197314262390137
    7. '[' → logprob: -10.697314262390137
    8. ',
' → logprob: -10.697314262390137
    9. '```' → logprob: -11.447314262390137
    10. '       ' → logprob: -11.572314262390137

Token 1203: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00018065694894175977
    2. ' b' → logprob: -8.6251802444458
    3. '   ' → logprob: -14.0001802444458
    4. '       ' → logprob: -15.8751802444458
    5. '    ' → logprob: -16.875181198120117
    6. '
' → logprob: -17.125181198120117
    7. '	b' → logprob: -17.375181198120117
    8. '           ' → logprob: -17.500181198120117
    9. ' ' → logprob: -17.750181198120117
    10. '  ' → logprob: -18.125181198120117

Token 1204: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3791883587837219
    2. '       ' → logprob: -1.5041882991790771
    3. ')
' → logprob: -2.379188299179077
    4. '
' → logprob: -7.754188537597656
    5. ',' → logprob: -8.629188537597656
    6. '<|end|>' → logprob: -9.504188537597656
    7. '()' → logprob: -11.504188537597656
    8. ')
' → logprob: -11.754188537597656
    9. '   ' → logprob: -11.879188537597656
    10. '        
' → logprob: -12.129188537597656

Token 1205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003615751164034009
    2. '<|end|>' → logprob: -6.253615856170654
    3. '
' → logprob: -7.003615856170654
    4. ',' → logprob: -8.128615379333496
    5. '   ' → logprob: -8.253615379333496
    6. ')' → logprob: -9.503615379333496
    7. '        
' → logprob: -10.128615379333496
    8. '<|end|>' → logprob: -10.503615379333496
    9. '```' → logprob: -10.753615379333496
    10. ')
' → logprob: -11.878615379333496

Token 1206: ' ans' (ID: 3345)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025718504562973976
    2. '   ' → logprob: -4.150718688964844
    3. 'queries' → logprob: -5.025718688964844
    4. 'if' → logprob: -7.025718688964844
    5. ' if' → logprob: -7.525718688964844
    6. 'for' → logprob: -7.525718688964844
    7. '
' → logprob: -7.900718688964844
    8. ' queries' → logprob: -8.775718688964844
    9. ' for' → logprob: -8.775718688964844
    10. '```' → logprob: -9.525718688964844

Token 1207: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.39433345198631287
    2. '[c' → logprob: -1.1443334817886353
    3. '[q' → logprob: -5.519333362579346
    4. ' =' → logprob: -6.769333362579346
    5. '=' → logprob: -7.269333362579346
    6. '.append' → logprob: -7.394333362579346
    7. '[i' → logprob: -8.394333839416504
    8. '[a' → logprob: -9.394333839416504
    9. '=[' → logprob: -9.644333839416504
    10. '\[' → logprob: -9.769333839416504

Token 1208: 'qi' (ID: 35588)
  Prédit: 'qi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qi' → logprob: -7.636475493200123e-05
    2. '
' → logprob: -10.375076293945312
    3. 'q' → logprob: -11.250076293945312
    4. ' qi' → logprob: -11.500076293945312
    5. ']' → logprob: -12.250076293945312
    6. '   ' → logprob: -12.375076293945312
    7. ')' → logprob: -13.500076293945312
    8. 'ci' → logprob: -13.750076293945312
    9. '       ' → logprob: -13.875076293945312
    10. 'c' → logprob: -13.875076293945312

Token 1209: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2795673906803131
    2. ' +=' → logprob: -2.2795674800872803
    3. '+=' → logprob: -2.6545674800872803
    4. ' =' → logprob: -2.6545674800872803
    5. ']' → logprob: -7.529567241668701
    6. ']+=' → logprob: -8.40456771850586
    7. ')' → logprob: -9.77956771850586
    8. '[' → logprob: -10.15456771850586
    9. ']=' → logprob: -10.90456771850586
    10. ',' → logprob: -12.15456771850586

Token 1210: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15266592800617218
    2. ' =' → logprob: -2.027665853500366
    3. '+=' → logprob: -4.902666091918945
    4. ' +=' → logprob: -6.027666091918945
    5. '-=' → logprob: -10.027666091918945
    6. ' -=' → logprob: -10.027666091918945
    7. ',' → logprob: -12.027666091918945
    8. '=-' → logprob: -13.152666091918945
    9. '.=' → logprob: -13.527666091918945
    10. ' ' → logprob: -13.652666091918945

Token 1211: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2507074177265167
    2. '0' → logprob: -1.6257073879241943
    3. 'INF' → logprob: -4.750707626342773
    4. 'LIN' → logprob: -5.250707626342773
    5. '-' → logprob: -5.500707626342773
    6. '(l' → logprob: -6.625707626342773
    7. 'None' → logprob: -7.125707626342773
    8. 'abs' → logprob: -7.250707626342773
    9. 'a' → logprob: -7.500707626342773
    10. '-(' → logprob: -7.500707626342773

Token 1212: 'ca' (ID: 3743)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.05055800452828407
    2. '0' → logprob: -4.300558090209961
    3. 'IN' → logprob: -4.925558090209961
    4. '   ' → logprob: -5.175558090209961
    5. '[' → logprob: -5.550558090209961
    6. 'N' → logprob: -5.800558090209961
    7. 'ength' → logprob: -5.925558090209961
    8. 'ines' → logprob: -6.675558090209961
    9. 'inf' → logprob: -7.050558090209961
    10. '[N' → logprob: -7.175558090209961

Token 1213: '.cost' (ID: 80655)
  Prédit: '.dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dist' → logprob: -0.06086265295743942
    2. '.length' → logprob: -3.1858625411987305
    3. '.cost' → logprob: -4.3108625411987305
    4. '.depth' → logprob: -5.9358625411987305
    5. '.distance' → logprob: -6.5608625411987305
    6. '.len' → logprob: -9.56086254119873
    7. 'dist' → logprob: -9.81086254119873
    8. 'cost' → logprob: -11.18586254119873
    9. '.' → logprob: -11.81086254119873
    10. '.l' → logprob: -11.93586254119873

Token 1214: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011391683481633663
    2. '[a' → logprob: -4.511391639709473
    3. 'a' → logprob: -8.761391639709473
    4. '[s' → logprob: -9.386391639709473
    5. 'c' → logprob: -10.511391639709473
    6. 'cost' → logprob: -10.761391639709473
    7. '[c' → logprob: -11.136391639709473
    8. '(a' → logprob: -12.136391639709473
    9. '[' → logprob: -12.261391639709473
    10. '```' → logprob: -12.261391639709473

Token 1215: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.02571304515004158
    2. 'a' → logprob: -3.7757129669189453
    3. '[c' → logprob: -6.025712966918945
    4. '[b' → logprob: -10.775712966918945
    5. '[' → logprob: -11.150712966918945
    6. 'c' → logprob: -12.150712966918945
    7. '(a' → logprob: -12.400712966918945
    8. '```' → logprob: -13.900712966918945
    9. '[u' → logprob: -14.650712966918945
    10. ' a' → logprob: -15.275712966918945

Token 1216: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16294081509113312
    2. ' +' → logprob: -1.9129408597946167
    3. ')' → logprob: -6.662940979003906
    4. '-' → logprob: -7.537940979003906
    5. ' -' → logprob: -8.037940979003906
    6. '[' → logprob: -8.162940979003906
    7. '+
' → logprob: -9.787940979003906
    8. '+b' → logprob: -10.037940979003906
    9. '<|end|>' → logprob: -10.037940979003906
    10. ')+' → logprob: -10.162940979003906

Token 1217: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.63316410779953
    2. ' +' → logprob: -0.75816410779953
    3. '+b' → logprob: -7.883163928985596
    4. '[' → logprob: -9.383164405822754
    5. '+
' → logprob: -10.133164405822754
    6. ' -' → logprob: -11.008164405822754
    7. '-' → logprob: -11.508164405822754
    8. ' +
' → logprob: -12.008164405822754
    9. '+l' → logprob: -12.133164405822754
    10. '+c' → logprob: -12.258164405822754

Token 1218: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.009806501679122448
    2. ' l' → logprob: -4.6348066329956055
    3. '   ' → logprob: -10.384806632995605
    4. '       ' → logprob: -11.759806632995605
    5. '    ' → logprob: -12.759806632995605
    6. '        ' → logprob: -13.509806632995605
    7. '           ' → logprob: -13.634806632995605
    8. ' ' → logprob: -14.009806632995605
    9. '	l' → logprob: -14.134806632995605
    10. '     ' → logprob: -14.259806632995605

Token 1219: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -0.00037681119283661246
    2. 'l' → logprob: -8.87537670135498
    3. 'a' → logprob: -9.12537670135498
    4. 'c' → logprob: -9.62537670135498
    5. '   ' → logprob: -10.50037670135498
    6. 'aca' → logprob: -11.50037670135498
    7. '```' → logprob: -11.50037670135498
    8. '[l' → logprob: -12.62537670135498
    9. 'cost' → logprob: -13.37537670135498
    10. '
' → logprob: -14.37537670135498

Token 1220: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -9.639096970204264e-05
    2. 'cost' → logprob: -10.125096321105957
    3. ' .' → logprob: -10.625096321105957
    4. '.' → logprob: -10.750096321105957
    5. '.c' → logprob: -13.000096321105957
    6. ''.' → logprob: -13.625096321105957
    7. '```' → logprob: -13.750096321105957
    8. '
' → logprob: -14.125096321105957
    9. '`.' → logprob: -14.250096321105957
    10. '[' → logprob: -14.500096321105957

Token 1221: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0001777960715116933
    2. 'cost' → logprob: -9.125177383422852
    3. '[s' → logprob: -10.250177383422852
    4. '[b' → logprob: -11.000177383422852
    5. '[a' → logprob: -12.125177383422852
    6. '[c' → logprob: -12.500177383422852
    7. 'c' → logprob: -13.000177383422852
    8. '```' → logprob: -13.500177383422852
    9. '[' → logprob: -14.250177383422852
    10. '[
' → logprob: -14.625177383422852

Token 1222: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.2113979209971149e-05
    2. 'b' → logprob: -11.375012397766113
    3. '[' → logprob: -15.375012397766113
    4. '[c' → logprob: -15.750012397766113
    5. '[a' → logprob: -16.500011444091797
    6. '```' → logprob: -17.625011444091797
    7. '[
' → logprob: -17.875011444091797
    8. '[u' → logprob: -18.750011444091797
    9. '(b' → logprob: -19.000011444091797
    10. '	b' → logprob: -19.125011444091797

Token 1223: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.062113113701343536
    2. '-' → logprob: -2.812113046646118
    3. ')' → logprob: -9.562112808227539
    4. '[' → logprob: -10.812112808227539
    5. '       ' → logprob: -11.437112808227539
    6. '```' → logprob: -11.562112808227539
    7. ' ' → logprob: -11.687112808227539
    8. ']' → logprob: -11.812112808227539
    9. '           ' → logprob: -12.687112808227539
    10. '<|end|>' → logprob: -12.937112808227539

Token 1224: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10088960826396942
    2. '-' → logprob: -2.3508896827697754
    3. '       ' → logprob: -8.350889205932617
    4. '<|end|>' → logprob: -8.475889205932617
    5. '           ' → logprob: -10.350889205932617
    6. ' ' → logprob: -10.350889205932617
    7. ')' → logprob: -10.600889205932617
    8. '        ' → logprob: -10.600889205932617
    9. '```' → logprob: -10.850889205932617
    10. '[' → logprob: -11.225889205932617

Token 1225: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003199454629793763
    2. ' ' → logprob: -5.753199577331543
    3. '   ' → logprob: -11.628199577331543
    4. '(' → logprob: -12.003199577331543
    5. '```' → logprob: -13.128199577331543
    6. '
' → logprob: -14.128199577331543
    7. '    ' → logprob: -14.128199577331543
    8. '       ' → logprob: -14.753199577331543
    9. ' (' → logprob: -15.128199577331543
    10. '  ' → logprob: -15.128199577331543

Token 1226: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016587569552939385
    2. ' ' → logprob: -9.375165939331055
    3. '(' → logprob: -9.500165939331055
    4. '   ' → logprob: -13.125165939331055
    5. '
' → logprob: -13.875165939331055
    6. 'l' → logprob: -14.250165939331055
    7. '           ' → logprob: -14.750165939331055
    8. '       ' → logprob: -15.125165939331055
    9. ' (' → logprob: -15.250165939331055
    10. '1' → logprob: -15.937665939331055

Token 1227: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06218850240111351
    2. '*' → logprob: -2.8121883869171143
    3. '*l' → logprob: -8.437188148498535
    4. '```' → logprob: -13.062188148498535
    5. ' l' → logprob: -14.312188148498535
    6. '*self' → logprob: -14.687188148498535
    7. '*object' → logprob: -15.562188148498535
    8. '`' → logprob: -15.562188148498535
    9. 'l' → logprob: -15.562188148498535
    10. ' ' → logprob: -16.06218910217285

Token 1228: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.5048530030981055e-06
    2. ' l' → logprob: -13.500001907348633
    3. '	l' → logprob: -19.875001907348633
    4. '```' → logprob: -20.125001907348633
    5. 'lc' → logprob: -20.375001907348633
    6. '
' → logprob: -20.375001907348633
    7. '   ' → logprob: -20.375001907348633
    8. 'self' → logprob: -21.000001907348633
    9. 'ans' → logprob: -21.250001907348633
    10. 'c' → logprob: -21.500001907348633

Token 1229: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -0.0014926036819815636
    2. 'cost' → logprob: -6.751492500305176
    3. 'a' → logprob: -8.126492500305176
    4. 'c' → logprob: -11.501492500305176
    5. '   ' → logprob: -12.251492500305176
    6. 'oca' → logprob: -12.501492500305176
    7. 'aca' → logprob: -12.751492500305176
    8. '```' → logprob: -13.376492500305176
    9. 'code' → logprob: -13.751492500305176
    10. 'case' → logprob: -14.126492500305176

Token 1230: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -6.170270353322849e-05
    2. 'cost' → logprob: -10.375061988830566
    3. '.parent' → logprob: -10.625061988830566
    4. ' .' → logprob: -13.125061988830566
    5. '.c' → logprob: -13.500061988830566
    6. '.weights' → logprob: -13.875061988830566
    7. '.' → logprob: -14.625061988830566
    8. ' costs' → logprob: -15.000061988830566
    9. '```' → logprob: -15.500061988830566
    10. 'Costs' → logprob: -15.750061988830566

Token 1231: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.696889623621246e-06
    2. ' costs' → logprob: -13.62500286102295
    3. 'cost' → logprob: -14.62500286102295
    4. 'sts' → logprob: -14.87500286102295
    5. 'ts' → logprob: -16.375001907348633
    6. '[' → logprob: -16.500001907348633
    7. '   ' → logprob: -16.625001907348633
    8. 'ans' → logprob: -16.625001907348633
    9. '```' → logprob: -16.625001907348633
    10. ' ' → logprob: -16.875001907348633

Token 1232: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.688212614681106e-05
    2. 'c' → logprob: -11.000017166137695
    3. '[' → logprob: -17.375017166137695
    4. '[
' → logprob: -17.750017166137695
    5. '
' → logprob: -19.500017166137695
    6. '```' → logprob: -19.500017166137695
    7. '(c' → logprob: -19.750017166137695
    8. ')c' → logprob: -20.625017166137695
    9. '	c' → logprob: -21.000017166137695
    10. ' [' → logprob: -22.125017166137695

Token 1233: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004128030501306057
    2. ']
' → logprob: -6.2541279792785645
    3. ')' → logprob: -6.6291279792785645
    4. '       ' → logprob: -8.129128456115723
    5. ' ]' → logprob: -8.504128456115723
    6. ']+' → logprob: -9.129128456115723
    7. '[' → logprob: -9.629128456115723
    8. '+' → logprob: -9.879128456115723
    9. '   ' → logprob: -10.004128456115723
    10. '[
' → logprob: -10.004128456115723

Token 1234: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1235: ' queries' (ID: 32122)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6712819933891296
    2. '       ' → logprob: -1.1712820529937744
    3. '
' → logprob: -2.1712820529937744
    4. '<|end|>' → logprob: -3.9212820529937744
    5. 'for' → logprob: -4.296281814575195
    6. 'if' → logprob: -4.796281814575195
    7. 'queries' (adapté à ' queries') → logprob: -5.046281814575195
    8. '#' → logprob: -5.296281814575195
    9. '        
' → logprob: -6.296281814575195
    10. '    
' → logprob: -6.421281814575195

Token 1236: '[a' (ID: 32035)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.04959999769926071
    2. '[a' → logprob: -3.0495998859405518
    3. '[b' → logprob: -7.549600124359131
    4. '[' → logprob: -7.799600124359131
    5. 'a' → logprob: -10.549599647521973
    6. '
' → logprob: -11.924599647521973
    7. '[q' → logprob: -11.924599647521973
    8. '[l' → logprob: -12.049599647521973
    9. '```' → logprob: -12.549599647521973
    10. 'c' → logprob: -12.674599647521973

Token 1237: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5924471020698547
    2. '].' → logprob: -0.8424471020698547
    3. '.' → logprob: -4.717447280883789
    4. ').' → logprob: -4.967447280883789
    5. '[' → logprob: -8.467447280883789
    6. '[].' → logprob: -8.967447280883789
    7. '.app' → logprob: -10.342447280883789
    8. '   ' → logprob: -10.717447280883789
    9. '.setdefault' → logprob: -11.467447280883789
    10. 'append' → logprob: -11.592447280883789

Token 1238: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -9.088346359931165e-07
    2. ' append' → logprob: -14.500000953674316
    3. '.append' → logprob: -14.875000953674316
    4. '_append' → logprob: -18.125
    5. '	append' → logprob: -18.375
    6. '```' → logprob: -19.625
    7. 'appen' → logprob: -20.125
    8. 'Append' → logprob: -20.125
    9. 'pp' → logprob: -20.625
    10. 'insert' → logprob: -20.875

Token 1239: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0012802376877516508
    2. '(q' → logprob: -6.751280307769775
    3. '(' → logprob: -9.126279830932617
    4. '(ci' → logprob: -14.251279830932617
    5. '(((' → logprob: -15.001279830932617
    6. '(('' → logprob: -17.001279830932617
    7. '(c' → logprob: -17.251279830932617
    8. '(t' → logprob: -17.376279830932617
    9. '([' → logprob: -17.501279830932617
    10. ' ((' → logprob: -17.626279830932617

Token 1240: 'cx' (ID: 47207)
  Prédit: 'qi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qi' → logprob: -0.09098705649375916
    2. 'cx' → logprob: -2.965986967086792
    3. 'c' → logprob: -4.215987205505371
    4. '(c' → logprob: -5.090987205505371
    5. '(cx' → logprob: -5.215987205505371
    6. '(q' → logprob: -5.715987205505371
    7. 'qy' → logprob: -6.465987205505371
    8. 'qx' → logprob: -6.590987205505371
    9. 'col' → logprob: -7.590987205505371
    10. '(' → logprob: -7.715987205505371

Token 1241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.975612187583465e-05
    2. ' ,' → logprob: -11.250029563903809
    3. ',q' → logprob: -12.375029563903809
    4. ',
' → logprob: -12.500029563903809
    5. '[' → logprob: -14.000029563903809
    6. ',y' → logprob: -14.250029563903809
    7. '‌,' → logprob: -14.250029563903809
    8. '),' → logprob: -14.500029563903809
    9. '   ' → logprob: -14.500029563903809
    10. '       ' → logprob: -14.500029563903809

Token 1242: ' qi' (ID: 64017)
  Prédit: 'qi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qi' → logprob: -0.02371358685195446
    2. 'b' → logprob: -4.5237135887146
    3. 'c' → logprob: -6.0237135887146
    4. '(' → logprob: -6.1487135887146
    5. 'a' → logprob: -6.3987135887146
    6. 'qy' → logprob: -6.6487135887146
    7. '(q' → logprob: -6.7737135887146
    8. '(b' → logprob: -7.1487135887146
    9. 'dy' → logprob: -7.1487135887146
    10. 'dist' → logprob: -7.3987135887146

Token 1243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003864630125463009
    2. '))' → logprob: -8.500386238098145
    3. ',b' → logprob: -8.875386238098145
    4. '       ' → logprob: -11.250386238098145
    5. ',
' → logprob: -11.500386238098145
    6. ' ,' → logprob: -11.750386238098145
    7. ')' → logprob: -12.250386238098145
    8. '))
' → logprob: -13.125386238098145
    9. '   ' → logprob: -13.375386238098145
    10. ',y' → logprob: -14.125386238098145

Token 1244: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010851021856069565
    2. ' ' → logprob: -5.13585090637207
    3. 'dist' → logprob: -6.13585090637207
    4. '+' → logprob: -6.76085090637207
    5. '-' → logprob: -6.88585090637207
    6. 'dy' → logprob: -9.26085090637207
    7. '0' → logprob: -9.38585090637207
    8. 'b' → logprob: -9.51085090637207
    9. ' dist' → logprob: -9.51085090637207
    10. 'True' → logprob: -10.01085090637207

Token 1245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.028957651928067207
    2. 'dist' → logprob: -3.9039576053619385
    3. '-' → logprob: -5.653957843780518
    4. '+' → logprob: -6.278957843780518
    5. ' ' → logprob: -6.528957843780518
    6. 'a' → logprob: -7.903957843780518
    7. 'b' → logprob: -7.903957843780518
    8. 'c' → logprob: -8.65395736694336
    9. 'True' → logprob: -8.77895736694336
    10. '0' → logprob: -9.02895736694336

Token 1246: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1269126683473587
    2. '))
' → logprob: -2.3769125938415527
    3. ')' → logprob: -4.251912593841553
    4. ',' → logprob: -4.501912593841553
    5. ')
' → logprob: -7.501912593841553
    6. ',))
' → logprob: -8.001913070678711
    7. '   ' → logprob: -9.501913070678711
    8. ')))' → logprob: -10.751913070678711
    9. ',
' → logprob: -11.376913070678711
    10. '       ' → logprob: -11.626913070678711

Token 1247: ' dy' (ID: 11996)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.45760536193847656
    2. 'a' → logprob: -1.9576053619384766
    3. 'col' → logprob: -2.5826053619384766
    4. 'dist' → logprob: -2.5826053619384766
    5. '1' → logprob: -3.8326053619384766
    6. 'l' → logprob: -3.9576053619384766
    7. '-' → logprob: -5.082605361938477
    8. 'cx' → logprob: -5.207605361938477
    9. 'dy' → logprob: -5.332605361938477
    10. 'b' → logprob: -5.457605361938477

Token 1248: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.025579996407032013
    2. '))
' → logprob: -3.7755799293518066
    3. ')' → logprob: -6.900579929351807
    4. ',' → logprob: -6.900579929351807
    5. '       ' → logprob: -8.525580406188965
    6. '   ' → logprob: -9.900580406188965
    7. ')
' → logprob: -10.650580406188965
    8. ')))' → logprob: -10.650580406188965
    9. ',))
' → logprob: -12.150580406188965
    10. ' ))' → logprob: -12.150580406188965

Token 1249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016956117004156113
    2. '   ' → logprob: -4.141956329345703
    3. 'queries' → logprob: -8.141956329345703
    4. '<|end|>' → logprob: -8.266956329345703
    5. '
' → logprob: -9.016956329345703
    6. '```' → logprob: -9.016956329345703
    7. '           ' → logprob: -9.266956329345703
    8. ',' → logprob: -11.891956329345703
    9. ')' → logprob: -12.641956329345703
    10. '``' → logprob: -12.766956329345703

Token 1250: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' (adapté à ' queries') → logprob: -0.07177615910768509
    2. '       ' → logprob: -2.6967761516571045
    3. '   ' → logprob: -6.446776390075684
    4. ' queries' → logprob: -8.821776390075684
    5. 'questions' → logprob: -10.571776390075684
    6. '```' → logprob: -10.696776390075684
    7. 'quests' → logprob: -11.071776390075684
    8. '           ' → logprob: -11.071776390075684
    9. 'requests' → logprob: -12.196776390075684
    10. '
' → logprob: -12.321776390075684

Token 1251: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0339212603867054
    2. '[c' → logprob: -3.533921241760254
    3. '[a' → logprob: -5.533921241760254
    4. 'b' → logprob: -9.158921241760254
    5. '```' → logprob: -10.158921241760254
    6. '[' → logprob: -10.283921241760254
    7. 'a' → logprob: -12.158921241760254
    8. '   ' → logprob: -12.783921241760254
    9. '.append' → logprob: -12.908921241760254
    10. '[
' → logprob: -13.158921241760254

Token 1252: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.191753551363945
    2. ').' → logprob: -2.441753625869751
    3. '].' → logprob: -2.441753625869751
    4. '.' → logprob: -7.816753387451172
    5. '       ' → logprob: -10.566753387451172
    6. '.app' → logprob: -11.566753387451172
    7. '   ' → logprob: -11.566753387451172
    8. ',' → logprob: -12.191753387451172
    9. 'append' → logprob: -12.191753387451172
    10. ' .' → logprob: -12.441753387451172

Token 1253: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.0280383548888494e-06
    2. '.append' → logprob: -14.375000953674316
    3. 'appen' → logprob: -15.250000953674316
    4. ' append' → logprob: -16.000001907348633
    5. '
' → logprob: -18.250001907348633
    6. '```' → logprob: -19.000001907348633
    7. '	append' → logprob: -19.250001907348633
    8. '_append' → logprob: -19.500001907348633
    9. '   ' → logprob: -20.625001907348633
    10. 'Append' → logprob: -20.875001907348633

Token 1254: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -4.961759259458631e-06
    2. '(cx' → logprob: -12.375004768371582
    3. '(' → logprob: -15.000004768371582
    4. ' ((' → logprob: -16.6250057220459
    5. '(
' → logprob: -16.7500057220459
    6. '(c' → logprob: -17.0000057220459
    7. '```' → logprob: -17.2500057220459
    8. '(('' → logprob: -17.5000057220459
    9. '   ' → logprob: -17.7500057220459
    10. '
' → logprob: -18.6250057220459

Token 1255: 'cx' (ID: 47207)
  Prédit: '(cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cx' → logprob: -0.04861053079366684
    2. 'cx' → logprob: -3.0486104488372803
    3. '(c' → logprob: -11.04861068725586
    4. 'c' → logprob: -12.79861068725586
    5. ' cx' → logprob: -13.17361068725586
    6. '.cx' → logprob: -13.29861068725586
    7. ' (' → logprob: -15.17361068725586
    8. '
' → logprob: -15.54861068725586
    9. '[c' → logprob: -16.42361068725586
    10. 'CX' → logprob: -16.67361068725586

Token 1256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.014684110297821e-06
    2. ' ,' → logprob: -12.000008583068848
    3. '<|end|>' → logprob: -13.125008583068848
    4. ',
' → logprob: -15.250008583068848
    5. ',q' → logprob: -15.500008583068848
    6. '<|end|>' → logprob: -16.000009536743164
    7. '[' → logprob: -17.000009536743164
    8. '       ' → logprob: -17.250009536743164
    9. '',' → logprob: -17.625009536743164
    10. '```' → logprob: -17.625009536743164

Token 1257: ' qi' (ID: 64017)
  Prédit: 'qi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qi' → logprob: -0.00014215784904081374
    2. ' qi' → logprob: -8.875142097473145
    3. '0' → logprob: -14.875142097473145
    4. '
' → logprob: -14.875142097473145
    5. 'q' → logprob: -14.875142097473145
    6. '1' → logprob: -15.000142097473145
    7. 'qo' → logprob: -15.375142097473145
    8. '   ' → logprob: -16.25014305114746
    9. 'qa' → logprob: -16.37514305114746
    10. 'qy' → logprob: -17.00014305114746

Token 1258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.949026571121067e-05
    2. ' ,' → logprob: -9.250099182128906
    3. '(' → logprob: -13.000099182128906
    4. ',
' → logprob: -15.125099182128906
    5. '<|end|>' → logprob: -15.125099182128906
    6. ',(' → logprob: -16.250099182128906
    7. '),' → logprob: -16.250099182128906
    8. '`,' → logprob: -16.500099182128906
    9. ' (' → logprob: -16.750099182128906
    10. '       ' → logprob: -16.750099182128906

Token 1259: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -3.166338137816638e-05
    2. ' -' → logprob: -10.500031471252441
    3. '(-' → logprob: -13.625031471252441
    4. '0' → logprob: -13.750031471252441
    5. '1' → logprob: -13.750031471252441
    6. '
' → logprob: -15.125031471252441
    7. '(' → logprob: -16.250032424926758
    8. '   ' → logprob: -16.250032424926758
    9. '−' → logprob: -16.625032424926758
    10. '```' → logprob: -16.875032424926758

Token 1260: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.36574100604048e-06
    2. '1' → logprob: -13.125004768371582
    3. ' -' → logprob: -13.750004768371582
    4. '0' → logprob: -14.625004768371582
    5. '(-' → logprob: -14.750004768371582
    6. '−' → logprob: -15.875004768371582
    7. '
' → logprob: -16.000003814697266
    8. '(' → logprob: -16.250003814697266
    9. '-
' → logprob: -17.875003814697266
    10. '```' → logprob: -18.250003814697266

Token 1261: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011892046313732862
    2. ' ,' → logprob: -9.37511920928955
    3. ',
' → logprob: -10.75011920928955
    4. ',d' → logprob: -11.75011920928955
    5. ',c' → logprob: -13.75011920928955
    6. ',b' → logprob: -13.75011920928955
    7. '<|end|>' → logprob: -14.75011920928955
    8. '```' → logprob: -15.00011920928955
    9. ',y' → logprob: -15.12511920928955
    10. '   ' → logprob: -15.62511920928955

Token 1262: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.003142300993204117
    2. 'd' → logprob: -6.878142356872559
    3. ' dy' → logprob: -7.128142356872559
    4. 'c' → logprob: -7.253142356872559
    5. '-' → logprob: -7.753142356872559
    6. '0' → logprob: -9.878142356872559
    7. '-d' → logprob: -10.128142356872559
    8. '1' → logprob: -11.253142356872559
    9. '
' → logprob: -11.253142356872559
    10. 'dx' → logprob: -11.378142356872559

Token 1263: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04896271228790283
    2. ')
' → logprob: -3.0489625930786133
    3. '       ' → logprob: -7.923962593078613
    4. '))' → logprob: -12.673962593078613
    5. '   ' → logprob: -12.798962593078613
    6. ')
' → logprob: -13.173962593078613
    7. ' )' → logprob: -13.548962593078613
    8. ')`
' → logprob: -14.048962593078613
    9. ')`' → logprob: -14.673962593078613
    10. ')}' → logprob: -14.798962593078613

Token 1264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005611626897007227
    2. '   ' → logprob: -6.130611419677734
    3. '<|end|>' → logprob: -6.130611419677734
    4. '```' → logprob: -6.880611419677734
    5. '
' → logprob: -9.880611419677734
    6. '	' → logprob: -10.005611419677734
    7. ',' → logprob: -10.380611419677734
    8. ' ' → logprob: -10.755611419677734
    9. ')' → logprob: -11.255611419677734
    10. '<|end|>' → logprob: -11.755611419677734

Token 1265: ' queries' (ID: 32122)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25325003266334534
    2. 'queries' (adapté à ' queries') → logprob: -1.503250002861023
    3. '   ' → logprob: -8.003250122070312
    4. '```' → logprob: -8.128250122070312
    5. ' queries' → logprob: -8.753250122070312
    6. '           ' → logprob: -9.253250122070312
    7. 'questions' → logprob: -9.753250122070312
    8. 'c' → logprob: -9.878250122070312
    9. '#' → logprob: -9.878250122070312
    10. 'query' → logprob: -10.128250122070312

Token 1266: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.2948405128554441e-05
    2. '   ' → logprob: -12.62501335144043
    3. '
' → logprob: -12.87501335144043
    4. '```' → logprob: -13.00001335144043
    5. '[' → logprob: -13.50001335144043
    6. 'c' → logprob: -13.75001335144043
    7. '       ' → logprob: -14.12501335144043
    8. '[C' → logprob: -15.12501335144043
    9. '[l' → logprob: -15.50001335144043
    10. ' [' → logprob: -15.50001335144043

Token 1267: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.25671517848968506
    2. '.append' → logprob: -1.881715178489685
    3. ').' → logprob: -3.2567152976989746
    4. '[c' → logprob: -3.5067152976989746
    5. '       ' → logprob: -6.506715297698975
    6. ',' → logprob: -6.756715297698975
    7. '][' → logprob: -6.881715297698975
    8. 'c' → logprob: -8.256714820861816
    9. '```' → logprob: -8.256714820861816
    10. '.' → logprob: -8.756714820861816

Token 1268: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -7.896309739408025e-07
    2. ' append' → logprob: -14.625000953674316
    3. 'appen' → logprob: -15.875000953674316
    4. '.append' → logprob: -16.0
    5. 'extend' → logprob: -17.875
    6. '	append' → logprob: -18.75
    7. '```' → logprob: -19.25
    8. '   ' → logprob: -19.5
    9. 'Append' → logprob: -19.5
    10. 'appe' → logprob: -19.625

Token 1269: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.000563638168387115
    2. '(cx' → logprob: -7.500563621520996
    3. '(c' → logprob: -12.000563621520996
    4. '(' → logprob: -12.875563621520996
    5. '[(' → logprob: -14.750563621520996
    6. ' (' → logprob: -14.875563621520996
    7. '(
' → logprob: -14.875563621520996
    8. '=(' → logprob: -15.625563621520996
    9. '(None' → logprob: -16.500564575195312
    10. '   ' → logprob: -16.500564575195312

Token 1270: 'cx' (ID: 47207)
  Prédit: '(cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cx' → logprob: -0.029757894575595856
    2. 'cx' → logprob: -3.5297579765319824
    3. ' cx' → logprob: -12.279757499694824
    4. 'CX' → logprob: -13.779757499694824
    5. '.cx' → logprob: -13.904757499694824
    6. 'Cx' → logprob: -15.154757499694824
    7. ' (' → logprob: -15.779757499694824
    8. '0' → logprob: -16.52975845336914
    9. 'x' → logprob: -16.65475845336914
    10. '(
' → logprob: -16.65475845336914

Token 1271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.231182826217264e-05
    2. '[' → logprob: -10.000072479248047
    3. ' ,' → logprob: -10.875072479248047
    4. '<|end|>' → logprob: -12.500072479248047
    5. ',
' → logprob: -13.250072479248047
    6. ',q' → logprob: -14.500072479248047
    7. '       ' → logprob: -14.750072479248047
    8. ',c' → logprob: -14.875072479248047
    9. '[],' → logprob: -15.875072479248047
    10. '[
' → logprob: -15.875072479248047

Token 1272: ' qi' (ID: 64017)
  Prédit: 'qi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qi' → logprob: -0.0017144508892670274
    2. ' qi' → logprob: -6.37671422958374
    3. 'q' → logprob: -12.626714706420898
    4. 'ci' → logprob: -14.001714706420898
    5. '   ' → logprob: -14.126714706420898
    6. '     ' → logprob: -14.501714706420898
    7. 'qid' → logprob: -14.626714706420898
    8. 'qc' → logprob: -14.626714706420898
    9. 'qo' → logprob: -14.626714706420898
    10. ' ' → logprob: -14.751714706420898

Token 1273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.082895273109898e-05
    2. ' ,' → logprob: -10.750030517578125
    3. '       ' → logprob: -12.125030517578125
    4. '(' → logprob: -13.500030517578125
    5. '[' → logprob: -14.000030517578125
    6. '0' → logprob: -14.125030517578125
    7. '           ' → logprob: -14.750030517578125
    8. '               ' → logprob: -16.625030517578125
    9. ',
' → logprob: -16.750030517578125
    10. '(),' → logprob: -16.875030517578125

Token 1274: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007801569066941738
    2. ' -' → logprob: -5.382801532745361
    3. '1' → logprob: -6.507801532745361
    4. '0' → logprob: -6.632801532745361
    5. '2' → logprob: -8.50780200958252
    6. ')' → logprob: -10.13280200958252
    7. '(-' → logprob: -10.38280200958252
    8. '(' → logprob: -10.50780200958252
    9. '
' → logprob: -10.88280200958252
    10. ' ' → logprob: -11.25780200958252

Token 1275: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031871015671640635
    2. '2' → logprob: -5.75318717956543
    3. ' ' → logprob: -11.62818717956543
    4. '   ' → logprob: -16.00318717956543
    5. '-' → logprob: -16.50318717956543
    6. ')' → logprob: -16.75318717956543
    7. '=' → logprob: -16.87818717956543
    8. '0' → logprob: -17.00318717956543
    9. ',' → logprob: -17.12818717956543
    10. '           ' → logprob: -17.12818717956543

Token 1276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.612634362885728e-05
    2. ' ,' → logprob: -9.500076293945312
    3. ',
' → logprob: -14.375076293945312
    4. ')' → logprob: -15.375076293945312
    5. '<|end|>' → logprob: -15.500076293945312
    6. '       ' → logprob: -16.375076293945312
    7. '   ' → logprob: -17.375076293945312
    8. ',d' → logprob: -17.625076293945312
    9. '           ' → logprob: -17.875076293945312
    10. '),' → logprob: -18.250076293945312

Token 1277: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.026351509615778923
    2. ' dy' → logprob: -3.6513514518737793
    3. '0' → logprob: -10.276351928710938
    4. 'dx' → logprob: -12.401351928710938
    5. 'd' → logprob: -12.776351928710938
    6. ' ' → logprob: -12.901351928710938
    7. '   ' → logprob: -13.276351928710938
    8. '1' → logprob: -13.526351928710938
    9. '
' → logprob: -14.276351928710938
    10. '    ' → logprob: -15.151351928710938

Token 1278: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001872094871941954
    2. ')
' → logprob: -8.750186920166016
    3. '       ' → logprob: -10.875186920166016
    4. ' )' → logprob: -12.000186920166016
    5. '))' → logprob: -13.875186920166016
    6. '   ' → logprob: -14.125186920166016
    7. ')}' → logprob: -14.625186920166016
    8. '<|end|>' → logprob: -15.125186920166016
    9. ')

' → logprob: -15.500186920166016
    10. ')`' → logprob: -15.625186920166016

Token 1279: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026748869568109512
    2. 'for' → logprob: -4.1517486572265625
    3. '
' → logprob: -5.4017486572265625
    4. ' for' → logprob: -5.7767486572265625
    5. 'def' → logprob: -6.1517486572265625
    6. '```' → logprob: -8.026748657226562
    7. '       ' → logprob: -8.276748657226562
    8. ')' → logprob: -8.901748657226562
    9. '    
' → logprob: -9.526748657226562
    10. 'from' → logprob: -10.026748657226562

Token 1280: ' cnt' (ID: 27340)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15430232882499695
    2. 'color' → logprob: -2.9043023586273193
    3. 'from' → logprob: -3.6543023586273193
    4. '#' → logprob: -4.27930212020874
    5. 'colors' → logprob: -4.52930212020874
    6. 'cnt' (adapté à ' cnt') → logprob: -5.27930212020874
    7. 'def' → logprob: -5.40430212020874
    8. 'import' → logprob: -5.52930212020874
    9. 'for' → logprob: -5.52930212020874
    10. 'counter' → logprob: -5.65430212020874

Token 1281: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2975004315376282
    2. '=' → logprob: -1.6725003719329834
    3. '_' → logprob: -3.1725003719329834
    4. 's' → logprob: -4.5475006103515625
    5. '_c' → logprob: -4.9225006103515625
    6. '_col' → logprob: -6.0475006103515625
    7. ',' → logprob: -6.1725006103515625
    8. '_cnt' → logprob: -6.7975006103515625
    9. '_counter' → logprob: -7.0475006103515625
    10. '_colors' → logprob: -7.1725006103515625

Token 1282: ' [' (ID: 723)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.04876631125807762
    2. '[' → logprob: -3.0487663745880127
    3. 'Counter' → logprob: -9.173766136169434
    4. '{' → logprob: -10.548766136169434
    5. '(default' → logprob: -10.923766136169434
    6. '[[' → logprob: -11.798766136169434
    7. '0' → logprob: -12.173766136169434
    8. ' defaultdict' → logprob: -12.298766136169434
    9. '.default' → logprob: -12.423766136169434
    10. '   ' → logprob: -13.548766136169434

Token 1283: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4271469712257385
    2. 'default' → logprob: -1.1771469116210938
    3. '[' → logprob: -3.3021469116210938
    4. 'N' → logprob: -7.177146911621094
    5. '[M' → logprob: -7.427146911621094
    6. '{}' → logprob: -7.802146911621094
    7. 'MG' → logprob: -8.177146911621094
    8. '[N' → logprob: -8.927146911621094
    9. '{' → logprob: -9.052146911621094
    10. 'dict' → logprob: -9.052146911621094

Token 1284: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27323147654533386
    2. ']' → logprob: -1.6482315063476562
    3. ' for' → logprob: -4.023231506347656
    4. 'for' → logprob: -4.273231506347656
    5. ' *' → logprob: -5.773231506347656
    6. ']*(' → logprob: -6.148231506347656
    7. ' ,' → logprob: -6.273231506347656
    8. '[' → logprob: -6.398231506347656
    9. '(M' → logprob: -7.023231506347656
    10. '(' → logprob: -7.148231506347656

Token 1285: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5707647800445557
    2. ',' → logprob: -1.4457647800445557
    3. '*' → logprob: -2.1957647800445557
    4. '*(' → logprob: -3.4457647800445557
    5. '[' → logprob: -4.195764541625977
    6. ']' → logprob: -4.445764541625977
    7. ' for' → logprob: -5.320764541625977
    8. '*[' → logprob: -5.320764541625977
    9. ')' → logprob: -5.445764541625977
    10. 'for' → logprob: -5.695764541625977

Token 1286: ' N' (ID: 478)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.009534246288239956
    2. '(' → logprob: -5.2595343589782715
    3. '(N' → logprob: -6.2595343589782715
    4. '(MAX' → logprob: -7.1345343589782715
    5. '101' → logprob: -8.134533882141113
    6. '100' → logprob: -8.884533882141113
    7. ' (' → logprob: -8.884533882141113
    8. 'MG' → logprob: -9.009533882141113
    9. 'N' → logprob: -9.134533882141113
    10. 'MOD' → logprob: -9.134533882141113

Token 1287: '
' (ID: 198)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -1.431470274925232
    2. 'freq' → logprob: -1.431470274925232
    3. '   ' → logprob: -2.0564703941345215
    4. 'col' → logprob: -2.1814703941345215
    5. 'sum' → logprob: -2.5564703941345215
    6. 'weight' → logprob: -3.8064703941345215
    7. 'colors' → logprob: -3.9314703941345215
    8. 'for' → logprob: -3.9314703941345215
    9. 'cum' → logprob: -4.1814703941345215
    10. 'weights' → logprob: -4.5564703941345215

Token 1288: '   ' (ID: 271)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.5837851762771606
    2. 'col' → logprob: -1.3337851762771606
    3. 'stack' → logprob: -3.333785057067871
    4. 'freq' → logprob: -3.333785057067871
    5. 'def' → logprob: -3.458785057067871
    6. 'colors' → logprob: -3.958785057067871
    7. '   ' → logprob: -4.208785057067871
    8. 'for' → logprob: -4.958785057067871
    9. 'bit' → logprob: -5.083785057067871
    10. 'cnt' → logprob: -5.708785057067871

Token 1289: ' sum' (ID: 4215)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1188517808914185
    2. 'color' → logprob: -1.1188517808914185
    3. 'col' → logprob: -2.118851661682129
    4. 'stack' → logprob: -2.243851661682129
    5. 'from' → logprob: -2.868851661682129
    6. 'freq' → logprob: -4.493851661682129
    7. 'cnt' → logprob: -4.618851661682129
    8. 'colors' → logprob: -4.618851661682129
    9. 'depth' → logprob: -4.618851661682129
    10. 'bit' → logprob: -6.243851661682129

Token 1290: '_' (ID: 62)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6690576672554016
    2. '_' → logprob: -1.1690576076507568
    3. '=' → logprob: -2.544057607650757
    4. ' =' → logprob: -2.919057607650757
    5. '_weights' → logprob: -4.294057846069336
    6. '_cost' → logprob: -5.544057846069336
    7. '_=' → logprob: -5.669057846069336
    8. '[' → logprob: -6.044057846069336
    9. '_col' → logprob: -6.169057846069336
    10. '_values' → logprob: -6.169057846069336

Token 1291: ' =' (ID: 314)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.9482288360595703
    2. '=' → logprob: -1.8232288360595703
    3. 'dist' → logprob: -1.8232288360595703
    4. ' =' → logprob: -2.3232288360595703
    5. 'cnt' → logprob: -2.4482288360595703
    6. 'color' → logprob: -3.1982288360595703
    7. 'cost' → logprob: -4.07322883605957
    8. 'c' → logprob: -4.44822883605957
    9. '_=' → logprob: -5.32322883605957
    10. 'vals' → logprob: -5.57322883605957

Token 1292: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0015491410158574581
    2. '0' → logprob: -6.501549243927002
    3. '[N' → logprob: -10.876548767089844
    4. ' [' → logprob: -11.501548767089844
    5. '[M' → logprob: -12.001548767089844
    6. '   ' → logprob: -13.251548767089844
    7. '[cnt' → logprob: -13.251548767089844
    8. '[len' → logprob: -13.876548767089844
    9. '[count' → logprob: -14.126548767089844
    10. '[n' → logprob: -14.251548767089844

Token 1293: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03373122215270996
    2. '[' → logprob: -3.40873122215271
    3. '[N' → logprob: -10.158731460571289
    4. 'default' → logprob: -11.283731460571289
    5. 'N' → logprob: -11.533731460571289
    6. '{}' → logprob: -11.658731460571289
    7. '[M' → logprob: -12.158731460571289
    8. ' [' → logprob: -13.283731460571289
    9. '
' → logprob: -13.783731460571289
    10. '(' → logprob: -13.783731460571289

Token 1294: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030618881806731224
    2. '[' → logprob: -4.780618667602539
    3. ' *' → logprob: -4.905618667602539
    4. ' ]' → logprob: -6.155618667602539
    5. '   ' → logprob: -6.280618667602539
    6. ',' → logprob: -6.655618667602539
    7. ' =' → logprob: -6.780618667602539
    8. '*' → logprob: -6.905618667602539
    9. '(N' → logprob: -6.905618667602539
    10. '(' → logprob: -7.030618667602539

Token 1295: ' *' (ID: 425)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.49808213114738464
    2. '*' → logprob: -1.498082160949707
    3. ' *' → logprob: -2.748082160949707
    4. ' =' → logprob: -2.873082160949707
    5. '(' → logprob: -3.998082160949707
    6. '[' → logprob: -4.373082160949707
    7. '(N' → logprob: -5.873082160949707
    8. '
' → logprob: -5.998082160949707
    9. 'def' → logprob: -6.498082160949707
    10. ']' → logprob: -6.873082160949707

Token 1296: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.002041533123701811
    2. '(N' → logprob: -6.377041339874268
    3. '(M' → logprob: -8.377041816711426
    4. 'MOD' → logprob: -10.002041816711426
    5. '(' → logprob: -10.252041816711426
    6. 'n' → logprob: -12.502041816711426
    7. '101' → logprob: -12.752041816711426
    8. '10' → logprob: -12.877041816711426
    9. '100' → logprob: -12.877041816711426
    10. '
' → logprob: -12.877041816711426

Token 1297: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06155437231063843
    2. 'def' → logprob: -3.061554431915283
    3. 'stack' → logprob: -6.061554431915283
    4. '
' → logprob: -6.186554431915283
    5. 'col' → logprob: -7.436554431915283
    6. 'for' → logprob: -7.436554431915283
    7. 'color' → logprob: -7.436554431915283
    8. 'idx' → logprob: -7.561554431915283
    9. 'weight' → logprob: -7.686554431915283
    10. ')' → logprob: -7.686554431915283

Token 1298: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4000142812728882
    2. 'color' → logprob: -1.7750142812728882
    3. 'def' → logprob: -2.2750144004821777
    4. 'stack' → logprob: -4.150014400482178
    5. 'col' → logprob: -4.525014400482178
    6. 'colors' → logprob: -4.900014400482178
    7. 'from' → logprob: -5.150014400482178
    8. 'pos' → logprob: -5.275014400482178
    9. 'idx' → logprob: -6.150014400482178
    10. 'cur' → logprob: -6.650014400482178

Token 1299: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5717474818229675
    2. 'color' → logprob: -1.5717475414276123
    3. 'stack' → logprob: -2.6967475414276123
    4. '   ' → logprob: -3.1967475414276123
    5. 'col' → logprob: -3.8217475414276123
    6. 'from' → logprob: -3.8217475414276123
    7. 'for' → logprob: -4.321747303009033
    8. 'order' → logprob: -5.071747303009033
    9. 'bit' → logprob: -5.071747303009033
    10. '#' (adapté à ' #') → logprob: -5.321747303009033

Token 1300: ' Iter' (ID: 24464)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4816756546497345
    2. 'stack' → logprob: -1.231675624847412
    3. 'color' → logprob: -3.481675624847412
    4. 'from' → logprob: -3.856675624847412
    5. '#' → logprob: -5.231675624847412
    6. 'depth' → logprob: -5.356675624847412
    7. 'visited' → logprob: -5.606675624847412
    8. 'stk' → logprob: -5.731675624847412
    9. '   ' → logprob: -5.856675624847412
    10. 'import' → logprob: -5.981675624847412

Token 1301: 'ative' (ID: 1799)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.026361379772424698
    2. '   ' → logprob: -3.7763614654541016
    3. '#' → logprob: -6.901361465454102
    4. 'import' → logprob: -7.151361465454102
    5. 'stack' → logprob: -7.526361465454102
    6. '       ' → logprob: -8.651361465454102
    7. 'from' → logprob: -8.651361465454102
    8. 'for' → logprob: -9.026361465454102
    9. 'e' → logprob: -9.026361465454102
    10. '=' → logprob: -10.526361465454102

Token 1302: ' DFS' (ID: 115767)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.4226224422454834
    2. 'stack' → logprob: -1.5476224422454834
    3. 'def' → logprob: -2.2976224422454834
    4. '   ' → logprob: -4.2976226806640625
    5. ' def' → logprob: -4.2976226806640625
    6. ' for' → logprob: -6.9226226806640625
    7. '_stack' → logprob: -7.6726226806640625
    8. ' queue' → logprob: -7.6726226806640625
    9. 'for' → logprob: -7.7976226806640625
    10. 'queue' → logprob: -8.047622680664062

Token 1303: ' using' (ID: 2360)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015862032771110535
    2. 'def' → logprob: -5.015861988067627
    3. 'stack' → logprob: -5.140861988067627
    4. ' stack' → logprob: -6.015861988067627
    5. '
' → logprob: -8.515862464904785
    6. ' def' → logprob: -8.765862464904785
    7. '(stack' → logprob: -9.640862464904785
    8. ':' → logprob: -9.765862464904785
    9. ' =' → logprob: -10.015862464904785
    10. ')' → logprob: -10.265862464904785

Token 1304: ' a' (ID: 261)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.07139518857002258
    2. 'Stack' → logprob: -2.9463951587677
    3. '[]' → logprob: -4.821395397186279
    4. ' stack' → logprob: -5.196395397186279
    5. 'stk' → logprob: -7.696395397186279
    6. 'class' → logprob: -8.071394920349121
    7. 'a' → logprob: -8.196394920349121
    8. '_stack' → logprob: -8.321394920349121
    9. 'Queue' → logprob: -8.696394920349121
    10. '[' → logprob: -8.821394920349121

Token 1305: ' manual' (ID: 15203)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.030098605901002884
    2. ' stack' → logprob: -3.5300986766815186
    3. 'Stack' → logprob: -8.155098915100098
    4. '_stack' → logprob: -9.905098915100098
    5. 'stk' → logprob: -12.530098915100098
    6. ' Stack' → logprob: -12.780098915100098
    7. 'def' → logprob: -13.405098915100098
    8. 'deque' → logprob: -14.030098915100098
    9. 'st' → logprob: -14.405098915100098
    10. '	stack' → logprob: -14.655098915100098

Token 1306: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.001175343873910606
    2. ' stack' → logprob: -6.751175403594971
    3. '_stack' → logprob: -13.001174926757812
    4. 'Stack' → logprob: -13.376174926757812
    5. '
' → logprob: -15.001174926757812
    6. 'def' → logprob: -15.251174926757812
    7. 'import' → logprob: -15.376174926757812
    8. 'stk' → logprob: -15.376174926757812
    9. 'from' → logprob: -15.501174926757812
    10. '   ' → logprob: -16.876174926757812

Token 1307: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009045983664691448
    2. 'stack' → logprob: -5.0090460777282715
    3. ' stack' → logprob: -6.1340460777282715
    4. '
' → logprob: -9.259045600891113
    5. '```' → logprob: -10.134045600891113
    6. '	stack' → logprob: -11.759045600891113
    7. 'def' → logprob: -12.134045600891113
    8. 'stk' → logprob: -12.384045600891113
    9. '(stack' → logprob: -12.884045600891113
    10. '    
' → logprob: -13.259045600891113

Token 1308: ' performance' (ID: 6198)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3747841715812683
    2. 'node' → logprob: -1.749784231185913
    3. 'stack' → logprob: -2.249784231185913
    4. ' stack' → logprob: -4.374783992767334
    5. 'u' → logprob: -5.249783992767334
    6. '_' → logprob: -5.499783992767334
    7. ' node' → logprob: -5.874783992767334
    8. ' v' → logprob: -5.999783992767334
    9. '_stack' → logprob: -6.124783992767334
    10. 'i' → logprob: -6.749783992767334

Token 1309: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5782386660575867
    2. 'stack' → logprob: -0.8282386660575867
    3. ' stack' → logprob: -7.203238487243652
    4. '
' → logprob: -7.203238487243652
    5. 'stk' → logprob: -7.828238487243652
    6. '```' → logprob: -7.953238487243652
    7. 'def' → logprob: -11.078238487243652
    8. 'st' → logprob: -11.078238487243652
    9. '	stack' → logprob: -11.453238487243652
    10. '``' → logprob: -12.203238487243652

Token 1310: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10815078020095825
    2. 'stack' → logprob: -2.4831507205963135
    3. ' stack' → logprob: -4.358150959014893
    4. '
' → logprob: -5.983150959014893
    5. '```' → logprob: -5.983150959014893
    6. 'def' → logprob: -7.358150959014893
    7. '	stack' → logprob: -8.733150482177734
    8. 'stk' → logprob: -8.858150482177734
    9. '    
' → logprob: -9.858150482177734
    10. ':' → logprob: -10.108150482177734

Token 1311: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.1280261129140854
    2. ' stack' → logprob: -2.128026008605957
    3. '   ' → logprob: -7.253026008605957
    4. 'stk' → logprob: -8.878026008605957
    5. '
' → logprob: -9.003026008605957
    6. '```' → logprob: -9.753026008605957
    7. ' stk' → logprob: -11.003026008605957
    8. 'st' → logprob: -11.128026008605957
    9. '_stack' → logprob: -11.128026008605957
    10. '	stack' → logprob: -11.628026008605957

Token 1312: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023269588127732277
    2. '=' → logprob: -3.7732696533203125
    3. '=[]' → logprob: -10.898269653320312
    4. '.append' → logprob: -13.398269653320312
    5. ',' → logprob: -14.023269653320312
    6. '=[' → logprob: -14.148269653320312
    7. ':' → logprob: -14.148269653320312
    8. ' =[' → logprob: -14.773269653320312
    9. ')' → logprob: -14.898269653320312
    10. '=[]
' → logprob: -15.273269653320312

Token 1313: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -3.810037742368877e-05
    2. '[' → logprob: -10.500038146972656
    3. '[((' → logprob: -11.500038146972656
    4. ' [(' → logprob: -15.000038146972656
    5. '[root' → logprob: -17.750038146972656
    6. '[-' → logprob: -18.250038146972656
    7. '[start' → logprob: -18.875038146972656
    8. '[node' → logprob: -19.000038146972656
    9. '([(' → logprob: -19.000038146972656
    10. '[s' → logprob: -19.250038146972656

Token 1314: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004299540014471859
    2. 'l' → logprob: -8.1254301071167
    3. '(' → logprob: -9.0004301071167
    4. '(l' → logprob: -12.0004301071167
    5. ')' → logprob: -13.3754301071167
    6. 'root' → logprob: -14.5004301071167
    7. ' ' → logprob: -14.8754301071167
    8. 'self' → logprob: -15.1254301071167
    9. '
' → logprob: -15.3754301071167
    10. '[' → logprob: -15.6254301071167

Token 1315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.735893965815194e-05
    2. ' ,' → logprob: -11.250017166137695
    3. ',
' → logprob: -13.875017166137695
    4. ',)' → logprob: -14.125017166137695
    5. ',None' → logprob: -14.375017166137695
    6. '   ' → logprob: -14.375017166137695
    7. ')]' → logprob: -14.625017166137695
    8. '0' → logprob: -15.125017166137695
    9. ',[' → logprob: -15.125017166137695
    10. ')' → logprob: -15.250017166137695

Token 1316: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0024930182844400406
    2. '0' → logprob: -6.002492904663086
    3. 'None' → logprob: -11.252492904663086
    4. ' -' → logprob: -12.502492904663086
    5. 'False' → logprob: -15.002492904663086
    6. '-N' → logprob: -15.627492904663086
    7. '(-' → logprob: -17.252492904663086
    8. '-none' → logprob: -17.377492904663086
    9. ' ' → logprob: -18.002492904663086
    10. '−' → logprob: -18.002492904663086

Token 1317: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '
' → logprob: -18.125
    4. '```' → logprob: -19.375
    5. '１' → logprob: -19.5
    6. '2' → logprob: -19.75
    7. ')' → logprob: -20.0
    8. '

' → logprob: -20.1875
    9. '   ' → logprob: -20.1875
    10. 'None' → logprob: -20.25

Token 1318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05556295067071915
    2. ')]' → logprob: -2.930562973022461
    3. ')]
' → logprob: -7.805562973022461
    4. ')' → logprob: -8.430562973022461
    5. '   ' → logprob: -10.680562973022461
    6. ' ,' → logprob: -11.055562973022461
    7. ')]

' → logprob: -13.180562973022461
    8. ' )' → logprob: -13.180562973022461
    9. ',
' → logprob: -13.305562973022461
    10. ')])' → logprob: -13.430562973022461

Token 1319: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003192578151356429
    2. 'False' → logprob: -9.125319480895996
    3. 'iter' → logprob: -9.125319480895996
    4. ''' → logprob: -10.375319480895996
    5. '1' → logprob: -11.125319480895996
    6. 'True' → logprob: -11.375319480895996
    7. ' ' → logprob: -11.500319480895996
    8. 'edges' → logprob: -11.875319480895996
    9. '-' → logprob: -12.000319480895996
    10. 'None' → logprob: -12.625319480895996

Token 1320: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005185963120311499
    2. 'False' → logprob: -6.005186080932617
    3. '-' → logprob: -6.755186080932617
    4. 'None' → logprob: -7.755186080932617
    5. 'INF' → logprob: -7.880186080932617
    6. '1' → logprob: -8.630186080932617
    7. 'True' → logprob: -8.880186080932617
    8. ''' → logprob: -9.380186080932617
    9. 'iter' → logprob: -9.505186080932617
    10. 'edges' → logprob: -9.755186080932617

Token 1321: ',' (ID: 11)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.06305572390556335
    2. ',' → logprob: -2.8130557537078857
    3. ')]
' → logprob: -7.063055515289307
    4. ')' → logprob: -9.063055992126465
    5. '   ' → logprob: -10.188055992126465
    6. ' )' → logprob: -10.563055992126465
    7. ')]

' → logprob: -11.313055992126465
    8. ']' → logprob: -12.063055992126465
    9. ' ,' → logprob: -12.063055992126465
    10. ')][' → logprob: -12.438055992126465

Token 1322: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3910297155380249
    2. 'edges' → logprob: -1.516029715538025
    3. 'False' → logprob: -3.2660298347473145
    4. '1' → logprob: -3.7660298347473145
    5. 'len' → logprob: -4.2660298347473145
    6. 'cnt' → logprob: -4.7660298347473145
    7. ')]' → logprob: -5.2660298347473145
    8. '[]' → logprob: -5.3910298347473145
    9. 'sum' → logprob: -6.3910298347473145
    10. 'stack' → logprob: -6.6410298347473145

Token 1323: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4906193017959595
    2. 'edges' → logprob: -1.2406193017959595
    3. 'False' → logprob: -3.36561918258667
    4. '1' → logprob: -3.36561918258667
    5. 'len' → logprob: -4.36561918258667
    6. 'cnt' → logprob: -5.61561918258667
    7. '-' → logprob: -6.11561918258667
    8. 'sum' → logprob: -6.61561918258667
    9. 'None' → logprob: -6.86561918258667
    10. 'True' → logprob: -6.86561918258667

Token 1324: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.042193248867988586
    2. ')]
' → logprob: -3.5421931743621826
    3. ',' → logprob: -4.417193412780762
    4. ' )' → logprob: -8.667193412780762
    5. ')' → logprob: -10.292193412780762
    6. ')]

' → logprob: -10.667193412780762
    7. ']' → logprob: -11.167193412780762
    8. ' ,' → logprob: -11.292193412780762
    9. '   ' → logprob: -11.417193412780762
    10. ')
' → logprob: -11.417193412780762

Token 1325: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018293576315045357
    2. '   ' → logprob: -4.518293380737305
    3. ' 
' → logprob: -6.393293380737305
    4. 'while' → logprob: -6.643293380737305
    5. ' while' → logprob: -6.893293380737305
    6. ':' → logprob: -7.268293380737305
    7. '    
' → logprob: -7.393293380737305
    8. ')' → logprob: -7.643293380737305
    9. ')
' → logprob: -7.893293380737305
    10. '  
' → logprob: -8.143293380737305

Token 1326: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006176802329719067
    2. '   ' → logprob: -5.756176948547363
    3. '    
' → logprob: -7.631176948547363
    4. '  
' → logprob: -7.881176948547363
    5. 'while' → logprob: -8.006176948547363
    6. ',' → logprob: -8.131176948547363
    7. ':' → logprob: -8.131176948547363
    8. ' 
' → logprob: -8.131176948547363
    9. ' while' → logprob: -8.756176948547363
    10. ')
' → logprob: -8.881176948547363

Token 1327: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0446635484695435
    2. ')' → logprob: -1.6696635484695435
    3. '[]' → logprob: -1.7946635484695435
    4. 'while' → logprob: -1.9196635484695435
    5. 'len' → logprob: -3.169663429260254
    6. '   ' → logprob: -4.294663429260254
    7. '1' → logprob: -4.294663429260254
    8. '[])' → logprob: -4.544663429260254
    9. 'depth' → logprob: -4.794663429260254
    10. ' while' → logprob: -4.919663429260254

Token 1328: 'node' (ID: 7005)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3695739209651947
    2. 'node' → logprob: -1.244573950767517
    3. 'u' → logprob: -4.619574069976807
    4. '0' → logprob: -4.869574069976807
    5. ' node' → logprob: -6.369574069976807
    6. 'vertex' → logprob: -7.369574069976807
    7. ')' → logprob: -7.619574069976807
    8. ' v' → logprob: -7.869574069976807
    9. 'stack' → logprob: -10.494573593139648
    10. ')v' → logprob: -10.494573593139648

Token 1329: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7968066206085496e-05
    2. '<|end|>' → logprob: -12.250027656555176
    3. ',
' → logprob: -12.375027656555176
    4. '   ' → logprob: -12.625027656555176
    5. ')' → logprob: -12.625027656555176
    6. ' ,' → logprob: -12.750027656555176
    7. ',node' → logprob: -13.750027656555176
    8. ',index' → logprob: -14.000027656555176
    9. '0' → logprob: -14.125027656555176
    10. '```' → logprob: -14.500027656555176

Token 1330: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.00429718429222703
    2. 'par' → logprob: -5.879297256469727
    3. 'idx' → logprob: -7.504297256469727
    4. ' parent' → logprob: -8.004297256469727
    5. 'pos' → logprob: -8.879297256469727
    6. 'prev' → logprob: -8.879297256469727
    7. 'state' → logprob: -9.379297256469727
    8. 'depth' → logprob: -9.504297256469727
    9. 'index' → logprob: -10.004297256469727
    10. '0' → logprob: -10.254297256469727

Token 1331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015955790877342224
    2. ')' → logprob: -8.87515926361084
    3. ',node' → logprob: -12.00015926361084
    4. ' ,' → logprob: -12.12515926361084
    5. ',
' → logprob: -12.25015926361084
    6. '   ' → logprob: -14.00015926361084
    7. 'index' → logprob: -14.50015926361084
    8. '
' → logprob: -15.25015926361084
    9. '[' → logprob: -15.62515926361084
    10. '0' → logprob: -15.87515926361084

Token 1332: ' last' (ID: 2174)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.8734909296035767
    2. 'depth' → logprob: -1.6234909296035767
    3. 'state' → logprob: -2.123490810394287
    4. '0' → logprob: -2.748490810394287
    5. 'child' → logprob: -2.873490810394287
    6. 'color' → logprob: -3.373490810394287
    7. 'index' → logprob: -3.748490810394287
    8. 'edge' → logprob: -3.748490810394287
    9. 'col' → logprob: -3.873490810394287
    10. 'weight' → logprob: -3.998490810394287

Token 1333: '_color' (ID: 15576)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -1.0817553997039795
    2. '_index' → logprob: -1.3317553997039795
    3. 'idx' → logprob: -2.0817553997039795
    4. '_child' → logprob: -2.5817553997039795
    5. 'index' → logprob: -3.0817553997039795
    6. '_edge' → logprob: -3.0817553997039795
    7. 'child' → logprob: -3.5817553997039795
    8. '_col' → logprob: -4.331755638122559
    9. ')' → logprob: -4.456755638122559
    10. '_cost' → logprob: -4.831755638122559

Token 1334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020902375399600714
    2. ')' → logprob: -9.375208854675293
    3. ' ,' → logprob: -9.625208854675293
    4. 'index' → logprob: -10.875208854675293
    5. 'stack' → logprob: -11.750208854675293
    6. ',
' → logprob: -11.875208854675293
    7. 'idx' → logprob: -12.375208854675293
    8. '_,' → logprob: -13.000208854675293
    9. 'depth' → logprob: -13.125208854675293
    10. '_idx' → logprob: -13.250208854675293

Token 1335: ' last' (ID: 2174)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.32200080156326294
    2. 'last' → logprob: -1.6970007419586182
    3. 'depth' → logprob: -3.572000741958618
    4. 'pos' → logprob: -4.572000980377197
    5. 'length' → logprob: -4.697000980377197
    6. 'sum' → logprob: -4.822000980377197
    7. 'distance' → logprob: -5.072000980377197
    8. 'acc' → logprob: -5.072000980377197
    9. 'idx' → logprob: -5.822000980377197
    10. ' ' → logprob: -5.822000980377197

Token 1336: '_cost' (ID: 36820)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.6881622672080994
    2. '_distance' → logprob: -0.9381622672080994
    3. 'dist' → logprob: -3.438162326812744
    4. '_weight' → logprob: -4.188162326812744
    5. '_edge' → logprob: -4.563162326812744
    6. '_node' → logprob: -4.563162326812744
    7. '_cost' → logprob: -4.688162326812744
    8. '_pos' → logprob: -4.688162326812744
    9. 'distance' → logprob: -5.438162326812744
    10. '_index' → logprob: -5.563162326812744

Token 1337: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02257518656551838
    2. ',' → logprob: -3.8975751399993896
    3. ')
' → logprob: -6.522575378417969
    4. '   ' → logprob: -7.647575378417969
    5. ' )' → logprob: -10.272575378417969
    6. ')]' → logprob: -11.022575378417969
    7. ',)' → logprob: -11.397575378417969
    8. ',
' → logprob: -11.522575378417969
    9. ' ,' → logprob: -13.397575378417969
    10. ']' → logprob: -13.522575378417969

Token 1338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.677814245223999
    2. '
' → logprob: -0.927814245223999
    3. 'while' → logprob: -3.552814245223999
    4. ',' → logprob: -3.677814245223999
    5. ' while' → logprob: -4.302814483642578
    6. '    
' → logprob: -4.552814483642578
    7. ')' → logprob: -5.052814483642578
    8. ':' → logprob: -5.427814483642578
    9. ',
' → logprob: -5.927814483642578
    10. ')
' → logprob: -6.677814483642578

Token 1339: ' call' (ID: 2421)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.12143215537071228
    2. ' while' → logprob: -2.246432065963745
    3. '   ' → logprob: -5.121432304382324
    4. '
' → logprob: -7.121432304382324
    5. 'visited' → logprob: -8.121432304382324
    6. 'res' → logprob: -8.246432304382324
    7. 'depth' → logprob: -8.496432304382324
    8. 'result' → logprob: -9.246432304382324
    9. ')' → logprob: -9.371432304382324
    10. '    
' → logprob: -9.496432304382324

Token 1340: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.2805027365684509
    2. 'stack' → logprob: -1.9055027961730957
    3. 's' → logprob: -2.4055027961730957
    4. '_' → logprob: -5.530502796173096
    5. 'ing' → logprob: -8.155502319335938
    6. 'back' → logprob: -8.405502319335938
    7. 'able' → logprob: -8.780502319335938
    8. 'ers' → logprob: -8.905502319335938
    9. 'backs' → logprob: -9.155502319335938
    10. ',' → logprob: -9.655502319335938

Token 1341: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11019296199083328
    2. '=' → logprob: -2.3601930141448975
    3. ':' → logprob: -5.110192775726318
    4. '.append' → logprob: -6.610192775726318
    5. '=[]' → logprob: -6.985192775726318
    6. '   ' → logprob: -7.110192775726318
    7. '=[]
' → logprob: -8.860193252563477
    8. '.pop' → logprob: -8.860193252563477
    9. ')' → logprob: -8.985193252563477
    10. '.' → logprob: -9.360193252563477

Token 1342: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -3.750436007976532e-05
    2. '[' → logprob: -10.87503719329834
    3. '[(' → logprob: -11.87503719329834
    4. '[]
' → logprob: -11.87503719329834
    5. ' []' → logprob: -13.00003719329834
    6. 'deque' → logprob: -13.50003719329834
    7. '[]}' → logprob: -14.87503719329834
    8. '[])' → logprob: -15.50003719329834
    9. 'stack' → logprob: -16.000038146972656
    10. '[]

' → logprob: -16.125038146972656

Token 1343: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8355141282081604
    2. 'while' → logprob: -0.8355141282081604
    3. ' while' → logprob: -2.0855140686035156
    4. '
' → logprob: -5.335514068603516
    5. '	while' → logprob: -6.960514068603516
    6. ')' → logprob: -7.210514068603516
    7. '    
' → logprob: -7.585514068603516
    8. ':' → logprob: -7.960514068603516
    9. ',' → logprob: -8.335514068603516
    10. '```' → logprob: -8.335514068603516

Token 1344: ' state' (ID: 2608)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.12169554084539413
    2. ' while' → logprob: -2.3716955184936523
    3. '   ' → logprob: -3.9966955184936523
    4. '
' → logprob: -6.496695518493652
    5. ')' → logprob: -6.996695518493652
    6. '	while' → logprob: -8.496695518493652
    7. '```' → logprob: -9.996695518493652
    8. '    
' → logprob: -10.496695518493652
    9. '    ' → logprob: -10.621695518493652
    10. '[]' → logprob: -10.871695518493652

Token 1345: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31589779257774353
    2. ' =' → logprob: -1.315897822380066
    3. ',' → logprob: -6.4408979415893555
    4. ':' → logprob: -8.315897941589355
    5. '   ' → logprob: -8.815897941589355
    6. '[' → logprob: -9.315897941589355
    7. '_' → logprob: -9.440897941589355
    8. '=[]' → logprob: -9.440897941589355
    9. '<|end|>' → logprob: -9.440897941589355
    10. ')' → logprob: -9.690897941589355

Token 1346: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001783821964636445
    2. ' ' → logprob: -6.376783847808838
    3. ''' → logprob: -9.87678337097168
    4. '"' → logprob: -10.87678337097168
    5. '(' → logprob: -11.75178337097168
    6. ''s' → logprob: -13.62678337097168
    7. '1' → logprob: -14.37678337097168
    8. '{}' → logprob: -14.50178337097168
    9. ' '' → logprob: -15.37678337097168
    10. '   ' → logprob: -15.50178337097168

Token 1347: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014927227748557925
    2. 'False' → logprob: -6.626492500305176
    3. '-' → logprob: -8.876492500305176
    4. '(' → logprob: -11.501492500305176
    5. 'None' → logprob: -11.626492500305176
    6. ''' → logprob: -12.751492500305176
    7. '[' → logprob: -13.376492500305176
    8. '2' → logprob: -14.376492500305176
    9. '{}' → logprob: -14.501492500305176
    10. '
' → logprob: -14.626492500305176

Token 1348: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030916238203644753
    2. '
' → logprob: -4.030916213989258
    3. ',' → logprob: -5.405916213989258
    4. ']
' → logprob: -6.155916213989258
    5. ')' → logprob: -6.405916213989258
    6. ',
' → logprob: -6.655916213989258
    7. ' ]' → logprob: -6.655916213989258
    8. '<|end|>' → logprob: -7.280916213989258
    9. '   ' → logprob: -7.655916213989258
    10. '<|end|>' → logprob: -8.280916213989258

Token 1349: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0004583135014399886
    2. 'len' → logprob: -8.125458717346191
    3. '(' → logprob: -9.125458717346191
    4. '(N' → logprob: -10.625458717346191
    5. 'stack' → logprob: -11.250458717346191
    6. '
' → logprob: -11.625458717346191
    7. ' N' → logprob: -13.750458717346191
    8. '(len' → logprob: -13.750458717346191
    9. '(stack' → logprob: -14.000458717346191
    10. 'l' → logprob: -14.375458717346191

Token 1350: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.889062225818634
    2. ':' → logprob: -1.3890621662139893
    3. '   ' → logprob: -1.5140621662139893
    4. ')' → logprob: -3.7640621662139893
    5. ',' → logprob: -4.139062404632568
    6. '<|end|>' → logprob: -4.139062404632568
    7. '[' → logprob: -4.389062404632568
    8. ' 
' → logprob: -4.639062404632568
    9. ':
' → logprob: -4.889062404632568
    10. '    
' → logprob: -5.139062404632568

Token 1351: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6454213857650757
    2. 'while' → logprob: -2.1454215049743652
    3. ':' → logprob: -2.2704215049743652
    4. '
' → logprob: -2.3954215049743652
    5. ' while' → logprob: -2.8954215049743652
    6. '```' → logprob: -3.6454215049743652
    7. ')' → logprob: -4.020421504974365
    8. ':
' → logprob: -4.520421504974365
    9. '[' → logprob: -4.645421504974365
    10. ',' → logprob: -4.770421504974365

Token 1352: ' ptr' (ID: 23266)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.151687353849411
    2. ' while' → logprob: -2.0266873836517334
    3. '   ' → logprob: -5.026687145233154
    4. ')' → logprob: -6.651687145233154
    5. '
' → logprob: -7.651687145233154
    6. '	while' → logprob: -8.901687622070312
    7. ']' → logprob: -9.026687622070312
    8. ' 
' → logprob: -9.401687622070312
    9. 'def' → logprob: -9.526687622070312
    10. '    
' → logprob: -9.901687622070312

Token 1353: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5165528059005737
    2. '[' → logprob: -1.1415528059005737
    3. ' =' → logprob: -3.2665529251098633
    4. '[node' → logprob: -4.891552925109863
    5. '[-' → logprob: -4.891552925109863
    6. ',' → logprob: -5.516552925109863
    7. '[state' → logprob: -5.516552925109863
    8. ']' → logprob: -5.641552925109863
    9. '```' → logprob: -6.016552925109863
    10. ')' → logprob: -6.016552925109863

Token 1354: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -7.195421494543552e-05
    2. ' ' → logprob: -10.00007152557373
    3. '[' → logprob: -11.12507152557373
    4. '{' → logprob: -12.62507152557373
    5. '{}' → logprob: -12.75007152557373
    6. '-' → logprob: -12.87507152557373
    7. '[]' → logprob: -13.37507152557373
    8. '1' → logprob: -14.62507152557373
    9. '(' → logprob: -15.75007152557373
    10. '   ' → logprob: -15.87507152557373

Token 1355: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008701292099431157
    2. '-' → logprob: -7.250870227813721
    3. ']' → logprob: -10.000869750976562
    4. 'N' → logprob: -10.500869750976562
    5. '[' → logprob: -10.500869750976562
    6. '-N' → logprob: -11.250869750976562
    7. '[N' → logprob: -11.250869750976562
    8. '
' → logprob: -11.375869750976562
    9. ' ' → logprob: -11.875869750976562
    10. '[]' → logprob: -13.000869750976562

Token 1356: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006651310715824366
    2. '
' → logprob: -6.131651401519775
    3. ')' → logprob: -6.381651401519775
    4. ']
' → logprob: -6.381651401519775
    5. '   ' → logprob: -8.006650924682617
    6. ' ]' → logprob: -8.131650924682617
    7. '0' → logprob: -9.506650924682617
    8. '<|end|>' → logprob: -9.506650924682617
    9. '<|end|>' → logprob: -10.006650924682617
    10. '[' → logprob: -10.381650924682617

Token 1357: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.723352049040841e-06
    2. '[N' → logprob: -12.500004768371582
    3. '
' → logprob: -14.750004768371582
    4. 'len' → logprob: -14.875004768371582
    5. '[' → logprob: -16.625003814697266
    6. 'n' → logprob: -16.750003814697266
    7. '(N' → logprob: -16.875003814697266
    8. ' N' → logprob: -17.125003814697266
    9. '```' → logprob: -17.250003814697266
    10. '_N' → logprob: -17.875003814697266

Token 1358: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27515706419944763
    2. 'while' → logprob: -2.1501569747924805
    3. ' while' → logprob: -2.7751569747924805
    4. '   ' → logprob: -3.2751569747924805
    5. ' 
' → logprob: -4.5251569747924805
    6. '    
' → logprob: -6.0251569747924805
    7. ')' → logprob: -6.5251569747924805
    8. 'def' → logprob: -6.7751569747924805
    9. ' ' → logprob: -7.0251569747924805
    10. ',
' → logprob: -7.1501569747924805

Token 1359: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.8133201003074646
    2. 'while' → logprob: -1.1883201599121094
    3. '   ' → logprob: -1.4383201599121094
    4. '
' → logprob: -5.063320159912109
    5. '```' → logprob: -6.188320159912109
    6. ')' → logprob: -6.313320159912109
    7. '	while' → logprob: -6.313320159912109
    8. ' 
' → logprob: -7.188320159912109
    9. '    
' → logprob: -7.563320159912109
    10. ' ' → logprob: -8.43832015991211

Token 1360: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.09313838928937912
    2. ' while' → logprob: -2.4681384563446045
    3. '
' → logprob: -6.218138217926025
    4. '   ' → logprob: -6.218138217926025
    5. ' 
' → logprob: -9.843138694763184
    6. '	while' → logprob: -9.968138694763184
    7. '```' → logprob: -10.468138694763184
    8. ')' → logprob: -10.843138694763184
    9. 'def' → logprob: -10.968138694763184
    10. '    
' → logprob: -11.093138694763184

Token 1361: ' To' (ID: 2514)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.006023125723004341
    2. ' while' → logprob: -5.131022930145264
    3. '
' → logprob: -9.631023406982422
    4. '   ' → logprob: -10.631023406982422
    5. 'def' → logprob: -13.381023406982422
    6. 'for' → logprob: -14.006023406982422
    7. 'While' → logprob: -14.631023406982422
    8. '	while' → logprob: -15.131023406982422
    9. ')' → logprob: -15.256023406982422
    10. '#' → logprob: -15.381023406982422

Token 1362: ' handle' (ID: 5318)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.2221229076385498
    2. 'process' → logprob: -1.9721229076385498
    3. 'def' → logprob: -1.9721229076385498
    4. '=' → logprob: -2.34712290763855
    5. ']' → logprob: -3.09712290763855
    6. 'continue' → logprob: -3.34712290763855
    7. 'while' → logprob: -3.47212290763855
    8. '[' → logprob: -3.72212290763855
    9. '
' → logprob: -3.84712290763855
    10. '[]
' → logprob: -4.097123146057129

Token 1363: ' arbitrary' (ID: 56424)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7415637373924255
    2. ' the' → logprob: -1.8665637969970703
    3. 'color' → logprob: -2.1165637969970703
    4. 'children' → logprob: -2.1165637969970703
    5. 'neighbors' → logprob: -3.3665637969970703
    6. 'colors' → logprob: -3.4915637969970703
    7. ' color' → logprob: -4.36656379699707
    8. ' recursion' → logprob: -5.24156379699707
    9. '   ' → logprob: -5.49156379699707
    10. '```' → logprob: -5.74156379699707

Token 1364: ' colors' (ID: 10803)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'children' → logprob: -1.691213846206665
    2. 'colors' → logprob: -1.691213846206665
    3. 'graph' → logprob: -1.941213846206665
    4. 'color' → logprob: -2.441213846206665
    5. 'edges' → logprob: -2.691213846206665
    6. 'neighbors' → logprob: -2.691213846206665
    7. 'branch' → logprob: -3.691213846206665
    8. 'depth' → logprob: -3.691213846206665
    9. 'node' → logprob: -3.691213846206665
    10. 'sizes' → logprob: -3.816213846206665

Token 1365: ',' (ID: 11)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.3703029155731201
    2. 'color' → logprob: -1.6203029155731201
    3. 'max' → logprob: -2.87030291557312
    4. '   ' → logprob: -3.99530291557312
    5. 'from' → logprob: -4.620303153991699
    6. '
' → logprob: -5.245303153991699
    7. ' colors' → logprob: -5.495303153991699
    8. ',' → logprob: -5.745303153991699
    9. 'visited' → logprob: -6.495303153991699
    10. ' color' → logprob: -6.495303153991699

Token 1366: ' use' (ID: 1199)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.48641109466552734
    2. 'colors' → logprob: -1.1114110946655273
    3. 'from' → logprob: -4.236411094665527
    4. 'col' → logprob: -4.486411094665527
    5. 'import' → logprob: -4.736411094665527
    6. 'max' → logprob: -5.361411094665527
    7. '
' → logprob: -5.486411094665527
    8. ' color' → logprob: -5.736411094665527
    9. ' colors' → logprob: -6.611411094665527
    10. '#' → logprob: -6.736411094665527

Token 1367: ' dict' (ID: 11878)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0008432185277342796
    2. '{}' → logprob: -7.250843048095703
    3. 'dict' → logprob: -9.125843048095703
    4. '[]' → logprob: -11.875843048095703
    5. ' defaultdict' → logprob: -12.125843048095703
    6. '{' → logprob: -12.625843048095703
    7. 'Counter' → logprob: -13.125843048095703
    8. '{}
' → logprob: -13.125843048095703
    9. '   ' → logprob: -13.625843048095703
    10. 'def' → logprob: -13.625843048095703

Token 1368: 's' (ID: 82)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.222519040107727
    2. '()
' → logprob: -1.847519040107727
    3. 's' → logprob: -1.972519040107727
    4. '   ' → logprob: -2.0975189208984375
    5. ' =' → logprob: -2.7225189208984375
    6. '
' → logprob: -2.9725189208984375
    7. ',' → logprob: -3.5975189208984375
    8. ':' → logprob: -4.2225189208984375
    9. '{}' → logprob: -4.3475189208984375
    10. '{' → logprob: -4.4725189208984375

Token 1369: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06294602900743484
    2. '
' → logprob: -3.562946081161499
    3. ',' → logprob: -4.93794584274292
    4. ' =' → logprob: -5.43794584274292
    5. ']' → logprob: -5.68794584274292
    6. 'color' → logprob: -6.06294584274292
    7. ',
' → logprob: -6.06294584274292
    8. ' for' → logprob: -6.43794584274292
    9. 'for' → logprob: -6.81294584274292
    10. 'from' → logprob: -6.93794584274292

Token 1370: ' sparse' (ID: 70531)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0067015159875154495
    2. 'collections' → logprob: -6.256701469421387
    3. '   ' → logprob: -7.131701469421387
    4. '[]' → logprob: -7.256701469421387
    5. '[]
' → logprob: -7.756701469421387
    6. '
' → logprob: -7.881701469421387
    7. '{}' → logprob: -7.881701469421387
    8. 'Counter' → logprob: -8.006701469421387
    9. ' defaultdict' → logprob: -8.256701469421387
    10. '```' → logprob: -8.631701469421387

Token 1371: ' arrays' (ID: 38774)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.48559409379959106
    2. 'arrays' → logprob: -1.9855940341949463
    3. 'default' → logprob: -2.2355940341949463
    4. ' arrays' → logprob: -3.1105940341949463
    5. 'maps' → logprob: -3.2355940341949463
    6. 'structures' → logprob: -4.735594272613525
    7. ' counters' → logprob: -4.985594272613525
    8. 'array' → logprob: -5.235594272613525
    9. 'containers' → logprob: -5.360594272613525
    10. 'vectors' → logprob: -5.485594272613525

Token 1372: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0917857438325882
    2. 'color' → logprob: -3.2167856693267822
    3. 'colors' → logprob: -4.591785907745361
    4. '
' → logprob: -4.966785907745361
    5. 'cnt' → logprob: -5.216785907745361
    6. 'counts' → logprob: -5.591785907745361
    7. ' color' → logprob: -5.841785907745361
    8. 'stack' → logprob: -5.966785907745361
    9. ',' → logprob: -5.966785907745361
    10. 'from' → logprob: -6.216785907745361

Token 1373: ' performance' (ID: 6198)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.481525182723999
    2. 'cnt' → logprob: -1.856525182723999
    3. 'color' → logprob: -2.731525182723999
    4. 'count' → logprob: -2.981525182723999
    5. 'colors' → logprob: -3.731525182723999
    6. 'current' → logprob: -3.856525182723999
    7. 'child' → logprob: -4.106525421142578
    8. 'c' → logprob: -4.606525421142578
    9. 'counter' → logprob: -4.731525421142578
    10. '   ' → logprob: -5.731525421142578

Token 1374: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022309651598334312
    2. 'color' → logprob: -4.64730978012085
    3. 'colors' → logprob: -4.77230978012085
    4. 'counts' → logprob: -6.89730978012085
    5. '
' → logprob: -7.27230978012085
    6. '    
' → logprob: -7.64730978012085
    7. 'from' → logprob: -8.022309303283691
    8. ' color' → logprob: -8.147309303283691
    9. '```' → logprob: -9.022309303283691
    10. 'col' → logprob: -9.272309303283691

Token 1375: ' colors' (ID: 10803)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'needed' → logprob: -0.11917660385370255
    2. 'necessary' → logprob: -2.2441766262054443
    3. 'default' → logprob: -5.994176387786865
    4. 'colors' → logprob: -6.869176387786865
    5. 'possible' → logprob: -7.244176387786865
    6. ' needed' → logprob: -7.619176387786865
    7. 'required' → logprob: -7.619176387786865
    8. 'memory' → logprob: -7.994176387786865
    9. '...' → logprob: -8.994176864624023
    10. 'the' → logprob: -9.244176864624023

Token 1376: ' are' (ID: 553)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.16942040622234344
    2. ' are' → logprob: -3.1694204807281494
    3. 'can' → logprob: -3.1694204807281494
    4. '>' → logprob: -4.54442024230957
    5. 'could' → logprob: -4.66942024230957
    6. 'not' → logprob: -4.79442024230957
    7. 'may' → logprob: -5.04442024230957
    8. ':' → logprob: -5.29442024230957
    9. '.' → logprob: -5.29442024230957
    10. '>=' → logprob: -5.41942024230957

Token 1377: ' large' (ID: 4410)
  Prédit: 'many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'many' → logprob: -0.8152663707733154
    2. 'large' → logprob: -1.3152663707733154
    3. 'used' → logprob: -1.6902663707733154
    4. 'not' → logprob: -4.0652666091918945
    5. 'visited' → logprob: -4.1902666091918945
    6. 'present' → logprob: -4.4402666091918945
    7. 'stored' → logprob: -4.8152666091918945
    8. '
' → logprob: -5.3152666091918945
    9. 'too' → logprob: -5.3152666091918945
    10. 'few' → logprob: -5.3152666091918945

Token 1378: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01805698685348034
    2. 'colors' → logprob: -4.893056869506836
    3. 'color' → logprob: -5.268056869506836
    4. '
' → logprob: -6.643056869506836
    5. '    
' → logprob: -7.143056869506836
    6. 'from' → logprob: -7.393056869506836
    7. ',' → logprob: -7.893056869506836
    8. 'counts' → logprob: -7.893056869506836
    9. '```' → logprob: -8.268056869506836
    10. '{
' → logprob: -8.643056869506836

Token 1379: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15510614216327667
    2. '
' → logprob: -3.1551060676574707
    3. 'colors' → logprob: -3.4051060676574707
    4. '```' → logprob: -3.7801060676574707
    5. '{
' → logprob: -4.405106067657471
    6. ',
' → logprob: -4.780106067657471
    7. ',' → logprob: -4.905106067657471
    8. 'color' → logprob: -5.530106067657471
    9. '    
' → logprob: -5.780106067657471
    10. ':
' → logprob: -7.155106067657471

Token 1380: ' cnt' (ID: 27340)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.22616080939769745
    2. 'colors' → logprob: -2.601160764694214
    3. 'from' → logprob: -2.976160764694214
    4. 'freq' → logprob: -3.726160764694214
    5. '   ' → logprob: -4.101161003112793
    6. 'counts' → logprob: -4.476161003112793
    7. 'col' → logprob: -4.601161003112793
    8. 'counter' → logprob: -5.476161003112793
    9. 'cnt' (adapté à ' cnt') → logprob: -5.976161003112793
    10. 'cur' → logprob: -6.601161003112793

Token 1381: 'c' (ID: 66)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.039434172213077545
    2. ' =' → logprob: -3.2894341945648193
    3. ',' → logprob: -6.66443395614624
    4. 's' → logprob: -10.039434432983398
    5. '   ' → logprob: -10.414434432983398
    6. ')' → logprob: -12.039434432983398
    7. '={}' → logprob: -12.164434432983398
    8. '_dict' → logprob: -12.289434432983398
    9. 'dict' → logprob: -12.539434432983398
    10. '=dict' → logprob: -12.789434432983398

Token 1382: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6328393220901489
    2. ' =' → logprob: -0.7578393220901489
    3. 'c' → logprob: -9.13283920288086
    4. '={}' → logprob: -9.88283920288086
    5. ',' → logprob: -10.63283920288086
    6. 's' → logprob: -10.88283920288086
    7. '   ' → logprob: -11.75783920288086
    8. '_' → logprob: -11.88283920288086
    9. '={' → logprob: -12.00783920288086
    10. ')' → logprob: -12.38283920288086

Token 1383: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0003121056070085615
    2. '{}' → logprob: -8.125311851501465
    3. ' defaultdict' → logprob: -11.875311851501465
    4. 'dict' → logprob: -12.500311851501465
    5. '{' → logprob: -13.375311851501465
    6. '[' → logprob: -13.500311851501465
    7. '(default' → logprob: -13.625311851501465
    8. '{}
' → logprob: -14.875311851501465
    9. 'Counter' → logprob: -15.125311851501465
    10. '.default' → logprob: -15.250311851501465

Token 1384: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.08967512100934982
    2. 'int' → logprob: -2.589675188064575
    3. '(lambda' → logprob: -4.589674949645996
    4. '(dict' → logprob: -8.089674949645996
    5. 'lambda' → logprob: -9.089674949645996
    6. 'dict' → logprob: -9.464674949645996
    7. 'list' → logprob: -10.464674949645996
    8. '(list' → logprob: -11.089674949645996
    9. '<int' → logprob: -11.214674949645996
    10. '[int' → logprob: -12.214674949645996

Token 1385: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028677580412477255
    2. ')
' → logprob: -5.877867698669434
    3. ' )' → logprob: -10.127867698669434
    4. '   ' → logprob: -11.002867698669434
    5. ',' → logprob: -13.377867698669434
    6. ' ' → logprob: -14.002867698669434
    7. ')

' → logprob: -14.502867698669434
    8. ' )
' → logprob: -14.877867698669434
    9. ')
' → logprob: -14.877867698669434
    10. '())' → logprob: -15.127867698669434

Token 1386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08154020458459854
    2. ' while' → logprob: -3.956540107727051
    3. ',' → logprob: -5.081540107727051
    4. ')' → logprob: -5.081540107727051
    5. ' col' → logprob: -5.331540107727051
    6. ' color' → logprob: -5.456540107727051
    7. ' stack' → logprob: -5.456540107727051
    8. ' for' → logprob: -5.706540107727051
    9. 'stack' → logprob: -5.831540107727051
    10. '    ' → logprob: -5.956540107727051

Token 1387: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.5749433040618896
    2. 'cost' → logprob: -1.4499433040618896
    3. 'while' → logprob: -1.8249433040618896
    4. 'col' → logprob: -4.699943542480469
    5. 'def' → logprob: -4.824943542480469
    6. 'res' → logprob: -5.699943542480469
    7. 'color' → logprob: -5.824943542480469
    8. 'sc' → logprob: -6.449943542480469
    9. 'dist' → logprob: -6.574943542480469
    10. 'c' → logprob: -6.699943542480469

Token 1388: 'c' (ID: 66)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08884087204933167
    2. 'c' → logprob: -2.588840961456299
    3. '_c' → logprob: -4.838840961456299
    4. '_
' → logprob: -7.588840961456299
    5. '   ' → logprob: -8.08884048461914
    6. '_=' → logprob: -8.33884048461914
    7. '_)' → logprob: -8.46384048461914
    8. ')' → logprob: -8.96384048461914
    9. '_,' → logprob: -9.58884048461914
    10. '_[' → logprob: -9.58884048461914

Token 1389: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0030452122446149588
    2. ' =' → logprob: -5.878045082092285
    3. ')' → logprob: -9.503045082092285
    4. '[' → logprob: -9.753045082092285
    5. 'c' → logprob: -9.753045082092285
    6. '=
' → logprob: -11.753045082092285
    7. ']' → logprob: -12.003045082092285
    8. '_' → logprob: -12.128045082092285
    9. '=[' → logprob: -12.503045082092285
    10. ' defaultdict' → logprob: -12.503045082092285

Token 1390: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.1994775377388578e-05
    2. '0' → logprob: -11.500012397766113
    3. ' defaultdict' → logprob: -13.625012397766113
    4. 'lambda' → logprob: -15.250012397766113
    5. 'int' → logprob: -15.500012397766113
    6. '.default' → logprob: -17.125011444091797
    7. '(default' → logprob: -17.125011444091797
    8. '"default' → logprob: -17.750011444091797
    9. ''default' → logprob: -17.875011444091797
    10. 'def' → logprob: -18.625011444091797

Token 1391: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.4741740822792053
    2. 'int' → logprob: -0.9741740822792053
    3. '=int' → logprob: -10.349174499511719
    4. '[int' → logprob: -10.474174499511719
    5. '0' → logprob: -11.599174499511719
    6. 'lambda' → logprob: -11.974174499511719
    7. '(lambda' → logprob: -12.099174499511719
    8. ':int' → logprob: -12.474174499511719
    9. '<int' → logprob: -12.849174499511719
    10. ',int' → logprob: -12.974174499511719

Token 1392: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010346540249884129
    2. ')
' → logprob: -5.010346412658691
    3. '   ' → logprob: -5.635346412658691
    4. ' )' → logprob: -10.635346412658691
    5. ',' → logprob: -11.385346412658691
    6. '}' → logprob: -11.635346412658691
    7. ',
' → logprob: -13.510346412658691
    8. '
' → logprob: -13.510346412658691
    9. ')

' → logprob: -13.510346412658691
    10. '})' → logprob: -13.510346412658691

Token 1393: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15935644507408142
    2. ' while' → logprob: -2.6593563556671143
    3. '
' → logprob: -3.1593563556671143
    4. 'while' → logprob: -4.159356594085693
    5. '    
' → logprob: -4.909356594085693
    6. 'def' → logprob: -5.284356594085693
    7. ')' → logprob: -6.284356594085693
    8. ' 
' → logprob: -6.534356594085693
    9. '```' → logprob: -7.284356594085693
    10. ' def' → logprob: -7.784356594085693

Token 1394: ' query' (ID: 5703)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8532896637916565
    2. ' while' → logprob: -1.3532896041870117
    3. '   ' → logprob: -1.6032896041870117
    4. '
' → logprob: -2.3532896041870117
    5. ' 
' → logprob: -4.603289604187012
    6. 'def' → logprob: -5.603289604187012
    7. '    
' → logprob: -5.853289604187012
    8. ')' → logprob: -7.603289604187012
    9. '```' → logprob: -7.603289604187012
    10. ' ' → logprob: -8.228289604187012

Token 1395: '_at' (ID: 8254)
  Prédit: '_ptr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ptr' → logprob: -0.20215612649917603
    2. 's' → logprob: -2.0771560668945312
    3. '_idx' → logprob: -3.8271560668945312
    4. '_pointer' → logprob: -5.202156066894531
    5. '_indices' → logprob: -5.202156066894531
    6. ' =' → logprob: -5.452156066894531
    7. '_c' → logprob: -5.577156066894531
    8. '_counter' → logprob: -5.577156066894531
    9. '_index' → logprob: -6.202156066894531
    10. 'ptr' → logprob: -6.577156066894531

Token 1396: '_node' (ID: 11390)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6308178901672363
    2. '[node' → logprob: -1.1308178901672363
    3. ' =' → logprob: -2.7558178901672363
    4. 'node' → logprob: -3.2558178901672363
    5. '=node' → logprob: -4.255817890167236
    6. ']' → logprob: -5.130817890167236
    7. '_node' → logprob: -5.255817890167236
    8. '<|end|>' → logprob: -5.630817890167236
    9. ')' → logprob: -5.755817890167236
    10. '_nodes' → logprob: -5.880817890167236

Token 1397: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17723187804222107
    2. ' =' → logprob: -1.9272319078445435
    3. ']' → logprob: -4.927231788635254
    4. 's' → logprob: -5.927231788635254
    5. '<|end|>' → logprob: -6.052231788635254
    6. '[' → logprob: -6.677231788635254
    7. ',' → logprob: -6.802231788635254
    8. '.setdefault' → logprob: -7.552231788635254
    9. ')' → logprob: -7.927231788635254
    10. '<|end|>' → logprob: -8.052231788635254

Token 1398: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.056219831109046936
    2. '[' → logprob: -3.5562198162078857
    3. 'default' → logprob: -3.6812198162078857
    4. '{}' → logprob: -8.181220054626465
    5. '{' → logprob: -8.431220054626465
    6. ' queries' → logprob: -9.056220054626465
    7. '[]' → logprob: -9.806220054626465
    8. 'query' → logprob: -9.931220054626465
    9. 'collections' → logprob: -10.306220054626465
    10. ' [[]' → logprob: -10.431220054626465

Token 1399: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2505960166454315
    2. '   ' → logprob: -2.250596046447754
    3. '<|end|>' → logprob: -3.000596046447754
    4. ')' → logprob: -4.000596046447754
    5. ']' → logprob: -4.625596046447754
    6. ':' → logprob: -4.750596046447754
    7. '[' → logprob: -4.875596046447754
    8. ')
' → logprob: -5.375596046447754
    9. ',' → logprob: -5.500596046447754
    10. '[
' → logprob: -6.000596046447754

Token 1400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5534314513206482
    2. 'while' → logprob: -1.178431510925293
    3. ' while' → logprob: -2.678431510925293
    4. '
' → logprob: -3.303431510925293
    5. 'def' → logprob: -5.553431510925293
    6. '    
' → logprob: -5.928431510925293
    7. '```' → logprob: -5.928431510925293
    8. ')' → logprob: -7.178431510925293
    9. ' 
' → logprob: -7.803431510925293
    10. ')
' → logprob: -8.053431510925293

Token 1401: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.02728378213942051
    2. ' while' → logprob: -4.027283668518066
    3. '   ' → logprob: -5.027283668518066
    4. '
' → logprob: -6.152283668518066
    5. 'def' → logprob: -8.402283668518066
    6. '```' → logprob: -9.527283668518066
    7. ' 
' → logprob: -10.902283668518066
    8. '    
' → logprob: -11.027283668518066
    9. 'for' → logprob: -11.152283668518066
    10. ')' → logprob: -11.152283668518066

Token 1402: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.016068974509835243
    2. ' stack' → logprob: -4.141068935394287
    3. 'len' → logprob: -11.516069412231445
    4. '   ' → logprob: -11.766069412231445
    5. 'ptr' → logprob: -12.141069412231445
    6. '	stack' → logprob: -12.766069412231445
    7. '
' → logprob: -13.016069412231445
    8. 'state' → logprob: -13.141069412231445
    9. '(stack' → logprob: -13.891069412231445
    10. 'True' → logprob: -13.891069412231445

Token 1403: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1020718589425087
    2. ':
' → logprob: -2.352071762084961
    3. '[-' → logprob: -6.477071762084961
    4. '):' → logprob: -8.977071762084961
    5. '):
' → logprob: -9.352071762084961
    6. '.pop' → logprob: -9.727071762084961
    7. '```' → logprob: -10.602071762084961
    8. 'pop' → logprob: -12.227071762084961
    9. '>:' → logprob: -12.227071762084961
    10. 'and' → logprob: -12.477071762084961

Token 1404: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03266904875636101
    2. 'v' → logprob: -3.5326690673828125
    3. 'node' → logprob: -6.1576690673828125
    4. ' v' → logprob: -7.5326690673828125
    5. ' node' → logprob: -8.407669067382812
    6. 'u' → logprob: -11.907669067382812
    7. 'n' → logprob: -12.157669067382812
    8. '(node' → logprob: -12.532669067382812
    9. ',node' → logprob: -12.532669067382812
    10. ',v' → logprob: -12.782669067382812

Token 1405: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.018416110426187515
    2. 'node' → logprob: -4.018415927886963
    3. '   ' → logprob: -8.518416404724121
    4. 'u' → logprob: -10.018416404724121
    5. ' v' → logprob: -11.018416404724121
    6. 'n' → logprob: -13.018416404724121
    7. ' node' → logprob: -13.393416404724121
    8. '       ' → logprob: -14.143416404724121
    9. '    
' → logprob: -15.643416404724121
    10. '```' → logprob: -15.768416404724121

Token 1406: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.574251918005757e-05
    2. '=' → logprob: -11.250055313110352
    3. ',
' → logprob: -11.375055313110352
    4. ' ,' → logprob: -11.625055313110352
    5. ',v' → logprob: -11.750055313110352
    6. ',p' → logprob: -13.375055313110352
    7. ',w' → logprob: -14.000055313110352
    8. ',n' → logprob: -14.125055313110352
    9. ',status' → logprob: -14.250055313110352
    10. ',state' → logprob: -14.250055313110352

Token 1407: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00013095269969198853
    2. ' p' → logprob: -9.500130653381348
    3. 'pv' → logprob: -10.375130653381348
    4. 'parent' → logprob: -11.250130653381348
    5. 'pi' → logprob: -12.625130653381348
    6. 'v' → logprob: -12.875130653381348
    7. 'pid' → logprob: -13.375130653381348
    8. '
' → logprob: -13.875130653381348
    9. 'ptr' → logprob: -14.250130653381348
    10. 'i' → logprob: -14.500130653381348

Token 1408: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5822400857578032e-05
    2. ' ,' → logprob: -10.625025749206543
    3. '=' → logprob: -14.625025749206543
    4. ',v' → logprob: -15.000025749206543
    5. ',
' → logprob: -15.125025749206543
    6. '_,' → logprob: -15.125025749206543
    7. '       ' → logprob: -17.00002670288086
    8. '0' → logprob: -17.62502670288086
    9. ',c' → logprob: -17.87502670288086
    10. '   ' → logprob: -18.12502670288086

Token 1409: ' pre' (ID: 876)
  Prédit: 'lc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lc' → logprob: -0.12125381082296371
    2. 'col' → logprob: -2.996253728866577
    3. 'last' → logprob: -2.996253728866577
    4. 'c' → logprob: -5.371253967285156
    5. 'cl' → logprob: -5.996253967285156
    6. 'prev' → logprob: -6.121253967285156
    7. 'color' → logprob: -6.246253967285156
    8. 'cur' → logprob: -6.746253967285156
    9. 'clr' → logprob: -7.246253967285156
    10. 'l' → logprob: -7.871253967285156

Token 1410: '_col' (ID: 7255)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.7309831976890564
    2. '_col' → logprob: -0.7309831976890564
    3. '_color' → logprob: -3.730983257293701
    4. 'c' → logprob: -5.355983257293701
    5. '_' → logprob: -5.480983257293701
    6. 'col' → logprob: -6.105983257293701
    7. '_,' → logprob: -6.980983257293701
    8. 'v' → logprob: -7.480983257293701
    9. ',' → logprob: -8.605982780456543
    10. 'color' → logprob: -9.730982780456543

Token 1411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003091081976890564
    2. ' ,' → logprob: -6.253090858459473
    3. '=' → logprob: -7.253090858459473
    4. 't' → logprob: -8.128090858459473
    5. ',
' → logprob: -9.128090858459473
    6. '_,' → logprob: -10.753090858459473
    7. ' =' → logprob: -11.628090858459473
    8. 'd' → logprob: -12.878090858459473
    9. '   ' → logprob: -13.378090858459473
    10. ' ' → logprob: -13.503090858459473

Token 1412: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -9.412610233994201e-05
    2. '0' → logprob: -10.375094413757324
    3. ' pre' → logprob: -10.625094413757324
    4. 'prev' → logprob: -11.875094413757324
    5. 'cost' → logprob: -12.125094413757324
    6. 'prech' → logprob: -12.500094413757324
    7. 'p' → logprob: -12.875094413757324
    8. 'cur' → logprob: -13.000094413757324
    9. 'pc' → logprob: -13.000094413757324
    10. '   ' → logprob: -13.125094413757324

Token 1413: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.38887664675712585
    2. 'cost' → logprob: -1.3888766765594482
    3. '_dist' → logprob: -2.8888766765594482
    4. 'dist' → logprob: -4.263876438140869
    5. '_c' → logprob: -6.513876438140869
    6. 'c' → logprob: -7.138876438140869
    7. 'col' → logprob: -8.638876914978027
    8. '_' → logprob: -8.763876914978027
    9. '_col' → logprob: -9.263876914978027
    10. ' cost' → logprob: -9.763876914978027

Token 1414: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10095275193452835
    2. ' =' → logprob: -2.3509528636932373
    3. ',' → logprob: -7.350952625274658
    4. '   ' → logprob: -9.475953102111816
    5. ')' → logprob: -11.600953102111816
    6. '       ' → logprob: -11.850953102111816
    7. ' ' → logprob: -12.600953102111816
    8. '=
' → logprob: -13.475953102111816
    9. '    ' → logprob: -13.600953102111816
    10. '
' → logprob: -13.975953102111816

Token 1415: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.014167038723826408
    2. ' stack' → logprob: -4.264166831970215
    3. '   ' → logprob: -13.514166831970215
    4. '	stack' → logprob: -13.889166831970215
    5. '       ' → logprob: -14.389166831970215
    6. '
' → logprob: -15.014166831970215
    7. '(stack' → logprob: -15.639166831970215
    8. '    ' → logprob: -15.764166831970215
    9. '        ' → logprob: -17.38916778564453
    10. ' ' → logprob: -17.51416778564453

Token 1416: '[-' (ID: 17503)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2665977478027344
    2. '=' → logprob: -2.3915977478027344
    3. '[-' → logprob: -2.6415977478027344
    4. '[' → logprob: -3.2665977478027344
    5. '.pop' → logprob: -4.391597747802734
    6. ',
' → logprob: -5.016597747802734
    7. ',v' → logprob: -5.516597747802734
    8. ' =' → logprob: -6.141597747802734
    9. ':' → logprob: -6.891597747802734
    10. '       ' → logprob: -7.141597747802734

Token 1417: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. ' ' → logprob: -12.500009536743164
    3. ')' → logprob: -13.125009536743164
    4. ']' → logprob: -13.875009536743164
    5. '
' → logprob: -14.000009536743164
    6. '```' → logprob: -14.250009536743164
    7. '-' → logprob: -14.625009536743164
    8. '   ' → logprob: -15.250009536743164
    9. ':' → logprob: -15.250009536743164
    10. '][' → logprob: -15.875009536743164

Token 1418: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009962779469788074
    2. ')
' → logprob: -5.509962558746338
    3. '):
' → logprob: -6.259962558746338
    4. '       ' → logprob: -7.009962558746338
    5. '):' → logprob: -7.009962558746338
    6. ',' → logprob: -7.384962558746338
    7. ':' → logprob: -8.134963035583496
    8. ' )' → logprob: -8.259963035583496
    9. '[' → logprob: -8.884963035583496
    10. ':
' → logprob: -8.884963035583496

Token 1419: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012265690602362156
    2. ')' → logprob: -5.762265682220459
    3. ' if' → logprob: -5.762265682220459
    4. '        
' → logprob: -5.887265682220459
    5. '
' → logprob: -7.262265682220459
    6. ':' → logprob: -7.762265682220459
    7. '[' → logprob: -8.387266159057617
    8. 'if' → logprob: -8.387266159057617
    9. ',' → logprob: -8.387266159057617
    10. '           ' → logprob: -8.512266159057617

Token 1420: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6954049468040466
    2. 'stack' → logprob: -0.6954049468040466
    3. ' if' → logprob: -7.195405006408691
    4. '       ' → logprob: -7.195405006408691
    5. ' stack' → logprob: -7.570405006408691
    6. 'idx' → logprob: -9.070405006408691
    7. 'del' → logprob: -10.445405006408691
    8. '           ' → logprob: -10.695405006408691
    9. 'i' → logprob: -11.320405006408691
    10. '        
' → logprob: -11.320405006408691

Token 1421: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.0015403309371322393
    2. ' state' → logprob: -6.501540184020996
    3. 'ptr' → logprob: -10.251540184020996
    4. 'not' → logprob: -13.376540184020996
    5. '   ' → logprob: -15.001540184020996
    6. ' not' → logprob: -15.251540184020996
    7. ' ptr' → logprob: -15.376540184020996
    8. '
' → logprob: -15.626540184020996
    9. 'p' → logprob: -16.501541137695312
    10. '	state' → logprob: -16.751541137695312

Token 1422: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00011331788846291602
    2. 'v' → logprob: -9.125113487243652
    3. '[' → logprob: -12.625113487243652
    4. '```' → logprob: -15.250113487243652
    5. '<v' → logprob: -15.625113487243652
    6. '
' → logprob: -15.625113487243652
    7. '[
' → logprob: -16.500112533569336
    8. '   ' → logprob: -16.625112533569336
    9. '=v' → logprob: -17.000112533569336
    10. '(v' → logprob: -17.125112533569336

Token 1423: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3893495202064514
    2. ']==' → logprob: -1.1393494606018066
    3. '==' → logprob: -6.139349460601807
    4. ']<' → logprob: -8.514349937438965
    5. '[' → logprob: -10.014349937438965
    6. ' ==' → logprob: -10.764349937438965
    7. ' ]' → logprob: -11.639349937438965
    8. '```' → logprob: -11.764349937438965
    9. ']!=' → logprob: -11.889349937438965
    10. '']==' → logprob: -12.264349937438965

Token 1424: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.029876602813601494
    2. ' ==' → logprob: -3.529876708984375
    3. ']==' → logprob: -9.779876708984375
    4. '=' → logprob: -11.029876708984375
    5. ')==' → logprob: -11.279876708984375
    6. '0' → logprob: -11.404876708984375
    7. '==
' → logprob: -11.404876708984375
    8. '[' → logprob: -11.529876708984375
    9. '<' → logprob: -12.529876708984375
    10. '()==' → logprob: -13.904876708984375

Token 1425: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -19.375
    4. '=' → logprob: -20.125
    5. '```' → logprob: -20.125
    6. '۰' → logprob: -20.5
    7. '[' → logprob: -21.375
    8. '
' → logprob: -21.375
    9. '1' → logprob: -21.625
    10. ' ' → logprob: -21.8125

Token 1426: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -20.250001907348633
    4. '=' → logprob: -21.000001907348633
    5. '1' → logprob: -21.500001907348633
    6. '```' → logprob: -21.937501907348633
    7. '۰' → logprob: -21.937501907348633
    8. '00' → logprob: -22.000001907348633
    9. '[' → logprob: -22.187501907348633
    10. '...' → logprob: -22.375001907348633

Token 1427: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014208877459168434
    2. ':
' → logprob: -4.264208793640137
    3. ' and' → logprob: -11.139208793640137
    4. '           ' → logprob: -11.639208793640137
    5. '):' → logprob: -11.764208793640137
    6. '       ' → logprob: -11.889208793640137
    7. '):
' → logprob: -13.264208793640137
    8. ',' → logprob: -13.389208793640137
    9. ':

' → logprob: -14.389208793640137
    10. ')' → logprob: -14.514208793640137

Token 1428: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02378413826227188
    2. '       ' → logprob: -3.8987841606140137
    3. ':' → logprob: -6.398784160614014
    4. '#' → logprob: -8.023783683776855
    5. '```' → logprob: -8.273783683776855
    6. '
' → logprob: -8.398783683776855
    7. ':
' → logprob: -8.773783683776855
    8. '            
' → logprob: -8.773783683776855
    9. '        
' → logprob: -8.898783683776855
    10. '   ' → logprob: -9.523783683776855

Token 1429: ' for' (ID: 395)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.33233195543289185
    2. '           ' → logprob: -2.332331895828247
    3. '       ' → logprob: -2.582331895828247
    4. 'if' → logprob: -3.207331895828247
    5. 'cnt' → logprob: -3.332331895828247
    6. '   ' → logprob: -4.582332134246826
    7. 'for' (adapté à ' for') → logprob: -5.082332134246826
    8. 'stack' → logprob: -5.957332134246826
    9. ' state' → logprob: -5.957332134246826
    10. 'child' → logprob: -6.207332134246826

Token 1430: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06217718496918678
    2. 'u' → logprob: -4.0621771812438965
    3. 'ptr' → logprob: -4.3121771812438965
    4. 'idx' → logprob: -4.4371771812438965
    5. ' i' → logprob: -5.0621771812438965
    6. 'w' → logprob: -5.5621771812438965
    7. 'nv' → logprob: -6.1871771812438965
    8. 'e' → logprob: -7.0621771812438965
    9. '(i' → logprob: -7.1871771812438965
    10. '
' → logprob: -7.5621771812438965

Token 1431: 'col' (ID: 1798)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.5239986181259155
    2. 'i' → logprob: -1.3989986181259155
    3. 'u' → logprob: -2.148998737335205
    4. 'w' → logprob: -3.773998737335205
    5. 'idx' → logprob: -5.148998737335205
    6. 'to' → logprob: -5.773998737335205
    7. 'nx' → logprob: -5.898998737335205
    8. 'e' → logprob: -6.023998737335205
    9. 'n' → logprob: -6.648998737335205
    10. ')' → logprob: -7.023998737335205

Token 1432: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006811291445046663
    2. ')' → logprob: -5.756811141967773
    3. ' ,' → logprob: -7.006811141967773
    4. 'in' → logprob: -7.256811141967773
    5. ',n' → logprob: -7.256811141967773
    6. '_,' → logprob: -7.631811141967773
    7. ' in' → logprob: -9.006811141967773
    8. ',v' → logprob: -9.131811141967773
    9. ',node' → logprob: -9.256811141967773
    10. 'n' → logprob: -9.381811141967773

Token 1433: ' q' (ID: 2335)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7715005874633789
    2. 'idx' → logprob: -1.521500587463379
    3. 'qi' → logprob: -2.021500587463379
    4. 'cost' → logprob: -2.396500587463379
    5. ')' → logprob: -3.896500587463379
    6. 'i' → logprob: -4.396500587463379
    7. 'ptr' → logprob: -4.896500587463379
    8. 'child' → logprob: -5.396500587463379
    9. 'q' → logprob: -5.521500587463379
    10. 'c' → logprob: -5.646500587463379

Token 1434: 'id' (ID: 315)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.3132706880569458
    2. ',' → logprob: -1.9382706880569458
    3. 'b' → logprob: -2.0632705688476562
    4. '_idx' → logprob: -2.0632705688476562
    5. 'idx' → logprob: -2.4382705688476562
    6. 'node' → logprob: -3.1882705688476562
    7. ')' → logprob: -3.6882705688476562
    8. 'u' → logprob: -3.8132705688476562
    9. '[' → logprob: -3.9382705688476562
    10. 'n' → logprob: -4.063270568847656

Token 1435: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19860239326953888
    2. ')' → logprob: -1.8236024379730225
    3. '),' → logprob: -4.448602199554443
    4. '_,' → logprob: -6.448602199554443
    5. ' ,' → logprob: -6.448602199554443
    6. ',)' → logprob: -7.448602199554443
    7. '_idx' → logprob: -8.198602676391602
    8. 's' → logprob: -8.698602676391602
    9. '       ' → logprob: -8.948602676391602
    10. 'n' → logprob: -9.073602676391602

Token 1436: ' coeff' (ID: 34539)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -1.0798556804656982
    2. 'op' → logprob: -1.8298556804656982
    3. 'typ' → logprob: -1.9548556804656982
    4. 'flag' → logprob: -2.3298556804656982
    5. 'tp' → logprob: -2.5798556804656982
    6. 'sg' → logprob: -2.8298556804656982
    7. 'mul' → logprob: -3.7048556804656982
    8. 'sig' → logprob: -4.204855918884277
    9. 'coef' → logprob: -4.329855918884277
    10. 't' → logprob: -4.579855918884277

Token 1437: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18104571104049683
    2. ')' → logprob: -1.8060457706451416
    3. ' ,' → logprob: -7.0560455322265625
    4. '),' → logprob: -8.556045532226562
    5. ' )' → logprob: -9.931045532226562
    6. ',)' → logprob: -9.931045532226562
    7. '_,' → logprob: -10.306045532226562
    8. '   ' → logprob: -11.056045532226562
    9. ')==' → logprob: -11.681045532226562
    10. ')
' → logprob: -11.806045532226562

Token 1438: ' dist' (ID: 3601)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.3614382743835449
    2. 'dist' → logprob: -1.611438274383545
    3. 'd' → logprob: -2.986438274383545
    4. 'val' → logprob: -3.611438274383545
    5. 'cost' → logprob: -4.611438274383545
    6. 'w' → logprob: -5.736438274383545
    7. 'weight' → logprob: -6.111438274383545
    8. 'col' → logprob: -6.736438274383545
    9. 'y' → logprob: -6.861438274383545
    10. 'color' → logprob: -6.861438274383545

Token 1439: '_)' (ID: 35080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016384923947043717
    2. ' )' → logprob: -9.250164031982422
    3. ')=' → logprob: -10.750164031982422
    4. '_)' → logprob: -11.000164031982422
    5. ',' → logprob: -11.250164031982422
    6. 'c' → logprob: -13.125164031982422
    7. ')
' → logprob: -13.125164031982422
    8. '   ' → logprob: -13.250164031982422
    9. '),' → logprob: -13.250164031982422
    10. ',)' → logprob: -13.500164031982422

Token 1440: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7922496199607849
    2. ' in' → logprob: -0.7922496199607849
    3. ')' → logprob: -2.4172496795654297
    4. ',' → logprob: -5.91724967956543
    5. ':' → logprob: -7.79224967956543
    6. '
' → logprob: -8.04224967956543
    7. ' )' → logprob: -8.29224967956543
    8. '_in' → logprob: -8.41724967956543
    9. '           ' → logprob: -8.54224967956543
    10. '            ' → logprob: -9.29224967956543

Token 1441: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.08940733969211578
    2. 'queries' → logprob: -2.464407444000244
    3. '[' → logprob: -8.464406967163086
    4. '[(' → logprob: -9.839406967163086
    5. '[]' → logprob: -9.964406967163086
    6. '(query' → logprob: -10.214406967163086
    7. '(' → logprob: -10.339406967163086
    8. ' query' → logprob: -10.839406967163086
    9. 're' → logprob: -11.964406967163086
    10. 'list' → logprob: -12.151906967163086

Token 1442: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.0016063899965956807
    2. '[v' → logprob: -6.501606464385986
    3. 's' → logprob: -9.751605987548828
    4. 'at' → logprob: -11.376605987548828
    5. '(v' → logprob: -11.626605987548828
    6. ')' → logprob: -11.876605987548828
    7. 'At' → logprob: -12.251605987548828
    8. 'v' → logprob: -12.501605987548828
    9. 'queries' → logprob: -13.501605987548828
    10. '   ' → logprob: -13.751605987548828

Token 1443: '_node' (ID: 11390)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.31489771604537964
    2. '_node' → logprob: -1.3148977756500244
    3. '[v' → logprob: -6.814897537231445
    4. 'v' → logprob: -7.939897537231445
    5. '[node' → logprob: -8.939897537231445
    6. '
' → logprob: -10.689897537231445
    7. 'Node' → logprob: -11.564897537231445
    8. ' node' → logprob: -11.689897537231445
    9. '```' → logprob: -12.939897537231445
    10. '-node' → logprob: -14.064897537231445

Token 1444: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.2471589798224159e-05
    2. '[' → logprob: -11.750012397766113
    3. 'v' → logprob: -13.250012397766113
    4. '][' → logprob: -13.625012397766113
    5. ')[' → logprob: -14.750012397766113
    6. '   ' → logprob: -14.875012397766113
    7. '[val' → logprob: -15.625012397766113
    8. ' [' → logprob: -16.37501335144043
    9. '```' → logprob: -16.37501335144043
    10. '(v' → logprob: -16.87501335144043

Token 1445: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.3796679675579071
    2. ':' → logprob: -1.3796679973602295
    3. ']:
' → logprob: -2.8796679973602295
    4. ':
' → logprob: -5.75466775894165
    5. '):' → logprob: -5.87966775894165
    6. '):
' → logprob: -7.62966775894165
    7. '       ' → logprob: -7.62966775894165
    8. ']' → logprob: -7.75466775894165
    9. ':]' → logprob: -8.754668235778809
    10. '           ' → logprob: -8.879668235778809

Token 1446: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08632773160934448
    2. ':' → logprob: -3.8363277912139893
    3. '           ' → logprob: -3.8363277912139893
    4. '            ' → logprob: -4.96132755279541
    5. '                
' → logprob: -5.21132755279541
    6. ' :' → logprob: -5.46132755279541
    7. '                ' → logprob: -5.71132755279541
    8. ')' → logprob: -5.83632755279541
    9. '                               ' → logprob: -6.33632755279541
    10. ' 
' → logprob: -6.58632755279541

Token 1447: ' x' (ID: 1215)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.9186646342277527
    2. 'if' → logprob: -1.0436646938323975
    3. '           ' → logprob: -1.5436646938323975
    4. ' if' → logprob: -4.418664455413818
    5. 'key' → logprob: -5.168664455413818
    6. '               ' → logprob: -5.168664455413818
    7. ' cnt' → logprob: -5.668664455413818
    8. 'for' → logprob: -5.668664455413818
    9. '       ' → logprob: -6.543664455413818
    10. 'sum' → logprob: -6.918664455413818

Token 1448: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6946152448654175
    2. ' =' → logprob: -0.8196152448654175
    3. 'c' → logprob: -4.194615364074707
    4. ',' → logprob: -4.319615364074707
    5. ')' → logprob: -5.694615364074707
    6. '_c' → logprob: -5.819615364074707
    7. '_' → logprob: -5.944615364074707
    8. '   ' → logprob: -5.944615364074707
    9. 'cnt' → logprob: -6.194615364074707
    10. ' ' → logprob: -6.319615364074707

Token 1449: ' -' (ID: 533)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.010772605426609516
    2. 'sum' → logprob: -5.635772705078125
    3. 'ans' → logprob: -5.885772705078125
    4. 'coeff' → logprob: -6.510772705078125
    5. '(cnt' → logprob: -6.510772705078125
    6. '0' → logprob: -7.760772705078125
    7. 'query' → logprob: -9.135772705078125
    8. 'qid' → logprob: -9.135772705078125
    9. '(ans' → logprob: -9.385772705078125
    10. ' cnt' → logprob: -9.510772705078125

Token 1450: 'sum' (ID: 12298)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9381185173988342
    2. 'coeff' → logprob: -1.1881184577941895
    3. 'cnt' → logprob: -1.5631184577941895
    4. 'MG' → logprob: -3.8131184577941895
    5. 'pre' → logprob: -3.9381184577941895
    6. 'op' → logprob: -4.5631184577941895
    7. 'sum' → logprob: -4.5631184577941895
    8. 'q' → logprob: -5.3131184577941895
    9. 'col' → logprob: -5.4381184577941895
    10. 'dist' → logprob: -5.9381184577941895

Token 1451: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0008837147615849972
    2. '[' → logprob: -8.125884056091309
    3. '[c' → logprob: -8.750884056091309
    4. '_' → logprob: -9.500884056091309
    5. '   ' → logprob: -9.500884056091309
    6. '
' → logprob: -9.750884056091309
    7. '_c' → logprob: -10.000884056091309
    8. '       ' → logprob: -10.500884056091309
    9. '[(' → logprob: -10.875884056091309
    10. '    ' → logprob: -11.125884056091309

Token 1452: '[col' (ID: 75852)
  Prédit: '[col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -0.04292302578687668
    2. '[(' → logprob: -3.4179229736328125
    3. '[' → logprob: -4.7929229736328125
    4. '(col' → logprob: -7.9179229736328125
    5. 'col' → logprob: -8.292922973632812
    6. '[c' → logprob: -9.667922973632812
    7. '.get' → logprob: -9.667922973632812
    8. '[cnt' → logprob: -10.042922973632812
    9. '[
' → logprob: -10.542922973632812
    10. '
' → logprob: -10.667922973632812

Token 1453: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03175947442650795
    2. '+' → logprob: -4.406759262084961
    3. ']+' → logprob: -4.406759262084961
    4. ']
' → logprob: -5.531759262084961
    5. ' +' → logprob: -6.906759262084961
    6. ' ]' → logprob: -7.281759262084961
    7. ')' → logprob: -7.406759262084961
    8. '<|end|>' → logprob: -8.906759262084961
    9. ']+=' → logprob: -9.406759262084961
    10. '[' → logprob: -9.781759262084961

Token 1454: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4048794209957123
    2. '<|end|>' → logprob: -1.6548794507980347
    3. ')' → logprob: -2.904879331588745
    4. ' +' → logprob: -3.029879331588745
    5. '
' → logprob: -4.279879570007324
    6. '<|end|>' → logprob: -4.779879570007324
    7. '       ' → logprob: -5.154879570007324
    8. '               ' → logprob: -5.654879570007324
    9. '           ' → logprob: -6.904879570007324
    10. '+
' → logprob: -7.279879570007324

Token 1455: ' dist' (ID: 3601)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.126631960272789
    2. 'coeff' → logprob: -3.25163197517395
    3. 'pre' → logprob: -3.37663197517395
    4. '0' → logprob: -4.001631736755371
    5. 'op' → logprob: -4.501631736755371
    6. ' cnt' → logprob: -5.751631736755371
    7. ' pre' → logprob: -6.126631736755371
    8. 'count' → logprob: -6.501631736755371
    9. 'ptr' → logprob: -7.001631736755371
    10. 'ans' → logprob: -7.001631736755371

Token 1456: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11857116967439651
    2. '<|end|>' → logprob: -2.2435712814331055
    3. ')' → logprob: -6.7435712814331055
    4. ' ' → logprob: -6.8685712814331055
    5. '[' → logprob: -6.9935712814331055
    6. ' _' → logprob: -7.3685712814331055
    7. '[v' → logprob: -7.6185712814331055
    8. '<|end|>' → logprob: -8.368571281433105
    9. '_
' → logprob: -8.618571281433105
    10. ']' → logprob: -9.368571281433105

Token 1457: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1458: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -9.460291767027229e-05
    2. ' cnt' → logprob: -10.125094413757324
    3. '(cnt' → logprob: -11.125094413757324
    4. '   ' → logprob: -11.125094413757324
    5. '0' → logprob: -11.625094413757324
    6. '-c' → logprob: -12.625094413757324
    7. '[cnt' → logprob: -13.000094413757324
    8. 'count' → logprob: -13.375094413757324
    9. 'cn' → logprob: -13.625094413757324
    10. 'ct' → logprob: -13.875094413757324

Token 1459: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.019919808954000473
    2. 'col' → logprob: -4.5199198722839355
    3. '[col' → logprob: -4.7699198722839355
    4. '[' → logprob: -8.769919395446777
    5. 'v' → logprob: -9.894919395446777
    6. '[c' → logprob: -10.519919395446777
    7. 'cnt' → logprob: -10.769919395446777
    8. '[
' → logprob: -10.769919395446777
    9. '[v' → logprob: -11.519919395446777
    10. ' col' → logprob: -11.894919395446777

Token 1460: '[col' (ID: 75852)
  Prédit: '[col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -0.002091496018692851
    2. 'col' → logprob: -6.252091407775879
    3. '[' → logprob: -9.127091407775879
    4. '[
' → logprob: -9.877091407775879
    5. ' col' → logprob: -14.127091407775879
    6. '(col' → logprob: -14.377091407775879
    7. '
' → logprob: -15.002091407775879
    8. 'c' → logprob: -15.002091407775879
    9. '```' → logprob: -15.502091407775879
    10. '[color' → logprob: -15.502091407775879

Token 1461: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.28277963399887085
    2. ')' → logprob: -1.7827796936035156
    3. '<|end|>' → logprob: -2.7827796936035156
    4. '<|end|>' → logprob: -4.657779693603516
    5. ']
' → logprob: -6.282779693603516
    6. '       ' → logprob: -7.157779693603516
    7. '           ' → logprob: -7.157779693603516
    8. ' ]' → logprob: -7.282779693603516
    9. ')
' → logprob: -7.532779693603516
    10. '               ' → logprob: -8.157779693603516

Token 1462: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1441529095172882
    2. '               ' → logprob: -3.269152879714966
    3. ':' → logprob: -3.769152879714966
    4. ':
' → logprob: -4.019153118133545
    5. '           ' → logprob: -4.644153118133545
    6. '       ' → logprob: -5.019153118133545
    7. '                   ' → logprob: -5.144153118133545
    8. '\n' → logprob: -5.769153118133545
    9. ')
' → logprob: -5.894153118133545
    10. ' ' → logprob: -6.019153118133545

Token 1463: ' ans' (ID: 3345)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.089560627937317
    2. ' ans' → logprob: -1.339560627937317
    3. 'ans' (adapté à ' ans') → logprob: -1.589560627937317
    4. ' )' → logprob: -2.2145605087280273
    5. '+' → logprob: -3.7145605087280273
    6. ' stack' → logprob: -4.339560508728027
    7. 'stack' → logprob: -4.464560508728027
    8. '(ans' → logprob: -5.464560508728027
    9. ' if' → logprob: -5.964560508728027
    10. ' ' → logprob: -6.214560508728027

Token 1464: '[q' (ID: 99278)
  Prédit: '[q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -0.744200587272644
    2. '[' → logprob: -1.119200587272644
    3. '[v' → logprob: -1.619200587272644
    4. '```' → logprob: -9.244200706481934
    5. '\[' → logprob: -10.244200706481934
    6. '[
' → logprob: -10.744200706481934
    7. '[col' → logprob: -10.994200706481934
    8. '[val' → logprob: -10.994200706481934
    9. ')[' → logprob: -11.619200706481934
    10. '[idx' → logprob: -11.994200706481934

Token 1465: 'id' (ID: 315)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026445778086781502
    2. '[v' → logprob: -3.7764458656311035
    3. '[q' → logprob: -6.0264458656311035
    4. 'v' → logprob: -7.5264458656311035
    5. 'qid' → logprob: -9.276445388793945
    6. 'id' → logprob: -10.026445388793945
    7. 'qi' → logprob: -10.526445388793945
    8. '```' → logprob: -10.901445388793945
    9. '[
' → logprob: -11.151445388793945
    10. 'vq' → logprob: -12.151445388793945

Token 1466: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09026498347520828
    2. ']+=' → logprob: -2.4652650356292725
    3. '+=' → logprob: -7.340264797210693
    4. ']+' → logprob: -7.965264797210693
    5. ')' → logprob: -8.965265274047852
    6. '[' → logprob: -9.215265274047852
    7. ' ]' → logprob: -10.840265274047852
    8. ']=' → logprob: -11.215265274047852
    9. '       ' → logprob: -11.590265274047852
    10. '           ' → logprob: -11.715265274047852

Token 1467: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04921921342611313
    2. ' +=' → logprob: -3.4242191314697266
    3. '[' → logprob: -4.799219131469727
    4. '=' → logprob: -5.424219131469727
    5. '-=' → logprob: -6.549219131469727
    6. ' -=' → logprob: -7.299219131469727
    7. ']+=' → logprob: -8.299219131469727
    8. '*=' → logprob: -9.299219131469727
    9. '[-' → logprob: -9.674219131469727
    10. '[v' → logprob: -9.799219131469727

Token 1468: ' x' (ID: 1215)
  Prédit: 'coeff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coeff' → logprob: -0.31456974148750305
    2. ' coeff' → logprob: -1.4395697116851807
    3. ' x' → logprob: -4.31456995010376
    4. 'x' → logprob: -4.81456995010376
    5. ' op' → logprob: -5.06456995010376
    6. 'op' → logprob: -5.93956995010376
    7. ' pre' → logprob: -6.93956995010376
    8. '(coeff' → logprob: -7.56456995010376
    9. ' (' → logprob: -8.689569473266602
    10. '(op' → logprob: -8.939569473266602

Token 1469: ' *' (ID: 425)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9642711281776428
    2. '
' → logprob: -1.214271068572998
    3. '<|end|>' → logprob: -1.589271068572998
    4. '       ' → logprob: -2.714271068572998
    5. '               ' → logprob: -4.089271068572998
    6. ')' → logprob: -4.964271068572998
    7. '\n' → logprob: -5.464271068572998
    8. '            
' → logprob: -5.964271068572998
    9. '        
' → logprob: -6.214271068572998
    10. '<|end|>' → logprob: -6.339271068572998

Token 1470: ' coeff' (ID: 34539)
  Prédit: 'coeff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coeff' → logprob: -0.0005557744298130274
    2. ' coeff' → logprob: -7.500555992126465
    3. '(coeff' → logprob: -13.250555992126465
    4. 'coef' → logprob: -14.250555992126465
    5. '   ' → logprob: -15.500555992126465
    6. 'Coeff' → logprob: -16.62555503845215
    7. '_coeff' → logprob: -17.12555503845215
    8. '.coe' → logprob: -17.62555503845215
    9. '           ' → logprob: -17.75055503845215
    10. 'co' → logprob: -17.87555503845215

Token 1471: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6104556322097778
    2. '
' → logprob: -1.1104556322097778
    3. '<|end|>' → logprob: -2.8604555130004883
    4. '\n' → logprob: -3.4854555130004883
    5. '               ' → logprob: -3.6104555130004883
    6. '       ' → logprob: -5.735455513000488
    7. '            
' → logprob: -6.235455513000488
    8. ')' → logprob: -6.360455513000488
    9. '                   ' → logprob: -7.485455513000488
    10. ')
' → logprob: -7.610455513000488

Token 1472: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6298698782920837
    2. 'state' → logprob: -2.0048699378967285
    3. '
' → logprob: -2.1298699378967285
    4. '       ' → logprob: -2.2548699378967285
    5. '<|end|>' → logprob: -3.6298699378967285
    6. '            
' → logprob: -4.0048699378967285
    7. 'v' → logprob: -4.5048699378967285
    8. '        
' → logprob: -4.5048699378967285
    9. '               ' → logprob: -5.0048699378967285
    10. ')' → logprob: -5.1298699378967285

Token 1473: ' state' (ID: 2608)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05748533830046654
    2. 'state' (adapté à ' state') → logprob: -3.432485342025757
    3. '       ' → logprob: -4.057485103607178
    4. ' state' → logprob: -5.432485103607178
    5. '   ' → logprob: -6.307485103607178
    6. '	state' → logprob: -10.807485580444336
    7. '               ' → logprob: -11.057485580444336
    8. '
' → logprob: -11.432485580444336
    9. ' ' → logprob: -11.807485580444336
    10. ',state' → logprob: -12.182485580444336

Token 1474: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.935296834039036e-06
    2. 'v' → logprob: -13.12500286102295
    3. '[' → logprob: -14.25000286102295
    4. '[
' → logprob: -16.375003814697266
    5. '```' → logprob: -16.625003814697266
    6. '	v' → logprob: -17.125003814697266
    7. '
' → logprob: -17.750003814697266
    8. '[val' → logprob: -18.500003814697266
    9. '\[' → logprob: -19.000003814697266
    10. ')v' → logprob: -19.000003814697266

Token 1475: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009632694418542087
    2. ']' → logprob: -7.87596321105957
    3. ' =' → logprob: -8.12596321105957
    4. ']=' → logprob: -8.50096321105957
    5. '+=' → logprob: -9.50096321105957
    6. ']+=' → logprob: -11.87596321105957
    7. '=
' → logprob: -14.50096321105957
    8. ' +=' → logprob: -14.62596321105957
    9. '.=' → logprob: -14.87596321105957
    10. ')=' → logprob: -15.37596321105957

Token 1476: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00029708960209973156
    2. ' =' → logprob: -8.250297546386719
    3. '+=' → logprob: -10.250297546386719
    4. ' +=' → logprob: -15.125297546386719
    5. '=
' → logprob: -15.500297546386719
    6. '.=' → logprob: -17.37529754638672
    7. '＝' → logprob: -18.75029754638672
    8. '==' → logprob: -18.75029754638672
    9. '=

' → logprob: -19.00029754638672
    10. ':=' → logprob: -19.37529754638672

Token 1477: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -18.25
    4. '           ' → logprob: -19.25
    5. '2' → logprob: -20.625
    6. '１' → logprob: -20.75
    7. '       ' → logprob: -21.0
    8. '+' → logprob: -21.5
    9. '=' → logprob: -21.5
    10. '     ' → logprob: -21.625

Token 1478: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '2' → logprob: -19.875
    4. '１' → logprob: -20.625
    5. '   ' → logprob: -21.875
    6. '۱' → logprob: -23.5
    7. '```' → logprob: -23.875
    8. '    ' → logprob: -24.875
    9. '3' → logprob: -25.0
    10. '=' → logprob: -25.125

Token 1479: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5820831060409546
    2. '           ' → logprob: -0.8320831060409546
    3. '   ' → logprob: -6.082083225250244
    4. 'continue' → logprob: -6.582083225250244
    5. '
' → logprob: -7.332083225250244
    6. ' continue' → logprob: -7.707083225250244
    7. '<|end|>' → logprob: -8.457082748413086
    8. 'elif' → logprob: -8.707082748413086
    9. '               ' → logprob: -9.082082748413086
    10. '        
' → logprob: -9.082082748413086

Token 1480: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04338039830327034
    2. '       ' → logprob: -3.2933804988861084
    3. '```' → logprob: -6.793380260467529
    4. '   ' → logprob: -6.918380260467529
    5. '<|end|>' → logprob: -7.293380260467529
    6. '               ' → logprob: -8.043380737304688
    7. '​' → logprob: -8.168380737304688
    8. 'continue' → logprob: -8.418380737304688
    9. ')' → logprob: -8.668380737304688
    10. '            
' → logprob: -9.043380737304688

Token 1481: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13503775000572205
    2. ' else' → logprob: -3.635037660598755
    3. '           ' → logprob: -3.760037660598755
    4. 'elif' → logprob: -4.385037899017334
    5. ' if' → logprob: -4.635037899017334
    6. ' elif' → logprob: -4.760037899017334
    7. 'else' → logprob: -4.885037899017334
    8. '        ' → logprob: -5.260037899017334
    9. '   ' → logprob: -5.760037899017334
    10. ')' → logprob: -5.885037899017334

Token 1482: ' ptr' (ID: 23266)
  Prédit: 'ptr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ptr' → logprob: -0.03958921879529953
    2. ' ptr' → logprob: -3.2895891666412354
    3. 'state' → logprob: -6.6645894050598145
    4. ' state' → logprob: -8.289588928222656
    5. '	ptr' → logprob: -12.039588928222656
    6. 'len' → logprob: -13.289588928222656
    7. '(ptr' → logprob: -13.289588928222656
    8. 'v' → logprob: -13.414588928222656
    9. '
' → logprob: -13.414588928222656
    10. ' ' → logprob: -13.914588928222656

Token 1483: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9146995327901095e-05
    2. 'v' → logprob: -10.875019073486328
    3. '[' → logprob: -16.500019073486328
    4. '<v' → logprob: -16.875019073486328
    5. '```' → logprob: -17.250019073486328
    6. '	v' → logprob: -18.750019073486328
    7. '=v' → logprob: -18.875019073486328
    8. '(v' → logprob: -19.125019073486328
    9. ' [' → logprob: -19.375019073486328
    10. ',v' → logprob: -19.625019073486328

Token 1484: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39112862944602966
    2. '[v' → logprob: -1.141128659248352
    3. '<v' → logprob: -6.1411285400390625
    4. ']<' → logprob: -6.5161285400390625
    5. '[' → logprob: -7.8911285400390625
    6. ']==' → logprob: -9.016128540039062
    7. 'v' → logprob: -10.141128540039062
    8. '```' → logprob: -10.641128540039062
    9. ' ]' → logprob: -11.141128540039062
    10. ']!=' → logprob: -11.766128540039062

Token 1485: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4364769458770752
    2. '[v' → logprob: -1.9364769458770752
    3. '<v' → logprob: -2.061476945877075
    4. '<' → logprob: -3.061476945877075
    5. '<len' → logprob: -3.686476945877075
    6. '[' → logprob: -4.936476707458496
    7. '==' → logprob: -6.686476707458496
    8. ' ==' → logprob: -7.561476707458496
    9. ']' → logprob: -8.061476707458496
    10. '<p' → logprob: -8.561476707458496

Token 1486: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.2200749754119897e-06
    2. ' len' → logprob: -13.625001907348633
    3. '(len' → logprob: -14.125001907348633
    4. '[len' → logprob: -16.000001907348633
    5. '	len' → logprob: -16.250001907348633
    6. '=len' → logprob: -16.875001907348633
    7. '<len' → logprob: -17.625001907348633
    8. ',len' → logprob: -18.500001907348633
    9. '   ' → logprob: -18.750001907348633
    10. '```' → logprob: -20.625001907348633

Token 1487: '(edges' (ID: 185298)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0009194392478093505
    2. '(edges' → logprob: -7.000919342041016
    3. ' edges' → logprob: -11.750919342041016
    4. '.edges' → logprob: -16.750919342041016
    5. '   ' → logprob: -18.375919342041016
    6. '```' → logprob: -20.125919342041016
    7. 'stack' → logprob: -20.125919342041016
    8. '_edges' → logprob: -20.125919342041016
    9. 'edge' → logprob: -20.500919342041016
    10. 'Edges' → logprob: -21.000919342041016

Token 1488: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.096126576769166e-05
    2. 'v' → logprob: -10.125041007995605
    3. ')' → logprob: -15.125041007995605
    4. '(v' → logprob: -15.625041007995605
    5. ')v' → logprob: -15.625041007995605
    6. '```' → logprob: -15.750041007995605
    7. '
' → logprob: -17.12504005432129
    8. '   ' → logprob: -17.12504005432129
    9. '[' → logprob: -17.37504005432129
    10. '[
' → logprob: -18.00004005432129

Token 1489: ']):
' (ID: 51989)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.6176186800003052
    2. '):
' → logprob: -1.1176186800003052
    3. ']):
' → logprob: -2.1176185607910156
    4. ']):' → logprob: -4.992618560791016
    5. '):' → logprob: -5.742618560791016
    6. 'v' → logprob: -6.117618560791016
    7. ']' → logprob: -8.242618560791016
    8. ')' → logprob: -8.367618560791016
    9. ')]' → logprob: -9.117618560791016
    10. '```' → logprob: -9.242618560791016

Token 1490: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01830971986055374
    2. ':
' → logprob: -4.768309593200684
    3. ':' → logprob: -5.268309593200684
    4. ',' → logprob: -6.643309593200684
    5. '       ' → logprob: -7.393309593200684
    6. '               ' → logprob: -7.518309593200684
    7. ' col' → logprob: -7.893309593200684
    8. '```' → logprob: -8.143309593200684
    9. '   ' → logprob: -8.268309593200684
    10. 'col' → logprob: -8.393309593200684

Token 1491: ' to' (ID: 316)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.10890831053256989
    2. '           ' → logprob: -2.8589084148406982
    3. 'e' → logprob: -4.483908176422119
    4. ' u' → logprob: -4.983908176422119
    5. 'b' → logprob: -5.108908176422119
    6. '       ' → logprob: -5.358908176422119
    7. 'n' → logprob: -5.608908176422119
    8. 'w' → logprob: -5.608908176422119
    9. 'to' (adapté à ' to') → logprob: -6.233908176422119
    10. 'a' → logprob: -6.233908176422119

Token 1492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02453097514808178
    2. '=' → logprob: -4.14953088760376
    3. ',v' → logprob: -4.89953088760376
    4. '_,' → logprob: -7.89953088760376
    5. ' =' → logprob: -8.149531364440918
    6. 'v' → logprob: -8.899531364440918
    7. ' ,' → logprob: -9.274531364440918
    8. '```' → logprob: -10.649531364440918
    9. ',col' → logprob: -11.024531364440918
    10. ',next' → logprob: -11.149531364440918

Token 1493: ' cost' (ID: 3097)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0010050622513517737
    2. 'cost' → logprob: -7.626005172729492
    3. ' dist' → logprob: -8.001005172729492
    4. 'd' → logprob: -9.751005172729492
    5. 'w' → logprob: -10.126005172729492
    6. '_dist' → logprob: -10.751005172729492
    7. 'edges' → logprob: -11.626005172729492
    8. 'distance' → logprob: -11.626005172729492
    9. '```' → logprob: -11.751005172729492
    10. '...' → logprob: -12.126005172729492

Token 1494: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006819685455411673
    2. '=' → logprob: -5.006819725036621
    3. ' ,' → logprob: -9.881819725036621
    4. ' =' → logprob: -10.131819725036621
    5. '_,' → logprob: -12.381819725036621
    6. '           ' → logprob: -12.506819725036621
    7. ',col' → logprob: -13.131819725036621
    8. ')' → logprob: -14.631819725036621
    9. ',color' → logprob: -14.881819725036621
    10. 'col' → logprob: -15.256819725036621

Token 1495: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.014175384305417538
    2. 'color' → logprob: -4.2641754150390625
    3. ' col' → logprob: -12.014175415039062
    4. 'colo' → logprob: -13.014175415039062
    5. 'ocol' → logprob: -14.764175415039062
    6. '```' → logprob: -14.764175415039062
    7. 'cost' → logprob: -15.014175415039062
    8. 'coln' → logprob: -15.139175415039062
    9. 'clr' → logprob: -15.139175415039062
    10. '	col' → logprob: -15.264175415039062

Token 1496: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416398212313652
    2. ' =' → logprob: -4.264163970947266
    3. '       ' → logprob: -15.264163970947266
    4. '           ' → logprob: -16.389163970947266
    5. '   ' → logprob: -16.764163970947266
    6. ' ' → logprob: -17.639163970947266
    7. '=
' → logprob: -18.139163970947266
    8. ')' → logprob: -18.264163970947266
    9. '        ' → logprob: -18.639163970947266
    10. '    ' → logprob: -18.764163970947266

Token 1497: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0036012595519423485
    2. ' edges' → logprob: -5.62860107421875
    3. '   ' → logprob: -14.00360107421875
    4. '.edges' → logprob: -15.62860107421875
    5. '(edges' → logprob: -16.12860107421875
    6. 'edge' → logprob: -17.50360107421875
    7. '`' → logprob: -17.75360107421875
    8. '
' → logprob: -18.00360107421875
    9. 'ptr' → logprob: -18.12860107421875
    10. '       ' → logprob: -18.50360107421875

Token 1498: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0001114106344175525
    2. 'v' → logprob: -9.12511157989502
    3. '[' → logprob: -13.87511157989502
    4. '	v' → logprob: -15.00011157989502
    5. ' v' → logprob: -15.12511157989502
    6. '][' → logprob: -15.37511157989502
    7. '```' → logprob: -15.87511157989502
    8. '(v' → logprob: -16.000110626220703
    9. ',v' → logprob: -16.000110626220703
    10. ')v' → logprob: -16.375110626220703

Token 1499: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.029014864936470985
    2. 'v' → logprob: -4.029015064239502
    3. '][' → logprob: -4.529015064239502
    4. ']' → logprob: -12.029014587402344
    5. '```' → logprob: -12.904014587402344
    6. '	v' → logprob: -13.154014587402344
    7. '[' → logprob: -13.529014587402344
    8. '(v' → logprob: -14.404014587402344
    9. ' v' → logprob: -14.529014587402344
    10. ')v' → logprob: -14.779014587402344

Token 1500: 'ptr' (ID: 7433)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -7.896309739408025e-07
    2. '][' → logprob: -14.875000953674316
    3. ']' → logprob: -15.250000953674316
    4. ' v' → logprob: -16.875
    5. 'ptr' → logprob: -17.0
    6. '
' → logprob: -17.625
    7. '[v' → logprob: -17.75
    8. '	v' → logprob: -18.25
    9. '```' → logprob: -19.25
    10. ']
' → logprob: -19.625

Token 1501: '[v' (ID: 36561)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.029911428689956665
    2. '[v' → logprob: -3.529911518096924
    3. ']' → logprob: -9.279911041259766
    4. '][' → logprob: -9.904911041259766
    5. ' v' → logprob: -11.904911041259766
    6. '	v' → logprob: -12.029911041259766
    7. '```' → logprob: -12.654911041259766
    8. '(v' → logprob: -14.029911041259766
    9. ')v' → logprob: -14.654911041259766
    10. '   ' → logprob: -16.404911041259766

Token 1502: ']]
' (ID: 29446)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.33606836199760437
    2. ']' → logprob: -1.3360683917999268
    3. 'v' → logprob: -4.086068153381348
    4. ']]' → logprob: -5.336068153381348
    5. ']
' → logprob: -7.211068153381348
    6. ']]
' → logprob: -9.086068153381348
    7. '])' → logprob: -10.086068153381348
    8. '][' → logprob: -11.961068153381348
    9. ']+' → logprob: -11.961068153381348
    10. '(v' → logprob: -12.211068153381348

Token 1503: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017795454477891326
    2. '               ' → logprob: -6.626779556274414
    3. '	       ' → logprob: -8.751779556274414
    4. '		' → logprob: -9.001779556274414
    5. '            
' → logprob: -10.126779556274414
    6. 'ptr' → logprob: -10.251779556274414
    7. '                   ' → logprob: -11.126779556274414
    8. '
' → logprob: -11.376779556274414
    9. '	ptr' → logprob: -11.626779556274414
    10. '		   ' → logprob: -11.751779556274414

Token 1504: ' ptr' (ID: 23266)
  Prédit: 'ptr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ptr' (adapté à ' ptr') → logprob: -0.08934290707111359
    2. '           ' → logprob: -2.7143428325653076
    3. ' ptr' → logprob: -4.089343070983887
    4. '	ptr' → logprob: -6.714343070983887
    5. '   ' → logprob: -7.589343070983887
    6. '               ' → logprob: -7.714343070983887
    7. '	       ' → logprob: -9.464343070983887
    8. '       ' → logprob: -9.839343070983887
    9. '	   ' → logprob: -10.089343070983887
    10. 'if' → logprob: -10.214343070983887

Token 1505: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.45848218582978e-06
    2. 'v' → logprob: -13.12500286102295
    3. '```' → logprob: -15.00000286102295
    4. '	v' → logprob: -18.750001907348633
    5. '[' → logprob: -19.500001907348633
    6. '[
' → logprob: -20.375001907348633
    7. '(v' → logprob: -20.625001907348633
    8. '<v' → logprob: -20.625001907348633
    9. '[u' → logprob: -20.625001907348633
    10. '\[' → logprob: -20.750001907348633

Token 1506: ']' (ID: 60)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.018333368003368378
    2. ']' → logprob: -4.018333435058594
    3. 'v' → logprob: -9.143333435058594
    4. ']+' → logprob: -9.518333435058594
    5. ']+=' → logprob: -13.268333435058594
    6. '][' → logprob: -14.768333435058594
    7. '```' → logprob: -15.018333435058594
    8. '[' → logprob: -15.518333435058594
    9. '	v' → logprob: -16.018333435058594
    10. '(v' → logprob: -16.143333435058594

Token 1507: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00015502817404922098
    2. ' +=' → logprob: -9.375155448913574
    3. ']+=' → logprob: -9.625155448913574
    4. '=' → logprob: -12.625155448913574
    5. '+' → logprob: -14.250155448913574
    6. '[' → logprob: -16.375154495239258
    7. '```' → logprob: -17.125154495239258
    8. ']' → logprob: -18.125154495239258
    9. '+='' → logprob: -18.375154495239258
    10. '==' → logprob: -18.375154495239258

Token 1508: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '
' → logprob: -19.375
    4. '```' → logprob: -20.5
    5. '１' → logprob: -21.875
    6. '   ' → logprob: -22.625
    7. '۱' → logprob: -23.0
    8. '+' → logprob: -23.25
    9. '

' → logprob: -24.1875
    10. '0' → logprob: -24.1875

Token 1509: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '```' → logprob: -17.625
    4. '
' → logprob: -18.75
    5. '۱' → logprob: -20.75
    6. 'col' → logprob: -21.25
    7. '...' → logprob: -21.3125
    8. '   ' → logprob: -21.375
    9. 'to' → logprob: -21.5
    10. '+' → logprob: -21.5

Token 1510: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019948746194131672
    2. ' if' → logprob: -9.875199317932129
    3. 'stack' → logprob: -10.250199317932129
    4. 'if' → logprob: -10.375199317932129
    5. '       ' → logprob: -10.625199317932129
    6. '   ' → logprob: -11.000199317932129
    7. '            
' → logprob: -11.250199317932129
    8. '<|end|>' → logprob: -11.500199317932129
    9. '               ' → logprob: -12.250199317932129
    10. '```' → logprob: -12.750199317932129

Token 1511: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006267757853493094
    2. 'if' → logprob: -7.750626564025879
    3. '   ' → logprob: -9.750626564025879
    4. ' if' → logprob: -9.750626564025879
    5. '       ' → logprob: -10.750626564025879
    6. 'stack' → logprob: -10.750626564025879
    7. '```' → logprob: -11.000626564025879
    8. '            
' → logprob: -11.500626564025879
    9. '
' → logprob: -12.125626564025879
    10. '               ' → logprob: -13.625626564025879

Token 1512: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.44383516907691956
    2. '           ' → logprob: -1.1938351392745972
    3. 'stack' → logprob: -3.0688352584838867
    4. 'cnt' → logprob: -4.943835258483887
    5. ' if' → logprob: -7.068835258483887
    6. '       ' → logprob: -7.568835258483887
    7. '```' → logprob: -9.193835258483887
    8. '   ' → logprob: -9.318835258483887
    9. 'count' → logprob: -9.693835258483887
    10. '#' → logprob: -10.443835258483887

Token 1513: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0006770504405722022
    2. 'col' → logprob: -7.625677108764648
    3. 'state' → logprob: -9.125677108764648
    4. 'not' → logprob: -10.125677108764648
    5. ' to' → logprob: -10.375677108764648
    6. '
' → logprob: -13.000677108764648
    7. '   ' → logprob: -13.375677108764648
    8. '(to' → logprob: -13.375677108764648
    9. '```' → logprob: -14.375677108764648
    10. 'v' → logprob: -14.875677108764648

Token 1514: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.25203701853752136
    2. ' !=' → logprob: -1.5020370483398438
    3. '==' → logprob: -9.627037048339844
    4. '()!=' → logprob: -11.002037048339844
    5. ' not' → logprob: -11.877037048339844
    6. ')!=' → logprob: -12.002037048339844
    7. ' ==' → logprob: -12.502037048339844
    8. ']!=' → logprob: -12.752037048339844
    9. '!=-' → logprob: -13.377037048339844
    10. 'not' → logprob: -13.502037048339844

Token 1515: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.4060561776859686e-05
    2. 'v' → logprob: -10.125043869018555
    3. ' p' → logprob: -12.500043869018555
    4. '
' → logprob: -16.625043869018555
    5. '   ' → logprob: -17.250043869018555
    6. '	p' → logprob: -17.875043869018555
    7. '    ' → logprob: -19.500043869018555
    8. ' ' → logprob: -19.750043869018555
    9. 'pre' → logprob: -20.250043869018555
    10. '
' → logprob: -20.750043869018555

Token 1516: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22406600415706635
    2. ':
' → logprob: -2.0990660190582275
    3. 'continue' → logprob: -2.9740660190582275
    4. '               ' → logprob: -4.474065780639648
    5. ' continue' → logprob: -4.724065780639648
    6. ' or' → logprob: -5.474065780639648
    7. '           ' → logprob: -6.349065780639648
    8. ':return' → logprob: -7.599065780639648
    9. '_continue' → logprob: -8.724065780639648
    10. 'Continue' → logprob: -9.724065780639648

Token 1517: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0813431665301323
    2. 'continue' → logprob: -2.831343173980713
    3. ' continue' → logprob: -3.956343173980713
    4. '	continue' → logprob: -10.706342697143555
    5. '           ' → logprob: -11.206342697143555
    6. 'Continue' → logprob: -12.331342697143555
    7. '   ' → logprob: -12.706342697143555
    8. '_continue' → logprob: -12.831342697143555
    9. '                   ' → logprob: -12.956342697143555
    10. '              ' → logprob: -13.581342697143555

Token 1518: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013634477742016315
    2. '
' → logprob: -4.76363468170166
    3. '            
' → logprob: -5.63863468170166
    4. 'continue' → logprob: -7.26363468170166
    5. '<|end|>' → logprob: -9.38863468170166
    6. '```' → logprob: -9.38863468170166
    7. ' continue' → logprob: -9.51363468170166
    8. 'stack' → logprob: -9.51363468170166
    9. '       ' → logprob: -10.01363468170166
    10. '               ' → logprob: -10.13863468170166

Token 1519: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007688904879614711
    2. '```' → logprob: -8.000768661499023
    3. '
' → logprob: -8.500768661499023
    4. '            
' → logprob: -9.375768661499023
    5. '       ' → logprob: -9.750768661499023
    6. 'continue' → logprob: -10.500768661499023
    7. '               ' → logprob: -11.125768661499023
    8. 'cnt' → logprob: -11.625768661499023
    9. '[' → logprob: -12.375768661499023
    10. '   ' → logprob: -12.500768661499023

Token 1520: ' cnt' (ID: 27340)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48692572116851807
    2. 'cnt' (adapté à ' cnt') → logprob: -1.236925721168518
    3. 'stack' → logprob: -2.6119256019592285
    4. ' cnt' → logprob: -5.3619256019592285
    5. '       ' → logprob: -5.7369256019592285
    6. '               ' → logprob: -5.8619256019592285
    7. 'count' → logprob: -5.9869256019592285
    8. '   ' → logprob: -6.6119256019592285
    9. '```' → logprob: -6.6119256019592285
    10. ' stack' → logprob: -6.7369256019592285

Token 1521: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10822492092847824
    2. '[col' → logprob: -2.358224868774414
    3. '[c' → logprob: -4.858224868774414
    4. 'col' → logprob: -9.108224868774414
    5. '[' → logprob: -9.608224868774414
    6. '```' → logprob: -10.608224868774414
    7. '[
' → logprob: -11.608224868774414
    8. '[color' → logprob: -12.858224868774414
    9. '   ' → logprob: -13.608224868774414
    10. '
' → logprob: -13.733224868774414

Token 1522: '[col' (ID: 75852)
  Prédit: '[col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -2.2603901015827432e-05
    2. 'col' → logprob: -11.000022888183594
    3. '
' → logprob: -13.125022888183594
    4. '[' → logprob: -13.875022888183594
    5. '[
' → logprob: -13.875022888183594
    6. '```' → logprob: -14.000022888183594
    7. '[color' → logprob: -15.625022888183594
    8. ' col' → logprob: -15.625022888183594
    9. '   ' → logprob: -15.750022888183594
    10. '[(' → logprob: -16.000022888183594

Token 1523: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00977297406643629
    2. ' +=' → logprob: -5.134772777557373
    3. ']+=' → logprob: -5.884772777557373
    4. '=' → logprob: -7.384772777557373
    5. ')' → logprob: -7.884772777557373
    6. ']' → logprob: -10.759773254394531
    7. ')+' → logprob: -11.634773254394531
    8. '+' → logprob: -11.634773254394531
    9. '```' → logprob: -12.009773254394531
    10. '<|end|>' → logprob: -12.259773254394531

Token 1524: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0005068036844022572
    2. ' +=' → logprob: -7.75050687789917
    3. '=' → logprob: -10.000506401062012
    4. ']+=' → logprob: -10.625506401062012
    5. '```' → logprob: -12.125506401062012
    6. '+' → logprob: -14.750506401062012
    7. '+='' → logprob: -15.375506401062012
    8. '   ' → logprob: -16.250507354736328
    9. '+=(' → logprob: -16.375507354736328
    10. '[' → logprob: -16.875507354736328

Token 1525: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '+' → logprob: -19.0
    4. '<|end|>' → logprob: -19.25
    5. 'cost' → logprob: -19.625
    6. '```' → logprob: -19.75
    7. '
' → logprob: -20.625
    8. 'pre' → logprob: -20.625
    9. '2' → logprob: -20.75
    10. '0' → logprob: -20.75

Token 1526: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.250000953674316
    3. 'pre' → logprob: -16.5
    4. 'cost' → logprob: -16.5
    5. '0' → logprob: -16.75
    6. '2' → logprob: -18.125
    7. '-' → logprob: -18.125
    8. '+' → logprob: -18.125
    9. '<|end|>' → logprob: -18.375
    10. '```' → logprob: -18.5

Token 1527: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1528: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5906393527984619
    2. 'sum' → logprob: -0.9656393527984619
    3. ' sum' → logprob: -3.090639352798462
    4. '            ' → logprob: -4.090639114379883
    5. '<|end|>' → logprob: -7.215639114379883
    6. '(sum' → logprob: -7.340639114379883
    7. '          ' → logprob: -7.965639114379883
    8. ' ' → logprob: -8.340639114379883
    9. '```' → logprob: -8.590639114379883
    10. ' 
' → logprob: -8.840639114379883

Token 1529: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.00017421995289623737
    2. 'stack' → logprob: -9.375174522399902
    3. ' sum' → logprob: -9.375174522399902
    4. '           ' → logprob: -12.750174522399902
    5. 'ans' → logprob: -14.750174522399902
    6. '       ' → logprob: -15.125174522399902
    7. 'cnt' → logprob: -15.500174522399902
    8. '```' → logprob: -15.875174522399902
    9. '            ' → logprob: -16.000173568725586
    10. '(sum' → logprob: -16.250173568725586

Token 1530: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.128163257315464e-07
    2. 'с' → logprob: -16.375
    3. '```' → logprob: -16.5
    4. '_c' → logprob: -17.125
    5. '[' → logprob: -17.625
    6. '[c' → logprob: -18.0
    7. '_' → logprob: -18.25
    8. ' c' → logprob: -19.25
    9. ' ' → logprob: -19.375
    10. ')c' → logprob: -19.5

Token 1531: '[col' (ID: 75852)
  Prédit: '[col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -2.3319124011322856e-05
    2. 'col' → logprob: -10.750022888183594
    3. '[
' → logprob: -14.500022888183594
    4. '```' → logprob: -14.500022888183594
    5. '[' → logprob: -14.750022888183594
    6. '[c' → logprob: -16.125022888183594
    7. '[cur' → logprob: -17.000022888183594
    8. '
' → logprob: -17.125022888183594
    9. '(col' → logprob: -17.125022888183594
    10. '	col' → logprob: -17.250022888183594

Token 1532: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20468781888484955
    2. '[col' → logprob: -2.0796878337860107
    3. ']+=' → logprob: -3.2046878337860107
    4. '[' → logprob: -4.704687595367432
    5. '+=' → logprob: -5.204687595367432
    6. ')' → logprob: -5.829687595367432
    7. ']+' → logprob: -6.954687595367432
    8. '```' → logprob: -8.20468807220459
    9. ' +=' → logprob: -8.45468807220459
    10. 'col' → logprob: -8.82968807220459

Token 1533: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -8.792751032160595e-05
    2. ' +=' → logprob: -9.50008773803711
    3. ']+=' → logprob: -11.62508773803711
    4. '=' → logprob: -13.25008773803711
    5. '+' → logprob: -13.50008773803711
    6. '```' → logprob: -14.75008773803711
    7. '+=(' → logprob: -15.37508773803711
    8. '+='' → logprob: -15.75008773803711
    9. '[' → logprob: -16.25008773803711
    10. '-=' → logprob: -16.50008773803711

Token 1534: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -8.180258191714529e-06
    2. ' cost' → logprob: -11.750008583068848
    3. '(cost' → logprob: -16.25000762939453
    4. '
' → logprob: -16.75000762939453
    5. 'pre' → logprob: -18.25000762939453
    6. 'cos' → logprob: -18.37500762939453
    7. '   ' → logprob: -18.62500762939453
    8. 'c' → logprob: -19.50000762939453
    9. '
' → logprob: -19.62500762939453
    10. '-cost' → logprob: -19.87500762939453

Token 1535: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0024259560741484165
    2. 'stack' → logprob: -6.2524261474609375
    3. ' stack' → logprob: -8.252426147460938
    4. '
' → logprob: -9.002426147460938
    5. '(stack' → logprob: -10.502426147460938
    6. '<|end|>' → logprob: -11.127426147460938
    7. '            ' → logprob: -11.502426147460938
    8. '            
' → logprob: -11.502426147460938
    9. '   ' → logprob: -11.627426147460938
    10. '       ' → logprob: -11.627426147460938

Token 1536: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48312926292419434
    2. 'stack' → logprob: -0.9831292629241943
    3. ' stack' → logprob: -4.733129501342773
    4. '	stack' → logprob: -8.858129501342773
    5. '```' → logprob: -10.358129501342773
    6. '(stack' → logprob: -11.733129501342773
    7. '   ' → logprob: -11.983129501342773
    8. '		' → logprob: -12.358129501342773
    9. '
' → logprob: -12.483129501342773
    10. '               ' → logprob: -12.733129501342773

Token 1537: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -7.588793960167095e-05
    2. '           ' → logprob: -9.500076293945312
    3. ' stack' → logprob: -14.750076293945312
    4. '   ' → logprob: -14.875076293945312
    5. '	stack' → logprob: -15.875076293945312
    6. '       ' → logprob: -16.000076293945312
    7. '               ' → logprob: -18.000076293945312
    8. '```' → logprob: -18.750076293945312
    9. '_stack' → logprob: -20.000076293945312
    10. 'heap' → logprob: -20.125076293945312

Token 1538: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00013595925702247769
    2. '.' → logprob: -9.000136375427246
    3. 'append' → logprob: -11.875136375427246
    4. '.app' → logprob: -12.625136375427246
    5. ' .' → logprob: -13.875136375427246
    6. '.ap' → logprob: -14.000136375427246
    7. '```' → logprob: -16.00013542175293
    8. '           ' → logprob: -16.12513542175293
    9. 'Append' → logprob: -16.25013542175293
    10. '_append' → logprob: -16.75013542175293

Token 1539: '((' (ID: 2054)
  Prédit: '(to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(to' → logprob: -0.016371697187423706
    2. '(' → logprob: -4.766371726989746
    3. '((' → logprob: -4.891371726989746
    4. '(To' → logprob: -9.016371726989746
    5. ' (' → logprob: -9.891371726989746
    6. '   ' → logprob: -11.266371726989746
    7. '(todo' → logprob: -12.391371726989746
    8. '(te' → logprob: -12.516371726989746
    9. '(
' → logprob: -12.891371726989746
    10. '(t' → logprob: -13.141371726989746

Token 1540: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -5.512236498361744e-07
    2. ' to' → logprob: -14.625000953674316
    3. '(to' → logprob: -18.25
    4. '           ' → logprob: -18.875
    5. '	to' → logprob: -18.875
    6. '   ' → logprob: -19.0
    7. '               ' → logprob: -19.375
    8. '[to' → logprob: -19.625
    9. '```' → logprob: -20.25
    10. 'toq' → logprob: -20.5

Token 1541: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005607772618532181
    2. ',p' → logprob: -7.625560760498047
    3. ' ,' → logprob: -9.750560760498047
    4. 'p' → logprob: -11.625560760498047
    5. ',v' → logprob: -13.000560760498047
    6. ',col' → logprob: -13.375560760498047
    7. '```' → logprob: -15.250560760498047
    8. '`,' → logprob: -15.625560760498047
    9. '0' → logprob: -15.750560760498047
    10. ',to' → logprob: -15.750560760498047

Token 1542: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.4121114822482923e-06
    2. ' v' → logprob: -12.625003814697266
    3. '	v' → logprob: -17.375003814697266
    4. ')v' → logprob: -17.500003814697266
    5. '   ' → logprob: -19.875003814697266
    6. 'vq' → logprob: -20.250003814697266
    7. '```' → logprob: -20.750003814697266
    8. '
' → logprob: -20.750003814697266
    9. '<|end|>' → logprob: -20.750003814697266
    10. ',v' → logprob: -21.500003814697266

Token 1543: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.706686690449715e-05
    2. ' ,' → logprob: -9.625066757202148
    3. ',c' → logprob: -14.500066757202148
    4. ',col' → logprob: -14.625066757202148
    5. '0' → logprob: -16.75006675720215
    6. ',
' → logprob: -18.37506675720215
    7. '```' → logprob: -18.62506675720215
    8. 'cost' → logprob: -18.75006675720215
    9. '),' → logprob: -19.00006675720215
    10. ',len' → logprob: -19.25006675720215

Token 1544: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -2.7610454708337784e-05
    2. ' col' → logprob: -10.500027656555176
    3. '	col' → logprob: -16.75002670288086
    4. '   ' → logprob: -19.75002670288086
    5. '[col' → logprob: -19.75002670288086
    6. '```' → logprob: -20.00002670288086
    7. '
' → logprob: -20.87502670288086
    8. '(col' → logprob: -21.25002670288086
    9. '.col' → logprob: -22.00002670288086
    10. 'coll' → logprob: -22.00002670288086

Token 1545: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.664371848164592e-05
    2. ' ,' → logprob: -11.875016212463379
    3. '```' → logprob: -12.375016212463379
    4. ',
' → logprob: -13.500016212463379
    5. '           ' → logprob: -13.625016212463379
    6. '<|end|>' → logprob: -14.125016212463379
    7. ')' → logprob: -14.250016212463379
    8. '),' → logprob: -15.500016212463379
    9. '               ' → logprob: -16.000017166137695
    10. ',sum' → logprob: -16.375017166137695

Token 1546: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -7.703443770878948e-06
    2. ' cost' → logprob: -11.875007629394531
    3. '
' → logprob: -14.250007629394531
    4. ')' → logprob: -17.62500762939453
    5. '(cost' → logprob: -17.75000762939453
    6. '   ' → logprob: -18.62500762939453
    7. 'sum' → logprob: -18.75000762939453
    8. '
' → logprob: -19.37500762939453
    9. '    ' → logprob: -19.75000762939453
    10. '0' → logprob: -19.87500762939453

Token 1547: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008616935461759567
    2. '))
' → logprob: -4.758616924285889
    3. '))

' → logprob: -14.008617401123047
    4. ')' → logprob: -14.508617401123047
    5. ' ))' → logprob: -14.633617401123047
    6. '));' → logprob: -15.258617401123047
    7. '           ' → logprob: -15.383617401123047
    8. '))
' → logprob: -16.258617401123047
    9. ')))' → logprob: -17.508617401123047
    10. ' ))
' → logprob: -17.883617401123047

Token 1548: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02751888334751129
    2. '       ' → logprob: -4.0275187492370605
    3. 'continue' → logprob: -5.1525187492370605
    4. '   ' → logprob: -6.4025187492370605
    5. '```' → logprob: -7.5275187492370605
    6. '	continue' → logprob: -7.7775187492370605
    7. '               ' → logprob: -7.7775187492370605
    8. ' continue' → logprob: -8.777519226074219
    9. '<|end|>' → logprob: -9.777519226074219
    10. '                   ' → logprob: -9.902519226074219

Token 1549: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.1811341494321823
    2. '       ' → logprob: -2.1811342239379883
    3. ' else' → logprob: -3.0561342239379883
    4. 'elif' → logprob: -6.056134223937988
    5. '```' → logprob: -6.306134223937988
    6. '   ' → logprob: -7.056134223937988
    7. '<|end|>' → logprob: -8.431134223937988
    8. '           ' → logprob: -8.931134223937988
    9. 'continue' → logprob: -9.056134223937988
    10. ' elif' → logprob: -10.306134223937988

Token 1550: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004875669721513987
    2. ':
' → logprob: -6.004875659942627
    3. ':' → logprob: -6.379875659942627
    4. '#' → logprob: -8.504876136779785
    5. '       ' → logprob: -8.754876136779785
    6. ',' → logprob: -9.379876136779785
    7. '```' → logprob: -9.504876136779785
    8. '<|end|>' → logprob: -10.004876136779785
    9. '{
' → logprob: -10.379876136779785
    10. '
' → logprob: -10.879876136779785

Token 1551: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005327435676008463
    2. '       ' → logprob: -6.005327224731445
    3. 'stack' → logprob: -6.505327224731445
    4. ' if' → logprob: -7.880327224731445
    5. 'v' → logprob: -8.505327224731445
    6. ' stack' → logprob: -8.630327224731445
    7. '   ' → logprob: -8.630327224731445
    8. 'pop' → logprob: -8.755327224731445
    9. 'if' → logprob: -8.755327224731445
    10. '```' → logprob: -10.380327224731445

Token 1552: ' if' (ID: 538)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.1503523737192154
    2. 'for' → logprob: -2.1503524780273438
    3. 'if' (adapté à ' if') → logprob: -4.275352478027344
    4. '   ' → logprob: -5.525352478027344
    5. '           ' → logprob: -6.150352478027344
    6. '       ' → logprob: -6.775352478027344
    7. 'stack' → logprob: -6.900352478027344
    8. ' cnt' → logprob: -8.150352478027344
    9. '#' → logprob: -8.525352478027344
    10. 'state' → logprob: -9.525352478027344

Token 1553: ' v' (ID: 323)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.40689587593078613
    2. 'cnt' → logprob: -2.031895875930786
    3. 'pre' → logprob: -2.156895875930786
    4. 'v' → logprob: -3.031895875930786
    5. 'stack' → logprob: -4.406895637512207
    6. 'p' → logprob: -4.406895637512207
    7. ' pre' → logprob: -5.406895637512207
    8. 'len' → logprob: -5.656895637512207
    9. ' state' → logprob: -5.906895637512207
    10. ' cnt' → logprob: -6.531895637512207

Token 1554: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.23435920476913452
    2. '!=' → logprob: -1.8593592643737793
    3. ',' → logprob: -3.7343592643737793
    4. '==' → logprob: -4.109359264373779
    5. ' ==' → logprob: -4.484359264373779
    6. '           ' → logprob: -7.484359264373779
    7. ')' → logprob: -7.484359264373779
    8. ',
' → logprob: -9.234358787536621
    9. ')!=' → logprob: -9.359358787536621
    10. '       ' → logprob: -10.234358787536621

Token 1555: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024421238340437412
    2. 'p' → logprob: -6.127442359924316
    3. '-' → logprob: -8.377442359924316
    4. ' ' → logprob: -11.877442359924316
    5. 'v' → logprob: -12.002442359924316
    6. 'stack' → logprob: -12.127442359924316
    7. 'root' → logprob: -12.127442359924316
    8. ' -' → logprob: -14.127442359924316
    9. ' p' → logprob: -14.252442359924316
    10. '-p' → logprob: -14.627442359924316

Token 1556: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001946844975464046
    2. 'l' → logprob: -6.876946926116943
    3. '-' → logprob: -7.501946926116943
    4. 'v' → logprob: -8.751946449279785
    5. 'p' → logprob: -9.001946449279785
    6. 'stack' → logprob: -10.251946449279785
    7. 'root' → logprob: -10.251946449279785
    8. '-l' → logprob: -12.626946449279785
    9. ' ' → logprob: -13.126946449279785
    10. ' -' → logprob: -13.501946449279785

Token 1557: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12307044118642807
    2. ':' → logprob: -2.498070478439331
    3. '               ' → logprob: -3.623070478439331
    4. '           ' → logprob: -5.623070240020752
    5. ' and' → logprob: -5.998070240020752
    6. '):
' → logprob: -7.748070240020752
    7. '```' → logprob: -9.37307071685791
    8. '   ' → logprob: -10.24807071685791
    9. '       ' → logprob: -10.37307071685791
    10. ',' → logprob: -10.49807071685791

Token 1558: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04193517565727234
    2. '           ' → logprob: -3.2919352054595947
    3. '```' → logprob: -5.791934967041016
    4. ' col' → logprob: -8.416934967041016
    5. 'cnt' → logprob: -8.666934967041016
    6. ' cnt' → logprob: -9.166934967041016
    7. '   ' → logprob: -9.291934967041016
    8. 'col' → logprob: -10.166934967041016
    9. ',' → logprob: -10.666934967041016
    10. 'token' → logprob: -10.791934967041016

Token 1559: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.07245294749736786
    2. '               ' → logprob: -3.572453022003174
    3. ' cnt' → logprob: -4.197453022003174
    4. 'parent' → logprob: -4.822453022003174
    5. 'prev' → logprob: -5.197453022003174
    6. '           ' → logprob: -5.447453022003174
    7. 'col' → logprob: -5.447453022003174
    8. 'if' → logprob: -6.947453022003174
    9. 'stack' → logprob: -7.322453022003174
    10. 'count' → logprob: -7.447453022003174

Token 1560: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0002779014757834375
    2. '[v' → logprob: -8.875277519226074
    3. 'v' → logprob: -9.000277519226074
    4. '[' → logprob: -12.000277519226074
    5. '[c' → logprob: -12.625277519226074
    6. '_c' → logprob: -14.250277519226074
    7. '```' → logprob: -14.250277519226074
    8. ' =' → logprob: -14.375277519226074
    9. 'col' → logprob: -14.500277519226074
    10. '=' → logprob: -14.625277519226074

Token 1561: '[' (ID: 58)
  Prédit: '[col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -0.1912168711423874
    2. '[' → logprob: -1.8162168264389038
    3. '[v' → logprob: -4.816216945648193
    4. '[last' → logprob: -7.441216945648193
    5. '[l' → logprob: -7.566216945648193
    6. '[cur' → logprob: -7.816216945648193
    7. '[state' → logprob: -7.941216945648193
    8. 'col' → logprob: -8.816216468811035
    9. '[line' → logprob: -9.066216468811035
    10. '[val' → logprob: -9.066216468811035

Token 1562: 'pre' (ID: 2235)
  Prédit: 'pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.01868303306400776
    2. 'col' → logprob: -4.268682956695557
    3. '[' → logprob: -6.393682956695557
    4. 'cnt' → logprob: -7.143682956695557
    5. 'edges' → logprob: -7.393682956695557
    6. 'prev' → logprob: -7.768682956695557
    7. '[col' → logprob: -8.018683433532715
    8. ' pre' → logprob: -8.643683433532715
    9. 'op' → logprob: -9.518683433532715
    10. 'stack' → logprob: -9.768683433532715

Token 1563: '_col' (ID: 7255)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.04323188588023186
    2. '_col' → logprob: -3.293231964111328
    3. '[col' → logprob: -5.418231964111328
    4. '[' → logprob: -7.293231964111328
    5. ']' → logprob: -10.043231964111328
    6. ' col' → logprob: -12.293231964111328
    7. '	col' → logprob: -12.418231964111328
    8. '```' → logprob: -12.793231964111328
    9. '   ' → logprob: -13.793231964111328
    10. 'c' → logprob: -13.793231964111328

Token 1564: ']' (ID: 60)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.03250405192375183
    2. '-' → logprob: -3.782504081726074
    3. ' -=' → logprob: -4.907504081726074
    4. ']' → logprob: -7.157504081726074
    5. ']-' → logprob: -7.657504081726074
    6. '           ' → logprob: -7.782504081726074
    7. '```' → logprob: -10.157504081726074
    8. ')' → logprob: -10.282504081726074
    9. '   ' → logprob: -10.532504081726074
    10. '               ' → logprob: -11.157504081726074

Token 1565: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.00045593673712573946
    2. '-' → logprob: -7.750455856323242
    3. ' -=' → logprob: -10.625455856323242
    4. '           ' → logprob: -14.750455856323242
    5. '```' → logprob: -15.125455856323242
    6. '+=' → logprob: -16.375455856323242
    7. '   ' → logprob: -17.000455856323242
    8. '=' → logprob: -18.000455856323242
    9. '               ' → logprob: -19.000455856323242
    10. '       ' → logprob: -19.125455856323242

Token 1566: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.0590548703912646e-05
    2. 'sum' → logprob: -11.000030517578125
    3. 'pre' → logprob: -11.625030517578125
    4. ' ' → logprob: -12.375030517578125
    5. '           ' → logprob: -16.125030517578125
    6. 'prev' → logprob: -16.125030517578125
    7. 'edges' → logprob: -16.375030517578125
    8. '0' → logprob: -17.000030517578125
    9. '```' → logprob: -17.125030517578125
    10. '
' → logprob: -17.250030517578125

Token 1567: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008698907913640141
    2. 'pre' → logprob: -7.6258697509765625
    3. 'sum' → logprob: -7.8758697509765625
    4. 'prev' → logprob: -14.250869750976562
    5. ' ' → logprob: -14.375869750976562
    6. 'cost' → logprob: -16.250869750976562
    7. '0' → logprob: -16.250869750976562
    8. ' pre' → logprob: -16.625869750976562
    9. 'cnt' → logprob: -16.625869750976562
    10. 'stack' → logprob: -16.625869750976562

Token 1568: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6888054013252258
    2. '               ' → logprob: -0.8138054013252258
    3. '<|end|>' → logprob: -2.938805341720581
    4. '              ' → logprob: -8.18880558013916
    5. '                   ' → logprob: -8.43880558013916
    6. '
' → logprob: -8.43880558013916
    7. '            ' → logprob: -8.56380558013916
    8. '             ' → logprob: -8.81380558013916
    9. '                ' → logprob: -8.81380558013916
    10. '          ' → logprob: -8.93880558013916

Token 1569: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28372856974601746
    2. '               ' → logprob: -1.4087285995483398
    3. '<|end|>' → logprob: -6.28372859954834
    4. '       ' → logprob: -9.03372859954834
    5. '                   ' → logprob: -9.40872859954834
    6. '          ' → logprob: -9.40872859954834
    7. '```' → logprob: -9.40872859954834
    8. '             ' → logprob: -9.65872859954834
    9. '              ' → logprob: -9.65872859954834
    10. 'sum' → logprob: -9.65872859954834

Token 1570: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -1.2664456789934775e-06
    2. ' sum' → logprob: -13.625000953674316
    3. '(sum' → logprob: -19.000001907348633
    4. '```' → logprob: -19.625001907348633
    5. '
' → logprob: -20.250001907348633
    6. '           ' → logprob: -20.875001907348633
    7. '.sum' → logprob: -21.000001907348633
    8. '	sum' → logprob: -21.250001907348633
    9. '=sum' → logprob: -22.000001907348633
    10. '       ' → logprob: -22.500001907348633

Token 1571: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0001637300301808864
    2. '[' → logprob: -8.750164031982422
    3. 's' → logprob: -13.250164031982422
    4. '_c' → logprob: -13.625164031982422
    5. 'с' → logprob: -13.750164031982422
    6. '```' → logprob: -14.250164031982422
    7. '<|end|>' → logprob: -15.375164031982422
    8. '_' → logprob: -16.375164031982422
    9. '[
' → logprob: -17.375164031982422
    10. '__[' → logprob: -17.500164031982422

Token 1572: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '[
' → logprob: -17.25
    3. '=' → logprob: -17.75
    4. '```' → logprob: -18.0
    5. ' [' → logprob: -18.625
    6. '
' → logprob: -18.625
    7. '[col' → logprob: -20.25
    8. '[in' → logprob: -21.25
    9. '	' → logprob: -21.375
    10. '\[' → logprob: -21.5

Token 1573: 'pre' (ID: 2235)
  Prédit: 'pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -7.226628895296017e-06
    2. '[' → logprob: -11.875007629394531
    3. ' pre' → logprob: -15.375007629394531
    4. '(pre' → logprob: -16.87500762939453
    5. '	pre' → logprob: -19.50000762939453
    6. 'pread' → logprob: -20.50000762939453
    7. 'PRE' → logprob: -20.75000762939453
    8. '
' → logprob: -20.87500762939453
    9. 'pro' → logprob: -21.00000762939453
    10. 'prev' → logprob: -21.25000762939453

Token 1574: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.20908787846565247
    2. 'c' → logprob: -2.08408784866333
    3. 'col' → logprob: -3.45908784866333
    4. '_cost' → logprob: -3.83408784866333
    5. '[' → logprob: -5.33408784866333
    6. '_' → logprob: -6.08408784866333
    7. 'cost' → logprob: -6.08408784866333
    8. '_c' → logprob: -6.83408784866333
    9. '```' → logprob: -8.084088325500488
    10. 'pre' → logprob: -8.834088325500488

Token 1575: ']' (ID: 60)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0032412861473858356
    2. ' -=' → logprob: -5.878241062164307
    3. '-' → logprob: -7.753241062164307
    4. '```' → logprob: -13.003241539001465
    5. ']-' → logprob: -13.128241539001465
    6. '           ' → logprob: -14.128241539001465
    7. '   ' → logprob: -14.503241539001465
    8. '+=' → logprob: -14.878241539001465
    9. ')' → logprob: -15.253241539001465
    10. ')-' → logprob: -15.503241539001465

Token 1576: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -1.771655115589965e-05
    2. ' -=' → logprob: -11.375018119812012
    3. '-' → logprob: -12.000018119812012
    4. '=' → logprob: -17.625017166137695
    5. '```' → logprob: -18.875017166137695
    6. '+=' → logprob: -19.000017166137695
    7. '   ' → logprob: -21.000017166137695
    8. '>' → logprob: -21.125017166137695
    9. ']-' → logprob: -21.500017166137695
    10. '\-' → logprob: -22.375017166137695

Token 1577: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.0001234428636962548
    2. ' pre' → logprob: -9.000123023986816
    3. '(pre' → logprob: -18.375123977661133
    4. '	pre' → logprob: -19.250123977661133
    5. 'pret' → logprob: -21.250123977661133
    6. 'cost' → logprob: -21.375123977661133
    7. 'preced' → logprob: -21.500123977661133
    8. 'pread' → logprob: -22.125123977661133
    9. '
' → logprob: -22.125123977661133
    10. 'preh' → logprob: -22.375123977661133

Token 1578: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00033796546631492674
    2. 'cost' → logprob: -8.000337600708008
    3. '```' → logprob: -14.125337600708008
    4. ' cost' → logprob: -14.375337600708008
    5. '_COST' → logprob: -14.375337600708008
    6. '_c' → logprob: -15.500337600708008
    7. 'Cost' → logprob: -15.875337600708008
    8. '_col' → logprob: -15.875337600708008
    9. '_' → logprob: -16.375337600708008
    10. 'c' → logprob: -17.625337600708008

Token 1579: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012401100248098373
    2. 'stack' → logprob: -7.251240253448486
    3. '
' → logprob: -7.751240253448486
    4. '               ' → logprob: -9.501239776611328
    5. ' stack' → logprob: -11.251239776611328
    6. ',' → logprob: -13.001239776611328
    7. '       ' → logprob: -13.126239776611328
    8. '   ' → logprob: -13.876239776611328
    9. '```' → logprob: -13.876239776611328
    10. '            
' → logprob: -14.001239776611328

Token 1580: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06264632940292358
    2. 'stack' → logprob: -2.9376463890075684
    3. ' stack' → logprob: -5.187646389007568
    4. '```' → logprob: -6.437646389007568
    5. '(stack' → logprob: -8.81264591217041
    6. '               ' → logprob: -9.18764591217041
    7. '       ' → logprob: -9.31264591217041
    8. '	stack' → logprob: -9.56264591217041
    9. '
' → logprob: -10.43764591217041
    10. '``' → logprob: -10.56264591217041

Token 1581: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.03817920386791229
    2. '           ' → logprob: -3.5381791591644287
    3. 'state' → logprob: -4.788179397583008
    4. ' stack' → logprob: -10.288179397583008
    5. '```' → logprob: -10.788179397583008
    6. '       ' → logprob: -12.038179397583008
    7. '	stack' → logprob: -13.413179397583008
    8. '``' → logprob: -13.788179397583008
    9. '   ' → logprob: -14.538179397583008
    10. 'pop' → logprob: -14.788179397583008

Token 1582: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -4.246537173457909e-06
    2. '.' → logprob: -12.625003814697266
    3. 'pop' → logprob: -14.625003814697266
    4. ' .' → logprob: -15.125003814697266
    5. '.Pop' → logprob: -16.000003814697266
    6. '	pop' → logprob: -17.000003814697266
    7. '​.' → logprob: -17.625003814697266
    8. '.p' → logprob: -18.125003814697266
    9. '_pop' → logprob: -18.250003814697266
    10. '[:-' → logprob: -18.625003814697266

Token 1583: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1584: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1585: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1586: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.07164378464221954
    2. '()' → logprob: -2.821643829345703
    3. '('' → logprob: -5.696643829345703
    4. '(*(' → logprob: -5.821643829345703
    5. '('\' → logprob: -6.071643829345703
    6. '()
' → logprob: -8.196643829345703
    7. '(*)' → logprob: -8.321643829345703
    8. '(' → logprob: -8.446643829345703
    9. '(
' → logprob: -9.321643829345703
    10. '(len' → logprob: -9.571643829345703

Token 1587: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -4.961759259458631e-06
    2. '(ans' → logprob: -12.250004768371582
    3. ' ans' → logprob: -17.0000057220459
    4. '[' → logprob: -19.1250057220459
    5. 'ANS' → logprob: -20.0000057220459
    6. '	ans' → logprob: -20.8750057220459
    7. 'map' → logprob: -22.5000057220459
    8. '   ' → logprob: -22.6250057220459
    9. 'ann' → logprob: -23.2500057220459
    10. '
' → logprob: -23.3750057220459

Token 1588: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015450954670086503
    2. ',' → logprob: -6.501544952392578
    3. '())' → logprob: -10.876544952392578
    4. '()' → logprob: -11.126544952392578
    5. ')
' → logprob: -12.626544952392578
    6. 'sep' → logprob: -13.876544952392578
    7. '   ' → logprob: -14.251544952392578
    8. '[' → logprob: -14.501544952392578
    9. ' )' → logprob: -15.001544952392578
    10. '(),' → logprob: -15.001544952392578

Token 1589: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.00021152703266125172
    2. 'se' → logprob: -9.000211715698242
    3. ' sep' → logprob: -9.625211715698242
    4. ')' → logprob: -11.625211715698242
    5. ''\' → logprob: -12.125211715698242
    6. 'end' → logprob: -12.500211715698242
    7. 'separator' → logprob: -12.750211715698242
    8. 'Sep' → logprob: -15.125211715698242
    9. '```' → logprob: -15.625211715698242
    10. '
' → logprob: -16.000211715698242

Token 1590: '='\' (ID: 106410)
  Prédit: '='\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='\' → logprob: -0.018301062285900116
    2. '='' → logprob: -4.018301010131836
    3. ''\' → logprob: -9.143301010131836
    4. '="\' → logprob: -10.518301010131836
    5. ''' → logprob: -11.268301010131836
    6. '=' → logprob: -12.643301010131836
    7. '=\' → logprob: -14.893301010131836
    8. '=
' → logprob: -14.893301010131836
    9. '('\' → logprob: -15.393301010131836
    10. '="' → logprob: -16.768301010131836

Token 1591: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0073097459971904755
    2. '\n' → logprob: -5.382309913635254
    3. ''' → logprob: -6.382309913635254
    4. ''\' → logprob: -7.257309913635254
    5. ''n' → logprob: -8.257309913635254
    6. '"' → logprob: -11.507309913635254
    7. '"\' → logprob: -11.757309913635254
    8. ' n' → logprob: -12.132309913635254
    9. 'nl' → logprob: -13.132309913635254
    10. 'r' → logprob: -13.632309913635254

Token 1592: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20379553735256195
    2. '<|end|>' → logprob: -1.7037955522537231
    3. '<|end|>' → logprob: -7.328795433044434
    4. '```' → logprob: -7.703795433044434
    5. '
' → logprob: -7.953795433044434
    6. ':' → logprob: -8.203795433044434
    7. '   ' → logprob: -8.703795433044434
    8. '#' → logprob: -9.453795433044434
    9. '[' → logprob: -9.578795433044434
    10. ']' → logprob: -9.703795433044434

Token 1593: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1594: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5763641595840454
    2. '__' → logprob: -0.8263641595840454
    3. '_' → logprob: -7.951364040374756
    4. '_name' → logprob: -9.951364517211914
    5. '___' → logprob: -11.451364517211914
    6. 'name' → logprob: -12.451364517211914
    7. ' ' → logprob: -12.826364517211914
    8. ' _' → logprob: -13.201364517211914
    9. 'Name' → logprob: -14.201364517211914
    10. '​' → logprob: -14.326364517211914

Token 1595: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002029277151450515
    2. '==' → logprob: -6.6270294189453125
    3. '_' → logprob: -9.627029418945312
    4. '__
' → logprob: -9.752029418945312
    5. '<|end|>' → logprob: -9.752029418945312
    6. '__':
' → logprob: -9.877029418945312
    7. '```' → logprob: -9.877029418945312
    8. '.__' → logprob: -10.127029418945312
    9. ' ==' → logprob: -10.377029418945312
    10. '__.__' → logprob: -10.502029418945312

Token 1596: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.015086392872035503
    2. '==' → logprob: -4.3900861740112305
    3. '=="' → logprob: -6.3900861740112305
    4. ' ==' → logprob: -7.2650861740112305
    5. '=='' → logprob: -9.39008617401123
    6. '__.__' → logprob: -9.76508617401123
    7. '__('' → logprob: -11.76508617401123
    8. '__":
' → logprob: -11.76508617401123
    9. '()==' → logprob: -12.51508617401123
    10. '()=="' → logprob: -12.51508617401123

Token 1597: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.725450873374939
    2. ' ==' → logprob: -1.100450873374939
    3. '=="' → logprob: -1.725450873374939
    4. '=='' → logprob: -5.4754509925842285
    5. '__' → logprob: -7.3504509925842285
    6. '==
' → logprob: -8.47545051574707
    7. ' =="' → logprob: -11.72545051574707
    8. '"' → logprob: -12.10045051574707
    9. '()==' → logprob: -12.35045051574707
    10. '=' → logprob: -12.47545051574707

Token 1598: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01815146580338478
    2. ''' → logprob: -4.01815128326416
    3. '__' → logprob: -14.51815128326416
    4. ' "__' → logprob: -14.64315128326416
    5. '   ' → logprob: -16.143152236938477
    6. '"user' → logprob: -16.393152236938477
    7. '"name' → logprob: -16.768152236938477
    8. ''"' → logprob: -16.893152236938477
    9. '"'' → logprob: -17.018152236938477
    10. '"default' → logprob: -17.268152236938477

Token 1599: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.39803561568260193
    2. '__' → logprob: -1.1480356454849243
    3. ''' → logprob: -4.523035526275635
    4. '"' → logprob: -8.398036003112793
    5. 'name' → logprob: -11.148036003112793
    6. ''m' → logprob: -13.148036003112793
    7. '__
' → logprob: -14.523036003112793
    8. ' '__' → logprob: -14.523036003112793
    9. '___' → logprob: -14.773036003112793
    10. '__':
' → logprob: -14.773036003112793

Token 1600: '__':
' (ID: 39314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.296668291091919
    2. '__' → logprob: -1.421668291091919
    3. '__':
' → logprob: -1.421668291091919
    4. '():' → logprob: -1.796668291091919
    5. '():
' → logprob: -2.671668291091919
    6. '__":
' → logprob: -5.92166805267334
    7. ':' → logprob: -6.04666805267334
    8. '_' → logprob: -6.67166805267334
    9. '__:' → logprob: -6.67166805267334
    10. '().__' → logprob: -7.42166805267334

Token 1601: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00023524489370174706
    2. '   ' → logprob: -8.750235557556152
    3. '	main' → logprob: -9.625235557556152
    4. ' main' → logprob: -11.750235557556152
    5. '_main' → logprob: -13.375235557556152
    6. '(main' → logprob: -14.625235557556152
    7. '```' → logprob: -15.250235557556152
    8. 'run' → logprob: -15.375235557556152
    9. '    
' → logprob: -16.500234603881836
    10. '
' → logprob: -16.875234603881836

Token 1602: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.25
    3. '	main' → logprob: -18.75
    4. '(main' → logprob: -22.0
    5. '   ' → logprob: -22.625
    6. '_main' → logprob: -23.875
    7. 'import' → logprob: -24.375
    8. '.main' → logprob: -25.375
    9. '/main' → logprob: -26.375
    10. '```' → logprob: -26.625

Token 1603: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1601
Tokens correctement prédits (1ère position, stricte): 628
Tokens correctement prédits (1ère position, avec adaptation): 691
Tokens correctement prédits (top 10): 1368
Précision stricte (1ère position): 39.23%
Précision adaptée (1ère position): 43.16%
Précision (top 10): 85.45%
================================================================================
