================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
A = list(map(int, [input() for _ in range(5)]))
small=lambda l:sorted(l)[0]
x=small(A)
q,r=divmod(N,x)
out=[q+4,q+5][bool(r)]
print(out)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001967457792488858
    2. '```' → logprob: -9.50019645690918
    3. '(N' → logprob: -10.37519645690918
    4. '`' → logprob: -10.87519645690918
    5. '(
' → logprob: -11.00019645690918
    6. ')' → logprob: -11.62519645690918
    7. '("("' → logprob: -11.62519645690918
    8. ''' → logprob: -11.62519645690918
    9. '()' → logprob: -11.87519645690918
    10. '('' → logprob: -12.25019645690918

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5316423177719116
    2. ')' → logprob: -0.9066423177719116
    3. '()' → logprob: -5.156642436981201
    4. '())' → logprob: -6.656642436981201
    5. '(
' → logprob: -7.656642436981201
    6. '```' → logprob: -8.781641960144043
    7. '))' → logprob: -8.906641960144043
    8. '")' → logprob: -9.406641960144043
    9. '')' → logprob: -9.531641960144043
    10. '(

' → logprob: -9.906641960144043

Token 5: 'A' (ID: 32)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8320107460021973
    2. 'for' → logprob: -1.8320107460021973
    3. 'a' → logprob: -2.0820107460021973
    4. 's' → logprob: -2.2070107460021973
    5. '*' → logprob: -2.5820107460021973
    6. ''' → logprob: -2.8320107460021973
    7. '#' → logprob: -3.2070107460021973
    8. ')' → logprob: -3.2070107460021973
    9. 'i' → logprob: -3.3320107460021973
    10. 'x' → logprob: -3.3320107460021973

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005450497264973819
    2. '\[' → logprob: -8.625545501708984
    3. '[]' → logprob: -8.750545501708984
    4. '[A' → logprob: -9.750545501708984
    5. '[:]' → logprob: -10.500545501708984
    6. '[i' → logprob: -10.500545501708984
    7. '.' → logprob: -10.625545501708984
    8. '=' → logprob: -11.375545501708984
    9. '+' → logprob: -11.500545501708984
    10. '[a' → logprob: -11.750545501708984

Token 7: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -1.2354167699813843
    2. ' list' → logprob: -1.3604167699813843
    3. 'list' → logprob: -1.3604167699813843
    4. '[]' → logprob: -2.110416889190674
    5. ' [' → logprob: -2.860416889190674
    6. '[' → logprob: -4.485416889190674
    7. '[list' → logprob: -5.985416889190674
    8. '[input' → logprob: -5.985416889190674
    9. '[int' → logprob: -6.860416889190674
    10. 'input' → logprob: -8.610416412353516

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008771508000791073
    2. '(range' → logprob: -5.6337714195251465
    3. '[' → logprob: -5.7587714195251465
    4. '```' → logprob: -6.7587714195251465
    5. '[(' → logprob: -8.008771896362305
    6. ')' → logprob: -8.758771896362305
    7. '[int' → logprob: -9.508771896362305
    8. '(
' → logprob: -9.633771896362305
    9. ' (' → logprob: -10.133771896362305
    10. ''s' → logprob: -10.633771896362305

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.12628614902496338
    2. '(' → logprob: -2.376286029815674
    3. '(str' → logprob: -4.501286029815674
    4. '(input' → logprob: -4.501286029815674
    5. '(lambda' → logprob: -6.126286029815674
    6. ')' → logprob: -8.001286506652832
    7. '```' → logprob: -8.501286506652832
    8. 'int' → logprob: -8.751286506652832
    9. '<int' → logprob: -9.001286506652832
    10. '(eval' → logprob: -9.251286506652832

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03385523334145546
    2. ',input' → logprob: -4.033855438232422
    3. '(' → logprob: -4.533855438232422
    4. ',' → logprob: -5.783855438232422
    5. '))' → logprob: -7.283855438232422
    6. ')' → logprob: -8.033855438232422
    7. '(int' → logprob: -8.408855438232422
    8. '=input' → logprob: -9.158855438232422
    9. 'input' → logprob: -9.283855438232422
    10. '```' → logprob: -9.658855438232422

Token 11: ' [' (ID: 723)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07896094769239426
    2. ' input' → logprob: -2.57896089553833
    3. '(input' → logprob: -9.578961372375488
    4. ',input' → logprob: -13.703961372375488
    5. '=input' → logprob: -15.203961372375488
    6. ')' → logprob: -15.203961372375488
    7. '	input' → logprob: -16.328960418701172
    8. '<input' → logprob: -16.453960418701172
    9. '```' → logprob: -16.703960418701172
    10. '[input' → logprob: -17.203960418701172

Token 12: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0004897649050690234
    2. ' input' → logprob: -7.625489711761475
    3. '(input' → logprob: -13.500490188598633
    4. '<input' → logprob: -16.500490188598633
    5. ',input' → logprob: -16.750490188598633
    6. ')' → logprob: -16.875490188598633
    7. '```' → logprob: -17.250490188598633
    8. '=input' → logprob: -17.500490188598633
    9. '_input' → logprob: -18.125490188598633
    10. ']' → logprob: -18.125490188598633

Token 13: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1833166480064392
    2. '()]' → logprob: -1.808316707611084
    3. '().' → logprob: -6.683316707611084
    4. '())))' → logprob: -6.808316707611084
    5. '()))' → logprob: -7.683316707611084
    6. ']()' → logprob: -8.308316230773926
    7. '()][' → logprob: -8.808316230773926
    8. '())' → logprob: -9.433316230773926
    9. '`()' → logprob: -9.558316230773926
    10. '()].' → logprob: -10.058316230773926

Token 14: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6593709588050842
    2. '()]' → logprob: -1.6593708992004395
    3. ']))' → logprob: -1.7843708992004395
    4. '().' → logprob: -2.2843708992004395
    5. '()))' → logprob: -4.4093708992004395
    6. '])))' → logprob: -5.7843708992004395
    7. '())))' → logprob: -5.7843708992004395
    8. ']' → logprob: -6.6593708992004395
    9. '"]))' → logprob: -7.0343708992004395
    10. 'for' → logprob: -7.7843708992004395

Token 15: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.09817294776439667
    2. '_' → logprob: -2.723172903060913
    3. '_range' → logprob: -3.848172903060913
    4. ' _' → logprob: -5.223173141479492
    5. 'range' → logprob: -6.973173141479492
    6. ' i' → logprob: -9.348173141479492
    7. ' ' → logprob: -10.598173141479492
    8. ' xrange' → logprob: -10.723173141479492
    9. '_RANGE' → logprob: -11.098173141479492
    10. ' in' → logprob: -11.348173141479492

Token 16: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07347214967012405
    2. ' in' → logprob: -2.948472261428833
    3. 'range' → logprob: -4.448472023010254
    4. ' ' → logprob: -5.323472023010254
    5. ' i' → logprob: -6.823472023010254
    6. ' r' → logprob: -7.948472023010254
    7. ' _' → logprob: -8.823472023010254
    8. '_range' → logprob: -9.323472023010254
    9. 'i' → logprob: -10.448472023010254
    10. 'in' → logprob: -10.573472023010254

Token 17: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740809500217438
    2. 'range' → logprob: -0.9740809202194214
    3. 'rang' → logprob: -13.599081039428711
    4. ' ran' → logprob: -13.724081039428711
    5. '	range' → logprob: -14.724081039428711
    6. '(range' → logprob: -14.849081039428711
    7. ' rang' → logprob: -15.474081039428711
    8. 'ra' → logprob: -15.474081039428711
    9. ' ' → logprob: -15.849081039428711
    10. 'r' → logprob: -16.22408103942871

Token 18: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.01258524227887392
    2. '(' → logprob: -4.387585163116455
    3. 'N' → logprob: -9.762585639953613
    4. '(n' → logprob: -11.512585639953613
    5. '(
' → logprob: -12.387585639953613
    6. ')' → logprob: -13.012585639953613
    7. '(len' → logprob: -15.012585639953613
    8. ' (' → logprob: -15.137585639953613
    9. ' N' → logprob: -15.387585639953613
    10. '(

' → logprob: -15.512585639953613

Token 19: '5' (ID: 20)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.5048530030981055e-06
    2. ' N' → logprob: -13.750001907348633
    3. ')' → logprob: -15.000001907348633
    4. '1' → logprob: -18.000001907348633
    5. '(N' → logprob: -18.500001907348633
    6. '	N' → logprob: -19.375001907348633
    7. '_N' → logprob: -20.125001907348633
    8. '0' → logprob: -20.375001907348633
    9. '(' → logprob: -20.500001907348633
    10. '))' → logprob: -20.500001907348633

Token 20: ')]' (ID: 15710)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.4269518554210663
    2. ')]' → logprob: -1.5519518852233887
    3. '])))' → logprob: -2.1769518852233887
    4. ']' → logprob: -3.9269518852233887
    5. ' ]' → logprob: -7.051951885223389
    6. ')])' → logprob: -7.176951885223389
    7. '])' → logprob: -7.551951885223389
    8. '])]' → logprob: -9.42695140838623
    9. '])))
' → logprob: -10.05195140838623
    10. '   ' → logprob: -10.17695140838623

Token 21: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.018282802775502205
    2. ')' → logprob: -4.018282890319824
    3. ')))' → logprob: -9.768282890319824
    4. '[' → logprob: -10.768282890319824
    5. '])' → logprob: -10.768282890319824
    6. ']))' → logprob: -11.018282890319824
    7. ' ' → logprob: -12.518282890319824
    8. ' ))' → logprob: -12.643282890319824
    9. '   ' → logprob: -13.518282890319824
    10. ''))' → logprob: -13.518282890319824

Token 22: 'small' (ID: 18158)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017005112022161484
    2. '[' → logprob: -4.51700496673584
    3. '))' → logprob: -5.51700496673584
    4. '(' → logprob: -7.76700496673584
    5. ')
' → logprob: -8.01700496673584
    6. '```' → logprob: -8.01700496673584
    7. '``' → logprob: -9.01700496673584
    8. '())' → logprob: -9.26700496673584
    9. ' )' → logprob: -9.39200496673584
    10. ')))' → logprob: -9.64200496673584

Token 23: '=lambda' (ID: 64865)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.011275580152869225
    2. 'e' → logprob: -5.011275768280029
    3. '_' → logprob: -6.261275768280029
    4. '_est' → logprob: -6.761275768280029
    5. 'er' → logprob: -7.261275768280029
    6. '_e' → logprob: -7.761275768280029
    7. 'es' → logprob: -9.136275291442871
    8. ' =' → logprob: -9.761275291442871
    9. '```' → logprob: -10.136275291442871
    10. '=' → logprob: -10.136275291442871

Token 24: ' l' (ID: 305)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2835967242717743
    2. 'x' → logprob: -1.4085967540740967
    3. ' a' → logprob: -6.658596515655518
    4. 'a' → logprob: -7.033596515655518
    5. ' ' → logprob: -9.783596992492676
    6. ' A' → logprob: -10.033596992492676
    7. ' n' → logprob: -10.033596992492676
    8. 'A' → logprob: -10.158596992492676
    9. 'n' → logprob: -10.658596992492676
    10. '(x' → logprob: -10.783596992492676

Token 25: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26014748215675354
    2. ' :' → logprob: -1.5101474523544312
    3. ':min' → logprob: -5.760147571563721
    4. ' l' → logprob: -6.885147571563721
    5. ' len' → logprob: -7.010147571563721
    6. ' ' → logprob: -7.010147571563721
    7. ' min' → logprob: -7.635147571563721
    8. ' x' → logprob: -7.760147571563721
    9. ' sorted' → logprob: -8.260147094726562
    10. ':list' → logprob: -8.260147094726562

Token 26: 'sorted' (ID: 64288)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.47476574778556824
    2. 'min' → logprob: -0.9747657775878906
    3. '[min' → logprob: -8.72476577758789
    4. ' max' → logprob: -9.22476577758789
    5. 'max' → logprob: -9.22476577758789
    6. '(min' → logprob: -9.59976577758789
    7. 'sorted' → logprob: -9.97476577758789
    8. 'len' → logprob: -10.22476577758789
    9. ' sorted' → logprob: -10.22476577758789
    10. 'm' → logprob: -10.72476577758789

Token 27: '(l' (ID: 4179)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0052229673601686954
    2. '(l' → logprob: -5.505222797393799
    3. '(lambda' → logprob: -7.630222797393799
    4. '(s' → logprob: -7.755222797393799
    5. '(A' → logprob: -10.130223274230957
    6. '(sorted' → logprob: -10.380223274230957
    7. '(list' → logprob: -10.880223274230957
    8. '<|end|>' → logprob: -10.880223274230957
    9. '(
' → logprob: -11.005223274230957
    10. '(len' → logprob: -11.130223274230957

Token 28: ')[' (ID: 13637)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5826127529144287
    2. ')[' → logprob: -0.9576127529144287
    3. ',' → logprob: -3.0826127529144287
    4. '(' → logprob: -5.332612991333008
    5. '[' → logprob: -6.082612991333008
    6. '(lambda' → logprob: -6.332612991333008
    7. ',l' → logprob: -6.832612991333008
    8. '(l' → logprob: -7.832612991333008
    9. '[l' → logprob: -8.082612991333008
    10. ' )[' → logprob: -8.957612991333008

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06133252754807472
    2. '1' → logprob: -3.5613324642181396
    3. '4' → logprob: -4.436332702636719
    4. '2' → logprob: -4.686332702636719
    5. '3' → logprob: -4.936332702636719
    6. '-' → logprob: -6.061332702636719
    7. '5' → logprob: -7.936332702636719
    8. ' ' → logprob: -9.561332702636719
    9. ':' → logprob: -10.186332702636719
    10. '(' → logprob: -11.248832702636719

Token 30: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.580929347255733e-05
    2. ' )' → logprob: -12.250016212463379
    3. ')
' → logprob: -12.750016212463379
    4. '(' → logprob: -12.875016212463379
    5. ']' → logprob: -13.750016212463379
    6. '<|end|>' → logprob: -13.750016212463379
    7. ' ' → logprob: -13.875016212463379
    8. '[' → logprob: -14.375016212463379
    9. '```' → logprob: -15.250016212463379
    10. ')

' → logprob: -15.250016212463379

Token 31: 'x' (ID: 87)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006978925783187151
    2. '(
' → logprob: -5.256978988647461
    3. ')' → logprob: -7.256978988647461
    4. '[' → logprob: -8.631978988647461
    5. '(A' → logprob: -8.631978988647461
    6. '
' → logprob: -9.006978988647461
    7. '<|end|>' → logprob: -9.506978988647461
    8. 'A' → logprob: -9.631978988647461
    9. '(

' → logprob: -10.006978988647461
    10. '(N' → logprob: -10.131978988647461

Token 32: '=' (ID: 28)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0363565683364868
    2. '[' → logprob: -1.1613565683364868
    3. '=' → logprob: -1.7863565683364868
    4. ' =' → logprob: -2.2863564491271973
    5. '(' → logprob: -4.036356449127197
    6. ' ' → logprob: -4.161356449127197
    7. '+' → logprob: -4.911356449127197
    8. ')' → logprob: -5.036356449127197
    9. '.' → logprob: -5.161356449127197
    10. '-' → logprob: -6.411356449127197

Token 33: 'small' (ID: 18158)
  Prédit: 'small'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.05824767425656319
    2. ' small' → logprob: -3.4332475662231445
    3. 'A' → logprob: -4.0582475662231445
    4. 'min' → logprob: -5.4332475662231445
    5. ' A' → logprob: -7.1832475662231445
    6. 'max' → logprob: -8.058247566223145
    7. ' min' → logprob: -8.183247566223145
    8. 'len' → logprob: -8.183247566223145
    9. 'sum' → logprob: -8.183247566223145
    10. 'sm' → logprob: -8.558247566223145

Token 34: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16507859528064728
    2. '(A' → logprob: -1.9150786399841309
    3. '(
' → logprob: -6.290078639984131
    4. '(x' → logprob: -6.540078639984131
    5. '(a' → logprob: -7.540078639984131
    6. '([' → logprob: -8.415078163146973
    7. '<|end|>' → logprob: -8.540078163146973
    8. '(N' → logprob: -8.915078163146973
    9. '(s' → logprob: -8.915078163146973
    10. ')' → logprob: -9.540078163146973

Token 35: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00032950565218925476
    2. '[' → logprob: -8.125329971313477
    3. ')x' → logprob: -11.250329971313477
    4. ' )' → logprob: -12.125329971313477
    5. '[x' → logprob: -13.000329971313477
    6. ']' → logprob: -13.000329971313477
    7. '))' → logprob: -13.125329971313477
    8. 'x' → logprob: -13.500329971313477
    9. '0' → logprob: -13.625329971313477
    10. ')
' → logprob: -14.125329971313477

Token 36: 'q' (ID: 80)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7465099692344666
    2. ')' → logprob: -2.3715100288391113
    3. '*' → logprob: -2.3715100288391113
    4. '<|end|>' → logprob: -2.3715100288391113
    5. '
' → logprob: -2.6215100288391113
    6. 'x' → logprob: -2.7465100288391113
    7. 'print' → logprob: -3.3715100288391113
    8. 'for' → logprob: -4.371510028839111
    9. '+
' → logprob: -4.371510028839111
    10. ' ' → logprob: -4.621510028839111

Token 37: ',r' (ID: 33654)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6008106470108032
    2. '=' → logprob: -1.3508106470108032
    3. ' =' → logprob: -1.7258106470108032
    4. '.' → logprob: -5.350810527801514
    5. ' ' → logprob: -6.475810527801514
    6. ',' → logprob: -6.475810527801514
    7. 'ue' → logprob: -6.850810527801514
    8. '_' → logprob: -7.350810527801514
    9. 'ual' → logprob: -7.725810527801514
    10. '=u' → logprob: -7.725810527801514

Token 38: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03370783105492592
    2. ' =' → logprob: -3.408707857131958
    3. '=q' → logprob: -10.033707618713379
    4. '=x' → logprob: -12.533707618713379
    5. '=input' → logprob: -12.783707618713379
    6. ',' → logprob: -13.158707618713379
    7. '=int' → logprob: -13.158707618713379
    8. ' ' → logprob: -13.533707618713379
    9. '=A' → logprob: -13.783707618713379
    10. '=query' → logprob: -14.283707618713379

Token 39: 'div' (ID: 862)
  Prédit: 'div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0029428747948259115
    2. ' div' → logprob: -5.87794303894043
    3. 'N' → logprob: -9.50294303894043
    4. 'x' → logprob: -10.12794303894043
    5. 'q' → logprob: -11.87794303894043
    6. ' ' → logprob: -12.00294303894043
    7. '   ' → logprob: -12.62794303894043
    8. ' N' → logprob: -12.62794303894043
    9. '(div' → logprob: -14.37794303894043
    10. '	div' → logprob: -14.37794303894043

Token 40: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0004390134708955884
    2. 'q' → logprob: -8.500438690185547
    3. 'ide' → logprob: -8.750438690185547
    4. 'x' → logprob: -10.250438690185547
    5. 'ision' → logprob: -11.000438690185547
    6. 'div' → logprob: -11.000438690185547
    7. '(x' → logprob: -13.125438690185547
    8. 'm' → logprob: -13.500438690185547
    9. 'mode' → logprob: -14.500438690185547
    10. 's' → logprob: -14.750438690185547

Token 41: '(N' (ID: 10564)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.288795530796051
    2. '(N' → logprob: -1.4137954711914062
    3. '(' → logprob: -5.413795471191406
    4. 'x' → logprob: -6.538795471191406
    5. 'N' → logprob: -6.663795471191406
    6. '(n' → logprob: -7.788795471191406
    7. '(int' → logprob: -11.788795471191406
    8. ' N' → logprob: -13.163795471191406
    9. '(len' → logprob: -13.163795471191406
    10. ' x' → logprob: -13.413795471191406

Token 42: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16534407436847687
    2. ',x' → logprob: -1.9153441190719604
    3. 'x' → logprob: -6.04034423828125
    4. '(x' → logprob: -6.41534423828125
    5. ' ,' → logprob: -7.41534423828125
    6. '(' → logprob: -8.66534423828125
    7. ' x' → logprob: -8.66534423828125
    8. ')' → logprob: -9.41534423828125
    9. ' ' → logprob: -11.29034423828125
    10. ',n' → logprob: -11.41534423828125

Token 43: ')
' (ID: 446)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: 'out' (ID: 468)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1110730171203613
    2. ' ' → logprob: -1.2360730171203613
    3. ' if' → logprob: -1.6110730171203613
    4. 'if' → logprob: -2.9860730171203613
    5. '\n' → logprob: -3.3610730171203613
    6. 'print' → logprob: -3.8610730171203613
    7. '+
' → logprob: -3.8610730171203613
    8. ' +' → logprob: -4.361073017120361
    9. '
' → logprob: -4.611073017120361
    10. ' 
' → logprob: -4.861073017120361

Token 45: '=[' (ID: 13370)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.177076518535614
    2. '=' → logprob: -2.052076578140259
    3. 'puts' → logprob: -3.927076578140259
    4. '_put' → logprob: -5.30207633972168
    5. 'p' → logprob: -5.42707633972168
    6. 'pu' → logprob: -6.42707633972168
    7. ' =' → logprob: -6.55207633972168
    8. 'Put' → logprob: -8.30207633972168
    9. '_p' → logprob: -8.42707633972168
    10. 'PUT' → logprob: -8.80207633972168

Token 46: 'q' (ID: 80)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6899209022521973
    2. 'q' → logprob: -0.8149209022521973
    3. '1' → logprob: -4.189920902252197
    4. 'r' → logprob: -4.689920902252197
    5. 'str' → logprob: -4.689920902252197
    6. '0' → logprob: -5.064920902252197
    7. 'i' → logprob: -5.064920902252197
    8. 'small' → logprob: -6.314920902252197
    9. '(x' → logprob: -6.439920902252197
    10. 'N' → logprob: -7.064920902252197

Token 47: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3531901240348816
    2. '*' → logprob: -1.6031901836395264
    3. '*r' → logprob: -3.4781901836395264
    4. ' *' → logprob: -3.9781901836395264
    5. '*q' → logprob: -4.103189945220947
    6. '*x' → logprob: -4.353189945220947
    7. ',' → logprob: -6.103189945220947
    8. ']*' → logprob: -6.103189945220947
    9. '*i' → logprob: -6.228189945220947
    10. '])' → logprob: -6.478189945220947

Token 48: '4' (ID: 19)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1709756702184677
    2. 'r' → logprob: -3.045975685119629
    3. '(r' → logprob: -3.795975685119629
    4. '(i' → logprob: -4.045975685119629
    5. '(int' → logprob: -4.670975685119629
    6. '[' → logprob: -4.795975685119629
    7. '(min' → logprob: -4.795975685119629
    8. '[r' → logprob: -4.795975685119629
    9. '(' → logprob: -5.045975685119629
    10. 'int' → logprob: -5.170975685119629

Token 49: ',q' (ID: 86188)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06325963139533997
    2. ']*' → logprob: -4.063259601593018
    3. '-r' → logprob: -4.438259601593018
    4. '*r' → logprob: -4.813259601593018
    5. '*q' → logprob: -5.188259601593018
    6. '-q' → logprob: -5.438259601593018
    7. '+r' → logprob: -5.813259601593018
    8. ',' → logprob: -6.063259601593018
    9. ']+' → logprob: -6.438259601593018
    10. '-i' → logprob: -6.563259601593018

Token 50: '+' (ID: 10)
  Prédit: ',r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.9785158634185791
    2. ']' → logprob: -1.478515863418579
    3. '+r' → logprob: -1.603515863418579
    4. '+' → logprob: -2.478515863418579
    5. ',' → logprob: -3.478515863418579
    6. '-r' → logprob: -3.603515863418579
    7. '-' → logprob: -3.728515863418579
    8. ',q' → logprob: -4.728515625
    9. 'r' → logprob: -5.228515625
    10. '-q' → logprob: -5.728515625

Token 51: '5' (ID: 20)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04309842362999916
    2. '4' → logprob: -3.9180984497070312
    3. '3' → logprob: -4.918098449707031
    4. 'q' → logprob: -5.293098449707031
    5. '0' → logprob: -5.668098449707031
    6. '1' → logprob: -5.793098449707031
    7. '5' → logprob: -6.168098449707031
    8. '2' → logprob: -7.793098449707031
    9. ' r' → logprob: -8.168098449707031
    10. '9' → logprob: -9.168098449707031

Token 52: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0990033969283104
    2. ',q' → logprob: -2.599003314971924
    3. ',' → logprob: -4.099003314971924
    4. '-q' → logprob: -6.974003314971924
    5. '-' → logprob: -7.849003314971924
    6. ',x' → logprob: -7.849003314971924
    7. ' ]' → logprob: -7.974003314971924
    8. ',r' → logprob: -8.224003791809082
    9. ',out' → logprob: -8.974003791809082
    10. ')' → logprob: -9.224003791809082

Token 53: 'bool' (ID: 9037)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.007180264685302973
    2. ' r' → logprob: -5.132180213928223
    3. 'q' → logprob: -7.882180213928223
    4. '1' → logprob: -7.882180213928223
    5. '0' → logprob: -8.757180213928223
    6. 'N' → logprob: -9.132180213928223
    7. '(r' → logprob: -10.007180213928223
    8. 'x' → logprob: -10.257180213928223
    9. 'len' → logprob: -10.632180213928223
    10. 'not' → logprob: -10.757180213928223

Token 54: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.5300348997116089
    2. 'r' → logprob: -0.9050348997116089
    3. ' r' → logprob: -5.155035018920898
    4. '(q' → logprob: -7.780035018920898
    5. '(' → logprob: -8.280035018920898
    6. ' (' → logprob: -9.405035018920898
    7. '(not' → logprob: -9.405035018920898
    8. 'q' → logprob: -10.030035018920898
    9. 'not' → logprob: -10.530035018920898
    10. '(len' → logprob: -10.530035018920898

Token 55: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.001000059419311583
    2. ')' → logprob: -7.750999927520752
    3. ' )' → logprob: -8.12600040435791
    4. ')])' → logprob: -8.87600040435791
    5. ']' → logprob: -9.50100040435791
    6. '])' → logprob: -11.00100040435791
    7. ')]
' → logprob: -11.37600040435791
    8. '])]' → logprob: -11.50100040435791
    9. ')]

' → logprob: -12.00100040435791
    10. '),' → logprob: -13.12600040435791

Token 56: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00026991849881596863
    2. ' print' → logprob: -8.625269889831543
    3. '
' → logprob: -9.875269889831543
    4. '(print' → logprob: -11.250269889831543
    5. ')' → logprob: -11.625269889831543
    6. ')
' → logprob: -12.750269889831543
    7. '+' → logprob: -13.000269889831543
    8. '```' → logprob: -13.250269889831543
    9. '+
' → logprob: -13.375269889831543
    10. '.print' → logprob: -13.625269889831543

Token 57: '(out' (ID: 20090)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1602771282196045
    2. '(out' → logprob: -1.9102771282196045
    3. '('' → logprob: -11.035277366638184
    4. '("("' → logprob: -11.160277366638184
    5. ' (' → logprob: -12.285277366638184
    6. '(x' → logprob: -12.535277366638184
    7. '((' → logprob: -13.035277366638184
    8. '()' → logprob: -13.035277366638184
    9. '(

' → logprob: -13.160277366638184
    10. '(
' → logprob: -13.160277366638184

Token 58: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4378848391061183e-05
    2. '))' → logprob: -11.250014305114746
    3. ')`' → logprob: -14.875014305114746
    4. ')}' → logprob: -15.250014305114746
    5. ' )' → logprob: -15.375014305114746
    6. '})' → logprob: -16.125015258789062
    7. '])' → logprob: -16.375015258789062
    8. '`)' → logprob: -16.500015258789062
    9. ')#' → logprob: -16.750015258789062
    10. ')
' → logprob: -17.125015258789062


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 56
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 13
Tokens correctement prédits (top 10): 32
Précision stricte (1ère position): 23.21%
Précision adaptée (1ère position): 23.21%
Précision (top 10): 57.14%
================================================================================
