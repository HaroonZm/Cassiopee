================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:29:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
p = input().split()
for i in range(n):
    p[i] = int(p[i])
x = p[0]
ans = 1
i = 0
while i < n:
    if p[i] < x:
        x = p[i]
        ans = ans + 1
    i = i + 1
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010807292710524052
    2. '(n' → logprob: -10.250107765197754
    3. ''' → logprob: -10.625107765197754
    4. '('' → logprob: -11.375107765197754
    5. '```' → logprob: -11.625107765197754
    6. '(
' → logprob: -12.000107765197754
    7. '("("' → logprob: -12.375107765197754
    8. '()' → logprob: -12.375107765197754
    9. '`' → logprob: -12.500107765197754
    10. ')' → logprob: -13.125107765197754

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03871168941259384
    2. ')' → logprob: -3.5387117862701416
    3. '()' → logprob: -4.9137115478515625
    4. '())' → logprob: -7.1637115478515625
    5. '(
' → logprob: -8.663711547851562
    6. '```' → logprob: -9.163711547851562
    7. '(()' → logprob: -9.413711547851562
    8. '("("' → logprob: -9.663711547851562
    9. '('' → logprob: -9.913711547851562
    10. '`' → logprob: -10.163711547851562

Token 5: 'p' (ID: 79)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1005412340164185
    2. 'i' → logprob: -1.6005412340164185
    3. 'for' → logprob: -1.6005412340164185
    4. 's' → logprob: -2.850541114807129
    5. '*' → logprob: -3.100541114807129
    6. 'x' → logprob: -3.600541114807129
    7. 'a' → logprob: -3.850541114807129
    8. ')' → logprob: -3.850541114807129
    9. '#' → logprob: -4.225541114807129
    10. ' ' → logprob: -4.350541114807129

Token 6: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0033113888930529356
    2. 'ow' → logprob: -7.0033111572265625
    3. 'i' → logprob: -7.1283111572265625
    4. '=' → logprob: -7.8783111572265625
    5. ' =' → logprob: -8.253311157226562
    6. 'e' → logprob: -8.753311157226562
    7. 'a' → logprob: -8.878311157226562
    8. 'l' → logprob: -9.753311157226562
    9. 'o' → logprob: -9.753311157226562
    10. 'w' → logprob: -10.003311157226562

Token 7: ' input' (ID: 3422)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7271883487701416
    2. ' ' → logprob: -1.6021883487701416
    3. '0' → logprob: -2.4771883487701416
    4. 'int' → logprob: -2.6021883487701416
    5. 'n' → logprob: -2.9771883487701416
    6. '2' → logprob: -3.2271883487701416
    7. ' n' → logprob: -3.4771883487701416
    8. ' int' → logprob: -4.2271881103515625
    9. 'input' → logprob: -4.7271881103515625
    10. '[]' → logprob: -5.6021881103515625

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013433275744318962
    2. ''' → logprob: -7.501343250274658
    3. '('' → logprob: -7.626343250274658
    4. '(
' → logprob: -9.251343727111816
    5. '`' → logprob: -9.876343727111816
    6. '"' → logprob: -10.001343727111816
    7. '()' → logprob: -10.501343727111816
    8. '("("' → logprob: -11.001343727111816
    9. '```' → logprob: -11.001343727111816
    10. ' (' → logprob: -11.376343727111816

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.06499338895082474
    2. 'strip' → logprob: -2.814993381500244
    3. 's' → logprob: -6.064993381500244
    4. 'replace' → logprob: -7.939993381500244
    5. 'spl' → logprob: -8.939993858337402
    6. 'r' → logprob: -9.689993858337402
    7. 'rstrip' → logprob: -10.189993858337402
    8. 'lower' → logprob: -10.439993858337402
    9. 'isdigit' → logprob: -10.814993858337402
    10. 'count' → logprob: -11.314993858337402

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04179318994283676
    2. '('' → logprob: -3.91679310798645
    3. '()' → logprob: -4.291793346405029
    4. '("("' → logprob: -5.166793346405029
    5. '("' → logprob: -7.666793346405029
    6. '"' → logprob: -7.791793346405029
    7. '((' → logprob: -8.791792869567871
    8. '(
' → logprob: -8.916792869567871
    9. ''' → logprob: -9.041792869567871
    10. '(

' → logprob: -9.791792869567871

Token 11: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5258699059486389
    2. '[' → logprob: -1.7758698463439941
    3. 'p' → logprob: -2.275869846343994
    4. 's' → logprob: -3.650869846343994
    5. 'n' → logprob: -3.650869846343994
    6. 'a' → logprob: -3.650869846343994
    7. '=' → logprob: -4.275869846343994
    8. 'm' → logprob: -4.900869846343994
    9. 'c' → logprob: -5.275869846343994
    10. 'i' → logprob: -5.400869846343994

Token 12: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.638125479221344
    2. ' i' → logprob: -0.763125479221344
    3. '_' → logprob: -6.013125419616699
    4. 'i' → logprob: -6.388125419616699
    5. '  ' → logprob: -7.513125419616699
    6. ' _' → logprob: -8.1381254196167
    7. ' ‌' → logprob: -8.3881254196167
    8. ' ' → logprob: -9.7631254196167
    9. ' p' → logprob: -9.7631254196167
    10. ' x' → logprob: -10.2631254196167

Token 13: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5537433624267578
    2. ' in' → logprob: -0.9287433624267578
    3. ' ' → logprob: -4.178743362426758
    4. 'n' → logprob: -4.553743362426758
    5. '_' → logprob: -6.303743362426758
    6. '  ' → logprob: -6.928743362426758
    7. ' n' → logprob: -7.178743362426758
    8. 'space' → logprob: -8.678743362426758
    9. '<|end|>' → logprob: -9.178743362426758
    10. 'range' → logprob: -9.803743362426758

Token 14: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5764457583427429
    2. ' range' → logprob: -0.8264457583427429
    3. ' p' → logprob: -8.201445579528809
    4. 'p' → logprob: -8.451445579528809
    5. 'n' → logprob: -11.701445579528809
    6. ' n' → logprob: -12.076445579528809
    7. '	range' → logprob: -13.326445579528809
    8. ' ' → logprob: -14.076445579528809
    9. '(range' → logprob: -14.076445579528809
    10. ')' → logprob: -14.951445579528809

Token 15: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5761411190032959
    2. '(' → logprob: -0.8261411190032959
    3. '(len' → logprob: -8.826141357421875
    4. ' (' → logprob: -9.951141357421875
    5. '(i' → logprob: -12.826141357421875
    6. '(range' → logprob: -13.826141357421875
    7. '(
' → logprob: -14.076141357421875
    8. '((' → logprob: -14.951141357421875
    9. ' ' → logprob: -14.951141357421875
    10. '(space' → logprob: -15.076141357421875

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03508087620139122
    2. ')' → logprob: -3.410080909729004
    3. '[' → logprob: -6.910080909729004
    4. '[i' → logprob: -8.285080909729004
    5. '+' → logprob: -9.785080909729004
    6. ':' → logprob: -10.535080909729004
    7. ')[' → logprob: -10.785080909729004
    8. '):
' → logprob: -10.785080909729004
    9. ' ):' → logprob: -11.410080909729004
    10. '**' → logprob: -11.785080909729004

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20044691860675812
    2. '    ' → logprob: -2.575446844100952
    3. ' p' → logprob: -2.950446844100952
    4. ' ' → logprob: -3.950446844100952
    5. ' if' → logprob: -4.575447082519531
    6. '    
' → logprob: -5.075447082519531
    7. 'p' → logprob: -5.575447082519531
    8. '```' → logprob: -6.075447082519531
    9. '[' → logprob: -6.200447082519531
    10. '     
' → logprob: -6.325447082519531

Token 18: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.7004205584526062
    2. 'p' (adapté à ' p') → logprob: -1.575420618057251
    3. '   ' → logprob: -1.700420618057251
    4. ' if' → logprob: -3.075420618057251
    5. 'if' → logprob: -3.700420618057251
    6. 'print' → logprob: -4.075420379638672
    7. '    ' → logprob: -4.200420379638672
    8. ' print' → logprob: -5.075420379638672
    9. ' ' → logprob: -5.825420379638672
    10. 'i' → logprob: -7.700420379638672

Token 19: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4752349257469177
    2. '[' → logprob: -0.9752349257469177
    3. '[p' → logprob: -7.3502349853515625
    4. '[int' → logprob: -9.225234985351562
    5. '\[' → logprob: -9.350234985351562
    6. '[...]' → logprob: -9.725234985351562
    7. '```' → logprob: -9.725234985351562
    8. '[]' → logprob: -9.850234985351562
    9. '[n' → logprob: -10.475234985351562
    10. '[I' → logprob: -10.975234985351562

Token 20: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01482192799448967
    2. ')' → logprob: -4.764822006225586
    3. '])' → logprob: -5.889822006225586
    4. ' ]' → logprob: -6.889822006225586
    5. '[' → logprob: -7.264822006225586
    6. '].' → logprob: -7.639822006225586
    7. ']==' → logprob: -7.764822006225586
    8. ']=' → logprob: -8.139822006225586
    9. '][' → logprob: -8.139822006225586
    10. ' )' → logprob: -10.264822006225586

Token 21: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6192313432693481
    2. '<|end|>' → logprob: -1.3692313432693481
    3. '=' → logprob: -2.1192312240600586
    4. ')' → logprob: -3.4942312240600586
    5. ' =' → logprob: -4.119231224060059
    6. '+' → logprob: -4.619231224060059
    7. ']' → logprob: -4.994231224060059
    8. ' ' → logprob: -5.244231224060059
    9. '```' → logprob: -6.119231224060059
    10. '#' → logprob: -6.119231224060059

Token 22: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.054999519139528275
    2. ' int' → logprob: -2.929999589920044
    3. 'float' → logprob: -9.429999351501465
    4. ' p' → logprob: -11.429999351501465
    5. ' float' → logprob: -11.554999351501465
    6. 'p' → logprob: -12.179999351501465
    7. '(int' → logprob: -12.679999351501465
    8. '[int' → logprob: -13.304999351501465
    9. '   ' → logprob: -13.429999351501465
    10. 'str' → logprob: -13.929999351501465

Token 23: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.31369489431381226
    2. '(' → logprob: -1.313694953918457
    3. ' (' → logprob: -8.438694953918457
    4. 'p' → logprob: -9.063694953918457
    5. '('' → logprob: -10.313694953918457
    6. ')' → logprob: -10.813694953918457
    7. '()' → logprob: -11.563694953918457
    8. ' ' → logprob: -11.813694953918457
    9. '`' → logprob: -12.188694953918457
    10. ' p' → logprob: -12.438694953918457

Token 24: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.012045575305819511
    2. '[' → logprob: -4.512045383453369
    3. ')' → logprob: -7.012045383453369
    4. ' [' → logprob: -10.012045860290527
    5. '[p' → logprob: -10.512045860290527
    6. '[
' → logprob: -12.262045860290527
    7. '[I' → logprob: -12.512045860290527
    8. ']' → logprob: -12.637045860290527
    9. ')[' → logprob: -12.637045860290527
    10. ' ' → logprob: -13.012045860290527

Token 25: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07000623643398285
    2. '))' → logprob: -2.6950061321258545
    3. '])' → logprob: -9.945006370544434
    4. ')))' → logprob: -11.945006370544434
    5. ' )' → logprob: -12.195006370544434
    6. ')]' → logprob: -13.320006370544434
    7. ')])' → logprob: -13.320006370544434
    8. '   ' → logprob: -13.945006370544434
    9. ')
' → logprob: -14.445006370544434
    10. '})' → logprob: -14.445006370544434

Token 26: 'x' (ID: 87)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6229627728462219
    2. ' ' → logprob: -1.7479627132415771
    3. ')' → logprob: -2.372962713241577
    4. '#' → logprob: -3.247962713241577
    5. 'for' → logprob: -3.372962713241577
    6. '+' → logprob: -3.997962713241577
    7. ']' → logprob: -3.997962713241577
    8. 'p' → logprob: -4.622962951660156
    9. '<|end|>' → logprob: -4.622962951660156
    10. 'print' → logprob: -4.997962951660156

Token 27: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1219535693526268
    2. '[i' → logprob: -2.6219534873962402
    3. '=' → logprob: -3.9969534873962402
    4. ' =' → logprob: -4.62195348739624
    5. ')' → logprob: -5.99695348739624
    6. '[p' → logprob: -5.99695348739624
    7. ' ' → logprob: -6.24695348739624
    8. '_' → logprob: -6.49695348739624
    9. 'p' → logprob: -7.24695348739624
    10. '+' → logprob: -7.37195348739624

Token 28: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.0750150680541992
    2. '0' → logprob: -1.7000150680541992
    3. ' ' → logprob: -1.8250150680541992
    4. 'p' → logprob: -1.8250150680541992
    5. ' int' → logprob: -3.575015068054199
    6. 'max' → logprob: -3.700015068054199
    7. 'int' → logprob: -3.825015068054199
    8. ' max' → logprob: -3.950015068054199
    9. ' []' → logprob: -4.575015068054199
    10. 'sum' → logprob: -4.575015068054199

Token 29: '[' (ID: 58)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.12114717066287994
    2. '.copy' → logprob: -2.2461471557617188
    3. '[:' → logprob: -5.246147155761719
    4. '[' → logprob: -6.496147155761719
    5. '[::-' → logprob: -7.246147155761719
    6. '.' → logprob: -8.121147155761719
    7. '[i' → logprob: -9.121147155761719
    8. '.sort' → logprob: -9.121147155761719
    9. '<|end|>' → logprob: -9.246147155761719
    10. '+' → logprob: -9.246147155761719

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005494257435202599
    2. 'i' → logprob: -5.505494117736816
    3. '-' → logprob: -6.880494117736816
    4. '1' → logprob: -8.005494117736816
    5. 'n' → logprob: -10.630494117736816
    6. ' ' → logprob: -11.005494117736816
    7. '2' → logprob: -12.380494117736816
    8. 'x' → logprob: -13.005494117736816
    9. ' -' → logprob: -13.255494117736816
    10. '3' → logprob: -13.755494117736816

Token 31: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02536233514547348
    2. '+' → logprob: -4.525362491607666
    3. ' ]' → logprob: -4.650362491607666
    4. ']+' → logprob: -5.525362491607666
    5. ')' → logprob: -7.900362491607666
    6. ' +' → logprob: -9.525362014770508
    7. '-' → logprob: -10.025362014770508
    8. '+]' → logprob: -10.025362014770508
    9. '])' → logprob: -10.275362014770508
    10. ']*' → logprob: -11.025362014770508

Token 32: 'ans' (ID: 616)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12270388007164001
    2. '<|end|>' → logprob: -2.872703790664673
    3. '*' → logprob: -3.372703790664673
    4. 'for' → logprob: -4.872704029083252
    5. '%' → logprob: -5.372704029083252
    6. ' ' → logprob: -5.872704029083252
    7. '+
' → logprob: -6.497704029083252
    8. '>' → logprob: -6.622704029083252
    9. '-' → logprob: -6.997704029083252
    10. ' for' → logprob: -6.997704029083252

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.463765025138855
    2. '=' → logprob: -1.713765025138855
    3. ' +=' → logprob: -1.713765025138855
    4. '+=' → logprob: -5.3387651443481445
    5. '_' → logprob: -5.8387651443481445
    6. '+' → logprob: -6.2137651443481445
    7. ' *=' → logprob: -8.338765144348145
    8. ' ' → logprob: -8.713765144348145
    9. '[' → logprob: -8.838765144348145
    10. ')' → logprob: -9.338765144348145

Token 34: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5991369485855103
    2. ' ' → logprob: -1.3491369485855103
    3. 'x' → logprob: -2.3491368293762207
    4. ' x' → logprob: -2.4741368293762207
    5. '1' → logprob: -4.724136829376221
    6. ' p' → logprob: -6.724136829376221
    7. 'p' → logprob: -8.099137306213379
    8. ' max' → logprob: -8.224137306213379
    9. '100' → logprob: -8.724137306213379
    10. 'max' → logprob: -8.724137306213379

Token 35: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4106786251068115
    2. 'x' → logprob: -1.5356786251068115
    3. '1' → logprob: -2.2856786251068115
    4. 'p' → logprob: -4.285678863525391
    5. '-' → logprob: -6.410678863525391
    6. 'max' → logprob: -6.410678863525391
    7. '[]' → logprob: -7.410678863525391
    8. 'abs' → logprob: -7.410678863525391
    9. 'float' → logprob: -7.785678863525391
    10. '[' → logprob: -8.78567886352539

Token 36: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5546169281005859
    2. ' for' → logprob: -1.929616928100586
    3. '<|end|>' → logprob: -2.054616928100586
    4. 'for' → logprob: -2.179616928100586
    5. ' 
' → logprob: -3.679616928100586
    6. ' ' → logprob: -5.304616928100586
    7. '\n' → logprob: -5.429616928100586
    8. '+' → logprob: -6.304616928100586
    9. '  
' → logprob: -6.804616928100586
    10. '<|end|>' → logprob: -8.054616928100586

Token 37: 'i' (ID: 72)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7422206997871399
    2. 'for' → logprob: -0.7422206997871399
    3. ' 
' → logprob: -3.617220640182495
    4. '
' → logprob: -4.617220878601074
    5. ' ' → logprob: -4.992220878601074
    6. '\n' → logprob: -6.492220878601074
    7. ' if' → logprob: -7.117220878601074
    8. 'if' → logprob: -7.867220878601074
    9. '<|end|>' → logprob: -8.242220878601074
    10. '  
' → logprob: -8.617220878601074

Token 38: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.351571649312973
    2. ' ' → logprob: -2.101571559906006
    3. 'f' → logprob: -2.851571559906006
    4. ' +=' → logprob: -2.976571559906006
    5. ' +' → logprob: -3.601571559906006
    6. 'n' → logprob: -3.726571559906006
    7. '=' → logprob: -5.101571559906006
    8. ' =' → logprob: -5.726571559906006
    9. ' n' → logprob: -6.351571559906006
    10. 'nt' → logprob: -7.101571559906006

Token 39: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10043288767337799
    2. '0' → logprob: -2.475432872772217
    3. ' ' → logprob: -4.475432872772217
    4. '2' → logprob: -10.100433349609375
    5. '+' → logprob: -14.725433349609375
    6. 'x' → logprob: -15.350433349609375
    7. '```' → logprob: -15.725433349609375
    8. '`' → logprob: -16.662933349609375
    9. ' x' → logprob: -17.225433349609375
    10. '  ' → logprob: -17.225433349609375

Token 40: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03412739187479019
    2. '0' → logprob: -3.4091274738311768
    3. ' ' → logprob: -7.659127235412598
    4. '2' → logprob: -12.159127235412598
    5. 'x' → logprob: -13.159127235412598
    6. '  ' → logprob: -14.721627235412598
    7. '   ' → logprob: -14.784127235412598
    8. 'ans' → logprob: -15.096627235412598
    9. '+' → logprob: -15.409127235412598
    10. 'p' → logprob: -15.721627235412598

Token 41: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7129573225975037
    2. ' while' → logprob: -1.8379573822021484
    3. '
' → logprob: -2.0879573822021484
    4. 'while' → logprob: -2.2129573822021484
    5. '<|end|>' → logprob: -2.3379573822021484
    6. ' 
' → logprob: -5.212957382202148
    7. '+
' → logprob: -5.212957382202148
    8. ' ' → logprob: -5.712957382202148
    9. '\n' → logprob: -6.087957382202148
    10. ' +' → logprob: -6.962957382202148

Token 42: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3879825472831726
    2. ' 
' → logprob: -1.8879826068878174
    3. ' while' → logprob: -2.0129826068878174
    4. 'while' → logprob: -3.5129826068878174
    5. ' ' → logprob: -6.512982368469238
    6. '+' → logprob: -6.637982368469238
    7. '<|end|>' → logprob: -6.637982368469238
    8. '\n' → logprob: -7.137982368469238
    9. '```' → logprob: -7.262982368469238
    10. '  
' → logprob: -7.262982368469238

Token 43: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.020809760317206383
    2. 'i' → logprob: -3.8958096504211426
    3. ' x' → logprob: -9.0208101272583
    4. ' ' → logprob: -9.5208101272583
    5. ' <' → logprob: -10.7708101272583
    6. 'x' → logprob: -11.0208101272583
    7. ' True' → logprob: -11.0208101272583
    8. '<' → logprob: -12.2708101272583
    9. ' p' → logprob: -12.5208101272583
    10. 'True' → logprob: -13.0208101272583

Token 44: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5810058116912842
    2. '<' → logprob: -0.8310058116912842
    3. ' <=' → logprob: -5.706006050109863
    4. '<=' → logprob: -6.456006050109863
    5. ' ' → logprob: -9.706006050109863
    6. '<len' → logprob: -10.081006050109863
    7. '<n' → logprob: -10.581006050109863
    8. '+' → logprob: -10.831006050109863
    9. '<size' → logprob: -12.956006050109863
    10. '<count' → logprob: -14.331006050109863

Token 45: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4288124740123749
    2. ' n' → logprob: -1.0538125038146973
    3. 'x' → logprob: -10.053812026977539
    4. ' ' → logprob: -10.428812026977539
    5. 'len' → logprob: -10.803812026977539
    6. '1' → logprob: -12.053812026977539
    7. ' x' → logprob: -12.178812026977539
    8. ' len' → logprob: -12.803812026977539
    9. '	n' → logprob: -13.803812026977539
    10. '  ' → logprob: -14.303812026977539

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.529902994632721
    2. ' and' → logprob: -0.904902994632721
    3. 'and' → logprob: -5.404902935028076
    4. ':
' → logprob: -6.154902935028076
    5. ' ' → logprob: -9.779903411865234
    6. ' :' → logprob: -10.154903411865234
    7. '   ' → logprob: -10.529903411865234
    8. '-' → logprob: -12.904903411865234
    9. ':

' → logprob: -12.904903411865234
    10. '	and' → logprob: -13.404903411865234

Token 47: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0516643524169922
    2. '   ' → logprob: -1.1766643524169922
    3. '+' → logprob: -2.176664352416992
    4. ' and' → logprob: -2.301664352416992
    5. ' ' → logprob: -3.551664352416992
    6. ' i' → logprob: -3.676664352416992
    7. ' +' → logprob: -4.176664352416992
    8. 'if' → logprob: -4.301664352416992
    9. 'x' → logprob: -4.551664352416992
    10. '    ' → logprob: -4.801664352416992

Token 48: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17764778435230255
    2. 'if' (adapté à ' if') → logprob: -2.302647829055786
    3. ' x' → logprob: -3.677647829055786
    4. 'x' → logprob: -3.927647829055786
    5. ' j' → logprob: -4.802647590637207
    6. 'j' → logprob: -5.302647590637207
    7. '   ' → logprob: -6.427647590637207
    8. ' ' → logprob: -6.927647590637207
    9. ' i' → logprob: -7.177647590637207
    10. 'i' → logprob: -8.177647590637207

Token 49: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.32776010036468506
    2. 'p' → logprob: -1.577760100364685
    3. ' x' → logprob: -3.2027602195739746
    4. 'x' → logprob: -3.4527602195739746
    5. ' i' → logprob: -7.952760219573975
    6. '   ' → logprob: -8.827759742736816
    7. 'i' → logprob: -9.077759742736816
    8. ' ' → logprob: -9.827759742736816
    9. '    ' → logprob: -10.452759742736816
    10. '  ' → logprob: -12.577759742736816

Token 50: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0206720617134124e-05
    2. '[' → logprob: -11.62501049041748
    3. 'i' → logprob: -14.87501049041748
    4. '[x' → logprob: -15.12501049041748
    5. '[j' → logprob: -15.50001049041748
    6. '```' → logprob: -15.62501049041748
    7. ' [' → logprob: -16.250009536743164
    8. '[p' → logprob: -16.750009536743164
    9. '   ' → logprob: -17.125009536743164
    10. '[
' → logprob: -17.250009536743164

Token 51: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6688218712806702
    2. '>' → logprob: -0.9188218712806702
    3. '==' → logprob: -3.4188218116760254
    4. ']==' → logprob: -4.293821811676025
    5. '>=' → logprob: -4.418821811676025
    6. ']>=' → logprob: -4.418821811676025
    7. '%' → logprob: -5.293821811676025
    8. ']>' → logprob: -5.668821811676025
    9. ' >' → logprob: -6.293821811676025
    10. ' ==' → logprob: -6.418821811676025

Token 52: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4308793842792511
    2. '==' → logprob: -1.5558793544769287
    3. ' >=' → logprob: -2.8058793544769287
    4. '>=' → logprob: -3.0558793544769287
    5. '%' → logprob: -4.805879592895508
    6. ' <=' → logprob: -5.180879592895508
    7. '>' → logprob: -5.430879592895508
    8. ' %' → logprob: -5.430879592895508
    9. ' >' → logprob: -5.555879592895508
    10. '<=' → logprob: -5.805879592895508

Token 53: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7039612531661987
    2. ' x' → logprob: -0.7039612531661987
    3. '=' → logprob: -4.578961372375488
    4. ' ' → logprob: -8.703961372375488
    5. ' p' → logprob: -8.828961372375488
    6. '=x' → logprob: -9.328961372375488
    7. 'p' → logprob: -10.453961372375488
    8. ' =' → logprob: -10.703961372375488
    9. '>' → logprob: -11.453961372375488
    10. '	x' → logprob: -11.953961372375488

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016169771552085876
    2. ':
' → logprob: -6.501616954803467
    3. ' :' → logprob: -9.751617431640625
    4. ' and' → logprob: -10.626617431640625
    5. '+' → logprob: -11.501617431640625
    6. 'and' → logprob: -11.751617431640625
    7. ' or' → logprob: -12.376617431640625
    8. '.' → logprob: -12.501617431640625
    9. ' :
' → logprob: -13.751617431640625
    10. ':
' → logprob: -14.501617431640625

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2489444613456726
    2. 'x' → logprob: -2.1239445209503174
    3. ' x' → logprob: -3.4989445209503174
    4. ':
' → logprob: -3.9989445209503174
    5. ' i' → logprob: -4.248944282531738
    6. ':' → logprob: -4.248944282531738
    7. '   ' → logprob: -4.248944282531738
    8. 'i' → logprob: -5.373944282531738
    9. '<|end|>' → logprob: -7.373944282531738
    10. '    ' → logprob: -7.498944282531738

Token 56: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.9278126358985901
    2. 'i' → logprob: -1.1778125762939453
    3. 'ans' → logprob: -2.1778125762939453
    4. 'break' → logprob: -2.6778125762939453
    5. ' ans' → logprob: -3.1778125762939453
    6. ' break' → logprob: -3.5528125762939453
    7. '   ' → logprob: -4.052812576293945
    8. ' i' → logprob: -4.177812576293945
    9. ' x' → logprob: -4.552812576293945
    10. '	ans' → logprob: -7.927812576293945

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25194188952445984
    2. '=' → logprob: -1.5019419193267822
    3. '=p' → logprob: -11.876941680908203
    4. ',' → logprob: -13.751941680908203
    5. '>' → logprob: -14.126941680908203
    6. ' ' → logprob: -14.251941680908203
    7. '-' → logprob: -14.376941680908203
    8. 'p' → logprob: -15.001941680908203
    9. '=i' → logprob: -15.126941680908203
    10. ' +=' → logprob: -15.376941680908203

Token 58: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04871068149805069
    2. ' p' → logprob: -3.048710584640503
    3. 'x' → logprob: -10.048710823059082
    4. 'i' → logprob: -10.548710823059082
    5. ' ' → logprob: -10.923710823059082
    6. '0' → logprob: -11.173710823059082
    7. 'n' → logprob: -12.048710823059082
    8. '   ' → logprob: -12.673710823059082
    9. '	p' → logprob: -12.798710823059082
    10. ' i' → logprob: -13.423710823059082

Token 59: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001825642102630809
    2. '[' → logprob: -8.625182151794434
    3. 'i' → logprob: -13.250182151794434
    4. '[j' → logprob: -14.875182151794434
    5. '[x' → logprob: -15.000182151794434
    6. '```' → logprob: -16.25018310546875
    7. '[I' → logprob: -16.62518310546875
    8. '[index' → logprob: -17.12518310546875
    9. '[int' → logprob: -17.12518310546875
    10. ' [' → logprob: -17.37518310546875

Token 60: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7418263554573059
    2. ']
' → logprob: -1.2418262958526611
    3. ')' → logprob: -2.116826295852661
    4. ']' → logprob: -2.241826295852661
    5. '
' → logprob: -5.61682653427124
    6. '   ' → logprob: -6.49182653427124
    7. '       ' → logprob: -7.36682653427124
    8. ']
' → logprob: -7.99182653427124
    9. '<|end|>' → logprob: -8.241826057434082
    10. '}
' → logprob: -8.241826057434082

Token 61: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3737451732158661
    2. 'i' → logprob: -1.7487452030181885
    3. ' i' → logprob: -2.3737452030181885
    4. '       ' → logprob: -3.2487452030181885
    5. '
' → logprob: -6.373744964599609
    6. ' ans' → logprob: -7.248744964599609
    7. '    
' → logprob: -7.373744964599609
    8. 'else' → logprob: -7.748744964599609
    9. ' ' → logprob: -7.998744964599609
    10. '```' → logprob: -7.998744964599609

Token 62: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0785711407661438
    2. ' ans' → logprob: -2.828571081161499
    3. 'i' → logprob: -4.328571319580078
    4. '   ' → logprob: -6.453571319580078
    5. ' i' → logprob: -7.328571319580078
    6. '       ' → logprob: -7.453571319580078
    7. '	ans' → logprob: -7.828571319580078
    8. '```' → logprob: -11.203571319580078
    9. '(ans' → logprob: -11.703571319580078
    10. '
' → logprob: -11.953571319580078

Token 63: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.24245864152908325
    2. '+=' → logprob: -1.8674585819244385
    3. ' =' → logprob: -2.9924585819244385
    4. '=' → logprob: -4.617458820343018
    5. '+' → logprob: -7.242458820343018
    6. ' +' → logprob: -11.61745834350586
    7. '   ' → logprob: -12.11745834350586
    8. ' ' → logprob: -12.24245834350586
    9. '++' → logprob: -12.86745834350586
    10. ' -=' → logprob: -13.36745834350586

Token 64: ' ans' (ID: 3345)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.022633351385593414
    2. ' i' → logprob: -4.0226335525512695
    3. '1' → logprob: -5.5226335525512695
    4. ' ' → logprob: -8.27263355255127
    5. '0' → logprob: -8.64763355255127
    6. '   ' → logprob: -11.14763355255127
    7. 'ans' → logprob: -11.39763355255127
    8. '2' → logprob: -12.14763355255127
    9. '	i' → logprob: -12.39763355255127
    10. ' ans' → logprob: -12.89763355255127

Token 65: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003854347625747323
    2. ' +' → logprob: -5.628854274749756
    3. '+i' → logprob: -9.003854751586914
    4. ' ' → logprob: -10.503854751586914
    5. '2' → logprob: -10.628854751586914
    6. '*' → logprob: -11.253854751586914
    7. 'i' → logprob: -11.503854751586914
    8. '   ' → logprob: -11.503854751586914
    9. '0' → logprob: -11.753854751586914
    10. '1' → logprob: -11.753854751586914

Token 66: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023772723972797394
    2. ' ' → logprob: -3.773772716522217
    3. ' i' → logprob: -8.148773193359375
    4. 'i' → logprob: -8.398773193359375
    5. '2' → logprob: -12.148773193359375
    6. ' p' → logprob: -12.898773193359375
    7. '(i' → logprob: -13.898773193359375
    8. 'p' → logprob: -14.273773193359375
    9. ' ' → logprob: -14.398773193359375
    10. '   ' → logprob: -14.398773193359375

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.674858301877975e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -14.875096321105957
    4. 'i' → logprob: -15.125096321105957
    5. '  ' → logprob: -17.000097274780273
    6. '0' → logprob: -17.875097274780273
    7. '2' → logprob: -18.125097274780273
    8. ' i' → logprob: -19.250097274780273
    9. ' ' → logprob: -19.500097274780273
    10. 'p' → logprob: -19.750097274780273

Token 68: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0192616768181324
    2. ' i' → logprob: -4.519261837005615
    3. 'i' → logprob: -5.019261837005615
    4. '
' → logprob: -6.644261837005615
    5. '	i' → logprob: -9.519261360168457
    6. ' ' → logprob: -9.644261360168457
    7. '    
' → logprob: -10.394261360168457
    8. '       ' → logprob: -10.894261360168457
    9. '  
' → logprob: -11.144261360168457
    10. ',i' → logprob: -11.144261360168457

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25817999243736267
    2. 'i' → logprob: -1.508180022239685
    3. ' i' → logprob: -5.133180141448975
    4. '
' → logprob: -8.508179664611816
    5. '	i' → logprob: -9.883179664611816
    6. '```' → logprob: -10.758179664611816
    7. ' ' → logprob: -10.883179664611816
    8. ',i' → logprob: -11.258179664611816
    9. '    
' → logprob: -11.633179664611816
    10. '  ' → logprob: -11.883179664611816

Token 70: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.6042622327804565
    2. ' i' → logprob: -1.1042622327804565
    3. '   ' → logprob: -2.104262351989746
    4. '	i' → logprob: -9.729262351989746
    5. ' ' → logprob: -10.229262351989746
    6. '```' → logprob: -10.979262351989746
    7. '
' → logprob: -11.854262351989746
    8. '  ' → logprob: -12.229262351989746
    9. '    
' → logprob: -13.354262351989746
    10. ',i' → logprob: -13.854262351989746

Token 71: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.027546603232622147
    2. '+=' → logprob: -3.6525466442108154
    3. ' +=' → logprob: -7.277546405792236
    4. '=' → logprob: -7.902546405792236
    5. ' +' → logprob: -8.902546882629395
    6. '++' → logprob: -10.152546882629395
    7. '+++' → logprob: -12.152546882629395
    8. '1' → logprob: -13.402546882629395
    9. '```' → logprob: -14.277546882629395
    10. '<|end|>' → logprob: -14.402546882629395

Token 72: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3868805170059204
    2. ' i' → logprob: -1.1368805170059204
    3. '+' → logprob: -12.011880874633789
    4. '1' → logprob: -12.761880874633789
    5. ' ' → logprob: -14.761880874633789
    6. '	i' → logprob: -16.38688087463379
    7. '0' → logprob: -16.63688087463379
    8. ' +' → logprob: -16.88688087463379
    9. '   ' → logprob: -17.38688087463379
    10. '+i' → logprob: -17.76188087463379

Token 73: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00016897499153856188
    2. ' +' → logprob: -8.750168800354004
    3. '1' → logprob: -11.625168800354004
    4. '+i' → logprob: -14.375168800354004
    5. '+
' → logprob: -14.625168800354004
    6. ' ' → logprob: -15.750168800354004
    7. '++' → logprob: -16.12516975402832
    8. ' plus' → logprob: -16.37516975402832
    9. 'i' → logprob: -16.75016975402832
    10. '+)' → logprob: -17.25016975402832

Token 74: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -18.375059127807617
    4. '```' → logprob: -19.250059127807617
    5. '１' → logprob: -19.625059127807617
    6. '  ' → logprob: -19.875059127807617
    7. '2' → logprob: -20.437559127807617
    8. ' ' → logprob: -20.875059127807617
    9. '۱' → logprob: -20.875059127807617
    10. '0' → logprob: -21.062559127807617

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -18.000003814697266
    4. '１' → logprob: -18.687503814697266
    5. '```' → logprob: -18.937503814697266
    6. '  ' → logprob: -19.437503814697266
    7. '۱' → logprob: -19.562503814697266
    8. '१' → logprob: -20.062503814697266
    9. '2' → logprob: -20.375003814697266
    10. '১' → logprob: -20.687503814697266

Token 76: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0026071679312735796
    2. '<|end|>' → logprob: -6.502607345581055
    3. '
' → logprob: -7.002607345581055
    4. ' print' → logprob: -9.627607345581055
    5. '#' → logprob: -9.627607345581055
    6. '```' → logprob: -10.377607345581055
    7. '#print' → logprob: -11.377607345581055
    8. '\n' → logprob: -12.252607345581055
    9. ')' → logprob: -12.877607345581055
    10. '(print' → logprob: -13.127607345581055

Token 77: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.9650025428272784e-05
    2. ' print' → logprob: -10.750040054321289
    3. '<|end|>' → logprob: -11.625040054321289
    4. '
' → logprob: -12.750040054321289
    5. '#' → logprob: -13.000040054321289
    6. '#print' → logprob: -13.500040054321289
    7. '```' → logprob: -13.500040054321289
    8. 'p' → logprob: -15.000040054321289
    9. 'pr' → logprob: -15.625040054321289
    10. ')' → logprob: -15.750040054321289

Token 78: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014345310628414154
    2. '(ans' → logprob: -4.264345169067383
    3. '('' → logprob: -9.764345169067383
    4. '(x' → logprob: -9.889345169067383
    5. '()' → logprob: -10.139345169067383
    6. '("("' → logprob: -10.514345169067383
    7. '(`' → logprob: -14.014345169067383
    8. '(
' → logprob: -14.139345169067383
    9. '(a' → logprob: -14.139345169067383
    10. '((' → logprob: -14.139345169067383

Token 79: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.875
    3. ')`' → logprob: -17.0
    4. '))' → logprob: -17.125
    5. ')
' → logprob: -18.125
    6. '`)' → logprob: -19.25
    7. '')' → logprob: -19.375
    8. ')}' → logprob: -20.0
    9. '）' → logprob: -20.375
    10. '(' → logprob: -20.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 77
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 30
Tokens correctement prédits (top 10): 64
Précision stricte (1ère position): 35.06%
Précision adaptée (1ère position): 38.96%
Précision (top 10): 83.12%
================================================================================
