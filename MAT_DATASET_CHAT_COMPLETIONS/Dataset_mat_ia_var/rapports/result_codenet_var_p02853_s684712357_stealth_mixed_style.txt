================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
get = lambda: list(map(int, input().split()))
a, b = get()
res = 0
points = {3: pow(10, 5), 2: 2 * 10 ** 5, 1: 3 * (10 ** 5)}
for value in [a, b]:
    res = res + points.get(value, 0)
if all([a == 1, b == 1]):
    res += int(4e5)
print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'get' (ID: 522)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' lambda' (ID: 27871)
  → Token d'amorce (pas de prédiction)

Token 3: ':' (ID: 25)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7538371086120605
    2. ' x' → logprob: -1.1288371086120605
    3. ' space' → logprob: -2.6288371086120605
    4. ' s' → logprob: -2.7538371086120605
    5. ' a' → logprob: -3.6288371086120605
    6. '_' → logprob: -4.3788371086120605
    7. ' ' → logprob: -4.8788371086120605
    8. ' (' → logprob: -5.6288371086120605
    9. ' get' → logprob: -5.7538371086120605
    10. 'x' → logprob: -5.8788371086120605

Token 4: ' list' (ID: 1562)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5104633569717407
    2. ' None' → logprob: -1.6354633569717407
    3. 'input' → logprob: -2.010463237762451
    4. ' ' → logprob: -3.760463237762451
    5. 'None' → logprob: -4.385463237762451
    6. ' []' → logprob: -4.510463237762451
    7. ' int' → logprob: -5.760463237762451
    8. '"' → logprob: -5.885463237762451
    9. ' __' → logprob: -5.885463237762451
    10. ''' → logprob: -6.385463237762451

Token 5: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03860732540488243
    2. '.' → logprob: -3.288607358932495
    3. '[' → logprob: -7.913607120513916
    4. '(
' → logprob: -9.538607597351074
    5. '()' → logprob: -10.538607597351074
    6. ' (' → logprob: -10.663607597351074
    7. '```' → logprob: -11.163607597351074
    8. ')' → logprob: -11.288607597351074
    9. '\(' → logprob: -11.538607597351074
    10. '(

' → logprob: -12.038607597351074

Token 6: '(int' (ID: 2742)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.4259960353374481
    2. '(str' → logprob: -1.6759960651397705
    3. '(' → logprob: -2.3009960651397705
    4. '(int' → logprob: -3.0509960651397705
    5. ')' → logprob: -5.425995826721191
    6. '<|end|>' → logprob: -5.675995826721191
    7. 'str' → logprob: -6.550995826721191
    8. '(eval' → logprob: -7.425995826721191
    9. 'lambda' → logprob: -7.675995826721191
    10. 'int' → logprob: -8.550995826721191

Token 7: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.31550198793411255
    2. '(get' → logprob: -1.8155019283294678
    3. '(' → logprob: -2.6905019283294678
    4. '))' → logprob: -3.8155019283294678
    5. ')' → logprob: -5.065502166748047
    6. 'input' → logprob: -5.440502166748047
    7. '(user' → logprob: -6.690502166748047
    8. '<|end|>' → logprob: -7.565502166748047
    9. ' input' → logprob: -7.690502166748047
    10. '(next' → logprob: -7.815502166748047

Token 8: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.057635460048913956
    2. ' input' → logprob: -2.932635545730591
    3. '(input' → logprob: -5.932635307312012
    4. ')' → logprob: -10.057635307312012
    5. ',input' → logprob: -10.557635307312012
    6. '<input' → logprob: -11.932635307312012
    7. '=input' → logprob: -12.182635307312012
    8. '(' → logprob: -12.432635307312012
    9. '	input' → logprob: -12.682635307312012
    10. '))' → logprob: -13.057635307312012

Token 9: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.19486230611801147
    2. '())' → logprob: -3.0698623657226562
    3. '(' → logprob: -3.3198623657226562
    4. '()' → logprob: -3.4448623657226562
    5. '(()' → logprob: -3.6948623657226562
    6. '()));' → logprob: -3.8198623657226562
    7. '()>' → logprob: -5.569862365722656
    8. '())))' → logprob: -5.569862365722656
    9. '(""))' → logprob: -6.069862365722656
    10. '());' → logprob: -6.569862365722656

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019837100990116596
    2. 'strip' → logprob: -6.251983642578125
    3. ' split' → logprob: -10.376983642578125
    4. 'rstrip' → logprob: -10.751983642578125
    5. 'read' → logprob: -13.251983642578125
    6. ')' → logprob: -15.126983642578125
    7. '(split' → logprob: -15.376983642578125
    8. 'spl' → logprob: -15.376983642578125
    9. ' strip' → logprob: -16.751983642578125
    10. '.split' → logprob: -18.001983642578125

Token 11: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.3218107223510742
    2. '())' → logprob: -1.5718107223510742
    3. '))' → logprob: -3.696810722351074
    4. '()' → logprob: -3.946810722351074
    5. ')' → logprob: -4.821810722351074
    6. '(' → logprob: -4.946810722351074
    7. '())))' → logprob: -5.196810722351074
    8. ')))' → logprob: -6.196810722351074
    9. '()>' → logprob: -8.946810722351074
    10. '()));' → logprob: -9.071810722351074

Token 12: 'a' (ID: 64)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5341548919677734
    2. '()' → logprob: -2.2841548919677734
    3. 'print' → logprob: -3.0341548919677734
    4. '\n' → logprob: -3.2841548919677734
    5. '#' → logprob: -3.5341548919677734
    6. 'x' → logprob: -3.6591548919677734
    7. '(
' → logprob: -3.7841548919677734
    8. 'def' → logprob: -4.034154891967773
    9. '`' → logprob: -4.159154891967773
    10. '```' → logprob: -4.284154891967773

Token 13: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002431428525596857
    2. '=' → logprob: -7.002431392669678
    3. ' =' → logprob: -8.252431869506836
    4. ')' → logprob: -8.377431869506836
    5. '[]' → logprob: -8.627431869506836
    6. ',' → logprob: -8.627431869506836
    7. '[:]' → logprob: -9.002431869506836
    8. 'a' → logprob: -9.252431869506836
    9. '\[' → logprob: -9.502431869506836
    10. '[int' → logprob: -9.627431869506836

Token 14: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.038152918219566345
    2. ' b' → logprob: -3.2881529331207275
    3. ' ' → logprob: -9.163152694702148
    4. '*b' → logprob: -12.413152694702148
    5. ' =' → logprob: -15.038152694702148
    6. '*' → logprob: -15.038152694702148
    7. '<|end|>' → logprob: -15.163152694702148
    8. '=' → logprob: -15.288152694702148
    9. ' ' → logprob: -15.413152694702148
    10. '_' → logprob: -15.538152694702148

Token 15: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28639084100723267
    2. ' =' → logprob: -1.411390781402588
    3. ',' → logprob: -5.286390781402588
    4. '<|end|>' → logprob: -9.661391258239746
    5. '[' → logprob: -10.161391258239746
    6. ')' → logprob: -10.536391258239746
    7. '=
' → logprob: -12.036391258239746
    8. ' =
' → logprob: -12.286391258239746
    9. ' ,' → logprob: -12.411391258239746
    10. ')=' → logprob: -12.661391258239746

Token 16: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.048698872327804565
    2. ' get' → logprob: -3.048698902130127
    3. 'map' → logprob: -9.673698425292969
    4. '[get' → logprob: -11.173698425292969
    5. ' map' → logprob: -11.423698425292969
    6. '(get' → logprob: -11.923698425292969
    7. 'list' → logprob: -12.423698425292969
    8. 'a' → logprob: -12.548698425292969
    9. ' ' → logprob: -12.673698425292969
    10. '	get' → logprob: -13.548698425292969

Token 17: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.085517113911919e-05
    2. '(' → logprob: -10.12505054473877
    3. '(),' → logprob: -13.00005054473877
    4. '()
' → logprob: -13.12505054473877
    5. '()]' → logprob: -13.12505054473877
    6. '()

' → logprob: -13.62505054473877
    7. ' ()' → logprob: -14.12505054473877
    8. '())' → logprob: -14.12505054473877
    9. '()`' → logprob: -14.62505054473877
    10. '`()' → logprob: -15.25005054473877

Token 18: 'res' (ID: 430)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17503990232944489
    2. '<|end|>' → logprob: -2.8000400066375732
    3. '
' → logprob: -3.6750400066375732
    4. '%' → logprob: -3.6750400066375732
    5. '+
' → logprob: -4.300039768218994
    6. '*' → logprob: -4.300039768218994
    7. '\n' → logprob: -4.675039768218994
    8. '#' → logprob: -5.550039768218994
    9. 'c' → logprob: -6.800039768218994
    10. '+c' → logprob: -7.300039768218994

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3571436405181885
    2. '.' → logprob: -1.8571436405181885
    3. '=' → logprob: -2.2321436405181885
    4. 'ult' → logprob: -3.8571436405181885
    5. 's' → logprob: -5.732143402099609
    6. ' .' → logprob: -6.107143402099609
    7. '+' → logprob: -6.482143402099609
    8. '[' → logprob: -6.607143402099609
    9. ' +=' → logprob: -6.732143402099609
    10. '_' → logprob: -7.107143402099609

Token 20: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20061753690242767
    2. ' a' → logprob: -1.8256175518035889
    3. '[]' → logprob: -5.07561731338501
    4. '[a' → logprob: -6.07561731338501
    5. 'max' → logprob: -6.45061731338501
    6. 'abs' → logprob: -6.45061731338501
    7. ' max' → logprob: -6.57561731338501
    8. ' []' → logprob: -6.57561731338501
    9. ' abs' → logprob: -6.95061731338501
    10. '[' → logprob: -7.07561731338501

Token 21: '0' (ID: 15)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02069895714521408
    2. 'abs' → logprob: -4.5206990242004395
    3. 'max' → logprob: -6.1456990242004395
    4. '[]' → logprob: -6.1456990242004395
    5. '[a' → logprob: -6.2706990242004395
    6. '(a' → logprob: -6.7706990242004395
    7. 'min' → logprob: -7.5206990242004395
    8. '0' → logprob: -8.020698547363281
    9. '[' → logprob: -8.395698547363281
    10. ' a' → logprob: -8.770698547363281

Token 22: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.3721129894256592
    2. ' ' → logprob: -1.6221129894256592
    3. '\n' → logprob: -2.122112989425659
    4. ' if' → logprob: -2.122112989425659
    5. '
' → logprob: -2.372112989425659
    6. '<|end|>' → logprob: -2.497112989425659
    7. ' for' → logprob: -3.122112989425659
    8. 'for' → logprob: -3.497112989425659
    9. 'if' → logprob: -3.622112989425659
    10. ' while' → logprob: -4.997113227844238

Token 23: 'points' (ID: 14011)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38989153504371643
    2. 'if' → logprob: -2.5148916244506836
    3. '```' → logprob: -2.5148916244506836
    4. '\n' → logprob: -2.7648916244506836
    5. '
' → logprob: -2.8898916244506836
    6. ' for' → logprob: -3.7648916244506836
    7. '\' → logprob: -4.639891624450684
    8. '<|end|>' → logprob: -5.764891624450684
    9. ' if' → logprob: -6.014891624450684
    10. ' 
' → logprob: -6.639891624450684

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5340169668197632
    2. '_' → logprob: -1.5340169668197632
    3. '[' → logprob: -2.4090170860290527
    4. '.' → logprob: -3.1590170860290527
    5. '=' → logprob: -3.7840170860290527
    6. '.append' → logprob: -4.284017086029053
    7. '_points' → logprob: -4.534017086029053
    8. '[:]' → logprob: -5.409017086029053
    9. ' +=' → logprob: -6.284017086029053
    10. '[]' → logprob: -6.284017086029053

Token 25: ' {' (ID: 354)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.0826125517487526
    2. '[]' → logprob: -2.7076125144958496
    3. ' set' → logprob: -4.95761251449585
    4. 'set' → logprob: -5.83261251449585
    5. ' {}' → logprob: -6.70761251449585
    6. '{}' → logprob: -7.45761251449585
    7. ' [' → logprob: -7.95761251449585
    8. ' ' → logprob: -8.582612991333008
    9. ' [(' → logprob: -9.207612991333008
    10. '[' → logprob: -9.582612991333008

Token 26: '3' (ID: 18)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.234868124127388
    2. 'a' → logprob: -1.8598681688308716
    3. '(' → logprob: -4.234868049621582
    4. '(a' → logprob: -4.359868049621582
    5. '0' → logprob: -4.484868049621582
    6. '()}' → logprob: -5.234868049621582
    7. ' (' → logprob: -5.734868049621582
    8. '()' → logprob: -6.359868049621582
    9. ''a' → logprob: -6.484868049621582
    10. ' }' → logprob: -7.734868049621582

Token 27: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27030718326568604
    2. ',' → logprob: -1.520307183265686
    3. '}' → logprob: -4.1453070640563965
    4. ' :' → logprob: -7.3953070640563965
    5. '6' → logprob: -8.020307540893555
    6. '4' → logprob: -8.145307540893555
    7. ' ,' → logprob: -8.270307540893555
    8. '7' → logprob: -8.645307540893555
    9. '3' → logprob: -8.895307540893555
    10. '2' → logprob: -9.270307540893555

Token 28: ' pow' (ID: 9779)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30151042342185974
    2. '0' → logprob: -2.4265103340148926
    3. '1' → logprob: -2.8015103340148926
    4. '2' → logprob: -3.6765103340148926
    5. '100' → logprob: -3.8015103340148926
    6. '10' → logprob: -4.301510334014893
    7. '3' → logprob: -4.926510334014893
    8. '7' → logprob: -4.926510334014893
    9. '5' → logprob: -4.926510334014893
    10. '4' → logprob: -5.551510334014893

Token 29: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09692685306072235
    2. '(a' → logprob: -2.7219269275665283
    3. '(b' → logprob: -3.8469269275665283
    4. 'a' → logprob: -6.721926689147949
    5. '2' → logprob: -6.846926689147949
    6. '(res' → logprob: -7.471926689147949
    7. '}' → logprob: -7.721926689147949
    8. '(points' → logprob: -7.971926689147949
    9. '3' → logprob: -8.22192668914795
    10. '((' → logprob: -8.47192668914795

Token 30: '10' (ID: 702)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8512815237045288
    2. 'a' → logprob: -1.6012815237045288
    3. '3' → logprob: -1.8512815237045288
    4. '10' → logprob: -2.6012816429138184
    5. 'b' → logprob: -2.8512816429138184
    6. '7' → logprob: -3.7262816429138184
    7. '5' → logprob: -4.101281642913818
    8. '4' → logprob: -4.351281642913818
    9. '(' → logprob: -5.101281642913818
    10. '(a' → logprob: -5.101281642913818

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019229217432439327
    2. ' ,' → logprob: -6.501923084259033
    3. ',b' → logprob: -9.126922607421875
    4. '3' → logprob: -9.126922607421875
    5. '5' → logprob: -10.626922607421875
    6. '0' → logprob: -10.626922607421875
    7. '2' → logprob: -11.001922607421875
    8. '6' → logprob: -11.001922607421875
    9. '7' → logprob: -11.126922607421875
    10. '9' → logprob: -11.126922607421875

Token 32: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -1.2688038349151611
    2. '9' → logprob: -1.2688038349151611
    3. 'a' → logprob: -1.8938038349151611
    4. '3' → logprob: -2.018803834915161
    5. '5' → logprob: -3.268803834915161
    6. '4' → logprob: -3.768803834915161
    7. '8' → logprob: -4.018803596496582
    8. '2' → logprob: -4.018803596496582
    9. '7' → logprob: -4.018803596496582
    10. 'b' → logprob: -4.643803596496582

Token 33: '5' (ID: 20)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.6293878555297852
    2. '6' → logprob: -1.3793878555297852
    3. '3' → logprob: -2.879387855529785
    4. '5' → logprob: -3.254387855529785
    5. 'a' → logprob: -3.254387855529785
    6. '8' → logprob: -3.504387855529785
    7. '7' → logprob: -4.004387855529785
    8. '4' → logprob: -4.254387855529785
    9. '2' → logprob: -4.879387855529785
    10. '10' → logprob: -5.879387855529785

Token 34: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18273025751113892
    2. ')}' → logprob: -2.057730197906494
    3. ',' → logprob: -4.057730197906494
    4. '3' → logprob: -5.557730197906494
    5. ' )' → logprob: -5.682730197906494
    6. '-' → logprob: -6.057730197906494
    7. '}' → logprob: -6.182730197906494
    8. '6' → logprob: -6.307730197906494
    9. ')}}' → logprob: -6.432730197906494
    10. '),' → logprob: -6.557730197906494

Token 35: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5210748910903931
    2. ' ' → logprob: -1.146074891090393
    3. '4' → logprob: -3.1460747718811035
    4. '5' → logprob: -3.7710747718811035
    5. '1' → logprob: -4.5210747718811035
    6. '6' → logprob: -4.8960747718811035
    7. '7' → logprob: -6.1460747718811035
    8. '3' → logprob: -7.6460747718811035
    9. '10' → logprob: -7.8960747718811035
    10. '9' → logprob: -8.521075248718262

Token 36: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1558276116847992
    2. '4' → logprob: -2.905827522277832
    3. '5' → logprob: -3.030827522277832
    4. '6' → logprob: -4.280827522277832
    5. '7' → logprob: -4.530827522277832
    6. '1' → logprob: -4.780827522277832
    7. ' ' → logprob: -5.155827522277832
    8. '10' → logprob: -7.155827522277832
    9. '0' → logprob: -8.030827522277832
    10. '8' → logprob: -8.155827522277832

Token 37: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.553032628493384e-05
    2. ' :' → logprob: -10.250075340270996
    3. '6' → logprob: -12.000075340270996
    4. ',' → logprob: -12.000075340270996
    5. '2' → logprob: -12.750075340270996
    6. '3' → logprob: -12.875075340270996
    7. '7' → logprob: -12.875075340270996
    8. '1' → logprob: -13.000075340270996
    9. '```' → logprob: -13.250075340270996
    10. '**' → logprob: -13.250075340270996

Token 38: ' ' (ID: 220)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.5380106568336487
    2. ' pow' → logprob: -1.538010597229004
    3. ' ' → logprob: -2.163010597229004
    4. '10' → logprob: -3.163010597229004
    5. '100' → logprob: -4.538010597229004
    6. '4' → logprob: -4.913010597229004
    7. '9' → logprob: -5.413010597229004
    8. '5' → logprob: -5.538010597229004
    9. '3' → logprob: -5.663010597229004
    10. '7' → logprob: -6.038010597229004

Token 39: '2' (ID: 17)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.1324699968099594
    2. '4' → logprob: -2.757469892501831
    3. '3' → logprob: -4.00747013092041
    4. '10' → logprob: -4.13247013092041
    5. '5' → logprob: -4.63247013092041
    6. '9' → logprob: -5.50747013092041
    7. '2' → logprob: -6.00747013092041
    8. '100' → logprob: -6.13247013092041
    9. '6' → logprob: -6.50747013092041
    10. '7' → logprob: -6.75747013092041

Token 40: ' *' (ID: 425)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.3326062858104706
    2. ',' → logprob: -1.832606315612793
    3. '**' → logprob: -2.832606315612793
    4. ':' → logprob: -3.707606315612793
    5. '*' → logprob: -4.457606315612793
    6. '5' → logprob: -4.707606315612793
    7. '0' → logprob: -4.832606315612793
    8. ' }' → logprob: -5.707606315612793
    9. '3' → logprob: -5.957606315612793
    10. '6' → logprob: -7.207606315612793

Token 41: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2567184865474701
    2. 'pow' → logprob: -1.7567185163497925
    3. ' ' → logprob: -4.256718635559082
    4. '7' → logprob: -4.631718635559082
    5. '5' → logprob: -5.006718635559082
    6. '3' → logprob: -5.006718635559082
    7. ' pow' → logprob: -5.631718635559082
    8. '100' → logprob: -6.006718635559082
    9. '9' → logprob: -6.131718635559082
    10. '0' → logprob: -6.381718635559082

Token 42: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3107616603374481
    2. 'pow' → logprob: -1.4357616901397705
    3. '100' → logprob: -5.060761451721191
    4. 'points' → logprob: -5.060761451721191
    5. '3' → logprob: -5.560761451721191
    6. '(' → logprob: -5.810761451721191
    7. '7' → logprob: -5.935761451721191
    8. '5' → logprob: -6.185761451721191
    9. '9' → logprob: -6.810761451721191
    10. 'int' → logprob: -6.810761451721191

Token 43: ' **' (ID: 6240)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.30314525961875916
    2. '4' → logprob: -1.4281452894210815
    3. '3' → logprob: -3.928145170211792
    4. '2' → logprob: -7.053145408630371
    5. '**' → logprob: -7.678145408630371
    6. ' ' → logprob: -8.428145408630371
    7. ',' → logprob: -8.803145408630371
    8. '0' → logprob: -8.928145408630371
    9. '6' → logprob: -8.928145408630371
    10. '1' → logprob: -9.428145408630371

Token 44: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.6404749155044556
    2. '5' → logprob: -0.7654749155044556
    3. '3' → logprob: -5.515474796295166
    4. '6' → logprob: -5.765474796295166
    5. ' ' → logprob: -8.140475273132324
    6. '2' → logprob: -8.265475273132324
    7. '1' → logprob: -9.640475273132324
    8. '7' → logprob: -10.640475273132324
    9. '9' → logprob: -11.015475273132324
    10. '8' → logprob: -11.640475273132324

Token 45: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.4008263647556305
    2. '4' → logprob: -1.150826334953308
    3. '6' → logprob: -5.025826454162598
    4. '3' → logprob: -5.025826454162598
    5. '2' → logprob: -8.275826454162598
    6. '9' → logprob: -8.900826454162598
    7. '7' → logprob: -9.025826454162598
    8. '1' → logprob: -9.525826454162598
    9. '8' → logprob: -9.650826454162598
    10. '0' → logprob: -10.400826454162598

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07078031450510025
    2. '}' → logprob: -2.6957802772521973
    3. ')' → logprob: -7.695780277252197
    4. ' }' → logprob: -8.320780754089355
    5. ' ,' → logprob: -9.570780754089355
    6. ',
' → logprob: -10.945780754089355
    7. ')}' → logprob: -11.320780754089355
    8. '3' → logprob: -11.695780754089355
    9. ',)' → logprob: -12.070780754089355
    10. '   ' → logprob: -12.070780754089355

Token 47: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18009524047374725
    2. '1' → logprob: -1.8050951957702637
    3. '4' → logprob: -8.555095672607422
    4. '5' → logprob: -9.930095672607422
    5. '0' → logprob: -10.180095672607422
    6. '  ' → logprob: -11.055095672607422
    7. '7' → logprob: -11.742595672607422
    8. '6' → logprob: -12.117595672607422
    9. '   ' → logprob: -12.242595672607422
    10. '10' → logprob: -12.305095672607422

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23453158140182495
    2. ' ' → logprob: -1.6095316410064697
    3. '4' → logprob: -5.234531402587891
    4. '5' → logprob: -6.109531402587891
    5. '0' → logprob: -7.234531402587891
    6. '7' → logprob: -8.73453140258789
    7. '10' → logprob: -8.92203140258789
    8. '6' → logprob: -8.98453140258789
    9. '100' → logprob: -9.73453140258789
    10. '3' → logprob: -9.73453140258789

Token 49: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011188744247192517
    2. ' :' → logprob: -9.12511157989502
    3. '2' → logprob: -15.00011157989502
    4. '0' → logprob: -15.12511157989502
    5. '1' → logprob: -15.37511157989502
    6. '**' → logprob: -15.50011157989502
    7. '}:' → logprob: -15.50011157989502
    8. '```' → logprob: -15.50011157989502
    9. '3' → logprob: -15.87511157989502
    10. '4' → logprob: -16.000112533569336

Token 50: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.8394637107849121
    2. ' ' → logprob: -0.9644637107849121
    3. '3' → logprob: -2.589463710784912
    4. '1' → logprob: -3.214463710784912
    5. '5' → logprob: -3.464463710784912
    6. '0' → logprob: -4.089463710784912
    7. '100' → logprob: -5.339463710784912
    8. '4' → logprob: -5.714463710784912
    9. 'pow' → logprob: -5.714463710784912
    10. '2' → logprob: -5.714463710784912

Token 51: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8502105474472046
    2. '10' → logprob: -0.8502105474472046
    3. '5' → logprob: -3.225210666656494
    4. '1' → logprob: -3.225210666656494
    5. '0' → logprob: -3.975210666656494
    6. '2' → logprob: -4.850210666656494
    7. '4' → logprob: -4.975210666656494
    8. 'pow' → logprob: -4.975210666656494
    9. ' ' → logprob: -5.225210666656494
    10. '7' → logprob: -5.475210666656494

Token 52: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.23743513226509094
    2. ' *' → logprob: -1.6124351024627686
    3. '0' → logprob: -4.612435340881348
    4. '000' → logprob: -7.237435340881348
    5. ' ' → logprob: -7.862435340881348
    6. '10' → logprob: -8.237435340881348
    7. ':' → logprob: -8.737435340881348
    8. '00' → logprob: -8.987435340881348
    9. '```' → logprob: -9.487435340881348
    10. '5' → logprob: -9.862435340881348

Token 53: ' (' (ID: 350)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03884483128786087
    2. ' ' → logprob: -3.2888448238372803
    3. '5' → logprob: -8.66384506225586
    4. 'pow' → logprob: -8.91384506225586
    5. '1' → logprob: -9.28884506225586
    6. '(' → logprob: -9.28884506225586
    7. '100' → logprob: -9.66384506225586
    8. '0' → logprob: -9.78884506225586
    9. '3' → logprob: -9.91384506225586
    10. '7' → logprob: -10.28884506225586

Token 54: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.009356159716844559
    2. ' ' → logprob: -5.0093560218811035
    3. '1' → logprob: -6.7593560218811035
    4. '2' → logprob: -8.009356498718262
    5. '5' → logprob: -8.384356498718262
    6. 'pow' → logprob: -8.384356498718262
    7. '3' → logprob: -8.509356498718262
    8. '100' → logprob: -9.009356498718262
    9. '4' → logprob: -9.509356498718262
    10. '0' → logprob: -9.634356498718262

Token 55: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4267706871032715
    2. '5' → logprob: -1.1767706871032715
    3. ' **' → logprob: -3.5517706871032715
    4. '6' → logprob: -4.6767706871032715
    5. ' ' → logprob: -7.5517706871032715
    6. '7' → logprob: -8.30177116394043
    7. '4' → logprob: -9.05177116394043
    8. '9' → logprob: -9.80177116394043
    9. '8' → logprob: -10.30177116394043
    10. ',' → logprob: -10.55177116394043

Token 56: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.013144347816705704
    2. '6' → logprob: -4.888144493103027
    3. '4' → logprob: -5.763144493103027
    4. ' ' → logprob: -6.388144493103027
    5. '3' → logprob: -7.638144493103027
    6. '7' → logprob: -8.888144493103027
    7. '2' → logprob: -10.638144493103027
    8. '8' → logprob: -10.763144493103027
    9. '9' → logprob: -11.513144493103027
    10. '1' → logprob: -11.513144493103027

Token 57: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.08412409573793411
    2. '6' → logprob: -2.5841240882873535
    3. '4' → logprob: -5.9591240882873535
    4. '7' → logprob: -6.5841240882873535
    5. '3' → logprob: -7.4591240882873535
    6. '8' → logprob: -8.084124565124512
    7. ' ' → logprob: -9.084124565124512
    8. '9' → logprob: -9.334124565124512
    9. '2' → logprob: -9.584124565124512
    10. '10' → logprob: -10.084124565124512

Token 58: ')}
' (ID: 19324)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5548365116119385
    2. ')}' → logprob: -0.9298365116119385
    3. '),' → logprob: -3.9298365116119385
    4. ' )' → logprob: -5.179836273193359
    5. '})' → logprob: -5.929836273193359
    6. '))' → logprob: -6.429836273193359
    7. '}' → logprob: -7.054836273193359
    8. ' })' → logprob: -8.17983627319336
    9. ')}}' → logprob: -9.05483627319336
    10. ' ),' → logprob: -9.42983627319336

Token 59: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9054901599884033
    2. 'for' → logprob: -1.1554901599884033
    3. 'if' → logprob: -1.5304901599884033
    4. 'while' → logprob: -3.2804901599884033
    5. '<|end|>' → logprob: -4.155489921569824
    6. ' if' → logprob: -6.280489921569824
    7. '\n' → logprob: -6.280489921569824
    8. '[' → logprob: -6.905489921569824
    9. ' for' → logprob: -7.155489921569824
    10. '```' → logprob: -7.280489921569824

Token 60: ' value' (ID: 1432)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10453938692808151
    2. 'i' → logprob: -3.354539394378662
    3. ' _' → logprob: -3.729539394378662
    4. ' x' → logprob: -3.854539394378662
    5. '_' → logprob: -4.479539394378662
    6. ' b' → logprob: -6.604539394378662
    7. 'x' → logprob: -6.854539394378662
    8. ' ' → logprob: -7.229539394378662
    9. ' val' → logprob: -7.479539394378662
    10. ' c' → logprob: -7.479539394378662

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13487599790096283
    2. 'in' → logprob: -2.134876012802124
    3. ',' → logprob: -5.509875774383545
    4. ' ' → logprob: -5.634875774383545
    5. ' ,' → logprob: -8.634876251220703
    6. '_in' → logprob: -11.009876251220703
    7. '_' → logprob: -11.134876251220703
    8. 's' → logprob: -11.384876251220703
    9. ' i' → logprob: -11.384876251220703
    10. '  ' → logprob: -11.822376251220703

Token 62: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6483098864555359
    2. 'range' → logprob: -1.7733099460601807
    3. ' [' → logprob: -2.0233099460601807
    4. '[a' → logprob: -2.3983099460601807
    5. ' a' → logprob: -3.3983099460601807
    6. '[' → logprob: -3.7733099460601807
    7. 'a' → logprob: -4.148309707641602
    8. '[b' → logprob: -5.523309707641602
    9. ' (' → logprob: -6.148309707641602
    10. ' b' → logprob: -6.398309707641602

Token 63: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01007030438631773
    2. ' a' → logprob: -5.260070323944092
    3. 'b' → logprob: -5.635070323944092
    4. '3' → logprob: -7.385070323944092
    5. '   ' → logprob: -8.635069847106934
    6. '1' → logprob: -8.635069847106934
    7. ' b' → logprob: -9.510069847106934
    8. ' ' → logprob: -9.885069847106934
    9. '2' → logprob: -10.635069847106934
    10. '0' → logprob: -10.635069847106934

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007269152440130711
    2. ',b' → logprob: -5.507269382476807
    3. ' ,' → logprob: -5.757269382476807
    4. 'b' → logprob: -11.632268905639648
    5. ',
' → logprob: -12.507268905639648
    6. ' ' → logprob: -13.007268905639648
    7. '1' → logprob: -13.257268905639648
    8. ',a' → logprob: -13.632268905639648
    9. ' -' → logprob: -14.007268905639648
    10. '-' → logprob: -14.007268905639648

Token 65: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2812122702598572
    2. 'b' → logprob: -1.406212329864502
    3. ' ' → logprob: -9.906211853027344
    4. '    ' → logprob: -12.781211853027344
    5. ',' → logprob: -13.281211853027344
    6. '<|end|>' → logprob: -13.281211853027344
    7. '   ' → logprob: -13.406211853027344
    8. ' 
' → logprob: -14.531211853027344
    9. '>b' → logprob: -14.531211853027344
    10. '  ' → logprob: -14.531211853027344

Token 66: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.00022654302301816642
    2. ']:
' → logprob: -8.875226974487305
    3. ']' → logprob: -9.625226974487305
    4. ',' → logprob: -11.875226974487305
    5. ']:
' → logprob: -12.000226974487305
    6. ' ]' → logprob: -12.500226974487305
    7. ']):' → logprob: -14.125226974487305
    8. '):' → logprob: -14.250226974487305
    9. ']:

' → logprob: -14.250226974487305
    10. '"]:' → logprob: -15.000226974487305

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22260019183158875
    2. ' if' → logprob: -2.347600221633911
    3. ' res' → logprob: -2.472600221633911
    4. ' points' → logprob: -4.722599983215332
    5. ' ' → logprob: -5.097599983215332
    6. 'res' → logprob: -7.097599983215332
    7. '```' → logprob: -7.347599983215332
    8. '<|end|>' → logprob: -7.347599983215332
    9. '    ' → logprob: -7.722599983215332
    10. ' for' → logprob: -8.222599983215332

Token 68: ' res' (ID: 694)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8642932772636414
    2. ' res' → logprob: -1.3642933368682861
    3. ' for' → logprob: -2.114293336868286
    4. 'res' (adapté à ' res') → logprob: -2.614293336868286
    5. 'if' → logprob: -2.739293336868286
    6. ' points' → logprob: -3.364293336868286
    7. 'for' → logprob: -3.864293336868286
    8. 'points' → logprob: -4.989293098449707
    9. '   ' → logprob: -6.614293098449707
    10. ' while' → logprob: -7.614293098449707

Token 69: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.029806150123476982
    2. '+=' → logprob: -3.529806137084961
    3. ' -=' → logprob: -11.404806137084961
    4. ' =' → logprob: -11.404806137084961
    5. '=' → logprob: -11.779806137084961
    6. ' ' → logprob: -12.029806137084961
    7. '+' → logprob: -12.279806137084961
    8. '   ' → logprob: -12.529806137084961
    9. ' +' → logprob: -12.529806137084961
    10. ']+=' → logprob: -13.279806137084961

Token 70: ' res' (ID: 694)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.16008274257183075
    2. ' points' → logprob: -2.6600828170776367
    3. 'max' → logprob: -2.9100828170776367
    4. ' res' → logprob: -4.285082817077637
    5. 'points' → logprob: -5.035082817077637
    6. 'res' → logprob: -5.910082817077637
    7. '+' → logprob: -9.160082817077637
    8. ' value' → logprob: -9.160082817077637
    9. '(max' → logprob: -9.660082817077637
    10. '(points' → logprob: -9.785082817077637

Token 71: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6326802372932434
    2. ' +' → logprob: -0.7576802372932434
    3. ' ' → logprob: -10.13267993927002
    4. ' or' → logprob: -12.00767993927002
    5. '*' → logprob: -12.38267993927002
    6. ' +=' → logprob: -12.75767993927002
    7. '+=' → logprob: -12.75767993927002
    8. ' plus' → logprob: -12.75767993927002
    9. '|' → logprob: -13.00767993927002
    10. ' *' → logprob: -13.00767993927002

Token 72: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.3141695559024811
    2. ' points' → logprob: -1.3141695261001587
    3. '(points' → logprob: -7.564169406890869
    4. 'value' → logprob: -8.814169883728027
    5. ' value' → logprob: -9.314169883728027
    6. 'pow' → logprob: -10.689169883728027
    7. 'point' → logprob: -10.814169883728027
    8. '1' → logprob: -11.314169883728027
    9. '	points' → logprob: -11.439169883728027
    10. ' (' → logprob: -11.564169883728027

Token 73: '.get' (ID: 775)
  Prédit: '[value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[value' → logprob: -0.02343914844095707
    2. '.get' → logprob: -4.148438930511475
    3. '[' → logprob: -5.023438930511475
    4. '[get' → logprob: -7.398438930511475
    5. 'get' → logprob: -9.648439407348633
    6. '[val' → logprob: -10.273439407348633
    7. 'value' → logprob: -10.648439407348633
    8. '```' → logprob: -10.773439407348633
    9. '[...]' → logprob: -12.148439407348633
    10. '[
' → logprob: -12.148439407348633

Token 74: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.00043472214019857347
    2. '(' → logprob: -7.750434875488281
    3. ' (' → logprob: -12.625434875488281
    4. 'value' → logprob: -14.750434875488281
    5. '(
' → logprob: -15.625434875488281
    6. '((' → logprob: -16.50043487548828
    7. '```' → logprob: -17.75043487548828
    8. ')value' → logprob: -18.00043487548828
    9. '(

' → logprob: -18.25043487548828
    10. ',value' → logprob: -18.25043487548828

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001382974674925208
    2. ')' → logprob: -7.376382827758789
    3. '(),' → logprob: -7.376382827758789
    4. '(' → logprob: -9.876382827758789
    5. ' ,' → logprob: -10.501382827758789
    6. '0' → logprob: -10.501382827758789
    7. '),' → logprob: -12.376382827758789
    8. '1' → logprob: -12.626382827758789
    9. 'value' → logprob: -12.751382827758789
    10. ',value' → logprob: -13.126382827758789

Token 76: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0160243958234787
    2. ' ' → logprob: -4.266024589538574
    3. '1' → logprob: -7.891024589538574
    4. '100' → logprob: -8.141024589538574
    5. '10' → logprob: -8.266024589538574
    6. ')' → logprob: -8.391024589538574
    7. 'value' → logprob: -8.766024589538574
    8. '   ' → logprob: -9.141024589538574
    9. '5' → logprob: -10.141024589538574
    10. '    ' → logprob: -10.391024589538574

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007118722423911095
    2. ' ' → logprob: -6.1321187019348145
    3. '-' → logprob: -6.3821187019348145
    4. '1' → logprob: -6.6321187019348145
    5. '10' → logprob: -7.6321187019348145
    6. '100' → logprob: -7.7571187019348145
    7. 'value' → logprob: -8.882119178771973
    8. '5' → logprob: -9.444619178771973
    9. 'res' → logprob: -9.632119178771973
    10. ' -' → logprob: -9.694619178771973

Token 78: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0564331205387134e-05
    2. '))' → logprob: -11.87501049041748
    3. ')
' → logprob: -12.75001049041748
    4. ' )' → logprob: -16.000011444091797
    5. ')}' → logprob: -16.125011444091797
    6. ')))' → logprob: -16.375011444091797
    7. ')`' → logprob: -16.750011444091797
    8. '())' → logprob: -17.250011444091797
    9. '),' → logprob: -17.500011444091797
    10. ')#' → logprob: -17.625011444091797

Token 79: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0044876812025904655
    2. '<|end|>' → logprob: -5.75448751449585
    3. 'if' → logprob: -7.75448751449585
    4. 'return' → logprob: -8.004487991333008
    5. 'res' → logprob: -8.254487991333008
    6. '
' → logprob: -9.004487991333008
    7. ')' → logprob: -9.504487991333008
    8. '```' → logprob: -10.254487991333008
    9. 'for' → logprob: -11.129487991333008
    10. ' print' → logprob: -12.004487991333008

Token 80: ' all' (ID: 722)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6125527024269104
    2. 'a' → logprob: -0.8625527024269104
    3. ' res' → logprob: -3.4875526428222656
    4. 'res' → logprob: -5.237552642822266
    5. '(a' → logprob: -10.362552642822266
    6. ' points' → logprob: -12.487552642822266
    7. '__' → logprob: -12.612552642822266
    8. ' ' → logprob: -12.987552642822266
    9. 'b' → logprob: -13.112552642822266
    10. ' b' → logprob: -13.175052642822266

Token 81: '([' (ID: 5194)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.0835517644882202
    2. '(value' → logprob: -1.0835517644882202
    3. '([' → logprob: -2.0835518836975098
    4. '((' → logprob: -2.5835518836975098
    5. '(' → logprob: -2.9585518836975098
    6. '(v' → logprob: -3.3335518836975098
    7. '(i' → logprob: -3.5835518836975098
    8. '(val' → logprob: -5.58355188369751
    9. '(point' → logprob: -7.20855188369751
    10. '(p' → logprob: -7.33355188369751

Token 82: 'a' (ID: 64)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.30180099606513977
    2. 'v' → logprob: -1.9268009662628174
    3. 'value' → logprob: -2.8018009662628174
    4. 'a' → logprob: -3.9268009662628174
    5. '(x' → logprob: -4.8018012046813965
    6. 'i' → logprob: -4.9268012046813965
    7. '(value' → logprob: -5.4268012046813965
    8. 'points' → logprob: -5.6768012046813965
    9. 'val' → logprob: -6.0518012046813965
    10. 'point' → logprob: -6.4268012046813965

Token 83: ' ==' (ID: 951)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9487969279289246
    2. '==' → logprob: -0.9487969279289246
    3. ' ==' → logprob: -1.6987969875335693
    4. ' ,' → logprob: -4.07379674911499
    5. '>' → logprob: -4.57379674911499
    6. ' >' → logprob: -5.32379674911499
    7. '!=' → logprob: -5.57379674911499
    8. ' !=' → logprob: -5.69879674911499
    9. ' ' → logprob: -6.57379674911499
    10. 'a' → logprob: -8.198797225952148

Token 84: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10932570695877075
    2. ' b' → logprob: -2.484325647354126
    3. ' ' → logprob: -4.734325885772705
    4. '3' → logprob: -5.234325885772705
    5. '1' → logprob: -5.484325885772705
    6. '0' → logprob: -7.484325885772705
    7. '2' → logprob: -7.734325885772705
    8. '5' → logprob: -7.984325885772705
    9. '4' → logprob: -8.609325408935547
    10. '6' → logprob: -8.859325408935547

Token 85: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04334227740764618
    2. '3' → logprob: -3.918342351913452
    3. '1' → logprob: -4.043342113494873
    4. '2' → logprob: -6.668342113494873
    5. '0' → logprob: -6.668342113494873
    6. ' b' → logprob: -7.543342113494873
    7. '5' → logprob: -7.668342113494873
    8. ' ' → logprob: -7.918342113494873
    9. '6' → logprob: -8.293342590332031
    10. '4' → logprob: -8.543342590332031

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018740950152277946
    2. ' ,' → logprob: -4.393741130828857
    3. ',b' → logprob: -5.143741130828857
    4. 'and' → logprob: -9.2687406539917
    5. ' and' → logprob: -9.2687406539917
    6. 'b' → logprob: -9.5187406539917
    7. ' or' → logprob: -10.1437406539917
    8. ',
' → logprob: -10.6437406539917
    9. ' ' → logprob: -11.2687406539917
    10. 'or' → logprob: -11.8937406539917

Token 87: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16029499471187592
    2. ' b' → logprob: -1.910295009613037
    3. '   ' → logprob: -10.160294532775879
    4. ' ' → logprob: -11.160294532775879
    5. '  ' → logprob: -12.285294532775879
    6. '    ' → logprob: -12.285294532775879
    7. 'a' → logprob: -12.410294532775879
    8. '	b' → logprob: -13.910294532775879
    9. ' ' → logprob: -14.160294532775879
    10. ' a' → logprob: -14.160294532775879

Token 88: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6932257413864136
    2. ' ==' → logprob: -0.6932257413864136
    3. ' ' → logprob: -10.193225860595703
    4. ' !=' → logprob: -11.568225860595703
    5. '=' → logprob: -11.943225860595703
    6. '!=' → logprob: -12.068225860595703
    7. ')' → logprob: -12.443225860595703
    8. ']==' → logprob: -12.568225860595703
    9. '==
' → logprob: -13.630725860595703
    10. ' ' → logprob: -13.693225860595703

Token 89: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6653834581375122
    2. '1' → logprob: -0.7903834581375122
    3. '3' → logprob: -4.165383338928223
    4. '2' → logprob: -4.165383338928223
    5. '0' → logprob: -7.165383338928223
    6. '  ' → logprob: -8.415383338928223
    7. '4' → logprob: -10.227883338928223
    8. 'a' → logprob: -10.352883338928223
    9. '   ' → logprob: -10.415383338928223
    10. ' a' → logprob: -10.790383338928223

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20513039827346802
    2. '2' → logprob: -2.4551303386688232
    3. '3' → logprob: -2.5801303386688232
    4. ' ' → logprob: -3.8301303386688232
    5. '0' → logprob: -6.330130577087402
    6. 'a' → logprob: -8.705130577087402
    7. '4' → logprob: -9.642630577087402
    8. '  ' → logprob: -10.455130577087402
    9. '   ' → logprob: -10.517630577087402
    10. '5' → logprob: -11.080130577087402

Token 91: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.020505456253886223
    2. '])' → logprob: -4.395505428314209
    3. ']):
' → logprob: -5.395505428314209
    4. ']' → logprob: -6.520505428314209
    5. ',' → logprob: -7.145505428314209
    6. '):' → logprob: -7.645505428314209
    7. ']:' → logprob: -8.395505905151367
    8. ')]' → logprob: -8.645505905151367
    9. ' ]' → logprob: -9.270505905151367
    10. ')' → logprob: -9.645505905151367

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20504194498062134
    2. ':' → logprob: -1.8300418853759766
    3. ':
' → logprob: -3.8300418853759766
    4. ' res' → logprob: -6.830041885375977
    5. 'res' → logprob: -7.080041885375977
    6. '
' → logprob: -7.705041885375977
    7. ' :' → logprob: -8.955041885375977
    8. '\n' → logprob: -9.205041885375977
    9. ':\' → logprob: -9.580041885375977
    10. ':
' → logprob: -9.830041885375977

Token 93: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0838976502418518
    2. ' res' → logprob: -2.583897590637207
    3. '   ' → logprob: -5.458897590637207
    4. 'print' → logprob: -7.958897590637207
    5. '
' → logprob: -8.958897590637207
    6. ' ' → logprob: -9.958897590637207
    7. '	res' → logprob: -10.208897590637207
    8. ' print' → logprob: -10.458897590637207
    9. '    ' → logprob: -10.958897590637207
    10. 'pass' → logprob: -11.083897590637207

Token 94: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.46804577112197876
    2. '=' → logprob: -1.468045711517334
    3. ' +=' → logprob: -2.468045711517334
    4. ' =' → logprob: -3.718045711517334
    5. '*=' → logprob: -3.718045711517334
    6. ' *=' → logprob: -4.968045711517334
    7. '-=' → logprob: -6.468045711517334
    8. ' -=' → logprob: -7.843045711517334
    9. ' ' → logprob: -8.093046188354492
    10. '//=' → logprob: -8.468046188354492

Token 95: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1571794748306274
    2. 'points' → logprob: -1.1571794748306274
    3. ' points' → logprob: -1.9071794748306274
    4. '10' → logprob: -2.407179355621338
    5. '100' → logprob: -3.657179355621338
    6. 'pow' → logprob: -3.782179355621338
    7. '3' → logprob: -3.907179355621338
    8. '5' → logprob: -4.032179355621338
    9. '500' → logprob: -4.657179355621338
    10. '1' → logprob: -5.282179355621338

Token 96: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008887192234396935
    2. '(pow' → logprob: -5.50888729095459
    3. '((' → logprob: -5.88388729095459
    4. '('' → logprob: -7.13388729095459
    5. '(points' → logprob: -7.50888729095459
    6. '(.' → logprob: -8.38388729095459
    7. '("' → logprob: -9.25888729095459
    8. '(p' → logprob: -9.63388729095459
    9. '(res' → logprob: -9.63388729095459
    10. '(-' → logprob: -10.13388729095459

Token 97: '4' (ID: 19)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6997342705726624
    2. '10' → logprob: -2.3247342109680176
    3. '(' → logprob: -2.5747342109680176
    4. 'points' → logprob: -2.5747342109680176
    5. '0' → logprob: -2.6997342109680176
    6. '3' → logprob: -3.0747342109680176
    7. 'pow' → logprob: -3.4497342109680176
    8. '5' → logprob: -3.5747342109680176
    9. '2' → logprob: -4.074734210968018
    10. ' ' → logprob: -4.199734210968018

Token 98: 'e' (ID: 68)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8586604595184326
    2. ' *' → logprob: -0.9836604595184326
    3. 'e' → logprob: -2.3586604595184326
    4. '0' → logprob: -2.9836604595184326
    5. '000' → logprob: -4.108660697937012
    6. '00' → logprob: -4.483660697937012
    7. '*(' → logprob: -4.733660697937012
    8. '5' → logprob: -4.983660697937012
    9. '10' → logprob: -5.733660697937012
    10. '   ' → logprob: -6.358660697937012

Token 99: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.005846427753567696
    2. '6' → logprob: -5.2558465003967285
    3. '+' → logprob: -8.00584602355957
    4. '4' → logprob: -8.88084602355957
    5. '7' → logprob: -9.63084602355957
    6. ' ' → logprob: -10.38084602355957
    7. '   ' → logprob: -11.38084602355957
    8. '8' → logprob: -11.50584602355957
    9. '05' → logprob: -11.75584602355957
    10. '3' → logprob: -13.38084602355957

Token 100: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.811348480870947e-05
    2. ')
' → logprob: -10.25004768371582
    3. ' )' → logprob: -11.62504768371582
    4. '))' → logprob: -14.12504768371582
    5. '   ' → logprob: -14.25004768371582
    6. ')return' → logprob: -14.75004768371582
    7. '0' → logprob: -14.87504768371582
    8. '),' → logprob: -15.50004768371582
    9. ')
' → logprob: -15.75004768371582
    10. '*' → logprob: -15.75004768371582

Token 101: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004664193547796458
    2. '<|end|>' → logprob: -8.500466346740723
    3. 'res' → logprob: -9.875466346740723
    4. 'return' → logprob: -10.125466346740723
    5. ' print' → logprob: -10.250466346740723
    6. '\' → logprob: -10.375466346740723
    7. '
' → logprob: -10.500466346740723
    8. '\n' → logprob: -10.500466346740723
    9. '```' → logprob: -11.250466346740723
    10. '#' → logprob: -11.625466346740723

Token 102: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.25196799635887146
    2. '(' → logprob: -1.5019680261611938
    3. '()' → logprob: -10.501968383789062
    4. '('' → logprob: -12.251968383789062
    5. 'res' → logprob: -12.501968383789062
    6. '(
' → logprob: -14.001968383789062
    7. ' (' → logprob: -14.001968383789062
    8. '(re' → logprob: -15.501968383789062
    9. '((' → logprob: -15.626968383789062
    10. '(result' → logprob: -16.001968383789062

Token 103: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.941850526549388e-06
    2. '))' → logprob: -12.375007629394531
    3. ')
' → logprob: -13.125007629394531
    4. '`)' → logprob: -14.375007629394531
    5. ')`' → logprob: -14.375007629394531
    6. ' )' → logprob: -15.125007629394531
    7. '')' → logprob: -17.00000762939453
    8. '())' → logprob: -17.12500762939453
    9. '```' → logprob: -17.62500762939453
    10. ')}' → logprob: -17.62500762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 101
Tokens correctement prédits (1ère position, stricte): 34
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 79
Précision stricte (1ère position): 33.66%
Précision adaptée (1ère position): 34.65%
Précision (top 10): 78.22%
================================================================================
