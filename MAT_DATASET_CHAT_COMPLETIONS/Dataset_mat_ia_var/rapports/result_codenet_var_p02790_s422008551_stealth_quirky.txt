================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:29:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def obfuscate(s, t):
    # Multiplie la chaîne s, t fois (t en entier)
    return s * int(t)

# utilise sys.stdin directement plutôt que input()
src = sys.stdin.readline
A, B = (lambda lst: (lst[0], lst[1]))(src().split())

# variables à un seul caractère majuscule
X = obfuscate(A, B)
Y = obfuscate(B, A)

# Expression booléenne dans un dictionnaire pour le choix de la sortie
{True: lambda: print(X), False: lambda: print(Y)}[X < Y]()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.021503515541553497
    2. '\n' → logprob: -4.771503448486328
    3. '<|end|>' → logprob: -5.396503448486328
    4. 'import' → logprob: -5.646503448486328
    5. '\' → logprob: -6.771503448486328
    6. 'newline' → logprob: -7.146503448486328
    7. '<|end|>' → logprob: -7.396503448486328
    8. '' → logprob: -7.646503448486328
    9. '
' → logprob: -8.396503448486328
    10. '[' → logprob: -8.521503448486328

Token 4: ' ob' (ID: 1067)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01368186715990305
    2. ' ' → logprob: -6.013681888580322
    3. ' main' → logprob: -6.263681888580322
    4. ' process' → logprob: -6.388681888580322
    5. '<|end|>' → logprob: -6.888681888580322
    6. ' space' → logprob: -7.138681888580322
    7. '  ' → logprob: -7.263681888580322
    8. ' a' → logprob: -7.513681888580322
    9. ' def' → logprob: -7.513681888580322
    10. '```' → logprob: -7.763681888580322

Token 5: 'fusc' (ID: 96715)
  Prédit: 'fusc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fusc' → logprob: -0.08775599300861359
    2. 'f' → logprob: -2.8377559185028076
    3. 'ject' → logprob: -4.087756156921387
    4. 'fuscated' → logprob: -5.337756156921387
    5. 'fu' → logprob: -6.212756156921387
    6. 'fus' → logprob: -7.462756156921387
    7. '_f' → logprob: -7.587756156921387
    8. '_' → logprob: -7.712756156921387
    9. 'j' → logprob: -9.587756156921387
    10. 'fs' → logprob: -10.087756156921387

Token 6: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.00011880126112373546
    2. 'us' → logprob: -9.75011920928955
    3. 'at' → logprob: -11.25011920928955
    4. 'usc' → logprob: -11.25011920928955
    5. '```' → logprob: -11.75011920928955
    6. 'a' → logprob: -12.50011920928955
    7. 'ust' → logprob: -12.50011920928955
    8. 'atenate' → logprob: -13.12511920928955
    9. 'ator' → logprob: -13.37511920928955
    10. ' ate' → logprob: -13.37511920928955

Token 7: '(s' (ID: 1858)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3490440845489502
    2. '(' → logprob: -1.2240440845489502
    3. '_text' → logprob: -8.724043846130371
    4. '(_' → logprob: -9.224043846130371
    5. '_code' → logprob: -9.599043846130371
    6. '_token' → logprob: -9.974043846130371
    7. '_(' → logprob: -10.599043846130371
    8. ' (' → logprob: -10.724043846130371
    9. '_name' → logprob: -10.849043846130371
    10. '```' → logprob: -11.224043846130371

Token 8: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01639045588672161
    2. ')' → logprob: -4.141390323638916
    3. ':' → logprob: -8.391390800476074
    4. ',' → logprob: -9.516390800476074
    5. '[' → logprob: -10.891390800476074
    6. ' ):' → logprob: -11.391390800476074
    7. '):
' → logprob: -12.141390800476074
    8. '.' → logprob: -12.141390800476074
    9. 's' → logprob: -12.266390800476074
    10. '_' → logprob: -13.266390800476074

Token 9: ' t' (ID: 260)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.0187514778226614
    2. 'key' → logprob: -4.393751621246338
    3. ' k' → logprob: -5.518751621246338
    4. 'k' → logprob: -7.893751621246338
    5. ' n' → logprob: -7.893751621246338
    6. ' salt' → logprob: -7.893751621246338
    7. ' offset' → logprob: -8.26875114440918
    8. ' ' → logprob: -8.51875114440918
    9. ' i' → logprob: -9.39375114440918
    10. ' p' → logprob: -9.89375114440918

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.043440788984298706
    2. ')' → logprob: -3.168440818786621
    3. ':' → logprob: -8.418440818786621
    4. ',' → logprob: -8.793440818786621
    5. '):
' → logprob: -10.043440818786621
    6. ' ):' → logprob: -11.793440818786621
    7. ''):' → logprob: -12.168440818786621
    8. '=' → logprob: -13.043440818786621
    9. 's' → logprob: -13.418440818786621
    10. '"):' → logprob: -13.918440818786621

Token 11: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0846744254231453
    2. '   ' → logprob: -2.58467435836792
    3. '(' → logprob: -6.45967435836792
    4. '.' → logprob: -7.08467435836792
    5. ' :' → logprob: -7.20967435836792
    6. '_' → logprob: -7.45967435836792
    7. '):' → logprob: -7.45967435836792
    8. ' ' → logprob: -8.334674835205078
    9. ')' → logprob: -8.459674835205078
    10. ':
' → logprob: -8.709674835205078

Token 12: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9469826817512512
    2. ' return' → logprob: -1.1969826221466064
    3. ' ' → logprob: -1.9469826221466064
    4. 'return' → logprob: -2.8219826221466064
    5. 'r' → logprob: -3.4469826221466064
    6. ' result' → logprob: -4.4469828605651855
    7. 'result' → logprob: -4.5719828605651855
    8. 's' → logprob: -5.0719828605651855
    9. '    ' → logprob: -5.1969828605651855
    10. '_' → logprob: -5.1969828605651855

Token 13: ' Mult' (ID: 15431)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4014514684677124
    2. '   ' → logprob: -1.7764514684677124
    3. 'r' → logprob: -2.151451587677002
    4. 'result' → logprob: -2.151451587677002
    5. 'return' → logprob: -2.651451587677002
    6. ' return' → logprob: -2.651451587677002
    7. 's' → logprob: -2.901451587677002
    8. ' result' → logprob: -3.026451587677002
    9. 'n' → logprob: -3.651451587677002
    10. 'c' → logprob: -4.651451587677002

Token 14: 'ipl' (ID: 7840)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.15863631665706635
    2. 'i' → logprob: -2.7836363315582275
    3. 'iple' → logprob: -3.1586363315582275
    4. 'iline' → logprob: -4.408636093139648
    5. 'iplier' → logprob: -4.533636093139648
    6. 'ipy' → logprob: -4.658636093139648
    7. 'ipl' → logprob: -6.283636093139648
    8. 'il' → logprob: -6.283636093139648
    9. '```' → logprob: -6.533636093139648
    10. 'iples' → logprob: -7.408636093139648

Token 15: 'ie' (ID: 396)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.15256114304065704
    2. 'e' → logprob: -2.0275611877441406
    3. 'es' → logprob: -5.527561187744141
    4. 'ying' → logprob: -6.027561187744141
    5. '```' → logprob: -6.527561187744141
    6. 'er' → logprob: -6.777561187744141
    7. '#' → logprob: -8.90256118774414
    8. 'ies' → logprob: -9.15256118774414
    9. 'ed' → logprob: -9.27756118774414
    10. '   ' → logprob: -9.65256118774414

Token 16: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.20170480012893677
    2. 's' → logprob: -1.701704740524292
    3. 'd' → logprob: -8.576704978942871
    4. 'rs' → logprob: -10.076704978942871
    5. '```' → logprob: -10.826704978942871
    6. ' ' → logprob: -11.201704978942871
    7. 'z' → logprob: -11.826704978942871
    8. '(s' → logprob: -11.951704978942871
    9. ' r' → logprob: -12.451704978942871
    10. ' s' → logprob: -13.326704978942871

Token 17: ' chaîne' (ID: 89288)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.34017759561538696
    2. 's' → logprob: -1.5901775360107422
    3. ' ' → logprob: -3.090177536010742
    4. 'n' → logprob: -5.215177536010742
    5. ' r' → logprob: -5.340177536010742
    6. 'nt' → logprob: -5.465177536010742
    7. ' s' → logprob: -5.590177536010742
    8. 't' → logprob: -5.965177536010742
    9. '   ' → logprob: -6.465177536010742
    10. 'x' → logprob: -6.465177536010742

Token 18: ' s' (ID: 265)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.18054357171058655
    2. 'd' → logprob: -2.0555436611175537
    3. 's' → logprob: -3.4305436611175537
    4. ' ' → logprob: -6.180543422698975
    5. '(' → logprob: -7.805543422698975
    6. 'c' → logprob: -8.055543899536133
    7. 'ur' → logprob: -8.430543899536133
    8. ')' → logprob: -8.680543899536133
    9. 'nt' → logprob: -8.805543899536133
    10. '`' → logprob: -8.805543899536133

Token 19: ',' (ID: 11)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.013612722046673298
    2. ' par' → logprob: -5.388612747192383
    3. 'par' → logprob: -5.513612747192383
    4. '*' → logprob: -6.138612747192383
    5. ',' → logprob: -7.513612747192383
    6. 'd' → logprob: -8.013612747192383
    7. ' by' → logprob: -8.388612747192383
    8. 's' → logprob: -8.388612747192383
    9. 'by' → logprob: -8.388612747192383
    10. ' ' → logprob: -8.638612747192383

Token 20: ' t' (ID: 260)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.06451001763343811
    2. 'par' → logprob: -3.9395101070404053
    3. ' by' → logprob: -4.814509868621826
    4. '   ' → logprob: -5.064509868621826
    5. '*' → logprob: -5.314509868621826
    6. ' ' → logprob: -5.439509868621826
    7. ''' → logprob: -5.689509868621826
    8. 'len' → logprob: -5.814509868621826
    9. ' len' → logprob: -6.314509868621826
    10. ' en' → logprob: -6.564509868621826

Token 21: ' fois' (ID: 14697)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.1648196280002594
    2. 'par' → logprob: -2.6648197174072266
    3. 'ur' → logprob: -3.5398197174072266
    4. 'r' → logprob: -3.5398197174072266
    5. '*' → logprob: -4.789819717407227
    6. ' ' → logprob: -6.664819717407227
    7. ' by' → logprob: -6.664819717407227
    8. ' *' → logprob: -6.789819717407227
    9. 'imes' → logprob: -6.789819717407227
    10. ' fois' → logprob: -6.914819717407227

Token 22: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13124267756938934
    2. 'return' → logprob: -2.8812427520751953
    3. ' return' → logprob: -2.8812427520751953
    4. '\n' → logprob: -5.506242752075195
    5. 'n' → logprob: -6.006242752075195
    6. '\' → logprob: -7.131242752075195
    7. ' ' → logprob: -7.506242752075195
    8. ''' → logprob: -8.006242752075195
    9. '```' → logprob: -8.131242752075195
    10. '    
' → logprob: -8.381242752075195

Token 23: 't' (ID: 83)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029441863298416138
    2. '*' → logprob: -6.252943992614746
    3. ' )' → logprob: -7.377943992614746
    4. 's' → logprob: -8.502943992614746
    5. ')
' → logprob: -10.377943992614746
    6. ')*' → logprob: -11.002943992614746
    7. 't' → logprob: -11.252943992614746
    8. ' s' → logprob: -11.502943992614746
    9. ' *' → logprob: -11.502943992614746
    10. '*)' → logprob: -11.627943992614746

Token 24: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016949551180005074
    2. '*' → logprob: -4.516949653625488
    3. ' )' → logprob: -5.391949653625488
    4. ' *' → logprob: -6.891949653625488
    5. '+' → logprob: -8.891949653625488
    6. ' ' → logprob: -10.141949653625488
    7. '*)' → logprob: -10.141949653625488
    8. ' ' → logprob: -11.266949653625488
    9. ',' → logprob: -11.641949653625488
    10. '%' → logprob: -11.766949653625488

Token 25: ' entier' (ID: 80473)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6416866779327393
    2. 'ent' → logprob: -1.7666866779327393
    3. ')' → logprob: -1.8916866779327393
    4. ' entier' → logprob: -2.3916866779327393
    5. 'ter' → logprob: -2.8916866779327393
    6. 't' → logprob: -3.1416866779327393
    7. '```' → logprob: -3.1416866779327393
    8. ' s' → logprob: -3.6416866779327393
    9. '*' → logprob: -3.6416866779327393
    10. 'int' → logprob: -3.8916866779327393

Token 26: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.398067828034982e-05
    2. '')' → logprob: -10.87507438659668
    3. ' )' → logprob: -11.25007438659668
    4. '   ' → logprob: -11.37507438659668
    5. '*' → logprob: -11.75007438659668
    6. '),' → logprob: -12.37507438659668
    7. ').' → logprob: -13.00007438659668
    8. ',' → logprob: -13.00007438659668
    9. ')
' → logprob: -13.25007438659668
    10. '")' → logprob: -13.50007438659668

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02645832486450672
    2. ' return' → logprob: -4.276458263397217
    3. 'return' → logprob: -4.651458263397217
    4. ' ' → logprob: -7.776458263397217
    5. ':' → logprob: -8.151458740234375
    6. '*' → logprob: -8.151458740234375
    7. '```' → logprob: -8.151458740234375
    8. ',' → logprob: -8.526458740234375
    9. ')' → logprob: -8.526458740234375
    10. 's' → logprob: -8.776458740234375

Token 28: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.22188660502433777
    2. 'return' (adapté à ' return') → logprob: -1.8468866348266602
    3. '   ' → logprob: -3.22188663482666
    4. ' ' → logprob: -7.22188663482666
    5. '*' → logprob: -8.97188663482666
    6. ')' → logprob: -9.09688663482666
    7. 's' → logprob: -9.22188663482666
    8. ' s' → logprob: -9.97188663482666
    9. 'r' → logprob: -10.59688663482666
    10. ' *' → logprob: -10.72188663482666

Token 29: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4740845859050751
    2. 's' → logprob: -0.9740846157073975
    3. ' ' → logprob: -13.224084854125977
    4. '(s' → logprob: -13.349084854125977
    5. 'str' → logprob: -14.349084854125977
    6. ' str' → logprob: -14.474084854125977
    7. '"s' → logprob: -14.599084854125977
    8. ''s' → logprob: -14.786584854125977
    9. '"' → logprob: -15.224084854125977
    10. ' ' → logprob: -15.286584854125977

Token 30: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5766563415527344
    2. '*' → logprob: -0.8266563415527344
    3. '*t' → logprob: -7.451656341552734
    4. '+' → logprob: -9.201656341552734
    5. '*s' → logprob: -11.826656341552734
    6. ' +' → logprob: -11.951656341552734
    7. '*object' → logprob: -12.201656341552734
    8. ' ' → logprob: -13.451656341552734
    9. '*f' → logprob: -13.576656341552734
    10. '*l' → logprob: -13.576656341552734

Token 31: ' int' (ID: 677)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.12693051993846893
    2. ' t' → logprob: -2.1269304752349854
    3. 'int' → logprob: -14.001930236816406
    4. '	t' → logprob: -14.251930236816406
    5. '`t' → logprob: -14.626930236816406
    6. '(t' → logprob: -15.876930236816406
    7. ' ' → logprob: -16.251930236816406
    8. '_t' → logprob: -16.626930236816406
    9. '   ' → logprob: -16.626930236816406
    10. ' ' → logprob: -16.876930236816406

Token 32: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.011052886955440044
    2. '(' → logprob: -4.511053085327148
    3. ' (' → logprob: -12.511053085327148
    4. '(s' → logprob: -14.011053085327148
    5. 't' → logprob: -16.26105308532715
    6. ' ' → logprob: -16.51105308532715
    7. '((' → logprob: -16.63605308532715
    8. '(T' → logprob: -17.26105308532715
    9. '("("' → logprob: -17.26105308532715
    10. '(tt' → logprob: -17.38605308532715

Token 33: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -13.875000953674316
    3. '))' → logprob: -16.750001907348633
    4. ')))' → logprob: -17.250001907348633
    5. '')' → logprob: -17.250001907348633
    6. ')
' → logprob: -17.500001907348633
    7. ')return' → logprob: -18.125001907348633
    8. ')`' → logprob: -19.125001907348633
    9. '}' → logprob: -19.250001907348633
    10. '),' → logprob: -19.375001907348633

Token 34: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1386632919311523
    2. '\n' → logprob: -1.1386632919311523
    3. '<|end|>' → logprob: -1.2636632919311523
    4. '```' → logprob: -4.138663291931152
    5. '#' → logprob: -4.388663291931152
    6. 'newline' → logprob: -4.638663291931152
    7. '

' → logprob: -4.638663291931152
    8. ')' → logprob: -5.013663291931152
    9. '(' → logprob: -5.013663291931152
    10. '<|end|>' → logprob: -5.763663291931152

Token 35: ' utilise' (ID: 70283)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8732877969741821
    2. ' ' → logprob: -0.9982877969741821
    3. '\n' → logprob: -3.3732876777648926
    4. 's' → logprob: -3.8732876777648926
    5. 'import' → logprob: -3.8732876777648926
    6. 'def' → logprob: -3.9982876777648926
    7. '<|end|>' → logprob: -4.123287677764893
    8. '<|end|>' → logprob: -4.373287677764893
    9. ' #' → logprob: -4.623287677764893
    10. 'print' → logprob: -4.623287677764893

Token 36: ' sys' (ID: 12228)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.5396203994750977
    2. '(ob' → logprob: -1.5396203994750977
    3. '(' → logprob: -2.6646203994750977
    4. '(sys' → logprob: -2.9146203994750977
    5. ' ob' → logprob: -3.5396203994750977
    6. '(s' → logprob: -4.164620399475098
    7. 'def' → logprob: -4.664620399475098
    8. ' (' → logprob: -4.914620399475098
    9. ' ' → logprob: -5.914620399475098
    10. ' sys' → logprob: -6.039620399475098

Token 37: '.stdin' (ID: 93480)
  Prédit: '.argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.argv' → logprob: -0.22629083693027496
    2. '.' → logprob: -2.3512909412384033
    3. 'import' → logprob: -3.1012909412384033
    4. 'argv' → logprob: -3.4762909412384033
    5. ' .' → logprob: -4.101290702819824
    6. ' import' → logprob: -5.851290702819824
    7. '.import' → logprob: -5.976290702819824
    8. '.stdin' → logprob: -5.976290702819824
    9. '(argv' → logprob: -6.476290702819824
    10. '[' → logprob: -6.976290702819824

Token 38: ' directement' (ID: 52317)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6796441674232483
    2. 'for' → logprob: -1.0546441078186035
    3. '.readline' → logprob: -2.0546441078186035
    4. ' for' → logprob: -5.0546441078186035
    5. '.for' → logprob: -5.5546441078186035
    6. '.readlines' → logprob: -5.6796441078186035
    7. '.read' → logprob: -6.3046441078186035
    8. 'import' → logprob: -7.6796441078186035
    9. '.write' → logprob: -8.679644584655762
    10. '[:]' → logprob: -8.804644584655762

Token 39: ' plutôt' (ID: 40017)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08899398893117905
    2. '
' → logprob: -3.088994026184082
    3. ' for' → logprob: -3.838994026184082
    4. 'import' → logprob: -5.088994026184082
    5. '\n' → logprob: -5.463994026184082
    6. '.' → logprob: -5.963994026184082
    7. '\' → logprob: -6.338994026184082
    8. '' → logprob: -6.713994026184082
    9. '```' → logprob: -7.588994026184082
    10. 'def' → logprob: -8.338994026184082

Token 40: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.48168063163757324
    2. ' que' → logprob: -1.3566806316375732
    3. 'qu' → logprob: -2.4816806316375732
    4. '<|end|>' → logprob: -3.4816806316375732
    5. ' qu' → logprob: -6.231680870056152
    6. 'import' → logprob: -6.606680870056152
    7. '#' → logprob: -6.606680870056152
    8. '.' → logprob: -7.106680870056152
    9. 'than' → logprob: -7.106680870056152
    10. 'pour' → logprob: -7.731680870056152

Token 41: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5832769274711609
    2. ' input' → logprob: -1.7082769870758057
    3. 'sys' → logprob: -2.3332769870758057
    4. ' d' → logprob: -2.5832769870758057
    5. 'd' → logprob: -3.0832769870758057
    6. ' sys' → logprob: -3.7082769870758057
    7. 'de' → logprob: -5.833276748657227
    8. ' de' → logprob: -5.958276748657227
    9. 'import' → logprob: -6.708276748657227
    10. 'print' → logprob: -6.708276748657227

Token 42: '()
' (ID: 1234)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015272366814315319
    2. ' for' → logprob: -4.89027214050293
    3. '\n' → logprob: -5.39027214050293
    4. '
' → logprob: -6.51527214050293
    5. 'import' → logprob: -7.76527214050293
    6. ':' → logprob: -8.51527214050293
    7. '\' → logprob: -8.51527214050293
    8. 'if' → logprob: -8.64027214050293
    9. '.' → logprob: -8.76527214050293
    10. '```' → logprob: -9.01527214050293

Token 43: 'src' (ID: 7205)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0035192950163036585
    2. 'if' → logprob: -6.503519058227539
    3. 's' → logprob: -7.128519058227539
    4. ' for' → logprob: -7.378519058227539
    5. 'import' → logprob: -8.503519058227539
    6. 'data' → logprob: -9.003519058227539
    7. 'input' → logprob: -9.253519058227539
    8. 'result' → logprob: -9.753519058227539
    9. 'line' → logprob: -10.628519058227539
    10. 'lines' → logprob: -11.003519058227539

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4387931525707245
    2. '=' → logprob: -1.1887931823730469
    3. '_' → logprob: -3.313793182373047
    4. 'r' → logprob: -5.313793182373047
    5. '_data' → logprob: -5.938793182373047
    6. 's' → logprob: -7.063793182373047
    7. '_str' → logprob: -7.188793182373047
    8. 'data' → logprob: -7.313793182373047
    9. ' ' → logprob: -7.563793182373047
    10. '_=' → logprob: -7.563793182373047

Token 45: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.05490778014063835
    2. ' sys' → logprob: -2.92990779876709
    3. '	sys' → logprob: -12.05490779876709
    4. '(sys' → logprob: -12.42990779876709
    5. '=sys' → logprob: -12.42990779876709
    6. '''.' → logprob: -12.67990779876709
    7. 'input' → logprob: -13.17990779876709
    8. '""' → logprob: -13.17990779876709
    9. '"' → logprob: -13.67990779876709
    10. '''' → logprob: -14.80490779876709

Token 46: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00912430789321661
    2. '.' → logprob: -4.759124279022217
    3. '.stdout' → logprob: -7.759124279022217
    4. '.argv' → logprob: -10.634124755859375
    5. '.std' → logprob: -10.634124755859375
    6. '.st' → logprob: -10.759124755859375
    7. ' .' → logprob: -12.509124755859375
    8. 'stdin' → logprob: -12.634124755859375
    9. '.stderr' → logprob: -12.759124755859375
    10. '.standard' → logprob: -13.384124755859375

Token 47: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.5538830161094666
    2. '.read' → logprob: -1.5538830757141113
    3. '.readlines' → logprob: -1.8038830757141113
    4. '.' → logprob: -3.0538830757141113
    5. 'read' → logprob: -6.428883075714111
    6. '.Read' → logprob: -8.928882598876953
    7. '<|end|>' → logprob: -9.678882598876953
    8. ' .' → logprob: -9.928882598876953
    9. '.write' → logprob: -10.303882598876953
    10. '```' → logprob: -10.303882598876953

Token 48: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -9.746380237629637e-05
    2. '()
' → logprob: -10.375097274780273
    3. '().' → logprob: -10.625097274780273
    4. '(' → logprob: -11.125097274780273
    5. '()

' → logprob: -11.875097274780273
    6. '();' → logprob: -12.500097274780273
    7. '())' → logprob: -12.625097274780273
    8. '()<' → logprob: -12.750097274780273
    9. '()`' → logprob: -13.375097274780273
    10. ' ()' → logprob: -13.500097274780273

Token 49: 'A' (ID: 32)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22218935191631317
    2. 'while' → logprob: -1.9721893072128296
    3. 'print' → logprob: -4.097189426422119
    4. 's' → logprob: -4.222189426422119
    5. 'def' → logprob: -5.097189426422119
    6. 'line' → logprob: -5.222189426422119
    7. 'input' → logprob: -5.847189426422119
    8. 'target' → logprob: -5.972189426422119
    9. 't' → logprob: -6.097189426422119
    10. 'dest' → logprob: -6.347189426422119

Token 50: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0623759999871254
    2. ',' → logprob: -3.312376022338867
    3. '=' → logprob: -3.812376022338867
    4. 'rg' → logprob: -7.937376022338867
    5. 'B' → logprob: -8.062376022338867
    6. ' ' → logprob: -8.187376022338867
    7. ',B' → logprob: -8.562376022338867
    8. '=input' → logprob: -9.187376022338867
    9. 'rray' → logprob: -9.437376022338867
    10. 's' → logprob: -9.937376022338867

Token 51: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.25250962376594543
    2. ' B' → logprob: -1.502509593963623
    3. ' ' → logprob: -8.252510070800781
    4. ' =' → logprob: -9.752510070800781
    5. 'T' → logprob: -9.877510070800781
    6. 'b' → logprob: -10.002510070800781
    7. 't' → logprob: -10.127510070800781
    8. 'space' → logprob: -10.627510070800781
    9. 's' → logprob: -10.752510070800781
    10. '=' → logprob: -10.752510070800781

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14269302785396576
    2. '=' → logprob: -2.017693042755127
    3. ' ' → logprob: -11.017692565917969
    4. ',' → logprob: -14.392692565917969
    5. ' ' → logprob: -15.517692565917969
    6. '=sys' → logprob: -15.892692565917969
    7. '=line' → logprob: -16.45519256591797
    8. '＝' → logprob: -16.58019256591797
    9. '  ' → logprob: -17.20519256591797
    10. ')' → logprob: -17.20519256591797

Token 53: ' (' (ID: 350)
  Prédit: 'src'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'src' → logprob: -0.2869831323623657
    2. ' src' → logprob: -2.161983013153076
    3. 'map' → logprob: -2.536983013153076
    4. ' map' → logprob: -2.911983013153076
    5. '[src' → logprob: -7.536983013153076
    6. '(src' → logprob: -8.161983489990234
    7. 'list' → logprob: -10.286983489990234
    8. '[' → logprob: -11.786983489990234
    9. '(map' → logprob: -11.786983489990234
    10. ' list' → logprob: -11.786983489990234

Token 54: 'lambda' (ID: 35280)
  Prédit: 'src'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'src' → logprob: -0.004229170270264149
    2. 'map' → logprob: -6.2542290687561035
    3. 'int' → logprob: -6.7542290687561035
    4. ' src' → logprob: -6.8792290687561035
    5. 'ob' → logprob: -10.379229545593262
    6. '[src' → logprob: -10.629229545593262
    7. ' map' → logprob: -11.129229545593262
    8. ')' → logprob: -12.504229545593262
    9. '(src' → logprob: -12.629229545593262
    10. 'list' → logprob: -12.629229545593262

Token 55: ' lst' (ID: 33384)
  Prédit: 'src'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'src' → logprob: -0.5259767770767212
    2. ' src' → logprob: -1.1509767770767212
    3. ' x' → logprob: -2.7759766578674316
    4. 'x' → logprob: -4.150976657867432
    5. ':' → logprob: -5.025976657867432
    6. 'int' → logprob: -6.150976657867432
    7. ' int' → logprob: -6.275976657867432
    8. ' s' → logprob: -7.525976657867432
    9. 'lambda' → logprob: -7.525976657867432
    10. ' lambda' → logprob: -7.900976657867432

Token 56: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008533607237040997
    2. ' :' → logprob: -5.008533477783203
    3. ':list' → logprob: -6.758533477783203
    4. 'lst' → logprob: -7.633533477783203
    5. ' lst' → logprob: -9.383533477783203
    6. ':int' → logprob: -11.258533477783203
    7. ':l' → logprob: -11.383533477783203
    8. 's' → logprob: -11.383533477783203
    9. 'x' → logprob: -12.008533477783203
    10. 'list' → logprob: -12.383533477783203

Token 57: ' (' (ID: 350)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.24775156378746033
    2. 'int' → logprob: -2.872751474380493
    3. ' ob' → logprob: -2.872751474380493
    4. ' int' → logprob: -3.497751474380493
    5. 'lst' → logprob: -3.497751474380493
    6. ' [' → logprob: -4.497751712799072
    7. '[' → logprob: -4.747751712799072
    8. ' lst' → logprob: -4.747751712799072
    9. 'ob' → logprob: -4.997751712799072
    10. '(int' → logprob: -6.122751712799072

Token 58: 'lst' (ID: 65430)
  Prédit: 'lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.1695246547460556
    2. 'int' → logprob: -2.544524669647217
    3. ' lst' → logprob: -3.044524669647217
    4. 'ob' → logprob: -4.294524669647217
    5. ' int' → logprob: -4.919524669647217
    6. ' ob' → logprob: -5.419524669647217
    7. '[int' → logprob: -5.794524669647217
    8. 'list' → logprob: -8.732024192810059
    9. 'str' → logprob: -9.044524192810059
    10. '[' → logprob: -9.169524192810059

Token 59: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008303685113787651
    2. '[int' → logprob: -5.633303642272949
    3. 'int' → logprob: -6.758303642272949
    4. ')' → logprob: -7.133303642272949
    5. 'split' → logprob: -7.383303642272949
    6. '.strip' → logprob: -7.633303642272949
    7. '.split' → logprob: -8.00830364227295
    8. '(int' → logprob: -8.25830364227295
    9. '.pop' → logprob: -8.75830364227295
    10. '(' → logprob: -8.88330364227295

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.53050296427682e-05
    2. ' ' → logprob: -10.12508487701416
    3. '1' → logprob: -11.37508487701416
    4. '-' → logprob: -11.50008487701416
    5. 'int' → logprob: -11.50008487701416
    6. '   ' → logprob: -12.00008487701416
    7. 'i' → logprob: -13.50008487701416
    8. '2' → logprob: -13.81258487701416
    9. '  ' → logprob: -14.37508487701416
    10. ':' → logprob: -14.62508487701416

Token 61: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.017309773713350296
    2. ']' → logprob: -4.267309665679932
    3. '].' → logprob: -5.892309665679932
    4. ' ],' → logprob: -9.01731014251709
    5. ']*' → logprob: -9.89231014251709
    6. '*' → logprob: -9.89231014251709
    7. ',' → logprob: -10.14231014251709
    8. '][' → logprob: -10.76731014251709
    9. ']+' → logprob: -11.01731014251709
    10. '-' → logprob: -11.76731014251709

Token 62: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.3917003870010376
    2. ' lst' → logprob: -1.1417003870010376
    3. 'int' → logprob: -5.891700267791748
    4. ' int' → logprob: -6.266700267791748
    5. ' ' → logprob: -9.641700744628906
    6. '    ' → logprob: -10.766700744628906
    7. '  ' → logprob: -10.891700744628906
    8. '   ' → logprob: -11.016700744628906
    9. '(lst' → logprob: -12.079200744628906
    10. 'list' → logprob: -12.079200744628906

Token 63: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03455198183655739
    2. '1' → logprob: -3.4095520973205566
    3. '-' → logprob: -7.534552097320557
    4. '[-' → logprob: -8.659551620483398
    5. ']' → logprob: -9.909551620483398
    6. '])' → logprob: -10.534551620483398
    7. '][' → logprob: -10.659551620483398
    8. '```' → logprob: -11.159551620483398
    9. '2' → logprob: -11.284551620483398
    10. '   ' → logprob: -11.284551620483398

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4285862057004124e-05
    2. ' ' → logprob: -10.87503433227539
    3. '-' → logprob: -12.50003433227539
    4. '   ' → logprob: -12.50003433227539
    5. '])' → logprob: -13.06253433227539
    6. '0' → logprob: -13.37503433227539
    7. '2' → logprob: -13.68753433227539
    8. '```' → logprob: -14.56253433227539
    9. '  ' → logprob: -14.81253433227539
    10. ':' → logprob: -15.50003433227539

Token 65: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.09656746685504913
    2. '))' → logprob: -2.971567392349243
    3. ']' → logprob: -3.721567392349243
    4. ')))' → logprob: -5.096567630767822
    5. ')' → logprob: -5.596567630767822
    6. '])' → logprob: -5.596567630767822
    7. ' if' → logprob: -7.096567630767822
    8. '.split' → logprob: -7.221567630767822
    9. '.strip' → logprob: -8.471567153930664
    10. ' ' → logprob: -8.596567153930664

Token 66: '(' (ID: 7)
  Prédit: '(src'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(src' → logprob: -0.00418299064040184
    2. '(' → logprob: -6.129182815551758
    3. 'src' → logprob: -7.004182815551758
    4. '(sys' → logprob: -7.379182815551758
    5. '(list' → logprob: -8.629182815551758
    6. ' (' → logprob: -9.129182815551758
    7. '[src' → logprob: -9.879182815551758
    8. '(s' → logprob: -10.129182815551758
    9. '([' → logprob: -10.629182815551758
    10. '(sr' → logprob: -10.879182815551758

Token 67: 'src' (ID: 7205)
  Prédit: 'src'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'src' → logprob: -0.02165040373802185
    2. '[src' → logprob: -4.021650314331055
    3. ' src' → logprob: -5.896650314331055
    4. 'list' → logprob: -7.271650314331055
    5. ' list' → logprob: -10.646650314331055
    6. '(src' → logprob: -11.271650314331055
    7. '[' → logprob: -12.396650314331055
    8. ' [' → logprob: -13.271650314331055
    9. '<src' → logprob: -13.396650314331055
    10. 'map' → logprob: -13.396650314331055

Token 68: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.673547563375905e-05
    2. '()' → logprob: -9.500086784362793
    3. '(' → logprob: -12.000086784362793
    4. ' ().' → logprob: -12.125086784362793
    5. '('' → logprob: -16.500085830688477
    6. '()
' → logprob: -16.625085830688477
    7. '().'' → logprob: -18.125085830688477
    8. ' ()' → logprob: -18.250085830688477
    9. '())' → logprob: -18.250085830688477
    10. '("").' → logprob: -18.250085830688477

Token 69: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.01338727306574583
    2. 'split' → logprob: -5.013387203216553
    3. 'rstrip' → logprob: -5.013387203216553
    4. ' strip' → logprob: -13.888387680053711
    5. 'replace' → logprob: -15.388387680053711
    6. '.strip' → logprob: -16.13838768005371
    7. ' split' → logprob: -16.76338768005371
    8. 'rs' → logprob: -18.38838768005371
    9. '.rstrip' → logprob: -18.51338768005371
    10. '```' → logprob: -18.88838768005371

Token 70: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.020749162882566452
    2. '()' → logprob: -4.270749092102051
    3. '()))' → logprob: -5.145749092102051
    4. ')' → logprob: -8.02074909210205
    5. '(' → logprob: -8.27074909210205
    6. '))' → logprob: -10.02074909210205
    7. '('' → logprob: -10.14574909210205
    8. ' ())' → logprob: -10.52074909210205
    9. '(),' → logprob: -11.14574909210205
    10. '())
' → logprob: -11.52074909210205

Token 71: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.661626634420827e-05
    2. ')' → logprob: -9.500086784362793
    3. '#' → logprob: -12.625086784362793
    4. 'result' → logprob: -12.875086784362793
    5. '#print' → logprob: -13.500086784362793
    6. ' print' → logprob: -13.625086784362793
    7. ')
' → logprob: -14.500086784362793
    8. 'if' → logprob: -14.625086784362793
    9. 'C' → logprob: -15.000086784362793
    10. 'for' → logprob: -15.000086784362793

Token 72: ' variables' (ID: 13955)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5451681974809617e-05
    2. ' print' → logprob: -11.125015258789062
    3. 'result' → logprob: -14.750015258789062
    4. 'pr' → logprob: -16.125015258789062
    5. 'for' → logprob: -17.125015258789062
    6. 'import' → logprob: -18.000015258789062
    7. 'sys' → logprob: -18.000015258789062
    8. 'prin' → logprob: -18.500015258789062
    9. '#' → logprob: -18.625015258789062
    10. '#print' → logprob: -19.250015258789062

Token 73: ' à' (ID: 1221)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9199249744415283
    2. 'result' → logprob: -1.5449249744415283
    3. ' =' → logprob: -1.9199249744415283
    4. 'C' → logprob: -2.7949249744415283
    5. 'a' → logprob: -3.0449249744415283
    6. 's' → logprob: -3.1699249744415283
    7. 'ob' → logprob: -3.6699249744415283
    8. '=' → logprob: -4.044924736022949
    9. 'print' → logprob: -4.294924736022949
    10. 'res' → logprob: -4.794924736022949

Token 74: ' un' (ID: 537)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.7406240105628967
    2. 'aff' → logprob: -0.9906240105628967
    3. 'print' → logprob: -3.615623950958252
    4. 'part' → logprob: -3.740623950958252
    5. 'la' → logprob: -3.740623950958252
    6. ' continuer' → logprob: -4.740623950958252
    7. ' ob' → logprob: -4.865623950958252
    8. 'min' → logprob: -4.990623950958252
    9. ' la' → logprob: -5.365623950958252
    10. 'chaine' → logprob: -5.740623950958252

Token 75: ' seul' (ID: 33041)
  Prédit: 'ité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.9777531027793884
    2. 'ique' → logprob: -1.7277531623840332
    3. 'it' → logprob: -2.102753162384033
    4. 'e' → logprob: -2.852753162384033
    5. 't' → logprob: -3.727753162384033
    6. ' seul' → logprob: -3.977753162384033
    7. 'ic' → logprob: -4.102753162384033
    8. 'itaire' → logprob: -4.227753162384033
    9. '```' → logprob: -4.352753162384033
    10. 'uple' → logprob: -4.852753162384033

Token 76: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.3452244699001312
    2. '=' → logprob: -2.345224380493164
    3. 'underscore' → logprob: -2.595224380493164
    4. '_' → logprob: -2.970224380493164
    5. 'token' → logprob: -3.970224380493164
    6. ' =' → logprob: -4.220224380493164
    7. 's' → logprob: -4.345224380493164
    8. ' caractère' → logprob: -5.345224380493164
    9. 'c' → logprob: -5.595224380493164
    10. 'ligne' → logprob: -5.970224380493164

Token 77: ' maj' (ID: 15575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8637388348579407
    2. 'C' → logprob: -1.488738775253296
    3. 's' → logprob: -1.613738775253296
    4. 'i' → logprob: -2.988738775253296
    5. 'result' → logprob: -3.863738775253296
    6. 'A' → logprob: -3.988738775253296
    7. 'x' → logprob: -4.238739013671875
    8. 'c' → logprob: -4.488739013671875
    9. 'r' → logprob: -4.613739013671875
    10. 'S' → logprob: -5.488739013671875

Token 78: 'usc' (ID: 30081)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3054868280887604
    2. 'a' → logprob: -2.4304869174957275
    3. 'E' → logprob: -2.8054869174957275
    4. 'e' → logprob: -3.9304869174957275
    5. 'I' → logprob: -4.430486679077148
    6. 'r' → logprob: -4.430486679077148
    7. 'u' → logprob: -5.055486679077148
    8. 'S' → logprob: -5.055486679077148
    9. 'B' → logprob: -5.305486679077148
    10. 'X' → logprob: -5.305486679077148

Token 79: 'ule' (ID: 1601)
  Prédit: 'ale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.030524656176567078
    2. 'ule' → logprob: -3.530524730682373
    3. '```' → logprob: -8.030524253845215
    4. '#' → logprob: -9.405524253845215
    5. 'al' → logprob: -9.655524253845215
    6. 'le' → logprob: -10.030524253845215
    7. 'ales' → logprob: -10.405524253845215
    8. 'але' → logprob: -10.405524253845215
    9. 'Ale' → logprob: -10.530524253845215
    10. '   ' → logprob: -10.905524253845215

Token 80: '
' (ID: 198)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7471181154251099
    2. 'A' → logprob: -1.3721181154251099
    3. 'S' → logprob: -1.8721181154251099
    4. 'a' → logprob: -3.2471179962158203
    5. 's' → logprob: -3.4971179962158203
    6. 'result' → logprob: -4.12211799621582
    7. 'R' → logprob: -4.87211799621582
    8. 'print' → logprob: -4.99711799621582
    9. 'O' → logprob: -5.37211799621582
    10. 'I' → logprob: -5.74711799621582

Token 81: 'X' (ID: 55)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.5844795107841492
    2. 'result' → logprob: -2.209479570388794
    3. 'print' → logprob: -2.459479570388794
    4. 'R' → logprob: -2.584479570388794
    5. 'A' → logprob: -2.709479570388794
    6. 'S' → logprob: -3.459479570388794
    7. 'O' → logprob: -3.584479570388794
    8. 'a' → logprob: -3.959479570388794
    9. 's' → logprob: -4.584479331970215
    10. 'r' → logprob: -4.834479331970215

Token 82: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.283671498298645
    2. ' =' → logprob: -1.533671498298645
    3. ',Y' → logprob: -4.0336713790893555
    4. 'Y' → logprob: -4.9086713790893555
    5. '=' → logprob: -5.2836713790893555
    6. ',y' → logprob: -8.658671379089355
    7. 'A' → logprob: -8.908671379089355
    8. ' ,' → logprob: -9.283671379089355
    9. '1' → logprob: -9.408671379089355
    10. ' Y' → logprob: -9.533671379089355

Token 83: ' ob' (ID: 1067)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.20873498916625977
    2. 'A' → logprob: -1.9587349891662598
    3. ' ob' → logprob: -3.7087349891662598
    4. 'int' → logprob: -4.08373498916626
    5. ' A' → logprob: -6.08373498916626
    6. 'B' → logprob: -6.70873498916626
    7. ' int' → logprob: -7.45873498916626
    8. '0' → logprob: -7.45873498916626
    9. ''A' → logprob: -8.083734512329102
    10. ''' → logprob: -9.083734512329102

Token 84: 'fusc' (ID: 96715)
  Prédit: 'fusc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fusc' → logprob: -3.297462171758525e-05
    2. 'usc' → logprob: -10.875033378601074
    3. 'f' → logprob: -11.625033378601074
    4. 'fus' → logprob: -12.875033378601074
    5. 'fuscated' → logprob: -13.625033378601074
    6. 'fu' → logprob: -14.250033378601074
    7. 'us' → logprob: -15.250033378601074
    8. 'ust' → logprob: -16.500032424926758
    9. 'uf' → logprob: -16.625032424926758
    10. 'A' → logprob: -16.625032424926758

Token 85: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -1.0280383548888494e-06
    2. 'a' → logprob: -15.000000953674316
    3. 'X' → logprob: -15.375000953674316
    4. 's' → logprob: -16.375001907348633
    5. 'x' → logprob: -16.875001907348633
    6. 'âte' → logprob: -17.125001907348633
    7. 'ATE' → logprob: -17.250001907348633
    8. 'at' → logprob: -17.250001907348633
    9. 'atex' → logprob: -17.250001907348633
    10. 't' → logprob: -17.500001907348633

Token 86: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.003286678809672594
    2. '(' → logprob: -5.878286838531494
    3. '(X' → logprob: -8.253286361694336
    4. '(B' → logprob: -8.628286361694336
    5. '('' → logprob: -11.378286361694336
    6. 'A' → logprob: -11.628286361694336
    7. ' (' → logprob: -12.128286361694336
    8. '(s' → logprob: -12.503286361694336
    9. ')(' → logprob: -13.128286361694336
    10. ')' → logprob: -13.378286361694336

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008940834552049637
    2. ' ,' → logprob: -4.883940696716309
    3. ',B' → logprob: -6.633940696716309
    4. ',b' → logprob: -12.133940696716309
    5. 'B' → logprob: -12.258940696716309
    6. ',X' → logprob: -12.758940696716309
    7. ' ' → logprob: -13.133940696716309
    8. '   ' → logprob: -14.383940696716309
    9. ',int' → logprob: -14.758940696716309
    10. '  ' → logprob: -15.071440696716309

Token 88: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.02632990851998329
    2. ' B' → logprob: -3.65132999420166
    3. ' ' → logprob: -11.27632999420166
    4. '1' → logprob: -12.77632999420166
    5. '2' → logprob: -12.77632999420166
    6. 'int' → logprob: -13.02632999420166
    7. '   ' → logprob: -13.77632999420166
    8. '3' → logprob: -13.90132999420166
    9. '	B' → logprob: -14.02632999420166
    10. '7' → logprob: -14.15132999420166

Token 89: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015562419139314443
    2. '))' → logprob: -8.875155448913574
    3. ' )' → logprob: -11.500155448913574
    4. ')
' → logprob: -13.000155448913574
    5. ')))' → logprob: -13.375155448913574
    6. ')`' → logprob: -14.625155448913574
    7. ')#' → logprob: -15.500155448913574
    8. '[' → logprob: -15.500155448913574
    9. ')

' → logprob: -15.625155448913574
    10. ' ' → logprob: -16.00015640258789

Token 90: 'Y' (ID: 56)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003777648089453578
    2. 'X' → logprob: -8.000377655029297
    3. '#' → logprob: -11.625377655029297
    4. ' print' → logprob: -11.625377655029297
    5. '\n' → logprob: -12.000377655029297
    6. 'p' → logprob: -12.250377655029297
    7. '#print' → logprob: -12.750377655029297
    8. 'P' → logprob: -13.000377655029297
    9. 'pr' → logprob: -13.250377655029297
    10. '
' → logprob: -13.375377655029297

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687863945961
    2. '=' → logprob: -1.1368786096572876
    3. ',' → logprob: -12.886878967285156
    4. ' ' → logprob: -13.261878967285156
    5. '<|end|>' → logprob: -14.761878967285156
    6. 'import' → logprob: -15.136878967285156
    7. '_=' → logprob: -15.136878967285156
    8. '.' → logprob: -15.261878967285156
    9. '  ' → logprob: -15.261878967285156
    10. '=}' → logprob: -15.386878967285156

Token 92: ' ob' (ID: 1067)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.5878759026527405
    2. ' ob' → logprob: -0.9628759026527405
    3. 'X' → logprob: -3.2128758430480957
    4. ' X' → logprob: -4.462875843048096
    5. 'len' → logprob: -5.212875843048096
    6. 'A' → logprob: -6.337875843048096
    7. ' A' → logprob: -6.962875843048096
    8. ' len' → logprob: -7.712875843048096
    9. 'chr' → logprob: -8.087876319885254
    10. 'int' → logprob: -8.462876319885254

Token 93: 'fusc' (ID: 96715)
  Prédit: 'fusc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fusc' → logprob: -8.554343366995454e-05
    2. 'fuscated' → logprob: -9.875085830688477
    3. 'usc' → logprob: -10.875085830688477
    4. 'f' → logprob: -11.250085830688477
    5. 'F' → logprob: -13.875085830688477
    6. 'X' → logprob: -14.750085830688477
    7. 'fus' → logprob: -14.750085830688477
    8. 'sc' → logprob: -15.875085830688477
    9. 'A' → logprob: -16.500085830688477
    10. '#' → logprob: -16.875085830688477

Token 94: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -1.3856492842023727e-06
    2. 'a' → logprob: -15.250000953674316
    3. 'X' → logprob: -15.500000953674316
    4. 'at' → logprob: -15.625000953674316
    5. 'ATE' → logprob: -15.875000953674316
    6. '
' → logprob: -16.125001907348633
    7. 'er' → logprob: -16.500001907348633
    8. 'e' → logprob: -16.875001907348633
    9. 'A' → logprob: -17.000001907348633
    10. 'x' → logprob: -17.000001907348633

Token 95: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.5133700370788574
    2. '(X' → logprob: -1.7633700370788574
    3. '(A' → logprob: -1.8883700370788574
    4. '(' → logprob: -3.0133700370788574
    5. '(Y' → logprob: -3.6383700370788574
    6. '('' → logprob: -5.888370037078857
    7. '(s' → logprob: -8.763370513916016
    8. '(S' → logprob: -9.138370513916016
    9. ' (' → logprob: -10.013370513916016
    10. '("' → logprob: -10.138370513916016

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013963071396574378
    2. ' ,' → logprob: -6.876396179199219
    3. 'A' → logprob: -9.251396179199219
    4. ')' → logprob: -9.376396179199219
    5. ',A' → logprob: -9.626396179199219
    6. ',X' → logprob: -10.251396179199219
    7. 'X' → logprob: -10.626396179199219
    8. ' ' → logprob: -11.001396179199219
    9. '[' → logprob: -11.376396179199219
    10. '   ' → logprob: -12.376396179199219

Token 97: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.033689845353364944
    2. ' A' → logprob: -3.7836897373199463
    3. 'B' → logprob: -5.033689975738525
    4. '2' → logprob: -6.783689975738525
    5. 'X' → logprob: -6.908689975738525
    6. ''A' → logprob: -7.658689975738525
    7. '"A' → logprob: -8.283689498901367
    8. ' B' → logprob: -8.408689498901367
    9. ' ' → logprob: -8.533689498901367
    10. '3' → logprob: -8.908689498901367

Token 98: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006308287265710533
    2. ')
' → logprob: -7.375630855560303
    3. '))' → logprob: -13.375630378723145
    4. ' )' → logprob: -13.625630378723145
    5. ')

' → logprob: -15.250630378723145
    6. ')`' → logprob: -15.500630378723145
    7. ')
' → logprob: -15.625630378723145
    8. '()' → logprob: -15.875630378723145
    9. ')#' → logprob: -15.875630378723145
    10. '[' → logprob: -16.00063133239746

Token 99: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03055274486541748
    2. '#' → logprob: -4.530552864074707
    3. ')' → logprob: -4.780552864074707
    4. '\n' → logprob: -5.155552864074707
    5. 'X' → logprob: -6.405552864074707
    6. '+' → logprob: -6.905552864074707
    7. '(' → logprob: -7.530552864074707
    8. '#print' → logprob: -8.030552864074707
    9. '
' → logprob: -8.905552864074707
    10. 'pr' → logprob: -8.905552864074707

Token 100: ' Expression' (ID: 32496)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.982165698194876e-05
    2. 'for' → logprob: -10.000080108642578
    3. 'Z' → logprob: -10.500080108642578
    4. ' print' → logprob: -12.875080108642578
    5. 'X' → logprob: -13.625080108642578
    6. 'result' → logprob: -13.750080108642578
    7. '#' → logprob: -14.000080108642578
    8. 'if' → logprob: -15.000080108642578
    9. 'import' → logprob: -15.250080108642578
    10. '#print' → logprob: -15.250080108642578

Token 101: ' bool' (ID: 3792)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10899319499731064
    2. 'X' → logprob: -2.9839932918548584
    3. 'Z' → logprob: -3.3589932918548584
    4. 'result' → logprob: -4.608993053436279
    5. '=' → logprob: -6.108993053436279
    6. '(X' → logprob: -6.233993053436279
    7. 'len' → logprob: -6.483993053436279
    8. ' =' → logprob: -7.358993053436279
    9. '(' → logprob: -7.483993053436279
    10. ' print' → logprob: -7.733993053436279

Token 102: 'é' (ID: 377)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.024258974939584732
    2. 'nelle' → logprob: -4.399259090423584
    3. 'ionale' → logprob: -5.899259090423584
    4. 'é' → logprob: -6.399259090423584
    5. 'ique' → logprob: -6.524259090423584
    6. 'ions' → logprob: -6.774259090423584
    7. 'e' → logprob: -6.899259090423584
    8. 'aire' → logprob: -7.524259090423584
    9. 'ène' → logprob: -7.524259090423584
    10. 'n' → logprob: -7.649259090423584

Token 103: 'enne' (ID: 17721)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.5446848273277283
    2. 'enne' → logprob: -1.544684886932373
    3. 'nne' → logprob: -1.669684886932373
    4. 'n' → logprob: -4.294684886932373
    5. 'ene' → logprob: -5.794684886932373
    6. 'nelle' → logprob: -7.294684886932373
    7. 'e' → logprob: -8.294684410095215
    8. 'nale' → logprob: -9.169684410095215
    9. 'naire' → logprob: -9.544684410095215
    10. 'ène' → logprob: -9.669684410095215

Token 104: ' dans' (ID: 2671)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.5210747122764587
    2. ' X' → logprob: -2.1460747718811035
    3. ' =' → logprob: -2.2710747718811035
    4. '(X' → logprob: -2.2710747718811035
    5. 'Z' → logprob: -4.1460747718811035
    6. 'print' → logprob: -4.1460747718811035
    7. 'result' → logprob: -4.1460747718811035
    8. ' (' → logprob: -4.6460747718811035
    9. ':' → logprob: -5.3960747718811035
    10. '(' → logprob: -5.6460747718811035

Token 105: ' un' (ID: 537)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.21242590248584747
    2. '(X' → logprob: -2.087425947189331
    3. ' X' → logprob: -3.587425947189331
    4. 'not' → logprob: -3.962425947189331
    5. ' not' → logprob: -4.962425708770752
    6. ' (' → logprob: -5.462425708770752
    7. 'Y' → logprob: -5.837425708770752
    8. 'len' → logprob: -6.087425708770752
    9. '(not' → logprob: -6.337425708770752
    10. '(len' → logprob: -7.462425708770752

Token 106: ' diction' (ID: 155259)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06314905732870102
    2. 'print' → logprob: -2.9381489753723145
    3. 'return' → logprob: -5.8131489753723145
    4. ' if' → logprob: -5.9381489753723145
    5. 'assert' → logprob: -6.4381489753723145
    6. 'not' → logprob: -8.563149452209473
    7. '#' → logprob: -9.063149452209473
    8. 'f' → logprob: -9.188149452209473
    9. 'and' → logprob: -9.438149452209473
    10. 'condition' → logprob: -9.813149452209473

Token 107: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.31875982880592346
    2. 'aire' → logprob: -1.443759799003601
    3. 'ary' → logprob: -3.8187599182128906
    4. 'a' → logprob: -4.818759918212891
    5. '{' → logprob: -5.943759918212891
    6. 'n' → logprob: -6.068759918212891
    7. '{"' → logprob: -7.693759918212891
    8. '{
' → logprob: -8.06875991821289
    9. 'are' → logprob: -8.94375991821289
    10. 'na' → logprob: -9.06875991821289

Token 108: ' pour' (ID: 1930)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1345632076263428
    2. 'expr' → logprob: -1.3845632076263428
    3. 'bool' → logprob: -1.8845632076263428
    4. '{
' → logprob: -2.0095632076263428
    5. '{' → logprob: -2.2595632076263428
    6. 'result' → logprob: -4.509563446044922
    7. 'expression' → logprob: -5.009563446044922
    8. 'exp' → logprob: -5.884563446044922
    9. 'conditions' → logprob: -6.259563446044922
    10. '{'' → logprob: -6.259563446044922

Token 109: ' le' (ID: 505)
  Prédit: '{
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{
' → logprob: -0.10715785622596741
    2. '{' → logprob: -2.9821579456329346
    3. 'result' → logprob: -4.1071577072143555
    4. 'conditions' → logprob: -4.8571577072143555
    5. '{'' → logprob: -5.2321577072143555
    6. 'results' → logprob: -5.6071577072143555
    7. '{"' → logprob: -6.1071577072143555
    8. 'expr' → logprob: -6.2321577072143555
    9. 'operations' → logprob: -6.3571577072143555
    10. '#' → logprob: -6.7321577072143555

Token 110: ' choix' (ID: 28642)
  Prédit: '{
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{
' → logprob: -0.28018391132354736
    2. '#' → logprob: -2.030183792114258
    3. '{' → logprob: -3.030183792114258
    4. 'result' → logprob: -3.530183792114258
    5. 'bool' → logprob: -5.280183792114258
    6. 'conditions' → logprob: -5.530183792114258
    7. 's' → logprob: -6.155183792114258
    8. 'return' → logprob: -6.280183792114258
    9. ''s' → logprob: -6.405183792114258
    10. 'logic' → logprob: -6.780183792114258

Token 111: ' de' (ID: 334)
  Prédit: '{
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{
' → logprob: -0.6302531957626343
    2. 'choices' → logprob: -1.1302531957626343
    3. '{' → logprob: -3.130253314971924
    4. 'conditions' → logprob: -3.255253314971924
    5. 'expr' → logprob: -3.880253314971924
    6. 'bool' → logprob: -5.130253314971924
    7. 'condition' → logprob: -5.130253314971924
    8. ' choices' → logprob: -5.255253314971924
    9. 'd' → logprob: -5.630253314971924
    10. 'express' → logprob: -6.005253314971924

Token 112: ' la' (ID: 557)
  Prédit: 'operation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operation' → logprob: -0.9467114806175232
    2. '{' → logprob: -1.821711540222168
    3. '{
' → logprob: -2.196711540222168
    4. 'op' → logprob: -3.196711540222168
    5. ''' → logprob: -3.321711540222168
    6. 'l' → logprob: -3.321711540222168
    7. ''op' → logprob: -3.321711540222168
    8. ''action' → logprob: -3.571711540222168
    9. 'la' → logprob: -3.696711540222168
    10. '{'' → logprob: -3.821711540222168

Token 113: ' sortie' (ID: 52761)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.2705832719802856
    2. 'code' → logprob: -2.145583152770996
    3. 'car' → logprob: -3.020583152770996
    4. 'print' → logprob: -3.145583152770996
    5. 'd' → logprob: -3.270583152770996
    6. 'next' → logprob: -3.395583152770996
    7. '{' → logprob: -3.395583152770996
    8. 'A' → logprob: -3.520583152770996
    9. 'result' → logprob: -3.520583152770996
    10. 'op' → logprob: -3.645583152770996

Token 114: '
' (ID: 198)
  Prédit: '{
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{
' → logprob: -0.4697292745113373
    2. 'result' → logprob: -1.7197293043136597
    3. 'choices' → logprob: -2.71972918510437
    4. 'output' → logprob: -3.34472918510437
    5. 'expr' → logprob: -3.34472918510437
    6. '{' → logprob: -3.96972918510437
    7. 'express' → logprob: -4.844729423522949
    8. 'results' → logprob: -5.219729423522949
    9. 'res' → logprob: -5.219729423522949
    10. 'options' → logprob: -5.719729423522949

Token 115: '{' (ID: 90)
  Prédit: '{
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{
' → logprob: -0.2935938537120819
    2. '{' → logprob: -2.0435938835144043
    3. 'result' → logprob: -3.1685938835144043
    4. 'output' → logprob: -3.5435938835144043
    5. 'expr' → logprob: -3.9185938835144043
    6. 'choices' → logprob: -4.543593883514404
    7. 'res' → logprob: -5.168593883514404
    8. 'out' → logprob: -5.918593883514404
    9. 'express' → logprob: -6.543593883514404
    10. 'd' → logprob: -6.668593883514404

Token 116: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.038790587335824966
    2. ' True' → logprob: -4.038790702819824
    3. 'X' → logprob: -4.663790702819824
    4. '   ' → logprob: -5.163790702819824
    5. '(True' → logprob: -6.038790702819824
    6. ''' → logprob: -6.663790702819824
    7. '(X' → logprob: -8.038790702819824
    8. ' X' → logprob: -8.163790702819824
    9. '"' → logprob: -8.538790702819824
    10. ''A' → logprob: -8.663790702819824

Token 117: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000953502138145268
    2. ' :' → logprob: -7.125953674316406
    3. ':X' → logprob: -9.500953674316406
    4. ':A' → logprob: -10.875953674316406
    5. ':Y' → logprob: -11.625953674316406
    6. ':return' → logprob: -11.750953674316406
    7. ':s' → logprob: -12.125953674316406
    8. ':true' → logprob: -12.125953674316406
    9. '   ' → logprob: -12.250953674316406
    10. ':
' → logprob: -12.875953674316406

Token 118: ' lambda' (ID: 27871)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.133059561252594
    2. ' X' → logprob: -2.133059501647949
    3. 'print' → logprob: -5.258059501647949
    4. ' print' → logprob: -8.13305950164795
    5. '   ' → logprob: -8.75805950164795
    6. 'Y' → logprob: -9.00805950164795
    7. ' ' → logprob: -9.13305950164795
    8. ''' → logprob: -9.50805950164795
    9. 'lambda' → logprob: -10.25805950164795
    10. ' Y' → logprob: -10.63305950164795

Token 119: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2541173994541168
    2. ' :' → logprob: -1.5041173696517944
    3. '():' → logprob: -6.379117488861084
    4. ':X' → logprob: -8.004117012023926
    5. ' ():' → logprob: -10.379117012023926
    6. ' X' → logprob: -10.504117012023926
    7. ' ' → logprob: -11.004117012023926
    8. 'print' → logprob: -11.504117012023926
    9. 'X' → logprob: -11.504117012023926
    10. ':return' → logprob: -11.879117012023926

Token 120: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12429607659578323
    2. ' print' → logprob: -2.749296188354492
    3. 'X' → logprob: -3.124296188354492
    4. ' X' → logprob: -4.874296188354492
    5. ' sys' → logprob: -7.624296188354492
    6. 'sys' → logprob: -7.624296188354492
    7. ' ' → logprob: -8.749296188354492
    8. ' ob' → logprob: -10.624296188354492
    9. '(X' → logprob: -10.624296188354492
    10. 'Y' → logprob: -10.999296188354492

Token 121: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.0022728892508894205
    2. '(' → logprob: -6.252273082733154
    3. '("' → logprob: -8.502272605895996
    4. '('' → logprob: -9.377272605895996
    5. ' (' → logprob: -10.627272605895996
    6. '(Y' → logprob: -11.502272605895996
    7. 'X' → logprob: -11.752272605895996
    8. '((' → logprob: -12.252272605895996
    9. '(
' → logprob: -13.252272605895996
    10. '(A' → logprob: -13.377272605895996

Token 122: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0228640828281641
    2. '),
' → logprob: -3.8978641033172607
    3. '()),' → logprob: -6.647863864898682
    4. '),

' → logprob: -8.14786434173584
    5. ')' → logprob: -8.77286434173584
    6. '   ' → logprob: -8.89786434173584
    7. ',' → logprob: -9.14786434173584
    8. ' ),' → logprob: -9.52286434173584
    9. '),
' → logprob: -9.77286434173584
    10. '()),
' → logprob: -10.14786434173584

Token 123: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.6931880712509155
    2. 'False' → logprob: -0.6931880712509155
    3. ' True' → logprob: -10.943187713623047
    4. '   ' → logprob: -11.318187713623047
    5. 'True' → logprob: -11.568187713623047
    6. '    ' → logprob: -14.568187713623047
    7. '(False' → logprob: -14.568187713623047
    8. ' ' → logprob: -14.693187713623047
    9. '  ' → logprob: -16.068187713623047
    10. ' 
' → logprob: -16.818187713623047

Token 124: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.4881879400927573e-05
    2. ' :' → logprob: -10.375035285949707
    3. 'lambda' → logprob: -13.000035285949707
    4. '=lambda' → logprob: -14.375035285949707
    5. ' lambda' → logprob: -15.000035285949707
    6. ':
' → logprob: -15.625035285949707
    7. '(lambda' → logprob: -16.25003433227539
    8. '[' → logprob: -17.12503433227539
    9. ':function' → logprob: -17.62503433227539
    10. '():' → logprob: -17.75003433227539

Token 125: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.03367716446518898
    2. 'lambda' → logprob: -3.408677101135254
    3. '(lambda' → logprob: -10.908677101135254
    4. ' ' → logprob: -11.408677101135254
    5. '=lambda' → logprob: -14.033677101135254
    6. ' ' → logprob: -14.658677101135254
    7. ' lamb' → logprob: -15.158677101135254
    8. '  ' → logprob: -16.15867805480957
    9. '   ' → logprob: -16.53367805480957
    10. ' λ' → logprob: -16.78367805480957

Token 126: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0171151515096426
    2. '():' → logprob: -4.142115116119385
    3. ' :' → logprob: -6.892115116119385
    4. ' ():' → logprob: -9.892115592956543
    5. '()' → logprob: -11.892115592956543
    6. 'print' → logprob: -13.267115592956543
    7. '   ' → logprob: -13.392115592956543
    8. ' ()' → logprob: -13.392115592956543
    9. ' ' → logprob: -14.642115592956543
    10. ' print' → logprob: -14.767115592956543

Token 127: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3485114276409149
    2. 'print' → logprob: -1.2235114574432373
    3. ' ' → logprob: -9.848511695861816
    4. '(print' → logprob: -12.348511695861816
    5. ' sys' → logprob: -12.723511695861816
    6. ' ' → logprob: -13.098511695861816
    7. 'sys' → logprob: -13.973511695861816
    8. '  ' → logprob: -14.223511695861816
    9. 'None' → logprob: -14.348511695861816
    10. '	print' → logprob: -15.098511695861816

Token 128: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -4.3822154111694545e-05
    2. '(X' → logprob: -10.875043869018555
    3. 'Y' → logprob: -11.875043869018555
    4. '(B' → logprob: -11.875043869018555
    5. '(' → logprob: -12.250043869018555
    6. '((' → logprob: -13.875043869018555
    7. '()' → logprob: -13.875043869018555
    8. '(A' → logprob: -14.250043869018555
    9. '(y' → logprob: -14.375043869018555
    10. '('' → logprob: -14.500043869018555

Token 129: ')}' (ID: 15468)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0017189696663990617
    2. '()}' → logprob: -7.126718997955322
    3. ')}' → logprob: -7.751718997955322
    4. ')' → logprob: -8.376718521118164
    5. '}()
' → logprob: -9.001718521118164
    6. ' }' → logprob: -9.626718521118164
    7. '}()

' → logprob: -11.126718521118164
    8. '})' → logprob: -11.126718521118164
    9. '})();' → logprob: -11.751718521118164
    10. '}.' → logprob: -12.251718521118164

Token 130: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06869491934776306
    2. '[int' → logprob: -3.193694829940796
    3. '[len' → logprob: -4.568695068359375
    4. '[B' → logprob: -5.318695068359375
    5. '[A' → logprob: -5.443695068359375
    6. '[X' → logprob: -5.818695068359375
    7. '()[' → logprob: -6.443695068359375
    8. '[t' → logprob: -8.068695068359375
    9. '[get' → logprob: -8.193695068359375
    10. '[T' → logprob: -9.318695068359375

Token 131: 'X' (ID: 55)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.013043517246842384
    2. 'A' → logprob: -5.138043403625488
    3. 'int' → logprob: -5.763043403625488
    4. 'X' → logprob: -5.888043403625488
    5. '(len' → logprob: -7.638043403625488
    6. ' len' → logprob: -7.763043403625488
    7. 'True' → logprob: -8.888043403625488
    8. 'B' → logprob: -11.013043403625488
    9. 'bool' → logprob: -11.138043403625488
    10. '(A' → logprob: -11.138043403625488

Token 132: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.12472951412200928
    2. '==' → logprob: -2.499729633331299
    3. ' >' → logprob: -3.999729633331299
    4. '<' → logprob: -4.874729633331299
    5. ' ==' → logprob: -5.499729633331299
    6. '!=' → logprob: -5.874729633331299
    7. '>=' → logprob: -7.499729633331299
    8. ' !=' → logprob: -7.749729633331299
    9. ' <' → logprob: -8.12472915649414
    10. ' ' → logprob: -8.49972915649414

Token 133: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.00017016702622640878
    2. ' Y' → logprob: -8.75016975402832
    3. ' ' → logprob: -12.37516975402832
    4. '=' → logprob: -13.12516975402832
    5. 'len' → logprob: -13.87516975402832
    6. 'X' → logprob: -14.12516975402832
    7. '   ' → logprob: -14.75016975402832
    8. '>' → logprob: -14.75016975402832
    9. ''' → logprob: -15.12516975402832
    10. 'int' → logprob: -15.25016975402832

Token 134: ']()' (ID: 137203)
  Prédit: ']()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']()' → logprob: -0.09379840642213821
    2. '()]' → logprob: -2.8437983989715576
    3. ']' → logprob: -3.4687983989715576
    4. ')]' → logprob: -9.218798637390137
    5. ']()
' → logprob: -10.593798637390137
    6. '()' → logprob: -10.968798637390137
    7. ' ]' → logprob: -11.093798637390137
    8. '](' → logprob: -11.343798637390137
    9. '])' → logprob: -12.468798637390137
    10. '}]' → logprob: -14.968798637390137


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 132
Tokens correctement prédits (1ère position, stricte): 44
Tokens correctement prédits (1ère position, avec adaptation): 44
Tokens correctement prédits (top 10): 84
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 33.33%
Précision (top 10): 63.64%
================================================================================
