================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:38:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def _get():
    return int(input())

class Calculator:
    def square(self, n):
        return n * n

if __name__ == '__main__':
    r=_get()
    c=Calculator()
    for result in [c.square(r)]:
        print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' _' (ID: 1175)
  → Token d'amorce (pas de prédiction)

Token 2: 'get' (ID: 522)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004158534109592438
    2. '_name' → logprob: -7.0041584968566895
    3. '_token' → logprob: -7.0041584968566895
    4. '__' → logprob: -7.7541584968566895
    5. '_item' → logprob: -7.8791584968566895
    6. '___' → logprob: -8.629158973693848
    7. '_data' → logprob: -8.754158973693848
    8. '_attr' → logprob: -8.879158973693848
    9. '_context' → logprob: -9.629158973693848
    10. '```' → logprob: -9.629158973693848

Token 4: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9447469711303711
    2. ''' → logprob: -1.194746971130371
    3. '\' → logprob: -2.944746971130371
    4. '():' → logprob: -3.194746971130371
    5. ':' → logprob: -3.319746971130371
    6. ' ' → logprob: -3.444746971130371
    7. '```' → logprob: -3.569746971130371
    8. '(
' → logprob: -3.944746971130371
    9. ' (' → logprob: -4.444746971130371
    10. '\n' → logprob: -4.569746971130371

Token 5: ' return' (ID: 622)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1855192333459854
    2. ' ' → logprob: -2.810519218444824
    3. '(' → logprob: -3.185519218444824
    4. '   ' → logprob: -3.810519218444824
    5. ''' → logprob: -4.435519218444824
    6. 'return' (adapté à ' return') → logprob: -4.685519218444824
    7. 'r' → logprob: -5.310519218444824
    8. 'a' → logprob: -5.435519218444824
    9. '    ' → logprob: -5.685519218444824
    10. '[' → logprob: -6.560519218444824

Token 6: ' int' (ID: 677)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.7389083504676819
    2. ' ' → logprob: -0.9889083504676819
    3. 'None' → logprob: -2.363908290863037
    4. '"' → logprob: -3.863908290863037
    5. ' []' → logprob: -4.613908290863037
    6. ''' → logprob: -4.613908290863037
    7. ' True' → logprob: -5.238908290863037
    8. '_' → logprob: -6.488908290863037
    9. '  ' → logprob: -6.738908290863037
    10. ' "' → logprob: -6.988908290863037

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00034583290107548237
    2. '('' → logprob: -8.750346183776855
    3. ''' → logprob: -9.750346183776855
    4. '.' → logprob: -10.750346183776855
    5. '("("' → logprob: -10.875346183776855
    6. '40' → logprob: -11.250346183776855
    7. '"' → logprob: -11.750346183776855
    8. ' (' → logprob: -11.750346183776855
    9. '(
' → logprob: -12.000346183776855
    10. '32' → logprob: -12.125346183776855

Token 8: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01320000272244215
    2. '()' → logprob: -4.888199806213379
    3. '())' → logprob: -5.763199806213379
    4. '('' → logprob: -7.013199806213379
    5. ')' → logprob: -7.263199806213379
    6. '("("' → logprob: -8.513199806213379
    7. '(""))' → logprob: -8.638199806213379
    8. '(()' → logprob: -8.888199806213379
    9. '(
' → logprob: -9.763199806213379
    10. '()))' → logprob: -9.888199806213379

Token 9: 'class' (ID: 1444)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5951538681983948
    2. '_' → logprob: -1.34515380859375
    3. 'def' → logprob: -2.47015380859375
    4. '#' → logprob: -3.59515380859375
    5. '(
' → logprob: -4.09515380859375
    6. '()' → logprob: -4.09515380859375
    7. ')' → logprob: -4.59515380859375
    8. '.' → logprob: -4.59515380859375
    9. '\n' → logprob: -5.72015380859375
    10. '*' → logprob: -6.22015380859375

Token 10: ' Calculator' (ID: 41921)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014807132072746754
    2. ' My' → logprob: -4.639807224273682
    3. ' A' → logprob: -6.764807224273682
    4. ' User' → logprob: -7.014807224273682
    5. '(' → logprob: -7.389807224273682
    6. '_' → logprob: -7.639807224273682
    7. ' Data' → logprob: -8.514806747436523
    8. ' Validator' → logprob: -8.889806747436523
    9. 'A' → logprob: -9.014806747436523
    10. ' Space' → logprob: -9.139806747436523

Token 11: ':
' (ID: 734)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02735975943505764
    2. ':' → logprob: -4.152359962463379
    3. '(' → logprob: -4.527359962463379
    4. ' .' → logprob: -8.902359962463379
    5. '():' → logprob: -10.152359962463379
    6. '   ' → logprob: -10.402359962463379
    7. '```' → logprob: -10.527359962463379
    8. '<|end|>' → logprob: -10.777359962463379
    9. '().' → logprob: -10.902359962463379
    10. ' ' → logprob: -11.027359962463379

Token 12: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0988418459892273
    2. '   ' → logprob: -3.473841905593872
    3. '    ' → logprob: -4.098841667175293
    4. '(' → logprob: -4.473841667175293
    5. ' def' → logprob: -4.723841667175293
    6. '<|end|>' → logprob: -4.848841667175293
    7. ' (' → logprob: -5.348841667175293
    8. 'def' → logprob: -5.848841667175293
    9. '  ' → logprob: -6.223841667175293
    10. '_' → logprob: -6.223841667175293

Token 13: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4194631278514862
    2. '    ' → logprob: -1.9194631576538086
    3. 'def' (adapté à ' def') → logprob: -2.1694631576538086
    4. ' ' → logprob: -2.6694631576538086
    5. '   ' → logprob: -4.669463157653809
    6. '_' → logprob: -7.544463157653809
    7. ' pass' → logprob: -7.794463157653809
    8. '     
' → logprob: -7.794463157653809
    9. '(' → logprob: -8.044463157653809
    10. ' )' → logprob: -8.419463157653809

Token 14: ' square' (ID: 13749)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07959945499897003
    2. '__' → logprob: -3.079599380493164
    3. ' ' → logprob: -3.954599380493164
    4. ' _' → logprob: -4.954599380493164
    5. ' add' → logprob: -6.704599380493164
    6. '_' → logprob: -6.704599380493164
    7. ' ' → logprob: -7.704599380493164
    8. ' init' → logprob: -7.954599380493164
    9. ' calculate' → logprob: -8.079599380493164
    10. 'init' → logprob: -8.329599380493164

Token 15: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0044157556258141994
    2. '_' → logprob: -5.629415988922119
    3. '(self' → logprob: -8.004415512084961
    4. 's' → logprob: -8.379415512084961
    5. 'def' → logprob: -10.004415512084961
    6. ')' → logprob: -10.379415512084961
    7. ' ' → logprob: -10.379415512084961
    8. ' (' → logprob: -10.504415512084961
    9. '   ' → logprob: -10.504415512084961
    10. '(s' → logprob: -11.504415512084961

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6550320386886597
    2. ')' → logprob: -0.7800320386886597
    3. '):' → logprob: -4.155032157897949
    4. ' ,' → logprob: -6.030032157897949
    5. '_' → logprob: -7.280032157897949
    6. ' )' → logprob: -7.405032157897949
    7. '.' → logprob: -7.405032157897949
    8. 'self' → logprob: -7.780032157897949
    9. ' ' → logprob: -8.15503215789795
    10. 's' → logprob: -8.28003215789795

Token 17: ' n' (ID: 297)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6587275266647339
    2. 'x' → logprob: -0.9087275266647339
    3. 'n' → logprob: -3.4087276458740234
    4. ' n' → logprob: -3.6587276458740234
    5. ' number' → logprob: -4.533727645874023
    6. 'number' → logprob: -5.033727645874023
    7. ' value' → logprob: -6.908727645874023
    8. 'value' → logprob: -7.033727645874023
    9. 'num' → logprob: -7.408727645874023
    10. ' num' → logprob: -7.783727645874023

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02726266346871853
    2. ')' → logprob: -3.6522626876831055
    3. '**' → logprob: -7.9022626876831055
    4. '):
' → logprob: -8.652262687683105
    5. '*' → logprob: -9.027262687683105
    6. '   ' → logprob: -9.277262687683105
    7. ' ):' → logprob: -9.402262687683105
    8. ':' → logprob: -10.027262687683105
    9. ')**' → logprob: -10.152262687683105
    10. ' ' → logprob: -11.527262687683105

Token 19: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3561510145664215
    2. 'n' → logprob: -1.7311509847640991
    3. '   ' → logprob: -2.8561511039733887
    4. ')' → logprob: -3.7311511039733887
    5. ' n' → logprob: -4.481151103973389
    6. '(n' → logprob: -4.981151103973389
    7. 'return' → logprob: -5.231151103973389
    8. '(' → logprob: -5.481151103973389
    9. '    ' → logprob: -5.731151103973389
    10. ' return' → logprob: -5.856151103973389

Token 20: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4807799756526947
    2. 'return' (adapté à ' return') → logprob: -1.605780005455017
    3. '       ' → logprob: -1.980780005455017
    4. 'n' → logprob: -3.7307798862457275
    5. ' n' → logprob: -3.9807798862457275
    6. '   ' → logprob: -9.230779647827148
    7. ' ' → logprob: -9.855779647827148
    8. '        ' → logprob: -9.855779647827148
    9. '    ' → logprob: -10.105779647827148
    10. ' ' → logprob: -10.605779647827148

Token 21: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0041174618527293205
    2. 'n' → logprob: -5.504117488861084
    3. ' ' → logprob: -10.254117012023926
    4. ' ' → logprob: -12.504117012023926
    5. ' self' → logprob: -16.879117965698242
    6. 's' → logprob: -17.129117965698242
    7. '	n' → logprob: -18.129117965698242
    8. ' (' → logprob: -18.504117965698242
    9. '   ' → logprob: -18.504117965698242
    10. '  ' → logprob: -18.879117965698242

Token 22: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5976811051368713
    2. '*' → logprob: -1.5976810455322266
    3. ' *' → logprob: -1.9726810455322266
    4. ' **' → logprob: -2.2226810455322266
    5. ' ' → logprob: -9.847681045532227
    6. '*n' → logprob: -10.222681045532227
    7. ' ' → logprob: -11.347681045532227
    8. ')' → logprob: -11.472681045532227
    9. '***' → logprob: -11.597681045532227
    10. '*object' → logprob: -11.972681045532227

Token 23: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04300045222043991
    2. ' n' → logprob: -3.1680004596710205
    3. '	n' → logprob: -13.918000221252441
    4. ' ' → logprob: -15.793000221252441
    5. '2' → logprob: -16.168001174926758
    6. ' ' → logprob: -16.543001174926758
    7. '_n' → logprob: -17.168001174926758
    8. '<|end|>' → logprob: -17.293001174926758
    9. ')n' → logprob: -17.418001174926758
    10. '   ' → logprob: -17.668001174926758

Token 24: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: 'if' (ID: 366)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10578212141990662
    2. '    
' → logprob: -3.4807820320129395
    3. 'def' → logprob: -3.9807820320129395
    4. '<|end|>' → logprob: -3.9807820320129395
    5. '
' → logprob: -4.9807820320129395
    6. '\n' → logprob: -5.3557820320129395
    7. ' ' → logprob: -5.6057820320129395
    8. '*' → logprob: -5.8557820320129395
    9. '_' → logprob: -5.8557820320129395
    10. '.' → logprob: -6.2307820320129395

Token 26: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.011096985079348087
    2. '__' → logprob: -4.511096954345703
    3. ' ' → logprob: -10.761096954345703
    4. '_' → logprob: -10.886096954345703
    5. ' ' → logprob: -12.136096954345703
    6. ' _' → logprob: -13.261096954345703
    7. '  ' → logprob: -14.011096954345703
    8. ' True' → logprob: -14.886096954345703
    9. ' ___' → logprob: -15.511096954345703
    10. ' name' → logprob: -15.511096954345703

Token 27: 'name' (ID: 897)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1234395503997803
    2. ' ==' → logprob: -1.3734395503997803
    3. '__' → logprob: -1.4984395503997803
    4. '==' → logprob: -1.8734395503997803
    5. '.__' → logprob: -3.7484395503997803
    6. '.name' → logprob: -5.248439788818359
    7. '<|end|>' → logprob: -5.373439788818359
    8. '**' → logprob: -6.623439788818359
    9. ' __' → logprob: -6.873439788818359
    10. ' .' → logprob: -6.873439788818359

Token 28: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0003202114312443882
    2. '_' → logprob: -8.500320434570312
    3. '==' → logprob: -9.750320434570312
    4. '___' → logprob: -10.625320434570312
    5. '__
' → logprob: -12.375320434570312
    6. '____' → logprob: -12.500320434570312
    7. '__.__' → logprob: -12.500320434570312
    8. '__)' → logprob: -12.750320434570312
    9. ' ==' → logprob: -12.875320434570312
    10. '__["' → logprob: -13.000320434570312

Token 29: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.026451475918293
    2. '==' → logprob: -4.026451587677002
    3. '__' → logprob: -4.901451587677002
    4. '.' → logprob: -8.151451110839844
    5. '"' → logprob: -9.276451110839844
    6. '=="' → logprob: -9.401451110839844
    7. ' =' → logprob: -9.651451110839844
    8. '_' → logprob: -9.776451110839844
    9. ' =="' → logprob: -10.026451110839844
    10. '[' → logprob: -10.276451110839844

Token 30: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.47905024886131287
    2. ''' → logprob: -0.9790502786636353
    3. ' "' → logprob: -5.604050159454346
    4. ' '' → logprob: -6.729050159454346
    5. ' "__' → logprob: -9.979050636291504
    6. ' '__' → logprob: -11.354050636291504
    7. ' __' → logprob: -11.729050636291504
    8. '__' → logprob: -11.729050636291504
    9. ' ' → logprob: -12.479050636291504
    10. ''s' → logprob: -13.479050636291504

Token 31: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.4617256056226324e-05
    2. 'name' → logprob: -11.750014305114746
    3. 'ma' → logprob: -12.500014305114746
    4. 'm' → logprob: -13.000014305114746
    5. 'mai' → logprob: -14.500014305114746
    6. '_main' → logprob: -16.750015258789062
    7. 'maine' → logprob: -17.000015258789062
    8. '_' → logprob: -17.625015258789062
    9. ' main' → logprob: -17.875015258789062
    10. '__' → logprob: -19.375015258789062

Token 32: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.5759496092796326
    2. '__' → logprob: -0.8259496092796326
    3. '_' → logprob: -11.825949668884277
    4. '__":
' → logprob: -13.325949668884277
    5. '__:' → logprob: -13.700949668884277
    6. '___' → logprob: -16.82594871520996
    7. '':' → logprob: -17.32594871520996
    8. ''' → logprob: -17.70094871520996
    9. '__('' → logprob: -17.82594871520996
    10. '__.' → logprob: -18.57594871520996

Token 33: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8179284334182739
    2. '   ' → logprob: -0.9429284334182739
    3. '    
' → logprob: -2.1929283142089844
    4. '<|end|>' → logprob: -4.317928314208984
    5. ' ' → logprob: -4.692928314208984
    6. '  
' → logprob: -4.817928314208984
    7. '
' → logprob: -4.942928314208984
    8. '   
' → logprob: -5.692928314208984
    9. '\n' → logprob: -5.817928314208984
    10. '\' → logprob: -5.817928314208984

Token 34: ' r' (ID: 428)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.08603528141975403
    2. ' calc' → logprob: -2.7110352516174316
    3. '   ' → logprob: -4.961035251617432
    4. 'c' → logprob: -5.336035251617432
    5. 'obj' → logprob: -6.836035251617432
    6. 'cal' → logprob: -6.836035251617432
    7. 'calculator' → logprob: -6.961035251617432
    8. ' c' → logprob: -8.21103572845459
    9. ' cal' → logprob: -8.46103572845459
    10. ' calculator' → logprob: -8.71103572845459

Token 35: '=_' (ID: 51761)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13273809850215912
    2. 'es' → logprob: -2.2577381134033203
    3. '=' → logprob: -5.13273811340332
    4. 'adius' → logprob: -5.25773811340332
    5. 'unner' → logprob: -6.75773811340332
    6. 'e' → logprob: -6.88273811340332
    7. '   ' → logprob: -6.88273811340332
    8. 'un' → logprob: -7.38273811340332
    9. '=_' → logprob: -7.63273811340332
    10. 'r' → logprob: -7.75773811340332

Token 36: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -2.7610454708337784e-05
    2. 'g' → logprob: -11.125027656555176
    3. '_get' → logprob: -11.375027656555176
    4. 'ge' → logprob: -14.125027656555176
    5. '.get' → logprob: -15.250027656555176
    6. 'getc' → logprob: -16.25002670288086
    7. '$get' → logprob: -16.87502670288086
    8. 'getitem' → logprob: -17.00002670288086
    9. 'GET' → logprob: -17.25002670288086
    10. 'geten' → logprob: -17.37502670288086

Token 37: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5928495486150496e-05
    2. '(' → logprob: -11.625016212463379
    3. ' ()' → logprob: -13.000016212463379
    4. '()(' → logprob: -13.000016212463379
    5. '()
' → logprob: -13.875016212463379
    6. '()

' → logprob: -14.875016212463379
    7. '()]' → logprob: -15.750016212463379
    8. '()<' → logprob: -15.750016212463379
    9. '()*' → logprob: -16.000015258789062
    10. '()`' → logprob: -16.125015258789062

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6110723614692688
    2. '
' → logprob: -0.9860723614692688
    3. '    
' → logprob: -2.736072301864624
    4. 'c' → logprob: -5.236072540283203
    5. '   
' → logprob: -5.736072540283203
    6. '  
' → logprob: -5.986072540283203
    7. ' 
' → logprob: -6.361072540283203
    8. '     
' → logprob: -6.986072540283203
    9. '<|end|>' → logprob: -6.986072540283203
    10. 'calculator' → logprob: -7.111072540283203

Token 39: ' c' (ID: 274)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.7906730771064758
    2. 'c' (adapté à ' c') → logprob: -0.9156730771064758
    3. ' calc' → logprob: -2.540673017501831
    4. ' c' → logprob: -3.290673017501831
    5. 'obj' → logprob: -4.79067325592041
    6. 'calculator' → logprob: -5.04067325592041
    7. 'cal' → logprob: -5.16567325592041
    8. '   ' → logprob: -5.79067325592041
    9. ' cal' → logprob: -6.16567325592041
    10. ' calculator' → logprob: -6.41567325592041

Token 40: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28505653142929077
    2. ' =' → logprob: -2.1600565910339355
    3. '.' → logprob: -2.4100565910339355
    4. 'alc' → logprob: -3.6600565910339355
    5. 'al' → logprob: -4.9100565910339355
    6. '.cal' → logprob: -5.5350565910339355
    7. '.calc' → logprob: -6.1600565910339355
    8. '.=' → logprob: -6.2850565910339355
    9. '=s' → logprob: -7.6600565910339355
    10. '.square' → logprob: -8.160056114196777

Token 41: 'Calculator' (ID: 50159)
  Prédit: 'Calculator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -4.572941179503687e-05
    2. ' Calculator' → logprob: -10.125045776367188
    3. 'culator' → logprob: -12.625045776367188
    4. 'al' → logprob: -13.375045776367188
    5. 'calculator' → logprob: -14.375045776367188
    6. 'Calcul' → logprob: -16.750045776367188
    7. 'Calc' → logprob: -17.125045776367188
    8. 'Cal' → logprob: -17.250045776367188
    9. 'ulator' → logprob: -17.500045776367188
    10. 'alc' → logprob: -17.625045776367188

Token 42: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008734888397157192
    2. '()
' → logprob: -4.758734703063965
    3. '(' → logprob: -9.633734703063965
    4. '()

' → logprob: -10.383734703063965
    5. '().' → logprob: -11.758734703063965
    6. ' ()' → logprob: -12.633734703063965
    7. '()\' → logprob: -12.758734703063965
    8. '()
' → logprob: -13.008734703063965
    9. '()`' → logprob: -13.133734703063965
    10. '.' → logprob: -13.383734703063965

Token 43: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7875162959098816
    2. '   ' → logprob: -1.2875163555145264
    3. 'print' → logprob: -1.4125163555145264
    4. '    
' → logprob: -4.162516117095947
    5. 'result' → logprob: -5.412516117095947
    6. ' print' → logprob: -6.537516117095947
    7. 'r' → logprob: -7.662516117095947
    8. '  
' → logprob: -7.662516117095947
    9. '```' → logprob: -7.912516117095947
    10. 'c' → logprob: -8.037516593933105

Token 44: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004269527271389961
    2. 'result' → logprob: -5.629269599914551
    3. ' print' → logprob: -7.879269599914551
    4. '   ' → logprob: -9.00426959991455
    5. 'r' → logprob: -9.75426959991455
    6. 's' → logprob: -10.12926959991455
    7. 'p' → logprob: -10.75426959991455
    8. 'pr' → logprob: -11.00426959991455
    9. ' result' → logprob: -11.00426959991455
    10. 'res' → logprob: -12.37926959991455

Token 45: ' result' (ID: 1534)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14168758690357208
    2. ' _' → logprob: -2.1416876316070557
    3. ' i' → logprob: -4.391687393188477
    4. '_' → logprob: -6.141687393188477
    5. ' r' → logprob: -9.516687393188477
    6. '  ' → logprob: -11.391687393188477
    7. ' ' → logprob: -11.766687393188477
    8. ' in' → logprob: -12.016687393188477
    9. ' range' → logprob: -12.016687393188477
    10. ' ‌' → logprob: -12.391687393188477

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07076165825128555
    2. 'in' → logprob: -2.6957616806030273
    3. ' ' → logprob: -8.070761680603027
    4. '   ' → logprob: -8.695761680603027
    5. 's' → logprob: -8.945761680603027
    6. '_in' → logprob: -10.195761680603027
    7. '_' → logprob: -10.820761680603027
    8. '	in' → logprob: -10.883261680603027
    9. '  ' → logprob: -11.008261680603027
    10. ',' → logprob: -11.195761680603027

Token 47: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.9271507859230042
    2. 'range' → logprob: -0.9271507859230042
    3. ' c' → logprob: -2.8021507263183594
    4. ' [' → logprob: -2.9271507263183594
    5. '[' → logprob: -3.0521507263183594
    6. '[c' → logprob: -4.177150726318359
    7. 'c' → logprob: -4.427150726318359
    8. ' ' → logprob: -5.052150726318359
    9. '(range' → logprob: -5.302150726318359
    10. ' map' → logprob: -6.052150726318359

Token 48: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.008920161053538322
    2. ' c' → logprob: -5.258920192718506
    3. '   ' → logprob: -5.633920192718506
    4. '       ' → logprob: -10.008919715881348
    5. '	c' → logprob: -10.508919715881348
    6. ' ' → logprob: -11.758919715881348
    7. '  ' → logprob: -12.133919715881348
    8. ')c' → logprob: -12.883919715881348
    9. '           ' → logprob: -13.133919715881348
    10. '
' → logprob: -13.508919715881348

Token 49: '.square' (ID: 77530)
  Prédit: '.square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.square' → logprob: -0.0002786167024169117
    2. '.' → logprob: -8.25027847290039
    3. ' .' → logprob: -11.37527847290039
    4. '.sqrt' → logprob: -12.75027847290039
    5. 'square' → logprob: -13.25027847290039
    6. '.calculate' → logprob: -15.50027847290039
    7. '.s' → logprob: -15.75027847290039
    8. '   ' → logprob: -16.12527847290039
    9. '.circle' → logprob: -16.37527847290039
    10. '(square' → logprob: -16.62527847290039

Token 50: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0031853171531111
    2. '(' → logprob: -5.878185272216797
    3. '(i' → logprob: -8.003185272216797
    4. ' (' → logprob: -10.378185272216797
    5. '(x' → logprob: -12.003185272216797
    6. '(n' → logprob: -13.378185272216797
    7. ' ' → logprob: -13.628185272216797
    8. '(s' → logprob: -13.753185272216797
    9. '](' → logprob: -13.878185272216797
    10. '(
' → logprob: -14.003185272216797

Token 51: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007142513524740934
    2. ')]' → logprob: -5.132142543792725
    3. '):' → logprob: -6.757142543792725
    4. ' )' → logprob: -10.382142066955566
    5. ')):' → logprob: -11.882142066955566
    6. '   ' → logprob: -12.382142066955566
    7. ']):' → logprob: -13.382142066955566
    8. '),' → logprob: -13.632142066955566
    9. ' ' → logprob: -13.632142066955566
    10. ']' → logprob: -13.882142066955566

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015249757561832666
    2. ':
' → logprob: -6.501524925231934
    3. '):' → logprob: -11.376524925231934
    4. '<|end|>' → logprob: -12.876524925231934
    5. ',' → logprob: -13.001524925231934
    6. '   ' → logprob: -13.251524925231934
    7. ':

' → logprob: -13.751524925231934
    8. ' :' → logprob: -14.751524925231934
    9. ':return' → logprob: -14.751524925231934
    10. '[' → logprob: -15.001524925231934

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10782697796821594
    2. 'print' → logprob: -2.4828269481658936
    3. ' print' → logprob: -4.607827186584473
    4. '   ' → logprob: -5.232827186584473
    5. '        
' → logprob: -6.857827186584473
    6. '    
' → logprob: -6.982827186584473
    7. '
' → logprob: -7.107827186584473
    8. ' 
' → logprob: -8.357827186584473
    9. '    ' → logprob: -8.482827186584473
    10. '	print' → logprob: -10.607827186584473

Token 54: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07917574048042297
    2. ' print' → logprob: -2.5791757106781006
    3. '       ' → logprob: -8.32917594909668
    4. '   ' → logprob: -10.07917594909668
    5. '```' → logprob: -14.20417594909668
    6. '    ' → logprob: -14.45417594909668
    7. '	print' → logprob: -14.57917594909668
    8. '           ' → logprob: -14.82917594909668
    9. '        ' → logprob: -15.82917594909668
    10. 'pr' → logprob: -16.20417594909668

Token 55: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.12695321440696716
    2. '(' → logprob: -2.126953125
    3. 'result' → logprob: -11.001953125
    4. '()' → logprob: -12.251953125
    5. ' (' → logprob: -13.001953125
    6. '(f' → logprob: -14.376953125
    7. '('' → logprob: -15.751953125
    8. '(
' → logprob: -16.001953125
    9. '((' → logprob: -16.376953125
    10. '(results' → logprob: -16.501953125

Token 56: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -15.000000953674316
    3. '))' → logprob: -15.750000953674316
    4. ' )' → logprob: -16.125
    5. ')`' → logprob: -17.125
    6. '   ' → logprob: -18.125
    7. ')}' → logprob: -18.875
    8. '}' → logprob: -19.375
    9. '`)' → logprob: -19.5
    10. '')' → logprob: -19.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 54
Tokens correctement prédits (1ère position, stricte): 21
Tokens correctement prédits (1ère position, avec adaptation): 22
Tokens correctement prédits (top 10): 39
Précision stricte (1ère position): 38.89%
Précision adaptée (1ère position): 40.74%
Précision (top 10): 72.22%
================================================================================
