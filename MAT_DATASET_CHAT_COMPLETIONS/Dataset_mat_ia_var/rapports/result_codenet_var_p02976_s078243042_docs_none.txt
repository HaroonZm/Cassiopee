================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import defaultdict,deque
from heapq import heappush, heappop
import sys
import math
import bisect
import random
def LI(): return [int(x) for x in sys.stdin.readline().split()]
def I(): return int(sys.stdin.readline())
def LS():return [list(x) for x in sys.stdin.readline().split()]
def S(): return list(sys.stdin.readline())[:-1]
def IR(n):
    return [I() for i in range(n)]
def LIR(n):
    return [LI() for i in range(n)]
def SR(n):
    return [S() for i in range(n)]
def LSR(n):
    return [LS() for i in range(n)]

sys.setrecursionlimit(1000000)
mod = 1000000007

def A():
    n = I()
    a = LI()
    if sum(a) == 0:
        print("Yes")
        return
    if n%3 != 0:
        print("No")
        return
    d = defaultdict(lambda : 0)
    for i in a:
        d[i] += 1
    if len(list(d.items())) == 2:
        if d[0] == n//3:
            print("Yes")
            return
        else:
            print("No")
            return
    k = 0
    for i,j in d.items():
        k ^= i
        if j != n//3:
            print("No")
            return
    if not k:
        print("Yes")
        return
    print("No")
    return

def B():
    def dfs(x,d):
        for y in v[x]:
            if d[y]:
                d[y] = 0
                dfs(y,d)
                if f[y]:
                    ans[(min(x,y),max(x,y))] ^= 1
                    f[x] ^= 1
                    f[y] ^= 1
    n,m = LI()
    ans = defaultdict(int)
    f = [0]*(n+1)
    v = [[] for i in range(n+1)]
    for i in range(m):
        a,b = LI()
        ans[(min(a,b),max(a,b))] = 1
        v[a].append(b)
        v[b].append(a)
        f[min(a,b)] ^= 1
    if m%2:
        print(-1)
        return
    d = [1]*(n+1)
    d[1] = 0
    dfs(1,d)
    for v,i in ans.items():
        if i:
            print(*v)
        else:
            print(*v[::-1])
    return

def C():
    n = I()
    p = [(1<<i) for i in range(100)]
    if n in p:
        print("No")
        quit()
    if n+1 in p:
        print("Yes")
        for i in range(1,2*n):
            print(i,i+1)
        quit()
    ans = []
    for i in range(1,3):
        ans.append((i,i+1))
    ans.append((3,n+1))
    for i in range(1,3):
        ans.append((i+n,i+n+1))
    u = 1
    d = 1
    for i in range(2,n//2+n%2):
        ans.append((u,2*i))
        ans.append((d,2*i+1))
        ans.append((2*i,2*i+n+1))
        ans.append((2*i+1,2*i+n))
        u = 2*i+n+1
        d = 2*i+n

    if n%2:
        print("Yes")
        for i,j in ans:
            print(i,j)
    else:
        ans.append((n-1,n))
        for i in range(n):
            if p[i]&n:
                break
        ans.append((p[i+1]-2,2*n))
        print("Yes")
        for i,j in ans:
            print(i,j)
    return

def D():
    n = I()
    return

def E():
    n = I()
    return

def F():
    n = I()
    return

if __name__ == "__main__":
    B()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' defaultdict' (ID: 107098)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.037925124168396
    2. 'default' → logprob: -1.162925124168396
    3. 'abc' → logprob: -1.787925124168396
    4. 'Counter' → logprob: -2.4129252433776855
    5. ' defaultdict' → logprob: -2.7879252433776855
    6. 'named' → logprob: -5.4129252433776855
    7. ' Counter' → logprob: -5.5379252433776855
    8. ' abc' → logprob: -6.0379252433776855
    9. ' deque' → logprob: -6.4129252433776855
    10. '```' → logprob: -6.7879252433776855

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007142632734030485
    2. '(
' → logprob: -5.632142543792725
    3. '\' → logprob: -7.132142543792725
    4. '\(' → logprob: -7.382142543792725
    5. '```' → logprob: -7.882142543792725
    6. 'newline' → logprob: -8.007143020629883
    7. '\n' → logprob: -8.382143020629883
    8. '[' → logprob: -8.507143020629883
    9. '
' → logprob: -9.132143020629883
    10. 'def' → logprob: -9.257143020629883

Token 5: 'deque' (ID: 143563)
  Prédit: ' Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.41870376467704773
    2. 'Counter' → logprob: -1.5437037944793701
    3. ' deque' → logprob: -2.66870379447937
    4. 'deque' → logprob: -3.04370379447937
    5. ' Ordered' → logprob: -4.793703556060791
    6. 'Ordered' → logprob: -5.918703556060791
    7. ' named' → logprob: -8.54370403289795
    8. ' abc' → logprob: -8.79370403289795
    9. 'named' → logprob: -9.29370403289795
    10. 'abc' → logprob: -10.29370403289795

Token 6: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010070850839838386
    2. '(
' → logprob: -8.001007080078125
    3. ' (' → logprob: -8.251007080078125
    4. '\(' → logprob: -9.001007080078125
    5. '\' → logprob: -9.751007080078125
    6. ',' → logprob: -9.876007080078125
    7. '.' → logprob: -9.876007080078125
    8. '()' → logprob: -10.626007080078125
    9. 'newline' → logprob: -10.876007080078125
    10. '```' → logprob: -10.876007080078125

Token 7: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30938947200775146
    2. '\n' → logprob: -2.934389591217041
    3. '' → logprob: -3.184389591217041
    4. '\' → logprob: -3.184389591217041
    5. '

' → logprob: -3.184389591217041
    6. 'd' → logprob: -3.684389591217041
    7. ',' → logprob: -4.559389591217041
    8. ' 
' → logprob: -4.559389591217041
    9. '```' → logprob: -4.809389591217041
    10. 'newline' → logprob: -4.934389591217041

Token 8: ' heap' (ID: 37237)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.7322454452514648
    2. ' itertools' → logprob: -0.8572454452514648
    3. ' threading' → logprob: -3.357245445251465
    4. ' queue' → logprob: -3.857245445251465
    5. ' sys' → logprob: -4.357245445251465
    6. ' typing' → logprob: -4.857245445251465
    7. ' math' → logprob: -5.357245445251465
    8. 'collections' → logprob: -5.482245445251465
    9. ' os' → logprob: -5.982245445251465
    10. ' heap' → logprob: -6.482245445251465

Token 9: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -7.896309739408025e-07
    2. 'queue' → logprob: -14.375000953674316
    3. 'import' → logprob: -15.875000953674316
    4. ' queue' → logprob: -19.125
    5. 'i' → logprob: -20.0
    6. 'dict' → logprob: -20.625
    7. 'ify' → logprob: -21.125
    8. 'n' → logprob: -21.375
    9. ' import' → logprob: -21.375
    10. 'f' → logprob: -21.375

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.048668328672647476
    2. 'import' → logprob: -3.048668384552002
    3. ' ' → logprob: -9.673667907714844
    4. '_import' → logprob: -11.548667907714844
    5. '	import' → logprob: -12.423667907714844
    6. ' im' → logprob: -14.423667907714844
    7. 'space' → logprob: -14.548667907714844
    8. '<|end|>' → logprob: -15.048667907714844
    9. ' importar' → logprob: -15.173667907714844
    10. ' imports' → logprob: -15.298667907714844

Token 11: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.2542608976364136
    2. 'he' → logprob: -1.5042608976364136
    3. 'heap' → logprob: -6.379261016845703
    4. 'import' → logprob: -8.129261016845703
    5. ' heap' → logprob: -8.504261016845703
    6. ' import' → logprob: -10.629261016845703
    7. ' n' → logprob: -10.754261016845703
    8. ' ' → logprob: -10.879261016845703
    9. 'nl' → logprob: -10.879261016845703
    10. '```' → logprob: -10.879261016845703

Token 12: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.011056429706513882
    2. 'ap' → logprob: -4.511056423187256
    3. 'a' → logprob: -11.761056900024414
    4. 'ап' → logprob: -15.386056900024414
    5. 'appen' → logprob: -15.886056900024414
    6. 'apl' → logprob: -16.011056900024414
    7. 'aq' → logprob: -16.261056900024414
    8. 'aps' → logprob: -16.886056900024414
    9. 'q' → logprob: -17.136056900024414
    10. 'appt' → logprob: -17.636056900024414

Token 13: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.012516011483967304
    2. 'op' → logprob: -4.387516021728516
    3. 'us' → logprob: -12.512516021728516
    4. 'u' → logprob: -13.262516021728516
    5. '```' → logprob: -15.512516021728516
    6. '   ' → logprob: -15.637516021728516
    7. 'o' → logprob: -16.137516021728516
    8. 'opleft' → logprob: -16.762516021728516
    9. '[' → logprob: -17.137516021728516
    10. 'push' → logprob: -17.262516021728516

Token 14: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.173806831240654
    2. 'he' → logprob: -1.9238067865371704
    3. ',' → logprob: -5.173806667327881
    4. '(heap' → logprob: -5.548806667327881
    5. '(
' → logprob: -6.423806667327881
    6. ' (' → logprob: -7.548806667327881
    7. ' he' → logprob: -7.798806667327881
    8. ')' → logprob: -8.423807144165039
    9. ' ' → logprob: -8.548807144165039
    10. 'heap' → logprob: -9.173807144165039

Token 15: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.007647445425391197
    2. ' he' → logprob: -4.882647514343262
    3. 'heap' → logprob: -10.257647514343262
    4. 'pop' → logprob: -12.882647514343262
    5. '.he' → logprob: -13.132647514343262
    6. '```' → logprob: -14.257647514343262
    7. '_he' → logprob: -15.007647514343262
    8. ' ' → logprob: -15.382647514343262
    9. 'hev' → logprob: -15.882647514343262
    10. 'hep' → logprob: -16.257646560668945

Token 16: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.696889623621246e-06
    2. 'ap' → logprob: -12.87500286102295
    3. ' app' → logprob: -18.875001907348633
    4. 'appen' → logprob: -19.000001907348633
    5. '_app' → logprob: -19.125001907348633
    6. 'appt' → logprob: -19.500001907348633
    7. 'appe' → logprob: -19.875001907348633
    8. 'App' → logprob: -20.250001907348633
    9. 'a' → logprob: -20.250001907348633
    10. 'APP' → logprob: -20.375001907348633

Token 17: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.3509722650051117
    2. 'ush' → logprob: -1.225972294807434
    3. 'app' → logprob: -6.9759721755981445
    4. 'p' → logprob: -7.3509721755981445
    5. 'pp' → logprob: -7.8509721755981445
    6. 'push' → logprob: -8.350972175598145
    7. 'pop' → logprob: -8.600972175598145
    8. 'sh' → logprob: -10.225972175598145
    9. 'opp' → logprob: -10.350972175598145
    10. 'he' → logprob: -10.975972175598145

Token 18: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6119009256362915
    2. '(' → logprob: -1.2369009256362915
    3. '(
' → logprob: -2.361900806427002
    4. '\n' → logprob: -3.861900806427002
    5. '\' → logprob: -4.111900806427002
    6. 'def' → logprob: -4.236900806427002
    7. '' → logprob: -5.111900806427002
    8. '```' → logprob: -5.611900806427002
    9. 'd' → logprob: -5.986900806427002
    10. '

' → logprob: -6.486900806427002

Token 19: 'import' (ID: 561)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.190848708152771
    2. '
' → logprob: -1.565848708152771
    3. '\' → logprob: -1.815848708152771
    4. 'def' → logprob: -2.0658488273620605
    5. '`' → logprob: -2.9408488273620605
    6. '' → logprob: -3.0658488273620605
    7. '```' → logprob: -3.9408488273620605
    8. '(' → logprob: -4.3158488273620605
    9. '(
' → logprob: -4.9408488273620605
    10. 'class' → logprob: -4.9408488273620605

Token 20: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.34389448165893555
    2. ' heap' → logprob: -2.4688944816589355
    3. ' collections' → logprob: -2.8438944816589355
    4. ' itertools' → logprob: -2.8438944816589355
    5. ' os' → logprob: -3.0938944816589355
    6. ' math' → logprob: -3.3438944816589355
    7. ' ' → logprob: -5.3438944816589355
    8. ' threading' → logprob: -6.7188944816589355
    9. ' re' → logprob: -6.9688944816589355
    10. ' random' → logprob: -6.9688944816589355

Token 21: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5950579047203064
    2. '
' → logprob: -1.4700579643249512
    3. '\' → logprob: -1.7200579643249512
    4. '```' → logprob: -4.345057964324951
    5. 'def' → logprob: -4.845057964324951
    6. 'n' → logprob: -5.345057964324951
    7. 'newline' → logprob: -5.345057964324951
    8. '

' → logprob: -6.095057964324951
    9. '' → logprob: -6.595057964324951
    10. 'd' → logprob: -6.720057964324951

Token 22: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5516994595527649
    2. '\n' → logprob: -1.4266993999481201
    3. '\' → logprob: -2.05169939994812
    4. '```' → logprob: -3.80169939994812
    5. '

' → logprob: -4.551699638366699
    6. '`' → logprob: -5.051699638366699
    7. '' → logprob: -5.176699638366699
    8. 'def' → logprob: -5.551699638366699
    9. 'd' → logprob: -6.176699638366699
    10. 'n' → logprob: -6.801699638366699

Token 23: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.6835567951202393
    2. ' threading' → logprob: -0.9335567951202393
    3. ' itertools' → logprob: -3.3085567951202393
    4. ' math' → logprob: -3.3085567951202393
    5. ' heap' → logprob: -4.30855655670166
    6. ' collections' → logprob: -4.43355655670166
    7. ' io' → logprob: -6.43355655670166
    8. 'os' → logprob: -7.18355655670166
    9. ' time' → logprob: -7.80855655670166
    10. ' bis' → logprob: -8.55855655670166

Token 24: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24718548357486725
    2. '

' → logprob: -1.872185468673706
    3. '\n' → logprob: -3.497185468673706
    4. '\' → logprob: -4.497185707092285
    5. '' → logprob: -4.872185707092285
    6. 'def' → logprob: -5.122185707092285
    7. '```' → logprob: -5.247185707092285
    8. '`' → logprob: -6.747185707092285
    9. 'd' → logprob: -6.997185707092285
    10. '#' → logprob: -7.372185707092285

Token 25: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8756898045539856
    2. '\' → logprob: -1.3756897449493408
    3. '\n' → logprob: -1.5006897449493408
    4. 'def' → logprob: -3.750689744949341
    5. '```' → logprob: -3.875689744949341
    6. '' → logprob: -4.12568998336792
    7. 'd' → logprob: -4.12568998336792
    8. '

' → logprob: -4.37568998336792
    9. '`' → logprob: -4.87568998336792
    10. '#' → logprob: -5.25068998336792

Token 26: ' bis' (ID: 7204)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.1299692690372467
    2. ' bis' → logprob: -3.254969358444214
    3. ' random' → logprob: -3.504969358444214
    4. ' heap' → logprob: -3.629969358444214
    5. ' threading' → logprob: -4.254969120025635
    6. ' os' → logprob: -4.754969120025635
    7. ' collections' → logprob: -6.754969120025635
    8. 'random' → logprob: -6.879969120025635
    9. ' time' → logprob: -7.629969120025635
    10. ' functools' → logprob: -7.629969120025635

Token 27: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -5.080963092041202e-06
    2. 'ected' → logprob: -12.625004768371582
    3. 't' → logprob: -14.375004768371582
    4. 'ection' → logprob: -14.875004768371582
    5. 'e' → logprob: -15.125004768371582
    6. 'ec' → logprob: -15.500004768371582
    7. 'ector' → logprob: -16.1250057220459
    8. 'ects' → logprob: -16.1250057220459
    9. 'ectl' → logprob: -16.7500057220459
    10. 'ective' → logprob: -17.2500057220459

Token 28: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47396910190582275
    2. '

' → logprob: -1.5989691019058228
    3. '\n' → logprob: -2.098968982696533
    4. 'import' → logprob: -4.223968982696533
    5. '' → logprob: -4.973968982696533
    6. 'n' → logprob: -4.973968982696533
    7. '\' → logprob: -5.098968982696533
    8. '#' → logprob: -5.348968982696533
    9. '```' → logprob: -5.848968982696533
    10. 'newline' → logprob: -5.848968982696533

Token 29: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5518065094947815
    2. '

' → logprob: -1.0518064498901367
    3. '\n' → logprob: -3.0518064498901367
    4. '' → logprob: -4.676806449890137
    5. 'n' → logprob: -5.176806449890137
    6. '#' → logprob: -5.926806449890137
    7. '\' → logprob: -5.926806449890137
    8. '```' → logprob: -6.551806449890137
    9. 'import' → logprob: -6.676806449890137
    10. 'd' → logprob: -6.801806449890137

Token 30: ' random' (ID: 7526)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.0799814984202385
    2. ' heap' → logprob: -2.829981565475464
    3. ' random' → logprob: -5.079981327056885
    4. ' threading' → logprob: -5.454981327056885
    5. ' functools' → logprob: -5.829981327056885
    6. 'random' → logprob: -6.454981327056885
    7. 'heap' → logprob: -7.454981327056885
    8. ' collections' → logprob: -7.454981327056885
    9. ' copy' → logprob: -7.954981327056885
    10. 'it' → logprob: -8.204981803894043

Token 31: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6359863877296448
    2. '\n' → logprob: -1.260986328125
    3. '

' → logprob: -2.260986328125
    4. '\' → logprob: -3.135986328125
    5. '' → logprob: -4.010986328125
    6. '#' → logprob: -5.260986328125
    7. '<|end|>' → logprob: -5.760986328125
    8. 'n' → logprob: -5.885986328125
    9. 'import' → logprob: -6.010986328125
    10. '```' → logprob: -6.260986328125

Token 32: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.18039071559906
    2. '
' → logprob: -1.68039071559906
    3. '

' → logprob: -1.68039071559906
    4. 'import' → logprob: -1.80539071559906
    5. '#' → logprob: -3.3053908348083496
    6. '' → logprob: -3.5553908348083496
    7. '<|end|>' → logprob: -3.5553908348083496
    8. 'class' → logprob: -4.18039083480835
    9. '```' → logprob: -4.18039083480835
    10. 'def' → logprob: -4.93039083480835

Token 33: ' LI' (ID: 14875)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03114147111773491
    2. '_' → logprob: -3.656141519546509
    3. ' _' → logprob: -5.65614128112793
    4. ' a' → logprob: -8.40614128112793
    5. ' dfs' → logprob: -8.53114128112793
    6. ' space' → logprob: -8.78114128112793
    7. ' solve' → logprob: -9.03114128112793
    8. ' main' → logprob: -9.03114128112793
    9. ' ‌' → logprob: -9.78114128112793
    10. ' ' → logprob: -10.03114128112793

Token 34: '():' (ID: 9442)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.6701940298080444
    2. 'ST' → logprob: -1.5451940298080444
    3. '()' → logprob: -2.295194149017334
    4. 'N' → logprob: -2.545194149017334
    5. '():' → logprob: -2.670194149017334
    6. 'nt' → logprob: -4.670194149017334
    7. 'n' → logprob: -4.670194149017334
    8. 'NT' → logprob: -5.920194149017334
    9. 'St' → logprob: -6.295194149017334
    10. 'S' → logprob: -7.795194149017334

Token 35: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.03754444792866707
    2. ' ' → logprob: -3.4125444889068604
    3. 'return' → logprob: -6.037544250488281
    4. ' []' → logprob: -6.912544250488281
    5. ' map' → logprob: -8.662544250488281
    6. '    ' → logprob: -8.787544250488281
    7. ' list' → logprob: -9.537544250488281
    8. ' ' → logprob: -10.537544250488281
    9. '	return' → logprob: -11.037544250488281
    10. '[]' → logprob: -11.412544250488281

Token 36: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.475173681974411
    2. 'list' → logprob: -0.9751737117767334
    3. 'map' → logprob: -7.600173473358154
    4. ' map' → logprob: -7.600173473358154
    5. '[' → logprob: -9.975173950195312
    6. 'int' → logprob: -10.725173950195312
    7. '[int' → logprob: -11.600173950195312
    8. '[list' → logprob: -11.600173950195312
    9. ' [' → logprob: -12.850173950195312
    10. '[]' → logprob: -12.850173950195312

Token 37: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.2729995988775045e-06
    2. ']int' → logprob: -12.250006675720215
    3. 'i' → logprob: -14.125006675720215
    4. ']' → logprob: -15.250006675720215
    5. ' int' → logprob: -15.250006675720215
    6. '(int' → logprob: -16.7500057220459
    7. '*' → logprob: -16.8750057220459
    8. '[int' → logprob: -17.0000057220459
    9. '0' → logprob: -17.1250057220459
    10. 'in' → logprob: -18.0000057220459

Token 38: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0079879742115736
    2. '(' → logprob: -5.507987976074219
    3. '(i' → logprob: -6.007987976074219
    4. '(input' → logprob: -6.757987976074219
    5. '(sys' → logprob: -9.382987976074219
    6. '(s' → logprob: -9.632987976074219
    7. ']' → logprob: -10.257987976074219
    8. '()]' → logprob: -10.632987976074219
    9. '(token' → logprob: -11.007987976074219
    10. '(a' → logprob: -11.132987976074219

Token 39: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038254350423812866
    2. ' for' → logprob: -4.163254261016846
    3. 'for' → logprob: -4.163254261016846
    4. '(x' → logprob: -5.288254261016846
    5. '(' → logprob: -7.538254261016846
    6. ' )' → logprob: -8.038254737854004
    7. ']' → logprob: -8.538254737854004
    8. '()' → logprob: -9.163254737854004
    9. '(i' → logprob: -9.913254737854004
    10. 'input' → logprob: -10.663254737854004

Token 40: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6399885416030884
    2. '(sys' → logprob: -1.6399885416030884
    3. ' for' → logprob: -1.8899885416030884
    4. '(' → logprob: -2.639988422393799
    5. '(x' → logprob: -3.514988422393799
    6. '(input' → logprob: -3.889988422393799
    7. ']' → logprob: -6.514988422393799
    8. ' (' → logprob: -6.764988422393799
    9. '(line' → logprob: -6.889988422393799
    10. ')' → logprob: -7.639988422393799

Token 41: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.03890354558825493
    2. 'input' → logprob: -3.5389034748077393
    3. ' sys' → logprob: -5.038903713226318
    4. '(input' → logprob: -6.913903713226318
    5. '<|end|>' → logprob: -7.163903713226318
    6. ' ' → logprob: -8.41390323638916
    7. '(sys' → logprob: -8.53890323638916
    8. ' raw' → logprob: -8.78890323638916
    9. '<|end|>' → logprob: -9.78890323638916
    10. ' x' → logprob: -10.03890323638916

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19701902568340302
    2. 'input' → logprob: -2.447019100189209
    3. ' input' → logprob: -3.072019100189209
    4. '(input' → logprob: -3.447019100189209
    5. '=sys' → logprob: -5.322019100189209
    6. '=input' → logprob: -5.447019100189209
    7. '(sys' → logprob: -6.322019100189209
    8. 'in' → logprob: -7.322019100189209
    9. ' sys' → logprob: -7.447019100189209
    10. ' ' → logprob: -8.19701862335205

Token 43: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.15396429598331451
    2. 'input' → logprob: -2.1539642810821533
    3. ' sys' → logprob: -3.6539642810821533
    4. ' input' → logprob: -7.153964519500732
    5. '=sys' → logprob: -12.903964042663574
    6. '(sys' → logprob: -14.028964042663574
    7. '	sys' → logprob: -15.028964042663574
    8. 's' → logprob: -15.903964042663574
    9. 'stdin' → logprob: -16.52896499633789
    10. ' ' → logprob: -17.02896499633789

Token 44: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.5690089639974758e-05
    2. '.' → logprob: -11.875015258789062
    3. '.argv' → logprob: -12.250015258789062
    4. '.readline' → logprob: -13.000015258789062
    5. '.stdout' → logprob: -14.375015258789062
    6. '.std' → logprob: -14.375015258789062
    7. 'stdin' → logprob: -15.625015258789062
    8. '.st' → logprob: -16.000015258789062
    9. '(stdin' → logprob: -16.250015258789062
    10. '.input' → logprob: -16.250015258789062

Token 45: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -7.159660890465602e-05
    2. '.' → logprob: -9.75007152557373
    3. '.read' → logprob: -11.50007152557373
    4. '.readlines' → logprob: -13.37507152557373
    5. '().' → logprob: -14.12507152557373
    6. ' .' → logprob: -15.25007152557373
    7. 'read' → logprob: -15.37507152557373
    8. ' readline' → logprob: -15.37507152557373
    9. '].' → logprob: -16.750072479248047
    10. '.stdin' → logprob: -17.250072479248047

Token 46: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2065812051296234
    2. '()]' → logprob: -1.7065812349319458
    3. '()' → logprob: -5.331581115722656
    4. '()].' → logprob: -8.206581115722656
    5. '())' → logprob: -11.081581115722656
    6. '()][' → logprob: -11.331581115722656
    7. '()[' → logprob: -11.956581115722656
    8. ' ()' → logprob: -13.081581115722656
    9. '(' → logprob: -13.456581115722656
    10. '()-' → logprob: -13.456581115722656

Token 47: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.1800888627767563
    2. 'split' → logprob: -1.9300888776779175
    3. 'rstrip' → logprob: -3.930088758468628
    4. 'read' → logprob: -10.680088996887207
    5. ' strip' → logprob: -13.055088996887207
    6. ' split' → logprob: -14.180088996887207
    7. 'decode' → logprob: -14.430088996887207
    8. '(split' → logprob: -15.805088996887207
    9. '_strip' → logprob: -16.93008804321289
    10. '(strip' → logprob: -16.93008804321289

Token 48: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -7.338466093642637e-05
    2. '(' → logprob: -10.250073432922363
    3. '()' → logprob: -10.250073432922363
    4. ']' → logprob: -13.625073432922363
    5. '())' → logprob: -14.500073432922363
    6. '('' → logprob: -15.125073432922363
    7. '()]
' → logprob: -15.500073432922363
    8. '()][' → logprob: -16.250072479248047
    9. ']()' → logprob: -16.375072479248047
    10. '()].' → logprob: -16.375072479248047

Token 49: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0014515443472191691
    2. '\' → logprob: -7.50145149230957
    3. 'd' → logprob: -8.25145149230957
    4. '
' → logprob: -8.50145149230957
    5. '\n' → logprob: -8.62645149230957
    6. '    
' → logprob: -9.87645149230957
    7. '#' → logprob: -10.25145149230957
    8. '```' → logprob: -10.37645149230957
    9. '' → logprob: -10.50145149230957
    10. ' 
' → logprob: -11.00145149230957

Token 50: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.05410471558570862
    2. ' I' → logprob: -3.179104804992676
    3. 'II' → logprob: -4.804104804992676
    4. 'int' → logprob: -6.554104804992676
    5. ' II' → logprob: -7.554104804992676
    6. 'input' → logprob: -8.429104804992676
    7. 'MI' → logprob: -9.304104804992676
    8. 'IA' → logprob: -9.554104804992676
    9. 'INT' → logprob: -9.554104804992676
    10. 'IN' → logprob: -9.554104804992676

Token 51: '():' (ID: 9442)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.23599687218666077
    2. 'n' → logprob: -2.485996961593628
    3. 'N' → logprob: -2.735996961593628
    4. '():' → logprob: -3.110996961593628
    5. 'nt' → logprob: -4.110996723175049
    6. 'nit' → logprob: -7.985996723175049
    7. 'A' → logprob: -9.360997200012207
    8. '()]' → logprob: -9.610997200012207
    9. 'NT' → logprob: -9.735997200012207
    10. '`()' → logprob: -9.860997200012207

Token 52: ' return' (ID: 622)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05250454321503639
    2. 'int' → logprob: -3.052504539489746
    3. ' return' → logprob: -5.552504539489746
    4. 'return' → logprob: -10.427504539489746
    5. ' ' → logprob: -13.677504539489746
    6. '=int' → logprob: -14.427504539489746
    7. '(int' → logprob: -14.802504539489746
    8. '	int' → logprob: -18.052505493164062
    9. '[int' → logprob: -18.177505493164062
    10. ':int' → logprob: -18.302505493164062

Token 53: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06196824833750725
    2. ' int' → logprob: -2.8119683265686035
    3. ' ' → logprob: -15.186967849731445
    4. '	int' → logprob: -15.811967849731445
    5. '(int' → logprob: -15.811967849731445
    6. 'in' → logprob: -16.811967849731445
    7. '[int' → logprob: -17.061967849731445
    8. '  ' → logprob: -17.311967849731445
    9. '<int' → logprob: -17.686967849731445
    10. '=int' → logprob: -17.936967849731445

Token 54: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.12699173390865326
    2. '(' → logprob: -2.1269917488098145
    3. '(input' → logprob: -10.251991271972656
    4. ' (' → logprob: -11.376991271972656
    5. 'sys' → logprob: -12.251991271972656
    6. '(x' → logprob: -12.876991271972656
    7. '(system' → logprob: -13.251991271972656
    8. '(System' → logprob: -13.501991271972656
    9. '(Sys' → logprob: -13.751991271972656
    10. '(

' → logprob: -14.001991271972656

Token 55: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.5690089639974758e-05
    2. '.readline' → logprob: -11.750015258789062
    3. 'stdin' → logprob: -12.000015258789062
    4. '.stdout' → logprob: -14.000015258789062
    5. '.argv' → logprob: -15.125015258789062
    6. '.' → logprob: -15.500015258789062
    7. '(stdin' → logprob: -15.750015258789062
    8. ' stdin' → logprob: -16.375015258789062
    9. '.std' → logprob: -17.000015258789062
    10. '.stderr' → logprob: -18.875015258789062

Token 56: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00013953536108601838
    2. '().' → logprob: -9.250139236450195
    3. '())' → logprob: -11.000139236450195
    4. ')' → logprob: -11.375139236450195
    5. '.stdin' → logprob: -12.125139236450195
    6. '.' → logprob: -12.500139236450195
    7. ' readline' → logprob: -13.500139236450195
    8. '()' → logprob: -13.750139236450195
    9. 'read' → logprob: -13.750139236450195
    10. 'stdin' → logprob: -13.875139236450195

Token 57: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.13804446160793304
    2. '().' → logprob: -2.1380443572998047
    3. '()' → logprob: -4.513044357299805
    4. '.readline' → logprob: -10.013044357299805
    5. '()]' → logprob: -11.388044357299805
    6. ' ())' → logprob: -11.388044357299805
    7. '();)' → logprob: -11.763044357299805
    8. ')' → logprob: -11.763044357299805
    9. '()))' → logprob: -13.013044357299805
    10. '()`' → logprob: -14.638044357299805

Token 58: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00249420665204525
    2. '\' → logprob: -6.3774943351745605
    3. 'd' → logprob: -7.2524943351745605
    4. 'n' → logprob: -10.877493858337402
    5. '
' → logprob: -11.502493858337402
    6. '\n' → logprob: -11.627493858337402
    7. 'class' → logprob: -11.627493858337402
    8. '```' → logprob: -11.627493858337402
    9. ' 
' → logprob: -12.002493858337402
    10. '' → logprob: -12.252493858337402

Token 59: ' LS' (ID: 60790)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0021936828270554543
    2. 'LS' → logprob: -6.252193450927734
    3. ' S' → logprob: -9.002193450927734
    4. 'L' → logprob: -9.627193450927734
    5. 'SI' → logprob: -9.877193450927734
    6. 's' → logprob: -12.627193450927734
    7. ' LS' → logprob: -12.627193450927734
    8. 'F' → logprob: -12.752193450927734
    9. 'input' → logprob: -12.877193450927734
    10. 'SS' → logprob: -13.002193450927734

Token 60: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.018172772601246834
    2. '()' → logprob: -4.018172740936279
    3. '()>' → logprob: -12.268173217773438
    4. ' ()' → logprob: -12.268173217773438
    5. '().' → logprob: -12.643173217773438
    6. ' ():' → logprob: -12.643173217773438
    7. '():
' → logprob: -13.518173217773438
    8. 'def' → logprob: -13.643173217773438
    9. '()]' → logprob: -14.018173217773438
    10. '(){' → logprob: -14.018173217773438

Token 61: 'return' (ID: 1034)
  Prédit: 'return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.330312579870224
    2. '()' → logprob: -2.205312490463257
    3. ' return' → logprob: -2.455312490463257
    4. 'sys' → logprob: -3.455312490463257
    5. 'lambda' → logprob: -3.580312490463257
    6. ' lambda' → logprob: -4.830312728881836
    7. '[]' → logprob: -5.080312728881836
    8. 'def' → logprob: -5.080312728881836
    9. ' sys' → logprob: -6.455312728881836
    10. '():' → logprob: -6.955312728881836

Token 62: ' [' (ID: 723)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3432328999042511
    2. ' sys' → logprob: -1.3432328701019287
    3. ' [' → logprob: -3.9682328701019287
    4. '[' → logprob: -4.718233108520508
    5. 'list' → logprob: -7.218233108520508
    6. ' list' → logprob: -8.093233108520508
    7. '(sys' → logprob: -8.343233108520508
    8. '[list' → logprob: -8.468233108520508
    9. '[s' → logprob: -9.843233108520508
    10. '[x' → logprob: -10.218233108520508

Token 63: 'list' (ID: 2641)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0006348780007101595
    2. 'sys' → logprob: -7.500634670257568
    3. 's' → logprob: -9.625635147094727
    4. 'str' → logprob: -11.125635147094727
    5. ' x' → logprob: -14.000635147094727
    6. '(x' → logprob: -15.750635147094727
    7. 'input' → logprob: -15.750635147094727
    8. ' sys' → logprob: -16.750635147094727
    9. 'w' → logprob: -17.000635147094727
    10. 'list' → logprob: -18.375635147094727

Token 64: '(x' (ID: 4061)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.38876157999038696
    2. '(map' → logprob: -1.1387615203857422
    3. '(str' → logprob: -7.138761520385742
    4. '(' → logprob: -7.638761520385742
    5. '(x' → logprob: -7.763761520385742
    6. 'map' → logprob: -9.513761520385742
    7. '(input' → logprob: -9.763761520385742
    8. 'sys' → logprob: -10.763761520385742
    9. '(s' → logprob: -11.263761520385742
    10. '(system' → logprob: -11.888761520385742

Token 65: ')' (ID: 8)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0003595376620069146
    2. '(' → logprob: -8.750359535217285
    3. 'sys' → logprob: -9.625359535217285
    4. '=sys' → logprob: -10.375359535217285
    5. '(str' → logprob: -10.625359535217285
    6. '(s' → logprob: -10.875359535217285
    7. '(map' → logprob: -11.125359535217285
    8. '(input' → logprob: -11.375359535217285
    9. '())' → logprob: -11.625359535217285
    10. '(system' → logprob: -12.000359535217285

Token 66: ' for' (ID: 395)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -8.08944896562025e-05
    2. 'sys' → logprob: -9.750081062316895
    3. '=sys' → logprob: -11.625081062316895
    4. '()' → logprob: -12.125081062316895
    5. '(' → logprob: -12.500081062316895
    6. '(s' → logprob: -13.250081062316895
    7. '(input' → logprob: -14.750081062316895
    8. '(map' → logprob: -14.875081062316895
    9. '(system' → logprob: -14.875081062316895
    10. '(str' → logprob: -15.000081062316895

Token 67: ' x' (ID: 1215)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0012497581774368882
    2. ' sys' → logprob: -7.37624979019165
    3. '(' → logprob: -8.126249313354492
    4. 'sys' → logprob: -8.376249313354492
    5. '=sys' → logprob: -10.126249313354492
    6. '(s' → logprob: -10.751249313354492
    7. ' (' → logprob: -11.001249313354492
    8. '(system' → logprob: -11.501249313354492
    9. '(x' → logprob: -12.501249313354492
    10. '	sys' → logprob: -13.001249313354492

Token 68: ' in' (ID: 306)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0726417526602745
    2. '(' → logprob: -2.6976418495178223
    3. '()' → logprob: -6.447641849517822
    4. '=sys' → logprob: -7.572641849517822
    5. ' in' → logprob: -8.447641372680664
    6. 'sys' → logprob: -8.572641372680664
    7. 'in' → logprob: -8.947641372680664
    8. ' (' → logprob: -11.072641372680664
    9. '(s' → logprob: -11.697641372680664
    10. ' sys' → logprob: -11.697641372680664

Token 69: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0011970169143751264
    2. ' sys' → logprob: -6.75119686126709
    3. 'input' → logprob: -11.25119686126709
    4. '(sys' → logprob: -11.37619686126709
    5. 'str' → logprob: -13.37619686126709
    6. 'map' → logprob: -14.50119686126709
    7. '=sys' → logprob: -15.62619686126709
    8. '	sys' → logprob: -16.251197814941406
    9. ' input' → logprob: -17.376197814941406
    10. 'stdin' → logprob: -18.251197814941406

Token 70: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0002777822664938867
    2. 'stdin' → logprob: -8.750277519226074
    3. '.stdout' → logprob: -9.750277519226074
    4. '.readline' → logprob: -10.625277519226074
    5. '.' → logprob: -10.875277519226074
    6. '(stdin' → logprob: -11.625277519226074
    7. '.std' → logprob: -12.000277519226074
    8. '.argv' → logprob: -14.250277519226074
    9. '].' → logprob: -14.625277519226074
    10. '.stderr' → logprob: -14.875277519226074

Token 71: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.023792054504156113
    2. '().' → logprob: -3.773792028427124
    3. 'read' → logprob: -8.523792266845703
    4. 'stdin' → logprob: -9.023792266845703
    5. 'line' → logprob: -9.773792266845703
    6. '())' → logprob: -10.148792266845703
    7. '()' → logprob: -10.273792266845703
    8. '.stdin' → logprob: -10.523792266845703
    9. '.readlines' → logprob: -11.023792266845703
    10. ' readline' → logprob: -11.898792266845703

Token 72: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003673940955195576
    2. '()]' → logprob: -8.500367164611816
    3. '()' → logprob: -8.750367164611816
    4. '()].' → logprob: -12.375367164611816
    5. '())' → logprob: -14.375367164611816
    6. ' ().' → logprob: -15.375367164611816
    7. '()[' → logprob: -15.875367164611816
    8. '()][' → logprob: -16.000368118286133
    9. '().'' → logprob: -16.625368118286133
    10. '().__' → logprob: -17.125368118286133

Token 73: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.04117148742079735
    2. 'rstrip' → logprob: -3.5411715507507324
    3. 'split' → logprob: -4.541171550750732
    4. 'read' → logprob: -7.291171550750732
    5. 'decode' → logprob: -11.916171073913574
    6. ' strip' → logprob: -12.041171073913574
    7. 'str' → logprob: -14.666171073913574
    8. 'rs' → logprob: -16.29117202758789
    9. ' split' → logprob: -16.29117202758789
    10. 'replace' → logprob: -16.41617202758789

Token 74: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.000217006730963476
    2. '()' → logprob: -8.50021743774414
    3. '(' → logprob: -11.87521743774414
    4. ']' → logprob: -12.75021743774414
    5. ']()' → logprob: -13.62521743774414
    6. '()][' → logprob: -13.75021743774414
    7. '())' → logprob: -14.75021743774414
    8. '()]
' → logprob: -15.37521743774414
    9. ' ()' → logprob: -15.50021743774414
    10. '()].' → logprob: -15.87521743774414

Token 75: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009860089048743248
    2. '\' → logprob: -5.384860038757324
    3. 'd' → logprob: -5.384860038757324
    4. '
' → logprob: -8.509860038757324
    5. '```' → logprob: -9.384860038757324
    6. '#' → logprob: -9.634860038757324
    7. '\n' → logprob: -9.759860038757324
    8. 'D' → logprob: -10.134860038757324
    9. ' 
' → logprob: -10.634860038757324
    10. '' → logprob: -10.759860038757324

Token 76: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.006597306113690138
    2. 'I' → logprob: -6.131597518920898
    3. 'L' → logprob: -6.131597518920898
    4. ' S' → logprob: -6.381597518920898
    5. 'LS' → logprob: -7.756597518920898
    6. 'LI' → logprob: -9.881597518920898
    7. ' L' → logprob: -11.006597518920898
    8. 'SS' → logprob: -11.506597518920898
    9. '()' → logprob: -12.256597518920898
    10. 'A' → logprob: -12.881597518920898

Token 77: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01113012246787548
    2. '()' → logprob: -4.511130332946777
    3. ' ():' → logprob: -10.011130332946777
    4. ' ()' → logprob: -10.761130332946777
    5. '().' → logprob: -11.761130332946777
    6. '()>' → logprob: -12.386130332946777
    7. '():
' → logprob: -14.136130332946777
    8. '()]' → logprob: -14.761130332946777
    9. '(' → logprob: -15.011130332946777
    10. '()<' → logprob: -15.011130332946777

Token 78: ' return' (ID: 622)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.1016225814819336
    2. 'return' → logprob: -2.3516225814819336
    3. ' sys' → logprob: -6.726622581481934
    4. ' return' → logprob: -9.101622581481934
    5. '(sys' → logprob: -9.851622581481934
    6. '=sys' → logprob: -9.976622581481934
    7. '	sys' → logprob: -13.101622581481934
    8. 'input' → logprob: -13.476622581481934
    9. 'def' → logprob: -14.476622581481934
    10. '_sys' → logprob: -14.726622581481934

Token 79: ' list' (ID: 1562)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.07893815636634827
    2. ' sys' → logprob: -2.5789382457733154
    3. 'input' → logprob: -10.078938484191895
    4. ' input' → logprob: -12.578938484191895
    5. '(sys' → logprob: -13.453938484191895
    6. '=sys' → logprob: -14.453938484191895
    7. '	sys' → logprob: -14.703938484191895
    8. 'str' → logprob: -14.828938484191895
    9. ' ' → logprob: -15.703938484191895
    10. '.sys' → logprob: -16.953937530517578

Token 80: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.005595395341515541
    2. '()' → logprob: -5.7555952072143555
    3. '(' → logprob: -6.2555952072143555
    4. '(str' → logprob: -8.255595207214355
    5. '(input' → logprob: -8.755595207214355
    6. '(list' → logprob: -11.255595207214355
    7. '(stdin' → logprob: -11.630595207214355
    8. '(strip' → logprob: -11.755595207214355
    9. '(System' → logprob: -11.880595207214355
    10. '(s' → logprob: -12.130595207214355

Token 81: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.021250076591968536
    2. '().' → logprob: -4.021250247955322
    3. '.readline' → logprob: -6.396250247955322
    4. '.' → logprob: -7.271250247955322
    5. '.stdout' → logprob: -8.521249771118164
    6. '(stdin' → logprob: -8.771249771118164
    7. 'stdin' → logprob: -9.146249771118164
    8. '.argv' → logprob: -9.396249771118164
    9. '())' → logprob: -9.646249771118164
    10. '()' → logprob: -10.021249771118164

Token 82: '.readline' (ID: 74673)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.9603751301765442
    2. '()' → logprob: -1.0853750705718994
    3. '().' → logprob: -1.3353750705718994
    4. ')' → logprob: -4.4603753089904785
    5. '.readline' → logprob: -5.7103753089904785
    6. '()]' → logprob: -7.2103753089904785
    7. '`()' → logprob: -9.08537483215332
    8. '();)' → logprob: -9.46037483215332
    9. '.' → logprob: -9.58537483215332
    10. 'read' → logprob: -9.58537483215332

Token 83: '())' (ID: 3516)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3064747452735901
    2. '()' → logprob: -1.8064746856689453
    3. '())' → logprob: -2.3064746856689453
    4. '()]' → logprob: -9.431474685668945
    5. '();)' → logprob: -11.806474685668945
    6. '()[' → logprob: -11.931474685668945
    7. '().__' → logprob: -13.306474685668945
    8. '()<' → logprob: -13.306474685668945
    9. ' ())' → logprob: -13.306474685668945
    10. '()?>' → logprob: -13.306474685668945

Token 84: '[:-' (ID: 63556)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47431161999702454
    2. '
' → logprob: -1.0993115901947021
    3. '\n' → logprob: -3.599311590194702
    4. '\' → logprob: -4.849311828613281
    5. '#' → logprob: -5.474311828613281
    6. 'd' → logprob: -6.224311828613281
    7. 'n' → logprob: -6.349311828613281
    8. '

' → logprob: -8.224311828613281
    9. ' 
' → logprob: -8.474311828613281
    10. '' → logprob: -8.724311828613281

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.75
    3. '```' → logprob: -21.375
    4. '\n' → logprob: -22.0
    5. '\' → logprob: -22.25
    6. '
' → logprob: -22.5
    7. '   ' → logprob: -23.375
    8. '

' → logprob: -23.5
    9. 'newline' → logprob: -23.75
    10. '"\' → logprob: -23.75

Token 86: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016126688569784164
    2. ')' → logprob: -4.14112663269043
    3. ')]' → logprob: -10.01612663269043
    4. '])' → logprob: -10.76612663269043
    5. '()]' → logprob: -11.64112663269043
    6. '']' → logprob: -11.76612663269043
    7. '()' → logprob: -12.76612663269043
    8. '(' → logprob: -13.01612663269043
    9. '）' → logprob: -13.64112663269043
    10. '<|end|>' → logprob: -13.64112663269043

Token 87: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.515127956867218
    2. 'd' → logprob: -1.0151278972625732
    3. '
' → logprob: -3.3901278972625732
    4. '\' → logprob: -5.640128135681152
    5. '#' → logprob: -6.265128135681152
    6. ' 
' → logprob: -8.515128135681152
    7. '' → logprob: -8.515128135681152
    8. 'n' → logprob: -8.640128135681152
    9. 'de' → logprob: -8.890128135681152
    10. '\n' → logprob: -9.390128135681152

Token 88: ' IR' (ID: 23712)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2023730278015137
    2. ' ' → logprob: -1.9523730278015137
    3. 's' → logprob: -2.7023730278015137
    4. 'I' → logprob: -2.8273730278015137
    5. 'str' → logprob: -3.4523730278015137
    6. 'r' → logprob: -3.4523730278015137
    7. 'range' → logprob: -3.4523730278015137
    8. 'L' → logprob: -3.5773730278015137
    9. ' sys' → logprob: -3.8273730278015137
    10. 'S' → logprob: -3.8273730278015137

Token 89: '(n' (ID: 2406)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12611129879951477
    2. '():' → logprob: -2.2511112689971924
    3. 'ange' → logprob: -4.6261115074157715
    4. 'ANGE' → logprob: -6.2511115074157715
    5. '()]' → logprob: -8.251111030578613
    6. 'e' → logprob: -8.626111030578613
    7. 'E' → logprob: -8.751111030578613
    8. 'A' → logprob: -9.001111030578613
    9. '():
' → logprob: -9.501111030578613
    10. '()}' → logprob: -9.626111030578613

Token 90: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03061576373875141
    2. ')' → logprob: -3.53061580657959
    3. '()' → logprob: -7.40561580657959
    4. '():' → logprob: -8.78061580657959
    5. ' ):' → logprob: -9.65561580657959
    6. ']:' → logprob: -11.40561580657959
    7. '）：' → logprob: -11.53061580657959
    8. '):
' → logprob: -12.53061580657959
    9. ']):' → logprob: -12.53061580657959
    10. ']' → logprob: -12.65561580657959

Token 91: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42542344331741333
    2. ' ' → logprob: -1.8004233837127686
    3. ' return' → logprob: -2.4254233837127686
    4. '[' → logprob: -4.050423622131348
    5. '   ' → logprob: -4.300423622131348
    6. ' :' → logprob: -4.550423622131348
    7. ':return' → logprob: -4.550423622131348
    8. ' for' → logprob: -4.675423622131348
    9. '	return' → logprob: -4.675423622131348
    10. ' []' → logprob: -5.425423622131348

Token 92: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20762386918067932
    2. ' return' → logprob: -1.707623839378357
    3. 'r' → logprob: -5.5826239585876465
    4. '[' → logprob: -7.2076239585876465
    5. ' for' → logprob: -7.8326239585876465
    6. 'for' → logprob: -7.8326239585876465
    7. ' r' → logprob: -7.8326239585876465
    8. 'ret' → logprob: -8.332623481750488
    9. 'res' → logprob: -9.957623481750488
    10. 's' → logprob: -9.957623481750488

Token 93: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.001891745370812714
    2. '[' → logprob: -6.501891613006592
    3. '[I' → logprob: -8.12689208984375
    4. '[Int' → logprob: -9.75189208984375
    5. '[i' → logprob: -11.50189208984375
    6. '[List' → logprob: -11.75189208984375
    7. '[list' → logprob: -12.12689208984375
    8. ' [' → logprob: -12.12689208984375
    9. '[random' → logprob: -13.00189208984375
    10. '[str' → logprob: -14.37689208984375

Token 94: 'I' (ID: 40)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04859611392021179
    2. 'I' → logprob: -3.048596143722534
    3. ' int' → logprob: -11.923596382141113
    4. '[int' → logprob: -13.798596382141113
    5. '(int' → logprob: -15.173596382141113
    6. ' I' → logprob: -15.173596382141113
    7. '<int' → logprob: -15.673596382141113
    8. ']int' → logprob: -15.798596382141113
    9. 'ints' → logprob: -16.548595428466797
    10. '   ' → logprob: -17.048595428466797

Token 95: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.939851037808694e-05
    2. '()]' → logprob: -10.625029563903809
    3. ' ()' → logprob: -13.125029563903809
    4. '()
' → logprob: -13.375029563903809
    5. '(' → logprob: -13.750029563903809
    6. '（）' → logprob: -16.000028610229492
    7. ']()' → logprob: -16.125028610229492
    8. '()

' → logprob: -17.375028610229492
    9. '`()' → logprob: -17.375028610229492
    10. '()`' → logprob: -17.750028610229492

Token 96: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00034893216798081994
    2. 'for' → logprob: -8.500349044799805
    3. ' for' → logprob: -8.875349044799805
    4. '(' → logprob: -13.000349044799805
    5. ' ()' → logprob: -13.625349044799805
    6. ')' → logprob: -14.125349044799805
    7. '	for' → logprob: -14.375349044799805
    8. '()]' → logprob: -14.500349044799805
    9. ']' → logprob: -15.375349044799805
    10. '()
' → logprob: -16.250349044799805

Token 97: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5250928401947021
    2. '_' → logprob: -0.9000928401947021
    3. ' ' → logprob: -6.650093078613281
    4. '(' → logprob: -7.900093078613281
    5. '_i' → logprob: -8.900093078613281
    6. ' i' → logprob: -9.150093078613281
    7. 'i' → logprob: -10.900093078613281
    8. ' in' → logprob: -11.025093078613281
    9. '(_' → logprob: -11.775093078613281
    10. '_n' → logprob: -12.275093078613281

Token 98: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3136069178581238
    2. 'in' → logprob: -1.5636069774627686
    3. 'n' → logprob: -2.9386069774627686
    4. ' ' → logprob: -5.1886067390441895
    5. '_' → logprob: -7.1886067390441895
    6. ' n' → logprob: -8.063607215881348
    7. '	in' → logprob: -9.688607215881348
    8. ' i' → logprob: -10.438607215881348
    9. '_in' → logprob: -10.688607215881348
    10. 'range' → logprob: -10.813607215881348

Token 99: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931635141372681
    2. 'range' → logprob: -0.6931635141372681
    3. '	range' → logprob: -11.818163871765137
    4. 'rang' → logprob: -12.943163871765137
    5. ' xrange' → logprob: -13.068163871765137
    6. '(range' → logprob: -13.193163871765137
    7. ' ' → logprob: -13.568163871765137
    8. 'ra' → logprob: -14.443163871765137
    9. ' ran' → logprob: -15.068163871765137
    10. 'ran' → logprob: -15.443163871765137

Token 100: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006716079078614712
    2. '(' → logprob: -5.006716251373291
    3. ' (' → logprob: -14.881715774536133
    4. '(
' → logprob: -15.506715774536133
    5. 'n' → logprob: -16.256715774536133
    6. ' n' → logprob: -17.506715774536133
    7. '(

' → logprob: -17.631715774536133
    8. ')n' → logprob: -18.006715774536133
    9. '	n' → logprob: -19.256715774536133
    10. '((' → logprob: -19.256715774536133

Token 101: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.5094070477061905e-05
    2. ']' → logprob: -11.625015258789062
    3. ')' → logprob: -12.125015258789062
    4. ')]
' → logprob: -14.875015258789062
    5. '')]' → logprob: -16.375015258789062
    6. ')],' → logprob: -16.750015258789062
    7. '])' → logprob: -17.250015258789062
    8. ')].' → logprob: -17.375015258789062
    9. ')])' → logprob: -17.375015258789062
    10. '}]' → logprob: -17.750015258789062

Token 102: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15038438141345978
    2. '
' → logprob: -2.0253844261169434
    3. '<|end|>' → logprob: -5.900384426116943
    4. '\' → logprob: -6.775384426116943
    5. ' 
' → logprob: -7.150384426116943
    6. '```' → logprob: -7.275384426116943
    7. '  
' → logprob: -7.650384426116943
    8. '    
' → logprob: -7.775384426116943
    9. ' def' → logprob: -8.150383949279785
    10. 'd' → logprob: -8.400383949279785

Token 103: ' L' (ID: 451)
  Prédit: 'DR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DR' → logprob: -1.503271460533142
    2. 'SR' → logprob: -1.503271460533142
    3. 'LS' → logprob: -1.753271460533142
    4. 'LR' → logprob: -2.0032715797424316
    5. 'L' → logprob: -2.3782715797424316
    6. 'OR' → logprob: -2.7532715797424316
    7. 'WR' → logprob: -3.3782715797424316
    8. 'IS' → logprob: -3.8782715797424316
    9. 'IR' → logprob: -4.378271579742432
    10. 'AR' → logprob: -5.378271579742432

Token 104: 'IR' (ID: 4368)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -7.226628895296017e-06
    2. 'IR' → logprob: -13.000007629394531
    3. 'R' → logprob: -13.250007629394531
    4. ' I' → logprob: -14.500007629394531
    5. 'S' → logprob: -14.750007629394531
    6. '```' → logprob: -14.750007629394531
    7. 'E' → logprob: -15.000007629394531
    8. 'O' → logprob: -15.500007629394531
    9. '=[]' → logprob: -15.500007629394531
    10. 'IST' → logprob: -15.875007629394531

Token 105: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00016027313540689647
    2. '(' → logprob: -8.750160217285156
    3. '(N' → logprob: -13.500160217285156
    4. ' (' → logprob: -15.500160217285156
    5. '(i' → logprob: -17.750160217285156
    6. '(num' → logprob: -18.000160217285156
    7. '(a' → logprob: -18.125160217285156
    8. '<|end|>' → logprob: -18.250160217285156
    9. '(size' → logprob: -18.375160217285156
    10. '```' → logprob: -18.500160217285156

Token 106: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004299676511436701
    2. '()' → logprob: -6.379299640655518
    3. ')' → logprob: -6.504299640655518
    4. '():' → logprob: -6.879299640655518
    5. ' ):' → logprob: -10.504300117492676
    6. ']:' → logprob: -11.004300117492676
    7. '）：' → logprob: -11.379300117492676
    8. '):
' → logprob: -12.129300117492676
    9. ']):' → logprob: -13.254300117492676
    10. '(n' → logprob: -14.129300117492676

Token 107: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5946162939071655
    2. '():' → logprob: -1.8446162939071655
    3. '(' → logprob: -2.594616413116455
    4. ' :' → logprob: -2.719616413116455
    5. ' return' → logprob: -2.969616413116455
    6. ':return' → logprob: -3.469616413116455
    7. ' (' → logprob: -4.094616413116455
    8. ' ' → logprob: -4.719616413116455
    9. '[' → logprob: -4.844616413116455
    10. '   ' → logprob: -4.969616413116455

Token 108: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.06035296246409416
    2. 'return' (adapté à ' return') → logprob: -3.1853530406951904
    3. ' [' → logprob: -4.185352802276611
    4. '[' → logprob: -6.560352802276611
    5. '   ' → logprob: -7.935352802276611
    6. ' ' → logprob: -8.93535327911377
    7. '[]' → logprob: -10.31035327911377
    8. '[int' → logprob: -11.18535327911377
    9. '  ' → logprob: -11.56035327911377
    10. '    ' → logprob: -12.18535327911377

Token 109: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.49932751059532166
    2. ' [' → logprob: -1.249327540397644
    3. '[' → logprob: -2.2493274211883545
    4. '[Int' → logprob: -7.749327659606934
    5. '[I' → logprob: -7.999327659606934
    6. '[List' → logprob: -10.124327659606934
    7. '[list' → logprob: -10.374327659606934
    8. ' LI' → logprob: -11.624327659606934
    9. '[x' → logprob: -11.624327659606934
    10. '[L' → logprob: -11.874327659606934

Token 110: 'LI' (ID: 14313)
  Prédit: 'LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -5.514650183613412e-05
    2. 'int' → logprob: -10.500055313110352
    3. '[int' → logprob: -11.000055313110352
    4. ' LI' → logprob: -11.750055313110352
    5. 'list' → logprob: -13.000055313110352
    6. '[' → logprob: -14.375055313110352
    7. 'Li' → logprob: -17.25005531311035
    8. 'li' → logprob: -17.37505531311035
    9. '   ' → logprob: -18.00005531311035
    10. 'List' → logprob: -18.50005531311035

Token 111: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16121910512447357
    2. '(n' → logprob: -1.9112191200256348
    3. '(i' → logprob: -7.036219120025635
    4. '()]' → logprob: -9.786218643188477
    5. '(' → logprob: -10.661218643188477
    6. ' ()' → logprob: -11.161218643188477
    7. '()(' → logprob: -11.786218643188477
    8. '()
' → logprob: -12.036218643188477
    9. '(x' → logprob: -13.411218643188477
    10. '())' → logprob: -13.661218643188477

Token 112: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.171581091824919e-05
    2. ' (' → logprob: -10.50007152557373
    3. '(' → logprob: -10.87507152557373
    4. ' for' → logprob: -11.37507152557373
    5. '(i' → logprob: -11.75007152557373
    6. 'for' → logprob: -12.12507152557373
    7. ')' → logprob: -16.250072479248047
    8. ' ' → logprob: -16.375072479248047
    9. 'n' → logprob: -17.500072479248047
    10. '((' → logprob: -18.000072479248047

Token 113: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7216373085975647
    2. 'i' → logprob: -1.09663724899292
    3. ' range' → logprob: -2.22163724899292
    4. 'range' → logprob: -2.84663724899292
    5. '_' → logprob: -4.47163724899292
    6. ' _' → logprob: -6.72163724899292
    7. '_i' → logprob: -7.84663724899292
    8. ' in' → logprob: -8.596637725830078
    9. ' ' → logprob: -8.971637725830078
    10. '(range' → logprob: -9.596637725830078

Token 114: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16079065203666687
    2. ' in' → logprob: -1.9107906818389893
    3. 'n' → logprob: -8.03579044342041
    4. 'i' → logprob: -8.66079044342041
    5. '(' → logprob: -10.78579044342041
    6. 'range' → logprob: -10.78579044342041
    7. ' i' → logprob: -12.41079044342041
    8. ' ' → logprob: -12.66079044342041
    9. '   ' → logprob: -12.78579044342041
    10. '(n' → logprob: -13.03579044342041

Token 115: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014421462081372738
    2. ' range' → logprob: -4.264421463012695
    3. '(range' → logprob: -8.264421463012695
    4. '	range' → logprob: -15.764421463012695
    5. 'ange' → logprob: -16.639421463012695
    6. 'in' → logprob: -16.639421463012695
    7. ' in' → logprob: -16.639421463012695
    8. 'rang' → logprob: -17.264421463012695
    9. '(' → logprob: -17.889421463012695
    10. 'ran' → logprob: -18.014421463012695

Token 116: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0008324974915012717
    2. '(' → logprob: -7.125832557678223
    3. ' (' → logprob: -10.500832557678223
    4. 'n' → logprob: -14.875832557678223
    5. '(
' → logprob: -16.125831604003906
    6. ' ' → logprob: -17.625831604003906
    7. ' n' → logprob: -18.375831604003906
    8. '(s' → logprob: -18.625831604003906
    9. '(nn' → logprob: -19.000831604003906
    10. '((' → logprob: -19.250831604003906

Token 117: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005649457452818751
    2. ']' → logprob: -7.500565052032471
    3. ')' → logprob: -11.500564575195312
    4. '()]' → logprob: -13.500564575195312
    5. '')]' → logprob: -16.000564575195312
    6. ')],' → logprob: -16.250564575195312
    7. '])' → logprob: -16.500564575195312
    8. '}]' → logprob: -16.625564575195312
    9. '])]' → logprob: -16.625564575195312
    10. ' ]' → logprob: -17.000564575195312

Token 118: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014886883087456226
    2. 'd' → logprob: -4.264886856079102
    3. '
' → logprob: -8.139886856079102
    4. '#' → logprob: -9.264886856079102
    5. '\' → logprob: -9.514886856079102
    6. '```' → logprob: -10.139886856079102
    7. 'D' → logprob: -10.639886856079102
    8. 'de' → logprob: -10.639886856079102
    9. ' 
' → logprob: -10.889886856079102
    10. '    
' → logprob: -11.139886856079102

Token 119: ' SR' (ID: 30704)
  Prédit: ' IR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' IR' → logprob: -1.2783374786376953
    2. ' LS' → logprob: -1.9033374786376953
    3. 'IR' → logprob: -2.0283374786376953
    4. 'LS' → logprob: -2.0283374786376953
    5. 'S' → logprob: -2.1533374786376953
    6. ' S' → logprob: -2.9033374786376953
    7. 'SR' → logprob: -2.9033374786376953
    8. ' main' → logprob: -3.6533374786376953
    9. 'I' → logprob: -4.528337478637695
    10. ' SR' → logprob: -4.528337478637695

Token 120: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01309011410921812
    2. '():' → logprob: -4.388090133666992
    3. '()' → logprob: -7.888090133666992
    4. '()(' → logprob: -8.888090133666992
    5. '(' → logprob: -10.138090133666992
    6. '():
' → logprob: -11.013090133666992
    7. '(N' → logprob: -12.138090133666992
    8. '(i' → logprob: -13.763090133666992
    9. '(a' → logprob: -13.888090133666992
    10. '(size' → logprob: -14.388090133666992

Token 121: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0036197893787175417
    2. '):
' → logprob: -5.62861967086792
    3. ')' → logprob: -11.003620147705078
    4. '):
' → logprob: -13.628620147705078
    5. ']:' → logprob: -13.628620147705078
    6. ' ):' → logprob: -14.878620147705078
    7. '):

' → logprob: -15.878620147705078
    8. '）：' → logprob: -17.003620147705078
    9. '(n' → logprob: -17.753620147705078
    10. ':' → logprob: -17.753620147705078

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34964483976364136
    2. ' return' → logprob: -1.7246448993682861
    3. '(' → logprob: -2.849644899368286
    4. 'return' → logprob: -3.974644899368286
    5. '
' → logprob: -4.849644660949707
    6. ' ' → logprob: -5.099644660949707
    7. 'def' → logprob: -5.224644660949707
    8. '(n' → logprob: -5.349644660949707
    9. ' (' → logprob: -5.849644660949707
    10. '(
' → logprob: -5.974644660949707

Token 123: ' return' (ID: 622)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.19459857046604156
    2. '[' → logprob: -2.06959867477417
    3. '[s' → logprob: -3.81959867477417
    4. '[list' → logprob: -4.19459867477417
    5. 'return' (adapté à ' return') → logprob: -5.06959867477417
    6. ' [' → logprob: -5.31959867477417
    7. '[str' → logprob: -7.94459867477417
    8. '[
' → logprob: -7.94459867477417
    9. '[string' → logprob: -8.069598197937012
    10. ' return' → logprob: -8.194598197937012

Token 124: ' [' (ID: 723)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.07110912352800369
    2. '[list' → logprob: -3.0711090564727783
    3. '[' → logprob: -4.071109294891357
    4. ' [' → logprob: -5.321109294891357
    5. '[List' → logprob: -8.5711088180542
    6. '[s' → logprob: -9.8211088180542
    7. '[string' → logprob: -11.0711088180542
    8. '[line' → logprob: -11.1961088180542
    9. '[str' → logprob: -11.3211088180542
    10. '[String' → logprob: -11.6961088180542

Token 125: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -8.537868779967539e-06
    2. 'list' → logprob: -11.750008583068848
    3. ' S' → logprob: -14.625008583068848
    4. 'sys' → logprob: -16.25000762939453
    5. 's' → logprob: -17.00000762939453
    6. '	S' → logprob: -18.12500762939453
    7. '
' → logprob: -18.75000762939453
    8. '   ' → logprob: -19.37500762939453
    9. '_S' → logprob: -19.50000762939453
    10. '```' → logprob: -19.75000762939453

Token 126: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00418702932074666
    2. '(n' → logprob: -5.504187107086182
    3. '(i' → logprob: -9.504186630249023
    4. '()]' → logprob: -10.504186630249023
    5. '(' → logprob: -12.504186630249023
    6. '()
' → logprob: -14.129186630249023
    7. ' ()' → logprob: -14.254186630249023
    8. '()(' → logprob: -14.504186630249023
    9. '().' → logprob: -14.879186630249023
    10. '()[' → logprob: -15.879186630249023

Token 127: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0167690459638834
    2. 'for' → logprob: -4.266768932342529
    3. ' for' → logprob: -6.016768932342529
    4. ')' → logprob: -9.391769409179688
    5. 'n' → logprob: -9.766769409179688
    6. ' (' → logprob: -11.766769409179688
    7. '(' → logprob: -11.766769409179688
    8. '()' → logprob: -12.016769409179688
    9. ' n' → logprob: -14.391769409179688
    10. '(i' → logprob: -14.516769409179688

Token 128: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06437890976667404
    2. ' i' → logprob: -2.8143789768218994
    3. 'n' → logprob: -6.43937873840332
    4. 'range' → logprob: -7.93937873840332
    5. '(i' → logprob: -8.93937873840332
    6. '_' → logprob: -9.18937873840332
    7. ' range' → logprob: -9.56437873840332
    8. ' n' → logprob: -9.68937873840332
    9. '(n' → logprob: -10.68937873840332
    10. ' in' → logprob: -11.06437873840332

Token 129: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3922256827354431
    2. ' in' → logprob: -1.517225742340088
    3. 'n' → logprob: -2.517225742340088
    4. '(' → logprob: -4.392225742340088
    5. '(n' → logprob: -4.892225742340088
    6. 'range' → logprob: -5.767225742340088
    7. 'i' → logprob: -7.142225742340088
    8. '_' → logprob: -8.26722526550293
    9. ' range' → logprob: -9.14222526550293
    10. '(range' → logprob: -9.39222526550293

Token 130: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029787981882691383
    2. ' range' → logprob: -3.529788017272949
    3. '(range' → logprob: -10.77978801727295
    4. '(n' → logprob: -11.15478801727295
    5. 'n' → logprob: -13.02978801727295
    6. '(' → logprob: -16.529787063598633
    7. ' n' → logprob: -18.279787063598633
    8. '	range' → logprob: -18.529787063598633
    9. ' (' → logprob: -19.404787063598633
    10. ' in' → logprob: -19.904787063598633

Token 131: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00026765360962599516
    2. 'n' → logprob: -8.25026798248291
    3. '(' → logprob: -12.00026798248291
    4. ' (' → logprob: -15.25026798248291
    5. ' n' → logprob: -17.750267028808594
    6. '	n' → logprob: -19.250267028808594
    7. '   ' → logprob: -20.000267028808594
    8. ')n' → logprob: -20.625267028808594
    9. 'def' → logprob: -21.000267028808594
    10. '(
' → logprob: -21.125267028808594

Token 132: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.9292415749514475e-05
    2. ']' → logprob: -10.250039100646973
    3. ')' → logprob: -12.875039100646973
    4. ')]
' → logprob: -14.125039100646973
    5. '')]' → logprob: -15.500039100646973
    6. ')],' → logprob: -16.12504005432129
    7. '")]' → logprob: -16.25004005432129
    8. '])]' → logprob: -16.37504005432129
    9. '}]' → logprob: -16.87504005432129
    10. '])' → logprob: -17.12504005432129

Token 133: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.40499377250671387
    2. 'def' → logprob: -1.2799937725067139
    3. '#' → logprob: -3.904993772506714
    4. 'n' → logprob: -4.404994010925293
    5. '\' → logprob: -5.029994010925293
    6. '\n' → logprob: -6.154994010925293
    7. '
' → logprob: -6.279994010925293
    8. 'r' → logprob: -6.404994010925293
    9. 'a' → logprob: -6.654994010925293
    10. '(' → logprob: -6.779994010925293

Token 134: ' L' (ID: 451)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3929241895675659
    2. ' main' → logprob: -1.142924189567566
    3. 'D' → logprob: -5.7679243087768555
    4. 'solve' → logprob: -7.3929243087768555
    5. 'M' → logprob: -8.267924308776855
    6. ' D' → logprob: -8.267924308776855
    7. 'T' → logprob: -8.767924308776855
    8. ' solve' → logprob: -9.017924308776855
    9. 'Q' → logprob: -9.017924308776855
    10. 'DR' → logprob: -9.142924308776855

Token 135: 'SR' (ID: 22892)
  Prédit: 'IR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IR' → logprob: -0.3877101242542267
    2. 'I' → logprob: -1.1377100944519043
    3. 'S' → logprob: -8.137710571289062
    4. 'R' → logprob: -8.262710571289062
    5. 'IS' → logprob: -9.637710571289062
    6. 'SR' → logprob: -9.762710571289062
    7. 'def' → logprob: -10.012710571289062
    8. '(IR' → logprob: -10.262710571289062
    9. '(' → logprob: -11.137710571289062
    10. ' IR' → logprob: -11.637710571289062

Token 136: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.318681188422488e-05
    2. '(' → logprob: -11.25001335144043
    3. ' (' → logprob: -16.75001335144043
    4. '(
' → logprob: -17.62501335144043
    5. '():' → logprob: -17.87501335144043
    6. 'def' → logprob: -17.87501335144043
    7. 'n' → logprob: -18.87501335144043
    8. '(N' → logprob: -19.50001335144043
    9. '():
' → logprob: -20.25001335144043
    10. '(num' → logprob: -21.12501335144043

Token 137: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -8.64970643306151e-05
    2. ')' → logprob: -9.500086784362793
    3. '):
' → logprob: -11.625086784362793
    4. ' ):' → logprob: -13.250086784362793
    5. '():' → logprob: -14.875086784362793
    6. ']:' → logprob: -15.125086784362793
    7. '）：' → logprob: -17.000085830688477
    8. '(n' → logprob: -17.125085830688477
    9. '):
' → logprob: -17.500085830688477
    10. '):

' → logprob: -17.625085830688477

Token 138: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.092513807117939
    2. '   ' → logprob: -3.2175137996673584
    3. ' return' → logprob: -3.8425137996673584
    4. 'return' → logprob: -4.3425140380859375
    5. '(' → logprob: -5.7175140380859375
    6. ':' → logprob: -5.8425140380859375
    7. ' n' → logprob: -5.9675140380859375
    8. ':return' → logprob: -6.4675140380859375
    9. 'n' → logprob: -6.9675140380859375
    10. ' (' → logprob: -7.4675140380859375

Token 139: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.31332793831825256
    2. 'return' (adapté à ' return') → logprob: -1.3133279085159302
    3. '   ' → logprob: -9.68832778930664
    4. '
' → logprob: -13.68832778930664
    5. '{return' → logprob: -14.06332778930664
    6. '	return' → logprob: -14.31332778930664
    7. ':return' → logprob: -14.43832778930664
    8. ' ' → logprob: -14.93832778930664
    9. '[' → logprob: -15.93832778930664
    10. 'def' → logprob: -16.06332778930664

Token 140: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00015955790877342224
    2. '[List' → logprob: -9.75015926361084
    3. '[list' → logprob: -9.87515926361084
    4. '[L' → logprob: -10.50015926361084
    5. '[int' → logprob: -11.50015926361084
    6. '[S' → logprob: -11.87515926361084
    7. ' [' → logprob: -13.00015926361084
    8. '[len' → logprob: -13.87515926361084
    9. '[n' → logprob: -15.12515926361084
    10. '[line' → logprob: -15.12515926361084

Token 141: 'LS' (ID: 10172)
  Prédit: 'LS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.02384839579463005
    2. 'list' → logprob: -3.773848295211792
    3. 'LI' → logprob: -7.773848533630371
    4. 'S' → logprob: -9.273848533630371
    5. ' LS' → logprob: -9.523848533630371
    6. ' list' → logprob: -12.023848533630371
    7. 'ls' → logprob: -12.273848533630371
    8. '[list' → logprob: -13.023848533630371
    9. '(list' → logprob: -13.773848533630371
    10. '[' → logprob: -15.148848533630371

Token 142: '()' (ID: 416)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2528754472732544
    2. '()' → logprob: -1.5028754472732544
    3. '()]' → logprob: -7.002875328063965
    4. ' ()' → logprob: -11.502875328063965
    5. '()(' → logprob: -11.752875328063965
    6. '(i' → logprob: -11.877875328063965
    7. '(' → logprob: -12.377875328063965
    8. ' (' → logprob: -12.877875328063965
    9. '()
' → logprob: -13.377875328063965
    10. '()+' → logprob: -14.127875328063965

Token 143: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.008129963040119e-06
    2. ' (' → logprob: -13.125003814697266
    3. 'for' → logprob: -13.875003814697266
    4. '(' → logprob: -14.375003814697266
    5. ' for' → logprob: -14.750003814697266
    6. '(i' → logprob: -17.000003814697266
    7. ')' → logprob: -18.375003814697266
    8. 'n' → logprob: -19.000003814697266
    9. '   ' → logprob: -19.625003814697266
    10. ']' → logprob: -19.875003814697266

Token 144: ' i' (ID: 575)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03923061862587929
    2. '(n' → logprob: -3.4142305850982666
    3. 'range' → logprob: -5.789230823516846
    4. ' n' → logprob: -6.664230823516846
    5. 'i' → logprob: -6.914230823516846
    6. 'int' → logprob: -8.914230346679688
    7. ' range' → logprob: -9.539230346679688
    8. 'x' → logprob: -10.914230346679688
    9. 'in' → logprob: -11.789230346679688
    10. '(range' → logprob: -13.164230346679688

Token 145: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5394806861877441
    2. 'in' → logprob: -0.9144806861877441
    3. 'range' → logprob: -4.414480686187744
    4. ' range' → logprob: -5.539480686187744
    5. '(range' → logprob: -8.914480209350586
    6. '(' → logprob: -10.539480209350586
    7. ' ' → logprob: -11.289480209350586
    8. ' i' → logprob: -11.914480209350586
    9. 'i' → logprob: -12.164480209350586
    10. 'n' → logprob: -12.664480209350586

Token 146: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014173506759107113
    2. ' range' → logprob: -4.26417350769043
    3. '(range' → logprob: -11.51417350769043
    4. '	range' → logprob: -17.38917350769043
    5. 'rang' → logprob: -19.88917350769043
    6. '_range' → logprob: -20.13917350769043
    7. '.range' → logprob: -21.51417350769043
    8. 'ran' → logprob: -21.51417350769043
    9. '(' → logprob: -21.63917350769043
    10. ' xrange' → logprob: -21.76417350769043

Token 147: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.043078898685053e-05
    2. 'n' → logprob: -9.375090599060059
    3. '(' → logprob: -12.125090599060059
    4. ' (' → logprob: -16.250089645385742
    5. ')n' → logprob: -17.750089645385742
    6. ' n' → logprob: -18.000089645385742
    7. ')' → logprob: -18.875089645385742
    8. '(
' → logprob: -19.500089645385742
    9. 'def' → logprob: -20.375089645385742
    10. '   ' → logprob: -20.375089645385742

Token 148: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005340866628102958
    2. ')' → logprob: -7.6255340576171875
    3. '):' → logprob: -10.875534057617188
    4. ']' → logprob: -11.000534057617188
    5. '(n' → logprob: -11.875534057617188
    6. 'n' → logprob: -13.750534057617188
    7. ')]
' → logprob: -14.125534057617188
    8. ')n' → logprob: -14.750534057617188
    9. '()]' → logprob: -15.375534057617188
    10. '))' → logprob: -15.875534057617188

Token 149: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6988041400909424
    2. 'class' → logprob: -1.1988041400909424
    3. 'd' → logprob: -1.6988041400909424
    4. 'n' → logprob: -4.073803901672363
    5. '#' → logprob: -8.448803901672363
    6. 'de' → logprob: -8.573803901672363
    7. '
' → logprob: -8.573803901672363
    8. 'a' → logprob: -8.823803901672363
    9. 'dp' → logprob: -9.198803901672363
    10. 'c' → logprob: -9.448803901672363

Token 150: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.32851922512054443
    2. '.stdout' → logprob: -1.7035192251205444
    3. '.exit' → logprob: -2.953519344329834
    4. '.stdin' → logprob: -3.203519344329834
    5. '.argv' → logprob: -6.203519344329834
    6. '.stderr' → logprob: -6.578519344329834
    7. '.setdefault' → logprob: -6.953519344329834
    8. '.max' → logprob: -8.203518867492676
    9. '.readline' → logprob: -8.328518867492676
    10. '.write' → logprob: -9.328518867492676

Token 151: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.00012332366895861924
    2. 'set' → logprob: -10.250123023986816
    3. 'limit' → logprob: -10.500123023986816
    4. 're' → logprob: -10.625123023986816
    5. 'ursion' → logprob: -10.750123023986816
    6. '_rec' → logprob: -12.250123023986816
    7. 'stdin' → logprob: -12.500123023986816
    8. 'sys' → logprob: -14.000123023986816
    9. 'r' → logprob: -14.500123023986816
    10. 'execution' → logprob: -14.625123023986816

Token 152: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -5.466968650580384e-05
    2. 'urs' → logprob: -10.875054359436035
    3. 'limit' → logprob: -11.000054359436035
    4. 'ursive' → logprob: -11.125054359436035
    5. 'ur' → logprob: -13.125054359436035
    6. 'usion' → logprob: -13.750054359436035
    7. '_limit' → logprob: -14.875054359436035
    8. 'ursor' → logprob: -15.000054359436035
    9. 'urst' → logprob: -15.875054359436035
    10. '(' → logprob: -16.37505531311035

Token 153: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.2664456789934775e-06
    2. ' limit' → logprob: -13.750000953674316
    3. 'depth' → logprob: -16.250001907348633
    4. 'lim' → logprob: -17.125001907348633
    5. '_limit' → logprob: -18.000001907348633
    6. 'Limit' → logprob: -19.750001907348633
    7. '-limit' → logprob: -21.625001907348633
    8. 'limits' → logprob: -22.000001907348633
    9. '(limit' → logprob: -22.250001907348633
    10. 'LIMIT' → logprob: -23.000001907348633

Token 154: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.1008713702030946e-06
    2. '((' → logprob: -13.875001907348633
    3. '(int' → logprob: -14.250001907348633
    4. '(
' → logprob: -15.250001907348633
    5. ' (' → logprob: -16.625001907348633
    6. '(pow' → logprob: -17.625001907348633
    7. '()' → logprob: -18.000001907348633
    8. '(

' → logprob: -18.500001907348633
    9. '100' → logprob: -18.875001907348633
    10. '10' → logprob: -20.000001907348633

Token 155: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0008098635007627308
    2. '100' → logprob: -7.125809669494629
    3. '200' → logprob: -13.000809669494629
    4. '999' → logprob: -14.000809669494629
    5. 'pow' → logprob: -14.000809669494629
    6. '300' → logprob: -14.250809669494629
    7. '250' → logprob: -15.125809669494629
    8. '500' → logprob: -15.375809669494629
    9. '400' → logprob: -16.000810623168945
    10. ' ' → logprob: -16.750810623168945

Token 156: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.008642463013529778
    2. '00' → logprob: -4.758642673492432
    3. '0' → logprob: -10.508642196655273
    4. '010' → logprob: -14.883642196655273
    5. '001' → logprob: -16.008642196655273
    6. '_' → logprob: -16.383642196655273
    7. '007' → logprob: -17.133642196655273
    8. '002' → logprob: -18.258642196655273
    9. '10' → logprob: -18.633642196655273
    10. '009' → logprob: -18.633642196655273

Token 157: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3425219549390022e-05
    2. ')' → logprob: -11.25001335144043
    3. '(' → logprob: -15.25001335144043
    4. '00' → logprob: -16.25001335144043
    5. '1' → logprob: -19.62501335144043
    6. '_' → logprob: -19.87501335144043
    7. '5' → logprob: -20.62501335144043
    8. ' ' → logprob: -20.62501335144043
    9. '000' → logprob: -20.87501335144043
    10. '2' → logprob: -21.37501335144043

Token 158: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.375000953674316
    3. ' )' → logprob: -15.625000953674316
    4. ')`' → logprob: -19.0
    5. '))' → logprob: -19.125
    6. '),' → logprob: -19.5
    7. ')

' → logprob: -20.25
    8. ')
' → logprob: -20.25
    9. '
' → logprob: -20.5
    10. '}' → logprob: -20.875

Token 159: 'mod' (ID: 4847)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.30445200204849243
    2. 'def' → logprob: -1.5544519424438477
    3. 'n' → logprob: -3.0544519424438477
    4. 'd' → logprob: -6.054451942443848
    5. '#' → logprob: -6.929451942443848
    6. 'dp' → logprob: -8.679451942443848
    7. 'N' → logprob: -9.429451942443848
    8. '
' → logprob: -9.929451942443848
    9. ' class' → logprob: -9.929451942443848
    10. '' → logprob: -10.179451942443848

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1057659313082695
    2. '=' → logprob: -2.4807658195495605
    3. ' ' → logprob: -4.1057658195495605
    4. '_' → logprob: -8.605766296386719
    5. ' =
' → logprob: -11.730766296386719
    6. ' _' → logprob: -12.480766296386719
    7. ' =)' → logprob: -12.855766296386719
    8. ',' → logprob: -13.105766296386719
    9. ' ,' → logprob: -13.230766296386719
    10. '  ' → logprob: -13.730766296386719

Token 161: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3236542046070099
    2. ' ' → logprob: -1.3236541748046875
    3. '100' → logprob: -4.5736541748046875
    4. '1' → logprob: -11.073654174804688
    5. '998' → logprob: -12.948654174804688
    6. 'int' → logprob: -15.198654174804688
    7. '999' → logprob: -15.948654174804688
    8. ' int' → logprob: -16.323654174804688
    9. '109' → logprob: -17.323654174804688
    10. ' 
' → logprob: -17.573654174804688

Token 162: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10040690749883652
    2. '100' → logprob: -2.3504068851470947
    3. '998' → logprob: -8.600406646728516
    4. '1' → logprob: -11.475406646728516
    5. ' ' → logprob: -12.225406646728516
    6. 'int' → logprob: -14.350406646728516
    7. '999' → logprob: -15.225406646728516
    8. '(' → logprob: -17.475406646728516
    9. '109' → logprob: -17.975406646728516
    10. '１０' → logprob: -18.100406646728516

Token 163: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0012777344090864062
    2. '9' → logprob: -6.751277923583984
    3. '09' → logprob: -10.001277923583984
    4. '0' → logprob: -10.751277923583984
    5. '009' → logprob: -11.001277923583984
    6. '00' → logprob: -11.876277923583984
    7. '007' → logprob: -12.501277923583984
    8. '+' → logprob: -12.751277923583984
    9. '_' → logprob: -12.876277923583984
    10. '```' → logprob: -13.126277923583984

Token 164: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -8.196732960641384e-05
    2. '007' → logprob: -9.625082015991211
    3. '0' → logprob: -11.625082015991211
    4. '7' → logprob: -12.500082015991211
    5. '00' → logprob: -14.000082015991211
    6. '07' → logprob: -14.125082015991211
    7. '+' → logprob: -14.375082015991211
    8. '9' → logprob: -14.500082015991211
    9. '009' → logprob: -15.375082015991211
    10. '19' → logprob: -15.875082015991211

Token 165: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.3856492842023727e-06
    2. '07' → logprob: -13.625000953674316
    3. '+' → logprob: -16.000001907348633
    4. '9' → logprob: -17.000001907348633
    5. '007' → logprob: -20.000001907348633
    6. '```' → logprob: -20.375001907348633
    7. ' ' → logprob: -20.625001907348633
    8. ' +' → logprob: -21.250001907348633
    9. '   ' → logprob: -21.750001907348633
    10. '0' → logprob: -21.875001907348633

Token 166: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.052206553518772125
    2. 'def' → logprob: -3.802206516265869
    3. '' → logprob: -4.177206516265869
    4. 'class' → logprob: -5.927206516265869
    5. '#' → logprob: -6.177206516265869
    6. '
' → logprob: -6.427206516265869
    7. '\n' → logprob: -6.427206516265869
    8. ' 
' → logprob: -6.677206516265869
    9. 'n' → logprob: -6.802206516265869
    10. '

' → logprob: -7.177206516265869

Token 167: 'def' (ID: 1314)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5647331476211548
    2. 'def' → logprob: -1.3147331476211548
    3. 'n' → logprob: -1.8147331476211548
    4. 'd' → logprob: -10.814733505249023
    5. 't' → logprob: -11.064733505249023
    6. 'N' → logprob: -11.564733505249023
    7. 'a' → logprob: -11.939733505249023
    8. ' class' → logprob: -12.689733505249023
    9. 'for' → logprob: -13.439733505249023
    10. 'ndef' → logprob: -14.189733505249023

Token 168: ' A' (ID: 355)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2627001702785492
    2. ' solve' → logprob: -1.8877002000808716
    3. ' d' → logprob: -3.387700080871582
    4. ' dfs' → logprob: -4.262700080871582
    5. 'solve' → logprob: -4.262700080871582
    6. 'main' → logprob: -4.637700080871582
    7. 'd' → logprob: -5.762700080871582
    8. 'dfs' → logprob: -6.637700080871582
    9. ' pow' → logprob: -7.762700080871582
    10. ' max' → logprob: -7.762700080871582

Token 169: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.7334765195846558
    2. 'RR' → logprob: -1.7334765195846558
    3. 'rray' → logprob: -2.3584766387939453
    4. 'dd' → logprob: -2.6084766387939453
    5. '():
' → logprob: -3.7334766387939453
    6. 'DD' → logprob: -3.7334766387939453
    7. 'rr' → logprob: -3.8584766387939453
    8. 'BC' → logprob: -4.233476638793945
    9. 'R' → logprob: -4.608476638793945
    10. 'L' → logprob: -4.733476638793945

Token 170: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20032331347465515
    2. '[]' → logprob: -3.4503233432769775
    3. ' []' → logprob: -3.4503233432769775
    4. 'n' → logprob: -3.9503233432769775
    5. '(' → logprob: -3.9503233432769775
    6. '[' → logprob: -4.075323104858398
    7. ' pass' → logprob: -4.200323104858398
    8. '   ' → logprob: -4.325323104858398
    9. ' 
' → logprob: -4.825323104858398
    10. '()' → logprob: -5.450323104858398

Token 171: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11821377277374268
    2. 'n' (adapté à ' n') → logprob: -2.493213653564453
    3. ' n' → logprob: -4.618213653564453
    4. 'r' → logprob: -4.618213653564453
    5. '_' → logprob: -6.493213653564453
    6. 'l' → logprob: -6.618213653564453
    7. 'a' → logprob: -6.868213653564453
    8. '(' → logprob: -6.993213653564453
    9. ' l' → logprob: -7.868213653564453
    10. '    ' → logprob: -7.868213653564453

Token 172: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41606053709983826
    2. ' =' → logprob: -1.2910605669021606
    3. '=' → logprob: -2.791060447692871
    4. ' ' → logprob: -6.666060447692871
    5. '=int' → logprob: -6.666060447692871
    6. ' ,' → logprob: -7.416060447692871
    7. ',n' → logprob: -7.541060447692871
    8. '=input' → logprob: -9.166060447692871
    9. ',int' → logprob: -9.916060447692871
    10. ',i' → logprob: -10.291060447692871

Token 173: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.257214218378067
    2. ' I' → logprob: -1.5072141885757446
    3. 'int' → logprob: -5.382214069366455
    4. ' int' → logprob: -7.382214069366455
    5. ' ' → logprob: -11.007214546203613
    6. 'LI' → logprob: -11.257214546203613
    7. '10' → logprob: -11.257214546203613
    8. 'len' → logprob: -12.507214546203613
    9. 'IR' → logprob: -14.132214546203613
    10. '100' → logprob: -14.132214546203613

Token 174: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0013765414478257298
    2. '()
' → logprob: -6.751376628875732
    3. ')' → logprob: -9.251376152038574
    4. '(' → logprob: -9.751376152038574
    5. ' ()' → logprob: -10.001376152038574
    6. ',' → logprob: -13.626376152038574
    7. ' ' → logprob: -14.126376152038574
    8. '()

' → logprob: -14.126376152038574
    9. '()
' → logprob: -14.251376152038574
    10. '()\' → logprob: -14.751376152038574

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1848563402891159
    2. ' ' → logprob: -2.559856414794922
    3. '<|end|>' → logprob: -3.434856414794922
    4. 'a' → logprob: -4.309856414794922
    5. 'n' → logprob: -4.309856414794922
    6. '    
' → logprob: -5.059856414794922
    7. ' 
' → logprob: -5.434856414794922
    8. '  ' → logprob: -5.434856414794922
    9. 'b' → logprob: -5.684856414794922
    10. '    ' → logprob: -5.809856414794922

Token 176: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.07124889642000198
    2. 'arr' → logprob: -2.821249008178711
    3. 's' → logprob: -6.196249008178711
    4. 'd' → logprob: -6.196249008178711
    5. 'l' → logprob: -6.446249008178711
    6. 'A' → logprob: -6.446249008178711
    7. 'lst' → logprob: -7.696249008178711
    8. 'h' → logprob: -8.696249008178711
    9. 'dp' → logprob: -8.821249008178711
    10. 'data' → logprob: -8.821249008178711

Token 177: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38819700479507446
    2. ' =' → logprob: -1.1381969451904297
    3. ' ' → logprob: -7.63819694519043
    4. ',' → logprob: -7.63819694519043
    5. '[' → logprob: -9.01319694519043
    6. 's' → logprob: -9.51319694519043
    7. 'r' → logprob: -9.88819694519043
    8. '=[]' → logprob: -10.38819694519043
    9. ' =[' → logprob: -11.38819694519043
    10. '_' → logprob: -11.38819694519043

Token 178: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.025370705872774124
    2. ' LI' → logprob: -3.7753705978393555
    3. 'L' → logprob: -6.5253705978393555
    4. ' L' → logprob: -7.4003705978393555
    5. 'LS' → logprob: -10.650370597839355
    6. 'LR' → logprob: -12.025370597839355
    7. ' ' → logprob: -12.025370597839355
    8. 'IR' → logprob: -12.525370597839355
    9. 'I' → logprob: -12.650370597839355
    10. 'Li' → logprob: -13.900370597839355

Token 179: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.729906196298543e-06
    2. '()
' → logprob: -11.625009536743164
    3. '(' → logprob: -15.125009536743164
    4. ' ()' → logprob: -15.250009536743164
    5. '()]' → logprob: -17.000009536743164
    6. '())' → logprob: -17.125009536743164
    7. '().' → logprob: -17.500009536743164
    8. '()

' → logprob: -17.625009536743164
    9. '()
' → logprob: -18.000009536743164
    10. '()<' → logprob: -18.375009536743164

Token 180: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10830473154783249
    2. '   ' → logprob: -2.608304738998413
    3. ' 
' → logprob: -4.858304500579834
    4. '[' → logprob: -5.733304500579834
    5. '    
' → logprob: -5.733304500579834
    6. 'n' → logprob: -5.858304500579834
    7. '<|end|>' → logprob: -6.108304500579834
    8. ' ' → logprob: -6.358304500579834
    9. '\n' → logprob: -6.608304500579834
    10. 'a' → logprob: -6.858304500579834

Token 181: ' if' (ID: 538)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.32469260692596436
    2. 'd' → logprob: -2.324692726135254
    3. 'a' → logprob: -3.199692726135254
    4. 'c' → logprob: -3.699692726135254
    5. 'b' → logprob: -3.949692726135254
    6. 's' → logprob: -4.074692726135254
    7. 'cnt' → logprob: -4.449692726135254
    8. 'count' → logprob: -4.574692726135254
    9. 'ans' → logprob: -4.699692726135254
    10. 'res' → logprob: -4.949692726135254

Token 182: ' sum' (ID: 4215)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.05900256708264351
    2. ' a' → logprob: -3.934002637863159
    3. ' len' → logprob: -3.934002637863159
    4. 'n' → logprob: -4.68400239944458
    5. ' all' → logprob: -5.43400239944458
    6. ' ' → logprob: -6.18400239944458
    7. 'a' → logprob: -7.18400239944458
    8. 'len' → logprob: -7.18400239944458
    9. ' max' → logprob: -8.309002876281738
    10. ' not' → logprob: -8.434002876281738

Token 183: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.6100132496794686e-05
    2. '(' → logprob: -9.875056266784668
    3. ' (' → logprob: -12.500056266784668
    4. '([' → logprob: -15.125056266784668
    5. 'a' → logprob: -15.500056266784668
    6. '(abs' → logprob: -16.12505531311035
    7. '()' → logprob: -16.37505531311035
    8. '>' → logprob: -16.62505531311035
    9. '(x' → logprob: -17.00005531311035
    10. '(range' → logprob: -17.62505531311035

Token 184: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01096340175718069
    2. ' )' → logprob: -4.885963439941406
    3. ')>' → logprob: -6.385963439941406
    4. ')==' → logprob: -7.260963439941406
    5. ')>=' → logprob: -8.260963439941406
    6. ')<' → logprob: -8.385963439941406
    7. ')<=' → logprob: -9.010963439941406
    8. ' >' → logprob: -9.635963439941406
    9. ')!=' → logprob: -9.885963439941406
    10. '>' → logprob: -10.260963439941406

Token 185: ' ==' (ID: 951)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2990626096725464
    2. ' %' → logprob: -1.4240626096725464
    3. ' ==' → logprob: -5.424062728881836
    4. ' ' → logprob: -5.674062728881836
    5. ' <' → logprob: -6.174062728881836
    6. '==' → logprob: -6.299062728881836
    7. ' !=' → logprob: -6.549062728881836
    8. '<' → logprob: -6.674062728881836
    9. '>' → logprob: -6.799062728881836
    10. '!=' → logprob: -7.174062728881836

Token 186: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07415619492530823
    2. ' ' → logprob: -2.8241562843322754
    3. ' n' → logprob: -5.074156284332275
    4. 'n' → logprob: -5.199156284332275
    5. '1' → logprob: -8.824155807495117
    6. 'len' → logprob: -9.324155807495117
    7. ' len' → logprob: -10.324155807495117
    8. 'max' → logprob: -11.574155807495117
    9. ' max' → logprob: -11.824155807495117
    10. '2' → logprob: -11.949155807495117

Token 187: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002202951582148671
    2. 'n' → logprob: -6.877202987670898
    3. ' ' → logprob: -7.252202987670898
    4. 'len' → logprob: -8.627202987670898
    5. '1' → logprob: -8.752202987670898
    6. 'max' → logprob: -10.752202987670898
    7. 'sum' → logprob: -11.377202987670898
    8. '2' → logprob: -11.627202987670898
    9. '100' → logprob: -11.627202987670898
    10. ' n' → logprob: -11.877202987670898

Token 188: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014918884262442589
    2. ':
' → logprob: -6.876492023468018
    3. ':return' → logprob: -7.751492023468018
    4. ' :' → logprob: -10.75149154663086
    5. ' or' → logprob: -13.25149154663086
    6. ' and' → logprob: -13.37649154663086
    7. ',' → logprob: -13.75149154663086
    8. '   ' → logprob: -13.75149154663086
    9. '.' → logprob: -14.25149154663086
    10. ' :
' → logprob: -14.75149154663086

Token 189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09388305991888046
    2. ':' → logprob: -2.9688830375671387
    3. '   ' → logprob: -3.4688830375671387
    4. '\n' → logprob: -5.718883037567139
    5. ':
' → logprob: -6.093883037567139
    6. '
' → logprob: -7.843883037567139
    7. ',' → logprob: -8.218883514404297
    8. '    
' → logprob: -8.468883514404297
    9. ' ' → logprob: -9.468883514404297
    10. '.' → logprob: -9.468883514404297

Token 190: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.8016061186790466
    2. ' print' → logprob: -1.0516061782836914
    3. '   ' → logprob: -2.3016061782836914
    4. 'return' → logprob: -3.4266061782836914
    5. '       ' → logprob: -3.5516061782836914
    6. ' return' → logprob: -3.8016061782836914
    7. '    ' → logprob: -4.176606178283691
    8. ' 
' → logprob: -7.176606178283691
    9. '
' → logprob: -7.301606178283691
    10. '\n' → logprob: -7.926606178283691

Token 191: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09697695076465607
    2. '("' → logprob: -3.3469769954681396
    3. '(-' → logprob: -3.3469769954681396
    4. '0' → logprob: -3.9719769954681396
    5. '(
' → logprob: -6.0969767570495605
    6. '-' → logprob: -8.221977233886719
    7. '("-' → logprob: -8.221977233886719
    8. '(n' → logprob: -8.346977233886719
    9. '1' → logprob: -9.721977233886719
    10. '('' → logprob: -10.346977233886719

Token 192: 'Yes' (ID: 13022)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.586444079875946
    2. 'Yes' → logprob: -1.8364441394805908
    3. 'YES' → logprob: -2.211444139480591
    4. 'NO' → logprob: -2.461444139480591
    5. '-' → logprob: -3.086444139480591
    6. 'No' → logprob: -3.461444139480591
    7. '3' → logprob: -5.711443901062012
    8. '1' → logprob: -6.086443901062012
    9. '"' → logprob: -6.336443901062012
    10. 'DRAW' → logprob: -7.086443901062012

Token 193: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.14315296709537506
    2. '")
' → logprob: -2.018152952194214
    3. '\n' → logprob: -7.893153190612793
    4. '"' → logprob: -10.268153190612793
    5. '")
' → logprob: -10.768153190612793
    6. '
' → logprob: -11.393153190612793
    7. ')' → logprob: -11.518153190612793
    8. 'return' → logprob: -11.518153190612793
    9. ')
' → logprob: -12.393153190612793
    10. ' ")' → logprob: -12.768153190612793

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01997087523341179
    2. '   ' → logprob: -4.144970893859863
    3. '    
' → logprob: -6.644970893859863
    4. ' return' → logprob: -6.769970893859863
    5. '        
' → logprob: -7.519970893859863
    6. '           ' → logprob: -8.644970893859863
    7. ',' → logprob: -9.019970893859863
    8. 'return' → logprob: -9.019970893859863
    9. '    ' → logprob: -9.269970893859863
    10. '
' → logprob: -9.269970893859863

Token 195: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7444131374359131
    2. 'return' (adapté à ' return') → logprob: -0.9944131374359131
    3. ' return' → logprob: -1.869413137435913
    4. '	return' → logprob: -8.244413375854492
    5. '
' → logprob: -8.744413375854492
    6. '   ' → logprob: -8.744413375854492
    7. ' ' → logprob: -8.994413375854492
    8. 'eturn' → logprob: -10.119413375854492
    9. '           ' → logprob: -11.244413375854492
    10. '        
' → logprob: -11.369413375854492

Token 196: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.3439192473888397
    2. '   ' → logprob: -1.593919277191162
    3. ' ' → logprob: -3.468919277191162
    4. '    
' → logprob: -3.593919277191162
    5. '
' → logprob: -4.468919277191162
    6. '<|end|>' → logprob: -4.843919277191162
    7. '  
' → logprob: -5.843919277191162
    8. '   
' → logprob: -5.843919277191162
    9. '    ' → logprob: -6.843919277191162
    10. ' if' → logprob: -7.468919277191162

Token 197: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.05206748843193054
    2. '   ' → logprob: -3.677067518234253
    3. '    
' → logprob: -4.052067279815674
    4. '
' → logprob: -6.677067279815674
    5. ' ' → logprob: -6.677067279815674
    6. '   
' → logprob: -6.802067279815674
    7. ' if' → logprob: -6.927067279815674
    8. '  
' → logprob: -7.052067279815674
    9. '     
' → logprob: -7.177067279815674
    10. '\n' → logprob: -7.552067279815674

Token 198: ' if' (ID: 538)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3600027561187744
    2. 'd' → logprob: -2.3600027561187744
    3. ' dp' → logprob: -2.7350027561187744
    4. 'if' (adapté à ' if') → logprob: -3.9850027561187744
    5. 'prefix' → logprob: -4.235002517700195
    6. 's' → logprob: -4.610002517700195
    7. ' if' → logprob: -4.610002517700195
    8. 'q' → logprob: -4.735002517700195
    9. '   ' → logprob: -4.860002517700195
    10. 'p' → logprob: -4.860002517700195

Token 199: ' n' (ID: 297)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.15304696559906
    2. ' n' → logprob: -1.40304696559906
    3. ' sum' → logprob: -1.52804696559906
    4. ' a' → logprob: -2.2780470848083496
    5. ' any' → logprob: -3.0280470848083496
    6. ' len' → logprob: -3.2780470848083496
    7. ' all' → logprob: -4.27804708480835
    8. 'sum' → logprob: -5.15304708480835
    9. 'a' → logprob: -5.77804708480835
    10. 'max' → logprob: -6.02804708480835

Token 200: '%' (ID: 4)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3984408378601074
    2. '==' → logprob: -1.2734408378601074
    3. ' <' → logprob: -3.6484408378601074
    4. ' ' → logprob: -4.648440837860107
    5. '<' → logprob: -5.398440837860107
    6. ' <=' → logprob: -5.898440837860107
    7. '%' → logprob: -6.273440837860107
    8. '1' → logprob: -6.773440837860107
    9. ' %' → logprob: -6.898440837860107
    10. '<=' → logprob: -7.023440837860107

Token 201: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03385384380817413
    2. '3' → logprob: -3.408853769302368
    3. ' ' → logprob: -8.908853530883789
    4. '4' → logprob: -9.908853530883789
    5. '7' → logprob: -12.033853530883789
    6. '1' → logprob: -12.533853530883789
    7. '10' → logprob: -12.908853530883789
    8. '6' → logprob: -13.283853530883789
    9. '5' → logprob: -14.033853530883789
    10. '360' → logprob: -14.033853530883789

Token 202: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.31351083517074585
    2. ' !=' → logprob: -1.3135108947753906
    3. '==' → logprob: -9.06351089477539
    4. '()!=' → logprob: -10.06351089477539
    5. ':' → logprob: -10.43851089477539
    6. ')!=' → logprob: -11.18851089477539
    7. ' ==' → logprob: -11.18851089477539
    8. '!' → logprob: -11.18851089477539
    9. '!==' → logprob: -12.43851089477539
    10. ' ' → logprob: -12.68851089477539

Token 203: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1782583391759545e-05
    2. ' ' → logprob: -10.375031471252441
    3. '3' → logprob: -14.625031471252441
    4. '=' → logprob: -17.250032424926758
    5. '1' → logprob: -17.250032424926758
    6. '```' → logprob: -17.250032424926758
    7. '۰' → logprob: -18.375032424926758
    8. '00' → logprob: -19.375032424926758
    9. '
' → logprob: -20.125032424926758
    10. '０' → logprob: -20.312532424926758

Token 204: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.685467764735222e-05
    2. ' ' → logprob: -9.375086784362793
    3. '3' → logprob: -13.750086784362793
    4. '1' → logprob: -14.625086784362793
    5. '```' → logprob: -16.12508773803711
    6. '  ' → logprob: -16.56258773803711
    7. '۰' → logprob: -16.62508773803711
    8. '=' → logprob: -17.18758773803711
    9. '०' → logprob: -17.43758773803711
    10. '০' → logprob: -18.12508773803711

Token 205: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01831943914294243
    2. ':
' → logprob: -4.018319606781006
    3. '   ' → logprob: -9.143319129943848
    4. ' or' → logprob: -10.393319129943848
    5. ':return' → logprob: -11.143319129943848
    6. '       ' → logprob: -11.518319129943848
    7. ' :' → logprob: -12.643319129943848
    8. ' :
' → logprob: -13.518319129943848
    9. ' and' → logprob: -13.643319129943848
    10. 'or' → logprob: -14.893319129943848

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.292095299111679e-05
    2. '   ' → logprob: -9.625082969665527
    3. 'print' → logprob: -11.250082969665527
    4. ' print' → logprob: -13.125082969665527
    5. ',' → logprob: -14.375082969665527
    6. '
' → logprob: -15.125082969665527
    7. '     ' → logprob: -15.500082969665527
    8. ':
' → logprob: -15.875082969665527
    9. '        
' → logprob: -16.12508201599121
    10. '      ' → logprob: -16.25008201599121

Token 207: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.017388155683875084
    2. ' print' → logprob: -4.392388343811035
    3. '   ' → logprob: -5.392388343811035
    4. '       ' → logprob: -8.142388343811035
    5. '	print' → logprob: -10.892388343811035
    6. ' ' → logprob: -12.642388343811035
    7. '
' → logprob: -13.642388343811035
    8. '  ' → logprob: -14.392388343811035
    9. '```' → logprob: -14.892388343811035
    10. '    ' → logprob: -15.267388343811035

Token 208: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.001939938636496663
    2. '(' → logprob: -6.25193977355957
    3. '("("' → logprob: -12.00193977355957
    4. ' ("' → logprob: -13.25193977355957
    5. '("")' → logprob: -13.50193977355957
    6. '('' → logprob: -14.25193977355957
    7. '("(' → logprob: -14.62693977355957
    8. '(""' → logprob: -14.87693977355957
    9. '(
' → logprob: -15.12693977355957
    10. '("""' → logprob: -15.75193977355957

Token 209: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0024816039949655533
    2. '"No' → logprob: -6.002481460571289
    3. '"' → logprob: -12.377481460571289
    4. ' No' → logprob: -14.127481460571289
    5. 'NO' → logprob: -14.377481460571289
    6. '“No' → logprob: -16.12748146057129
    7. '_No' → logprob: -17.00248146057129
    8. '```' → logprob: -17.62748146057129
    9. '"N' → logprob: -17.75248146057129
    10. 'Yes' → logprob: -17.87748146057129

Token 210: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.10462656617164612
    2. '")
' → logprob: -2.3546266555786133
    3. ')' → logprob: -6.104626655578613
    4. ')")' → logprob: -6.354626655578613
    5. ')")
' → logprob: -8.354626655578613
    6. ')
' → logprob: -8.979626655578613
    7. '       ' → logprob: -10.104626655578613
    8. '   ' → logprob: -10.354626655578613
    9. '")
' → logprob: -13.104626655578613
    10. '')' → logprob: -14.854626655578613

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.6656825866666622e-05
    2. '   ' → logprob: -10.87502670288086
    3. '
' → logprob: -12.50002670288086
    4. 'return' → logprob: -13.50002670288086
    5. '<|end|>' → logprob: -14.62502670288086
    6. '        
' → logprob: -14.87502670288086
    7. ',' → logprob: -14.87502670288086
    8. '    
' → logprob: -14.87502670288086
    9. ')' → logprob: -15.62502670288086
    10. ' return' → logprob: -15.87502670288086

Token 212: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004316891543567181
    2. 'return' (adapté à ' return') → logprob: -5.629316806793213
    3. ' return' → logprob: -7.629316806793213
    4. '   ' → logprob: -8.629317283630371
    5. '
' → logprob: -10.129317283630371
    6. '	return' → logprob: -11.879317283630371
    7. ' ' → logprob: -12.629317283630371
    8. '           ' → logprob: -14.379317283630371
    9. '     ' → logprob: -15.254317283630371
    10. '        
' → logprob: -15.504317283630371

Token 213: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03026180900633335
    2. '
' → logprob: -4.155261993408203
    3. '    
' → logprob: -4.280261993408203
    4. '   
' → logprob: -8.905261993408203
    5. '```' → logprob: -10.280261993408203
    6. '  
' → logprob: -10.655261993408203
    7. 'n' → logprob: -10.780261993408203
    8. 'a' → logprob: -11.280261993408203
    9. '        
' → logprob: -11.405261993408203
    10. '     
' → logprob: -11.530261993408203

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003606363432481885
    2. '    
' → logprob: -5.87860631942749
    3. 'a' → logprob: -8.003606796264648
    4. '
' → logprob: -8.878606796264648
    5. '   
' → logprob: -8.878606796264648
    6. 's' → logprob: -10.253606796264648
    7. '  
' → logprob: -10.503606796264648
    8. 'counts' → logprob: -11.003606796264648
    9. '        
' → logprob: -11.253606796264648
    10. '    ' → logprob: -11.378606796264648

Token 215: ' d' (ID: 272)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8623805046081543
    2. 'cnt' → logprob: -1.6123805046081543
    3. 'counts' → logprob: -1.8623805046081543
    4. 'count' → logprob: -1.9873805046081543
    5. 'freq' → logprob: -3.9873805046081543
    6. '   ' → logprob: -4.237380504608154
    7. 'from' → logprob: -4.487380504608154
    8. 'x' → logprob: -4.487380504608154
    9. 'counter' → logprob: -4.987380504608154
    10. 'd' (adapté à ' d') → logprob: -4.987380504608154

Token 216: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05112972855567932
    2. '=' → logprob: -3.0511298179626465
    3. 'ef' → logprob: -6.8011298179626465
    4. 'ic' → logprob: -7.3011298179626465
    5. 'e' → logprob: -8.426129341125488
    6. 'a' → logprob: -8.926129341125488
    7. ' ' → logprob: -9.676129341125488
    8. '=d' → logprob: -9.926129341125488
    9. '=len' → logprob: -10.051129341125488
    10. '={}
' → logprob: -10.051129341125488

Token 217: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -8.77627644513268e-06
    2. ' defaultdict' → logprob: -11.875008583068848
    3. 'def' → logprob: -14.375008583068848
    4. '{' → logprob: -14.875008583068848
    5. '{}' → logprob: -15.000008583068848
    6. '(default' → logprob: -16.125009536743164
    7. '{}
' → logprob: -16.250009536743164
    8. '"default' → logprob: -16.500009536743164
    9. 'len' → logprob: -16.625009536743164
    10. '.default' → logprob: -17.250009536743164

Token 218: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0016074628802016377
    2. 'int' → logprob: -6.501607418060303
    3. '(lambda' → logprob: -9.876607894897461
    4. '<int' → logprob: -10.376607894897461
    5. '(' → logprob: -11.876607894897461
    6. '(list' → logprob: -12.376607894897461
    7. '[int' → logprob: -12.626607894897461
    8. ',int' → logprob: -12.876607894897461
    9. 'list' → logprob: -13.376607894897461
    10. 's' → logprob: -14.001607894897461

Token 219: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03805319964885712
    2. ' :' → logprob: -3.288053274154663
    3. ':int' → logprob: -11.913053512573242
    4. '0' → logprob: -12.538053512573242
    5. ':
' → logprob: -14.538053512573242
    6. ':[' → logprob: -14.913053512573242
    7. ':list' → logprob: -15.038053512573242
    8. ' ' → logprob: -16.163053512573242
    9. 'int' → logprob: -16.788053512573242
    10. ':-' → logprob: -17.038053512573242

Token 220: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004305500478949398
    2. '-' → logprob: -8.3754301071167
    3. 'int' → logprob: -9.3754301071167
    4. ' ' → logprob: -10.1254301071167
    5. 'float' → logprob: -10.2504301071167
    6. 'lambda' → logprob: -11.8754301071167
    7. 'math' → logprob: -12.0004301071167
    8. '[' → logprob: -12.3754301071167
    9. 'None' → logprob: -12.6254301071167
    10. 'deque' → logprob: -12.7504301071167

Token 221: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002433928195387125
    2. '-' → logprob: -6.252433776855469
    3. 'float' → logprob: -8.502433776855469
    4. 'math' → logprob: -9.002433776855469
    5. 'int' → logprob: -10.002433776855469
    6. ' ' → logprob: -10.377433776855469
    7. 'lambda' → logprob: -10.752433776855469
    8. 'None' → logprob: -10.877433776855469
    9. '3' → logprob: -11.002433776855469
    10. '2' → logprob: -11.377433776855469

Token 222: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015359772078227252
    2. ' )' → logprob: -9.375153541564941
    3. ')
' → logprob: -9.625153541564941
    4. ')d' → logprob: -13.500153541564941
    5. 'd' → logprob: -15.125153541564941
    6. '())' → logprob: -15.375153541564941
    7. '`)' → logprob: -15.500153541564941
    8. ')
' → logprob: -15.875153541564941
    9. '   ' → logprob: -16.500154495239258
    10. ')

' → logprob: -16.625154495239258

Token 223: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.583000123500824
    2. ' ' → logprob: -1.2080001831054688
    3. 'for' → logprob: -2.4580001831054688
    4. ' 
' → logprob: -2.9580001831054688
    5. '
' → logprob: -6.708000183105469
    6. '   ' → logprob: -6.833000183105469
    7. '  
' → logprob: -6.958000183105469
    8. 'a' → logprob: -8.083000183105469
    9. '' → logprob: -8.083000183105469
    10. '    
' → logprob: -8.458000183105469

Token 224: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005751936114393175
    2. '   ' → logprob: -7.625575065612793
    3. ' for' → logprob: -9.375575065612793
    4. 'cnt' → logprob: -13.875575065612793
    5. 'count' → logprob: -14.125575065612793
    6. '	for' → logprob: -14.625575065612793
    7. 'c' → logprob: -15.625575065612793
    8. ' ' → logprob: -17.25057601928711
    9. 'total' → logprob: -17.75057601928711
    10. '  ' → logprob: -17.87557601928711

Token 225: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000477620807942003
    2. ' x' → logprob: -8.00047779083252
    3. 'v' → logprob: -9.00047779083252
    4. 'num' → logprob: -11.12547779083252
    5. 'ai' → logprob: -12.87547779083252
    6. 'i' → logprob: -14.00047779083252
    7. ' v' → logprob: -15.12547779083252
    8. 'e' → logprob: -16.375476837158203
    9. ' ai' → logprob: -16.500476837158203
    10. ' num' → logprob: -16.500476837158203

Token 226: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20260965824127197
    2. 'in' → logprob: -1.702609658241272
    3. 'a' → logprob: -7.827609539031982
    4. ',' → logprob: -8.45261001586914
    5. ' a' → logprob: -9.45261001586914
    6. ' ' → logprob: -9.70261001586914
    7. '(a' → logprob: -9.82761001586914
    8. '   ' → logprob: -10.07761001586914
    9. '(' → logprob: -10.20261001586914
    10. '_' → logprob: -10.20261001586914

Token 227: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014005064032971859
    2. ' a' → logprob: -4.389005184173584
    3. 'range' → logprob: -7.139005184173584
    4. ' range' → logprob: -7.264005184173584
    5. ' ' → logprob: -15.639004707336426
    6. '(a' → logprob: -16.514005661010742
    7. '	a' → logprob: -16.639005661010742
    8. '   ' → logprob: -16.889005661010742
    9. '[a' → logprob: -17.389005661010742
    10. 'd' → logprob: -18.139005661010742

Token 228: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.056789103895425797
    2. '[i' → logprob: -3.1817891597747803
    3. '[' → logprob: -4.556788921356201
    4. ':
' → logprob: -6.556788921356201
    5. '[a' → logprob: -7.431788921356201
    6. ']:' → logprob: -7.806788921356201
    7. '[d' → logprob: -8.55678939819336
    8. ']' → logprob: -8.55678939819336
    9. 'd' → logprob: -9.68178939819336
    10. ']+=' → logprob: -9.68178939819336

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026896751951426268
    2. '   ' → logprob: -6.252689838409424
    3. 'd' → logprob: -7.252689838409424
    4. ' d' → logprob: -10.002689361572266
    5. ',' → logprob: -13.127689361572266
    6. '	   ' → logprob: -13.502689361572266
    7. ',d' → logprob: -13.627689361572266
    8. '	d' → logprob: -14.377689361572266
    9. '<|end|>' → logprob: -14.627689361572266
    10. '
' → logprob: -15.502689361572266

Token 230: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.12764152884483337
    2. ' d' → logprob: -2.127641439437866
    3. '   ' → logprob: -7.377641677856445
    4. '       ' → logprob: -9.377641677856445
    5. '	d' → logprob: -13.127641677856445
    6. ' ' → logprob: -13.627641677856445
    7. '  ' → logprob: -15.252641677856445
    8. '    ' → logprob: -17.377641677856445
    9. '           ' → logprob: -17.627641677856445
    10. ' ' → logprob: -18.127641677856445

Token 231: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.125001907348633
    3. 'i' → logprob: -17.125001907348633
    4. '[d' → logprob: -17.125001907348633
    5. ' [' → logprob: -17.500001907348633
    6. '[a' → logprob: -17.875001907348633
    7. '[
' → logprob: -18.125001907348633
    8. '[I' → logprob: -18.375001907348633
    9. '```' → logprob: -19.250001907348633
    10. '[x' → logprob: -19.625001907348633

Token 232: ']' (ID: 60)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.5759551525115967
    2. ']' → logprob: -0.8259551525115967
    3. '+=' → logprob: -11.700955390930176
    4. ']+' → logprob: -12.200955390930176
    5. ' ]' → logprob: -13.200955390930176
    6. '+]' → logprob: -15.325955390930176
    7. ']=' → logprob: -16.07595443725586
    8. ' +=' → logprob: -17.20095443725586
    9. ']
' → logprob: -17.45095443725586
    10. '"]' → logprob: -18.07595443725586

Token 233: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0019581327214837074
    2. ' +=' → logprob: -6.25195837020874
    3. ']+=' → logprob: -10.501957893371582
    4. '=' → logprob: -13.251957893371582
    5. '+' → logprob: -15.376957893371582
    6. '+='' → logprob: -17.0019588470459
    7. '+=(' → logprob: -18.3769588470459
    8. '[' → logprob: -18.7519588470459
    9. '+="' → logprob: -19.1269588470459
    10. '```' → logprob: -19.3769588470459

Token 234: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -23.75
    4. '```' → logprob: -25.125
    5. '<|end|>' → logprob: -25.25
    6. '
' → logprob: -25.5
    7. '0' → logprob: -26.125
    8. '  ' → logprob: -26.5
    9. '۱' → logprob: -27.0
    10. '１' → logprob: -27.25

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '   ' → logprob: -24.25
    4. '
' → logprob: -25.875
    5. '```' → logprob: -25.875
    6. '۱' → logprob: -26.875
    7. '<|end|>' → logprob: -26.875
    8. '0' → logprob: -27.0
    9. '  ' → logprob: -27.375
    10. '１' → logprob: -27.625

Token 236: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09315305948257446
    2. ' 
' → logprob: -2.5931529998779297
    3. '    
' → logprob: -5.09315299987793
    4. '  
' → logprob: -6.09315299987793
    5. '   ' → logprob: -6.21815299987793
    6. '   
' → logprob: -6.21815299987793
    7. '<|end|>' → logprob: -6.59315299987793
    8. '     
' → logprob: -9.21815299987793
    9. '	
' → logprob: -9.71815299987793
    10. ' ' → logprob: -10.21815299987793

Token 237: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.432736873626709
    2. ' 
' → logprob: -1.682736873626709
    3. '   ' → logprob: -2.557736873626709
    4. '  
' → logprob: -3.807736873626709
    5. ' if' → logprob: -4.057736873626709
    6. '    
' → logprob: -4.307736873626709
    7. '   
' → logprob: -4.557736873626709
    8. ' ' → logprob: -5.057736873626709
    9. '<|end|>' → logprob: -5.307736873626709
    10. ',' → logprob: -6.307736873626709

Token 238: ' if' (ID: 538)
  Prédit: ' keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' keys' → logprob: -0.6578115224838257
    2. 'keys' → logprob: -0.9078115224838257
    3. 'k' → logprob: -3.2828116416931152
    4. 'if' (adapté à ' if') → logprob: -4.407811641693115
    5. ' if' → logprob: -4.407811641693115
    6. 'v' → logprob: -5.532811641693115
    7. ' unique' → logprob: -5.907811641693115
    8. 'u' → logprob: -6.282811641693115
    9. 'unique' → logprob: -6.407811641693115
    10. 'x' → logprob: -6.407811641693115

Token 239: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.47409969568252563
    2. ' len' → logprob: -0.9740996956825256
    3. '(len' → logprob: -11.724100112915039
    4. 'l' → logprob: -11.849100112915039
    5. ' ' → logprob: -13.224100112915039
    6. '3' → logprob: -13.849100112915039
    7. ' le' → logprob: -14.474100112915039
    8. 'set' → logprob: -14.474100112915039
    9. '	len' → logprob: -14.599100112915039
    10. 'n' → logprob: -14.724100112915039

Token 240: '(list' (ID: 13116)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0009146820520982146
    2. '(' → logprob: -7.000914573669434
    3. ' (' → logprob: -13.125914573669434
    4. '(
' → logprob: -14.125914573669434
    5. 'd' → logprob: -14.875914573669434
    6. '((' → logprob: -18.37591552734375
    7. ' d' → logprob: -18.50091552734375
    8. ')d' → logprob: -18.62591552734375
    9. '(dict' → logprob: -18.75091552734375
    10. ')' → logprob: -18.87591552734375

Token 241: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -3.2378600735682994e-05
    2. '(' → logprob: -10.500032424926758
    3. 'd' → logprob: -12.875032424926758
    4. ' (' → logprob: -13.750032424926758
    5. '(
' → logprob: -14.625032424926758
    6. ')d' → logprob: -15.000032424926758
    7. ')(' → logprob: -16.000032424926758
    8. ')' → logprob: -16.375032424926758
    9. '((' → logprob: -16.625032424926758
    10. 's' → logprob: -17.125032424926758

Token 242: '.items' (ID: 19607)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4063011407852173
    2. ')' → logprob: -1.2813011407852173
    3. '.keys' → logprob: -2.9063010215759277
    4. 'keys' → logprob: -7.281301021575928
    5. ')==' → logprob: -8.406301498413086
    6. ' )' → logprob: -8.531301498413086
    7. '().' → logprob: -8.906301498413086
    8. '))' → logprob: -9.031301498413086
    9. ')>' → logprob: -10.281301498413086
    10. '()' → logprob: -10.406301498413086

Token 243: '()))' (ID: 16829)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3148006200790405
    2. '()))' → logprob: -1.3148006200790405
    3. '()' → logprob: -6.93980073928833
    4. ')' → logprob: -7.68980073928833
    5. '))' → logprob: -9.439800262451172
    6. ' ())' → logprob: -10.689800262451172
    7. '())))' → logprob: -12.564800262451172
    8. '())
' → logprob: -13.439800262451172
    9. '()
' → logprob: -14.314800262451172
    10. '()==' → logprob: -14.314800262451172

Token 244: ' ==' (ID: 951)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7357040047645569
    2. '()>' → logprob: -1.860703945159912
    3. '==' → logprob: -1.985703945159912
    4. ' ==' → logprob: -2.610703945159912
    5. '()==' → logprob: -2.735703945159912
    6. '()<' → logprob: -3.485703945159912
    7. '()!=' → logprob: -3.985703945159912
    8. ' !=' → logprob: -4.235703945159912
    9. ' >' → logprob: -4.735703945159912
    10. '!=' → logprob: -4.860703945159912

Token 245: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3925221562385559
    2. '1' → logprob: -1.1425220966339111
    3. ' ' → logprob: -5.76752233505249
    4. '0' → logprob: -6.01752233505249
    5. '2' → logprob: -10.517521858215332
    6. '4' → logprob: -11.580021858215332
    7. '```' → logprob: -11.767521858215332
    8. '  ' → logprob: -12.142521858215332
    9. '(' → logprob: -12.580021858215332
    10. '   ' → logprob: -12.642521858215332

Token 246: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.07971470803022385
    2. '1' → logprob: -2.579714775085449
    3. ' ' → logprob: -7.704714775085449
    4. '0' → logprob: -8.07971477508545
    5. '2' → logprob: -10.32971477508545
    6. '```' → logprob: -11.20471477508545
    7. '   ' → logprob: -12.07971477508545
    8. '4' → logprob: -12.39221477508545
    9. '  ' → logprob: -13.32971477508545
    10. '
' → logprob: -14.39221477508545

Token 247: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1615007221698761
    2. '():' → logprob: -2.2865006923675537
    3. '()' → logprob: -4.411500930786133
    4. ' and' → logprob: -4.911500930786133
    5. '==' → logprob: -4.911500930786133
    6. '()==' → logprob: -5.536500930786133
    7. ' ==' → logprob: -5.661500930786133
    8. '(' → logprob: -6.036500930786133
    9. ')' → logprob: -6.411500930786133
    10. 'and' → logprob: -6.536500930786133

Token 248: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01745234616100788
    2. ' :' → logprob: -4.392452239990234
    3. ' and' → logprob: -5.642452239990234
    4. ':
' → logprob: -6.892452239990234
    5. '[' → logprob: -9.017452239990234
    6. ' :
' → logprob: -9.392452239990234
    7. '   ' → logprob: -9.642452239990234
    8. ',' → logprob: -10.267452239990234
    9. 'and' → logprob: -10.642452239990234
    10. ' ' → logprob: -11.267452239990234

Token 249: ' if' (ID: 538)
  Prédit: ' keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' keys' → logprob: -1.3630350828170776
    2. ' key' → logprob: -1.7380350828170776
    3. 'key' → logprob: -1.8630350828170776
    4. 'keys' → logprob: -1.8630350828170776
    5. 'k' → logprob: -2.738035202026367
    6. ' k' → logprob: -2.988035202026367
    7. ' if' → logprob: -3.113035202026367
    8. '       ' → logprob: -3.738035202026367
    9. '   ' → logprob: -4.113035202026367
    10. 'if' (adapté à ' if') → logprob: -4.238035202026367

Token 250: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6627936959266663
    2. '0' → logprob: -1.7877936363220215
    3. 'len' → logprob: -2.9127936363220215
    4. ' len' → logprob: -2.9127936363220215
    5. ' list' → logprob: -3.0377936363220215
    6. 'list' → logprob: -3.5377936363220215
    7. ' (' → logprob: -3.7877936363220215
    8. '(' → logprob: -4.0377936363220215
    9. ' d' → logprob: -4.1627936363220215
    10. ' sorted' → logprob: -4.5377936363220215

Token 251: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0496068000793457
    2. '[a' → logprob: -4.549606800079346
    3. '[list' → logprob: -4.549606800079346
    4. '[next' → logprob: -4.799606800079346
    5. '0' → logprob: -5.674606800079346
    6. '[min' → logprob: -6.049606800079346
    7. '[d' → logprob: -6.174606800079346
    8. '==' → logprob: -6.299606800079346
    9. '[max' → logprob: -6.549606800079346
    10. 'min' → logprob: -6.799606800079346

Token 252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.2576454335358e-05
    2. ' ' → logprob: -9.625092506408691
    3. 'a' → logprob: -10.625092506408691
    4. '1' → logprob: -13.750092506408691
    5. 'd' → logprob: -14.875092506408691
    6. '   ' → logprob: -15.250092506408691
    7. 'list' → logprob: -15.875092506408691
    8. '
' → logprob: -16.250093460083008
    9. 'next' → logprob: -16.750093460083008
    10. ' a' → logprob: -16.750093460083008

Token 253: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03487136960029602
    2. ']==' → logprob: -3.4098713397979736
    3. ' ]' → logprob: -6.909871578216553
    4. ']!=' → logprob: -9.034871101379395
    5. ']>' → logprob: -9.409871101379395
    6. '()]' → logprob: -12.159871101379395
    7. ']>=' → logprob: -12.534871101379395
    8. '']' → logprob: -13.034871101379395
    9. ']+' → logprob: -13.034871101379395
    10. '   ' → logprob: -13.284871101379395

Token 254: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2804374396800995
    2. '==' → logprob: -1.5304374694824219
    3. ']==' → logprob: -4.530437469482422
    4. '>' → logprob: -5.780437469482422
    5. ' !=' → logprob: -5.905437469482422
    6. ']' → logprob: -6.155437469482422
    7. ' and' → logprob: -6.155437469482422
    8. ' >' → logprob: -6.405437469482422
    9. ' ' → logprob: -6.530437469482422
    10. '!=' → logprob: -6.780437469482422

Token 255: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0032144265715032816
    2. 'len' → logprob: -6.128214359283447
    3. ' n' → logprob: -7.128214359283447
    4. '0' → logprob: -8.628214836120605
    5. '(n' → logprob: -10.753214836120605
    6. '2' → logprob: -11.378214836120605
    7. ' ' → logprob: -12.753214836120605
    8. '(' → logprob: -12.753214836120605
    9. '(len' → logprob: -13.128214836120605
    10. '	n' → logprob: -13.378214836120605

Token 256: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.005076853092759848
    2. ' //' → logprob: -5.630076885223389
    3. '*' → logprob: -7.380076885223389
    4. ':' → logprob: -8.25507640838623
    5. ' and' → logprob: -8.50507640838623
    6. '/' → logprob: -8.63007640838623
    7. 'and' → logprob: -10.13007640838623
    8. '2' → logprob: -10.13007640838623
    9. ' ' → logprob: -10.13007640838623
    10. '://' → logprob: -10.63007640838623

Token 257: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.875001907348633
    3. '2' → logprob: -14.000001907348633
    4. '   ' → logprob: -18.250001907348633
    5. '

' → logprob: -18.500001907348633
    6. '```' → logprob: -19.750001907348633
    7. '1' → logprob: -20.125001907348633
    8. '  ' → logprob: -20.250001907348633
    9. '
' → logprob: -20.250001907348633
    10. '３' → logprob: -20.875001907348633

Token 258: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.027113012969493866
    2. ' or' → logprob: -4.02711296081543
    3. 'and' → logprob: -4.90211296081543
    4. ':' → logprob: -7.02711296081543
    5. ' ' → logprob: -8.40211296081543
    6. '           ' → logprob: -8.90211296081543
    7. '       ' → logprob: -9.27711296081543
    8. 'or' → logprob: -9.90211296081543
    9. '        ' → logprob: -10.02711296081543
    10. ':
' → logprob: -11.02711296081543

Token 259: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.33553123474121094
    2. '           ' → logprob: -1.335531234741211
    3. '       ' → logprob: -4.085531234741211
    4. '        ' → logprob: -6.460531234741211
    5. ':
' → logprob: -6.835531234741211
    6. ':' → logprob: -6.960531234741211
    7. ' or' → logprob: -7.710531234741211
    8. ',' → logprob: -8.210531234741211
    9. ' ' → logprob: -8.585531234741211
    10. 'and' → logprob: -8.710531234741211

Token 260: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0099814273416996
    2. '           ' → logprob: -5.384981632232666
    3. ' print' → logprob: -6.134981632232666
    4. 'for' → logprob: -6.134981632232666
    5. '               ' → logprob: -8.384981155395508
    6. '       ' → logprob: -8.384981155395508
    7. 'if' → logprob: -8.759981155395508
    8. '   ' → logprob: -8.884981155395508
    9. 'k' → logprob: -9.634981155395508
    10. 'other' → logprob: -9.884981155395508

Token 261: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.005247156601399183
    2. '(' → logprob: -5.255247116088867
    3. '('' → logprob: -11.380247116088867
    4. '("("' → logprob: -13.880247116088867
    5. '(""' → logprob: -15.005247116088867
    6. '("")' → logprob: -15.255247116088867
    7. '(
' → logprob: -16.005247116088867
    8. '("""' → logprob: -16.755247116088867
    9. '(("' → logprob: -16.880247116088867
    10. '()' → logprob: -17.130247116088867

Token 262: 'Yes' (ID: 13022)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.6931645274162292
    2. 'Yes' → logprob: -0.6931645274162292
    3. '"No' → logprob: -12.068164825439453
    4. '"' → logprob: -12.193164825439453
    5. 'YES' → logprob: -13.068164825439453
    6. ' Yes' → logprob: -13.568164825439453
    7. ' No' → logprob: -13.943164825439453
    8. '0' → logprob: -13.943164825439453
    9. 'NO' → logprob: -14.568164825439453
    10. 'yes' → logprob: -15.818164825439453

Token 263: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.6887719035148621
    2. '           ' → logprob: -0.9387719035148621
    3. '")' → logprob: -2.938771963119507
    4. '       ' → logprob: -2.938771963119507
    5. '   ' → logprob: -7.688771724700928
    6. '               ' → logprob: -8.063772201538086
    7. ')
' → logprob: -10.938772201538086
    8. '"' → logprob: -11.313772201538086
    9. '")
' → logprob: -11.688772201538086
    10. ')' → logprob: -11.938772201538086

Token 264: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.576128363609314
    2. '           ' → logprob: -0.826128363609314
    3. '               ' → logprob: -9.076128005981445
    4. '   ' → logprob: -9.701128005981445
    5. 'else' → logprob: -12.826128005981445
    6. '<|end|>' → logprob: -13.201128005981445
    7. '.' → logprob: -13.451128005981445
    8. '            
' → logprob: -13.701128005981445
    9. ',' → logprob: -14.201128005981445
    10. ')' → logprob: -14.201128005981445

Token 265: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5820881128311157
    2. '           ' → logprob: -0.8320881128311157
    3. 'return' (adapté à ' return') → logprob: -5.207087993621826
    4. '   ' → logprob: -8.207088470458984
    5. 'else' → logprob: -8.207088470458984
    6. ' return' → logprob: -9.832088470458984
    7. '               ' → logprob: -10.207088470458984
    8. ' else' → logprob: -12.082088470458984
    9. ' ' → logprob: -12.957088470458984
    10. '	       ' → logprob: -13.207088470458984

Token 266: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030110172927379608
    2. '   ' → logprob: -3.5301101207733154
    3. ' ' → logprob: -9.280110359191895
    4. ',' → logprob: -9.905110359191895
    5. '     ' → logprob: -10.405110359191895
    6. ')' → logprob: -10.655110359191895
    7. '    
' → logprob: -10.780110359191895
    8. '
' → logprob: -11.030110359191895
    9. '        
' → logprob: -11.030110359191895
    10. '      ' → logprob: -11.155110359191895

Token 267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15185676515102386
    2. '   ' → logprob: -2.0268566608428955
    3. ' ' → logprob: -5.276856899261475
    4. '  
' → logprob: -6.901856899261475
    5. '
' → logprob: -7.276856899261475
    6. '    
' → logprob: -7.526856899261475
    7. '        
' → logprob: -7.526856899261475
    8. ')' → logprob: -8.151856422424316
    9. '  ' → logprob: -8.151856422424316
    10. ',' → logprob: -9.526856422424316

Token 268: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4427964985370636
    2. 'print' → logprob: -1.0677964687347412
    3. 'else' (adapté à ' else') → logprob: -4.94279670715332
    4. 'if' → logprob: -5.19279670715332
    5. '       ' → logprob: -7.31779670715332
    6. ' print' → logprob: -8.31779670715332
    7. 'elif' → logprob: -8.56779670715332
    8. 'for' → logprob: -9.94279670715332
    9. ' if' → logprob: -10.06779670715332
    10. ' else' → logprob: -10.44279670715332

Token 269: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5175015330314636
    2. '       ' → logprob: -1.1425015926361084
    3. 'print' → logprob: -3.3925015926361084
    4. ':
' → logprob: -3.5175015926361084
    5. '   ' → logprob: -4.517501354217529
    6. ':' → logprob: -4.892501354217529
    7. ' print' → logprob: -6.017501354217529
    8. ' ' → logprob: -8.642501831054688
    9. '         ' → logprob: -9.642501831054688
    10. '(' → logprob: -9.767501831054688

Token 270: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06629004329442978
    2. '           ' → logprob: -2.8162901401519775
    3. '       ' → logprob: -5.566289901733398
    4. '   ' → logprob: -7.691289901733398
    5. ' print' → logprob: -10.441289901733398
    6. ' ' → logprob: -14.316289901733398
    7. '               ' → logprob: -14.566289901733398
    8. '```' → logprob: -14.691289901733398
    9. '	print' → logprob: -15.191289901733398
    10. 'pass' → logprob: -15.691289901733398

Token 271: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.8670179997570813e-05
    2. '   ' → logprob: -11.750019073486328
    3. ' print' → logprob: -11.750019073486328
    4. '       ' → logprob: -12.875019073486328
    5. '           ' → logprob: -15.250019073486328
    6. '  ' → logprob: -17.875019073486328
    7. ' ' → logprob: -18.375019073486328
    8. 'pass' → logprob: -18.875019073486328
    9. '	print' → logprob: -19.000019073486328
    10. '    ' → logprob: -19.500019073486328

Token 272: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0009118211455643177
    2. '(' → logprob: -7.000911712646484
    3. '('' → logprob: -15.500911712646484
    4. '(
' → logprob: -16.750911712646484
    5. '("("' → logprob: -16.750911712646484
    6. '(

' → logprob: -18.000911712646484
    7. '(""' → logprob: -18.750911712646484
    8. '()' → logprob: -19.500911712646484
    9. '("""' → logprob: -19.875911712646484
    10. '("")' → logprob: -20.000911712646484

Token 273: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -1.1994775377388578e-05
    2. '"No' → logprob: -11.375012397766113
    3. ' No' → logprob: -15.375012397766113
    4. '"' → logprob: -15.375012397766113
    5. 'N' → logprob: -16.500011444091797
    6. '   ' → logprob: -17.750011444091797
    7. 'NO' → logprob: -18.500011444091797
    8. '("' → logprob: -18.625011444091797
    9. ' ' → logprob: -19.000011444091797
    10. '")' → logprob: -19.250011444091797

Token 274: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.6026754975318909
    2. ')' → logprob: -0.8526754975318909
    3. '")
' → logprob: -4.352675437927246
    4. ')
' → logprob: -4.977675437927246
    5. '       ' → logprob: -5.352675437927246
    6. '           ' → logprob: -7.102675437927246
    7. '   ' → logprob: -7.227675437927246
    8. ')")' → logprob: -8.602675437927246
    9. ')")
' → logprob: -9.102675437927246
    10. '')' → logprob: -12.102675437927246

Token 275: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043470922857522964
    2. '   ' → logprob: -3.293470859527588
    3. '           ' → logprob: -5.418470859527588
    4. '
' → logprob: -8.668471336364746
    5. '\n' → logprob: -8.793471336364746
    6. ')' → logprob: -9.043471336364746
    7. '	return' → logprob: -9.168471336364746
    8. '<|end|>' → logprob: -9.168471336364746
    9. '     ' → logprob: -9.918471336364746
    10. '    
' → logprob: -10.043471336364746

Token 276: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2627452611923218
    2. 'return' (adapté à ' return') → logprob: -2.3877453804016113
    3. '   ' → logprob: -2.5127453804016113
    4. '           ' → logprob: -3.1377453804016113
    5. '
' → logprob: -4.387745380401611
    6. ' return' → logprob: -6.512745380401611
    7. ' ' → logprob: -8.387744903564453
    8. '               ' → logprob: -8.762744903564453
    9. '    
' → logprob: -9.262744903564453
    10. '	return' → logprob: -9.637744903564453

Token 277: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13760605454444885
    2. '    
' → logprob: -2.762606143951416
    3. '
' → logprob: -2.887606143951416
    4. '  
' → logprob: -5.262606143951416
    5. ')' → logprob: -6.137606143951416
    6. '\n' → logprob: -7.387606143951416
    7. '<|end|>' → logprob: -8.012605667114258
    8. '   
' → logprob: -8.262605667114258
    9. ' 
' → logprob: -8.762605667114258
    10. ' ' → logprob: -9.137605667114258

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033731915056705475
    2. '    
' → logprob: -4.408731937408447
    3. '[' → logprob: -5.283731937408447
    4. 'elif' → logprob: -5.658731937408447
    5. '  
' → logprob: -6.158731937408447
    6. ')' → logprob: -6.158731937408447
    7. ' ' → logprob: -6.283731937408447
    8. ' if' → logprob: -6.533731937408447
    9. '
' → logprob: -6.908731937408447
    10. ',' → logprob: -7.158731937408447

Token 279: ' k' (ID: 372)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5549360513687134
    2. 'elif' → logprob: -1.6799360513687134
    3. '[' → logprob: -2.554935932159424
    4. '   ' → logprob: -3.554935932159424
    5. ' if' → logprob: -3.554935932159424
    6. '
' → logprob: -3.554935932159424
    7. '  
' → logprob: -4.179935932159424
    8. 'else' → logprob: -4.554935932159424
    9. '    
' → logprob: -4.679935932159424
    10. ' ' → logprob: -4.679935932159424

Token 280: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9336904287338257
    2. 'eys' → logprob: -1.1836904287338257
    3. '=' → logprob: -1.4336904287338257
    4. 'ey' → logprob: -3.0586905479431152
    5. 'e' → logprob: -4.183690547943115
    6. '=len' → logprob: -10.433690071105957
    7. 'len' → logprob: -10.808690071105957
    8. '=e' → logprob: -10.808690071105957
    9. 's' → logprob: -11.058690071105957
    10. '   ' → logprob: -11.183690071105957

Token 281: ' ' (ID: 220)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.04076448827981949
    2. 'sorted' → logprob: -3.290764570236206
    3. 'len' → logprob: -6.665764331817627
    4. ' list' → logprob: -7.415764331817627
    5. 'set' → logprob: -8.040764808654785
    6. '[list' → logprob: -8.665764808654785
    7. '[]' → logprob: -8.790764808654785
    8. '[' → logprob: -9.665764808654785
    9. ' sorted' → logprob: -10.165764808654785
    10. '[]
' → logprob: -10.665764808654785

Token 282: '0' (ID: 15)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.005205770954489708
    2. 'sorted' → logprob: -5.8802056312561035
    3. 'len' → logprob: -6.7552056312561035
    4. '[list' → logprob: -8.005206108093262
    5. '0' → logprob: -8.255206108093262
    6. '[]' → logprob: -8.755206108093262
    7. '[' → logprob: -8.880206108093262
    8. ' list' → logprob: -9.130206108093262
    9. '[]
' → logprob: -10.130206108093262
    10. '[len' → logprob: -10.130206108093262

Token 283: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8779280185699463
    2. '<|end|>' → logprob: -0.8779280185699463
    3. '
' → logprob: -2.7529280185699463
    4. 'for' → logprob: -3.2529280185699463
    5. '<|end|>' → logprob: -4.127927780151367
    6. 'x' → logprob: -4.127927780151367
    7. ' for' → logprob: -5.252927780151367
    8. ';' → logprob: -5.377927780151367
    9. ' ' → logprob: -5.877927780151367
    10. 'if' → logprob: -6.002927780151367

Token 284: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2843974530696869
    2. ',' → logprob: -2.4093973636627197
    3. ' for' → logprob: -3.0343973636627197
    4. '
' → logprob: -3.5343973636627197
    5. 'if' → logprob: -3.7843973636627197
    6. 'k' → logprob: -4.659397602081299
    7. 'keys' → logprob: -4.659397602081299
    8. 'items' → logprob: -4.784397602081299
    9. ' ' → logprob: -5.159397602081299
    10. ' if' → logprob: -5.909397602081299

Token 285: ' for' (ID: 395)
  Prédit: 'keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keys' → logprob: -0.1649174839258194
    2. 'for' (adapté à ' for') → logprob: -2.539917469024658
    3. 'v' → logprob: -3.664917469024658
    4. 'vals' → logprob: -4.164917469024658
    5. 'items' → logprob: -4.414917469024658
    6. ' keys' → logprob: -5.289917469024658
    7. 'x' → logprob: -5.789917469024658
    8. 'k' → logprob: -5.914917469024658
    9. 'values' → logprob: -6.414917469024658
    10. 'l' → logprob: -6.539917469024658

Token 286: ' i' (ID: 575)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9305703043937683
    2. 'key' → logprob: -1.305570363998413
    3. ' key' → logprob: -2.055570363998413
    4. 'x' → logprob: -2.555570363998413
    5. 'i' → logprob: -2.930570363998413
    6. ' k' → logprob: -3.680570363998413
    7. 'v' → logprob: -4.180570125579834
    8. 'd' → logprob: -4.430570125579834
    9. ' i' → logprob: -5.305570125579834
    10. '_' → logprob: -5.555570125579834

Token 287: ',j' (ID: 22712)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25374841690063477
    2. ',d' → logprob: -1.6287484169006348
    3. ',' → logprob: -4.253748416900635
    4. 'in' → logprob: -5.503748416900635
    5. ' ,' → logprob: -5.503748416900635
    6. 'd' → logprob: -5.628748416900635
    7. ' d' → logprob: -6.503748416900635
    8. ',list' → logprob: -9.253747940063477
    9. ',k' → logprob: -9.503747940063477
    10. ' ' → logprob: -9.753747940063477

Token 288: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22621242702007294
    2. 'in' → logprob: -1.6012123823165894
    3. ',' → logprob: -7.226212501525879
    4. ' ' → logprob: -11.226212501525879
    5. '   ' → logprob: -11.226212501525879
    6. ' ,' → logprob: -11.351212501525879
    7. '	in' → logprob: -11.851212501525879
    8. '    ' → logprob: -12.351212501525879
    9. ',in' → logprob: -12.351212501525879
    10. '  ' → logprob: -12.726212501525879

Token 289: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0012130910763517022
    2. ' d' → logprob: -7.001213073730469
    3. 'list' → logprob: -8.126213073730469
    4. ' list' → logprob: -12.251213073730469
    5. '
' → logprob: -14.751213073730469
    6. '   ' → logprob: -15.251213073730469
    7. ' ' → logprob: -16.37621307373047
    8. '	d' → logprob: -16.37621307373047
    9. 'range' → logprob: -16.62621307373047
    10. '

' → logprob: -16.75121307373047

Token 290: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.002206997014582157
    2. '.' → logprob: -6.252206802368164
    3. 'items' → logprob: -8.377206802368164
    4. '.iteritems' → logprob: -10.877206802368164
    5. '().' → logprob: -11.377206802368164
    6. '.values' → logprob: -11.502206802368164
    7. '.Items' → logprob: -12.627206802368164
    8. ' .' → logprob: -13.002206802368164
    9. '_items' → logprob: -13.627206802368164
    10. '(items' → logprob: -14.877206802368164

Token 291: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.537868779967539e-06
    2. '()' → logprob: -12.500008583068848
    3. '():
' → logprob: -12.625008583068848
    4. ' ():' → logprob: -13.500008583068848
    5. ':' → logprob: -16.75000762939453
    6. '()>' → logprob: -18.37500762939453
    7. '():

' → logprob: -19.00000762939453
    8. '(' → logprob: -19.25000762939453
    9. '();' → logprob: -19.25000762939453
    10. '(),' → logprob: -19.75000762939453

Token 292: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003176402533426881
    2. '<|end|>' → logprob: -6.003176212310791
    3. ',' → logprob: -8.12817668914795
    4. '   ' → logprob: -8.25317668914795
    5. ' if' → logprob: -10.37817668914795
    6. '
' → logprob: -10.37817668914795
    7. '<|end|>' → logprob: -10.62817668914795
    8. ' ' → logprob: -11.62817668914795
    9. '    ' → logprob: -11.62817668914795
    10. ':' → logprob: -11.62817668914795

Token 293: ' k' (ID: 372)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7547149062156677
    2. '       ' → logprob: -0.8797149062156677
    3. '   ' → logprob: -3.0047149658203125
    4. 'k' (adapté à ' k') → logprob: -3.5047149658203125
    5. ' if' → logprob: -3.8797149658203125
    6. ' k' → logprob: -4.2547149658203125
    7. 'i' → logprob: -8.754714965820312
    8. '
' → logprob: -9.629714965820312
    9. ' ' → logprob: -9.879714965820312
    10. '<|end|>' → logprob: -10.379714965820312

Token 294: ' ^=' (ID: 79665)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1019313782453537
    2. ' +=' → logprob: -2.47693133354187
    3. ' ^=' → logprob: -4.601931571960449
    4. '^' → logprob: -6.101931571960449
    5. '=' → logprob: -8.22693157196045
    6. '+' → logprob: -8.60193157196045
    7. ' ^' → logprob: -10.10193157196045
    8. '+=(' → logprob: -10.10193157196045
    9. ']+=' → logprob: -10.47693157196045
    10. ' =' → logprob: -10.60193157196045

Token 295: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.615255839889869e-05
    2. ' i' → logprob: -9.250096321105957
    3. 'int' → logprob: -18.87509536743164
    4. 'j' → logprob: -19.25009536743164
    5. '	i' → logprob: -20.00009536743164
    6. '   ' → logprob: -20.25009536743164
    7. 'x' → logprob: -20.37509536743164
    8. ' ' → logprob: -21.12509536743164
    9. '       ' → logprob: -21.37509536743164
    10. 'k' → logprob: -21.62509536743164

Token 296: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010997360572218895
    2. '    
' → logprob: -5.260997295379639
    3. ' 
' → logprob: -6.010997295379639
    4. '  
' → logprob: -6.510997295379639
    5. '   ' → logprob: -7.010997295379639
    6. '
' → logprob: -8.760997772216797
    7. ' ' → logprob: -8.760997772216797
    8. '   
' → logprob: -9.260997772216797
    9. '<|end|>' → logprob: -9.260997772216797
    10. 'k' → logprob: -9.635997772216797

Token 297: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46583297848701477
    2. ',' → logprob: -1.8408329486846924
    3. '   ' → logprob: -2.3408329486846924
    4. '    
' → logprob: -2.9658329486846924
    5. ' ' → logprob: -3.9658329486846924
    6. ' 
' → logprob: -4.0908331871032715
    7. '<|end|>' → logprob: -4.4658331871032715
    8. '  
' → logprob: -4.8408331871032715
    9. '   
' → logprob: -5.7158331871032715
    10. '  ' → logprob: -6.4658331871032715

Token 298: ' if' (ID: 538)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.38806939125061035
    2. 'k' → logprob: -1.2630693912506104
    3. '<|end|>' → logprob: -4.388069152832031
    4. 'if' (adapté à ' if') → logprob: -5.138069152832031
    5. '1' → logprob: -5.388069152832031
    6. ' j' → logprob: -5.888069152832031
    7. 'print' → logprob: -5.888069152832031
    8. ' ' → logprob: -6.013069152832031
    9. '0' → logprob: -6.013069152832031
    10. 'd' → logprob: -6.388069152832031

Token 299: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0029569005127996206
    2. ' j' → logprob: -6.127956867218018
    3. 'd' → logprob: -7.252956867218018
    4. 'k' → logprob: -11.377957344055176
    5. 'not' → logprob: -11.377957344055176
    6. '   ' → logprob: -11.502957344055176
    7. ' d' → logprob: -11.877957344055176
    8. 'i' → logprob: -12.252957344055176
    9. '	j' → logprob: -12.377957344055176
    10. ' ' → logprob: -12.502957344055176

Token 300: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6336402297019958
    2. ' !=' → logprob: -0.7586402297019958
    3. '<' → logprob: -7.758640289306641
    4. '==' → logprob: -8.63364028930664
    5. ' <' → logprob: -9.00864028930664
    6. '<|end|>' → logprob: -9.25864028930664
    7. ' ==' → logprob: -10.00864028930664
    8. ' ' → logprob: -10.00864028930664
    9. '%' → logprob: -10.75864028930664
    10. '!' → logprob: -11.00864028930664

Token 301: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002072357019642368
    2. ' n' → logprob: -8.50020694732666
    3. '   ' → logprob: -12.75020694732666
    4. '
' → logprob: -15.12520694732666
    5. ' ' → logprob: -15.87520694732666
    6. '  ' → logprob: -16.125207901000977
    7. '	n' → logprob: -16.125207901000977
    8. '0' → logprob: -16.250207901000977
    9. '(n' → logprob: -16.250207901000977
    10. '(' → logprob: -18.375207901000977

Token 302: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -6.265633419388905e-05
    2. ' //' → logprob: -9.875062942504883
    3. '```' → logprob: -12.625062942504883
    4. '//=' → logprob: -12.750062942504883
    5. '3' → logprob: -13.250062942504883
    6. '/' → logprob: -13.875062942504883
    7. '{//' → logprob: -14.125062942504883
    8. '://' → logprob: -14.375062942504883
    9. ' ' → logprob: -15.375062942504883
    10. '   ' → logprob: -15.625062942504883

Token 303: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '   ' → logprob: -18.875
    4. '<|end|>' → logprob: -19.0
    5. '```' → logprob: -19.25
    6. '۳' → logprob: -19.375
    7. '৩' → logprob: -19.625
    8. '३' → logprob: -20.1875
    9. '...' → logprob: -20.5
    10. '
' → logprob: -20.5625

Token 304: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022878995165228844
    2. ':
' → logprob: -4.147879123687744
    3. ':return' → logprob: -5.272879123687744
    4. '           ' → logprob: -7.022879123687744
    5. '       ' → logprob: -7.647879123687744
    6. '):' → logprob: -8.522878646850586
    7. ' :' → logprob: -10.022878646850586
    8. ')' → logprob: -10.647878646850586
    9. '):
' → logprob: -11.272878646850586
    10. '   ' → logprob: -11.772878646850586

Token 305: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00911096204072237
    2. 'print' → logprob: -5.009110927581787
    3. 'return' → logprob: -6.884110927581787
    4. ' print' → logprob: -7.259110927581787
    5. ' return' → logprob: -7.759110927581787
    6. '               ' → logprob: -8.384111404418945
    7. '          ' → logprob: -13.134111404418945
    8. ' ' → logprob: -13.134111404418945
    9. '       ' → logprob: -13.259111404418945
    10. '```' → logprob: -14.009111404418945

Token 306: ' print' (ID: 2123)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7264820337295532
    2. 'print' (adapté à ' print') → logprob: -0.7264820337295532
    3. ' print' → logprob: -3.8514819145202637
    4. '           ' → logprob: -4.476481914520264
    5. 'return' → logprob: -9.101482391357422
    6. '       ' → logprob: -11.601482391357422
    7. ' return' → logprob: -11.976482391357422
    8. '   ' → logprob: -11.976482391357422
    9. '             ' → logprob: -11.976482391357422
    10. '	print' → logprob: -11.976482391357422

Token 307: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0011709370883181691
    2. '(' → logprob: -6.751171112060547
    3. '('' → logprob: -14.126171112060547
    4. '(
' → logprob: -16.876171112060547
    5. '(No' → logprob: -18.376171112060547
    6. '(""' → logprob: -18.626171112060547
    7. '(`' → logprob: -19.501171112060547
    8. '(

' → logprob: -19.626171112060547
    9. '("")' → logprob: -19.626171112060547
    10. '("("' → logprob: -19.751171112060547

Token 308: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.00012368128227535635
    2. '"No' → logprob: -9.000123977661133
    3. ' No' → logprob: -16.375123977661133
    4. 'N' → logprob: -16.875123977661133
    5. '"' → logprob: -17.625123977661133
    6. 'NO' → logprob: -18.375123977661133
    7. '_No' → logprob: -19.125123977661133
    8. '```' → logprob: -20.250123977661133
    9. '(No' → logprob: -20.375123977661133
    10. '"N' → logprob: -20.500123977661133

Token 309: '")
' (ID: 1896)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018743820255622268
    2. '               ' → logprob: -6.5018744468688965
    3. ')' → logprob: -8.626873970031738
    4. '")' → logprob: -9.001873970031738
    5. ')
' → logprob: -11.001873970031738
    6. 'return' → logprob: -11.251873970031738
    7. '")
' → logprob: -11.501873970031738
    8. ')return' → logprob: -11.626873970031738
    9. '		' → logprob: -12.001873970031738
    10. '                   ' → logprob: -12.751873970031738

Token 310: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010068230039905757
    2. '               ' → logprob: -9.375101089477539
    3. '		' → logprob: -11.750101089477539
    4. '            
' → logprob: -13.000101089477539
    5. '
' → logprob: -13.125101089477539
    6. '       ' → logprob: -14.250101089477539
    7. '	       ' → logprob: -14.250101089477539
    8. 'return' → logprob: -14.750101089477539
    9. ' return' → logprob: -14.875101089477539
    10. '                   ' → logprob: -14.875101089477539

Token 311: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008465641178190708
    2. 'return' (adapté à ' return') → logprob: -4.883465766906738
    3. ' return' → logprob: -7.508465766906738
    4. '               ' → logprob: -8.258465766906738
    5. '		' → logprob: -10.883465766906738
    6. '            
' → logprob: -12.008465766906738
    7. '   ' → logprob: -12.008465766906738
    8. '
' → logprob: -12.008465766906738
    9. '	return' → logprob: -12.008465766906738
    10. '       ' → logprob: -12.508465766906738

Token 312: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00017386233957950026
    2. 'print' → logprob: -8.750173568725586
    3. '       ' → logprob: -11.625173568725586
    4. '<|end|>' → logprob: -12.750173568725586
    5. '    
' → logprob: -13.250173568725586
    6. '
' → logprob: -14.875173568725586
    7. ' print' → logprob: -15.000173568725586
    8. '           ' → logprob: -15.375173568725586
    9. '  ' → logprob: -15.625173568725586
    10. 'n' → logprob: -16.125173568725586

Token 313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003777648089453578
    2. 'print' → logprob: -8.000377655029297
    3. '       ' → logprob: -10.250377655029297
    4. '           ' → logprob: -12.000377655029297
    5. ' print' → logprob: -15.000377655029297
    6. '```' → logprob: -15.625377655029297
    7. '    
' → logprob: -16.375377655029297
    8. '  ' → logprob: -16.750377655029297
    9. '
' → logprob: -17.125377655029297
    10. '<|end|>' → logprob: -17.250377655029297

Token 314: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03807947784662247
    2. '   ' → logprob: -3.2880795001983643
    3. ' print' → logprob: -10.663079261779785
    4. '
' → logprob: -11.538079261779785
    5. '    
' → logprob: -13.288079261779785
    6. '```' → logprob: -13.288079261779785
    7. '	print' → logprob: -14.163079261779785
    8. '       ' → logprob: -15.538079261779785
    9. '  ' → logprob: -15.663079261779785
    10. 'Print' → logprob: -16.1630802154541

Token 315: ' not' (ID: 625)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.018436945974826813
    2. ' k' → logprob: -4.018436908721924
    3. 'len' → logprob: -8.393437385559082
    4. 'True' → logprob: -10.393437385559082
    5. ' len' → logprob: -11.143437385559082
    6. ' True' → logprob: -11.768437385559082
    7. ' ' → logprob: -13.018437385559082
    8. '   ' → logprob: -13.143437385559082
    9. '__' → logprob: -14.393437385559082
    10. 'not' → logprob: -14.893437385559082

Token 316: ' k' (ID: 372)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.7916623950004578
    2. ' k' → logprob: -1.5416624546051025
    3. 'k' → logprob: -1.9166624546051025
    4. ' (' → logprob: -2.4166624546051025
    5. '(len' → logprob: -4.041662216186523
    6. ' len' → logprob: -4.291662216186523
    7. ' all' → logprob: -4.291662216186523
    8. '(' → logprob: -4.291662216186523
    9. 'len' → logprob: -4.541662216186523
    10. '(d' → logprob: -5.541662216186523

Token 317: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005373051972128451
    2. '==' → logprob: -7.750537395477295
    3. ' :' → logprob: -9.875536918640137
    4. ':
' → logprob: -10.375536918640137
    5. ' ==' → logprob: -11.000536918640137
    6. '=' → logprob: -12.500536918640137
    7. ':**' → logprob: -13.875536918640137
    8. '):' → logprob: -14.375536918640137
    9. ':return' → logprob: -15.375536918640137
    10. ':`' → logprob: -15.375536918640137

Token 318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16284063458442688
    2. ':
' → logprob: -2.2878406047821045
    3. ':' → logprob: -3.0378406047821045
    4. '   ' → logprob: -7.162840843200684
    5. '):
' → logprob: -11.162840843200684
    6. '():
' → logprob: -11.287840843200684
    7. '
' → logprob: -11.412840843200684
    8. ',' → logprob: -11.537840843200684
    9. ' print' → logprob: -12.537840843200684
    10. '    
' → logprob: -12.537840843200684

Token 319: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.008092395029962063
    2. ' print' → logprob: -5.008092403411865
    3. '       ' → logprob: -6.883092403411865
    4. '   ' → logprob: -8.008091926574707
    5. '           ' → logprob: -11.133091926574707
    6. '	print' → logprob: -12.758091926574707
    7. ' ' → logprob: -15.008091926574707
    8. '
' → logprob: -15.383091926574707
    9. '  ' → logprob: -15.883091926574707
    10. '.print' → logprob: -16.258092880249023

Token 320: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.6166903151315637e-05
    2. '(' → logprob: -11.125016212463379
    3. '("("' → logprob: -14.125016212463379
    4. '('' → logprob: -15.250016212463379
    5. '("(' → logprob: -15.750016212463379
    6. ' ("' → logprob: -16.625015258789062
    7. '(
' → logprob: -16.875015258789062
    8. '"' → logprob: -17.125015258789062
    9. '("")' → logprob: -18.250015258789062
    10. 'Yes' → logprob: -19.125015258789062

Token 321: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.020073698833584785
    2. '"' → logprob: -4.020073890686035
    3. '("' → logprob: -6.395073890686035
    4. 'No' → logprob: -8.645073890686035
    5. '"No' → logprob: -9.645073890686035
    6. '“Yes' → logprob: -12.145073890686035
    7. ''' → logprob: -13.270073890686035
    8. 'YES' → logprob: -13.520073890686035
    9. '(' → logprob: -13.895073890686035
    10. ' Yes' → logprob: -14.145073890686035

Token 322: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.006366459187120199
    2. '")
' → logprob: -5.13136625289917
    3. '   ' → logprob: -8.256366729736328
    4. ')' → logprob: -8.756366729736328
    5. '       ' → logprob: -11.381366729736328
    6. ')
' → logprob: -12.506366729736328
    7. ')")' → logprob: -13.131366729736328
    8. '()' → logprob: -13.381366729736328
    9. '')' → logprob: -14.631366729736328
    10. '")
' → logprob: -14.756366729736328

Token 323: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01539961714297533
    2. '<|end|>' → logprob: -4.76539945602417
    3. '       ' → logprob: -5.01539945602417
    4. ')' → logprob: -9.890399932861328
    5. '
' → logprob: -10.765399932861328
    6. '```' → logprob: -11.515399932861328
    7. '.' → logprob: -11.890399932861328
    8. '<|end|>' → logprob: -12.265399932861328
    9. ' ' → logprob: -12.390399932861328
    10. 'else' → logprob: -12.390399932861328

Token 324: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052731528878211975
    2. 'return' (adapté à ' return') → logprob: -3.302731513977051
    3. '       ' → logprob: -4.677731513977051
    4. 'else' → logprob: -5.302731513977051
    5. ' return' → logprob: -8.55273151397705
    6. '<|end|>' → logprob: -10.17773151397705
    7. ' else' → logprob: -10.42773151397705
    8. ' ' → logprob: -11.30273151397705
    9. '  ' → logprob: -11.55273151397705
    10. '    ' → logprob: -12.17773151397705

Token 325: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07897317409515381
    2. 'print' → logprob: -2.5789732933044434
    3. 'else' → logprob: -9.703972816467285
    4. 'No' → logprob: -11.828972816467285
    5. '
' → logprob: -12.328972816467285
    6. 'A' → logprob: -12.578972816467285
    7. '```' → logprob: -13.203972816467285
    8. '    
' → logprob: -13.703972816467285
    9. 'import' → logprob: -14.203972816467285
    10. 'no' → logprob: -14.453972816467285

Token 326: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001627098536118865
    2. 'else' → logprob: -7.001626968383789
    3. '   ' → logprob: -7.251626968383789
    4. 'No' → logprob: -12.876626968383789
    5. '
' → logprob: -13.626626968383789
    6. '    
' → logprob: -14.626626968383789
    7. 'def' → logprob: -14.626626968383789
    8. ' print' → logprob: -14.876626968383789
    9. '#' → logprob: -15.501626968383789
    10. '```' → logprob: -15.751626968383789

Token 327: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.7432603272027336e-06
    2. 'else' → logprob: -13.625001907348633
    3. '   ' → logprob: -15.375001907348633
    4. ' print' → logprob: -15.750001907348633
    5. 'No' → logprob: -16.500001907348633
    6. '```' → logprob: -18.125001907348633
    7. 'pr' → logprob: -18.625001907348633
    8. '	print' → logprob: -19.125001907348633
    9. '#print' → logprob: -19.750001907348633
    10. '#' → logprob: -19.875001907348633

Token 328: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.250001907348633
    3. '('' → logprob: -16.250001907348633
    4. '("("' → logprob: -17.625001907348633
    5. ' ("' → logprob: -19.125001907348633
    6. '("(' → logprob: -19.750001907348633
    7. '("")' → logprob: -20.250001907348633
    8. '(
' → logprob: -20.625001907348633
    9. '"No' → logprob: -21.375001907348633
    10. '"' → logprob: -21.500001907348633

Token 329: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -4.961759259458631e-06
    2. '"No' → logprob: -12.250004768371582
    3. '"' → logprob: -16.6250057220459
    4. ' No' → logprob: -17.3750057220459
    5. 'NO' → logprob: -18.8750057220459
    6. 'N' → logprob: -19.7500057220459
    7. '(No' → logprob: -20.0000057220459
    8. 'Yes' → logprob: -20.3750057220459
    9. '_No' → logprob: -20.5000057220459
    10. '   ' → logprob: -20.8750057220459

Token 330: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -5.3954463510308415e-05
    2. ')' → logprob: -10.375054359436035
    3. ')")' → logprob: -11.000054359436035
    4. '")
' → logprob: -12.875054359436035
    5. '()' → logprob: -12.875054359436035
    6. '')' → logprob: -14.375054359436035
    7. '}")' → logprob: -16.00005340576172
    8. '```' → logprob: -16.62505340576172
    9. ' ")' → logprob: -16.75005340576172
    10. '"' → logprob: -18.00005340576172

Token 331: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 332: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 333: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 334: 'def' (ID: 1314)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0039872159250080585
    2. '
' → logprob: -5.8789873123168945
    3. '\n' → logprob: -7.7539873123168945
    4. 'if' → logprob: -8.128987312316895
    5. '<|end|>' → logprob: -8.503987312316895
    6. ' A' → logprob: -9.503987312316895
    7. '#' → logprob: -9.753987312316895
    8. '\' → logprob: -10.128987312316895
    9. '```' → logprob: -10.378987312316895
    10. 'a' → logprob: -10.503987312316895

Token 335: ' B' (ID: 418)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.011399820446968079
    2. 'main' → logprob: -4.761399745941162
    3. ' B' → logprob: -6.511399745941162
    4. ' ' → logprob: -7.761399745941162
    5. ' __' → logprob: -8.13640022277832
    6. '__' → logprob: -8.13640022277832
    7. 'B' → logprob: -9.38640022277832
    8. ' A' → logprob: -9.51140022277832
    9. '_' → logprob: -9.88640022277832
    10. '_main' → logprob: -10.01140022277832

Token 336: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.2723104848410003e-05
    2. ' ():' → logprob: -10.750022888183594
    3. '():
' → logprob: -14.000022888183594
    4. '()' → logprob: -15.000022888183594
    5. 'def' → logprob: -18.125022888183594
    6. ':' → logprob: -18.250022888183594
    7. '(' → logprob: -19.250022888183594
    8. '().' → logprob: -19.375022888183594
    9. ' ()' → logprob: -19.625022888183594
    10. '():
' → logprob: -19.750022888183594

Token 337: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05787951499223709
    2. 'n' → logprob: -3.0578794479370117
    3. ' pass' → logprob: -5.807879447937012
    4. ' n' → logprob: -6.307879447937012
    5. '    ' → logprob: -6.682879447937012
    6. 'def' → logprob: -7.057879447937012
    7. '#' → logprob: -7.182879447937012
    8. 'pass' → logprob: -7.182879447937012
    9. '    
' → logprob: -7.932879447937012
    10. '...' → logprob: -8.432879447937012

Token 338: ' def' (ID: 1056)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3391271233558655
    2. 't' → logprob: -1.4641270637512207
    3. 'pass' → logprob: -3.2141270637512207
    4. 'q' → logprob: -5.839127063751221
    5. 'k' → logprob: -6.214127063751221
    6. 'a' → logprob: -6.339127063751221
    7. 'm' → logprob: -6.464127063751221
    8. '   ' → logprob: -6.589127063751221
    9. 'def' (adapté à ' def') → logprob: -6.589127063751221
    10. 'x' → logprob: -6.839127063751221

Token 339: ' dfs' (ID: 51252)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.09687069803476334
    2. 'main' → logprob: -2.4718706607818604
    3. ' solve' → logprob: -5.3468708992004395
    4. 'solve' → logprob: -6.2218708992004395
    5. ' dfs' → logprob: -8.096870422363281
    6. 'dfs' → logprob: -8.221870422363281
    7. ' helper' → logprob: -8.971870422363281
    8. ' ' → logprob: -10.221870422363281
    9. ' max' → logprob: -10.596870422363281
    10. 'C' → logprob: -10.596870422363281

Token 340: '(x' (ID: 4061)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.8831143379211426
    2. '(v' → logprob: -1.3831143379211426
    3. '(node' → logprob: -1.6331143379211426
    4. '(' → logprob: -2.3831143379211426
    5. '(x' → logprob: -3.6331143379211426
    6. ' (' → logprob: -4.383114337921143
    7. '(s' → logprob: -5.758114337921143
    8. '(i' → logprob: -6.008114337921143
    9. '(pos' → logprob: -6.883114337921143
    10. '(n' → logprob: -6.883114337921143

Token 341: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013847592053934932
    2. ',u' → logprob: -7.376384735107422
    3. '):' → logprob: -7.626384735107422
    4. ',k' → logprob: -9.626384735107422
    5. ',x' → logprob: -9.751384735107422
    6. ',v' → logprob: -10.126384735107422
    7. ',y' → logprob: -10.626384735107422
    8. ',n' → logprob: -10.626384735107422
    9. ' ,' → logprob: -11.126384735107422
    10. '):
' → logprob: -11.501384735107422

Token 342: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02274976298213005
    2. 'ep' → logprob: -4.772749900817871
    3. ',p' → logprob: -4.897749900817871
    4. '):' → logprob: -5.772749900817871
    5. 'p' → logprob: -7.397749900817871
    6. ' ,' → logprob: -7.772749900817871
    7. ',x' → logprob: -7.897749900817871
    8. '):
' → logprob: -8.147749900817871
    9. ',u' → logprob: -8.272749900817871
    10. 'fs' → logprob: -8.522749900817871

Token 343: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.612157940864563
    2. '   ' → logprob: -0.862157940864563
    3. '<|end|>' → logprob: -3.7371578216552734
    4. '    ' → logprob: -5.737157821655273
    5. ' pass' → logprob: -5.862157821655273
    6. ' ' → logprob: -5.862157821655273
    7. ',' → logprob: -6.487157821655273
    8. '	   ' → logprob: -7.487157821655273
    9. ' for' → logprob: -8.987157821655273
    10. ' if' → logprob: -9.237157821655273

Token 344: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6631735563278198
    2. 'if' → logprob: -0.7881735563278198
    3. 'stack' → logprob: -3.9131736755371094
    4. ' stack' → logprob: -5.538173675537109
    5. '   ' → logprob: -5.913173675537109
    6. '       ' → logprob: -6.663173675537109
    7. ' for' → logprob: -7.538173675537109
    8. ' non' → logprob: -7.788173675537109
    9. 'for' (adapté à ' for') → logprob: -7.788173675537109
    10. 'non' → logprob: -8.28817367553711

Token 345: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07225047051906586
    2. 'nx' → logprob: -2.6972503662109375
    3. 'n' → logprob: -7.3222503662109375
    4. 'i' → logprob: -7.4472503662109375
    5. 'v' → logprob: -8.072250366210938
    6. ' y' → logprob: -8.572250366210938
    7. 'e' → logprob: -8.947250366210938
    8. '(nx' → logprob: -8.947250366210938
    9. 'u' → logprob: -9.572250366210938
    10. 'c' → logprob: -10.197250366210938

Token 346: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5761005282402039
    2. 'in' → logprob: -0.8261005282402039
    3. ',' → logprob: -9.70110034942627
    4. '	in' → logprob: -10.57610034942627
    5. ' ' → logprob: -10.82610034942627
    6. '   ' → logprob: -11.32610034942627
    7. '  ' → logprob: -11.70110034942627
    8. '    ' → logprob: -12.32610034942627
    9. ',in' → logprob: -12.45110034942627
    10. ' ,' → logprob: -12.82610034942627

Token 347: ' v' (ID: 323)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.17186717689037323
    2. 'graph' → logprob: -2.0468671321868896
    3. 'adj' → logprob: -4.421867370605469
    4. 'g' → logprob: -4.921867370605469
    5. 'G' → logprob: -4.921867370605469
    6. 'range' → logprob: -6.421867370605469
    7. '[d' → logprob: -8.671867370605469
    8. ' graph' → logprob: -8.921867370605469
    9. 'tree' → logprob: -9.171867370605469
    10. ' d' → logprob: -10.421867370605469

Token 348: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.572941179503687e-05
    2. ':' → logprob: -10.500045776367188
    3. '[v' → logprob: -12.625045776367188
    4. '[' → logprob: -12.750045776367188
    5. '   ' → logprob: -13.250045776367188
    6. '[y' → logprob: -13.625045776367188
    7. 'alue' → logprob: -14.000045776367188
    8. ']' → logprob: -14.125045776367188
    9. '[X' → logprob: -14.125045776367188
    10. ' in' → logprob: -14.250045776367188

Token 349: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0017585984896868467
    2. ']:
' → logprob: -6.376758575439453
    3. ']' → logprob: -10.126758575439453
    4. ']:
' → logprob: -11.876758575439453
    5. '],' → logprob: -12.876758575439453
    6. ']:

' → logprob: -13.126758575439453
    7. '][' → logprob: -13.876758575439453
    8. ' ]' → logprob: -14.001758575439453
    9. '[' → logprob: -14.251758575439453
    10. ']):' → logprob: -14.376758575439453

Token 350: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14318932592868805
    2. '           ' → logprob: -2.1431894302368164
    3. 'if' → logprob: -5.268189430236816
    4. '<|end|>' → logprob: -6.018189430236816
    5. '            ' → logprob: -6.518189430236816
    6. '	if' → logprob: -6.643189430236816
    7. '	       ' → logprob: -6.768189430236816
    8. '        ' → logprob: -6.893189430236816
    9. '               ' → logprob: -7.143189430236816
    10. '		' → logprob: -7.268189430236816

Token 351: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6940191984176636
    2. ' if' → logprob: -0.6940191984176636
    3. '           ' → logprob: -7.194019317626953
    4. '       ' → logprob: -9.944019317626953
    5. '               ' → logprob: -10.069019317626953
    6. '<|end|>' → logprob: -11.444019317626953
    7. '	if' → logprob: -12.319019317626953
    8. '   ' → logprob: -12.819019317626953
    9. ',' → logprob: -13.319019317626953
    10. 'If' → logprob: -13.569019317626953

Token 352: ' d' (ID: 272)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3042488098144531
    2. 'not' → logprob: -1.5542488098144531
    3. 'd' → logprob: -3.429248809814453
    4. ' not' → logprob: -4.304248809814453
    5. ' y' → logprob: -5.554248809814453
    6. 'visited' → logprob: -7.429248809814453
    7. 'dist' → logprob: -8.429248809814453
    8. '(not' → logprob: -9.179248809814453
    9. ' d' → logprob: -9.304248809814453
    10. 'depth' → logprob: -9.429248809814453

Token 353: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0036691983696073294
    2. '.get' → logprob: -5.628669261932373
    3. 'y' → logprob: -10.253668785095215
    4. '[' → logprob: -10.878668785095215
    5. '[x' → logprob: -12.503668785095215
    6. ',y' → logprob: -13.753668785095215
    7. '==' → logprob: -13.878668785095215
    8. '```' → logprob: -13.878668785095215
    9. '(y' → logprob: -14.128668785095215
    10. '
' → logprob: -14.128668785095215

Token 354: ']:
' (ID: 22152)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.5250065922737122
    2. ']' → logprob: -0.9000065922737122
    3. ']<' → logprob: -6.9000067710876465
    4. '[' → logprob: -8.150006294250488
    5. ']!=' → logprob: -8.275006294250488
    6. '==' → logprob: -9.025006294250488
    7. '==-' → logprob: -9.400006294250488
    8. '<' → logprob: -10.400006294250488
    9. ']>=' → logprob: -10.775006294250488
    10. ' ]' → logprob: -10.900006294250488

Token 355: '               ' (ID: 506)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3308362364768982
    2. '               ' → logprob: -1.580836296081543
    3. '==' → logprob: -3.080836296081543
    4. ' continue' → logprob: -3.955836296081543
    5. ' is' → logprob: -5.455836296081543
    6. ' ' → logprob: -6.080836296081543
    7. '<|end|>' → logprob: -7.080836296081543
    8. '	continue' → logprob: -7.205836296081543
    9. ' continues' → logprob: -7.580836296081543
    10. '	' → logprob: -8.330836296081543

Token 356: ' d' (ID: 272)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.15565255284309387
    2. '               ' → logprob: -2.0306525230407715
    3. 'continue' → logprob: -4.5306525230407715
    4. ' return' → logprob: -7.0306525230407715
    5. '	continue' → logprob: -7.5306525230407715
    6. '           ' → logprob: -8.40565299987793
    7. ' if' → logprob: -8.65565299987793
    8. '                   ' → logprob: -9.15565299987793
    9. '	           ' → logprob: -10.28065299987793
    10. ' ' → logprob: -10.90565299987793

Token 357: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.3888031840324402
    2. '[x' → logprob: -1.138803243637085
    3. '[' → logprob: -7.263803005218506
    4. ' y' → logprob: -8.388803482055664
    5. 'x' → logprob: -8.513803482055664
    6. ']' → logprob: -8.763803482055664
    7. 'y' → logprob: -8.888803482055664
    8. ')' → logprob: -8.888803482055664
    9. '[v' → logprob: -10.263803482055664
    10. '```' → logprob: -10.263803482055664

Token 358: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.5442090034484863
    2. ']' → logprob: -0.9192090034484863
    3. ']!=' → logprob: -4.044209003448486
    4. ' ]' → logprob: -7.044209003448486
    5. '[' → logprob: -7.419209003448486
    6. ']=' → logprob: -7.544209003448486
    7. ']>' → logprob: -8.294208526611328
    8. '==' → logprob: -8.419208526611328
    9. ']+=' → logprob: -8.419208526611328
    10. ']<' → logprob: -8.919208526611328

Token 359: ' =' (ID: 314)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6295455694198608
    2. '=' → logprob: -1.1295455694198608
    3. '==' → logprob: -2.7545456886291504
    4. 'continue' → logprob: -2.8795456886291504
    5. ' =' → logprob: -5.25454568862915
    6. ' ^=' → logprob: -5.62954568862915
    7. '+=' → logprob: -5.87954568862915
    8. ' continue' → logprob: -6.00454568862915
    9. ' !=' → logprob: -6.25454568862915
    10. '[' → logprob: -6.37954568862915

Token 360: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7618854641914368
    2. 'False' → logprob: -0.7618854641914368
    3. 'd' → logprob: -3.261885404586792
    4. ' False' → logprob: -4.761885643005371
    5. 'min' → logprob: -5.136885643005371
    6. 'max' → logprob: -5.511885643005371
    7. ' ' → logprob: -5.636885643005371
    8. '2' → logprob: -6.511885643005371
    9. '1' → logprob: -6.761885643005371
    10. 'True' → logprob: -6.761885643005371

Token 361: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5462230443954468
    2. 'False' → logprob: -1.0462230443954468
    3. 'd' → logprob: -3.0462231636047363
    4. '2' → logprob: -5.421223163604736
    5. 'min' → logprob: -5.546223163604736
    6. 'max' → logprob: -5.546223163604736
    7. 'x' → logprob: -5.546223163604736
    8. ' False' → logprob: -6.421223163604736
    9. '1' → logprob: -6.671223163604736
    10. 'True' → logprob: -6.796223163604736

Token 362: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 363: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 364: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.6923446655273438
    2. 'dfs' (adapté à ' dfs') → logprob: -0.8173446655273438
    3. '               ' → logprob: -3.1923446655273438
    4. '           ' → logprob: -5.567344665527344
    5. 'return' → logprob: -5.692344665527344
    6. ' return' → logprob: -5.817344665527344
    7. '                   ' → logprob: -5.942344665527344
    8. 'd' → logprob: -6.317344665527344
    9. 'def' → logprob: -8.192344665527344
    10. '                       ' → logprob: -8.442344665527344

Token 365: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0001149867384810932
    2. '(' → logprob: -9.375115394592285
    3. 'y' → logprob: -11.250115394592285
    4. '<|end|>' → logprob: -11.250115394592285
    5. '(
' → logprob: -13.500115394592285
    6. ' (' → logprob: -14.250115394592285
    7. '(x' → logprob: -14.250115394592285
    8. ' y' → logprob: -14.750115394592285
    9. ')y' → logprob: -15.250115394592285
    10. ')' → logprob: -15.250115394592285

Token 366: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.4295254647731781
    2. ',' → logprob: -1.0545254945755005
    3. ' ,' → logprob: -7.179525375366211
    4. ',y' → logprob: -10.429525375366211
    5. '   ' → logprob: -11.804525375366211
    6. '(d' → logprob: -11.929525375366211
    7. 'd' → logprob: -11.929525375366211
    8. ',
' → logprob: -13.054525375366211
    9. '(' → logprob: -13.679525375366211
    10. ' d' → logprob: -13.804525375366211

Token 367: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034535606391727924
    2. ')
' → logprob: -8.500345230102539
    3. ' )' → logprob: -9.375345230102539
    4. '       ' → logprob: -11.250345230102539
    5. ',' → logprob: -11.500345230102539
    6. '[' → logprob: -11.750345230102539
    7. '   ' → logprob: -12.500345230102539
    8. '<|end|>' → logprob: -12.500345230102539
    9. '[y' → logprob: -12.625345230102539
    10. ')y' → logprob: -13.125345230102539

Token 368: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 369: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 370: ' f' (ID: 285)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2120203822851181
    2. ' d' → logprob: -2.9620203971862793
    3. 'False' → logprob: -3.2120203971862793
    4. ' not' → logprob: -3.5870203971862793
    5. 'not' → logprob: -3.7120203971862793
    6. 'y' → logprob: -4.337020397186279
    7. 'len' → logprob: -4.462020397186279
    8. 'x' → logprob: -5.087020397186279
    9. ' False' → logprob: -5.462020397186279
    10. ' y' → logprob: -5.712020397186279

Token 371: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.9404394030570984
    2. '[' → logprob: -1.3154394626617432
    3. ' y' → logprob: -1.8154394626617432
    4. '[x' → logprob: -2.190439462661743
    5. 'y' → logprob: -3.815439462661743
    6. '<|end|>' → logprob: -4.940439224243164
    7. 'x' → logprob: -5.190439224243164
    8. ')' → logprob: -5.315439224243164
    9. '(y' → logprob: -5.440439224243164
    10. ' ' → logprob: -5.440439224243164

Token 372: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.3237268030643463
    2. ']==' → logprob: -1.698726773262024
    3. ']' → logprob: -2.4487268924713135
    4. ' ]' → logprob: -5.448726654052734
    5. ']>' → logprob: -6.698726654052734
    6. ']:
' → logprob: -7.448726654052734
    7. '==' → logprob: -7.573726654052734
    8. '[' → logprob: -8.573726654052734
    9. ']!=' → logprob: -9.198726654052734
    10. ' ==' → logprob: -9.823726654052734

Token 373: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23726853728294373
    2. ':' → logprob: -1.9872685670852661
    3. '               ' → logprob: -3.7372684478759766
    4. '                       ' → logprob: -4.362268447875977
    5. ' ==' → logprob: -5.487268447875977
    6. ':
' → logprob: -5.487268447875977
    7. '   ' → logprob: -5.612268447875977
    8. ' :' → logprob: -5.612268447875977
    9. '==' → logprob: -5.737268447875977
    10. '<|end|>' → logprob: -5.737268447875977

Token 374: ' ans' (ID: 3345)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.1960514932870865
    2. 'f' → logprob: -1.8210514783859253
    3. ' return' → logprob: -4.696051597595215
    4. '                   ' → logprob: -6.196051597595215
    5. '                       ' → logprob: -6.446051597595215
    6. 'return' → logprob: -6.571051597595215
    7. ' ' → logprob: -8.071051597595215
    8. '               ' → logprob: -8.196051597595215
    9. '	f' → logprob: -8.446051597595215
    10. '   ' → logprob: -8.696051597595215

Token 375: '[(' (ID: 20542)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.27318665385246277
    2. '+=' → logprob: -1.6481866836547852
    3. '[' → logprob: -3.773186683654785
    4. ' =' → logprob: -4.273186683654785
    5. '=' → logprob: -5.273186683654785
    6. ' |=' → logprob: -6.523186683654785
    7. '+' → logprob: -6.898186683654785
    8. '.append' → logprob: -7.148186683654785
    9. ' +' → logprob: -8.148186683654785
    10. ' ^=' → logprob: -8.273186683654785

Token 376: 'min' (ID: 1493)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6507306694984436
    2. 'y' → logprob: -0.7757306694984436
    3. ' y' → logprob: -4.400730609893799
    4. ' x' → logprob: -6.150730609893799
    5. 'f' → logprob: -6.400730609893799
    6. '0' → logprob: -7.150730609893799
    7. ''y' → logprob: -8.150731086730957
    8. ')' → logprob: -8.400731086730957
    9. ''x' → logprob: -8.525731086730957
    10. ')y' → logprob: -9.900731086730957

Token 377: '(x' (ID: 4061)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5771055221557617
    2. '(x' → logprob: -0.8271055221557617
    3. '(y' → logprob: -7.577105522155762
    4. ')x' → logprob: -8.452105522155762
    5. '(' → logprob: -8.827105522155762
    6. ')' → logprob: -9.077105522155762
    7. 'y' → logprob: -9.327105522155762
    8. ')(' → logprob: -10.577105522155762
    9. ',x' → logprob: -11.452105522155762
    10. '(
' → logprob: -11.827105522155762

Token 378: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.026745392009615898
    2. ',' → logprob: -3.651745319366455
    3. ' ,' → logprob: -8.151745796203613
    4. '),' → logprob: -9.651745796203613
    5. ',x' → logprob: -10.901745796203613
    6. 'y' → logprob: -11.026745796203613
    7. '[' → logprob: -11.026745796203613
    8. ',
' → logprob: -11.651745796203613
    9. '[y' → logprob: -11.651745796203613
    10. ',v' → logprob: -12.526745796203613

Token 379: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.08555718511343002
    2. ',' → logprob: -2.585557222366333
    3. ')],' → logprob: -6.335556983947754
    4. ')][' → logprob: -6.835556983947754
    5. '),(' → logprob: -7.085556983947754
    6. ')]' → logprob: -7.335556983947754
    7. ')' → logprob: -7.585556983947754
    8. ',),' → logprob: -7.585556983947754
    9. '),
' → logprob: -8.210556983947754
    10. ',y' → logprob: -8.460556983947754

Token 380: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.005233882926404476
    2. ' max' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.380233764648438
    4. '	max' → logprob: -16.880233764648438
    5. ',max' → logprob: -17.005233764648438
    6. '(max' → logprob: -17.630233764648438
    7. '  ' → logprob: -18.630233764648438
    8. ' ' → logprob: -18.755233764648438
    9. '    ' → logprob: -19.005233764648438
    10. ':max' → logprob: -19.005233764648438

Token 381: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0001600347168277949
    2. 'x' → logprob: -8.750160217285156
    3. '(' → logprob: -13.875160217285156
    4. ' (' → logprob: -15.500160217285156
    5. ',x' → logprob: -16.000160217285156
    6. '(
' → logprob: -16.250160217285156
    7. ')' → logprob: -17.250160217285156
    8. ')x' → logprob: -18.000160217285156
    9. '<|end|>' → logprob: -18.125160217285156
    10. '(y' → logprob: -18.250160217285156

Token 382: ',y' (ID: 16103)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.2549019753932953
    2. ',y' → logprob: -1.8799020051956177
    3. 'y' → logprob: -3.254901885986328
    4. '(x' → logprob: -3.504901885986328
    5. ',' → logprob: -6.879901885986328
    6. '<|end|>' → logprob: -7.004901885986328
    7. '[y' → logprob: -7.629901885986328
    8. ')' → logprob: -7.754901885986328
    9. '),' → logprob: -8.004901885986328
    10. 'x' → logprob: -8.004901885986328

Token 383: '))' (ID: 915)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.044859886169433594
    2. ')])' → logprob: -3.7948598861694336
    3. ')' → logprob: -4.169859886169434
    4. '))' → logprob: -5.294859886169434
    5. '])]' → logprob: -7.794859886169434
    6. ')][' → logprob: -8.044859886169434
    7. ')],' → logprob: -9.919859886169434
    8. '),' → logprob: -10.044859886169434
    9. '')]' → logprob: -11.044859886169434
    10. ')))' → logprob: -11.294859886169434

Token 384: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0652150958776474
    2. ']+=' → logprob: -2.9402151107788086
    3. ']=' → logprob: -5.440215110778809
    4. ')]' → logprob: -5.690215110778809
    5. ' ]' → logprob: -6.815215110778809
    6. ']+' → logprob: -7.190215110778809
    7. ')' → logprob: -8.065215110778809
    8. ']==' → logprob: -9.065215110778809
    9. '[' → logprob: -9.440215110778809
    10. '][' → logprob: -10.315215110778809

Token 385: ' ^=' (ID: 79665)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.846001148223877
    2. '=' → logprob: -1.596001148223877
    3. ' =' → logprob: -1.596001148223877
    4. '+=' → logprob: -2.096001148223877
    5. ']' → logprob: -3.971001148223877
    6. ']+=' → logprob: -4.221001148223877
    7. '[' → logprob: -5.096001148223877
    8. ']=' → logprob: -7.096001148223877
    9. ' ^=' → logprob: -7.471001148223877
    10. '+' → logprob: -7.971001148223877

Token 386: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.913265239447355e-05
    2. ' ' → logprob: -9.250099182128906
    3. 'f' → logprob: -12.875099182128906
    4. '   ' → logprob: -15.500099182128906
    5. ' f' → logprob: -16.125099182128906
    6. '                   ' → logprob: -17.500099182128906
    7. '           ' → logprob: -18.125099182128906
    8. '0' → logprob: -18.125099182128906
    9. 'True' → logprob: -18.250099182128906
    10. '  ' → logprob: -18.750099182128906

Token 387: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020866614067927003
    2. 'f' → logprob: -8.500208854675293
    3. ' ' → logprob: -12.375208854675293
    4. '   ' → logprob: -14.875208854675293
    5. 'ans' → logprob: -15.125208854675293
    6. '0' → logprob: -16.875207901000977
    7. ' f' → logprob: -16.875207901000977
    8. '2' → logprob: -17.250207901000977
    9. '255' → logprob: -17.375207901000977
    10. '  ' → logprob: -18.000207901000977

Token 388: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 389: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 390: ' f' (ID: 285)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 391: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.1894419938325882
    2. '[y' → logprob: -2.0644419193267822
    3. '[' → logprob: -3.1894419193267822
    4. 'x' → logprob: -6.314442157745361
    5. '<|end|>' → logprob: -6.314442157745361
    6. 'y' → logprob: -8.189441680908203
    7. '[f' → logprob: -8.814441680908203
    8. '(x' → logprob: -9.689441680908203
    9. ' x' → logprob: -10.064441680908203
    10. '<|end|>' → logprob: -10.189441680908203

Token 392: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010795250535011292
    2. '[y' → logprob: -4.7607951164245605
    3. '[' → logprob: -7.2607951164245605
    4. ']^' → logprob: -7.2607951164245605
    5. ' ]' → logprob: -8.260795593261719
    6. ']=' → logprob: -9.010795593261719
    7. '[x' → logprob: -9.635795593261719
    8. '][' → logprob: -9.760795593261719
    9. ']+=' → logprob: -10.010795593261719
    10. ')]' → logprob: -10.260795593261719

Token 393: ' ^=' (ID: 79665)
  Prédit: ' ^='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.07813122868537903
    2. '^' → logprob: -3.0781311988830566
    3. '[' → logprob: -4.078131198883057
    4. '|' → logprob: -5.328131198883057
    5. '=' → logprob: -5.578131198883057
    6. ' |=' → logprob: -6.203131198883057
    7. ' ' → logprob: -8.078131675720215
    8. '+=' → logprob: -8.203131675720215
    9. ' =' → logprob: -8.578131675720215
    10. '   ' → logprob: -8.828131675720215

Token 394: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2685531973838806
    2. 'f' → logprob: -1.5185532569885254
    3. ' f' → logprob: -4.393553256988525
    4. ' ' → logprob: -5.518553256988525
    5. '   ' → logprob: -9.643552780151367
    6. '                   ' → logprob: -10.643552780151367
    7. '           ' → logprob: -11.643552780151367
    8. '  ' → logprob: -12.393552780151367
    9. 'y' → logprob: -12.768552780151367
    10. '               ' → logprob: -13.206052780151367

Token 395: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0891759917140007
    2. 'f' → logprob: -2.4641759395599365
    3. ' f' → logprob: -8.714176177978516
    4. ' ' → logprob: -9.589176177978516
    5. '   ' → logprob: -13.964176177978516
    6. 'y' → logprob: -14.214176177978516
    7. 'ans' → logprob: -14.651676177978516
    8. '0' → logprob: -15.276676177978516
    9. '	f' → logprob: -15.401676177978516
    10. '```' → logprob: -15.526676177978516

Token 396: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 397: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 398: ' f' (ID: 285)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 399: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.003624427132308483
    2. 'y' → logprob: -5.628624439239502
    3. '	y' → logprob: -11.878623962402344
    4. '(y' → logprob: -12.253623962402344
    5. ' y' → logprob: -12.628623962402344
    6. '[' → logprob: -12.628623962402344
    7. '[x' → logprob: -12.753623962402344
    8. ',y' → logprob: -13.628623962402344
    9. '   ' → logprob: -14.128623962402344
    10. ''y' → logprob: -15.753623962402344

Token 400: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003398726985324174
    2. ' ]' → logprob: -8.87533950805664
    3. ')]' → logprob: -9.37533950805664
    4. '']' → logprob: -11.00033950805664
    5. ' ^=' → logprob: -11.00033950805664
    6. '])' → logprob: -11.12533950805664
    7. ']]' → logprob: -11.25033950805664
    8. '[' → logprob: -11.37533950805664
    9. '`]' → logprob: -11.50033950805664
    10. ')' → logprob: -11.62533950805664

Token 401: ' ^=' (ID: 79665)
  Prédit: ' ^='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.04074937850236893
    2. '^' → logprob: -3.2907493114471436
    3. '=' → logprob: -6.540749549865723
    4. ' ^' → logprob: -6.790749549865723
    5. ' =' → logprob: -9.290749549865723
    6. ' ' → logprob: -11.040749549865723
    7. ')' → logprob: -11.790749549865723
    8. '   ' → logprob: -12.165749549865723
    9. ' |=' → logprob: -12.540749549865723
    10. ''^' → logprob: -13.415749549865723

Token 402: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025009866803884506
    2. ' ' → logprob: -6.002501010894775
    3. '0' → logprob: -10.752500534057617
    4. '   ' → logprob: -13.752500534057617
    5. '```' → logprob: -14.002500534057617
    6. '                   ' → logprob: -14.377500534057617
    7. '           ' → logprob: -15.315000534057617
    8. '               ' → logprob: -15.627500534057617
    9. '`' → logprob: -16.002500534057617
    10. '  ' → logprob: -16.315000534057617

Token 403: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.500031471252441
    3. '0' → logprob: -12.625031471252441
    4. '   ' → logprob: -16.125030517578125
    5. '<|end|>' → logprob: -16.250030517578125
    6. '<|end|>' → logprob: -16.562530517578125
    7. '```' → logprob: -16.625030517578125
    8. '۱' → logprob: -17.562530517578125
    9. '' → logprob: -17.937530517578125
    10. ')' → logprob: -18.312530517578125

Token 404: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.694051206111908
    2. '<|end|>' → logprob: -0.819051206111908
    3. '\n' → logprob: -3.0690512657165527
    4. '               ' → logprob: -6.194051265716553
    5. '<|end|>' → logprob: -6.319051265716553
    6. '       ' → logprob: -6.444051265716553
    7. '           ' → logprob: -6.569051265716553
    8. '	' → logprob: -7.444051265716553
    9. '                   ' → logprob: -7.569051265716553
    10. ')' → logprob: -7.569051265716553

Token 405: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 406: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2424955368041992
    2. '<|end|>' → logprob: -1.4924955368041992
    3. '
' → logprob: -1.7424955368041992
    4. ' 
' → logprob: -2.242495536804199
    5. ' ' → logprob: -2.742495536804199
    6. '       ' → logprob: -2.867495536804199
    7. ')' → logprob: -3.242495536804199
    8. '    ' → logprob: -4.617495536804199
    9. '  
' → logprob: -5.117495536804199
    10. '    
' → logprob: -5.242495536804199

Token 407: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.392383873462677
    2. ' =' → logprob: -1.5173838138580322
    3. '=' → logprob: -2.2673838138580322
    4. ' ,' → logprob: -6.642384052276611
    5. ',n' → logprob: -8.892383575439453
    6. ',v' → logprob: -9.392383575439453
    7. '=int' → logprob: -10.142383575439453
    8. ',k' → logprob: -10.392383575439453
    9. ',m' → logprob: -10.642383575439453
    10. ' ' → logprob: -11.267383575439453

Token 408: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1458200365304947
    2. ' =' → logprob: -2.020820140838623
    3. ',' → logprob: -5.770820140838623
    4. ')' → logprob: -11.895819664001465
    5. '   ' → logprob: -12.020819664001465
    6. '=int' → logprob: -12.645819664001465
    7. '    ' → logprob: -13.770819664001465
    8. ' ' → logprob: -13.895819664001465
    9. ' ,' → logprob: -14.020819664001465
    10. '  ' → logprob: -14.395819664001465

Token 409: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.008697769604623318
    2. ' LI' → logprob: -4.883697986602783
    3. 'map' → logprob: -7.508697986602783
    4. ' map' → logprob: -7.633697986602783
    5. 'I' → logprob: -9.883697509765625
    6. ' ' → logprob: -13.008697509765625
    7. 'L' → logprob: -13.008697509765625
    8. ' I' → logprob: -14.133697509765625
    9. 'Li' → logprob: -14.133697509765625
    10. 'li' → logprob: -14.633697509765625

Token 410: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003183182328939438
    2. '()
' → logprob: -5.753183364868164
    3. '()
' → logprob: -12.753183364868164
    4. ' ()' → logprob: -13.128183364868164
    5. '();' → logprob: -15.878183364868164
    6. '()\' → logprob: -16.253183364868164
    7. '())' → logprob: -16.378183364868164
    8. ')' → logprob: -16.628183364868164
    9. '()

' → logprob: -16.753183364868164
    10. '()[' → logprob: -17.003183364868164

Token 411: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3552628755569458
    2. ' v' → logprob: -1.3552628755569458
    3. '   ' → logprob: -3.9802627563476562
    4. '
' → logprob: -4.105262756347656
    5. '	v' → logprob: -5.355262756347656
    6. ',v' → logprob: -7.730262756347656
    7. 'n' → logprob: -7.980262756347656
    8. ' 
' → logprob: -8.605262756347656
    9. '[v' → logprob: -9.480262756347656
    10. ' n' → logprob: -9.605262756347656

Token 412: ' ans' (ID: 3345)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.01417867373675108
    2. ' v' → logprob: -4.26417875289917
    3. '   ' → logprob: -12.264178276062012
    4. '
' → logprob: -12.514178276062012
    5. 'f' → logprob: -13.139178276062012
    6. ' 
' → logprob: -13.264178276062012
    7. '	v' → logprob: -13.389178276062012
    8. '    
' → logprob: -14.389178276062012
    9. '```' → logprob: -15.014178276062012
    10. 'n' → logprob: -16.264179229736328

Token 413: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741535782814026
    2. ' =' → logprob: -0.9741535782814026
    3. ',' → logprob: -9.849153518676758
    4. '=[]' → logprob: -11.224153518676758
    5. '={}' → logprob: -11.974153518676758
    6. '[' → logprob: -13.724153518676758
    7. '=[' → logprob: -14.599153518676758
    8. ')' → logprob: -14.724153518676758
    9. '[]' → logprob: -14.849153518676758
    10. '[:]' → logprob: -14.974153518676758

Token 414: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0528109110891819
    2. '{}' → logprob: -3.3028109073638916
    3. '[' → logprob: -4.427811145782471
    4. '{' → logprob: -6.052811145782471
    5. '[]' → logprob: -8.177810668945312
    6. 'dict' → logprob: -10.677810668945312
    7. '[(' → logprob: -10.677810668945312
    8. 'def' → logprob: -11.302810668945312
    9. '{}
' → logprob: -11.677810668945312
    10. '(default' → logprob: -12.302810668945312

Token 415: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.08652465045452118
    2. '(lambda' → logprob: -2.711524724960327
    3. 'int' → logprob: -4.211524486541748
    4. 'lambda' → logprob: -6.586524486541748
    5. '```' → logprob: -9.336524963378906
    6. '(bool' → logprob: -9.336524963378906
    7. ',int' → logprob: -11.086524963378906
    8. '<int' → logprob: -11.211524963378906
    9. '=lambda' → logprob: -11.336524963378906
    10. '	int' → logprob: -12.086524963378906

Token 416: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001506409258581698
    2. ')
' → logprob: -6.501506328582764
    3. '   ' → logprob: -13.501506805419922
    4. ')
' → logprob: -13.626506805419922
    5. ' )' → logprob: -13.626506805419922
    6. ' ' → logprob: -16.001506805419922
    7. ')

' → logprob: -16.626506805419922
    8. ' )
' → logprob: -17.626506805419922
    9. '	' → logprob: -17.751506805419922
    10. ',' → logprob: -17.751506805419922

Token 417: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.08122227340936661
    2. '   ' → logprob: -2.7062222957611084
    3. '	v' → logprob: -4.956222057342529
    4. ' v' → logprob: -5.956222057342529
    5. 'f' → logprob: -6.706222057342529
    6. '
' → logprob: -8.706222534179688
    7. ',v' → logprob: -10.456222534179688
    8. 'd' → logprob: -10.581222534179688
    9. '\t' → logprob: -10.706222534179688
    10. '```' → logprob: -10.831222534179688

Token 418: ' f' (ID: 285)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0018022728618234396
    2. 'f' (adapté à ' f') → logprob: -7.001802444458008
    3. '   ' → logprob: -7.376802444458008
    4. ' v' → logprob: -8.251802444458008
    5. ' f' → logprob: -13.626802444458008
    6. 'n' → logprob: -14.376802444458008
    7. '	v' → logprob: -14.501802444458008
    8. '    
' → logprob: -14.751802444458008
    9. '
' → logprob: -15.126802444458008
    10. 'for' → logprob: -15.626802444458008

Token 419: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31336158514022827
    2. ' =' → logprob: -1.313361644744873
    3. ',' → logprob: -10.063361167907715
    4. '=[]' → logprob: -10.188361167907715
    5. '=[' → logprob: -11.313361167907715
    6. ' =[' → logprob: -12.313361167907715
    7. ' ' → logprob: -14.438361167907715
    8. '={}' → logprob: -14.938361167907715
    9. '[' → logprob: -15.188361167907715
    10. '＝' → logprob: -15.688361167907715

Token 420: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04883771762251854
    2. 'default' → logprob: -3.048837661743164
    3. ' [' → logprob: -9.048837661743164
    4. '{' → logprob: -10.298837661743164
    5. '{}' → logprob: -10.423837661743164
    6. 'LI' → logprob: -10.548837661743164
    7. '[I' → logprob: -10.548837661743164
    8. '(default' → logprob: -13.048837661743164
    9. '[]' → logprob: -13.298837661743164
    10. 'I' → logprob: -13.298837661743164

Token 421: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.143808109802194e-05
    2. ' ' → logprob: -10.875041007995605
    3. '1' → logprob: -11.375041007995605
    4. 'I' → logprob: -12.000041007995605
    5. 'False' → logprob: -12.625041007995605
    6. ']' → logprob: -14.625041007995605
    7. '   ' → logprob: -14.875041007995605
    8. 'int' → logprob: -14.875041007995605
    9. ']int' → logprob: -16.750041961669922
    10. '-' → logprob: -17.187541961669922

Token 422: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.5100276470184326
    2. ']' → logprob: -1.0100276470184326
    3. ']*' → logprob: -3.8850276470184326
    4. ' for' → logprob: -4.260027885437012
    5. 'for' → logprob: -7.510027885437012
    6. ' ]' → logprob: -9.885027885437012
    7. ']+' → logprob: -10.135027885437012
    8. '(n' → logprob: -13.385027885437012
    9. '*(' → logprob: -14.010027885437012
    10. '	for' → logprob: -14.135027885437012

Token 423: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.580929347255733e-05
    2. '(n' → logprob: -11.125016212463379
    3. ' n' → logprob: -14.000016212463379
    4. '10' → logprob: -16.750015258789062
    5. '100' → logprob: -17.250015258789062
    6. '501' → logprob: -17.750015258789062
    7. '2' → logprob: -17.875015258789062
    8. ')n' → logprob: -18.375015258789062
    9. '(' → logprob: -18.500015258789062
    10. '	n' → logprob: -18.625015258789062

Token 424: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08068785816431046
    2. ')' → logprob: -2.5806877613067627
    3. '+)' → logprob: -7.080687999725342
    4. '+
' → logprob: -7.955687999725342
    5. ')+' → logprob: -8.455687522888184
    6. ' +' → logprob: -8.705687522888184
    7. '+m' → logprob: -9.330687522888184
    8. ' )' → logprob: -9.955687522888184
    9. ')
' → logprob: -10.205687522888184
    10. ')m' → logprob: -11.455687522888184

Token 425: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6166903151315637e-05
    2. '2' → logprob: -11.500016212463379
    3. ' ' → logprob: -12.125016212463379
    4. '5' → logprob: -16.125015258789062
    5. '10' → logprob: -16.375015258789062
    6. '   ' → logprob: -16.500015258789062
    7. '3' → logprob: -16.500015258789062
    8. 'm' → logprob: -17.125015258789062
    9. '7' → logprob: -17.125015258789062
    10. '
' → logprob: -17.625015258789062

Token 426: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028427953366190195
    2. ')
' → logprob: -5.877842903137207
    3. ' )' → logprob: -10.377842903137207
    4. ')
' → logprob: -13.127842903137207
    5. ')n' → logprob: -13.627842903137207
    6. ')

' → logprob: -13.877842903137207
    7. ' )
' → logprob: -14.627842903137207
    8. '   ' → logprob: -15.002842903137207
    9. ')#' → logprob: -15.377842903137207
    10. '),' → logprob: -15.377842903137207

Token 427: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053651973605155945
    2. 'v' → logprob: -3.053652048110962
    3. ' v' → logprob: -5.553651809692383
    4. '	v' → logprob: -7.053651809692383
    5. '
' → logprob: -9.303651809692383
    6. ',v' → logprob: -9.303651809692383
    7. '<|end|>' → logprob: -9.428651809692383
    8. '    
' → logprob: -11.303651809692383
    9. ',' → logprob: -12.053651809692383
    10. '\t' → logprob: -12.053651809692383

Token 428: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.005680618807673454
    2. ' v' → logprob: -5.380680561065674
    3. '   ' → logprob: -6.880680561065674
    4. '	v' → logprob: -11.380681037902832
    5. 'f' → logprob: -12.255681037902832
    6. ' for' → logprob: -12.380681037902832
    7. 'for' → logprob: -12.380681037902832
    8. ' ' → logprob: -13.005681037902832
    9. '<|end|>' → logprob: -13.880681037902832
    10. 'n' → logprob: -14.130681037902832

Token 429: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197351589798927
    2. ' =' → logprob: -2.8119735717773438
    3. '[' → logprob: -12.436973571777344
    4. ',' → logprob: -14.311973571777344
    5. '=v' → logprob: -15.311973571777344
    6. ' ' → logprob: -15.436973571777344
    7. '=[]' → logprob: -15.686973571777344
    8. '=[' → logprob: -16.061973571777344
    9. '＝' → logprob: -16.936973571777344
    10. '<|end|>' → logprob: -16.936973571777344

Token 430: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07535508275032043
    2. 'default' → logprob: -2.825355052947998
    3. ' [[]' → logprob: -4.325355052947998
    4. '[[' → logprob: -10.075355529785156
    5. ' defaultdict' → logprob: -11.075355529785156
    6. '{' → logprob: -11.950355529785156
    7. '   ' → logprob: -13.200355529785156
    8. '[['' → logprob: -14.325355529785156
    9. '(default' → logprob: -14.825355529785156
    10. '[]' → logprob: -14.825355529785156

Token 431: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5255888104438782
    2. 'for' → logprob: -0.9005888104438782
    3. ']' → logprob: -7.0255889892578125
    4. '(n' → logprob: -7.5255889892578125
    5. '
' → logprob: -8.400588989257812
    6. ',' → logprob: -8.775588989257812
    7. ',n' → logprob: -8.775588989257812
    8. 'n' → logprob: -9.150588989257812
    9. '	for' → logprob: -9.525588989257812
    10. '[n' → logprob: -9.775588989257812

Token 432: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0017898976802825928
    2. ' range' → logprob: -6.5017900466918945
    3. ' _' → logprob: -8.501790046691895
    4. 'range' → logprob: -9.876790046691895
    5. ' in' → logprob: -11.626790046691895
    6. '_range' → logprob: -11.751790046691895
    7. '(range' → logprob: -12.751790046691895
    8. '(n' → logprob: -12.876790046691895
    9. '0' → logprob: -13.126790046691895
    10. 'i' → logprob: -13.251790046691895

Token 433: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5760036706924438
    2. ' in' → logprob: -0.8260036706924438
    3. '(n' → logprob: -10.201004028320312
    4. 'range' → logprob: -11.326004028320312
    5. '(' → logprob: -11.951004028320312
    6. ' (' → logprob: -12.701004028320312
    7. ' range' → logprob: -13.201004028320312
    8. '(range' → logprob: -14.201004028320312
    9. '_' → logprob: -14.326004028320312
    10. ' ' → logprob: -14.326004028320312

Token 434: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011069864965975285
    2. ' range' → logprob: -4.5110697746276855
    3. '(range' → logprob: -11.011070251464844
    4. '(n' → logprob: -12.136070251464844
    5. 'in' → logprob: -16.136070251464844
    6. 'ran' → logprob: -16.386070251464844
    7. 'n' → logprob: -17.011070251464844
    8. 'rang' → logprob: -17.761070251464844
    9. '	range' → logprob: -18.011070251464844
    10. ' ' → logprob: -18.511070251464844

Token 435: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.951771421066951e-05
    2. 'n' → logprob: -10.625029563903809
    3. '(' → logprob: -12.625029563903809
    4. '(m' → logprob: -13.750029563903809
    5. 'range' → logprob: -15.250029563903809
    6. ' (' → logprob: -15.375029563903809
    7. ' n' → logprob: -15.750029563903809
    8. '(range' → logprob: -16.500028610229492
    9. '((' → logprob: -16.875028610229492
    10. 'm' → logprob: -17.625028610229492

Token 436: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00010568885772954673
    2. ')]' → logprob: -9.750105857849121
    3. '+
' → logprob: -11.250105857849121
    4. '+n' → logprob: -11.375105857849121
    5. ' +' → logprob: -11.625105857849121
    6. '1' → logprob: -12.750105857849121
    7. '+m' → logprob: -12.750105857849121
    8. '()+' → logprob: -12.875105857849121
    9. ')' → logprob: -13.125105857849121
    10. '(n' → logprob: -13.250105857849121

Token 437: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.500004768371582
    3. 'm' → logprob: -14.250004768371582
    4. '2' → logprob: -14.625004768371582
    5. '   ' → logprob: -16.3750057220459
    6. '(' → logprob: -16.5000057220459
    7. ')]' → logprob: -16.8750057220459
    8. '7' → logprob: -17.2500057220459
    9. ')' → logprob: -17.3750057220459
    10. '])' → logprob: -17.5000057220459

Token 438: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.003839382901787758
    2. ']' → logprob: -5.878839492797852
    3. ')' → logprob: -6.878839492797852
    4. '])' → logprob: -13.628839492797852
    5. ' ]' → logprob: -13.753839492797852
    6. ' )' → logprob: -14.253839492797852
    7. '   ' → logprob: -15.128839492797852
    8. ')],' → logprob: -15.253839492797852
    9. ')])' → logprob: -15.503839492797852
    10. ')]
' → logprob: -15.628839492797852

Token 439: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14838668704032898
    2. ' for' → logprob: -2.1483867168426514
    3. '    
' → logprob: -5.148386478424072
    4. '<|end|>' → logprob: -5.273386478424072
    5. 'for' → logprob: -5.648386478424072
    6. ' 
' → logprob: -6.148386478424072
    7. '	for' → logprob: -6.273386478424072
    8. '
' → logprob: -6.773386478424072
    9. '  
' → logprob: -7.773386478424072
    10. '	
' → logprob: -7.898386478424072

Token 440: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28212305903434753
    2. 'for' (adapté à ' for') → logprob: -1.40712308883667
    3. '   ' → logprob: -7.15712308883667
    4. ' 
' → logprob: -9.907122611999512
    5. '	for' → logprob: -10.032122611999512
    6. 'i' → logprob: -10.032122611999512
    7. ' ' → logprob: -11.532122611999512
    8. ' i' → logprob: -11.782122611999512
    9. '<|end|>' → logprob: -11.907122611999512
    10. 'n' → logprob: -12.157122611999512

Token 441: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.050353191792964935
    2. ' _' → logprob: -3.0503532886505127
    3. '_i' → logprob: -6.675353050231934
    4. 'i' → logprob: -8.175353050231934
    5. ' i' → logprob: -8.425353050231934
    6. '_=' → logprob: -13.675353050231934
    7. ' ' → logprob: -15.175353050231934
    8. '_j' → logprob: -16.55035400390625
    9. '__' → logprob: -16.67535400390625
    10. '   ' → logprob: -16.80035400390625

Token 442: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020968656986951828
    2. 'in' → logprob: -3.8959686756134033
    3. '_' → logprob: -8.645968437194824
    4. ' ' → logprob: -8.895968437194824
    5. ',' → logprob: -10.145968437194824
    6. 'range' → logprob: -10.270968437194824
    7. ' ,' → logprob: -11.520968437194824
    8. ',_' → logprob: -11.645968437194824
    9. ' _' → logprob: -12.520968437194824
    10. '  ' → logprob: -12.770968437194824

Token 443: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038050100207328796
    2. ' range' → logprob: -3.2880501747131348
    3. 'm' → logprob: -11.788049697875977
    4. '(range' → logprob: -15.163049697875977
    5. '_' → logprob: -15.538049697875977
    6. 'I' → logprob: -16.413049697875977
    7. '	range' → logprob: -16.413049697875977
    8. '_range' → logprob: -16.538049697875977
    9. 'ra' → logprob: -17.038049697875977
    10. ' ' → logprob: -17.288049697875977

Token 444: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.025402892380952835
    2. ' range' → logprob: -4.400403022766113
    3. 'range' → logprob: -5.025403022766113
    4. 'm' → logprob: -5.150403022766113
    5. ' m' → logprob: -8.275403022766113
    6. '(range' → logprob: -8.775403022766113
    7. '(' → logprob: -11.150403022766113
    8. ' (' → logprob: -11.650403022766113
    9. '[m' → logprob: -13.025403022766113
    10. '   ' → logprob: -13.025403022766113

Token 445: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009318370372056961
    2. '):
' → logprob: -4.7593183517456055
    3. ' ):' → logprob: -7.3843183517456055
    4. ')' → logprob: -9.509318351745605
    5. '):
' → logprob: -12.384318351745605
    6. ' ):
' → logprob: -13.634318351745605
    7. ',' → logprob: -14.259318351745605
    8. ' ' → logprob: -14.634318351745605
    9. '():' → logprob: -14.884318351745605
    10. ']:' → logprob: -15.259318351745605

Token 446: '       ' (ID: 309)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.40340906381607056
    2. ',' → logprob: -2.278409004211426
    3. ' ' → logprob: -2.903409004211426
    4. ' a' → logprob: -3.278409004211426
    5. '<|end|>' → logprob: -3.653409004211426
    6. ' ,' → logprob: -3.778409004211426
    7. '   ' → logprob: -3.778409004211426
    8. '       ' → logprob: -4.028409004211426
    9. ' n' → logprob: -4.153409004211426
    10. 'a' → logprob: -4.903409004211426

Token 447: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.12597668170928955
    2. ' u' → logprob: -2.6259765625
    3. 'a' (adapté à ' a') → logprob: -3.2509765625
    4. 'x' → logprob: -5.0009765625
    5. ' a' → logprob: -7.7509765625
    6. ' x' → logprob: -9.6259765625
    7. 'b' → logprob: -10.7509765625
    8. 's' → logprob: -12.6259765625
    9. '	u' → logprob: -13.2509765625
    10. 'A' → logprob: -14.0009765625

Token 448: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.47547289729118347
    2. ',' → logprob: -0.9754729270935059
    3. ' ,' → logprob: -6.600472927093506
    4. 'b' → logprob: -10.850472450256348
    5. ' b' → logprob: -12.600472450256348
    6. ',
' → logprob: -12.975472450256348
    7. ',n' → logprob: -13.100472450256348
    8. ' ' → logprob: -13.225472450256348
    9. ' =' → logprob: -14.100472450256348
    10. ',input' → logprob: -14.475472450256348

Token 449: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932308077812195
    2. ' =' → logprob: -0.6932308077812195
    3. ',' → logprob: -9.818230628967285
    4. '=input' → logprob: -10.943230628967285
    5. '=line' → logprob: -12.693230628967285
    6. '=sys' → logprob: -13.443230628967285
    7. ' ' → logprob: -13.568230628967285
    8. '=int' → logprob: -13.568230628967285
    9. ')' → logprob: -14.193230628967285
    10. '<|end|>' → logprob: -14.568230628967285

Token 450: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.011047935113310814
    2. ' LI' → logprob: -4.511047840118408
    3. 'L' → logprob: -16.51104736328125
    4. ' ' → logprob: -16.51104736328125
    5. 'I' → logprob: -18.63604736328125
    6. '   ' → logprob: -18.63604736328125
    7. ' L' → logprob: -19.63604736328125
    8. '    ' → logprob: -19.76104736328125
    9. 'Li' → logprob: -19.76104736328125
    10. '  ' → logprob: -20.38604736328125

Token 451: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0015058133285492659
    2. '()
' → logprob: -6.5015058517456055
    3. '()
' → logprob: -13.001505851745605
    4. '())' → logprob: -15.126505851745605
    5. '();' → logprob: -15.376505851745605
    6. ')' → logprob: -15.376505851745605
    7. ' ()' → logprob: -15.751505851745605
    8. '()]' → logprob: -15.751505851745605
    9. '()

' → logprob: -16.00150489807129
    10. '(' → logprob: -16.37650489807129

Token 452: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07856419682502747
    2. '   ' → logprob: -3.328564167022705
    3. '<|end|>' → logprob: -3.828564167022705
    4. '	v' → logprob: -5.328564167022705
    5. '    
' → logprob: -6.328564167022705
    6. '        
' → logprob: -6.453564167022705
    7. '
' → logprob: -6.578564167022705
    8. ' 
' → logprob: -6.578564167022705
    9. ' ' → logprob: -6.578564167022705
    10. ',' → logprob: -7.078564167022705

Token 453: ' ans' (ID: 3345)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.5782051086425781
    2. 'v' → logprob: -0.8282051086425781
    3. '	v' → logprob: -6.453205108642578
    4. '   ' → logprob: -7.328205108642578
    5. '       ' → logprob: -10.953205108642578
    6. ',v' → logprob: -12.328205108642578
    7. '
' → logprob: -13.203205108642578
    8. ' ' → logprob: -13.328205108642578
    9. ' 
' → logprob: -13.703205108642578
    10. '[v' → logprob: -13.828205108642578

Token 454: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -7.111979357432574e-05
    2. '[' → logprob: -9.87507152557373
    3. '[a' → logprob: -11.37507152557373
    4. 'a' → logprob: -13.25007152557373
    5. '[
' → logprob: -13.37507152557373
    6. '```' → logprob: -13.87507152557373
    7. '(a' → logprob: -14.25007152557373
    8. '[min' → logprob: -14.50007152557373
    9. '   ' → logprob: -14.75007152557373
    10. '
' → logprob: -14.75007152557373

Token 455: 'min' (ID: 1493)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10117311030626297
    2. 'min' → logprob: -2.351173162460327
    3. '(min' → logprob: -6.976172924041748
    4. '(a' → logprob: -10.976173400878906
    5. ' min' → logprob: -11.601173400878906
    6. ' a' → logprob: -12.226173400878906
    7. ' (' → logprob: -15.476173400878906
    8. '[min' → logprob: -15.726173400878906
    9. ',min' → logprob: -15.726173400878906
    10. '	min' → logprob: -15.976173400878906

Token 456: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.522638169466518e-05
    2. '(' → logprob: -11.125024795532227
    3. 'a' → logprob: -11.500024795532227
    4. '(
' → logprob: -15.250024795532227
    5. '((' → logprob: -17.250024795532227
    6. ',a' → logprob: -18.500024795532227
    7. '(x' → logprob: -18.500024795532227
    8. ' (' → logprob: -18.625024795532227
    9. '(i' → logprob: -19.125024795532227
    10. ',' → logprob: -19.750024795532227

Token 457: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.013126585632562637
    2. ',' → logprob: -4.513126373291016
    3. ',a' → logprob: -6.888126373291016
    4. '(a' → logprob: -8.138126373291016
    5. 'b' → logprob: -8.263126373291016
    6. '(b' → logprob: -8.388126373291016
    7. 'a' → logprob: -8.638126373291016
    8. '(' → logprob: -9.763126373291016
    9. ' ,' → logprob: -10.388126373291016
    10. '<|end|>' → logprob: -11.888126373291016

Token 458: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.007006386294960976
    2. ',' → logprob: -5.1320061683654785
    3. '),(' → logprob: -7.3820061683654785
    4. ',),' → logprob: -8.382006645202637
    5. ')' → logprob: -9.132006645202637
    6. ',b' → logprob: -9.632006645202637
    7. '),
' → logprob: -10.632006645202637
    8. ' ),' → logprob: -11.757006645202637
    9. '<|end|>' → logprob: -12.257006645202637
    10. ',)' → logprob: -12.757006645202637

Token 459: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -3.128163257315464e-07
    2. ' max' → logprob: -15.25
    3. '(max' → logprob: -20.375
    4. '	max' → logprob: -21.25
    5. ',max' → logprob: -22.75
    6. 'min' → logprob: -23.125
    7. '=max' → logprob: -24.125
    8. '   ' → logprob: -24.375
    9. '-max' → logprob: -24.5
    10. '_max' → logprob: -24.5

Token 460: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -13.125003814697266
    3. 'a' → logprob: -13.500003814697266
    4. ' (' → logprob: -15.000003814697266
    5. '((' → logprob: -16.375003814697266
    6. '(
' → logprob: -17.250003814697266
    7. ')' → logprob: -17.500003814697266
    8. ')(' → logprob: -17.625003814697266
    9. '(i' → logprob: -18.000003814697266
    10. '```' → logprob: -18.750003814697266

Token 461: ',b' (ID: 17568)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.3151126801967621
    2. 'b' → logprob: -2.190112590789795
    3. '(a' → logprob: -2.190112590789795
    4. ',b' → logprob: -3.315112590789795
    5. 'a' → logprob: -5.190112590789795
    6. '(' → logprob: -5.940112590789795
    7. '[' → logprob: -7.315112590789795
    8. ',' → logprob: -8.190113067626953
    9. ')' → logprob: -8.315113067626953
    10. '),' → logprob: -8.440113067626953

Token 462: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04085329547524452
    2. ')]' → logprob: -3.290853261947632
    3. ')' → logprob: -5.915853500366211
    4. ')])' → logprob: -10.165853500366211
    5. '))]
' → logprob: -10.790853500366211
    6. '()))' → logprob: -11.040853500366211
    7. '),' → logprob: -11.665853500366211
    8. ' ))' → logprob: -11.790853500366211
    9. '])]' → logprob: -12.665853500366211
    10. ')
' → logprob: -12.790853500366211

Token 463: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007898209616541862
    2. ')]' → logprob: -5.257898330688477
    3. ']+=' → logprob: -6.007898330688477
    4. ' ]' → logprob: -9.132898330688477
    5. ')' → logprob: -9.382898330688477
    6. ']+' → logprob: -12.882898330688477
    7. '])' → logprob: -13.757898330688477
    8. ']=' → logprob: -13.882898330688477
    9. ']^' → logprob: -14.007898330688477
    10. ']
' → logprob: -14.007898330688477

Token 464: ' =' (ID: 314)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15879856050014496
    2. '].' → logprob: -2.0337984561920166
    3. ']+=' → logprob: -4.408798694610596
    4. ' ]' → logprob: -5.783798694610596
    5. ' ].' → logprob: -7.783798694610596
    6. '[' → logprob: -9.408798217773438
    7. ']^' → logprob: -10.283798217773438
    8. ')]' → logprob: -10.408798217773438
    9. '.' → logprob: -10.408798217773438
    10. ']+' → logprob: -10.908798217773438

Token 465: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00373452203348279
    2. '1' → logprob: -5.753734588623047
    3. ' ' → logprob: -7.503734588623047
    4. 'i' → logprob: -13.191234588623047
    5. 'b' → logprob: -14.191234588623047
    6. 'random' → logprob: -14.941234588623047
    7. 'int' → logprob: -14.941234588623047
    8. '
' → logprob: -15.066234588623047
    9. 'a' → logprob: -15.441234588623047
    10. '   ' → logprob: -16.253734588623047

Token 466: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004695341922342777
    2. '1' → logprob: -5.379695415496826
    3. ' ' → logprob: -9.504694938659668
    4. 'b' → logprob: -15.817194938659668
    5. 'i' → logprob: -16.004695892333984
    6. 'int' → logprob: -16.192195892333984
    7. '   ' → logprob: -16.754695892333984
    8. '2' → logprob: -16.942195892333984
    9. '-' → logprob: -17.567195892333984
    10. 'a' → logprob: -17.567195892333984

Token 467: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 468: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 469: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.1041777953505516
    2. '   ' → logprob: -2.354177713394165
    3. ' v' → logprob: -5.604177951812744
    4. '	v' → logprob: -8.229177474975586
    5. '       ' → logprob: -11.979177474975586
    6. ' ' → logprob: -13.354177474975586
    7. '  ' → logprob: -13.354177474975586
    8. ',v' → logprob: -13.479177474975586
    9. '```' → logprob: -14.104177474975586
    10. 'b' → logprob: -14.479177474975586

Token 470: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.3856492842023727e-06
    2. 'a' → logprob: -13.875000953674316
    3. '[b' → logprob: -15.375000953674316
    4. '[' → logprob: -17.375001907348633
    5. '[u' → logprob: -18.000001907348633
    6. '[v' → logprob: -18.250001907348633
    7. '```' → logprob: -18.250001907348633
    8. '[int' → logprob: -18.375001907348633
    9. ')[' → logprob: -19.500001907348633
    10. '[A' → logprob: -20.000001907348633

Token 471: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.000488110730657354
    2. ']' → logprob: -7.87548828125
    3. '][' → logprob: -9.75048828125
    4. ' ].' → logprob: -10.37548828125
    5. '.append' → logprob: -11.75048828125
    6. '   ' → logprob: -13.00048828125
    7. '.' → logprob: -13.12548828125
    8. ' ' → logprob: -13.12548828125
    9. '[' → logprob: -13.25048828125
    10. '].[' → logprob: -14.00048828125

Token 472: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.2113979209971149e-05
    2. ' append' → logprob: -11.375012397766113
    3. '.append' → logprob: -15.250012397766113
    4. 'appen' → logprob: -15.250012397766113
    5. 'Append' → logprob: -17.125011444091797
    6. 'app' → logprob: -17.625011444091797
    7. '	append' → logprob: -18.125011444091797
    8. '_append' → logprob: -18.250011444091797
    9. 'pp' → logprob: -18.875011444091797
    10. 'pend' → logprob: -18.875011444091797

Token 473: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00045902872807346284
    2. '(b' → logprob: -8.000458717346191
    3. ' b' → logprob: -9.000458717346191
    4. '	b' → logprob: -15.500458717346191
    5. ')b' → logprob: -19.625459671020508
    6. ',b' → logprob: -20.375459671020508
    7. '   ' → logprob: -20.875459671020508
    8. '_b' → logprob: -21.500459671020508
    9. '(
' → logprob: -21.750459671020508
    10. ' (' → logprob: -21.875459671020508

Token 474: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20142756402492523
    2. ')
' → logprob: -1.7014275789260864
    3. ')
' → logprob: -11.951427459716797
    4. '       ' → logprob: -12.701427459716797
    5. ' )
' → logprob: -13.701427459716797
    6. ')v' → logprob: -13.826427459716797
    7. ' )' → logprob: -13.951427459716797
    8. '   ' → logprob: -14.826427459716797
    9. ')

' → logprob: -14.951427459716797
    10. '<|end|>' → logprob: -15.451427459716797

Token 475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04822119325399399
    2. 'v' → logprob: -3.7982211112976074
    3. '   ' → logprob: -4.673221111297607
    4. '	v' → logprob: -5.048221111297607
    5. '<|end|>' → logprob: -5.423221111297607
    6. ' v' → logprob: -6.048221111297607
    7. ',v' → logprob: -7.423221111297607
    8. '```' → logprob: -7.548221111297607
    9. '           ' → logprob: -8.548221588134766
    10. '     ' → logprob: -8.548221588134766

Token 476: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.02701183594763279
    2. ' v' → logprob: -3.6520118713378906
    3. '       ' → logprob: -7.652011871337891
    4. '	v' → logprob: -8.40201187133789
    5. '   ' → logprob: -11.65201187133789
    6. '    ' → logprob: -14.52701187133789
    7. ')v' → logprob: -14.77701187133789
    8. ' ' → logprob: -14.90201187133789
    9. '           ' → logprob: -15.02701187133789
    10. '<|end|>' → logprob: -15.15201187133789

Token 477: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0002690840628929436
    2. '[a' → logprob: -8.250268936157227
    3. '[' → logprob: -12.500268936157227
    4. 'b' → logprob: -12.500268936157227
    5. '[
' → logprob: -15.375268936157227
    6. '```' → logprob: -16.625268936157227
    7. '[v' → logprob: -17.000268936157227
    8. ' [' → logprob: -17.625268936157227
    9. '	b' → logprob: -17.625268936157227
    10. '[c' → logprob: -17.875268936157227

Token 478: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.04934382066130638
    2. ').' → logprob: -3.0493438243865967
    3. '.append' → logprob: -7.549343585968018
    4. ')' → logprob: -9.174344062805176
    5. ']' → logprob: -9.424344062805176
    6. '.' → logprob: -11.174344062805176
    7. '   ' → logprob: -11.549344062805176
    8. ' ].' → logprob: -11.799344062805176
    9. '[' → logprob: -12.174344062805176
    10. '.app' → logprob: -13.299344062805176

Token 479: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.3902033970225602e-05
    2. 'app' → logprob: -11.375014305114746
    3. 'a' → logprob: -13.625014305114746
    4. ' append' → logprob: -14.250014305114746
    5. 'appen' → logprob: -15.250014305114746
    6. '.append' → logprob: -15.625014305114746
    7. '	append' → logprob: -15.875014305114746
    8. 'add' → logprob: -17.62501335144043
    9. '_append' → logprob: -17.75001335144043
    10. 'Append' → logprob: -19.37501335144043

Token 480: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.000913370808120817
    2. 'a' → logprob: -7.000913143157959
    3. '(' → logprob: -13.375913619995117
    4. '(
' → logprob: -15.250913619995117
    5. ')a' → logprob: -17.375913619995117
    6. ')' → logprob: -17.750913619995117
    7. '	a' → logprob: -18.250913619995117
    8. '   ' → logprob: -18.375913619995117
    9. '[a' → logprob: -19.625913619995117
    10. '<a' → logprob: -19.875913619995117

Token 481: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012761499965563416
    2. ')
' → logprob: -9.250127792358398
    3. '<|end|>' → logprob: -10.625127792358398
    4. '       ' → logprob: -12.875127792358398
    5. ' )' → logprob: -13.250127792358398
    6. '   ' → logprob: -13.750127792358398
    7. ')n' → logprob: -15.125127792358398
    8. ')return' → logprob: -15.250127792358398
    9. '<|end|>' → logprob: -15.500127792358398
    10. '),' → logprob: -15.750127792358398

Token 482: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 483: ' f' (ID: 285)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4930754005908966
    2. '	d' → logprob: -1.7430753707885742
    3. ' d' → logprob: -2.118075370788574
    4. '       ' → logprob: -4.118075370788574
    5. ' ' → logprob: -4.243075370788574
    6. '   ' → logprob: -4.618075370788574
    7. '<|end|>' → logprob: -4.618075370788574
    8. '	f' → logprob: -4.618075370788574
    9. '	v' → logprob: -4.743075370788574
    10. 'f' (adapté à ' f') → logprob: -4.993075370788574

Token 484: '[min' (ID: 135647)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0004533142491709441
    2. 'a' → logprob: -7.750453472137451
    3. '[b' → logprob: -11.250452995300293
    4. '[f' → logprob: -12.125452995300293
    5. '[' → logprob: -13.375452995300293
    6. '(a' → logprob: -14.625452995300293
    7. '```' → logprob: -14.625452995300293
    8. '[v' → logprob: -14.625452995300293
    9. 'b' → logprob: -15.500452995300293
    10. '[i' → logprob: -15.500452995300293

Token 485: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.842555426876061e-06
    2. 'a' → logprob: -12.875004768371582
    3. '(' → logprob: -13.500004768371582
    4. '<|end|>' → logprob: -14.250004768371582
    5. '(b' → logprob: -17.3750057220459
    6. '(x' → logprob: -17.5000057220459
    7. '((' → logprob: -17.7500057220459
    8. '(n' → logprob: -17.7500057220459
    9. '(
' → logprob: -17.7500057220459
    10. ' (' → logprob: -18.0000057220459

Token 486: ',b' (ID: 17568)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.16229359805583954
    2. '(b' → logprob: -1.912293553352356
    3. ',b' → logprob: -6.662293434143066
    4. '(' → logprob: -8.287293434143066
    5. ',' → logprob: -8.287293434143066
    6. '<|end|>' → logprob: -9.162293434143066
    7. 'a' → logprob: -9.412293434143066
    8. ',a' → logprob: -10.412293434143066
    9. '(n' → logprob: -10.537293434143066
    10. 'b' → logprob: -11.037293434143066

Token 487: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.26367852091789246
    2. '()]' → logprob: -2.638678550720215
    3. ')' → logprob: -3.138678550720215
    4. '())' → logprob: -3.638678550720215
    5. ']' → logprob: -3.888678550720215
    6. '),' → logprob: -4.388678550720215
    7. '],' → logprob: -4.513678550720215
    8. ',' → logprob: -4.513678550720215
    9. ')],' → logprob: -4.513678550720215
    10. '(),' → logprob: -5.388678550720215

Token 488: ' ^=' (ID: 79665)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.037221528589725494
    2. ' ^=' → logprob: -3.5372214317321777
    3. ']' → logprob: -5.412221431732178
    4. ']^' → logprob: -6.162221431732178
    5. ']+=' → logprob: -7.537221431732178
    6. '=' → logprob: -9.037221908569336
    7. '1' → logprob: -9.037221908569336
    8. ' ' → logprob: -10.662221908569336
    9. ']=' → logprob: -10.787221908569336
    10. '```' → logprob: -11.412221908569336

Token 489: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.060365608893335e-05
    2. ' ' → logprob: -10.125041007995605
    3. '   ' → logprob: -15.500041007995605
    4. '0' → logprob: -15.500041007995605
    5. '  ' → logprob: -18.12504005432129
    6. '<|end|>' → logprob: -18.50004005432129
    7. '```' → logprob: -19.93754005432129
    8. '
' → logprob: -20.12504005432129
    9. '2' → logprob: -20.37504005432129
    10. 'ans' → logprob: -20.62504005432129

Token 490: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.643152740551159e-05
    2. ' ' → logprob: -10.250036239624023
    3. '0' → logprob: -14.125036239624023
    4. '   ' → logprob: -15.500036239624023
    5. '  ' → logprob: -17.500036239624023
    6. 'ans' → logprob: -17.625036239624023
    7. '<|end|>' → logprob: -17.687536239624023
    8. 'f' → logprob: -18.437536239624023
    9. '2' → logprob: -18.750036239624023
    10. 'b' → logprob: -19.500036239624023

Token 491: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6359534859657288
    2. '<|end|>' → logprob: -0.7609534859657288
    3. '
' → logprob: -7.010953426361084
    4. ' ' → logprob: -7.260953426361084
    5. '   ' → logprob: -7.510953426361084
    6. 'f' → logprob: -7.760953426361084
    7. ' f' → logprob: -8.260953903198242
    8. '<|end|>' → logprob: -8.635953903198242
    9. '	' → logprob: -9.385953903198242
    10. ',' → logprob: -10.260953903198242

Token 492: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 493: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0775541067123413
    2. '	d' → logprob: -1.3275541067123413
    3. ' ' → logprob: -2.077554225921631
    4. '	' → logprob: -2.452554225921631
    5. 'd' → logprob: -3.577554225921631
    6. '       ' → logprob: -3.702554225921631
    7. '	s' → logprob: -3.827554225921631
    8. ' d' → logprob: -3.952554225921631
    9. '	v' → logprob: -4.452554225921631
    10. '    ' → logprob: -4.702554225921631

Token 494: ' m' (ID: 284)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -1.389783501625061
    2. ' f' → logprob: -1.514783501625061
    3. 'sum' → logprob: -1.639783501625061
    4. 'f' → logprob: -2.5147833824157715
    5. ' any' → logprob: -2.8897833824157715
    6. ' not' → logprob: -3.0147833824157715
    7. ' all' → logprob: -3.1397833824157715
    8. ' n' → logprob: -3.5147833824157715
    9. 'n' → logprob: -4.0147833824157715
    10. 'all' → logprob: -4.8897833824157715

Token 495: '%' (ID: 4)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.8009322881698608
    2. ' !=' → logprob: -1.1759322881698608
    3. '!=' → logprob: -2.5509324073791504
    4. ' ==' → logprob: -2.8009324073791504
    5. '<' → logprob: -3.0509324073791504
    6. '%' → logprob: -3.9259324073791504
    7. '==' → logprob: -4.05093240737915
    8. ' %' → logprob: -4.92593240737915
    9. ' >' → logprob: -5.30093240737915
    10. '>' → logprob: -5.67593240737915

Token 496: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005448113661259413
    2. ' ' → logprob: -7.750545024871826
    3. '3' → logprob: -9.125544548034668
    4. '4' → logprob: -12.500544548034668
    5. '  ' → logprob: -14.625544548034668
    6. '1' → logprob: -14.625544548034668
    7. '   ' → logprob: -16.438045501708984
    8. '```' → logprob: -16.563045501708984
    9. '{' → logprob: -17.125545501708984
    10. '6' → logprob: -17.250545501708984

Token 497: ':
' (ID: 734)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.07422027736902237
    2. ' ==' → logprob: -3.3242201805114746
    3. '!=' → logprob: -3.4492201805114746
    4. '==' → logprob: -6.324220180511475
    5. ' :' → logprob: -6.949220180511475
    6. ':' → logprob: -7.074220180511475
    7. ' ' → logprob: -9.824220657348633
    8. ' !' → logprob: -10.199220657348633
    9. ')' → logprob: -11.199220657348633
    10. '=' → logprob: -11.324220657348633

Token 498: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10034037381410599
    2. ':
' → logprob: -2.9753403663635254
    3. ':' → logprob: -3.2253403663635254
    4. '   ' → logprob: -6.100340366363525
    5. '
' → logprob: -6.725340366363525
    6. ' :
' → logprob: -8.350340843200684
    7. '<|end|>' → logprob: -8.475340843200684
    8. '	' → logprob: -8.600340843200684
    9. ',' → logprob: -9.475340843200684
    10. ' and' → logprob: -9.475340843200684

Token 499: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.1793454885482788
    2. ' print' → logprob: -1.1793454885482788
    3. '   ' → logprob: -1.4293454885482788
    4. '       ' → logprob: -1.9293454885482788
    5. ' ' → logprob: -9.17934513092041
    6. '    ' → logprob: -9.92934513092041
    7. '	print' → logprob: -9.92934513092041
    8. '```' → logprob: -10.30434513092041
    9. '  ' → logprob: -10.92934513092041
    10. ' return' → logprob: -11.05434513092041

Token 500: '(-' (ID: 8087)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.000770436367020011
    2. '(' → logprob: -7.375770568847656
    3. '(No' → logprob: -9.500770568847656
    4. '(NO' → logprob: -11.000770568847656
    5. ' ("' → logprob: -11.375770568847656
    6. '(-' → logprob: -11.375770568847656
    7. '('' → logprob: -11.375770568847656
    8. 'No' → logprob: -12.375770568847656
    9. '("\' → logprob: -12.500770568847656
    10. '(
' → logprob: -13.125770568847656

Token 501: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.849109119386412e-06
    2. '"' → logprob: -12.250009536743164
    3. ' ' → logprob: -13.437509536743164
    4. '
' → logprob: -14.562509536743164
    5. '```' → logprob: -14.625009536743164
    6. '   ' → logprob: -14.812509536743164
    7. '{' → logprob: -15.250009536743164
    8. '``' → logprob: -15.375009536743164
    9. '`' → logprob: -15.625009536743164
    10. '2' → logprob: -15.812509536743164

Token 502: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5406184196472168
    2. '       ' → logprob: -0.9156184196472168
    3. ')
' → logprob: -4.290618419647217
    4. '   ' → logprob: -6.040618419647217
    5. ')return' → logprob: -8.040618896484375
    6. ' ' → logprob: -8.415618896484375
    7. '	' → logprob: -8.415618896484375
    8. '	return' → logprob: -8.915618896484375
    9. '
' → logprob: -9.040618896484375
    10. '```' → logprob: -9.790618896484375

Token 503: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043043080950155854
    2. '	' → logprob: -7.875430583953857
    3. '   ' → logprob: -10.6254301071167
    4. '<|end|>' → logprob: -12.0004301071167
    5. '           ' → logprob: -12.2504301071167
    6. '	return' → logprob: -12.2504301071167
    7. '
' → logprob: -12.8754301071167
    8. '	   ' → logprob: -13.2504301071167
    9. ',' → logprob: -13.5004301071167
    10. ')' → logprob: -13.8754301071167

Token 504: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008084354922175407
    2. '
' → logprob: -5.383084297180176
    3. '	' → logprob: -5.883084297180176
    4. '	return' → logprob: -7.883084297180176
    5. 'return' (adapté à ' return') → logprob: -8.883084297180176
    6. ' return' → logprob: -9.883084297180176
    7. '   ' → logprob: -10.258084297180176
    8. '
' → logprob: -11.008084297180176
    9. '               ' → logprob: -11.633084297180176
    10. ' ' → logprob: -11.633084297180176

Token 505: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2940264344215393
    2. '   ' → logprob: -1.5440263748168945
    3. '<|end|>' → logprob: -3.6690263748168945
    4. '    
' → logprob: -4.9190263748168945
    5. '  
' → logprob: -5.2940263748168945
    6. '```' → logprob: -7.1690263748168945
    7. ' 
' → logprob: -7.5440263748168945
    8. '       ' → logprob: -7.6690263748168945
    9. '        
' → logprob: -8.044026374816895
    10. ' ' → logprob: -8.169026374816895

Token 506: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004053582902997732
    2. 'd' → logprob: -6.129053592681885
    3. '    
' → logprob: -7.129053592681885
    4. '
' → logprob: -7.504053592681885
    5. ' d' → logprob: -9.254053115844727
    6. '       ' → logprob: -9.629053115844727
    7. 's' → logprob: -9.754053115844727
    8. '  
' → logprob: -10.004053115844727
    9. 'b' → logprob: -10.754053115844727
    10. '	d' → logprob: -10.879053115844727

Token 507: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1615031957626343
    2. ' d' → logprob: -1.1615031957626343
    3. 'd' (adapté à ' d') → logprob: -1.4115031957626343
    4. '
' → logprob: -2.661503314971924
    5. '	d' → logprob: -3.036503314971924
    6. ' ' → logprob: -5.161503314971924
    7. ' 
' → logprob: -6.036503314971924
    8. '    
' → logprob: -6.161503314971924
    9. '  
' → logprob: -7.161503314971924
    10. '  ' → logprob: -8.411502838134766

Token 508: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6365593671798706
    2. '=' → logprob: -0.7615593671798706
    3. '=[' → logprob: -5.63655948638916
    4. ' =[' → logprob: -8.13655948638916
    5. 'ef' → logprob: -10.38655948638916
    6. '=[]' → logprob: -10.88655948638916
    7. '[' → logprob: -11.01155948638916
    8. ' ' → logprob: -11.26155948638916
    9. '   ' → logprob: -13.13655948638916
    10. '=d' → logprob: -13.26155948638916

Token 509: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006865032482892275
    2. ' [' → logprob: -5.00686502456665
    3. '[f' → logprob: -9.506865501403809
    4. 'default' → logprob: -10.756865501403809
    5. '[I' → logprob: -11.131865501403809
    6. '{' → logprob: -11.381865501403809
    7. '[n' → logprob: -12.631865501403809
    8. '[d' → logprob: -12.756865501403809
    9. '[min' → logprob: -12.756865501403809
    10. '[v' → logprob: -13.006865501403809

Token 510: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038044244050979614
    2. '0' → logprob: -3.2880442142486572
    3. ' ' → logprob: -13.663043975830078
    4. '
' → logprob: -14.788043975830078
    5. 'int' → logprob: -15.163043975830078
    6. ']' → logprob: -15.413043975830078
    7. '-' → logprob: -15.538043975830078
    8. 'False' → logprob: -15.788043975830078
    9. 'True' → logprob: -16.038043975830078
    10. '(' → logprob: -16.413043975830078

Token 511: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.023774240165948868
    2. ']' → logprob: -3.7737741470336914
    3. ']+' → logprob: -7.898774147033691
    4. ']*' → logprob: -8.773774147033691
    5. ' for' → logprob: -13.398774147033691
    6. 'for' → logprob: -14.648774147033691
    7. '](' → logprob: -15.273774147033691
    8. '*(' → logprob: -16.148775100708008
    9. '```' → logprob: -16.148775100708008
    10. '0' → logprob: -16.398775100708008

Token 512: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.333223139634356e-05
    2. '(n' → logprob: -10.375033378601074
    3. ' n' → logprob: -13.500033378601074
    4. 'len' → logprob: -15.500033378601074
    5. '   ' → logprob: -16.125032424926758
    6. '
' → logprob: -16.250032424926758
    7. ' ' → logprob: -16.500032424926758
    8. ')n' → logprob: -17.000032424926758
    9. '	n' → logprob: -17.000032424926758
    10. ' (' → logprob: -17.500032424926758

Token 513: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.511406809295295e-06
    2. '+
' → logprob: -12.625006675720215
    3. ' +' → logprob: -13.000006675720215
    4. '+)' → logprob: -14.375006675720215
    5. '+n' → logprob: -16.1250057220459
    6. ')' → logprob: -16.3750057220459
    7. ')+' → logprob: -17.8750057220459
    8. '()+' → logprob: -18.1250057220459
    9. '＋' → logprob: -18.6250057220459
    10. '+

' → logprob: -19.1250057220459

Token 514: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.77627644513268e-06
    2. ' ' → logprob: -12.250008583068848
    3. '+' → logprob: -12.500008583068848
    4. '```' → logprob: -16.375009536743164
    5. '(n' → logprob: -16.875009536743164
    6. '   ' → logprob: -17.375009536743164
    7. '
' → logprob: -17.875009536743164
    8. '(' → logprob: -18.000009536743164
    9. '6' → logprob: -18.125009536743164
    10. ' +' → logprob: -18.250009536743164

Token 515: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04305822774767876
    2. ')
' → logprob: -3.168058156967163
    3. ' )' → logprob: -10.293058395385742
    4. ')
' → logprob: -11.543058395385742
    5. ' )
' → logprob: -12.418058395385742
    6. '   ' → logprob: -13.043058395385742
    7. ')

' → logprob: -13.293058395385742
    8. '
' → logprob: -13.293058395385742
    9. ')d' → logprob: -13.293058395385742
    10. ')n' → logprob: -13.918058395385742

Token 516: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7017900943756104
    2. '<|end|>' → logprob: -1.0767900943756104
    3. '   ' → logprob: -2.8267900943756104
    4. ' 
' → logprob: -3.4517900943756104
    5. ' ' → logprob: -3.5767900943756104
    6. '  
' → logprob: -3.7017900943756104
    7. '[' → logprob: -5.201789855957031
    8. '    
' → logprob: -5.201789855957031
    9. '\n' → logprob: -6.826789855957031
    10. '\' → logprob: -6.826789855957031

Token 517: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016105569899082184
    2. ' dfs' → logprob: -4.516105651855469
    3. ' for' → logprob: -5.516105651855469
    4. 'dfs' → logprob: -8.016105651855469
    5. '       ' → logprob: -8.391105651855469
    6. ' def' → logprob: -8.891105651855469
    7. 'def' → logprob: -9.141105651855469
    8. 'for' → logprob: -10.141105651855469
    9. '    
' → logprob: -10.391105651855469
    10. '  ' → logprob: -10.516105651855469

Token 518: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09784460067749023
    2. ' =' → logprob: -2.8478446006774902
    3. '=' → logprob: -3.5978446006774902
    4. ')' → logprob: -6.59784460067749
    5. '=[' → logprob: -6.84784460067749
    6. ',' → logprob: -6.97284460067749
    7. '[:]' → logprob: -6.97284460067749
    8. '0' → logprob: -7.09784460067749
    9. '[n' → logprob: -7.59784460067749
    10. 'def' → logprob: -8.097845077514648

Token 519: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.39169883728027344
    2. '0' → logprob: -1.1416988372802734
    3. ']' → logprob: -6.016698837280273
    4. ':]' → logprob: -6.766698837280273
    5. 'n' → logprob: -7.391698837280273
    6. ':' → logprob: -8.391698837280273
    7. '])' → logprob: -9.516698837280273
    8. ')' → logprob: -9.766698837280273
    9. '::-' → logprob: -10.141698837280273
    10. '::' → logprob: -10.516698837280273

Token 520: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005873805843293667
    2. '])' → logprob: -6.380873680114746
    3. ' ]' → logprob: -6.755873680114746
    4. ')' → logprob: -6.755873680114746
    5. ')]' → logprob: -6.880873680114746
    6. ']=' → logprob: -7.255873680114746
    7. ' )' → logprob: -10.880873680114746
    8. ']==' → logprob: -11.005873680114746
    9. ':]' → logprob: -11.255873680114746
    10. ' ])' → logprob: -11.505873680114746

Token 521: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02337673306465149
    2. ' =' → logprob: -3.773376703262329
    3. '<|end|>' → logprob: -9.89837646484375
    4. ',' → logprob: -10.64837646484375
    5. ')' → logprob: -10.89837646484375
    6. '=False' → logprob: -11.27337646484375
    7. '=True' → logprob: -11.77337646484375
    8. ']' → logprob: -12.02337646484375
    9. ']=' → logprob: -13.27337646484375
    10. '=[]' → logprob: -13.39837646484375

Token 522: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.908022285439074e-05
    2. ' ' → logprob: -9.750059127807617
    3. '1' → logprob: -14.500059127807617
    4. '2' → logprob: -16.250059127807617
    5. '   ' → logprob: -17.062559127807617
    6. '۰' → logprob: -17.875059127807617
    7. 'False' → logprob: -18.000059127807617
    8. '  ' → logprob: -18.625059127807617
    9. '00' → logprob: -18.687559127807617
    10. '    ' → logprob: -18.687559127807617

Token 523: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6405310816480778e-05
    2. ' ' → logprob: -11.125016212463379
    3. '1' → logprob: -13.750016212463379
    4. '2' → logprob: -15.500016212463379
    5. '   ' → logprob: -16.375017166137695
    6. 'False' → logprob: -17.000017166137695
    7. '-' → logprob: -17.437517166137695
    8. '۰' → logprob: -17.937517166137695
    9. '  ' → logprob: -18.250017166137695
    10. '00' → logprob: -18.312517166137695

Token 524: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 525: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028833334799855947
    2. '<|end|>' → logprob: -6.002883434295654
    3. '
' → logprob: -8.877882957458496
    4. '<|end|>' → logprob: -9.252882957458496
    5. '	for' → logprob: -10.377882957458496
    6. '	d' → logprob: -10.502882957458496
    7. '    
' → logprob: -11.252882957458496
    8. '	while' → logprob: -11.627882957458496
    9. 'def' → logprob: -11.752882957458496
    10. ' for' → logprob: -11.877882957458496

Token 526: ' dfs' (ID: 51252)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004258138593286276
    2. ' dfs' → logprob: -5.629258155822754
    3. 'dfs' (adapté à ' dfs') → logprob: -7.379258155822754
    4. '
' → logprob: -11.254258155822754
    5. '	' → logprob: -12.379258155822754
    6. '```' → logprob: -12.754258155822754
    7. ' for' → logprob: -13.254258155822754
    8. '    
' → logprob: -13.254258155822754
    9. 'def' → logprob: -13.254258155822754
    10. '  ' → logprob: -13.379258155822754

Token 527: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.7120533811976202e-05
    2. '1' → logprob: -11.000017166137695
    3. ' (' → logprob: -15.250017166137695
    4. '(
' → logprob: -16.625017166137695
    5. '((' → logprob: -18.125017166137695
    6. '<|end|>' → logprob: -18.375017166137695
    7. '
' → logprob: -19.000017166137695
    8. ' ' → logprob: -19.375017166137695
    9. '('' → logprob: -20.000017166137695
    10. '   ' → logprob: -20.625017166137695

Token 528: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '(' → logprob: -17.875
    4. '
' → logprob: -19.125
    5. '   ' → logprob: -19.5
    6. ')' → logprob: -20.125
    7. '0' → logprob: -20.375
    8. '<|end|>' → logprob: -20.875
    9. '```' → logprob: -21.375
    10. '[' → logprob: -21.625

Token 529: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.12707529962062836
    2. ',' → logprob: -2.1270751953125
    3. ' ,' → logprob: -8.8770751953125
    4. '   ' → logprob: -11.8770751953125
    5. ',
' → logprob: -15.1270751953125
    6. '	' → logprob: -16.3770751953125
    7. ',D' → logprob: -16.5020751953125
    8. '  ' → logprob: -16.6270751953125
    9. ')' → logprob: -16.7520751953125
    10. '	d' → logprob: -17.5020751953125

Token 530: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.76759916334413e-05
    2. ')
' → logprob: -9.500077247619629
    3. ' )' → logprob: -13.375077247619629
    4. '   ' → logprob: -14.375077247619629
    5. ')return' → logprob: -15.625077247619629
    6. ',' → logprob: -15.750077247619629
    7. '<|end|>' → logprob: -16.125078201293945
    8. '),' → logprob: -16.500078201293945
    9. ')

' → logprob: -17.375078201293945
    10. ')#' → logprob: -17.500078201293945

Token 531: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 532: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006811884231865406
    2. '<|end|>' → logprob: -5.13181209564209
    3. 'for' (adapté à ' for') → logprob: -7.50681209564209
    4. ' for' → logprob: -8.63181209564209
    5. 'print' → logprob: -9.50681209564209
    6. '	for' → logprob: -10.13181209564209
    7. '```' → logprob: -12.00681209564209
    8. '	print' → logprob: -12.13181209564209
    9. ')' → logprob: -12.38181209564209
    10. ' if' → logprob: -12.63181209564209

Token 533: ' v' (ID: 323)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2311137914657593
    2. 'k' → logprob: -1.4811137914657593
    3. 'e' → logprob: -1.9811137914657593
    4. 'x' → logprob: -1.9811137914657593
    5. 'key' → logprob: -2.606113910675049
    6. '(i' → logprob: -3.356113910675049
    7. '(x' → logprob: -3.481113910675049
    8. '(u' → logprob: -3.856113910675049
    9. '(k' → logprob: -4.356113910675049
    10. '(e' → logprob: -4.481113910675049

Token 534: ',i' (ID: 25032)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.40082380175590515
    2. 'al' → logprob: -1.5258238315582275
    3. 'alue' → logprob: -2.7758238315582275
    4. ',' → logprob: -3.5258238315582275
    5. 'v' → logprob: -5.650823593139648
    6. 'in' → logprob: -6.025823593139648
    7. ',v' → logprob: -6.400823593139648
    8. '1' → logprob: -6.775823593139648
    9. 'alu' → logprob: -6.900823593139648
    10. 'a' → logprob: -6.900823593139648

Token 535: ' in' (ID: 306)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08101045340299606
    2. ' in' → logprob: -2.706010341644287
    3. 'in' → logprob: -5.331010341644287
    4. ',' → logprob: -5.706010341644287
    5. ',n' → logprob: -5.956010341644287
    6. 't' → logprob: -9.706010818481445
    7. 'nt' → logprob: -9.831010818481445
    8. 'd' → logprob: -11.081010818481445
    9. ' n' → logprob: -11.456010818481445
    10. 's' → logprob: -11.456010818481445

Token 536: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0170498825609684
    2. 'sorted' → logprob: -4.267049789428711
    3. ' ans' → logprob: -5.892049789428711
    4. ' sorted' → logprob: -9.642049789428711
    5. 'enumer' → logprob: -10.267049789428711
    6. 'range' → logprob: -11.517049789428711
    7. 'list' → logprob: -11.892049789428711
    8. '(ans' → logprob: -13.017049789428711
    9. 'answer' → logprob: -14.017049789428711
    10. ' enumerate' → logprob: -14.767049789428711

Token 537: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.005034983158111572
    2. 'items' → logprob: -5.505034923553467
    3. '.values' → logprob: -8.380035400390625
    4. '.keys' → logprob: -8.630035400390625
    5. ',' → logprob: -8.755035400390625
    6. '.' → logprob: -8.755035400390625
    7. ' items' → logprob: -9.380035400390625
    8. '.iteritems' → logprob: -9.755035400390625
    9. '_items' → logprob: -10.005035400390625
    10. ':' → logprob: -10.630035400390625

Token 538: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00885328184813261
    2. '():
' → logprob: -4.758853435516357
    3. '()' → logprob: -8.8838529586792
    4. ':' → logprob: -9.6338529586792
    5. ' ():' → logprob: -10.8838529586792
    6. '(' → logprob: -11.7588529586792
    7. '(),' → logprob: -12.2588529586792
    8. '():
' → logprob: -14.0088529586792
    9. '();' → logprob: -14.3838529586792
    10. '()>' → logprob: -14.6338529586792

Token 539: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010342398309148848
    2. ',' → logprob: -9.625102996826172
    3. '   ' → logprob: -11.750102996826172
    4. '```' → logprob: -12.125102996826172
    5. ' print' → logprob: -12.375102996826172
    6. ':' → logprob: -12.375102996826172
    7. '	' → logprob: -12.875102996826172
    8. ' if' → logprob: -13.125102996826172
    9. '<|end|>' → logprob: -13.500102996826172
    10. '      ' → logprob: -13.625102996826172

Token 540: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1363709270954132
    2. 'print' → logprob: -2.136370897293091
    3. ' print' → logprob: -4.88637113571167
    4. '   ' → logprob: -6.88637113571167
    5. 'if' (adapté à ' if') → logprob: -8.136370658874512
    6. '           ' → logprob: -8.386370658874512
    7. ' if' → logprob: -8.886370658874512
    8. '	print' → logprob: -9.011370658874512
    9. '	   ' → logprob: -11.261370658874512
    10. '	       ' → logprob: -11.386370658874512

Token 541: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1797623485326767
    2. ' i' → logprob: -1.804762363433838
    3. ' not' → logprob: -11.92976188659668
    4. ' ' → logprob: -12.55476188659668
    5. '   ' → logprob: -12.92976188659668
    6. 'v' → logprob: -13.17976188659668
    7. 'not' → logprob: -13.67976188659668
    8. '	i' → logprob: -14.55476188659668
    9. ' v' → logprob: -14.67976188659668
    10. ' ' → logprob: -14.80476188659668

Token 542: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.919373095035553
    2. '==' → logprob: -1.0443730354309082
    3. ' ==' → logprob: -1.4193730354309082
    4. '):' → logprob: -6.419373035430908
    5. ':
' → logprob: -6.419373035430908
    6. ')' → logprob: -6.919373035430908
    7. ' :' → logprob: -7.169373035430908
    8. ' ' → logprob: -7.544373035430908
    9. '<|end|>' → logprob: -7.794373035430908
    10. '=' → logprob: -8.044373512268066

Token 543: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002247199881821871
    2. '       ' → logprob: -7.002247333526611
    3. ' print' → logprob: -7.502247333526611
    4. 'print' → logprob: -7.752247333526611
    5. '	       ' → logprob: -9.252246856689453
    6. '
' → logprob: -9.627246856689453
    7. ',' → logprob: -10.002246856689453
    8. '<|end|>' → logprob: -10.502246856689453
    9. '```' → logprob: -11.127246856689453
    10. '   ' → logprob: -11.377246856689453

Token 544: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05593399330973625
    2. ' print' → logprob: -3.305933952331543
    3. '           ' → logprob: -4.055933952331543
    4. '       ' → logprob: -8.180933952331543
    5. '   ' → logprob: -9.930933952331543
    6. 'break' → logprob: -10.555933952331543
    7. 'for' → logprob: -10.680933952331543
    8. '```' → logprob: -11.555933952331543
    9. '               ' → logprob: -11.680933952331543
    10. '	print' → logprob: -12.555933952331543

Token 545: '(*' (ID: 9000)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.122384786605835
    2. '-' → logprob: -1.247384786605835
    3. 'v' → logprob: -1.747384786605835
    4. '(' → logprob: -2.247384786605835
    5. '(-' → logprob: -2.997384786605835
    6. '(*' → logprob: -3.247384786605835
    7. '1' → logprob: -4.247385025024414
    8. '0' → logprob: -6.872385025024414
    9. '("' → logprob: -6.997385025024414
    10. '*' → logprob: -7.872385025024414

Token 546: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -9.372294698550832e-06
    2. ' v' → logprob: -11.625009536743164
    3. '(v' → logprob: -15.625009536743164
    4. '[v' → logprob: -16.750009536743164
    5. 'list' → logprob: -17.125009536743164
    6. 'vi' → logprob: -17.375009536743164
    7. '   ' → logprob: -17.750009536743164
    8. '[' → logprob: -18.375009536743164
    9. '	v' → logprob: -18.375009536743164
    10. ')v' → logprob: -18.750009536743164

Token 547: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020628207130357623
    2. ')
' → logprob: -8.500205993652344
    3. ' )' → logprob: -13.250205993652344
    4. ',' → logprob: -14.875205993652344
    5. ')return' → logprob: -15.500205993652344
    6. '())' → logprob: -15.750205993652344
    7. ',end' → logprob: -16.500205993652344
    8. '()' → logprob: -16.500205993652344
    9. ',)' → logprob: -17.500205993652344
    10. ')#' → logprob: -17.750205993652344

Token 548: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 549: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 550: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07373461872339249
    2. ':
' → logprob: -3.5737345218658447
    3. '       ' → logprob: -3.8237345218658447
    4. ':' → logprob: -4.823734760284424
    5. '   ' → logprob: -5.323734760284424
    6. ' continue' → logprob: -5.573734760284424
    7. 'continue' → logprob: -7.073734760284424
    8. ' pass' → logprob: -7.698734760284424
    9. '		' → logprob: -7.823734760284424
    10. '	       ' → logprob: -8.073734283447266

Token 551: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10952252894639969
    2. '           ' → logprob: -2.859522581100464
    3. '       ' → logprob: -4.234522342681885
    4. '   ' → logprob: -4.484522342681885
    5. 'continue' → logprob: -4.484522342681885
    6. ' print' → logprob: -5.234522342681885
    7. 'pass' → logprob: -6.359522342681885
    8. 'return' → logprob: -6.859522342681885
    9. ' continue' → logprob: -7.859522342681885
    10. 'break' → logprob: -8.359522819519043

Token 552: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00032592954812571406
    2. 'pass' → logprob: -8.250326156616211
    3. 'continue' → logprob: -9.875326156616211
    4. 'break' → logprob: -11.625326156616211
    5. ' print' → logprob: -13.125326156616211
    6. 'pr' → logprob: -13.875326156616211
    7. '   ' → logprob: -14.125326156616211
    8. '       ' → logprob: -15.375326156616211
    9. 'return' → logprob: -15.875326156616211
    10. '           ' → logprob: -16.87532615661621

Token 553: '(*' (ID: 9000)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14567887783050537
    2. '(-' → logprob: -2.020678997039795
    3. '(' → logprob: -6.395678997039795
    4. '-end' → logprob: -8.020678520202637
    5. '()-' → logprob: -8.145678520202637
    6. '()' → logprob: -8.395678520202637
    7. ' -' → logprob: -8.645678520202637
    8. '0' → logprob: -8.770678520202637
    9. '-n' → logprob: -9.895678520202637
    10. '-no' → logprob: -10.270678520202637

Token 554: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.44734805822372437
    2. '(-' → logprob: -1.4473481178283691
    3. '(' → logprob: -2.947348117828369
    4. '-' → logprob: -3.072348117828369
    5. '[-' → logprob: -4.072348117828369
    6. '[' → logprob: -5.572348117828369
    7. '()' → logprob: -6.447348117828369
    8. '-v' → logprob: -6.447348117828369
    9. '(v' → logprob: -7.447348117828369
    10. '())' → logprob: -7.697348117828369

Token 555: '[::-' (ID: 159890)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016313401283696294
    2. ',' → logprob: -9.375163078308105
    3. '<|end|>' → logprob: -10.625163078308105
    4. ',)' → logprob: -11.000163078308105
    5. ' )' → logprob: -11.500163078308105
    6. ')
' → logprob: -11.500163078308105
    7. ',end' → logprob: -12.375163078308105
    8. '   ' → logprob: -12.875163078308105
    9. '[::-' → logprob: -13.125163078308105
    10. '())' → logprob: -13.750163078308105

Token 556: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003240697318688035
    2. ')' → logprob: -6.378240585327148
    3. 'v' → logprob: -6.503240585327148
    4. ')
' → logprob: -11.878240585327148
    5. 'i' → logprob: -12.503240585327148
    6. ' ' → logprob: -12.753240585327148
    7. '[' → logprob: -12.753240585327148
    8. '-' → logprob: -12.753240585327148
    9. 'vi' → logprob: -12.878240585327148
    10. 's' → logprob: -12.878240585327148

Token 557: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.226628895296017e-06
    2. ')
' → logprob: -11.875007629394531
    3. '))' → logprob: -15.625007629394531
    4. ' )' → logprob: -17.50000762939453
    5. ')}' → logprob: -17.62500762939453
    6. '())' → logprob: -18.62500762939453
    7. '),' → logprob: -19.00000762939453
    8. ')`' → logprob: -19.12500762939453
    9. ')

' → logprob: -19.50000762939453
    10. '   ' → logprob: -19.62500762939453

Token 558: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 559: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 560: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 561: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013520221691578627
    2. 'C' → logprob: -7.751351833343506
    3. '#' → logprob: -7.876351833343506
    4. 'A' → logprob: -8.251352310180664
    5. 'if' → logprob: -8.751352310180664
    6. '<|end|>' → logprob: -10.001352310180664
    7. 'for' → logprob: -10.626352310180664
    8. '```' → logprob: -11.376352310180664
    9. 'D' → logprob: -11.626352310180664
    10. 'B' → logprob: -11.876352310180664

Token 562: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.029909925535321236
    2. 'C' → logprob: -3.52990984916687
    3. ' main' → logprob: -9.77991008758545
    4. ' ' → logprob: -10.27991008758545
    5. 'main' → logprob: -10.65491008758545
    6. ' B' → logprob: -10.90491008758545
    7. ' A' → logprob: -10.90491008758545
    8. '__' → logprob: -13.27991008758545
    9. 'A' → logprob: -13.52991008758545
    10. '_C' → logprob: -13.77991008758545

Token 563: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.1398757123970427e-05
    2. '():
' → logprob: -12.000011444091797
    3. ' ():' → logprob: -12.250011444091797
    4. '()' → logprob: -14.875011444091797
    5. '_' → logprob: -18.250011444091797
    6. '().' → logprob: -19.750011444091797
    7. '(' → logprob: -19.750011444091797
    8. ':' → logprob: -19.750011444091797
    9. '():
' → logprob: -20.250011444091797
    10. 'def' → logprob: -20.500011444091797

Token 564: '   ' (ID: 271)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.783160388469696
    2. '   ' → logprob: -1.1581604480743408
    3. ' n' → logprob: -1.9081604480743408
    4. 'n' → logprob: -2.533160448074341
    5. 'pass' → logprob: -7.408160209655762
    6. '    ' → logprob: -8.408160209655762
    7. '	n' → logprob: -9.408160209655762
    8. '	pass' → logprob: -9.408160209655762
    9. ' #' → logprob: -10.158160209655762
    10. 'def' → logprob: -10.408160209655762

Token 565: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.6616407036781311
    2. ' n' → logprob: -0.9116407036781311
    3. ' pass' → logprob: -2.7866406440734863
    4. '   ' → logprob: -4.411640644073486
    5. 'pass' → logprob: -6.161640644073486
    6. 'def' → logprob: -6.411640644073486
    7. ' t' → logprob: -7.661640644073486
    8. 's' → logprob: -7.911640644073486
    9. ' s' → logprob: -8.161641120910645
    10. 't' → logprob: -8.161641120910645

Token 566: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10226527601480484
    2. '=' → logprob: -2.3522653579711914
    3. ',' → logprob: -6.227265357971191
    4. '=int' → logprob: -10.602265357971191
    5. ' ,' → logprob: -11.227265357971191
    6. '   ' → logprob: -11.227265357971191
    7. ' ' → logprob: -11.602265357971191
    8. ',n' → logprob: -12.102265357971191
    9. ' =
' → logprob: -12.227265357971191
    10. '=n' → logprob: -12.602265357971191

Token 567: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.18018871545791626
    2. ' I' → logprob: -1.8051886558532715
    3. 'int' → logprob: -8.43018913269043
    4. ' ' → logprob: -9.05518913269043
    5. 'n' → logprob: -10.18018913269043
    6. ' int' → logprob: -10.80518913269043
    7. ' n' → logprob: -11.30518913269043
    8. 'LI' → logprob: -11.43018913269043
    9. 'L' → logprob: -12.55518913269043
    10. '  ' → logprob: -12.68018913269043

Token 568: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014438017271459103
    2. '()
' → logprob: -4.264438152313232
    3. '   ' → logprob: -8.389437675476074
    4. ')' → logprob: -11.514437675476074
    5. '()\' → logprob: -11.764437675476074
    6. ' ()' → logprob: -11.889437675476074
    7. 'def' → logprob: -12.514437675476074
    8. '()
' → logprob: -12.764437675476074
    9. '#' → logprob: -12.889437675476074
    10. 'n' → logprob: -13.014437675476074

Token 569: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5945605635643005
    2. 'a' → logprob: -1.0945606231689453
    3. ' a' → logprob: -2.8445606231689453
    4. 'd' → logprob: -3.5945606231689453
    5. 's' → logprob: -5.094560623168945
    6. 'b' → logprob: -6.344560623168945
    7. 'n' → logprob: -6.469560623168945
    8. 'data' → logprob: -6.469560623168945
    9. 'arr' → logprob: -6.594560623168945
    10. '    
' → logprob: -6.719560623168945

Token 570: ' p' (ID: 275)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05201112851500511
    2. 'dp' → logprob: -3.552011013031006
    3. 'd' → logprob: -4.677011013031006
    4. 's' → logprob: -5.302011013031006
    5. 'k' → logprob: -6.427011013031006
    6. 'l' → logprob: -6.927011013031006
    7. 'ans' → logprob: -7.052011013031006
    8. 'b' → logprob: -7.177011013031006
    9. 'c' → logprob: -7.552011013031006
    10. 'x' → logprob: -7.677011013031006

Token 571: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31391867995262146
    2. ' =' → logprob: -1.3139187097549438
    3. '=[]' → logprob: -7.813918590545654
    4. ',' → logprob: -9.688919067382812
    5. '   ' → logprob: -10.188919067382812
    6. ' ' → logprob: -10.563919067382812
    7. 'refix' → logprob: -10.813919067382812
    8. '=[' → logprob: -11.063919067382812
    9. '[' → logprob: -11.063919067382812
    10. '=[]
' → logprob: -11.313919067382812

Token 572: ' [(' (ID: 43900)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.03865687549114227
    2. '[' → logprob: -3.5386569499969482
    3. 'LS' → logprob: -4.788656711578369
    4. '[]' → logprob: -9.163657188415527
    5. 'L' → logprob: -9.288657188415527
    6. 'I' → logprob: -9.288657188415527
    7. ' LI' → logprob: -9.288657188415527
    8. 'list' → logprob: -9.788657188415527
    9. '[L' → logprob: -10.163657188415527
    10. '[I' → logprob: -10.663657188415527

Token 573: '1' (ID: 16)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.34739789366722107
    2. 'int' → logprob: -2.347397804260254
    3. 'i' → logprob: -2.347397804260254
    4. '0' → logprob: -2.597397804260254
    5. 'LI' → logprob: -4.347397804260254
    6. 'n' → logprob: -5.722397804260254
    7. ')' → logprob: -5.972397804260254
    8. 'random' → logprob: -5.972397804260254
    9. 'x' → logprob: -6.347397804260254
    10. '1' → logprob: -7.097397804260254

Token 574: '<<' (ID: 5354)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012435123324394226
    2. ',n' → logprob: -5.387434959411621
    3. ' ,' → logprob: -6.137434959411621
    4. ',),' → logprob: -6.387434959411621
    5. ',)' → logprob: -6.512434959411621
    6. '<<' → logprob: -6.887434959411621
    7. '+n' → logprob: -8.387434959411621
    8. '0' → logprob: -8.387434959411621
    9. ',p' → logprob: -8.637434959411621
    10. '+p' → logprob: -9.012434959411621

Token 575: 'i' (ID: 72)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03117833100259304
    2. '20' → logprob: -4.4061784744262695
    3. 'i' → logprob: -5.5311784744262695
    4. '30' → logprob: -5.5311784744262695
    5. '17' → logprob: -5.7811784744262695
    6. '(n' → logprob: -6.1561784744262695
    7. '60' → logprob: -6.7811784744262695
    8. '7' → logprob: -7.1561784744262695
    9. '18' → logprob: -7.2811784744262695
    10. '19' → logprob: -7.5311784744262695

Token 576: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007930741412565112
    2. ')-' → logprob: -8.62579345703125
    3. 'for' → logprob: -9.00079345703125
    4. ',' → logprob: -9.25079345703125
    5. ')+' → logprob: -9.25079345703125
    6. ' )' → logprob: -9.37579345703125
    7. '+' → logprob: -9.75079345703125
    8. ' for' → logprob: -10.25079345703125
    9. ')<<' → logprob: -10.62579345703125
    10. ')]' → logprob: -10.87579345703125

Token 577: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5912721753120422
    2. ' for' → logprob: -0.8412721753120422
    3. '+' → logprob: -4.466272354125977
    4. ')' → logprob: -5.716272354125977
    5. ')-' → logprob: -9.091272354125977
    6. ',' → logprob: -9.591272354125977
    7. ' ' → logprob: -9.716272354125977
    8. ' +' → logprob: -9.716272354125977
    9. ' -' → logprob: -10.466272354125977
    10. '	for' → logprob: -10.591272354125977

Token 578: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029753616079688072
    2. ' i' → logprob: -3.5297536849975586
    3. ' ' → logprob: -12.904753684997559
    4. '	i' → logprob: -14.654753684997559
    5. '<|end|>' → logprob: -15.904753684997559
    6. ' in' → logprob: -16.654752731323242
    7. '
' → logprob: -17.029752731323242
    8. 'range' → logprob: -17.154752731323242
    9. '  ' → logprob: -17.404752731323242
    10. '   ' → logprob: -17.529752731323242

Token 579: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1128411516547203
    2. 'in' → logprob: -2.2378411293029785
    3. 'range' → logprob: -12.237841606140137
    4. ' ' → logprob: -12.362841606140137
    5. ')' → logprob: -13.112841606140137
    6. 'n' → logprob: -13.487841606140137
    7. 'i' → logprob: -14.237841606140137
    8. '0' → logprob: -14.362841606140137
    9. ',' → logprob: -14.362841606140137
    10. ' i' → logprob: -14.612841606140137

Token 580: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001238004770129919
    2. ' range' → logprob: -9.000123977661133
    3. 'n' → logprob: -15.375123977661133
    4. '
' → logprob: -16.500123977661133
    5. '(range' → logprob: -17.125123977661133
    6. '   ' → logprob: -17.250123977661133
    7. ' ' → logprob: -18.125123977661133
    8. '  ' → logprob: -18.875123977661133
    9. '	range' → logprob: -18.875123977661133
    10. '

' → logprob: -19.125123977661133

Token 581: '(' (ID: 7)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03988983482122421
    2. '20' → logprob: -3.6648898124694824
    3. '(n' → logprob: -4.539889812469482
    4. '21' → logprob: -6.789889812469482
    5. '30' → logprob: -8.16489028930664
    6. '10' → logprob: -8.53989028930664
    7. '60' → logprob: -8.53989028930664
    8. '11' → logprob: -8.66489028930664
    9. '61' → logprob: -8.91489028930664
    10. '18' → logprob: -9.16489028930664

Token 582: '100' (ID: 1353)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2540370523929596
    2. '20' → logprob: -1.6290370225906372
    3. '21' → logprob: -4.754036903381348
    4. '18' → logprob: -5.504036903381348
    5. '10' → logprob: -5.754036903381348
    6. '11' → logprob: -6.004036903381348
    7. '30' → logprob: -6.254036903381348
    8. '17' → logprob: -6.254036903381348
    9. '(n' → logprob: -6.629036903381348
    10. '19' → logprob: -6.629036903381348

Token 583: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.28450947999954224
    2. ',n' → logprob: -1.7845094203948975
    3. ',' → logprob: -3.0345094203948975
    4. ']' → logprob: -4.159509658813477
    5. ')' → logprob: -5.534509658813477
    6. ' if' → logprob: -5.534509658813477
    7. '(n' → logprob: -5.784509658813477
    8. 'if' → logprob: -6.784509658813477
    9. ' ,' → logprob: -7.034509658813477
    10. ',p' → logprob: -7.034509658813477

Token 584: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5823233723640442
    2. '
' → logprob: -1.0823233127593994
    3. ',' → logprob: -3.5823233127593994
    4. ' ' → logprob: -4.3323235511779785
    5. ' for' → logprob: -4.4573235511779785
    6. 'for' → logprob: -4.7073235511779785
    7. '  
' → logprob: -4.8323235511779785
    8. ' p' → logprob: -5.3323235511779785
    9. '<|end|>' → logprob: -5.8323235511779785
    10. '	for' → logprob: -5.9573235511779785

Token 585: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7355144023895264
    2. 'dp' → logprob: -0.7355144023895264
    3. 'ans' → logprob: -4.3605146408081055
    4. ' for' → logprob: -4.6105146408081055
    5. ' dp' → logprob: -5.2355146408081055
    6. 'res' → logprob: -5.2355146408081055
    7. 'f' → logprob: -5.9855146408081055
    8. 'b' → logprob: -6.9855146408081055
    9. ' ans' → logprob: -6.9855146408081055
    10. 'd' → logprob: -7.1105146408081055

Token 586: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6150814890861511
    2. 'n' → logprob: -0.8650814890861511
    3. 'p' → logprob: -3.740081548690796
    4. ' p' → logprob: -4.365081310272217
    5. '(n' → logprob: -6.865081310272217
    6. ' (' → logprob: -8.865081787109375
    7. ' ' → logprob: -8.865081787109375
    8. ' not' → logprob: -9.240081787109375
    9. '0' → logprob: -9.365081787109375
    10. '(p' → logprob: -10.115081787109375

Token 587: ' in' (ID: 306)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5161333084106445
    2. ' <' → logprob: -1.0161333084106445
    3. '==' → logprob: -4.1411333084106445
    4. ' <=' → logprob: -4.5161333084106445
    5. ' ' → logprob: -5.2661333084106445
    6. '<' → logprob: -5.6411333084106445
    7. ' >=' → logprob: -5.8911333084106445
    8. ' >' → logprob: -7.3911333084106445
    9. '<p' → logprob: -7.6411333084106445
    10. '<=' → logprob: -8.141133308410645

Token 588: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.008634188212454319
    2. ' p' → logprob: -4.758634090423584
    3. '[' → logprob: -11.383634567260742
    4. '{' → logprob: -12.758634567260742
    5. '   ' → logprob: -13.008634567260742
    6. ' ' → logprob: -13.633634567260742
    7. ' [' → logprob: -14.508634567260742
    8. '(' → logprob: -14.633634567260742
    9. ' {' → logprob: -15.383634567260742
    10. '
' → logprob: -15.383634567260742

Token 589: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006888361647725105
    2. ':
' → logprob: -5.006888389587402
    3. ' :' → logprob: -9.756888389587402
    4. '[' → logprob: -10.006888389587402
    5. '[:' → logprob: -10.631888389587402
    6. '   ' → logprob: -11.131888389587402
    7. ' and' → logprob: -12.256888389587402
    8. '):' → logprob: -12.506888389587402
    9. '[n' → logprob: -12.631888389587402
    10. '.' → logprob: -12.881888389587402

Token 590: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13727867603302002
    2. ':' → logprob: -2.1372785568237305
    3. ':
' → logprob: -5.3872785568237305
    4. '   ' → logprob: -5.3872785568237305
    5. '):' → logprob: -8.13727855682373
    6. ',' → logprob: -8.26227855682373
    7. '):
' → logprob: -8.88727855682373
    8. ' or' → logprob: -9.38727855682373
    9. '.' → logprob: -9.63727855682373
    10. ' :' → logprob: -10.38727855682373

Token 591: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2314167320728302
    2. '   ' → logprob: -1.7314167022705078
    3. ' print' → logprob: -3.606416702270508
    4. '       ' → logprob: -6.606416702270508
    5. '
' → logprob: -7.606416702270508
    6. 'return' → logprob: -7.856416702270508
    7. '	print' → logprob: -10.106416702270508
    8. '    
' → logprob: -10.356416702270508
    9. ' return' → logprob: -10.731416702270508
    10. ' ' → logprob: -10.856416702270508

Token 592: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.5856432318687439
    2. '(' → logprob: -1.2106432914733887
    3. '(n' → logprob: -2.0856432914733887
    4. '"' → logprob: -4.210643291473389
    5. '(-' → logprob: -5.960643291473389
    6. '(p' → logprob: -6.710643291473389
    7. '1' → logprob: -6.960643291473389
    8. 'n' → logprob: -7.835643291473389
    9. '0' → logprob: -8.46064281463623
    10. '("-' → logprob: -8.83564281463623

Token 593: 'No' (ID: 3160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7758782505989075
    2. '1' → logprob: -1.5258781909942627
    3. 'Yes' → logprob: -2.1508781909942627
    4. '"' → logprob: -2.2758781909942627
    5. '0' → logprob: -2.9008781909942627
    6. '-' → logprob: -3.6508781909942627
    7. 'No' → logprob: -4.900878429412842
    8. 'YES' → logprob: -5.275878429412842
    9. '"+' → logprob: -6.150878429412842
    10. '2' → logprob: -6.525878429412842

Token 594: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0006921819876879454
    2. ')' → logprob: -8.000692367553711
    3. '")
' → logprob: -8.375692367553711
    4. ' ")' → logprob: -9.250692367553711
    5. '   ' → logprob: -11.500692367553711
    6. '"' → logprob: -12.125692367553711
    7. ')")' → logprob: -12.625692367553711
    8. '");' → logprob: -12.875692367553711
    9. '\n' → logprob: -13.250692367553711
    10. '')' → logprob: -13.375692367553711

Token 595: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008852577768266201
    2. '   ' → logprob: -4.758852481842041
    3. ' return' → logprob: -8.6338529586792
    4. '<|end|>' → logprob: -11.1338529586792
    5. '           ' → logprob: -11.5088529586792
    6. ')' → logprob: -11.7588529586792
    7. ' ' → logprob: -12.0088529586792
    8. ',' → logprob: -12.1338529586792
    9. '	return' → logprob: -12.5088529586792
    10. '    ' → logprob: -13.1338529586792

Token 596: ' quit' (ID: 27737)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5776486992835999
    2. ' return' → logprob: -0.8276486992835999
    3. 'eturn' → logprob: -7.452648639678955
    4. '       ' → logprob: -8.077649116516113
    5. 'else' → logprob: -8.202649116516113
    6. ' else' → logprob: -8.327649116516113
    7. '   ' → logprob: -8.702649116516113
    8. '	return' → logprob: -9.452649116516113
    9. ' ' → logprob: -10.577649116516113
    10. '
' → logprob: -10.952649116516113

Token 597: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005467113573104143
    2. '()' → logprob: -5.630466938018799
    3. '()
' → logprob: -6.880466938018799
    4. '(n' → logprob: -7.880466938018799
    5. '       ' → logprob: -8.630467414855957
    6. '    
' → logprob: -9.130467414855957
    7. '(' → logprob: -10.130467414855957
    8. 'def' → logprob: -10.755467414855957
    9. '(
' → logprob: -11.005467414855957
    10. '\n' → logprob: -11.005467414855957

Token 598: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00034595211036503315
    2. '    
' → logprob: -8.750346183776855
    3. ' for' → logprob: -9.625346183776855
    4. 'for' → logprob: -9.875346183776855
    5. '<|end|>' → logprob: -11.000346183776855
    6. 'def' → logprob: -11.125346183776855
    7. 'n' → logprob: -11.625346183776855
    8. 'if' → logprob: -11.875346183776855
    9. '
' → logprob: -12.125346183776855
    10. ' if' → logprob: -12.500346183776855

Token 599: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0361429452896118
    2. 'dp' → logprob: -1.4111429452896118
    3. 'x' → logprob: -2.7861428260803223
    4. 'l' → logprob: -2.9111428260803223
    5. 'if' (adapté à ' if') → logprob: -3.0361428260803223
    6. 'a' → logprob: -3.0361428260803223
    7. 's' → logprob: -3.2861428260803223
    8. 'ans' → logprob: -3.5361428260803223
    9. 'c' → logprob: -3.9111428260803223
    10. 'b' → logprob: -4.286142826080322

Token 600: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5790814757347107
    2. ' n' → logprob: -0.8290814757347107
    3. '(n' → logprob: -6.0790815353393555
    4. ' (' → logprob: -7.7040815353393555
    5. ' ' → logprob: -9.204081535339355
    6. ' not' → logprob: -10.079081535339355
    7. '(' → logprob: -10.204081535339355
    8. 'p' → logprob: -10.954081535339355
    9. 'not' → logprob: -11.079081535339355
    10. 'S' → logprob: -11.204081535339355

Token 601: '+' (ID: 10)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3065641522407532
    2. ' <' → logprob: -1.8065640926361084
    3. ' <=' → logprob: -3.0565640926361084
    4. '==' → logprob: -4.3065643310546875
    5. '%' → logprob: -4.4315643310546875
    6. ' ' → logprob: -4.4315643310546875
    7. ' %' → logprob: -5.0565643310546875
    8. '<' → logprob: -5.3065643310546875
    9. ' >' → logprob: -6.3065643310546875
    10. '<=' → logprob: -6.6815643310546875

Token 602: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011555965058505535
    2. ' ' → logprob: -4.511556148529053
    3. '2' → logprob: -8.511555671691895
    4. 'p' → logprob: -9.511555671691895
    5. 'n' → logprob: -9.886555671691895
    6. '=' → logprob: -10.386555671691895
    7. ' n' → logprob: -10.511555671691895
    8. ' p' → logprob: -10.761555671691895
    9. '7' → logprob: -11.011555671691895
    10. '3' → logprob: -11.136555671691895

Token 603: ' in' (ID: 306)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.8919311761856079
    2. ' ==' → logprob: -1.141931176185608
    3. ' in' → logprob: -1.516931176185608
    4. '==' → logprob: -4.016931056976318
    5. ' <=' → logprob: -4.516931056976318
    6. ' not' → logprob: -4.516931056976318
    7. '&' → logprob: -5.266931056976318
    8. ' ' → logprob: -6.641931056976318
    9. ' >' → logprob: -7.016931056976318
    10. ')' → logprob: -7.016931056976318

Token 604: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.061967913061380386
    2. ' p' → logprob: -2.8119678497314453
    3. '   ' → logprob: -16.186967849731445
    4. ' ' → logprob: -16.436967849731445
    5. '[' → logprob: -17.186967849731445
    6. '[p' → logprob: -17.936967849731445
    7. '	p' → logprob: -18.561967849731445
    8. '{' → logprob: -19.061967849731445
    9. ' [' → logprob: -19.686967849731445
    10. '```' → logprob: -20.311967849731445

Token 605: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004575138445943594
    2. '==' → logprob: -6.004575252532959
    3. ':
' → logprob: -6.504575252532959
    4. '   ' → logprob: -8.2545747756958
    5. ' ==' → logprob: -9.1295747756958
    6. ' and' → logprob: -9.6295747756958
    7. '[' → logprob: -9.8795747756958
    8. '):' → logprob: -10.0045747756958
    9. '       ' → logprob: -10.5045747756958
    10. '.' → logprob: -11.6295747756958

Token 606: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34939682483673096
    2. '       ' → logprob: -1.224396824836731
    3. ':
' → logprob: -7.224396705627441
    4. '   ' → logprob: -8.974396705627441
    5. ',' → logprob: -10.224396705627441
    6. '):' → logprob: -11.349396705627441
    7. ' and' → logprob: -11.849396705627441
    8. '=' → logprob: -12.099396705627441
    9. '<|end|>' → logprob: -12.349396705627441
    10. '.' → logprob: -12.474396705627441

Token 607: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05470329895615578
    2. ' print' → logprob: -3.3047032356262207
    3. '   ' → logprob: -4.304703235626221
    4. '       ' → logprob: -5.804703235626221
    5. '	print' → logprob: -12.429703712463379
    6. ' ' → logprob: -13.929703712463379
    7. '           ' → logprob: -15.179703712463379
    8. '    ' → logprob: -16.304702758789062
    9. '  ' → logprob: -16.554702758789062
    10. '     ' → logprob: -16.679702758789062

Token 608: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.004082909319549799
    2. '(' → logprob: -5.504082679748535
    3. '('' → logprob: -12.629082679748535
    4. '("("' → logprob: -14.504082679748535
    5. '(
' → logprob: -15.504082679748535
    6. '("")' → logprob: -16.12908363342285
    7. '(""' → logprob: -16.62908363342285
    8. '()' → logprob: -16.62908363342285
    9. '(No' → logprob: -17.50408363342285
    10. '("""' → logprob: -17.75408363342285

Token 609: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.5710848569869995
    2. 'No' → logprob: -1.0710848569869995
    3. '"' → logprob: -2.696084976196289
    4. '"No' → logprob: -3.696084976196289
    5. ''' → logprob: -10.196084976196289
    6. '")' → logprob: -10.446084976196289
    7. '""' → logprob: -10.571084976196289
    8. 'Ye' → logprob: -10.946084976196289
    9. '("' → logprob: -11.196084976196289
    10. '```' → logprob: -12.946084976196289

Token 610: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3508932888507843
    2. '       ' → logprob: -1.850893259048462
    3. '()' → logprob: -2.475893259048462
    4. ')' → logprob: -3.725893259048462
    5. '   ' → logprob: -3.975893259048462
    6. '")
' → logprob: -5.100893497467041
    7. '<|end|>' → logprob: -5.600893497467041
    8. '()
' → logprob: -7.225893497467041
    9. '')' → logprob: -7.600893497467041
    10. ')
' → logprob: -8.475893020629883

Token 611: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003697820007801056
    2. '   ' → logprob: -5.628697872161865
    3. '<|end|>' → logprob: -9.503697395324707
    4. ')' → logprob: -12.503697395324707
    5. 'return' → logprob: -12.503697395324707
    6. ' ' → logprob: -12.753697395324707
    7. '           ' → logprob: -12.878697395324707
    8. '()' → logprob: -13.003697395324707
    9. '	return' → logprob: -13.628697395324707
    10. ' return' → logprob: -13.753697395324707

Token 612: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10835318267345428
    2. '   ' → logprob: -2.3583531379699707
    3. ' return' → logprob: -5.358353137969971
    4. 'return' → logprob: -6.233353137969971
    5. '	return' → logprob: -6.858353137969971
    6. ' ' → logprob: -8.608353614807129
    7. '           ' → logprob: -9.608353614807129
    8. '<|end|>' → logprob: -10.358353614807129
    9. '    ' → logprob: -10.983353614807129
    10. '     ' → logprob: -11.108353614807129

Token 613: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011802800931036472
    2. '_' → logprob: -4.511802673339844
    3. '_i' → logprob: -7.261802673339844
    4. ' i' → logprob: -10.261802673339844
    5. 'k' → logprob: -11.886802673339844
    6. ' _' → logprob: -12.261802673339844
    7. 'x' → logprob: -12.761802673339844
    8. '__' → logprob: -14.136802673339844
    9. 'j' → logprob: -14.761802673339844
    10. 'b' → logprob: -15.261802673339844

Token 614: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03030320629477501
    2. 'in' → logprob: -3.5303032398223877
    3. '(' → logprob: -7.905303001403809
    4. '_' → logprob: -10.030303001403809
    5. '	in' → logprob: -10.405303001403809
    6. 'range' → logprob: -10.655303001403809
    7. ' i' → logprob: -10.905303001403809
    8. ' range' → logprob: -11.280303001403809
    9. '   ' → logprob: -11.280303001403809
    10. ' ' → logprob: -11.405303001403809

Token 615: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00018268341955263168
    2. ' range' → logprob: -8.62518310546875
    3. 're' → logprob: -13.37518310546875
    4. 'p' → logprob: -14.87518310546875
    5. 'r' → logprob: -15.12518310546875
    6. 'LS' → logprob: -15.37518310546875
    7. 'rang' → logprob: -15.75018310546875
    8. 'list' → logprob: -16.00018310546875
    9. 'ran' → logprob: -16.37518310546875
    10. '   ' → logprob: -16.62518310546875

Token 616: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.403534859418869
    2. '(' → logprob: -1.1535348892211914
    3. '1' → logprob: -5.028534889221191
    4. 'n' → logprob: -5.778534889221191
    5. '20' → logprob: -6.403534889221191
    6. '30' → logprob: -6.653534889221191
    7. '100' → logprob: -7.028534889221191
    8. '50' → logprob: -7.153534889221191
    9. '60' → logprob: -7.403534889221191
    10. '10' → logprob: -7.403534889221191

Token 617: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.49760180711746216
    2. '1' → logprob: -1.2476017475128174
    3. '60' → logprob: -2.9976017475128174
    4. '100' → logprob: -4.2476019859313965
    5. '30' → logprob: -4.8726019859313965
    6. '10' → logprob: -5.1226019859313965
    7. '2' → logprob: -5.2476019859313965
    8. '20' → logprob: -5.3726019859313965
    9. '50' → logprob: -5.3726019859313965
    10. '40' → logprob: -6.1226019859313965

Token 618: ',' (ID: 11)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.18168537318706512
    2. ',' → logprob: -1.8066853284835815
    3. ' ,' → logprob: -6.306685447692871
    4. ',
' → logprob: -10.556685447692871
    5. ',(' → logprob: -10.931685447692871
    6. '   ' → logprob: -11.056685447692871
    7. ',int' → logprob: -11.056685447692871
    8. 'n' → logprob: -11.931685447692871
    9. '    ' → logprob: -12.056685447692871
    10. '1' → logprob: -12.431685447692871

Token 619: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002560945285949856
    2. '(n' → logprob: -9.125256538391113
    3. '10' → logprob: -10.250256538391113
    4. '11' → logprob: -10.875256538391113
    5. '100' → logprob: -11.125256538391113
    6. '(' → logprob: -11.250256538391113
    7. '1' → logprob: -11.500256538391113
    8. '101' → logprob: -11.500256538391113
    9. '31' → logprob: -11.625256538391113
    10. 'int' → logprob: -11.750256538391113

Token 620: '*n' (ID: 58470)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.6517453193664551
    2. '*n' → logprob: -1.151745319366455
    3. ',' → logprob: -2.276745319366455
    4. 'n' → logprob: -2.901745319366455
    5. '*' → logprob: -6.526745319366455
    6. '**' → logprob: -7.026745319366455
    7. '):' → logprob: -7.401745319366455
    8. ')' → logprob: -8.151744842529297
    9. '*(' → logprob: -8.276744842529297
    10. '1' → logprob: -8.276744842529297

Token 621: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01408511120826006
    2. ' +' → logprob: -4.764085292816162
    3. '):' → logprob: -5.264085292816162
    4. ' ):' → logprob: -9.139084815979004
    5. '):
' → logprob: -9.514084815979004
    6. ',' → logprob: -10.514084815979004
    7. ')' → logprob: -11.514084815979004
    8. '   ' → logprob: -11.514084815979004
    9. '-' → logprob: -11.889084815979004
    10. '
' → logprob: -12.014084815979004

Token 622: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08147569745779037
    2. '       ' → logprob: -3.3314757347106934
    3. ' ' → logprob: -4.956475734710693
    4. '<|end|>' → logprob: -4.956475734710693
    5. ' print' → logprob: -5.206475734710693
    6. '	       ' → logprob: -5.331475734710693
    7. '   ' → logprob: -5.456475734710693
    8. ':' → logprob: -5.456475734710693
    9. '        ' → logprob: -6.206475734710693
    10. ',' → logprob: -6.456475734710693

Token 623: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.1405867636203766
    2. '           ' → logprob: -2.5155868530273438
    3. 'print' (adapté à ' print') → logprob: -3.3905868530273438
    4. '               ' → logprob: -5.015586853027344
    5. ' ' → logprob: -6.015586853027344
    6. '       ' → logprob: -6.015586853027344
    7. '	print' → logprob: -6.640586853027344
    8. '   ' → logprob: -6.765586853027344
    9. '	       ' → logprob: -7.265586853027344
    10. ' if' → logprob: -7.765586853027344

Token 624: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.29214566946029663
    2. '(i' → logprob: -2.0421457290649414
    3. '0' → logprob: -3.0421457290649414
    4. '(' → logprob: -3.5421457290649414
    5. '1' → logprob: -3.5421457290649414
    6. '"' → logprob: -4.667145729064941
    7. '2' → logprob: -5.042145729064941
    8. '("' → logprob: -7.417145729064941
    9. '((' → logprob: -7.542145729064941
    10. ' i' → logprob: -8.292145729064941

Token 625: ',i' (ID: 25032)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9907442331314087
    2. ',end' → logprob: -1.1157442331314087
    3. ',' → logprob: -1.2407442331314087
    4. '+' → logprob: -4.740744113922119
    5. '*' → logprob: -7.115744113922119
    6. ',i' → logprob: -7.240744113922119
    7. ' ,' → logprob: -7.365744113922119
    8. ',n' → logprob: -8.115744590759277
    9. ' )' → logprob: -8.490744590759277
    10. ' ' → logprob: -9.490744590759277

Token 626: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01279650628566742
    2. ')' → logprob: -4.512796401977539
    3. ' +' → logprob: -6.512796401977539
    4. ',' → logprob: -8.887796401977539
    5. ' )' → logprob: -10.512796401977539
    6. '*' → logprob: -10.637796401977539
    7. '-' → logprob: -10.762796401977539
    8. ',end' → logprob: -11.137796401977539
    9. ' ' → logprob: -11.887796401977539
    10. ',n' → logprob: -12.137796401977539

Token 627: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '2' → logprob: -15.625011444091797
    4. '0' → logprob: -17.250011444091797
    5. '  ' → logprob: -18.125011444091797
    6. '
' → logprob: -18.875011444091797
    7. ')' → logprob: -18.875011444091797
    8. '   ' → logprob: -19.375011444091797
    9. '```' → logprob: -19.875011444091797
    10. '<|end|>' → logprob: -19.875011444091797

Token 628: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.200166469876422e-06
    2. ')
' → logprob: -12.625004768371582
    3. '<|end|>' → logprob: -14.625004768371582
    4. '")' → logprob: -15.000004768371582
    5. ');' → logprob: -15.125004768371582
    6. ',' → logprob: -15.500004768371582
    7. '')' → logprob: -15.500004768371582
    8. ' )' → logprob: -15.625004768371582
    9. ')#' → logprob: -16.5000057220459
    10. '),' → logprob: -16.6250057220459

Token 629: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 630: ' quit' (ID: 27737)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06313216686248779
    2. '   ' → logprob: -3.0631322860717773
    3. '	return' → logprob: -5.188132286071777
    4. '<|end|>' → logprob: -5.688132286071777
    5. ' return' → logprob: -5.938132286071777
    6. ' ' → logprob: -6.688132286071777
    7. 'return' → logprob: -7.188132286071777
    8. '
' → logprob: -8.063132286071777
    9. '           ' → logprob: -8.313132286071777
    10. '	' → logprob: -9.938132286071777

Token 631: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06049816682934761
    2. '<|end|>' → logprob: -3.0604982376098633
    3. '(n' → logprob: -5.435498237609863
    4. '()' → logprob: -5.935498237609863
    5. '
' → logprob: -6.435498237609863
    6. 'n' → logprob: -6.810498237609863
    7. '<|end|>' → logprob: -7.310498237609863
    8. '    
' → logprob: -7.935498237609863
    9. '()
' → logprob: -8.560498237609863
    10. ')' → logprob: -8.685498237609863

Token 632: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04026021435856819
    2. ' if' → logprob: -4.165260314941406
    3. ' 
' → logprob: -4.540260314941406
    4. 'n' → logprob: -5.790260314941406
    5. 'if' → logprob: -6.040260314941406
    6. ' for' → logprob: -6.290260314941406
    7. '    
' → logprob: -6.290260314941406
    8. '
' → logprob: -7.415260314941406
    9. ' n' → logprob: -7.665260314941406
    10. 'for' → logprob: -7.915260314941406

Token 633: ' ans' (ID: 3345)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5936921834945679
    2. 'd' → logprob: -2.0936923027038574
    3. 'for' → logprob: -2.3436923027038574
    4. 'x' → logprob: -3.2186923027038574
    5. 'l' → logprob: -3.2186923027038574
    6. 'else' → logprob: -3.7186923027038574
    7. 'q' → logprob: -4.093692302703857
    8. 'dp' → logprob: -4.093692302703857
    9. 'print' → logprob: -4.218692302703857
    10. 's' → logprob: -4.343692302703857

Token 634: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6988151669502258
    2. ' =' → logprob: -0.6988151669502258
    3. '=[]' → logprob: -5.19881534576416
    4. '=[' → logprob: -9.19881534576416
    5. '={}' → logprob: -11.32381534576416
    6. '=[]
' → logprob: -11.94881534576416
    7. '[' → logprob: -12.94881534576416
    8. ' =[' → logprob: -12.94881534576416
    9. '[:]' → logprob: -14.19881534576416
    10. ',' → logprob: -14.32381534576416

Token 635: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.004140141885727644
    2. ' []' → logprob: -5.754140377044678
    3. '[' → logprob: -7.629140377044678
    4. 'default' → logprob: -8.50413990020752
    5. '[]
' → logprob: -8.87913990020752
    6. '[(' → logprob: -9.37913990020752
    7. '{}' → logprob: -11.12913990020752
    8. 'deque' → logprob: -11.87913990020752
    9. ' defaultdict' → logprob: -12.50413990020752
    10. '[n' → logprob: -12.62913990020752

Token 636: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5136238932609558
    2. 'for' → logprob: -1.0136239528656006
    3. '[' → logprob: -4.1386237144470215
    4. '   ' → logprob: -5.3886237144470215
    5. ' n' → logprob: -5.5136237144470215
    6. 'n' → logprob: -5.7636237144470215
    7. '
' → logprob: -6.0136237144470215
    8. 'a' → logprob: -6.6386237144470215
    9. 'x' → logprob: -6.8886237144470215
    10. ' 
' → logprob: -7.0136237144470215

Token 637: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.4934073686599731
    2. 'if' → logprob: -1.7434073686599731
    3. 'a' → logprob: -1.9934073686599731
    4. 'd' → logprob: -2.4934072494506836
    5. 'l' → logprob: -2.9934072494506836
    6. 'def' → logprob: -3.4934072494506836
    7. 'q' → logprob: -3.4934072494506836
    8. 'x' → logprob: -3.6184072494506836
    9. 'f' → logprob: -3.7434072494506836
    10. 'p' → logprob: -4.118407249450684

Token 638: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005355193745344877
    2. ' i' → logprob: -5.255355358123779
    3. 'k' → logprob: -10.505354881286621
    4. '_' → logprob: -10.505354881286621
    5. 'x' → logprob: -10.880354881286621
    6. 'j' → logprob: -11.255354881286621
    7. '(i' → logprob: -12.130354881286621
    8. 'a' → logprob: -12.505354881286621
    9. 'd' → logprob: -12.630354881286621
    10. '_i' → logprob: -12.880354881286621

Token 639: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008131771348416805
    2. 'in' → logprob: -5.383131980895996
    3. '(' → logprob: -5.758131980895996
    4. 'range' → logprob: -8.633131980895996
    5. '   ' → logprob: -9.258131980895996
    6. '1' → logprob: -10.883131980895996
    7. ' ' → logprob: -11.008131980895996
    8. ',' → logprob: -11.258131980895996
    9. ' range' → logprob: -11.508131980895996
    10. 'n' → logprob: -12.883131980895996

Token 640: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.026329560205340385
    2. ' range' → logprob: -3.651329517364502
    3. '(range' → logprob: -11.65132999420166
    4. '[' → logprob: -11.90132999420166
    5. '(' → logprob: -12.27632999420166
    6. '   ' → logprob: -12.77632999420166
    7. ' ' → logprob: -13.40132999420166
    8. '
' → logprob: -14.02632999420166
    9. '  ' → logprob: -14.15132999420166
    10. '1' → logprob: -14.15132999420166

Token 641: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5816264748573303
    2. '1' → logprob: -1.2066264152526855
    3. '2' → logprob: -1.9566264152526855
    4. 'n' → logprob: -8.831626892089844
    5. '3' → logprob: -8.831626892089844
    6. '(n' → logprob: -9.206626892089844
    7. '4' → logprob: -10.206626892089844
    8. ' ' → logprob: -11.331626892089844
    9. '
' → logprob: -12.206626892089844
    10. '   ' → logprob: -12.706626892089844

Token 642: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5360757112503052
    2. '2' → logprob: -0.9110757112503052
    3. 'n' → logprob: -5.161075592041016
    4. '(' → logprob: -5.411075592041016
    5. '3' → logprob: -6.286075592041016
    6. '(n' → logprob: -8.411075592041016
    7. '20' → logprob: -9.036075592041016
    8. '4' → logprob: -9.161075592041016
    9. ' ' → logprob: -9.661075592041016
    10. 'int' → logprob: -10.286075592041016

Token 643: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1803721785545349
    2. ',n' → logprob: -1.8053722381591797
    3. '1' → logprob: -8.43037223815918
    4. ' ,' → logprob: -8.68037223815918
    5. 'n' → logprob: -9.30537223815918
    6. '(' → logprob: -9.68037223815918
    7. '2' → logprob: -10.43037223815918
    8. ',(' → logprob: -10.93037223815918
    9. ',int' → logprob: -11.30537223815918
    10. '(n' → logprob: -11.30537223815918

Token 644: '3' (ID: 18)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004290542099624872
    2. '(' → logprob: -6.004290580749512
    3. '(n' → logprob: -6.879290580749512
    4. '2' → logprob: -7.879290580749512
    5. '1' → logprob: -8.879290580749512
    6. 'int' → logprob: -9.254290580749512
    7. '100' → logprob: -9.504290580749512
    8. '10' → logprob: -10.504290580749512
    9. '20' → logprob: -11.754290580749512
    10. '50' → logprob: -11.879290580749512

Token 645: '):
' (ID: 1883)
  Prédit: '*n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.007228442933410406
    2. ' *' → logprob: -5.507228374481201
    3. 'n' → logprob: -6.757228374481201
    4. '*' → logprob: -7.382228374481201
    5. '):' → logprob: -7.507228374481201
    6. '):
' → logprob: -7.507228374481201
    7. '*(' → logprob: -9.38222885131836
    8. '   ' → logprob: -10.13222885131836
    9. ')' → logprob: -10.38222885131836
    10. ',' → logprob: -10.63222885131836

Token 646: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008400744758546352
    2. ' ' → logprob: -6.008400917053223
    3. '       ' → logprob: -6.383400917053223
    4. '    ' → logprob: -6.758400917053223
    5. '<|end|>' → logprob: -6.758400917053223
    6. ',' → logprob: -7.258400917053223
    7. ' for' → logprob: -7.883400917053223
    8. '  ' → logprob: -8.133400917053223
    9. ' ans' → logprob: -8.883400917053223
    10. ' ,' → logprob: -9.758400917053223

Token 647: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.2177620381116867
    2. '   ' → logprob: -2.342761993408203
    3. ' for' → logprob: -2.592761993408203
    4. 'ans' (adapté à ' ans') → logprob: -4.217761993408203
    5. 'for' → logprob: -5.217761993408203
    6. '	ans' → logprob: -5.592761993408203
    7. ' print' → logprob: -7.967761993408203
    8. 'print' → logprob: -8.342761993408203
    9. '       ' → logprob: -9.092761993408203
    10. ' if' → logprob: -9.717761993408203

Token 648: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.034241676330566406
    2. '.' → logprob: -3.4092416763305664
    3. '.extend' → logprob: -7.659241676330566
    4. ' .' → logprob: -9.784241676330566
    5. '+=' → logprob: -11.159241676330566
    6. '.ap' → logprob: -11.159241676330566
    7. '.app' → logprob: -11.284241676330566
    8. '.=' → logprob: -11.909241676330566
    9. ' +=' → logprob: -12.034241676330566
    10. '=' → logprob: -12.034241676330566

Token 649: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33997276425361633
    2. '(i' → logprob: -1.339972734451294
    3. '((' → logprob: -4.339972972869873
    4. ' (' → logprob: -4.339972972869873
    5. '   ' → logprob: -8.339972496032715
    6. '([' → logprob: -10.964972496032715
    7. '(True' → logprob: -11.964972496032715
    8. '[i' → logprob: -12.214972496032715
    9. ' ((' → logprob: -12.464972496032715
    10. '[(' → logprob: -12.839972496032715

Token 650: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007932622916996479
    2. '1' → logprob: -5.257932662963867
    3. ' i' → logprob: -6.382932662963867
    4. '(i' → logprob: -7.632932662963867
    5. '(' → logprob: -8.132932662963867
    6. ' ' → logprob: -9.507932662963867
    7. '2' → logprob: -9.632932662963867
    8. '0' → logprob: -10.882932662963867
    9. ' (' → logprob: -10.882932662963867
    10. '   ' → logprob: -11.382932662963867

Token 651: ',i' (ID: 25032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.700191855430603
    2. ',i' → logprob: -0.700191855430603
    3. '+' → logprob: -5.075191974639893
    4. '+i' → logprob: -8.575191497802734
    5. ',
' → logprob: -9.075191497802734
    6. ' ,' → logprob: -9.075191497802734
    7. '-' → logprob: -9.075191497802734
    8. ',n' → logprob: -9.825191497802734
    9. '*' → logprob: -10.450191497802734
    10. '   ' → logprob: -10.825191497802734

Token 652: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00016313401283696294
    2. ' +' → logprob: -9.000163078308105
    3. '%' → logprob: -10.875163078308105
    4. '+
' → logprob: -11.250163078308105
    5. '))' → logprob: -12.375163078308105
    6. '*' → logprob: -13.875163078308105
    7. '-' → logprob: -14.750163078308105
    8. '
' → logprob: -15.000163078308105
    9. '```' → logprob: -15.500163078308105
    10. ',' → logprob: -15.687663078308105

Token 653: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001693984610028565
    2. '2' → logprob: -6.501694202423096
    3. '3' → logprob: -8.751693725585938
    4. ' ' → logprob: -10.876693725585938
    5. 'i' → logprob: -12.501693725585938
    6. '4' → logprob: -12.814193725585938
    7. '+' → logprob: -13.001693725585938
    8. '   ' → logprob: -13.189193725585938
    9. ')' → logprob: -14.376693725585938
    10. 'n' → logprob: -14.501693725585938

Token 654: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2520548403263092
    2. ')' → logprob: -1.5020548105239868
    3. '))
' → logprob: -9.252055168151855
    4. ')
' → logprob: -11.127055168151855
    5. '),' → logprob: -12.627055168151855
    6. ')))' → logprob: -13.002055168151855
    7. ',' → logprob: -13.752055168151855
    8. ')}' → logprob: -13.877055168151855
    9. ')")' → logprob: -13.877055168151855
    10. ''))' → logprob: -14.252055168151855

Token 655: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 656: ' ans' (ID: 3345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25369521975517273
    2. ' for' → logprob: -2.378695249557495
    3. 'ans' (adapté à ' ans') → logprob: -3.003695249557495
    4. '<|end|>' → logprob: -3.628695249557495
    5. ' 
' → logprob: -4.003695011138916
    6. ' ans' → logprob: -4.128695011138916
    7. ' ' → logprob: -4.753695011138916
    8. '
' → logprob: -5.628695011138916
    9. '  
' → logprob: -6.628695011138916
    10. '(ans' → logprob: -6.753695011138916

Token 657: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04221096634864807
    2. '.' → logprob: -3.2922110557556152
    3. ',' → logprob: -6.667211055755615
    4. '.extend' → logprob: -6.667211055755615
    5. '<|end|>' → logprob: -6.792211055755615
    6. ' +=' → logprob: -9.167210578918457
    7. '[' → logprob: -9.542210578918457
    8. '+=' → logprob: -9.792210578918457
    9. '.pop' → logprob: -10.292210578918457
    10. ' =' → logprob: -10.542210578918457

Token 658: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0031962506473064423
    2. '(' → logprob: -5.7531962394714355
    3. '   ' → logprob: -12.003196716308594
    4. ' (' → logprob: -12.253196716308594
    5. ' ' → logprob: -12.503196716308594
    6. ' ((' → logprob: -12.628196716308594
    7. '(
' → logprob: -15.128196716308594
    8. '```' → logprob: -15.878196716308594
    9. '``' → logprob: -17.128196716308594
    10. '(('' → logprob: -17.503196716308594

Token 659: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.010868002660572529
    2. '1' → logprob: -4.760868072509766
    3. '2' → logprob: -6.135868072509766
    4. '(' → logprob: -9.635868072509766
    5. ' ' → logprob: -11.135868072509766
    6. '   ' → logprob: -12.385868072509766
    7. '4' → logprob: -13.385868072509766
    8. '0' → logprob: -14.760868072509766
    9. '  ' → logprob: -15.135868072509766
    10. ' (' → logprob: -15.823368072509766

Token 660: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001317871210630983
    2. '3' → logprob: -9.250131607055664
    3. ' ,' → logprob: -10.875131607055664
    4. '4' → logprob: -12.250131607055664
    5. ',i' → logprob: -12.875131607055664
    6. ',
' → logprob: -13.500131607055664
    7. ',n' → logprob: -13.500131607055664
    8. '```' → logprob: -13.625131607055664
    9. '1' → logprob: -13.750131607055664
    10. '   ' → logprob: -14.125131607055664

Token 661: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.024176938459277153
    2. '))' → logprob: -3.774176836013794
    3. ',' → logprob: -7.899177074432373
    4. ' +' → logprob: -8.149176597595215
    5. '))
' → logprob: -9.149176597595215
    6. '//' → logprob: -9.524176597595215
    7. ',n' → logprob: -10.399176597595215
    8. '-' → logprob: -11.149176597595215
    9. '   ' → logprob: -12.024176597595215
    10. '+n' → logprob: -12.149176597595215

Token 662: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004505484830588102
    2. '4' → logprob: -5.629505634307861
    3. '3' → logprob: -7.379505634307861
    4. '2' → logprob: -8.254505157470703
    5. ' ' → logprob: -12.504505157470703
    6. '
' → logprob: -12.629505157470703
    7. '```' → logprob: -12.692005157470703
    8. '   ' → logprob: -12.754505157470703
    9. 'i' → logprob: -13.379505157470703
    10. '``' → logprob: -14.129505157470703

Token 663: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004285553470253944
    2. ')' → logprob: -5.5042853355407715
    3. '))
' → logprob: -8.50428581237793
    4. '),' → logprob: -13.62928581237793
    5. ')))' → logprob: -14.00428581237793
    6. '))
' → logprob: -14.75428581237793
    7. ')
' → logprob: -15.00428581237793
    8. '))

' → logprob: -15.00428581237793
    9. ' ))' → logprob: -15.12928581237793
    10. ''))' → logprob: -15.37928581237793

Token 664: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07722523808479309
    2. ' for' → logprob: -3.0772252082824707
    3. '   ' → logprob: -3.8272252082824707
    4. '```' → logprob: -5.952225208282471
    5. '<|end|>' → logprob: -6.077225208282471
    6. '
' → logprob: -7.952225208282471
    7. '	for' → logprob: -8.077225685119629
    8. '    
' → logprob: -8.077225685119629
    9. '  
' → logprob: -8.952225685119629
    10. 'ans' → logprob: -9.452225685119629

Token 665: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02072826400399208
    2. ' for' → logprob: -4.02072811126709
    3. 'ans' → logprob: -6.14572811126709
    4. 'n' → logprob: -8.77072811126709
    5. ' ans' → logprob: -9.02072811126709
    6. '```' → logprob: -9.52072811126709
    7. 'i' → logprob: -10.77072811126709
    8. '
' → logprob: -10.77072811126709
    9. '<|end|>' → logprob: -11.52072811126709
    10. '	ans' → logprob: -12.14572811126709

Token 666: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07890751957893372
    2. ' i' → logprob: -2.5789074897766113
    3. '(i' → logprob: -12.07890796661377
    4. 'j' → logprob: -12.45390796661377
    5. '	i' → logprob: -13.20390796661377
    6. '```' → logprob: -13.57890796661377
    7. 'x' → logprob: -13.57890796661377
    8. ' ' → logprob: -14.20390796661377
    9. 'a' → logprob: -14.45390796661377
    10. 'k' → logprob: -15.20390796661377

Token 667: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1605624556541443
    2. 'in' → logprob: -1.910562515258789
    3. '(' → logprob: -8.285562515258789
    4. 'range' → logprob: -10.035562515258789
    5. ' ' → logprob: -11.410562515258789
    6. '   ' → logprob: -11.660562515258789
    7. '3' → logprob: -12.535562515258789
    8. ' range' → logprob: -12.660562515258789
    9. ',' → logprob: -12.785562515258789
    10. ' i' → logprob: -12.910562515258789

Token 668: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001706367009319365
    2. ' range' → logprob: -6.376706600189209
    3. '(range' → logprob: -12.75170612335205
    4. ' ' → logprob: -15.25170612335205
    5. '(' → logprob: -15.37670612335205
    6. '4' → logprob: -15.62670612335205
    7. '[' → logprob: -15.87670612335205
    8. '   ' → logprob: -15.87670612335205
    9. '  ' → logprob: -16.001707077026367
    10. '
' → logprob: -16.126707077026367

Token 669: '(' (ID: 7)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.1510627418756485
    2. '3' → logprob: -2.0260627269744873
    3. '(' → logprob: -4.901062965393066
    4. '1' → logprob: -7.776062965393066
    5. ' ' → logprob: -8.151062965393066
    6. '2' → logprob: -9.151062965393066
    7. '   ' → logprob: -9.401062965393066
    8. 'n' → logprob: -12.526062965393066
    9. '  ' → logprob: -12.651062965393066
    10. '(n' → logprob: -12.901062965393066

Token 670: '1' (ID: 16)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.2288459837436676
    2. '3' → logprob: -1.6038459539413452
    3. '1' → logprob: -5.978846073150635
    4. '2' → logprob: -7.103846073150635
    5. 'n' → logprob: -10.228845596313477
    6. ' ' → logprob: -11.228845596313477
    7. '   ' → logprob: -11.353845596313477
    8. '5' → logprob: -12.353845596313477
    9. '
' → logprob: -12.916345596313477
    10. '0' → logprob: -13.978845596313477

Token 671: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23151905834674835
    2. '4' → logprob: -1.856519103050232
    3. '3' → logprob: -3.2315189838409424
    4. ',n' → logprob: -4.8565192222595215
    5. ' ,' → logprob: -6.8565192222595215
    6. '2' → logprob: -7.1065192222595215
    7. 'n' → logprob: -7.4815192222595215
    8. '(' → logprob: -7.8565192222595215
    9. '1' → logprob: -8.981518745422363
    10. '(n' → logprob: -9.231518745422363

Token 672: '3' (ID: 18)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003651741426438093
    2. '3' → logprob: -5.8786516189575195
    3. '100' → logprob: -8.00365161895752
    4. '2' → logprob: -8.75365161895752
    5. ' n' → logprob: -8.87865161895752
    6. '(n' → logprob: -9.37865161895752
    7. '(' → logprob: -9.75365161895752
    8. ' ' → logprob: -10.50365161895752
    9. '10' → logprob: -11.12865161895752
    10. '
' → logprob: -12.12865161895752

Token 673: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7274754643440247
    2. '):' → logprob: -1.3524754047393799
    3. '+' → logprob: -1.6024754047393799
    4. ',' → logprob: -3.35247540473938
    5. ',n' → logprob: -4.102475643157959
    6. ' +' → logprob: -7.227475643157959
    7. '1' → logprob: -7.352475643157959
    8. '+n' → logprob: -7.477475643157959
    9. ' ):
' → logprob: -7.727475643157959
    10. '2' → logprob: -7.727475643157959

Token 674: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009048822335898876
    2. '   ' → logprob: -4.759048938751221
    3. ',' → logprob: -8.634048461914062
    4. '<|end|>' → logprob: -8.884048461914062
    5. '	' → logprob: -10.259048461914062
    6. '	   ' → logprob: -10.884048461914062
    7. ':' → logprob: -11.259048461914062
    8. '     ' → logprob: -11.634048461914062
    9. '        
' → logprob: -12.134048461914062
    10. ':
' → logprob: -12.509048461914062

Token 675: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.2309349924325943
    2. 'ans' (adapté à ' ans') → logprob: -1.980934977531433
    3. '       ' → logprob: -3.2309350967407227
    4. '   ' → logprob: -4.355935096740723
    5. '	ans' → logprob: -4.355935096740723
    6. ' for' → logprob: -6.230935096740723
    7. 'for' → logprob: -7.230935096740723
    8. '(ans' → logprob: -8.855935096740723
    9. 'print' → logprob: -9.480935096740723
    10. '           ' → logprob: -10.230935096740723

Token 676: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0017152780201286077
    2. '.' → logprob: -6.751715183258057
    3. 'append' → logprob: -8.751715660095215
    4. ',' → logprob: -9.126715660095215
    5. '[-' → logprob: -9.626715660095215
    6. '<|end|>' → logprob: -10.376715660095215
    7. '.pop' → logprob: -10.501715660095215
    8. '   ' → logprob: -10.876715660095215
    9. '().' → logprob: -11.001715660095215
    10. '       ' → logprob: -11.001715660095215

Token 677: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.002844460541382432
    2. '(' → logprob: -6.127844333648682
    3. ' ((' → logprob: -8.00284481048584
    4. ' ' → logprob: -9.37784481048584
    5. '   ' → logprob: -9.37784481048584
    6. ' (' → logprob: -9.37784481048584
    7. '(i' → logprob: -9.75284481048584
    8. '(
' → logprob: -11.87784481048584
    9. '  ' → logprob: -12.87784481048584
    10. '(n' → logprob: -13.37784481048584

Token 678: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04408305883407593
    2. '3' → logprob: -3.5440831184387207
    3. 'n' → logprob: -4.544083118438721
    4. '   ' → logprob: -6.544083118438721
    5. '2' → logprob: -7.169083118438721
    6. ' i' → logprob: -7.544083118438721
    7. '1' → logprob: -8.169082641601562
    8. '4' → logprob: -8.669082641601562
    9. '(i' → logprob: -8.669082641601562
    10. ' ' → logprob: -9.294082641601562

Token 679: '+n' (ID: 87683)
  Prédit: ',i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.37703418731689453
    2. '+' → logprob: -1.2520341873168945
    3. ',' → logprob: -3.8770341873168945
    4. ',n' → logprob: -5.0020341873168945
    5. ' +' → logprob: -8.252034187316895
    6. ' ,' → logprob: -8.877034187316895
    7. '+i' → logprob: -9.377034187316895
    8. ',C' → logprob: -9.627034187316895
    9. 'i' → logprob: -10.377034187316895
    10. '+n' → logprob: -10.377034187316895

Token 680: ',i' (ID: 25032)
  Prédit: ',i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.013849414885044098
    2. ',' → logprob: -4.638849258422852
    3. ' ,' → logprob: -6.263849258422852
    4. '+' → logprob: -6.388849258422852
    5. '+i' → logprob: -8.763849258422852
    6. '   ' → logprob: -8.888849258422852
    7. ',n' → logprob: -9.513849258422852
    8. ' ' → logprob: -10.263849258422852
    9. 'i' → logprob: -11.138849258422852
    10. ' +' → logprob: -11.513849258422852

Token 681: '+n' (ID: 87683)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03370920941233635
    2. '+n' → logprob: -3.4087092876434326
    3. ' +' → logprob: -10.033709526062012
    4. '+
' → logprob: -11.783709526062012
    5. '+i' → logprob: -12.033709526062012
    6. ')+' → logprob: -13.033709526062012
    7. 'n' → logprob: -14.533709526062012
    8. '))' → logprob: -14.658709526062012
    9. '+)' → logprob: -14.658709526062012
    10. ')' → logprob: -14.783709526062012

Token 682: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0022232949268072844
    2. '))' → logprob: -6.252223491668701
    3. ' +' → logprob: -8.752223014831543
    4. '+
' → logprob: -9.877223014831543
    5. ')' → logprob: -10.002223014831543
    6. '+)' → logprob: -11.377223014831543
    7. '1' → logprob: -12.127223014831543
    8. '-' → logprob: -12.627223014831543
    9. '   ' → logprob: -12.627223014831543
    10. ')+' → logprob: -12.877223014831543

Token 683: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011474833445390686
    2. '3' → logprob: -9.750114440917969
    3. '2' → logprob: -10.625114440917969
    4. ' ' → logprob: -10.625114440917969
    5. '   ' → logprob: -13.750114440917969
    6. '4' → logprob: -13.812614440917969
    7. ')' → logprob: -14.125114440917969
    8. '))' → logprob: -14.312614440917969
    9. 'i' → logprob: -14.500114440917969
    10. '```' → logprob: -14.562614440917969

Token 684: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00031282080453820527
    2. '))' → logprob: -8.375312805175781
    3. ')
' → logprob: -9.500312805175781
    4. '())' → logprob: -13.625312805175781
    5. ')")' → logprob: -13.750312805175781
    6. ' )' → logprob: -14.000312805175781
    7. ')}' → logprob: -14.000312805175781
    8. '   ' → logprob: -14.250312805175781
    9. ')`' → logprob: -14.875312805175781
    10. ')\' → logprob: -15.000312805175781

Token 685: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 686: ' u' (ID: 337)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2569905519485474
    2. ' ans' → logprob: -1.5069905519485474
    3. 'ans' → logprob: -1.6319905519485474
    4. ' for' → logprob: -2.131990432739258
    5. '   ' → logprob: -3.006990432739258
    6. '<|end|>' → logprob: -3.506990432739258
    7. '(ans' → logprob: -3.506990432739258
    8. '```' → logprob: -4.006990432739258
    9. 'n' → logprob: -4.131990432739258
    10. ' ' → logprob: -5.006990432739258

Token 687: ' =' (ID: 314)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8159092664718628
    2. ' =' → logprob: -1.3159092664718628
    3. '=' → logprob: -1.6909092664718628
    4. 'n' → logprob: -3.6909093856811523
    5. 's' → logprob: -3.8159093856811523
    6. 'se' → logprob: -4.065909385681152
    7. 'sed' → logprob: -4.690909385681152
    8. 'ser' → logprob: -4.815909385681152
    9. 'ntil' → logprob: -5.690909385681152
    10. 'nit' → logprob: -5.690909385681152

Token 688: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2720069885253906
    2. '4' → logprob: -1.5220069885253906
    3. ' ' → logprob: -5.147006988525391
    4. '[' → logprob: -5.397006988525391
    5. '2' → logprob: -5.772006988525391
    6. '1' → logprob: -5.897006988525391
    7. '0' → logprob: -6.897006988525391
    8. '{' → logprob: -7.022006988525391
    9. '[]' → logprob: -7.022006988525391
    10. '5' → logprob: -8.27200698852539

Token 689: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4373040497303009
    2. '[' → logprob: -2.0623040199279785
    3. 'set' → logprob: -2.4373040199279785
    4. '{' → logprob: -2.9373040199279785
    5. '1' → logprob: -3.5623040199279785
    6. 'n' → logprob: -4.4373040199279785
    7. '4' → logprob: -4.4373040199279785
    8. '2' → logprob: -4.5623040199279785
    9. 'default' → logprob: -5.1873040199279785
    10. '[n' → logprob: -5.4373040199279785

Token 690: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 691: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 692: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010868002660572529
    2. 'u' → logprob: -5.135868072509766
    3. ' for' → logprob: -5.385868072509766
    4. 'n' → logprob: -9.385868072509766
    5. 'i' → logprob: -9.510868072509766
    6. 'while' → logprob: -9.760868072509766
    7. 'v' → logprob: -10.635868072509766
    8. '
' → logprob: -11.010868072509766
    9. '```' → logprob: -11.260868072509766
    10. 'c' → logprob: -11.635868072509766

Token 693: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.057156752794981
    2. '=' → logprob: -3.057156801223755
    3. 'ef' → logprob: -5.057156562805176
    4. ' ' → logprob: -6.807156562805176
    5. ',' → logprob: -8.682156562805176
    6. '   ' → logprob: -8.807156562805176
    7. 'f' → logprob: -8.807156562805176
    8. 'e' → logprob: -8.932156562805176
    9. 'for' → logprob: -9.182156562805176
    10. '  ' → logprob: -9.307156562805176

Token 694: ' ' (ID: 220)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.6740332841873169
    2. '1' → logprob: -1.549033284187317
    3. ' ' → logprob: -2.5490331649780273
    4. '2' → logprob: -2.6740331649780273
    5. 'n' → logprob: -2.9240331649780273
    6. '{' → logprob: -4.299033164978027
    7. '[' → logprob: -4.299033164978027
    8. ' {}' → logprob: -4.424033164978027
    9. '0' → logprob: -4.799033164978027
    10. '3' → logprob: -4.924033164978027

Token 695: '1' (ID: 16)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.7781341075897217
    2. '1' → logprob: -1.9031341075897217
    3. '[' → logprob: -2.2781341075897217
    4. '2' → logprob: -2.2781341075897217
    5. 'n' → logprob: -2.4031341075897217
    6. '{' → logprob: -3.2781341075897217
    7. '[n' → logprob: -4.028134346008301
    8. ' ' → logprob: -4.653134346008301
    9. '3' → logprob: -5.153134346008301
    10. '0' → logprob: -5.153134346008301

Token 696: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22735372185707092
    2. '
' → logprob: -2.227353811264038
    3. '<|end|>' → logprob: -3.102353811264038
    4. 'for' → logprob: -4.477353572845459
    5. '   ' → logprob: -4.977353572845459
    6. ',' → logprob: -5.102353572845459
    7. ' ' → logprob: -5.102353572845459
    8. ' +' → logprob: -5.602353572845459
    9. ' for' → logprob: -6.227353572845459
    10. '  ' → logprob: -6.227353572845459

Token 697: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.542268991470337
    2. '
' → logprob: -1.667268991470337
    3. ' ' → logprob: -1.667268991470337
    4. '+' → logprob: -2.167268991470337
    5. 'for' → logprob: -2.292268991470337
    6. '   ' → logprob: -2.292268991470337
    7. '<|end|>' → logprob: -3.042268991470337
    8. 'u' → logprob: -4.417268753051758
    9. ' 
' → logprob: -4.667268753051758
    10. '  ' → logprob: -5.292268753051758

Token 698: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.1209906339645386
    2. 'u' → logprob: -1.2459906339645386
    3. ' for' → logprob: -1.2459906339645386
    4. ' u' → logprob: -3.245990753173828
    5. '   ' → logprob: -4.120990753173828
    6. '+' → logprob: -4.245990753173828
    7. 'd' → logprob: -5.120990753173828
    8. ' while' → logprob: -5.120990753173828
    9. 'n' → logprob: -5.370990753173828
    10. 'while' → logprob: -5.620990753173828

Token 699: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.043796367943286896
    2. 'range' → logprob: -4.168796539306641
    3. '_' → logprob: -4.418796539306641
    4. ' i' → logprob: -5.043796539306641
    5. 'u' → logprob: -5.918796539306641
    6. ' range' → logprob: -6.293796539306641
    7. '3' → logprob: -6.418796539306641
    8. 'n' → logprob: -7.293796539306641
    9. 'x' → logprob: -7.793796539306641
    10. '4' → logprob: -8.04379653930664

Token 700: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0453651137650013
    2. 'in' → logprob: -3.17036509513855
    3. ',' → logprob: -6.545365333557129
    4. '(' → logprob: -8.420365333557129
    5. 'range' → logprob: -8.420365333557129
    6. 'n' → logprob: -8.920365333557129
    7. '2' → logprob: -9.795365333557129
    8. '1' → logprob: -9.920365333557129
    9. ' ' → logprob: -9.920365333557129
    10. '3' → logprob: -10.170365333557129

Token 701: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0018483203602954745
    2. ' range' → logprob: -6.376848220825195
    3. '(' → logprob: -9.251848220825195
    4. '[' → logprob: -10.751848220825195
    5. '(range' → logprob: -10.876848220825195
    6. '4' → logprob: -12.376848220825195
    7. '3' → logprob: -13.126848220825195
    8. 'u' → logprob: -14.126848220825195
    9. 're' → logprob: -14.751848220825195
    10. '	range' → logprob: -14.751848220825195

Token 702: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1189284399151802
    2. '4' → logprob: -2.6189284324645996
    3. '3' → logprob: -3.2439284324645996
    4. '2' → logprob: -8.868928909301758
    5. '1' → logprob: -10.118928909301758
    6. '5' → logprob: -10.368928909301758
    7. '6' → logprob: -12.368928909301758
    8. '7' → logprob: -12.618928909301758
    9. ' ' → logprob: -12.743928909301758
    10. ',' → logprob: -12.868928909301758

Token 703: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0904601439833641
    2. '3' → logprob: -2.4654600620269775
    3. '5' → logprob: -7.340460300445557
    4. '1' → logprob: -7.715460300445557
    5. '2' → logprob: -8.215459823608398
    6. '6' → logprob: -9.465459823608398
    7. '7' → logprob: -10.215459823608398
    8. ' ' → logprob: -11.090459823608398
    9. 'n' → logprob: -11.840459823608398
    10. '0' → logprob: -12.340459823608398

Token 704: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011612414382398129
    2. ',n' → logprob: -4.636612415313721
    3. '3' → logprob: -6.636612415313721
    4. ' ,' → logprob: -8.011611938476562
    5. ',u' → logprob: -9.261611938476562
    6. '2' → logprob: -10.386611938476562
    7. '4' → logprob: -11.386611938476562
    8. '6' → logprob: -11.636611938476562
    9. ',d' → logprob: -11.886611938476562
    10. '1' → logprob: -11.886611938476562

Token 705: '//' (ID: 393)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02440754510462284
    2. '-' → logprob: -4.274407386779785
    3. '):' → logprob: -5.274407386779785
    4. ',' → logprob: -6.024407386779785
    5. '):
' → logprob: -6.649407386779785
    6. ' +' → logprob: -7.149407386779785
    7. ' -' → logprob: -8.649407386779785
    8. '   ' → logprob: -9.899407386779785
    9. '1' → logprob: -10.024407386779785
    10. '+,' → logprob: -10.149407386779785

Token 706: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1805323362350464
    2. '2' → logprob: -2.055532455444336
    3. '1' → logprob: -3.305532455444336
    4. ' ' → logprob: -8.055532455444336
    5. '+' → logprob: -9.930532455444336
    6. 'd' → logprob: -10.180532455444336
    7. '4' → logprob: -10.680532455444336
    8. '6' → logprob: -11.555532455444336
    9. 'u' → logprob: -11.555532455444336
    10. '```' → logprob: -12.180532455444336

Token 707: '+n' (ID: 87683)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05941972881555557
    2. '):' → logprob: -3.059419631958008
    3. '):
' → logprob: -4.934419631958008
    4. ' +' → logprob: -6.559419631958008
    5. ',' → logprob: -6.684419631958008
    6. ' ):' → logprob: -8.059419631958008
    7. '*' → logprob: -9.184419631958008
    8. '+:' → logprob: -9.309419631958008
    9. '-' → logprob: -9.684419631958008
    10. ':' → logprob: -10.059419631958008

Token 708: '%' (ID: 4)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2747669816017151
    2. '):' → logprob: -1.6497669219970703
    3. '):
' → logprob: -3.2747669219970703
    4. ',' → logprob: -5.64976692199707
    5. '-' → logprob: -5.89976692199707
    6. '1' → logprob: -6.89976692199707
    7. ' +' → logprob: -7.02476692199707
    8. ' ):' → logprob: -7.64976692199707
    9. '   ' → logprob: -7.89976692199707
    10. '+d' → logprob: -7.89976692199707

Token 709: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1828860342502594
    2. '2' → logprob: -2.4328861236572266
    3. '1' → logprob: -2.5578861236572266
    4. ' ' → logprob: -6.432886123657227
    5. '+' → logprob: -8.557886123657227
    6. '4' → logprob: -10.682886123657227
    7. '0' → logprob: -10.682886123657227
    8. '```' → logprob: -11.682886123657227
    9. '   ' → logprob: -11.682886123657227
    10. ')' → logprob: -11.807886123657227

Token 710: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3673021197319031
    2. '+' → logprob: -1.4923021793365479
    3. '):
' → logprob: -2.617302179336548
    4. ',' → logprob: -5.367301940917969
    5. ' ):' → logprob: -6.367301940917969
    6. ' +' → logprob: -7.117301940917969
    7. '1' → logprob: -7.617301940917969
    8. '-' → logprob: -7.742301940917969
    9. '   ' → logprob: -8.117301940917969
    10. '2' → logprob: -8.742301940917969

Token 711: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5866018533706665
    2. '   ' → logprob: -0.8366018533706665
    3. ' ' → logprob: -5.711601734161377
    4. ' u' → logprob: -6.336601734161377
    5. '    ' → logprob: -6.711601734161377
    6. ',' → logprob: -6.961601734161377
    7. '<|end|>' → logprob: -7.336601734161377
    8. '	u' → logprob: -7.711601734161377
    9. ',u' → logprob: -7.961601734161377
    10. '     ' → logprob: -8.086602210998535

Token 712: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.31018275022506714
    2. ' ans' → logprob: -1.435182809829712
    3. '   ' → logprob: -4.310182571411133
    4. 'u' → logprob: -4.685182571411133
    5. 'if' → logprob: -5.935182571411133
    6. ' u' → logprob: -6.685182571411133
    7. '	ans' → logprob: -7.685182571411133
    8. ' if' → logprob: -7.810182571411133
    9. 'd' → logprob: -7.810182571411133
    10. 'a' → logprob: -8.685182571411133

Token 713: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00026336227892898023
    2. '.' → logprob: -8.250263214111328
    3. 'append' → logprob: -14.000263214111328
    4. '.ap' → logprob: -14.125263214111328
    5. '.app' → logprob: -15.125263214111328
    6. ' .' → logprob: -16.125263214111328
    7. '.Append' → logprob: -16.625263214111328
    8. '.extend' → logprob: -16.875263214111328
    9. '.a' → logprob: -18.250263214111328
    10. '.add' → logprob: -18.625263214111328

Token 714: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.004153906833380461
    2. '(' → logprob: -5.754153728485107
    3. '(u' → logprob: -7.004153728485107
    4. '   ' → logprob: -10.379154205322266
    5. ' ((' → logprob: -11.004154205322266
    6. ' (' → logprob: -11.254154205322266
    7. ' ' → logprob: -12.879154205322266
    8. '(
' → logprob: -13.004154205322266
    9. '(i' → logprob: -14.004154205322266
    10. '(d' → logprob: -14.379154205322266

Token 715: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.34313055872917175
    2. 'd' → logprob: -1.3431305885314941
    3. 'i' → logprob: -3.718130588531494
    4. '3' → logprob: -5.968130588531494
    5. 'n' → logprob: -6.968130588531494
    6. '2' → logprob: -6.968130588531494
    7. '   ' → logprob: -8.093130111694336
    8. '(u' → logprob: -8.968130111694336
    9. ' u' → logprob: -9.343130111694336
    10. '1' → logprob: -10.218130111694336

Token 716: ',' (ID: 11)
  Prédit: ',i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -1.4173213243484497
    2. '+i' → logprob: -1.6673213243484497
    3. ',u' → logprob: -1.6673213243484497
    4. '+n' → logprob: -1.6673213243484497
    5. '+' → logprob: -2.29232120513916
    6. ',n' → logprob: -2.91732120513916
    7. ',' → logprob: -3.79232120513916
    8. '+d' → logprob: -5.04232120513916
    9. ',d' → logprob: -5.29232120513916
    10. ' +' → logprob: -6.54232120513916

Token 717: '2' (ID: 17)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.45839497447013855
    2. 'd' → logprob: -1.208395004272461
    3. 'v' → logprob: -2.708395004272461
    4. 'i' → logprob: -7.083395004272461
    5. '2' → logprob: -7.583395004272461
    6. 'n' → logprob: -8.083395004272461
    7. ' u' → logprob: -8.083395004272461
    8. ' d' → logprob: -9.208395004272461
    9. '   ' → logprob: -9.458395004272461
    10. '3' → logprob: -10.333395004272461

Token 718: '*i' (ID: 51147)
  Prédit: '*u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*u' → logprob: -0.19215047359466553
    2. '*d' → logprob: -2.567150592803955
    3. '*n' → logprob: -2.817150592803955
    4. '*' → logprob: -3.942150592803955
    5. '*i' → logprob: -4.067150592803955
    6. 'u' → logprob: -7.317150592803955
    7. ' *' → logprob: -7.942150592803955
    8. 'd' → logprob: -8.192150115966797
    9. '+' → logprob: -8.942150115966797
    10. '*(' → logprob: -9.442150115966797

Token 719: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.29536089301109314
    2. '-' → logprob: -1.4203609228134155
    3. '+' → logprob: -4.795361042022705
    4. '))
' → logprob: -5.795361042022705
    5. ' ))' → logprob: -6.420361042022705
    6. ' -' → logprob: -7.670361042022705
    7. ')' → logprob: -8.670360565185547
    8. '   ' → logprob: -9.295360565185547
    9. '),' → logprob: -9.295360565185547
    10. ' ' → logprob: -9.670360565185547

Token 720: '       ' (ID: 309)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.39602845907211304
    2. '       ' → logprob: -2.396028518676758
    3. '   ' → logprob: -2.521028518676758
    4. 'u' → logprob: -2.896028518676758
    5. '<|end|>' → logprob: -3.271028518676758
    6. ' 
' → logprob: -3.771028518676758
    7. ' ' → logprob: -4.396028518676758
    8. '    
' → logprob: -5.646028518676758
    9. ',u' → logprob: -5.771028518676758
    10. ',' → logprob: -5.896028518676758

Token 721: ' ans' (ID: 3345)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.13109494745731354
    2. 'd' → logprob: -2.5060949325561523
    3. 'ans' (adapté à ' ans') → logprob: -3.2560949325561523
    4. 'if' → logprob: -6.506094932556152
    5. ' u' → logprob: -7.506094932556152
    6. '       ' → logprob: -8.506094932556152
    7. '   ' → logprob: -8.881094932556152
    8. ' ans' → logprob: -8.881094932556152
    9. ' d' → logprob: -9.631094932556152
    10. '	u' → logprob: -10.381094932556152

Token 722: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0032728989608585835
    2. '.' → logprob: -5.753273010253906
    3. '.extend' → logprob: -10.503273010253906
    4. '[-' → logprob: -10.628273010253906
    5. 'append' → logprob: -10.753273010253906
    6. '.pop' → logprob: -11.628273010253906
    7. '+=' → logprob: -12.628273010253906
    8. '[' → logprob: -13.128273010253906
    9. '.app' → logprob: -13.503273010253906
    10. ' .' → logprob: -14.003273010253906

Token 723: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00022570860164705664
    2. '(' → logprob: -8.750226020812988
    3. '(u' → logprob: -10.000226020812988
    4. ' ((' → logprob: -10.875226020812988
    5. ' (' → logprob: -13.500226020812988
    6. '(
' → logprob: -14.250226020812988
    7. '(('' → logprob: -15.000226020812988
    8. ' ' → logprob: -15.375226020812988
    9. '   ' → logprob: -16.375225067138672
    10. '(("' → logprob: -16.500225067138672

Token 724: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.21723811328411102
    2. 'u' → logprob: -1.8422380685806274
    3. '2' → logprob: -3.717238187789917
    4. 'i' → logprob: -4.842237949371338
    5. 'n' → logprob: -6.342237949371338
    6. 'v' → logprob: -6.717237949371338
    7. '   ' → logprob: -7.967237949371338
    8. '3' → logprob: -8.092238426208496
    9. '1' → logprob: -8.842238426208496
    10. ' d' → logprob: -9.217238426208496

Token 725: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49800005555152893
    2. ',n' → logprob: -2.123000144958496
    3. ',d' → logprob: -2.248000144958496
    4. ',u' → logprob: -2.373000144958496
    5. '+' → logprob: -2.998000144958496
    6. ',i' → logprob: -4.123000144958496
    7. '+n' → logprob: -5.873000144958496
    8. '+i' → logprob: -5.998000144958496
    9. '+d' → logprob: -6.498000144958496
    10. ' +' → logprob: -9.248000144958496

Token 726: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010183829814195633
    2. 'u' → logprob: -5.010183811187744
    3. 'n' → logprob: -6.135183811187744
    4. 'i' → logprob: -7.885183811187744
    5. 'd' → logprob: -7.885183811187744
    6. ' ' → logprob: -8.885184288024902
    7. '3' → logprob: -9.010184288024902
    8. '(' → logprob: -9.260184288024902
    9. '1' → logprob: -9.760184288024902
    10. '
' → logprob: -10.572684288024902

Token 727: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.3134138584136963
    2. 'i' → logprob: -1.3134138584136963
    3. '*' → logprob: -9.813413619995117
    4. '*u' → logprob: -9.813413619995117
    5. ' i' → logprob: -11.813413619995117
    6. '
' → logprob: -11.813413619995117
    7. '
' → logprob: -11.938413619995117
    8. ' *' → logprob: -12.188413619995117
    9. 'u' → logprob: -12.438413619995117
    10. '	i' → logprob: -13.063413619995117

Token 728: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.010942763648927212
    2. '))' → logprob: -4.6359429359436035
    3. '-' → logprob: -7.6359429359436035
    4. ' +' → logprob: -8.135942459106445
    5. '))
' → logprob: -8.635942459106445
    6. '+n' → logprob: -8.885942459106445
    7. '+
' → logprob: -10.260942459106445
    8. '+d' → logprob: -10.635942459106445
    9. '+i' → logprob: -11.635942459106445
    10. ' ))' → logprob: -11.760942459106445

Token 729: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00037561915814876556
    2. '-' → logprob: -8.375375747680664
    3. '2' → logprob: -9.625375747680664
    4. ' ' → logprob: -10.250375747680664
    5. 'i' → logprob: -11.250375747680664
    6. 'u' → logprob: -11.250375747680664
    7. '))' → logprob: -11.375375747680664
    8. ')' → logprob: -13.125375747680664
    9. '+' → logprob: -13.875375747680664
    10. ' -' → logprob: -14.250375747680664

Token 730: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12992236018180847
    2. '))' → logprob: -2.379922389984131
    3. ')
' → logprob: -3.879922389984131
    4. '))
' → logprob: -4.754922389984131
    5. ')\' → logprob: -12.379921913146973
    6. ')
' → logprob: -12.879921913146973
    7. ')')
' → logprob: -13.129921913146973
    8. '   ' → logprob: -13.754921913146973
    9. ')")' → logprob: -13.754921913146973
    10. ')`
' → logprob: -14.129921913146973

Token 731: '       ' (ID: 309)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -1.177371621131897
    2. ' ' → logprob: -1.427371621131897
    3. 'u' → logprob: -1.677371621131897
    4. '<|end|>' → logprob: -2.0523715019226074
    5. ' 
' → logprob: -2.8023715019226074
    6. ' d' → logprob: -4.302371501922607
    7. '   ' → logprob: -4.552371501922607
    8. 'd' → logprob: -4.552371501922607
    9. '	u' → logprob: -4.927371501922607
    10. '```' → logprob: -5.052371501922607

Token 732: ' ans' (ID: 3345)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.04102012515068054
    2. ' u' → logprob: -3.291020154953003
    3. '   ' → logprob: -6.166019916534424
    4. '	u' → logprob: -7.166019916534424
    5. '       ' → logprob: -9.416020393371582
    6. 'd' → logprob: -11.291020393371582
    7. ' ' → logprob: -12.666020393371582
    8. '    ' → logprob: -13.666020393371582
    9. ' d' → logprob: -13.791020393371582
    10. '  ' → logprob: -14.166020393371582

Token 733: '.append' (ID: 3709)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3197287619113922
    2. '.append' → logprob: -1.3197287321090698
    3. '.' → logprob: -5.569728851318359
    4. ' +=' → logprob: -6.319728851318359
    5. '=' → logprob: -7.944728851318359
    6. 'append' → logprob: -8.69472885131836
    7. '+' → logprob: -9.06972885131836
    8. '+=(' → logprob: -10.06972885131836
    9. '.=' → logprob: -10.19472885131836
    10. '++' → logprob: -10.69472885131836

Token 734: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0001737431448418647
    2. '(u' → logprob: -9.125173568725586
    3. '(' → logprob: -9.875173568725586
    4. '(('' → logprob: -11.625173568725586
    5. '(("' → logprob: -13.750173568725586
    6. '(d' → logprob: -13.750173568725586
    7. '(((' → logprob: -14.125173568725586
    8. '(([' → logprob: -14.375173568725586
    9. '(
' → logprob: -15.375173568725586
    10. ' ((' → logprob: -16.000173568725586

Token 735: '2' (ID: 17)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.47867053747177124
    2. '2' → logprob: -1.228670597076416
    3. 'd' → logprob: -3.353670597076416
    4. 'n' → logprob: -3.603670597076416
    5. 'i' → logprob: -3.853670597076416
    6. '1' → logprob: -5.978670597076416
    7. '3' → logprob: -7.353670597076416
    8. '0' → logprob: -8.478670120239258
    9. '(' → logprob: -8.603670120239258
    10. '(u' → logprob: -9.041170120239258

Token 736: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.0006565583753399551
    2. '*u' → logprob: -7.750656604766846
    3. 'i' → logprob: -8.875656127929688
    4. '*' → logprob: -9.500656127929688
    5. '*d' → logprob: -11.625656127929688
    6. ' *' → logprob: -13.500656127929688
    7. '*(' → logprob: -15.125656127929688
    8. '*j' → logprob: -15.500656127929688
    9. '**' → logprob: -16.750656127929688
    10. 'u' → logprob: -16.875656127929688

Token 737: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5469887256622314
    2. ',' → logprob: -0.9219887256622314
    3. '+' → logprob: -4.546988487243652
    4. ',d' → logprob: -4.796988487243652
    5. ' ' → logprob: -6.171988487243652
    6. ' ,' → logprob: -7.421988487243652
    7. ' -' → logprob: -7.421988487243652
    8. '2' → logprob: -8.046988487243652
    9. ',u' → logprob: -8.546988487243652
    10. ',n' → logprob: -8.546988487243652

Token 738: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.015197942033410072
    2. 'u' → logprob: -4.76519775390625
    3. 'd' → logprob: -6.01519775390625
    4. '(' → logprob: -6.89019775390625
    5. ' ' → logprob: -7.01519775390625
    6. 'n' → logprob: -7.26519775390625
    7. '   ' → logprob: -7.64019775390625
    8. '3' → logprob: -7.76519775390625
    9. '1' → logprob: -8.01519775390625
    10. '4' → logprob: -10.14019775390625

Token 739: '*i' (ID: 51147)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006545356009155512
    2. '*i' → logprob: -7.375654697418213
    3. 'u' → logprob: -11.750654220581055
    4. ''i' → logprob: -12.250654220581055
    5. '	i' → logprob: -12.500654220581055
    6. ' i' → logprob: -12.750654220581055
    7. '(i' → logprob: -12.750654220581055
    8. '_i' → logprob: -13.250654220581055
    9. 'n' → logprob: -13.750654220581055
    10. '
' → logprob: -14.375654220581055

Token 740: '+n' (ID: 87683)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006309492513537407
    2. '-' → logprob: -5.131309509277344
    3. ' +' → logprob: -8.256309509277344
    4. ')' → logprob: -9.631309509277344
    5. '1' → logprob: -11.381309509277344
    6. ')+' → logprob: -11.506309509277344
    7. '))' → logprob: -11.631309509277344
    8. ' -' → logprob: -11.881309509277344
    9. '+)' → logprob: -12.006309509277344
    10. '+
' → logprob: -12.506309509277344

Token 741: '+' (ID: 10)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6741055250167847
    2. ')' → logprob: -1.2991055250167847
    3. '+' → logprob: -1.5491055250167847
    4. '),' → logprob: -6.799105644226074
    5. '))
' → logprob: -7.299105644226074
    6. ',' → logprob: -7.424105644226074
    7. '-' → logprob: -7.549105644226074
    8. ' )' → logprob: -7.924105644226074
    9. '   ' → logprob: -8.049105644226074
    10. ')))' → logprob: -8.299105644226074

Token 742: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0054475548677146435
    2. ')' → logprob: -6.0054473876953125
    3. '0' → logprob: -6.2554473876953125
    4. 'd' → logprob: -8.255447387695312
    5. 'u' → logprob: -8.380447387695312
    6. 'i' → logprob: -8.880447387695312
    7. '2' → logprob: -8.880447387695312
    8. '))' → logprob: -10.005447387695312
    9. '-' → logprob: -10.130447387695312
    10. ' ' → logprob: -10.130447387695312

Token 743: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1661021113395691
    2. ')' → logprob: -1.9161021709442139
    3. '))
' → logprob: -5.166101932525635
    4. ')
' → logprob: -9.041102409362793
    5. ')))' → logprob: -11.416102409362793
    6. '       ' → logprob: -12.416102409362793
    7. '   ' → logprob: -12.541102409362793
    8. '))

' → logprob: -12.916102409362793
    9. '))
' → logprob: -12.916102409362793
    10. ')`' → logprob: -13.166102409362793

Token 744: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9698327779769897
    2. '<|end|>' → logprob: -1.0948327779769897
    3. '       ' → logprob: -2.5948328971862793
    4. '   ' → logprob: -2.9698328971862793
    5. ' d' → logprob: -2.9698328971862793
    6. ')' → logprob: -3.4698328971862793
    7. ' u' → logprob: -3.5948328971862793
    8. '(' → logprob: -4.844832897186279
    9. 'd' → logprob: -4.969832897186279
    10. ' )' → logprob: -5.094832897186279

Token 745: ' ans' (ID: 3345)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0357787162065506
    2. ' d' → logprob: -4.285778522491455
    3. 'ans' (adapté à ' ans') → logprob: -4.410778522491455
    4. 'u' → logprob: -5.535778522491455
    5. '(d' → logprob: -6.910778522491455
    6. '(' → logprob: -7.035778522491455
    7. '(u' → logprob: -7.285778522491455
    8. '(ans' → logprob: -7.285778522491455
    9. ' ans' → logprob: -7.285778522491455
    10. '       ' → logprob: -7.785778522491455

Token 746: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.47495681833243e-05
    2. '.' → logprob: -10.750024795532227
    3. 'append' → logprob: -13.000024795532227
    4. ' .' → logprob: -14.125024795532227
    5. '.app' → logprob: -16.500024795532227
    6. '.extend' → logprob: -17.500024795532227
    7. '```' → logprob: -17.500024795532227
    8. '           ' → logprob: -18.125024795532227
    9. '.Append' → logprob: -18.250024795532227
    10. ').' → logprob: -18.250024795532227

Token 747: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00593117019161582
    2. '(' → logprob: -5.130931377410889
    3. '   ' → logprob: -13.50593090057373
    4. ' ((' → logprob: -14.88093090057373
    5. ' ' → logprob: -15.50593090057373
    6. '(
' → logprob: -15.75593090057373
    7. '(u' → logprob: -15.75593090057373
    8. ' (' → logprob: -16.005931854248047
    9. '       ' → logprob: -16.880931854248047
    10. '```' → logprob: -17.130931854248047

Token 748: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029903218150138855
    2. '(' → logprob: -3.5299031734466553
    3. 'd' → logprob: -9.279903411865234
    4. ' ' → logprob: -10.779903411865234
    5. '   ' → logprob: -11.154903411865234
    6. '1' → logprob: -11.529903411865234
    7. ' (' → logprob: -13.154903411865234
    8. '(n' → logprob: -13.717403411865234
    9. '
' → logprob: -13.904903411865234
    10. 'n' → logprob: -13.967403411865234

Token 749: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.0003971839905716479
    2. 'i' → logprob: -7.875397205352783
    3. '*u' → logprob: -11.000396728515625
    4. '*' → logprob: -16.125396728515625
    5. '_i' → logprob: -16.625396728515625
    6. ' *' → logprob: -17.000396728515625
    7. '*(' → logprob: -17.125396728515625
    8. '	i' → logprob: -17.500396728515625
    9. '
' → logprob: -17.625396728515625
    10. ''i' → logprob: -17.875396728515625

Token 750: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06337163597345352
    2. '-' → logprob: -3.4383716583251953
    3. '+n' → logprob: -4.188371658325195
    4. ',' → logprob: -4.563371658325195
    5. ',n' → logprob: -5.688371658325195
    6. '+,' → logprob: -9.688371658325195
    7. '1' → logprob: -9.813371658325195
    8. ' +' → logprob: -10.188371658325195
    9. '+d' → logprob: -10.563371658325195
    10. 'n' → logprob: -10.938371658325195

Token 751: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022594700567424297
    2. 'n' → logprob: -8.750226020812988
    3. '2' → logprob: -10.000226020812988
    4. ' ' → logprob: -11.500226020812988
    5. '+' → logprob: -12.125226020812988
    6. '0' → logprob: -13.000226020812988
    7. '+n' → logprob: -14.375226020812988
    8. '   ' → logprob: -14.500226020812988
    9. ' n' → logprob: -14.625226020812988
    10. '(n' → logprob: -14.625226020812988

Token 752: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031186718842945993
    2. ' ,' → logprob: -9.250311851501465
    3. ',(' → logprob: -9.375311851501465
    4. ',
' → logprob: -9.500311851501465
    5. ',n' → logprob: -11.125311851501465
    6. '2' → logprob: -11.375311851501465
    7. '`,' → logprob: -11.625311851501465
    8. ',i' → logprob: -13.000311851501465
    9. ',d' → logprob: -13.000311851501465
    10. ')' → logprob: -13.375311851501465

Token 753: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003500050224829465
    2. ' ' → logprob: -8.125349998474121
    3. '3' → logprob: -10.500349998474121
    4. '1' → logprob: -12.000349998474121
    5. 'n' → logprob: -12.375349998474121
    6. '
' → logprob: -12.625349998474121
    7. 'd' → logprob: -12.625349998474121
    8. 'i' → logprob: -13.250349998474121
    9. '   ' → logprob: -13.625349998474121
    10. '```' → logprob: -13.625349998474121

Token 754: '*i' (ID: 51147)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018987655639648438
    2. '*i' → logprob: -4.018987655639648
    3. '
' → logprob: -7.518987655639648
    4. '_i' → logprob: -8.893987655639648
    5. '	i' → logprob: -9.768987655639648
    6. '```' → logprob: -10.893987655639648
    7. '(i' → logprob: -11.018987655639648
    8. ''i' → logprob: -11.018987655639648
    9. ')i' → logprob: -11.143987655639648
    10. ' i' → logprob: -11.643987655639648

Token 755: '+n' (ID: 87683)
  Prédit: '+n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+n' → logprob: -0.06208588555455208
    2. '+' → logprob: -2.8120858669281006
    3. ' +' → logprob: -9.43708610534668
    4. '+
' → logprob: -11.06208610534668
    5. '++' → logprob: -11.93708610534668
    6. ')' → logprob: -12.43708610534668
    7. ')+' → logprob: -12.93708610534668
    8. 'n' → logprob: -13.68708610534668
    9. '<n' → logprob: -13.93708610534668
    10. '1' → logprob: -14.06208610534668

Token 756: '))
' (ID: 2210)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005166754592210054
    2. ')' → logprob: -5.880166530609131
    3. '2' → logprob: -6.505166530609131
    4. '1' → logprob: -7.130166530609131
    5. '```' → logprob: -11.005167007446289
    6. '+)' → logprob: -11.130167007446289
    7. ' +' → logprob: -11.505167007446289
    8. '))' → logprob: -11.755167007446289
    9. ')+' → logprob: -12.505167007446289
    10. '+n' → logprob: -13.255167007446289

Token 757: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 758: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.46156927943229675
    2. 'u' (adapté à ' u') → logprob: -1.9615693092346191
    3. ' d' → logprob: -2.086569309234619
    4. '\n' → logprob: -2.711569309234619
    5. ' 
' → logprob: -4.336569309234619
    6. 'd' → logprob: -4.336569309234619
    7. ' ' → logprob: -5.211569309234619
    8. 'n' → logprob: -6.336569309234619
    9. '"\' → logprob: -7.086569309234619
    10. ')' → logprob: -7.211569309234619

Token 759: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.18039488792419434
    2. '=' → logprob: -1.8053948879241943
    3. ' +=' → logprob: -7.555395126342773
    4. ' =' → logprob: -9.805395126342773
    5. '=u' → logprob: -10.805395126342773
    6. '+' → logprob: -11.055395126342773
    7. ',' → logprob: -11.555395126342773
    8. '=i' → logprob: -11.680395126342773
    9. '+=(' → logprob: -12.055395126342773
    10. '*=' → logprob: -12.305395126342773

Token 760: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007475639577023685
    2. 'n' → logprob: -8.375747680664062
    3. 'ans' → logprob: -8.625747680664062
    4. 'u' → logprob: -8.875747680664062
    5. ' ' → logprob: -8.875747680664062
    6. 'i' → logprob: -10.875747680664062
    7. '   ' → logprob: -11.250747680664062
    8. '(' → logprob: -11.875747680664062
    9. '1' → logprob: -12.000747680664062
    10. '3' → logprob: -13.125747680664062

Token 761: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0023230796214193106
    2. 'i' → logprob: -7.252323150634766
    3. 'u' → logprob: -7.502323150634766
    4. 'ans' → logprob: -8.002323150634766
    5. 'n' → logprob: -8.002323150634766
    6. 'd' → logprob: -8.252323150634766
    7. '3' → logprob: -10.252323150634766
    8. '(' → logprob: -10.502323150634766
    9. ' ' → logprob: -10.627323150634766
    10. '1' → logprob: -11.002323150634766

Token 762: '*i' (ID: 51147)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3948739767074585
    2. '*i' → logprob: -1.1448739767074585
    3. 'u' → logprob: -5.519874095916748
    4. '*u' → logprob: -5.644874095916748
    5. '
' → logprob: -8.89487361907959
    6. ' i' → logprob: -9.39487361907959
    7. '	i' → logprob: -10.01987361907959
    8. '[i' → logprob: -10.01987361907959
    9. 'd' → logprob: -10.14487361907959
    10. '<|end|>' → logprob: -11.51987361907959

Token 763: '+n' (ID: 87683)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.40013816952705383
    2. ' d' → logprob: -1.4001381397247314
    3. '<|end|>' → logprob: -3.2751381397247314
    4. '	d' → logprob: -4.2751383781433105
    5. ',d' → logprob: -4.4001383781433105
    6. '
' → logprob: -4.6501383781433105
    7. '+d' → logprob: -5.6501383781433105
    8. ' ' → logprob: -6.5251383781433105
    9. '+' → logprob: -6.6501383781433105
    10. '   ' → logprob: -7.0251383781433105

Token 764: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02238052897155285
    2. '+d' → logprob: -4.272380352020264
    3. 'd' → logprob: -5.397380352020264
    4. '<|end|>' → logprob: -6.147380352020264
    5. ' +' → logprob: -7.522380352020264
    6. '   ' → logprob: -8.397380828857422
    7. '
' → logprob: -9.022380828857422
    8. 'u' → logprob: -9.147380828857422
    9. '       ' → logprob: -9.147380828857422
    10. ' d' → logprob: -9.272380828857422

Token 765: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.480199954239652e-05
    2. ' ' → logprob: -10.000064849853516
    3. '2' → logprob: -11.000064849853516
    4. '   ' → logprob: -14.625064849853516
    5. '<|end|>' → logprob: -14.625064849853516
    6. '3' → logprob: -14.750064849853516
    7. '0' → logprob: -15.125064849853516
    8. '+' → logprob: -15.125064849853516
    9. 'u' → logprob: -15.875064849853516
    10. '<|end|>' → logprob: -16.250064849853516

Token 766: '
' (ID: 198)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.46718525886535645
    2. 'd' → logprob: -1.0921852588653564
    3. '	d' → logprob: -4.092185020446777
    4. '<|end|>' → logprob: -4.467185020446777
    5. ',d' → logprob: -5.842185020446777
    6. '   ' → logprob: -6.092185020446777
    7. ' ' → logprob: -6.217185020446777
    8. ')d' → logprob: -7.217185020446777
    9. ')' → logprob: -7.967185020446777
    10. '```' → logprob: -7.967185020446777

Token 767: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 768: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -4.35837464465294e-05
    2. '       ' → logprob: -10.500043869018555
    3. '   ' → logprob: -11.750043869018555
    4. ' d' → logprob: -12.250043869018555
    5. 'v' → logprob: -13.250043869018555
    6. 'u' → logprob: -14.250043869018555
    7. '	d' → logprob: -15.250043869018555
    8. '     ' → logprob: -16.125043869018555
    9. '           ' → logprob: -16.125043869018555
    10. '2' → logprob: -16.125043869018555

Token 769: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5765095949172974
    2. '=' → logprob: -0.8265095949172974
    3. ' +=' → logprob: -7.826509475708008
    4. '+=' → logprob: -8.701509475708008
    5. ' ' → logprob: -13.326509475708008
    6. ')' → logprob: -14.451509475708008
    7. '=u' → logprob: -14.451509475708008
    8. '=n' → logprob: -14.451509475708008
    9. ',' → logprob: -15.326509475708008
    10. '<|end|>' → logprob: -15.826509475708008

Token 770: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00043102685594931245
    2. ' ' → logprob: -7.750431060791016
    3. '(' → logprob: -15.750431060791016
    4. '   ' → logprob: -16.000431060791016
    5. '  ' → logprob: -17.500431060791016
    6. '    ' → logprob: -17.875431060791016
    7. '`' → logprob: -18.750431060791016
    8. ' (' → logprob: -18.750431060791016
    9. '	' → logprob: -19.000431060791016
    10. '1' → logprob: -19.062931060791016

Token 771: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003360582049936056
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.000335693359375
    4. '(' → logprob: -16.375335693359375
    5. '  ' → logprob: -16.500335693359375
    6. '1' → logprob: -17.062835693359375
    7. ' (' → logprob: -17.437835693359375
    8. 'n' → logprob: -17.500335693359375
    9. 'i' → logprob: -17.562835693359375
    10. 'u' → logprob: -18.250335693359375

Token 772: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.0009346862207166851
    2. 'i' → logprob: -7.000934600830078
    3. '*' → logprob: -11.375934600830078
    4. '*u' → logprob: -11.500934600830078
    5. '*d' → logprob: -14.125934600830078
    6. ' *' → logprob: -15.375934600830078
    7. '```' → logprob: -15.625934600830078
    8. '*n' → logprob: -15.625934600830078
    9. 'd' → logprob: -16.125934600830078
    10. '(i' → logprob: -16.250934600830078

Token 773: '+n' (ID: 87683)
  Prédit: '+n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+n' → logprob: -0.0002690840628929436
    2. '+' → logprob: -8.750268936157227
    3. ' +' → logprob: -9.750268936157227
    4. 'n' → logprob: -9.875268936157227
    5. '
' → logprob: -14.875268936157227
    6. '+
' → logprob: -15.125268936157227
    7. '<n' → logprob: -16.500268936157227
    8. '-n' → logprob: -17.500268936157227
    9. ' ' → logprob: -17.750268936157227
    10. ' n' → logprob: -17.750268936157227

Token 774: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005711443373002112
    2. '+n' → logprob: -8.125571250915527
    3. '1' → logprob: -8.500571250915527
    4. '<|end|>' → logprob: -10.000571250915527
    5. ' +' → logprob: -10.750571250915527
    6. '0' → logprob: -13.250571250915527
    7. '```' → logprob: -13.375571250915527
    8. 'n' → logprob: -14.875571250915527
    9. '10' → logprob: -14.875571250915527
    10. '<|end|>' → logprob: -15.875571250915527

Token 775: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 776: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03909420594573021
    2. 'print' → logprob: -3.2890942096710205
    3. 'return' → logprob: -7.414093971252441
    4. 'u' → logprob: -8.414093971252441
    5. 'if' (adapté à ' if') → logprob: -8.789093971252441
    6. 'ans' → logprob: -9.914093971252441
    7. ' for' → logprob: -11.539093971252441
    8. 'n' → logprob: -12.414093971252441
    9. '```' → logprob: -12.789093971252441
    10. '   ' → logprob: -12.914093971252441

Token 777: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18433906137943268
    2. ' n' → logprob: -1.9343390464782715
    3. 'u' → logprob: -4.6843390464782715
    4. 'd' → logprob: -5.6843390464782715
    5. '(n' → logprob: -5.9343390464782715
    6. ' u' → logprob: -6.3093390464782715
    7. '__' → logprob: -6.5593390464782715
    8. ' __' → logprob: -7.0593390464782715
    9. 'len' → logprob: -7.0593390464782715
    10. ' not' → logprob: -7.1843390464782715

Token 778: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.05573490262031555
    2. '>' → logprob: -3.555734872817993
    3. '==' → logprob: -4.055735111236572
    4. ' ==' → logprob: -5.680735111236572
    5. '<' → logprob: -7.055735111236572
    6. ' %' → logprob: -7.055735111236572
    7. ' >' → logprob: -7.180735111236572
    8. '>=' → logprob: -7.430735111236572
    9. '!=' → logprob: -7.430735111236572
    10. '*' → logprob: -8.055734634399414

Token 779: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11016049981117249
    2. ' ' → logprob: -2.6101605892181396
    3. '3' → logprob: -4.2351603507995605
    4. '0' → logprob: -4.2351603507995605
    5. '1' → logprob: -6.3601603507995605
    6. '4' → logprob: -9.735160827636719
    7. '```' → logprob: -10.485160827636719
    8. '6' → logprob: -11.735160827636719
    9. '!=' → logprob: -13.235160827636719
    10. '==' → logprob: -13.485160827636719

Token 780: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3958384692668915
    2. ' ==' → logprob: -1.2708384990692139
    3. ':' → logprob: -3.270838499069214
    4. ' !=' → logprob: -5.520838260650635
    5. '!=' → logprob: -5.645838260650635
    6. ':
' → logprob: -7.395838260650635
    7. '{' → logprob: -10.270838737487793
    8. '=' → logprob: -10.270838737487793
    9. ' :' → logprob: -10.895838737487793
    10. '>' → logprob: -10.895838737487793

Token 781: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012998805614188313
    2. '       ' → logprob: -6.751299858093262
    3. ' ans' → logprob: -9.251299858093262
    4. '	ans' → logprob: -11.126299858093262
    5. ':' → logprob: -11.626299858093262
    6. ':
' → logprob: -12.376299858093262
    7. '(ans' → logprob: -13.876299858093262
    8. '<|end|>' → logprob: -13.876299858093262
    9. '  ' → logprob: -14.251299858093262
    10. ',' → logprob: -14.251299858093262

Token 782: ' print' (ID: 2123)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.14061793684959412
    2. 'ans' → logprob: -2.140617847442627
    3. '   ' → logprob: -5.015617847442627
    4. ' u' → logprob: -6.390617847442627
    5. 'u' → logprob: -6.390617847442627
    6. 'print' (adapté à ' print') → logprob: -6.765617847442627
    7. ' for' → logprob: -6.890617847442627
    8. 'for' → logprob: -7.765617847442627
    9. ' print' → logprob: -8.140618324279785
    10. '	ans' → logprob: -8.640618324279785

Token 783: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.003916088026016951
    2. '(' → logprob: -6.003916263580322
    3. '(len' → logprob: -7.253916263580322
    4. '(n' → logprob: -7.378916263580322
    5. '(-' → logprob: -9.628915786743164
    6. '(u' → logprob: -11.128915786743164
    7. '('' → logprob: -11.503915786743164
    8. '((' → logprob: -12.128915786743164
    9. '("\' → logprob: -12.253915786743164
    10. '(*' → logprob: -12.628915786743164

Token 784: 'Yes' (ID: 13022)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.07773226499557495
    2. 'Yes' → logprob: -2.7027323246002197
    3. '"No' → logprob: -5.327732086181641
    4. '"' → logprob: -7.077732086181641
    5. '2' → logprob: -7.202732086181641
    6. '-' → logprob: -8.07773208618164
    7. '3' → logprob: -8.20273208618164
    8. 'n' → logprob: -8.45273208618164
    9. '(No' → logprob: -9.07773208618164
    10. '4' → logprob: -9.57773208618164

Token 785: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18288087844848633
    2. ')
' → logprob: -1.9328808784484863
    3. '")' → logprob: -3.9328808784484863
    4. '")
' → logprob: -6.182880878448486
    5. '   ' → logprob: -7.432880878448486
    6. '')' → logprob: -10.182880401611328
    7. ')
' → logprob: -10.432880401611328
    8. ')")
' → logprob: -10.682880401611328
    9. '```' → logprob: -10.682880401611328
    10. '')
' → logprob: -10.932880401611328

Token 786: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14496779441833496
    2. '    
' → logprob: -3.644967794418335
    3. '```' → logprob: -3.644967794418335
    4. '       ' → logprob: -3.769967794418335
    5. ')' → logprob: -4.019968032836914
    6. '<|end|>' → logprob: -4.519968032836914
    7. 'for' → logprob: -5.019968032836914
    8. '(' → logprob: -5.519968032836914
    9. '  
' → logprob: -6.019968032836914
    10. '        
' → logprob: -6.394968032836914

Token 787: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2957596778869629
    2. ' for' → logprob: -1.920759677886963
    3. 'print' → logprob: -2.670759677886963
    4. '   ' → logprob: -3.295759677886963
    5. ' print' → logprob: -6.420759677886963
    6. 'u' → logprob: -7.295759677886963
    7. ' u' → logprob: -7.420759677886963
    8. 'return' → logprob: -8.670759201049805
    9. 'ans' → logprob: -9.420759201049805
    10. ' ans' → logprob: -9.545759201049805

Token 788: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7086251974105835
    2. 'x' → logprob: -1.0836251974105835
    3. 'u' → logprob: -2.708625316619873
    4. 'a' → logprob: -2.708625316619873
    5. 'e' → logprob: -3.458625316619873
    6. '*u' → logprob: -7.208625316619873
    7. '*i' → logprob: -7.958625316619873
    8. '*' → logprob: -8.208624839782715
    9. 'v' → logprob: -8.208624839782715
    10. '*x' → logprob: -8.208624839782715

Token 789: ',j' (ID: 22712)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6459037065505981
    2. ',' → logprob: -1.2709037065505981
    3. ' in' → logprob: -2.1459035873413086
    4. ',v' → logprob: -3.0209035873413086
    5. ',u' → logprob: -4.270903587341309
    6. ',n' → logprob: -4.895903587341309
    7. ',j' → logprob: -5.895903587341309
    8. ',in' → logprob: -6.895903587341309
    9. ' ,' → logprob: -7.020903587341309
    10. ',e' → logprob: -7.770903587341309

Token 790: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17976224422454834
    2. 'in' → logprob: -1.8047622442245483
    3. 'n' → logprob: -12.55476188659668
    4. ' ' → logprob: -12.55476188659668
    5. '
' → logprob: -13.05476188659668
    6. ')' → logprob: -13.30476188659668
    7. '	in' → logprob: -13.55476188659668
    8. ' 
' → logprob: -14.17976188659668
    9. '  ' → logprob: -14.30476188659668
    10. '   ' → logprob: -14.67976188659668

Token 791: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.7848862373502925e-05
    2. ' ans' → logprob: -10.500027656555176
    3. 'range' → logprob: -15.375027656555176
    4. '(ans' → logprob: -16.750028610229492
    5. '
' → logprob: -18.125028610229492
    6. '	ans' → logprob: -19.375028610229492
    7. '   ' → logprob: -19.750028610229492
    8. 'a' → logprob: -20.250028610229492
    9. 'answer' → logprob: -20.375028610229492
    10. '_ans' → logprob: -21.125028610229492

Token 792: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007458019070327282
    2. '):' → logprob: -5.507458209991455
    3. ':
' → logprob: -5.882458209991455
    4. ')' → logprob: -8.382457733154297
    5. '():' → logprob: -8.757457733154297
    6. ' in' → logprob: -9.632457733154297
    7. '):
' → logprob: -10.007457733154297
    8. '():
' → logprob: -10.382457733154297
    9. ' :' → logprob: -11.757457733154297
    10. '<|end|>' → logprob: -11.757457733154297

Token 793: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0073355380445718765
    2. '       ' → logprob: -6.007335662841797
    3. ' print' → logprob: -6.257335662841797
    4. ')' → logprob: -7.132335662841797
    5. ':' → logprob: -7.757335662841797
    6. '):
' → logprob: -7.882335662841797
    7. '   ' → logprob: -8.507335662841797
    8. 'print' → logprob: -8.632335662841797
    9. '		' → logprob: -8.632335662841797
    10. ':
' → logprob: -9.132335662841797

Token 794: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.2519674599170685
    2. 'print' (adapté à ' print') → logprob: -1.501967430114746
    3. '           ' → logprob: -10.376967430114746
    4. '```' → logprob: -13.001967430114746
    5. '	print' → logprob: -13.626967430114746
    6. '       ' → logprob: -13.751967430114746
    7. '
' → logprob: -14.001967430114746
    8. '   ' → logprob: -14.126967430114746
    9. '\n' → logprob: -14.251967430114746
    10. ' ' → logprob: -16.626968383789062

Token 795: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.833878508885391e-05
    2. '(' → logprob: -10.875038146972656
    3. 'i' → logprob: -11.625038146972656
    4. ' i' → logprob: -12.250038146972656
    5. '(f' → logprob: -12.375038146972656
    6. '(j' → logprob: -14.375038146972656
    7. '(*' → logprob: -15.375038146972656
    8. '()' → logprob: -15.500038146972656
    9. '*i' → logprob: -16.250038146972656
    10. '("' → logprob: -16.625038146972656

Token 796: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.018516752868890762
    2. ',' → logprob: -4.018516540527344
    3. ' ,' → logprob: -8.143516540527344
    4. ' j' → logprob: -9.518516540527344
    5. ',end' → logprob: -13.018516540527344
    6. 'j' → logprob: -15.018516540527344
    7. ',i' → logprob: -16.393516540527344
    8. ')' → logprob: -16.518516540527344
    9. ' ' → logprob: -17.268516540527344
    10. ',b' → logprob: -17.393516540527344

Token 797: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003862245939671993
    2. ')
' → logprob: -7.8753862380981445
    3. '<|end|>' → logprob: -12.500386238098145
    4. ')return' → logprob: -13.875386238098145
    5. '")' → logprob: -14.500386238098145
    6. ')#' → logprob: -15.750386238098145
    7. '')' → logprob: -15.875386238098145
    8. ')n' → logprob: -15.875386238098145
    9. ')}' → logprob: -16.375385284423828
    10. '),' → logprob: -16.500385284423828

Token 798: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 799: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0021195695735514164
    2. '   ' → logprob: -6.252119541168213
    3. ' else' → logprob: -8.627120018005371
    4. 'return' → logprob: -11.752120018005371
    5. '	else' → logprob: -13.252120018005371
    6. 'elif' → logprob: -13.627120018005371
    7. '```' → logprob: -14.127120018005371
    8. ')' → logprob: -16.252119064331055
    9. '#else' → logprob: -17.252119064331055
    10. '       ' → logprob: -17.252119064331055

Token 800: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16049230098724365
    2. ':' → logprob: -2.410492420196533
    3. '       ' → logprob: -2.910492420196533
    4. '   ' → logprob: -5.535492420196533
    5. ' :
' → logprob: -10.160491943359375
    6. '):
' → logprob: -11.285491943359375
    7. '```' → logprob: -11.535491943359375
    8. 'print' → logprob: -11.660491943359375
    9. ':

' → logprob: -12.035491943359375
    10. ':
' → logprob: -12.160491943359375

Token 801: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010955691104754806
    2. '   ' → logprob: -7.001095771789551
    3. 'print' → logprob: -8.62609577178955
    4. ' print' → logprob: -13.00109577178955
    5. '```' → logprob: -13.37609577178955
    6. '           ' → logprob: -14.87609577178955
    7. '	print' → logprob: -14.87609577178955
    8. '{
' → logprob: -16.376094818115234
    9. '	   ' → logprob: -17.001094818115234
    10. '     ' → logprob: -17.001094818115234

Token 802: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4070361852645874
    2. ' print' → logprob: -1.1570361852645874
    3. ' u' → logprob: -5.782036304473877
    4. 'u' → logprob: -5.782036304473877
    5. 'p' → logprob: -6.282036304473877
    6. ' for' → logprob: -6.407036304473877
    7. '   ' → logprob: -6.532036304473877
    8. ' p' → logprob: -6.657036304473877
    9. 'd' → logprob: -6.657036304473877
    10. ' d' → logprob: -7.157036304473877

Token 803: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.10281773656606674
    2. '.pop' → logprob: -2.3528177738189697
    3. '.' → logprob: -6.102817535400391
    4. '=' → logprob: -8.47781753540039
    5. '.sort' → logprob: -9.97781753540039
    6. '.extend' → logprob: -10.35281753540039
    7. ' =' → logprob: -10.85281753540039
    8. ' .' → logprob: -11.22781753540039
    9. 'append' → logprob: -11.22781753540039
    10. '.reverse' → logprob: -11.35281753540039

Token 804: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.1398757123970427e-05
    2. '(' → logprob: -11.500011444091797
    3. '(n' → logprob: -14.875011444091797
    4. '((-' → logprob: -15.000011444091797
    5. '(((' → logprob: -15.250011444091797
    6. '(ans' → logprob: -16.000011444091797
    7. '   ' → logprob: -17.000011444091797
    8. '(('' → logprob: -17.250011444091797
    9. '(("' → logprob: -17.500011444091797
    10. '(
' → logprob: -18.125011444091797

Token 805: 'n' (ID: 77)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9075289964675903
    2. '3' → logprob: -1.5325289964675903
    3. 'n' → logprob: -1.6575289964675903
    4. '2' → logprob: -1.7825289964675903
    5. '(' → logprob: -4.907528877258301
    6. 'u' → logprob: -5.407528877258301
    7. '4' → logprob: -5.532528877258301
    8. '(n' → logprob: -5.657528877258301
    9. 'd' → logprob: -6.657528877258301
    10. '6' → logprob: -8.0325288772583

Token 806: '-' (ID: 12)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.2863427698612213
    2. '+' → logprob: -1.411342740058899
    3. '+n' → logprob: -5.661342620849609
    4. ',' → logprob: -6.911342620849609
    5. '-' → logprob: -8.41134262084961
    6. '//' → logprob: -8.66134262084961
    7. '*' → logprob: -8.91134262084961
    8. ' +' → logprob: -9.91134262084961
    9. '   ' → logprob: -10.66134262084961
    10. 'n' → logprob: -10.78634262084961

Token 807: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.034671951085329056
    2. '2' → logprob: -3.4096720218658447
    3. '3' → logprob: -7.409671783447266
    4. 'n' → logprob: -8.034671783447266
    5. '4' → logprob: -9.659671783447266
    6. '   ' → logprob: -11.909671783447266
    7. '(n' → logprob: -11.909671783447266
    8. '0' → logprob: -12.159671783447266
    9. '(' → logprob: -12.284671783447266
    10. ' ' → logprob: -13.159671783447266

Token 808: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.010121517814695835
    2. ',' → logprob: -4.6351213455200195
    3. ' ,' → logprob: -8.38512134552002
    4. '+' → logprob: -9.51012134552002
    5. '   ' → logprob: -11.01012134552002
    6. '+n' → logprob: -11.51012134552002
    7. ',(' → logprob: -11.76012134552002
    8. ',j' → logprob: -12.13512134552002
    9. ' +' → logprob: -12.63512134552002
    10. ',m' → logprob: -12.76012134552002

Token 809: '))
' (ID: 2210)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.6390929818153381
    2. '+' → logprob: -0.7640929818153381
    3. ',' → logprob: -5.764092922210693
    4. '-' → logprob: -6.389092922210693
    5. '))' → logprob: -7.014092922210693
    6. '+n' → logprob: -7.639092922210693
    7. '))
' → logprob: -9.514093399047852
    8. ',+' → logprob: -9.639093399047852
    9. '   ' → logprob: -10.139093399047852
    10. ' +' → logprob: -11.514093399047852

Token 810: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3801252841949463
    2. 'print' → logprob: -1.5051252841949463
    3. '   ' → logprob: -2.3801252841949463
    4. 'for' → logprob: -6.755125045776367
    5. 'ans' → logprob: -8.880125045776367
    6. '
' → logprob: -9.130125045776367
    7. ',' → logprob: -9.630125045776367
    8. '<|end|>' → logprob: -10.005125045776367
    9. '```' → logprob: -10.380125045776367
    10. '	ans' → logprob: -10.880125045776367

Token 811: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012510620290413499
    2. 'ans' → logprob: -7.251251220703125
    3. 'u' → logprob: -8.001251220703125
    4. 'for' (adapté à ' for') → logprob: -8.626251220703125
    5. 'if' → logprob: -11.376251220703125
    6. '       ' → logprob: -12.001251220703125
    7. 'n' → logprob: -12.876251220703125
    8. 'd' → logprob: -13.501251220703125
    9. 'a' → logprob: -14.001251220703125
    10. '   ' → logprob: -14.251251220703125

Token 812: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00036537862615659833
    2. 'u' → logprob: -8.375365257263184
    3. ' i' → logprob: -9.500365257263184
    4. 'x' → logprob: -10.875365257263184
    5. '(i' → logprob: -11.375365257263184
    6. 'j' → logprob: -11.500365257263184
    7. 'a' → logprob: -12.125365257263184
    8. '   ' → logprob: -12.500365257263184
    9. '(u' → logprob: -12.875365257263184
    10. '_i' → logprob: -13.500365257263184

Token 813: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.21150654554367065
    2. ',n' → logprob: -2.3365066051483154
    3. ',j' → logprob: -2.7115066051483154
    4. 'in' → logprob: -4.211506366729736
    5. ',' → logprob: -4.836506366729736
    6. ',u' → logprob: -6.086506366729736
    7. ',i' → logprob: -6.961506366729736
    8. ' ,' → logprob: -7.836506366729736
    9. '(n' → logprob: -8.461506843566895
    10. 'n' → logprob: -8.711506843566895

Token 814: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08941866457462311
    2. 'ans' → logprob: -2.464418649673462
    3. ' range' → logprob: -8.714418411254883
    4. '[' → logprob: -8.714418411254883
    5. '(ans' → logprob: -10.839418411254883
    6. '(range' → logprob: -11.089418411254883
    7. '(' → logprob: -11.214418411254883
    8. 're' → logprob: -11.589418411254883
    9. 'list' → logprob: -11.714418411254883
    10. ' ans' → logprob: -11.839418411254883

Token 815: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.37149277329444885
    2. '1' → logprob: -1.6214927434921265
    3. '3' → logprob: -2.371492862701416
    4. '(n' → logprob: -4.746492862701416
    5. '4' → logprob: -4.996492862701416
    6. '2' → logprob: -5.871492862701416
    7. 'n' → logprob: -7.246492862701416
    8. '(len' → logprob: -8.871492385864258
    9. '   ' → logprob: -9.871492385864258
    10. '((' → logprob: -10.246492385864258

Token 816: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6518667936325073
    2. '+' → logprob: -0.7768667936325073
    3. ',n' → logprob: -4.276866912841797
    4. ',' → logprob: -6.276866912841797
    5. '+n' → logprob: -6.901866912841797
    6. '//' → logprob: -6.901866912841797
    7. '   ' → logprob: -8.026866912841797
    8. '):
' → logprob: -8.151866912841797
    9. 'n' → logprob: -9.276866912841797
    10. '-n' → logprob: -9.776866912841797

Token 817: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004446851089596748
    2. '   ' → logprob: -5.629446983337402
    3. '           ' → logprob: -7.879446983337402
    4. ' print' → logprob: -7.879446983337402
    5. 'print' → logprob: -9.379446983337402
    6. ' ' → logprob: -13.629446983337402
    7. ' if' → logprob: -13.754446983337402
    8. '```' → logprob: -13.879446983337402
    9. '	print' → logprob: -14.129446983337402
    10. '	       ' → logprob: -15.254446983337402

Token 818: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04661241173744202
    2. '   ' → logprob: -3.421612501144409
    3. ' print' → logprob: -4.42161226272583
    4. 'ans' → logprob: -7.42161226272583
    5. ' ans' → logprob: -8.796612739562988
    6. 'if' (adapté à ' if') → logprob: -9.921612739562988
    7. 'for' → logprob: -10.546612739562988
    8. '       ' → logprob: -11.796612739562988
    9. ' if' → logprob: -11.796612739562988
    10. 'n' → logprob: -12.421612739562988

Token 819: ' p' (ID: 275)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4643959701061249
    2. 'ans' → logprob: -1.2143959999084473
    3. '(i' → logprob: -3.4643959999084473
    4. '(ans' → logprob: -3.7143959999084473
    5. 'not' → logprob: -5.589395999908447
    6. 'a' → logprob: -5.714395999908447
    7. 'p' → logprob: -5.839395999908447
    8. ' ans' → logprob: -6.089395999908447
    9. 'n' → logprob: -6.464395999908447
    10. ' i' → logprob: -6.714395999908447

Token 820: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2246291337069124e-05
    2. '[' → logprob: -11.250021934509277
    3. '```' → logprob: -12.625021934509277
    4. '(i' → logprob: -13.000021934509277
    5. '[n' → logprob: -14.125021934509277
    6. 'i' → logprob: -14.250021934509277
    7. '[
' → logprob: -15.000021934509277
    8. ' [' → logprob: -15.375021934509277
    9. '[p' → logprob: -15.500021934509277
    10. '   ' → logprob: -15.625021934509277

Token 821: ']&' (ID: 140620)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6229482889175415
    2. ']==' → logprob: -0.9979482889175415
    3. ']%' → logprob: -3.372948169708252
    4. ']!=' → logprob: -3.747948169708252
    5. ']&' → logprob: -4.247948169708252
    6. ']<<' → logprob: -5.122948169708252
    7. ']:
' → logprob: -5.497948169708252
    8. ']<' → logprob: -5.997948169708252
    9. ']>' → logprob: -6.372948169708252
    10. ']^' → logprob: -6.497948169708252

Token 822: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00465119956061244
    2. '(n' → logprob: -6.004651069641113
    3. '1' → logprob: -6.629651069641113
    4. ' n' → logprob: -7.629651069641113
    5. '(' → logprob: -8.254651069641113
    6. '2' → logprob: -10.504651069641113
    7. 'mod' → logprob: -11.379651069641113
    8. '   ' → logprob: -11.504651069641113
    9. ' (' → logprob: -11.754651069641113
    10. 'u' → logprob: -12.254651069641113

Token 823: ':
' (ID: 734)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.991264283657074
    2. ' ==' → logprob: -1.4912643432617188
    3. '==' → logprob: -1.8662643432617188
    4. ' and' → logprob: -2.3662643432617188
    5. '<|end|>' → logprob: -2.7412643432617188
    6. ':
' → logprob: -3.7412643432617188
    7. ':' → logprob: -3.8662643432617188
    8. ' &' → logprob: -4.616264343261719
    9. 'and' → logprob: -4.991264343261719
    10. 'n' → logprob: -5.116264343261719

Token 824: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.032886747270822525
    2. ':
' → logprob: -4.032886981964111
    3. '           ' → logprob: -4.782886981964111
    4. ':' → logprob: -6.282886981964111
    5. ' :
' → logprob: -7.157886981964111
    6. '       ' → logprob: -7.657886981964111
    7. '<|end|>' → logprob: -7.657886981964111
    8. ' ==' → logprob: -8.282886505126953
    9. ' and' → logprob: -8.282886505126953
    10. ' n' → logprob: -8.407886505126953

Token 825: ' break' (ID: 2338)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.2949022650718689
    2. ' print' → logprob: -2.1699023246765137
    3. 'print' → logprob: -2.5449023246765137
    4. '           ' → logprob: -3.4199023246765137
    5. 'ans' → logprob: -3.6699023246765137
    6. '               ' → logprob: -6.419902324676514
    7. '(ans' → logprob: -7.294902324676514
    8. ' break' → logprob: -7.669902324676514
    9. '	ans' → logprob: -8.044901847839355
    10. ' u' → logprob: -8.044901847839355

Token 826: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2783136367797852
    2. '[' → logprob: -1.7783136367797852
    3. '<|end|>' → logprob: -2.028313636779785
    4. ')' → logprob: -2.153313636779785
    5. ':' → logprob: -2.903313636779785
    6. '   ' → logprob: -3.028313636779785
    7. ',' → logprob: -3.153313636779785
    8. '(n' → logprob: -3.528313636779785
    9. ' ' → logprob: -4.278313636779785
    10. ':
' → logprob: -4.403313636779785

Token 827: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9344449639320374
    2. '       ' → logprob: -1.3094449043273926
    3. '<|end|>' → logprob: -2.1844449043273926
    4. '[' → logprob: -2.3094449043273926
    5. '   ' → logprob: -3.1844449043273926
    6. ' ' → logprob: -3.6844449043273926
    7. ',' → logprob: -4.934444904327393
    8. '(n' → logprob: -4.934444904327393
    9. '.' → logprob: -5.434444904327393
    10. ' for' → logprob: -5.684444904327393

Token 828: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07957687973976135
    2. '       ' → logprob: -3.0795769691467285
    3. 'ans' (adapté à ' ans') → logprob: -4.3295769691467285
    4. 'for' → logprob: -5.0795769691467285
    5. ' ans' → logprob: -5.2045769691467285
    6. 'n' → logprob: -6.2045769691467285
    7. ' print' → logprob: -6.5795769691467285
    8. 'p' → logprob: -7.3295769691467285
    9. '   ' → logprob: -7.8295769691467285
    10. '           ' → logprob: -8.32957649230957

Token 829: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02376946620643139
    2. '.pop' → logprob: -3.8987693786621094
    3. '[-' → logprob: -5.898769378662109
    4. '.remove' → logprob: -9.02376937866211
    5. ' =' → logprob: -9.27376937866211
    6. '=' → logprob: -9.52376937866211
    7. '[(' → logprob: -9.64876937866211
    8. '[len' → logprob: -10.39876937866211
    9. '.' → logprob: -10.52376937866211
    10. '           ' → logprob: -10.89876937866211

Token 830: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0007304243044927716
    2. '(n' → logprob: -7.750730514526367
    3. '(' → logprob: -8.875730514526367
    4. '(p' → logprob: -9.000730514526367
    5. '(((' → logprob: -10.250730514526367
    6. '(u' → logprob: -14.125730514526367
    7. '((((' → logprob: -15.625730514526367
    8. '(('' → logprob: -16.625730514526367
    9. '(s' → logprob: -17.125730514526367
    10. '(("' → logprob: -17.250730514526367

Token 831: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.673387348651886
    2. 'n' → logprob: -1.6733872890472412
    3. '(' → logprob: -2.173387289047241
    4. '2' → logprob: -2.548387289047241
    5. 'i' → logprob: -3.173387289047241
    6. '1' → logprob: -3.298387289047241
    7. '(n' → logprob: -4.54838752746582
    8. '(p' → logprob: -4.79838752746582
    9. '3' → logprob: -5.04838752746582
    10. '(i' → logprob: -5.79838752746582

Token 832: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006881842389702797
    2. 'i' → logprob: -5.0068817138671875
    3. '[' → logprob: -9.256881713867188
    4. '[n' → logprob: -10.506881713867188
    5. '[p' → logprob: -11.506881713867188
    6. '0' → logprob: -12.381881713867188
    7. '[-' → logprob: -12.381881713867188
    8. '[
' → logprob: -12.881881713867188
    9. '[j' → logprob: -12.881881713867188
    10. '
' → logprob: -13.006881713867188

Token 833: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01217277068644762
    2. 'i' → logprob: -4.637172698974609
    3. ',i' → logprob: -7.137172698974609
    4. '[n' → logprob: -7.762172698974609
    5. '(i' → logprob: -7.887172698974609
    6. '-' → logprob: -8.38717269897461
    7. ',' → logprob: -8.63717269897461
    8. '[' → logprob: -8.88717269897461
    9. '][' → logprob: -9.76217269897461
    10. '],' → logprob: -9.88717269897461

Token 834: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.83542799949646
    2. 'i' → logprob: -1.21042799949646
    3. '0' → logprob: -1.33542799949646
    4. '-' → logprob: -5.835428237915039
    5. 'n' → logprob: -7.085428237915039
    6. '(i' → logprob: -7.585428237915039
    7. '2' → logprob: -8.085428237915039
    8. '(' → logprob: -9.210428237915039
    9. '-i' → logprob: -9.210428237915039
    10. ':i' → logprob: -9.460428237915039

Token 835: ']-' (ID: 27107)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.243411585688591
    2. '[n' → logprob: -1.6184115409851074
    3. 'n' → logprob: -4.868411540985107
    4. ',' → logprob: -6.118411540985107
    5. '[' → logprob: -6.368411540985107
    6. '-' → logprob: -6.618411540985107
    7. '[i' → logprob: -6.868411540985107
    8. '(n' → logprob: -7.243411540985107
    9. ',p' → logprob: -7.493411540985107
    10. '&' → logprob: -7.618411540985107

Token 836: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019656140357255936
    2. 'n' → logprob: -4.394656181335449
    3. '(n' → logprob: -5.894656181335449
    4. 'p' → logprob: -6.019656181335449
    5. '2' → logprob: -6.644656181335449
    6. '(' → logprob: -8.01965618133545
    7. '(p' → logprob: -9.01965618133545
    8. ',n' → logprob: -9.76965618133545
    9. ',' → logprob: -10.14465618133545
    10. '3' → logprob: -10.51965618133545

Token 837: ',' (ID: 11)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.010738637298345566
    2. ',' → logprob: -4.635738849639893
    3. ',p' → logprob: -7.760738849639893
    4. ' ,' → logprob: -8.010738372802734
    5. '+' → logprob: -9.260738372802734
    6. '1' → logprob: -9.635738372802734
    7. '-' → logprob: -11.760738372802734
    8. ',
' → logprob: -11.885738372802734
    9. 'p' → logprob: -12.010738372802734
    10. ' +' → logprob: -12.260738372802734

Token 838: '2' (ID: 17)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.053968049585819244
    2. 'n' → logprob: -3.4289679527282715
    3. '2' → logprob: -4.3039679527282715
    4. ' p' → logprob: -5.3039679527282715
    5. '1' → logprob: -7.3039679527282715
    6. ' n' → logprob: -7.4289679527282715
    7. '3' → logprob: -8.67896842956543
    8. ' ' → logprob: -9.17896842956543
    9. '(' → logprob: -10.92896842956543
    10. '   ' → logprob: -10.92896842956543

Token 839: '*n' (ID: 58470)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4552147090435028
    2. '*n' → logprob: -2.205214738845825
    3. 'i' → logprob: -2.580214738845825
    4. 'p' → logprob: -2.580214738845825
    5. '*p' → logprob: -3.330214738845825
    6. '*i' → logprob: -3.455214738845825
    7. '*(' → logprob: -4.080214500427246
    8. ')' → logprob: -5.080214500427246
    9. '(n' → logprob: -5.205214500427246
    10. '1' → logprob: -6.205214500427246

Token 840: '))
' (ID: 2210)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7592390179634094
    2. '))' → logprob: -1.1342389583587646
    3. '))
' → logprob: -1.8842389583587646
    4. ',n' → logprob: -3.1342389583587646
    5. ',' → logprob: -4.759239196777344
    6. '+n' → logprob: -6.259239196777344
    7. '-' → logprob: -6.634239196777344
    8. ' +' → logprob: -7.259239196777344
    9. ',p' → logprob: -7.884239196777344
    10. ' ))' → logprob: -7.884239196777344

Token 841: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12917275726795197
    2. '   ' → logprob: -2.1291728019714355
    3. 'print' → logprob: -7.0041728019714355
    4. 'for' → logprob: -7.2541728019714355
    5. '<|end|>' → logprob: -8.254172325134277
    6. '```' → logprob: -8.379172325134277
    7. ')' → logprob: -9.754172325134277
    8. ' for' → logprob: -10.004172325134277
    9. '        
' → logprob: -12.129172325134277
    10. '``' → logprob: -12.129172325134277

Token 842: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3871382772922516
    2. 'for' → logprob: -1.1371382474899292
    3. '       ' → logprob: -8.887138366699219
    4. '   ' → logprob: -9.137138366699219
    5. 'ans' → logprob: -11.387138366699219
    6. '```' → logprob: -12.262138366699219
    7. ' for' → logprob: -13.137138366699219
    8. 'if' → logprob: -13.262138366699219
    9. '
' → logprob: -14.762138366699219
    10. '           ' → logprob: -15.387138366699219

Token 843: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -2.045823566731997e-05
    2. '(' → logprob: -10.875020027160645
    3. '('' → logprob: -13.500020027160645
    4. '"' → logprob: -16.75002098083496
    5. '(
' → logprob: -18.00002098083496
    6. '()' → logprob: -18.00002098083496
    7. '(No' → logprob: -19.00002098083496
    8. '(("' → logprob: -19.75002098083496
    9. ' ("' → logprob: -20.37502098083496
    10. '(len' → logprob: -20.50002098083496

Token 844: 'Yes' (ID: 13022)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2412005513906479
    2. 'Yes' → logprob: -1.616200566291809
    3. '"No' → logprob: -4.3662004470825195
    4. 'No' → logprob: -6.2412004470825195
    5. '("' → logprob: -7.6162004470825195
    6. 'len' → logprob: -8.74120044708252
    7. 'n' → logprob: -8.86620044708252
    8. ''' → logprob: -9.74120044708252
    9. '“Yes' → logprob: -9.74120044708252
    10. '
' → logprob: -10.61620044708252

Token 845: '")
' (ID: 1896)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34866684675216675
    2. '<|end|>' → logprob: -2.2236669063568115
    3. ')' → logprob: -2.4736669063568115
    4. ')
' → logprob: -2.5986669063568115
    5. '```' → logprob: -4.348666667938232
    6. '   ' → logprob: -5.098666667938232
    7. '
' → logprob: -5.848666667938232
    8. '")' → logprob: -6.223666667938232
    9. 'for' → logprob: -6.723666667938232
    10. '<|end|>' → logprob: -8.09866714477539

Token 846: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2887209355831146
    2. 'for' → logprob: -1.663720965385437
    3. ' for' → logprob: -3.6637208461761475
    4. '       ' → logprob: -4.038721084594727
    5. '<|end|>' → logprob: -4.788721084594727
    6. '```' → logprob: -5.038721084594727
    7. '	for' → logprob: -5.913721084594727
    8. '``' → logprob: -8.538721084594727
    9. '
' → logprob: -9.163721084594727
    10. '    
' → logprob: -9.538721084594727

Token 847: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: 0.0
    2. ' for' → logprob: -17.125
    3. '```' → logprob: -20.125
    4. '	for' → logprob: -21.875
    5. '       ' → logprob: -22.375
    6. '
' → logprob: -22.375
    7. 'print' → logprob: -22.625
    8. 'while' → logprob: -22.75
    9. '           ' → logprob: -23.25
    10. '   ' → logprob: -23.25

Token 848: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03012995235621929
    2. ' i' → logprob: -3.530129909515381
    3. 'x' → logprob: -8.030130386352539
    4. 'a' → logprob: -10.280130386352539
    5. ' x' → logprob: -11.155130386352539
    6. 'u' → logprob: -13.030130386352539
    7. 'j' → logprob: -14.030130386352539
    8. ' a' → logprob: -14.155130386352539
    9. '	i' → logprob: -14.905130386352539
    10. '(i' → logprob: -15.030130386352539

Token 849: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.08904754370450974
    2. ',' → logprob: -2.464047431945801
    3. ' ,' → logprob: -9.9640474319458
    4. '```' → logprob: -11.4640474319458
    5. 'j' → logprob: -11.7140474319458
    6. '   ' → logprob: -11.9640474319458
    7. '_,' → logprob: -11.9640474319458
    8. ',
' → logprob: -12.5890474319458
    9. ',n' → logprob: -12.7140474319458
    10. '0' → logprob: -12.7140474319458

Token 850: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008661013096570969
    2. 'in' → logprob: -4.758660793304443
    3. '(ans' → logprob: -11.258661270141602
    4. '(i' → logprob: -11.508661270141602
    5. ' ans' → logprob: -11.883661270141602
    6. ' i' → logprob: -11.883661270141602
    7. '   ' → logprob: -12.758661270141602
    8. ' ' → logprob: -12.758661270141602
    9. ' (' → logprob: -13.758661270141602
    10. '(' → logprob: -14.258661270141602

Token 851: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.008615042082965374
    2. ' ans' → logprob: -4.758615016937256
    3. '(ans' → logprob: -14.508615493774414
    4. '	ans' → logprob: -17.633615493774414
    5. '_ans' → logprob: -19.758615493774414
    6. 'answer' → logprob: -20.383615493774414
    7. 'range' → logprob: -21.133615493774414
    8. 'print' → logprob: -21.508615493774414
    9. 'Ans' → logprob: -21.508615493774414
    10. '
' → logprob: -21.883615493774414

Token 852: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24251195788383484
    2. '):' → logprob: -2.6175119876861572
    3. ':
' → logprob: -3.1175119876861572
    4. ')' → logprob: -3.3675119876861572
    5. '():
' → logprob: -3.8675119876861572
    6. '):
' → logprob: -4.367511749267578
    7. '   ' → logprob: -4.742511749267578
    8. '()' → logprob: -5.242511749267578
    9. '       ' → logprob: -5.367511749267578
    10. '():' → logprob: -5.367511749267578

Token 853: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.161123275756836
    2. '   ' → logprob: -1.411123275756836
    3. 'print' → logprob: -1.661123275756836
    4. ':
' → logprob: -2.536123275756836
    5. '           ' → logprob: -3.036123275756836
    6. ' print' → logprob: -3.286123275756836
    7. ':' → logprob: -3.536123275756836
    8. '():
' → logprob: -3.786123275756836
    9. '):
' → logprob: -4.286123275756836
    10. ')' → logprob: -5.036123275756836

Token 854: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07889176905155182
    2. ' print' → logprob: -2.5788917541503906
    3. 'pr' → logprob: -13.95389175415039
    4. '	print' → logprob: -15.20389175415039
    5. '(print' → logprob: -15.20389175415039
    6. '```' → logprob: -15.45389175415039
    7. '.print' → logprob: -15.57889175415039
    8. ' 
' → logprob: -15.82889175415039
    9. '
' → logprob: -16.57889175415039
    10. ' pr' → logprob: -17.20389175415039

Token 855: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.889424836728722e-05
    2. '(' → logprob: -9.250099182128906
    3. ' i' → logprob: -13.125099182128906
    4. '()' → logprob: -15.000099182128906
    5. 'i' → logprob: -15.750099182128906
    6. '(
' → logprob: -16.500099182128906
    7. ' (' → logprob: -17.500099182128906
    8. '	i' → logprob: -18.375099182128906
    9. '[i' → logprob: -19.125099182128906
    10. '('' → logprob: -19.500099182128906

Token 856: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.08999592065811157
    2. ',' → logprob: -2.464995861053467
    3. ' ,' → logprob: -6.964995861053467
    4. ')' → logprob: -9.964996337890625
    5. ' j' → logprob: -10.339996337890625
    6. ',
' → logprob: -11.589996337890625
    7. ',end' → logprob: -11.714996337890625
    8. 'j' → logprob: -12.464996337890625
    9. ',p' → logprob: -12.839996337890625
    10. ' ' → logprob: -13.089996337890625

Token 857: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.380904672667384e-05
    2. ')
' → logprob: -10.500033378601074
    3. '<|end|>' → logprob: -12.375033378601074
    4. '       ' → logprob: -14.875033378601074
    5. '   ' → logprob: -15.125033378601074
    6. ')return' → logprob: -15.250033378601074
    7. ' )' → logprob: -15.500033378601074
    8. ')#' → logprob: -15.625033378601074
    9. '),' → logprob: -16.12503433227539
    10. '           ' → logprob: -16.25003433227539

Token 858: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 859: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 860: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7708780765533447
    2. '<|end|>' → logprob: -0.7708780765533447
    3. '#' → logprob: -2.7708780765533447
    4. '```' → logprob: -5.145877838134766
    5. '
' → logprob: -6.270877838134766
    6. '<|end|>' → logprob: -7.145877838134766
    7. '[' → logprob: -7.270877838134766
    8. ')' → logprob: -7.520877838134766
    9. 'if' → logprob: -7.895877838134766
    10. 'pass' → logprob: -8.395877838134766

Token 861: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12189321964979172
    2. '#' → logprob: -2.8718931674957275
    3. '<|end|>' → logprob: -2.8718931674957275
    4. '```' → logprob: -7.121893405914307
    5. 'if' → logprob: -7.871893405914307
    6. 'A' → logprob: -9.121892929077148
    7. '
' → logprob: -9.996892929077148
    8. '<|end|>' → logprob: -10.121892929077148
    9. ')' → logprob: -10.371892929077148
    10. '\' → logprob: -10.871892929077148

Token 862: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0035675233229994774
    2. 'main' → logprob: -5.753567695617676
    3. ' D' → logprob: -8.128567695617676
    4. ' main' → logprob: -9.378567695617676
    5. '__' → logprob: -12.253567695617676
    6. 'solve' → logprob: -13.003567695617676
    7. '_D' → logprob: -14.628567695617676
    8. 'Main' → logprob: -14.753567695617676
    9. 'def' → logprob: -14.878567695617676
    10. 'C' → logprob: -15.003567695617676

Token 863: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.849109119386412e-06
    2. ' ():' → logprob: -11.750009536743164
    3. '():
' → logprob: -13.250009536743164
    4. '()' → logprob: -16.000009536743164
    5. '():
' → logprob: -18.000009536743164
    6. '().' → logprob: -19.125009536743164
    7. ':' → logprob: -19.250009536743164
    8. 'def' → logprob: -19.500009536743164
    9. '():

' → logprob: -19.625009536743164
    10. '(":' → logprob: -19.875009536743164

Token 864: '   ' (ID: 271)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.1585053950548172
    2. 'n' → logprob: -2.283505439758301
    3. ' pass' → logprob: -3.158505439758301
    4. 'def' → logprob: -6.783505439758301
    5. '   ' → logprob: -7.408505439758301
    6. '#' → logprob: -9.0335054397583
    7. '	pass' → logprob: -9.0335054397583
    8. 'return' → logprob: -9.4085054397583
    9. ' n' → logprob: -9.9085054397583
    10. '    ' → logprob: -11.0335054397583

Token 865: ' n' (ID: 297)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.5407806038856506
    2. 'n' (adapté à ' n') → logprob: -0.9157806038856506
    3. ' pass' → logprob: -4.540780544281006
    4. '   ' → logprob: -5.290780544281006
    5. 'def' → logprob: -7.290780544281006
    6. 't' → logprob: -7.790780544281006
    7. ' n' → logprob: -8.040781021118164
    8. '#' → logprob: -8.665781021118164
    9. 'return' → logprob: -10.415781021118164
    10. '	pass' → logprob: -10.540781021118164

Token 866: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741056561470032
    2. '=' → logprob: -0.9741056561470032
    3. ',' → logprob: -10.599105834960938
    4. ' ' → logprob: -13.599105834960938
    5. ' =
' → logprob: -13.974105834960938
    6. '=int' → logprob: -14.349105834960938
    7. '   ' → logprob: -14.599105834960938
    8. '=
' → logprob: -15.724105834960938
    9. '  ' → logprob: -16.349105834960938
    10. '	' → logprob: -16.474105834960938

Token 867: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0037061350885778666
    2. ' I' → logprob: -5.628705978393555
    3. 'int' → logprob: -9.878705978393555
    4. 'LI' → logprob: -10.128705978393555
    5. ' ' → logprob: -12.128705978393555
    6. 'L' → logprob: -12.628705978393555
    7. 'n' → logprob: -13.253705978393555
    8. ' LI' → logprob: -14.003705978393555
    9. 'S' → logprob: -14.503705978393555
    10. '100' → logprob: -15.003705978393555

Token 868: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005208024755120277
    2. '()
' → logprob: -5.3802080154418945
    3. '   ' → logprob: -7.8802080154418945
    4. ')' → logprob: -9.755208015441895
    5. '()\' → logprob: -10.505208015441895
    6. '<|end|>' → logprob: -10.505208015441895
    7. '#' → logprob: -11.130208015441895
    8. '();' → logprob: -11.130208015441895
    9. '()<' → logprob: -11.380208015441895
    10. ' ()' → logprob: -12.005208015441895

Token 869: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20851118862628937
    2. 'd' → logprob: -2.8335111141204834
    3. '   ' → logprob: -3.4585111141204834
    4. 'k' → logprob: -3.7085111141204834
    5. 's' → logprob: -3.9585111141204834
    6. 'for' → logprob: -4.2085113525390625
    7. 'arr' → logprob: -4.5835113525390625
    8. 'g' → logprob: -5.0835113525390625
    9. 'graph' → logprob: -5.4585113525390625
    10. 'm' → logprob: -5.4585113525390625

Token 870: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006539862137287855
    2. 's' → logprob: -6.006539821624756
    3. 'arr' → logprob: -6.381539821624756
    4. 'd' → logprob: -7.506539821624756
    5. 'edges' → logprob: -7.506539821624756
    6. 'k' → logprob: -8.006540298461914
    7. 'q' → logprob: -9.006540298461914
    8. 'for' → logprob: -9.131540298461914
    9. 'dp' → logprob: -9.256540298461914
    10. 'lst' → logprob: -9.381540298461914

Token 871: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 872: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09981610625982285
    2. '#' → logprob: -3.349816083908081
    3. '   ' → logprob: -3.349816083908081
    4. ' ' → logprob: -5.09981632232666
    5. 'n' → logprob: -5.59981632232666
    6. ':' → logprob: -6.09981632232666
    7. '    ' → logprob: -6.22481632232666
    8. '(' → logprob: -6.59981632232666
    9. '    
' → logprob: -6.59981632232666
    10. 'pass' → logprob: -6.59981632232666

Token 873: ' E' (ID: 457)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7210680246353149
    2. '<|end|>' → logprob: -0.8460680246353149
    3. 'D' → logprob: -2.9710679054260254
    4. ' ' → logprob: -4.596067905426025
    5. 'A' → logprob: -5.471067905426025
    6. 'def' → logprob: -5.721067905426025
    7. '__' → logprob: -5.971067905426025
    8. ' D' → logprob: -6.096067905426025
    9. '()' → logprob: -6.096067905426025
    10. '<|end|>' → logprob: -6.346067905426025

Token 874: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0006220113136805594
    2. '()' → logprob: -7.500621795654297
    3. ' ():' → logprob: -10.125621795654297
    4. '(' → logprob: -11.375621795654297
    5. '():
' → logprob: -11.750621795654297
    6. 'def' → logprob: -12.375621795654297
    7. ':' → logprob: -13.250621795654297
    8. ' ()' → logprob: -13.500621795654297
    9. '().' → logprob: -14.500621795654297
    10. '()*' → logprob: -16.000621795654297

Token 875: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1819885969161987
    2. 'def' → logprob: -1.1819885969161987
    3. 'n' → logprob: -1.4319885969161987
    4. '   ' → logprob: -2.4319887161254883
    5. '#' → logprob: -3.5569887161254883
    6. '(' → logprob: -4.181988716125488
    7. '(n' → logprob: -4.431988716125488
    8. '<|end|>' → logprob: -6.681988716125488
    9. ':' → logprob: -7.681988716125488
    10. 'a' → logprob: -8.056988716125488

Token 876: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.038847580552101135
    2. 'def' → logprob: -3.2888476848602295
    3. 'pass' → logprob: -8.038847923278809
    4. '(n' → logprob: -8.788847923278809
    5. '   ' → logprob: -9.163847923278809
    6. '#' → logprob: -9.163847923278809
    7. '()' → logprob: -10.413847923278809
    8. ' n' → logprob: -10.663847923278809
    9. '<|end|>' → logprob: -10.788847923278809
    10. 'd' → logprob: -11.413847923278809

Token 877: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407931089401245
    2. ' =' → logprob: -0.9740793108940125
    3. '()' → logprob: -13.724079132080078
    4. '   ' → logprob: -14.474079132080078
    5. ',' → logprob: -15.849079132080078
    6. ' ' → logprob: -15.974079132080078
    7. '=int' → logprob: -16.349079132080078
    8. '(' → logprob: -16.474079132080078
    9. '=
' → logprob: -16.724079132080078
    10. ' =
' → logprob: -17.099079132080078

Token 878: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0015166497323662043
    2. ' I' → logprob: -6.501516819000244
    3. 'int' → logprob: -11.626516342163086
    4. 'LI' → logprob: -12.751516342163086
    5. ' ' → logprob: -13.626516342163086
    6. '(I' → logprob: -15.501516342163086
    7. 'n' → logprob: -15.626516342163086
    8. ' LI' → logprob: -15.751516342163086
    9. 'L' → logprob: -15.876516342163086
    10. '  ' → logprob: -16.501516342163086

Token 879: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006727333180606365
    2. '()
' → logprob: -5.00672721862793
    3. '   ' → logprob: -12.88172721862793
    4. '()\' → logprob: -13.13172721862793
    5. '()
' → logprob: -13.38172721862793
    6. '())' → logprob: -13.50672721862793
    7. '()<' → logprob: -13.75672721862793
    8. '(),' → logprob: -14.75672721862793
    9. '(' → logprob: -14.75672721862793
    10. 'def' → logprob: -14.88172721862793

Token 880: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6621682047843933
    2. 'def' → logprob: -0.7871682047843933
    3. '()' → logprob: -3.787168264389038
    4. 'a' → logprob: -5.912168025970459
    5. ' def' → logprob: -7.162168025970459
    6. '```' → logprob: -7.912168025970459
    7. ':' → logprob: -8.037168502807617
    8. '[' → logprob: -8.287168502807617
    9. ' =' → logprob: -8.412168502807617
    10. ',' → logprob: -8.412168502807617

Token 881: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0017576448153704405
    2. 's' → logprob: -7.251757621765137
    3. ' a' → logprob: -8.501757621765137
    4. 'k' → logprob: -8.876757621765137
    5. 'for' → logprob: -9.001757621765137
    6. 'l' → logprob: -9.126757621765137
    7. 'd' → logprob: -9.376757621765137
    8. 'b' → logprob: -9.626757621765137
    9. 'arr' → logprob: -10.001757621765137
    10. 'e' → logprob: -10.251757621765137

Token 882: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5365146398544312
    2. '#' → logprob: -1.9115146398544312
    3. ' ' → logprob: -2.7865147590637207
    4. 'def' → logprob: -2.9115147590637207
    5. '_' → logprob: -3.2865147590637207
    6. '\' → logprob: -3.2865147590637207
    7. 'd' → logprob: -3.6615147590637207
    8. 'n' → logprob: -4.786514759063721
    9. '   ' → logprob: -5.036514759063721
    10. '\n' → logprob: -5.286514759063721

Token 883: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10402149707078934
    2. '#' → logprob: -2.6040215492248535
    3. 'd' → logprob: -4.7290215492248535
    4. '<|end|>' → logprob: -4.9790215492248535
    5. '\' → logprob: -5.2290215492248535
    6. '\n' → logprob: -6.8540215492248535
    7. '
' → logprob: -7.4790215492248535
    8. 'D' → logprob: -7.6040215492248535
    9. '   ' → logprob: -8.104021072387695
    10. ':' → logprob: -8.354021072387695

Token 884: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.6933488845825195
    2. ' F' → logprob: -0.6933488845825195
    3. 'main' → logprob: -8.94334888458252
    4. ' main' → logprob: -9.94334888458252
    5. ' ' → logprob: -11.56834888458252
    6. 'def' → logprob: -12.69334888458252
    7. '__' → logprob: -12.69334888458252
    8. '	F' → logprob: -13.31834888458252
    9. 'Main' → logprob: -13.31834888458252
    10. '_F' → logprob: -13.56834888458252

Token 885: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.081584716506768e-05
    2. ' ():' → logprob: -11.250020980834961
    3. '()' → logprob: -12.375020980834961
    4. '():
' → logprob: -12.625020980834961
    5. 'def' → logprob: -15.875020980834961
    6. '():
' → logprob: -17.75002098083496
    7. '().' → logprob: -18.12502098083496
    8. ' ()' → logprob: -19.00002098083496
    9. '():

' → logprob: -19.00002098083496
    10. '();' → logprob: -19.12502098083496

Token 886: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4925556778907776
    2. '()' → logprob: -1.4925556182861328
    3. 'n' → logprob: -1.9925556182861328
    4. 'def' → logprob: -4.492555618286133
    5. '():
' → logprob: -5.117555618286133
    6. '():' → logprob: -5.492555618286133
    7. ' n' → logprob: -5.617555618286133
    8. '(n' → logprob: -6.492555618286133
    9. '()
' → logprob: -7.492555618286133
    10. '	n' → logprob: -8.742555618286133

Token 887: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0005194319528527558
    2. ' n' → logprob: -8.500519752502441
    3. 'def' → logprob: -8.625519752502441
    4. '   ' → logprob: -9.625519752502441
    5. 'pass' → logprob: -9.875519752502441
    6. '(n' → logprob: -11.750519752502441
    7. '()' → logprob: -12.375519752502441
    8. '#' → logprob: -12.875519752502441
    9. ' pass' → logprob: -13.375519752502441
    10. '	n' → logprob: -14.875519752502441

Token 888: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11812935024499893
    2. ' =' → logprob: -2.243129253387451
    3. '()' → logprob: -5.243129253387451
    4. '(' → logprob: -12.49312973022461
    5. ' ()' → logprob: -13.49312973022461
    6. ')' → logprob: -13.74312973022461
    7. '_' → logprob: -13.86812973022461
    8. ' ' → logprob: -14.74312973022461
    9. '   ' → logprob: -14.99312973022461
    10. '=int' → logprob: -15.11812973022461

Token 889: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0009500489104539156
    2. ' I' → logprob: -7.000949859619141
    3. 'int' → logprob: -10.50094985961914
    4. 'LI' → logprob: -12.00094985961914
    5. ' ' → logprob: -13.25094985961914
    6. 'n' → logprob: -14.12594985961914
    7. '[I' → logprob: -14.50094985961914
    8. '[' → logprob: -14.62594985961914
    9. '100' → logprob: -15.50094985961914
    10. '[int' → logprob: -15.75094985961914

Token 890: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010393599513918161
    2. '()
' → logprob: -6.876039505004883
    3. ' ()' → logprob: -13.126039505004883
    4. '()\' → logprob: -13.751039505004883
    5. '(' → logprob: -13.876039505004883
    6. '())' → logprob: -14.126039505004883
    7. '()
' → logprob: -14.501039505004883
    8. '()]' → logprob: -14.751039505004883
    9. '()

' → logprob: -15.501039505004883
    10. '(),' → logprob: -15.876039505004883

Token 891: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 892: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9958417415618896
    2. 'return' (adapté à ' return') → logprob: -1.4958417415618896
    3. 'a' → logprob: -1.9958417415618896
    4. ' ' → logprob: -2.3708417415618896
    5. ' return' → logprob: -2.6208417415618896
    6. ' a' → logprob: -3.6208417415618896
    7. ' =' → logprob: -3.9958417415618896
    8. '=' → logprob: -4.745841979980469
    9. 'n' → logprob: -4.995841979980469
    10. 'def' → logprob: -5.495841979980469

Token 893: '

' (ID: 279)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.654426097869873
    2. 'def' → logprob: -1.654426097869873
    3. '_' → logprob: -1.904426097869873
    4. ':' → logprob: -2.029426097869873
    5. '#' → logprob: -2.529426097869873
    6. '\n' → logprob: -2.529426097869873
    7. '<|end|>' → logprob: -2.779426097869873
    8. '
' → logprob: -3.529426097869873
    9. '\' → logprob: -3.529426097869873
    10. '   ' → logprob: -4.029426097869873

Token 894: 'if' (ID: 366)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.773765504360199
    2. '\n' → logprob: -1.5237655639648438
    3. '
' → logprob: -2.5237655639648438
    4. '\' → logprob: -2.5237655639648438
    5. ' ' → logprob: -2.7737655639648438
    6. 'def' → logprob: -3.5237655639648438
    7. '<|end|>' → logprob: -3.5237655639648438
    8. ' 
' → logprob: -4.773765563964844
    9. '   ' → logprob: -4.773765563964844
    10. ':' → logprob: -5.023765563964844

Token 895: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.25199949741363525
    2. '__' → logprob: -1.5019994974136353
    3. '_' → logprob: -9.751999855041504
    4. 'name' → logprob: -12.251999855041504
    5. '___' → logprob: -12.751999855041504
    6. '_name' → logprob: -13.376999855041504
    7. ' ' → logprob: -13.626999855041504
    8. ''' → logprob: -13.751999855041504
    9. ' ' → logprob: -15.876999855041504
    10. ' _' → logprob: -16.126998901367188

Token 896: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.043799228966236115
    2. ' __' → logprob: -3.2937991619110107
    3. 'name' → logprob: -5.91879940032959
    4. '_' → logprob: -6.41879940032959
    5. ' ==' → logprob: -7.16879940032959
    6. '_name' → logprob: -8.91879940032959
    7. '<|end|>' → logprob: -9.41879940032959
    8. '[' → logprob: -9.79379940032959
    9. '==' → logprob: -10.73129940032959
    10. '_NAME' → logprob: -10.79379940032959

Token 897: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.981667537620524e-06
    2. '__.__' → logprob: -13.750001907348633
    3. '__.' → logprob: -14.875001907348633
    4. '__
' → logprob: -16.375001907348633
    5. '___' → logprob: -16.500001907348633
    6. 'name' → logprob: -16.500001907348633
    7. '==' → logprob: -16.875001907348633
    8. '__('' → logprob: -17.000001907348633
    9. '____' → logprob: -17.250001907348633
    10. '__["' → logprob: -17.375001907348633

Token 898: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0015370006440207362
    2. '==' → logprob: -7.126536846160889
    3. ' ==' → logprob: -7.626536846160889
    4. '=="' → logprob: -8.626537322998047
    5. '__.__' → logprob: -10.376537322998047
    6. '=='' → logprob: -11.001537322998047
    7. '_' → logprob: -12.501537322998047
    8. '__["' → logprob: -13.126537322998047
    9. '"' → logprob: -13.376537322998047
    10. '__('' → logprob: -13.501537322998047

Token 899: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00675775995478034
    2. ''' → logprob: -5.006757736206055
    3. '__' → logprob: -10.256757736206055
    4. ' "__' → logprob: -11.881757736206055
    5. ''"' → logprob: -16.381757736206055
    6. '"name' → logprob: -16.631757736206055
    7. ' '__' → logprob: -16.756757736206055
    8. '"user' → logprob: -17.631757736206055
    9. '   ' → logprob: -17.756757736206055
    10. '("__' → logprob: -18.131757736206055

Token 900: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00216905539855361
    2. '"' → logprob: -6.502169132232666
    3. 'main' → logprob: -7.752169132232666
    4. ''' → logprob: -8.877168655395508
    5. '__":
' → logprob: -10.127168655395508
    6. '__
' → logprob: -10.502168655395508
    7. 'name' → logprob: -11.252168655395508
    8. '___' → logprob: -12.752168655395508
    9. '__':
' → logprob: -12.752168655395508
    10. ' __' → logprob: -13.252168655395508

Token 901: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.10051526129245758
    2. '__' → logprob: -2.350515365600586
    3. '__':
' → logprob: -8.100515365600586
    4. '__:' → logprob: -12.975515365600586
    5. '__["' → logprob: -13.600515365600586
    6. '():
' → logprob: -13.975515365600586
    7. '__.' → logprob: -15.225515365600586
    8. '__()
' → logprob: -15.600515365600586
    9. '__
' → logprob: -16.225515365600586
    10. '__.__' → logprob: -16.475515365600586

Token 902: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08843853324651718
    2. '```' → logprob: -3.0884385108947754
    3. '<|end|>' → logprob: -4.088438510894775
    4. '    
' → logprob: -4.463438510894775
    5. '_' → logprob: -5.588438510894775
    6. '__' → logprob: -6.963438510894775
    7. '[' → logprob: -7.213438510894775
    8. '  
' → logprob: -7.338438510894775
    9. '(' → logprob: -7.713438510894775
    10. ':' → logprob: -7.713438510894775

Token 903: ' B' (ID: 418)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5136364698410034
    2. 'import' → logprob: -1.6386364698410034
    3. 'q' → logprob: -2.388636589050293
    4. 'Q' → logprob: -2.388636589050293
    5. 'cmd' → logprob: -4.763636589050293
    6. 't' → logprob: -5.138636589050293
    7. 'func' → logprob: -6.263636589050293
    8. 'for' → logprob: -6.263636589050293
    9. 'choice' → logprob: -7.263636589050293
    10. 'opts' → logprob: -7.263636589050293

Token 904: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.9862216504407115e-05
    2. '()
' → logprob: -11.625020027160645
    3. '()`' → logprob: -13.000020027160645
    4. '()<' → logprob: -13.000020027160645
    5. ' ()' → logprob: -13.875020027160645
    6. '()>' → logprob: -14.250020027160645
    7. '()]' → logprob: -14.375020027160645
    8. '()">' → logprob: -14.500020027160645
    9. '(' → logprob: -15.000020027160645
    10. '().' → logprob: -15.000020027160645


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 902
Tokens correctement prédits (1ère position, stricte): 331
Tokens correctement prédits (1ère position, avec adaptation): 363
Tokens correctement prédits (top 10): 758
Précision stricte (1ère position): 36.70%
Précision adaptée (1ère position): 40.24%
Précision (top 10): 84.04%
================================================================================
