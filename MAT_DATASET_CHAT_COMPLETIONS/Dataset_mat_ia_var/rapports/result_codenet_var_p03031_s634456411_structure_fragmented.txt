================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import itertools

def read_input():
    N, M = parse_initial_input(input())
    switches = parse_switches([input() for _ in range(M)])
    p = parse_p(input())
    return N, M, switches, p

def parse_initial_input(line):
    return map(int, line.split())

def parse_switches(lines):
    return [list(map(int, line.split())) for line in lines]

def parse_p(line):
    return [int(x) for x in line.split()]

def generate_combinations(N):
    return itertools.product([0, 1], repeat=N)

def check_condition_for_all_switches(combo, switches, p):
    for j in range(len(switches)):
        if not check_switch(combo, switches[j], p[j]):
            return False
    return True

def check_switch(combo, switch, required_parity):
    count_on = count_switch_on(combo, switch)
    return (count_on % 2) == required_parity

def count_switch_on(combo, switch):
    count = 0
    for k in switch[1:]:
        count += combo[k-1]
    return count

def solve():
    N, M, switches, p = read_input()
    ans = count_valid_combinations(N, switches, p)
    print(ans)

def count_valid_combinations(N, switches, p):
    ans = 0
    for combo in generate_combinations(N):
        if check_condition_for_all_switches(combo, switches, p):
            ans += 1
    return ans

solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -4.3464544432936236e-05
    2. '\' → logprob: -11.750043869018555
    3. 'import' → logprob: -11.875043869018555
    4. '(' → logprob: -12.250043869018555
    5. ' as' → logprob: -12.625043869018555
    6. ',' → logprob: -12.625043869018555
    7. '```' → logprob: -12.625043869018555
    8. 'as' → logprob: -12.750043869018555
    9. '\.' → logprob: -13.625043869018555
    10. '.
' → logprob: -14.250043869018555

Token 4: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04168124869465828
    2. ' itertools' → logprob: -3.2916812896728516
    3. ' factorial' → logprob: -6.666681289672852
    4. '_' → logprob: -7.791681289672852
    5. ' ' → logprob: -7.916681289672852
    6. '  ' → logprob: -8.041681289672852
    7. ' space' → logprob: -8.416681289672852
    8. ' _' → logprob: -8.791681289672852
    9. ' filter' → logprob: -9.166681289672852
    10. ' map' → logprob: -9.291681289672852

Token 5: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4296906590461731
    2. '(' → logprob: -1.1796905994415283
    3. ' (' → logprob: -4.304690837860107
    4. '_file' → logprob: -4.929690837860107
    5. '_line' → logprob: -4.929690837860107
    6. '_reader' → logprob: -5.804690837860107
    7. ' ' → logprob: -6.179690837860107
    8. '_csv' → logprob: -6.179690837860107
    9. '_data' → logprob: -6.679690837860107
    10. '(file' → logprob: -7.554690837860107

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.035065796226263046
    2. '_' → logprob: -3.5350658893585205
    3. '():' → logprob: -5.660065650939941
    4. '(_' → logprob: -8.160065650939941
    5. '_:' → logprob: -8.160065650939941
    6. '(_:' → logprob: -8.785065650939941
    7. '):' → logprob: -9.035065650939941
    8. '_line' → logprob: -9.035065650939941
    9. ' (' → logprob: -9.285065650939941
    10. ':' → logprob: -9.535065650939941

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017042851075530052
    2. ':' → logprob: -5.267042636871338
    3. '```' → logprob: -5.517042636871338
    4. '\n' → logprob: -6.892042636871338
    5. '<|end|>' → logprob: -6.892042636871338
    6. '()' → logprob: -7.017042636871338
    7. '\' → logprob: -7.142042636871338
    8. '    
' → logprob: -7.392042636871338
    9. ' ' → logprob: -7.517042636871338
    10. '    ' → logprob: -7.642042636871338

Token 8: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4816429316997528
    2. 'return' → logprob: -1.1066429615020752
    3. 'data' → logprob: -3.856642961502075
    4. 'input' → logprob: -4.606642723083496
    5. ' return' → logprob: -5.481642723083496
    6. ' lines' → logprob: -5.856642723083496
    7. 'pass' → logprob: -5.981642723083496
    8. 'line' → logprob: -6.106642723083496
    9. ' ' → logprob: -6.356642723083496
    10. 'lines' → logprob: -6.481642723083496

Token 9: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.408133864402771
    2. '=' → logprob: -1.533133864402771
    3. ',' → logprob: -2.1581339836120605
    4. '_' → logprob: -6.9081339836120605
    5. ')' → logprob: -7.1581339836120605
    6. '.' → logprob: -7.5331339836120605
    7. ' ' → logprob: -7.6581339836120605
    8. ' ,' → logprob: -7.9081339836120605
    9. '=int' → logprob: -8.533133506774902
    10. '  ' → logprob: -8.783133506774902

Token 10: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.2445324957370758
    2. 'M' → logprob: -1.8695324659347534
    3. ' K' → logprob: -3.119532585144043
    4. 'K' → logprob: -4.494532585144043
    5. ' ' → logprob: -5.994532585144043
    6. 'input' → logprob: -6.369532585144043
    7. ' input' → logprob: -6.744532585144043
    8. 'data' → logprob: -8.244532585144043
    9. '  ' → logprob: -8.494532585144043
    10. 'list' → logprob: -8.869532585144043

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07000178843736649
    2. '=' → logprob: -2.6950018405914307
    3. ',' → logprob: -9.695001602172852
    4. ' ' → logprob: -13.070001602172852
    5. ')' → logprob: -14.945001602172852
    6. '```' → logprob: -15.195001602172852
    7. '   ' → logprob: -15.320001602172852
    8. ' ,' → logprob: -15.570001602172852
    9. ' =
' → logprob: -15.570001602172852
    10. '=int' → logprob: -16.07000160217285

Token 12: ' parse' (ID: 8420)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0004485461104195565
    2. 'map' → logprob: -7.750448703765869
    3. ' input' → logprob: -11.250448226928711
    4. ' list' → logprob: -12.625448226928711
    5. ' int' → logprob: -14.625448226928711
    6. ' ' → logprob: -14.625448226928711
    7. '   ' → logprob: -15.750448226928711
    8. 'input' → logprob: -15.875448226928711
    9. ' [' → logprob: -16.00044822692871
    10. ' tuple' → logprob: -16.25044822692871

Token 13: '_initial' (ID: 45740)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48448446393013
    2. '_input' → logprob: -1.6094844341278076
    3. 'r' → logprob: -1.9844844341278076
    4. '_' → logprob: -3.3594844341278076
    5. '_line' → logprob: -5.734484672546387
    6. '()' → logprob: -6.109484672546387
    7. ' (' → logprob: -6.234484672546387
    8. '('' → logprob: -7.359484672546387
    9. '(input' → logprob: -7.484484672546387
    10. ' input' → logprob: -8.359484672546387

Token 14: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6886056065559387
    2. '_input' → logprob: -0.9386056065559387
    3. '_' → logprob: -2.813605546951294
    4. '_line' → logprob: -4.063605785369873
    5. '_data' → logprob: -4.313605785369873
    6. '_values' → logprob: -4.938605785369873
    7. '()' → logprob: -5.813605785369873
    8. '_numbers' → logprob: -7.688605785369873
    9. '_parameters' → logprob: -7.813605785369873
    10. 'ize' → logprob: -7.938605785369873

Token 15: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028426893055438995
    2. '()' → logprob: -3.7784268856048584
    3. '('' → logprob: -5.9034271240234375
    4. '(
' → logprob: -6.4034271240234375
    5. '("("' → logprob: -8.403427124023438
    6. ')' → logprob: -9.153427124023438
    7. '[' → logprob: -9.278427124023438
    8. '_' → logprob: -10.153427124023438
    9. '```' → logprob: -10.278427124023438
    10. ' (' → logprob: -10.278427124023438

Token 16: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02827846258878708
    2. ')' → logprob: -4.278278350830078
    3. '()' → logprob: -4.403278350830078
    4. '().' → logprob: -6.528278350830078
    5. '(' → logprob: -8.778278350830078
    6. '())
' → logprob: -9.403278350830078
    7. ' ())' → logprob: -10.778278350830078
    8. '()))' → logprob: -10.903278350830078
    9. '))' → logprob: -11.653278350830078
    10. '()
' → logprob: -12.653278350830078

Token 17: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2387883961200714
    2. '
' → logprob: -2.488788366317749
    3. '   ' → logprob: -3.488788366317749
    4. ')
' → logprob: -3.738788366317749
    5. '\n' → logprob: -4.113788604736328
    6. '    
' → logprob: -4.613788604736328
    7. '```' → logprob: -4.613788604736328
    8. 'newline' → logprob: -4.613788604736328
    9. ',' → logprob: -5.488788604736328
    10. ' 
' → logprob: -6.113788604736328

Token 18: ' switches' (ID: 57537)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5075478553771973
    2. ' ' → logprob: -1.8825478553771973
    3. 'return' → logprob: -3.0075478553771973
    4. '
' → logprob: -3.2575478553771973
    5. 'newline' → logprob: -3.5075478553771973
    6. ',' → logprob: -4.007547855377197
    7. '\n' → logprob: -4.382547855377197
    8. '   ' → logprob: -4.382547855377197
    9. ' 
' → logprob: -4.757547855377197
    10. '    
' → logprob: -4.882547855377197

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17722511291503906
    2. '_' → logprob: -2.427225112915039
    3. '_states' → logprob: -2.802225112915039
    4. '=' → logprob: -5.177225112915039
    5. '.' → logprob: -5.427225112915039
    6. ' ' → logprob: -7.427225112915039
    7. ')' → logprob: -7.677225112915039
    8. '_space' → logprob: -7.802225112915039
    9. ' _' → logprob: -7.927225112915039
    10. '[' → logprob: -8.427225112915039

Token 20: ' parse' (ID: 8420)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.3473298251628876
    2. ' [' → logprob: -1.47232985496521
    3. '[]' → logprob: -3.09732985496521
    4. ' list' → logprob: -4.722329616546631
    5. '[' → logprob: -5.347329616546631
    6. '[list' → logprob: -6.597329616546631
    7. ' [[]' → logprob: -6.847329616546631
    8. 'list' → logprob: -6.972329616546631
    9. '[input' → logprob: -6.972329616546631
    10. '[int' → logprob: -7.972329616546631

Token 21: '_switch' (ID: 64715)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.01875276118516922
    2. '_' → logprob: -5.268752574920654
    3. '_switch' → logprob: -5.268752574920654
    4. '_initial' → logprob: -5.768752574920654
    5. 'es' → logprob: -6.518752574920654
    6. '(input' → logprob: -6.893752574920654
    7. '(' → logprob: -7.643752574920654
    8. '_s' → logprob: -7.768752574920654
    9. '_output' → logprob: -8.268753051757812
    10. '_states' → logprob: -8.393753051757812

Token 22: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.01897175796329975
    2. '_' → logprob: -4.143971920013428
    3. '_es' → logprob: -6.268971920013428
    4. '_input' → logprob: -7.893971920013428
    5. '_array' → logprob: -9.39397144317627
    6. '_positions' → logprob: -9.51897144317627
    7. '_states' → logprob: -9.51897144317627
    8. '_list' → logprob: -9.76897144317627
    9. ' _' → logprob: -10.26897144317627
    10. '_indexes' → logprob: -10.39397144317627

Token 23: '([' (ID: 5194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.500552237033844
    2. '(input' → logprob: -1.5005521774291992
    3. '_input' → logprob: -2.125552177429199
    4. '_s' → logprob: -4.375552177429199
    5. '_' → logprob: -4.500552177429199
    6. 's' → logprob: -4.625552177429199
    7. '```' → logprob: -5.750552177429199
    8. 'es' → logprob: -5.875552177429199
    9. ' (' → logprob: -6.625552177429199
    10. 'input' → logprob: -6.875552177429199

Token 24: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.007938889786601067
    2. ' input' → logprob: -4.882938861846924
    3. '   ' → logprob: -8.507939338684082
    4. 'int' → logprob: -10.132939338684082
    5. 'line' → logprob: -10.132939338684082
    6. ')' → logprob: -11.257939338684082
    7. ' ' → logprob: -11.507939338684082
    8. '])' → logprob: -12.507939338684082
    9. '(input' → logprob: -12.507939338684082
    10. '  ' → logprob: -13.007939338684082

Token 25: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.165027217415627e-05
    2. '())' → logprob: -11.500021934509277
    3. '()]' → logprob: -12.375021934509277
    4. ')' → logprob: -12.750021934509277
    5. '().' → logprob: -13.125021934509277
    6. 'for' → logprob: -14.000021934509277
    7. ' ()' → logprob: -14.500021934509277
    8. '()
' → logprob: -15.000021934509277
    9. '()"' → logprob: -15.500021934509277
    10. ' for' → logprob: -16.25002098083496

Token 26: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3139488101005554
    2. ')' → logprob: -2.1889488697052
    3. '()' → logprob: -2.5639488697052
    4. 'for' → logprob: -2.5639488697052
    5. ')])' → logprob: -6.563948631286621
    6. '])' → logprob: -7.813948631286621
    7. ' ' → logprob: -7.938948631286621
    8. '(i' → logprob: -8.438948631286621
    9. ']' → logprob: -8.438948631286621
    10. ')]' → logprob: -8.563948631286621

Token 27: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.005936143919825554
    2. '_' → logprob: -5.130936145782471
    3. ' i' → logprob: -12.380935668945312
    4. ' range' → logprob: -13.005935668945312
    5. ' ' → logprob: -14.505935668945312
    6. '_range' → logprob: -15.255935668945312
    7. '_i' → logprob: -15.380935668945312
    8. ' in' → logprob: -16.505935668945312
    9. 'range' → logprob: -16.755935668945312
    10. ' ' → logprob: -17.380935668945312

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17737816274166107
    2. 'range' → logprob: -2.1773781776428223
    3. ' range' → logprob: -3.0523781776428223
    4. 'in' → logprob: -6.302378177642822
    5. ' ' → logprob: -9.427377700805664
    6. '  ' → logprob: -10.677377700805664
    7. 'i' → logprob: -12.427377700805664
    8. '	range' → logprob: -12.427377700805664
    9. ' xrange' → logprob: -13.052377700805664
    10. ']' → logprob: -13.802377700805664

Token 29: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16023112833499908
    2. ' range' → logprob: -1.910231113433838
    3. ' ' → logprob: -13.285231590270996
    4. '	range' → logprob: -13.285231590270996
    5. '   ' → logprob: -13.535231590270996
    6. '  ' → logprob: -14.160231590270996
    7. '(range' → logprob: -14.910231590270996
    8. ' xrange' → logprob: -15.410231590270996
    9. '_range' → logprob: -15.535231590270996
    10. 'rang' → logprob: -15.660231590270996

Token 30: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.006359823979437351
    2. 'M' → logprob: -6.131360054016113
    3. '(N' → logprob: -6.381360054016113
    4. ' M' → logprob: -6.631360054016113
    5. '(' → logprob: -7.006360054016113
    6. ' (' → logprob: -8.381360054016113
    7. '   ' → logprob: -12.131360054016113
    8. ' ' → logprob: -12.381360054016113
    9. 'N' → logprob: -12.631360054016113
    10. ' N' → logprob: -13.631360054016113

Token 31: ')])
' (ID: 66560)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.006379018072038889
    2. '])' → logprob: -5.756379127502441
    3. ')' → logprob: -6.131379127502441
    4. ')]' → logprob: -7.006379127502441
    5. ')])
' → logprob: -10.381379127502441
    6. ']))' → logprob: -10.631379127502441
    7. '])]' → logprob: -10.756379127502441
    8. '   ' → logprob: -11.381379127502441
    9. ']' → logprob: -11.756379127502441
    10. ']])' → logprob: -12.256379127502441

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6264036297798157
    2. '
' → logprob: -1.751403570175171
    3. '<|end|>' → logprob: -2.251403570175171
    4. ')' → logprob: -2.376403570175171
    5. '    
' → logprob: -2.876403570175171
    6. '\' → logprob: -4.87640380859375
    7. '\n' → logprob: -5.12640380859375
    8. '#' → logprob: -5.75140380859375
    9. ' 
' → logprob: -6.00140380859375
    10. '  
' → logprob: -6.37640380859375

Token 33: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11370217800140381
    2. ')' → logprob: -3.2387022972106934
    3. ' ' → logprob: -3.4887022972106934
    4. '<|end|>' → logprob: -4.613702297210693
    5. 'return' → logprob: -4.738702297210693
    6. '    
' → logprob: -5.238702297210693
    7. ' return' → logprob: -5.988702297210693
    8. '  ' → logprob: -6.113702297210693
    9. '\n' → logprob: -6.238702297210693
    10. '
' → logprob: -6.363702297210693

Token 34: ' =' (ID: 314)
  Prédit: 'resses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'resses' → logprob: -1.3318572044372559
    2. 'ermut' → logprob: -1.7068572044372559
    3. 'os' → logprob: -2.456857204437256
    4. 'ressed' → logprob: -2.581857204437256
    5. 'oss' → logprob: -2.706857204437256
    6. 'er' → logprob: -2.956857204437256
    7. 'ro' → logprob: -2.956857204437256
    8. 'ress' → logprob: -3.081857204437256
    9. 'erm' → logprob: -3.706857204437256
    10. 'r' → logprob: -3.831857204437256

Token 35: ' parse' (ID: 8420)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.1092543601989746
    2. ' int' → logprob: -1.4842543601989746
    3. '0' → logprob: -2.4842543601989746
    4. ' []' → logprob: -2.6092543601989746
    5. '[]' → logprob: -2.9842543601989746
    6. ' list' → logprob: -3.2342543601989746
    7. ' [' → logprob: -3.3592543601989746
    8. ' ' → logprob: -3.4842543601989746
    9. ' itertools' → logprob: -3.7342543601989746
    10. '1' → logprob: -3.7342543601989746

Token 36: '_p' (ID: 1359)
  Prédit: '_initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -0.3255234360694885
    2. '_' → logprob: -2.3255233764648438
    3. '_input' → logprob: -2.8255233764648438
    4. '_p' → logprob: -3.2005233764648438
    5. '_states' → logprob: -4.575523376464844
    6. '_output' → logprob: -5.075523376464844
    7. '(' → logprob: -5.825523376464844
    8. '_constraints' → logprob: -5.825523376464844
    9. '_positions' → logprob: -5.950523376464844
    10. '_parameters' → logprob: -6.075523376464844

Token 37: '(input' (ID: 10054)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0794415473937988
    2. '()' → logprob: -1.7044415473937988
    3. '(' → logprob: -1.9544415473937988
    4. 'ress' → logprob: -3.329441547393799
    5. '_input' → logprob: -3.579441547393799
    6. 'er' → logprob: -3.579441547393799
    7. ')' → logprob: -3.704441547393799
    8. 'ro' → logprob: -3.829441547393799
    9. 'os' → logprob: -4.079441547393799
    10. '_pressed' → logprob: -4.079441547393799

Token 38: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10225408524274826
    2. '()' → logprob: -2.3522541522979736
    3. ')' → logprob: -6.2272539138793945
    4. ' ())' → logprob: -11.102253913879395
    5. '(' → logprob: -11.352253913879395
    6. '())
' → logprob: -11.977253913879395
    7. '()
' → logprob: -12.227253913879395
    8. '()]' → logprob: -12.227253913879395
    9. '();)' → logprob: -12.227253913879395
    10. '())

' → logprob: -12.852253913879395

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0762820839881897
    2. '<|end|>' → logprob: -3.326282024383545
    3. ')' → logprob: -3.951282024383545
    4. '    
' → logprob: -4.576282024383545
    5. '
' → logprob: -5.951282024383545
    6. ' ' → logprob: -5.951282024383545
    7. '  ' → logprob: -7.701282024383545
    8. '    ' → logprob: -7.826282024383545
    9. '  
' → logprob: -7.951282024383545
    10. '<|end|>' → logprob: -8.076282501220703

Token 40: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0295909121632576
    2. ')' → logprob: -3.9045908451080322
    3. '<|end|>' → logprob: -6.404591083526611
    4. 'return' (adapté à ' return') → logprob: -6.529591083526611
    5. '    
' → logprob: -6.654591083526611
    6. ' ' → logprob: -6.779591083526611
    7. '
' → logprob: -7.279591083526611
    8. '  ' → logprob: -7.529591083526611
    9. ' return' → logprob: -7.779591083526611
    10. '  
' → logprob: -7.904591083526611

Token 41: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.013291290029883385
    2. 'N' → logprob: -4.638291358947754
    3. ' (' → logprob: -6.263291358947754
    4. ' ' → logprob: -7.263291358947754
    5. ' None' → logprob: -8.388291358947754
    6. '(N' → logprob: -8.888291358947754
    7. ' ' → logprob: -9.138291358947754
    8. '(' → logprob: -9.513291358947754
    9. '  ' → logprob: -9.513291358947754
    10. ' switches' → logprob: -9.638291358947754

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05981829762458801
    2. '<|end|>' → logprob: -2.9348182678222656
    3. ' ,' → logprob: -6.434818267822266
    4. ' ' → logprob: -6.559818267822266
    5. ',N' → logprob: -7.184818267822266
    6. ',p' → logprob: -8.059818267822266
    7. ')' → logprob: -8.184818267822266
    8. '<|end|>' → logprob: -8.684818267822266
    9. ',n' → logprob: -9.684818267822266
    10. '```' → logprob: -10.184818267822266

Token 43: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.07001978904008865
    2. 'M' → logprob: -2.6950197219848633
    3. ' switches' → logprob: -10.070019721984863
    4. 'switch' → logprob: -11.320019721984863
    5. ' switch' → logprob: -11.820019721984863
    6. ' ' → logprob: -12.070019721984863
    7. ' ' → logprob: -12.695019721984863
    8. ' space' → logprob: -12.945019721984863
    9. 's' → logprob: -13.195019721984863
    10. 'space' → logprob: -13.382519721984863

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0224276315420866
    2. '<|end|>' → logprob: -3.897427558898926
    3. ' ,' → logprob: -6.897427558898926
    4. ',N' → logprob: -8.397427558898926
    5. ',p' → logprob: -8.647427558898926
    6. ',s' → logprob: -9.147427558898926
    7. ',
' → logprob: -9.272427558898926
    8. '<|end|>' → logprob: -9.397427558898926
    9. ',n' → logprob: -10.022427558898926
    10. ')' → logprob: -10.647427558898926

Token 45: ' switches' (ID: 57537)
  Prédit: ' switches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' switches' → logprob: -0.00793403945863247
    2. 'switch' → logprob: -5.007934093475342
    3. ' switch' → logprob: -6.757934093475342
    4. 's' → logprob: -10.757933616638184
    5. '_switch' → logprob: -11.507933616638184
    6. ' s' → logprob: -12.507933616638184
    7. ' switched' → logprob: -12.882933616638184
    8. ' p' → logprob: -13.132933616638184
    9. ' spaces' → logprob: -13.320433616638184
    10. ' ' → logprob: -13.382933616638184

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010820603929460049
    2. ',p' → logprob: -4.760820388793945
    3. '<|end|>' → logprob: -7.260820388793945
    4. 'p' → logprob: -7.885820388793945
    5. ',
' → logprob: -8.010820388793945
    6. ' ,' → logprob: -8.135820388793945
    7. ' p' → logprob: -9.135820388793945
    8. ',n' → logprob: -9.135820388793945
    9. ')' → logprob: -9.260820388793945
    10. ',s' → logprob: -10.510820388793945

Token 47: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.008618239313364029
    2. 'p' → logprob: -4.758618354797363
    3. ' ' → logprob: -12.883618354797363
    4. ' ' → logprob: -14.758618354797363
    5. 'space' → logprob: -15.883618354797363
    6. 's' → logprob: -16.133617401123047
    7. '```' → logprob: -16.508617401123047
    8. '_p' → logprob: -16.633617401123047
    9. ''' → logprob: -16.758617401123047
    10. '"' → logprob: -16.946117401123047

Token 48: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.955207347869873
    2. 'def' → logprob: -0.955207347869873
    3. '.' → logprob: -2.955207347869873
    4. '<|end|>' → logprob: -3.205207347869873
    5. '```' → logprob: -3.705207347869873
    6. ')' → logprob: -3.830207347869873
    7. ',' → logprob: -4.080207347869873
    8. '#' → logprob: -4.205207347869873
    9. '[' → logprob: -4.330207347869873
    10. ':' → logprob: -4.455207347869873

Token 49: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9138426780700684
    2. '#' → logprob: -1.5388426780700684
    3. 'def' → logprob: -1.6638426780700684
    4. '\' → logprob: -2.9138426780700684
    5. '.' → logprob: -3.4138426780700684
    6. '```' → logprob: -3.6638426780700684
    7. '<|end|>' → logprob: -3.9138426780700684
    8. '[' → logprob: -4.288842678070068
    9. '\n' → logprob: -4.663842678070068
    10. ':' → logprob: -4.663842678070068

Token 50: ' parse' (ID: 8420)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.844191312789917
    2. ' parse' → logprob: -1.469191312789917
    3. ' calculate' → logprob: -2.344191312789917
    4. ' main' → logprob: -2.469191312789917
    5. ' process' → logprob: -2.594191312789917
    6. ' solve' → logprob: -3.594191312789917
    7. ' compute' → logprob: -3.969191312789917
    8. ' factorial' → logprob: -5.094191551208496
    9. ' switch' → logprob: -5.219191551208496
    10. ' space' → logprob: -5.469191551208496

Token 51: '_initial' (ID: 45740)
  Prédit: '_initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -0.10034243017435074
    2. '_' → logprob: -2.3503425121307373
    3. '_input' → logprob: -9.725342750549316
    4. '_switch' → logprob: -10.225342750549316
    5. '_p' → logprob: -12.225342750549316
    6. '_basic' → logprob: -12.350342750549316
    7. '__' → logprob: -12.600342750549316
    8. '_init' → logprob: -12.600342750549316
    9. '```' → logprob: -12.850342750549316
    10. '_s' → logprob: -13.100342750549316

Token 52: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.008834847249090672
    2. '_' → logprob: -4.7588348388671875
    3. '_initial' → logprob: -9.008834838867188
    4. ' _' → logprob: -10.383834838867188
    5. '_output' → logprob: -10.508834838867188
    6. '_inputs' → logprob: -11.758834838867188
    7. '```' → logprob: -11.883834838867188
    8. '_in' → logprob: -12.883834838867188
    9. '_import' → logprob: -13.008834838867188
    10. '_line' → logprob: -13.008834838867188

Token 53: '(line' (ID: 18178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0068780528381466866
    2. '(_' → logprob: -5.506877899169922
    3. '(input' → logprob: -7.256877899169922
    4. '():' → logprob: -7.756877899169922
    5. '("("' → logprob: -7.756877899169922
    6. '(line' → logprob: -7.881877899169922
    7. '(:' → logprob: -8.631877899169922
    8. '(_:' → logprob: -9.381877899169922
    9. '(token' → logprob: -9.631877899169922
    10. '(`' → logprob: -9.756877899169922

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001643165247514844
    2. '):
' → logprob: -6.751643180847168
    3. ')' → logprob: -8.126643180847168
    4. ' ):' → logprob: -8.751643180847168
    5. '   ' → logprob: -12.251643180847168
    6. ':' → logprob: -12.376643180847168
    7. '=' → logprob: -12.626643180847168
    8. '):
' → logprob: -13.251643180847168
    9. '(line' → logprob: -14.001643180847168
    10. '_line' → logprob: -14.376643180847168

Token 55: '   ' (ID: 271)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.24699006974697113
    2. '   ' → logprob: -2.3719899654388428
    3. ' return' → logprob: -2.7469899654388428
    4. ' tokens' → logprob: -4.121990203857422
    5. 'line' → logprob: -4.621990203857422
    6. 'tokens' → logprob: -5.121990203857422
    7. '=' → logprob: -5.496990203857422
    8. ' =' → logprob: -5.496990203857422
    9. '    ' → logprob: -5.496990203857422
    10. 'return' → logprob: -5.621990203857422

Token 56: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3370130658149719
    2. ' return' → logprob: -1.3370130062103271
    3. '   ' → logprob: -4.087013244628906
    4. 'tokens' → logprob: -6.212013244628906
    5. 'line' → logprob: -6.462013244628906
    6. ' parts' → logprob: -6.712013244628906
    7. ' line' → logprob: -7.087013244628906
    8. 'parts' → logprob: -7.337013244628906
    9. ' tokens' → logprob: -8.587013244628906
    10. 'numbers' → logprob: -9.462013244628906

Token 57: ' map' (ID: 4014)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.038169559091329575
    2. 'tuple' → logprob: -3.2881696224212646
    3. ' list' → logprob: -9.538169860839844
    4. ' map' → logprob: -10.163169860839844
    5. 'map' → logprob: -11.788169860839844
    6. 'list' → logprob: -11.913169860839844
    7. '(tuple' → logprob: -12.913169860839844
    8. ' ' → logprob: -15.163169860839844
    9. '  ' → logprob: -15.788169860839844
    10. ' [' → logprob: -16.788169860839844

Token 58: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0336780920624733
    2. '(' → logprob: -3.4086780548095703
    3. '(str' → logprob: -10.90867805480957
    4. '(lambda' → logprob: -12.53367805480957
    5. '<int' → logprob: -12.65867805480957
    6. 'int' → logprob: -12.78367805480957
    7. ' int' → logprob: -13.90867805480957
    8. '(tuple' → logprob: -14.28367805480957
    9. '=int' → logprob: -14.40867805480957
    10. ' (' → logprob: -14.53367805480957

Token 59: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.009437301196157932
    2. ',line' → logprob: -5.509437084197998
    3. ' line' → logprob: -6.259437084197998
    4. '(' → logprob: -6.259437084197998
    5. ')' → logprob: -6.759437084197998
    6. ',' → logprob: -8.634437561035156
    7. '=line' → logprob: -9.634437561035156
    8. ' (' → logprob: -10.259437561035156
    9. 'line' → logprob: -10.384437561035156
    10. '#line' → logprob: -10.759437561035156

Token 60: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.31330782175064087
    2. 'line' → logprob: -1.313307762145996
    3. ')' → logprob: -10.188307762145996
    4. '	line' → logprob: -12.438307762145996
    5. '(line' → logprob: -13.188307762145996
    6. '=line' → logprob: -13.938307762145996
    7. '[line' → logprob: -14.438307762145996
    8. '#line' → logprob: -14.438307762145996
    9. '   ' → logprob: -15.313307762145996
    10. ',line' → logprob: -15.688307762145996

Token 61: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.6780489087104797
    2. '.strip' → logprob: -0.9280489087104797
    3. '.' → logprob: -2.928048849105835
    4. '().' → logprob: -3.178048849105835
    5. ' .' → logprob: -6.303049087524414
    6. '.rstrip' → logprob: -10.428049087524414
    7. 'split' → logprob: -10.553049087524414
    8. '   ' → logprob: -12.678049087524414
    9. '.trim' → logprob: -12.803049087524414
    10. ')' → logprob: -12.803049087524414

Token 62: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01774798147380352
    2. '('' → logprob: -4.64274787902832
    3. '()' → logprob: -4.89274787902832
    4. '(' → logprob: -7.89274787902832
    5. '()))' → logprob: -10.14274787902832
    6. '()]' → logprob: -11.64274787902832
    7. ' ())' → logprob: -11.64274787902832
    8. '(()' → logprob: -11.89274787902832
    9. '("' → logprob: -12.39274787902832
    10. '())
' → logprob: -12.51774787902832

Token 63: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4845987856388092
    2. 'def' → logprob: -1.3595987558364868
    3. ')' → logprob: -3.2345988750457764
    4. '<|end|>' → logprob: -3.7345988750457764
    5. '```' → logprob: -3.9845988750457764
    6. '\' → logprob: -4.609598636627197
    7. '<|end|>' → logprob: -5.234598636627197
    8. '  
' → logprob: -5.234598636627197
    9. '\n' → logprob: -5.359598636627197
    10. ' 
' → logprob: -5.609598636627197

Token 64: ' parse' (ID: 8420)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3087364435195923
    2. 'parse' → logprob: -1.6837364435195923
    3. ' parse' → logprob: -3.1837363243103027
    4. ' def' → logprob: -3.6837363243103027
    5. '_parse' → logprob: -4.558736324310303
    6. 'python' → logprob: -6.683736324310303
    7. '_' → logprob: -8.933736801147461
    8. '_code' → logprob: -8.933736801147461
    9. '_def' → logprob: -9.058736801147461
    10. 'read' → logprob: -9.183736801147461

Token 65: '_switch' (ID: 64715)
  Prédit: '_switch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_switch' → logprob: -0.000933017407078296
    2. '_p' → logprob: -8.125932693481445
    3. '_input' → logprob: -8.375932693481445
    4. '_initial' → logprob: -8.750932693481445
    5. 'switch' → logprob: -9.250932693481445
    6. '_s' → logprob: -9.250932693481445
    7. '_' → logprob: -11.625932693481445
    8. '_sw' → logprob: -12.000932693481445
    9. '_list' → logprob: -12.125932693481445
    10. '_turn' → logprob: -13.125932693481445

Token 66: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0037991306744515896
    2. '_switch' → logprob: -6.003798961639404
    3. '_states' → logprob: -7.503798961639404
    4. '_s' → logprob: -7.503798961639404
    5. '_input' → logprob: -10.003799438476562
    6. '_positions' → logprob: -10.253799438476562
    7. '_p' → logprob: -10.503799438476562
    8. '_lines' → logprob: -10.753799438476562
    9. '_' → logprob: -11.253799438476562
    10. '_list' → logprob: -11.753799438476562

Token 67: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.09106585383415222
    2. '(line' → logprob: -2.4660658836364746
    3. '(' → logprob: -6.716065883636475
    4. '(s' → logprob: -7.466065883636475
    5. '(strings' → logprob: -9.216065406799316
    6. '[line' → logprob: -9.841065406799316
    7. '(list' → logprob: -9.966065406799316
    8. '(ls' → logprob: -10.341065406799316
    9. '(lst' → logprob: -10.966065406799316
    10. '(parts' → logprob: -11.341065406799316

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01819630153477192
    2. '):
' → logprob: -4.018196105957031
    3. ')' → logprob: -10.893196105957031
    4. '):
' → logprob: -10.893196105957031
    5. ' ):' → logprob: -12.268196105957031
    6. '[]):' → logprob: -13.518196105957031
    7. '   ' → logprob: -13.643196105957031
    8. ':' → logprob: -14.768196105957031
    9. '):

' → logprob: -15.143196105957031
    10. '=' → logprob: -15.518196105957031

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057474423199892044
    2. ' return' → logprob: -3.057474374771118
    3. 'return' → logprob: -5.432474613189697
    4. ' lines' → logprob: -6.557474613189697
    5. ' switches' → logprob: -6.932474613189697
    6. 'switch' → logprob: -7.557474613189697
    7. ' switch' → logprob: -7.932474613189697
    8. ' [' → logprob: -8.057474136352539
    9. '[' → logprob: -8.432474136352539
    10. ' [
' → logprob: -9.057474136352539

Token 70: ' return' (ID: 622)
  Prédit: 'switch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'switch' → logprob: -0.10334602743387222
    2. 'result' → logprob: -2.853346109390259
    3. ' switches' → logprob: -3.478346109390259
    4. '   ' → logprob: -5.47834587097168
    5. 'return' (adapté à ' return') → logprob: -6.35334587097168
    6. ' result' → logprob: -6.85334587097168
    7. 'lines' → logprob: -7.10334587097168
    8. ' switch' → logprob: -7.97834587097168
    9. 'def' → logprob: -8.10334587097168
    10. 'results' → logprob: -8.35334587097168

Token 71: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.03138929605484009
    2. '[' → logprob: -4.281389236450195
    3. '[line' → logprob: -4.281389236450195
    4. '[s' → logprob: -6.156389236450195
    5. ' [' → logprob: -8.406389236450195
    6. '[len' → logprob: -8.531389236450195
    7. '[int' → logprob: -8.531389236450195
    8. '[List' → logprob: -8.656389236450195
    9. '[l' → logprob: -9.156389236450195
    10. '[[' → logprob: -9.781389236450195

Token 72: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.026838243007659912
    2. 'set' → logprob: -3.9018383026123047
    3. ' list' → logprob: -5.276838302612305
    4. '[list' → logprob: -8.026838302612305
    5. 'map' → logprob: -8.151838302612305
    6. 'tuple' → logprob: -8.901838302612305
    7. ' set' → logprob: -9.151838302612305
    8. '[' → logprob: -9.151838302612305
    9. 'line' → logprob: -9.776838302612305
    10. 'parse' → logprob: -10.026838302612305

Token 73: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00011856284982059151
    2. '(' → logprob: -9.500118255615234
    3. 'map' → logprob: -10.750118255615234
    4. '(it' → logprob: -11.125118255615234
    5. '()' → logprob: -12.750118255615234
    6. ')' → logprob: -13.875118255615234
    7. '(int' → logprob: -14.250118255615234
    8. '	map' → logprob: -14.500118255615234
    9. ']' → logprob: -14.625118255615234
    10. 'it' → logprob: -14.875118255615234

Token 74: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0012318959925323725
    2. 'int' → logprob: -6.876231670379639
    3. '(' → logprob: -9.001232147216797
    4. '(lambda' → logprob: -10.626232147216797
    5. ')' → logprob: -11.126232147216797
    6. ' int' → logprob: -11.751232147216797
    7. '<int' → logprob: -12.001232147216797
    8. ',int' → logprob: -12.001232147216797
    9. '=int' → logprob: -12.376232147216797
    10. '[int' → logprob: -12.501232147216797

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028367575258016586
    2. ',line' → logprob: -3.653367519378662
    3. '(line' → logprob: -6.278367519378662
    4. ' ,' → logprob: -10.02836799621582
    5. ',x' → logprob: -10.52836799621582
    6. ',l' → logprob: -10.77836799621582
    7. 's' → logprob: -11.15336799621582
    8. '   ' → logprob: -11.52836799621582
    9. ',s' → logprob: -11.65336799621582
    10. '[line' → logprob: -11.77836799621582

Token 76: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.16171492636203766
    2. ' line' → logprob: -1.9117149114608765
    3. 'lambda' → logprob: -7.661715030670166
    4. 'l' → logprob: -8.036714553833008
    5. 'lines' → logprob: -8.411714553833008
    6. ')' → logprob: -8.911714553833008
    7. ' l' → logprob: -9.536714553833008
    8. 's' → logprob: -9.786714553833008
    9. 'x' → logprob: -10.036714553833008
    10. ' lambda' → logprob: -10.161714553833008

Token 77: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.7026229500770569
    2. '.split' → logprob: -0.7026229500770569
    3. ' .' → logprob: -5.327622890472412
    4. '.' → logprob: -5.452622890472412
    5. '.strip' → logprob: -8.45262336730957
    6. 'split' → logprob: -11.07762336730957
    7. '.s' → logprob: -11.20262336730957
    8. '()' → logprob: -11.45262336730957
    9. ')' → logprob: -11.57762336730957
    10. ').' → logprob: -12.20262336730957

Token 78: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.062415093183517456
    2. '))' → logprob: -2.81241512298584
    3. '()' → logprob: -8.43741512298584
    4. '())' → logprob: -9.18741512298584
    5. '()))
' → logprob: -9.31241512298584
    6. '(' → logprob: -11.56241512298584
    7. '   ' → logprob: -11.93741512298584
    8. '().' → logprob: -12.43741512298584
    9. '())))' → logprob: -12.93741512298584
    10. ' ))' → logprob: -13.18741512298584

Token 79: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.015135956928133965
    2. ')' → logprob: -4.265135765075684
    3. '   ' → logprob: -7.765135765075684
    4. ' for' → logprob: -8.140135765075684
    5. ')[' → logprob: -9.140135765075684
    6. '()[' → logprob: -9.890135765075684
    7. 'for' → logprob: -10.390135765075684
    8. ' [' → logprob: -10.390135765075684
    9. ']' → logprob: -11.890135765075684
    10. '][' → logprob: -12.390135765075684

Token 80: ' line' (ID: 2543)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.2256826013326645
    2. ' lines' → logprob: -1.6006826162338257
    3. 'line' → logprob: -8.350682258605957
    4. ' line' → logprob: -10.975682258605957
    5. '	lines' → logprob: -11.600682258605957
    6. '(lines' → logprob: -13.600682258605957
    7. 'lin' → logprob: -13.725682258605957
    8. '_lines' → logprob: -13.725682258605957
    9. ' ' → logprob: -13.975682258605957
    10. '_' → logprob: -14.350682258605957

Token 81: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.054914891719818115
    2. 'in' → logprob: -2.929914951324463
    3. ')' → logprob: -11.304914474487305
    4. ' ' → logprob: -12.179914474487305
    5. 's' → logprob: -12.429914474487305
    6. 'lines' → logprob: -12.929914474487305
    7. '	in' → logprob: -13.304914474487305
    8. '_in' → logprob: -13.804914474487305
    9. '(lines' → logprob: -14.429914474487305
    10. ']' → logprob: -14.679914474487305

Token 82: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.006720229052007198
    2. ' lines' → logprob: -5.006720066070557
    3. '(lines' → logprob: -13.131720542907715
    4. '	lines' → logprob: -13.881720542907715
    5. 'range' → logprob: -14.631720542907715
    6. ' ' → logprob: -14.756720542907715
    7. 'switch' → logprob: -15.131720542907715
    8. '   ' → logprob: -15.256720542907715
    9. 'line' → logprob: -15.256720542907715
    10. 'lin' → logprob: -16.6317195892334

Token 83: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004229647107422352
    2. ')]' → logprob: -6.129229545593262
    3. ')' → logprob: -6.254229545593262
    4. ' ]' → logprob: -10.004229545593262
    5. '<|end|>' → logprob: -10.254229545593262
    6. '   ' → logprob: -10.504229545593262
    7. '<|end|>' → logprob: -13.254229545593262
    8. ']
' → logprob: -13.754229545593262
    9. 'def' → logprob: -13.754229545593262
    10. '}' → logprob: -13.879229545593262

Token 84: 'def' (ID: 1314)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021933963522315025
    2. ')' → logprob: -3.8969340324401855
    3. ')]' → logprob: -7.1469340324401855
    4. '[' → logprob: -9.146933555603027
    5. '(' → logprob: -9.271933555603027
    6. '()]' → logprob: -9.396933555603027
    7. '   ' → logprob: -9.396933555603027
    8. 'def' → logprob: -9.521933555603027
    9. '}' → logprob: -10.146933555603027
    10. ' ]' → logprob: -10.646933555603027

Token 85: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.03738747909665108
    2. ' read' → logprob: -3.5373873710632324
    3. 'parse' → logprob: -5.037387371063232
    4. '_' → logprob: -8.03738784790039
    5. '_parse' → logprob: -8.28738784790039
    6. ' def' → logprob: -9.03738784790039
    7. 'read' → logprob: -9.28738784790039
    8. ' ' → logprob: -9.28738784790039
    9. ' _' → logprob: -10.16238784790039
    10. ' ' → logprob: -10.66238784790039

Token 86: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0007806805660948157
    2. '_' → logprob: -7.5007805824279785
    3. '_switch' → logprob: -9.250781059265137
    4. '_initial' → logprob: -9.625781059265137
    5. '_input' → logprob: -10.125781059265137
    6. 'p' → logprob: -11.250781059265137
    7. '```' → logprob: -13.375781059265137
    8. 'switch' → logprob: -13.500781059265137
    9. '_lines' → logprob: -14.125781059265137
    10. '(p' → logprob: -14.125781059265137

Token 87: '(line' (ID: 18178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.37923598289489746
    2. '(lines' → logprob: -1.6292359828948975
    3. '(line' → logprob: -2.1292359828948975
    4. '(input' → logprob: -8.379236221313477
    5. '_lines' → logprob: -9.254236221313477
    6. ' (' → logprob: -10.254236221313477
    7. '(list' → logprob: -10.254236221313477
    8. '_' → logprob: -10.629236221313477
    9. '[line' → logprob: -10.754236221313477
    10. '(lambda' → logprob: -11.754236221313477

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006108098896220326
    2. '):
' → logprob: -8.1256103515625
    3. '():' → logprob: -8.5006103515625
    4. ')' → logprob: -9.7506103515625
    5. ' ):' → logprob: -10.0006103515625
    6. '):
' → logprob: -12.8756103515625
    7. '()' → logprob: -13.2506103515625
    8. '   ' → logprob: -13.3756103515625
    9. '）：' → logprob: -14.8756103515625
    10. '():
' → logprob: -15.1256103515625

Token 89: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14625751972198486
    2. '   ' → logprob: -2.5212574005126953
    3. ' return' → logprob: -2.8962574005126953
    4. '	return' → logprob: -8.396257400512695
    5. ':return' → logprob: -9.521257400512695
    6. 'def' → logprob: -9.646257400512695
    7. ' ' → logprob: -10.021257400512695
    8. ')' → logprob: -11.521257400512695
    9. 'list' → logprob: -11.646257400512695
    10. 'eturn' → logprob: -11.896257400512695

Token 90: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.030261460691690445
    2. ' return' → logprob: -3.530261516571045
    3. 'list' → logprob: -7.905261516571045
    4. 'map' → logprob: -9.655261039733887
    5. '   ' → logprob: -9.780261039733887
    6. ' list' → logprob: -11.030261039733887
    7. ' map' → logprob: -13.155261039733887
    8. 'def' → logprob: -13.780261039733887
    9. ' ' → logprob: -14.280261039733887
    10. 'eturn' → logprob: -14.405261039733887

Token 91: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1270918846130371
    2. ' list' → logprob: -2.127091884613037
    3. 'map' → logprob: -8.877092361450195
    4. ' map' → logprob: -11.502092361450195
    5. '[list' → logprob: -12.752092361450195
    6. '[' → logprob: -12.877092361450195
    7. '	list' → logprob: -13.752092361450195
    8. '   ' → logprob: -13.877092361450195
    9. 'set' → logprob: -14.002092361450195
    10. ' ' → logprob: -14.002092361450195

Token 92: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004879915213678032
    2. 'map' → logprob: -8.00048828125
    3. ' int' → logprob: -9.37548828125
    4. '*' → logprob: -10.25048828125
    5. '1' → logprob: -11.50048828125
    6. '0' → logprob: -12.25048828125
    7. ']int' → logprob: -12.37548828125
    8. '(int' → logprob: -13.37548828125
    9. ':int' → logprob: -13.37548828125
    10. '   ' → logprob: -13.37548828125

Token 93: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.07181421667337418
    2. '(i' → logprob: -2.6968142986297607
    3. '(s' → logprob: -7.696814060211182
    4. '(char' → logprob: -7.696814060211182
    5. '(c' → logprob: -7.821814060211182
    6. '(token' → logprob: -8.32181453704834
    7. '(ch' → logprob: -9.07181453704834
    8. 'x' → logprob: -9.44681453704834
    9. '(' → logprob: -10.44681453704834
    10. '(_)' → logprob: -11.32181453704834

Token 94: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006908706855028868
    2. '()' → logprob: -7.750690937042236
    3. ' )' → logprob: -9.000690460205078
    4. ' for' → logprob: -9.125690460205078
    5. 'for' → logprob: -11.250690460205078
    6. ' ' → logprob: -12.375690460205078
    7. '(line' → logprob: -12.750690460205078
    8. ' in' → logprob: -13.250690460205078
    9. '(x' → logprob: -13.750690460205078
    10. '())' → logprob: -13.750690460205078

Token 95: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.018747497349977493
    2. 'for' → logprob: -4.143747329711914
    3. ')' → logprob: -6.018747329711914
    4. ' in' → logprob: -8.393747329711914
    5. '(line' → logprob: -11.018747329711914
    6. ' ' → logprob: -11.143747329711914
    7. 'in' → logprob: -11.893747329711914
    8. ' line' → logprob: -12.143747329711914
    9. ' )' → logprob: -13.268747329711914
    10. '()' → logprob: -13.893747329711914

Token 96: ' x' (ID: 1215)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.004606469068676233
    2. 'line' → logprob: -5.879606246948242
    3. ' x' → logprob: -6.879606246948242
    4. '(line' → logprob: -7.379606246948242
    5. '=line' → logprob: -9.004606246948242
    6. ' in' → logprob: -11.754606246948242
    7. 'x' → logprob: -12.254606246948242
    8. ' the' → logprob: -12.504606246948242
    9. '	line' → logprob: -12.504606246948242
    10. '#line' → logprob: -13.254606246948242

Token 97: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004916716367006302
    2. 'in' → logprob: -5.504916667938232
    3. '=line' → logprob: -7.254916667938232
    4. ' line' → logprob: -9.75491714477539
    5. '(line' → logprob: -10.37991714477539
    6. ' =' → logprob: -11.62991714477539
    7. 'line' → logprob: -11.62991714477539
    8. '=' → logprob: -11.87991714477539
    9. '<|end|>' → logprob: -12.25491714477539
    10. ' ' → logprob: -12.62991714477539

Token 98: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.20141568779945374
    2. ' line' → logprob: -1.7014156579971313
    3. '(line' → logprob: -13.701416015625
    4. '	line' → logprob: -14.326416015625
    5. '=line' → logprob: -15.576416015625
    6. '[line' → logprob: -15.951416015625
    7. ' ' → logprob: -16.201416015625
    8. '#line' → logprob: -16.576416015625
    9. 'list' → logprob: -16.951416015625
    10. 'input' → logprob: -17.951416015625

Token 99: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.17843882739543915
    2. '.' → logprob: -2.178438901901245
    3. '.strip' → logprob: -3.803438901901245
    4. '().' → logprob: -3.803438901901245
    5. ' .' → logprob: -6.303438663482666
    6. '()' → logprob: -6.678438663482666
    7. ')' → logprob: -6.803438663482666
    8. 'split' → logprob: -7.428438663482666
    9. '()]' → logprob: -7.803438663482666
    10. '())' → logprob: -8.803439140319824

Token 100: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.00030841029365547
    2. '()' → logprob: -8.5003080368042
    3. '())' → logprob: -9.5003080368042
    4. '(' → logprob: -10.8753080368042
    5. ']' → logprob: -11.6253080368042
    6. ')]' → logprob: -13.5003080368042
    7. '()]
' → logprob: -15.6253080368042
    8. '()][' → logprob: -15.6253080368042
    9. ']()' → logprob: -16.125308990478516
    10. '('' → logprob: -16.375308990478516

Token 101: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.58033686876297
    2. ')' → logprob: -0.83033686876297
    3. ')]' → logprob: -6.080337047576904
    4. '])' → logprob: -6.205337047576904
    5. ')])' → logprob: -10.455336570739746
    6. '）' → logprob: -10.955336570739746
    7. '']' → logprob: -11.830336570739746
    8. '])]' → logprob: -12.205336570739746
    9. ']
' → logprob: -12.455336570739746
    10. '()]' → logprob: -12.705336570739746

Token 102: 'def' (ID: 1314)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11159262806177139
    2. ')' → logprob: -2.6115925312042236
    3. '[' → logprob: -3.4865925312042236
    4. ':' → logprob: -7.736592769622803
    5. '<|end|>' → logprob: -7.736592769622803
    6. '(' → logprob: -8.861592292785645
    7. '#' → logprob: -8.861592292785645
    8. '}' → logprob: -9.486592292785645
    9. '[]' → logprob: -9.986592292785645
    10. '```' → logprob: -10.236592292785645

Token 103: ' generate' (ID: 10419)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0872744470834732
    2. ' solve' → logprob: -3.3372745513916016
    3. ' calculate' → logprob: -3.9622745513916016
    4. ' count' → logprob: -4.087274551391602
    5. ' toggle' → logprob: -5.712274551391602
    6. ' compute' → logprob: -6.087274551391602
    7. ' check' → logprob: -6.087274551391602
    8. ' find' → logprob: -6.962274551391602
    9. 'main' → logprob: -7.587274551391602
    10. ' simulate' → logprob: -7.587274551391602

Token 104: '_com' (ID: 10828)
  Prédit: '_switch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_switch' → logprob: -0.3970397710800171
    2. '_' → logprob: -1.272039771080017
    3. '_s' → logprob: -3.3970398902893066
    4. '_possible' → logprob: -6.022039890289307
    5. '_com' → logprob: -6.772039890289307
    6. '_p' → logprob: -6.772039890289307
    7. '_per' → logprob: -6.897039890289307
    8. '_options' → logprob: -7.022039890289307
    9. '_states' → logprob: -7.147039890289307
    10. '_space' → logprob: -7.272039890289307

Token 105: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.00028815300902351737
    2. '_b' → logprob: -9.250288009643555
    3. '```' → logprob: -10.000288009643555
    4. 'b' → logprob: -10.000288009643555
    5. 'bos' → logprob: -10.500288009643555
    6. 'bination' → logprob: -11.000288009643555
    7. '(b' → logprob: -11.625288009643555
    8. '_' → logprob: -12.000288009643555
    9. '{' → logprob: -12.125288009643555
    10. '\b' → logprob: -12.250288009643555

Token 106: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07574857026338577
    2. '(n' → logprob: -2.9507486820220947
    3. '(N' → logprob: -4.075748443603516
    4. ' (' → logprob: -6.450748443603516
    5. '(s' → logprob: -7.950748443603516
    6. '(num' → logprob: -8.200748443603516
    7. '(range' → logprob: -8.700748443603516
    8. '(_' → logprob: -8.950748443603516
    9. '_' → logprob: -9.075748443603516
    10. '(def' → logprob: -9.325748443603516

Token 107: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09470342099666595
    2. ',' → logprob: -2.469703435897827
    3. ' ):' → logprob: -5.344703197479248
    4. ')' → logprob: -7.219703197479248
    5. ' ,' → logprob: -8.969703674316406
    6. '):
' → logprob: -9.594703674316406
    7. ' )' → logprob: -10.969703674316406
    8. ',N' → logprob: -11.719703674316406
    9. ',n' → logprob: -12.344703674316406
    10. '=' → logprob: -12.594703674316406

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002978048287332058
    2. ' return' → logprob: -8.375297546386719
    3. 'return' → logprob: -10.875297546386719
    4. ' for' → logprob: -11.125297546386719
    5. '(' → logprob: -11.625297546386719
    6. '    ' → logprob: -11.875297546386719
    7. '    
' → logprob: -12.000297546386719
    8. '   ' → logprob: -12.875297546386719
    9. 'for' → logprob: -13.250297546386719
    10. '  ' → logprob: -13.500297546386719

Token 109: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.681424081325531
    2. ' return' → logprob: -0.931424081325531
    3. '   ' → logprob: -2.431424140930176
    4. 'it' → logprob: -5.181424140930176
    5. ' itertools' → logprob: -5.306424140930176
    6. 'for' → logprob: -7.556424140930176
    7. ' for' → logprob: -7.681424140930176
    8. ' ' → logprob: -9.056424140930176
    9. ' it' → logprob: -9.306424140930176
    10. 'import' → logprob: -9.806424140930176

Token 110: ' itertools' (ID: 103178)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.22411756217479706
    2. ' itertools' → logprob: -1.8491175174713135
    3. 'list' → logprob: -3.3491175174713135
    4. ' list' → logprob: -5.099117755889893
    5. '   ' → logprob: -7.224117755889893
    6. ' it' → logprob: -7.724117755889893
    7. '(it' → logprob: -7.724117755889893
    8. 'iter' → logprob: -8.849117279052734
    9. '[it' → logprob: -8.849117279052734
    10. ' ' → logprob: -9.474117279052734

Token 111: '.product' (ID: 21166)
  Prédit: '.com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.com' → logprob: -0.5513929724693298
    2. '.product' → logprob: -1.1763930320739746
    3. '.' → logprob: -2.5513930320739746
    4. ' .' → logprob: -3.8013930320739746
    5. '.per' → logprob: -5.426393032073975
    6. '.prod' → logprob: -6.176393032073975
    7. '.chain' → logprob: -6.301393032073975
    8. '.c' → logprob: -6.301393032073975
    9. '.groupby' → logprob: -6.301393032073975
    10. '.products' → logprob: -6.926393032073975

Token 112: '([' (ID: 5194)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.011061026714742184
    2. '([' → logprob: -4.511061191558838
    3. '((' → logprob: -11.88606071472168
    4. '(' → logprob: -12.63606071472168
    5. 'range' → logprob: -12.88606071472168
    6. ' (' → logprob: -15.63606071472168
    7. '(['' → logprob: -16.26106071472168
    8. '(list' → logprob: -16.63606071472168
    9. '(([' → logprob: -16.88606071472168
    10. ' ([' → logprob: -17.13606071472168

Token 113: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00039111197111196816
    2. 'False' → logprob: -8.375391006469727
    3. 'True' → logprob: -8.750391006469727
    4. ' ' → logprob: -14.125391006469727
    5. '   ' → logprob: -14.875391006469727
    6. '-' → logprob: -15.000391006469727
    7. '[' → logprob: -15.250391006469727
    8. '1' → logprob: -16.125391006469727
    9. '(' → logprob: -16.250391006469727
    10. '"' → logprob: -16.500391006469727

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010580805974313989
    2. '1' → logprob: -9.750105857849121
    3. ' ,' → logprob: -10.000105857849121
    4. '2' → logprob: -13.625105857849121
    5. ' ' → logprob: -14.875105857849121
    6. '],' → logprob: -15.875105857849121
    7. ',
' → logprob: -16.000104904174805
    8. '6' → logprob: -17.500104904174805
    9. '3' → logprob: -17.625104904174805
    10. '12' → logprob: -17.812604904174805

Token 115: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0076093473471701145
    2. ' ' → logprob: -4.8826093673706055
    3. '   ' → logprob: -13.320109367370605
    4. '  ' → logprob: -14.695109367370605
    5. '
' → logprob: -15.695109367370605
    6. '2' → logprob: -16.38260841369629
    7. '0' → logprob: -16.75760841369629
    8. '```' → logprob: -16.75760841369629
    9. ' ' → logprob: -16.75760841369629
    10. '    ' → logprob: -16.82010841369629

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.612634362885728e-05
    2. ' ' → logprob: -9.500076293945312
    3. '   ' → logprob: -14.812576293945312
    4. '
' → logprob: -15.500076293945312
    5. '-' → logprob: -16.000076293945312
    6. '  ' → logprob: -16.500076293945312
    7. '0' → logprob: -16.500076293945312
    8. ']' → logprob: -16.625076293945312
    9. '```' → logprob: -17.125076293945312
    10. '2' → logprob: -17.312576293945312

Token 117: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -2.8802491215174086e-05
    2. ']' → logprob: -11.000028610229492
    3. ' ],' → logprob: -11.375028610229492
    4. ''],' → logprob: -15.625028610229492
    5. '   ' → logprob: -16.500028610229492
    6. '()],' → logprob: -16.625028610229492
    7. '"],' → logprob: -16.875028610229492
    8. '],
' → logprob: -17.250028610229492
    9. 'repeat' → logprob: -17.250028610229492
    10. '),' → logprob: -17.625028610229492

Token 118: ' repeat' (ID: 22962)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.0790899395942688
    2. ' repeat' → logprob: -2.579089879989624
    3. 'range' → logprob: -8.579090118408203
    4. ' range' → logprob: -11.454090118408203
    5. ' ' → logprob: -14.454090118408203
    6. '   ' → logprob: -14.704090118408203
    7. ')' → logprob: -15.579090118408203
    8. '  ' → logprob: -16.329090118408203
    9. '[' → logprob: -16.329090118408203
    10. ' [' → logprob: -16.454090118408203

Token 119: '=N' (ID: 143132)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.21271802484989166
    2. 'N' → logprob: -1.7127180099487305
    3. ' N' → logprob: -5.5877180099487305
    4. '(' → logprob: -5.5877180099487305
    5. ')' → logprob: -5.8377180099487305
    6. ' (' → logprob: -7.5877180099487305
    7. ')(' → logprob: -8.21271800994873
    8. '   ' → logprob: -10.46271800994873
    9. ' ' → logprob: -11.33771800994873
    10. '	N' → logprob: -11.58771800994873

Token 120: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.000000953674316
    3. ')
' → logprob: -15.625000953674316
    4. '   ' → logprob: -17.875
    5. ')

' → logprob: -18.375
    6. ')`' → logprob: -18.375
    7. ')#' → logprob: -19.125
    8. '),' → logprob: -19.125
    9. ')return' → logprob: -19.25
    10. '<|end|>' → logprob: -19.375

Token 121: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ' check' (ID: 2371)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.2075200080871582
    2. 'count' → logprob: -1.3325200080871582
    3. ' count' → logprob: -1.4575200080871582
    4. 'main' → logprob: -1.8325200080871582
    5. 'check' → logprob: -4.582520008087158
    6. ' check' → logprob: -4.707520008087158
    7. 'calculate' → logprob: -5.207520008087158
    8. 'simulate' → logprob: -5.457520008087158
    9. 'solve' → logprob: -5.707520008087158
    10. 'evaluate' → logprob: -6.207520008087158

Token 123: '_condition' (ID: 64948)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8417230844497681
    2. '_switch' → logprob: -0.9667230844497681
    3. '_com' → logprob: -2.4667229652404785
    4. '_states' → logprob: -3.3417229652404785
    5. '(' → logprob: -4.0917229652404785
    6. '_state' → logprob: -4.3417229652404785
    7. '_comb' → logprob: -4.3417229652404785
    8. '_s' → logprob: -4.9667229652404785
    9. '_pres' → logprob: -5.7167229652404785
    10. 'switch' → logprob: -6.4667229652404785

Token 124: '_for' (ID: 11903)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05324370041489601
    2. '(s' → logprob: -3.553243637084961
    3. '(com' → logprob: -4.178243637084961
    4. '(N' → logprob: -5.428243637084961
    5. 's' → logprob: -7.553243637084961
    6. ' (' → logprob: -7.678243637084961
    7. '(condition' → logprob: -7.803243637084961
    8. '(def' → logprob: -8.303243637084961
    9. '(line' → logprob: -8.428243637084961
    10. '(n' → logprob: -8.928243637084961

Token 125: '_all' (ID: 13305)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.21046213805675507
    2. 'switch' → logprob: -2.9604620933532715
    3. '_comb' → logprob: -3.2104620933532715
    4. 'combo' → logprob: -3.4604620933532715
    5. 'all' → logprob: -3.9604620933532715
    6. 'p' → logprob: -4.3354620933532715
    7. 'state' → logprob: -4.7104620933532715
    8. '_switch' → logprob: -4.7104620933532715
    9. ' combination' → logprob: -4.7104620933532715
    10. 'com' → logprob: -6.8354620933532715

Token 126: '_switch' (ID: 64715)
  Prédit: '_com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.9756009578704834
    2. '(com' → logprob: -1.4756009578704834
    3. '_states' → logprob: -1.6006009578704834
    4. '(' → logprob: -2.2256009578704834
    5. '(_' → logprob: -3.9756009578704834
    6. '_s' → logprob: -4.1006011962890625
    7. 'com' → logprob: -4.1006011962890625
    8. '(s' → logprob: -4.7256011962890625
    9. '_pairs' → logprob: -4.8506011962890625
    10. 's' → logprob: -5.2256011962890625

Token 127: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.001276545925065875
    2. '(es' → logprob: -7.25127649307251
    3. '(s' → logprob: -9.001276969909668
    4. 'itches' → logprob: -9.126276969909668
    5. '(' → logprob: -9.376276969909668
    6. 'iches' → logprob: -9.501276969909668
    7. 'ices' → logprob: -9.751276969909668
    8. '(com' → logprob: -10.376276969909668
    9. 's' → logprob: -11.001276969909668
    10. '_com' → logprob: -11.751276969909668

Token 128: '(combo' (ID: 190470)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1635250598192215
    2. '(N' → logprob: -2.038525104522705
    3. '(s' → logprob: -3.913525104522705
    4. 's' → logprob: -8.163524627685547
    5. '(com' → logprob: -8.913524627685547
    6. '(S' → logprob: -9.413524627685547
    7. ' (' → logprob: -9.788524627685547
    8. '(def' → logprob: -10.288524627685547
    9. '(n' → logprob: -10.538524627685547
    10. 'def' → logprob: -11.788524627685547

Token 129: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.540105402469635
    2. 's' → logprob: -0.915105402469635
    3. ')' → logprob: -4.29010534286499
    4. ',' → logprob: -6.29010534286499
    5. '(s' → logprob: -7.16510534286499
    6. ',s' → logprob: -8.790105819702148
    7. '):
' → logprob: -9.165105819702148
    8. '_switch' → logprob: -10.040105819702148
    9. ' ):' → logprob: -10.290105819702148
    10. '(' → logprob: -10.540105819702148

Token 130: ' switches' (ID: 57537)
  Prédit: 'switch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'switch' → logprob: -0.7025606036186218
    2. ' switches' → logprob: -0.7025606036186218
    3. 'p' → logprob: -5.7025604248046875
    4. ' p' → logprob: -6.0775604248046875
    5. ' M' → logprob: -6.5775604248046875
    6. 'M' → logprob: -7.2025604248046875
    7. '   ' → logprob: -7.8275604248046875
    8. ' switch' → logprob: -7.8275604248046875
    9. 's' → logprob: -8.077560424804688
    10. ' N' → logprob: -9.327560424804688

Token 131: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030339285731315613
    2. ',' → logprob: -3.530339241027832
    3. '):
' → logprob: -8.030339241027832
    4. ')' → logprob: -8.405339241027832
    5. 's' → logprob: -11.405339241027832
    6. ':' → logprob: -11.905339241027832
    7. ' ):' → logprob: -12.030339241027832
    8. '):
' → logprob: -12.530339241027832
    9. '):

' → logprob: -13.280339241027832
    10. ',s' → logprob: -13.405339241027832

Token 132: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.25197580456733704
    2. ' p' → logprob: -1.5019757747650146
    3. '   ' → logprob: -11.501976013183594
    4. ' ' → logprob: -11.626976013183594
    5. 's' → logprob: -12.189476013183594
    6. ')' → logprob: -12.626976013183594
    7. '	p' → logprob: -13.189476013183594
    8. ' ' → logprob: -13.376976013183594
    9. '  ' → logprob: -13.439476013183594
    10. 'switch' → logprob: -13.564476013183594

Token 133: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008153468370437622
    2. '):
' → logprob: -7.250815391540527
    3. ')' → logprob: -9.250815391540527
    4. '):
' → logprob: -12.625815391540527
    5. ' ):' → logprob: -13.000815391540527
    6. 's' → logprob: -13.375815391540527
    7. ':' → logprob: -14.125815391540527
    8. '):

' → logprob: -14.250815391540527
    9. '[]):' → logprob: -15.875815391540527
    10. '_' → logprob: -15.875815391540527

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029611852020025253
    2. ' for' → logprob: -3.654611825942993
    3. 'for' → logprob: -6.779612064361572
    4. '    
' → logprob: -7.029612064361572
    5. '
' → logprob: -7.529612064361572
    6. ':' → logprob: -8.029611587524414
    7. ':
' → logprob: -9.779611587524414
    8. '```' → logprob: -10.029611587524414
    9. 'def' → logprob: -10.154611587524414
    10. '    ' → logprob: -10.279611587524414

Token 135: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2537728548049927
    2. '   ' → logprob: -2.378772735595703
    3. ' result' → logprob: -2.878772735595703
    4. 'for' (adapté à ' for') → logprob: -3.128772735595703
    5. 'result' → logprob: -3.628772735595703
    6. ' all' → logprob: -6.253772735595703
    7. 'all' → logprob: -7.378772735595703
    8. '
' → logprob: -7.878772735595703
    9. 'def' → logprob: -7.878772735595703
    10. ' results' → logprob: -8.253772735595703

Token 136: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15892760455608368
    2. ' i' → logprob: -2.1589276790618896
    3. 'idx' → logprob: -4.5339274406433105
    4. 'switch' → logprob: -4.6589274406433105
    5. ' switch' → logprob: -5.4089274406433105
    6. ' idx' → logprob: -5.5339274406433105
    7. 'combo' → logprob: -6.6589274406433105
    8. 'index' → logprob: -7.1589274406433105
    9. ' combo' → logprob: -7.9089274406433105
    10. 's' → logprob: -8.908927917480469

Token 137: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04442473500967026
    2. 'in' → logprob: -3.6694247722625732
    3. ',' → logprob: -4.044424533843994
    4. ' ,' → logprob: -7.919424533843994
    5. ' ' → logprob: -10.169425010681152
    6. '_in' → logprob: -11.669425010681152
    7. 's' → logprob: -12.169425010681152
    8. 'range' → logprob: -12.294425010681152
    9. '  ' → logprob: -13.044425010681152
    10. '<|end|>' → logprob: -13.044425010681152

Token 138: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005532711511477828
    2. ' range' → logprob: -7.500553131103516
    3. 'switch' → logprob: -16.500553131103516
    4. '(range' → logprob: -16.500553131103516
    5. '	range' → logprob: -16.750553131103516
    6. '   ' → logprob: -18.500553131103516
    7. ' ' → logprob: -18.625553131103516
    8. 'rang' → logprob: -18.750553131103516
    9. 'ranges' → logprob: -18.750553131103516
    10. '  ' → logprob: -18.875553131103516

Token 139: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.00867484975606203
    2. 'len' → logprob: -4.758674621582031
    3. ' len' → logprob: -9.758674621582031
    4. ',len' → logprob: -13.758674621582031
    5. '(' → logprob: -14.008674621582031
    6. '[len' → logprob: -15.508674621582031
    7. ' (' → logprob: -15.633674621582031
    8. '=len' → logprob: -16.25867462158203
    9. '   ' → logprob: -16.63367462158203
    10. '(M' → logprob: -16.75867462158203

Token 140: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.012099646963179111
    2. '(p' → logprob: -4.512099742889404
    3. 'switch' → logprob: -7.387099742889404
    4. '(' → logprob: -8.637099266052246
    5. ' (' → logprob: -9.137099266052246
    6. 'p' → logprob: -9.262099266052246
    7. ' switches' → logprob: -10.762099266052246
    8. 's' → logprob: -11.512099266052246
    9. ' p' → logprob: -12.012099266052246
    10. '(com' → logprob: -12.137099266052246

Token 141: 'witch' (ID: 8159)
  Prédit: 'witch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'witch' → logprob: -0.0002786167024169117
    2. 'switch' → logprob: -8.50027847290039
    3. 'with' → logprob: -10.12527847290039
    4. 'w' → logprob: -10.37527847290039
    5. 'wt' → logprob: -14.12527847290039
    6. ')' → logprob: -14.50027847290039
    7. 'itches' → logprob: -14.87527847290039
    8. '_switch' → logprob: -15.00027847290039
    9. '```' → logprob: -15.37527847290039
    10. 'wit' → logprob: -15.37527847290039

Token 142: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.00015217094914987683
    2. 's' → logprob: -10.500152587890625
    3. '[' → logprob: -11.125152587890625
    4. ')' → logprob: -11.125152587890625
    5. '   ' → logprob: -11.375152587890625
    6. '_' → logprob: -11.500152587890625
    7. '_es' → logprob: -11.500152587890625
    8. ' es' → logprob: -11.875152587890625
    9. '_s' → logprob: -12.375152587890625
    10. ',' → logprob: -12.625152587890625

Token 143: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.024823255836963654
    2. ')):
' → logprob: -4.274823188781738
    3. '))' → logprob: -4.774823188781738
    4. '):' → logprob: -6.274823188781738
    5. '[' → logprob: -9.274823188781738
    6. ' ))' → logprob: -9.774823188781738
    7. ')):
' → logprob: -10.149823188781738
    8. ' ' → logprob: -10.774823188781738
    9. ':' → logprob: -10.774823188781738
    10. '   ' → logprob: -10.899823188781738

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15788371860980988
    2. ':' → logprob: -2.157883644104004
    3. '   ' → logprob: -3.907883644104004
    4. '):' → logprob: -5.907883644104004
    5. ' if' → logprob: -6.032883644104004
    6. '    ' → logprob: -7.032883644104004
    7. ' s' → logprob: -7.032883644104004
    8. ',' → logprob: -7.532883644104004
    9. '```' → logprob: -7.532883644104004
    10. 'if' → logprob: -7.657883644104004

Token 145: ' if' (ID: 538)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.753050684928894
    2. 's' → logprob: -1.253050684928894
    3. 'count' → logprob: -2.5030508041381836
    4. 'sum' → logprob: -2.6280508041381836
    5. '   ' → logprob: -3.0030508041381836
    6. 'on' → logprob: -4.253050804138184
    7. 'state' → logprob: -4.628050804138184
    8. 'c' → logprob: -6.253050804138184
    9. 'val' → logprob: -6.378050804138184
    10. '       ' → logprob: -6.378050804138184

Token 146: ' not' (ID: 625)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.06479675322771072
    2. ' sum' → logprob: -2.8147966861724854
    3. '(sum' → logprob: -6.4397969245910645
    4. '   ' → logprob: -7.0647969245910645
    5. 'combo' → logprob: -9.064796447753906
    6. ' not' → logprob: -9.564796447753906
    7. 'not' → logprob: -9.939796447753906
    8. ' combo' → logprob: -10.564796447753906
    9. ' (' → logprob: -10.814796447753906
    10. 'len' → logprob: -10.939796447753906

Token 147: ' check' (ID: 2371)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.7218390703201294
    2. 'sum' → logprob: -1.0968390703201294
    3. 'all' → logprob: -3.34683895111084
    4. ' sum' → logprob: -3.59683895111084
    5. '(any' → logprob: -3.72183895111084
    6. 'any' → logprob: -3.84683895111084
    7. '(s' → logprob: -3.97183895111084
    8. ' (' → logprob: -4.47183895111084
    9. '((' → logprob: -4.72183895111084
    10. ' any' → logprob: -4.97183895111084

Token 148: '_switch' (ID: 64715)
  Prédit: '_condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_condition' → logprob: -0.00889664888381958
    2. '_switch' → logprob: -5.383896827697754
    3. '_' → logprob: -6.258896827697754
    4. '_comb' → logprob: -6.383896827697754
    5. '_combo' → logprob: -8.883896827697754
    6. '_sum' → logprob: -9.133896827697754
    7. '(s' → logprob: -9.258896827697754
    8. 'switch' → logprob: -10.133896827697754
    9. 'sum' → logprob: -10.383896827697754
    10. '_s' → logprob: -10.508896827697754

Token 149: '(combo' (ID: 190470)
  Prédit: '_condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_condition' → logprob: -0.15305696427822113
    2. '_state' → logprob: -2.0280568599700928
    3. '(combo' → logprob: -5.778057098388672
    4. '_combo' → logprob: -6.028057098388672
    5. '_comb' → logprob: -6.903057098388672
    6. '(j' → logprob: -6.903057098388672
    7. '_status' → logprob: -7.153057098388672
    8. '_' → logprob: -7.653057098388672
    9. '_on' → logprob: -8.528057098388672
    10. '(s' → logprob: -8.528057098388672

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006091373506933451
    2. ',j' → logprob: -5.506091594696045
    3. ' ,' → logprob: -7.131091594696045
    4. '[j' → logprob: -7.131091594696045
    5. 's' → logprob: -8.381091117858887
    6. ',s' → logprob: -9.506091117858887
    7. 'j' → logprob: -10.631091117858887
    8. '[' → logprob: -10.756091117858887
    9. 'switch' → logprob: -10.881091117858887
    10. ')' → logprob: -11.631091117858887

Token 151: ' switches' (ID: 57537)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0583663135766983
    2. ' j' → logprob: -2.933366298675537
    3. 'switch' → logprob: -5.933366298675537
    4. ' switches' → logprob: -7.808366298675537
    5. '   ' → logprob: -8.808366775512695
    6. ' ' → logprob: -9.808366775512695
    7. ')' → logprob: -9.933366775512695
    8. '[j' → logprob: -10.183366775512695
    9. 's' → logprob: -11.245866775512695
    10. '    ' → logprob: -11.370866775512695

Token 152: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0018747396534308791
    2. '[' → logprob: -6.501874923706055
    3. ',j' → logprob: -8.876874923706055
    4. ',' → logprob: -8.876874923706055
    5. ' [' → logprob: -10.501874923706055
    6. ')[' → logprob: -11.251874923706055
    7. '][' → logprob: -11.876874923706055
    8. '[
' → logprob: -12.001874923706055
    9. '[s' → logprob: -12.001874923706055
    10. '[js' → logprob: -12.001874923706055

Token 153: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.03673212230205536
    2. '),' → logprob: -3.6617321968078613
    3. ']))' → logprob: -5.161732196807861
    4. ']):' → logprob: -6.286732196807861
    5. ')):' → logprob: -7.411732196807861
    6. ']' → logprob: -7.536732196807861
    7. '])):
' → logprob: -7.661732196807861
    8. ',' → logprob: -8.411731719970703
    9. '])' → logprob: -8.786731719970703
    10. '][' → logprob: -9.161731719970703

Token 154: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02063099667429924
    2. ' p' → logprob: -3.8956310749053955
    3. '   ' → logprob: -9.895630836486816
    4. ' ' → logprob: -11.645630836486816
    5. ')' → logprob: -11.770630836486816
    6. ')p' → logprob: -12.395630836486816
    7. ',' → logprob: -12.520630836486816
    8. '  ' → logprob: -13.020630836486816
    9. '    ' → logprob: -13.270630836486816
    10. '       ' → logprob: -13.583130836486816

Token 155: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.20397520065307617
    2. '):' → logprob: -1.7039752006530762
    3. '):
' → logprob: -6.453975200653076
    4. ')' → logprob: -7.578975200653076
    5. '[' → logprob: -8.328975677490234
    6. ',' → logprob: -8.953975677490234
    7. ',j' → logprob: -10.203975677490234
    8. ' ):' → logprob: -10.828975677490234
    9. ':' → logprob: -11.703975677490234
    10. '):
' → logprob: -12.203975677490234

Token 156: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7241727113723755
    2. ']):' → logprob: -0.8491727113723755
    3. ']):
' → logprob: -3.099172592163086
    4. '):
' → logprob: -3.349172592163086
    5. ')' → logprob: -5.599172592163086
    6. '])' → logprob: -6.474172592163086
    7. ']:' → logprob: -7.474172592163086
    8. ']' → logprob: -7.599172592163086
    9. ' ):' → logprob: -8.224172592163086
    10. ':' → logprob: -8.474172592163086

Token 157: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48818227648735046
    2. ':
' → logprob: -1.6131823062896729
    3. '       ' → logprob: -1.8631823062896729
    4. ':return' → logprob: -4.363182067871094
    5. '           ' → logprob: -4.488182067871094
    6. '):
' → logprob: -5.613182067871094
    7. '):' → logprob: -5.863182067871094
    8. '   ' → logprob: -7.863182067871094
    9. ' return' → logprob: -8.488182067871094
    10. 'return' → logprob: -8.988182067871094

Token 158: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6110825538635254
    2. '           ' → logprob: -1.3610825538635254
    3. ' return' → logprob: -1.6110825538635254
    4. '               ' → logprob: -6.986082553863525
    5. '       ' → logprob: -8.361082077026367
    6. '   ' → logprob: -11.361082077026367
    7. '	return' → logprob: -12.486082077026367
    8. ':return' → logprob: -13.111082077026367
    9. 'break' → logprob: -13.611082077026367
    10. '          ' → logprob: -13.861082077026367

Token 159: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.10020667314529419
    2. ' False' → logprob: -2.3502066135406494
    3. '(False' → logprob: -20.60020637512207
    4. ' false' → logprob: -21.47520637512207
    5. 'None' → logprob: -21.60020637512207
    6. '_false' → logprob: -21.60020637512207
    7. 'false' → logprob: -21.72520637512207
    8. ' ' → logprob: -22.35020637512207
    9. '=False' → logprob: -22.72520637512207
    10. 'True' → logprob: -23.10020637512207

Token 160: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038041153457015753
    2. '
' → logprob: -6.0038042068481445
    3. '    
' → logprob: -6.8788042068481445
    4. ' return' → logprob: -9.253804206848145
    5. '  
' → logprob: -9.628804206848145
    6. 'return' → logprob: -10.003804206848145
    7. '	return' → logprob: -11.003804206848145
    8. ' 
' → logprob: -11.378804206848145
    9. '   
' → logprob: -11.503804206848145
    10. '       ' → logprob: -11.503804206848145

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003171121352352202
    2. 'return' → logprob: -8.750317573547363
    3. ' return' → logprob: -9.000317573547363
    4. '
' → logprob: -10.500317573547363
    5. '	return' → logprob: -12.625317573547363
    6. '    
' → logprob: -13.500317573547363
    7. '   ' → logprob: -13.625317573547363
    8. '       ' → logprob: -13.750317573547363
    9. ',' → logprob: -16.000316619873047
    10. '  ' → logprob: -16.125316619873047

Token 162: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010544500313699245
    2. ' return' → logprob: -5.135544300079346
    3. 'return' (adapté à ' return') → logprob: -5.385544300079346
    4. '
' → logprob: -11.510544776916504
    5. '	return' → logprob: -12.010544776916504
    6. '       ' → logprob: -13.635544776916504
    7. 'True' → logprob: -13.635544776916504
    8. ' ' → logprob: -13.760544776916504
    9. '    
' → logprob: -13.885544776916504
    10. 'eturn' → logprob: -14.760544776916504

Token 163: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.2014133334159851
    2. ' True' → logprob: -1.7014133930206299
    3. ' ' → logprob: -19.201414108276367
    4. '(True' → logprob: -19.576414108276367
    5. '=True' → logprob: -20.701414108276367
    6. 'False' → logprob: -22.201414108276367
    7. 'true' → logprob: -22.826414108276367
    8. '   ' → logprob: -22.951414108276367
    9. '.True' → logprob: -23.201414108276367
    10. ' true' → logprob: -24.201414108276367

Token 164: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13142624497413635
    2. '
' → logprob: -2.3814263343811035
    3. '<|end|>' → logprob: -3.6314263343811035
    4. ' def' → logprob: -6.5064263343811035
    5. '

' → logprob: -7.1314263343811035
    6. '\n' → logprob: -8.006425857543945
    7. '    
' → logprob: -8.131425857543945
    8. '```' → logprob: -8.131425857543945
    9. '<|end|>' → logprob: -8.381425857543945
    10. '\' → logprob: -8.381425857543945

Token 165: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010700850980356336
    2. '
' → logprob: -7.001070022583008
    3. ' def' → logprob: -10.251070022583008
    4. '<|end|>' → logprob: -10.376070022583008
    5. '_' → logprob: -10.501070022583008
    6. ' 
' → logprob: -11.001070022583008
    7. '    
' → logprob: -11.501070022583008
    8. '

' → logprob: -11.501070022583008
    9. '  
' → logprob: -11.751070022583008
    10. '\' → logprob: -12.001070022583008

Token 166: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.47465240955352783
    2. ' check' → logprob: -0.9746524095535278
    3. ' find' → logprob: -7.724652290344238
    4. 'find' → logprob: -9.099652290344238
    5. 'filter' → logprob: -12.099652290344238
    6. 'search' → logprob: -12.849652290344238
    7. ' is' → logprob: -13.474652290344238
    8. 'def' → logprob: -13.474652290344238
    9. 'switch' → logprob: -13.474652290344238
    10. 'is' → logprob: -13.974652290344238

Token 167: '_switch' (ID: 64715)
  Prédit: '_switch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_switch' → logprob: -8.864272967912257e-05
    2. '_' → logprob: -9.375088691711426
    3. '_s' → logprob: -13.625088691711426
    4. 'switch' → logprob: -13.750088691711426
    5. '_space' → logprob: -14.625088691711426
    6. '_condition' → logprob: -15.000088691711426
    7. '_toggle' → logprob: -16.00008773803711
    8. '_SWITCH' → logprob: -16.37508773803711
    9. ' _' → logprob: -16.50008773803711
    10. '_sw' → logprob: -17.00008773803711

Token 168: '(combo' (ID: 190470)
  Prédit: '(combo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(combo' → logprob: -0.004879231099039316
    2. '(' → logprob: -5.379878997802734
    3. '(com' → logprob: -9.129878997802734
    4. ' (' → logprob: -9.504878997802734
    5. 'combo' → logprob: -9.879878997802734
    6. '_combo' → logprob: -10.754878997802734
    7. ' combo' → logprob: -13.129878997802734
    8. '(
' → logprob: -15.379878997802734
    9. '.combo' → logprob: -15.754878997802734
    10. '_' → logprob: -16.379878997802734

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025776340044103563
    2. ',s' → logprob: -8.62525749206543
    3. ' ,' → logprob: -9.62525749206543
    4. 's' → logprob: -11.62525749206543
    5. 'switch' → logprob: -13.00025749206543
    6. '_,' → logprob: -15.37525749206543
    7. ',j' → logprob: -15.62525749206543
    8. '[],' → logprob: -15.87525749206543
    9. '[' → logprob: -16.25025749206543
    10. '   ' → logprob: -17.00025749206543

Token 170: ' switch' (ID: 6160)
  Prédit: 'switch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'switch' → logprob: -0.1741059422492981
    2. ' switch' → logprob: -2.0491058826446533
    3. ' switches' → logprob: -3.7991058826446533
    4. 's' → logprob: -5.424106121063232
    5. 'indices' → logprob: -7.174106121063232
    6. 'indexes' → logprob: -7.799106121063232
    7. 'sw' → logprob: -8.049105644226074
    8. 'keys' → logprob: -8.299105644226074
    9. 'toggle' → logprob: -8.924105644226074
    10. '   ' → logprob: -8.986605644226074

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006307095172815025
    2. ' ,' → logprob: -8.375630378723145
    3. ',s' → logprob: -8.500630378723145
    4. '):' → logprob: -9.250630378723145
    5. 's' → logprob: -9.500630378723145
    6. '_,' → logprob: -11.625630378723145
    7. 'switch' → logprob: -12.625630378723145
    8. ',index' → logprob: -13.125630378723145
    9. ')' → logprob: -13.875630378723145
    10. '   ' → logprob: -14.125630378723145

Token 172: ' required' (ID: 3759)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0012379679828882217
    2. ' p' → logprob: -6.876237869262695
    3. 'state' → logprob: -10.001237869262695
    4. 'par' → logprob: -10.001237869262695
    5. 'val' → logprob: -10.376237869262695
    6. 'value' → logprob: -11.626237869262695
    7. '   ' → logprob: -11.751237869262695
    8. ' ' → logprob: -12.126237869262695
    9. 'c' → logprob: -12.251237869262695
    10. 'pi' → logprob: -12.251237869262695

Token 173: '_par' (ID: 31329)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9235364198684692
    2. '_state' → logprob: -1.1735364198684692
    3. '_sum' → logprob: -1.4235364198684692
    4. '):
' → logprob: -4.17353630065918
    5. '_par' → logprob: -4.17353630065918
    6. '_value' → logprob: -4.67353630065918
    7. 'state' → logprob: -5.42353630065918
    8. '_states' → logprob: -5.79853630065918
    9. 'sum' → logprob: -6.04853630065918
    10. '_power' → logprob: -7.67353630065918

Token 174: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -3.9054008084349334e-05
    2. '```' → logprob: -11.375039100646973
    3. 'ty' → logprob: -11.625039100646973
    4. 'it' → logprob: -12.625039100646973
    5. 'itys' → logprob: -13.000039100646973
    6. 'ities' → logprob: -13.000039100646973
    7. ')' → logprob: -13.625039100646973
    8. '1' → logprob: -13.625039100646973
    9. '   ' → logprob: -14.125039100646973
    10. 'par' → logprob: -14.375039100646973

Token 175: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004092054907232523
    2. '):
' → logprob: -5.504092216491699
    3. ')' → logprob: -12.1290922164917
    4. '):
' → logprob: -12.3790922164917
    5. ' ):' → logprob: -13.2540922164917
    6. '):

' → logprob: -13.6290922164917
    7. ':' → logprob: -15.0040922164917
    8. '_' → logprob: -15.8790922164917
    9. 's' → logprob: -16.379091262817383
    10. ' ' → logprob: -16.379091262817383

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.667445182800293
    2. ':' → logprob: -0.792445182800293
    3. ' :' → logprob: -4.292445182800293
    4. '(' → logprob: -4.917445182800293
    5. '):' → logprob: -5.667445182800293
    6. ':
' → logprob: -5.667445182800293
    7. ' (' → logprob: -6.542445182800293
    8. ')' → logprob: -6.917445182800293
    9. '    ' → logprob: -7.167445182800293
    10. ' :
' → logprob: -7.292445182800293

Token 177: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2835618257522583
    2. 'total' → logprob: -1.2835618257522583
    3. 'count' (adapté à ' count') → logprob: -1.9085618257522583
    4. ' total' → logprob: -2.4085617065429688
    5. 's' → logprob: -3.1585617065429688
    6. ' count' → logprob: -3.4085617065429688
    7. 'sum' → logprob: -3.5335617065429688
    8. ' parity' → logprob: -4.033561706542969
    9. 'on' → logprob: -4.158561706542969
    10. 'par' → logprob: -4.408561706542969

Token 178: '_on' (ID: 10053)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0910654217004776
    2. '=' → logprob: -2.4660654067993164
    3. '_on' → logprob: -6.216065406799316
    4. '_' → logprob: -9.216065406799316
    5. '_ON' → logprob: -11.716065406799316
    6. ' ' → logprob: -12.466065406799316
    7. '_active' → logprob: -12.716065406799316
    8. '   ' → logprob: -12.841065406799316
    9. 'On' → logprob: -12.841065406799316
    10. 'on' → logprob: -13.341065406799316

Token 179: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300866648554802
    2. '=' → logprob: -3.16800856590271
    3. ' ' → logprob: -12.418008804321289
    4. ')' → logprob: -13.293008804321289
    5. 's' → logprob: -13.543008804321289
    6. '   ' → logprob: -13.918008804321289
    7. ' =
' → logprob: -14.793008804321289
    8. '  ' → logprob: -15.418008804321289
    9. '_' → logprob: -15.418008804321289
    10. ' +=' → logprob: -15.918008804321289

Token 180: ' count' (ID: 3605)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3805669844150543
    2. ' sum' → logprob: -1.380566954612732
    3. 'sum' → logprob: -3.2555670738220215
    4. ' ' → logprob: -3.6305670738220215
    5. '   ' → logprob: -10.755566596984863
    6. ' len' → logprob: -13.005566596984863
    7. '	sum' → logprob: -13.380566596984863
    8. 'len' → logprob: -13.568066596984863
    9. '  ' → logprob: -14.068066596984863
    10. '1' → logprob: -14.505566596984863

Token 181: '_switch' (ID: 64715)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3536584973335266
    2. '=' → logprob: -2.228658437728882
    3. '(lambda' → logprob: -2.978658437728882
    4. '_' → logprob: -3.603658437728882
    5. '(i' → logprob: -3.603658437728882
    6. ' =' → logprob: -4.103658676147461
    7. '_tokens' → logprob: -4.103658676147461
    8. '_on' → logprob: -4.603658676147461
    9. '1' → logprob: -4.728658676147461
    10. '(combo' → logprob: -5.478658676147461

Token 182: '_on' (ID: 10053)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -1.0322571992874146
    2. 's' → logprob: -1.2822571992874146
    3. '(combo' → logprob: -1.2822571992874146
    4. '_on' → logprob: -3.407257080078125
    5. '_' → logprob: -3.532257080078125
    6. 'es' → logprob: -4.907257080078125
    7. 'combo' → logprob: -5.407257080078125
    8. '   ' → logprob: -5.782257080078125
    9. '_s' → logprob: -6.407257080078125
    10. '_positions' → logprob: -6.907257080078125

Token 183: '(combo' (ID: 190470)
  Prédit: '(combo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(combo' → logprob: -0.157011941075325
    2. 's' → logprob: -2.1570119857788086
    3. '(s' → logprob: -4.657011985778809
    4. 'combo' → logprob: -5.157011985778809
    5. '(' → logprob: -5.532011985778809
    6. ' (' → logprob: -6.157011985778809
    7. '_bits' → logprob: -6.407011985778809
    8. 'switch' → logprob: -7.282011985778809
    9. ')' → logprob: -7.532011985778809
    10. '_positions' → logprob: -7.532011985778809

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005436192732304335
    2. ',s' → logprob: -8.125543594360352
    3. ' ,' → logprob: -8.875543594360352
    4. 's' → logprob: -9.875543594360352
    5. 'switch' → logprob: -10.375543594360352
    6. '   ' → logprob: -11.625543594360352
    7. '[' → logprob: -12.500543594360352
    8. ',
' → logprob: -12.750543594360352
    9. ')' → logprob: -13.000543594360352
    10. '[s' → logprob: -13.625543594360352

Token 185: ' switch' (ID: 6160)
  Prédit: 'switch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'switch' → logprob: -0.02068646252155304
    2. ' switch' → logprob: -3.895686388015747
    3. '[s' → logprob: -10.020686149597168
    4. '[' → logprob: -10.645686149597168
    5. '   ' → logprob: -11.020686149597168
    6. ')' → logprob: -11.145686149597168
    7. 'lambda' → logprob: -11.145686149597168
    8. 'set' → logprob: -11.645686149597168
    9. ' ' → logprob: -12.145686149597168
    10. 's' → logprob: -12.645686149597168

Token 186: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010807292710524052
    2. ')
' → logprob: -9.750107765197754
    3. ' )' → logprob: -10.750107765197754
    4. ',' → logprob: -11.375107765197754
    5. ')

' → logprob: -13.000107765197754
    6. ')}' → logprob: -13.250107765197754
    7. '   ' → logprob: -13.250107765197754
    8. ')>' → logprob: -13.625107765197754
    9. '),' → logprob: -13.750107765197754
    10. '))' → logprob: -14.000107765197754

Token 187: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04562389850616455
    2. ')' → logprob: -4.045623779296875
    3. '<|end|>' → logprob: -4.420623779296875
    4. 'def' → logprob: -4.545623779296875
    5. '%' → logprob: -7.170623779296875
    6. '
' → logprob: -7.420623779296875
    7. '    
' → logprob: -7.420623779296875
    8. '  ' → logprob: -8.045623779296875
    9. '    ' → logprob: -8.170623779296875
    10. ' ' → logprob: -8.295623779296875

Token 188: ' return' (ID: 622)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.13662832975387573
    2. '%' → logprob: -2.1366283893585205
    3. ' return' → logprob: -5.261628150939941
    4. 'return' (adapté à ' return') → logprob: -5.761628150939941
    5. ' ' → logprob: -7.386628150939941
    6. '   ' → logprob: -7.636628150939941
    7. '    ' → logprob: -10.636628150939941
    8. '
' → logprob: -10.636628150939941
    9. ' if' → logprob: -10.761628150939941
    10. ')' → logprob: -10.761628150939941

Token 189: ' (' (ID: 350)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -1.1292306184768677
    2. ' (' → logprob: -1.3792306184768677
    3. ' count' → logprob: -1.3792306184768677
    4. 'count' → logprob: -1.7542306184768677
    5. '[count' → logprob: -10.129230499267578
    6. '   ' → logprob: -10.629230499267578
    7. ' ' → logprob: -10.754230499267578
    8. '((' → logprob: -10.879230499267578
    9. ' ((' → logprob: -11.254230499267578
    10. '	count' → logprob: -12.129230499267578

Token 190: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.005269334185868502
    2. ' count' → logprob: -5.255269527435303
    3. '(count' → logprob: -10.380269050598145
    4. '   ' → logprob: -12.630269050598145
    5. '	count' → logprob: -15.005269050598145
    6. ' ' → logprob: -15.380269050598145
    7. '[count' → logprob: -15.505269050598145
    8. ')' → logprob: -15.630269050598145
    9. ' (' → logprob: -16.63027000427246
    10. 'counts' → logprob: -16.63027000427246

Token 191: '_on' (ID: 10053)
  Prédit: '_on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: -1.3856492842023727e-06
    2. 'on' → logprob: -14.125000953674316
    3. '_switch' → logprob: -15.000000953674316
    4. '_' → logprob: -16.250001907348633
    5. '_count' → logprob: -16.750001907348633
    6. 'switch' → logprob: -17.125001907348633
    7. '_for' → logprob: -17.625001907348633
    8. ')' → logprob: -18.125001907348633
    9. '_to' → logprob: -18.125001907348633
    10. '_ON' → logprob: -18.375001907348633

Token 192: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3132798373699188
    2. ' %' → logprob: -1.3132798671722412
    3. '+' → logprob: -11.68828010559082
    4. ' ' → logprob: -12.31328010559082
    5. ' ' → logprob: -13.06328010559082
    6. ')' → logprob: -13.68828010559082
    7. '[' → logprob: -14.56328010559082
    8. '   ' → logprob: -14.68828010559082
    9. ')%' → logprob: -15.18828010559082
    10. ' +' → logprob: -16.31328010559082

Token 193: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.523139476776123
    2. ' ' → logprob: -0.898139476776123
    3. ')' → logprob: -11.898139953613281
    4. '   ' → logprob: -12.898139953613281
    5. '<|end|>' → logprob: -13.148139953613281
    6. '```' → logprob: -13.585639953613281
    7. '  ' → logprob: -13.898139953613281
    8. '
' → logprob: -15.085639953613281
    9. 's' → logprob: -15.335639953613281
    10. '=' → logprob: -15.460639953613281

Token 194: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.869017852295656e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.125006675720215
    4. '```' → logprob: -16.25000762939453
    5. '２' → logprob: -16.93750762939453
    6. '२' → logprob: -17.31250762939453
    7. '۲' → logprob: -17.43750762939453
    8. '  ' → logprob: -17.68750762939453
    9. '২' → logprob: -17.87500762939453
    10. ')' → logprob: -17.93750762939453

Token 195: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07990369200706482
    2. ')==' → logprob: -2.8299036026000977
    3. '==' → logprob: -4.079903602600098
    4. ' ==' → logprob: -7.079903602600098
    5. ' )' → logprob: -10.704903602600098
    6. '=' → logprob: -13.204903602600098
    7. ']==' → logprob: -14.954903602600098
    8. '）' → logprob: -15.829903602600098
    9. ')=' → logprob: -16.079904556274414
    10. '===' → logprob: -16.579904556274414

Token 196: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38702672719955444
    2. ' ==' → logprob: -1.1370267868041992
    3. '=' → logprob: -9.1370267868042
    4. ')==' → logprob: -10.3870267868042
    5. ')' → logprob: -11.5120267868042
    6. ' ' → logprob: -13.7620267868042
    7. '==
' → logprob: -13.7620267868042
    8. '[' → logprob: -13.8870267868042
    9. ' ' → logprob: -14.0120267868042
    10. '()==' → logprob: -14.1370267868042

Token 197: ' required' (ID: 3759)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.31328409910202026
    2. ' required' → logprob: -1.313284158706665
    3. '(required' → logprob: -10.813283920288086
    4. '	required' → logprob: -13.313283920288086
    5. '_required' → logprob: -15.063283920288086
    6. ' ' → logprob: -15.938283920288086
    7. '   ' → logprob: -17.063283920288086
    8. '-required' → logprob: -17.313283920288086
    9. '.required' → logprob: -17.563283920288086
    10. 'Required' → logprob: -17.563283920288086

Token 198: '_par' (ID: 31329)
  Prédit: '_par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_par' → logprob: -0.0003364158037584275
    2. 'par' → logprob: -8.000336647033691
    3. ' parity' → logprob: -15.625336647033691
    4. 'p' → logprob: -15.625336647033691
    5. 'required' → logprob: -15.750336647033691
    6. '_p' → logprob: -16.250335693359375
    7. 'Parity' → logprob: -16.750335693359375
    8. '_switch' → logprob: -17.125335693359375
    9. '	par' → logprob: -17.375335693359375
    10. 'switch' → logprob: -17.500335693359375

Token 199: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -2.2961512513575144e-05
    2. 'it' → logprob: -11.250022888183594
    3. 'ty' → logprob: -12.500022888183594
    4. 'i' → logprob: -12.625022888183594
    5. 'ety' → logprob: -14.875022888183594
    6. 's' → logprob: -15.000022888183594
    7. 'city' → logprob: -15.125022888183594
    8. ' ity' → logprob: -15.250022888183594
    9. '_' → logprob: -15.625022888183594
    10. '```' → logprob: -15.875022888183594

Token 200: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005448616575449705
    2. '
' → logprob: -5.380448818206787
    3. '

' → logprob: -7.880448818206787
    4. '  
' → logprob: -9.130448341369629
    5. ' def' → logprob: -9.380448341369629
    6. '<|end|>' → logprob: -9.380448341369629
    7. '    
' → logprob: -9.755448341369629
    8. '\' → logprob: -10.630448341369629
    9. '```' → logprob: -10.880448341369629
    10. ' 
' → logprob: -10.880448341369629

Token 201: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.673547563375905e-05
    2. '(' → logprob: -10.375086784362793
    3. '(
' → logprob: -10.625086784362793
    4. ' def' → logprob: -11.500086784362793
    5. '_def' → logprob: -11.625086784362793
    6. '_' → logprob: -12.625086784362793
    7. ':def' → logprob: -12.875086784362793
    8. 'ndef' → logprob: -13.625086784362793
    9. '(def' → logprob: -13.625086784362793
    10. '0' → logprob: -14.625086784362793

Token 202: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.02324605919420719
    2. ' count' → logprob: -3.7732460498809814
    3. '_count' → logprob: -14.898245811462402
    4. 'def' → logprob: -16.39824676513672
    5. '	count' → logprob: -17.39824676513672
    6. 'c' → logprob: -17.89824676513672
    7. ' ' → logprob: -18.02324676513672
    8. 'counts' → logprob: -19.02324676513672
    9. '[count' → logprob: -19.27324676513672
    10. '(count' → logprob: -19.27324676513672

Token 203: '_switch' (ID: 64715)
  Prédit: '_switch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_switch' → logprob: -0.0028246084693819284
    2. '_' → logprob: -5.877824783325195
    3. '_s' → logprob: -11.752824783325195
    4. 'switch' → logprob: -12.127824783325195
    5. '_count' → logprob: -13.502824783325195
    6. '_sw' → logprob: -13.877824783325195
    7. '_counter' → logprob: -14.627824783325195
    8. ' _' → logprob: -14.752824783325195
    9. '_counts' → logprob: -14.752824783325195
    10. '_SWITCH' → logprob: -14.877824783325195

Token 204: '_on' (ID: 10053)
  Prédit: '_on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: -1.981667537620524e-06
    2. '_' → logprob: -14.250001907348633
    3. '_ON' → logprob: -15.125001907348633
    4. ' _' → logprob: -15.875001907348633
    5. '(_' → logprob: -15.875001907348633
    6. 'on' → logprob: -16.000001907348633
    7. 's' → logprob: -16.500001907348633
    8. '```' → logprob: -16.500001907348633
    9. '_count' → logprob: -17.000001907348633
    10. '   ' → logprob: -17.125001907348633

Token 205: '(combo' (ID: 190470)
  Prédit: '(combo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(combo' → logprob: -5.764977686339989e-05
    2. '(' → logprob: -10.625057220458984
    3. '(com' → logprob: -11.125057220458984
    4. ' (' → logprob: -11.375057220458984
    5. 'combo' → logprob: -12.000057220458984
    6. ' combo' → logprob: -14.625057220458984
    7. '_combo' → logprob: -15.750057220458984
    8. '.combo' → logprob: -16.375057220458984
    9. '(code' → logprob: -16.500057220458984
    10. '(co' → logprob: -17.500057220458984

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.68022444692906e-05
    2. ',s' → logprob: -10.500046730041504
    3. ' ,' → logprob: -10.875046730041504
    4. '   ' → logprob: -16.50004768371582
    5. 's' → logprob: -16.50004768371582
    6. ',
' → logprob: -18.50004768371582
    7. 'switch' → logprob: -18.50004768371582
    8. '_,' → logprob: -19.12504768371582
    9. '```' → logprob: -19.75004768371582
    10. ' switch' → logprob: -20.25004768371582

Token 207: ' switch' (ID: 6160)
  Prédit: 'switch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'switch' → logprob: -0.1604226529598236
    2. ' switch' → logprob: -1.910422682762146
    3. ' switches' → logprob: -9.660422325134277
    4. '   ' → logprob: -10.285422325134277
    5. 's' → logprob: -10.410422325134277
    6. 'indices' → logprob: -11.035422325134277
    7. ' ' → logprob: -11.035422325134277
    8. ')' → logprob: -11.785422325134277
    9. ' indices' → logprob: -12.535422325134277
    10. '    ' → logprob: -12.785422325134277

Token 208: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6474443078041077
    2. '):' → logprob: -0.7724443078041077
    3. '):
' → logprob: -4.272444248199463
    4. '   ' → logprob: -8.147444725036621
    5. ',s' → logprob: -8.147444725036621
    6. ')' → logprob: -9.647444725036621
    7. 's' → logprob: -10.022444725036621
    8. '):
' → logprob: -10.272444725036621
    9. ' ,' → logprob: -10.272444725036621
    10. ' ):' → logprob: -11.397444725036621

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.646253228187561
    2. ' count' → logprob: -1.146253228187561
    3. 'count' → logprob: -1.896253228187561
    4. ' return' → logprob: -5.1462531089782715
    5. 'return' → logprob: -6.6462531089782715
    6. ' sum' → logprob: -7.8962531089782715
    7. 'sum' → logprob: -8.27125358581543
    8. ' total' → logprob: -8.77125358581543
    9. 'total' → logprob: -9.89625358581543
    10. '    
' → logprob: -10.27125358581543

Token 210: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.021081648766994476
    2. ' count' → logprob: -4.021081447601318
    3. 'sum' → logprob: -6.021081447601318
    4. '   ' → logprob: -8.521081924438477
    5. 'return' → logprob: -8.771081924438477
    6. '0' → logprob: -9.771081924438477
    7. ' sum' → logprob: -10.146081924438477
    8. 'cnt' → logprob: -10.521081924438477
    9. ' return' → logprob: -11.021081924438477
    10. 'total' → logprob: -12.521081924438477

Token 211: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2270796000957489
    2. '=' → logprob: -2.2270796298980713
    3. '_' → logprob: -2.3520796298980713
    4. '_=' → logprob: -9.602079391479492
    5. ' ' → logprob: -10.477079391479492
    6. ' +=' → logprob: -11.477079391479492
    7. ' _' → logprob: -12.227079391479492
    8. ',' → logprob: -12.602079391479492
    9. '(' → logprob: -12.852079391479492
    10. ')' → logprob: -13.227079391479492

Token 212: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001093841710826382
    2. ' ' → logprob: -9.125109672546387
    3. 'sum' → logprob: -14.875109672546387
    4. ' sum' → logprob: -17.50010871887207
    5. '   ' → logprob: -18.37510871887207
    6. '```' → logprob: -21.62510871887207
    7. '۰' → logprob: -21.87510871887207
    8. 'len' → logprob: -22.00010871887207
    9. '1' → logprob: -22.00010871887207
    10. '  ' → logprob: -22.12510871887207

Token 213: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8087270038668066e-05
    2. 'sum' → logprob: -10.500027656555176
    3. ' ' → logprob: -14.500027656555176
    4. ' sum' → logprob: -18.750028610229492
    5. '```' → logprob: -20.375028610229492
    6. 'len' → logprob: -21.000028610229492
    7. '   ' → logprob: -21.125028610229492
    8. '۰' → logprob: -21.250028610229492
    9. 'count' → logprob: -21.250028610229492
    10. '1' → logprob: -21.375028610229492

Token 214: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006088880822062492
    2. '
' → logprob: -5.631088733673096
    3. ' for' → logprob: -6.256088733673096
    4. '    
' → logprob: -7.881088733673096
    5. 'for' → logprob: -9.131089210510254
    6. '	for' → logprob: -10.256089210510254
    7. '<|end|>' → logprob: -10.756089210510254
    8. '	
' → logprob: -12.881089210510254
    9. ' ' → logprob: -12.881089210510254
    10. ',' → logprob: -13.006089210510254

Token 215: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.29243704676628113
    2. '   ' → logprob: -2.0424370765686035
    3. '
' → logprob: -2.4174370765686035
    4. 'for' → logprob: -3.4174370765686035
    5. '	for' → logprob: -7.1674370765686035
    6. '    
' → logprob: -7.5424370765686035
    7. ' 
' → logprob: -8.542436599731445
    8. '  
' → logprob: -8.917436599731445
    9. '\n' → logprob: -9.167436599731445
    10. ' ' → logprob: -9.542436599731445

Token 216: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20691634714603424
    2. ' for' → logprob: -1.706916332244873
    3. '   ' → logprob: -5.206916332244873
    4. '	for' → logprob: -11.706916809082031
    5. '
' → logprob: -15.081916809082031
    6. '    
' → logprob: -15.206916809082031
    7. ' ' → logprob: -15.331916809082031
    8. '  ' → logprob: -15.956916809082031
    9. '    ' → logprob: -16.08191680908203
    10. '       ' → logprob: -16.33191680908203

Token 217: ' k' (ID: 372)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -1.112278938293457
    2. 'i' → logprob: -1.237278938293457
    3. 'idx' → logprob: -1.487278938293457
    4. ' i' → logprob: -2.987278938293457
    5. 'index' → logprob: -3.362278938293457
    6. 's' → logprob: -3.362278938293457
    7. ' s' → logprob: -4.362278938293457
    8. ' index' → logprob: -4.612278938293457
    9. 'switch' → logprob: -5.612278938293457
    10. ' bulb' → logprob: -5.862278938293457

Token 218: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0184360072016716
    2. 'in' → logprob: -4.018435955047607
    3. ' ' → logprob: -8.893436431884766
    4. ',' → logprob: -9.018436431884766
    5. ' ,' → logprob: -11.393436431884766
    6. '   ' → logprob: -12.393436431884766
    7. '	in' → logprob: -12.393436431884766
    8. '  ' → logprob: -12.643436431884766
    9. '_in' → logprob: -13.393436431884766
    10. 'In' → logprob: -14.018436431884766

Token 219: ' switch' (ID: 6160)
  Prédit: 'switch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'switch' → logprob: -0.17503881454467773
    2. ' switch' → logprob: -2.5500388145446777
    3. 'range' → logprob: -2.9250388145446777
    4. ' range' → logprob: -3.5500388145446777
    5. 's' → logprob: -10.050039291381836
    6. '   ' → logprob: -10.550039291381836
    7. ' ' → logprob: -10.925039291381836
    8. ' xrange' → logprob: -12.862539291381836
    9. '  ' → logprob: -13.050039291381836
    10. '.switch' → logprob: -13.300039291381836

Token 220: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30901890993118286
    2. '-' → logprob: -1.934018850326538
    3. ' in' → logprob: -3.059018850326538
    4. '   ' → logprob: -3.184018850326538
    5. ' -' → logprob: -4.059019088745117
    6. ':
' → logprob: -4.809019088745117
    7. '[' → logprob: -5.809019088745117
    8. '       ' → logprob: -7.434019088745117
    9. 'in' → logprob: -7.559019088745117
    10. '):' → logprob: -7.684019088745117

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008093867218121886
    2. ':' → logprob: -7.250809192657471
    3. ':]' → logprob: -10.250809669494629
    4. '   ' → logprob: -10.875809669494629
    5. ' ' → logprob: -11.250809669494629
    6. ']:' → logprob: -11.750809669494629
    7. 'k' → logprob: -12.250809669494629
    8. ' :' → logprob: -12.375809669494629
    9. '(' → logprob: -13.000809669494629
    10. '::-' → logprob: -13.375809669494629

Token 222: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009423116571269929
    2. ']:' → logprob: -7.000942230224609
    3. ':]' → logprob: -11.37594223022461
    4. ' :' → logprob: -11.62594223022461
    5. ':k' → logprob: -12.75094223022461
    6. ':].' → logprob: -13.37594223022461
    7. ':],' → logprob: -14.00094223022461
    8. '():' → logprob: -14.25094223022461
    9. '_:' → logprob: -14.62594223022461
    10. '-' → logprob: -14.75094223022461

Token 223: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.014301136136054993
    2. ']:
' → logprob: -4.264301300048828
    3. ']' → logprob: -9.014301300048828
    4. ']:
' → logprob: -12.139301300048828
    5. ' ]' → logprob: -12.264301300048828
    6. ']:

' → logprob: -12.514301300048828
    7. ']+' → logprob: -14.014301300048828
    8. ']>' → logprob: -14.514301300048828
    9. 'k' → logprob: -15.514301300048828
    10. ']):' → logprob: -15.639301300048828

Token 224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20281319320201874
    2. ' if' → logprob: -1.7028131484985352
    3. '   ' → logprob: -7.202813148498535
    4. 'if' → logprob: -7.577813148498535
    5. '    ' → logprob: -9.452813148498535
    6. '        
' → logprob: -11.327813148498535
    7. ',' → logprob: -11.452813148498535
    8. ' ' → logprob: -11.827813148498535
    9. ' 
' → logprob: -11.827813148498535
    10. '      ' → logprob: -12.827813148498535

Token 225: ' count' (ID: 3605)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2270699143409729
    2. 'if' → logprob: -1.9770698547363281
    3. '       ' → logprob: -3.227069854736328
    4. 'count' (adapté à ' count') → logprob: -4.227069854736328
    5. ' count' → logprob: -4.602069854736328
    6. '   ' → logprob: -8.477069854736328
    7. '    ' → logprob: -9.727069854736328
    8. '
' → logprob: -10.477069854736328
    9. ' 
' → logprob: -10.977069854736328
    10. '           ' → logprob: -11.352069854736328

Token 226: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.020851679146289825
    2. ' +=' → logprob: -3.8958516120910645
    3. ']+=' → logprob: -8.895852088928223
    4. '+' → logprob: -9.895852088928223
    5. '   ' → logprob: -10.145852088928223
    6. '=' → logprob: -10.270852088928223
    7. '+=(' → logprob: -10.395852088928223
    8. 'if' → logprob: -12.020852088928223
    9. 'in' → logprob: -12.520852088928223
    10. '  ' → logprob: -13.270852088928223

Token 227: ' combo' (ID: 32014)
  Prédit: 'combo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combo' → logprob: -0.006717974785715342
    2. ' combo' → logprob: -5.006718158721924
    3. '1' → logprob: -13.631717681884766
    4. '   ' → logprob: -14.256717681884766
    5. '(combo' → logprob: -15.006717681884766
    6. 'comb' → logprob: -15.881717681884766
    7. '.combo' → logprob: -16.256717681884766
    8. ' ' → logprob: -16.506717681884766
    9. '_combo' → logprob: -16.506717681884766
    10. 'com' → logprob: -17.506717681884766

Token 228: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -5.133198283147067e-05
    2. 'k' → logprob: -10.500051498413086
    3. '[' → logprob: -10.750051498413086
    4. '[
' → logprob: -14.125051498413086
    5. '[int' → logprob: -14.500051498413086
    6. '[key' → logprob: -15.250051498413086
    7. '{k' → logprob: -15.500051498413086
    8. '(k' → logprob: -15.625051498413086
    9. ' [' → logprob: -16.500051498413086
    10. '[s' → logprob: -16.500051498413086

Token 229: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.018230600282549858
    2. ' -' → logprob: -4.018230438232422
    3. ']' → logprob: -9.643230438232422
    4. '1' → logprob: -11.893230438232422
    5. ')' → logprob: -12.768230438232422
    6. ')]' → logprob: -13.268230438232422
    7. 'k' → logprob: -13.893230438232422
    8. '])' → logprob: -13.893230438232422
    9. '-k' → logprob: -14.518230438232422
    10. ' ' → logprob: -14.768230438232422

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. 'k' → logprob: -16.875
    4. '0' → logprob: -16.875
    5. '```' → logprob: -17.625
    6. '   ' → logprob: -19.125
    7. '2' → logprob: -19.5
    8. ' k' → logprob: -19.625
    9. '１' → logprob: -20.0
    10. ']' → logprob: -20.5625

Token 231: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.236549335066229e-05
    2. ' ]' → logprob: -11.000021934509277
    3. ']
' → logprob: -12.250021934509277
    4. '<|end|>' → logprob: -15.000021934509277
    5. ']

' → logprob: -16.000022888183594
    6. ')' → logprob: -16.375022888183594
    7. ']==' → logprob: -16.625022888183594
    8. '   ' → logprob: -16.750022888183594
    9. ')]' → logprob: -17.000022888183594
    10. '])' → logprob: -17.500022888183594

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.518582762917504e-05
    2. 'return' → logprob: -9.87508487701416
    3. '
' → logprob: -10.75008487701416
    4. ' return' → logprob: -11.75008487701416
    5. '    
' → logprob: -13.37508487701416
    6. '       ' → logprob: -13.50008487701416
    7. '	return' → logprob: -13.62508487701416
    8. '\n' → logprob: -16.875085830688477
    9. ':return' → logprob: -17.875085830688477
    10. '        
' → logprob: -18.000085830688477

Token 233: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005288192071020603
    2. 'return' (adapté à ' return') → logprob: -5.255288124084473
    3. ' return' → logprob: -10.005288124084473
    4. '	return' → logprob: -12.005288124084473
    5. '       ' → logprob: -13.255288124084473
    6. '
' → logprob: -14.005288124084473
    7. '    
' → logprob: -15.005288124084473
    8. ' ' → logprob: -16.38028907775879
    9. '```' → logprob: -16.88028907775879
    10. '  ' → logprob: -17.88028907775879

Token 234: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0009115827269852161
    2. ' count' → logprob: -7.000911712646484
    3. '	count' → logprob: -18.375911712646484
    4. '   ' → logprob: -19.000911712646484
    5. '[count' → logprob: -20.375911712646484
    6. '(count' → logprob: -21.125911712646484
    7. 'counts' → logprob: -21.375911712646484
    8. ' ' → logprob: -21.500911712646484
    9. '$count' → logprob: -21.750911712646484
    10. '  ' → logprob: -22.500911712646484

Token 235: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4846172034740448
    2. '<|end|>' → logprob: -1.3596172332763672
    3. '
' → logprob: -2.109617233276367
    4. '  
' → logprob: -6.734617233276367
    5. '

' → logprob: -6.859617233276367
    6. 'N' → logprob: -6.984617233276367
    7. '\n' → logprob: -6.984617233276367
    8. '0' → logprob: -7.734617233276367
    9. '#' → logprob: -8.109617233276367
    10. '    
' → logprob: -8.234617233276367

Token 236: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0029078235384076834
    2. 'for' → logprob: -6.502907752990723
    3. 'result' → logprob: -7.002907752990723
    4. 'N' → logprob: -8.877907752990723
    5. 'valid' → logprob: -8.877907752990723
    6. 'count' → logprob: -9.502907752990723
    7. '#' → logprob: -10.002907752990723
    8. 'answer' → logprob: -10.002907752990723
    9. 'n' → logprob: -11.627907752990723
    10. 'print' → logprob: -11.877907752990723

Token 237: ' solve' (ID: 17722)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.256061315536499
    2. ' main' → logprob: -1.506061315536499
    3. 'count' → logprob: -5.756061553955078
    4. ' count' → logprob: -7.631061553955078
    5. 'solve' → logprob: -7.881061553955078
    6. ' solve' → logprob: -9.256061553955078
    7. 'def' → logprob: -14.756061553955078
    8. 'solution' → logprob: -14.881061553955078
    9. '	main' → logprob: -15.506061553955078
    10. ' find' → logprob: -15.631061553955078

Token 238: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.011332275345921516
    2. '(N' → logprob: -4.5113325119018555
    3. '()' → logprob: -8.636332511901855
    4. '(' → logprob: -9.636332511901855
    5. '():
' → logprob: -10.761332511901855
    6. ' ():' → logprob: -11.011332511901855
    7. '()(' → logprob: -13.136332511901855
    8. ' (' → logprob: -14.136332511901855
    9. ' ()' → logprob: -15.511332511901855
    10. 'def' → logprob: -15.761332511901855

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16057483851909637
    2. 'N' → logprob: -1.9105747938156128
    3. ' N' → logprob: -8.410574913024902
    4. '(N' → logprob: -9.535574913024902
    5. 'def' → logprob: -10.910574913024902
    6. '```' → logprob: -11.285574913024902
    7. 'import' → logprob: -11.785574913024902
    8. '	N' → logprob: -12.035574913024902
    9. '   ' → logprob: -13.285574913024902
    10. 'input' → logprob: -13.285574913024902

Token 240: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.002001557732000947
    2. '   ' → logprob: -6.377001762390137
    3. ' N' → logprob: -8.127001762390137
    4. 'def' → logprob: -14.502001762390137
    5. 'import' → logprob: -14.752001762390137
    6. '    
' → logprob: -14.752001762390137
    7. ' ' → logprob: -14.752001762390137
    8. '```' → logprob: -14.877001762390137
    9. '	N' → logprob: -14.877001762390137
    10. 'n' → logprob: -15.002001762390137

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013715129171032459
    2. ' ,' → logprob: -9.125137329101562
    3. ',M' → logprob: -10.500137329101562
    4. '   ' → logprob: -15.750137329101562
    5. 'def' → logprob: -15.875137329101562
    6. ',
' → logprob: -16.000137329101562
    7. 'M' → logprob: -16.750137329101562
    8. '‌,' → logprob: -16.875137329101562
    9. ' M' → logprob: -17.000137329101562
    10. 'import' → logprob: -17.000137329101562

Token 242: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.1602294147014618
    2. ' M' → logprob: -1.9102294445037842
    3. '   ' → logprob: -13.285229682922363
    4. ' ' → logprob: -13.785229682922363
    5. '  ' → logprob: -13.910229682922363
    6. '<|end|>' → logprob: -14.035229682922363
    7. '    ' → logprob: -14.160229682922363
    8. ',' → logprob: -17.535228729248047
    9. '     ' → logprob: -18.035228729248047
    10. ',M' → logprob: -18.347728729248047

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006526283104903996
    2. '=' → logprob: -7.50065279006958
    3. ' =' → logprob: -9.250652313232422
    4. ' ,' → logprob: -12.750652313232422
    5. ',M' → logprob: -15.125652313232422
    6. '   ' → logprob: -15.500652313232422
    7. '_,' → logprob: -16.375652313232422
    8. '‌,' → logprob: -17.375652313232422
    9. '<|end|>' → logprob: -17.500652313232422
    10. ',m' → logprob: -18.563152313232422

Token 244: ' switches' (ID: 57537)
  Prédit: 'switch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'switch' → logprob: -0.1797870397567749
    2. ' switches' → logprob: -1.804787039756775
    3. ' switch' → logprob: -11.054786682128906
    4. 's' → logprob: -11.429786682128906
    5. '_switch' → logprob: -12.179786682128906
    6. '   ' → logprob: -12.429786682128906
    7. 'sw' → logprob: -12.804786682128906
    8. 'Switch' → logprob: -13.429786682128906
    9. ' ' → logprob: -14.304786682128906
    10. '.switch' → logprob: -14.804786682128906

Token 245: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005180035717785358
    2. '=' → logprob: -5.3801798820495605
    3. ' =' → logprob: -7.5051798820495605
    4. ' ,' → logprob: -11.630180358886719
    5. '   ' → logprob: -15.505180358886719
    6. '_,' → logprob: -16.00518035888672
    7. '<|end|>' → logprob: -17.56768035888672
    8. ',p' → logprob: -17.69268035888672
    9. ',_' → logprob: -17.69268035888672
    10. 'def' → logprob: -17.88018035888672

Token 246: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.001170225441455841
    2. ' p' → logprob: -6.7511701583862305
    3. '   ' → logprob: -18.001171112060547
    4. ' ' → logprob: -19.126171112060547
    5. '	p' → logprob: -19.751171112060547
    6. 'P' → logprob: -20.126171112060547
    7. '  ' → logprob: -20.376171112060547
    8. '<p' → logprob: -20.501171112060547
    9. '_p' → logprob: -20.501171112060547
    10. '    ' → logprob: -20.751171112060547

Token 247: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2254418283700943
    2. ' =' → logprob: -1.600441813468933
    3. ')' → logprob: -10.600441932678223
    4. '   ' → logprob: -12.850441932678223
    5. ')=' → logprob: -14.475441932678223
    6. '<|end|>' → logprob: -14.725441932678223
    7. 'def' → logprob: -16.100440979003906
    8. '(' → logprob: -16.350440979003906
    9. ']' → logprob: -16.475440979003906
    10. '  ' → logprob: -16.600440979003906

Token 248: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.47407710552215576
    2. ' read' → logprob: -0.9740771055221558
    3. '   ' → logprob: -16.474077224731445
    4. '	read' → logprob: -18.599077224731445
    5. '  ' → logprob: -20.599077224731445
    6. '(read' → logprob: -21.099077224731445
    7. ' ' → logprob: -21.224077224731445
    8. '.read' → logprob: -21.849077224731445
    9. '_read' → logprob: -22.224077224731445
    10. '    ' → logprob: -22.724077224731445

Token 249: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.002201763214543462
    2. '_' → logprob: -6.127201557159424
    3. '_inputs' → logprob: -12.627202033996582
    4. '()' → logprob: -13.127202033996582
    5. 'input' → logprob: -13.252202033996582
    6. '_line' → logprob: -13.377202033996582
    7. '```' → logprob: -13.502202033996582
    8. '_output' → logprob: -13.502202033996582
    9. '(' → logprob: -13.752202033996582
    10. '_in' → logprob: -14.502202033996582

Token 250: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005564896273426712
    2. '()
' → logprob: -7.500556468963623
    3. '()

' → logprob: -13.375556945800781
    4. '()\' → logprob: -14.250556945800781
    5. '()`' → logprob: -14.750556945800781
    6. '(' → logprob: -15.125556945800781
    7. '()
' → logprob: -15.500556945800781
    8. '()"' → logprob: -16.00055694580078
    9. ' ()' → logprob: -16.00055694580078
    10. 'def' → logprob: -16.75055694580078

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18155057728290558
    2. 'count' → logprob: -2.5565505027770996
    3. 'result' → logprob: -3.1815505027770996
    4. ' count' → logprob: -4.0565505027771
    5. ' valid' → logprob: -4.6815505027771
    6. ' result' → logprob: -4.8065505027771
    7. 'valid' → logprob: -5.9315505027771
    8. '```' → logprob: -5.9315505027771
    9. ' for' → logprob: -6.1815505027771
    10. '
' → logprob: -6.5565505027771

Token 252: ' ans' (ID: 3345)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.03675706684589386
    2. 'ans' (adapté à ' ans') → logprob: -4.286756992340088
    3. 'result' → logprob: -4.536756992340088
    4. 'answer' → logprob: -4.536756992340088
    5. 'valid' → logprob: -7.411756992340088
    6. 'cnt' → logprob: -8.661757469177246
    7. 'total' → logprob: -9.911757469177246
    8. '   ' → logprob: -10.661757469177246
    9. 'comb' → logprob: -10.661757469177246
    10. 'for' → logprob: -11.036757469177246

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06200846657156944
    2. '=' → logprob: -2.8120083808898926
    3. 'w' → logprob: -11.06200885772705
    4. 'wer' → logprob: -11.18700885772705
    5. ' ' → logprob: -11.93700885772705
    6. '   ' → logprob: -12.56200885772705
    7. '  ' → logprob: -14.81200885772705
    8. ' =
' → logprob: -15.68700885772705
    9. 'wers' → logprob: -15.93700885772705
    10. 'ow' → logprob: -16.062007904052734

Token 254: ' count' (ID: 3605)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.580929347255733e-05
    2. ' ' → logprob: -11.375016212463379
    3. 'sum' → logprob: -12.375016212463379
    4. '   ' → logprob: -17.000015258789062
    5. ' sum' → logprob: -17.250015258789062
    6. '```' → logprob: -19.250015258789062
    7. '=' → logprob: -20.000015258789062
    8. '1' → logprob: -20.000015258789062
    9. '۰' → logprob: -20.125015258789062
    10. '000' → logprob: -20.125015258789062

Token 255: '_valid' (ID: 23321)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06785283982753754
    2. '(sum' → logprob: -2.942852735519409
    3. '=' → logprob: -4.692852973937988
    4. ' =' → logprob: -6.192852973937988
    5. '(
' → logprob: -7.192852973937988
    6. '(s' → logprob: -8.317852973937988
    7. '(i' → logprob: -8.567852973937988
    8. 'sum' → logprob: -8.692852973937988
    9. '()' → logprob: -9.817852973937988
    10. '((' → logprob: -10.067852973937988

Token 256: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.26230645179748535
    2. '(' → logprob: -1.6373064517974854
    3. 's' → logprob: -3.8873064517974854
    4. '_' → logprob: -5.262306213378906
    5. '_s' → logprob: -5.762306213378906
    6. '(_' → logprob: -6.012306213378906
    7. '(com' → logprob: -6.137306213378906
    8. 'com' → logprob: -7.512306213378906
    9. '_states' → logprob: -8.262306213378906
    10. '(combo' → logprob: -8.262306213378906

Token 257: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.07062903791666031
    2. 'bos' → logprob: -2.695629119873047
    3. 'b' → logprob: -7.695629119873047
    4. 'bo' → logprob: -8.570629119873047
    5. 'bis' → logprob: -11.695629119873047
    6. 'bon' → logprob: -12.070629119873047
    7. 'positions' → logprob: -12.195629119873047
    8. '```' → logprob: -12.195629119873047
    9. 'bs' → logprob: -12.445629119873047
    10. 'os' → logprob: -12.570629119873047

Token 258: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030159108340740204
    2. '(generate' → logprob: -3.5301589965820312
    3. '(
' → logprob: -8.780158996582031
    4. '(N' → logprob: -10.030158996582031
    5. '(next' → logprob: -10.280158996582031
    6. '((' → logprob: -10.280158996582031
    7. ' (' → logprob: -10.655158996582031
    8. '(len' → logprob: -10.905158996582031
    9. '(sum' → logprob: -10.905158996582031
    10. '("("' → logprob: -11.655158996582031

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1605776846408844
    2. ')' → logprob: -1.910577654838562
    3. ',s' → logprob: -8.785577774047852
    4. ' ,' → logprob: -9.660577774047852
    5. ' )' → logprob: -10.035577774047852
    6. ',)' → logprob: -10.160577774047852
    7. ',N' → logprob: -11.035577774047852
    8. '   ' → logprob: -11.410577774047852
    9. ')s' → logprob: -12.285577774047852
    10. ',
' → logprob: -12.410577774047852

Token 260: ' switches' (ID: 57537)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.05133551359176636
    2. 'switch' → logprob: -3.551335573196411
    3. ' M' → logprob: -3.926335573196411
    4. ' switches' → logprob: -7.426335334777832
    5. 'p' → logprob: -7.551335334777832
    6. '   ' → logprob: -7.926335334777832
    7. ' p' → logprob: -10.426335334777832
    8. ' ' → logprob: -10.551335334777832
    9. 'sw' → logprob: -11.051335334777832
    10. '    ' → logprob: -11.551335334777832

Token 261: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.183501293184236e-05
    2. ',p' → logprob: -10.00007152557373
    3. ' ,' → logprob: -11.00007152557373
    4. 'p' → logprob: -12.25007152557373
    5. ')' → logprob: -13.00007152557373
    6. ',
' → logprob: -13.37507152557373
    7. '   ' → logprob: -14.37507152557373
    8. '‌,' → logprob: -16.375072479248047
    9. 's' → logprob: -16.500072479248047
    10. ',

' → logprob: -16.875072479248047

Token 262: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00218583014793694
    2. ' p' → logprob: -6.127185821533203
    3. '   ' → logprob: -15.002185821533203
    4. 'M' → logprob: -15.502185821533203
    5. ' ' → logprob: -15.627185821533203
    6. ')' → logprob: -17.252185821533203
    7. ',' → logprob: -17.252185821533203
    8. '  ' → logprob: -17.877185821533203
    9. '	p' → logprob: -18.002185821533203
    10. '    ' → logprob: -18.377185821533203

Token 263: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.513339445111342e-05
    2. ',' → logprob: -10.625044822692871
    3. ')
' → logprob: -11.000044822692871
    4. '   ' → logprob: -12.875044822692871
    5. ' )' → logprob: -13.750044822692871
    6. ')
' → logprob: -16.250045776367188
    7. 'def' → logprob: -16.625045776367188
    8. ')

' → logprob: -16.625045776367188
    9. ',)' → logprob: -16.875045776367188
    10. '))' → logprob: -17.625045776367188

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004137768410146236
    2. '    
' → logprob: -5.879137992858887
    3. '
' → logprob: -6.754137992858887
    4. 'def' → logprob: -9.504137992858887
    5. '```' → logprob: -10.879137992858887
    6. '<|end|>' → logprob: -11.504137992858887
    7. '  
' → logprob: -11.629137992858887
    8. '   
' → logprob: -11.629137992858887
    9. ')' → logprob: -11.879137992858887
    10. '[' → logprob: -12.004137992858887

Token 265: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03560950607061386
    2. '   ' → logprob: -3.535609483718872
    3. ' print' → logprob: -5.285609722137451
    4. 'return' → logprob: -7.285609722137451
    5. ' return' → logprob: -9.910609245300293
    6. '
' → logprob: -10.160609245300293
    7. '```' → logprob: -13.035609245300293
    8. '    
' → logprob: -13.910609245300293
    9. '	print' → logprob: -14.785609245300293
    10. '\n' → logprob: -15.160609245300293

Token 266: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0005572011577896774
    2. '(' → logprob: -7.5005574226379395
    3. '()' → logprob: -13.000556945800781
    4. '(len' → logprob: -13.625556945800781
    5. ' (' → logprob: -14.875556945800781
    6. '(answer' → logprob: -15.750556945800781
    7. 'ans' → logprob: -16.50055694580078
    8. '('' → logprob: -16.50055694580078
    9. '(
' → logprob: -17.00055694580078
    10. '(sum' → logprob: -17.37555694580078

Token 267: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.500000953674316
    3. ')`' → logprob: -16.125
    4. '()' → logprob: -17.375
    5. '())' → logprob: -17.875
    6. ')
' → logprob: -17.875
    7. '))' → logprob: -18.25
    8. '`)' → logprob: -18.375
    9. '),' → logprob: -18.5
    10. '')' → logprob: -19.25

Token 268: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4378848391061183e-05
    2. '
' → logprob: -11.625014305114746
    3. ' def' → logprob: -13.000014305114746
    4. '```' → logprob: -13.875014305114746
    5. '_def' → logprob: -14.375014305114746
    6. ':def' → logprob: -14.875014305114746
    7. '(
' → logprob: -15.250014305114746
    8. '(' → logprob: -15.250014305114746
    9. '(def' → logprob: -15.875014305114746
    10. '  
' → logprob: -15.875014305114746

Token 269: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.386879563331604
    2. ' count' → logprob: -1.136879563331604
    3. '_count' → logprob: -11.761879920959473
    4. 'def' → logprob: -15.011879920959473
    5. ' def' → logprob: -15.886879920959473
    6. ' ' → logprob: -16.386878967285156
    7. 'ount' → logprob: -16.386878967285156
    8. '	count' → logprob: -16.511878967285156
    9. '_' → logprob: -17.761878967285156
    10. '(count' → logprob: -18.636878967285156

Token 270: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -1.1875571544806007e-05
    2. '_' → logprob: -11.375011444091797
    3. ' _' → logprob: -16.375011444091797
    4. '_possible' → logprob: -16.375011444091797
    5. '_invalid' → logprob: -16.500011444091797
    6. 'valid' → logprob: -17.375011444091797
    7. '_switch' → logprob: -17.500011444091797
    8. '_val' → logprob: -17.875011444091797
    9. '_VALID' → logprob: -18.000011444091797
    10. '__' → logprob: -18.875011444091797

Token 271: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -4.4849443838757e-06
    2. '_valid' → logprob: -13.125004768371582
    3. '_comb' → logprob: -13.500004768371582
    4. '_' → logprob: -14.125004768371582
    5. '_switch' → logprob: -16.500003814697266
    6. '_s' → logprob: -17.250003814697266
    7. 'com' → logprob: -17.250003814697266
    8. '_def' → logprob: -17.750003814697266
    9. '```' → logprob: -17.875003814697266
    10. ' _' → logprob: -18.000003814697266

Token 272: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.002903539687395096
    2. 'inations' → logprob: -5.877903461456299
    3. 'ations' → logprob: -10.127903938293457
    4. 'initions' → logprob: -11.502903938293457
    5. 'os' → logprob: -11.877903938293457
    6. 'b' → logprob: -11.877903938293457
    7. '```' → logprob: -12.002903938293457
    8. 'otions' → logprob: -12.627903938293457
    9. 'utations' → logprob: -12.627903938293457
    10. 'bin' → logprob: -13.127903938293457

Token 273: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.4855663721391466e-05
    2. '(' → logprob: -11.375015258789062
    3. ' (' → logprob: -12.750015258789062
    4. '(n' → logprob: -16.000015258789062
    5. 'def' → logprob: -16.375015258789062
    6. '```' → logprob: -16.500015258789062
    7. '(
' → logprob: -16.875015258789062
    8. '((' → logprob: -17.500015258789062
    9. '   ' → logprob: -18.625015258789062
    10. '(num' → logprob: -19.750015258789062

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4021237802808173e-05
    2. ',s' → logprob: -11.625014305114746
    3. ' ,' → logprob: -12.250014305114746
    4. ',
' → logprob: -15.500014305114746
    5. 's' → logprob: -16.75001335144043
    6. 'switch' → logprob: -18.00001335144043
    7. '_,' → logprob: -18.75001335144043
    8. '   ' → logprob: -18.87501335144043
    9. '‌,' → logprob: -19.12501335144043
    10. ')' → logprob: -19.25001335144043

Token 275: ' switches' (ID: 57537)
  Prédit: 'switch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'switch' → logprob: -0.00764613738283515
    2. ' switches' → logprob: -4.882646083831787
    3. 'M' → logprob: -10.257646560668945
    4. 'sw' → logprob: -13.507646560668945
    5. '   ' → logprob: -13.632646560668945
    6. ' M' → logprob: -14.257646560668945
    7. ' switch' → logprob: -14.382646560668945
    8. 'Switch' → logprob: -15.132646560668945
    9. '_switch' → logprob: -15.507646560668945
    10. ' ' → logprob: -15.882646560668945

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011868205183418468
    2. ',p' → logprob: -9.125118255615234
    3. ' ,' → logprob: -12.250118255615234
    4. 'p' → logprob: -12.375118255615234
    5. ',
' → logprob: -15.250118255615234
    6. '```' → logprob: -15.375118255615234
    7. '‌,' → logprob: -16.000118255615234
    8. '   ' → logprob: -16.500118255615234
    9. ')' → logprob: -16.750118255615234
    10. 'def' → logprob: -17.500118255615234

Token 277: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0007101670489646494
    2. ' p' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.000709533691406
    4. ' ' → logprob: -17.250709533691406
    5. '    ' → logprob: -18.500709533691406
    6. '
' → logprob: -18.625709533691406
    7. ',' → logprob: -18.625709533691406
    8. 'and' → logprob: -18.875709533691406
    9. '  ' → logprob: -19.000709533691406
    10. '	p' → logprob: -19.125709533691406

Token 278: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004849461372941732
    2. '):
' → logprob: -5.754849433898926
    3. ',' → logprob: -6.629849433898926
    4. ')' → logprob: -8.129849433898926
    5. '(N' → logprob: -10.754849433898926
    6. '):
' → logprob: -11.254849433898926
    7. '   ' → logprob: -12.004849433898926
    8. 's' → logprob: -12.379849433898926
    9. '):

' → logprob: -13.004849433898926
    10. ',N' → logprob: -13.004849433898926

Token 279: '   ' (ID: 271)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2812691330909729
    2. '   ' → logprob: -1.5312690734863281
    3. 'ans' → logprob: -3.781269073486328
    4. 'cnt' → logprob: -5.781269073486328
    5. ' count' → logprob: -6.031269073486328
    6. ' ans' → logprob: -7.531269073486328
    7. 'counter' → logprob: -10.156269073486328
    8. 'def' → logprob: -11.281269073486328
    9. 'answer' → logprob: -11.281269073486328
    10. ' cnt' → logprob: -11.531269073486328

Token 280: ' ans' (ID: 3345)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.011526158079504967
    2. 'ans' (adapté à ' ans') → logprob: -4.761526107788086
    3. ' count' → logprob: -6.261526107788086
    4. '   ' → logprob: -7.261526107788086
    5. 'cnt' → logprob: -8.761526107788086
    6. 'counter' → logprob: -9.761526107788086
    7. ' ans' → logprob: -10.136526107788086
    8. 'result' → logprob: -11.011526107788086
    9. 'answer' → logprob: -11.511526107788086
    10. 'valid' → logprob: -12.011526107788086

Token 281: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407716512680054
    2. '=' → logprob: -0.9740771651268005
    3. '   ' → logprob: -16.474077224731445
    4. ' ' → logprob: -17.349077224731445
    5. ')' → logprob: -18.224077224731445
    6. ',' → logprob: -19.099077224731445
    7. ' +=' → logprob: -19.349077224731445
    8. ' =)' → logprob: -19.474077224731445
    9. '  ' → logprob: -19.724077224731445
    10. '＝' → logprob: -19.724077224731445

Token 282: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.375036239624023
    4. 'sum' → logprob: -18.000036239624023
    5. '۰' → logprob: -19.875036239624023
    6. '```' → logprob: -20.375036239624023
    7. '=' → logprob: -20.562536239624023
    8. '０' → logprob: -20.625036239624023
    9. ' sum' → logprob: -20.812536239624023
    10. '  ' → logprob: -21.062536239624023

Token 283: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. 'sum' → logprob: -15.625000953674316
    4. '０' → logprob: -20.375
    5. '   ' → logprob: -20.5
    6. '```' → logprob: -20.625
    7. '۰' → logprob: -20.75
    8. 'zero' → logprob: -21.8125
    9. '=' → logprob: -21.875
    10. ' sum' → logprob: -22.0

Token 284: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6515963077545166
    2. ' for' → logprob: -1.0265963077545166
    3. '
' → logprob: -2.9015963077545166
    4. '    
' → logprob: -3.2765963077545166
    5. '<|end|>' → logprob: -4.1515960693359375
    6. ' 
' → logprob: -5.6515960693359375
    7. '  
' → logprob: -5.9015960693359375
    8. 'for' → logprob: -6.0265960693359375
    9. '   
' → logprob: -6.6515960693359375
    10. '    ' → logprob: -7.5265960693359375

Token 285: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.41195857524871826
    2. '   ' → logprob: -1.2869585752487183
    3. 'for' → logprob: -2.911958694458008
    4. '    
' → logprob: -5.286958694458008
    5. '
' → logprob: -6.661958694458008
    6. ' 
' → logprob: -7.411958694458008
    7. '   
' → logprob: -9.786958694458008
    8. '    ' → logprob: -9.911958694458008
    9. '	for' → logprob: -10.286958694458008
    10. ' ' → logprob: -10.411958694458008

Token 286: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3135802745819092
    2. ' for' → logprob: -1.3135802745819092
    3. '   ' → logprob: -8.063580513000488
    4. 'com' → logprob: -13.938580513000488
    5. '
' → logprob: -14.188580513000488
    6. ' combinations' → logprob: -14.438580513000488
    7. 'comb' → logprob: -14.938580513000488
    8. '	for' → logprob: -15.063580513000488
    9. '```' → logprob: -15.313580513000488
    10. ' ' → logprob: -15.438580513000488

Token 287: ' combo' (ID: 32014)
  Prédit: 'combo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combo' → logprob: -0.1639569103717804
    2. ' combo' → logprob: -1.913956880569458
    3. 'comb' → logprob: -5.788957118988037
    4. ' combination' → logprob: -7.538957118988037
    5. '_combo' → logprob: -9.163956642150879
    6. '_' → logprob: -11.288956642150879
    7. ' comb' → logprob: -11.538956642150879
    8. '_comb' → logprob: -13.413956642150879
    9. ' combos' → logprob: -13.413956642150879
    10. '```' → logprob: -14.038956642150879

Token 288: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012515772134065628
    2. 'in' → logprob: -4.387515544891357
    3. ' ' → logprob: -12.887516021728516
    4. '   ' → logprob: -14.012516021728516
    5. '	in' → logprob: -14.012516021728516
    6. 's' → logprob: -14.762516021728516
    7. 'space' → logprob: -15.512516021728516
    8. ',' → logprob: -15.512516021728516
    9. '    ' → logprob: -15.637516021728516
    10. '  ' → logprob: -15.762516021728516

Token 289: ' generate' (ID: 10419)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.029783355072140694
    2. ' generate' → logprob: -3.529783248901367
    3. 'it' → logprob: -11.154783248901367
    4. '(generate' → logprob: -11.279783248901367
    5. ' itertools' → logprob: -12.779783248901367
    6. '   ' → logprob: -13.279783248901367
    7. 'enerate' → logprob: -14.029783248901367
    8. '_generate' → logprob: -15.154783248901367
    9. '.generate' → logprob: -15.404783248901367
    10. 'Generate' → logprob: -17.404783248901367

Token 290: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -1.9623810658231378e-05
    2. 'com' → logprob: -10.875020027160645
    3. '_' → logprob: -15.125020027160645
    4. '_comb' → logprob: -16.000019073486328
    5. 's' → logprob: -17.375019073486328
    6. ' combinations' → logprob: -17.750019073486328
    7. '```' → logprob: -17.750019073486328
    8. '`' → logprob: -17.875019073486328
    9. ' _' → logprob: -18.125019073486328
    10. '
' → logprob: -18.250019073486328

Token 291: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.002954046940430999
    2. 'utations' → logprob: -6.127954006195068
    3. 'inations' → logprob: -7.377954006195068
    4. 'b' → logprob: -9.377954483032227
    5. 'ations' → logprob: -10.752954483032227
    6. '(N' → logprob: -11.752954483032227
    7. '{' → logprob: -12.627954483032227
    8. '(' → logprob: -12.752954483032227
    9. 'os' → logprob: -12.877954483032227
    10. '_b' → logprob: -13.252954483032227

Token 292: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00026205103495158255
    2. '(' → logprob: -8.375262260437012
    3. ' (' → logprob: -10.625262260437012
    4. '   ' → logprob: -12.250262260437012
    5. ' ' → logprob: -14.250262260437012
    6. ',' → logprob: -14.750262260437012
    7. '```' → logprob: -14.875262260437012
    8. '(
' → logprob: -15.250262260437012
    9. ')' → logprob: -15.500262260437012
    10. '(n' → logprob: -16.000261306762695

Token 293: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -5.2762428822461516e-05
    2. '):
' → logprob: -9.875052452087402
    3. '   ' → logprob: -14.625052452087402
    4. ' ):' → logprob: -15.250052452087402
    5. '):
' → logprob: -15.500052452087402
    6. ':' → logprob: -15.625052452087402
    7. ')' → logprob: -15.875052452087402
    8. '():' → logprob: -16.75005340576172
    9. '}:' → logprob: -18.00005340576172
    10. '):

' → logprob: -18.50005340576172

Token 294: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008790657739154994
    2. ' if' → logprob: -7.125879287719727
    3. '        
' → logprob: -10.625879287719727
    4. 'if' → logprob: -10.625879287719727
    5. '   ' → logprob: -12.000879287719727
    6. '```' → logprob: -12.375879287719727
    7. '<|end|>' → logprob: -12.500879287719727
    8. '    ' → logprob: -12.625879287719727
    9. '      ' → logprob: -13.500879287719727
    10. '           ' → logprob: -13.625879287719727

Token 295: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06590797752141953
    2. '       ' → logprob: -3.0659079551696777
    3. 'if' (adapté à ' if') → logprob: -4.065907955169678
    4. '           ' → logprob: -11.315908432006836
    5. '   ' → logprob: -11.815908432006836
    6. '    ' → logprob: -14.190908432006836
    7. '	if' → logprob: -14.440908432006836
    8. '```' → logprob: -14.440908432006836
    9. '        
' → logprob: -14.565908432006836
    10. '<|end|>' → logprob: -14.940908432006836

Token 296: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.2519567012786865
    2. ' check' → logprob: -1.5019567012786865
    3. '   ' → logprob: -11.751956939697266
    4. 'all' → logprob: -12.001956939697266
    5. ' all' → logprob: -12.501956939697266
    6. '       ' → logprob: -12.626956939697266
    7. '(check' → logprob: -12.751956939697266
    8. '           ' → logprob: -12.876956939697266
    9. '	check' → logprob: -14.126956939697266
    10. '    ' → logprob: -16.251956939697266

Token 297: '_condition' (ID: 64948)
  Prédit: '_condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_condition' → logprob: -1.8908587662735954e-05
    2. '_switch' → logprob: -11.250019073486328
    3. '_comb' → logprob: -13.000019073486328
    4. '_conditions' → logprob: -13.500019073486328
    5. '_combo' → logprob: -14.250019073486328
    6. '_for' → logprob: -14.875019073486328
    7. 'condition' → logprob: -15.000019073486328
    8. '_' → logprob: -15.250019073486328
    9. '   ' → logprob: -16.125019073486328
    10. 'Condition' → logprob: -16.750019073486328

Token 298: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -6.153795766294934e-06
    2. '   ' → logprob: -13.000005722045898
    3. 'for' → logprob: -13.750005722045898
    4. ' _' → logprob: -13.875005722045898
    5. '_' → logprob: -14.125005722045898
    6. ' for' → logprob: -14.750005722045898
    7. '_FOR' → logprob: -16.2500057220459
    8. ' ' → logprob: -16.3750057220459
    9. '```' → logprob: -16.5000057220459
    10. '    ' → logprob: -16.5000057220459

Token 299: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.08896750211715698
    2. 'all' → logprob: -2.4639675617218018
    3. 'combo' → logprob: -11.338967323303223
    4. '
' → logprob: -12.713967323303223
    5. ' all' → logprob: -12.713967323303223
    6. 'a' → logprob: -13.463967323303223
    7. '   ' → logprob: -13.963967323303223
    8. '_' → logprob: -13.963967323303223
    9. '_a' → logprob: -14.213967323303223
    10. ' _' → logprob: -14.463967323303223

Token 300: '_switch' (ID: 64715)
  Prédit: '_switch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_switch' → logprob: -0.4142133891582489
    2. 'switch' → logprob: -1.2892134189605713
    3. '(s' → logprob: -2.7892134189605713
    4. '(combo' → logprob: -6.789213180541992
    5. '(com' → logprob: -7.539213180541992
    6. '_s' → logprob: -8.039213180541992
    7. 'combo' → logprob: -9.664213180541992
    8. ' (' → logprob: -10.289213180541992
    9. 's' → logprob: -10.914213180541992
    10. ' switch' → logprob: -11.289213180541992

Token 301: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0009605350787751377
    2. 'itches' → logprob: -8.500960350036621
    3. 'iches' → logprob: -8.625960350036621
    4. '   ' → logprob: -9.500960350036621
    5. '_switch' → logprob: -9.625960350036621
    6. '(com' → logprob: -10.125960350036621
    7. 'ces' → logprob: -10.250960350036621
    8. 'ices' → logprob: -10.250960350036621
    9. '(' → logprob: -10.375960350036621
    10. '(combo' → logprob: -10.500960350036621

Token 302: '(combo' (ID: 190470)
  Prédit: '(combo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(combo' → logprob: -0.0007269674097187817
    2. ' (' → logprob: -7.50072717666626
    3. '(com' → logprob: -8.750726699829102
    4. '(' → logprob: -11.250726699829102
    5. 'combo' → logprob: -13.625726699829102
    6. ' combo' → logprob: -14.125726699829102
    7. '   ' → logprob: -15.750726699829102
    8. '(
' → logprob: -15.875726699829102
    9. '.combo' → logprob: -15.875726699829102
    10. '       ' → logprob: -16.7507266998291

Token 303: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.310693111619912e-05
    2. ',s' → logprob: -10.250042915344238
    3. ' ,' → logprob: -11.875042915344238
    4. ',
' → logprob: -14.625042915344238
    5. '   ' → logprob: -16.125043869018555
    6. ')' → logprob: -16.875043869018555
    7. '       ' → logprob: -17.000043869018555
    8. '```' → logprob: -17.125043869018555
    9. '‌,' → logprob: -17.625043869018555
    10. '           ' → logprob: -18.125043869018555

Token 304: ' switches' (ID: 57537)
  Prédit: 'switch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'switch' → logprob: -0.10049714893102646
    2. ' switches' → logprob: -2.350497245788574
    3. '   ' → logprob: -8.725497245788574
    4. ' switch' → logprob: -9.225497245788574
    5. '_switch' → logprob: -11.725497245788574
    6. 'sw' → logprob: -12.350497245788574
    7. '    ' → logprob: -12.600497245788574
    8. '       ' → logprob: -12.725497245788574
    9. ' ' → logprob: -12.975497245788574
    10. '.switch' → logprob: -13.475497245788574

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.7159857786027715e-05
    2. ',p' → logprob: -10.500046730041504
    3. ' ,' → logprob: -11.000046730041504
    4. ',
' → logprob: -13.500046730041504
    5. ',s' → logprob: -13.750046730041504
    6. 'p' → logprob: -15.875046730041504
    7. '),' → logprob: -16.00004768371582
    8. '[],' → logprob: -16.75004768371582
    9. '```' → logprob: -17.12504768371582
    10. '   ' → logprob: -17.37504768371582

Token 306: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07889066636562347
    2. ' p' → logprob: -2.578890562057495
    3. '   ' → logprob: -15.328890800476074
    4. ' ' → logprob: -15.828890800476074
    5. ')' → logprob: -16.453889846801758
    6. '
' → logprob: -16.578889846801758
    7. '<p' → logprob: -16.578889846801758
    8. '    ' → logprob: -16.828889846801758
    9. ')p' → logprob: -16.953889846801758
    10. '           ' → logprob: -17.203889846801758

Token 307: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1002482995390892
    2. '):' → logprob: -2.350248336791992
    3. '):
' → logprob: -10.975248336791992
    4. '       ' → logprob: -11.225248336791992
    5. ':' → logprob: -12.225248336791992
    6. ':
' → logprob: -12.475248336791992
    7. '   ' → logprob: -13.850248336791992
    8. '():
' → logprob: -13.975248336791992
    9. '           ' → logprob: -15.600248336791992
    10. '):

' → logprob: -15.975248336791992

Token 308: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003790760529227555
    2. ' ans' → logprob: -8.500378608703613
    3. 'ans' → logprob: -9.375378608703613
    4. '            
' → logprob: -10.625378608703613
    5. '
' → logprob: -11.000378608703613
    6. '       ' → logprob: -11.000378608703613
    7. '(ans' → logprob: -11.250378608703613
    8. '```' → logprob: -11.625378608703613
    9. '               ' → logprob: -13.000378608703613
    10. '        
' → logprob: -13.625378608703613

Token 309: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.06270253658294678
    2. 'ans' (adapté à ' ans') → logprob: -2.8127026557922363
    3. '           ' → logprob: -7.312702655792236
    4. '               ' → logprob: -10.562702178955078
    5. '       ' → logprob: -10.937702178955078
    6. '	ans' → logprob: -11.187702178955078
    7. '   ' → logprob: -12.062702178955078
    8. '(ans' → logprob: -12.687702178955078
    9. '_ans' → logprob: -13.812702178955078
    10. ' ' → logprob: -15.312702178955078

Token 310: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2519661486148834
    2. '+=' → logprob: -1.501966118812561
    3. '   ' → logprob: -10.75196647644043
    4. '    ' → logprob: -12.50196647644043
    5. '+' → logprob: -12.62696647644043
    6. ']+=' → logprob: -12.75196647644043
    7. '           ' → logprob: -13.00196647644043
    8. '       ' → logprob: -13.62696647644043
    9. '        ' → logprob: -14.37696647644043
    10. '=' → logprob: -14.50196647644043

Token 311: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.875001907348633
    4. '```' → logprob: -21.375001907348633
    5. '１' → logprob: -21.500001907348633
    6. '  ' → logprob: -22.125001907348633
    7. '۱' → logprob: -22.375001907348633
    8. '<|end|>' → logprob: -23.437501907348633
    9. '       ' → logprob: -23.875001907348633
    10. '    ' → logprob: -24.062501907348633

Token 312: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '１' → logprob: -22.25
    4. '```' → logprob: -22.625
    5. '<|end|>' → logprob: -23.0
    6. '   ' → logprob: -23.125
    7. '۱' → logprob: -23.75
    8. '१' → logprob: -24.375
    9. '১' → logprob: -24.875
    10. 'count' → logprob: -25.625

Token 313: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013504724483937025
    2. '
' → logprob: -7.126350402832031
    3. ' return' → logprob: -8.001350402832031
    4. 'return' → logprob: -8.626350402832031
    5. '    
' → logprob: -11.001350402832031
    6. '<|end|>' → logprob: -12.251350402832031
    7. '	return' → logprob: -12.376350402832031
    8. '       ' → logprob: -13.126350402832031
    9. ' 
' → logprob: -14.001350402832031
    10. '  
' → logprob: -14.001350402832031

Token 314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022408931981772184
    2. ' return' → logprob: -6.6272406578063965
    3. 'return' → logprob: -7.0022406578063965
    4. '	return' → logprob: -12.627241134643555
    5. '       ' → logprob: -14.127241134643555
    6. '<|end|>' → logprob: -15.627241134643555
    7. '```' → logprob: -16.002241134643555
    8. ' ' → logprob: -16.002241134643555
    9. '  ' → logprob: -16.252241134643555
    10. ':return' → logprob: -16.252241134643555

Token 315: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011781004257500172
    2. ' return' → logprob: -4.511781215667725
    3. '   ' → logprob: -7.511781215667725
    4. '
' → logprob: -8.636780738830566
    5. ' 
' → logprob: -12.886780738830566
    6. '	return' → logprob: -13.261780738830566
    7. '    
' → logprob: -13.386780738830566
    8. ':return' → logprob: -13.636780738830566
    9. '```' → logprob: -14.136780738830566
    10. ' ' → logprob: -15.011780738830566

Token 316: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03804183006286621
    2. ' ans' → logprob: -3.288041830062866
    3. '(ans' → logprob: -15.038042068481445
    4. '	ans' → logprob: -16.538042068481445
    5. '_ans' → logprob: -18.788042068481445
    6. 'anst' → logprob: -21.288042068481445
    7. 'Ans' → logprob: -22.413042068481445
    8. 'ANS' → logprob: -22.413042068481445
    9. 'ann' → logprob: -22.663042068481445
    10. 'an' → logprob: -23.288042068481445

Token 317: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 318: 'solve' (ID: 117273)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 319: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 317
Tokens correctement prédits (1ère position, stricte): 139
Tokens correctement prédits (1ère position, avec adaptation): 149
Tokens correctement prédits (top 10): 275
Précision stricte (1ère position): 43.85%
Précision adaptée (1ère position): 47.00%
Précision (top 10): 86.75%
================================================================================
