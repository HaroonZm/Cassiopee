================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import starmap, repeat

def square(x):
    return reduce(lambda a, b: a + b, starmap(lambda a, b: a, zip(repeat(x), repeat(x))), 0)

r = int(__import__('builtins').input())
circle_area_multiple = sum(repeat(r * r, 3))
print(circle_area_multiple if False else (lambda x: x)(circle_area_multiple))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3026095926761627
    2. 'partial' → logprob: -1.8026095628738403
    3. 'reduce' → logprob: -2.55260968208313
    4. 'l' → logprob: -4.677609443664551
    5. ' wraps' → logprob: -4.802609443664551
    6. 'cached' → logprob: -8.05260944366455
    7. 'cache' → logprob: -8.55260944366455
    8. 'cmp' → logprob: -9.05260944366455
    9. ' partial' → logprob: -9.42760944366455
    10. ' l' → logprob: -9.80260944366455

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025124039500951767
    2. '.' → logprob: -4.0251240730285645
    3. '\' → logprob: -6.4001240730285645
    4. '```' → logprob: -6.5251240730285645
    5. ',' → logprob: -6.6501240730285645
    6. ' (' → logprob: -7.5251240730285645
    7. '(lambda' → logprob: -7.7751240730285645
    8. '[' → logprob: -8.400123596191406
    9. '\(' → logprob: -8.400123596191406
    10. ' ' → logprob: -8.400123596191406

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02829861268401146
    2. 'def' → logprob: -4.653298377990723
    3. ' ' → logprob: -4.778298377990723
    4. '\' → logprob: -5.153298377990723
    5. '(
' → logprob: -7.153298377990723
    6. ',' → logprob: -7.403298377990723
    7. '```' → logprob: -7.528298377990723
    8. ' (' → logprob: -8.153298377990723
    9. 'r' → logprob: -8.653298377990723
    10. 'd' → logprob: -8.778298377990723

Token 6: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.8141523599624634
    2. ' math' → logprob: -0.9391523599624634
    3. 'operator' → logprob: -2.814152240753174
    4. ' itertools' → logprob: -2.814152240753174
    5. 'math' → logprob: -3.689152240753174
    6. ' collections' → logprob: -4.064152240753174
    7. 'collections' → logprob: -6.064152240753174
    8. ' os' → logprob: -6.814152240753174
    9. 'os' → logprob: -8.439152717590332
    10. 'it' → logprob: -9.439152717590332

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.48941928148269653
    2. 'import' → logprob: -1.1144192218780518
    3. '.' → logprob: -2.8644192218780518
    4. '.import' → logprob: -6.489419460296631
    5. ' .' → logprob: -8.739418983459473
    6. '.im' → logprob: -9.739418983459473
    7. '	import' → logprob: -9.989418983459473
    8. '_import' → logprob: -10.489418983459473
    9. ' ' → logprob: -11.114418983459473
    10. '<|end|>' → logprob: -11.364418983459473

Token 8: ' st' (ID: 420)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.8000409603118896
    2. 'group' → logprob: -2.0500409603118896
    3. 'acc' → logprob: -2.3000409603118896
    4. 'count' → logprob: -2.4250409603118896
    5. ' cycle' → logprob: -2.6750409603118896
    6. ' accumulate' → logprob: -3.1750409603118896
    7. 'cycle' → logprob: -3.3000409603118896
    8. ' chain' → logprob: -3.6750409603118896
    9. 'chain' → logprob: -4.175041198730469
    10. 'com' → logprob: -4.300041198730469

Token 9: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -0.20324425399303436
    2. 'ar' → logprob: -1.7032442092895508
    3. 'arl' → logprob: -7.078244209289551
    4. 'art' → logprob: -7.703244209289551
    5. 'arp' → logprob: -8.20324420928955
    6. 'ertools' → logprob: -9.45324420928955
    7. 'a' → logprob: -9.70324420928955
    8. 'r' → logprob: -11.32824420928955
    9. 'er' → logprob: -11.45324420928955
    10. 'arb' → logprob: -11.57824420928955

Token 10: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.004079708829522133
    2. 'atch' → logprob: -5.504079818725586
    3. 'at' → logprob: -15.004079818725586
    4. 'app' → logprob: -15.129079818725586
    5. 'apse' → logprob: -15.629079818725586
    6. 'ethod' → logprob: -15.879079818725586
    7. 'atched' → logprob: -16.629079818725586
    8. 'patch' → logprob: -16.754079818725586
    9. 'atches' → logprob: -16.879079818725586
    10. 'ach' → logprob: -17.379079818725586

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7371879816055298
    2. 'import' → logprob: -1.6121879816055298
    3. '(' → logprob: -1.7371879816055298
    4. '(
' → logprob: -3.1121878623962402
    5. '\n' → logprob: -3.6121878623962402
    6. 'def' → logprob: -3.6121878623962402
    7. ',
' → logprob: -4.23718786239624
    8. '\' → logprob: -4.48718786239624
    9. '.' → logprob: -4.73718786239624
    10. 'from' → logprob: -5.86218786239624

Token 12: ' repeat' (ID: 22962)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.9210355877876282
    2. 'acc' → logprob: -1.1710355281829834
    3. ' product' → logprob: -2.1710355281829834
    4. 'tee' → logprob: -3.2960355281829834
    5. 'group' → logprob: -3.5460355281829834
    6. 'filter' → logprob: -3.7960355281829834
    7. ' accumulate' → logprob: -3.7960355281829834
    8. 'chain' → logprob: -4.2960357666015625
    9. 'take' → logprob: -4.9210357666015625
    10. 'compress' → logprob: -5.0460357666015625

Token 13: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5010839700698853
    2. '(
' → logprob: -2.0010838508605957
    3. ',' → logprob: -2.2510838508605957
    4. '\n' → logprob: -2.7510838508605957
    5. 'def' → logprob: -2.8760838508605957
    6. ',
' → logprob: -4.751083850860596
    7. '\' → logprob: -5.251083850860596
    8. ')' → logprob: -5.501083850860596
    9. '
' → logprob: -5.626083850860596
    10. 'import' → logprob: -6.001083850860596

Token 14: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0185506921261549
    2. ',' → logprob: -4.643550872802734
    3. '(' → logprob: -6.643550872802734
    4. '=' → logprob: -6.893550872802734
    5. 'from' → logprob: -6.893550872802734
    6. 'import' → logprob: -7.143550872802734
    7. '```' → logprob: -7.268550872802734
    8. '\' → logprob: -7.393550872802734
    9. '*' → logprob: -7.643550872802734
    10. ')' → logprob: -8.018550872802734

Token 15: ' square' (ID: 13749)
  Prédit: ' reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.24249616265296936
    2. ' accumulate' → logprob: -1.992496132850647
    3. ' ' → logprob: -3.7424962520599365
    4. ' map' → logprob: -4.242496013641357
    5. ' factorial' → logprob: -4.242496013641357
    6. ' reducer' → logprob: -5.617496013641357
    7. ' compose' → logprob: -5.617496013641357
    8. 'reduce' → logprob: -5.742496013641357
    9. ' functools' → logprob: -6.117496013641357
    10. ' chain' → logprob: -6.242496013641357

Token 16: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003520277969073504
    2. 's' → logprob: -8.500351905822754
    3. '(x' → logprob: -9.500351905822754
    4. '(s' → logprob: -11.375351905822754
    5. '_' → logprob: -11.500351905822754
    6. '(n' → logprob: -11.750351905822754
    7. '(
' → logprob: -12.000351905822754
    8. '<|end|>' → logprob: -12.125351905822754
    9. ')' → logprob: -12.375351905822754
    10. '("("' → logprob: -12.625351905822754

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03365664556622505
    2. ')' → logprob: -3.408656597137451
    3. '):
' → logprob: -11.90865707397461
    4. ')**' → logprob: -13.78365707397461
    5. '**' → logprob: -14.15865707397461
    6. ' ):' → logprob: -14.28365707397461
    7. '),' → logprob: -15.15865707397461
    8. ':' → logprob: -15.28365707397461
    9. ')：' → logprob: -15.28365707397461
    10. '*' → logprob: -15.65865707397461

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14647911489009857
    2. ' return' → logprob: -2.0214791297912598
    3. 'return' → logprob: -5.77147912979126
    4. ':' → logprob: -7.77147912979126
    5. '    ' → logprob: -9.146478652954102
    6. ' ' → logprob: -9.646478652954102
    7. ':return' → logprob: -9.896478652954102
    8. ' :' → logprob: -11.771478652954102
    9. '  ' → logprob: -12.146478652954102
    10. ' x' → logprob: -12.271478652954102

Token 19: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4097696542739868
    2. '   ' → logprob: -1.5347696542739868
    3. ' return' → logprob: -2.1597695350646973
    4. 'x' → logprob: -5.409769535064697
    5. '    ' → logprob: -7.284769535064697
    6. ' x' → logprob: -8.909770011901855
    7. ' ' → logprob: -11.284770011901855
    8. '```' → logprob: -12.034770011901855
    9. '	return' → logprob: -12.159770011901855
    10. ':return' → logprob: -12.409770011901855

Token 20: ' reduce' (ID: 10389)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.25193122029304504
    2. 'x' → logprob: -1.5019311904907227
    3. ' ' → logprob: -13.376931190490723
    4. '(x' → logprob: -15.251931190490723
    5. '   ' → logprob: -16.50193214416504
    6. '	x' → logprob: -16.62693214416504
    7. ' (' → logprob: -17.25193214416504
    8. ')' → logprob: -17.87693214416504
    9. '*x' → logprob: -18.12693214416504
    10. ' ' → logprob: -18.12693214416504

Token 21: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47490638494491577
    2. '(lambda' → logprob: -0.9749063849449158
    3. '(operator' → logprob: -7.4749064445495605
    4. '(pow' → logprob: -8.724905967712402
    5. '(square' → logprob: -9.974905967712402
    6. '((' → logprob: -10.599905967712402
    7. '(s' → logprob: -11.724905967712402
    8. '```' → logprob: -12.224905967712402
    9. '(
' → logprob: -12.599905967712402
    10. '(sum' → logprob: -12.974905967712402

Token 22: ' a' (ID: 261)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.25479376316070557
    2. ' acc' → logprob: -1.6297937631607056
    3. ' a' → logprob: -4.254793643951416
    4. 'x' → logprob: -5.004793643951416
    5. 'acc' → logprob: -6.129793643951416
    6. 'a' → logprob: -6.254793643951416
    7. ' y' → logprob: -6.629793643951416
    8. ' ' → logprob: -6.754793643951416
    9. ' result' → logprob: -8.379794120788574
    10. ' ac' → logprob: -8.504794120788574

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026035398244857788
    2. '+' → logprob: -4.526035308837891
    3. ' ,' → logprob: -5.026035308837891
    4. ' +' → logprob: -6.026035308837891
    5. '*' → logprob: -6.276035308837891
    6. 'a' → logprob: -6.276035308837891
    7. ',a' → logprob: -7.401035308837891
    8. ' ' → logprob: -8.27603530883789
    9. ' a' → logprob: -8.27603530883789
    10. 'x' → logprob: -8.27603530883789

Token 24: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.697219967842102
    2. ' b' → logprob: -0.697219967842102
    3. 'x' → logprob: -6.3222198486328125
    4. ' x' → logprob: -6.3222198486328125
    5. ' ' → logprob: -7.8222198486328125
    6. 'a' → logprob: -10.572219848632812
    7. ' a' → logprob: -11.822219848632812
    8. 'v' → logprob: -12.322219848632812
    9. ' v' → logprob: -12.572219848632812
    10. 'e' → logprob: -12.572219848632812

Token 25: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1762005239725113
    2. ':' → logprob: -2.3012006282806396
    3. ' ,' → logprob: -3.4262006282806396
    4. 'a' → logprob: -3.9262006282806396
    5. ' :' → logprob: -6.0512003898620605
    6. ' a' → logprob: -6.3012003898620605
    7. ',a' → logprob: -6.3012003898620605
    8. '=' → logprob: -7.0512003898620605
    9. '+' → logprob: -7.4262003898620605
    10. '*' → logprob: -8.176200866699219

Token 26: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.42875081300735474
    2. ' a' → logprob: -1.05375075340271
    3. ' ' → logprob: -10.303750991821289
    4. '   ' → logprob: -11.803750991821289
    5. '  ' → logprob: -12.303750991821289
    6. '	a' → logprob: -12.928750991821289
    7. ' ' → logprob: -13.803750991821289
    8. '    ' → logprob: -14.553750991821289
    9. ')' → logprob: -15.178750991821289
    10. '(a' → logprob: -16.30375099182129

Token 27: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8619093298912048
    2. '+' → logprob: -1.1119093894958496
    3. ' +' → logprob: -2.1119093894958496
    4. ' *' → logprob: -2.2369093894958496
    5. '**' → logprob: -4.23690938949585
    6. '*b' → logprob: -5.86190938949585
    7. '+b' → logprob: -5.98690938949585
    8. ' **' → logprob: -7.11190938949585
    9. ' ' → logprob: -8.861908912658691
    10. '*x' → logprob: -9.236908912658691

Token 28: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7085919976234436
    2. ' b' → logprob: -0.7085919976234436
    3. 'x' → logprob: -4.833591938018799
    4. ' x' → logprob: -5.208591938018799
    5. ' ' → logprob: -6.708591938018799
    6. ' (' → logprob: -8.208592414855957
    7. '(' → logprob: -9.083592414855957
    8. '  ' → logprob: -9.583592414855957
    9. '(x' → logprob: -9.708592414855957
    10. '(b' → logprob: -10.083592414855957

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1609301120042801
    2. ' x' → logprob: -3.2859301567077637
    3. ' ,' → logprob: -3.5359301567077637
    4. 'x' → logprob: -3.6609301567077637
    5. '(x' → logprob: -4.410930156707764
    6. '**' → logprob: -4.535930156707764
    7. '*x' → logprob: -4.785930156707764
    8. ' ' → logprob: -5.285930156707764
    9. ' +' → logprob: -5.910930156707764
    10. '(' → logprob: -6.035930156707764

Token 30: ' st' (ID: 420)
  Prédit: ' repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' repeat' → logprob: -0.6888383030891418
    2. 'repeat' → logprob: -1.438838243484497
    3. '[' → logprob: -2.813838243484497
    4. ' map' → logprob: -2.938838243484497
    5. ' [' → logprob: -3.063838243484497
    6. ' st' → logprob: -3.188838243484497
    7. ' range' → logprob: -4.188838481903076
    8. '[x' → logprob: -4.938838481903076
    9. ' list' → logprob: -5.063838481903076
    10. ' x' → logprob: -5.063838481903076

Token 31: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -0.014401133172214031
    2. 'arp' → logprob: -4.264400959014893
    3. 'ar' → logprob: -8.76440143585205
    4. 'map' → logprob: -9.63940143585205
    5. '(map' → logprob: -12.51440143585205
    6. 'armac' → logprob: -12.76440143585205
    7. 'amp' → logprob: -13.63940143585205
    8. 'armor' → logprob: -13.76440143585205
    9. 'ars' → logprob: -13.88940143585205
    10. 'arman' → logprob: -14.13940143585205

Token 32: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -1.3856492842023727e-06
    2. '<|end|>' → logprob: -14.000000953674316
    3. 'map' → logprob: -15.875000953674316
    4. 'a' → logprob: -16.125001907348633
    5. 'apse' → logprob: -16.625001907348633
    6. 'ап' → logprob: -17.000001907348633
    7. 'ultiply' → logprob: -17.375001907348633
    8. 'e' → logprob: -18.000001907348633
    9. 'apte' → logprob: -18.125001907348633
    10. 'apping' → logprob: -18.125001907348633

Token 33: '(lambda' (ID: 43341)
  Prédit: '(square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(square' → logprob: -0.11965762078762054
    2. '(lambda' → logprob: -2.619657516479492
    3. '(' → logprob: -3.369657516479492
    4. '(pow' → logprob: -5.369657516479492
    5. ')' → logprob: -7.994657516479492
    6. '(s' → logprob: -8.744657516479492
    7. '(operator' → logprob: -9.369657516479492
    8. '(abs' → logprob: -9.744657516479492
    9. '((' → logprob: -10.119657516479492
    10. '(re' → logprob: -10.494657516479492

Token 34: ' a' (ID: 261)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.9575563073158264
    2. 'lambda' → logprob: -1.2075562477111816
    3. ' x' → logprob: -2.4575562477111816
    4. 'x' → logprob: -2.5825562477111816
    5. 'pow' → logprob: -2.8325562477111816
    6. ' pow' → logprob: -3.7075562477111816
    7. 'int' → logprob: -3.9575562477111816
    8. ' ' → logprob: -4.332556247711182
    9. ',' → logprob: -4.457556247711182
    10. '(lambda' → logprob: -5.332556247711182

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018076542764902115
    2. ' ,' → logprob: -5.018076419830322
    3. 'x' → logprob: -5.768076419830322
    4. ',b' → logprob: -6.143076419830322
    5. ' x' → logprob: -6.768076419830322
    6. 'a' → logprob: -6.893076419830322
    7. '**' → logprob: -7.018076419830322
    8. '2' → logprob: -7.393076419830322
    9. ' ' → logprob: -7.643076419830322
    10. ' a' → logprob: -8.01807689666748

Token 36: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03383852541446686
    2. ' b' → logprob: -3.4088385105133057
    3. 'a' → logprob: -9.408838272094727
    4. ' ' → logprob: -9.533838272094727
    5. 'x' → logprob: -11.158838272094727
    6. '   ' → logprob: -12.158838272094727
    7. ' a' → logprob: -12.408838272094727
    8. '  ' → logprob: -12.783838272094727
    9. '_' → logprob: -13.283838272094727
    10. 's' → logprob: -13.533838272094727

Token 37: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3323073983192444
    2. ',' → logprob: -1.7073073387145996
    3. ' :' → logprob: -2.5823073387145996
    4. ' ,' → logprob: -3.8323073387145996
    5. 'a' → logprob: -7.2073073387146
    6. '   ' → logprob: -7.3323073387146
    7. ',a' → logprob: -7.5823073387146
    8. ',b' → logprob: -8.082307815551758
    9. ' a' → logprob: -8.457307815551758
    10. '**' → logprob: -8.582307815551758

Token 38: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5767305493354797
    2. 'a' → logprob: -0.8267305493354797
    3. '(a' → logprob: -8.576730728149414
    4. ' (' → logprob: -8.826730728149414
    5. ' ' → logprob: -8.951730728149414
    6. ')' → logprob: -9.576730728149414
    7. '   ' → logprob: -10.451730728149414
    8. ' square' → logprob: -10.576730728149414
    9. 'square' → logprob: -10.701730728149414
    10. 'b' → logprob: -10.701730728149414

Token 39: ',' (ID: 11)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6753264665603638
    2. ' *' → logprob: -1.4253264665603638
    3. '**' → logprob: -1.8003264665603638
    4. '*b' → logprob: -2.675326347351074
    5. ' **' → logprob: -4.300326347351074
    6. ' +' → logprob: -6.800326347351074
    7. ' ' → logprob: -7.175326347351074
    8. '+' → logprob: -7.550326347351074
    9. '+b' → logprob: -8.175326347351074
    10. '*a' → logprob: -9.550326347351074

Token 40: ' zip' (ID: 16216)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.964134931564331
    2. ' zip' → logprob: -1.214134931564331
    3. ' repeat' → logprob: -1.464134931564331
    4. 'zip' → logprob: -2.589134931564331
    5. '[(' → logprob: -5.08913516998291
    6. ' map' → logprob: -6.21413516998291
    7. ' [(' → logprob: -6.71413516998291
    8. 'map' → logprob: -6.83913516998291
    9. ')' → logprob: -7.33913516998291
    10. ' ' → logprob: -7.46413516998291

Token 41: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.029950879514217377
    2. '(' → logprob: -4.029951095581055
    3. '(range' → logprob: -4.529951095581055
    4. '((' → logprob: -8.154951095581055
    5. '(square' → logprob: -8.154951095581055
    6. '([' → logprob: -9.279951095581055
    7. 'repeat' → logprob: -9.404951095581055
    8. '(s' → logprob: -9.529951095581055
    9. '(zip' → logprob: -10.904951095581055
    10. '(
' → logprob: -11.154951095581055

Token 42: 'peat' (ID: 18888)
  Prédit: 'peat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peat' → logprob: -9.014684110297821e-06
    2. 'pe' → logprob: -12.750008583068848
    3. 'p' → logprob: -13.250008583068848
    4. 'quest' → logprob: -13.625008583068848
    5. 'PEAT' → logprob: -13.625008583068848
    6. 'peated' → logprob: -14.250008583068848
    7. 'ad' → logprob: -15.750008583068848
    8. 'place' → logprob: -15.875008583068848
    9. ' peat' → logprob: -16.000009536743164
    10. 'at' → logprob: -16.125009536743164

Token 43: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1630551517009735
    2. '(square' → logprob: -2.288055181503296
    3. '(' → logprob: -3.538055181503296
    4. '(s' → logprob: -4.163054943084717
    5. '(range' → logprob: -5.788054943084717
    6. 's' → logprob: -7.788054943084717
    7. ')' → logprob: -8.288055419921875
    8. 'square' → logprob: -8.913055419921875
    9. '([' → logprob: -9.288055419921875
    10. 'x' → logprob: -9.788055419921875

Token 44: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07238265872001648
    2. '),' → logprob: -2.697382688522339
    3. ' ,' → logprob: -6.69738245010376
    4. ')' → logprob: -7.44738245010376
    5. ',x' → logprob: -8.322382926940918
    6. ',),' → logprob: -8.822382926940918
    7. ' ),' → logprob: -9.197382926940918
    8. ' ' → logprob: -11.072382926940918
    9. '2' → logprob: -11.197382926940918
    10. ')),' → logprob: -11.322382926940918

Token 45: ' repeat' (ID: 22962)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.12881818413734436
    2. ' repeat' → logprob: -2.2538182735443115
    3. 'range' → logprob: -4.628818035125732
    4. ' range' → logprob: -6.378818035125732
    5. 'map' → logprob: -6.878818035125732
    6. ' ' → logprob: -7.503818035125732
    7. ' map' → logprob: -7.753818035125732
    8. '[' → logprob: -7.878818035125732
    9. 'x' → logprob: -8.00381851196289
    10. ' [' → logprob: -8.25381851196289

Token 46: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.033439356833696365
    2. 'x' → logprob: -3.5334393978118896
    3. '(' → logprob: -5.9084391593933105
    4. '1' → logprob: -8.283439636230469
    5. ' x' → logprob: -8.533439636230469
    6. '(square' → logprob: -8.908439636230469
    7. '2' → logprob: -9.158439636230469
    8. 'square' → logprob: -9.408439636230469
    9. ')' → logprob: -9.908439636230469
    10. ' ' → logprob: -10.783439636230469

Token 47: '))),' (ID: 85891)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.267540842294693
    2. '))))' → logprob: -1.5175408124923706
    3. ')' → logprob: -4.51754093170166
    4. '))' → logprob: -5.64254093170166
    5. '),' → logprob: -8.51754093170166
    6. ')))
' → logprob: -8.89254093170166
    7. ')),' → logprob: -8.89254093170166
    8. '))),' → logprob: -9.01754093170166
    9. ')))),' → logprob: -9.01754093170166
    10. '))))
' → logprob: -9.01754093170166

Token 48: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0087132453918457
    2. 'x' → logprob: -1.3837132453918457
    3. ' x' → logprob: -1.6337132453918457
    4. ' ' → logprob: -2.1337132453918457
    5. ')' → logprob: -3.2587132453918457
    6. '0' → logprob: -4.008713245391846
    7. '2' → logprob: -5.883713245391846
    8. 'len' → logprob: -6.133713245391846
    9. '10' → logprob: -6.508713245391846
    10. '  ' → logprob: -6.883713245391846

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07193348556756973
    2. 'x' → logprob: -2.9469335079193115
    3. ' ' → logprob: -4.321933269500732
    4. ' x' → logprob: -5.696933269500732
    5. '1' → logprob: -8.44693374633789
    6. 'square' → logprob: -10.82193374633789
    7. '   ' → logprob: -11.82193374633789
    8. ')' → logprob: -11.94693374633789
    9. '(x' → logprob: -12.07193374633789
    10. ' square' → logprob: -12.69693374633789

Token 50: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7968066206085496e-05
    2. ')
' → logprob: -11.000027656555176
    3. ' )' → logprob: -12.375027656555176
    4. '))' → logprob: -12.500027656555176
    5. ')))' → logprob: -13.875027656555176
    6. ')x' → logprob: -14.625027656555176
    7. '   ' → logprob: -14.625027656555176
    8. ')

' → logprob: -14.875027656555176
    9. ')return' → logprob: -15.375027656555176
    10. ')`' → logprob: -15.625027656555176

Token 51: 'r' (ID: 81)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0062304711900651455
    2. ' ' → logprob: -5.631230354309082
    3. '<|end|>' → logprob: -6.756230354309082
    4. ' )' → logprob: -7.256230354309082
    5. '   ' → logprob: -8.381230354309082
    6. '#' → logprob: -9.131230354309082
    7. '(' → logprob: -9.131230354309082
    8. '+' → logprob: -9.756230354309082
    9. '[' → logprob: -10.131230354309082
    10. '*' → logprob: -10.256230354309082

Token 52: ' =' (ID: 314)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.46959733963012695
    2. 'e' → logprob: -1.094597339630127
    3. 'eturn' → logprob: -3.594597339630127
    4. 'ange' → logprob: -6.219597339630127
    5. 'ed' → logprob: -6.344597339630127
    6. 'esize' → logprob: -6.344597339630127
    7. 'esu' → logprob: -6.719597339630127
    8. 'a' → logprob: -6.719597339630127
    9. 'ect' → logprob: -7.094597339630127
    10. ')' → logprob: -7.469597339630127

Token 53: ' int' (ID: 677)
  Prédit: 'square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'square' → logprob: -0.12014678120613098
    2. ' square' → logprob: -2.6201467514038086
    3. '5' → logprob: -3.4951467514038086
    4. ' ' → logprob: -5.495146751403809
    5. '10' → logprob: -6.495146751403809
    6. '4' → logprob: -6.745146751403809
    7. '3' → logprob: -6.745146751403809
    8. 's' → logprob: -7.245146751403809
    9. '(square' → logprob: -8.120146751403809
    10. 'sq' → logprob: -8.370146751403809

Token 54: '(__' (ID: 11782)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.47519487142562866
    2. '(' → logprob: -0.9751948714256287
    3. 'input' → logprob: -7.725194931030273
    4. '('' → logprob: -7.725194931030273
    5. '(s' → logprob: -9.725194931030273
    6. '("' → logprob: -9.850194931030273
    7. ' (' → logprob: -10.350194931030273
    8. '()' → logprob: -10.475194931030273
    9. '(
' → logprob: -11.350194931030273
    10. '(x' → logprob: -11.600194931030273

Token 55: 'import' (ID: 561)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01198527216911316
    2. '(input' → logprob: -4.7619853019714355
    3. ''' → logprob: -7.1369853019714355
    4. '"' → logprob: -7.2619853019714355
    5. 'raw' → logprob: -7.3869853019714355
    6. ' input' → logprob: -7.8869853019714355
    7. 'r' → logprob: -8.011984825134277
    8. '(' → logprob: -9.261984825134277
    9. 'len' → logprob: -9.761984825134277
    10. '100' → logprob: -9.761984825134277

Token 56: '__('' (ID: 54460)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.5789026618003845
    2. '__('' → logprob: -1.4539027214050293
    3. '("' → logprob: -2.2039027214050293
    4. '__("' → logprob: -2.8289027214050293
    5. '(' → logprob: -3.9539027214050293
    6. '("("' → logprob: -4.203902721405029
    7. '("__' → logprob: -7.828902721405029
    8. '('__' → logprob: -7.828902721405029
    9. '(math' → logprob: -7.953902721405029
    10. ')("' → logprob: -9.078902244567871

Token 57: 'built' (ID: 81936)
  Prédit: 'built'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'built' → logprob: -0.45661690831184387
    2. 'math' → logprob: -1.2066168785095215
    3. 'sys' → logprob: -2.7066168785095215
    4. ' built' → logprob: -7.5816168785095215
    5. 'cmath' → logprob: -10.33161735534668
    6. 'random' → logprob: -10.83161735534668
    7. ' math' → logprob: -11.08161735534668
    8. 'code' → logprob: -11.08161735534668
    9. 'os' → logprob: -12.20661735534668
    10. '_math' → logprob: -13.70661735534668

Token 58: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -2.5941604690160602e-05
    2. '-ins' → logprob: -11.500025749206543
    3. '__' → logprob: -12.125025749206543
    4. 'in' → logprob: -12.750025749206543
    5. '_ins' → logprob: -12.875025749206543
    6. '```' → logprob: -14.125025749206543
    7. '-' → logprob: -14.250025749206543
    8. 'ints' → logprob: -14.375025749206543
    9. 'input' → logprob: -14.750025749206543
    10. 'INS' → logprob: -14.875025749206543

Token 59: '').' (ID: 3426)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.4636287689208984
    2. ').__' → logprob: -1.4636287689208984
    3. '').' → logprob: -1.8386287689208984
    4. ').' → logprob: -1.8386287689208984
    5. '.input' → logprob: -2.0886287689208984
    6. '.__' → logprob: -3.0886287689208984
    7. ')' → logprob: -4.713628768920898
    8. ' ).' → logprob: -5.338628768920898
    9. 'input' → logprob: -5.588628768920898
    10. '.).' → logprob: -5.713628768920898

Token 60: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00045140698784962296
    2. 'abs' → logprob: -8.87545108795166
    3. 'round' → logprob: -9.12545108795166
    4. ' input' → logprob: -9.62545108795166
    5. 'pow' → logprob: -10.00045108795166
    6. 'eval' → logprob: -10.50045108795166
    7. 'int' → logprob: -11.00045108795166
    8. '__' → logprob: -11.62545108795166
    9. 'exec' → logprob: -11.75045108795166
    10. 'sqrt' → logprob: -12.00045108795166

Token 61: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -1.000861644744873
    2. '(' → logprob: -1.375861644744873
    3. '()' → logprob: -1.625861644744873
    4. ')' → logprob: -2.375861644744873
    5. '())' → logprob: -2.500861644744873
    6. '("("' → logprob: -6.250861644744873
    7. '(()' → logprob: -6.375861644744873
    8. ')(' → logprob: -6.750861644744873
    9. '`()' → logprob: -7.625861644744873
    10. '(""))' → logprob: -7.625861644744873

Token 62: 'circle' (ID: 51762)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7707468271255493
    2. 's' → logprob: -1.5207468271255493
    3. '_' → logprob: -2.5207467079162598
    4. ' ' → logprob: -3.0207467079162598
    5. '<|end|>' → logprob: -3.2707467079162598
    6. '(' → logprob: -3.7707467079162598
    7. 'r' → logprob: -3.7707467079162598
    8. '+' → logprob: -4.14574670791626
    9. '*' → logprob: -4.14574670791626
    10. 'result' → logprob: -4.64574670791626

Token 63: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.24094565212726593
    2. '_' → logprob: -1.9909456968307495
    3. '_radius' → logprob: -2.74094557762146
    4. '(' → logprob: -5.115945816040039
    5. '_r' → logprob: -5.865945816040039
    6. '(radius' → logprob: -6.490945816040039
    7. '_(' → logprob: -7.365945816040039
    8. 's' → logprob: -7.490945816040039
    9. 'r' → logprob: -7.990945816040039
    10. '(r' → logprob: -8.115945816040039

Token 64: '_multiple' (ID: 111487)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01459955982863903
    2. '(r' → logprob: -4.889599323272705
    3. '=' → logprob: -6.014599323272705
    4. ' =' → logprob: -6.889599323272705
    5. 's' → logprob: -7.014599323272705
    6. '_' → logprob: -7.514599323272705
    7. '(radius' → logprob: -7.514599323272705
    8. ')' → logprob: -8.514599800109863
    9. '(x' → logprob: -8.639599800109863
    10. '(circle' → logprob: -9.139599800109863

Token 65: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.015476624481379986
    2. 'r' → logprob: -5.015476703643799
    3. ' =' → logprob: -5.140476703643799
    4. '=' → logprob: -6.140476703643799
    5. 'rs' → logprob: -8.26547622680664
    6. 'plier' → logprob: -8.64047622680664
    7. 'd' → logprob: -9.51547622680664
    8. '_factor' → logprob: -9.51547622680664
    9. '_' → logprob: -9.89047622680664
    10. 'iplier' → logprob: -10.76547622680664

Token 66: ' sum' (ID: 4215)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.17142356932163239
    2. ' ' → logprob: -1.9214235544204712
    3. 'r' → logprob: -5.671423435211182
    4. 'pi' → logprob: -5.671423435211182
    5. ' lambda' → logprob: -6.921423435211182
    6. ' r' → logprob: -6.921423435211182
    7. 'lambda' → logprob: -7.546423435211182
    8. ' pi' → logprob: -7.671423435211182
    9. 'square' → logprob: -8.42142391204834
    10. 'circle' → logprob: -8.54642391204834

Token 67: '(re' (ID: 8178)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.2935201823711395
    2. '(re' → logprob: -2.418520212173462
    3. '(square' → logprob: -2.418520212173462
    4. '(' → logprob: -3.668520212173462
    5. '(map' → logprob: -4.168519973754883
    6. '((' → logprob: -4.793519973754883
    7. '(st' → logprob: -5.168519973754883
    8. '(s' → logprob: -5.168519973754883
    9. '(list' → logprob: -5.543519973754883
    10. '(range' → logprob: -5.543519973754883

Token 68: 'peat' (ID: 18888)
  Prédit: 'peat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peat' → logprob: -2.081584716506768e-05
    2. 'pe' → logprob: -11.375020980834961
    3. 'PEAT' → logprob: -12.750020980834961
    4. 'p' → logprob: -13.375020980834961
    5. 'repeat' → logprob: -13.750020980834961
    6. 'pit' → logprob: -14.125020980834961
    7. '(' → logprob: -14.250020980834961
    8. 'peated' → logprob: -14.375020980834961
    9. 'pea' → logprob: -14.750020980834961
    10. '[' → logprob: -15.375020980834961

Token 69: '(r' (ID: 4729)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5936148166656494
    2. '(r' → logprob: -0.8436148166656494
    3. '(pi' → logprob: -5.09361457824707
    4. '(circle' → logprob: -6.09361457824707
    5. '(square' → logprob: -6.21861457824707
    6. '(s' → logprob: -6.34361457824707
    7. '((' → logprob: -6.59361457824707
    8. '(math' → logprob: -6.84361457824707
    9. ')' → logprob: -7.21861457824707
    10. '(int' → logprob: -7.71861457824707

Token 70: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2109057754278183
    2. '**' → logprob: -2.3359057903289795
    3. ' **' → logprob: -3.4609057903289795
    4. ' ,' → logprob: -4.0859055519104
    5. '**,' → logprob: -4.0859055519104
    6. '2' → logprob: -4.2109055519104
    7. ')' → logprob: -5.3359055519104
    8. ' ' → logprob: -5.7109055519104
    9. '*' → logprob: -6.7109055519104
    10. ' *' → logprob: -6.9609055519104

Token 71: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2235632985830307
    2. '2' → logprob: -1.723563313484192
    3. ' ' → logprob: -4.973563194274902
    4. ')' → logprob: -4.973563194274902
    5. ' r' → logprob: -5.598563194274902
    6. '3' → logprob: -5.848563194274902
    7. '<|end|>' → logprob: -7.973563194274902
    8. '7' → logprob: -8.473563194274902
    9. '**' → logprob: -8.973563194274902
    10. '4' → logprob: -9.098563194274902

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0041402606293559074
    2. ' ,' → logprob: -5.629140377044678
    3. '(),' → logprob: -8.25413990020752
    4. '))' → logprob: -9.00413990020752
    5. '),' → logprob: -10.37913990020752
    6. '2' → logprob: -10.37913990020752
    7. '3' → logprob: -11.00413990020752
    8. '1' → logprob: -11.75413990020752
    9. ')' → logprob: -11.87913990020752
    10. '4' → logprob: -12.00413990020752

Token 73: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07210218906402588
    2. '1' → logprob: -3.6971020698547363
    3. 'r' → logprob: -3.8221020698547363
    4. '3' → logprob: -4.697102069854736
    5. ' ' → logprob: -4.822102069854736
    6. '6' → logprob: -6.697102069854736
    7. '5' → logprob: -7.197102069854736
    8. '4' → logprob: -7.447102069854736
    9. ')' → logprob: -7.697102069854736
    10. 'int' → logprob: -7.822102069854736

Token 74: '3' (ID: 18)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9221951365470886
    2. '3' → logprob: -1.1721951961517334
    3. '2' → logprob: -2.1721951961517334
    4. '5' → logprob: -2.4221951961517334
    5. '10' → logprob: -3.9221951961517334
    6. '100' → logprob: -4.172194957733154
    7. '1' → logprob: -4.297194957733154
    8. 'int' → logprob: -4.547194957733154
    9. '4' → logprob: -4.672194957733154
    10. '6' → logprob: -4.797194957733154

Token 75: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004970574285835028
    2. ')' → logprob: -5.379970550537109
    3. '),' → logprob: -8.75497055053711
    4. ')))' → logprob: -9.50497055053711
    5. ' ))' → logprob: -9.87997055053711
    6. '))
' → logprob: -10.25497055053711
    7. '))

' → logprob: -12.12997055053711
    8. '3' → logprob: -12.37997055053711
    9. ' )' → logprob: -12.62997055053711
    10. '))*' → logprob: -13.25497055053711

Token 76: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00307551771402359
    2. '*' → logprob: -7.12807559967041
    3. '+' → logprob: -7.25307559967041
    4. ' ' → logprob: -7.75307559967041
    5. ' )' → logprob: -8.37807559967041
    6. '(' → logprob: -8.50307559967041
    7. '[' → logprob: -8.75307559967041
    8. '<|end|>' → logprob: -9.00307559967041
    9. '#' → logprob: -9.12807559967041
    10. '**' → logprob: -9.62807559967041

Token 77: '(circle' (ID: 180680)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28764089941978455
    2. '(circle' → logprob: -1.412640929222107
    3. '(square' → logprob: -5.4126410484313965
    4. '(r' → logprob: -6.7876410484313965
    5. '(c' → logprob: -7.7876410484313965
    6. '((' → logprob: -9.037640571594238
    7. '(round' → logprob: -9.787640571594238
    8. '(s' → logprob: -9.912640571594238
    9. ' (' → logprob: -10.287640571594238
    10. '(area' → logprob: -10.412640571594238

Token 78: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -2.045823566731997e-05
    2. '_' → logprob: -12.000020027160645
    3. ')' → logprob: -12.250020027160645
    4. ')_' → logprob: -12.375020027160645
    5. '_a' → logprob: -13.875020027160645
    6. '_circle' → logprob: -14.000020027160645
    7. ' _' → logprob: -14.000020027160645
    8. 'area' → logprob: -14.500020027160645
    9. '_are' → logprob: -14.500020027160645
    10. '_)' → logprob: -15.250020027160645

Token 79: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.0014141658321022987
    2. '_)' → logprob: -6.7514142990112305
    3. '_' → logprob: -9.62641429901123
    4. '_mult' → logprob: -10.00141429901123
    5. ')' → logprob: -10.12641429901123
    6. '_m' → logprob: -10.25141429901123
    7. '_mul' → logprob: -10.37641429901123
    8. '_multi' → logprob: -11.87641429901123
    9. ')_' → logprob: -12.00141429901123
    10. ' multiple' → logprob: -12.37641429901123

Token 80: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024239711638074368
    2. '))' → logprob: -8.875242233276367
    3. ' )' → logprob: -9.500242233276367
    4. '**' → logprob: -11.500242233276367
    5. '*' → logprob: -12.000242233276367
    6. ')
' → logprob: -12.750242233276367
    7. ')**' → logprob: -13.375242233276367
    8. ')))' → logprob: -13.500242233276367
    9. ')`' → logprob: -13.875242233276367
    10. '`)' → logprob: -14.125242233276367

Token 81: ' False' (ID: 7983)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.4481322169303894
    2. 'r' → logprob: -1.5731322765350342
    3. ' circle' → logprob: -2.323132276535034
    4. 'circle' → logprob: -2.948132276535034
    5. ')' → logprob: -7.323132038116455
    6. ' ' → logprob: -7.573132038116455
    7. ' True' → logprob: -7.823132038116455
    8. '__' → logprob: -8.073132514953613
    9. ' __' → logprob: -8.073132514953613
    10. ' not' → logprob: -8.448132514953613

Token 82: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.09970854222774506
    2. 'else' → logprob: -2.4747085571289062
    3. ')' → logprob: -4.849708557128906
    4. ' )' → logprob: -6.099708557128906
    5. ' ' → logprob: -7.474708557128906
    6. '==' → logprob: -11.599708557128906
    7. ',' → logprob: -11.599708557128906
    8. '))' → logprob: -11.599708557128906
    9. ' and' → logprob: -12.349708557128906
    10. '()' → logprob: -12.349708557128906

Token 83: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0634084939956665
    2. '3' → logprob: -1.3134084939956665
    3. ' ' → logprob: -2.313408374786377
    4. 'circle' → logprob: -2.438408374786377
    5. ' r' → logprob: -2.563408374786377
    6. ' circle' → logprob: -2.688408374786377
    7. '0' → logprob: -3.938408374786377
    8. '6' → logprob: -5.313408374786377
    9. 'int' → logprob: -5.688408374786377
    10. '(r' → logprob: -6.063408374786377

Token 84: 'lambda' (ID: 35280)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2915934920310974
    2. 'circle' → logprob: -2.166593551635742
    3. 'r' → logprob: -2.291593551635742
    4. ' ' → logprob: -3.791593551635742
    5. '22' → logprob: -5.541593551635742
    6. 'round' → logprob: -5.791593551635742
    7. 'square' → logprob: -6.291593551635742
    8. ' circle' → logprob: -6.666593551635742
    9. ' r' → logprob: -6.916593551635742
    10. 'int' → logprob: -7.416593551635742

Token 85: ' x' (ID: 1215)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.1625058948993683
    2. 'r' → logprob: -2.412505865097046
    3. ' x' → logprob: -3.287505865097046
    4. ' ' → logprob: -5.412506103515625
    5. ' radius' → logprob: -5.412506103515625
    6. 'x' → logprob: -5.537506103515625
    7. ' lambda' → logprob: -5.787506103515625
    8. ' circle' → logprob: -6.287506103515625
    9. ' area' → logprob: -7.287506103515625
    10. 'radius' → logprob: -7.287506103515625

Token 86: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06356216222047806
    2. ' :' → logprob: -2.8135621547698975
    3. ' x' → logprob: -6.813562393188477
    4. 'x' → logprob: -8.063562393188477
    5. ':x' → logprob: -9.688562393188477
    6. ',' → logprob: -10.188562393188477
    7. ':int' → logprob: -11.563562393188477
    8. '):' → logprob: -11.813562393188477
    9. ' ' → logprob: -11.938562393188477
    10. 'r' → logprob: -12.188562393188477

Token 87: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.34534767270088196
    2. ' x' → logprob: -1.3453476428985596
    3. '3' → logprob: -4.220347881317139
    4. 'circle' → logprob: -5.845347881317139
    5. '(x' → logprob: -6.095347881317139
    6. ' ' → logprob: -6.345347881317139
    7. ' circle' → logprob: -6.345347881317139
    8. ' (' → logprob: -6.845347881317139
    9. 'pi' → logprob: -6.970347881317139
    10. '   ' → logprob: -7.095347881317139

Token 88: ')(' (ID: 4898)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6150295734405518
    2. '(x' → logprob: -1.9900295734405518
    3. ':' → logprob: -2.6150295734405518
    4. '*' → logprob: -2.8650295734405518
    5. '**' → logprob: -2.8650295734405518
    6. ')' → logprob: -3.1150295734405518
    7. ' **' → logprob: -3.8650295734405518
    8. '*x' → logprob: -3.9900295734405518
    9. ')(' → logprob: -4.490029335021973
    10. '(' → logprob: -4.615029335021973

Token 89: 'circle' (ID: 51762)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2686947286128998
    2. 'circle' → logprob: -1.6436947584152222
    3. 'square' → logprob: -4.143694877624512
    4. ' circle' → logprob: -5.018694877624512
    5. ')' → logprob: -5.268694877624512
    6. '3' → logprob: -5.643694877624512
    7. ' r' → logprob: -6.018694877624512
    8. '42' → logprob: -6.143694877624512
    9. '0' → logprob: -7.018694877624512
    10. ' ' → logprob: -7.643694877624512

Token 90: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.0002802855451591313
    2. ')' → logprob: -9.125280380249023
    3. 'area' → logprob: -9.375280380249023
    4. 'Area' → logprob: -10.750280380249023
    5. '_r' → logprob: -10.875280380249023
    6. '_' → logprob: -11.875280380249023
    7. '))' → logprob: -12.125280380249023
    8. 'r' → logprob: -12.125280380249023
    9. '_radius' → logprob: -12.500280380249023
    10. '_)' → logprob: -12.625280380249023

Token 91: '_multiple' (ID: 111487)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7935211658477783
    2. '_multiple' → logprob: -0.7935211658477783
    3. '))' → logprob: -2.5435211658477783
    4. '_)' → logprob: -5.668520927429199
    5. 'multiple' → logprob: -5.793520927429199
    6. '_' → logprob: -5.918520927429199
    7. 'r' → logprob: -6.418520927429199
    8. '_r' → logprob: -6.668520927429199
    9. 'ultiple' → logprob: -7.168520927429199
    10. '_area' → logprob: -7.293520927429199

Token 92: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029858551919460297
    2. '))' → logprob: -3.5298585891723633
    3. ')))' → logprob: -9.529858589172363
    4. ' )' → logprob: -10.529858589172363
    5. ')
' → logprob: -12.529858589172363
    6. ' ' → logprob: -14.404858589172363
    7. ')**' → logprob: -14.529858589172363
    8. ')`' → logprob: -14.654858589172363
    9. ')#' → logprob: -14.779858589172363
    10. ' ))' → logprob: -14.904858589172363


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 90
Tokens correctement prédits (1ère position, stricte): 29
Tokens correctement prédits (1ère position, avec adaptation): 30
Tokens correctement prédits (top 10): 66
Précision stricte (1ère position): 32.22%
Précision adaptée (1ère position): 33.33%
Précision (top 10): 73.33%
================================================================================
