================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:20:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
import bisect
from fractions import gcd
from itertools import count, permutations
from functools import lru_cache
from collections import deque, defaultdict
from pprint import pprint

INF = float("inf") # bothered if this is ever useful

# handy stuff
ii = lambda : int(input())
mis = lambda : map(int, input().split())
lmis = lambda : list(mis())
lmtx = lambda h: [list(map(int, lmis())) for _ in range(h)]

sys.setrecursionlimit(10**9 + 12)  # not sure if necessary, maybe too big

def lcm(a, b):
    return (a * b) // gcd(a, b) # gcd from fractions? hope that's fine...

# -- starting the real thing
n, x, y = mis()
ans = [0] * n  # not sure if zero-based is what I want but let's roll

for i in range(1, n):
    for j in range(i+1, n+1):
        # what's the shortest way from i to j, teleporting at x-y or y-x?
        s_dist = min(abs(j-i), abs(x-i)+1+abs(j-y), abs(y-i)+1+abs(j-x))
        ans[s_dist] += 1

# Print, but ignore zero-th (no pairs at dist 0, right?)
for i in range(len(ans)):
    if i == 0: continue
    print(ans[i])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18198244273662567
    2. '\n' → logprob: -2.0569825172424316
    3. '<|end|>' → logprob: -4.181982517242432
    4. '\' → logprob: -4.431982517242432
    5. 'newline' → logprob: -5.556982517242432
    6. 'import' → logprob: -6.181982517242432
    7. '<|end|>' → logprob: -6.681982517242432
    8. '```' → logprob: -7.431982517242432
    9. ';' → logprob: -7.556982517242432
    10. '\r' → logprob: -7.556982517242432

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.000488811288960278
    2. 'os' → logprob: -7.625488758087158
    3. ' re' → logprob: -15.625489234924316
    4. ' math' → logprob: -15.750489234924316
    5. '_os' → logprob: -16.00048828125
    6. '"os' → logprob: -16.12548828125
    7. ' json' → logprob: -16.37548828125
    8. '	os' → logprob: -17.37548828125
    9. ' ' → logprob: -18.37548828125
    10. ' argparse' → logprob: -18.37548828125

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2596854865550995
    2. 'import' → logprob: -2.634685516357422
    3. '\n' → logprob: -2.759685516357422
    4. '\' → logprob: -3.259685516357422
    5. '```' → logprob: -4.009685516357422
    6. '
' → logprob: -4.134685516357422
    7. '<|end|>' → logprob: -4.759685516357422
    8. ',' → logprob: -5.384685516357422
    9. '

' → logprob: -5.759685516357422
    10. '<|end|>' → logprob: -7.009685516357422

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9874194860458374
    2. 'import' → logprob: -1.6124194860458374
    3. '\n' → logprob: -1.9874194860458374
    4. '
' → logprob: -2.112419605255127
    5. '```' → logprob: -2.737419605255127
    6. '

' → logprob: -3.362419605255127
    7. '\' → logprob: -3.487419605255127
    8. ',' → logprob: -4.237419605255127
    9. '<|end|>' → logprob: -4.237419605255127
    10. '<|end|>' → logprob: -6.362419605255127

Token 7: ' bis' (ID: 7204)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.32687532901763916
    2. ' os' → logprob: -1.3268753290176392
    3. 'random' → logprob: -4.70187520980835
    4. ' random' → logprob: -5.82687520980835
    5. 're' → logprob: -7.82687520980835
    6. ' re' → logprob: -8.326875686645508
    7. ' numpy' → logprob: -8.576875686645508
    8. 'numpy' → logprob: -8.826875686645508
    9. 'collections' → logprob: -9.201875686645508
    10. 'time' → logprob: -9.326875686645508

Token 8: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0001347672223346308
    2. 't' → logprob: -9.000134468078613
    3. 'ected' → logprob: -11.750134468078613
    4. 'ection' → logprob: -14.375134468078613
    5. 'ec' → logprob: -14.625134468078613
    6. 'ectl' → logprob: -14.625134468078613
    7. '```' → logprob: -14.625134468078613
    8. 'ector' → logprob: -14.750134468078613
    9. 'e' → logprob: -15.250134468078613
    10. 'truct' → logprob: -15.500134468078613

Token 9: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0375171899795532
    2. 'import' → logprob: -1.4125171899795532
    3. '<|end|>' → logprob: -1.9125171899795532
    4. '

' → logprob: -2.2875170707702637
    5. '\n' → logprob: -2.6625170707702637
    6. '```' → logprob: -3.7875170707702637
    7. '' → logprob: -4.162517070770264
    8. '.' → logprob: -4.287517070770264
    9. '\' → logprob: -4.912517070770264
    10. '
' → logprob: -5.037517070770264

Token 10: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -1.3838863372802734
    2. '
' → logprob: -1.5088863372802734
    3. 'import' → logprob: -1.6338863372802734
    4. '<|end|>' → logprob: -2.1338863372802734
    5. '.' → logprob: -2.5088863372802734
    6. '\n' → logprob: -2.8838863372802734
    7. '```' → logprob: -3.8838863372802734
    8. ',' → logprob: -4.008886337280273
    9. '\' → logprob: -4.633886337280273
    10. '<|end|>' → logprob: -5.258886337280273

Token 11: ' fractions' (ID: 110523)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.18991732597351074
    2. 'collections' → logprob: -2.0649173259735107
    3. ' itertools' → logprob: -3.1899173259735107
    4. ' heap' → logprob: -5.68991756439209
    5. ' typing' → logprob: -7.43991756439209
    6. 'heap' → logprob: -7.68991756439209
    7. ' math' → logprob: -8.56491756439209
    8. '_' → logprob: -9.43991756439209
    9. ' ' → logprob: -9.56491756439209
    10. ' functools' → logprob: -9.68991756439209

Token 12: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.020639874041080475
    2. 'import' → logprob: -3.8956398963928223
    3. '.' → logprob: -10.020639419555664
    4. '	import' → logprob: -10.520639419555664
    5. '_import' → logprob: -11.770639419555664
    6. '.import' → logprob: -11.895639419555664
    7. ' ' → logprob: -12.395639419555664
    8. '-import' → logprob: -13.395639419555664
    9. '<|end|>' → logprob: -13.770639419555664
    10. ' importar' → logprob: -14.145639419555664

Token 13: ' gcd' (ID: 106918)
  Prédit: ' Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Fraction' → logprob: -0.4740943908691406
    2. 'Fraction' → logprob: -0.9740943908691406
    3. ' gcd' → logprob: -11.84909439086914
    4. 'Fra' → logprob: -12.47409439086914
    5. ' fractions' → logprob: -12.72409439086914
    6. '_fraction' → logprob: -13.59909439086914
    7. ' ' → logprob: -14.84909439086914
    8. ' Fra' → logprob: -15.09909439086914
    9. ' ' → logprob: -15.22409439086914
    10. '```' → logprob: -15.34909439086914

Token 14: '
' (ID: 198)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.7040644288063049
    2. '#' → logprob: -1.5790643692016602
    3. 'as' → logprob: -1.8290643692016602
    4. ' ' → logprob: -3.20406436920166
    5. '<|end|>' → logprob: -3.20406436920166
    6. ' #' → logprob: -3.32906436920166
    7. ')' → logprob: -5.95406436920166
    8. '
' → logprob: -6.20406436920166
    9. 's' → logprob: -6.32906436920166
    10. 'def' → logprob: -6.57906436920166

Token 15: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 16: ' itertools' (ID: 103178)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.008724244311451912
    2. ' math' → logprob: -4.758724212646484
    3. 'fra' → logprob: -9.383724212646484
    4. ' functools' → logprob: -11.508724212646484
    5. 'cmath' → logprob: -12.508724212646484
    6. 'fun' → logprob: -12.883724212646484
    7. ' itertools' → logprob: -13.133724212646484
    8. 'collections' → logprob: -13.258724212646484
    9. 'operator' → logprob: -13.508724212646484
    10. 'decimal' → logprob: -13.633724212646484

Token 17: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.05555922910571098
    2. 'import' → logprob: -2.9305591583251953
    3. '.' → logprob: -7.680559158325195
    4. ' ' → logprob: -9.180559158325195
    5. ' .' → logprob: -10.180559158325195
    6. '.import' → logprob: -10.430559158325195
    7. '	import' → logprob: -10.430559158325195
    8. '_import' → logprob: -12.555559158325195
    9. ' itertools' → logprob: -12.805559158325195
    10. '.im' → logprob: -13.055559158325195

Token 18: ' count' (ID: 3605)
  Prédit: ' accumulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accumulate' → logprob: -0.829290509223938
    2. ' permutations' → logprob: -1.829290509223938
    3. ' group' → logprob: -2.4542903900146484
    4. 'acc' → logprob: -2.5792903900146484
    5. ' chain' → logprob: -2.8292903900146484
    6. 'count' → logprob: -3.2042903900146484
    7. ' combinations' → logprob: -3.3292903900146484
    8. 'com' → logprob: -3.8292903900146484
    9. ' count' → logprob: -4.079290390014648
    10. ' cycle' → logprob: -4.329290390014648

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2811856269836426
    2. '<|end|>' → logprob: -2.6561856269836426
    3. 'import' → logprob: -2.9061856269836426
    4. 's' → logprob: -3.4061856269836426
    5. 'from' → logprob: -3.7811856269836426
    6. 'def' → logprob: -4.406185626983643
    7. ',
' → logprob: -4.656185626983643
    8. '.' → logprob: -4.906185626983643
    9. '(' → logprob: -5.406185626983643
    10. 'g' → logprob: -5.781185626983643

Token 20: ' permutations' (ID: 174595)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.42341700196266174
    2. ' cycle' → logprob: -1.1734169721603394
    3. 'chain' → logprob: -4.548417091369629
    4. 'take' → logprob: -4.923417091369629
    5. 'acc' → logprob: -5.423417091369629
    6. ' accumulate' → logprob: -5.673417091369629
    7. ' chain' → logprob: -5.923417091369629
    8. ' is' → logprob: -6.673417091369629
    9. ' take' → logprob: -6.798417091369629
    10. 'is' → logprob: -6.798417091369629

Token 21: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3221912682056427
    2. '#' → logprob: -2.6971912384033203
    3. '
' → logprob: -3.1971912384033203
    4. 'import' → logprob: -3.1971912384033203
    5. '.' → logprob: -3.5721912384033203
    6. ',
' → logprob: -3.9471912384033203
    7. 'def' → logprob: -4.32219123840332
    8. 'from' → logprob: -4.82219123840332
    9. '

' → logprob: -4.94719123840332
    10. '<|end|>' → logprob: -4.94719123840332

Token 22: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20235885679721832
    2. '<|end|>' → logprob: -2.4523589611053467
    3. '#' → logprob: -3.4523589611053467
    4. ')' → logprob: -4.327358722686768
    5. 'import' → logprob: -4.327358722686768
    6. '.' → logprob: -4.827358722686768
    7. '
' → logprob: -5.202358722686768
    8. ',
' → logprob: -5.327358722686768
    9. 'from' → logprob: -5.702358722686768
    10. ':' → logprob: -5.702358722686768

Token 23: ' functools' (ID: 142636)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.9712426662445068
    2. 'collections' → logprob: -1.4712426662445068
    3. 'heap' → logprob: -1.8462426662445068
    4. 'math' → logprob: -2.471242666244507
    5. ' operator' → logprob: -2.471242666244507
    6. ' collections' → logprob: -4.096242904663086
    7. ' functools' → logprob: -4.221242904663086
    8. 'fun' → logprob: -4.471242904663086
    9. ' math' → logprob: -4.721242904663086
    10. ' heap' → logprob: -4.846242904663086

Token 24: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.03492628410458565
    2. 'import' → logprob: -3.534926176071167
    3. ' ' → logprob: -5.909926414489746
    4. '.' → logprob: -6.284926414489746
    5. ' .' → logprob: -7.784926414489746
    6. '<|end|>' → logprob: -9.784926414489746
    7. '_import' → logprob: -10.034926414489746
    8. '.import' → logprob: -10.784926414489746
    9. '	import' → logprob: -11.409926414489746
    10. '_' → logprob: -11.534926414489746

Token 25: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.7068691253662109
    2. 'l' → logprob: -1.706869125366211
    3. ' reduce' → logprob: -1.706869125366211
    4. 'reduce' → logprob: -1.956869125366211
    5. ' wraps' → logprob: -6.706869125366211
    6. ' partial' → logprob: -7.706869125366211
    7. 'wrap' → logprob: -7.831869125366211
    8. 'partial' → logprob: -8.081869125366211
    9. ' cmp' → logprob: -9.331869125366211
    10. 'cmp' → logprob: -9.706869125366211

Token 26: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -8.2994620242971e-06
    2. 'r' → logprob: -12.250008583068848
    3. 'z' → logprob: -13.875008583068848
    4. 'ruz' → logprob: -14.000008583068848
    5. 'ambda' → logprob: -14.750008583068848
    6. '_ru' → logprob: -15.125008583068848
    7. 'cm' → logprob: -15.625008583068848
    8. 'reduce' → logprob: -16.00000762939453
    9. 'u' → logprob: -16.25000762939453
    10. 'ruh' → logprob: -16.37500762939453

Token 27: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.07893561571836472
    2. 'cache' → logprob: -2.5789356231689453
    3. 'c' → logprob: -10.828935623168945
    4. 't' → logprob: -12.328935623168945
    5. 'Cache' → logprob: -12.453935623168945
    6. '-cache' → logprob: -12.453935623168945
    7. '_c' → logprob: -12.703935623168945
    8. '```' → logprob: -12.828935623168945
    9. '_CACHE' → logprob: -13.578935623168945
    10. 'cached' → logprob: -13.703935623168945

Token 28: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0113049745559692
    2. '<|end|>' → logprob: -1.6363049745559692
    3. '
' → logprob: -1.8863049745559692
    4. ',' → logprob: -2.2613048553466797
    5. '\n' → logprob: -3.0113048553466797
    6. 'import' → logprob: -3.5113048553466797
    7. ')' → logprob: -4.13630485534668
    8. '' → logprob: -4.51130485534668
    9. 'def' → logprob: -4.63630485534668
    10. ' ' → logprob: -4.76130485534668

Token 29: 'from' (ID: 2845)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7927631735801697
    2. '
' → logprob: -1.5427632331848145
    3. '<|end|>' → logprob: -2.2927632331848145
    4. 'import' → logprob: -2.7927632331848145
    5. '\n' → logprob: -3.4177632331848145
    6. ',' → logprob: -3.4177632331848145
    7. 'def' → logprob: -3.6677632331848145
    8. '

' → logprob: -4.0427632331848145
    9. '\' → logprob: -4.6677632331848145
    10. ')' → logprob: -5.2927632331848145

Token 30: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.6306341290473938
    2. ' operator' → logprob: -1.630634069442749
    3. 'collections' → logprob: -1.755634069442749
    4. 'operator' → logprob: -3.130634069442749
    5. ' typing' → logprob: -4.005634307861328
    6. ' math' → logprob: -4.380634307861328
    7. ' heap' → logprob: -4.630634307861328
    8. 'math' → logprob: -5.380634307861328
    9. 'heap' → logprob: -5.630634307861328
    10. ' ' → logprob: -5.755634307861328

Token 31: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6912259459495544
    2. 'import' → logprob: -1.3162260055541992
    3. '.' → logprob: -1.6912260055541992
    4. 'abc' → logprob: -3.316226005554199
    5. '<|end|>' → logprob: -5.191226005554199
    6. ' abc' → logprob: -6.566226005554199
    7. '```' → logprob: -7.441226005554199
    8. ' .' → logprob: -7.441226005554199
    9. ' ' → logprob: -7.691226005554199
    10. '	import' → logprob: -8.0662260055542

Token 32: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.25294026732444763
    2. ' deque' → logprob: -1.50294029712677
    3. ' abc' → logprob: -7.3779401779174805
    4. 'deque' → logprob: -8.37794017791748
    5. ' Counter' → logprob: -9.50294017791748
    6. ' named' → logprob: -9.62794017791748
    7. ' Ordered' → logprob: -12.12794017791748
    8. ' de' → logprob: -12.37794017791748
    9. ' default' → logprob: -13.25294017791748
    10. 'default' → logprob: -13.37794017791748

Token 33: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.5459895133972168
    2. ' defaultdict' → logprob: -0.9209895133972168
    3. 'named' → logprob: -4.420989513397217
    4. 'Counter' → logprob: -4.795989513397217
    5. ' named' → logprob: -6.920989513397217
    6. 'Ordered' → logprob: -7.045989513397217
    7. ' Counter' → logprob: -7.795989513397217
    8. ' Ordered' → logprob: -11.170989990234375
    9. 'Chain' → logprob: -11.545989990234375
    10. 'deque' → logprob: -12.170989990234375

Token 35: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48578447103500366
    2. '
' → logprob: -1.9857845306396484
    3. '<|end|>' → logprob: -2.1107845306396484
    4. 'import' → logprob: -2.4857845306396484
    5. '

' → logprob: -4.235784530639648
    6. ',
' → logprob: -4.860784530639648
    7. '\n' → logprob: -5.735784530639648
    8. 'from' → logprob: -5.985784530639648
    9. ' ' → logprob: -6.235784530639648
    10. '#' → logprob: -6.235784530639648

Token 36: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4866790771484375
    2. '
' → logprob: -1.6116790771484375
    3. 'import' → logprob: -1.7366790771484375
    4. '

' → logprob: -1.9866790771484375
    5. '<|end|>' → logprob: -2.1116790771484375
    6. '#' → logprob: -2.7366790771484375
    7. '\n' → logprob: -4.4866790771484375
    8. 'from' → logprob: -4.7366790771484375
    9. 'def' → logprob: -4.9866790771484375
    10. '```' → logprob: -5.1116790771484375

Token 37: ' pprint' (ID: 123034)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.056017644703388214
    2. 'heap' → logprob: -3.3060176372528076
    3. ' operator' → logprob: -4.931017875671387
    4. ' typing' → logprob: -5.681017875671387
    5. ' itertools' → logprob: -5.806017875671387
    6. ' queue' → logprob: -6.181017875671387
    7. ' ' → logprob: -7.431017875671387
    8. 'operator' → logprob: -7.931017875671387
    9. ' collections' → logprob: -8.431017875671387
    10. ' math' → logprob: -9.056017875671387

Token 38: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5246529579162598
    2. 'import' → logprob: -0.8996529579162598
    3. ' ' → logprob: -7.64965295791626
    4. '<|end|>' → logprob: -7.77465295791626
    5. '	import' → logprob: -8.774652481079102
    6. '.' → logprob: -8.774652481079102
    7. '_import' → logprob: -9.524652481079102
    8. ' Import' → logprob: -10.649652481079102
    9. 'Import' → logprob: -10.899652481079102
    10. '>' → logprob: -11.024652481079102

Token 39: ' pprint' (ID: 123034)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6975136399269104
    2. ' pprint' → logprob: -0.6975136399269104
    3. 'pp' → logprob: -5.447513580322266
    4. 'Pretty' → logprob: -10.322513580322266
    5. ' Pretty' → logprob: -11.697513580322266
    6. '.p' → logprob: -12.572513580322266
    7. ' pp' → logprob: -12.947513580322266
    8. ' p' → logprob: -13.322513580322266
    9. 'pretty' → logprob: -14.697513580322266
    10. '_p' → logprob: -15.447513580322266

Token 40: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: 'INF' (ID: 64358)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2666526138782501
    2. 'def' → logprob: -2.8916525840759277
    3. 'd' → logprob: -3.2666525840759277
    4. '@' → logprob: -3.3916525840759277
    5. 'import' → logprob: -3.3916525840759277
    6. 'a' → logprob: -4.141652584075928
    7. 'class' → logprob: -4.141652584075928
    8. 'n' → logprob: -4.516652584075928
    9. '\' → logprob: -5.141652584075928
    10. 'from' → logprob: -5.516652584075928

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0824052020907402
    2. '=' → logprob: -2.5824050903320312
    3. ' ' → logprob: -6.082405090332031
    4. '_' → logprob: -6.957405090332031
    5. '<|end|>' → logprob: -8.957405090332031
    6. ' =)' → logprob: -9.582405090332031
    7. ')' → logprob: -10.582405090332031
    8. ' _' → logprob: -11.332405090332031
    9. '.' → logprob: -11.582405090332031
    10. ',' → logprob: -11.957405090332031

Token 43: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.30302947759628296
    2. ' ' → logprob: -1.4280295372009277
    3. 'float' → logprob: -4.428029537200928
    4. '10' → logprob: -4.678029537200928
    5. ' math' → logprob: -8.17802906036377
    6. ' int' → logprob: -9.92802906036377
    7. '1' → logprob: -10.80302906036377
    8. ' ' → logprob: -11.05302906036377
    9. ' inf' → logprob: -11.42802906036377
    10. '	float' → logprob: -11.92802906036377

Token 44: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0010078003397211432
    2. '(' → logprob: -7.126008033752441
    3. '("' → logprob: -8.626008033752441
    4. '('.')' → logprob: -12.001008033752441
    5. '('+' → logprob: -12.376008033752441
    6. '('.' → logprob: -12.376008033752441
    7. ''' → logprob: -13.126008033752441
    8. '('-' → logprob: -13.251008033752441
    9. '(\'' → logprob: -13.626008033752441
    10. '(`' → logprob: -14.376008033752441

Token 45: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.5971264243125916
    2. ''in' → logprob: -1.0971264839172363
    3. ''' → logprob: -2.2221264839172363
    4. '"' → logprob: -5.097126483917236
    5. ''ins' → logprob: -8.222126007080078
    6. 'in' → logprob: -8.347126007080078
    7. ''i' → logprob: -8.597126007080078
    8. '"in' → logprob: -8.722126007080078
    9. 'info' → logprob: -9.222126007080078
    10. ''im' → logprob: -10.097126007080078

Token 46: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0022709856275469065
    2. ')' → logprob: -6.1272711753845215
    3. ')")' → logprob: -9.502270698547363
    4. '"' → logprob: -11.502270698547363
    5. ' ")' → logprob: -15.002270698547363
    6. ')"' → logprob: -15.502270698547363
    7. '}")' → logprob: -15.877270698547363
    8. ' )' → logprob: -16.00227165222168
    9. '')' → logprob: -16.50227165222168
    10. '!")' → logprob: -16.75227165222168

Token 47: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1884118914604187
    2. '

' → logprob: -1.9384119510650635
    3. 'def' → logprob: -4.313411712646484
    4. '' → logprob: -4.813411712646484
    5. '
' → logprob: -5.813411712646484
    6. '#' → logprob: -6.813411712646484
    7. '\n' → logprob: -7.688411712646484
    8. ',' → logprob: -8.313411712646484
    9. 'n' → logprob: -8.563411712646484
    10. 'class' → logprob: -8.813411712646484

Token 48: ' bothered' (ID: 82854)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14325638115406036
    2. '#' → logprob: -3.018256425857544
    3. '<|end|>' → logprob: -3.268256425857544
    4. '_' → logprob: -4.893256187438965
    5. ' #' → logprob: -4.893256187438965
    6. '<|end|>' → logprob: -5.143256187438965
    7. ' 

' → logprob: -5.643256187438965
    8. ' 
' → logprob: -5.768256187438965
    9. ')' → logprob: -6.393256187438965
    10. '-' → logprob: -6.393256187438965

Token 49: ' if' (ID: 538)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6238536238670349
    2. '<|end|>' → logprob: -1.8738536834716797
    3. ',' → logprob: -2.1238536834716797
    4. ')' → logprob: -2.6238536834716797
    5. '
' → logprob: -3.2488536834716797
    6. '<|end|>' → logprob: -3.3738536834716797
    7. '.' → logprob: -4.87385368347168
    8. '' → logprob: -4.99885368347168
    9. '=' → logprob: -5.24885368347168
    10. '_' → logprob: -5.74885368347168

Token 50: ' this' (ID: 495)
  Prédit: ' you'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' you' → logprob: -0.21868613362312317
    2. ' the' → logprob: -2.593686103820801
    3. ' this' → logprob: -3.968686103820801
    4. ' ' → logprob: -4.343686103820801
    5. '_' → logprob: -4.468686103820801
    6. ' a' → logprob: -4.593686103820801
    7. ' any' → logprob: -4.968686103820801
    8. ' you're' → logprob: -4.968686103820801
    9. ' I' → logprob: -5.093686103820801
    10. 'you' → logprob: -5.218686103820801

Token 51: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.15390226244926453
    2. ' code' → logprob: -3.528902292251587
    3. 'is' → logprob: -3.653902292251587
    4. ')' → logprob: -3.903902292251587
    5. ',' → logprob: -4.153902053833008
    6. '#' → logprob: -5.028902053833008
    7. ' ' → logprob: -5.028902053833008
    8. '.' → logprob: -5.153902053833008
    9. ' was' → logprob: -5.153902053833008
    10. ':' → logprob: -5.903902053833008

Token 52: ' ever' (ID: 4862)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.6201747059822083
    2. ' not' → logprob: -1.6201746463775635
    3. ' a' → logprob: -3.4951746463775635
    4. ' the' → logprob: -3.6201746463775635
    5. 'used' → logprob: -3.6201746463775635
    6. 'not' → logprob: -3.7451746463775635
    7. ' defined' → logprob: -3.9951746463775635
    8. ' needed' → logprob: -3.9951746463775635
    9. ' necessary' → logprob: -4.120174884796143
    10. ' too' → logprob: -4.370174884796143

Token 53: ' useful' (ID: 8316)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.3027069866657257
    2. ' used' → logprob: -1.8027069568634033
    3. 'needed' → logprob: -3.1777069568634033
    4. 'actually' → logprob: -4.552707195281982
    5. ' needed' → logprob: -4.802707195281982
    6. 'use' → logprob: -5.052707195281982
    7. 'necessary' → logprob: -5.802707195281982
    8. 'not' → logprob: -5.927707195281982
    9. '0' → logprob: -6.052707195281982
    10. 're' → logprob: -6.302707195281982

Token 54: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9095869660377502
    2. ',' → logprob: -1.7845869064331055
    3. '.' → logprob: -2.7845869064331055
    4. '
' → logprob: -2.9095869064331055
    5. '\' → logprob: -2.9095869064331055
    6. '_' → logprob: -3.0345869064331055
    7. '

' → logprob: -3.1595869064331055
    8. '' → logprob: -3.1595869064331055
    9. 'def' → logprob: -3.2845869064331055
    10. '\n' → logprob: -3.6595869064331055

Token 55: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7761912941932678
    2. '#' → logprob: -1.276191234588623
    3. '
' → logprob: -2.526191234588623
    4. 'class' → logprob: -2.901191234588623
    5. '

' → logprob: -3.651191234588623
    6. 'n' → logprob: -4.026191234588623
    7. '\' → logprob: -4.276191234588623
    8. '_' → logprob: -4.401191234588623
    9. ',' → logprob: -4.526191234588623
    10. 'd' → logprob: -4.651191234588623

Token 56: ' handy' (ID: 33247)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2804872691631317
    2. ' def' → logprob: -1.780487298965454
    3. ' class' → logprob: -4.155487060546875
    4. 'class' → logprob: -4.780487060546875
    5. '#' → logprob: -5.530487060546875
    6. 'Let's' → logprob: -5.530487060546875
    7. 'from' → logprob: -5.655487060546875
    8. 'I' → logprob: -5.780487060546875
    9. 'import' → logprob: -6.092987060546875
    10. 'Define' → logprob: -6.155487060546875

Token 57: ' stuff' (ID: 9350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.716655969619751
    2. ':' → logprob: -1.591655969619751
    3. '_' → logprob: -1.716655969619751
    4. ' ' → logprob: -2.841655969619751
    5. ' def' → logprob: -3.841655969619751
    6. ',' → logprob: -4.091655731201172
    7. ' for' → logprob: -4.716655731201172
    8. '_tools' → logprob: -6.216655731201172
    9. '_def' → logprob: -6.466655731201172
    10. ' to' → logprob: -6.591655731201172

Token 58: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04149565100669861
    2. 'def' → logprob: -4.1664958000183105
    3. ',' → logprob: -4.5414958000183105
    4. '_' → logprob: -5.6664958000183105
    5. 'import' → logprob: -5.6664958000183105
    6. '=' → logprob: -6.4164958000183105
    7. '\' → logprob: -6.9164958000183105
    8. 's' → logprob: -7.4164958000183105
    9. ' =' → logprob: -7.6664958000183105
    10. ':def' → logprob: -7.6664958000183105

Token 59: 'ii' (ID: 3573)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005461186170578003
    2. '#' → logprob: -6.7554612159729
    3. '\' → logprob: -7.0054612159729
    4. ':' → logprob: -7.1304612159729
    5. 'class' → logprob: -7.1304612159729
    6. 'import' → logprob: -8.130460739135742
    7. 'from' → logprob: -8.505460739135742
    8. '_' → logprob: -8.755460739135742
    9. ' def' → logprob: -9.005460739135742
    10. ',' → logprob: -9.505460739135742

Token 60: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.22794178128242493
    2. 'n' → logprob: -1.8529417514801025
    3. ' =' → logprob: -4.102941989898682
    4. 'm' → logprob: -4.477941989898682
    5. 'nt' → logprob: -4.727941989898682
    6. '=' → logprob: -5.102941989898682
    7. ',' → logprob: -6.602941989898682
    8. 'p' → logprob: -7.477941989898682
    9. 'np' → logprob: -7.602941989898682
    10. 'mp' → logprob: -7.977941989898682

Token 61: ' lambda' (ID: 27871)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -1.0252032279968262
    2. 'lambda' → logprob: -1.2752032279968262
    3. 'int' → logprob: -1.4002032279968262
    4. ' iter' → logprob: -2.900203227996826
    5. 'input' → logprob: -3.150203227996826
    6. ' lambda' → logprob: -4.775203227996826
    7. '0' → logprob: -5.275203227996826
    8. ' int' → logprob: -6.775203227996826
    9. ' ' → logprob: -7.525203227996826
    10. ' input' → logprob: -7.900203227996826

Token 62: ' :' (ID: 712)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2561934292316437
    2. 'x' → logprob: -1.5061933994293213
    3. ' i' → logprob: -6.7561936378479
    4. ' s' → logprob: -7.1311936378479
    5. ':' → logprob: -7.1311936378479
    6. 'i' → logprob: -7.6311936378479
    7. ' n' → logprob: -8.381193161010742
    8. 's' → logprob: -8.631193161010742
    9. ' f' → logprob: -9.006193161010742
    10. 'a' → logprob: -9.131193161010742

Token 63: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03006274625658989
    2. ' int' → logprob: -3.530062675476074
    3. 'map' → logprob: -8.280062675476074
    4. ' map' → logprob: -9.780062675476074
    5. '	int' → logprob: -14.155062675476074
    6. '[int' → logprob: -14.780062675476074
    7. 'tuple' → logprob: -15.280062675476074
    8. ' ' → logprob: -15.280062675476074
    9. '(int' → logprob: -15.405062675476074
    10. '  ' → logprob: -15.905062675476074

Token 64: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5761352181434631
    2. '(' → logprob: -0.8261352181434631
    3. 'input' → logprob: -8.701135635375977
    4. '(
' → logprob: -10.951135635375977
    5. '(sys' → logprob: -12.451135635375977
    6. ' (' → logprob: -12.826135635375977
    7. ' input' → logprob: -13.076135635375977
    8. '(

' → logprob: -13.076135635375977
    9. '(inp' → logprob: -15.451135635375977
    10. '(in' → logprob: -15.826135635375977

Token 65: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00045474470243789256
    2. '()' → logprob: -7.750454902648926
    3. ' ())' → logprob: -11.500454902648926
    4. '().' → logprob: -11.750454902648926
    5. '(' → logprob: -12.625454902648926
    6. '()))' → logprob: -13.500454902648926
    7. ')' → logprob: -15.000454902648926
    8. '())
' → logprob: -15.250454902648926
    9. '();)' → logprob: -15.375454902648926
    10. '()),' → logprob: -15.750454902648926

Token 66: 'mis' (ID: 18320)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7003787755966187
    2. '\' → logprob: -2.200378894805908
    3. '()\' → logprob: -2.200378894805908
    4. '\n' → logprob: -2.325378894805908
    5. 'def' → logprob: -3.325378894805908
    6. '(' → logprob: -3.450378894805908
    7. 'n' → logprob: -3.575378894805908
    8. '' → logprob: -4.575378894805908
    9. 'i' → logprob: -4.700378894805908
    10. 's' → logprob: -5.075378894805908

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0210661888122559
    2. '=' → logprob: -1.2710661888122559
    3. 'a' → logprob: -1.8960661888122559
    4. 's' → logprob: -2.396066188812256
    5. 'sing' → logprob: -2.896066188812256
    6. 'c' → logprob: -3.646066188812256
    7. 'i' → logprob: -4.771066188812256
    8. 'trip' → logprob: -5.271066188812256
    9. 'ing' → logprob: -5.896066188812256
    10. 'o' → logprob: -5.896066188812256

Token 68: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.026511725038290024
    2. ' lambda' → logprob: -4.0265116691589355
    3. 'list' → logprob: -5.4015116691589355
    4. '(lambda' → logprob: -5.7765116691589355
    5. '=lambda' → logprob: -7.6515116691589355
    6. 'map' → logprob: -8.651512145996094
    7. ' list' → logprob: -10.276512145996094
    8. 'input' → logprob: -11.026512145996094
    9. 's' → logprob: -13.026512145996094
    10. 'str' → logprob: -13.276512145996094

Token 69: ' :' (ID: 712)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.7766834497451782
    2. 'lambda' → logprob: -0.7766834497451782
    3. ' list' → logprob: -3.1516833305358887
    4. 'list' → logprob: -3.5266833305358887
    5. '(lambda' → logprob: -5.276683330535889
    6. ' ' → logprob: -6.901683330535889
    7. ':' → logprob: -7.276683330535889
    8. ' input' → logprob: -8.276683807373047
    9. ' str' → logprob: -8.651683807373047
    10. 'str' → logprob: -8.901683807373047

Token 70: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.06850459426641464
    2. 'list' → logprob: -2.818504571914673
    3. ' map' → logprob: -5.318504810333252
    4. 'input' → logprob: -6.818504810333252
    5. '[' → logprob: -8.318504333496094
    6. ' list' → logprob: -8.318504333496094
    7. '[input' → logprob: -11.443504333496094
    8. '[list' → logprob: -12.068504333496094
    9. ' input' → logprob: -12.568504333496094
    10. '(map' → logprob: -13.068504333496094

Token 71: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008176080300472677
    2. '(' → logprob: -7.250817775726318
    3. '(str' → logprob: -9.25081729888916
    4. 'int' → logprob: -11.75081729888916
    5. '(input' → logprob: -14.00081729888916
    6. '<int' → logprob: -14.00081729888916
    7. '(
' → logprob: -14.00081729888916
    8. '=int' → logprob: -15.00081729888916
    9. ' (' → logprob: -15.37581729888916
    10. 'str' → logprob: -15.75081729888916

Token 72: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.7516510486602783
    2. ',' → logprob: -0.8766510486602783
    3. 'input' → logprob: -2.2516510486602783
    4. '(input' → logprob: -5.376650810241699
    5. ' ,' → logprob: -6.251650810241699
    6. ' input' → logprob: -8.5016508102417
    7. ' (' → logprob: -9.6266508102417
    8. ')' → logprob: -10.0016508102417
    9. '(' → logprob: -10.0016508102417
    10. '=input' → logprob: -10.6266508102417

Token 73: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07892228662967682
    2. ' input' → logprob: -2.5789222717285156
    3. ' ' → logprob: -11.078922271728516
    4. ')' → logprob: -12.328922271728516
    5. '(input' → logprob: -12.953922271728516
    6. '<input' → logprob: -13.078922271728516
    7. '	input' → logprob: -13.203922271728516
    8. 'sys' → logprob: -13.578922271728516
    9. '  ' → logprob: -13.828922271728516
    10. '=input' → logprob: -13.953922271728516

Token 74: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.057743949990254e-05
    2. '()' → logprob: -10.875020980834961
    3. ' ().' → logprob: -13.625020980834961
    4. '())' → logprob: -15.250020980834961
    5. '(' → logprob: -16.25002098083496
    6. 'split' → logprob: -17.25002098083496
    7. '.' → logprob: -17.62502098083496
    8. ')' → logprob: -18.12502098083496
    9. '.split' → logprob: -19.50002098083496
    10. '()
' → logprob: -19.87502098083496

Token 75: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007144584087654948
    2. 'strip' → logprob: -7.250714302062988
    3. 'rstrip' → logprob: -13.125714302062988
    4. ' split' → logprob: -13.375714302062988
    5. ')' → logprob: -14.250714302062988
    6. 'spl' → logprob: -16.125715255737305
    7. '(split' → logprob: -16.250715255737305
    8. '().' → logprob: -16.375715255737305
    9. 's' → logprob: -16.500715255737305
    10. 'plit' → logprob: -17.625715255737305

Token 76: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007739243097603321
    2. ')' → logprob: -5.257739067077637
    3. '()' → logprob: -6.007739067077637
    4. '))' → logprob: -11.007739067077637
    5. '()))' → logprob: -11.007739067077637
    6. '())
' → logprob: -12.507739067077637
    7. '(' → logprob: -12.882739067077637
    8. ' ())' → logprob: -12.882739067077637
    9. '()
' → logprob: -16.007740020751953
    10. '())

' → logprob: -16.132740020751953

Token 77: 'l' (ID: 75)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14335006475448608
    2. 'n' → logprob: -3.268350124359131
    3. '#' → logprob: -3.893350124359131
    4. 'ms' → logprob: -4.018350124359131
    5. 'is' → logprob: -5.018350124359131
    6. 's' → logprob: -5.393350124359131
    7. 'm' → logprob: -5.643350124359131
    8. 'mi' → logprob: -5.768350124359131
    9. 'nl' → logprob: -5.768350124359131
    10. 'li' → logprob: -6.018350124359131

Token 78: 'mis' (ID: 18320)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.21642619371414185
    2. 'ambda' → logprob: -1.841426134109497
    3. 'i' → logprob: -3.591426134109497
    4. 'is' → logprob: -5.341426372528076
    5. 'a' → logprob: -6.841426372528076
    6. 'amb' → logprob: -7.216426372528076
    7. '=' → logprob: -7.466426372528076
    8. ' =' → logprob: -7.716426372528076
    9. 'am' → logprob: -7.841426372528076
    10. 's' → logprob: -8.966425895690918

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4055774211883545
    2. '=' → logprob: -1.1555774211883545
    3. 'ambda' → logprob: -4.530577659606934
    4. '=lambda' → logprob: -4.905577659606934
    5. '()' → logprob: -9.030577659606934
    6. '(lambda' → logprob: -9.780577659606934
    7. 'amba' → logprob: -10.280577659606934
    8. 'amb' → logprob: -10.280577659606934
    9. 's' → logprob: -10.905577659606934
    10. ')' → logprob: -11.030577659606934

Token 80: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.43199247121810913
    2. 'lambda' → logprob: -1.306992530822754
    3. '(lambda' → logprob: -2.931992530822754
    4. 'ambda' → logprob: -3.681992530822754
    5. '=lambda' → logprob: -7.306992530822754
    6. 'ist' → logprob: -7.806992530822754
    7. 'list' → logprob: -7.806992530822754
    8. ' lamb' → logprob: -9.056992530822754
    9. ' list' → logprob: -10.056992530822754
    10. 'amb' → logprob: -11.181992530822754

Token 81: ' :' (ID: 712)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.4657559394836426
    2. ' :' → logprob: -1.0907559394836426
    3. 'list' → logprob: -3.7157559394836426
    4. ':' → logprob: -4.965755939483643
    5. ':list' → logprob: -5.715755939483643
    6. ' lambda' → logprob: -7.090755939483643
    7. ' ' → logprob: -7.340755939483643
    8. 'lambda' → logprob: -9.215755462646484
    9. '=list' → logprob: -9.215755462646484
    10. '(list' → logprob: -9.590755462646484

Token 82: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07889176905155182
    2. ' list' → logprob: -2.5788917541503906
    3. 'ist' → logprob: -13.32889175415039
    4. '[list' → logprob: -16.20389175415039
    5. 'li' → logprob: -16.45389175415039
    6. '=list' → logprob: -17.07889175415039
    7. '	list' → logprob: -17.32889175415039
    8. 'map' → logprob: -17.32889175415039
    9. 'List' → logprob: -17.32889175415039
    10. 'l' → logprob: -17.95389175415039

Token 83: '(m' (ID: 2145)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.016368646174669266
    2. '(' → logprob: -4.141368865966797
    3. '(m' → logprob: -8.266368865966797
    4. '(int' → logprob: -10.391368865966797
    5. ' (' → logprob: -10.516368865966797
    6. 'map' → logprob: -11.891368865966797
    7. '(l' → logprob: -13.391368865966797
    8. ',map' → logprob: -13.766368865966797
    9. '(mapping' → logprob: -13.766368865966797
    10. '(input' → logprob: -14.016368865966797

Token 84: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0001843485952122137
    2. 'ap' → logprob: -8.625184059143066
    3. '(is' → logprob: -12.750184059143066
    4. 'i' → logprob: -15.000184059143066
    5. '_is' → logprob: -15.000184059143066
    6. 'ис' → logprob: -15.500184059143066
    7. 's' → logprob: -15.500184059143066
    8. ' is' → logprob: -15.750184059143066
    9. '   ' → logprob: -16.625185012817383
    10. '(' → logprob: -16.750185012817383

Token 85: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.000558512459974736
    2. ')' → logprob: -8.250558853149414
    3. '()' → logprob: -8.250558853149414
    4. '()))' → logprob: -10.750558853149414
    5. ' ())' → logprob: -11.500558853149414
    6. '())
' → logprob: -12.750558853149414
    7. '))' → logprob: -14.375558853149414
    8. '(' → logprob: -14.625558853149414
    9. '();)' → logprob: -15.625558853149414
    10. '())

' → logprob: -15.625558853149414

Token 86: 'l' (ID: 75)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6068845391273499
    2. '#' → logprob: -1.856884479522705
    3. '_' → logprob: -2.856884479522705
    4. ')' → logprob: -2.856884479522705
    5. 'n' → logprob: -2.856884479522705
    6. 'd' → logprob: -3.231884479522705
    7. '\' → logprob: -3.356884479522705
    8. ',' → logprob: -5.356884479522705
    9. '\n' → logprob: -5.356884479522705
    10. 'b' → logprob: -5.481884479522705

Token 87: 'mt' (ID: 3586)
  Prédit: 'mis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mis' → logprob: -0.018244294449687004
    2. 'm' → logprob: -4.39324426651001
    3. 'ms' → logprob: -6.01824426651001
    4. 'mi' → logprob: -6.51824426651001
    5. 'is' → logprob: -7.39324426651001
    6. 'map' → logprob: -8.143244743347168
    7. 'ist' → logprob: -9.268244743347168
    8. ' =' → logprob: -9.393244743347168
    9. 'mit' → logprob: -9.518244743347168
    10. 'l' → logprob: -9.768244743347168

Token 88: 'x' (ID: 87)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5111741423606873
    2. 's' → logprob: -1.886174201965332
    3. 'is' → logprob: -1.886174201965332
    4. '=' → logprob: -3.511174201965332
    5. '=[]' → logprob: -3.511174201965332
    6. 'l' → logprob: -5.386174201965332
    7. '=lambda' → logprob: -5.636174201965332
    8. 'okens' → logprob: -5.761174201965332
    9. '_' → logprob: -6.011174201965332
    10. '()' → logprob: -6.011174201965332

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6357659697532654
    2. '=' → logprob: -0.7607659697532654
    3. 'x' → logprob: -5.88576602935791
    4. '=lambda' → logprob: -8.63576602935791
    5. 's' → logprob: -8.76076602935791
    6. ' ' → logprob: -10.76076602935791
    7. 'ype' → logprob: -12.13576602935791
    8. 'y' → logprob: -12.38576602935791
    9. 'a' → logprob: -12.51076602935791
    10. 'lambda' → logprob: -12.88576602935791

Token 90: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.9694522619247437
    2. '(lambda' → logprob: -1.0944522619247437
    3. 'ambda' → logprob: -1.3444522619247437
    4. ' lambda' → logprob: -3.969452381134033
    5. '=lambda' → logprob: -5.094452381134033
    6. '(' → logprob: -9.094451904296875
    7. ' =' → logprob: -9.594451904296875
    8. '_lambda' → logprob: -10.344451904296875
    9. 'amba' → logprob: -11.844451904296875
    10. 'amb' → logprob: -12.094451904296875

Token 91: ' h' (ID: 312)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.14612135291099548
    2. ':' → logprob: -3.1461212635040283
    3. ' ' → logprob: -3.5211212635040283
    4. ' (' → logprob: -3.8961212635040283
    5. ' list' → logprob: -4.021121501922607
    6. 'list' → logprob: -5.146121501922607
    7. ' ()' → logprob: -5.271121501922607
    8. ':list' → logprob: -5.771121501922607
    9. 'lambda' → logprob: -6.396121501922607
    10. ' lambda' → logprob: -6.521121501922607

Token 92: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055979881435632706
    2. ':' → logprob: -3.9309799671173096
    3. ',w' → logprob: -4.4309797286987305
    4. ',n' → logprob: -4.5559797286987305
    5. ' :' → logprob: -5.4309797286987305
    6. ' ,' → logprob: -5.9309797286987305
    7. ',h' → logprob: -7.3059797286987305
    8. ',l' → logprob: -7.3059797286987305
    9. ',b' → logprob: -7.5559797286987305
    10. ':int' → logprob: -7.8059797286987305

Token 93: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.12455114722251892
    2. '[' → logprob: -2.9995510578155518
    3. '[list' → logprob: -2.9995510578155518
    4. '[l' → logprob: -4.124551296234131
    5. '[int' → logprob: -7.624551296234131
    6. '[len' → logprob: -8.499550819396973
    7. '[List' → logprob: -8.749550819396973
    8. '[line' → logprob: -8.999550819396973
    9. '[layer' → logprob: -9.999550819396973
    10. '[input' → logprob: -10.499550819396973

Token 94: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.20154345035552979
    2. 'l' → logprob: -1.7015434503555298
    3. 'input' → logprob: -9.326543807983398
    4. ' list' → logprob: -11.076543807983398
    5. '[l' → logprob: -11.701543807983398
    6. '[list' → logprob: -12.826543807983398
    7. 'li' → logprob: -13.201543807983398
    8. 'mis' → logprob: -13.326543807983398
    9. ' l' → logprob: -13.451543807983398
    10. 'tuple' → logprob: -13.576543807983398

Token 95: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.4743548631668091
    2. '(m' → logprob: -0.9743548631668091
    3. '(' → logprob: -8.34935474395752
    4. '(l' → logprob: -10.72435474395752
    5. '(input' → logprob: -11.72435474395752
    6. 'map' → logprob: -12.84935474395752
    7. '(int' → logprob: -12.84935474395752
    8. '()' → logprob: -13.59935474395752
    9. 'm' → logprob: -14.09935474395752
    10. 'mis' → logprob: -14.59935474395752

Token 96: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00012844942102674395
    2. ')' → logprob: -10.000128746032715
    3. '(' → logprob: -10.125128746032715
    4. 'int' → logprob: -11.250128746032715
    5. ']int' → logprob: -11.250128746032715
    6. ',int' → logprob: -12.375128746032715
    7. '=int' → logprob: -12.625128746032715
    8. '<int' → logprob: -12.750128746032715
    9. ')(' → logprob: -13.125128746032715
    10. '[int' → logprob: -13.250128746032715

Token 97: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.20393291115760803
    2. ',' → logprob: -1.7039328813552856
    3. '(input' → logprob: -6.203932762145996
    4. 'input' → logprob: -7.703932762145996
    5. ' ,' → logprob: -10.328932762145996
    6. ' input' → logprob: -12.453932762145996
    7. '```' → logprob: -12.953932762145996
    8. '(' → logprob: -13.953932762145996
    9. ',list' → logprob: -14.078932762145996
    10. '(),' → logprob: -14.453932762145996

Token 98: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014242718927562237
    2. ' input' → logprob: -4.264242649078369
    3. 'list' → logprob: -10.139243125915527
    4. '(input' → logprob: -10.764243125915527
    5. 'sys' → logprob: -12.139243125915527
    6. ',input' → logprob: -12.389243125915527
    7. ' ' → logprob: -12.514243125915527
    8. '   ' → logprob: -13.889243125915527
    9. '<input' → logprob: -14.014243125915527
    10. '	input' → logprob: -14.139243125915527

Token 99: 'mis' (ID: 18320)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03737819194793701
    2. 'ist' → logprob: -4.287378311157227
    3. 'mis' → logprob: -4.662378311157227
    4. 'ine' → logprob: -4.912378311157227
    5. 'mit' → logprob: -6.662378311157227
    6. 'mt' → logprob: -6.912378311157227
    7. 'is' → logprob: -7.162378311157227
    8. '(input' → logprob: -7.162378311157227
    9. 'ambda' → logprob: -7.662378311157227
    10. 'sys' → logprob: -8.162378311157227

Token 100: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00475383410230279
    2. '()' → logprob: -5.504754066467285
    3. '().' → logprob: -7.629754066467285
    4. '))' → logprob: -9.129754066467285
    5. 'input' → logprob: -11.004754066467285
    6. '())))' → logprob: -11.004754066467285
    7. '())' → logprob: -11.629754066467285
    8. '()[' → logprob: -11.629754066467285
    9. '()))
' → logprob: -11.879754066467285
    10. '())).' → logprob: -12.379754066467285

Token 101: ' for' (ID: 395)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.48241180181503296
    2. '()' → logprob: -0.982411801815033
    3. '(h' → logprob: -5.732411861419678
    4. '(' → logprob: -6.107411861419678
    5. ')' → logprob: -6.482411861419678
    6. '()]' → logprob: -7.857411861419678
    7. 'h' → logprob: -8.35741138458252
    8. '(n' → logprob: -8.35741138458252
    9. '(i' → logprob: -9.73241138458252
    10. ' ())' → logprob: -9.85741138458252

Token 102: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47432243824005127
    2. '_' → logprob: -1.4743224382400513
    3. ' _' → logprob: -2.3493223190307617
    4. 'range' → logprob: -2.9743223190307617
    5. '(range' → logprob: -6.974322319030762
    6. '_range' → logprob: -7.099322319030762
    7. ' in' → logprob: -8.599322319030762
    8. '	range' → logprob: -8.849322319030762
    9. ' ' → logprob: -9.599322319030762
    10. ' i' → logprob: -10.599322319030762

Token 103: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.29084891080856323
    2. ' in' → logprob: -2.040848970413208
    3. 'in' → logprob: -2.165848970413208
    4. ' range' → logprob: -5.290848731994629
    5. '(range' → logprob: -5.915848731994629
    6. '	range' → logprob: -10.665848731994629
    7. '(' → logprob: -11.540848731994629
    8. 'ange' → logprob: -11.665848731994629
    9. '  ' → logprob: -11.665848731994629
    10. ' ' → logprob: -11.790848731994629

Token 104: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00407923199236393
    2. ' range' → logprob: -5.504079341888428
    3. '	range' → logprob: -14.75407886505127
    4. '(range' → logprob: -15.50407886505127
    5. ' ' → logprob: -16.004079818725586
    6. '  ' → logprob: -16.754079818725586
    7. '   ' → logprob: -17.254079818725586
    8. 'rang' → logprob: -18.754079818725586
    9. '    ' → logprob: -19.504079818725586
    10. 'r' → logprob: -19.629079818725586

Token 105: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.735893965815194e-05
    2. '(' → logprob: -11.000017166137695
    3. 'h' → logprob: -15.000017166137695
    4. ' (' → logprob: -15.375017166137695
    5. '(
' → logprob: -18.375017166137695
    6. '(n' → logprob: -18.500017166137695
    7. '(H' → logprob: -19.000017166137695
    8. ')' → logprob: -19.500017166137695
    9. '	h' → logprob: -19.500017166137695
    10. '(height' → logprob: -19.625017166137695

Token 106: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00016063073417171836
    2. ')' → logprob: -9.000160217285156
    3. ']' → logprob: -10.250160217285156
    4. ')],' → logprob: -14.375160217285156
    5. '))' → logprob: -14.625160217285156
    6. ')]
' → logprob: -15.250160217285156
    7. ')])' → logprob: -15.250160217285156
    8. '()]' → logprob: -16.250160217285156
    9. '])]' → logprob: -16.625160217285156
    10. '])' → logprob: -16.625160217285156

Token 107: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5226158499717712
    2. '#' → logprob: -1.272615909576416
    3. 'class' → logprob: -2.897615909576416
    4. 'd' → logprob: -3.397615909576416
    5. 'n' → logprob: -4.022615909576416
    6. '\' → logprob: -5.522615909576416
    7. '
' → logprob: -5.647615909576416
    8. '\n' → logprob: -6.022615909576416
    9. '@' → logprob: -6.397615909576416
    10. '' → logprob: -6.647615909576416

Token 108: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.032864250242710114
    2. '.exit' → logprob: -4.032864093780518
    3. '.stdout' → logprob: -4.532864093780518
    4. '.stdin' → logprob: -5.907864093780518
    5. '.stderr' → logprob: -7.157864093780518
    6. '.readline' → logprob: -9.157864570617676
    7. '.argv' → logprob: -9.157864570617676
    8. '.setdefault' → logprob: -9.532864570617676
    9. '.write' → logprob: -11.782864570617676
    10. ' .' → logprob: -11.782864570617676

Token 109: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.025562798604369164
    2. '_rec' → logprob: -3.7755627632141113
    3. '_limit' → logprob: -7.025562763214111
    4. 'ursion' → logprob: -7.150562763214111
    5. ' recursion' → logprob: -8.77556324005127
    6. 'limit' → logprob: -9.15056324005127
    7. '_' → logprob: -9.40056324005127
    8. 're' → logprob: -9.77556324005127
    9. '_exc' → logprob: -10.77556324005127
    10. 'ault' → logprob: -10.77556324005127

Token 110: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -1.3663626305060461e-05
    2. 'ursive' → logprob: -12.00001335144043
    3. 'urs' → logprob: -12.37501335144043
    4. 'limit' → logprob: -13.12501335144043
    5. 'usion' → logprob: -14.25001335144043
    6. 'ur' → logprob: -15.12501335144043
    7. 'ursor' → logprob: -15.75001335144043
    8. 'usr' → logprob: -17.00001335144043
    9. 'ursively' → logprob: -17.00001335144043
    10. 'urf' → logprob: -17.00001335144043

Token 111: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.5213274309644476e-05
    2. '_limit' → logprob: -11.125015258789062
    3. '-limit' → logprob: -16.250015258789062
    4. 'lim' → logprob: -16.375015258789062
    5. 'depth' → logprob: -16.500015258789062
    6. ' limit' → logprob: -16.625015258789062
    7. '.limit' → logprob: -18.000015258789062
    8. 'Limit' → logprob: -18.750015258789062
    9. '(limit' → logprob: -19.875015258789062
    10. '-' → logprob: -19.875015258789062

Token 112: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6240566083070007e-06
    2. '(int' → logprob: -14.000001907348633
    3. '((' → logprob: -14.625001907348633
    4. '(
' → logprob: -16.125001907348633
    5. ' (' → logprob: -16.375001907348633
    6. '100' → logprob: -17.375001907348633
    7. '10' → logprob: -18.750001907348633
    8. '()' → logprob: -19.125001907348633
    9. '250' → logprob: -19.125001907348633
    10. '(pow' → logprob: -19.250001907348633

Token 113: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0032288136426359415
    2. '100' → logprob: -5.753228664398193
    3. '999' → logprob: -11.128229141235352
    4. '200' → logprob: -11.253229141235352
    5. '300' → logprob: -12.003229141235352
    6. '500' → logprob: -12.503229141235352
    7. '400' → logprob: -12.503229141235352
    8. 'int' → logprob: -13.003229141235352
    9. '250' → logprob: -13.128229141235352
    10. ' ' → logprob: -13.378229141235352

Token 114: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.45515725016593933
    2. '7' → logprob: -1.4551572799682617
    3. '6' → logprob: -2.2051572799682617
    4. '00' → logprob: -4.080157279968262
    5. '0' → logprob: -6.330157279968262
    6. '8' → logprob: -6.455157279968262
    7. '9' → logprob: -6.955157279968262
    8. '000' → logprob: -7.705157279968262
    9. '07' → logprob: -8.205157279968262
    10. '06' → logprob: -9.330157279968262

Token 115: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.05128318816423416
    2. '9' → logprob: -3.051283121109009
    3. '8' → logprob: -5.926283359527588
    4. '6' → logprob: -10.67628288269043
    5. '**' → logprob: -14.42628288269043
    6. '```' → logprob: -16.30128288269043
    7. '

' → logprob: -18.05128288269043
    8. '+' → logprob: -18.42628288269043
    9. '``' → logprob: -18.67628288269043
    10. ' ' → logprob: -19.42628288269043

Token 116: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.56102097814437e-05
    2. ' )' → logprob: -10.000045776367188
    3. ')
' → logprob: -16.125045776367188
    4. '))' → logprob: -17.625045776367188
    5. ')

' → logprob: -18.125045776367188
    6. ')#' → logprob: -18.500045776367188
    7. ' ' → logprob: -19.000045776367188
    8. ')`' → logprob: -19.250045776367188
    9. '6' → logprob: -19.750045776367188
    10. ')}' → logprob: -19.875045776367188

Token 117: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.009904473088681698
    2. '10' → logprob: -4.759904384613037
    3. '1' → logprob: -7.134904384613037
    4. '100' → logprob: -8.384904861450195
    5. '69' → logprob: -9.259904861450195
    6. '9' → logprob: -9.259904861450195
    7. ')' → logprob: -11.134904861450195
    8. ' ' → logprob: -11.509904861450195
    9. '50' → logprob: -11.634904861450195
    10. '0' → logprob: -12.009904861450195

Token 118: '12' (ID: 899)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.002735686022788286
    2. '10' → logprob: -6.002735614776611
    3. '1' → logprob: -9.00273609161377
    4. '9' → logprob: -9.62773609161377
    5. '100' → logprob: -10.12773609161377
    6. '69' → logprob: -11.37773609161377
    7. '5' → logprob: -12.75273609161377
    8. '50' → logprob: -12.75273609161377
    9. '3' → logprob: -13.00273609161377
    10. '6' → logprob: -13.12773609161377

Token 119: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009144435753114522
    2. '0' → logprob: -7.625914573669434
    3. '6' → logprob: -8.125914573669434
    4. '7' → logprob: -9.875914573669434
    5. '))' → logprob: -10.750914573669434
    6. ' )' → logprob: -10.750914573669434
    7. '5' → logprob: -10.875914573669434
    8. '3' → logprob: -12.125914573669434
    9. '4' → logprob: -12.875914573669434
    10. '00' → logprob: -13.000914573669434

Token 120: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26993414759635925
    2. 'def' → logprob: -2.0199341773986816
    3. '

' → logprob: -3.0199341773986816
    4. '#' → logprob: -3.2699341773986816
    5. 'class' → logprob: -4.394934177398682
    6. 'n' → logprob: -6.769934177398682
    7. '\' → logprob: -7.144934177398682
    8. '
' → logprob: -7.394934177398682
    9. '' → logprob: -7.644934177398682
    10. '\n' → logprob: -8.144933700561523

Token 121: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6718485355377197
    2. 'def' → logprob: -0.7968485355377197
    3. 'n' → logprob: -3.9218485355377197
    4. '

' → logprob: -4.671848297119141
    5. '#' → logprob: -5.296848297119141
    6. 'class' → logprob: -6.421848297119141
    7. '
' → logprob: -7.671848297119141
    8. ')' → logprob: -8.42184829711914
    9. 'N' → logprob: -8.54684829711914
    10. '\' → logprob: -8.67184829711914

Token 122: ' not' (ID: 625)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16102246940135956
    2. 'def' → logprob: -2.536022424697876
    3. '10' → logprob: -3.286022424697876
    4. 'DEBUG' → logprob: -4.786022663116455
    5. '
' → logprob: -4.911022663116455
    6. 'MAX' → logprob: -5.661022663116455
    7. 'depth' → logprob: -6.286022663116455
    8. 'class' → logprob: -6.661022663116455
    9. 'input' → logprob: -6.661022663116455
    10. '100' → logprob: -7.036022663116455

Token 123: ' sure' (ID: 3239)
  Prédit: ' sure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sure' → logprob: -0.16508091986179352
    2. 'sure' → logprob: -3.540081024169922
    3. ' safe' → logprob: -4.290081024169922
    4. ' used' → logprob: -4.540081024169922
    5. 'safe' → logprob: -4.915081024169922
    6. 'def' → logprob: -4.915081024169922
    7. ' really' → logprob: -5.040081024169922
    8. ' a' → logprob: -5.290081024169922
    9. ' often' → logprob: -5.415081024169922
    10. ' just' → logprob: -5.415081024169922

Token 124: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.053683727979660034
    2. '#' → logprob: -3.3036837577819824
    3. '<|end|>' → logprob: -5.303683757781982
    4. '

' → logprob: -5.428683757781982
    5. ' ' → logprob: -6.678683757781982
    6. '
' → logprob: -7.178683757781982
    7. '' → logprob: -7.428683757781982
    8. '\n' → logprob: -7.553683757781982
    9. '<|end|>' → logprob: -7.553683757781982
    10. 'def' → logprob: -7.678683757781982

Token 125: ' necessary' (ID: 8155)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.1434485912322998
    2. 'needed' → logprob: -2.8934485912323
    3. '10' → logprob: -3.8934485912323
    4. ' this' → logprob: -4.143448829650879
    5. '100' → logprob: -4.143448829650879
    6. 'necessary' → logprob: -5.518448829650879
    7. 'it' → logprob: -5.768448829650879
    8. 'sys' → logprob: -6.018448829650879
    9. '12' → logprob: -6.268448829650879
    10. '999' → logprob: -6.518448829650879

Token 126: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06704738736152649
    2. '

' → logprob: -2.817047357559204
    3. 'def' → logprob: -5.817047595977783
    4. '#' → logprob: -7.317047595977783
    5. '
' → logprob: -7.692047595977783
    6. '<|end|>' → logprob: -8.067047119140625
    7. 'n' → logprob: -9.067047119140625
    8. 'import' → logprob: -9.192047119140625
    9. '```' → logprob: -10.067047119140625
    10. '\n' → logprob: -10.067047119140625

Token 127: ' maybe' (ID: 10112)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.09810973703861237
    2. 'but' → logprob: -2.473109722137451
    3. ' 
' → logprob: -4.973109722137451
    4. '
' → logprob: -6.598109722137451
    5. '#' → logprob: -8.22311019897461
    6. 'def' → logprob: -8.59811019897461
    7. ' 
 
' → logprob: -9.59811019897461
    8. '  
' → logprob: -9.72311019897461
    9. '

' → logprob: -10.09811019897461
    10. ' 

' → logprob: -10.34811019897461

Token 128: ' too' (ID: 3101)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9452213644981384
    2. ' 
' → logprob: -1.4452214241027832
    3. ' ' → logprob: -1.8202214241027832
    4. ' 

' → logprob: -3.070221424102783
    5. '\n' → logprob: -3.445221424102783
    6. '

' → logprob: -3.570221424102783
    7. 'newline' → logprob: -3.945221424102783
    8. 'def' → logprob: -4.445221424102783
    9. 'import' → logprob: -4.695221424102783
    10. '#' → logprob: -4.820221424102783

Token 129: ' big' (ID: 3464)
  Prédit: 'much'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'much' → logprob: -0.49364936351776123
    2. 'large' → logprob: -1.7436493635177612
    3. 'big' → logprob: -2.243649482727051
    4. ' much' → logprob: -2.743649482727051
    5. 'deep' → logprob: -4.243649482727051
    6. 'high' → logprob: -4.493649482727051
    7. ' large' → logprob: -4.993649482727051
    8. ' big' → logprob: -5.618649482727051
    9. 'low' → logprob: -6.368649482727051
    10. 'many' → logprob: -6.493649482727051

Token 130: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20908071100711823
    2. '

' → logprob: -1.709080696105957
    3. 'def' → logprob: -5.834080696105957
    4. '
' → logprob: -6.709080696105957
    5. '#' → logprob: -6.834080696105957
    6. '<|end|>' → logprob: -7.334080696105957
    7. '' → logprob: -8.209080696105957
    8. '\n' → logprob: -8.209080696105957
    9. '```' → logprob: -8.584080696105957
    10. '10' → logprob: -8.834080696105957

Token 131: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0293317511677742
    2. 'class' → logprob: -3.654331684112549
    3. 'n' → logprob: -6.279331684112549
    4. '#' → logprob: -6.904331684112549
    5. '
' → logprob: -10.404332160949707
    6. 'dp' → logprob: -10.404332160949707
    7. 'd' → logprob: -10.779332160949707
    8. '\' → logprob: -10.904332160949707
    9. '

' → logprob: -12.029332160949707
    10. ' class' → logprob: -12.029332160949707

Token 132: ' l' (ID: 305)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.041770778596401215
    2. ' solve' → logprob: -3.5417706966400146
    3. ' dfs' → logprob: -4.916770935058594
    4. ' factorial' → logprob: -6.791770935058594
    5. 'main' → logprob: -7.041770935058594
    6. ' factor' → logprob: -7.541770935058594
    7. ' ' → logprob: -7.541770935058594
    8. 'solve' → logprob: -7.916770935058594
    9. ' _' → logprob: -8.291770935058594
    10. '_' → logprob: -8.541770935058594

Token 133: 'cm' (ID: 7871)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.7501048445701599
    2. 'cm' → logprob: -1.8751049041748047
    3. 'og' → logprob: -2.2501049041748047
    4. 'ine' → logprob: -2.3751049041748047
    5. 'ru' → logprob: -3.3751049041748047
    6. 'en' → logprob: -3.5001049041748047
    7. 'is' → logprob: -3.8751049041748047
    8. 'oad' → logprob: -4.000104904174805
    9. 'eft' → logprob: -4.000104904174805
    10. 'l' → logprob: -4.750104904174805

Token 134: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0067363339476287365
    2. '(' → logprob: -5.0067362785339355
    3. '(x' → logprob: -11.006736755371094
    4. ' (' → logprob: -12.506736755371094
    5. 'a' → logprob: -14.881736755371094
    6. '(
' → logprob: -16.006736755371094
    7. '(A' → logprob: -16.256736755371094
    8. ' ' → logprob: -17.381736755371094
    9. '(*' → logprob: -17.381736755371094
    10. '  ' → logprob: -18.631736755371094

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032257253769785166
    2. ',b' → logprob: -5.753225803375244
    3. ' ,' → logprob: -10.003225326538086
    4. 'b' → logprob: -13.503225326538086
    5. ',
' → logprob: -14.253225326538086
    6. ',a' → logprob: -14.503225326538086
    7. ',n' → logprob: -16.878225326538086
    8. ',d' → logprob: -17.253225326538086
    9. ',int' → logprob: -17.378225326538086
    10. ',m' → logprob: -17.753225326538086

Token 136: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07889353483915329
    2. ' b' → logprob: -2.5788934230804443
    3. ' ' → logprob: -12.578893661499023
    4. '	b' → logprob: -15.828893661499023
    5. '  ' → logprob: -15.953893661499023
    6. '   ' → logprob: -16.328893661499023
    7. ' ' → logprob: -16.953893661499023
    8. '    ' → logprob: -17.328893661499023
    9. '<|end|>' → logprob: -17.453893661499023
    10. ')b' → logprob: -17.578893661499023

Token 137: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00029685118352063
    2. ')' → logprob: -8.625296592712402
    3. '):
' → logprob: -9.375296592712402
    4. ' ):' → logprob: -10.625296592712402
    5. ':' → logprob: -12.125296592712402
    6. ',' → logprob: -13.125296592712402
    7. '):
' → logprob: -14.625296592712402
    8. '}:' → logprob: -16.25029754638672
    9. ']:' → logprob: -16.37529754638672
    10. '   ' → logprob: -16.87529754638672

Token 138: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20534837245941162
    2. '   ' → logprob: -1.8303483724594116
    3. ' return' → logprob: -3.955348491668701
    4. '	return' → logprob: -6.205348491668701
    5. ':return' → logprob: -6.830348491668701
    6. ':
' → logprob: -7.080348491668701
    7. 'return' → logprob: -7.455348491668701
    8. ' ' → logprob: -7.455348491668701
    9. '):' → logprob: -8.205348014831543
    10. ',' → logprob: -8.580348014831543

Token 139: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.42263174057006836
    2. 'return' (adapté à ' return') → logprob: -1.1726317405700684
    3. '   ' → logprob: -3.5476317405700684
    4. '    ' → logprob: -5.797631740570068
    5. ' a' → logprob: -6.672631740570068
    6. 'a' → logprob: -6.797631740570068
    7. ' ' → logprob: -8.047632217407227
    8. 'abs' → logprob: -8.422632217407227
    9. ' abs' → logprob: -8.547632217407227
    10. ' (' → logprob: -9.422632217407227

Token 140: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009014911018311977
    2. ' a' → logprob: -4.759015083312988
    3. 'abs' → logprob: -8.634015083312988
    4. '(a' → logprob: -8.759015083312988
    5. ' abs' → logprob: -9.884015083312988
    6. ' (' → logprob: -11.384015083312988
    7. '   ' → logprob: -13.759015083312988
    8. '(abs' → logprob: -14.009015083312988
    9. ' ' → logprob: -14.384015083312988
    10. '	a' → logprob: -15.259015083312988

Token 141: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00012403888104017824
    2. ' a' → logprob: -9.000123977661133
    3. 'abs' → logprob: -14.375123977661133
    4. '   ' → logprob: -17.000123977661133
    5. '(a' → logprob: -17.125123977661133
    6. ' abs' → logprob: -18.125123977661133
    7. '	a' → logprob: -18.250123977661133
    8. ' ' → logprob: -19.250123977661133
    9. ')a' → logprob: -19.625123977661133
    10. ')' → logprob: -20.625123977661133

Token 142: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0790497362613678
    2. '*' → logprob: -2.829049825668335
    3. '*b' → logprob: -4.079049587249756
    4. ' //' → logprob: -11.704050064086914
    5. ' ' → logprob: -12.954050064086914
    6. '//' → logprob: -13.204050064086914
    7. '*a' → logprob: -14.329050064086914
    8. '*l' → logprob: -15.954050064086914
    9. ' ' → logprob: -17.079050064086914
    10. '*g' → logprob: -17.454050064086914

Token 143: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0067154900170862675
    2. ' b' → logprob: -5.006715297698975
    3. ' ' → logprob: -15.756715774536133
    4. '   ' → logprob: -18.131715774536133
    5. '	b' → logprob: -19.256715774536133
    6. '(b' → logprob: -19.381715774536133
    7. ')b' → logprob: -19.881715774536133
    8. '  ' → logprob: -20.631715774536133
    9. '//' → logprob: -21.381715774536133
    10. ')' → logprob: -21.756715774536133

Token 144: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004147730302065611
    2. ')//' → logprob: -5.504147529602051
    3. ' )' → logprob: -10.00414752960205
    4. '//' → logprob: -10.75414752960205
    5. ' //' → logprob: -12.87914752960205
    6. ')#' → logprob: -16.504148483276367
    7. ')
' → logprob: -18.004148483276367
    8. '）' → logprob: -18.504148483276367
    9. '#' → logprob: -18.504148483276367
    10. ']' → logprob: -19.254148483276367

Token 145: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.5759519338607788
    2. ' //' → logprob: -0.8259519338607788
    3. '#' → logprob: -11.57595157623291
    4. ' ' → logprob: -13.95095157623291
    5. ' ' → logprob: -14.07595157623291
    6. '
' → logprob: -14.57595157623291
    7. '```' → logprob: -14.57595157623291
    8. ' #' → logprob: -15.82595157623291
    9. '/' → logprob: -16.450952529907227
    10. '%' → logprob: -16.950952529907227

Token 146: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.3876074552536011
    2. 'math' → logprob: -1.137607455253601
    3. ' math' → logprob: -7.762607574462891
    4. ' gcd' → logprob: -8.13760757446289
    5. '   ' → logprob: -11.76260757446289
    6. ' ' → logprob: -12.26260757446289
    7. '(math' → logprob: -12.88760757446289
    8. '(g' → logprob: -14.51260757446289
    9. '  ' → logprob: -14.76260757446289
    10. '__' → logprob: -15.26260757446289

Token 147: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00023107275774236768
    2. '(' → logprob: -8.37523078918457
    3. '(b' → logprob: -15.75023078918457
    4. '(abs' → logprob: -15.87523078918457
    5. ' (' → logprob: -16.00023078918457
    6. '(ab' → logprob: -16.75023078918457
    7. '(
' → logprob: -16.87523078918457
    8. 'a' → logprob: -17.37523078918457
    9. '((' → logprob: -18.87523078918457
    10. '(A' → logprob: -19.00023078918457

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7055960893630981
    2. ',b' → logprob: -0.7055960893630981
    3. '(b' → logprob: -5.205595970153809
    4. 'b' → logprob: -5.205595970153809
    5. ' ,' → logprob: -6.705595970153809
    6. '(' → logprob: -9.455595970153809
    7. ' b' → logprob: -9.830595970153809
    8. ')' → logprob: -10.955595970153809
    9. ' (' → logprob: -11.705595970153809
    10. ')b' → logprob: -12.080595970153809

Token 149: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004079112783074379
    2. ' b' → logprob: -5.504079341888428
    3. ' ' → logprob: -15.50407886505127
    4. '(b' → logprob: -15.75407886505127
    5. 'a' → logprob: -15.87907886505127
    6. '	b' → logprob: -16.254079818725586
    7. '   ' → logprob: -16.629079818725586
    8. ')b' → logprob: -16.754079818725586
    9. ')' → logprob: -17.004079818725586
    10. '```' → logprob: -18.754079818725586

Token 150: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -14.500001907348633
    3. ' )' → logprob: -14.750001907348633
    4. ')a' → logprob: -14.750001907348633
    5. '))' → logprob: -16.375001907348633
    6. '),' → logprob: -16.875001907348633
    7. ')b' → logprob: -17.375001907348633
    8. 'a' → logprob: -17.500001907348633
    9. '}' → logprob: -17.750001907348633
    10. 'def' → logprob: -17.875001907348633

Token 151: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: ' gcd' (ID: 106918)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 153: ' from' (ID: 591)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6548014879226685
    2. '(a' → logprob: -0.7798014879226685
    3. 'def' → logprob: -4.779801368713379
    4. ')' → logprob: -5.279801368713379
    5. '<|end|>' → logprob: -5.404801368713379
    6. '(
' → logprob: -7.404801368713379
    7. 'import' → logprob: -7.404801368713379
    8. '#' → logprob: -7.529801368713379
    9. '<|end|>' → logprob: -8.029801368713379
    10. ',' → logprob: -8.279801368713379

Token 154: ' fractions' (ID: 110523)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0011406922712922096
    2. ' math' → logprob: -7.251140594482422
    3. 'fra' → logprob: -7.751140594482422
    4. ' fractions' → logprob: -15.001140594482422
    5. ' ' → logprob: -16.501140594482422
    6. 'import' → logprob: -18.126140594482422
    7. 'from' → logprob: -18.251140594482422
    8. '.math' → logprob: -18.251140594482422
    9. 'fun' → logprob: -19.251140594482422
    10. '(math' → logprob: -20.001140594482422

Token 155: '?' (ID: 30)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: ' hope' (ID: 5498)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: ' that's' (ID: 10954)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' so' → logprob: -1.3207424879074097
    2. ')' → logprob: -1.9457424879074097
    3. '<|end|>' → logprob: -1.9457424879074097
    4. 'def' → logprob: -2.695742607116699
    5. '(' → logprob: -2.945742607116699
    6. 'import' → logprob: -3.070742607116699
    7. ',' → logprob: -3.445742607116699
    8. ' is' → logprob: -3.445742607116699
    9. ' ' → logprob: -3.445742607116699
    10. ' it' → logprob: -3.820742607116699

Token 158: ' fine' (ID: 8975)
  Prédit: 'correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'correct' → logprob: -0.35874414443969727
    2. 'not' → logprob: -2.3587441444396973
    3. 'still' → logprob: -2.8587441444396973
    4. 'right' → logprob: -2.9837441444396973
    5. 'okay' → logprob: -3.8587441444396973
    6. ' correct' → logprob: -4.108744144439697
    7. 'available' → logprob: -4.358744144439697
    8. 'deprecated' → logprob: -4.733744144439697
    9. 'ok' → logprob: -4.858744144439697
    10. 'fine' → logprob: -4.983744144439697

Token 159: '...

' (ID: 2161)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04507550224661827
    2. 'def' → logprob: -3.6700754165649414
    3. '\n' → logprob: -5.045075416564941
    4. '<|end|>' → logprob: -5.295075416564941
    5. '

' → logprob: -5.795075416564941
    6. ')' → logprob: -7.170075416564941
    7. 'newline' → logprob: -7.670075416564941
    8. '' → logprob: -7.795075416564941
    9. ':' → logprob: -8.045075416564941
    10. '<|end|>' → logprob: -8.045075416564941

Token 160: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49722397327423096
    2. 'def' → logprob: -1.122223973274231
    3. '<|end|>' → logprob: -2.8722238540649414
    4. '#' → logprob: -5.372223854064941
    5. '\n' → logprob: -6.372223854064941
    6. '```' → logprob: -7.747223854064941
    7. '<|end|>' → logprob: -7.997223854064941
    8. ')' → logprob: -8.247223854064941
    9. '

' → logprob: -8.247223854064941
    10. '  
' → logprob: -8.497223854064941

Token 161: ' --' (ID: 2230)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002321533625945449
    2. '@' → logprob: -6.877321720123291
    3. '#' → logprob: -7.377321720123291
    4. 'class' → logprob: -8.127321243286133
    5. 'd' → logprob: -8.377321243286133
    6. ' def' → logprob: -10.002321243286133
    7. 'de' → logprob: -10.127321243286133
    8. 'for' → logprob: -11.502321243286133
    9. 'from' → logprob: -11.752321243286133
    10. 'import' → logprob: -12.502321243286133

Token 162: ' starting' (ID: 8601)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6272720694541931
    2. 'def' → logprob: -1.002272129058838
    3. '#' → logprob: -4.127272129058838
    4. '>' → logprob: -4.502272129058838
    5. ' ' → logprob: -4.752272129058838
    6. ' #' → logprob: -4.752272129058838
    7. ' class' → logprob: -4.877272129058838
    8. '->' → logprob: -4.877272129058838
    9. 'class' → logprob: -4.877272129058838
    10. '---' → logprob: -5.127272129058838

Token 163: ' the' (ID: 290)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013731836341321468
    2. 'point' → logprob: -4.638731956481934
    3. '#' → logprob: -6.138731956481934
    4. 'class' → logprob: -7.888731956481934
    5. ' def' → logprob: -8.638731956481934
    6. '_point' → logprob: -8.638731956481934
    7. 'from' → logprob: -8.763731956481934
    8. ' point' → logprob: -8.888731956481934
    9. 'code' → logprob: -9.138731956481934
    10. 'of' → logprob: -9.638731956481934

Token 164: ' real' (ID: 1374)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.37733030319213867
    2. ' main' → logprob: -1.5023303031921387
    3. 'def' → logprob: -2.8773303031921387
    4. 'solve' → logprob: -5.252330303192139
    5. 'solution' → logprob: -5.502330303192139
    6. ' code' → logprob: -5.502330303192139
    7. '#' → logprob: -5.627330303192139
    8. 'code' → logprob: -5.752330303192139
    9. ' solution' → logprob: -5.877330303192139
    10. 'if' → logprob: -5.877330303192139

Token 165: ' thing' (ID: 4435)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5045311450958252
    2. 'code' → logprob: -1.1295311450958252
    3. ' code' → logprob: -3.129531145095825
    4. '#' → logprob: -4.879530906677246
    5. '()' → logprob: -5.254530906677246
    6. '_code' → logprob: -5.379530906677246
    7. 'problem' → logprob: -5.629530906677246
    8. 'solution' → logprob: -6.129530906677246
    9. ' def' → logprob: -7.004530906677246
    10. 'program' → logprob: -7.379530906677246

Token 166: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002057477133348584
    2. '
' → logprob: -6.8770575523376465
    3. 'n' → logprob: -7.0020575523376465
    4. '#' → logprob: -10.627057075500488
    5. 'class' → logprob: -10.752057075500488
    6. '\' → logprob: -10.877057075500488
    7. ' def' → logprob: -12.002057075500488
    8. 'for' → logprob: -12.127057075500488
    9. '

' → logprob: -12.502057075500488
    10. 'import' → logprob: -12.502057075500488

Token 167: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00626269681379199
    2. 'n' → logprob: -5.13126277923584
    3. 'N' → logprob: -8.88126277923584
    4. 'class' → logprob: -9.13126277923584
    5. '#' → logprob: -10.38126277923584
    6. 'if' → logprob: -10.75626277923584
    7. 't' → logprob: -11.63126277923584
    8. 'd' → logprob: -11.88126277923584
    9. 'T' → logprob: -12.25626277923584
    10. 'input' → logprob: -12.63126277923584

Token 168: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1462668776512146
    2. '=' → logprob: -2.0212669372558594
    3. ',' → logprob: -5.646266937255859
    4. ' ' → logprob: -10.52126693725586
    5. ' ,' → logprob: -10.77126693725586
    6. '=int' → logprob: -12.52126693725586
    7. '=input' → logprob: -14.39626693725586
    8. ' ' → logprob: -14.52126693725586
    9. ' =
' → logprob: -14.64626693725586
    10. '.' → logprob: -14.64626693725586

Token 169: ' x' (ID: 1215)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6493193507194519
    2. 'm' → logprob: -0.7743193507194519
    3. ' k' → logprob: -5.024319171905518
    4. ' m' → logprob: -5.399319171905518
    5. '=' → logprob: -6.274319171905518
    6. 'q' → logprob: -6.899319171905518
    7. ' =' → logprob: -7.274319171905518
    8. 'a' → logprob: -7.399319171905518
    9. 'l' → logprob: -8.024319648742676
    10. 'x' → logprob: -8.524319648742676

Token 170: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03364800289273262
    2. ' =' → logprob: -3.4086480140686035
    3. ',' → logprob: -13.033647537231445
    4. ')' → logprob: -16.908647537231445
    5. ' ' → logprob: -16.908647537231445
    6. ')=' → logprob: -17.908647537231445
    7. '＝' → logprob: -18.283647537231445
    8. '=int' → logprob: -18.283647537231445
    9. '=

' → logprob: -18.408647537231445
    10. '=}' → logprob: -18.658647537231445

Token 171: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4567333161830902
    2. 'm' → logprob: -1.9567333459854126
    3. 't' → logprob: -2.081733226776123
    4. 'k' → logprob: -2.456733226776123
    5. 'p' → logprob: -5.206733226776123
    6. 'd' → logprob: -5.831733226776123
    7. ' =' → logprob: -6.331733226776123
    8. '=' → logprob: -6.581733226776123
    9. '_' → logprob: -6.831733226776123
    10. 'z' → logprob: -7.331733226776123

Token 172: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020710527896881
    2. ' =' → logprob: -2.3502070903778076
    3. ',' → logprob: -15.725207328796387
    4. '=input' → logprob: -16.35020637512207
    5. '=list' → logprob: -16.85020637512207
    6. '=m' → logprob: -17.60020637512207
    7. '=s' → logprob: -17.60020637512207
    8. '=l' → logprob: -17.72520637512207
    9. '＝' → logprob: -17.85020637512207
    10. '=n' → logprob: -17.85020637512207

Token 173: ' mis' (ID: 4694)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.24683071672916412
    2. 'mis' → logprob: -2.371830701828003
    3. ' l' → logprob: -2.746830701828003
    4. 'map' → logprob: -3.871830701828003
    5. ' map' → logprob: -3.871830701828003
    6. ' mis' → logprob: -3.996830701828003
    7. 'list' → logprob: -7.371830940246582
    8. ' ' → logprob: -8.871830940246582
    9. 'lis' → logprob: -8.996830940246582
    10. ' list' → logprob: -8.996830940246582

Token 174: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1994775377388578e-05
    2. '()
' → logprob: -11.375012397766113
    3. ' ()' → logprob: -15.625012397766113
    4. '(' → logprob: -15.750012397766113
    5. '()

' → logprob: -16.875011444091797
    6. '()\' → logprob: -17.000011444091797
    7. '()]' → logprob: -17.375011444091797
    8. '()`' → logprob: -17.500011444091797
    9. '()
' → logprob: -18.000011444091797
    10. '();' → logprob: -18.375011444091797

Token 175: 'ans' (ID: 616)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3008360266685486
    2. 'arr' → logprob: -1.8008360862731934
    3. 'l' → logprob: -4.050836086273193
    4. 'ab' → logprob: -4.175836086273193
    5. 'lst' → logprob: -4.425836086273193
    6. 'p' → logprob: -5.050836086273193
    7. 'd' → logprob: -5.175836086273193
    8. 'dp' → logprob: -5.425836086273193
    9. 'edges' → logprob: -5.675836086273193
    10. 'graph' → logprob: -5.925836086273193

Token 176: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759446620941162
    2. '=' → logprob: -0.8259446620941162
    3. ',' → logprob: -12.950944900512695
    4. 's' → logprob: -14.325944900512695
    5. ' ' → logprob: -14.325944900512695
    6. '=[]' → logprob: -14.700944900512695
    7. ')' → logprob: -15.075944900512695
    8. '=int' → logprob: -15.325944900512695
    9. '＝' → logprob: -16.075944900512695
    10. '=[]
' → logprob: -16.450944900512695

Token 177: ' [' (ID: 723)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6074515581130981
    2. ' []' → logprob: -1.6074515581130981
    3. '0' → logprob: -1.9824515581130981
    4. '[]' → logprob: -2.6074514389038086
    5. ' abs' → logprob: -4.482451438903809
    6. 'abs' → logprob: -4.732451438903809
    7. ' [' → logprob: -4.982451438903809
    8. ' max' → logprob: -5.732451438903809
    9. ' x' → logprob: -5.982451438903809
    10. ' (' → logprob: -5.982451438903809

Token 178: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0221430491656065
    2. ']' → logprob: -5.0221428871154785
    3. 'INF' → logprob: -5.5221428871154785
    4. '-' → logprob: -5.7721428871154785
    5. 'float' → logprob: -5.7721428871154785
    6. 'abs' → logprob: -6.1471428871154785
    7. 'False' → logprob: -7.1471428871154785
    8. 'x' → logprob: -7.5221428871154785
    9. '"' → logprob: -7.7721428871154785
    10. 'None' → logprob: -8.147143363952637

Token 179: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016257872339338064
    2. ']*' → logprob: -6.751626014709473
    3. ' ]' → logprob: -8.876626014709473
    4. 'for' → logprob: -9.001626014709473
    5. ']*(' → logprob: -9.126626014709473
    6. ' for' → logprob: -9.501626014709473
    7. ')]' → logprob: -12.876626014709473
    8. ')' → logprob: -13.001626014709473
    9. ',' → logprob: -13.376626014709473
    10. ']+' → logprob: -14.001626014709473

Token 180: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20414121448993683
    2. ' for' → logprob: -2.579141139984131
    3. '
' → logprob: -3.204141139984131
    4. ']' → logprob: -3.954141139984131
    5. '+' → logprob: -4.204141139984131
    6. '*' → logprob: -5.079141139984131
    7. '[' → logprob: -5.079141139984131
    8. '\n' → logprob: -5.079141139984131
    9. ',' → logprob: -6.329141139984131
    10. ')' → logprob: -6.329141139984131

Token 181: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11289290338754654
    2. '(n' → logprob: -2.2378928661346436
    3. ' n' → logprob: -10.237893104553223
    4. ' (' → logprob: -10.862893104553223
    5. '(' → logprob: -11.987893104553223
    6. '
' → logprob: -13.487893104553223
    7. ' ' → logprob: -13.612893104553223
    8. '	n' → logprob: -13.737893104553223
    9. '   ' → logprob: -14.862893104553223
    10. '(N' → logprob: -14.987893104553223

Token 182: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3948533833026886
    2. '
' → logprob: -1.1448533535003662
    3. ' for' → logprob: -4.894853591918945
    4. ' 
' → logprob: -8.644853591918945
    5. 'def' → logprob: -9.269853591918945
    6. '  
' → logprob: -9.769853591918945
    7. '
' → logprob: -9.769853591918945
    8. '<|end|>' → logprob: -10.894853591918945
    9. '\n' → logprob: -11.269853591918945
    10. '

' → logprob: -11.269853591918945

Token 183: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00017398154886905104
    2. '
' → logprob: -9.250173568725586
    3. 'def' → logprob: -10.250173568725586
    4. 'from' → logprob: -10.625173568725586
    5. ' for' → logprob: -11.000173568725586
    6. 'graph' → logprob: -15.250173568725586
    7. '```' → logprob: -15.375173568725586
    8. 'distance' → logprob: -16.000173568725586
    9. 'queue' → logprob: -16.125173568725586
    10. 'd' → logprob: -16.250173568725586

Token 184: ' not' (ID: 625)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00011009939044015482
    2. 'from' → logprob: -10.125109672546387
    3. 'def' → logprob: -10.375109672546387
    4. ' for' → logprob: -10.500109672546387
    5. 'dist' → logprob: -11.750109672546387
    6. 'range' → logprob: -14.000109672546387
    7. 'd' → logprob: -14.625109672546387
    8. 'queue' → logprob: -15.250109672546387
    9. 'distance' → logprob: -15.375109672546387
    10. 'visited' → logprob: -15.375109672546387

Token 185: ' sure' (ID: 3239)
  Prédit: ' sure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sure' → logprob: -0.4725716710090637
    2. ' used' → logprob: -1.972571611404419
    3. '[' → logprob: -2.597571611404419
    4. '[]' → logprob: -3.472571611404419
    5. ' just' → logprob: -3.597571611404419
    6. ' a' → logprob: -3.972571611404419
    7. ' for' → logprob: -4.847571849822998
    8. ' ' → logprob: -4.972571849822998
    9. ' quite' → logprob: -4.972571849822998
    10. ' visited' → logprob: -5.347571849822998

Token 186: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1571953296661377
    2. '
' → logprob: -2.5321953296661377
    3. ' for' → logprob: -3.0321953296661377
    4. '(
' → logprob: -4.907195091247559
    5. 'def' → logprob: -5.282195091247559
    6. '(' → logprob: -6.032195091247559
    7. ' ' → logprob: -7.657195091247559
    8. '

' → logprob: -7.782195091247559
    9. ' 
' → logprob: -8.032195091247559
    10. ')' → logprob: -8.532195091247559

Token 187: ' zero' (ID: 12421)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6448265314102173
    2. 'n' → logprob: -1.2698265314102173
    3. ' this' → logprob: -2.7698264122009277
    4. 'this' → logprob: -3.3948264122009277
    5. 'x' → logprob: -4.394826412200928
    6. ' ' → logprob: -4.644826412200928
    7. '0' → logprob: -4.894826412200928
    8. 'complete' → logprob: -5.019826412200928
    9. 'correct' → logprob: -5.394826412200928
    10. '```' → logprob: -5.519826412200928

Token 188: '-based' (ID: 8235)
  Prédit: 'based'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'based' → logprob: -0.2962338626384735
    2. 'initialized' → logprob: -1.921233892440796
    3. 'indexed' → logprob: -2.796233892440796
    4. '-based' → logprob: -3.421233892440796
    5. ' based' → logprob: -5.421233654022217
    6. '-in' → logprob: -6.046233654022217
    7. '_based' → logprob: -6.171233654022217
    8. '-index' → logprob: -6.421233654022217
    9. 'filled' → logprob: -6.796233654022217
    10. ' indexed' → logprob: -7.421233654022217

Token 189: ' is' (ID: 382)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001443449524231255
    2. 'from' → logprob: -7.251443386077881
    3. ' for' → logprob: -7.876443386077881
    4. 'def' → logprob: -8.001443862915039
    5. 'import' → logprob: -12.876443862915039
    6. 'deque' → logprob: -13.126443862915039
    7. ')' → logprob: -13.251443862915039
    8. 'edges' → logprob: -13.251443862915039
    9. 'queue' → logprob: -13.376443862915039
    10. 'graph' → logprob: -13.626443862915039

Token 190: ' what' (ID: 1412)
  Prédit: 'correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'correct' → logprob: -0.1442749947309494
    2. ' correct' → logprob: -2.519274950027466
    3. 'better' → logprob: -4.644275188446045
    4. 'the' → logprob: -4.769275188446045
    5. 'right' → logprob: -4.894275188446045
    6. 'appropriate' → logprob: -5.519275188446045
    7. 'fine' → logprob: -5.519275188446045
    8. ' best' → logprob: -5.769275188446045
    9. 'best' → logprob: -5.894275188446045
    10. ' fine' → logprob: -6.269275188446045

Token 191: ' I' (ID: 357)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1394312381744385
    2. 'the' → logprob: -1.7644312381744385
    3. 'needed' → logprob: -2.0144312381744385
    4. 'you' → logprob: -2.5144312381744385
    5. 'they' → logprob: -2.7644312381744385
    6. 'we' → logprob: -3.6394312381744385
    7. 'expected' → logprob: -3.8894312381744385
    8. ' the' → logprob: -4.014430999755859
    9. ' you' → logprob: -4.264430999755859
    10. 'desired' → logprob: -4.264430999755859

Token 192: ' want' (ID: 1682)
  Prédit: 'want'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'want' → logprob: -0.13745157420635223
    2. ' want' → logprob: -2.137451648712158
    3. 'need' → logprob: -4.762451648712158
    4. 'should' → logprob: -7.637451648712158
    5. 'mean' → logprob: -7.762451648712158
    6. ' need' → logprob: -8.262451171875
    7. 'wanted' → logprob: -8.762451171875
    8. '#' → logprob: -9.137451171875
    9. 'w' → logprob: -9.262451171875
    10. ''m' → logprob: -9.512451171875

Token 193: ' but' (ID: 889)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007060722913593054
    2. 'from' → logprob: -5.507060527801514
    3. 'def' → logprob: -6.757060527801514
    4. ' for' → logprob: -7.382060527801514
    5. 'queue' → logprob: -8.007061004638672
    6. 'q' → logprob: -8.132061004638672
    7. '
' → logprob: -8.257061004638672
    8. 'deque' → logprob: -8.882061004638672
    9. 'graph' → logprob: -10.382061004638672
    10. 'd' → logprob: -10.757061004638672

Token 194: ' let's' (ID: 35717)
  Prédit: ' probably'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' probably' → logprob: -0.5448549389839172
    2. 'probably' → logprob: -2.1698548793792725
    3. ' it' → logprob: -2.5448548793792725
    4. 'it' → logprob: -2.9198548793792725
    5. 'se' → logprob: -3.0448548793792725
    6. ' seems' → logprob: -3.1698548793792725
    7. ' let's' → logprob: -3.9198548793792725
    8. 'yeah' → logprob: -4.669855117797852
    9. 'let' → logprob: -4.919855117797852
    10. 'should' → logprob: -5.669855117797852

Token 195: ' roll' (ID: 8465)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.6149836182594299
    2. 'try' → logprob: -1.4899835586547852
    3. 'see' → logprob: -1.9899835586547852
    4. ' try' → logprob: -3.614983558654785
    5. ' see' → logprob: -3.989983558654785
    6. 'roll' → logprob: -3.989983558654785
    7. 'keep' → logprob: -4.614983558654785
    8. ' go' → logprob: -4.739983558654785
    9. 'do' → logprob: -5.364983558654785
    10. ' roll' → logprob: -5.614983558654785

Token 196: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05449425056576729
    2. '
' → logprob: -3.0544941425323486
    3. 'def' → logprob: -5.929494380950928
    4. 'from' → logprob: -6.554494380950928
    5. ' for' → logprob: -6.804494380950928
    6. 'queue' → logprob: -7.804494380950928
    7. 'graph' → logprob: -9.55449390411377
    8. 'q' → logprob: -9.92949390411377
    9. '  
' → logprob: -10.55449390411377
    10. 'deque' → logprob: -10.67949390411377

Token 197: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001818693708628416
    2. 'from' → logprob: -6.376818656921387
    3. 'graph' → logprob: -10.501818656921387
    4. 'queue' → logprob: -10.751818656921387
    5. 'def' → logprob: -10.876818656921387
    6. 'dist' → logprob: -11.251818656921387
    7. 'q' → logprob: -11.376818656921387
    8. 'd' → logprob: -12.001818656921387
    9. 'deque' → logprob: -12.126818656921387
    10. ' for' → logprob: -12.251818656921387

Token 198: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2078142762184143
    2. ' i' → logprob: -1.7078142166137695
    3. 'a' → logprob: -5.2078142166137695
    4. ' a' → logprob: -7.4578142166137695
    5. 'k' → logprob: -9.95781421661377
    6. 'v' → logprob: -10.08281421661377
    7. 'd' → logprob: -10.20781421661377
    8. ' v' → logprob: -10.20781421661377
    9. 'u' → logprob: -10.58281421661377
    10. ' start' → logprob: -10.83281421661377

Token 199: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023548845201730728
    2. 'in' → logprob: -3.7735488414764404
    3. ' ' → logprob: -8.39854907989502
    4. 'range' → logprob: -10.52354907989502
    5. 'n' → logprob: -10.89854907989502
    6. '   ' → logprob: -11.27354907989502
    7. ',' → logprob: -11.64854907989502
    8. '  ' → logprob: -12.77354907989502
    9. ' range' → logprob: -13.27354907989502
    10. '	in' → logprob: -13.64854907989502

Token 200: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1269436478614807
    2. ' range' → logprob: -2.126943588256836
    3. ' ' → logprob: -11.876943588256836
    4. '   ' → logprob: -12.751943588256836
    5. '  ' → logprob: -13.001943588256836
    6. '	range' → logprob: -13.376943588256836
    7. '(range' → logprob: -13.876943588256836
    8. 'r' → logprob: -15.501943588256836
    9. '```' → logprob: -15.751943588256836
    10. '    ' → logprob: -16.001943588256836

Token 201: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25193166732788086
    2. '(n' → logprob: -1.5019316673278809
    3. '1' → logprob: -13.626932144165039
    4. 'n' → logprob: -14.251932144165039
    5. '(
' → logprob: -14.751932144165039
    6. ' (' → logprob: -15.626932144165039
    7. '(

' → logprob: -17.37693214416504
    8. '((' → logprob: -17.50193214416504
    9. ' ' → logprob: -17.50193214416504
    10. '(N' → logprob: -18.25193214416504

Token 202: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00019471932318992913
    2. '1' → logprob: -8.625194549560547
    3. ' n' → logprob: -11.250194549560547
    4. '	n' → logprob: -14.125194549560547
    5. '   ' → logprob: -14.250194549560547
    6. '(n' → logprob: -15.125194549560547
    7. '0' → logprob: -15.250194549560547
    8. ' ' → logprob: -15.625194549560547
    9. '
' → logprob: -16.500194549560547
    10. '    ' → logprob: -17.750194549560547

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006450029904954135
    2. ',n' → logprob: -7.750645160675049
    3. ' ,' → logprob: -8.50064468383789
    4. 'n' → logprob: -11.50064468383789
    5. ' n' → logprob: -14.37564468383789
    6. ',
' → logprob: -15.62564468383789
    7. '1' → logprob: -15.75064468383789
    8. ',

' → logprob: -17.37564468383789
    9. '+' → logprob: -17.50064468383789
    10. '0' → logprob: -18.50064468383789

Token 204: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001170460251159966
    2. ' n' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.75117015838623
    4. '	n' → logprob: -16.751171112060547
    5. ' ' → logprob: -17.251171112060547
    6. '
' → logprob: -17.376171112060547
    7. ')n' → logprob: -18.376171112060547
    8. '  ' → logprob: -19.001171112060547
    9. '(n' → logprob: -19.001171112060547
    10. '_n' → logprob: -19.626171112060547

Token 205: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01773228868842125
    2. '):
' → logprob: -4.1427321434021
    3. '+' → logprob: -6.3927321434021
    4. ' ):' → logprob: -11.767732620239258
    5. ')' → logprob: -12.142732620239258
    6. '-' → logprob: -12.767732620239258
    7. '):

' → logprob: -13.142732620239258
    8. '):
' → logprob: -13.642732620239258
    9. '```' → logprob: -14.267732620239258
    10. ':' → logprob: -14.517732620239258

Token 206: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4331355094909668
    2. 'for' → logprob: -1.0581355094909668
    3. '   ' → logprob: -5.558135509490967
    4. '	for' → logprob: -8.433135986328125
    5. '<|end|>' → logprob: -8.683135986328125
    6. ' ' → logprob: -8.808135986328125
    7. ',' → logprob: -11.683135986328125
    8. '...' → logprob: -12.308135986328125
    9. '  ' → logprob: -12.433135986328125
    10. '+' → logprob: -13.058135986328125

Token 207: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.030776260420680046
    2. ' for' → logprob: -3.780776262283325
    3. 'dist' → logprob: -5.530776023864746
    4. '   ' → logprob: -6.405776023864746
    5. 'd' → logprob: -6.530776023864746
    6. 'distance' → logprob: -8.905776023864746
    7. 'q' → logprob: -9.405776023864746
    8. '  ' → logprob: -10.030776023864746
    9. 'cnt' → logprob: -10.030776023864746
    10. ' ' → logprob: -11.280776023864746

Token 208: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03368823230266571
    2. ' j' → logprob: -3.4086883068084717
    3. 'distance' → logprob: -10.65868854522705
    4. '	j' → logprob: -12.53368854522705
    5. '```' → logprob: -12.53368854522705
    6. 'd' → logprob: -12.90868854522705
    7. 'dist' → logprob: -13.15868854522705
    8. '   ' → logprob: -13.28368854522705
    9. ' ' → logprob: -13.65868854522705
    10. '_j' → logprob: -14.03368854522705

Token 209: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08934857696294785
    2. 'in' → logprob: -2.464348554611206
    3. 'range' → logprob: -7.839348793029785
    4. ' range' → logprob: -11.464348793029785
    5. ' ' → logprob: -13.964348793029785
    6. '   ' → logprob: -14.589348793029785
    7. 'from' → logprob: -14.964348793029785
    8. 'i' → logprob: -15.089348793029785
    9. 'ange' → logprob: -15.089348793029785
    10. ')' → logprob: -15.214348793029785

Token 210: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018159428611397743
    2. ' range' → logprob: -4.01815938949585
    3. '(range' → logprob: -11.643159866333008
    4. 'ange' → logprob: -15.018159866333008
    5. '	range' → logprob: -16.393159866333008
    6. '   ' → logprob: -16.518159866333008
    7. ' ' → logprob: -16.518159866333008
    8. 'rang' → logprob: -16.643159866333008
    9. 'r' → logprob: -17.518159866333008
    10. 'ran' → logprob: -17.768159866333008

Token 211: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.432518421206623e-05
    2. '(' → logprob: -9.8750638961792
    3. 'i' → logprob: -12.2500638961792
    4. '(n' → logprob: -12.5000638961792
    5. '(j' → logprob: -12.6250638961792
    6. '((' → logprob: -15.2500638961792
    7. '   ' → logprob: -15.5000638961792
    8. 'n' → logprob: -15.6250638961792
    9. '[i' → logprob: -15.7500638961792
    10. ' (' → logprob: -16.625064849853516

Token 212: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10053282976150513
    2. ' +' → logprob: -2.3505327701568604
    3. ',' → logprob: -8.725532531738281
    4. '+n' → logprob: -9.225532531738281
    5. '+,' → logprob: -10.850532531738281
    6. ',n' → logprob: -10.850532531738281
    7. '   ' → logprob: -11.975532531738281
    8. '+i' → logprob: -11.975532531738281
    9. ' ,' → logprob: -12.100532531738281
    10. ' ' → logprob: -13.100532531738281

Token 213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012423748848959804
    2. ',' → logprob: -7.126242160797119
    3. 'n' → logprob: -8.001242637634277
    4. ' ' → logprob: -9.501242637634277
    5. ' n' → logprob: -11.501242637634277
    6. ',n' → logprob: -12.001242637634277
    7. ' ,' → logprob: -12.501242637634277
    8. '(n' → logprob: -12.751242637634277
    9. '(' → logprob: -13.001242637634277
    10. '
' → logprob: -14.001242637634277

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003872974484693259
    2. ',n' → logprob: -8.500387191772461
    3. ' ,' → logprob: -8.625387191772461
    4. 'n' → logprob: -13.000387191772461
    5. '(),' → logprob: -13.875387191772461
    6. '   ' → logprob: -15.000387191772461
    7. '_,' → logprob: -15.375387191772461
    8. '‌,' → logprob: -16.00038719177246
    9. '1' → logprob: -16.37538719177246
    10. '+,' → logprob: -16.62538719177246

Token 215: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.061970602720975876
    2. ' n' → logprob: -2.8119707107543945
    3. '   ' → logprob: -12.936970710754395
    4. '(n' → logprob: -15.061970710754395
    5. '	n' → logprob: -15.686970710754395
    6. ' ' → logprob: -16.436969757080078
    7. ')n' → logprob: -17.436969757080078
    8. ')' → logprob: -17.811969757080078
    9. '    ' → logprob: -18.436969757080078
    10. '<n' → logprob: -18.936969757080078

Token 216: '+' (ID: 10)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.061325348913669586
    2. '+' → logprob: -2.9363253116607666
    3. '):
' → logprob: -5.061325550079346
    4. ' +' → logprob: -10.186325073242188
    5. '   ' → logprob: -10.561325073242188
    6. ' ):' → logprob: -11.686325073242188
    7. ')' → logprob: -12.811325073242188
    8. ':' → logprob: -12.811325073242188
    9. '):
' → logprob: -13.811325073242188
    10. '):

' → logprob: -13.936325073242188

Token 217: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '+' → logprob: -14.625000953674316
    3. ' ' → logprob: -15.125000953674316
    4. '   ' → logprob: -16.5
    5. '):
' → logprob: -17.125
    6. '2' → logprob: -17.625
    7. '):' → logprob: -17.625
    8. '```' → logprob: -18.625
    9. ')' → logprob: -19.0
    10. '
' → logprob: -20.125

Token 218: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06202425807714462
    2. '):
' → logprob: -2.8120243549346924
    3. ' ):' → logprob: -10.562024116516113
    4. ')' → logprob: -10.937024116516113
    5. ':' → logprob: -11.937024116516113
    6. '   ' → logprob: -12.937024116516113
    7. ' ):
' → logprob: -13.312024116516113
    8. '):
' → logprob: -13.562024116516113
    9. '):

' → logprob: -14.437024116516113
    10. '}:' → logprob: -16.43702507019043

Token 219: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2955300509929657
    2. 'dist' → logprob: -2.045530080795288
    3. ' d' → logprob: -2.545530080795288
    4. ' dist' → logprob: -3.920530080795288
    5. 'distance' → logprob: -4.545529842376709
    6. '           ' → logprob: -4.670529842376709
    7. '       ' → logprob: -6.295529842376709
    8. ' distance' → logprob: -6.670529842376709
    9. '   ' → logprob: -6.795529842376709
    10. '	dist' → logprob: -6.920529842376709

Token 221: ' what's' (ID: 29400)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2453526258468628
    2. 'dist' → logprob: -1.6203526258468628
    3. ' d' → logprob: -4.995352745056152
    4. ' dist' → logprob: -5.995352745056152
    5. 'dx' → logprob: -6.120352745056152
    6. '       ' → logprob: -6.245352745056152
    7. 'distance' → logprob: -6.245352745056152
    8. 'if' → logprob: -6.370352745056152
    9. '   ' → logprob: -7.620352745056152
    10. '           ' → logprob: -7.745352745056152

Token 222: ' the' (ID: 290)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -1.0269508361816406
    2. ' the' → logprob: -1.4019508361816406
    3. 'abs' → logprob: -1.6519508361816406
    4. '   ' → logprob: -2.0269508361816406
    5. 'min' → logprob: -3.5269508361816406
    6. ' min' → logprob: -3.9019508361816406
    7. 'the' → logprob: -4.651950836181641
    8. '       ' → logprob: -6.026950836181641
    9. 'dist' → logprob: -6.026950836181641
    10. '    ' → logprob: -6.526950836181641

Token 223: ' shortest' (ID: 70564)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.05451874062418938
    2. 'distance' → logprob: -3.804518699645996
    3. 'dist' → logprob: -4.054518699645996
    4. 'abs' → logprob: -5.429518699645996
    5. ' min' → logprob: -5.554518699645996
    6. 'minimum' → logprob: -6.679518699645996
    7. 'short' → logprob: -7.304518699645996
    8. 'max' → logprob: -7.679518699645996
    9. '   ' → logprob: -7.804518699645996
    10. '#' → logprob: -7.804518699645996

Token 224: ' way' (ID: 2006)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.793941080570221
    2. ' path' → logprob: -1.1689410209655762
    3. '_' → logprob: -1.6689410209655762
    4. 'path' → logprob: -3.543941020965576
    5. '_distance' → logprob: -4.293941020965576
    6. ' ' → logprob: -6.168941020965576
    7. 'distance' → logprob: -6.293941020965576
    8. ' distance' → logprob: -6.793941020965576
    9. ' _' → logprob: -7.168941020965576
    10. '_dist' → logprob: -8.668941497802734

Token 225: ' from' (ID: 591)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4684033989906311
    2. '       ' → logprob: -1.2184033393859863
    3. 'to' → logprob: -3.5934033393859863
    4. ' ' → logprob: -4.593403339385986
    5. ' =' → logprob: -4.718403339385986
    6. '[' → logprob: -4.968403339385986
    7. '   ' → logprob: -5.343403339385986
    8. '[]' → logprob: -5.718403339385986
    9. '        ' → logprob: -5.843403339385986
    10. '(' → logprob: -6.093403339385986

Token 226: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0010678203543648124
    2. ' i' → logprob: -7.251067638397217
    3. 'x' → logprob: -8.626068115234375
    4. '<|end|>' → logprob: -8.876068115234375
    5. 'j' → logprob: -11.376068115234375
    6. '(i' → logprob: -12.501068115234375
    7. '<|end|>' → logprob: -12.626068115234375
    8. '[i' → logprob: -13.001068115234375
    9. 'to' → logprob: -13.376068115234375
    10. ' ' → logprob: -13.501068115234375

Token 227: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.08018374443054199
    2. 'to' → logprob: -2.580183744430542
    3. ' ' → logprob: -7.830183982849121
    4. '       ' → logprob: -7.830183982849121
    5. '        ' → logprob: -9.330183982849121
    6. ')' → logprob: -9.580183982849121
    7. '   ' → logprob: -9.830183982849121
    8. ',' → logprob: -9.955183982849121
    9. ' or' → logprob: -9.955183982849121
    10. '"' → logprob: -10.330183982849121

Token 228: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.015304656699299812
    2. ' j' → logprob: -4.2653045654296875
    3. 'x' → logprob: -6.8903045654296875
    4. 'y' → logprob: -10.265304565429688
    5. 'n' → logprob: -10.640304565429688
    6. ' x' → logprob: -11.140304565429688
    7. '   ' → logprob: -11.265304565429688
    8. 'i' → logprob: -11.640304565429688
    9. ' ' → logprob: -11.890304565429688
    10. '	j' → logprob: -12.140304565429688

Token 229: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007204301655292511
    2. ' if' → logprob: -6.007204532623291
    3. '<|end|>' → logprob: -6.257204532623291
    4. '?' → logprob: -6.757204532623291
    5. ',' → logprob: -7.382204532623291
    6. ' to' → logprob: -8.257204055786133
    7. 'if' → logprob: -8.757204055786133
    8. '        ' → logprob: -9.132204055786133
    9. '        
' → logprob: -9.507204055786133
    10. ':' → logprob: -9.757204055786133

Token 230: ' teleport' (ID: 141904)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2705267667770386
    2. ' if' → logprob: -1.7705267667770386
    3. '        ' → logprob: -4.520526885986328
    4. '        
' → logprob: -4.645526885986328
    5. 'if' → logprob: -4.895526885986328
    6. ' s' → logprob: -5.395526885986328
    7. 's' → logprob: -5.520526885986328
    8. 'distance' → logprob: -5.645526885986328
    9. ' ' → logprob: -6.020526885986328
    10. ' to' → logprob: -6.145526885986328

Token 231: 'ing' (ID: 289)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.563456118106842
    2. ' =' → logprob: -1.4384560585021973
    3. '?' → logprob: -2.0634560585021973
    4. ' or' → logprob: -4.063456058502197
    5. ' if' → logprob: -4.188456058502197
    6. ')' → logprob: -4.938456058502197
    7. ':' → logprob: -4.938456058502197
    8. 'if' → logprob: -5.313456058502197
    9. 'ing' → logprob: -5.688456058502197
    10. 's' → logprob: -5.938456058502197

Token 232: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.5248066186904907
    2. '?' → logprob: -1.7748066186904907
    3. 'via' → logprob: -1.8998066186904907
    4. ' at' → logprob: -2.024806499481201
    5. 'between' → logprob: -2.274806499481201
    6. 'through' → logprob: -2.899806499481201
    7. 'or' → logprob: -3.149806499481201
    8. '<|end|>' → logprob: -3.649806499481201
    9. ' between' → logprob: -3.774806499481201
    10. ' or' → logprob: -4.149806499481201

Token 233: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05196575075387955
    2. ' x' → logprob: -3.0519657135009766
    3. ' most' → logprob: -7.051965713500977
    4. 'least' → logprob: -7.176965713500977
    5. ' least' → logprob: -7.301965713500977
    6. 'most' → logprob: -7.426965713500977
    7. 'either' → logprob: -8.551965713500977
    8. 'the' → logprob: -9.426965713500977
    9. ' either' → logprob: -10.051965713500977
    10. ' ' → logprob: -10.176965713500977

Token 234: '-y' (ID: 18102)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.13815660774707794
    2. 'or' → logprob: -2.2631566524505615
    3. ',' → logprob: -4.388156414031982
    4. ')' → logprob: -5.388156414031982
    5. '-' → logprob: -6.013156414031982
    6. ' and' → logprob: -6.263156414031982
    7. ',y' → logprob: -6.513156414031982
    8. 'and' → logprob: -7.013156414031982
    9. 'if' → logprob: -7.388156414031982
    10. ' if' → logprob: -8.01315689086914

Token 235: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3456800878047943
    2. ' ' → logprob: -2.095679998397827
    3. ')' → logprob: -2.595679998397827
    4. '):' → logprob: -3.970679998397827
    5. '<|end|>' → logprob: -4.345680236816406
    6. '   ' → logprob: -4.470680236816406
    7. '  ' → logprob: -4.845680236816406
    8. '       ' → logprob: -4.970680236816406
    9. ' :' → logprob: -5.095680236816406
    10. '    ' → logprob: -5.095680236816406

Token 236: ' y' (ID: 342)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3424514830112457
    2. 'i' → logprob: -1.9674514532089233
    3. 'x' → logprob: -3.342451572418213
    4. ' j' → logprob: -3.342451572418213
    5. 'y' → logprob: -3.467451572418213
    6. 'using' → logprob: -4.217451572418213
    7. '1' → logprob: -5.217451572418213
    8. ' y' → logprob: -5.342451572418213
    9. ' i' → logprob: -5.592451572418213
    10. ' using' → logprob: -5.717451572418213

Token 237: '-x' (ID: 12651)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1294044703245163
    2. ')' → logprob: -2.5044045448303223
    3. ' -' → logprob: -3.8794045448303223
    4. '):' → logprob: -4.754404544830322
    5. ')-' → logprob: -6.254404544830322
    6. ',' → logprob: -6.879404544830322
    7. ' or' → logprob: -7.004404544830322
    8. '-)' → logprob: -7.004404544830322
    9. '+' → logprob: -7.254404544830322
    10. '<|end|>' → logprob: -7.629404544830322

Token 238: '?
' (ID: 3901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1661556214094162
    2. ')' → logprob: -2.5411555767059326
    3. ':' → logprob: -3.4161555767059326
    4. '        ' → logprob: -4.166155815124512
    5. '):' → logprob: -4.541155815124512
    6. '):
' → logprob: -5.916155815124512
    7. '   ' → logprob: -6.041155815124512
    8. ',' → logprob: -6.291155815124512
    9. '    ' → logprob: -6.416155815124512
    10. ':
' → logprob: -6.916155815124512

Token 239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012897951528429985
    2. '        ' → logprob: -5.887897968292236
    3. '<|end|>' → logprob: -6.012897968292236
    4. ')' → logprob: -6.512897968292236
    5. '   ' → logprob: -6.637897968292236
    6. ' ' → logprob: -6.637897968292236
    7. '        
' → logprob: -7.137897968292236
    8. ',' → logprob: -7.762897968292236
    9. 's' → logprob: -8.012897491455078
    10. ' )' → logprob: -8.262897491455078

Token 240: ' s' (ID: 265)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2717728018760681
    2. 'd' → logprob: -1.771772861480713
    3. '       ' → logprob: -3.521772861480713
    4. ' dist' → logprob: -4.271772861480713
    5. 'distance' → logprob: -4.896772861480713
    6. ' d' → logprob: -5.646772861480713
    7. 'direct' → logprob: -6.271772861480713
    8. 'a' → logprob: -6.396772861480713
    9. 'dp' → logprob: -6.521772861480713
    10. 'steps' → logprob: -7.021772861480713

Token 241: '_dist' (ID: 37968)
  Prédit: 'hort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hort' → logprob: -1.2696832418441772
    2. 't' → logprob: -1.3946832418441772
    3. ' =' → logprob: -1.8946832418441772
    4. '1' → logprob: -2.269683361053467
    5. 'tra' → logprob: -3.144683361053467
    6. 'h' → logprob: -3.519683361053467
    7. '=' → logprob: -3.519683361053467
    8. 'tep' → logprob: -3.644683361053467
    9. 'd' → logprob: -4.019683361053467
    10. 'td' → logprob: -4.269683361053467

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05820055305957794
    2. '=' → logprob: -3.0582005977630615
    3. 'ance' → logprob: -4.683200359344482
    4. 'ances' → logprob: -9.68320083618164
    5. 't' → logprob: -9.93320083618164
    6. ' ' → logprob: -10.68320083618164
    7. '   ' → logprob: -10.68320083618164
    8. '1' → logprob: -10.68320083618164
    9. '=int' → logprob: -10.80820083618164
    10. '	' → logprob: -11.05820083618164

Token 243: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.03529321029782295
    2. 'j' → logprob: -3.5352931022644043
    3. ' min' → logprob: -5.285293102264404
    4. ' j' → logprob: -8.410293579101562
    5. 'abs' → logprob: -9.910293579101562
    6. '```' → logprob: -10.285293579101562
    7. '	min' → logprob: -10.410293579101562
    8. '(min' → logprob: -10.410293579101562
    9. '
' → logprob: -10.785293579101562
    10. '=min' → logprob: -11.535293579101562

Token 244: '(abs' (ID: 71957)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.00019662656995933503
    2. '(abs' → logprob: -8.75019645690918
    3. '(' → logprob: -10.50019645690918
    4. '((' → logprob: -12.25019645690918
    5. 'j' → logprob: -12.50019645690918
    6. 'abs' → logprob: -14.25019645690918
    7. '[j' → logprob: -14.37519645690918
    8. '(
' → logprob: -14.50019645690918
    9. '	j' → logprob: -16.87519645690918
    10. ' (' → logprob: -17.00019645690918

Token 245: '(j' (ID: 4997)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5760498046875
    2. '(j' → logprob: -0.8260498046875
    3. '(x' → logprob: -9.7010498046875
    4. '(' → logprob: -10.3260498046875
    5. 'j' → logprob: -11.3260498046875
    6. 'i' → logprob: -12.8260498046875
    7. '(y' → logprob: -14.8260498046875
    8. '(a' → logprob: -15.4510498046875
    9. '((' → logprob: -15.4510498046875
    10. '(s' → logprob: -15.5760498046875

Token 246: '-i' (ID: 18499)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12911294400691986
    2. '-' → logprob: -2.129112958908081
    3. '-i' → logprob: -6.129112720489502
    4. ' ' → logprob: -12.75411319732666
    5. '-x' → logprob: -14.50411319732666
    6. '-j' → logprob: -15.12911319732666
    7. '   ' → logprob: -16.004112243652344
    8. '−' → logprob: -16.754112243652344
    9. '-ai' → logprob: -17.754112243652344
    10. '  ' → logprob: -17.879112243652344

Token 247: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0018587957601994276
    2. ')' → logprob: -6.626858711242676
    3. ' ),' → logprob: -7.626858711242676
    4. '),
' → logprob: -10.876858711242676
    5. ',' → logprob: -11.251858711242676
    6. ')),' → logprob: -12.376858711242676
    7. '),(' → logprob: -12.501858711242676
    8. '))' → logprob: -13.876858711242676
    9. '),

' → logprob: -14.126858711242676
    10. 'abs' → logprob: -14.626858711242676

Token 248: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0008329743286594748
    2. ' abs' → logprob: -7.125833034515381
    3. '(abs' → logprob: -10.625832557678223
    4. '
' → logprob: -13.125832557678223
    5. 'min' → logprob: -14.875832557678223
    6. '```' → logprob: -15.000832557678223
    7. '

' → logprob: -15.125832557678223
    8. '   ' → logprob: -15.750832557678223
    9. '.abs' → logprob: -15.750832557678223
    10. '
' → logprob: -15.875832557678223

Token 249: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.37619391083717346
    2. '(j' → logprob: -1.251193881034851
    3. 'j' → logprob: -4.251194000244141
    4. 'x' → logprob: -4.376194000244141
    5. '(i' → logprob: -7.626194000244141
    6. '(y' → logprob: -10.37619400024414
    7. 'i' → logprob: -11.37619400024414
    8. '(' → logprob: -12.37619400024414
    9. '	j' → logprob: -12.50119400024414
    10. ' j' → logprob: -12.75119400024414

Token 250: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.050444331020116806
    2. ' -' → logprob: -3.4254443645477295
    3. '-j' → logprob: -4.42544412612915
    4. '-' → logprob: -5.55044412612915
    5. '-x' → logprob: -7.17544412612915
    6. '-y' → logprob: -11.425444602966309
    7. ' i' → logprob: -11.550444602966309
    8. 'i' → logprob: -12.050444602966309
    9. ' ' → logprob: -12.925444602966309
    10. 'j' → logprob: -13.425444602966309

Token 251: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1602420061826706
    2. ')+' → logprob: -1.910241961479187
    3. ' )' → logprob: -11.660242080688477
    4. ')+(' → logprob: -11.785242080688477
    5. '+' → logprob: -14.785242080688477
    6. 'y' → logprob: -15.160242080688477
    7. '   ' → logprob: -15.410242080688477
    8. '")+' → logprob: -16.410242080688477
    9. ')-' → logprob: -16.660242080688477
    10. ']+' → logprob: -16.660242080688477

Token 252: '1' (ID: 16)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.02634221501648426
    2. '1' → logprob: -3.6513421535491943
    3. ' abs' → logprob: -10.151342391967773
    4. '(abs' → logprob: -13.776342391967773
    5. ' ' → logprob: -14.401342391967773
    6. '
' → logprob: -14.651342391967773
    7. '.abs' → logprob: -15.026342391967773
    8. '+' → logprob: -15.151342391967773
    9. 'ans' → logprob: -16.526342391967773
    10. '   ' → logprob: -16.651342391967773

Token 253: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.8325677703833207e-05
    2. 'abs' → logprob: -11.000028610229492
    3. ' +' → logprob: -11.375028610229492
    4. '+
' → logprob: -17.125028610229492
    5. '```' → logprob: -18.250028610229492
    6. '+b' → logprob: -19.125028610229492
    7. ' abs' → logprob: -19.375028610229492
    8. '
' → logprob: -19.500028610229492
    9. '.abs' → logprob: -19.750028610229492
    10. '+xml' → logprob: -20.000028610229492

Token 254: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -9.088346359931165e-07
    2. ' abs' → logprob: -14.000000953674316
    3. '(abs' → logprob: -17.875
    4. '.abs' → logprob: -19.875
    5. '
' → logprob: -21.0
    6. 'ans' → logprob: -21.125
    7. 'b' → logprob: -21.25
    8. '>' → logprob: -21.625
    9. '```' → logprob: -22.0
    10. 'y' → logprob: -22.25

Token 255: '(j' (ID: 4997)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07060426473617554
    2. 'y' → logprob: -2.8206043243408203
    3. '(j' → logprob: -5.07060432434082
    4. '(y' → logprob: -6.07060432434082
    5. 'yj' → logprob: -12.94560432434082
    6. '	j' → logprob: -13.19560432434082
    7. ' j' → logprob: -13.32060432434082
    8. 'jy' → logprob: -13.44560432434082
    9. '[j' → logprob: -13.57060432434082
    10. ' y' → logprob: -14.44560432434082

Token 256: '-y' (ID: 18102)
  Prédit: '-y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-y' → logprob: -0.0037690894678235054
    2. ' -' → logprob: -6.2537689208984375
    3. 'y' → logprob: -6.5037689208984375
    4. '-' → logprob: -8.253768920898438
    5. '-x' → logprob: -9.503768920898438
    6. ' y' → logprob: -12.753768920898438
    7. '	y' → logprob: -13.878768920898438
    8. ',y' → logprob: -14.753768920898438
    9. 'x' → logprob: -14.878768920898438
    10. '−' → logprob: -15.753768920898438

Token 257: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4896838665008545
    2. '),' → logprob: -0.9896838665008545
    3. ')' → logprob: -4.239684104919434
    4. ')+' → logprob: -6.989684104919434
    5. '))+' → logprob: -9.364684104919434
    6. ')),' → logprob: -10.739684104919434
    7. '),
' → logprob: -11.489684104919434
    8. '))
' → logprob: -11.989684104919434
    9. ' ))' → logprob: -12.239684104919434
    10. ' ),' → logprob: -12.364684104919434

Token 258: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0019288709154352546
    2. ' abs' → logprob: -6.251928806304932
    3. '(abs' → logprob: -15.50192928314209
    4. '.abs' → logprob: -17.626928329467773
    5. '   ' → logprob: -17.876928329467773
    6. '       ' → logprob: -19.751928329467773
    7. '    ' → logprob: -20.001928329467773
    8. ' ' → logprob: -20.501928329467773
    9. '```' → logprob: -20.501928329467773
    10. '        ' → logprob: -21.001928329467773

Token 259: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.026386216282844543
    2. '(x' → logprob: -3.651386260986328
    3. '(j' → logprob: -9.651386260986328
    4. '(' → logprob: -11.526386260986328
    5. 'y' → logprob: -11.526386260986328
    6. '(i' → logprob: -13.526386260986328
    7. 'x' → logprob: -14.776386260986328
    8. 'j' → logprob: -16.901386260986328
    9. '	y' → logprob: -17.026386260986328
    10. '(
' → logprob: -17.276386260986328

Token 260: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.00799849908798933
    2. ' -' → logprob: -4.882998466491699
    3. '-' → logprob: -8.2579984664917
    4. '-j' → logprob: -9.2579984664917
    5. '-x' → logprob: -10.5079984664917
    6. '```' → logprob: -12.3829984664917
    7. '-u' → logprob: -13.6329984664917
    8. ' ' → logprob: -13.8829984664917
    9. 'i' → logprob: -14.0079984664917
    10. '   ' → logprob: -14.1329984664917

Token 261: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.002816528081893921
    2. '+' → logprob: -6.127816677093506
    3. ')' → logprob: -7.377816677093506
    4. '}+' → logprob: -13.502816200256348
    5. '")+' → logprob: -13.752816200256348
    6. ']+' → logprob: -13.752816200256348
    7. ' )' → logprob: -13.877816200256348
    8. ' +' → logprob: -14.002816200256348
    9. ')+(' → logprob: -14.752816200256348
    10. '+)' → logprob: -16.002817153930664

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001422770437784493
    2. '+' → logprob: -9.250142097473145
    3. ' ' → logprob: -10.000142097473145
    4. ')' → logprob: -15.250142097473145
    5. ' +' → logprob: -15.500142097473145
    6. '<|end|>' → logprob: -15.625142097473145
    7. ')+' → logprob: -17.50014305114746
    8. '   ' → logprob: -17.87514305114746
    9. '```' → logprob: -18.25014305114746
    10. 's' → logprob: -18.37514305114746

Token 263: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.080963092041202e-06
    2. ' +' → logprob: -12.250004768371582
    3. '+xml' → logprob: -16.0000057220459
    4. '<|end|>' → logprob: -17.1250057220459
    5. ')+' → logprob: -17.5000057220459
    6. '+)' → logprob: -17.7500057220459
    7. '+</' → logprob: -17.7500057220459
    8. '+b' → logprob: -19.0000057220459
    9. '+
' → logprob: -19.0000057220459
    10. '+#' → logprob: -19.6250057220459

Token 264: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.0564331205387134e-05
    2. ' abs' → logprob: -11.50001049041748
    3. '(abs' → logprob: -14.87501049041748
    4. '.abs' → logprob: -18.250011444091797
    5. '
' → logprob: -19.875011444091797
    6. '```' → logprob: -20.000011444091797
    7. '<|end|>' → logprob: -21.125011444091797
    8. 'Abs' → logprob: -21.375011444091797
    9. '_abs' → logprob: -21.375011444091797
    10. 'absor' → logprob: -22.625011444091797

Token 265: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -3.810037742368877e-05
    2. '(x' → logprob: -10.625038146972656
    3. 'j' → logprob: -11.250038146972656
    4. '(' → logprob: -14.625038146972656
    5. ' j' → logprob: -16.250038146972656
    6. ' (' → logprob: -17.250038146972656
    7. 'x' → logprob: -17.375038146972656
    8. '[j' → logprob: -17.625038146972656
    9. '	j' → logprob: -17.750038146972656
    10. ',j' → logprob: -18.750038146972656

Token 266: '-x' (ID: 12651)
  Prédit: '-x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-x' → logprob: -0.0018352300394326448
    2. '-' → logprob: -7.001835346221924
    3. ' -' → logprob: -7.001835346221924
    4. 'x' → logprob: -11.376834869384766
    5. '```' → logprob: -15.001834869384766
    6. '-xs' → logprob: -15.751834869384766
    7. '-
' → logprob: -16.001834869384766
    8. '_x' → logprob: -16.126834869384766
    9. ' x' → logprob: -16.251834869384766
    10. ' ' → logprob: -16.376834869384766

Token 267: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008213033434003592
    2. ')' → logprob: -7.375821113586426
    3. '))
' → logprob: -9.000821113586426
    4. ' ))' → logprob: -9.625821113586426
    5. ')))' → logprob: -13.125821113586426
    6. ' )' → logprob: -14.000821113586426
    7. '))

' → logprob: -14.000821113586426
    8. ')
' → logprob: -14.875821113586426
    9. '   ' → logprob: -15.000821113586426
    10. ''))' → logprob: -15.250821113586426

Token 268: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16851744055747986
    2. '
' → logprob: -1.9185174703598022
    3. '       ' → logprob: -5.918517589569092
    4. 'ans' → logprob: -6.293517589569092
    5. ')' → logprob: -6.918517589569092
    6. ')
' → logprob: -7.043517589569092
    7. '    
' → logprob: -7.293517589569092
    8. '  ' → logprob: -8.043517112731934
    9. ' ' → logprob: -8.543517112731934
    10. 's' → logprob: -8.668517112731934

Token 269: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0057575455866754055
    2. '
' → logprob: -5.2557573318481445
    3. ' ans' → logprob: -7.8807573318481445
    4. '   ' → logprob: -10.380757331848145
    5. 's' → logprob: -10.630757331848145
    6. '	ans' → logprob: -10.880757331848145
    7. ')' → logprob: -11.380757331848145
    8. '    
' → logprob: -11.380757331848145
    9. '(ans' → logprob: -11.630757331848145
    10. ')
' → logprob: -11.755757331848145

Token 270: '[s' (ID: 24177)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.29028549790382385
    2. '[j' → logprob: -2.040285587310791
    3. '[s' → logprob: -2.665285587310791
    4. '[' → logprob: -3.040285587310791
    5. '[min' → logprob: -5.665285587310791
    6. '[x' → logprob: -7.665285587310791
    7. '[int' → logprob: -8.040285110473633
    8. '[(' → logprob: -9.290285110473633
    9. '[a' → logprob: -9.665285110473633
    10. 's' → logprob: -10.540285110473633

Token 271: '_dist' (ID: 37968)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1353120505809784
    2. '-' → logprob: -2.135312080383301
    3. '[' → logprob: -5.510312080383301
    4. ']' → logprob: -6.760312080383301
    5. '][' → logprob: -7.385312080383301
    6. '[j' → logprob: -7.885312080383301
    7. '_dist' → logprob: -7.885312080383301
    8. '[int' → logprob: -8.2603120803833
    9. '.append' → logprob: -8.5103120803833
    10. 'ist' → logprob: -8.6353120803833

Token 272: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007626973092556
    2. ']+=' → logprob: -4.882627010345459
    3. ' ]' → logprob: -11.5076265335083
    4. '+]' → logprob: -13.0076265335083
    5. ']+' → logprob: -13.1326265335083
    6. '']' → logprob: -13.5076265335083
    7. '+' → logprob: -13.6326265335083
    8. '+=' → logprob: -13.7576265335083
    9. '`]' → logprob: -13.8826265335083
    10. '"]' → logprob: -14.2576265335083

Token 273: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0031078457832336426
    2. '+' → logprob: -6.878108024597168
    3. ']+=' → logprob: -7.253108024597168
    4. ' +=' → logprob: -7.253108024597168
    5. '[' → logprob: -7.378108024597168
    6. '++' → logprob: -11.128108024597168
    7. '```' → logprob: -12.628108024597168
    8. 's' → logprob: -12.878108024597168
    9. '<|end|>' → logprob: -13.378108024597168
    10. '[s' → logprob: -13.378108024597168

Token 274: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '   ' → logprob: -22.25
    4. '
' → logprob: -22.875
    5. '```' → logprob: -23.0
    6. '１' → logprob: -23.25
    7. '۱' → logprob: -23.5
    8. '+' → logprob: -24.75
    9. '  ' → logprob: -24.75
    10. '<|end|>' → logprob: -25.375

Token 275: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '```' → logprob: -19.25
    4. '１' → logprob: -20.25
    5. '   ' → logprob: -20.75
    6. '۱' → logprob: -21.0
    7. '
' → logprob: -21.625
    8. '+' → logprob: -21.75
    9. '!' → logprob: -21.8125
    10. '  ' → logprob: -22.0

Token 276: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.027565278112888336
    2. 'print' → logprob: -3.7775652408599854
    3. 'for' → logprob: -5.6525654792785645
    4. '

' → logprob: -7.6525654792785645
    5. '\n' → logprob: -8.277565002441406
    6. '
' → logprob: -10.652565002441406
    7. ' for' → logprob: -11.277565002441406
    8. '<|end|>' → logprob: -11.277565002441406
    9. ' 
' → logprob: -11.527565002441406
    10. '  
' → logprob: -12.027565002441406

Token 277: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46464312076568604
    2. 'print' → logprob: -1.089643120765686
    3. ')' → logprob: -4.2146430015563965
    4. '
' → logprob: -5.4646430015563965
    5. '0' → logprob: -5.5896430015563965
    6. '1' → logprob: -5.8396430015563965
    7. ' for' → logprob: -6.3396430015563965
    8. ']' → logprob: -6.4646430015563965
    9. '<|end|>' → logprob: -6.4646430015563965
    10. '```' → logprob: -6.5896430015563965

Token 278: ' Print' (ID: 13103)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04794636741280556
    2. 'range' → logprob: -3.5479464530944824
    3. 'print' → logprob: -4.297946453094482
    4. '1' → logprob: -5.422946453094482
    5. ' for' → logprob: -12.047945976257324
    6. 'ans' → logprob: -12.047945976257324
    7. ' range' → logprob: -13.047945976257324
    8. '0' → logprob: -13.172945976257324
    9. '(range' → logprob: -13.672945976257324
    10. '(' → logprob: -13.797945976257324

Token 279: ',' (ID: 11)
  Prédit: '("\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("\' → logprob: -0.8960105180740356
    2. '(*' → logprob: -1.1460105180740356
    3. '('\' → logprob: -2.271010398864746
    4. 'for' → logprob: -2.521010398864746
    5. '
' → logprob: -2.896010398864746
    6. '(' → logprob: -4.021010398864746
    7. 'ans' → logprob: -5.271010398864746
    8. 's' → logprob: -6.021010398864746
    9. '(ans' → logprob: -6.021010398864746
    10. '(
' → logprob: -6.771010398864746

Token 280: ' but' (ID: 889)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006710976012982428
    2. 'print' → logprob: -7.500670909881592
    3. ' for' → logprob: -9.37567138671875
    4. '"\' → logprob: -10.75067138671875
    5. ''\' → logprob: -12.12567138671875
    6. '
' → logprob: -12.25067138671875
    7. '\n' → logprob: -14.12567138671875
    8. '```' → logprob: -15.62567138671875
    9. ' 
' → logprob: -16.00067138671875
    10. '('\' → logprob: -16.00067138671875

Token 281: ' ignore' (ID: 17887)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1814212203025818
    2. ' for' → logprob: -1.8064212799072266
    3. '
' → logprob: -7.056421279907227
    4. ' ' → logprob: -8.306421279907227
    5. ' 
' → logprob: -8.806421279907227
    6. '"' → logprob: -9.681421279907227
    7. 'end' → logprob: -9.931421279907227
    8. '  
' → logprob: -10.056421279907227
    9. '*' → logprob: -10.181421279907227
    10. '\' → logprob: -10.806421279907227

Token 282: ' zero' (ID: 12421)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6440608501434326
    2. ' ans' → logprob: -1.7690608501434326
    3. 'range' → logprob: -2.1440608501434326
    4. '0' → logprob: -2.5190608501434326
    5. 'for' → logprob: -3.1440608501434326
    6. ' range' → logprob: -3.3940608501434326
    7. ' for' → logprob: -4.269061088562012
    8. '[' → logprob: -5.269061088562012
    9. 's' → logprob: -5.394061088562012
    10. '(ans' → logprob: -5.769061088562012

Token 283: '-th' (ID: 14928)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.127333340875339e-06
    2. ' for' → logprob: -13.125003814697266
    3. 'print' → logprob: -13.500003814697266
    4. '
' → logprob: -15.500003814697266
    5. '```' → logprob: -15.500003814697266
    6. 'range' → logprob: -15.875003814697266
    7. 'or' → logprob: -16.250003814697266
    8. '1' → logprob: -17.625003814697266
    9. 'from' → logprob: -18.000003814697266
    10. '(' → logprob: -18.375003814697266

Token 284: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004965558764524758
    2. ' for' → logprob: -8.000496864318848
    3. 'print' → logprob: -9.125496864318848
    4. '\n' → logprob: -10.500496864318848
    5. '
' → logprob: -10.750496864318848
    6. '('\' → logprob: -14.125496864318848
    7. 'from' → logprob: -14.250496864318848
    8. '```' → logprob: -14.375496864318848
    9. '\' → logprob: -14.500496864318848
    10. '("\' → logprob: -15.000496864318848

Token 285: 'no' (ID: 1750)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1122673749923706
    2. 'print' → logprob: -1.8622673749923706
    3. ' for' → logprob: -1.9872673749923706
    4. '0' → logprob: -1.9872673749923706
    5. ' ans' → logprob: -2.11226749420166
    6. 'for' → logprob: -2.73726749420166
    7. ' ' → logprob: -3.86226749420166
    8. 'ans' → logprob: -4.36226749420166
    9. ')' → logprob: -4.86226749420166
    10. ' print' → logprob: -4.98726749420166

Token 286: ' pairs' (ID: 24702)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.4796704351902008
    2. 'ans' → logprob: -1.7296704053878784
    3. ' distance' → logprob: -2.229670524597168
    4. ' index' → logprob: -3.979670524597168
    5. 'print' → logprob: -4.229670524597168
    6. ' print' → logprob: -4.354670524597168
    7. 'distance' → logprob: -4.354670524597168
    8. ')' → logprob: -4.854670524597168
    9. 'istance' → logprob: -5.354670524597168
    10. '(ans' → logprob: -5.604670524597168

Token 287: ' at' (ID: 540)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02484988607466221
    2. '(' → logprob: -3.7748498916625977
    3. ' for' → logprob: -7.149849891662598
    4. 'print' → logprob: -8.024849891662598
    5. '[' → logprob: -8.274849891662598
    6. 'from' → logprob: -8.649849891662598
    7. '1' → logprob: -10.399849891662598
    8. '(ans' → logprob: -11.774849891662598
    9. 's' → logprob: -11.899849891662598
    10. '(for' → logprob: -12.899849891662598

Token 288: ' dist' (ID: 3601)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.01903386414051056
    2. ' distance' → logprob: -4.019033908843994
    3. 'index' → logprob: -7.519033908843994
    4. 'dist' → logprob: -8.269033432006836
    5. '1' → logprob: -10.394033432006836
    6. '0' → logprob: -10.644033432006836
    7. ' index' → logprob: -11.144033432006836
    8. 's' → logprob: -11.894033432006836
    9. 'd' → logprob: -13.019033432006836
    10. ' ' → logprob: -13.019033432006836

Token 289: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0020421291701495647
    2. '[' → logprob: -6.877042293548584
    3. '=' → logprob: -7.752042293548584
    4. '0' → logprob: -8.377041816711426
    5. ' ' → logprob: -8.377041816711426
    6. 'ance' → logprob: -10.002041816711426
    7. 'index' → logprob: -10.127041816711426
    8. 's' → logprob: -11.377041816711426
    9. 'i' → logprob: -12.127041816711426
    10. 'from' → logprob: -12.127041816711426

Token 290: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5879790186882019
    2. '1' → logprob: -0.8379790186882019
    3. '=' → logprob: -4.837978839874268
    4. ' ' → logprob: -5.712978839874268
    5. 'index' → logprob: -8.212979316711426
    6. '[' → logprob: -8.337979316711426
    7. ' =' → logprob: -9.587979316711426
    8. 's' → logprob: -9.712979316711426
    9. 'ance' → logprob: -10.587979316711426
    10. 'ans' → logprob: -10.837979316711426

Token 291: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03774099797010422
    2. '1' → logprob: -4.537741184234619
    3. '[' → logprob: -5.037741184234619
    4. ' for' → logprob: -5.162741184234619
    5. '
' → logprob: -5.412741184234619
    6. ')' → logprob: -5.787741184234619
    7. '\n' → logprob: -5.787741184234619
    8. '(' → logprob: -6.912741184234619
    9. ')
' → logprob: -7.162741184234619
    10. '\' → logprob: -7.662741184234619

Token 292: ' right' (ID: 1849)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6992438435554504
    2. ' for' → logprob: -1.0742437839508057
    3. ')' → logprob: -2.4492437839508057
    4. '1' → logprob: -2.8242437839508057
    5. 'range' → logprob: -5.449244022369385
    6. 'i' → logprob: -5.949244022369385
    7. ' i' → logprob: -6.199244022369385
    8. '0' → logprob: -6.449244022369385
    9. ' range' → logprob: -6.574244022369385
    10. ' ' → logprob: -6.574244022369385

Token 293: '?)
' (ID: 90794)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12120736390352249
    2. 'for' → logprob: -2.7462074756622314
    3. ')
' → logprob: -3.2462074756622314
    4. ' for' → logprob: -4.996207237243652
    5. '
' → logprob: -6.496207237243652
    6. '1' → logprob: -6.746207237243652
    7. ',' → logprob: -7.246207237243652
    8. '\n' → logprob: -9.121207237243652
    9. ')

' → logprob: -9.246207237243652
    10. '>' → logprob: -9.496207237243652

Token 294: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014136888785287738
    2. 'print' → logprob: -6.751413822174072
    3. ' for' → logprob: -8.376413345336914
    4. '```' → logprob: -12.126413345336914
    5. 'range' → logprob: -12.626413345336914
    6. '
' → logprob: -13.251413345336914
    7. '\n' → logprob: -14.001413345336914
    8. '``' → logprob: -14.376413345336914
    9. '\' → logprob: -14.876413345336914
    10. ' print' → logprob: -15.001413345336914

Token 295: ' i' (ID: 575)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6862213611602783
    2. 'i' → logprob: -1.1862213611602783
    3. 'd' → logprob: -1.8112213611602783
    4. 'dist' → logprob: -3.9362213611602783
    5. 'distance' → logprob: -6.061221122741699
    6. ' i' → logprob: -6.436221122741699
    7. ' d' → logprob: -6.561221122741699
    8. ' k' → logprob: -6.811221122741699
    9. 's' → logprob: -7.436221122741699
    10. 'v' → logprob: -8.0612211227417

Token 296: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03506464138627052
    2. 'in' → logprob: -3.410064697265625
    3. ' ' → logprob: -6.660064697265625
    4. '  ' → logprob: -9.410064697265625
    5. '	in' → logprob: -10.410064697265625
    6. ' i' → logprob: -11.660064697265625
    7. '<|end|>' → logprob: -12.660064697265625
    8. ' n' → logprob: -13.160064697265625
    9. 'n' → logprob: -13.535064697265625
    10. '   ' → logprob: -13.535064697265625

Token 297: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001514557225164026
    2. ' range' → logprob: -9.000151634216309
    3. '(range' → logprob: -10.500151634216309
    4. 'in' → logprob: -15.625151634216309
    5. 'ans' → logprob: -15.750151634216309
    6. 'ange' → logprob: -16.000150680541992
    7. '1' → logprob: -17.125150680541992
    8. '	range' → logprob: -17.875150680541992
    9. '(ans' → logprob: -18.000150680541992
    10. '(' → logprob: -18.500150680541992

Token 298: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -3.531315314830863e-06
    2. '1' → logprob: -12.625003814697266
    3. ' (' → logprob: -16.625003814697266
    4. '(n' → logprob: -18.500003814697266
    5. '[' → logprob: -20.500003814697266
    6. '(
' → logprob: -21.625003814697266
    7. ' ' → logprob: -21.750003814697266
    8. 'n' → logprob: -22.750003814697266
    9. '   ' → logprob: -23.625003814697266
    10. '{' → logprob: -24.875003814697266

Token 299: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -9.77022064034827e-05
    2. '(' → logprob: -9.250097274780273
    3. 'ans' → logprob: -13.375097274780273
    4. ' ans' → logprob: -17.500097274780273
    5. '	ans' → logprob: -17.875097274780273
    6. ')' → logprob: -18.625097274780273
    7. ' (' → logprob: -19.000097274780273
    8. '(answer' → logprob: -19.750097274780273
    9. '1' → logprob: -20.125097274780273
    10. '_ans' → logprob: -21.000097274780273

Token 300: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.49828025698661804
    2. '):
' → logprob: -1.2482802867889404
    3. ')' → logprob: -3.2482802867889404
    4. '[' → logprob: -3.3732802867889404
    5. '1' → logprob: -3.9982802867889404
    6. ')[' → logprob: -4.623280048370361
    7. '(' → logprob: -6.748280048370361
    8. '):

' → logprob: -7.248280048370361
    9. ')>' → logprob: -7.373280048370361
    10. ':' → logprob: -7.623280048370361

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6587460041046143
    2. 'print' → logprob: -0.9087460041046143
    3. ' print' → logprob: -2.5337460041046143
    4. '	print' → logprob: -9.533745765686035
    5. '```' → logprob: -10.908745765686035
    6. ' if' → logprob: -11.658745765686035
    7. 'if' → logprob: -12.408745765686035
    8. '<|end|>' → logprob: -13.283745765686035
    9. '.print' → logprob: -13.408745765686035
    10. '#print' → logprob: -14.408745765686035

Token 302: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.059488363564014435
    2. '   ' → logprob: -3.309488296508789
    3. 'if' (adapté à ' if') → logprob: -4.434488296508789
    4. ' print' → logprob: -5.059488296508789
    5. ' if' → logprob: -5.809488296508789
    6. '```' → logprob: -12.309488296508789
    7. '	print' → logprob: -12.434488296508789
    8. 'prin' → logprob: -15.434488296508789
    9. 'pr' → logprob: -15.559488296508789
    10. '	if' → logprob: -15.684488296508789

Token 303: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1388452649116516
    2. 'ans' → logprob: -2.263845205307007
    3. ' i' → logprob: -3.888845205307007
    4. ' ans' → logprob: -5.263845443725586
    5. '(ans' → logprob: -11.263845443725586
    6. ' ' → logprob: -11.513845443725586
    7. '	ans' → logprob: -11.888845443725586
    8. '   ' → logprob: -12.138845443725586
    9. '1' → logprob: -13.013845443725586
    10. '  ' → logprob: -13.513845443725586

Token 304: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.06014005094766617
    2. ' >' → logprob: -3.4351401329040527
    3. '!=' → logprob: -4.435140132904053
    4. '==' → logprob: -4.560140132904053
    5. '>=' → logprob: -5.935140132904053
    6. ' !=' → logprob: -7.310140132904053
    7. ' ==' → logprob: -7.810140132904053
    8. ' >=' → logprob: -10.060139656066895
    9. ':' → logprob: -10.560139656066895
    10. ' ' → logprob: -11.435139656066895

Token 305: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -17.750024795532227
    4. '1' → logprob: -18.500024795532227
    5. '۰' → logprob: -19.000024795532227
    6. '  ' → logprob: -19.187524795532227
    7. '
' → logprob: -19.437524795532227
    8. ' ' → logprob: -19.687524795532227
    9. '０' → logprob: -19.687524795532227
    10. '  ' → logprob: -19.750024795532227

Token 306: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -18.625017166137695
    4. '1' → logprob: -19.562517166137695
    5. '  ' → logprob: -19.562517166137695
    6. '۰' → logprob: -19.625017166137695
    7. 'zero' → logprob: -20.250017166137695
    8. '00' → logprob: -20.562517166137695
    9. '０' → logprob: -20.875017166137695
    10. '=' → logprob: -21.375017166137695

Token 307: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11780791729688644
    2. '   ' → logprob: -2.4928078651428223
    3. ':
' → logprob: -4.242807865142822
    4. '       ' → logprob: -4.492807865142822
    5. 'continue' → logprob: -6.742807865142822
    6. '	continue' → logprob: -6.742807865142822
    7. ' continue' → logprob: -7.992807865142822
    8. ' ' → logprob: -8.86780834197998
    9. ':
' → logprob: -11.36780834197998
    10. '           ' → logprob: -11.86780834197998

Token 308: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04709675535559654
    2. '   ' → logprob: -3.2970967292785645
    3. 'continue' → logprob: -5.4220967292785645
    4. ' continue' → logprob: -5.6720967292785645
    5. '	continue' → logprob: -7.0470967292785645
    6. '	   ' → logprob: -8.547097206115723
    7. '
' → logprob: -9.797097206115723
    8. '	' → logprob: -11.672097206115723
    9. '     ' → logprob: -12.672097206115723
    10. ' ' → logprob: -12.797097206115723

Token 309: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006451743189245462
    2. 'print' → logprob: -5.381451606750488
    3. ' print' → logprob: -6.631451606750488
    4. '
' → logprob: -7.756451606750488
    5. '    
' → logprob: -10.256451606750488
    6. '       ' → logprob: -10.381451606750488
    7. '	print' → logprob: -12.381451606750488
    8. '<|end|>' → logprob: -12.506451606750488
    9. '\n' → logprob: -13.006451606750488
    10. '```' → logprob: -13.131451606750488

Token 310: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.313379168510437
    2. '   ' → logprob: -1.313379168510437
    3. '```' → logprob: -9.313379287719727
    4. ' print' → logprob: -10.688379287719727
    5. '	print' → logprob: -13.063379287719727
    6. '``' → logprob: -13.438379287719727
    7. '       ' → logprob: -14.688379287719727
    8. '`' → logprob: -16.188379287719727
    9. '
' → logprob: -16.313379287719727
    10. ' ' → logprob: -16.438379287719727

Token 311: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005249887239187956
    2. '   ' → logprob: -5.255249977111816
    3. ' print' → logprob: -11.505249977111816
    4. '```' → logprob: -12.130249977111816
    5. '	print' → logprob: -15.005249977111816
    6. '``' → logprob: -15.380249977111816
    7. '       ' → logprob: -17.1302490234375
    8. ' ' → logprob: -18.7552490234375
    9. '`' → logprob: -19.5052490234375
    10. '.print' → logprob: -19.8802490234375

Token 312: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.001170460251159966
    2. 'ans' → logprob: -6.751170635223389
    3. '	ans' → logprob: -16.501171112060547
    4. '(i' → logprob: -17.001171112060547
    5. ' ans' → logprob: -17.626171112060547
    6. '(' → logprob: -17.876171112060547
    7. '(an' → logprob: -20.251171112060547
    8. '(
' → logprob: -20.501171112060547
    9. '_ans' → logprob: -20.626171112060547
    10. '(f' → logprob: -21.001171112060547

Token 313: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.7372048862162046e-05
    2. '[' → logprob: -10.625027656555176
    3. ')[' → logprob: -13.625027656555176
    4. '(i' → logprob: -13.875027656555176
    5. ')' → logprob: -14.750027656555176
    6. ' [' → logprob: -15.875027656555176
    7. '[
' → logprob: -16.12502670288086
    8. '[I' → logprob: -17.62502670288086
    9. '```' → logprob: -17.87502670288086
    10. 'i' → logprob: -17.87502670288086

Token 314: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. '])' → logprob: -12.875004768371582
    3. '))' → logprob: -14.125004768371582
    4. '})' → logprob: -15.000004768371582
    5. ')
' → logprob: -15.750004768371582
    6. ')`' → logprob: -15.750004768371582
    7. ' )' → logprob: -15.875004768371582
    8. ')i' → logprob: -16.750003814697266
    9. ')")' → logprob: -17.000003814697266
    10. '`)' → logprob: -17.250003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 312
Tokens correctement prédits (1ère position, stricte): 92
Tokens correctement prédits (1ère position, avec adaptation): 95
Tokens correctement prédits (top 10): 211
Précision stricte (1ère position): 29.49%
Précision adaptée (1ère position): 30.45%
Précision (top 10): 67.63%
================================================================================
