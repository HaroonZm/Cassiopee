================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:39:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math  # Ce module fournit des fonctions mathématiques de base, comme sqrt, sin, pi, etc.
import string  # Permet de manipuler des chaînes de caractères, notamment les constantes comme ascii_letters.
import itertools  # Fournit des outils pour créer des itérateurs complexes (combinations, permutations...)
import fractions  # Permet de manipuler des fractions rationnelles.
import heapq  # Fournit une implémentation efficace de la structure de données heap (file de priorité).
import collections  # Contient des types de données spécialisés comme deque, Counter, defaultdict, etc.
import re  # Sert à travailler avec les expressions régulières.
import array  # Fournit un type tableau efficace pour stocker des données numériques.
import bisect  # Aide à manipuler des listes triées, ajoute ou cherche efficacement.
import sys  # Fournit des variables et fonctions propres à l'interpréteur (comme stdin, exit...).
import copy  # Permet de copier des objets (profondément ou non).
import functools  # Fournit des outils pour programmer avec des fonctions de haut niveau.
import time  # Permet de manipuler le temps et les délais.
import random  # Génère des nombres pseudo-aléatoires.

# Modifie la limite maximale de récursion autorisée par Python
sys.setrecursionlimit(10**7)  # Cela permet d'éviter que le programme ne plante lorsqu'il effectue une grande récursion

inf = 10**20  # Une valeur représentant un "infini" pour les comparaisons ou bornes supérieures.
eps = 1.0 / 10**10  # Une petite valeur, utile pour comparer des nombres à virgule flottante.
mod = 10**9+7  # Un modulo couramment utilisé dans de nombreux problèmes de programmation compétitive.
mod2 = 998244353  # Un autre modulo très utilisé en algorithmie compétitive.

# Définition d'une liste de couples représentant les 4 directions cardinales (-1 pour haut, puis droite, bas, gauche).
dd = [(-1,0),(0,1),(1,0),(0,-1)]
# Définition d'une liste de couples représentant les 8 directions d'une matrice (toutes les directions autour d'un point).
ddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]

# Fonction qui lit une ligne depuis l'entrée standard, coupe la chaîne en morceaux par espace,
# transforme chaque morceau en un entier, et construit une liste.
def LI():
    return list(map(int, sys.stdin.readline().split()))

# Fonction qui lit chaque ligne restante de l'entrée standard, coupe les morceaux par espace,
# transforme chaque morceau en un entier, retourne une liste de listes.
def LLI():
    return [list(map(int, l.split())) for l in sys.stdin.readlines()]

# Semblable à LI, mais retourne des entiers décrémentés (pour compter à partir de zéro).
def LI_():
    return [int(x)-1 for x in sys.stdin.readline().split()]

# Fonction qui lit une ligne depuis l'entrée standard, la coupe en morceaux, 
# et transforme chaque morceau en flottant.
def LF():
    return [float(x) for x in sys.stdin.readline().split()]

# Fonction qui lit une ligne depuis l'entrée standard et la coupe en morceaux (sur les espaces).
def LS():
    return sys.stdin.readline().split()

# Avant d'utiliser "I", on lit une ligne, puis on la convertit en entier.
def I():
    return int(sys.stdin.readline())

# Pareil, mais pour un nombre flottant
def F():
    return float(sys.stdin.readline())

# Retourne simplement l'entrée de l'utilisateur (ligne lue), sous forme de chaîne.
def S():
    return input()

# Affiche la valeur "s" en forçant le flush du buffer d'affichage. Utile pour interagir avec des juges automatiques.
def pf(s):
    return print(s, flush=True)

# Affiche la valeur "s" mais dans le flux d’erreur standard (stderr).
def pe(s):
    return print(str(s), file=sys.stderr)

# Prend une séquence "a" et une chaîne "sep" (séparateur). Convertit chaque élément de "a" en chaîne,
# puis les concatène avec le séparateur.
def JA(a, sep):
    return sep.join(map(str, a))

# Pour une liste de listes "a", entrelace les valeurs de chaque sous-liste avec "t", puis chaque bloc avec "s".
def JAA(a, s, t):
    return s.join(t.join(map(str, b)) for b in a)

# Fonction principale du programme
def main():
    # Lecture de deux entiers à partir de l'entrée standard :
    n, m = LI()  # n est typiquement la taille d'un intervalle général, m le nombre d'intervalles à considérer

    # Lecture des m intervalles, chaque intervalle étant un triplet [l, r, c].
    # On les trie par trois critères : 'l' croissant, puis 'c' croissant, puis 'r' décroissant.
    lrc = sorted([LI() for _ in range(m)], key=lambda x: (x[0], x[2], -x[1]))

    # On ajoute à la fin un intervalle factice contenant des valeurs de "l", "r", "c" très grandes (pour bloquer les boucles plus loin).
    lrc.append([inf, inf, inf])

    # Initialisation d'un indice pour parcourir la liste lrc
    i = 0

    # On crée une liste q de tuples : chaque tuple a la forme (position, coût minimal pour atteindre cette position)
    # On part avec (1,0), indiquant qu'on est à la position 1 avec un coût 0. (inf, inf) est un "garde-fou".
    q = [(1,0), (inf, inf)]

    # Parcours chaque position "l" de 1 (compris) à n-1 (exclu)
    for l in range(1, n):
        # Tant que lrc[i][0] < l, on saute les intervalles qui commencent avant "l"
        while lrc[i][0] < l:
            i += 1
        # Pour chaque intervalle qui commence exactement à "l"
        while lrc[i][0] == l:
            # On extrait "r" et "c" de cet intervalle
            _, r, c = lrc[i]
            i += 1  # On passe à l'intervalle suivant pour la prochaine itération

            # On cherche l'indice dans q où se trouve un intervalle couvrant "l" 
            # bisect.bisect_left cherche le premier élément >= (l, -1) (le -1 n'est là que pour l'ordre lexicographique)
            qi = bisect.bisect_left(q, (l, -1))
            _, cc = q[qi]  # cc : le coût minimal pour atteindre l

            # On prépare une nouvelle transition vers la position "r" avec le nouveau coût
            t = (r, cc + c)

            # On recherche où insérer ce nouveau tuple (r, nouveau coût total obtenu) dans q
            ti = bisect.bisect_left(q, t)

            # Si à l'endroit où on veut insérer, le coût existant est plus élevé, 
            # et si la plage précédente couvre le point de départ de notre nouvel intervalle
            if q[ti][1] > t[1] and q[ti-1][0] < r:
                # Si l'intervalle arriverait exactement en r, on le met à jour
                if q[ti][0] == r:
                    q[ti] = t
                else:
                    # Sinon, on insère le nouvel intervalle à la bonne place
                    q.insert(ti, t)
                # On retire tous les intervalles dont le coût qui précède celui-ci est pire,
                # pour conserver la structure de la liste q ordonnée avec les meilleurs coûts uniquement
                while q[ti-1][1] > t[1]:
                    del q[ti-1]
                    ti -= 1  # On recule pour continuer la vérification si besoin

    # À la fin, on cherche parmi les entrées de q la dernière position atteinte
    t = q[-2]  # On regarde l'avant dernier car le dernier est (inf, inf)
    # Si la position atteinte est strictement avant n, c'est qu'on ne peut pas construire une solution complète
    if t[0] < n:
        return -1  # Cas d'impossibilité

    # Sinon, on retourne le coût minimal pour atteindre la fin
    return t[1]

# On exécute la fonction principale et on affiche le résultat
print(main())
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0002737330214586109
    2. '\' → logprob: -9.125273704528809
    3. '\n' → logprob: -9.875273704528809
    4. 'import' → logprob: -10.625273704528809
    5. '```' → logprob: -10.875273704528809
    6. '.e' → logprob: -11.250273704528809
    7. '.pi' → logprob: -11.375273704528809
    8. '<|end|>' → logprob: -12.125273704528809
    9. '.\' → logprob: -12.250273704528809
    10. '.

' → logprob: -12.875273704528809

Token 4: ' Ce' (ID: 14228)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5940733551979065
    2. '.' → logprob: -0.9690733551979065
    3. '.sqrt' → logprob: -3.8440732955932617
    4. ' .' → logprob: -4.094073295593262
    5. ' import' → logprob: -5.094073295593262
    6. ' math' → logprob: -5.594073295593262
    7. ' sqrt' → logprob: -5.969073295593262
    8. '<|end|>' → logprob: -6.219073295593262
    9. 'cmath' → logprob: -6.219073295593262
    10. ' is' → logprob: -6.594073295593262

Token 5: ' module' (ID: 8827)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4186265766620636
    2. 'r' → logprob: -1.4186265468597412
    3. '#' → logprob: -3.543626546859741
    4. 'n' → logprob: -4.16862678527832
    5. 'le' → logprob: -4.66862678527832
    6. 'm' → logprob: -4.91862678527832
    7. ' #' → logprob: -4.91862678527832
    8. 'a' → logprob: -5.16862678527832
    9. 'il' → logprob: -5.41862678527832
    10. 'd' → logprob: -5.91862678527832

Token 6: ' fournit' (ID: 123615)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2682175934314728
    2. 's' → logprob: -3.3932175636291504
    3. ' permet' → logprob: -3.3932175636291504
    4. 'n' → logprob: -3.8932175636291504
    5. ' est' → logprob: -3.8932175636291504
    6. 'space' → logprob: -3.8932175636291504
    7. ' contient' → logprob: -4.01821756362915
    8. ' fournit' → logprob: -4.14321756362915
    9. ' space' → logprob: -4.51821756362915
    10. '.' → logprob: -4.64321756362915

Token 7: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.033443741500377655
    2. ' ' → logprob: -4.033443927764893
    3. 'des' → logprob: -4.533443927764893
    4. 's' → logprob: -6.283443927764893
    5. ' les' → logprob: -6.658443927764893
    6. ' ' → logprob: -7.783443927764893
    7. ' une' → logprob: -8.283443450927734
    8. 'les' → logprob: -8.533443450927734
    9. ' l' → logprob: -9.283443450927734
    10. ' la' → logprob: -9.783443450927734

Token 8: ' fonctions' (ID: 87283)
  Prédit: 'fon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fon' → logprob: -0.22600114345550537
    2. ' fonctions' → logprob: -1.7260011434555054
    3. 'fonction' → logprob: -3.976001262664795
    4. ' ' → logprob: -6.101001262664795
    5. ' constantes' → logprob: -6.851001262664795
    6. 'f' → logprob: -7.476001262664795
    7. ' fonctionnalités' → logprob: -7.726001262664795
    8. '   ' → logprob: -8.476000785827637
    9. '```' → logprob: -8.476000785827637
    10. 'const' → logprob: -9.101000785827637

Token 9: ' math' (ID: 13324)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7845683693885803
    2. '_' → logprob: -1.1595683097839355
    3. '.' → logprob: -3.0345683097839355
    4. ',' → logprob: -3.0345683097839355
    5. 'es' → logprob: -3.0345683097839355
    6. 's' → logprob: -3.4095683097839355
    7. '  ' → logprob: -4.4095683097839355
    8. ' math' → logprob: -5.0345683097839355
    9. 'import' → logprob: -5.0345683097839355
    10. '<|end|>' → logprob: -5.1595683097839355

Token 10: 'ématiques' (ID: 114734)
  Prédit: 'ématiques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ématiques' → logprob: -0.0014078515814617276
    2. 'ématique' → logprob: -7.251407623291016
    3. '.' → logprob: -7.626407623291016
    4. 'ém' → logprob: -9.626407623291016
    5. 'm' → logprob: -9.751407623291016
    6. '```' → logprob: -10.001407623291016
    7. 'mat' → logprob: -11.626407623291016
    8. '`' → logprob: -12.251407623291016
    9. '.com' → logprob: -12.626407623291016
    10. 'étiques' → logprob: -12.626407623291016

Token 11: ' de' (ID: 334)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1788661777973175
    2. 'import' → logprob: -2.428866147994995
    3. '\' → logprob: -3.303866147994995
    4. ',' → logprob: -4.678866386413574
    5. '\n' → logprob: -4.928866386413574
    6. '
' → logprob: -4.928866386413574
    7. '```' → logprob: -5.303866386413574
    8. '<|end|>' → logprob: -5.553866386413574
    9. '.import' → logprob: -6.928866386413574
    10. ' ' → logprob: -7.428866386413574

Token 12: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.006318135652691126
    2. ' base' → logprob: -5.506318092346191
    3. 'import' → logprob: -7.381318092346191
    4. 'la' → logprob: -7.631318092346191
    5. 'bas' → logprob: -7.631318092346191
    6. 'b' → logprob: -8.381318092346191
    7. 'calcul' → logprob: -9.131318092346191
    8. 'bases' → logprob: -9.381318092346191
    9. 'Base' → logprob: -10.381318092346191
    10. 'Python' → logprob: -10.381318092346191

Token 13: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9355045557022095
    2. 'import' → logprob: -1.1855045557022095
    3. '\' → logprob: -2.18550443649292
    4. ',' → logprob: -2.81050443649292
    5. '
' → logprob: -3.31050443649292
    6. '\n' → logprob: -3.81050443649292
    7. '<|end|>' → logprob: -3.81050443649292
    8. ' ' → logprob: -4.06050443649292
    9. '```' → logprob: -4.43550443649292
    10. '

' → logprob: -5.68550443649292

Token 14: ' comme' (ID: 7971)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6537016034126282
    2. 'import' → logprob: -1.7787015438079834
    3. '.' → logprob: -2.1537015438079834
    4. ' ' → logprob: -2.5287015438079834
    5. ' ,' → logprob: -2.9037015438079834
    6. ' telles' → logprob: -3.7787015438079834
    7. '<|end|>' → logprob: -4.1537017822265625
    8. ' import' → logprob: -4.6537017822265625
    9. ' .' → logprob: -5.4037017822265625
    10. 'es' → logprob: -6.6537017822265625

Token 15: ' sqrt' (ID: 44237)
  Prédit: '.sin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sin' → logprob: -0.7129992842674255
    2. '.sqrt' → logprob: -1.0879993438720703
    3. '.' → logprob: -2.5879993438720703
    4. 'sin' → logprob: -2.8379993438720703
    5. '.pow' → logprob: -4.71299934387207
    6. 'sqrt' → logprob: -4.71299934387207
    7. '.log' → logprob: -5.08799934387207
    8. '.pi' → logprob: -5.71299934387207
    9. '.cos' → logprob: -6.21299934387207
    10. '.s' → logprob: -6.46299934387207

Token 16: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07797124236822128
    2. '.' → logprob: -3.2029712200164795
    3. '\' → logprob: -4.577971458435059
    4. ',' → logprob: -4.702971458435059
    5. 'import' → logprob: -5.202971458435059
    6. '\n' → logprob: -5.952971458435059
    7. ' (' → logprob: -6.077971458435059
    8. ')' → logprob: -6.577971458435059
    9. '```' → logprob: -7.452971458435059
    10. '(
' → logprob: -7.702971458435059

Token 17: ' sin' (ID: 2187)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5634496808052063
    2. '(' → logprob: -0.9384496808052063
    3. '.' → logprob: -3.5634496212005615
    4. ' (' → logprob: -4.813449859619141
    5. ' ,' → logprob: -7.563449859619141
    6. '()' → logprob: -7.563449859619141
    7. ')' → logprob: -8.06344985961914
    8. '```' → logprob: -8.43844985961914
    9. ' .' → logprob: -8.56344985961914
    10. ' ' → logprob: -9.18844985961914

Token 18: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4791651666164398
    2. ',' → logprob: -0.9791651964187622
    3. ')' → logprob: -5.604165077209473
    4. '.' → logprob: -8.604165077209473
    5. '(
' → logprob: -8.604165077209473
    6. 'e' → logprob: -8.854165077209473
    7. ' (' → logprob: -9.104165077209473
    8. ' ' → logprob: -9.104165077209473
    9. '()' → logprob: -9.104165077209473
    10. 's' → logprob: -9.479165077209473

Token 19: ' pi' (ID: 6404)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cos' → logprob: -0.4831887483596802
    2. ',' → logprob: -1.3581887483596802
    3. ' cos' → logprob: -2.2331886291503906
    4. ' ' → logprob: -4.733188629150391
    5. ' ,' → logprob: -5.983188629150391
    6. '_cos' → logprob: -6.108188629150391
    7. ' et' → logprob: -6.233188629150391
    8. ' cosine' → logprob: -7.483188629150391
    9. 'os' → logprob: -8.10818862915039
    10. ' and' → logprob: -8.23318862915039

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9096943736076355
    2. '.' → logprob: -1.0346944332122803
    3. '\' → logprob: -2.6596944332122803
    4. '<|end|>' → logprob: -3.0346944332122803
    5. 'import' → logprob: -3.1596944332122803
    6. '\n' → logprob: -3.4096944332122803
    7. ' ' → logprob: -4.284694194793701
    8. '
' → logprob: -4.659694194793701
    9. '#' → logprob: -4.909694194793701
    10. ')' → logprob: -5.909694194793701

Token 21: ' etc' (ID: 5178)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30901163816452026
    2. ' cos' → logprob: -1.809011697769165
    3. 'cos' → logprob: -3.184011697769165
    4. ' etc' → logprob: -3.809011697769165
    5. ' ,' → logprob: -3.934011697769165
    6. ' ' → logprob: -5.184011459350586
    7. ' et' → logprob: -5.559011459350586
    8. ' and' → logprob: -6.684011459350586
    9. ')' → logprob: -6.934011459350586
    10. 'et' → logprob: -7.309011459350586

Token 22: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8267595767974854
    2. ',' → logprob: -1.3267595767974854
    3. ' ' → logprob: -2.7017595767974854
    4. 'import' → logprob: -2.7017595767974854
    5. '<|end|>' → logprob: -2.7017595767974854
    6. '\' → logprob: -3.4517595767974854
    7. '\n' → logprob: -3.9517595767974854
    8. '
' → logprob: -4.326759338378906
    9. '#' → logprob: -4.576759338378906
    10. '' → logprob: -4.951759338378906

Token 23: 'import' (ID: 561)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: ' string' (ID: 1621)
  Prédit: ' random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' random' → logprob: -0.452604740858078
    2. ' os' → logprob: -1.3276047706604004
    3. ' numpy' → logprob: -2.8276047706604004
    4. ' sys' → logprob: -3.4526047706604004
    5. ' cm' → logprob: -5.5776047706604
    6. 'random' → logprob: -5.8276047706604
    7. ' statistics' → logprob: -7.9526047706604
    8. 'os' → logprob: -8.202604293823242
    9. ' ' → logprob: -8.452604293823242
    10. 'cmath' → logprob: -8.952604293823242

Token 25: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9459859132766724
    2. '

' → logprob: -1.6959859132766724
    3. '<|end|>' → logprob: -1.6959859132766724
    4. ' ' → logprob: -2.695985794067383
    5. ',' → logprob: -2.945985794067383
    6. 'import' → logprob: -3.320985794067383
    7. ' 

' → logprob: -3.570985794067383
    8. '#' → logprob: -3.945985794067383
    9. '<|end|>' → logprob: -4.695985794067383
    10. ' 
' → logprob: -4.820985794067383

Token 26: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: ' Perm' (ID: 20550)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6032223105430603
    2. ' ' → logprob: -1.478222370147705
    3. ' string' → logprob: -1.978222370147705
    4. ' math' → logprob: -3.603222370147705
    5. 'import' → logprob: -4.103222370147705
    6. ' Ce' → logprob: -4.228222370147705
    7. ' from' → logprob: -5.478222370147705
    8. 'string' → logprob: -5.603222370147705
    9. ' os' → logprob: -5.978222370147705
    10. ' This' → logprob: -6.228222370147705

Token 28: 'et' (ID: 292)
  Prédit: 'et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.0002819544170051813
    2. 'ett' → logprob: -8.250282287597656
    3. 't' → logprob: -11.750282287597656
    4. 'e' → logprob: -11.875282287597656
    5. 'ets' → logprob: -12.625282287597656
    6. '#' → logprob: -13.875282287597656
    7. '```' → logprob: -15.500282287597656
    8. 'a' → logprob: -15.875282287597656
    9. 'ut' → logprob: -16.125282287597656
    10. 'ret' → logprob: -16.625282287597656

Token 29: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.10525703430175781
    2. ' ' → logprob: -2.480257034301758
    3. ' de' → logprob: -4.480257034301758
    4. 'd' → logprob: -6.230257034301758
    5. ' l' → logprob: -6.480257034301758
    6. ' ' → logprob: -8.480257034301758
    7. '  ' → logprob: -8.730257034301758
    8. ' la' → logprob: -8.855257034301758
    9. 'l' → logprob: -8.980257034301758
    10. '   ' → logprob: -8.980257034301758

Token 30: ' manip' (ID: 20526)
  Prédit: ' manip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' manip' → logprob: -0.32439079880714417
    2. ' travailler' → logprob: -2.1993908882141113
    3. 'man' → logprob: -3.0743908882141113
    4. 'tr' → logprob: -3.4493908882141113
    5. ' gérer' → logprob: -3.6993908882141113
    6. ' traiter' → logprob: -4.199390888214111
    7. 'g' → logprob: -4.574390888214111
    8. ' génér' → logprob: -4.699390888214111
    9. ' accéder' → logprob: -5.824390888214111
    10. 'import' → logprob: -5.949390888214111

Token 31: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.008094760589301586
    2. 'ul' → logprob: -5.383094787597656
    3. 'ulation' → logprob: -6.258094787597656
    4. 'u' → logprob: -7.133094787597656
    5. 'ule' → logprob: -9.133094787597656
    6. '```' → logprob: -9.133094787597656
    7. 'import' → logprob: -9.508094787597656
    8. 'ulations' → logprob: -9.633094787597656
    9. 'ulator' → logprob: -9.883094787597656
    10. 'ulers' → logprob: -10.383094787597656

Token 32: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6710096597671509
    2. ' des' → logprob: -1.0460096597671509
    3. 's' → logprob: -3.0460095405578613
    4. ' les' → logprob: -3.1710095405578613
    5. ' string' → logprob: -3.9210095405578613
    6. '<|end|>' → logprob: -4.921009540557861
    7. 'string' → logprob: -5.046009540557861
    8. 'des' → logprob: -5.546009540557861
    9. ' l' → logprob: -5.671009540557861
    10. 'les' → logprob: -6.171009540557861

Token 33: ' chaînes' (ID: 179904)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2055341005325317
    2. ' chaînes' → logprob: -1.3305341005325317
    3. 's' → logprob: -1.5805341005325317
    4. ' string' → logprob: -3.080533981323242
    5. ' s' → logprob: -3.330533981323242
    6. 'l' → logprob: -3.580533981323242
    7. ' l' → logprob: -3.830533981323242
    8. 'texte' → logprob: -3.955533981323242
    9. 'chaine' → logprob: -4.455533981323242
    10. 'string' → logprob: -4.580533981323242

Token 34: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2743760049343109
    2. ',' → logprob: -2.1493759155273438
    3. 's' → logprob: -3.1493759155273438
    4. '_' → logprob: -3.3993759155273438
    5. 'de' → logprob: -3.5243759155273438
    6. '.' → logprob: -4.899375915527344
    7. '_de' → logprob: -5.649375915527344
    8. 'es' → logprob: -5.649375915527344
    9. 'import' → logprob: -7.024375915527344
    10. ' ' → logprob: -7.399375915527344

Token 35: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.002881191670894623
    2. ' caractères' → logprob: -5.877881050109863
    3. 'texte' → logprob: -10.377881050109863
    4. '```' → logprob: -10.752881050109863
    5. 'c' → logprob: -12.502881050109863
    6. ' ' → logprob: -12.627881050109863
    7. 'chars' → logprob: -12.752881050109863
    8. 'char' → logprob: -13.002881050109863
    9. '  ' → logprob: -13.377881050109863
    10. 'import' → logprob: -13.377881050109863

Token 36: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5692462921142578
    2. '
' → logprob: -1.1942462921142578
    3. '#' → logprob: -2.694246292114258
    4. 'import' → logprob: -3.319246292114258
    5. ' 

' → logprob: -4.819246292114258
    6. '


' → logprob: -5.069246292114258
    7. ' ' → logprob: -6.069246292114258
    8. '```' → logprob: -6.069246292114258
    9. '<|end|>' → logprob: -6.319246292114258
    10. '



' → logprob: -6.569246292114258

Token 37: ' notamment' (ID: 31782)
  Prédit: ' notamment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' notamment' → logprob: -0.9446163773536682
    2. ' ' → logprob: -1.5696163177490234
    3. '<|end|>' → logprob: -1.9446163177490234
    4. 'import' → logprob: -2.5696163177490234
    5. ' telles' → logprob: -2.9446163177490234
    6. ' des' → logprob: -3.5696163177490234
    7. ' such' → logprob: -4.444616317749023
    8. ' comme' → logprob: -4.569616317749023
    9. ' #' → logprob: -4.944616317749023
    10. '#' → logprob: -5.069616317749023

Token 38: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.9463326334953308
    2. ' ' → logprob: -1.1963326930999756
    3. 'les' → logprob: -2.1963326930999756
    4. ' des' → logprob: -2.9463326930999756
    5. ' l' → logprob: -3.0713326930999756
    6. ' la' → logprob: -3.8213326930999756
    7. 'pun' → logprob: -4.6963324546813965
    8. 'des' → logprob: -5.0713324546813965
    9. 'l' → logprob: -5.0713324546813965
    10. ' pour' → logprob: -5.1963324546813965

Token 39: ' constantes' (ID: 125561)
  Prédit: ' lettres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lettres' → logprob: -0.7752671837806702
    2. ' ascii' → logprob: -1.6502671241760254
    3. 'ascii' → logprob: -2.4002671241760254
    4. 'pun' → logprob: -3.0252671241760254
    5. ' ' → logprob: -3.1502671241760254
    6. ' espaces' → logprob: -3.2752671241760254
    7. ' maj' → logprob: -4.275267124176025
    8. ' caractères' → logprob: -4.275267124176025
    9. 's' → logprob: -4.650267124176025
    10. ' minus' → logprob: -4.775267124176025

Token 40: ' comme' (ID: 7971)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0846728086471558
    2. 'import' → logprob: -1.4596728086471558
    3. ' ' → logprob: -1.9596728086471558
    4. '_' → logprob: -2.3346729278564453
    5. ',' → logprob: -2.4596729278564453
    6. '<|end|>' → logprob: -2.9596729278564453
    7. 'abcdefghijklmnopqrstuvwxyz' → logprob: -4.584672927856445
    8. ' import' → logprob: -4.834672927856445
    9. 's' → logprob: -4.959672927856445
    10. ' ,' → logprob: -4.959672927856445

Token 41: ' ascii' (ID: 104363)
  Prédit: ' string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.3597426414489746
    2. 'string' → logprob: -1.7347426414489746
    3. 'ascii' → logprob: -2.7347426414489746
    4. ' ascii' → logprob: -2.8597426414489746
    5. ''' → logprob: -6.984742641448975
    6. ' punctuation' → logprob: -6.984742641448975
    7. ' '' → logprob: -7.609742641448975
    8. ' ' → logprob: -7.734742641448975
    9. 'pun' → logprob: -8.109743118286133
    10. '```' → logprob: -9.109743118286133

Token 42: '_letters' (ID: 175934)
  Prédit: '_letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letters' → logprob: -0.1444736272096634
    2. '_lower' → logprob: -2.6444735527038574
    3. '_' → logprob: -3.1444735527038574
    4. '_upper' → logprob: -3.8944735527038574
    5. '_le' → logprob: -11.269474029541016
    6. 'letters' → logprob: -11.269474029541016
    7. '_chars' → logprob: -12.644474029541016
    8. '_constants' → logprob: -13.519474029541016
    9. '_

' → logprob: -14.394474029541016
    10. '_letter' → logprob: -14.644474029541016

Token 43: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5584984421730042
    2. '

' → logprob: -1.4334983825683594
    3. '#' → logprob: -2.1834983825683594
    4. 'import' → logprob: -3.8084983825683594
    5. ' ' → logprob: -4.433498382568359
    6. ',' → logprob: -4.933498382568359
    7. '\n' → logprob: -4.933498382568359
    8. '' → logprob: -5.433498382568359
    9. ' 

' → logprob: -5.433498382568359
    10. '```' → logprob: -5.433498382568359

Token 44: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4453757405281067
    2. '

' → logprob: -1.445375680923462
    3. '#' → logprob: -2.945375680923462
    4. 'import' → logprob: -4.320375919342041
    5. '\n' → logprob: -4.570375919342041
    6. '' → logprob: -4.695375919342041
    7. ' ' → logprob: -5.070375919342041
    8. '\' → logprob: -5.320375919342041
    9. '```' → logprob: -5.320375919342041
    10. ' 

' → logprob: -5.445375919342041

Token 45: ' itertools' (ID: 103178)
  Prédit: ' random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' random' → logprob: -0.10519566386938095
    2. ' os' → logprob: -2.4801957607269287
    3. ' re' → logprob: -4.23019552230835
    4. ' sys' → logprob: -7.35519552230835
    5. ' collections' → logprob: -8.105195999145508
    6. ' itertools' → logprob: -8.605195999145508
    7. ' ' → logprob: -8.855195999145508
    8. 'random' → logprob: -9.105195999145508
    9. ' datetime' → logprob: -9.355195999145508
    10. ' json' → logprob: -10.105195999145508

Token 46: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11991237848997116
    2. ' 
' → logprob: -3.4949123859405518
    3. ' 

' → logprob: -3.7449123859405518
    4. ' as' → logprob: -3.7449123859405518
    5. '#' → logprob: -4.869912147521973
    6. ' #' → logprob: -5.369912147521973
    7. 'import' → logprob: -5.619912147521973
    8. '<|end|>' → logprob: -5.619912147521973
    9. '
' → logprob: -6.119912147521973
    10. '.' → logprob: -6.119912147521973

Token 47: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.388998806476593
    2. '#' → logprob: -1.3889987468719482
    3. ' 
' → logprob: -4.138998985290527
    4. '  
' → logprob: -4.138998985290527
    5. ' #' → logprob: -4.138998985290527
    6. '<|end|>' → logprob: -5.138998985290527
    7. ' as' → logprob: -5.638998985290527
    8. ' 

' → logprob: -5.763998985290527
    9. 'import' → logprob: -6.013998985290527
    10. '
' → logprob: -6.138998985290527

Token 48: ' Fourn' (ID: 177490)
  Prédit: ' Perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Perm' → logprob: -1.2290457487106323
    2. ' import' → logprob: -1.9790457487106323
    3. ' ' → logprob: -2.229045867919922
    4. ' permutations' → logprob: -2.229045867919922
    5. ' from' → logprob: -2.854045867919922
    6. ' itertools' → logprob: -3.229045867919922
    7. 'import' → logprob: -3.354045867919922
    8. 'per' → logprob: -3.354045867919922
    9. ' #' → logprob: -3.604045867919922
    10. '#' → logprob: -3.729045867919922

Token 49: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -2.3199920178740285e-05
    2. ' it' → logprob: -11.875022888183594
    3. 'ir' → logprob: -12.375022888183594
    4. 'rit' → logprob: -12.625022888183594
    5. 'et' → logprob: -13.500022888183594
    6. '```' → logprob: -13.625022888183594
    7. 't' → logprob: -13.750022888183594
    8. 'ît' → logprob: -14.500022888183594
    9. 'i' → logprob: -14.625022888183594
    10. 'issant' → logprob: -14.750022888183594

Token 50: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.051183976233005524
    2. 'des' → logprob: -3.0511839389801025
    3. ' ' → logprob: -6.426184177398682
    4. '<|end|>' → logprob: -8.176183700561523
    5. 's' → logprob: -8.676183700561523
    6. '_des' → logprob: -8.926183700561523
    7. ' de' → logprob: -9.676183700561523
    8. 'tools' → logprob: -10.051183700561523
    9. ' diverses' → logprob: -10.051183700561523
    10. ' un' → logprob: -10.301183700561523

Token 51: ' outils' (ID: 63365)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.10165068507194519
    2. 'fon' → logprob: -2.8516507148742676
    3. ' outils' → logprob: -3.9766507148742676
    4. ' fonctions' → logprob: -4.476650714874268
    5. 'fonction' → logprob: -5.976650714874268
    6. 'tools' → logprob: -5.976650714874268
    7. 'outil' → logprob: -6.976650714874268
    8. 'to' → logprob: -7.476650714874268
    9. 'it' → logprob: -8.22665023803711
    10. ' out' → logprob: -8.35165023803711

Token 52: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.15957331657409668
    2. ' de' → logprob: -2.9095733165740967
    3. 'pour' → logprob: -2.9095733165740967
    4. ' d' → logprob: -4.909573554992676
    5. ' for' → logprob: -5.659573554992676
    6. ' ' → logprob: -5.659573554992676
    7. 's' → logprob: -5.659573554992676
    8. 'de' → logprob: -5.784573554992676
    9. '<|end|>' → logprob: -6.159573554992676
    10. 'd' → logprob: -6.284573554992676

Token 53: ' créer' (ID: 40938)
  Prédit: ' créer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' créer' → logprob: -0.5600942969322205
    2. ' manip' → logprob: -2.0600943565368652
    3. ' comb' → logprob: -2.3100943565368652
    4. 'comb' → logprob: -3.1850943565368652
    5. 'l' → logprob: -3.3100943565368652
    6. ' les' → logprob: -3.5600943565368652
    7. ' l' → logprob: -4.060094356536865
    8. ' la' → logprob: -4.185094356536865
    9. ' gérer' → logprob: -4.685094356536865
    10. ' iter' → logprob: -4.935094356536865

Token 54: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.18379338085651398
    2. 'des' → logprob: -1.8087934255599976
    3. ' et' → logprob: -5.933793544769287
    4. 'et' → logprob: -7.558793544769287
    5. ' ' → logprob: -8.308793067932129
    6. '_des' → logprob: -8.683793067932129
    7. 's' → logprob: -9.933793067932129
    8. ',' → logprob: -10.058793067932129
    9. 'e' → logprob: -10.308793067932129
    10. '#' → logprob: -10.308793067932129

Token 55: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.4627261757850647
    2. ' it' → logprob: -2.08772611618042
    3. ' comb' → logprob: -2.21272611618042
    4. 'comb' → logprob: -2.96272611618042
    5. ' iter' → logprob: -3.33772611618042
    6. 'iter' → logprob: -3.96272611618042
    7. ' permutations' → logprob: -4.71272611618042
    8. 'com' → logprob: -5.46272611618042
    9. ' chaînes' → logprob: -6.21272611618042
    10. 'cha' → logprob: -6.46272611618042

Token 56: 'ér' (ID: 2156)
  Prédit: 'ertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ertools' → logprob: -0.07928246259689331
    2. 'er' → logprob: -2.579282522201538
    3. 'ér' → logprob: -8.579282760620117
    4. 'ert' → logprob: -9.329282760620117
    5. 'e' → logprob: -10.579282760620117
    6. 'tools' → logprob: -10.829282760620117
    7. 'erto' → logprob: -11.204282760620117
    8. 'ools' → logprob: -11.454282760620117
    9. 'érations' → logprob: -11.579282760620117
    10. '##' → logprob: -11.704282760620117

Token 57: 'ateurs' (ID: 19727)
  Prédit: 'tools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tools' → logprob: -0.006531342398375273
    2. 'ables' → logprob: -6.131531238555908
    3. 'ertools' → logprob: -6.506531238555908
    4. 'tool' → logprob: -6.756531238555908
    5. '-tools' → logprob: -7.631531238555908
    6. 'ools' → logprob: -7.881531238555908
    7. 'ators' → logprob: -8.131531715393066
    8. '_tools' → logprob: -8.631531715393066
    9. '```' → logprob: -9.756531715393066
    10. 'ateurs' → logprob: -9.881531715393066

Token 58: ' complexes' (ID: 76136)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.13354144990444183
    2. ',' → logprob: -2.8835413455963135
    3. ' ' → logprob: -3.7585413455963135
    4. '<|end|>' → logprob: -3.8835413455963135
    5. 'import' → logprob: -4.008541584014893
    6. '_' → logprob: -6.258541584014893
    7. '#' → logprob: -7.383541584014893
    8. ' import' → logprob: -7.508541584014893
    9. '\' → logprob: -7.633541584014893
    10. 's' → logprob: -8.008541107177734

Token 59: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6776458621025085
    2. '

' → logprob: -0.8026458621025085
    3. '#' → logprob: -3.8026459217071533
    4. ' 

' → logprob: -5.427645683288574
    5. 'import' → logprob: -5.552645683288574
    6. '


' → logprob: -6.052645683288574
    7. '<|end|>' → logprob: -6.052645683288574
    8. '.' → logprob: -6.802645683288574
    9. '\n' → logprob: -6.927645683288574
    10. '
' → logprob: -7.052645683288574

Token 60: 'com' (ID: 639)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5439473986625671
    2. ',' → logprob: -1.793947458267212
    3. ').' → logprob: -1.793947458267212
    4. ' )' → logprob: -3.293947458267212
    5. ' ,' → logprob: -3.668947458267212
    6. ' ).' → logprob: -4.418947219848633
    7. '.' → logprob: -5.918947219848633
    8. 'import' → logprob: -6.293947219848633
    9. 's' → logprob: -6.418947219848633
    10. '),' → logprob: -6.543947219848633

Token 61: 'binations' (ID: 113572)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.057995498180389404
    2. 'bin' → logprob: -4.682995319366455
    3. 'p' → logprob: -4.807995319366455
    4. 'e' → logprob: -5.182995319366455
    5. '```' → logprob: -5.307995319366455
    6. 'binations' → logprob: -6.057995319366455
    7. 'positions' → logprob: -6.057995319366455
    8. 'plets' → logprob: -6.182995319366455
    9. 'pos' → logprob: -6.307995319366455
    10. '#' → logprob: -6.807995319366455

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18182373046875
    2. ')' → logprob: -1.80682373046875
    3. 'import' → logprob: -7.43182373046875
    4. ',)' → logprob: -7.55682373046875
    5. ',
' → logprob: -8.18182373046875
    6. ' ,' → logprob: -8.55682373046875
    7. ').' → logprob: -9.43182373046875
    8. '.' → logprob: -9.68182373046875
    9. '`)' → logprob: -9.80682373046875
    10. ' )' → logprob: -9.93182373046875

Token 63: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.1829284280538559
    2. 'per' → logprob: -2.1829283237457275
    3. ' product' → logprob: -3.3079283237457275
    4. 'product' → logprob: -4.932928562164307
    5. ' chain' → logprob: -5.932928562164307
    6. ' cycle' → logprob: -6.057928562164307
    7. 'count' → logprob: -6.682928562164307
    8. 'cycle' → logprob: -6.682928562164307
    9. 'chain' → logprob: -7.057928562164307
    10. ' count' → logprob: -7.432928562164307

Token 64: '...)
' (ID: 66563)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5238279104232788
    2. ')' → logprob: -0.8988279104232788
    3. ').' → logprob: -7.898828029632568
    4. ',)' → logprob: -9.52382755279541
    5. 'import' → logprob: -9.77382755279541
    6. ' )' → logprob: -10.27382755279541
    7. ' ,' → logprob: -10.52382755279541
    8. '),' → logprob: -10.52382755279541
    9. '`)' → logprob: -11.02382755279541
    10. ',
' → logprob: -11.52382755279541

Token 65: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7188258767127991
    2. '

' → logprob: -0.8438258767127991
    3. '#' → logprob: -2.9688258171081543
    4. 'import' → logprob: -4.968825817108154
    5. ' 

' → logprob: -5.468825817108154
    6. '' → logprob: -5.718825817108154
    7. '```' → logprob: -5.843825817108154
    8. '


' → logprob: -6.093825817108154
    9. '\n' → logprob: -6.218825817108154
    10. '\' → logprob: -6.843825817108154

Token 66: ' fractions' (ID: 110523)
  Prédit: ' random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' random' → logprob: -0.13509535789489746
    2. ' collections' → logprob: -2.6350953578948975
    3. 'random' → logprob: -3.5100953578948975
    4. ' functools' → logprob: -4.510095596313477
    5. ' os' → logprob: -5.010095596313477
    6. 'collections' → logprob: -5.885095596313477
    7. ' re' → logprob: -6.385095596313477
    8. ' sys' → logprob: -7.385095596313477
    9. ' numpy' → logprob: -7.635095596313477
    10. 're' → logprob: -8.010095596313477

Token 67: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14431121945381165
    2. '<|end|>' → logprob: -2.6443111896514893
    3. '#' → logprob: -3.5193111896514893
    4. ' 
' → logprob: -4.519311428070068
    5. ' 

' → logprob: -5.019311428070068
    6. ' #' → logprob: -5.769311428070068
    7. ',' → logprob: -5.894311428070068
    8. '  
' → logprob: -5.894311428070068
    9. 'import' → logprob: -7.519311428070068
    10. ' as' → logprob: -7.519311428070068

Token 68: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.020041802898049355
    2. '<|end|>' → logprob: -4.7700419425964355
    3. ' #' → logprob: -5.1450419425964355
    4. '#' → logprob: -5.5200419425964355
    5. ' as' → logprob: -7.6450419425964355
    6. '  ' → logprob: -8.020041465759277
    7. ',' → logprob: -9.020041465759277
    8. ' 
' → logprob: -9.020041465759277
    9. '  
' → logprob: -9.645041465759277
    10. '<|end|>' → logprob: -9.645041465759277

Token 69: ' Perm' (ID: 20550)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19771808385849
    2. ' #' → logprob: -1.8227181434631348
    3. '#' → logprob: -4.947718143463135
    4. ' from' → logprob: -6.322718143463135
    5. ' ' → logprob: -6.697718143463135
    6. ' Provides' → logprob: -6.822718143463135
    7. ' F' → logprob: -7.197718143463135
    8. ' provides' → logprob: -7.197718143463135
    9. 'from' → logprob: -7.447718143463135
    10. ' fournit' → logprob: -7.447718143463135

Token 70: 'et' (ID: 292)
  Prédit: 'et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.0027208258397877216
    2. 'ett' → logprob: -6.252720832824707
    3. 'e' → logprob: -7.502720832824707
    4. '#' → logprob: -9.752720832824707
    5. '

' → logprob: -10.877720832824707
    6. '```' → logprob: -10.877720832824707
    7. 'ets' → logprob: -11.127720832824707
    8. '

' → logprob: -11.690220832824707
    9. '%' → logprob: -11.815220832824707
    10. 't' → logprob: -11.815220832824707

Token 71: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2704709470272064
    2. ' d' → logprob: -1.7704709768295288
    3. 'de' → logprob: -3.0204708576202393
    4. 'd' → logprob: -4.645471096038818
    5. ' ' → logprob: -4.895471096038818
    6. ' ' → logprob: -8.39547061920166
    7. 't' → logprob: -8.77047061920166
    8. ' la' → logprob: -9.52047061920166
    9. '	d' → logprob: -9.77047061920166
    10. ' of' → logprob: -9.77047061920166

Token 72: ' manip' (ID: 20526)
  Prédit: ' manip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' manip' → logprob: -0.05733158066868782
    2. ' gérer' → logprob: -3.3073315620422363
    3. ' travailler' → logprob: -5.307331562042236
    4. 'man' → logprob: -5.932331562042236
    5. 'calcul' → logprob: -6.057331562042236
    6. 'tr' → logprob: -6.432331562042236
    7. 'g' → logprob: -6.432331562042236
    8. ' effectuer' → logprob: -7.432331562042236
    9. ' manipulation' → logprob: -7.557331562042236
    10. 'simpl' → logprob: -7.557331562042236

Token 73: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.019820716232061386
    2. 'u' → logprob: -5.144820690155029
    3. 'ule' → logprob: -5.894820690155029
    4. 'ul' → logprob: -6.144820690155029
    5. 'iler' → logprob: -6.894820690155029
    6. 'uter' → logprob: -7.019820690155029
    7. '-' → logprob: -7.269820690155029
    8. '#' → logprob: -7.769820690155029
    9. 'ulation' → logprob: -7.769820690155029
    10. 'ler' → logprob: -8.019821166992188

Token 74: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3392065167427063
    2. '<|end|>' → logprob: -2.0892064571380615
    3. ' fractions' → logprob: -2.5892064571380615
    4. ' des' → logprob: -2.5892064571380615
    5. 'des' → logprob: -5.214206695556641
    6. 'fra' → logprob: -6.214206695556641
    7. 's' → logprob: -6.339206695556641
    8. ' les' → logprob: -6.714206695556641
    9. ' ' → logprob: -7.089206695556641
    10. ' math' → logprob: -7.589206695556641

Token 75: ' fractions' (ID: 110523)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.060720302164554596
    2. ' fractions' → logprob: -3.060720205307007
    3. ' rational' → logprob: -5.185720443725586
    4. ' ' → logprob: -5.685720443725586
    5. 'n' → logprob: -6.935720443725586
    6. ' nombre' → logprob: -7.060720443725586
    7. ' numbers' → logprob: -7.810720443725586
    8. ' objets' → logprob: -8.810720443725586
    9. ' n' → logprob: -9.060720443725586
    10. 'fra' → logprob: -9.310720443725586

Token 76: ' ration' (ID: 74749)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6525242924690247
    2. '#' → logprob: -2.02752423286438
    3. ' 
' → logprob: -2.40252423286438
    4. '<|end|>' → logprob: -2.40252423286438
    5. 'import' → logprob: -2.90252423286438
    6. '
' → logprob: -3.27752423286438
    7. ' 

' → logprob: -3.77752423286438
    8. '

' → logprob: -4.277524471282959
    9. ',' → logprob: -4.652524471282959
    10. '.' → logprob: -4.652524471282959

Token 77: 'nelles' (ID: 60254)
  Prédit: 'nelles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nelles' → logprob: -0.2607191801071167
    2. 'ales' → logprob: -2.1357192993164062
    3. 'naires' → logprob: -3.1357192993164062
    4. 'a' → logprob: -3.5107192993164062
    5. 'n' → logprob: -4.635719299316406
    6. 'al' → logprob: -4.760719299316406
    7. 'nées' → logprob: -4.885719299316406
    8. 'elles' → logprob: -5.260719299316406
    9. 'ères' → logprob: -6.010719299316406
    10. 'als' → logprob: -7.385719299316406

Token 78: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5067564249038696
    2. '

' → logprob: -1.7567564249038696
    3. '<|end|>' → logprob: -2.25675630569458
    4. '#' → logprob: -3.13175630569458
    5. 'import' → logprob: -3.25675630569458
    6. ' 
' → logprob: -4.88175630569458
    7. ' ' → logprob: -5.00675630569458
    8. ' 

' → logprob: -5.13175630569458
    9. '```' → logprob: -5.38175630569458
    10. '\n' → logprob: -5.63175630569458

Token 79: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.751993715763092
    2. '#' → logprob: -1.5019936561584473
    3. '

' → logprob: -2.2519936561584473
    4. 'import' → logprob: -2.7519936561584473
    5. '\n' → logprob: -3.2519936561584473
    6. '<|end|>' → logprob: -4.001993656158447
    7. ' 
' → logprob: -4.376993656158447
    8. ' ' → logprob: -4.626993656158447
    9. '' → logprob: -4.626993656158447
    10. '```' → logprob: -4.876993656158447

Token 80: ' heap' (ID: 37237)
  Prédit: ' decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' decimal' → logprob: -0.14144152402877808
    2. 'decimal' → logprob: -2.766441583633423
    3. ' collections' → logprob: -3.641441583633423
    4. ' random' → logprob: -3.766441583633423
    5. 'random' → logprob: -5.266441345214844
    6. 'collections' → logprob: -5.266441345214844
    7. ' functools' → logprob: -6.016441345214844
    8. ' os' → logprob: -6.141441345214844
    9. ' datetime' → logprob: -6.266441345214844
    10. ' sys' → logprob: -7.266441345214844

Token 81: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.320199877838604e-07
    2. 'queue' → logprob: -16.375
    3. ' ' → logprob: -16.75
    4. 'n' → logprob: -17.0
    5. '#' → logprob: -17.125
    6. 't' → logprob: -17.25
    7. 'dict' → logprob: -17.5
    8. '<|end|>' → logprob: -17.625
    9. 'u' → logprob: -17.875
    10. 'o' → logprob: -18.375

Token 82: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.026137957349419594
    2. ' #' → logprob: -4.026137828826904
    3. '#' → logprob: -5.526137828826904
    4. ' 
' → logprob: -6.026137828826904
    5. ' 

' → logprob: -7.151137828826904
    6. '  
' → logprob: -8.401138305664062
    7. '<|end|>' → logprob: -8.776138305664062
    8. '  ' → logprob: -9.026138305664062
    9. 'import' → logprob: -9.151138305664062
    10. '  

' → logprob: -9.776138305664062

Token 83: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37263256311416626
    2. '#' → logprob: -1.7476325035095215
    3. ' #' → logprob: -1.9976325035095215
    4. ' 
' → logprob: -7.8726325035095215
    5. '  ' → logprob: -8.37263298034668
    6. '  
' → logprob: -8.74763298034668
    7. ' 

' → logprob: -8.87263298034668
    8. '<|end|>' → logprob: -9.62263298034668
    9. 'import' → logprob: -9.74763298034668
    10. ' ' → logprob: -10.12263298034668

Token 84: ' Fourn' (ID: 177490)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007775206118822098
    2. ' #' → logprob: -5.88277530670166
    3. ' import' → logprob: -5.88277530670166
    4. 'import' → logprob: -7.50777530670166
    5. ' space' → logprob: -8.00777530670166
    6. '#' → logprob: -8.50777530670166
    7. '  ' → logprob: -8.75777530670166
    8. ' heap' → logprob: -8.75777530670166
    9. ' Perm' → logprob: -9.00777530670166
    10. ' ' → logprob: -9.00777530670166

Token 85: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.08656728267669678
    2. 'et' → logprob: -3.7115674018859863
    3. 'ir' → logprob: -3.9615674018859863
    4. 'i' → logprob: -4.336567401885986
    5. 't' → logprob: -4.461567401885986
    6. 'r' → logprob: -5.086567401885986
    7. 'er' → logprob: -5.211567401885986
    8. 'at' → logprob: -7.336567401885986
    9. 'e' → logprob: -8.336566925048828
    10. ' it' → logprob: -8.461566925048828

Token 86: ' une' (ID: 2463)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.10654357820749283
    2. ' ' → logprob: -2.35654354095459
    3. 'des' → logprob: -5.60654354095459
    4. ' un' → logprob: -7.10654354095459
    5. '  ' → logprob: -7.73154354095459
    6. ' une' → logprob: -7.85654354095459
    7. ' de' → logprob: -8.35654354095459
    8. 's' → logprob: -8.85654354095459
    9. ' les' → logprob: -8.98154354095459
    10. ' l' → logprob: -9.48154354095459

Token 87: ' impl' (ID: 15443)
  Prédit: ' file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' file' → logprob: -0.5898919105529785
    2. 'file' → logprob: -0.9648919105529785
    3. 'impl' → logprob: -3.3398919105529785
    4. ' structure' → logprob: -4.5898919105529785
    5. 'structure' → logprob: -4.8398919105529785
    6. ' impl' → logprob: -6.3398919105529785
    7. ' implementation' → logprob: -6.3398919105529785
    8. 'implementation' → logprob: -6.4648919105529785
    9. 'q' → logprob: -6.7148919105529785
    10. ' ' → logprob: -6.8398919105529785

Token 88: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.38760504126548767
    2. 'é' → logprob: -1.13760507106781
    3. 'ém' → logprob: -7.6376051902771
    4. 'ement' → logprob: -9.012604713439941
    5. '```' → logprob: -10.387604713439941
    6. 'éments' → logprob: -10.637604713439941
    7. 'e' → logprob: -10.887604713439941
    8. 'import' → logprob: -11.262604713439941
    9. 'è' → logprob: -11.262604713439941
    10. 'ép' → logprob: -12.512604713439941

Token 89: 'ation' (ID: 387)
  Prédit: 'entation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entation' → logprob: -0.07171224057674408
    2. 'ation' → logprob: -2.6967122554779053
    3. 'ent' → logprob: -6.821712017059326
    4. 't' → logprob: -7.571712017059326
    5. 'a' → logprob: -9.946712493896484
    6. 'e' → logprob: -10.696712493896484
    7. 'mentation' → logprob: -10.821712493896484
    8. 'at' → logprob: -10.821712493896484
    9. 'é' → logprob: -11.071712493896484
    10. 'ations' → logprob: -11.446712493896484

Token 90: ' efficace' (ID: 54338)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6981255412101746
    2. ' ' → logprob: -0.9481255412101746
    3. ' de' → logprob: -2.5731256008148193
    4. 'd' → logprob: -4.94812536239624
    5. 'de' → logprob: -4.94812536239624
    6. '  ' → logprob: -5.19812536239624
    7. ' pour' → logprob: -5.32312536239624
    8. ' du' → logprob: -5.44812536239624
    9. 'du' → logprob: -6.07312536239624
    10. ' des' → logprob: -6.32312536239624

Token 91: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8867163062095642
    2. ' de' → logprob: -0.8867163062095642
    3. ' d' → logprob: -2.636716365814209
    4. ' des' → logprob: -3.136716365814209
    5. ' pour' → logprob: -3.886716365814209
    6. 'de' → logprob: -4.886716365814209
    7. 'import' → logprob: -5.011716365814209
    8. '  ' → logprob: -5.136716365814209
    9. ' import' → logprob: -5.386716365814209
    10. '<|end|>' → logprob: -5.511716365814209

Token 92: ' la' (ID: 557)
  Prédit: ' file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' file' → logprob: -0.936646580696106
    2. ' une' → logprob: -1.561646580696106
    3. ' la' → logprob: -2.0616464614868164
    4. 'une' → logprob: -2.0616464614868164
    5. 'la' → logprob: -3.3116464614868164
    6. 'les' → logprob: -3.5616464614868164
    7. ' ' → logprob: -3.6866464614868164
    8. '```' → logprob: -4.811646461486816
    9. 'file' → logprob: -4.936646461486816
    10. 'l' → logprob: -5.311646461486816

Token 93: ' structure' (ID: 8866)
  Prédit: ' file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' file' → logprob: -0.22674992680549622
    2. 'file' → logprob: -1.6017498970031738
    3. ' ' → logprob: -7.851749897003174
    4. '```' → logprob: -8.601750373840332
    5. 'p' → logprob: -9.351750373840332
    6. 'f' → logprob: -9.351750373840332
    7. 'File' → logprob: -9.726750373840332
    8. 'tas' → logprob: -9.976750373840332
    9. 'fil' → logprob: -10.101750373840332
    10. ' ' → logprob: -10.101750373840332

Token 94: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.046799786388874054
    2. ' ' → logprob: -3.921799898147583
    3. ' d' → logprob: -4.171799659729004
    4. 'de' → logprob: -5.796799659729004
    5. ' file' → logprob: -6.046799659729004
    6. ' en' → logprob: -7.046799659729004
    7. 'd' → logprob: -7.296799659729004
    8. ' des' → logprob: -7.421799659729004
    9. 'file' → logprob: -8.171799659729004
    10. ' à' → logprob: -8.296799659729004

Token 95: ' données' (ID: 30580)
  Prédit: ' file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' file' → logprob: -0.334764301776886
    2. 'tas' → logprob: -2.084764242172241
    3. ' données' → logprob: -3.209764242172241
    4. ' files' → logprob: -3.334764242172241
    5. 'file' → logprob: -3.334764242172241
    6. ' tas' → logprob: -3.334764242172241
    7. '```' → logprob: -5.33476448059082
    8. 'd' → logprob: -6.20976448059082
    9. 'files' → logprob: -6.58476448059082
    10. '``' → logprob: -7.20976448059082

Token 96: ' heap' (ID: 37237)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23288726806640625
    2. ' de' → logprob: -2.7328872680664062
    3. ' '' → logprob: -2.9828872680664062
    4. ' priority' → logprob: -3.7328872680664062
    5. 'priority' → logprob: -4.857887268066406
    6. ' en' → logprob: -5.107887268066406
    7. ' tas' → logprob: -5.232887268066406
    8. '  ' → logprob: -5.357887268066406
    9. '```' → logprob: -5.482887268066406
    10. ' "' → logprob: -5.482887268066406

Token 97: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6307905912399292
    2. '

' → logprob: -1.0057905912399292
    3. '<|end|>' → logprob: -3.1307907104492188
    4. 'import' → logprob: -4.630790710449219
    5. ' 

' → logprob: -4.880790710449219
    6. '


' → logprob: -5.005790710449219
    7. '#' → logprob: -5.130790710449219
    8. ' ' → logprob: -5.255790710449219
    9. '
' → logprob: -5.380790710449219
    10. ' 
' → logprob: -5.755790710449219

Token 98: 'file' (ID: 2318)
  Prédit: ' file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' file' → logprob: -0.2794477641582489
    2. ')' → logprob: -2.4044477939605713
    3. 'file' → logprob: -2.7794477939605713
    4. ' files' → logprob: -3.2794477939605713
    5. ' )' → logprob: -4.279447555541992
    6. ',' → logprob: -4.654447555541992
    7. 'priority' → logprob: -4.779447555541992
    8. ' priority' → logprob: -4.904447555541992
    9. ' priorité' → logprob: -6.404447555541992
    10. '```' → logprob: -6.529447555541992

Token 99: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11346828937530518
    2. ' d' → logprob: -2.9884681701660156
    3. ' de' → logprob: -4.738468170166016
    4. 'd' → logprob: -4.738468170166016
    5. 's' → logprob: -4.738468170166016
    6. ' )' → logprob: -4.738468170166016
    7. 'q' → logprob: -5.113468170166016
    8. '<|end|>' → logprob: -5.238468170166016
    9. '_priority' → logprob: -6.238468170166016
    10. ',' → logprob: -6.238468170166016

Token 100: ' priorité' (ID: 150252)
  Prédit: 'prior'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prior' → logprob: -0.02062305435538292
    2. ' priorité' → logprob: -4.270623207092285
    3. ' prior' → logprob: -5.395623207092285
    4. 'priority' → logprob: -6.395623207092285
    5. 'prio' → logprob: -9.770623207092285
    6. '```' → logprob: -9.895623207092285
    7. '_prior' → logprob: -10.395623207092285
    8. ' priority' → logprob: -10.395623207092285
    9. 'Prior' → logprob: -10.645623207092285
    10. 'pri' → logprob: -11.270623207092285

Token 101: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08954369276762009
    2. ').' → logprob: -2.589543581008911
    3. ',' → logprob: -5.08954381942749
    4. ' )' → logprob: -6.46454381942749
    5. 's' → logprob: -6.58954381942749
    6. ')
' → logprob: -7.58954381942749
    7. '```' → logprob: -8.339543342590332
    8. '.' → logprob: -8.964543342590332
    9. ' pour' → logprob: -9.589543342590332
    10. 'import' → logprob: -9.589543342590332

Token 102: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8207200765609741
    2. '

' → logprob: -0.8207200765609741
    3. '#' → logprob: -2.5707201957702637
    4. 'import' → logprob: -3.8207201957702637
    5. ' 

' → logprob: -5.695720195770264
    6. '' → logprob: -5.945720195770264
    7. '<|end|>' → logprob: -5.945720195770264
    8. 'def' → logprob: -6.445720195770264
    9. '```' → logprob: -6.570720195770264
    10. '


' → logprob: -6.570720195770264

Token 103: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.20377539098262787
    2. ' os' → logprob: -2.078775405883789
    3. 'collections' → logprob: -3.078775405883789
    4. ' random' → logprob: -5.203775405883789
    5. 'os' → logprob: -5.578775405883789
    6. ' sys' → logprob: -6.328775405883789
    7. ' functools' → logprob: -7.453775405883789
    8. 'random' → logprob: -7.828775405883789
    9. ' operator' → logprob: -7.953775405883789
    10. ' re' → logprob: -8.453775405883789

Token 104: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03760634362697601
    2. '.' → logprob: -4.662606239318848
    3. '<|end|>' → logprob: -4.662606239318848
    4. 'import' → logprob: -5.537606239318848
    5. 'from' → logprob: -5.787606239318848
    6. ' #' → logprob: -5.912606239318848
    7. ' as' → logprob: -6.037606239318848
    8. '#' → logprob: -6.787606239318848
    9. ' from' → logprob: -7.037606239318848
    10. ',' → logprob: -7.287606239318848

Token 105: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03562676161527634
    2. ' as' → logprob: -4.2856268882751465
    3. '<|end|>' → logprob: -4.6606268882751465
    4. '.' → logprob: -5.2856268882751465
    5. ' #' → logprob: -6.0356268882751465
    6. 'import' → logprob: -6.4106268882751465
    7. 'as' → logprob: -7.1606268882751465
    8. '#' → logprob: -7.4106268882751465
    9. ',' → logprob: -8.410626411437988
    10. ' import' → logprob: -8.535626411437988

Token 106: ' Cont' (ID: 3117)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7421031594276428
    2. ' collections' → logprob: -0.9921031594276428
    3. ' from' → logprob: -2.367103099822998
    4. 'from' → logprob: -3.992103099822998
    5. 'collections' → logprob: -4.367103099822998
    6. ' defaultdict' → logprob: -4.742103099822998
    7. ' import' → logprob: -4.992103099822998
    8. ' Counter' → logprob: -5.117103099822998
    9. 'Counter' → logprob: -6.242103099822998
    10. 'import' → logprob: -6.992103099822998

Token 107: 'ient' (ID: 773)
  Prédit: 'inue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inue' → logprob: -0.07662685960531235
    2. 'ainer' → logprob: -3.076626777648926
    3. 'in' → logprob: -4.576626777648926
    4. 'e' → logprob: -4.951626777648926
    5. 'ains' → logprob: -5.451626777648926
    6. 'ainers' → logprob: -6.076626777648926
    7. 'aine' → logprob: -6.201626777648926
    8. 'inu' → logprob: -6.951626777648926
    9. ' ' → logprob: -8.951626777648926
    10. 'ext' → logprob: -8.951626777648926

Token 108: ' des' (ID: 731)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.4835653007030487
    2. ' des' → logprob: -1.608565330505371
    3. ' ' → logprob: -2.233565330505371
    4. ' deque' → logprob: -3.733565330505371
    5. 'deque' → logprob: -4.358565330505371
    6. 's' → logprob: -4.608565330505371
    7. ' abc' → logprob: -4.608565330505371
    8. ' named' → logprob: -5.608565330505371
    9. ' collections' → logprob: -5.858565330505371
    10. 'abc' → logprob: -5.983565330505371

Token 109: ' types' (ID: 6009)
  Prédit: ' structures'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' structures' → logprob: -0.9031882882118225
    2. ' types' → logprob: -1.5281882286071777
    3. 's' → logprob: -2.4031882286071777
    4. 'types' → logprob: -2.6531882286071777
    5. ' classes' → logprob: -3.2781882286071777
    6. 'structures' → logprob: -3.4031882286071777
    7. ' data' → logprob: -3.9031882286071777
    8. ' outils' → logprob: -4.278188228607178
    9. 'collections' → logprob: -4.278188228607178
    10. ' modules' → logprob: -4.403188228607178

Token 110: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07308895140886307
    2. '_de' → logprob: -3.6980888843536377
    3. ' ' → logprob: -3.8230888843536377
    4. ' de' → logprob: -4.448089122772217
    5. 'de' → logprob: -5.198089122772217
    6. '  ' → logprob: -6.323089122772217
    7. '_special' → logprob: -7.198089122772217
    8. 'import' → logprob: -7.323089122772217
    9. ' defaultdict' → logprob: -7.573089122772217
    10. ' ' → logprob: -7.698089122772217

Token 111: ' données' (ID: 30580)
  Prédit: ' données'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.0846102312207222
    2. 'd' → logprob: -2.5846102237701416
    3. 'collections' → logprob: -5.459610462188721
    4. ' data' → logprob: -8.084609985351562
    5. 'conten' → logprob: -8.209609985351562
    6. 'data' → logprob: -8.459609985351562
    7. ' collections' → logprob: -8.709609985351562
    8. 'don' → logprob: -9.209609985351562
    9. ' ' → logprob: -9.334609985351562
    10. '```' → logprob: -9.959609985351562

Token 112: ' spécialisés' (ID: 182840)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: ' comme' (ID: 7971)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1560574769973755
    2. '.' → logprob: -1.2810574769973755
    3. ' ' → logprob: -1.4060574769973755
    4. ',' → logprob: -2.406057357788086
    5. '<|end|>' → logprob: -3.156057357788086
    6. 'from' → logprob: -4.156057357788086
    7. ' import' → logprob: -5.281057357788086
    8. ' as' → logprob: -6.281057357788086
    9. ' from' → logprob: -6.656057357788086
    10. ' ,' → logprob: -7.031057357788086

Token 114: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.11402430385351181
    2. ' deque' → logprob: -2.3640244007110596
    3. 'deque' → logprob: -4.3640241622924805
    4. ' ' → logprob: -7.3640241622924805
    5. ' Counter' → logprob: -8.61402416229248
    6. 'default' → logprob: -9.86402416229248
    7. ' named' → logprob: -10.11402416229248
    8. ' ' → logprob: -10.11402416229248
    9. ' counter' → logprob: -11.23902416229248
    10. ' abc' → logprob: -12.11402416229248

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18370944261550903
    2. ' ' → logprob: -2.5587093830108643
    3. 'import' → logprob: -2.8087093830108643
    4. '<|end|>' → logprob: -4.558709621429443
    5. 'from' → logprob: -4.933709621429443
    6. '.' → logprob: -5.683709621429443
    7. ' ,' → logprob: -5.808709621429443
    8. '#' → logprob: -6.683709621429443
    9. '
' → logprob: -6.808709621429443
    10. ' #' → logprob: -7.558709621429443

Token 116: ' Counter' (ID: 32251)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.19093918800354004
    2. ' Counter' → logprob: -2.06593918800354
    3. 'default' → logprob: -3.81593918800354
    4. 'Counter' → logprob: -3.94093918800354
    5. ' Ordered' → logprob: -6.190938949584961
    6. ' named' → logprob: -6.315938949584961
    7. 'Ordered' → logprob: -6.940938949584961
    8. 'named' → logprob: -7.565938949584961
    9. ' default' → logprob: -8.315938949584961
    10. ' Chain' → logprob: -10.315938949584961

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04662913456559181
    2. ' ' → logprob: -3.7966291904449463
    3. ' ,' → logprob: -4.921628952026367
    4. '<|end|>' → logprob: -5.046628952026367
    5. 'import' → logprob: -5.171628952026367
    6. '
' → logprob: -6.796628952026367
    7. '

' → logprob: -7.421628952026367
    8. 'from' → logprob: -7.421628952026367
    9. '#' → logprob: -7.546628952026367
    10. ' #' → logprob: -9.046628952026367

Token 118: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.28349068760871887
    2. 'default' → logprob: -1.7834906578063965
    3. ' named' → logprob: -3.4084906578063965
    4. 'named' → logprob: -3.7834906578063965
    5. 'Ordered' → logprob: -4.0334906578063965
    6. ' Ordered' → logprob: -5.4084906578063965
    7. ' default' → logprob: -7.9084906578063965
    8. 'Named' → logprob: -8.783491134643555
    9. 'deque' → logprob: -9.408491134643555
    10. ' deque' → logprob: -10.408491134643555

Token 119: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.34322190284729
    2. ',' → logprob: -1.46822190284729
    3. '
' → logprob: -1.59322190284729
    4. 'import' → logprob: -1.59322190284729
    5. '<|end|>' → logprob: -2.96822190284729
    6. ' 
' → logprob: -4.468221664428711
    7. '

' → logprob: -4.468221664428711
    8. '#' → logprob: -4.593221664428711
    9. 'from' → logprob: -5.593221664428711
    10. '.' → logprob: -5.843221664428711

Token 120: ' etc' (ID: 5178)
  Prédit: ' named'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' named' → logprob: -0.2701510787010193
    2. 'named' → logprob: -2.395151138305664
    3. ' Ordered' → logprob: -2.520151138305664
    4. 'Ordered' → logprob: -2.770151138305664
    5. ' defaultdict' → logprob: -7.270151138305664
    6. 'Named' → logprob: -7.395151138305664
    7. ' Chain' → logprob: -8.270151138305664
    8. ' deque' → logprob: -8.395151138305664
    9. 'User' → logprob: -8.645151138305664
    10. 'Chain' → logprob: -9.395151138305664

Token 121: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2511383593082428
    2. '

' → logprob: -2.12613844871521
    3. 'import' → logprob: -3.12613844871521
    4. '<|end|>' → logprob: -3.12613844871521
    5. '#' → logprob: -5.876138210296631
    6. ',' → logprob: -6.001138210296631
    7. ' ' → logprob: -6.376138210296631
    8. ' 
' → logprob: -6.876138210296631
    9. '```' → logprob: -6.876138210296631
    10. '<|end|>' → logprob: -6.876138210296631

Token 122: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7732686996459961
    2. 'import' → logprob: -1.398268699645996
    3. '<|end|>' → logprob: -2.023268699645996
    4. '

' → logprob: -2.523268699645996
    5. '#' → logprob: -3.023268699645996
    6. 'from' → logprob: -4.398268699645996
    7. '```' → logprob: -5.898268699645996
    8. '\n' → logprob: -5.898268699645996
    9. ' ' → logprob: -6.023268699645996
    10. '  
' → logprob: -6.523268699645996

Token 123: ' re' (ID: 322)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.23234038054943085
    2. ' random' → logprob: -2.6073403358459473
    3. ' functools' → logprob: -2.8573403358459473
    4. 'os' → logprob: -3.7323403358459473
    5. ' re' → logprob: -3.7323403358459473
    6. 'random' → logprob: -4.607340335845947
    7. ' json' → logprob: -5.232340335845947
    8. ' datetime' → logprob: -5.482340335845947
    9. ' operator' → logprob: -6.107340335845947
    10. ' sys' → logprob: -6.107340335845947

Token 124: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00039230400579981506
    2. ' #' → logprob: -8.750391960144043
    3. '<|end|>' → logprob: -8.750391960144043
    4. ' ' → logprob: -10.250391960144043
    5. '  ' → logprob: -10.500391960144043
    6. ' 
' → logprob: -13.250391960144043
    7. 'space' → logprob: -13.250391960144043
    8. 's' → logprob: -13.500391960144043
    9. '```' → logprob: -13.625391960144043
    10. '#' → logprob: -13.875391960144043

Token 125: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1860276758670807
    2. ' #' → logprob: -2.061027765274048
    3. '#' → logprob: -3.186027765274048
    4. '<|end|>' → logprob: -7.061027526855469
    5. ' ' → logprob: -9.811027526855469
    6. '  ' → logprob: -10.186027526855469
    7. 's' → logprob: -10.436027526855469
    8. 'import' → logprob: -10.436027526855469
    9. '```' → logprob: -10.811027526855469
    10. 'space' → logprob: -11.311027526855469

Token 126: ' Sert' (ID: 166635)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023923467844724655
    2. ' import' → logprob: -4.523923397064209
    3. ' ' → logprob: -4.898923397064209
    4. ' #' → logprob: -6.023923397064209
    5. 'import' → logprob: -7.398923397064209
    6. ' Perm' → logprob: -8.273923873901367
    7. ' Le' → logprob: -8.398923873901367
    8. ' 
' → logprob: -8.648923873901367
    9. ' ﻿' → logprob: -9.023923873901367
    10. ' This' → logprob: -9.273923873901367

Token 127: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.0626898929476738
    2. ' ' → logprob: -2.812689781188965
    3. ' pour' → logprob: -7.812689781188965
    4. 'à' → logprob: -9.062689781188965
    5. ' au' → logprob: -10.062689781188965
    6. ' ' → logprob: -10.062689781188965
    7. ' a' → logprob: -10.062689781188965
    8. 'pour' → logprob: -10.562689781188965
    9. ' aux' → logprob: -10.812689781188965
    10. '  ' → logprob: -12.187689781188965

Token 128: ' travailler' (ID: 57952)
  Prédit: ' manip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' manip' → logprob: -1.0509289503097534
    2. ' effectuer' → logprob: -1.5509289503097534
    3. ' traiter' → logprob: -1.6759289503097534
    4. ' travailler' → logprob: -2.925929069519043
    5. ' gérer' → logprob: -3.175929069519043
    6. ' compiler' → logprob: -3.175929069519043
    7. ' faire' → logprob: -3.175929069519043
    8. ' chercher' → logprob: -4.050929069519043
    9. ' rechercher' → logprob: -4.175929069519043
    10. 'chercher' → logprob: -4.550929069519043

Token 129: ' avec' (ID: 3937)
  Prédit: ' avec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avec' → logprob: -0.23275192081928253
    2. 'avec' → logprob: -2.3577518463134766
    3. ' with' → logprob: -2.6077518463134766
    4. ' ' → logprob: -4.732751846313477
    5. 'r' → logprob: -4.857751846313477
    6. 'with' → logprob: -4.857751846313477
    7. 'import' → logprob: -5.107751846313477
    8. ' des' → logprob: -6.482751846313477
    9. 'sur' → logprob: -6.732751846313477
    10. '\s' → logprob: -7.232751846313477

Token 130: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7593052387237549
    2. ' des' → logprob: -1.5093052387237549
    3. ' l' → logprob: -2.009305238723755
    4. 'les' → logprob: -2.759305238723755
    5. 'des' → logprob: -2.884305238723755
    6. 's' → logprob: -4.009305000305176
    7. 'l' → logprob: -4.134305000305176
    8. ' ' → logprob: -4.634305000305176
    9. ' ' → logprob: -5.884305000305176
    10. 'r' → logprob: -6.134305000305176

Token 131: ' expressions' (ID: 43578)
  Prédit: ' expressions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expressions' → logprob: -0.10607227683067322
    2. ' chaînes' → logprob: -2.731072187423706
    3. 'express' → logprob: -3.356072187423706
    4. ' ' → logprob: -8.981072425842285
    5. ' express' → logprob: -9.106072425842285
    6. ' espaces' → logprob: -9.606072425842285
    7. 'r' → logprob: -9.731072425842285
    8. 'Expressions' → logprob: -9.856072425842285
    9. ' ' → logprob: -10.106072425842285
    10. 'ex' → logprob: -10.731072425842285

Token 132: ' réguli' (ID: 59739)
  Prédit: 'pressions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pressions' → logprob: -0.03789423778653145
    2. ' ' → logprob: -4.287894248962402
    3. ' réguli' → logprob: -5.037894248962402
    4. 'r' → logprob: -5.037894248962402
    5. ' regular' → logprob: -5.412894248962402
    6. ' espaces' → logprob: -6.412894248962402
    7. ' ' → logprob: -7.162894248962402
    8. 'es' → logprob: -7.537894248962402
    9. 'regular' → logprob: -7.537894248962402
    10. ' expressions' → logprob: -7.662894248962402

Token 133: 'ères' (ID: 12614)
  Prédit: 'pressions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pressions' → logprob: -0.5341591238975525
    2. 'g' → logprob: -1.6591591835021973
    3. 'sses' → logprob: -2.7841591835021973
    4. 'xes' → logprob: -3.1591591835021973
    5. 'r' → logprob: -3.4091591835021973
    6. 'gles' → logprob: -4.034159183502197
    7. 'x' → logprob: -4.284159183502197
    8. 'ulations' → logprob: -4.534159183502197
    9. 'rg' → logprob: -4.659159183502197
    10. 'ères' → logprob: -5.659159183502197

Token 134: '.
' (ID: 558)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1260218620300293
    2. '<|end|>' → logprob: -1.1260218620300293
    3. '
' → logprob: -1.3760218620300293
    4. '

' → logprob: -3.0010218620300293
    5. '#' → logprob: -3.7510218620300293
    6. ' ' → logprob: -4.626021862030029
    7. ' 
' → logprob: -5.751021862030029
    8. '<|end|>' → logprob: -6.001021862030029
    9. '\n' → logprob: -6.251021862030029
    10. '.' → logprob: -6.626021862030029

Token 135: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8311371207237244
    2. '
' → logprob: -1.3311371803283691
    3. '

' → logprob: -1.9561371803283691
    4. '#' → logprob: -2.206137180328369
    5. '<|end|>' → logprob: -4.456137180328369
    6. '\n' → logprob: -4.831137180328369
    7. 'from' → logprob: -5.581137180328369
    8. '' → logprob: -5.706137180328369
    9. 'n' → logprob: -5.956137180328369
    10. ' 

' → logprob: -6.081137180328369

Token 136: ' array' (ID: 2644)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.27838990092277527
    2. ' json' → logprob: -2.7783899307250977
    3. ' datetime' → logprob: -2.7783899307250977
    4. ' random' → logprob: -3.0283899307250977
    5. 'os' → logprob: -3.6533899307250977
    6. ' functools' → logprob: -3.9033899307250977
    7. ' sys' → logprob: -4.278389930725098
    8. 'random' → logprob: -5.403389930725098
    9. 'json' → logprob: -6.028389930725098
    10. 'datetime' → logprob: -6.403389930725098

Token 137: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021209929138422012
    2. '<|end|>' → logprob: -3.896209955215454
    3. ' as' → logprob: -8.396209716796875
    4. '<|end|>' → logprob: -9.396209716796875
    5. ',' → logprob: -9.521209716796875
    6. ' #' → logprob: -9.771209716796875
    7. '  ' → logprob: -9.771209716796875
    8. '[' → logprob: -10.396209716796875
    9. '.' → logprob: -10.771209716796875
    10. ' ' → logprob: -11.021209716796875

Token 138: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: ' Fourn' (ID: 177490)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0016474456060677767
    2. ' #' → logprob: -7.001647472381592
    3. ' ' → logprob: -8.376646995544434
    4. '  ' → logprob: -8.626646995544434
    5. '#' → logprob: -9.001646995544434
    6. '<|end|>' → logprob: -9.376646995544434
    7. 'import' → logprob: -10.126646995544434
    8. ' import' → logprob: -11.001646995544434
    9. '  
' → logprob: -11.501646995544434
    10. ' array' → logprob: -11.876646995544434

Token 140: 'it' (ID: 278)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.1476024389266968
    2. 'ort' → logprob: -1.5226024389266968
    3. 'it' → logprob: -1.7726024389266968
    4. 'et' → logprob: -2.3976025581359863
    5. 'iture' → logprob: -2.5226025581359863
    6. 'import' → logprob: -3.8976025581359863
    7. 'ert' → logprob: -4.022602558135986
    8. 'ect' → logprob: -4.147602558135986
    9. 'iert' → logprob: -4.522602558135986
    10. 'ct' → logprob: -4.522602558135986

Token 141: ' un' (ID: 537)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6958543062210083
    2. ' ' → logprob: -0.8208543062210083
    3. ' un' → logprob: -3.1958541870117188
    4. 'des' → logprob: -4.320854187011719
    5. ' une' → logprob: -5.445854187011719
    6. ' array' → logprob: -6.695854187011719
    7. ' de' → logprob: -7.320854187011719
    8. 's' → logprob: -7.945854187011719
    9. 'un' → logprob: -8.695854187011719
    10. ' arrays' → logprob: -9.695854187011719

Token 142: ' type' (ID: 1490)
  Prédit: ' tableau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tableau' → logprob: -0.5391755700111389
    2. ' espace' → logprob: -1.5391755104064941
    3. ' ' → logprob: -1.9141755104064941
    4. ' type' → logprob: -4.164175510406494
    5. ' array' → logprob: -4.289175510406494
    6. 's' → logprob: -4.789175510406494
    7. ' module' → logprob: -5.789175510406494
    8. ' s' → logprob: -5.914175510406494
    9. ' space' → logprob: -6.039175510406494
    10. ' compact' → logprob: -6.789175510406494

Token 143: ' tableau' (ID: 67053)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 144: ' efficace' (ID: 54338)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5604606866836548
    2. 's' → logprob: -0.9354606866836548
    3. '<|end|>' → logprob: -3.6854605674743652
    4. ' s' → logprob: -5.810460567474365
    5. '[' → logprob: -5.935460567474365
    6. ',' → logprob: -6.560460567474365
    7. '_' → logprob: -6.685460567474365
    8. 'es' → logprob: -7.310460567474365
    9. '  ' → logprob: -7.560460567474365
    10. '.' → logprob: -7.810460567474365

Token 145: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2707790732383728
    2. '<|end|>' → logprob: -1.5207791328430176
    3. 'import' → logprob: -5.270779132843018
    4. ',' → logprob: -5.645779132843018
    5. '[' → logprob: -6.020779132843018
    6. 's' → logprob: -6.020779132843018
    7. '.' → logprob: -6.270779132843018
    8. '_' → logprob: -7.145779132843018
    9. ' as' → logprob: -7.770779132843018
    10. '<|end|>' → logprob: -7.895779132843018

Token 146: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.6389856338500977
    2. ' des' → logprob: -1.2639856338500977
    3. ' les' → logprob: -2.6389856338500977
    4. 'stock' → logprob: -3.2639856338500977
    5. 'les' → logprob: -3.2639856338500977
    6. 'des' → logprob: -3.3889856338500977
    7. ' gérer' → logprob: -5.388985633850098
    8. ' manip' → logprob: -6.888985633850098
    9. ' ' → logprob: -7.388985633850098
    10. ' le' → logprob: -7.638985633850098

Token 147: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.008965058252215385
    2. 'ager' → logprob: -4.883965015411377
    3. 'age' → logprob: -7.383965015411377
    4. ' des' → logprob: -7.883965015411377
    5. 'rer' → logprob: -9.133965492248535
    6. 'ger' → logprob: -9.758965492248535
    7. 'e' → logprob: -10.508965492248535
    8. ' de' → logprob: -10.883965492248535
    9. 'érer' → logprob: -10.883965492248535
    10. 'r' → logprob: -10.883965492248535

Token 148: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.17732715606689453
    2. 'des' → logprob: -1.9273271560668945
    3. ' ' → logprob: -4.8023271560668945
    4. '<|end|>' → logprob: -5.1773271560668945
    5. 'd' → logprob: -7.0523271560668945
    6. 's' → logprob: -7.0523271560668945
    7. 'les' → logprob: -7.8023271560668945
    8. ' ' → logprob: -8.177327156066895
    9. ' les' → logprob: -8.427327156066895
    10. ' de' → logprob: -9.677327156066895

Token 149: ' données' (ID: 30580)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.40301716327667236
    2. 'des' → logprob: -1.1530171632766724
    3. 'd' → logprob: -4.653017044067383
    4. 'élé' → logprob: -5.903017044067383
    5. 'types' → logprob: -6.153017044067383
    6. ' données' → logprob: -7.653017044067383
    7. ' ' → logprob: -7.903017044067383
    8. ' types' → logprob: -8.278017044067383
    9. 'type' → logprob: -9.278017044067383
    10. '```' → logprob: -9.278017044067383

Token 150: ' numériques' (ID: 153198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24047860503196716
    2. '<|end|>' → logprob: -1.8654786348342896
    3. ' ' → logprob: -3.740478515625
    4. '_' → logprob: -3.990478515625
    5. ',' → logprob: -5.240478515625
    6. '.' → logprob: -5.365478515625
    7. ' s' → logprob: -6.115478515625
    8. '[' → logprob: -6.365478515625
    9. '[]' → logprob: -7.240478515625
    10. ' ,' → logprob: -8.115478515625

Token 151: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.153955101966858
    2. 'import' → logprob: -1.278955101966858
    3. '<|end|>' → logprob: -1.903955101966858
    4. '

' → logprob: -2.0289549827575684
    5. ' 

' → logprob: -3.0289549827575684
    6. ' 
' → logprob: -3.1539549827575684
    7. ' ' → logprob: -3.9039549827575684
    8. '#' → logprob: -5.778954982757568
    9. '  
' → logprob: -6.403954982757568
    10. '<|end|>' → logprob: -6.528954982757568

Token 153: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.268276572227478
    2. ' sys' → logprob: -2.7682766914367676
    3. ' bis' → logprob: -3.0182766914367676
    4. ' functools' → logprob: -3.0182766914367676
    5. 'os' → logprob: -3.1432766914367676
    6. ' random' → logprob: -5.018276691436768
    7. ' datetime' → logprob: -5.143276691436768
    8. 'sys' → logprob: -5.393276691436768
    9. 'bis' → logprob: -5.893276691436768
    10. ' json' → logprob: -5.893276691436768

Token 154: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.1994775377388578e-05
    2. 'ec' → logprob: -12.625012397766113
    3. ' ' → logprob: -13.000012397766113
    4. 'ected' → logprob: -13.000012397766113
    5. 'e' → logprob: -13.500012397766113
    6. 'ects' → logprob: -13.875012397766113
    7. 'ector' → logprob: -14.500012397766113
    8. 't' → logprob: -15.125012397766113
    9. 'ecta' → logprob: -15.125012397766113
    10. 'ections' → logprob: -15.875012397766113

Token 155: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00020425561524461955
    2. ' #' → logprob: -9.375204086303711
    3. '  ' → logprob: -9.625204086303711
    4. '<|end|>' → logprob: -10.500204086303711
    5. ' ' → logprob: -11.125204086303711
    6. '.' → logprob: -12.500204086303711
    7. 'import' → logprob: -13.375204086303711
    8. ' import' → logprob: -13.500204086303711
    9. '_' → logprob: -13.875204086303711
    10. ',' → logprob: -14.000204086303711

Token 156: ' #' (ID: 1069)
  Prédit: ' #'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' #' → logprob: -0.62134850025177
    2. '#' → logprob: -0.99634850025177
    3. ' ' → logprob: -2.3713483810424805
    4. '  ' → logprob: -9.62134838104248
    5. 'import' → logprob: -9.99634838104248
    6. '<|end|>' → logprob: -10.49634838104248
    7. ',' → logprob: -11.37134838104248
    8. '.' → logprob: -11.49634838104248
    9. ' ' → logprob: -11.49634838104248
    10. '```' → logprob: -12.12134838104248

Token 157: ' A' (ID: 355)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002563291694968939
    2. ' #' → logprob: -6.7525634765625
    3. ' ' → logprob: -7.1275634765625
    4. ' import' → logprob: -7.6275634765625
    5. ' bis' → logprob: -10.5025634765625
    6. 'import' → logprob: -10.6275634765625
    7. '#' → logprob: -11.6275634765625
    8. ' b' → logprob: -11.7525634765625
    9. '  ' → logprob: -12.3775634765625
    10. ' space' → logprob: -12.5025634765625

Token 158: 'ide' (ID: 617)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1552397012710571
    2. 's' → logprob: -1.5302397012710571
    3. 'rray' → logprob: -2.2802395820617676
    4. 'is' → logprob: -2.4052395820617676
    5. ' s' → logprob: -2.9052395820617676
    6. 'rr' → logprob: -3.2802395820617676
    7. ' #' → logprob: -3.4052395820617676
    8. 'll' → logprob: -3.6552395820617676
    9. 'pp' → logprob: -4.030239582061768
    10. 'ss' → logprob: -4.280239582061768

Token 159: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05718906596302986
    2. ' à' → logprob: -3.1821889877319336
    3. ' to' → logprob: -5.432188987731934
    4. ' a' → logprob: -5.682188987731934
    5. '<|end|>' → logprob: -5.682188987731934
    6. 'to' → logprob: -7.682188987731934
    7. '  ' → logprob: -7.807188987731934
    8. '_' → logprob: -7.932188987731934
    9. 's' → logprob: -8.182188987731934
    10. ' ' → logprob: -8.432188987731934

Token 160: ' manip' (ID: 20526)
  Prédit: ' ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ins' → logprob: -0.04402933269739151
    2. 'ins' → logprob: -3.2940292358398438
    3. ' tr' → logprob: -6.294029235839844
    4. 'tr' → logprob: -7.044029235839844
    5. ' manip' → logprob: -7.294029235839844
    6. ' gérer' → logprob: -7.419029235839844
    7. ' maintenir' → logprob: -7.419029235839844
    8. 'maint' → logprob: -7.544029235839844
    9. 'in' → logprob: -8.044029235839844
    10. ' effectuer' → logprob: -9.169029235839844

Token 161: 'uler' (ID: 11802)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.5433906316757202
    2. 'uler' → logprob: -1.4183906316757202
    3. 'ort' → logprob: -2.6683907508850098
    4. 'ulate' → logprob: -3.0433907508850098
    5. 'ler' → logprob: -3.5433907508850098
    6. 'orter' → logprob: -4.91839075088501
    7. 'ul' → logprob: -5.41839075088501
    8. 'ulator' → logprob: -6.04339075088501
    9. 'érer' → logprob: -6.04339075088501
    10. 'uter' → logprob: -6.41839075088501

Token 162: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.0580312013626099
    2. ' lists' → logprob: -1.1830312013626099
    3. ' arrays' → logprob: -1.8080312013626099
    4. ' ' → logprob: -3.0580310821533203
    5. '<|end|>' → logprob: -3.3080310821533203
    6. ' sorted' → logprob: -3.8080310821533203
    7. ' les' → logprob: -3.9330310821533203
    8. ' collections' → logprob: -4.55803108215332
    9. 'arrays' → logprob: -4.68303108215332
    10. 'sorted' → logprob: -4.68303108215332

Token 163: ' listes' (ID: 179198)
  Prédit: ' sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.5375910997390747
    2. ' listes' → logprob: -1.6625910997390747
    3. 'sorted' → logprob: -1.9125910997390747
    4. 'list' → logprob: -2.912590980529785
    5. ' list' → logprob: -4.662590980529785
    6. ' lists' → logprob: -5.162590980529785
    7. 'lists' → logprob: -6.412590980529785
    8. ' ' → logprob: -6.537590980529785
    9. 's' → logprob: -6.662590980529785
    10. ' liste' → logprob: -7.412590980529785

Token 164: ' tri' (ID: 12665)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1075199842453003
    2. ',' → logprob: -1.8575199842453003
    3. '<|end|>' → logprob: -1.9825199842453003
    4. '_sorted' → logprob: -2.73252010345459
    5. 's' → logprob: -2.85752010345459
    6. 'import' → logprob: -3.35752010345459
    7. '.' → logprob: -3.60752010345459
    8. '_' → logprob: -3.73252010345459
    9. ' import' → logprob: -3.98252010345459
    10. '.insert' → logprob: -4.48252010345459

Token 165: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.003951475024223328
    2. 'st' → logprob: -6.628951549530029
    3. 's' → logprob: -7.628951549530029
    4. 'nées' → logprob: -7.628951549530029
    5. 'd' → logprob: -8.003951072692871
    6. 'es' → logprob: -8.128951072692871
    7. 'é' → logprob: -8.378951072692871
    8. 'ees' → logprob: -9.003951072692871
    9. 'ng' → logprob: -9.003951072692871
    10. 'stes' → logprob: -9.378951072692871

Token 166: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6451007723808289
    2. '<|end|>' → logprob: -1.0201008319854736
    3. 'import' → logprob: -3.7701008319854736
    4. '
' → logprob: -3.7701008319854736
    5. '#' → logprob: -3.8951008319854736
    6. ' 
' → logprob: -4.0201005935668945
    7. '.' → logprob: -4.3951005935668945
    8. '  
' → logprob: -5.0201005935668945
    9. ' #' → logprob: -5.8951005935668945
    10. ',' → logprob: -6.2701005935668945

Token 167: ' ajoute' (ID: 91611)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18679264187812805
    2. ' notamment' → logprob: -2.0617926120758057
    3. 'import' → logprob: -4.561792850494385
    4. ' #' → logprob: -5.311792850494385
    5. ' especially' → logprob: -5.811792850494385
    6. '#' → logprob: -5.936792850494385
    7. '  ' → logprob: -6.186792850494385
    8. ' import' → logprob: -6.186792850494385
    9. ' permettant' → logprob: -6.186792850494385
    10. ' en' → logprob: -6.186792850494385

Token 168: ' ou' (ID: 2031)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.1270144134759903
    2. ' des' → logprob: -3.127014398574829
    3. ',' → logprob: -3.752014398574829
    4. ' ou' → logprob: -3.877014398574829
    5. 'et' → logprob: -4.502014636993408
    6. ' ' → logprob: -4.877014636993408
    7. 'des' → logprob: -6.377014636993408
    8. '/' → logprob: -6.752014636993408
    9. 'er' → logprob: -6.752014636993408
    10. ' de' → logprob: -6.877014636993408

Token 169: ' cherche' (ID: 52345)
  Prédit: ' rechercher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rechercher' → logprob: -0.8880453109741211
    2. ' recherche' → logprob: -1.638045310974121
    3. ' chercher' → logprob: -2.013045310974121
    4. 'chercher' → logprob: -2.513045310974121
    5. 'cherche' → logprob: -2.763045310974121
    6. 're' → logprob: -3.263045310974121
    7. ' cherche' → logprob: -3.513045310974121
    8. 'maint' → logprob: -4.888045310974121
    9. ' trouver' → logprob: -5.013045310974121
    10. 'sup' → logprob: -5.013045310974121

Token 170: ' efficacement' (ID: 155449)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.18208172917366028
    2. 'des' → logprob: -2.932081699371338
    3. '_' → logprob: -3.682081699371338
    4. ' ' → logprob: -3.682081699371338
    5. ' dans' → logprob: -4.057081699371338
    6. '<|end|>' → logprob: -4.182081699371338
    7. 'dans' → logprob: -5.307081699371338
    8. 'import' → logprob: -5.432081699371338
    9. ' de' → logprob: -5.432081699371338
    10. ',' → logprob: -5.557081699371338

Token 171: '.
' (ID: 558)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.030756806954741478
    2. ' ' → logprob: -4.280756950378418
    3. 'des' → logprob: -4.905756950378418
    4. '<|end|>' → logprob: -5.280756950378418
    5. '_' → logprob: -6.155756950378418
    6. ',' → logprob: -7.530756950378418
    7. '_des' → logprob: -8.530756950378418
    8. 'import' → logprob: -8.530756950378418
    9. ' de' → logprob: -8.905756950378418
    10. ' ' → logprob: -9.030756950378418

Token 172: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1626286506652832
    2. 'import' → logprob: -1.1626286506652832
    3. '<|end|>' → logprob: -1.1626286506652832
    4. '

' → logprob: -3.912628650665283
    5. ' 
' → logprob: -4.162628650665283
    6. ' ' → logprob: -4.912628650665283
    7. '\n' → logprob: -5.662628650665283
    8. ' 

' → logprob: -5.787628650665283
    9. '#' → logprob: -5.912628650665283
    10. '  
' → logprob: -6.162628650665283

Token 173: ' sys' (ID: 12228)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.7410610914230347
    2. ' os' → logprob: -1.2410610914230347
    3. ' random' → logprob: -2.366061210632324
    4. ' json' → logprob: -3.616061210632324
    5. 'os' → logprob: -3.616061210632324
    6. 'fun' → logprob: -3.741061210632324
    7. 'random' → logprob: -4.116061210632324
    8. ' operator' → logprob: -4.241061210632324
    9. ' datetime' → logprob: -4.241061210632324
    10. 'json' → logprob: -4.991061210632324

Token 174: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 175: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: ' Fourn' (ID: 177490)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6795833706855774
    2. ' import' → logprob: -1.1795833110809326
    3. 'import' → logprob: -1.9295833110809326
    4. '#' → logprob: -4.054583549499512
    5. ' #' → logprob: -4.679583549499512
    6. ' 
' → logprob: -5.679583549499512
    7. ' sys' → logprob: -5.679583549499512
    8. '<|end|>' → logprob: -6.304583549499512
    9. '
' → logprob: -6.679583549499512
    10. ' 

' → logprob: -7.304583549499512

Token 177: 'it' (ID: 278)
  Prédit: 'uture'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uture' → logprob: -0.4282066226005554
    2. 'import' → logprob: -2.6782066822052
    3. '__' → logprob: -2.6782066822052
    4. 'utures' → logprob: -3.4282066822052
    5. '.' → logprob: -3.6782066822052
    6. 'iture' → logprob: -4.553206443786621
    7. 'ault' → logprob: -4.678206443786621
    8. 'ction' → logprob: -4.678206443786621
    9. 'ature' → logprob: -5.178206443786621
    10. '_' → logprob: -5.178206443786621

Token 178: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04342252388596535
    2. ' os' → logprob: -4.168422698974609
    3. ' sys' → logprob: -4.293422698974609
    4. '<|end|>' → logprob: -5.668422698974609
    5. '  ' → logprob: -5.793422698974609
    6. ' import' → logprob: -6.418422698974609
    7. ' ' → logprob: -6.668422698974609
    8. '' → logprob: -7.293422698974609
    9. '.' → logprob: -7.293422698974609
    10. ' space' → logprob: -7.793422698974609

Token 179: ' variables' (ID: 13955)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.2419837862253189
    2. ' sys' → logprob: -1.8669837713241577
    3. ' collections' → logprob: -3.6169838905334473
    4. 'os' → logprob: -4.116983890533447
    5. ' argv' → logprob: -5.741983890533447
    6. '_' → logprob: -6.116983890533447
    7. 'collections' → logprob: -6.241983890533447
    8. 'sys' → logprob: -6.241983890533447
    9. ' modules' → logprob: -6.991983890533447
    10. 'import' → logprob: -7.241983890533447

Token 180: ' et' (ID: 859)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06887108832597733
    2. '<|end|>' → logprob: -3.193871021270752
    3. ',' → logprob: -4.443871021270752
    4. 'import' → logprob: -4.818871021270752
    5. '<|end|>' → logprob: -6.693871021270752
    6. '[' → logprob: -6.693871021270752
    7. ' ' → logprob: -6.943871021270752
    8. '.setdefault' → logprob: -7.818871021270752
    9. '
' → logprob: -8.31887149810791
    10. '' → logprob: -8.44387149810791

Token 181: ' fonctions' (ID: 87283)
  Prédit: ' fonctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonctions' → logprob: -0.6036978960037231
    2. ' functions' → logprob: -0.9786978960037231
    3. ' des' → logprob: -2.6036977767944336
    4. 'functions' → logprob: -7.103697776794434
    5. ' interfaces' → logprob: -7.978697776794434
    6. ' fonctionnalités' → logprob: -8.228697776794434
    7. 'des' → logprob: -8.353697776794434
    8. ' accès' → logprob: -8.353697776794434
    9. ' ' → logprob: -8.353697776794434
    10. 'interfaces' → logprob: -8.853697776794434

Token 182: ' propres' (ID: 73747)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 183: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8454135060310364
    2. 'import' → logprob: -1.7204134464263916
    3. '.' → logprob: -1.9704134464263916
    4. '_' → logprob: -2.3454134464263916
    5. ' à' → logprob: -2.7204134464263916
    6. ' import' → logprob: -3.0954134464263916
    7. ' aux' → logprob: -4.470413684844971
    8. ',' → logprob: -4.845413684844971
    9. '<|end|>' → logprob: -5.970413684844971
    10. ' to' → logprob: -5.970413684844971

Token 184: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.03618558123707771
    2. 'l' → logprob: -3.4111855030059814
    3. ' Python' → logprob: -7.1611857414245605
    4. 'Python' → logprob: -7.1611857414245605
    5. 'le' → logprob: -7.2861857414245605
    6. ' le' → logprob: -9.036185264587402
    7. 'python' → logprob: -9.786185264587402
    8. ' ' → logprob: -10.036185264587402
    9. ' python' → logprob: -11.286185264587402
    10. '	l' → logprob: -11.536185264587402

Token 185: ''inter' (ID: 55731)
  Prédit: ' système'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' système' → logprob: -0.7119657397270203
    2. ' sys' → logprob: -1.711965799331665
    3. ' system' → logprob: -2.086965799331665
    4. 'sys' → logprob: -2.836965799331665
    5. 'import' → logprob: -3.336965799331665
    6. 'os' → logprob: -3.586965799331665
    7. '_' → logprob: -4.461965560913086
    8. 'ython' → logprob: -4.711965560913086
    9. 'system' → logprob: -4.836965560913086
    10. 's' → logprob: -5.086965560913086

Token 186: 'pré' (ID: 192449)
  Prédit: 'preter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'preter' → logprob: -0.4626252353191376
    2. 'pré' → logprob: -1.46262526512146
    3. 'pr' → logprob: -2.33762526512146
    4. 'face' → logprob: -3.58762526512146
    5. 'p' → logprob: -5.212625026702881
    6. 'pre' → logprob: -5.712625026702881
    7. 'pret' → logprob: -6.087625026702881
    8. 'prete' → logprob: -6.462625026702881
    9. 'n' → logprob: -6.962625026702881
    10. 'faces' → logprob: -7.837625026702881

Token 187: 'teur' (ID: 45262)
  Prédit: 'preter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'preter' → logprob: -0.3101397454738617
    2. 'p' → logprob: -2.3101396560668945
    3. 'pre' → logprob: -2.8101396560668945
    4. 'pré' → logprob: -3.0601396560668945
    5. 'pr' → logprob: -3.6851396560668945
    6. 'prete' → logprob: -4.4351396560668945
    7. 'teur' → logprob: -5.1851396560668945
    8. '>' → logprob: -5.1851396560668945
    9. '#' → logprob: -5.8101396560668945
    10. '```' → logprob: -6.1851396560668945

Token 188: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 189: 'comme' (ID: 126724)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3099249303340912
    2. ' sys' → logprob: -2.059924840927124
    3. ' )' → logprob: -2.559924840927124
    4. 'sys' → logprob: -3.809924840927124
    5. ' import' → logprob: -4.684925079345703
    6. ',' → logprob: -4.934925079345703
    7. 'import' → logprob: -5.059925079345703
    8. ' ' → logprob: -5.184925079345703
    9. ' system' → logprob: -5.809925079345703
    10. ' os' → logprob: -5.809925079345703

Token 190: ' stdin' (ID: 75143)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.703420877456665
    2. ' argv' → logprob: -0.828420877456665
    3. 'argv' → logprob: -3.328420877456665
    4. 'sys' → logprob: -3.578420877456665
    5. ' stdin' → logprob: -6.703420639038086
    6. '.argv' → logprob: -7.078420639038086
    7. '=sys' → logprob: -7.078420639038086
    8. 'stdout' → logprob: -7.703420639038086
    9. ' stdout' → logprob: -8.078420639038086
    10. 'stderr' → logprob: -8.578420639038086

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1028987243771553
    2. ')' → logprob: -2.3528988361358643
    3. 'import' → logprob: -6.602898597717285
    4. ' ,' → logprob: -7.727898597717285
    5. ' )' → logprob: -8.227898597717285
    6. 'stdout' → logprob: -9.477898597717285
    7. 'input' → logprob: -9.602898597717285
    8. '```' → logprob: -9.602898597717285
    9. '.readline' → logprob: -9.727898597717285
    10. ',input' → logprob: -9.727898597717285

Token 192: ' exit' (ID: 10654)
  Prédit: 'stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdout' → logprob: -0.09144006669521332
    2. 'argv' → logprob: -2.591439962387085
    3. ' stdout' → logprob: -4.841440200805664
    4. ' argv' → logprob: -5.591440200805664
    5. 'stderr' → logprob: -7.091440200805664
    6. 'exit' → logprob: -12.091440200805664
    7. '.stdout' → logprob: -12.341440200805664
    8. ' stderr' → logprob: -12.966440200805664
    9. '.argv' → logprob: -14.466440200805664
    10. '_stdout' → logprob: -14.716440200805664

Token 193: '...' (ID: 1008)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003595433197915554
    2. ',' → logprob: -5.753595352172852
    3. ')
' → logprob: -8.753595352172852
    4. 'import' → logprob: -9.503595352172852
    5. ' )' → logprob: -9.878595352172852
    6. ').' → logprob: -10.253595352172852
    7. '`)' → logprob: -10.753595352172852
    8. '```' → logprob: -11.503595352172852
    9. ')

' → logprob: -11.628595352172852
    10. 'sys' → logprob: -11.753595352172852

Token 194: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019291093340143561
    2. ')
' → logprob: -7.00192928314209
    3. ',' → logprob: -7.12692928314209
    4. ' )' → logprob: -9.00192928314209
    5. 'import' → logprob: -10.00192928314209
    6. ')

' → logprob: -10.50192928314209
    7. '```' → logprob: -12.75192928314209
    8. ')
' → logprob: -12.87692928314209
    9. '
' → logprob: -13.00192928314209
    10. '`)' → logprob: -13.12692928314209

Token 195: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5361568927764893
    2. '

' → logprob: -1.6611568927764893
    3. 'import' → logprob: -1.7861568927764893
    4. '#' → logprob: -3.6611568927764893
    5. '\n' → logprob: -5.03615665435791
    6. '' → logprob: -5.53615665435791
    7. 'def' → logprob: -5.91115665435791
    8. ' 
' → logprob: -6.16115665435791
    9. '<|end|>' → logprob: -6.16115665435791
    10. 'n' → logprob: -6.28615665435791

Token 196: ' copy' (ID: 5150)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.003572269342839718
    2. 'os' → logprob: -5.878572463989258
    3. ' json' → logprob: -8.003572463989258
    4. ' functools' → logprob: -8.503572463989258
    5. ' random' → logprob: -9.128572463989258
    6. ' datetime' → logprob: -10.378572463989258
    7. 'json' → logprob: -10.753572463989258
    8. 'random' → logprob: -10.753572463989258
    9. ' time' → logprob: -11.128572463989258
    10. ' io' → logprob: -11.628572463989258

Token 197: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5326224565505981
    2. '<|end|>' → logprob: -0.9076224565505981
    3. '.' → logprob: -6.032622337341309
    4. '<|end|>' → logprob: -6.782622337341309
    5. '_' → logprob: -7.157622337341309
    6. '  ' → logprob: -7.282622337341309
    7. ' as' → logprob: -7.407622337341309
    8. ',' → logprob: -7.407622337341309
    9. '  
' → logprob: -7.532622337341309
    10. 'import' → logprob: -7.782622337341309

Token 198: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 199: ' Perm' (ID: 20550)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0077967215329408646
    2. ' #' → logprob: -5.632796764373779
    3. ' ' → logprob: -6.382796764373779
    4. '  ' → logprob: -6.632796764373779
    5. '<|end|>' → logprob: -7.132796764373779
    6. ' import' → logprob: -9.382796287536621
    7. '#' → logprob: -9.507796287536621
    8. '<|end|>' → logprob: -10.132796287536621
    9. 'import' → logprob: -10.257796287536621
    10. '  
' → logprob: -10.882796287536621

Token 200: 'et' (ID: 292)
  Prédit: 'et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -9.865583706414327e-05
    2. 'ett' → logprob: -9.62509822845459
    3. 'ut' → logprob: -10.62509822845459
    4. 'ets' → logprob: -13.37509822845459
    5. 'it' → logprob: -13.50009822845459
    6. 'etit' → logprob: -13.50009822845459
    7. 'e' → logprob: -13.75009822845459
    8. 'at' → logprob: -14.62509822845459
    9. '#' → logprob: -15.25009822845459
    10. '```' → logprob: -15.25009822845459

Token 201: ' de' (ID: 334)
  Prédit: '.deepcopy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.deepcopy' → logprob: -0.680099368095398
    2. ' ' → logprob: -1.180099368095398
    3. ' deepcopy' → logprob: -1.805099368095398
    4. ' import' → logprob: -5.1800994873046875
    5. ' copy' → logprob: -5.4300994873046875
    6. 'import' → logprob: -5.9300994873046875
    7. '.copy' → logprob: -6.0550994873046875
    8. ' de' → logprob: -6.1800994873046875
    9. ' ' → logprob: -6.6800994873046875
    10. 'deep' → logprob: -7.4300994873046875

Token 202: ' copier' (ID: 116229)
  Prédit: ' deepcopy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deepcopy' → logprob: -0.2086009830236435
    2. 'deep' → logprob: -1.7086009979248047
    3. '.deepcopy' → logprob: -5.208600997924805
    4. ' deep' → logprob: -6.583600997924805
    5. 'faire' → logprob: -9.083600997924805
    6. 'copy' → logprob: -9.833600997924805
    7. ' copier' → logprob: -9.958600997924805
    8. 'cop' → logprob: -10.083600997924805
    9. ' faire' → logprob: -10.333600997924805
    10. 'import' → logprob: -11.958600997924805

Token 203: ' des' (ID: 731)
  Prédit: '.deepcopy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.deepcopy' → logprob: -0.09009275585412979
    2. '<|end|>' → logprob: -3.215092658996582
    3. ' ' → logprob: -3.965092658996582
    4. ' deepcopy' → logprob: -4.340092658996582
    5. '.copy' → logprob: -5.340092658996582
    6. '.' → logprob: -5.965092658996582
    7. ',' → logprob: -6.340092658996582
    8. ' collections' → logprob: -7.215092658996582
    9. '<|end|>' → logprob: -7.715092658996582
    10. 'deep' → logprob: -7.715092658996582

Token 204: ' objets' (ID: 83726)
  Prédit: ' objects'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' objects' → logprob: -0.8626435399055481
    2. ' objets' → logprob: -0.8626435399055481
    3. 'obj' → logprob: -1.9876434803009033
    4. 'objects' → logprob: -4.487643718719482
    5. ' obj' → logprob: -5.362643718719482
    6. ' objetos' → logprob: -6.612643718719482
    7. ' objet' → logprob: -7.862643718719482
    8. ' collections' → logprob: -8.237643241882324
    9. '.deepcopy' → logprob: -8.237643241882324
    10. 'objet' → logprob: -8.862643241882324

Token 205: ' (' (ID: 350)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6972969770431519
    2. ' ' → logprob: -1.6972969770431519
    3. '<|end|>' → logprob: -2.1972970962524414
    4. '.deepcopy' → logprob: -2.3222970962524414
    5. '_' → logprob: -3.3222970962524414
    6. ',' → logprob: -3.3222970962524414
    7. 'import' → logprob: -4.072297096252441
    8. '.copy' → logprob: -5.572297096252441
    9. ' as' → logprob: -6.197297096252441
    10. '<|end|>' → logprob: -6.322297096252441

Token 206: 'prof' (ID: 30733)
  Prédit: ' deepcopy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deepcopy' → logprob: -1.211309790611267
    2. '.deepcopy' → logprob: -1.336309790611267
    3. ' )' → logprob: -1.836309790611267
    4. ')' → logprob: -2.2113099098205566
    5. 'deep' → logprob: -2.3363099098205566
    6. ' ' → logprob: -2.8363099098205566
    7. ' deep' → logprob: -4.711309909820557
    8. ',' → logprob: -5.836309909820557
    9. 'de' → logprob: -7.586309909820557
    10. 's' → logprob: -7.711309909820557

Token 207: 'ond' (ID: 1415)
  Prédit: 'onde'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onde' → logprob: -0.3407796323299408
    2. 'ond' → logprob: -1.8407796621322632
    3. 'onda' → logprob: -2.3407795429229736
    4. 'deep' → logprob: -5.090779781341553
    5. '```' → logprob: -5.090779781341553
    6. 'on' → logprob: -5.340779781341553
    7. '.deepcopy' → logprob: -5.590779781341553
    8. 'ound' → logprob: -5.965779781341553
    9. ' deepcopy' → logprob: -5.965779781341553
    10. 'ondo' → logprob: -6.340779781341553

Token 208: 'ément' (ID: 17645)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5795887112617493
    2. 'e' → logprob: -1.5795886516571045
    3. ' )' → logprob: -1.5795886516571045
    4. ' ' → logprob: -3.8295886516571045
    5. ' deepcopy' → logprob: -5.454588890075684
    6. 'deep' → logprob: -7.204588890075684
    7. '.deepcopy' → logprob: -8.079588890075684
    8. ' e' → logprob: -8.454588890075684
    9. ' deep' → logprob: -9.079588890075684
    10. ',' → logprob: -9.329588890075684

Token 209: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4774914085865021
    2. ',' → logprob: -0.9774913787841797
    3. ' )' → logprob: -6.22749137878418
    4. 'import' → logprob: -7.47749137878418
    5. 'deep' → logprob: -8.22749137878418
    6. ').' → logprob: -8.35249137878418
    7. ' ,' → logprob: -8.85249137878418
    8. ',)' → logprob: -9.60249137878418
    9. '.deepcopy' → logprob: -10.35249137878418
    10. ' deepcopy' → logprob: -10.60249137878418

Token 210: ' non' (ID: 2893)
  Prédit: ' superfic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' superfic' → logprob: -0.38431358337402344
    2. ' peu' → logprob: -1.6343135833740234
    3. ' shallow' → logprob: -3.2593135833740234
    4. ' superf' → logprob: -3.8843135833740234
    5. 'sh' → logprob: -4.009313583374023
    6. ' légèrement' → logprob: -4.634313583374023
    7. 'fa' → logprob: -5.384313583374023
    8. 's' → logprob: -5.384313583374023
    9. ' fa' → logprob: -5.634313583374023
    10. 'à' → logprob: -5.634313583374023

Token 211: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005207431968301535
    2. ' )' → logprob: -8.000520706176758
    3. ',' → logprob: -9.500520706176758
    4. 'import' → logprob: -9.625520706176758
    5. ').' → logprob: -10.375520706176758
    6. ')
' → logprob: -12.500520706176758
    7. ')

' → logprob: -13.375520706176758
    8. '.' → logprob: -13.750520706176758
    9. 's' → logprob: -13.750520706176758
    10. '`)' → logprob: -14.375520706176758

Token 212: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37616097927093506
    2. '

' → logprob: -1.626160979270935
    3. 'import' → logprob: -2.7511610984802246
    4. '<|end|>' → logprob: -3.8761610984802246
    5. ' 
' → logprob: -5.001161098480225
    6. ' 

' → logprob: -5.126161098480225
    7. '#' → logprob: -5.376161098480225
    8. 'def' → logprob: -5.876161098480225
    9. '\n' → logprob: -6.126161098480225
    10. '
 
' → logprob: -6.501161098480225

Token 213: ' functools' (ID: 142636)
  Prédit: 'json'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'json' → logprob: -1.0405150651931763
    2. ' json' → logprob: -1.2905150651931763
    3. ' functools' → logprob: -1.9155150651931763
    4. ' os' → logprob: -2.2905149459838867
    5. 'os' → logprob: -2.9155149459838867
    6. 'random' → logprob: -3.6655149459838867
    7. ' random' → logprob: -4.040514945983887
    8. ' datetime' → logprob: -4.790514945983887
    9. 'fun' → logprob: -5.540514945983887
    10. 'datetime' → logprob: -5.665514945983887

Token 214: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.936697781085968
    2. '<|end|>' → logprob: -1.1866977214813232
    3. ' as' → logprob: -2.3116977214813232
    4. 'import' → logprob: -2.4366977214813232
    5. ',' → logprob: -2.9366977214813232
    6. ' import' → logprob: -3.9366977214813232
    7. ' ' → logprob: -5.061697959899902
    8. ' ,' → logprob: -5.061697959899902
    9. 'from' → logprob: -5.436697959899902
    10. '#' → logprob: -5.686697959899902

Token 215: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8825441598892212
    2. ' ' → logprob: -1.0075441598892212
    3. ' #' → logprob: -1.8825441598892212
    4. 'import' → logprob: -3.6325440406799316
    5. ' as' → logprob: -4.007544040679932
    6. ',' → logprob: -4.632544040679932
    7. '<|end|>' → logprob: -5.007544040679932
    8. 'from' → logprob: -6.257544040679932
    9. ' import' → logprob: -6.882544040679932
    10. '  ' → logprob: -6.882544040679932

Token 216: ' Fourn' (ID: 177490)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43371590971946716
    2. ' from' → logprob: -1.1837159395217896
    3. 'from' → logprob: -3.8087158203125
    4. ' functools' → logprob: -4.5587158203125
    5. ' import' → logprob: -4.6837158203125
    6. 'import' → logprob: -6.8087158203125
    7. ' ' → logprob: -6.8087158203125
    8. 'fun' → logprob: -7.9337158203125
    9. ' as' → logprob: -8.0587158203125
    10. ' #' → logprob: -8.6837158203125

Token 217: 'it' (ID: 278)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.3279674053192139
    2. 'ctions' → logprob: -1.4529674053192139
    3. 'ences' → logprob: -2.577967405319214
    4. 'es' → logprob: -3.077967405319214
    5. 'aces' → logprob: -3.077967405319214
    6. 's' → logprob: -3.577967405319214
    7. 'ites' → logprob: -3.702967405319214
    8. 'et' → logprob: -3.827967405319214
    9. 'ct' → logprob: -3.952967405319214
    10. 'als' → logprob: -3.952967405319214

Token 218: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4415491223335266
    2. ' des' → logprob: -1.1915490627288818
    3. ' functools' → logprob: -3.191549062728882
    4. ' une' → logprob: -5.816549301147461
    5. ' from' → logprob: -6.441549301147461
    6. ' as' → logprob: -6.441549301147461
    7. ' a' → logprob: -6.816549301147461
    8. ' ' → logprob: -7.191549301147461
    9. 'des' → logprob: -7.566549301147461
    10. 'from' → logprob: -7.816549301147461

Token 219: ' outils' (ID: 63365)
  Prédit: ' tools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tools' → logprob: -0.07144958525896072
    2. ' l' → logprob: -3.9464495182037354
    3. ' functools' → logprob: -4.3214497566223145
    4. 'l' → logprob: -4.8214497566223145
    5. ' wraps' → logprob: -4.9464497566223145
    6. ' partial' → logprob: -5.4464497566223145
    7. 'tools' → logprob: -5.5714497566223145
    8. ' ' → logprob: -6.4464497566223145
    9. 'partial' → logprob: -6.6964497566223145
    10. 'wrap' → logprob: -6.6964497566223145

Token 220: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15201324224472046
    2. 'from' → logprob: -3.2770133018493652
    3. ' as' → logprob: -3.7770133018493652
    4. 'import' → logprob: -4.027013301849365
    5. ' from' → logprob: -4.402013301849365
    6. '.' → logprob: -4.402013301849365
    7. '_' → logprob: -4.527013301849365
    8. ',' → logprob: -4.527013301849365
    9. '<|end|>' → logprob: -4.902013301849365
    10. ' import' → logprob: -5.527013301849365

Token 221: ' programmer' (ID: 72896)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.0698273181915283
    2. ' la' → logprob: -1.3198273181915283
    3. 'l' → logprob: -1.6948273181915283
    4. 'la' → logprob: -2.8198273181915283
    5. ' des' → logprob: -3.5698273181915283
    6. ' les' → logprob: -4.444827079772949
    7. ' programmer' → logprob: -4.569827079772949
    8. ' travailler' → logprob: -4.694827079772949
    9. ' functools' → logprob: -4.694827079772949
    10. ' utiliser' → logprob: -4.944827079772949

Token 222: ' avec' (ID: 3937)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6175201535224915
    2. ' ' → logprob: -0.9925201535224915
    3. ',' → logprob: -3.2425200939178467
    4. 'import' → logprob: -3.7425200939178467
    5. ' ,' → logprob: -5.367520332336426
    6. ' functools' → logprob: -5.367520332336426
    7. ' import' → logprob: -5.742520332336426
    8. ' _' → logprob: -5.742520332336426
    9. ' ' → logprob: -5.867520332336426
    10. '.' → logprob: -6.617520332336426

Token 223: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7148125171661377
    2. ' functools' → logprob: -1.5898125171661377
    3. 'l' → logprob: -2.0898125171661377
    4. ' l' → logprob: -3.3398125171661377
    5. ' fonctions' → logprob: -3.4648125171661377
    6. ' functions' → logprob: -3.4648125171661377
    7. 'des' → logprob: -3.5898125171661377
    8. 'fun' → logprob: -4.214812278747559
    9. 'functions' → logprob: -4.714812278747559
    10. 'la' → logprob: -5.714812278747559

Token 224: ' fonctions' (ID: 87283)
  Prédit: ' fonctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonctions' → logprob: -1.0871272087097168
    2. 'functions' → logprob: -1.5871272087097168
    3. ' outils' → logprob: -2.337127208709717
    4. ' functions' → logprob: -2.462127208709717
    5. ' functools' → logprob: -2.462127208709717
    6. 'fun' → logprob: -3.337127208709717
    7. 'tools' → logprob: -3.462127208709717
    8. 'out' → logprob: -3.587127208709717
    9. 'l' → logprob: -3.712127208709717
    10. ' tools' → logprob: -4.337127208709717

Token 225: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: ' haut' (ID: 28223)
  Prédit: 'ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ordre' → logprob: -0.10681101679801941
    2. 'plus' → logprob: -3.231811046600342
    3. 'ord' → logprob: -4.106811046600342
    4. 'fonction' → logprob: -4.356811046600342
    5. 'haut' → logprob: -4.481811046600342
    6. 'programm' → logprob: -5.481811046600342
    7. 'fon' → logprob: -5.606811046600342
    8. ' ordre' → logprob: -6.356811046600342
    9. 'python' → logprob: -6.481811046600342
    10. 'out' → logprob: -6.981811046600342

Token 227: ' niveau' (ID: 21708)
  Prédit: ' niveau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' niveau' → logprob: -0.07382496446371078
    2. 'niveau' → logprob: -3.073824882507324
    3. '-n' → logprob: -4.698824882507324
    4. 'n' → logprob: -4.823824882507324
    5. ' ' → logprob: -5.823824882507324
    6. ' nive' → logprob: -6.573824882507324
    7. ' nivel' → logprob: -7.073824882507324
    8. '-' → logprob: -7.323824882507324
    9. 'nivel' → logprob: -7.823824882507324
    10. ' ordre' → logprob: -8.073824882507324

Token 228: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 229: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2798164188861847
    2. '
' → logprob: -2.1548163890838623
    3. '\n' → logprob: -3.4048163890838623
    4. ' 
' → logprob: -3.4048163890838623
    5. '  
' → logprob: -3.9048163890838623
    6. '<|end|>' → logprob: -4.154816627502441
    7. 'from' → logprob: -4.904816627502441
    8. '

' → logprob: -5.654816627502441
    9. ',' → logprob: -5.904816627502441
    10. ' ' → logprob: -6.404816627502441

Token 230: ' time' (ID: 1058)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.6893104910850525
    2. ' os' → logprob: -1.5643105506896973
    3. 'operator' → logprob: -1.5643105506896973
    4. 'os' → logprob: -3.0643105506896973
    5. ' json' → logprob: -4.939310550689697
    6. ' random' → logprob: -5.189310550689697
    7. ' datetime' → logprob: -5.314310550689697
    8. 'json' → logprob: -5.314310550689697
    9. 'random' → logprob: -5.439310550689697
    10. 'datetime' → logprob: -6.439310550689697

Token 231: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6047629117965698
    2. '<|end|>' → logprob: -0.8547629117965698
    3. '#' → logprob: -3.9797630310058594
    4. 'import' → logprob: -5.854763031005859
    5. ' #' → logprob: -6.104763031005859
    6. '<|end|>' → logprob: -6.354763031005859
    7. ',' → logprob: -6.854763031005859
    8. ' 
' → logprob: -7.229763031005859
    9. '  
' → logprob: -7.854763031005859
    10. '
' → logprob: -8.72976303100586

Token 232: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23475143313407898
    2. '<|end|>' → logprob: -1.7347514629364014
    3. ' ' → logprob: -3.7347514629364014
    4. ' #' → logprob: -5.109751224517822
    5. 'import' → logprob: -6.359751224517822
    6. '<|end|>' → logprob: -7.734751224517822
    7. ',' → logprob: -8.48475170135498
    8. '
' → logprob: -9.23475170135498
    9. ')' → logprob: -9.35975170135498
    10. '  ' → logprob: -9.60975170135498

Token 233: ' Perm' (ID: 20550)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06840996444225311
    2. ' 
' → logprob: -3.8184099197387695
    3. ' import' → logprob: -3.9434099197387695
    4. 'import' → logprob: -4.4434099197387695
    5. '  
' → logprob: -5.1934099197387695
    6. '
' → logprob: -5.8184099197387695
    7. ' ' → logprob: -6.6934099197387695
    8. '<|end|>' → logprob: -7.0684099197387695
    9. ' #' → logprob: -7.4434099197387695
    10. '  ' → logprob: -7.5684099197387695

Token 234: 'et' (ID: 292)
  Prédit: 'et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.00025776340044103563
    2. 'ett' → logprob: -8.37525749206543
    3. 'ut' → logprob: -11.75025749206543
    4. 'etre' → logprob: -12.50025749206543
    5. 'etit' → logprob: -12.75025749206543
    6. 'import' → logprob: -13.00025749206543
    7. 'ets' → logprob: -13.62525749206543
    8. '#' → logprob: -13.62525749206543
    9. 'etat' → logprob: -13.62525749206543
    10. 'ret' → logprob: -13.87525749206543

Token 235: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6973521113395691
    2. ' de' → logprob: -0.8223521113395691
    3. ' import' → logprob: -3.322352170944214
    4. ' time' → logprob: -5.072351932525635
    5. ' to' → logprob: -5.697351932525635
    6. 'import' → logprob: -5.822351932525635
    7. ' ' → logprob: -5.822351932525635
    8. ' d' → logprob: -5.947351932525635
    9. ' des' → logprob: -6.197351932525635
    10. 'to' → logprob: -6.947351932525635

Token 236: ' manip' (ID: 20526)
  Prédit: 'sleep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sleep' → logprob: -0.22456248104572296
    2. ' sleep' → logprob: -2.099562406539917
    3. 'time' → logprob: -2.724562406539917
    4. ' time' → logprob: -4.849562644958496
    5. 'perf' → logprob: -5.724562644958496
    6. 'import' → logprob: -7.474562644958496
    7. 'strftime' → logprob: -7.849562644958496
    8. 'process' → logprob: -7.974562644958496
    9. ' perf' → logprob: -8.224562644958496
    10. ' dormir' → logprob: -9.349562644958496

Token 237: 'uler' (ID: 11802)
  Prédit: 'ort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.14550605416297913
    2. 'orter' → logprob: -2.0205061435699463
    3. 'port' → logprob: -6.770505905151367
    4. 'ortar' → logprob: -7.395505905151367
    5. 'porter' → logprob: -7.520505905151367
    6. 'import' → logprob: -8.895505905151367
    7. 'orting' → logprob: -9.145505905151367
    8. 'oter' → logprob: -9.770505905151367
    9. 'orte' → logprob: -10.020505905151367
    10. 'orts' → logprob: -10.020505905151367

Token 238: ' le' (ID: 505)
  Prédit: ' datetime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' datetime' → logprob: -0.5433142185211182
    2. ' ' → logprob: -1.7933142185211182
    3. ' des' → logprob: -2.043314218521118
    4. ' time' → logprob: -3.668314218521118
    5. 'datetime' → logprob: -4.043313980102539
    6. ' le' → logprob: -4.043313980102539
    7. ' os' → logprob: -4.168313980102539
    8. 'time' → logprob: -5.043313980102539
    9. ' ' → logprob: -5.168313980102539
    10. '<|end|>' → logprob: -5.418313980102539

Token 239: ' temps' (ID: 11160)
  Prédit: ' temps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temps' → logprob: -0.19915884733200073
    2. 'temps' → logprob: -1.8241589069366455
    3. ' time' → logprob: -4.324158668518066
    4. 's' → logprob: -6.824158668518066
    5. ' ' → logprob: -7.074158668518066
    6. ' ' → logprob: -7.074158668518066
    7. 'time' → logprob: -7.199158668518066
    8. ' datetime' → logprob: -7.324158668518066
    9. 'temp' → logprob: -7.824158668518066
    10. ' temp' → logprob: -8.449158668518066

Token 240: ' et' (ID: 859)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 241: ' les' (ID: 1341)
  Prédit: ' datetime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' datetime' → logprob: -1.0969321727752686
    2. ' des' → logprob: -1.4719321727752686
    3. 'datetime' → logprob: -1.7219321727752686
    4. ' les' → logprob: -1.8469321727752686
    5. ' la' → logprob: -3.8469321727752686
    6. ' dates' → logprob: -4.221932411193848
    7. 'dates' → logprob: -4.721932411193848
    8. 'date' → logprob: -4.846932411193848
    9. 'des' → logprob: -5.221932411193848
    10. ' ses' → logprob: -5.221932411193848

Token 242: ' délais' (ID: 121141)
  Prédit: 'dates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dates' → logprob: -0.17329351603984833
    2. ' dates' → logprob: -2.0482935905456543
    3. 'datetime' → logprob: -5.048293590545654
    4. ' calend' → logprob: -5.423293590545654
    5. ' délais' → logprob: -5.423293590545654
    6. 'd' → logprob: -5.673293590545654
    7. 'hor' → logprob: -5.798293590545654
    8. 'date' → logprob: -6.048293590545654
    9. 'perform' → logprob: -6.423293590545654
    10. 'process' → logprob: -7.423293590545654

Token 243: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 244: 'import' (ID: 561)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 245: ' random' (ID: 7526)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.16983149945735931
    2. 'os' → logprob: -2.0448315143585205
    3. ' random' → logprob: -4.544831275939941
    4. ' datetime' → logprob: -5.169831275939941
    5. 'random' → logprob: -5.294831275939941
    6. ' json' → logprob: -6.044831275939941
    7. 'datetime' → logprob: -6.669831275939941
    8. 'json' → logprob: -6.669831275939941
    9. ' threading' → logprob: -8.669831275939941
    10. 'collections' → logprob: -10.044831275939941

Token 246: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6755626797676086
    2. '<|end|>' → logprob: -1.1755626201629639
    3. '#' → logprob: -2.175562620162964
    4. ' #' → logprob: -2.800562620162964
    5. '  ' → logprob: -5.300562858581543
    6. ' 
' → logprob: -7.675562858581543
    7. '<|end|>' → logprob: -7.675562858581543
    8. 'import' → logprob: -7.800562858581543
    9. ')' → logprob: -7.800562858581543
    10. '  
' → logprob: -8.050562858581543

Token 248: ' Gén' (ID: 71828)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15181805193424225
    2. ' import' → logprob: -2.901818037033081
    3. ' random' → logprob: -3.026818037033081
    4. ' ' → logprob: -4.40181827545166
    5. 'import' → logprob: -4.77681827545166
    6. '<|end|>' → logprob: -5.65181827545166
    7. ' randint' → logprob: -5.77681827545166
    8. ' #' → logprob: -5.77681827545166
    9. ' 
' → logprob: -6.40181827545166
    10. ' space' → logprob: -6.65181827545166

Token 249: 'ère' (ID: 4346)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0006944431224837899
    2. ' er' → logprob: -8.125694274902344
    3. 'ér' → logprob: -8.750694274902344
    4. 'érateur' → logprob: -9.250694274902344
    5. 'érer' → logprob: -9.875694274902344
    6. 'é' → logprob: -10.375694274902344
    7. 'eral' → logprob: -10.875694274902344
    8. 'import' → logprob: -11.625694274902344
    9. ' random' → logprob: -11.875694274902344
    10. 'random' → logprob: -12.625694274902344

Token 250: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2636316120624542
    2. '<|end|>' → logprob: -1.6386315822601318
    3. ' random' → logprob: -3.388631582260132
    4. ' des' → logprob: -6.638631820678711
    5. '_' → logprob: -7.263631820678711
    6. '  ' → logprob: -7.763631820678711
    7. '_random' → logprob: -8.263631820678711
    8. ' ' → logprob: -8.388631820678711
    9. '<|end|>' → logprob: -8.638631820678711
    10. 'random' → logprob: -8.638631820678711

Token 251: ' nombres' (ID: 76205)
  Prédit: ' nombres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.5411804914474487
    2. ' random' → logprob: -1.2911804914474487
    3. ' numbers' → logprob: -2.1661806106567383
    4. ' ' → logprob: -4.791180610656738
    5. 'random' → logprob: -5.166180610656738
    6. 'numbers' → logprob: -5.541180610656738
    7. ' des' → logprob: -6.041180610656738
    8. ' nombre' → logprob: -6.291180610656738
    9. ' integers' → logprob: -6.791180610656738
    10. ' randint' → logprob: -6.791180610656738

Token 252: ' pseudo' (ID: 62975)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 253: '-al' (ID: 13254)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4278295338153839
    2. '_random' → logprob: -1.4278295040130615
    3. 'random' → logprob: -2.5528295040130615
    4. 'import' → logprob: -5.052829742431641
    5. ' _' → logprob: -5.677829742431641
    6. ' ' → logprob: -6.052829742431641
    7. 'int' → logprob: -6.302829742431641
    8. 'ale' → logprob: -6.427829742431641
    9. '_numbers' → logprob: -6.677829742431641
    10. 'r' → logprob: -6.927829742431641

Token 254: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -9.519893501419574e-05
    2. 'e' → logprob: -9.37509536743164
    3. 'atoires' → logprob: -11.87509536743164
    4. 'éas' → logprob: -13.75009536743164
    5. '```' → logprob: -14.75009536743164
    6. 'a' → logprob: -15.12509536743164
    7. 'É' → logprob: -15.12509536743164
    8. '�' → logprob: -15.37509536743164
    9. 'étiques' → logprob: -15.37509536743164
    10. 'és' → logprob: -16.25009536743164

Token 255: 'atoires' (ID: 84948)
  Prédit: 'atoires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atoires' → logprob: -0.0013204771094024181
    2. 'a' → logprob: -7.3763203620910645
    3. 'atoire' → logprob: -7.6263203620910645
    4. 'é' → logprob: -9.001320838928223
    5. 'to' → logprob: -10.501320838928223
    6. '{' → logprob: -11.876320838928223
    7. 'ato' → logprob: -11.876320838928223
    8. '-' → logprob: -12.126320838928223
    9. '``' → logprob: -12.126320838928223
    10. '#' → logprob: -12.376320838928223

Token 256: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 257: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0355998277664185
    2. 'import' → logprob: -1.6605998277664185
    3. '\n' → logprob: -2.035599708557129
    4. 'def' → logprob: -2.410599708557129
    5. 'a' → logprob: -2.410599708557129
    6. '<|end|>' → logprob: -2.785599708557129
    7. '
' → logprob: -4.160599708557129
    8. 'x' → logprob: -4.785599708557129
    9. ' ' → logprob: -4.910599708557129
    10. 'class' → logprob: -5.035599708557129

Token 258: ' Mod' (ID: 7191)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.29870808124542236
    2. '#' → logprob: -2.048707962036133
    3. 'import' → logprob: -2.673707962036133
    4. 'class' → logprob: -4.048707962036133
    5. ' ' → logprob: -4.173707962036133
    6. 'from' → logprob: -4.173707962036133
    7. ' def' → logprob: -5.923707962036133
    8. ' class' → logprob: -6.173707962036133
    9. '_' → logprob: -6.298707962036133
    10. ' #' → logprob: -6.923707962036133

Token 259: 'ifie' (ID: 46409)
  Prédit: 'ule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.002809748286381364
    2. 'el' → logprob: -6.377809524536133
    3. 'èle' → logprob: -7.627809524536133
    4. 'ules' → logprob: -8.627809524536133
    5. 'e' → logprob: -9.252809524536133
    6. ' =' → logprob: -9.627809524536133
    7. 'u' → logprob: -9.877809524536133
    8. 'import' → logprob: -10.002809524536133
    9. '#' → logprob: -10.127809524536133
    10. 'er' → logprob: -10.502809524536133

Token 260: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47186437249183655
    2. ' ' → logprob: -1.9718643426895142
    3. 'ules' → logprob: -2.8468644618988037
    4. 'e' → logprob: -3.0968644618988037
    5. '#' → logprob: -3.8468644618988037
    6. ' random' → logprob: -3.9718644618988037
    7. 'er' → logprob: -4.596864223480225
    8. 'ule' → logprob: -4.596864223480225
    9. ' les' → logprob: -4.721864223480225
    10. ' #' → logprob: -4.721864223480225

Token 261: ' limite' (ID: 48939)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5904129147529602
    2. ' sys' → logprob: -0.9654129147529602
    3. 'import' → logprob: -3.9654128551483154
    4. 'liste' → logprob: -4.4654130935668945
    5. 'def' → logprob: -4.8404130935668945
    6. 'string' → logprob: -5.3404130935668945
    7. 'random' → logprob: -5.4654130935668945
    8. 'chaine' → logprob: -5.5904130935668945
    9. 'list' → logprob: -5.7154130935668945
    10. ' string' → logprob: -6.8404130935668945

Token 262: ' maximale' (ID: 76380)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03199133649468422
    2. ' _' → logprob: -4.906991481781006
    3. 's' → logprob: -5.031991481781006
    4. ' =' → logprob: -5.406991481781006
    5. ' ' → logprob: -5.906991481781006
    6. 'e' → logprob: -6.281991481781006
    7. ' de' → logprob: -6.531991481781006
    8. 'import' → logprob: -6.906991481781006
    9. 'sys' → logprob: -7.031991481781006
    10. '=' → logprob: -7.156991481781006

Token 263: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011651990003883839
    2. ' _' → logprob: -5.761651992797852
    3. 's' → logprob: -6.761651992797852
    4. 'import' → logprob: -6.886651992797852
    5. ' ' → logprob: -7.011651992797852
    6. ' de' → logprob: -7.136651992797852
    7. '_sys' → logprob: -7.261651992797852
    8. '_de' → logprob: -7.636651992797852
    9. 'sys' → logprob: -7.761651992797852
    10. ' =' → logprob: -7.886651992797852

Token 264: ' réc' (ID: 36254)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.7504222989082336
    2. 'r' → logprob: -0.8754222989082336
    3. ' réc' → logprob: -2.375422239303589
    4. 'la' → logprob: -4.750422477722168
    5. 're' → logprob: -5.125422477722168
    6. 'ré' → logprob: -6.875422477722168
    7. '_rec' → logprob: -6.875422477722168
    8. ' recursion' → logprob: -7.375422477722168
    9. '```' → logprob: -8.375422477722168
    10. 'l' → logprob: -8.750422477722168

Token 265: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00040886594797484577
    2. 'urs' → logprob: -8.625409126281738
    3. 'ur' → logprob: -8.750409126281738
    4. 'usion' → logprob: -10.375409126281738
    5. 'usr' → logprob: -11.375409126281738
    6. 'u' → logprob: -11.625409126281738
    7. 'ursive' → logprob: -12.500409126281738
    8. '##' → logprob: -12.625409126281738
    9. '```' → logprob: -12.875409126281738
    10. 'ussion' → logprob: -13.125409126281738

Token 266: ' autor' (ID: 13432)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00773948198184371
    2. 'import' → logprob: -4.882739543914795
    3. ' sys' → logprob: -9.382739067077637
    4. '(sys' → logprob: -10.757739067077637
    5. '=sys' → logprob: -11.632739067077637
    6. '#' → logprob: -11.757739067077637
    7. '_sys' → logprob: -12.507739067077637
    8. ',' → logprob: -13.757739067077637
    9. ':' → logprob: -13.882739067077637
    10. '_' → logprob: -14.007739067077637

Token 267: 'isée' (ID: 59331)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.6592111587524414
    2. 'c' → logprob: -1.7842111587524414
    3. 'isée' → logprob: -2.0342111587524414
    4. 'née' → logprob: -2.1592111587524414
    5. 's' → logprob: -2.2842111587524414
    6. 'cée' → logprob: -2.2842111587524414
    7. 'nelle' → logprob: -3.0342111587524414
    8. 'cur' → logprob: -3.4092111587524414
    9. 'ée' → logprob: -4.034211158752441
    10. 'mise' → logprob: -4.284211158752441

Token 268: ' par' (ID: 686)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0017418164061382413
    2. 'import' → logprob: -6.376741886138916
    3. ' sys' → logprob: -10.626741409301758
    4. '(sys' → logprob: -11.501741409301758
    5. '=sys' → logprob: -12.876741409301758
    6. '
' → logprob: -14.501741409301758
    7. '\' → logprob: -14.501741409301758
    8. '  
' → logprob: -15.251741409301758
    9. '```' → logprob: -15.376741409301758
    10. '\n' → logprob: -15.376741409301758

Token 269: ' Python' (ID: 26534)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.306276798248291
    2. 'Python' → logprob: -2.431276798248291
    3. ' Python' → logprob: -3.181276798248291
    4. 'python' → logprob: -3.306276798248291
    5. 'def' → logprob: -3.431276798248291
    6. 'default' → logprob: -3.931276798248291
    7. ' défaut' → logprob: -4.056276798248291
    8. ' sys' → logprob: -4.306276798248291
    9. 'import' → logprob: -5.181276798248291
    10. 'le' → logprob: -5.431276798248291

Token 270: '
' (ID: 198)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -7.743758760625497e-05
    2. 'import' → logprob: -9.500077247619629
    3. ' sys' → logprob: -13.125077247619629
    4. '(sys' → logprob: -15.125077247619629
    5. '
' → logprob: -16.125078201293945
    6. '=sys' → logprob: -16.125078201293945
    7. '#' → logprob: -17.375078201293945
    8. '_sys' → logprob: -17.875078201293945
    9. '\' → logprob: -17.875078201293945
    10. '

' → logprob: -18.125078201293945

Token 271: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -5.5577775128767826e-06
    2. 'import' → logprob: -12.500005722045898
    3. ' sys' → logprob: -13.250005722045898
    4. '=sys' → logprob: -18.5000057220459
    5. '(sys' → logprob: -19.0000057220459
    6. '#' → logprob: -19.5000057220459
    7. 'set' → logprob: -19.7500057220459
    8. '	sys' → logprob: -19.8750057220459
    9. 'python' → logprob: -20.6250057220459
    10. '_sys' → logprob: -20.7500057220459

Token 272: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0029099658131599426
    2. '.setdefault' → logprob: -6.127910137176514
    3. ' .' → logprob: -8.127909660339355
    4. '.set' → logprob: -8.252909660339355
    5. '.exit' → logprob: -9.752909660339355
    6. '.argv' → logprob: -10.502909660339355
    7. '.limit' → logprob: -11.502909660339355
    8. '.stdout' → logprob: -11.502909660339355
    9. '.stderr' → logprob: -12.002909660339355
    10. '.stdin' → logprob: -12.127909660339355

Token 273: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.15297482907772064
    2. '_rec' → logprob: -2.277974843978882
    3. '_limit' → logprob: -3.527974843978882
    4. '_max' → logprob: -5.152974605560303
    5. 'limit' → logprob: -6.027974605560303
    6. '_recursive' → logprob: -8.027975082397461
    7. '_' → logprob: -8.402975082397461
    8. ' recursion' → logprob: -9.027975082397461
    9. '_depth' → logprob: -9.277975082397461
    10. 's' → logprob: -9.527975082397461

Token 274: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -5.676981345459353e-06
    2. 'limit' → logprob: -13.125005722045898
    3. 'ur' → logprob: -13.500005722045898
    4. 'usion' → logprob: -14.000005722045898
    5. 'ursive' → logprob: -14.375005722045898
    6. 'urs' → logprob: -14.375005722045898
    7. '_limit' → logprob: -15.375005722045898
    8. '_' → logprob: -18.5000057220459
    9. 'ursively' → logprob: -19.0000057220459
    10. 'usr' → logprob: -19.1250057220459

Token 275: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0009238460334017873
    2. '_limit' → logprob: -7.0009236335754395
    3. 'lim' → logprob: -11.375924110412598
    4. 'depth' → logprob: -14.875924110412598
    5. ' limit' → logprob: -15.000924110412598
    6. '(limit' → logprob: -16.37592315673828
    7. '_depth' → logprob: -16.75092315673828
    8. '.limit' → logprob: -17.12592315673828
    9. '_' → logprob: -17.37592315673828
    10. '_LIMIT' → logprob: -18.00092315673828

Token 276: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.8193366486229934e-05
    2. ' (' → logprob: -11.375018119812012
    3. '(
' → logprob: -12.250018119812012
    4. '(

' → logprob: -13.500018119812012
    5. '((' → logprob: -15.125018119812012
    6. '()' → logprob: -16.875019073486328
    7. '(
' → logprob: -17.250019073486328
    8. '('' → logprob: -17.875019073486328
    9. '("' → logprob: -18.250019073486328
    10. '40' → logprob: -18.500019073486328

Token 277: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5760642290115356
    2. '10' → logprob: -0.8260642290115356
    3. '500' → logprob: -10.201064109802246
    4. '200' → logprob: -10.201064109802246
    5. '300' → logprob: -10.201064109802246
    6. ' ' → logprob: -11.826064109802246
    7. '250' → logprob: -12.576064109802246
    8. '150' → logprob: -12.951064109802246
    9. '400' → logprob: -17.076065063476562
    10. '999' → logprob: -17.451065063476562

Token 278: '**' (ID: 410)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.7773450016975403
    2. '000' → logprob: -0.7773450016975403
    3. '6' → logprob: -3.1523449420928955
    4. '5' → logprob: -3.5273449420928955
    5. '4' → logprob: -5.277345180511475
    6. '**' → logprob: -5.902345180511475
    7. '7' → logprob: -7.277345180511475
    8. '007' → logprob: -10.527344703674316
    9. '006' → logprob: -10.777344703674316
    10. '005' → logprob: -11.277344703674316

Token 279: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.06221628561615944
    2. '6' → logprob: -2.812216281890869
    3. '9' → logprob: -8.312216758728027
    4. '8' → logprob: -12.687216758728027
    5. '5' → logprob: -19.18721580505371
    6. '**' → logprob: -19.18721580505371
    7. '4' → logprob: -20.06221580505371
    8. '```' → logprob: -20.31221580505371
    9. '{' → logprob: -21.56221580505371
    10. '

' → logprob: -21.81221580505371

Token 280: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.375000953674316
    3. ')
' → logprob: -16.125
    4. '))' → logprob: -17.125
    5. ')#' → logprob: -19.125
    6. ')

' → logprob: -19.375
    7. ')`' → logprob: -19.375
    8. '),' → logprob: -19.5
    9. ').' → logprob: -20.125
    10. ')
' → logprob: -20.25

Token 281: ' ' (ID: 220)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.11499948799610138
    2. '
' → logprob: -2.239999532699585
    3. '\n' → logprob: -7.114999294281006
    4. '


' → logprob: -7.489999294281006
    5. '
' → logprob: -7.739999294281006
    6. '#' → logprob: -9.489999771118164
    7. '

' → logprob: -9.614999771118164
    8. '
 
' → logprob: -10.114999771118164
    9. '' → logprob: -10.489999771118164
    10. '



' → logprob: -10.614999771118164

Token 282: ' #' (ID: 1069)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.12215594947338104
    2. '
' → logprob: -2.2471559047698975
    3. 'def' → logprob: -5.747156143188477
    4. '\n' → logprob: -6.247156143188477
    5. '#' → logprob: -6.622156143188477
    6. '
' → logprob: -6.747156143188477
    7. '


' → logprob: -7.497156143188477
    8. '

' → logprob: -8.622156143188477
    9. '\' → logprob: -8.997156143188477
    10. '' → logprob: -8.997156143188477

Token 283: ' Cela' (ID: 44403)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.46505317091941833
    2. 'def' → logprob: -1.9650532007217407
    3. '#' → logprob: -2.465053081512451
    4. '
' → logprob: -3.215053081512451
    5. ' 
' → logprob: -3.965053081512451
    6. ' 

' → logprob: -3.965053081512451
    7. '\n' → logprob: -3.965053081512451
    8. '
' → logprob: -4.340053081512451
    9. 'import' → logprob: -4.840053081512451
    10. '\' → logprob: -5.465053081512451

Token 284: ' permet' (ID: 11798)
  Prédit: ' permet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.565443217754364
    2. '#' → logprob: -1.1904432773590088
    3. ' permettra' → logprob: -3.565443277359009
    4. 'est' → logprob: -3.690443277359009
    5. 'per' → logprob: -3.690443277359009
    6. ' garantit' → logprob: -4.19044303894043
    7. ' #' → logprob: -4.81544303894043
    8. ' va' → logprob: -5.44044303894043
    9. ' peut' → logprob: -5.56544303894043
    10. ' augmente' → logprob: -5.94044303894043

Token 285: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.10570576041936874
    2. ' de' → logprob: -2.605705738067627
    3. 'd' → logprob: -4.230705738067627
    4. ' ' → logprob: -5.230705738067627
    5. 'de' → logprob: -5.855705738067627
    6. ' ' → logprob: -6.730705738067627
    7. ' une' → logprob: -6.730705738067627
    8. ' à' → logprob: -7.980705738067627
    9. '  ' → logprob: -8.355706214904785
    10. '   ' → logprob: -8.480706214904785

Token 286: ''év' (ID: 114425)
  Prédit: ''év'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''év' → logprob: -0.3030049204826355
    2. ''aller' → logprob: -2.3030049800872803
    3. ''ex' → logprob: -2.8030049800872803
    4. ''' → logprob: -3.4280049800872803
    5. 'e' → logprob: -3.8030049800872803
    6. ''avoir' → logprob: -3.8030049800872803
    7. ''effect' → logprob: -5.053004741668701
    8. ''utiliser' → logprob: -5.428004741668701
    9. '’éviter' → logprob: -5.553004741668701
    10. 'év' → logprob: -6.428004741668701

Token 287: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.0001884015218820423
    2. ' iter' → logprob: -10.375188827514648
    3. 'iterr' → logprob: -10.625188827514648
    4. 'it' → logprob: -10.875188827514648
    5. 'Iter' → logprob: -11.375188827514648
    6. '_iter' → logprob: -11.500188827514648
    7. '	iter' → logprob: -11.500188827514648
    8. '   ' → logprob: -11.750188827514648
    9. '```' → logprob: -12.125188827514648
    10. '#' → logprob: -12.250188827514648

Token 288: ' que' (ID: 661)
  Prédit: ' Rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Rec' → logprob: -0.4458991289138794
    2. 'Rec' → logprob: -1.5708991289138794
    3. ' les' → logprob: -2.69589900970459
    4. 'les' → logprob: -3.07089900970459
    5. ' Runtime' → logprob: -4.19589900970459
    6. ' l' → logprob: -5.07089900970459
    7. ' des' → logprob: -5.19589900970459
    8. ' la' → logprob: -5.94589900970459
    9. ' Overflow' → logprob: -6.19589900970459
    10. 'Overflow' → logprob: -6.32089900970459

Token 289: ' le' (ID: 505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.8770928382873535
    2. ' la' → logprob: -1.1270928382873535
    3. 'Rec' → logprob: -2.3770928382873535
    4. 'la' → logprob: -3.0020928382873535
    5. ' Rec' → logprob: -3.3770928382873535
    6. ' les' → logprob: -4.1270928382873535
    7. 'les' → logprob: -4.3770928382873535
    8. 'l' → logprob: -4.3770928382873535
    9. 'le' → logprob: -4.6270928382873535
    10. ' Python' → logprob: -5.5020928382873535

Token 290: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.0865485891699791
    2. 'program' → logprob: -3.8365485668182373
    3. ' programme' → logprob: -3.9615485668182373
    4. 'maximum' → logprob: -4.586548805236816
    5. 'script' → logprob: -5.086548805236816
    6. 'inter' → logprob: -5.211548805236816
    7. 'code' → logprob: -5.336548805236816
    8. 'rec' → logprob: -6.211548805236816
    9. 'python' → logprob: -6.461548805236816
    10. 'pro' → logprob: -6.586548805236816

Token 291: ' ne' (ID: 453)
  Prédit: ' plante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plante' → logprob: -0.3504633903503418
    2. 'ne' → logprob: -2.100463390350342
    3. ' n' → logprob: -2.850463390350342
    4. 'cr' → logprob: -3.225463390350342
    5. ' ne' → logprob: -3.600463390350342
    6. ' s' → logprob: -4.225463390350342
    7. 'n' → logprob: -4.475463390350342
    8. 's' → logprob: -4.975463390350342
    9. ' crash' → logprob: -5.600463390350342
    10. 'so' → logprob: -5.725463390350342

Token 292: ' plante' (ID: 39981)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.3626802861690521
    2. ' plante' → logprob: -1.4876803159713745
    3. 's' → logprob: -3.362680196762085
    4. 'rec' → logprob: -4.237680435180664
    5. ' s' → logprob: -4.487680435180664
    6. 'so' → logprob: -5.362680435180664
    7. ' crash' → logprob: -5.737680435180664
    8. ' cr' → logprob: -5.737680435180664
    9. 'd' → logprob: -6.862680435180664
    10. 'rame' → logprob: -6.862680435180664

Token 293: ' lorsqu' (ID: 57416)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.9964306950569153
    2. '
' → logprob: -1.1214306354522705
    3. '#' → logprob: -1.7464306354522705
    4. '
' → logprob: -3.2464306354522705
    5. '.' → logprob: -3.9964306354522705
    6. '\n' → logprob: -4.37143087387085
    7. '

' → logprob: -4.62143087387085
    8. '' → logprob: -4.87143087387085
    9. 'def' → logprob: -4.87143087387085
    10. ',' → logprob: -4.99643087387085

Token 294: ''il' (ID: 14683)
  Prédit: ''on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''on' → logprob: -0.5984853506088257
    2. ''il' → logprob: -0.8484853506088257
    3. ' on' → logprob: -4.473485469818115
    4. 'il' → logprob: -5.598485469818115
    5. ' il' → logprob: -6.223485469818115
    6. 'on' → logprob: -6.223485469818115
    7. ''' → logprob: -6.848485469818115
    8. ''une' → logprob: -7.223485469818115
    9. '’on' → logprob: -7.723485469818115
    10. '’il' → logprob: -7.723485469818115

Token 295: ' effect' (ID: 3159)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rec' → logprob: -1.6621980667114258
    2. 'expl' → logprob: -2.037198066711426
    3. 'do' → logprob: -2.037198066711426
    4. 'man' → logprob: -2.412198066711426
    5. 's' → logprob: -3.037198066711426
    6. 'fait' → logprob: -3.162198066711426
    7. 'g' → logprob: -3.287198066711426
    8. ' traite' → logprob: -3.287198066711426
    9. 'effect' → logprob: -3.537198066711426
    10. 'a' → logprob: -3.662198066711426

Token 296: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -2.2723104848410003e-05
    2. 'u' → logprob: -11.625022888183594
    3. 'uent' → logprob: -11.750022888183594
    4. 'uera' → logprob: -12.875022888183594
    5. 'uer' → logprob: -13.625022888183594
    6. 'ué' → logprob: -14.250022888183594
    7. 'uant' → logprob: -14.625022888183594
    8. 'uet' → logprob: -15.750022888183594
    9. 'uie' → logprob: -16.000022888183594
    10. 'uez' → logprob: -16.125022888183594

Token 297: ' une' (ID: 2463)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.03617960214614868
    2. ' des' → logprob: -4.036179542541504
    3. 'de' → logprob: -4.161179542541504
    4. 'be' → logprob: -6.661179542541504
    5. ' de' → logprob: -7.911179542541504
    6. 'une' → logprob: -8.786179542541504
    7. ' ' → logprob: -9.161179542541504
    8. 'd' → logprob: -9.161179542541504
    9. 'un' → logprob: -10.161179542541504
    10. '#' → logprob: -10.286179542541504

Token 298: ' grande' (ID: 10094)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2031940519809723
    2. 'rec' → logprob: -3.2031941413879395
    3. 'fonction' → logprob: -3.5781941413879395
    4. 'tr' → logprob: -3.8281941413879395
    5. 're' → logprob: -3.8281941413879395
    6. 'calcul' → logprob: -4.4531941413879395
    7. 'gr' → logprob: -4.7031941413879395
    8. 'g' → logprob: -4.8281941413879395
    9. 'grand' → logprob: -4.8281941413879395
    10. 'deep' → logprob: -5.0781941413879395

Token 299: ' réc' (ID: 36254)
  Prédit: ' profondeur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' profondeur' → logprob: -1.483410358428955
    2. ' boucle' → logprob: -1.483410358428955
    3. 'rec' → logprob: -2.233410358428955
    4. ' recherche' → logprob: -2.358410358428955
    5. ' réc' → logprob: -2.358410358428955
    6. ' exploration' → logprob: -2.733410358428955
    7. ' recursion' → logprob: -3.108410358428955
    8. ' quantité' → logprob: -3.358410358428955
    9. 're' → logprob: -3.858410358428955
    10. 'bou' → logprob: -4.483410358428955

Token 300: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.5322558283805847
    2. 'urs' → logprob: -0.9072558283805847
    3. 'ur' → logprob: -5.15725564956665
    4. 'ursive' → logprob: -8.032256126403809
    5. '   ' → logprob: -8.157256126403809
    6. 'u' → logprob: -8.282256126403809
    7. '**' → logprob: -8.282256126403809
    8. 'usion' → logprob: -8.532256126403809
    9. '##' → logprob: -8.657256126403809
    10. 'usr' → logprob: -8.782256126403809

Token 301: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0980030745267868
    2. '

' → logprob: -2.5980031490325928
    3. '
' → logprob: -4.473002910614014
    4. '  
' → logprob: -6.223002910614014
    5. '#' → logprob: -6.598002910614014
    6. '' → logprob: -6.848002910614014
    7. '.' → logprob: -7.098002910614014
    8. 'def' → logprob: -7.348002910614014
    9. 'import' → logprob: -8.223003387451172
    10. '


' → logprob: -8.473003387451172

Token 302: 'inf' (ID: 22226)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11704350262880325
    2. '

' → logprob: -2.3670434951782227
    3. '
' → logprob: -4.242043495178223
    4. 'class' → logprob: -6.242043495178223
    5. '


' → logprob: -8.992043495178223
    6. '#' → logprob: -9.617043495178223
    7. '\' → logprob: -10.242043495178223
    8. '
' → logprob: -10.617043495178223
    9. '\n' → logprob: -10.617043495178223
    10. ' 

' → logprob: -10.992043495178223

Token 303: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6119615435600281
    2. 'inity' → logprob: -1.1119616031646729
    3. '=' → logprob: -2.236961603164673
    4. 'o' → logprob: -3.861961603164673
    5. 'inty' → logprob: -8.486961364746094
    6. 'ity' → logprob: -8.736961364746094
    7. 'i' → logprob: -8.736961364746094
    8. '=None' → logprob: -9.611961364746094
    9. '=float' → logprob: -9.861961364746094
    10. 'ini' → logprob: -9.861961364746094

Token 304: ' ' (ID: 220)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0023865913972258568
    2. '10' → logprob: -6.252386569976807
    3. 'math' → logprob: -8.002387046813965
    4. ' float' → logprob: -9.002387046813965
    5. '	float' → logprob: -16.75238609313965
    6. 'int' → logprob: -17.25238609313965
    7. '1' → logprob: -17.87738609313965
    8. '(float' → logprob: -17.87738609313965
    9. ' math' → logprob: -17.87738609313965
    10. ' ' → logprob: -18.12738609313965

Token 305: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0055719176307320595
    2. '10' → logprob: -5.2555718421936035
    3. 'math' → logprob: -8.005572319030762
    4. ' float' → logprob: -12.380572319030762
    5. 'int' → logprob: -15.130572319030762
    6. '1' → logprob: -18.130571365356445
    7. '100' → logprob: -18.630571365356445
    8. '(float' → logprob: -18.630571365356445
    9. '	float' → logprob: -19.005571365356445
    10. 'fl' → logprob: -19.630571365356445

Token 306: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.07302956283092499
    2. '18' → logprob: -2.9480295181274414
    3. '10' → logprob: -4.948029518127441
    4. '7' → logprob: -5.323029518127441
    5. '**' → logprob: -6.198029518127441
    6. '12' → logprob: -6.323029518127441
    7. '8' → logprob: -6.448029518127441
    8. '09' → logprob: -8.198029518127441
    9. '15' → logprob: -9.073029518127441
    10. '20' → logprob: -10.073029518127441

Token 307: '20' (ID: 455)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.906466543674469
    2. '18' → logprob: -1.4064664840698242
    3. '15' → logprob: -1.4064664840698242
    4. '10' → logprob: -2.656466484069824
    5. '20' → logprob: -3.406466484069824
    6. '12' → logprob: -6.281466484069824
    7. '14' → logprob: -8.031466484069824
    8. '16' → logprob: -8.156466484069824
    9. '7' → logprob: -9.531466484069824
    10. '19' → logprob: -10.031466484069824

Token 308: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10291142016649246
    2. '<|end|>' → logprob: -3.2279114723205566
    3. '

' → logprob: -3.9779114723205566
    4. '#' → logprob: -4.102911472320557
    5. '' → logprob: -5.227911472320557
    6. '
' → logprob: -5.602911472320557
    7. ' 
' → logprob: -5.852911472320557
    8. 'def' → logprob: -6.227911472320557
    9. ' ' → logprob: -6.477911472320557
    10. '  
' → logprob: -6.602911472320557

Token 309: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4810379147529602
    2. '#' → logprob: -1.6060378551483154
    3. '

' → logprob: -2.4810378551483154
    4. ',' → logprob: -3.4810378551483154
    5. 'def' → logprob: -4.1060380935668945
    6. '
' → logprob: -4.3560380935668945
    7. '' → logprob: -4.3560380935668945
    8. '\n' → logprob: -4.9810380935668945
    9. 'newline' → logprob: -5.6060380935668945
    10. '  
' → logprob: -5.9810380935668945

Token 310: ' Une' (ID: 19758)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.13842973113059998
    2. ' float' → logprob: -2.763429641723633
    3. 'inf' → logprob: -2.888429641723633
    4. 'math' → logprob: -4.763429641723633
    5. ' math' → logprob: -6.763429641723633
    6. ' inf' → logprob: -8.388429641723633
    7. '10' → logprob: -8.513429641723633
    8. 'int' → logprob: -9.138429641723633
    9. ' ' → logprob: -9.513429641723633
    10. '0' → logprob: -9.888429641723633

Token 311: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38397228717803955
    2. ' espace' → logprob: -2.50897216796875
    3. 'space' → logprob: -2.63397216796875
    4. ' space' → logprob: -3.13397216796875
    5. ' =' → logprob: -3.63397216796875
    6. 'n' → logprob: -3.75897216796875
    7. ' constante' → logprob: -4.63397216796875
    8. 'float' → logprob: -4.75897216796875
    9. ' variable' → logprob: -4.75897216796875
    10. ' n' → logprob: -5.13397216796875

Token 312: ' représentant' (ID: 136122)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.558078408241272
    2. ' ' → logprob: -1.058078408241272
    3. ' =' → logprob: -3.6830782890319824
    4. ',' → logprob: -4.058078289031982
    5. '=' → logprob: -4.183078289031982
    6. '' → logprob: -5.558078289031982
    7. '_inf' → logprob: -5.933078289031982
    8. '  ' → logprob: -6.183078289031982
    9. '_space' → logprob: -6.308078289031982
    10. '```' → logprob: -6.558078289031982

Token 313: ' un' (ID: 537)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5028606057167053
    2. ' l' → logprob: -1.0028605461120605
    3. ' une' → logprob: -3.7528605461120605
    4. 'une' → logprob: -5.5028605461120605
    5. '+' → logprob: -7.3778605461120605
    6. '+l' → logprob: -9.377861022949219
    7. 'un' → logprob: -10.252861022949219
    8. ' ' → logprob: -10.877861022949219
    9. ' ' → logprob: -11.127861022949219
    10. '	l' → logprob: -11.252861022949219

Token 314: ' "' (ID: 392)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.0650666952133179
    2. 'nombre' → logprob: -1.1900666952133179
    3. ' nombre' → logprob: -1.6900666952133179
    4. ''in' → logprob: -2.6900668144226074
    5. 'in' → logprob: -2.9400668144226074
    6. 'e' → logprob: -3.8150668144226074
    7. ' inf' → logprob: -5.190066814422607
    8. 'é' → logprob: -5.815066814422607
    9. '"in' → logprob: -5.940066814422607
    10. 'grand' → logprob: -6.315066814422607

Token 315: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.3200682997703552
    2. 'nombre' → logprob: -1.820068359375
    3. 'in' → logprob: -2.570068359375
    4. 'grand' → logprob: -4.195068359375
    5. 'tr' → logprob: -5.195068359375
    6. '+' → logprob: -5.820068359375
    7. 'float' → logprob: -6.195068359375
    8. 'ent' → logprob: -6.320068359375
    9. '∞' → logprob: -6.320068359375
    10. ' nombre' → logprob: -6.945068359375

Token 316: 'ini' (ID: 2363)
  Prédit: 'inity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inity' → logprob: -0.15260851383209229
    2. 'ini' → logprob: -2.0276083946228027
    3. 'inite' → logprob: -6.152608394622803
    4. 'inty' → logprob: -6.152608394622803
    5. 'init' → logprob: -6.277608394622803
    6. 'ity' → logprob: -6.402608394622803
    7. 'inf' → logprob: -7.277608394622803
    8. 'in' → logprob: -8.027608871459961
    9. '```' → logprob: -8.527608871459961
    10. 'i' → logprob: -8.652608871459961

Token 317: '"' (ID: 1)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.899661123752594
    2. ' ' → logprob: -1.6496610641479492
    3. '+' → logprob: -1.7746610641479492
    4. '_' → logprob: -1.8996610641479492
    5. ' )' → logprob: -3.399661064147949
    6. '"' → logprob: -3.899661064147949
    7. '  ' → logprob: -4.899661064147949
    8. ',' → logprob: -5.274661064147949
    9. '```' → logprob: -5.899661064147949
    10. ' _' → logprob: -6.024661064147949

Token 318: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1698182821273804
    2. '' → logprob: -1.7948182821273804
    3. '<|end|>' → logprob: -2.04481840133667
    4. '#' → logprob: -2.54481840133667
    5. ',' → logprob: -2.66981840133667
    6. '.' → logprob: -2.91981840133667
    7. ' ' → logprob: -3.16981840133667
    8. '

' → logprob: -3.29481840133667
    9. '_' → logprob: -3.54481840133667
    10. '10' → logprob: -3.66981840133667

Token 319: ' les' (ID: 1341)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.09081672132015228
    2. 'l' → logprob: -3.5908167362213135
    3. 'la' → logprob: -3.8408167362213135
    4. 'les' → logprob: -3.9658167362213135
    5. 'le' → logprob: -4.340816497802734
    6. ' float' → logprob: -6.215816497802734
    7. 'une' → logprob: -6.840816497802734
    8. ' la' → logprob: -7.340816497802734
    9. ' les' → logprob: -7.590816497802734
    10. 'math' → logprob: -7.840816497802734

Token 320: ' compar' (ID: 8342)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.4902709722518921
    2. 'calcul' → logprob: -1.490270972251892
    3. 'ent' → logprob: -2.4902710914611816
    4. 'nombre' → logprob: -3.9902710914611816
    5. ' float' → logprob: -4.490271091461182
    6. 'flo' → logprob: -4.615271091461182
    7. 'co' → logprob: -4.740271091461182
    8. 'po' → logprob: -5.490271091461182
    9. 'pro' → logprob: -5.615271091461182
    10. 'int' → logprob: -5.865271091461182

Token 321: 'ais' (ID: 1873)
  Prédit: 'ais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.07540161907672882
    2. 'aison' → logprob: -2.950401544570923
    3. 'ar' → logprob: -4.325401782989502
    4. 'isons' → logprob: -5.950401782989502
    5. 'a' → logprob: -6.075401782989502
    6. 'aris' → logprob: -6.825401782989502
    7. 'raison' → logprob: -7.950401782989502
    8. 'er' → logprob: -8.950401306152344
    9. 'par' → logprob: -9.075401306152344
    10. '```' → logprob: -9.700401306152344

Token 322: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.0005861566751264036
    2. 'on' → logprob: -7.500586032867432
    3. 'sons' → logprob: -10.75058650970459
    4. 's' → logprob: -12.25058650970459
    5. 'son' → logprob: -13.00058650970459
    6. '#' → logprob: -13.00058650970459
    7. ' ons' → logprob: -14.87558650970459
    8. '```' → logprob: -15.00058650970459
    9. 'onn' → logprob: -15.25058650970459
    10. 'ions' → logprob: -15.87558650970459

Token 323: ' ou' (ID: 2031)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12929071485996246
    2. '

' → logprob: -2.254290819168091
    3. '
' → logprob: -4.879290580749512
    4. '' → logprob: -5.879290580749512
    5. '#' → logprob: -6.754290580749512
    6. ',' → logprob: -7.379290580749512
    7. '<|end|>' → logprob: -7.504290580749512
    8. '\n' → logprob: -7.629290580749512
    9. '
 
' → logprob: -8.004290580749512
    10. '  
' → logprob: -8.129290580749512

Token 324: ' born' (ID: 12275)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.25585466623306274
    2. 'l' → logprob: -2.505854606628418
    3. 'une' → logprob: -3.380854606628418
    4. ' les' → logprob: -3.505854606628418
    5. 'le' → logprob: -3.880854606628418
    6. 'float' → logprob: -4.255854606628418
    7. 'la' → logprob: -4.505854606628418
    8. '#' → logprob: -4.880854606628418
    9. 'un' → logprob: -4.880854606628418
    10. 'calcul' → logprob: -5.005854606628418

Token 325: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.14276868104934692
    2. 'e' → logprob: -2.017768621444702
    3. 'ed' → logprob: -11.517768859863281
    4. 'd' → logprob: -11.517768859863281
    5. 'ées' → logprob: -11.517768859863281
    6. 'é' → logprob: -11.892768859863281
    7. 'ies' → logprob: -12.017768859863281
    8. 's' → logprob: -12.142768859863281
    9. 'ières' → logprob: -12.142768859863281
    10. '=' → logprob: -12.267768859863281

Token 326: ' sup' (ID: 1982)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08784334361553192
    2. '<|end|>' → logprob: -3.587843418121338
    3. '

' → logprob: -3.962843418121338
    4. ',' → logprob: -4.587843418121338
    5. '.' → logprob: -5.087843418121338
    6. '' → logprob: -5.462843418121338
    7. '#' → logprob: -5.462843418121338
    8. '
' → logprob: -5.837843418121338
    9. ' ' → logprob: -6.212843418121338
    10. ' 
' → logprob: -6.337843418121338

Token 327: 'érieures' (ID: 108978)
  Prédit: 'érieure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.043104011565446854
    2. 'érieures' → logprob: -3.6681039333343506
    3. 'érieur' → logprob: -4.54310417175293
    4. 'er' → logprob: -5.91810417175293
    5. 'é' → logprob: -6.54310417175293
    6. 'erie' → logprob: -7.04310417175293
    7. 'érie' → logprob: -7.66810417175293
    8. 'érieurs' → logprob: -9.16810417175293
    9. 'ér' → logprob: -9.91810417175293
    10. 'éri' → logprob: -10.04310417175293

Token 328: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15136300027370453
    2. '

' → logprob: -2.901362895965576
    3. '<|end|>' → logprob: -3.526362895965576
    4. ',' → logprob: -3.901362895965576
    5. '#' → logprob: -4.401362895965576
    6. '
' → logprob: -5.401362895965576
    7. '' → logprob: -5.401362895965576
    8. '.' → logprob: -5.776362895965576
    9. '\n' → logprob: -5.901362895965576
    10. '<|end|>' → logprob: -6.401362895965576

Token 329: 'eps' (ID: 12967)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.360189825296402
    2. 'def' → logprob: -1.9851897954940796
    3. '

' → logprob: -2.235189914703369
    4. '
' → logprob: -3.610189914703369
    5. '\n' → logprob: -4.110189914703369
    6. '#' → logprob: -5.610189914703369
    7. 'n' → logprob: -5.985189914703369
    8. 'class' → logprob: -6.360189914703369
    9. '' → logprob: -6.735189914703369
    10. 'max' → logprob: -6.985189914703369

Token 330: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012522017583251
    2. '=' → logprob: -4.387522220611572
    3. ' ' → logprob: -11.762521743774414
    4. ' ' → logprob: -12.762521743774414
    5. '_' → logprob: -14.012521743774414
    6. ',' → logprob: -14.887521743774414
    7. '.' → logprob: -15.887521743774414
    8. '  ' → logprob: -16.512521743774414
    9. 'space' → logprob: -16.512521743774414
    10. ' =
' → logprob: -16.637521743774414

Token 331: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002054500626400113
    2. ' ' → logprob: -6.502054691314697
    3. '10' → logprob: -7.502054691314697
    4. '0' → logprob: -18.00205421447754
    5. '   ' → logprob: -18.75205421447754
    6. '  ' → logprob: -19.37705421447754
    7. '=' → logprob: -19.50205421447754
    8. '(' → logprob: -20.00205421447754
    9. '2' → logprob: -21.37705421447754
    10. '```' → logprob: -22.00205421447754

Token 332: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003391574718989432
    2. '10' → logprob: -8.00033950805664
    3. ' ' → logprob: -12.50033950805664
    4. '0' → logprob: -17.62533950805664
    5. '(' → logprob: -18.75033950805664
    6. '2' → logprob: -20.12533950805664
    7. 'float' → logprob: -20.50033950805664
    8. '１' → logprob: -20.62533950805664
    9. '   ' → logprob: -20.87533950805664
    10. '=' → logprob: -21.00033950805664

Token 333: '.' (ID: 13)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22623077034950256
    2. 'e' → logprob: -1.6012307405471802
    3. ' -' → logprob: -7.976230621337891
    4. '.' → logprob: -8.10123062133789
    5. '0' → logprob: -9.22623062133789
    6. '*' → logprob: -10.35123062133789
    7. '**' → logprob: -10.97623062133789
    8. '```' → logprob: -11.72623062133789
    9. ' ' → logprob: -12.60123062133789
    10. '^-' → logprob: -13.10123062133789

Token 334: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0064594438299536705
    2. '9' → logprob: -5.5064592361450195
    3. '10' → logprob: -7.8814592361450195
    4. '5' → logprob: -8.00645923614502
    5. '1' → logprob: -8.13145923614502
    6. '7' → logprob: -8.38145923614502
    7. '0' → logprob: -8.38145923614502
    8. '6' → logprob: -8.63145923614502
    9. '3' → logprob: -8.75645923614502
    10. '8' → logprob: -8.88145923614502

Token 335: ' /' (ID: 820)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03397991508245468
    2. 'e' → logprob: -4.033979892730713
    3. ' -' → logprob: -4.158979892730713
    4. ' ' → logprob: -9.783980369567871
    5. '10' → logprob: -11.533980369567871
    6. ' /' → logprob: -11.908980369567871
    7. '*' → logprob: -13.158980369567871
    8. '/' → logprob: -13.408980369567871
    9. ' *' → logprob: -14.033980369567871
    10. '```' → logprob: -14.158980369567871

Token 336: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09246131777763367
    2. '10' → logprob: -2.592461347579956
    3. '100' → logprob: -4.342461109161377
    4. ' (' → logprob: -8.092461585998535
    5. ' ' → logprob: -9.717461585998535
    6. '1' → logprob: -10.217461585998535
    7. '200' → logprob: -10.467461585998535
    8. '2' → logprob: -11.092461585998535
    9. '999' → logprob: -12.092461585998535
    10. '123' → logprob: -12.342461585998535

Token 337: '10' (ID: 702)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.053039878606796265
    2. '10' → logprob: -3.053039789199829
    3. '100' → logprob: -5.553040027618408
    4. ' (' → logprob: -7.553040027618408
    5. ' ' → logprob: -10.80303955078125
    6. '123' → logprob: -12.42803955078125
    7. '1' → logprob: -12.55303955078125
    8. '2' → logprob: -12.80303955078125
    9. '200' → logprob: -13.05303955078125
    10. '3' → logprob: -13.42803955078125

Token 338: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.17229944467544556
    2. '6' → logprob: -2.797299385070801
    3. '7' → logprob: -2.797299385070801
    4. '9' → logprob: -3.422299385070801
    5. '0' → logprob: -6.422299385070801
    6. '8' → logprob: -6.922299385070801
    7. '000' → logprob: -8.1722993850708
    8. '00' → logprob: -8.4222993850708
    9. '10' → logprob: -8.7972993850708
    10. '5' → logprob: -9.0472993850708

Token 339: '10' (ID: 702)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.04518989101052284
    2. '10' → logprob: -3.92018985748291
    3. '7' → logprob: -4.29518985748291
    4. '12' → logprob: -5.29518985748291
    5. '15' → logprob: -6.17018985748291
    6. '8' → logprob: -6.54518985748291
    7. '14' → logprob: -6.79518985748291
    8. '6' → logprob: -7.54518985748291
    9. '20' → logprob: -8.29518985748291
    10. '11' → logprob: -9.17018985748291

Token 340: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 341: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03352455049753189
    2. ' ' → logprob: -3.783524513244629
    3. '
' → logprob: -5.033524513244629
    4. '<|end|>' → logprob: -6.283524513244629
    5. ' #' → logprob: -6.908524513244629
    6. '  
' → logprob: -8.658524513244629
    7. '  ' → logprob: -9.158524513244629
    8. '0' → logprob: -9.283524513244629
    9. ')' → logprob: -9.408524513244629
    10. ' 
' → logprob: -9.658524513244629

Token 342: ' Une' (ID: 19758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5624805092811584
    2. '#' → logprob: -1.1874804496765137
    3. ' #' → logprob: -2.9374804496765137
    4. 'epsilon' → logprob: -3.8124804496765137
    5. 'Une' → logprob: -4.312480449676514
    6. 'Un' → logprob: -4.687480449676514
    7. '0' → logprob: -4.937480449676514
    8. '10' → logprob: -5.687480449676514
    9. ' Une' → logprob: -6.187480449676514
    10. ' epsilon' → logprob: -6.312480449676514

Token 343: ' petite' (ID: 28119)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3226228952407837
    2. 'space' → logprob: -2.822622776031494
    3. 'epsilon' → logprob: -3.072622776031494
    4. 'pet' → logprob: -3.572622776031494
    5. 'pr' → logprob: -3.697622776031494
    6. 'small' → logprob: -4.197622776031494
    7. 'val' → logprob: -4.447622776031494
    8. 's' → logprob: -4.822622776031494
    9. '#' → logprob: -5.072622776031494
    10. ' #' → logprob: -5.322622776031494

Token 344: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009412499144673347
    2. '_' → logprob: -5.7594122886657715
    3. ' espace' → logprob: -6.2594122886657715
    4. ' space' → logprob: -6.5094122886657715
    5. 'space' → logprob: -6.6344122886657715
    6. '  ' → logprob: -8.13441276550293
    7. '<|end|>' → logprob: -8.38441276550293
    8. ',' → logprob: -8.63441276550293
    9. ' ,' → logprob: -8.75941276550293
    10. ' 
' → logprob: -9.25941276550293

Token 345: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6631696820259094
    2. '<|end|>' → logprob: -0.7881696820259094
    3. '#' → logprob: -4.538169860839844
    4. '  ' → logprob: -5.413169860839844
    5. ' #' → logprob: -5.538169860839844
    6. '
' → logprob: -6.038169860839844
    7. ' 
' → logprob: -6.163169860839844
    8. '<|end|>' → logprob: -6.288169860839844
    9. ',' → logprob: -6.913169860839844
    10. '  
' → logprob: -7.413169860839844

Token 346: ' utile' (ID: 68237)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' #' → logprob: -0.4353680908679962
    2. ' ' → logprob: -1.5603680610656738
    3. '#' → logprob: -2.060368061065674
    4. ' utilisée' → logprob: -4.435368061065674
    5. ' used' → logprob: -7.810368061065674
    6. ' permettant' → logprob: -8.060368537902832
    7. ' une' → logprob: -8.060368537902832
    8. ' un' → logprob: -8.185368537902832
    9. ' destinée' → logprob: -8.185368537902832
    10. '  ' → logprob: -8.185368537902832

Token 347: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.1144157350063324
    2. ' ' → logprob: -2.9894156455993652
    3. 'pour' → logprob: -3.2394156455993652
    4. ' for' → logprob: -4.614415645599365
    5. 'for' → logprob: -6.114415645599365
    6. ' à' → logprob: -6.489415645599365
    7. ' dans' → logprob: -6.864415645599365
    8. ',' → logprob: -6.989415645599365
    9. ' en' → logprob: -7.114415645599365
    10. ' au' → logprob: -8.364416122436523

Token 348: ' comparer' (ID: 125081)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5566078424453735
    2. ' comparer' → logprob: -1.8066078424453735
    3. ' gérer' → logprob: -2.306607723236084
    4. ' les' → logprob: -2.681607723236084
    5. 'com' → logprob: -2.806607723236084
    6. 'compar' → logprob: -3.806607723236084
    7. 'l' → logprob: -5.681607723236084
    8. 'des' → logprob: -6.306607723236084
    9. ' des' → logprob: -6.556607723236084
    10. ' traiter' → logprob: -7.056607723236084

Token 349: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3684234023094177
    2. ' les' → logprob: -1.8684234619140625
    3. 'les' → logprob: -3.1184234619140625
    4. 'des' → logprob: -3.1184234619140625
    5. 'fl' → logprob: -3.1184234619140625
    6. ' flott' → logprob: -5.1184234619140625
    7. 'float' → logprob: -5.2434234619140625
    8. ' ' → logprob: -5.6184234619140625
    9. ' nombres' → logprob: -6.1184234619140625
    10. 'flo' → logprob: -7.3684234619140625

Token 350: ' nombres' (ID: 76205)
  Prédit: ' flott'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flott' → logprob: -0.8300715088844299
    2. ' float' → logprob: -1.4550714492797852
    3. 'float' → logprob: -1.7050714492797852
    4. ' nombres' → logprob: -2.830071449279785
    5. 'fl' → logprob: -2.955071449279785
    6. 'flo' → logprob: -3.955071449279785
    7. ' floats' → logprob: -4.330071449279785
    8. ' floating' → logprob: -6.455071449279785
    9. ' ' → logprob: -7.080071449279785
    10. ' fl' → logprob: -7.080071449279785

Token 351: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.16364651918411255
    2. ' flott' → logprob: -2.4136464595794678
    3. ' ' → logprob: -3.7886464595794678
    4. ' float' → logprob: -4.913646697998047
    5. 'fl' → logprob: -5.163646697998047
    6. ' ' → logprob: -5.163646697998047
    7. 'à' → logprob: -5.163646697998047
    8. '<|end|>' → logprob: -6.038646697998047
    9. 'float' → logprob: -6.288646697998047
    10. '  ' → logprob: -6.288646697998047

Token 352: ' virg' (ID: 165362)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39082908630371094
    2. 'zero' → logprob: -2.015829086303711
    3. ' zéro' → logprob: -2.515829086303711
    4. 'float' → logprob: -3.140829086303711
    5. 'égalité' → logprob: -3.765829086303711
    6. 'l' → logprob: -4.265829086303711
    7. 'z' → logprob: -4.390829086303711
    8. 'près' → logprob: -5.515829086303711
    9. '```' → logprob: -6.265829086303711
    10. '=' → logprob: -6.765829086303711

Token 353: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -1.0018703937530518
    2. 'é' → logprob: -1.2518703937530518
    3. 'ale' → logprob: -1.8768703937530518
    4. 'ocale' → logprob: -2.7518703937530518
    5. 'iale' → logprob: -4.251870155334473
    6. 'eca' → logprob: -4.376870155334473
    7. 'ée' → logprob: -4.626870155334473
    8. 'a' → logprob: -5.001870155334473
    9. 'ulaire' → logprob: -5.126870155334473
    10. 'ea' → logprob: -5.251870155334473

Token 354: ' flott' (ID: 108700)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.0689008235931396
    2. 'fl' → logprob: -1.1939008235931396
    3. 'floating' → logprob: -1.8189008235931396
    4. ' flott' → logprob: -1.9439008235931396
    5. 'f' → logprob: -3.6939008235931396
    6. 'flo' → logprob: -4.193901062011719
    7. 'mobile' → logprob: -5.818901062011719
    8. 'près' → logprob: -6.318901062011719
    9. 'fix' → logprob: -7.943901062011719
    10. 'a' → logprob: -7.943901062011719

Token 355: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.013804272748529911
    2. 'ant' → logprob: -4.3888044357299805
    3. 'ée' → logprob: -8.51380443572998
    4. 'oint' → logprob: -8.63880443572998
    5. 'é' → logprob: -8.88880443572998
    6. '```' → logprob: -8.88880443572998
    7. 'e' → logprob: -9.13880443572998
    8. '-point' → logprob: -9.38880443572998
    9. ' ante' → logprob: -9.88880443572998
    10. 'u' → logprob: -10.01380443572998

Token 356: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29716551303863525
    2. '<|end|>' → logprob: -2.1721653938293457
    3. '.' → logprob: -2.6721653938293457
    4. '#' → logprob: -3.6721653938293457
    5. '

' → logprob: -4.422165393829346
    6. ' ' → logprob: -4.422165393829346
    7. '
' → logprob: -4.922165393829346
    8. '<|end|>' → logprob: -5.297165393829346
    9. '\n' → logprob: -5.797165393829346
    10. ' 
' → logprob: -6.172165393829346

Token 357: 'mod' (ID: 4847)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3571494221687317
    2. '
' → logprob: -1.357149362564087
    3. 'def' → logprob: -3.357149362564087
    4. '
' → logprob: -5.857149600982666
    5. '\n' → logprob: -5.982149600982666
    6. 'class' → logprob: -7.107149600982666
    7. '


' → logprob: -7.607149600982666
    8. '' → logprob: -7.982149600982666
    9. '\' → logprob: -8.357149124145508
    10. '#' → logprob: -9.107149124145508

Token 358: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026391565799713135
    2. '=' → logprob: -3.6513915061950684
    3. ' ' → logprob: -9.526391983032227
    4. '_' → logprob: -11.776391983032227
    5. ' =
' → logprob: -13.026391983032227
    6. 'space' → logprob: -13.026391983032227
    7. ' _' → logprob: -13.401391983032227
    8. ',' → logprob: -13.901391983032227
    9. ' ,' → logprob: -14.151391983032227
    10. ' ' → logprob: -14.276391983032227

Token 359: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2535516619682312
    2. ' ' → logprob: -1.503551721572876
    3. '100' → logprob: -6.503551483154297
    4. '998' → logprob: -9.128551483154297
    5. '1' → logprob: -11.253551483154297
    6. 'int' → logprob: -14.378551483154297
    7. '(' → logprob: -15.128551483154297
    8. '   ' → logprob: -15.128551483154297
    9. ' (' → logprob: -15.878551483154297
    10. '999' → logprob: -16.253551483154297

Token 360: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00036787090357393026
    2. '100' → logprob: -8.000368118286133
    3. '998' → logprob: -10.625368118286133
    4. ' ' → logprob: -11.875368118286133
    5. '1' → logprob: -14.250368118286133
    6. '(' → logprob: -15.250368118286133
    7. 'int' → logprob: -15.375368118286133
    8. '999' → logprob: -18.625368118286133
    9. '109' → logprob: -18.875368118286133
    10. '0' → logprob: -19.750368118286133

Token 361: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5234231948852539
    2. '9' → logprob: -0.8984231948852539
    3. '+' → logprob: -8.273423194885254
    4. ' ' → logprob: -10.773423194885254
    5. ' **' → logprob: -11.773423194885254
    6. '7' → logprob: -12.523423194885254
    7. '*' → logprob: -12.523423194885254
    8. '^' → logprob: -13.023423194885254
    9. '09' → logprob: -13.148423194885254
    10. '```' → logprob: -13.523423194885254

Token 362: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -16.875
    3. '+' → logprob: -19.375
    4. '```' → logprob: -19.5
    5. '10' → logprob: -20.125
    6. ' ' → logprob: -20.875
    7. '
' → logprob: -21.125
    8. '19' → logprob: -21.75
    9. '18' → logprob: -22.625
    10. '``' → logprob: -23.0

Token 363: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015058133285492659
    2. ' +' → logprob: -6.5015058517456055
    3. '7' → logprob: -12.626505851745605
    4. '+
' → logprob: -16.62650489807129
    5. '＋' → logprob: -17.25150489807129
    6. ' ' → logprob: -17.62650489807129
    7. ' plus' → logprob: -18.12650489807129
    8. '9' → logprob: -18.25150489807129
    9. ' ' → logprob: -18.87650489807129
    10. '```' → logprob: -19.37650489807129

Token 364: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. '+' → logprob: -16.0
    3. ' ' → logprob: -19.25
    4. '9' → logprob: -21.125
    5. '07' → logprob: -21.625
    6. '   ' → logprob: -22.375
    7. '```' → logprob: -22.625
    8. '  ' → logprob: -22.75
    9. ' +' → logprob: -23.75
    10. '

' → logprob: -24.25

Token 365: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 366: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4661138951778412
    2. '<|end|>' → logprob: -1.5911139249801636
    3. '#' → logprob: -1.9661139249801636
    4. '
' → logprob: -4.216114044189453
    5. ')' → logprob: -5.966114044189453
    6. ' 
' → logprob: -6.466114044189453
    7. '<|end|>' → logprob: -6.466114044189453
    8. '  ' → logprob: -6.591114044189453
    9. '```' → logprob: -6.841114044189453
    10. '' → logprob: -6.966114044189453

Token 367: ' Un' (ID: 1367)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 368: ' modulo' (ID: 112372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009112619794905186
    2. ' space' → logprob: -6.25911283493042
    3. 'space' → logprob: -6.50911283493042
    4. 'mod' → logprob: -6.63411283493042
    5. ' )' → logprob: -6.75911283493042
    6. '<|end|>' → logprob: -7.13411283493042
    7. ' mod' → logprob: -7.88411283493042
    8. ' ' → logprob: -8.259112358093262
    9. ' espace' → logprob: -8.384112358093262
    10. '  ' → logprob: -8.384112358093262

Token 369: ' cour' (ID: 2871)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 370: 'amment' (ID: 23443)
  Prédit: 'amment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amment' → logprob: -0.034345000982284546
    2. ' ' → logprob: -3.6593449115753174
    3. 'ant' → logprob: -5.6593451499938965
    4. '=' → logprob: -6.1593451499938965
    5. ' =' → logprob: -6.9093451499938965
    6. 'ante' → logprob: -7.6593451499938965
    7. 'r' → logprob: -8.159344673156738
    8. ' ' → logprob: -9.159344673156738
    9. '  
' → logprob: -9.534344673156738
    10. '}' → logprob: -10.034344673156738

Token 371: ' utilisé' (ID: 53138)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.5321015119552612
    2. ' utilisé' → logprob: -1.0321015119552612
    3. '<|end|>' → logprob: -4.282101631164551
    4. ' utilisée' → logprob: -4.407101631164551
    5. 'used' → logprob: -4.782101631164551
    6. ' utilisés' → logprob: -5.032101631164551
    7. ' ' → logprob: -5.407101631164551
    8. ' utilizado' → logprob: -6.157101631164551
    9. ' usado' → logprob: -6.282101631164551
    10. ' utilisées' → logprob: -6.282101631164551

Token 372: ' dans' (ID: 2671)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 373: ' de' (ID: 334)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.10165036469697952
    2. ' l' → logprob: -3.7266504764556885
    3. 'les' → logprob: -4.351650238037109
    4. 'com' → logprob: -4.351650238037109
    5. ' competitive' → logprob: -4.851650238037109
    6. ' algorithm' → logprob: -4.851650238037109
    7. ' ' → logprob: -5.101650238037109
    8. ' la' → logprob: -5.476650238037109
    9. 'l' → logprob: -5.851650238037109
    10. ' algorithms' → logprob: -6.101650238037109

Token 374: ' nombreux' (ID: 33323)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.16590116918087006
    2. 'comp' → logprob: -2.1659011840820312
    3. 'compet' → logprob: -4.665901184082031
    4. 'calcul' → logprob: -4.665901184082031
    5. 'mod' → logprob: -5.540901184082031
    6. 'code' → logprob: -5.790901184082031
    7. 'conc' → logprob: -6.415901184082031
    8. 'nom' → logprob: -6.415901184082031
    9. 'la' → logprob: -6.915901184082031
    10. 'l' → logprob: -7.040901184082031

Token 375: ' problèmes' (ID: 49822)
  Prédit: ' problèmes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problèmes' → logprob: -0.38446304202079773
    2. '_' → logprob: -3.13446307182312
    3. ' problems' → logprob: -3.25946307182312
    4. 'alg' → logprob: -3.38446307182312
    5. ' compét' → logprob: -3.50946307182312
    6. ' codes' → logprob: -3.50946307182312
    7. ' alg' → logprob: -3.50946307182312
    8. ' concours' → logprob: -3.88446307182312
    9. ' ' → logprob: -4.509462833404541
    10. 'com' → logprob: -4.634462833404541

Token 376: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7152178883552551
    2. '<|end|>' → logprob: -0.7152178883552551
    3. '<|end|>' → logprob: -4.5902180671691895
    4. '_' → logprob: -6.0902180671691895
    5. ' =' → logprob: -6.0902180671691895
    6. ' 
' → logprob: -6.3402180671691895
    7. ',' → logprob: -6.9652180671691895
    8. ' (' → logprob: -7.4652180671691895
    9. '#' → logprob: -7.9652180671691895
    10. ' ' → logprob: -8.340217590332031

Token 377: ' programmation' (ID: 166376)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.34393149614334106
    2. 'code' → logprob: -2.4689314365386963
    3. 'math' → logprob: -2.7189314365386963
    4. 'compet' → logprob: -2.8439314365386963
    5. 'calcul' → logprob: -3.7189314365386963
    6. 'com' → logprob: -4.218931674957275
    7. 'nombre' → logprob: -4.968931674957275
    8. 'programm' → logprob: -4.968931674957275
    9. ' math' → logprob: -5.468931674957275
    10. ' programmation' → logprob: -5.718931674957275

Token 378: ' compét' (ID: 34024)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32187190651893616
    2. '<|end|>' → logprob: -1.6968718767166138
    3. '

' → logprob: -3.1968719959259033
    4. '#' → logprob: -3.8218719959259033
    5. ' ' → logprob: -4.946871757507324
    6. '.' → logprob: -5.571871757507324
    7. '
' → logprob: -5.571871757507324
    8. ' =' → logprob: -5.821871757507324
    9. '<|end|>' → logprob: -6.196871757507324
    10. ',' → logprob: -6.321871757507324

Token 379: 'itive' (ID: 4171)
  Prédit: 'itive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itive' → logprob: -0.17519570887088776
    2. 'ition' → logprob: -3.3001956939697266
    3. 'itif' → logprob: -3.3001956939697266
    4. 'it' → logprob: -3.4251956939697266
    5. 'itiv' → logprob: -3.8001956939697266
    6. 't' → logprob: -4.550195693969727
    7. '```' → logprob: -4.675195693969727
    8. 'itve' → logprob: -5.800195693969727
    9. '#' → logprob: -6.425195693969727
    10. 'e' → logprob: -6.800195693969727

Token 380: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14215657114982605
    2. '

' → logprob: -2.1421566009521484
    3. '<|end|>' → logprob: -5.017156600952148
    4. '\n' → logprob: -5.892156600952148
    5. '
' → logprob: -6.392156600952148
    6. '
 
' → logprob: -6.892156600952148
    7. '#' → logprob: -7.392156600952148
    8. '
    
' → logprob: -7.392156600952148
    9. '


' → logprob: -7.892156600952148
    10. '' → logprob: -8.642156600952148

Token 381: 'mod' (ID: 4847)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.25429049134254456
    2. '
' → logprob: -1.5042904615402222
    3. '
' → logprob: -6.879290580749512
    4. '


' → logprob: -7.129290580749512
    5. '
 
' → logprob: -8.504290580749512
    6. '\n' → logprob: -9.129290580749512
    7. 'def' → logprob: -9.379290580749512
    8. '

' → logprob: -10.129290580749512
    9. '
    
' → logprob: -10.129290580749512
    10. '



' → logprob: -11.254290580749512

Token 382: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33151975274086
    2. '=' → logprob: -1.3315197229385376
    3. ' ' → logprob: -4.706519603729248
    4. '<|end|>' → logprob: -5.081519603729248
    5. ',' → logprob: -6.831519603729248
    6. '.' → logprob: -8.081520080566406
    7. '+' → logprob: -8.706520080566406
    8. '<|end|>' → logprob: -9.081520080566406
    9. '#' → logprob: -9.206520080566406
    10. ')' → logprob: -9.206520080566406

Token 383: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0052671958692371845
    2. '=' → logprob: -5.255267143249512
    3. ' ' → logprob: -10.630267143249512
    4. '2' → logprob: -12.130267143249512
    5. '3' → logprob: -14.380267143249512
    6. '1' → logprob: -14.380267143249512
    7. 'a' → logprob: -14.880267143249512
    8. ' =
' → logprob: -14.880267143249512
    9. ',' → logprob: -15.255267143249512
    10. '0' → logprob: -15.380267143249512

Token 384: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7286986708641052
    2. '10' → logprob: -0.7286986708641052
    3. '998' → logprob: -3.47869873046875
    4. '2' → logprob: -6.35369873046875
    5. '100' → logprob: -6.47869873046875
    6. '(' → logprob: -8.60369873046875
    7. ' (' → logprob: -8.72869873046875
    8. '1' → logprob: -8.97869873046875
    9. '172' → logprob: -9.85369873046875
    10. '169' → logprob: -11.10369873046875

Token 385: '998' (ID: 34589)
  Prédit: '998'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '998' → logprob: -0.31626373529434204
    2. '10' → logprob: -1.3162636756896973
    3. '100' → logprob: -6.691263675689697
    4. '(' → logprob: -7.066263675689697
    5. '2' → logprob: -7.191263675689697
    6. '1' → logprob: -10.191264152526855
    7. 'int' → logprob: -10.441264152526855
    8. ' ' → logprob: -11.066264152526855
    9. '172' → logprob: -11.816264152526855
    10. '```' → logprob: -11.941264152526855

Token 386: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -1.7432603272027336e-06
    2. '243' → logprob: -14.625001907348633
    3. '245' → logprob: -15.125001907348633
    4. '247' → logprob: -15.250001907348633
    5. '242' → logprob: -15.875001907348633
    6. '344' → logprob: -16.125001907348633
    7. '254' → logprob: -16.125001907348633
    8. '544' → logprob: -16.250001907348633
    9. '944' → logprob: -16.375001907348633
    10. '234' → logprob: -17.500001907348633

Token 387: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.0002614550176076591
    2. '853' → logprob: -8.250261306762695
    3. '```' → logprob: -16.250261306762695
    4. '3' → logprob: -18.500261306762695
    5. '753' → logprob: -19.000261306762695
    6. '7' → logprob: -19.125261306762695
    7. '352' → logprob: -19.625261306762695
    8. 'switch' → logprob: -19.875261306762695
    9. 'sup' → logprob: -20.000261306762695
    10. '653' → logprob: -20.437761306762695

Token 388: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 389: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 390: ' Un' (ID: 1367)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03892074152827263
    2. '<|end|>' → logprob: -3.2889206409454346
    3. '  ' → logprob: -7.663920879364014
    4. '<|end|>' → logprob: -8.913920402526855
    5. '#' → logprob: -9.413920402526855
    6. '
' → logprob: -10.413920402526855
    7. ' None' → logprob: -10.663920402526855
    8. ' #' → logprob: -10.788920402526855
    9. '0' → logprob: -11.163920402526855
    10. ' ' → logprob: -11.288920402526855

Token 391: ' autre' (ID: 20278)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0691400021314621
    2. '<|end|>' → logprob: -2.9441399574279785
    3. 'mod' → logprob: -5.0691399574279785
    4. ' mod' → logprob: -5.4441399574279785
    5. '  ' → logprob: -6.9441399574279785
    6. '#' → logprob: -7.9441399574279785
    7. '```' → logprob: -8.194140434265137
    8. '<|end|>' → logprob: -8.319140434265137
    9. ' modulo' → logprob: -8.569140434265137
    10. ' #' → logprob: -8.569140434265137

Token 392: ' modulo' (ID: 112372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5428570508956909
    2. '<|end|>' → logprob: -1.542857050895691
    3. 'mod' → logprob: -1.792857050895691
    4. ' mod' → logprob: -4.2928571701049805
    5. '  ' → logprob: -5.2928571701049805
    6. ' modulo' → logprob: -5.6678571701049805
    7. '  
' → logprob: -5.6678571701049805
    8. '
' → logprob: -5.9178571701049805
    9. '_mod' → logprob: -6.1678571701049805
    10. '#' → logprob: -6.2928571701049805

Token 393: ' très' (ID: 9412)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 394: ' utilisé' (ID: 53138)
  Prédit: ' utilisé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.9796043038368225
    2. ' fréquent' → logprob: -1.6046042442321777
    3. 'cour' → logprob: -1.9796042442321777
    4. ' cour' → logprob: -2.8546042442321777
    5. ' courant' → logprob: -3.1046042442321777
    6. ' ' → logprob: -3.2296042442321777
    7. ' souvent' → logprob: -3.6046042442321777
    8. 'util' → logprob: -3.8546042442321777
    9. ' populaire' → logprob: -4.104604244232178
    10. ',' → logprob: -4.229604244232178

Token 395: ' en' (ID: 469)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 396: ' algorithm' (ID: 22184)
  Prédit: ' programmation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programmation' → logprob: -0.014845535159111023
    2. ' compétition' → logprob: -5.639845371246338
    3. ' algorithm' → logprob: -6.014845371246338
    4. 'programm' → logprob: -6.389845371246338
    5. ' programming' → logprob: -6.514845371246338
    6. ' la' → logprob: -6.639845371246338
    7. ' compét' → logprob: -7.014845371246338
    8. 'algorithm' → logprob: -7.514845371246338
    9. 'alg' → logprob: -7.514845371246338
    10. 'program' → logprob: -7.889845371246338

Token 397: 'ie' (ID: 396)
  Prédit: 'ique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.1474124640226364
    2. 'ie' → logprob: -2.0224125385284424
    3. 'iques' → logprob: -5.522412300109863
    4. 'ic' → logprob: -7.647412300109863
    5. 'iq' → logprob: -10.022412300109863
    6. 'ies' → logprob: -10.272412300109863
    7. 'e' → logprob: -10.522412300109863
    8. 'iqu' → logprob: -10.647412300109863
    9. 'mie' → logprob: -10.772412300109863
    10. 'es' → logprob: -10.897412300109863

Token 398: ' compét' (ID: 34024)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 399: 'itive' (ID: 4171)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5665370225906372
    2. 'itive' → logprob: -1.1915370225906372
    3. 'itve' → logprob: -3.6915369033813477
    4. 'ét' → logprob: -3.8165369033813477
    5. 'utive' → logprob: -3.8165369033813477
    6. 'ut' → logprob: -4.316536903381348
    7. 'ative' → logprob: -4.441536903381348
    8. 'et' → logprob: -4.441536903381348
    9. 'it' → logprob: -4.941536903381348
    10. 'ive' → logprob: -5.441536903381348

Token 400: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38855087757110596
    2. '<|end|>' → logprob: -1.513550877571106
    3. '#' → logprob: -2.7635507583618164
    4. '

' → logprob: -4.013550758361816
    5. '.' → logprob: -5.138550758361816
    6. '<|end|>' → logprob: -5.388550758361816
    7. 'def' → logprob: -5.638550758361816
    8. 'import' → logprob: -5.763550758361816
    9. '
' → logprob: -6.888550758361816
    10. '```' → logprob: -7.763550758361816

Token 401: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011961832642555237
    2. '\' → logprob: -5.511961936950684
    3. '\n' → logprob: -5.511961936950684
    4. '#' → logprob: -6.886961936950684
    5. 'import' → logprob: -7.261961936950684
    6. 'class' → logprob: -7.261961936950684
    7. '
' → logprob: -7.386961936950684
    8. 'n' → logprob: -8.636961936950684
    9. 'from' → logprob: -8.886961936950684
    10. '

' → logprob: -9.011961936950684

Token 402: ' Dé' (ID: 27247)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04335927590727806
    2. 'd' → logprob: -3.2933592796325684
    3. '#' → logprob: -5.918359279632568
    4. 'class' → logprob: -7.293359279632568
    5. ' ' → logprob: -7.543359279632568
    6. 'de' → logprob: -7.918359279632568
    7. 'n' → logprob: -8.41835880279541
    8. ' 
' → logprob: -8.54335880279541
    9. '\' → logprob: -8.91835880279541
    10. 'import' → logprob: -9.41835880279541

Token 403: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.005562667269259691
    2. 'fin' → logprob: -5.255562782287598
    3. 'fi' → logprob: -8.505562782287598
    4. '#' → logprob: -9.630562782287598
    5. 'fine' → logprob: -10.130562782287598
    6. 'def' → logprob: -11.755562782287598
    7. 'fen' → logprob: -12.505562782287598
    8. 'fn' → logprob: -12.880562782287598
    9. 'fa' → logprob: -13.255562782287598
    10. 'ff' → logprob: -13.755562782287598

Token 404: 'ition' (ID: 868)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.33833539485931396
    2. 'ition' → logprob: -1.463335394859314
    3. 'inition' → logprob: -3.7133355140686035
    4. 'def' → logprob: -4.5883355140686035
    5. 'import' → logprob: -5.0883355140686035
    6. '#' → logprob: -5.4633355140686035
    7. 'e' → logprob: -6.2133355140686035
    8. 'it' → logprob: -6.3383355140686035
    9. 'inir' → logprob: -6.9633355140686035
    10. 'ault' → logprob: -7.2133355140686035

Token 405: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24000105261802673
    2. 'def' → logprob: -1.9900010824203491
    3. ' de' → logprob: -3.4900009632110596
    4. ' def' → logprob: -4.240001201629639
    5. '_' → logprob: -4.240001201629639
    6. ' d' → logprob: -5.615001201629639
    7. 'class' → logprob: -5.990001201629639
    8. ' =' → logprob: -6.115001201629639
    9. 'de' → logprob: -6.365001201629639
    10. ' class' → logprob: -6.490001201629639

Token 406: ''une' (ID: 13337)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9670742750167847
    2. 'e' → logprob: -1.3420742750167847
    3. ' =' → logprob: -1.3420742750167847
    4. '=' → logprob: -3.467074394226074
    5. 'f' → logprob: -4.092074394226074
    6. ' a' → logprob: -4.717074394226074
    7. 'ef' → logprob: -4.842074394226074
    8. 'def' → logprob: -4.967074394226074
    9. ' la' → logprob: -5.217074394226074
    10. ' ' → logprob: -5.467074394226074

Token 407: ' liste' (ID: 31719)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.049444008618593216
    2. 'def' → logprob: -3.4244439601898193
    3. 'classe' → logprob: -4.674444198608398
    4. ' class' → logprob: -7.049444198608398
    5. 'deque' → logprob: -7.174444198608398
    6. 'named' → logprob: -7.674444198608398
    7. 'fonction' → logprob: -7.799444198608398
    8. 'f' → logprob: -7.924444198608398
    9. 'Classe' → logprob: -7.924444198608398
    10. '#' → logprob: -8.174444198608398

Token 408: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2714667022228241
    2. '=' → logprob: -1.8964667320251465
    3. '=[]' → logprob: -3.5214667320251465
    4. 'des' → logprob: -3.7714667320251465
    5. 'de' → logprob: -4.8964667320251465
    6. '[]' → logprob: -5.5214667320251465
    7. 's' → logprob: -5.7714667320251465
    8. 'ma' → logprob: -5.7714667320251465
    9. '_v' → logprob: -6.2714667320251465
    10. 'v' → logprob: -6.3964667320251465

Token 409: ' couples' (ID: 29972)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9332055449485779
    2. 'n' → logprob: -2.3082056045532227
    3. 'm' → logprob: -2.6832056045532227
    4. 'keywords' → logprob: -2.6832056045532227
    5. 'string' → logprob: -2.9332056045532227
    6. 'chars' → logprob: -3.1832056045532227
    7. 'pun' → logprob: -3.3082056045532227
    8. 'car' → logprob: -3.5582056045532227
    9. 'strings' → logprob: -3.5582056045532227
    10. 'letters' → logprob: -3.6832056045532227

Token 410: ' représentant' (ID: 136122)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.7682986855506897
    2. ' =' → logprob: -1.393298625946045
    3. 'de' → logprob: -2.018298625946045
    4. '[]' → logprob: -3.393298625946045
    5. 'cou' → logprob: -4.143298625946045
    6. '[(' → logprob: -4.268298625946045
    7. '=' → logprob: -4.393298625946045
    8. '_pairs' → logprob: -4.393298625946045
    9. '[' → logprob: -4.518298625946045
    10. 'd' → logprob: -4.643298625946045

Token 411: ' les' (ID: 1341)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.6617575287818909
    2. 'les' → logprob: -1.161757469177246
    3. ' des' → logprob: -2.661757469177246
    4. '(' → logprob: -3.786757469177246
    5. 'points' → logprob: -4.161757469177246
    6. 'la' → logprob: -4.411757469177246
    7. 'le' → logprob: -4.911757469177246
    8. ' les' → logprob: -5.286757469177246
    9. '#' → logprob: -5.411757469177246
    10. 'pairs' → logprob: -5.536757469177246

Token 412: ' ' (ID: 220)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.013345512561500072
    2. ' directions' → logprob: -4.763345718383789
    3. 'm' → logprob: -6.763345718383789
    4. 'd' → logprob: -7.013345718383789
    5. 'points' → logprob: -7.138345718383789
    6. 'dé' → logprob: -7.513345718383789
    7. 'direction' → logprob: -8.388345718383789
    8. 'diff' → logprob: -8.513345718383789
    9. 'positions' → logprob: -8.888345718383789
    10. 'moves' → logprob: -9.013345718383789

Token 413: '4' (ID: 19)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.11723806709051132
    2. 'dé' → logprob: -2.7422380447387695
    3. 'points' → logprob: -4.7422380447387695
    4. 'm' → logprob: -4.8672380447387695
    5. '4' → logprob: -4.8672380447387695
    6. 'diff' → logprob: -5.1172380447387695
    7. 'd' → logprob: -5.8672380447387695
    8. 'positions' → logprob: -5.8672380447387695
    9. 'vect' → logprob: -6.1172380447387695
    10. 'qu' → logprob: -6.3672380447387695

Token 414: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.2017950415611267
    2. ' directions' → logprob: -1.7017951011657715
    3. '-dire' → logprob: -9.076794624328613
    4. 'direct' → logprob: -9.201794624328613
    5. 'coins' → logprob: -10.201794624328613
    6. 'direction' → logprob: -10.701794624328613
    7. 'positions' → logprob: -10.951794624328613
    8. 'points' → logprob: -11.201794624328613
    9. 'dirs' → logprob: -11.326794624328613
    10. 'd' → logprob: -11.326794624328613

Token 415: ' cardinal' (ID: 102745)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.06797534972429276
    2. 'dirs' → logprob: -3.3179752826690674
    3. 'dx' → logprob: -3.9429752826690674
    4. 'd' → logprob: -6.1929755210876465
    5. 'dir' → logprob: -6.1929755210876465
    6. ' directions' → logprob: -6.4429755210876465
    7. ' =' → logprob: -6.5679755210876465
    8. 'D' → logprob: -6.9429755210876465
    9. 'DIR' → logprob: -6.9429755210876465
    10. '[(' → logprob: -8.192975044250488

Token 416: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.03047400712966919
    2. 'aires' → logprob: -4.0304741859436035
    3. 's' → logprob: -5.2804741859436035
    4. 'dire' → logprob: -6.1554741859436035
    5. 'aux' → logprob: -6.4054741859436035
    6. '[(' → logprob: -7.0304741859436035
    7. '```' → logprob: -7.4054741859436035
    8. 'e' → logprob: -7.4054741859436035
    9. 'x' → logprob: -8.280473709106445
    10. 'dx' → logprob: -8.530473709106445

Token 417: ' (-' (ID: 21382)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.12056488543748856
    2. 'dirs' → logprob: -2.7455649375915527
    3. 'dx' → logprob: -3.2455649375915527
    4. 'd' → logprob: -5.995564937591553
    5. 'D' → logprob: -6.120564937591553
    6. 'dir' → logprob: -6.495564937591553
    7. 'DIR' → logprob: -6.495564937591553
    8. 'direction' → logprob: -7.620564937591553
    9. ' directions' → logprob: -7.620564937591553
    10. 'delta' → logprob: -7.745564937591553

Token 418: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006342819542624056
    2. 'dx' → logprob: -7.62563419342041
    3. 'x' → logprob: -10.12563419342041
    4. '-' → logprob: -10.37563419342041
    5. ' ' → logprob: -10.62563419342041
    6. ',' → logprob: -11.25063419342041
    7. ')' → logprob: -12.12563419342041
    8. '(' → logprob: -12.25063419342041
    9. 'd' → logprob: -12.62563419342041
    10. '2' → logprob: -12.62563419342041

Token 419: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002128382766386494
    2. ' ,' → logprob: -8.500212669372559
    3. '1' → logprob: -12.250212669372559
    4. ',-' → logprob: -13.500212669372559
    5. ',
' → logprob: -14.000212669372559
    6. '0' → logprob: -15.000212669372559
    7. '```' → logprob: -15.125212669372559
    8. '),' → logprob: -15.250212669372559
    9. ')' → logprob: -15.250212669372559
    10. 'i' → logprob: -15.500212669372559

Token 420: ' haut' (ID: 28223)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.6564377546310425
    2. 'l' → logprob: -1.2814377546310425
    3. 'x' → logprob: -2.406437873840332
    4. ' la' → logprob: -3.531437873840332
    5. ' dx' → logprob: -4.406437873840332
    6. 'dy' → logprob: -4.531437873840332
    7. 'ligne' → logprob: -4.531437873840332
    8. '1' → logprob: -4.781437873840332
    9. 'la' → logprob: -4.906437873840332
    10. 'd' → logprob: -5.406437873840332

Token 421: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005173751153051853
    2. ' ,' → logprob: -5.630173683166504
    3. 's' → logprob: -7.755173683166504
    4. '),' → logprob: -8.005173683166504
    5. ')' → logprob: -8.630173683166504
    6. ',-' → logprob: -9.005173683166504
    7. ',
' → logprob: -9.380173683166504
    8. 'dx' → logprob: -9.880173683166504
    9. ' et' → logprob: -10.005173683166504
    10. ' =' → logprob: -10.255173683166504

Token 422: ' puis' (ID: 18766)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.180385023355484
    2. ' ' → logprob: -1.8053849935531616
    3. '1' → logprob: -7.805385112762451
    4. ')' → logprob: -9.180384635925293
    5. ',' → logprob: -10.055384635925293
    6. 'dx' → logprob: -10.930384635925293
    7. ' )' → logprob: -11.055384635925293
    8. '  ' → logprob: -11.805384635925293
    9. ' ,' → logprob: -12.555384635925293
    10. '```' → logprob: -12.680384635925293

Token 423: ' droite' (ID: 61428)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15048100054264069
    2. ' ' → logprob: -2.4004809856414795
    3. '(' → logprob: -3.6504809856414795
    4. ' (' → logprob: -4.275481224060059
    5. ',' → logprob: -5.775481224060059
    6. '1' → logprob: -6.025481224060059
    7. '[' → logprob: -6.150481224060059
    8. ')' → logprob: -7.400481224060059
    9. '[(' → logprob: -8.650481224060059
    10. ' [' → logprob: -8.775481224060059

Token 424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002826627343893051
    2. ' ,' → logprob: -6.877826690673828
    3. ',
' → logprob: -7.127826690673828
    4. '),' → logprob: -8.252826690673828
    5. '=' → logprob: -9.127826690673828
    6. ' =' → logprob: -9.252826690673828
    7. 's' → logprob: -9.252826690673828
    8. ')' → logprob: -9.752826690673828
    9. '[' → logprob: -10.127826690673828
    10. ',-' → logprob: -10.127826690673828

Token 425: ' bas' (ID: 3222)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1105547547340393
    2. ' ' → logprob: -2.6105546951293945
    3. '-' → logprob: -4.1105546951293945
    4. 'down' → logprob: -4.7355546951293945
    5. ' -' → logprob: -6.1105546951293945
    6. '1' → logprob: -6.1105546951293945
    7. '[' → logprob: -7.3605546951293945
    8. '(' → logprob: -8.985554695129395
    9. ' down' → logprob: -8.985554695129395
    10. ',' → logprob: -9.360554695129395

Token 426: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013534489553421736
    2. ')' → logprob: -7.0013532638549805
    3. ' ,' → logprob: -8.87635326385498
    4. '),' → logprob: -9.37635326385498
    5. ',
' → logprob: -10.25135326385498
    6. '=' → logprob: -10.62635326385498
    7. 'et' → logprob: -11.00135326385498
    8. ' =' → logprob: -11.37635326385498
    9. ',-' → logprob: -11.37635326385498
    10. 's' → logprob: -11.50135326385498

Token 427: ' gauche' (ID: 58367)
  Prédit: ' gauche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gauche' → logprob: -0.6185614466667175
    2. 'g' → logprob: -1.1185615062713623
    3. '0' → logprob: -2.8685615062713623
    4. '-' → logprob: -2.8685615062713623
    5. ' ' → logprob: -4.868561267852783
    6. ' -' → logprob: -5.368561267852783
    7. 'left' → logprob: -5.868561267852783
    8. '-g' → logprob: -5.993561267852783
    9. '1' → logprob: -6.243561267852783
    10. ' g' → logprob: -7.118561267852783

Token 428: ').
' (ID: 6294)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.16531820595264435
    2. ']
' → logprob: -2.290318250656128
    3. 'dirs' → logprob: -3.915318250656128
    4. ']' → logprob: -4.665318012237549
    5. 'dx' → logprob: -5.165318012237549
    6. ')
' → logprob: -5.790318012237549
    7. 'd' → logprob: -5.915318012237549
    8. 'dir' → logprob: -5.915318012237549
    9. 'D' → logprob: -6.540318012237549
    10. '
' → logprob: -6.915318012237549

Token 429: 'dd' (ID: 1183)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.3607647716999054
    2. 'dirs' → logprob: -1.735764741897583
    3. 'dx' → logprob: -2.485764741897583
    4. 'd' → logprob: -3.610764741897583
    5. 'dir' → logprob: -4.985764980316162
    6. 'D' → logprob: -5.360764980316162
    7. 'DIR' → logprob: -5.860764980316162
    8. 'delta' → logprob: -7.860764980316162
    9. 'di' → logprob: -7.860764980316162
    10. 'direction' → logprob: -8.485764503479004

Token 430: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20843027532100677
    2. '=' → logprob: -1.708430290222168
    3. 'd' → logprob: -5.333430290222168
    4. 'ir' → logprob: -7.083430290222168
    5. 'x' → logprob: -8.083430290222168
    6. 'irections' → logprob: -8.083430290222168
    7. '=[' → logprob: -8.333430290222168
    8. '4' → logprob: -9.083430290222168
    9. 's' → logprob: -9.708430290222168
    10. 'r' → logprob: -9.833430290222168

Token 431: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0036862941924482584
    2. '[(' → logprob: -6.003686428070068
    3. '[-' → logprob: -6.753686428070068
    4. ' [' → logprob: -10.37868595123291
    5. '[
' → logprob: -11.87868595123291
    6. '[[' → logprob: -12.37868595123291
    7. '[((' → logprob: -14.12868595123291
    8. ' [(' → logprob: -15.50368595123291
    9. '[\' → logprob: -16.378686904907227
    10. '[]' → logprob: -17.003686904907227

Token 432: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0006522706826217473
    2. '(' → logprob: -7.500652313232422
    3. '-' → logprob: -9.500652313232422
    4. '[-' → logprob: -10.625652313232422
    5. ' (-' → logprob: -15.750652313232422
    6. '[' → logprob: -16.375652313232422
    7. '0' → logprob: -17.500652313232422
    8. '(+' → logprob: -18.250652313232422
    9. '   ' → logprob: -19.625652313232422
    10. ' ' → logprob: -19.750652313232422

Token 433: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '0' → logprob: -20.000001907348633
    4. '   ' → logprob: -20.875001907348633
    5. ')' → logprob: -21.750001907348633
    6. '-' → logprob: -21.875001907348633
    7. '2' → logprob: -22.000001907348633
    8. '
' → logprob: -22.000001907348633
    9. '۱' → logprob: -22.500001907348633
    10. '' → logprob: -22.687501907348633

Token 434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013047587708570063
    2. '0' → logprob: -9.375130653381348
    3. ' ,' → logprob: -10.000130653381348
    4. '),' → logprob: -16.75012969970703
    5. ',
' → logprob: -17.37512969970703
    6. ',),' → logprob: -17.50012969970703
    7. ')' → logprob: -19.12512969970703
    8. '1' → logprob: -19.62512969970703
    9. ',)' → logprob: -19.62512969970703
    10. ' ' → logprob: -19.62512969970703

Token 435: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. ')' → logprob: -20.875051498413086
    4. '  ' → logprob: -21.500051498413086
    5. ' ' → logprob: -21.625051498413086
    6. '۰' → logprob: -21.625051498413086
    7. '1' → logprob: -22.250051498413086
    8. ',' → logprob: -22.500051498413086
    9. '   ' → logprob: -22.625051498413086
    10. '00' → logprob: -22.750051498413086

Token 436: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0069455336779356
    2. '),(' → logprob: -5.006945610046387
    3. ')' → logprob: -8.756945610046387
    4. '),
' → logprob: -9.881945610046387
    5. ' ),' → logprob: -11.131945610046387
    6. '),

' → logprob: -12.006945610046387
    7. ',),' → logprob: -14.756945610046387
    8. ',' → logprob: -15.131945610046387
    9. '),
' → logprob: -16.13194465637207
    10. ' ' → logprob: -17.38194465637207

Token 437: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0040915776044130325
    2. '1' → logprob: -5.504091739654541
    3. ' ' → logprob: -11.254091262817383
    4. '01' → logprob: -15.879091262817383
    5. '-' → logprob: -17.379091262817383
    6. '```' → logprob: -18.879091262817383
    7. '   ' → logprob: -19.254091262817383
    8. '  ' → logprob: -19.254091262817383
    9. '2' → logprob: -19.504091262817383
    10. '+' → logprob: -19.754091262817383

Token 438: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.141186450899113e-05
    2. ',-' → logprob: -11.375020980834961
    3. '1' → logprob: -11.625020980834961
    4. ' ,' → logprob: -14.000020980834961
    5. ',+' → logprob: -16.37502098083496
    6. ',
' → logprob: -18.25002098083496
    7. ' ' → logprob: -18.87502098083496
    8. '

' → logprob: -20.12502098083496
    9. ',

' → logprob: -20.62502098083496
    10. ' ,-' → logprob: -21.62502098083496

Token 439: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.975612187583465e-05
    2. ' ' → logprob: -10.875029563903809
    3. '-' → logprob: -11.500029563903809
    4. '+' → logprob: -14.500029563903809
    5. '```' → logprob: -16.875030517578125
    6. ')' → logprob: -17.000030517578125
    7. '   ' → logprob: -18.750030517578125
    8. '  ' → logprob: -18.875030517578125
    9. ' -' → logprob: -19.000030517578125
    10. '
' → logprob: -19.562530517578125

Token 440: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.002813432365655899
    2. '),' → logprob: -5.877813339233398
    3. ')' → logprob: -12.127813339233398
    4. ' ),' → logprob: -13.377813339233398
    5. '0' → logprob: -13.752813339233398
    6. '),
' → logprob: -15.377813339233398
    7. ' ' → logprob: -16.0028133392334
    8. ',' → logprob: -16.0028133392334
    9. '(' → logprob: -16.5028133392334
    10. '),

' → logprob: -17.7528133392334

Token 441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.250000953674316
    3. '-' → logprob: -15.875000953674316
    4. '0' → logprob: -16.5
    5. '```' → logprob: -18.125
    6. '+' → logprob: -19.5
    7. '(' → logprob: -21.0
    8. ')' → logprob: -21.0
    9. '

' → logprob: -21.375
    10. '   ' → logprob: -21.5

Token 442: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008321399218402803
    2. '0' → logprob: -7.1258320808410645
    3. ' ,' → logprob: -10.500832557678223
    4. ' ' → logprob: -16.250831604003906
    5. ',
' → logprob: -17.250831604003906
    6. '```' → logprob: -18.625831604003906
    7. '<|end|>' → logprob: -19.063331604003906
    8. ')' → logprob: -19.250831604003906
    9. ',-' → logprob: -19.313331604003906
    10. '‌,' → logprob: -20.500831604003906

Token 443: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۰' → logprob: -17.375003814697266
    4. ',' → logprob: -18.750003814697266
    5. '```' → logprob: -19.000003814697266
    6. ')' → logprob: -19.125003814697266
    7. '<|end|>' → logprob: -20.062503814697266
    8. '00' → logprob: -20.312503814697266
    9. '０' → logprob: -20.375003814697266
    10. '   ' → logprob: -20.500003814697266

Token 444: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0009214656893163919
    2. '),' → logprob: -7.000921249389648
    3. ' ),' → logprob: -12.375921249389648
    4. ')]' → logprob: -12.375921249389648
    5. ',(' → logprob: -14.250921249389648
    6. ',' → logprob: -14.625921249389648
    7. ')' → logprob: -14.875921249389648
    8. '),
' → logprob: -16.87592124938965
    9. '(' → logprob: -18.12592124938965
    10. ' ' → logprob: -18.25092124938965

Token 445: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. '-' → logprob: -13.250003814697266
    3. ' ' → logprob: -13.250003814697266
    4. '۰' → logprob: -16.375003814697266
    5. '(' → logprob: -16.500003814697266
    6. '```' → logprob: -18.375003814697266
    7. ')' → logprob: -18.625003814697266
    8. '   ' → logprob: -18.687503814697266
    9. '00' → logprob: -18.937503814697266
    10. '０' → logprob: -18.937503814697266

Token 446: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -4.847109812544659e-05
    2. ',' → logprob: -10.000048637390137
    3. '-' → logprob: -13.125048637390137
    4. ',
' → logprob: -14.875048637390137
    5. ',-
' → logprob: -15.125048637390137
    6. ',-

' → logprob: -15.375048637390137
    7. ' ,-' → logprob: -16.50004768371582
    8. ',\
' → logprob: -17.50004768371582
    9. '```' → logprob: -18.25004768371582
    10. ',

' → logprob: -18.87504768371582

Token 447: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.75
    3. ')]' → logprob: -16.375
    4. ')' → logprob: -16.625
    5. '```' → logprob: -18.25
    6. '-' → logprob: -18.75
    7. '   ' → logprob: -19.75
    8. '１' → logprob: -20.625
    9. '])' → logprob: -20.9375
    10. ')])' → logprob: -21.25

Token 448: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00017565040616318583
    2. ')' → logprob: -8.875175476074219
    3. '),' → logprob: -10.625175476074219
    4. ' )' → logprob: -12.125175476074219
    5. ']' → logprob: -12.500175476074219
    6. ')],' → logprob: -14.250175476074219
    7. ')]
' → logprob: -15.000175476074219
    8. '))' → logprob: -15.125175476074219
    9. ')].' → logprob: -15.250175476074219
    10. ')])' → logprob: -15.250175476074219

Token 449: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3890889585018158
    2. '#' → logprob: -1.7640889883041382
    3. '<|end|>' → logprob: -3.0140888690948486
    4. '
' → logprob: -3.2640888690948486
    5. '

' → logprob: -3.7640888690948486
    6. 'class' → logprob: -4.139089107513428
    7. '\n' → logprob: -4.764089107513428
    8. '<|end|>' → logprob: -5.764089107513428
    9. 'import' → logprob: -5.889089107513428
    10. '```' → logprob: -6.014089107513428

Token 450: ' Dé' (ID: 27247)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06972165405750275
    2. '#' → logprob: -3.0697216987609863
    3. 'from' → logprob: -5.319721698760986
    4. 'dx' → logprob: -5.819721698760986
    5. 'class' → logprob: -5.819721698760986
    6. 'dp' → logprob: -6.194721698760986
    7. 'n' → logprob: -6.944721698760986
    8. 'dire' → logprob: -7.069721698760986
    9. 'direction' → logprob: -7.319721698760986
    10. 'd' → logprob: -7.444721698760986

Token 451: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.11081898212432861
    2. 'fin' → logprob: -2.485818862915039
    3. 'dd' → logprob: -4.985818862915039
    4. '#' → logprob: -5.485818862915039
    5. 'd' → logprob: -5.735818862915039
    6. 'fine' → logprob: -5.985818862915039
    7. 'ff' → logprob: -6.985818862915039
    8. '```' → logprob: -7.485818862915039
    9. 'fault' → logprob: -7.610818862915039
    10. 'fi' → logprob: -8.110818862915039

Token 452: 'ition' (ID: 868)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.013624715618789196
    2. 'dir' → logprob: -4.763624668121338
    3. '_dd' → logprob: -6.138624668121338
    4. 'ddd' → logprob: -7.263624668121338
    5. 'inir' → logprob: -8.013625144958496
    6. 'd' → logprob: -8.013625144958496
    7. '```' → logprob: -8.638625144958496
    8. 'inition' → logprob: -8.763625144958496
    9. 'dds' → logprob: -8.763625144958496
    10. '(dd' → logprob: -9.263625144958496

Token 453: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2637852728366852
    2. ' d' → logprob: -1.7637852430343628
    3. ' =' → logprob: -3.0137853622436523
    4. '=' → logprob: -5.388785362243652
    5. 'de' → logprob: -6.513785362243652
    6. 's' → logprob: -6.888785362243652
    7. 'des' → logprob: -7.013785362243652
    8. ' de' → logprob: -7.388785362243652
    9. '#' → logprob: -7.513785362243652
    10. ' of' → logprob: -7.763785362243652

Token 454: ''une' (ID: 13337)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27460041642189026
    2. 'une' → logprob: -2.0246005058288574
    3. '[]' → logprob: -2.7746005058288574
    4. ' =' → logprob: -4.774600505828857
    5. ''une' → logprob: -5.149600505828857
    6. 'la' → logprob: -5.774600505828857
    7. 'un' → logprob: -5.774600505828857
    8. 'a' → logprob: -5.899600505828857
    9. 'dd' → logprob: -5.899600505828857
    10. '=' → logprob: -5.899600505828857

Token 455: ' liste' (ID: 31719)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.8129197359085083
    2. 'liste' → logprob: -1.4379197359085083
    3. 'list' → logprob: -2.5629196166992188
    4. '#' → logprob: -3.4379196166992188
    5. 'deque' → logprob: -3.8129196166992188
    6. 'd' → logprob: -3.8129196166992188
    7. 'tuple' → logprob: -3.9379196166992188
    8. 'dict' → logprob: -4.187919616699219
    9. 'range' → logprob: -4.187919616699219
    10. 'def' → logprob: -4.312919616699219

Token 456: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04555967450141907
    2. '=' → logprob: -4.045559883117676
    3. 'des' → logprob: -5.420559883117676
    4. '[' → logprob: -5.670559883117676
    5. ' de' → logprob: -5.670559883117676
    6. 'de' → logprob: -6.045559883117676
    7. 'd' → logprob: -6.045559883117676
    8. 'dd' → logprob: -6.420559883117676
    9. 'of' → logprob: -6.795559883117676
    10. ' des' → logprob: -7.045559883117676

Token 457: ' couples' (ID: 29972)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.1340545117855072
    2. '[(' → logprob: -3.13405442237854
    3. '[' → logprob: -3.63405442237854
    4. '(' → logprob: -4.634054660797119
    5. 'cou' → logprob: -4.634054660797119
    6. 'tu' → logprob: -4.759054660797119
    7. 'pairs' → logprob: -5.134054660797119
    8. '(-' → logprob: -5.384054660797119
    9. 'dire' → logprob: -5.634054660797119
    10. '(dd' → logprob: -6.759054660797119

Token 458: ' représentant' (ID: 136122)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.3049091696739197
    2. '[' → logprob: -1.8049092292785645
    3. ' =' → logprob: -2.8049092292785645
    4. '=' → logprob: -4.3049092292785645
    5. 'dd' → logprob: -5.1799092292785645
    6. ' [(' → logprob: -5.3049092292785645
    7. '(' → logprob: -5.6799092292785645
    8. ' [' → logprob: -6.4299092292785645
    9. '([(' → logprob: -6.4299092292785645
    10. '=(' → logprob: -6.5549092292785645

Token 459: ' les' (ID: 1341)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6510932445526123
    2. '[(' → logprob: -0.7760932445526123
    3. 'dd' → logprob: -5.026093482971191
    4. 'les' → logprob: -6.026093482971191
    5. '[
' → logprob: -6.401093482971191
    6. ' [(' → logprob: -6.401093482971191
    7. '(' → logprob: -6.651093482971191
    8. ' [' → logprob: -6.776093482971191
    9. '#' → logprob: -7.151093482971191
    10. '[]' → logprob: -7.526093482971191

Token 460: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7444068789482117
    2. '(' → logprob: -1.1194069385528564
    3. '4' → logprob: -2.2444069385528564
    4. '8' → logprob: -2.9944069385528564
    5. '(-' → logprob: -3.8694069385528564
    6. '[(' → logprob: -4.494406700134277
    7. '[-' → logprob: -4.744406700134277
    8. 'dire' → logprob: -7.494406700134277
    9. '[
' → logprob: -7.994406700134277
    10. ' directions' → logprob: -8.994406700134277

Token 461: '8' (ID: 23)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5671228170394897
    2. '(' → logprob: -1.0671228170394897
    3. '(-' → logprob: -2.6921229362487793
    4. '[-' → logprob: -4.192122936248779
    5. '[(' → logprob: -5.442122936248779
    6. '4' → logprob: -6.942122936248779
    7. '8' → logprob: -7.442122936248779
    8. '-' → logprob: -10.442122459411621
    9. 'dire' → logprob: -10.567122459411621
    10. '[
' → logprob: -11.192122459411621

Token 462: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.35249829292297363
    2. ' directions' → logprob: -1.3524982929229736
    3. ',' → logprob: -3.3524982929229736
    4. 'direction' → logprob: -6.4774980545043945
    5. ',(' → logprob: -7.4774980545043945
    6. 'vo' → logprob: -7.6024980545043945
    7. ',d' → logprob: -8.602498054504395
    8. ' ,' → logprob: -8.852498054504395
    9. ' (' → logprob: -8.852498054504395
    10. '-direction' → logprob: -9.227498054504395

Token 463: ' d' (ID: 272)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dd' → logprob: -1.0123957395553589
    2. '[' → logprob: -1.5123957395553589
    3. '[(' → logprob: -2.0123958587646484
    4. '=(-' → logprob: -2.2623958587646484
    5. ' =' → logprob: -2.5123958587646484
    6. ',' → logprob: -3.2623958587646484
    7. '=(' → logprob: -4.262395858764648
    8. 'dire' → logprob: -4.387395858764648
    9. '=' → logprob: -4.512395858764648
    10. '(dd' → logprob: -5.012395858764648

Token 464: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0182647705078125
    2. 'i' → logprob: -1.0182647705078125
    3. 'irection' → logprob: -3.1432647705078125
    4. '[' → logprob: -3.2682647705078125
    5. '(-' → logprob: -3.2682647705078125
    6. 'é' → logprob: -3.6432647705078125
    7. 'vo' → logprob: -3.7682647705078125
    8. '8' → logprob: -3.8932647705078125
    9. 'irections' → logprob: -4.3932647705078125
    10. '(' → logprob: -4.7682647705078125

Token 465: ' matr' (ID: 25095)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.010480204597115517
    2. 'case' → logprob: -4.8854804039001465
    3. 'comp' → logprob: -7.0104804039001465
    4. 'gr' → logprob: -8.135479927062988
    5. 'cube' → logprob: -8.260479927062988
    6. 'voie' → logprob: -8.385479927062988
    7. '8' → logprob: -8.385479927062988
    8. 'é' → logprob: -9.260479927062988
    9. ' grille' → logprob: -9.510479927062988
    10. '```' → logprob: -9.510479927062988

Token 466: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.07080918550491333
    2. 'rice' → logprob: -3.0708091259002686
    3. '[' → logprob: -4.695809364318848
    4. 'ix' → logprob: -4.945809364318848
    5. '```' → logprob: -6.945809364318848
    6. '#' → logprob: -7.445809364318848
    7. 'ic' → logprob: -7.570809364318848
    8. '[]' → logprob: -7.695809364318848
    9. '[[' → logprob: -7.820809364318848
    10. 'rix' → logprob: -8.195809364318848

Token 467: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09357642382383347
    2. ',' → logprob: -3.218576431274414
    3. 'dd' → logprob: -4.218576431274414
    4. '=' → logprob: -4.468576431274414
    5. '=(-' → logprob: -4.468576431274414
    6. '[' → logprob: -5.718576431274414
    7. '=(' → logprob: -5.843576431274414
    8. '[(' → logprob: -6.718576431274414
    9. '=[' → logprob: -6.718576431274414
    10. ' ,' → logprob: -7.343576431274414

Token 468: 't' (ID: 83)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0028473176062107086
    2. '(' → logprob: -6.627847194671631
    3. ' (-' → logprob: -6.877847194671631
    4. '-' → logprob: -8.377847671508789
    5. '[-' → logprob: -9.377847671508789
    6. '[' → logprob: -9.877847671508789
    7. ')' → logprob: -9.877847671508789
    8. '0' → logprob: -11.127847671508789
    9. ',' → logprob: -11.377847671508789
    10. '
' → logprob: -11.502847671508789

Token 469: 'outes' (ID: 8983)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.03721291944384575
    2. '[' → logprob: -3.78721284866333
    3. '(' → logprob: -5.41221284866333
    4. '[-' → logprob: -5.53721284866333
    5. ' (-' → logprob: -6.03721284866333
    6. '=(-' → logprob: -7.28721284866333
    7. 'uple' → logprob: -7.66221284866333
    8. '[(' → logprob: -7.78721284866333
    9. '0' → logprob: -8.162213325500488
    10. '-' → logprob: -8.162213325500488

Token 470: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.17579802870750427
    2. ',' → logprob: -3.425797939300537
    3. ' les' → logprob: -3.675797939300537
    4. 'dire' → logprob: -4.425797939300537
    5. ')' → logprob: -4.550797939300537
    6. 'comb' → logprob: -4.675797939300537
    7. '8' → logprob: -4.800797939300537
    8. 'adj' → logprob: -4.925797939300537
    9. '(-' → logprob: -5.050797939300537
    10. 'vo' → logprob: -5.175797939300537

Token 471: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.13948005437850952
    2. 'cases' → logprob: -2.7644801139831543
    3. 'adj' → logprob: -3.7644801139831543
    4. ' directions' → logprob: -4.139480113983154
    5. 'positions' → logprob: -4.389480113983154
    6. 'vo' → logprob: -4.639480113983154
    7. 'comb' → logprob: -5.889480113983154
    8. 'poss' → logprob: -7.014480113983154
    9. '8' → logprob: -7.889480113983154
    10. ')' → logprob: -8.264479637145996

Token 472: ' autour' (ID: 39420)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12620492279529572
    2. 'adj' → logprob: -3.5012049674987793
    3. ' ,' → logprob: -3.7512049674987793
    4. ' possibles' → logprob: -4.001204967498779
    5. ')' → logprob: -4.251204967498779
    6. '),' → logprob: -5.001204967498779
    7. ' (' → logprob: -5.376204967498779
    8. ' adj' → logprob: -5.876204967498779
    9. ' vois' → logprob: -6.001204967498779
    10. 'vo' → logprob: -6.626204967498779

Token 473: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7547460198402405
    2. 'd' → logprob: -0.7547460198402405
    3. ' d' → logprob: -3.1297459602355957
    4. ',' → logprob: -5.004745960235596
    5. '(d' → logprob: -5.504745960235596
    6. '=(' → logprob: -6.379745960235596
    7. ' (' → logprob: -6.879745960235596
    8. 'du' → logprob: -7.254745960235596
    9. ')' → logprob: -7.504745960235596
    10. '0' → logprob: -8.254746437072754

Token 474: ''un' (ID: 9788)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2203986942768097
    2. 'un' → logprob: -1.8453986644744873
    3. 'la' → logprob: -4.345398902893066
    4. '0' → logprob: -4.720398902893066
    5. 'une' → logprob: -4.970398902893066
    6. '(x' → logprob: -5.595398902893066
    7. 'le' → logprob: -6.720398902893066
    8. '1' → logprob: -7.220398902893066
    9. '[' → logprob: -7.345398902893066
    10. 'x' → logprob: -7.470398902893066

Token 475: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -1.0197041034698486
    2. 'case' → logprob: -1.3947041034698486
    3. '0' → logprob: -1.7697041034698486
    4. 'cell' → logprob: -2.0197041034698486
    5. '(' → logprob: -2.5197041034698486
    6. '(x' → logprob: -6.0197038650512695
    7. '1' → logprob: -6.6447038650512695
    8. 'position' → logprob: -6.7697038650512695
    9. 'x' → logprob: -7.2697038650512695
    10. 'cel' → logprob: -7.6447038650512695

Token 476: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1671941876411438
    2. ',' → logprob: -2.792194128036499
    3. ').' → logprob: -3.417194128036499
    4. ')]' → logprob: -3.417194128036499
    5. '),' → logprob: -5.042194366455078
    6. '):' → logprob: -5.292194366455078
    7. '=(-' → logprob: -5.417194366455078
    8. '(-' → logprob: -5.667194366455078
    9. ')]
' → logprob: -6.667194366455078
    10. '[(' → logprob: -6.667194366455078

Token 477: 'dd' (ID: 1183)
  Prédit: 'dd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.25347700715065
    2. '[' → logprob: -1.5034769773483276
    3. '[-' → logprob: -7.003477096557617
    4. '[(' → logprob: -7.503477096557617
    5. ' dd' → logprob: -10.253477096557617
    6. ' [' → logprob: -10.753477096557617
    7. '[
' → logprob: -11.128477096557617
    8. 'd' → logprob: -11.878477096557617
    9. '(-' → logprob: -12.878477096557617
    10. '[d' → logprob: -13.003477096557617

Token 478: 'n' (ID: 77)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16030576825141907
    2. '=' → logprob: -1.9103057384490967
    3. '=[' → logprob: -9.910305976867676
    4. ' =[' → logprob: -10.910305976867676
    5. '8' → logprob: -11.410305976867676
    6. ' ' → logprob: -13.535305976867676
    7. 'd' → logprob: -14.910305976867676
    8. '2' → logprob: -15.660305976867676
    9. '=[[' → logprob: -15.660305976867676
    10. '=[]' → logprob: -16.03530502319336

Token 479: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2023536115884781
    2. ' =' → logprob: -1.702353596687317
    3. '=[' → logprob: -7.327353477478027
    4. '8' → logprob: -8.327353477478027
    5. 'e' → logprob: -11.202353477478027
    6. 'd' → logprob: -11.702353477478027
    7. ' =[' → logprob: -12.452353477478027
    8. '=[]' → logprob: -12.952353477478027
    9. '=[
' → logprob: -13.202353477478027
    10. '=[[' → logprob: -13.202353477478027

Token 480: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006726026069372892
    2. ' [' → logprob: -5.006725788116455
    3. '[(' → logprob: -12.006726264953613
    4. '[
' → logprob: -12.506726264953613
    5. 'dd' → logprob: -14.506726264953613
    6. '[-' → logprob: -15.381726264953613
    7. ' ' → logprob: -16.506725311279297
    8. '[((' → logprob: -17.381725311279297
    9. '[]' → logprob: -18.006725311279297
    10. ' dd' → logprob: -18.131725311279297

Token 481: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.25
    3. '-' → logprob: -16.0
    4. ' (-' → logprob: -17.25
    5. '[-' → logprob: -20.125
    6. '(x' → logprob: -20.25
    7. '(i' → logprob: -20.75
    8. '(dx' → logprob: -21.25
    9. '   ' → logprob: -21.375
    10. '(+' → logprob: -22.0

Token 482: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '-' → logprob: -19.125
    4. '১' → logprob: -20.5
    5. '१' → logprob: -21.0
    6. ' -' → logprob: -21.0625
    7. '１' → logprob: -21.375
    8. '۱' → logprob: -21.375
    9. '   ' → logprob: -21.5625
    10. ',' → logprob: -21.5625

Token 483: ',' (ID: 11)
  Prédit: ',-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.04859713837504387
    2. ',' → logprob: -3.0485970973968506
    3. ' ,-' → logprob: -12.17359733581543
    4. ' ,' → logprob: -13.29859733581543
    5. '1' → logprob: -13.79859733581543
    6. '-' → logprob: -14.17359733581543
    7. ',-

' → logprob: -14.79859733581543
    8. '0' → logprob: -15.29859733581543
    9. ',-
' → logprob: -15.67359733581543
    10. ',
' → logprob: -16.67359733581543

Token 484: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0016726837493479252
    2. '1' → logprob: -6.876672744750977
    3. '0' → logprob: -7.376672744750977
    4. ' -' → logprob: -11.251672744750977
    5. ' ' → logprob: -13.751672744750977
    6. '(-' → logprob: -17.626672744750977
    7. '−' → logprob: -19.376672744750977
    8. ')' → logprob: -19.501672744750977
    9. '<|end|>' → logprob: -19.876672744750977
    10. '+' → logprob: -19.939172744750977

Token 485: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.005263525992631912
    2. '),(' → logprob: -5.255263328552246
    3. ',' → logprob: -11.630263328552246
    4. '),
' → logprob: -11.880263328552246
    5. ',),' → logprob: -12.130263328552246
    6. ' ),' → logprob: -12.755263328552246
    7. ')' → logprob: -12.755263328552246
    8. '),

' → logprob: -13.005263328552246
    9. '),'' → logprob: -16.380264282226562
    10. '),
' → logprob: -16.380264282226562

Token 486: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -6.511406809295295e-06
    2. '(' → logprob: -12.625006675720215
    3. ' (-' → logprob: -12.750006675720215
    4. '-' → logprob: -15.125006675720215
    5. '[-' → logprob: -22.5000057220459
    6. '(+' → logprob: -22.8750057220459
    7. ' ' → logprob: -23.2500057220459
    8. '{-' → logprob: -23.2500057220459
    9. ' (' → logprob: -23.5000057220459
    10. '0' → logprob: -24.0000057220459

Token 487: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '১' → logprob: -18.4375
    3. '१' → logprob: -18.9375
    4. '۱' → logprob: -19.4375
    5. '１' → logprob: -19.8125
    6. ' ' → logprob: -19.9375
    7. '-' → logprob: -20.0625
    8. '<|end|>' → logprob: -20.0625
    9. '...' → logprob: -20.125
    10. '```' → logprob: -20.4375

Token 488: ',' (ID: 11)
  Prédit: ',-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.0046689994633197784
    2. ',' → logprob: -5.379669189453125
    3. '-' → logprob: -10.004669189453125
    4. '1' → logprob: -13.004669189453125
    5. ',+' → logprob: -14.504669189453125
    6. ' ,-' → logprob: -14.879669189453125
    7. ',-
' → logprob: -16.004669189453125
    8. ',-

' → logprob: -16.004669189453125
    9. ',
' → logprob: -16.254669189453125
    10. ' ,' → logprob: -16.879669189453125

Token 489: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.038043782114982605
    2. '1' → logprob: -3.288043737411499
    3. ' ' → logprob: -13.538043975830078
    4. ' -' → logprob: -14.038043975830078
    5. '[' → logprob: -17.288043975830078
    6. '+' → logprob: -17.913043975830078
    7. '(-' → logprob: -17.913043975830078
    8. '[-' → logprob: -18.163043975830078
    9. '−' → logprob: -18.413043975830078
    10. '(' → logprob: -18.538043975830078

Token 490: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.006736811250448227
    2. '),(' → logprob: -5.006736755371094
    3. '),
' → logprob: -11.006736755371094
    4. ')' → logprob: -13.381736755371094
    5. '),

' → logprob: -13.381736755371094
    6. ',' → logprob: -14.381736755371094
    7. ',),' → logprob: -14.506736755371094
    8. ' ),' → logprob: -14.881736755371094
    9. '),
' → logprob: -16.131736755371094
    10. '),"' → logprob: -16.131736755371094

Token 491: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9266199160483666e-05
    2. '0' → logprob: -11.125019073486328
    3. '(-' → logprob: -12.375019073486328
    4. ' -' → logprob: -15.375019073486328
    5. '(' → logprob: -18.125019073486328
    6. '[-' → logprob: -19.875019073486328
    7. '1' → logprob: -20.250019073486328
    8. ' ' → logprob: -20.375019073486328
    9. '−' → logprob: -20.625019073486328
    10. ',-' → logprob: -21.375019073486328

Token 492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006498866132460535
    2. '1' → logprob: -7.875649929046631
    3. ',-' → logprob: -8.250649452209473
    4. ' ,' → logprob: -11.750649452209473
    5. ',
' → logprob: -14.875649452209473
    6. ',+' → logprob: -15.875649452209473
    7. ' ' → logprob: -16.12565040588379
    8. '-' → logprob: -17.12565040588379
    9. '

' → logprob: -17.31315040588379
    10. '
' → logprob: -17.37565040588379

Token 493: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001093841710826382
    2. '-' → logprob: -9.125109672546387
    3. ' ' → logprob: -14.750109672546387
    4. ' -' → logprob: -17.25010871887207
    5. '```' → logprob: -17.75010871887207
    6. '
' → logprob: -18.75010871887207
    7. '１' → logprob: -19.12510871887207
    8. '+' → logprob: -20.25010871887207
    9. '۱' → logprob: -20.37510871887207
    10. '−' → logprob: -20.87510871887207

Token 494: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.04859475791454315
    2. '),' → logprob: -3.0485947132110596
    3. ' ),' → logprob: -13.42359447479248
    4. '(' → logprob: -13.67359447479248
    5. ',' → logprob: -13.79859447479248
    6. '),
' → logprob: -13.79859447479248
    7. '),

' → logprob: -14.29859447479248
    8. ',(' → logprob: -14.54859447479248
    9. ')' → logprob: -14.67359447479248
    10. '0' → logprob: -15.29859447479248

Token 495: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '-' → logprob: -13.250001907348633
    3. '0' → logprob: -14.750001907348633
    4. ' ' → logprob: -17.500001907348633
    5. '```' → logprob: -20.000001907348633
    6. '+' → logprob: -20.875001907348633
    7. ' -' → logprob: -21.000001907348633
    8. '(' → logprob: -21.500001907348633
    9. '

' → logprob: -21.625001907348633
    10. '１' → logprob: -21.750001907348633

Token 496: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013973800232633948
    2. '1' → logprob: -6.626397609710693
    3. '0' → logprob: -9.626397132873535
    4. ',-' → logprob: -12.376397132873535
    5. ' ,' → logprob: -13.751397132873535
    6. '-' → logprob: -15.876397132873535
    7. ',
' → logprob: -16.25139808654785
    8. '```' → logprob: -17.87639808654785
    9. ' ' → logprob: -18.56389808654785
    10. '،' → logprob: -19.06389808654785

Token 497: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. '0' → logprob: -11.62501049041748
    3. ' ' → logprob: -13.62501049041748
    4. '-' → logprob: -16.625009536743164
    5. '```' → logprob: -19.000009536743164
    6. ')' → logprob: -19.875009536743164
    7. '１' → logprob: -20.000009536743164
    8. '+' → logprob: -20.250009536743164
    9. ' -' → logprob: -20.250009536743164
    10. '۱' → logprob: -20.375009536743164

Token 498: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -2.4987974029500037e-05
    2. '),' → logprob: -10.625024795532227
    3. ',(' → logprob: -15.250024795532227
    4. '(' → logprob: -15.875024795532227
    5. '),
' → logprob: -16.250024795532227
    6. ',' → logprob: -17.500024795532227
    7. '],[' → logprob: -18.000024795532227
    8. ')(' → logprob: -18.250024795532227
    9. '),

' → logprob: -18.500024795532227
    10. ')' → logprob: -18.750024795532227

Token 499: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033546582562848926
    2. '(' → logprob: -8.000335693359375
    3. ' ' → logprob: -17.625335693359375
    4. ' (' → logprob: -18.375335693359375
    5. '```' → logprob: -19.000335693359375
    6. '0' → logprob: -19.750335693359375
    7. '۱' → logprob: -20.750335693359375
    8. '１' → logprob: -21.125335693359375
    9. '১' → logprob: -21.625335693359375
    10. '+' → logprob: -21.750335693359375

Token 500: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018152397125959396
    2. '0' → logprob: -4.018152236938477
    3. ' ,' → logprob: -13.143152236938477
    4. ',-' → logprob: -15.393152236938477
    5. ',
' → logprob: -16.268152236938477
    6. '1' → logprob: -16.393152236938477
    7. '```' → logprob: -17.393152236938477
    8. ')' → logprob: -17.830652236938477
    9. ' ' → logprob: -17.893152236938477
    10. '-' → logprob: -18.393152236938477

Token 501: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '۰' → logprob: -19.25
    4. '-' → logprob: -20.0
    5. '1' → logprob: -20.125
    6. '```' → logprob: -21.125
    7. ')' → logprob: -22.1875
    8. '<|end|>' → logprob: -22.5
    9. '０' → logprob: -22.6875
    10. '০' → logprob: -22.6875

Token 502: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -5.931863051955588e-05
    2. '),' → logprob: -9.750059127807617
    3. ',(' → logprob: -14.375059127807617
    4. ',' → logprob: -15.375059127807617
    5. '(' → logprob: -16.500059127807617
    6. ' ),' → logprob: -18.000059127807617
    7. ')' → logprob: -18.000059127807617
    8. '),
' → logprob: -18.375059127807617
    9. '],[' → logprob: -18.625059127807617
    10. ')(' → logprob: -19.625059127807617

Token 503: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2471589798224159e-05
    2. '0' → logprob: -11.375012397766113
    3. '(' → logprob: -14.250012397766113
    4. ' ' → logprob: -15.125012397766113
    5. '-' → logprob: -17.50001335144043
    6. '```' → logprob: -18.50001335144043
    7. '۱' → logprob: -21.12501335144043
    8. ',' → logprob: -21.50001335144043
    9. ' (' → logprob: -21.75001335144043
    10. '১' → logprob: -21.87501335144043

Token 504: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10021670162677765
    2. ',-' → logprob: -2.3502166271209717
    3. '1' → logprob: -11.60021686553955
    4. '-' → logprob: -14.22521686553955
    5. ',(' → logprob: -16.725215911865234
    6. ',
' → logprob: -16.975215911865234
    7. ',-
' → logprob: -17.100215911865234
    8. ' ,' → logprob: -17.225215911865234
    9. ',-

' → logprob: -17.725215911865234
    10. ' ,-' → logprob: -17.975215911865234

Token 505: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '0' → logprob: -17.125
    4. '-' → logprob: -17.25
    5. '```' → logprob: -18.125
    6. ',' → logprob: -19.6875
    7. '
' → logprob: -20.5625
    8. '１' → logprob: -20.5625
    9. '۱' → logprob: -20.8125
    10. ')' → logprob: -20.9375

Token 506: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -9.662937372922897e-05
    2. '),' → logprob: -9.250096321105957
    3. ',(' → logprob: -15.875096321105957
    4. ')' → logprob: -15.875096321105957
    5. ',' → logprob: -16.250097274780273
    6. '(' → logprob: -17.500097274780273
    7. '],[' → logprob: -17.625097274780273
    8. '),
' → logprob: -18.000097274780273
    9. ' ),' → logprob: -18.375097274780273
    10. ')(' → logprob: -18.875097274780273

Token 507: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018150296062231064
    2. '(' → logprob: -4.018150329589844
    3. ' (' → logprob: -15.268150329589844
    4. ' ' → logprob: -16.018150329589844
    5. '1' → logprob: -17.018150329589844
    6. '(-' → logprob: -17.268150329589844
    7. '۰' → logprob: -19.018150329589844
    8. '-' → logprob: -19.893150329589844
    9. '```' → logprob: -19.893150329589844
    10. ',' → logprob: -20.393150329589844

Token 508: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.062042634934186935
    2. '-' → logprob: -2.812042713165283
    3. ',' → logprob: -9.562042236328125
    4. '1' → logprob: -12.437042236328125
    5. '```' → logprob: -15.812042236328125
    6. ',-
' → logprob: -16.187042236328125
    7. ',-

' → logprob: -16.437042236328125
    8. '",-' → logprob: -16.687042236328125
    9. ' -' → logprob: -16.812042236328125
    10. '{-' → logprob: -17.062042236328125

Token 509: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10020710527896881
    2. '-' → logprob: -2.3502070903778076
    3. ' -' → logprob: -15.600207328796387
    4. '```' → logprob: -15.600207328796387
    5. '
' → logprob: -18.85020637512207
    6. '-
' → logprob: -19.47520637512207
    7. '−' → logprob: -19.47520637512207
    8. ' ' → logprob: -19.47520637512207
    9. '\-' → logprob: -19.60020637512207
    10. '{-' → logprob: -19.60020637512207

Token 510: '),' (ID: 936)
  Prédit: '),('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.07891292124986649
    2. '),' → logprob: -2.5789129734039307
    3. ')]' → logprob: -11.203912734985352
    4. ')' → logprob: -12.328912734985352
    5. ',' → logprob: -12.828912734985352
    6. ' ),' → logprob: -13.953912734985352
    7. ',(' → logprob: -13.953912734985352
    8. '),
' → logprob: -15.953912734985352
    9. ')],' → logprob: -16.07891273498535
    10. '],[' → logprob: -16.20391273498535

Token 511: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.250000953674316
    3. '-' → logprob: -14.625000953674316
    4. ' (-' → logprob: -17.250001907348633
    5. '[-' → logprob: -20.625001907348633
    6. ')' → logprob: -20.750001907348633
    7. '   ' → logprob: -21.375001907348633
    8. '{-' → logprob: -21.750001907348633
    9. '(
' → logprob: -22.625001907348633
    10. '	' → logprob: -22.625001907348633

Token 512: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.3125
    3. '0' → logprob: -17.3125
    4. '```' → logprob: -17.5625
    5. '
' → logprob: -17.75
    6. '-' → logprob: -18.125
    7. '2' → logprob: -18.8125
    8. '۱' → logprob: -19.25
    9. '１' → logprob: -19.3125
    10. '

' → logprob: -19.5625

Token 513: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02472916804254055
    2. ',-' → logprob: -3.7747292518615723
    3. '0' → logprob: -6.524729251861572
    4. '1' → logprob: -11.524728775024414
    5. '-' → logprob: -12.649728775024414
    6. ',
' → logprob: -13.899728775024414
    7. ',-
' → logprob: -14.274728775024414
    8. ' ,' → logprob: -14.399728775024414
    9. ' ,-' → logprob: -15.649728775024414
    10. ',-

' → logprob: -15.649728775024414

Token 514: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -16.5
    3. ')' → logprob: -17.125
    4. ' ' → logprob: -18.375
    5. '-' → logprob: -19.375
    6. '```' → logprob: -19.75
    7. '2' → logprob: -20.625
    8. '])' → logprob: -21.0
    9. '})' → logprob: -21.125
    10. ']])' → logprob: -21.625

Token 515: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00894863624125719
    2. ']' → logprob: -4.758948802947998
    3. ')' → logprob: -8.00894832611084
    4. '])' → logprob: -14.38394832611084
    5. '),' → logprob: -15.00894832611084
    6. '])]' → logprob: -15.00894832611084
    7. ')],' → logprob: -16.258949279785156
    8. ']]' → logprob: -16.508949279785156
    9. '}]' → logprob: -16.633949279785156
    10. '],' → logprob: -17.008949279785156

Token 516: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.021624155342578888
    2. 'class' → logprob: -4.3966240882873535
    3. '#' → logprob: -4.7716240882873535
    4. '\n' → logprob: -8.896624565124512
    5. 'n' → logprob: -9.271624565124512
    6. '\' → logprob: -9.396624565124512
    7. 'd' → logprob: -9.646624565124512
    8. '
' → logprob: -9.896624565124512
    9. '

' → logprob: -10.271624565124512
    10. 'from' → logprob: -10.646624565124512

Token 517: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005931860650889575
    2. 'class' → logprob: -8.250593185424805
    3. '#' → logprob: -8.375593185424805
    4. 'from' → logprob: -9.250593185424805
    5. 'import' → logprob: -12.500593185424805
    6. '
' → logprob: -14.875593185424805
    7. ' def' → logprob: -15.625593185424805
    8. 'd' → logprob: -15.625593185424805
    9. '
' → logprob: -16.000593185424805
    10. 'de' → logprob: -16.125593185424805

Token 518: ' qui' (ID: 2780)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2857934832572937
    2. 'def' → logprob: -1.4107935428619385
    3. ' de' → logprob: -6.035793304443359
    4. ' ' → logprob: -6.785793304443359
    5. ' d' → logprob: -7.035793304443359
    6. 'd' → logprob: -10.03579330444336
    7. '
' → logprob: -10.03579330444336
    8. ' 
' → logprob: -10.78579330444336
    9. ' ' → logprob: -10.91079330444336
    10. 'de' → logprob: -10.91079330444336

Token 519: ' lit' (ID: 11980)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.055023327469825745
    2. 'calc' → logprob: -4.055023193359375
    3. ' vér' → logprob: -4.680023193359375
    4. 'def' → logprob: -4.930023193359375
    5. 'cal' → logprob: -5.430023193359375
    6. ' permet' → logprob: -5.680023193359375
    7. ' prend' → logprob: -6.180023193359375
    8. ' retourne' → logprob: -6.180023193359375
    9. 'calcul' → logprob: -6.305023193359375
    10. ' calcul' → logprob: -6.430023193359375

Token 520: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0015755676431581378
    2. '():' → logprob: -7.001575469970703
    3. 'l' → logprob: -8.876575469970703
    4. ' ()' → logprob: -9.001575469970703
    5. 'la' → logprob: -10.126575469970703
    6. '_' → logprob: -10.251575469970703
    7. 'line' → logprob: -10.501575469970703
    8. '_input' → logprob: -10.501575469970703
    9. '()
' → logprob: -10.626575469970703
    10. '_l' → logprob: -10.751575469970703

Token 521: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.4536439776420593
    2. 'l' → logprob: -1.828644037246704
    3. 'entrée' → logprob: -2.578644037246704
    4. ' ligne' → logprob: -2.703644037246704
    5. 'chaine' → logprob: -3.828644037246704
    6. 'line' → logprob: -4.453643798828125
    7. 'string' → logprob: -5.078643798828125
    8. 'input' → logprob: -5.078643798828125
    9. 'int' → logprob: -6.078643798828125
    10. '()' → logprob: -6.328643798828125

Token 522: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.019474003463983536
    2. '()
' → logprob: -4.394474029541016
    3. 'def' → logprob: -5.144474029541016
    4. ' =' → logprob: -7.769474029541016
    5. '=' → logprob: -8.894474029541016
    6. '()

' → logprob: -9.394474029541016
    7. '()\' → logprob: -9.394474029541016
    8. '():' → logprob: -9.519474029541016
    9. '():
' → logprob: -9.894474029541016
    10. '_' → logprob: -10.144474029541016

Token 523: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.2642160654067993
    2. 'stdin' → logprob: -1.3892160654067993
    3. 'input' → logprob: -1.5142160654067993
    4. ' stdin' → logprob: -1.8892160654067993
    5. ' l' → logprob: -3.3892159461975098
    6. 'sys' → logprob: -3.7642159461975098
    7. ' sys' → logprob: -3.7642159461975098
    8. 'l' → logprob: -4.38921594619751
    9. ' la' → logprob: -6.01421594619751
    10. ' standard' → logprob: -7.26421594619751

Token 524: ''entrée' (ID: 115820)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.15032130479812622
    2. 'input' → logprob: -2.2753212451934814
    3. 'sys' → logprob: -3.4003212451934814
    4. ' stdin' → logprob: -6.5253214836120605
    5. 'standard' → logprob: -7.7753214836120605
    6. 'a' → logprob: -8.025321006774902
    7. ' input' → logprob: -8.275321006774902
    8. '(stdin' → logprob: -8.400321006774902
    9. '=sys' → logprob: -8.775321006774902
    10. 'e' → logprob: -9.025321006774902

Token 525: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02898278646171093
    2. 'def' → logprob: -4.278982639312744
    3. ' =' → logprob: -5.278982639312744
    4. '()
' → logprob: -5.403982639312744
    5. '=' → logprob: -5.903982639312744
    6. '_' → logprob: -7.028982639312744
    7. 'input' → logprob: -8.028983116149902
    8. '_line' → logprob: -8.403983116149902
    9. '=input' → logprob: -8.528983116149902
    10. 's' → logprob: -8.778983116149902

Token 526: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03635963425040245
    2. '()' → logprob: -4.286359786987305
    3. 'input' → logprob: -4.911359786987305
    4. ':' → logprob: -5.411359786987305
    5. ' =' → logprob: -6.036359786987305
    6. '
' → logprob: -6.036359786987305
    7. '_input' → logprob: -6.411359786987305
    8. '_' → logprob: -7.036359786987305
    9. '()
' → logprob: -7.286359786987305
    10. '(input' → logprob: -7.786359786987305

Token 527: ' coupe' (ID: 71780)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.22018073499202728
    2. 'def' → logprob: -1.7201807498931885
    3. 'input' → logprob: -4.720180511474609
    4. 'rstrip' → logprob: -5.720180511474609
    5. 'split' → logprob: -6.345180511474609
    6. 'decode' → logprob: -6.595180511474609
    7. 'lambda' → logprob: -7.595180511474609
    8. ' strip' → logprob: -7.595180511474609
    9. 'int' → logprob: -8.22018051147461
    10. 'stdin' → logprob: -8.22018051147461

Token 528: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006396668963134289
    2. '().' → logprob: -5.631396770477295
    3. 'le' → logprob: -6.381396770477295
    4. 'la' → logprob: -8.256396293640137
    5. '()
' → logprob: -8.756396293640137
    6. 's' → logprob: -9.131396293640137
    7. '=' → logprob: -9.381396293640137
    8. '_' → logprob: -9.756396293640137
    9. '()\' → logprob: -9.756396293640137
    10. 'l' → logprob: -10.006396293640137

Token 529: ' chaîne' (ID: 89288)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.7836539149284363
    2. 'chaine' → logprob: -0.9086539149284363
    3. 'cha' → logprob: -2.783653974533081
    4. ' chaîne' → logprob: -3.658653974533081
    5. 'string' → logprob: -3.783653974533081
    6. 'l' → logprob: -4.533653736114502
    7. ' ligne' → logprob: -5.158653736114502
    8. 'fin' → logprob: -5.533653736114502
    9. '\n' → logprob: -6.658653736114502
    10. ''\' → logprob: -6.908653736114502

Token 530: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3504060506820679
    2. '()' → logprob: -1.3504060506820679
    3. '=' → logprob: -1.8504060506820679
    4. '().' → logprob: -2.1004061698913574
    5. '=input' → logprob: -2.3504061698913574
    6. '.strip' → logprob: -3.6004061698913574
    7. '()\' → logprob: -3.7254061698913574
    8. 'input' → logprob: -3.8504061698913574
    9. 's' → logprob: -4.850406169891357
    10. 'de' → logprob: -5.225406169891357

Token 531: ' morceaux' (ID: 133321)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.12063673138618469
    2. 'm' → logprob: -2.2456367015838623
    3. ' tokens' → logprob: -5.370636940002441
    4. 'token' → logprob: -7.370636940002441
    5. 'liste' → logprob: -7.370636940002441
    6. ' mots' → logprob: -7.495636940002441
    7. ' morceaux' → logprob: -7.870636940002441
    8. 'mot' → logprob: -8.120636940002441
    9. '```' → logprob: -8.745636940002441
    10. 'parts' → logprob: -9.370636940002441

Token 532: ' par' (ID: 686)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.932158350944519
    2. 'input' → logprob: -1.932158350944519
    3. '=' → logprob: -2.0571584701538086
    4. ',' → logprob: -2.0571584701538086
    5. '()' → logprob: -2.4321584701538086
    6. 'par' → logprob: -3.6821584701538086
    7. '=input' → logprob: -3.6821584701538086
    8. 'split' → logprob: -3.8071584701538086
    9. 'def' → logprob: -4.807158470153809
    10. 'tokens' → logprob: -5.057158470153809

Token 533: ' espace' (ID: 66004)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -1.0291948318481445
    2. 'esp' → logprob: -1.9041948318481445
    3. ' espace' → logprob: -2.1541948318481445
    4. 'def' → logprob: -2.1541948318481445
    5. 'split' → logprob: -2.5291948318481445
    6. 'space' → logprob: -2.7791948318481445
    7. 'spaces' → logprob: -3.4041948318481445
    8. 'default' → logprob: -3.9041948318481445
    9. ' défaut' → logprob: -4.6541948318481445
    10. ' def' → logprob: -4.7791948318481445

Token 534: ',
' (ID: 412)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6829968094825745
    2. '=' → logprob: -1.8079967498779297
    3. '()' → logprob: -2.1829967498779297
    4. ',' → logprob: -2.5579967498779297
    5. 'def' → logprob: -2.8079967498779297
    6. '_' → logprob: -3.3079967498779297
    7. '_input' → logprob: -4.55799674987793
    8. 'input' → logprob: -4.55799674987793
    9. ')' → logprob: -5.68299674987793
    10. '(' → logprob: -5.68299674987793

Token 535: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005865143029950559
    2. ' def' → logprob: -8.50058650970459
    3. '#' → logprob: -9.12558650970459
    4. 'd' → logprob: -9.75058650970459
    5. 'input' → logprob: -10.12558650970459
    6. 'lambda' → logprob: -10.62558650970459
    7. ' =' → logprob: -10.87558650970459
    8. 'et' → logprob: -11.00058650970459
    9. ' and' → logprob: -11.37558650970459
    10. '=' → logprob: -11.62558650970459

Token 536: ' transforme' (ID: 184109)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004403294064104557
    2. ' def' → logprob: -7.254403114318848
    3. 'strip' → logprob: -7.254403114318848
    4. 'input' → logprob: -7.254403114318848
    5. 'split' → logprob: -7.254403114318848
    6. '#' → logprob: -7.754403114318848
    7. 'map' → logprob: -8.629403114318848
    8. 'et' → logprob: -8.754403114318848
    9. 'lambda' → logprob: -8.754403114318848
    10. 'tokens' → logprob: -9.629403114318848

Token 537: ' chaque' (ID: 21194)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6072562336921692
    2. 'int' → logprob: -1.3572561740875244
    3. 'str' → logprob: -2.8572561740875244
    4. 'la' → logprob: -3.3572561740875244
    5. '()' → logprob: -3.4822561740875244
    6. '(int' → logprob: -3.7322561740875244
    7. ' lambda' → logprob: -3.8572561740875244
    8. '(lambda' → logprob: -4.2322564125061035
    9. 'l' → logprob: -5.3572564125061035
    10. ' la' → logprob: -6.2322564125061035

Token 538: ' morceau' (ID: 160026)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.6918395757675171
    2. ' morceau' → logprob: -1.441839575767517
    3. 'token' → logprob: -2.1918396949768066
    4. 'element' → logprob: -3.3168396949768066
    5. ' token' → logprob: -3.6918396949768066
    6. 'int' → logprob: -3.6918396949768066
    7. ' élément' → logprob: -3.6918396949768066
    8. 'm' → logprob: -4.691839694976807
    9. 'mot' → logprob: -5.441839694976807
    10. 'piece' → logprob: -5.691839694976807

Token 539: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.206582173705101
    2. 'en' → logprob: -1.9565821886062622
    3. '()' → logprob: -3.9565820693969727
    4. 's' → logprob: -4.456582069396973
    5. ',' → logprob: -5.831582069396973
    6. ' par' → logprob: -5.956582069396973
    7. ')' → logprob: -6.081582069396973
    8. '_' → logprob: -6.706582069396973
    9. '=' → logprob: -7.081582069396973
    10. '_en' → logprob: -7.081582069396973

Token 540: ' un' (ID: 537)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.009538967162370682
    2. 'ent' → logprob: -4.7595391273498535
    3. ' int' → logprob: -7.1345391273498535
    4. ' entier' → logprob: -9.384538650512695
    5. 'un' → logprob: -10.509538650512695
    6. 'integer' → logprob: -11.759538650512695
    7. 'float' → logprob: -13.009538650512695
    8. ' un' → logprob: -13.384538650512695
    9. ' ent' → logprob: -13.884538650512695
    10. 'une' → logprob: -14.259538650512695

Token 541: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12709860503673553
    2. 'ent' → logprob: -2.127098560333252
    3. ' entier' → logprob: -9.00209903717041
    4. 'nombre' → logprob: -10.87709903717041
    5. 'integer' → logprob: -11.12709903717041
    6. ' int' → logprob: -12.37709903717041
    7. '=int' → logprob: -12.62709903717041
    8. 'inte' → logprob: -13.12709903717041
    9. '_ent' → logprob: -13.87709903717041
    10. 'entrée' → logprob: -14.25209903717041

Token 542: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43844830989837646
    2. ',' → logprob: -1.1884483098983765
    3. 's' → logprob: -4.313448429107666
    4. ' =' → logprob: -4.438448429107666
    5. 'map' → logprob: -5.063448429107666
    6. '=' → logprob: -5.188448429107666
    7. 'input' → logprob: -5.188448429107666
    8. ':' → logprob: -6.313448429107666
    9. 'n' → logprob: -7.188448429107666
    10. 'et' → logprob: -7.188448429107666

Token 543: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.021196627989411354
    2. ' def' → logprob: -3.8961966037750244
    3. '
' → logprob: -8.771196365356445
    4. ' puis' → logprob: -9.146196365356445
    5. 'lambda' → logprob: -9.271196365356445
    6. ' 
' → logprob: -9.271196365356445
    7. ' and' → logprob: -9.396196365356445
    8. 'et' → logprob: -11.021196365356445
    9. ' lambda' → logprob: -11.021196365356445
    10. 'and' → logprob: -11.396196365356445

Token 544: ' construit' (ID: 119882)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9431990385055542
    2. ' retourne' → logprob: -1.1931990385055542
    3. 'ren' → logprob: -2.1931991577148438
    4. 'ret' → logprob: -2.6931991577148438
    5. ' les' → logprob: -2.8181991577148438
    6. ' return' → logprob: -4.068199157714844
    7. ' ren' → logprob: -4.193199157714844
    8. 'def' → logprob: -4.568199157714844
    9. 'les' → logprob: -4.943199157714844
    10. ' stock' → logprob: -5.193199157714844

Token 545: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1960467100143433
    2. '[]' → logprob: -1.4460467100143433
    3. 'list' → logprob: -2.321046829223633
    4. 'a' → logprob: -2.321046829223633
    5. ' a' → logprob: -2.571046829223633
    6. 'lambda' → logprob: -2.821046829223633
    7. ' lambda' → logprob: -3.446046829223633
    8. ' une' → logprob: -3.821046829223633
    9. '[' → logprob: -3.946046829223633
    10. 'la' → logprob: -4.571046829223633

Token 546: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3893291652202606
    2. 'liste' → logprob: -1.139329195022583
    3. ' liste' → logprob: -6.639328956604004
    4. ' list' → logprob: -7.014328956604004
    5. '_list' → logprob: -9.264328956604004
    6. 'def' → logprob: -10.014328956604004
    7. 'tuple' → logprob: -10.764328956604004
    8. 'l' → logprob: -11.264328956604004
    9. 'lst' → logprob: -11.264328956604004
    10. 'lista' → logprob: -11.514328956604004

Token 547: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19063115119934082
    2. '()' → logprob: -2.565631151199341
    3. ' =' → logprob: -3.315631151199341
    4. '(
' → logprob: -3.565631151199341
    5. '(' → logprob: -4.940630912780762
    6. '_' → logprob: -5.065630912780762
    7. '=' → logprob: -5.565630912780762
    8. 'lambda' → logprob: -5.565630912780762
    9. '(lambda' → logprob: -6.065630912780762
    10. '()
' → logprob: -6.440630912780762

Token 548: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.2961512513575144e-05
    2. '
' → logprob: -11.000022888183594
    3. 'd' → logprob: -12.625022888183594
    4. 'input' → logprob: -13.250022888183594
    5. '```' → logprob: -14.375022888183594
    6. ' def' → logprob: -15.625022888183594
    7. '\' → logprob: -15.750022888183594
    8. ' 
' → logprob: -16.250022888183594
    9. 'de' → logprob: -16.250022888183594
    10. 'read' → logprob: -16.750022888183594

Token 549: ' LI' (ID: 14875)
  Prédit: 'ints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ints' → logprob: -1.3381818532943726
    2. 'read' → logprob: -1.7131818532943726
    3. 'input' → logprob: -1.9631818532943726
    4. 'inp' → logprob: -2.213181972503662
    5. ' read' → logprob: -2.713181972503662
    6. 'in' → logprob: -3.213181972503662
    7. 'I' → logprob: -3.338181972503662
    8. ' input' → logprob: -3.588181972503662
    9. 'LI' → logprob: -3.713181972503662
    10. 'l' → logprob: -3.838181972503662

Token 550: '():
' (ID: 8595)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' → logprob: -0.7719773650169373
    2. 'st' → logprob: -1.271977424621582
    3. '():' → logprob: -1.396977424621582
    4. '()' → logprob: -6.021977424621582
    5. 'N' → logprob: -6.271977424621582
    6. 'n' → logprob: -6.396977424621582
    7. 'T' → logprob: -6.646977424621582
    8. 'ne' → logprob: -6.646977424621582
    9. 'St' → logprob: -7.021977424621582
    10. '():
' → logprob: -9.146977424621582

Token 551: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.052605994045734406
    2. ' return' → logprob: -3.0526061058044434
    3. '   ' → logprob: -5.552606105804443
    4. ':return' → logprob: -9.802605628967285
    5. '	return' → logprob: -10.052605628967285
    6. 'eturn' → logprob: -10.927605628967285
    7. ' ' → logprob: -11.677605628967285
    8. ':' → logprob: -12.302605628967285
    9. ' list' → logprob: -14.052605628967285
    10. 'list' → logprob: -14.427605628967285

Token 552: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -7.73183855926618e-05
    2. ' return' → logprob: -9.500077247619629
    3. 'list' → logprob: -13.750077247619629
    4. '   ' → logprob: -13.750077247619629
    5. 'ret' → logprob: -15.750077247619629
    6. 'r' → logprob: -16.750078201293945
    7. '	return' → logprob: -17.125078201293945
    8. 're' → logprob: -19.125078201293945
    9. 'map' → logprob: -19.125078201293945
    10. ' ' → logprob: -20.000078201293945

Token 553: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0009199160267598927
    2. ' list' → logprob: -7.000919818878174
    3. '[list' → logprob: -11.750920295715332
    4. 'map' → logprob: -14.875920295715332
    5. '[' → logprob: -15.750920295715332
    6. '	list' → logprob: -17.000919342041016
    7. '(list' → logprob: -19.000919342041016
    8. '=list' → logprob: -19.375919342041016
    9. '[*' → logprob: -20.500919342041016
    10. ':list' → logprob: -21.375919342041016

Token 554: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0007104054093360901
    2. '(' → logprob: -7.250710487365723
    3. 'map' → logprob: -15.500710487365723
    4. '(
' → logprob: -16.000709533691406
    5. ' map' → logprob: -17.250709533691406
    6. '(int' → logprob: -17.250709533691406
    7. '	map' → logprob: -17.375709533691406
    8. '(m' → logprob: -18.250709533691406
    9. '(

' → logprob: -18.375709533691406
    10. ' (' → logprob: -18.500709533691406

Token 555: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0052377874962985516
    2. 'int' → logprob: -5.255237579345703
    3. '(' → logprob: -13.255237579345703
    4. ' int' → logprob: -14.005237579345703
    5. ',int' → logprob: -14.755237579345703
    6. '=int' → logprob: -14.755237579345703
    7. '<int' → logprob: -15.255237579345703
    8. '[int' → logprob: -15.505237579345703
    9. ']int' → logprob: -16.255237579345703
    10. '	int' → logprob: -16.380237579345703

Token 556: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16027569770812988
    2. ',input' → logprob: -1.9102756977081299
    3. 'input' → logprob: -10.16027545928955
    4. 'sys' → logprob: -12.03527545928955
    5. '(sys' → logprob: -12.78527545928955
    6. ' ,' → logprob: -13.16027545928955
    7. '(input' → logprob: -14.41027545928955
    8. '   ' → logprob: -15.16027545928955
    9. ',System' → logprob: -15.66027545928955
    10. ' input' → logprob: -16.035276412963867

Token 557: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06538607180118561
    2. 'sys' → logprob: -2.8153860569000244
    3. ' input' → logprob: -5.8153862953186035
    4. ' sys' → logprob: -7.8153862953186035
    5. 'stdin' → logprob: -10.565385818481445
    6. '   ' → logprob: -14.315385818481445
    7. '(sys' → logprob: -14.815385818481445
    8. '=sys' → logprob: -15.690385818481445
    9. '(input' → logprob: -15.815385818481445
    10. ',input' → logprob: -15.815385818481445

Token 558: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.3782830137643032e-05
    2. '.' → logprob: -11.50001335144043
    3. '.stdout' → logprob: -13.62501335144043
    4. '.std' → logprob: -13.75001335144043
    5. '.argv' → logprob: -14.12501335144043
    6. '.readline' → logprob: -14.62501335144043
    7. '.st' → logprob: -16.12501335144043
    8. 'stdin' → logprob: -16.87501335144043
    9. '.input' → logprob: -17.12501335144043
    10. ' stdin' → logprob: -18.62501335144043

Token 559: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.047134305234067e-05
    2. '.read' → logprob: -10.750030517578125
    3. '.' → logprob: -11.750030517578125
    4. '.stdin' → logprob: -14.250030517578125
    5. '.readlines' → logprob: -15.125030517578125
    6. ' .' → logprob: -17.125030517578125
    7. ').' → logprob: -18.125030517578125
    8. '.buffer' → logprob: -18.500030517578125
    9. ' readline' → logprob: -19.125030517578125
    10. '().' → logprob: -19.250030517578125

Token 560: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.896309739408025e-07
    2. '()' → logprob: -14.250000953674316
    3. ' ().' → logprob: -16.375
    4. '(' → logprob: -18.75
    5. '()))' → logprob: -20.125
    6. '.strip' → logprob: -21.375
    7. '())))' → logprob: -21.375
    8. '().__' → logprob: -22.625
    9. '.readline' → logprob: -23.0
    10. '.' → logprob: -23.0

Token 561: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.030189864337444305
    2. 'rstrip' → logprob: -3.5301897525787354
    3. 'split' → logprob: -7.7801899909973145
    4. 'read' → logprob: -11.030189514160156
    5. ' strip' → logprob: -12.655189514160156
    6. 'decode' → logprob: -13.155189514160156
    7. 'rs' → logprob: -17.405189514160156
    8. ')' → logprob: -17.780189514160156
    9. '(strip' → logprob: -18.030189514160156
    10. 'replace' → logprob: -18.280189514160156

Token 562: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.019137246534228325
    2. '()' → logprob: -4.019137382507324
    3. '))' → logprob: -7.519137382507324
    4. '())' → logprob: -8.394137382507324
    5. '())))' → logprob: -9.144137382507324
    6. '()))
' → logprob: -9.519137382507324
    7. '(' → logprob: -10.644137382507324
    8. '()));' → logprob: -11.769137382507324
    9. '()))

' → logprob: -13.769137382507324
    10. ')))' → logprob: -13.894137382507324

Token 563: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05256946384906769
    2. '#' → logprob: -3.3025693893432617
    3. '
' → logprob: -4.302569389343262
    4. '  
' → logprob: -8.427569389343262
    5. ' 
' → logprob: -8.802569389343262
    6. '\n' → logprob: -8.927569389343262
    7. '<|end|>' → logprob: -9.052569389343262
    8. '    
' → logprob: -9.552569389343262
    9. '' → logprob: -10.052569389343262
    10. 'newline' → logprob: -10.302569389343262

Token 564: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00982444453984499
    2. '#' → logprob: -4.634824275970459
    3. 'n' → logprob: -10.884824752807617
    4. 'N' → logprob: -11.009824752807617
    5. 'class' → logprob: -11.009824752807617
    6. 'D' → logprob: -12.009824752807617
    7. 'd' → logprob: -12.384824752807617
    8. 'L' → logprob: -13.509824752807617
    9. ' def' → logprob: -14.134824752807617
    10. 'import' → logprob: -14.259824752807617

Token 565: ' qui' (ID: 2780)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18234072625637054
    2. '()' → logprob: -1.8073407411575317
    3. '(' → logprob: -7.432340621948242
    4. '():' → logprob: -7.932340621948242
    5. ' def' → logprob: -8.057340621948242
    6. '[]' → logprob: -8.557340621948242
    7. '()
' → logprob: -8.807340621948242
    8. 'D' → logprob: -8.807340621948242
    9. '#' → logprob: -8.932340621948242
    10. '():
' → logprob: -9.182340621948242

Token 566: ' lit' (ID: 11980)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.11800731718540192
    2. 'LS' → logprob: -2.9930074214935303
    3. 'S' → logprob: -3.4930074214935303
    4. 'IS' → logprob: -3.9930074214935303
    5. 'II' → logprob: -4.743007183074951
    6. 'SI' → logprob: -6.993007183074951
    7. 'L' → logprob: -7.368007183074951
    8. 'print' → logprob: -7.993007183074951
    9. 'int' → logprob: -7.993007183074951
    10. 'l' → logprob: -8.11800765991211

Token 567: ' chaque' (ID: 21194)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.038418058305978775
    2. ' une' → logprob: -4.288418292999268
    3. 'a' → logprob: -4.413418292999268
    4. 'une' → logprob: -5.038418292999268
    5. 'int' → logprob: -5.913418292999268
    6. 'la' → logprob: -7.663418292999268
    7. ' a' → logprob: -7.913418292999268
    8. 'un' → logprob: -7.913418292999268
    9. '():' → logprob: -7.913418292999268
    10. ' un' → logprob: -8.66341781616211

Token 568: ' ligne' (ID: 19583)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15834617614746094
    2. 'token' → logprob: -2.783346176147461
    3. 'int' → logprob: -3.533346176147461
    4. 'line' → logprob: -3.658346176147461
    5. '<|end|>' → logprob: -4.408346176147461
    6. 'def' → logprob: -5.908346176147461
    7. 'char' → logprob: -6.033346176147461
    8. ')' → logprob: -6.658346176147461
    9. '<|end|>' → logprob: -6.783346176147461
    10. '()<' → logprob: -7.283346176147461

Token 569: ' restante' (ID: 130202)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12391754239797592
    2. 'def' → logprob: -2.248917579650879
    3. '():' → logprob: -4.623917579650879
    4. '().' → logprob: -7.498917579650879
    5. '():
' → logprob: -8.123917579650879
    6. '()
' → logprob: -9.248917579650879
    7. '(),' → logprob: -10.248917579650879
    8. ',' → logprob: -10.373917579650879
    9. 'import' → logprob: -10.623917579650879
    10. 'de' → logprob: -10.748917579650879

Token 570: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4464612305164337
    2. '():' → logprob: -1.6964612007141113
    3. 'def' → logprob: -1.8214612007141113
    4. 'de' → logprob: -5.071461200714111
    5. ':' → logprob: -5.821461200714111
    6. ',' → logprob: -5.946461200714111
    7. '():
' → logprob: -7.571461200714111
    8. '().' → logprob: -8.07146167755127
    9. ' de' → logprob: -8.07146167755127
    10. 'du' → logprob: -8.19646167755127

Token 571: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0756530910730362
    2. 'l' → logprob: -2.700653076171875
    3. '=sys' → logprob: -6.325653076171875
    4. ' sys' → logprob: -6.575653076171875
    5. 'input' → logprob: -6.700653076171875
    6. 'code' → logprob: -7.700653076171875
    7. 'la' → logprob: -7.700653076171875
    8. '(sys' → logprob: -9.200653076171875
    9. 'stdin' → logprob: -9.200653076171875
    10. ' l' → logprob: -10.075653076171875

Token 572: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.13117963075637817
    2. 'entrée' → logprob: -2.6311795711517334
    3. 'input' → logprob: -3.6311795711517334
    4. 'stdin' → logprob: -4.3811798095703125
    5. 'a' → logprob: -4.8811798095703125
    6. 'sys' → logprob: -6.2561798095703125
    7. 'import' → logprob: -6.8811798095703125
    8. 'e' → logprob: -7.8811798095703125
    9. '#' → logprob: -8.131179809570312
    10. '’entrée' → logprob: -8.881179809570312

Token 573: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.099332571029663
    2. 'standard' → logprob: -1.099332571029663
    3. 'def' → logprob: -1.474332571029663
    4. ' standard' → logprob: -2.724332571029663
    5. '_standard' → logprob: -4.349332809448242
    6. '=sys' → logprob: -4.974332809448242
    7. '_std' → logprob: -5.349332809448242
    8. 'sys' → logprob: -5.599332809448242
    9. '(stdin' → logprob: -5.974332809448242
    10. '().' → logprob: -6.349332809448242

Token 574: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01271152961999178
    2. '()' → logprob: -4.512711524963379
    3. '():' → logprob: -6.762711524963379
    4. ',' → logprob: -8.887711524963379
    5. ':' → logprob: -8.887711524963379
    6. ' def' → logprob: -9.512711524963379
    7. '():
' → logprob: -10.012711524963379
    8. '()
' → logprob: -10.262711524963379
    9. '   ' → logprob: -10.262711524963379
    10. ')' → logprob: -11.012711524963379

Token 575: ' coupe' (ID: 71780)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001057102927006781
    2. 'return' → logprob: -7.376057147979736
    3. ' def' → logprob: -8.126056671142578
    4. ' return' → logprob: -10.876056671142578
    5. 'split' → logprob: -10.876056671142578
    6. '   ' → logprob: -11.001056671142578
    7. 'returns' → logprob: -11.251056671142578
    8. 's' → logprob: -11.751056671142578
    9. '#' → logprob: -11.876056671142578
    10. 'spl' → logprob: -12.251056671142578

Token 576: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.13878777623176575
    2. '()' → logprob: -2.7637877464294434
    3. 'la' → logprob: -3.1387877464294434
    4. ' chaque' → logprob: -4.263787746429443
    5. '<|end|>' → logprob: -5.138787746429443
    6. ' les' → logprob: -7.138787746429443
    7. ' ' → logprob: -8.013788223266602
    8. '(' → logprob: -8.013788223266602
    9. 'each' → logprob: -8.138788223266602
    10. 'les' → logprob: -8.513788223266602

Token 577: ' morceaux' (ID: 133321)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.6150294542312622
    2. 'chaine' → logprob: -1.7400294542312622
    3. '(sys' → logprob: -1.8650294542312622
    4. '()' → logprob: -2.6150293350219727
    5. 'lines' → logprob: -2.7400293350219727
    6. 'l' → logprob: -2.8650293350219727
    7. ' sys' → logprob: -2.9900293350219727
    8. 'chain' → logprob: -3.1150293350219727
    9. 'cha' → logprob: -3.2400293350219727
    10. ' chaînes' → logprob: -3.2400293350219727

Token 578: ' par' (ID: 686)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.6595831513404846
    2. 'en' → logprob: -0.7845831513404846
    3. 'par' → logprob: -4.03458309173584
    4. 'def' → logprob: -5.65958309173584
    5. ' par' → logprob: -5.65958309173584
    6. ',' → logprob: -7.90958309173584
    7. '_en' → logprob: -7.90958309173584
    8. '   ' → logprob: -8.28458309173584
    9. '()' → logprob: -8.65958309173584
    10. '	en' → logprob: -8.90958309173584

Token 579: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.3153511881828308
    2. 'esp' → logprob: -1.9403512477874756
    3. ' espace' → logprob: -2.1903512477874756
    4. ' espaces' → logprob: -5.4403510093688965
    5. 'space' → logprob: -5.5653510093688965
    6. ''espace' → logprob: -5.6903510093688965
    7. 'sys' → logprob: -6.4403510093688965
    8. 'spaces' → logprob: -8.190351486206055
    9. ' sys' → logprob: -8.815351486206055
    10. '’espace' → logprob: -8.940351486206055

Token 580: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014116729609668255
    2. 'def' → logprob: -4.7641167640686035
    3. '   ' → logprob: -5.5141167640686035
    4. ',
' → logprob: -7.2641167640686035
    5. '#' → logprob: -8.139116287231445
    6. ')' → logprob: -8.389116287231445
    7. ' en' → logprob: -9.514116287231445
    8. ' ,' → logprob: -10.264116287231445
    9. '),' → logprob: -11.014116287231445
    10. '.' → logprob: -11.264116287231445

Token 581: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1035510003566742
    2. '#' → logprob: -2.353550910949707
    3. '   ' → logprob: -5.978550910949707
    4. ' def' → logprob: -7.228550910949707
    5. ' and' → logprob: -10.853550910949707
    6. ' #' → logprob: -10.978550910949707
    7. ',' → logprob: -11.728550910949707
    8. '	def' → logprob: -11.728550910949707
    9. ')' → logprob: -12.103550910949707
    10. 'and' → logprob: -12.478550910949707

Token 582: ' transforme' (ID: 184109)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0020430791191756725
    2. '#' → logprob: -6.8770432472229
    3. 'map' → logprob: -8.252042770385742
    4. ' def' → logprob: -8.377042770385742
    5. '   ' → logprob: -8.377042770385742
    6. 'return' → logprob: -8.627042770385742
    7. 'dé' → logprob: -10.127042770385742
    8. 'returns' → logprob: -10.502042770385742
    9. 'transform' → logprob: -11.502042770385742
    10. 'ret' → logprob: -12.002042770385742

Token 583: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.07619769871234894
    2. ' chaque' → logprob: -2.701197624206543
    3. 'en' → logprob: -5.451197624206543
    4. 'each' → logprob: -6.576197624206543
    5. 'Chaque' → logprob: -7.951197624206543
    6. 'les' → logprob: -9.326197624206543
    7. ' each' → logprob: -10.326197624206543
    8. 'ch' → logprob: -10.701197624206543
    9. ' chacun' → logprob: -11.451197624206543
    10. 't' → logprob: -11.701197624206543

Token 584: ' morceau' (ID: 160026)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.559410810470581
    2. 'ligne' → logprob: -1.559410810470581
    3. ' morceau' → logprob: -2.059410810470581
    4. 'mot' → logprob: -2.684410810470581
    5. ' ligne' → logprob: -4.55941104888916
    6. 'chunk' → logprob: -5.80941104888916
    7. 'int' → logprob: -6.30941104888916
    8. '```' → logprob: -6.30941104888916
    9. 'line' → logprob: -6.43441104888916
    10. 'map' → logprob: -7.43441104888916

Token 585: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.01254179049283266
    2. ' en' → logprob: -4.387541770935059
    3. 'def' → logprob: -11.137541770935059
    4. '_en' → logprob: -11.762541770935059
    5. 'in' → logprob: -12.887541770935059
    6. 'int' → logprob: -13.637541770935059
    7. ''en' → logprob: -13.762541770935059
    8. ',en' → logprob: -14.012541770935059
    9. 'En' → logprob: -14.137541770935059
    10. '	en' → logprob: -14.387541770935059

Token 586: ' un' (ID: 537)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.022025039419531822
    2. 'str' → logprob: -3.8970251083374023
    3. ' int' → logprob: -6.772025108337402
    4. 'list' → logprob: -9.022025108337402
    5. 'ints' → logprob: -9.147025108337402
    6. ' str' → logprob: -9.897025108337402
    7. 'map' → logprob: -10.522025108337402
    8. 'float' → logprob: -11.147025108337402
    9. 'ent' → logprob: -12.397025108337402
    10. 'string' → logprob: -13.272025108337402

Token 587: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002146226615877822
    2. 'str' → logprob: -8.750214576721191
    3. ' int' → logprob: -10.125214576721191
    4. 'float' → logprob: -12.000214576721191
    5. 'list' → logprob: -12.250214576721191
    6. 'map' → logprob: -12.750214576721191
    7. 'string' → logprob: -13.875214576721191
    8. '[int' → logprob: -14.125214576721191
    9. '=int' → logprob: -15.125214576721191
    10. '<int' → logprob: -16.750215530395508

Token 588: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5821272134780884
    2. 'def' → logprob: -0.8321272134780884
    3. ',
' → logprob: -5.832127094268799
    4. 's' → logprob: -6.707127094268799
    5. '#' → logprob: -7.332127094268799
    6. ' def' → logprob: -8.082127571105957
    7. '   ' → logprob: -8.082127571105957
    8. '()' → logprob: -8.457127571105957
    9. ')' → logprob: -9.082127571105957
    10. '(s' → logprob: -9.082127571105957

Token 589: ' retourne' (ID: 178818)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4328870475292206
    2. '#' → logprob: -1.432887077331543
    3. 'et' → logprob: -2.307887077331543
    4. ' and' → logprob: -5.557887077331543
    5. ' def' → logprob: -5.557887077331543
    6. ' et' → logprob: -5.932887077331543
    7. ' #' → logprob: -6.557887077331543
    8. 'and' → logprob: -6.807887077331543
    9. 'return' → logprob: -9.432887077331543
    10. '   ' → logprob: -10.182887077331543

Token 590: ' une' (ID: 2463)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6267884373664856
    2. '[]' → logprob: -1.0017883777618408
    3. '[' → logprob: -3.001788377761841
    4. '[list' → logprob: -4.00178861618042
    5. 'la' → logprob: -5.00178861618042
    6. 'une' → logprob: -5.50178861618042
    7. '[l' → logprob: -5.87678861618042
    8. 'un' → logprob: -6.00178861618042
    9. 'l' → logprob: -6.37678861618042
    10. '[][]' → logprob: -6.62678861618042

Token 591: ' liste' (ID: 31719)
  Prédit: 'generator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'generator' → logprob: -0.18941238522529602
    2. 'list' → logprob: -2.4394123554229736
    3. 'chain' → logprob: -2.8144123554229736
    4. 'from' → logprob: -4.814412593841553
    5. 'map' → logprob: -4.939412593841553
    6. 'flatten' → logprob: -5.939412593841553
    7. 'liste' → logprob: -6.314412593841553
    8. 'chaine' → logprob: -6.814412593841553
    9. 'g' → logprob: -6.939412593841553
    10. 'flat' → logprob: -7.189412593841553

Token 592: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.017045894637703896
    2. '
' → logprob: -4.767045974731445
    3. '[' → logprob: -5.767045974731445
    4. '[]' → logprob: -6.767045974731445
    5. '(map' → logprob: -7.392045974731445
    6. '[int' → logprob: -7.642045974731445
    7. '[
' → logprob: -7.767045974731445
    8. '   ' → logprob: -8.017045974731445
    9. 'of' → logprob: -8.017045974731445
    10. 's' → logprob: -8.142045974731445

Token 593: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.008404999040067196
    2. 'liste' → logprob: -5.6334052085876465
    3. 'lists' → logprob: -5.6334052085876465
    4. 'li' → logprob: -6.8834052085876465
    5. 'LI' → logprob: -9.633404731750488
    6. 'l' → logprob: -10.383404731750488
    7. ' listes' → logprob: -10.883404731750488
    8. 'listas' → logprob: -10.883404731750488
    9. 'List' → logprob: -11.133404731750488
    10. 'la' → logprob: -11.508404731750488

Token 594: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004462281707674265
    2. '
' → logprob: -6.754462242126465
    3. '   ' → logprob: -7.004462242126465
    4. '()
' → logprob: -7.379462242126465
    5. '.
' → logprob: -7.629462242126465
    6. '(
' → logprob: -8.504462242126465
    7. '#' → logprob: -8.504462242126465
    8. ':
' → logprob: -9.004462242126465
    9. '[int' → logprob: -9.004462242126465
    10. '()' → logprob: -9.129462242126465

Token 595: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -17.5
    3. '#' → logprob: -17.75
    4. '
' → logprob: -20.375
    5. '"""
' → logprob: -20.375
    6. '```' → logprob: -21.75
    7. ''''
' → logprob: -21.75
    8. '  
' → logprob: -22.5
    9. 'd' → logprob: -22.5
    10. '    
' → logprob: -22.625

Token 596: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.005585310515016317
    2. 'LIN' → logprob: -6.380585193634033
    3. 'LS' → logprob: -7.130585193634033
    4. 'I' → logprob: -7.380585193634033
    5. 'input' → logprob: -7.505585193634033
    6. 'LI' → logprob: -7.880585193634033
    7. 'LL' → logprob: -8.380585670471191
    8. 'IL' → logprob: -8.755585670471191
    9. 'LF' → logprob: -9.130585670471191
    10. 'LA' → logprob: -9.255585670471191

Token 597: 'LI' (ID: 14313)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.010947242379188538
    2. 'Is' → logprob: -4.760947227478027
    3. 'IS' → logprob: -7.260947227478027
    4. 'L' → logprob: -8.135947227478027
    5. 'IST' → logprob: -8.135947227478027
    6. 'IL' → logprob: -8.885947227478027
    7. 'IJ' → logprob: -9.010947227478027
    8. 'IA' → logprob: -9.135947227478027
    9. 'IN' → logprob: -9.385947227478027
    10. 'Ls' → logprob: -9.510947227478027

Token 598: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.014207348227500916
    2. '():
' → logprob: -4.264207363128662
    3. '()' → logprob: -10.389206886291504
    4. ' ():' → logprob: -11.389206886291504
    5. '():
' → logprob: -13.514206886291504
    6. 'def' → logprob: -14.889206886291504
    7. ' ()' → logprob: -17.26420783996582
    8. '():

' → logprob: -17.51420783996582
    9. ':' → logprob: -18.63920783996582
    10. '(' → logprob: -18.88920783996582

Token 599: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00035048185964114964
    2. 'return' → logprob: -8.500350952148438
    3. '():' → logprob: -9.875350952148438
    4. ' return' → logprob: -10.000350952148438
    5. '():
' → logprob: -10.250350952148438
    6. '()' → logprob: -12.000350952148438
    7. 'def' → logprob: -13.000350952148438
    8. ' ' → logprob: -13.375350952148438
    9. '	return' → logprob: -13.625350952148438
    10. '  ' → logprob: -13.625350952148438

Token 600: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.013199882581830025
    2. '   ' → logprob: -4.763199806213379
    3. ' return' → logprob: -5.388199806213379
    4. '	return' → logprob: -13.638199806213379
    5. ' ' → logprob: -14.013199806213379
    6. 'data' → logprob: -14.263199806213379
    7. 'def' → logprob: -14.888199806213379
    8. '
' → logprob: -15.013199806213379
    9. 'result' → logprob: -15.138199806213379
    10. 'L' → logprob: -15.513199806213379

Token 601: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.0002856497303582728
    2. 'list' → logprob: -8.750286102294922
    3. '[List' → logprob: -9.250286102294922
    4. '[' → logprob: -10.500286102294922
    5. ' [' → logprob: -13.750286102294922
    6. '[int' → logprob: -14.125286102294922
    7. '[l' → logprob: -14.375286102294922
    8. '[line' → logprob: -14.625286102294922
    9. '[L' → logprob: -15.000286102294922
    10. '[len' → logprob: -16.125286102294922

Token 602: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3869992792606354
    2. 'LI' → logprob: -1.136999249458313
    3. 'li' → logprob: -9.261999130249023
    4. ' list' → logprob: -11.136999130249023
    5. ' LI' → logprob: -11.761999130249023
    6. 'LIST' → logprob: -12.761999130249023
    7. 'map' → logprob: -12.886999130249023
    8. 'Li' → logprob: -13.386999130249023
    9. 'List' → logprob: -13.386999130249023
    10. 'L' → logprob: -14.761999130249023

Token 603: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.0087516784551553e-05
    2. 'map' → logprob: -11.62501049041748
    3. '(' → logprob: -14.00001049041748
    4. ' map' → logprob: -16.625009536743164
    5. '	map' → logprob: -16.875009536743164
    6. ']' → logprob: -17.375009536743164
    7. ',map' → logprob: -17.875009536743164
    8. 'LI' → logprob: -18.000009536743164
    9. '.map' → logprob: -18.250009536743164
    10. '(L' → logprob: -18.625009536743164

Token 604: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005251068156212568
    2. 'int' → logprob: -5.255250930786133
    3. '[int' → logprob: -12.255250930786133
    4. '=int' → logprob: -12.755250930786133
    5. '<int' → logprob: -12.755250930786133
    6. ',int' → logprob: -13.005250930786133
    7. ' int' → logprob: -13.005250930786133
    8. ']int' → logprob: -13.380250930786133
    9. ':int' → logprob: -14.755250930786133
    10. '(' → logprob: -15.880250930786133

Token 605: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022892709239386022
    2. '(sys' → logprob: -8.500228881835938
    3. 'sys' → logprob: -11.000228881835938
    4. ' ,' → logprob: -12.625228881835938
    5. ' sys' → logprob: -13.125228881835938
    6. '=sys' → logprob: -13.625228881835938
    7. ',line' → logprob: -14.125228881835938
    8. ',s' → logprob: -14.750228881835938
    9. ',input' → logprob: -15.375228881835938
    10. ',(' → logprob: -15.500228881835938

Token 606: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.003059230512008071
    2. ' sys' → logprob: -6.378059387207031
    3. 'line' → logprob: -6.628059387207031
    4. 'x' → logprob: -10.753059387207031
    5. '(sys' → logprob: -12.253059387207031
    6. 's' → logprob: -12.753059387207031
    7. ' line' → logprob: -13.128059387207031
    8. 'l' → logprob: -14.503059387207031
    9. '   ' → logprob: -14.628059387207031
    10. '=sys' → logprob: -14.753059387207031

Token 607: '.split' (ID: 10347)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.14619016647338867
    2. 'sys' → logprob: -2.3961901664733887
    3. '(sys' → logprob: -3.7711901664733887
    4. '=sys' → logprob: -4.021190166473389
    5. 'in' → logprob: -6.521190166473389
    6. ')' → logprob: -7.521190166473389
    7. '(line' → logprob: -8.146190643310547
    8. 'line' → logprob: -8.146190643310547
    9. 'em' → logprob: -8.521190643310547
    10. ' sys' → logprob: -8.521190643310547

Token 608: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.002216392196714878
    2. '()' → logprob: -6.627216339111328
    3. '))' → logprob: -7.127216339111328
    4. '())' → logprob: -9.752216339111328
    5. '()))
' → logprob: -10.627216339111328
    6. '()
' → logprob: -13.502216339111328
    7. ' ))' → logprob: -14.002216339111328
    8. '().' → logprob: -14.502216339111328
    9. '(' → logprob: -15.127216339111328
    10. '())))' → logprob: -15.127216339111328

Token 609: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1252010613679886
    2. '(sys' → logprob: -2.6252009868621826
    3. '()' → logprob: -3.1252009868621826
    4. ' for' → logprob: -7.000201225280762
    5. 'sys' → logprob: -8.000201225280762
    6. '   ' → logprob: -9.875201225280762
    7. ' sys' → logprob: -11.375201225280762
    8. '(' → logprob: -12.250201225280762
    9. '=sys' → logprob: -12.250201225280762
    10. '(for' → logprob: -13.250201225280762

Token 610: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5771231651306152
    2. 'l' → logprob: -0.8271231651306152
    3. ' sys' → logprob: -6.952123165130615
    4. 'line' → logprob: -8.702123641967773
    5. ' l' → logprob: -9.827123641967773
    6. '(sys' → logprob: -13.202123641967773
    7. '=sys' → logprob: -13.452123641967773
    8. '	sys' → logprob: -13.952123641967773
    9. '   ' → logprob: -14.577123641967773
    10. 'Sys' → logprob: -15.327123641967773

Token 611: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.34580981731414795
    2. ' in' → logprob: -1.345809817314148
    3. 'sys' → logprob: -3.4708099365234375
    4. ' sys' → logprob: -7.3458099365234375
    5. '=sys' → logprob: -8.720809936523438
    6. '(sys' → logprob: -9.470809936523438
    7. 'import' → logprob: -10.095809936523438
    8. '	sys' → logprob: -12.845809936523438
    9. ' ' → logprob: -13.720809936523438
    10. 'ine' → logprob: -15.095809936523438

Token 612: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -9.639096970204264e-05
    2. ' sys' → logprob: -9.250096321105957
    3. '	sys' → logprob: -16.125097274780273
    4. '(sys' → logprob: -16.750097274780273
    5. '=sys' → logprob: -18.000097274780273
    6. '   ' → logprob: -18.250097274780273
    7. ' ' → logprob: -18.375097274780273
    8. '```' → logprob: -18.625097274780273
    9. '
' → logprob: -19.375097274780273
    10. 'open' → logprob: -20.125097274780273

Token 613: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.8889261304575484e-06
    2. 'stdin' → logprob: -12.750003814697266
    3. 'in' → logprob: -15.000003814697266
    4. '.stdout' → logprob: -15.500003814697266
    5. '.' → logprob: -15.750003814697266
    6. '.std' → logprob: -16.375003814697266
    7. '.in' → logprob: -16.625003814697266
    8. 'd' → logprob: -17.125003814697266
    9. 'import' → logprob: -17.750003814697266
    10. '._' → logprob: -18.125003814697266

Token 614: '.readlines' (ID: 92237)
  Prédit: '.readlines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.12833629548549652
    2. '.readline' → logprob: -2.128336191177368
    3. '().' → logprob: -7.503336429595947
    4. '.stdin' → logprob: -7.503336429595947
    5. '.read' → logprob: -9.128335952758789
    6. '.' → logprob: -9.128335952758789
    7. 'read' → logprob: -10.003335952758789
    8. 'stdin' → logprob: -10.503335952758789
    9. '```' → logprob: -12.628335952758789
    10. '(stdin' → logprob: -13.128335952758789

Token 615: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -4.0126840758603066e-05
    2. '()' → logprob: -10.250040054321289
    3. ']' → logprob: -12.375040054321289
    4. '())' → logprob: -16.00004005432129
    5. '()]
' → logprob: -16.62504005432129
    6. ']()' → logprob: -16.75004005432129
    7. '()][' → logprob: -17.50004005432129
    8. '()}' → logprob: -17.62504005432129
    9. ')]' → logprob: -17.62504005432129
    10. '()],' → logprob: -18.25004005432129

Token 616: ']

' (ID: 3144)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0052725342102348804
    2. ']' → logprob: -5.255272388458252
    3. ']()' → logprob: -11.25527286529541
    4. '()' → logprob: -11.25527286529541
    5. ')]' → logprob: -11.38027286529541
    6. ' ]' → logprob: -14.50527286529541
    7. '())' → logprob: -15.00527286529541
    8. '(' → logprob: -15.13027286529541
    9. '()]
' → logprob: -15.25527286529541
    10. '   ' → logprob: -16.630271911621094

Token 617: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19239449501037598
    2. '#' → logprob: -1.817394495010376
    3. '<|end|>' → logprob: -5.192394256591797
    4. 'class' → logprob: -5.567394256591797
    5. '
' → logprob: -6.192394256591797
    6. '<|end|>' → logprob: -7.692394256591797
    7. 'n' → logprob: -8.567394256591797
    8. 'import' → logprob: -8.817394256591797
    9. '\' → logprob: -9.317394256591797
    10. '```' → logprob: -9.567394256591797

Token 618: ' Sem' (ID: 13957)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0012951197568327188
    2. '#' → logprob: -6.87629508972168
    3. 'class' → logprob: -8.50129508972168
    4. 'from' → logprob: -10.12629508972168
    5. 'import' → logprob: -12.25129508972168
    6. 'n' → logprob: -12.87629508972168
    7. ' def' → logprob: -12.87629508972168
    8. 'input' → logprob: -13.00129508972168
    9. 'N' → logprob: -13.25129508972168
    10. 'print' → logprob: -14.25129508972168

Token 619: 'bl' (ID: 1751)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.788428008556366
    2. '#' → logprob: -1.2884280681610107
    3. 'pl' → logprob: -2.5384280681610107
    4. 'ple' → logprob: -2.5384280681610107
    5. 'p' → logprob: -3.2884280681610107
    6. 'icolon' → logprob: -3.9134280681610107
    7. 'ples' → logprob: -4.288427829742432
    8. 'pline' → logprob: -6.038427829742432
    9. 'plen' → logprob: -6.038427829742432
    10. '=' → logprob: -6.288427829742432

Token 620: 'able' (ID: 562)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.42455998063087463
    2. '```' → logprob: -2.424560070037842
    3. '#' → logprob: -2.549560070037842
    4. 'ble' → logprob: -2.674560070037842
    5. 'a' → logprob: -4.424560070037842
    6. '``' → logprob: -4.549560070037842
    7. '\' → logprob: -4.799560070037842
    8. 'i' → logprob: -4.799560070037842
    9. 'le' → logprob: -4.924560070037842
    10. '[' → logprob: -4.924560070037842

Token 621: ' à' (ID: 1221)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014536598697304726
    2. '(' → logprob: -4.389536380767822
    3. '(
' → logprob: -6.514536380767822
    4. ' def' → logprob: -8.26453685760498
    5. 'to' → logprob: -9.26453685760498
    6. '(def' → logprob: -9.76453685760498
    7. '#' → logprob: -10.01453685760498
    8. '()' → logprob: -10.13953685760498
    9. 'de' → logprob: -11.01453685760498
    10. ' to' → logprob: -12.38953685760498

Token 622: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.5323097705841064
    2. 'def' → logprob: -1.5323097705841064
    3. 'input' → logprob: -2.6573097705841064
    4. 'list' → logprob: -3.1573097705841064
    5. 'range' → logprob: -3.6573097705841064
    6. 'int' → logprob: -3.7823097705841064
    7. 'L' → logprob: -4.407309532165527
    8. 'sys' → logprob: -4.532309532165527
    9. 'map' → logprob: -5.907309532165527
    10. 'I' → logprob: -6.157309532165527

Token 623: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.595456063747406
    2. '()' → logprob: -0.845456063747406
    3. '():' → logprob: -3.970456123352051
    4. ' def' → logprob: -8.72045612335205
    5. ':' → logprob: -9.22045612335205
    6. '():
' → logprob: -9.34545612335205
    7. '()
' → logprob: -9.72045612335205
    8. '()

' → logprob: -10.97045612335205
    9. '();' → logprob: -11.84545612335205
    10. ',' → logprob: -12.59545612335205

Token 624: ' mais' (ID: 2899)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001911432045744732
    2. ' def' → logprob: -8.625190734863281
    3. '#' → logprob: -12.125190734863281
    4. '
' → logprob: -12.500190734863281
    5. 'but' → logprob: -15.125190734863281
    6. ' but' → logprob: -15.125190734863281
    7. '   ' → logprob: -15.375190734863281
    8. 'L' → logprob: -15.375190734863281
    9. ' 
' → logprob: -15.750190734863281
    10. '```' → logprob: -16.12519073486328

Token 625: ' retourne' (ID: 178818)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007160038687288761
    2. '()' → logprob: -5.882160186767578
    3. 'L' → logprob: -6.882160186767578
    4. ' def' → logprob: -6.882160186767578
    5. '#' → logprob: -7.632160186767578
    6. 'IL' → logprob: -8.007160186767578
    7. 'S' → logprob: -8.132160186767578
    8. 'LS' → logprob: -8.507160186767578
    9. 'LI' → logprob: -8.882160186767578
    10. 'int' → logprob: -9.507160186767578

Token 626: ' des' (ID: 731)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4315148890018463
    2. ' un' → logprob: -1.931514859199524
    3. ' une' → logprob: -2.4315149784088135
    4. 'un' → logprob: -2.8065149784088135
    5. 'une' → logprob: -3.8065149784088135
    6. 'la' → logprob: -4.931514739990234
    7. 'l' → logprob: -4.931514739990234
    8. ' int' → logprob: -5.681514739990234
    9. 'a' → logprob: -5.806514739990234
    10. 'input' → logprob: -6.431514739990234

Token 627: ' ent' (ID: 1121)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.015885023400187492
    2. ' str' → logprob: -5.390884876251221
    3. 'list' → logprob: -5.515884876251221
    4. 'strings' → logprob: -5.640884876251221
    5. 'string' → logprob: -6.890884876251221
    6. '[str' → logprob: -7.640884876251221
    7. 'int' → logprob: -7.765884876251221
    8. 'float' → logprob: -7.890884876251221
    9. 'input' → logprob: -8.140885353088379
    10. 's' → logprob: -8.515885353088379

Token 628: 'iers' (ID: 11012)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6723262071609497
    2. 're' → logprob: -1.4223262071609497
    3. 'iers' → logprob: -2.54732608795166
    4. 'ries' → logprob: -3.17232608795166
    5. 'r' → logprob: -3.79732608795166
    6. 'ier' → logprob: -3.79732608795166
    7. 'ières' → logprob: -4.42232608795166
    8. 'ires' → logprob: -4.42232608795166
    9. 'rees' → logprob: -4.79732608795166
    10. 'ry' → logprob: -4.92232608795166

Token 629: ' décr' (ID: 123041)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14506244659423828
    2. '()' → logprob: -2.0200624465942383
    3. '()
' → logprob: -7.270062446594238
    4. '():' → logprob: -7.770062446594238
    5. 'I' → logprob: -8.270062446594238
    6. 'int' → logprob: -8.395062446594238
    7. '():
' → logprob: -9.270062446594238
    8. ' def' → logprob: -9.395062446594238
    9. '[]' → logprob: -9.520062446594238
    10. '().' → logprob: -9.520062446594238

Token 630: 'ément' (ID: 17645)
  Prédit: 'its'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -0.6610339283943176
    2. 'ivant' → logprob: -1.1610338687896729
    3. 'étés' → logprob: -2.286033868789673
    4. 'is' → logprob: -4.161034107208252
    5. 'ets' → logprob: -4.786034107208252
    6. 'iv' → logprob: -4.786034107208252
    7. 'ément' → logprob: -5.036034107208252
    8. 'êt' → logprob: -5.161034107208252
    9. 'év' → logprob: -6.286034107208252
    10. 'ap' → logprob: -6.286034107208252

Token 631: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.045455798506736755
    2. 'é' → logprob: -3.1704556941986084
    3. 'es' → logprob: -6.9204559326171875
    4. 'ed' → logprob: -7.5454559326171875
    5. 'ant' → logprob: -8.045455932617188
    6. 'e' → logprob: -8.045455932617188
    7. 'ée' → logprob: -8.795455932617188
    8. 'ées' → logprob: -10.045455932617188
    9. 'er' → logprob: -10.545455932617188
    10. '-' → logprob: -11.045455932617188

Token 632: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10206421464681625
    2. '()' → logprob: -2.3520641326904297
    3. 'd' → logprob: -7.22706413269043
    4. '()
' → logprob: -8.10206413269043
    5. 'i' → logprob: -8.72706413269043
    6. 'D' → logprob: -8.72706413269043
    7. '_' → logprob: -9.22706413269043
    8. '_d' → logprob: -9.97706413269043
    9. '_i' → logprob: -9.97706413269043
    10. '_def' → logprob: -9.97706413269043

Token 633: 'pour' (ID: 52723)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6417238116264343
    2. 'def' → logprob: -0.8917238116264343
    3. 'n' → logprob: -3.516723871231079
    4. '()' → logprob: -4.1417236328125
    5. ' def' → logprob: -5.5167236328125
    6. 'lambda' → logprob: -5.6417236328125
    7. ' n' → logprob: -5.7667236328125
    8. '):' → logprob: -6.0167236328125
    9. '(n' → logprob: -7.1417236328125
    10. '(' → logprob: -7.5167236328125

Token 634: ' compter' (ID: 81694)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2533141374588013
    2. ' ' → logprob: -1.6283141374588013
    3. '_' → logprob: -2.1283140182495117
    4. '0' → logprob: -2.7533140182495117
    5. 'index' → logprob: -2.8783140182495117
    6. ' l' → logprob: -3.5033140182495117
    7. ' zero' → logprob: -3.5033140182495117
    8. 'l' → logprob: -3.6283140182495117
    9. 'i' → logprob: -3.8783140182495117
    10. ' idx' → logprob: -4.128314018249512

Token 635: ' à' (ID: 1221)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04902457445859909
    2. ')' → logprob: -3.9240245819091797
    3. 'def' → logprob: -4.79902458190918
    4. 'from' → logprob: -5.17402458190918
    5. '())' → logprob: -5.29902458190918
    6. '_' → logprob: -6.79902458190918
    7. 's' → logprob: -7.04902458190918
    8. 'indices' → logprob: -7.42402458190918
    9. '(' → logprob: -7.54902458190918
    10. '_by' → logprob: -7.79902458190918

Token 636: ' partir' (ID: 12100)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010457794182002544
    2. '1' → logprob: -5.135457992553711
    3. 'zero' → logprob: -5.635457992553711
    4. ' zéro' → logprob: -7.260457992553711
    5. '```' → logprob: -9.885457992553711
    6. 'base' → logprob: -10.260457992553711
    7. 'from' → logprob: -10.385457992553711
    8. 'index' → logprob: -10.510457992553711
    9. 'z' → logprob: -10.635457992553711
    10. '-' → logprob: -11.385457992553711

Token 637: ' de' (ID: 334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07409465312957764
    2. ' de' → logprob: -2.824094772338867
    3. 'de' → logprob: -4.574094772338867
    4. ' ' → logprob: -7.199094772338867
    5. 'from' → logprob: -7.449094772338867
    6. 'def' → logprob: -8.574094772338867
    7. '1' → logprob: -9.199094772338867
    8. ' from' → logprob: -10.824094772338867
    9. ' zéro' → logprob: -11.574094772338867
    10. '```' → logprob: -11.574094772338867

Token 638: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007809850387275219
    2. '1' → logprob: -5.382809638977051
    3. ' ' → logprob: -5.882809638977051
    4. ' zéro' → logprob: -8.88280963897705
    5. ' zero' → logprob: -9.00780963897705
    6. 'zero' → logprob: -9.13280963897705
    7. '```' → logprob: -11.25780963897705
    8. 'def' → logprob: -11.38280963897705
    9. '   ' → logprob: -13.63280963897705
    10. '
' → logprob: -13.75780963897705

Token 639: ').
' (ID: 6294)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.26756682991981506
    2. ')' → logprob: -2.0175669193267822
    3. '())' → logprob: -2.5175669193267822
    4. 'def' → logprob: -4.017566680908203
    5. '():' → logprob: -7.017566680908203
    6. ' )' → logprob: -7.267566680908203
    7. '()
' → logprob: -7.392566680908203
    8. '):' → logprob: -8.642566680908203
    9. ' def' → logprob: -9.017566680908203
    10. '_' → logprob: -9.517566680908203

Token 640: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. ' def' → logprob: -16.75
    3. '
' → logprob: -17.0
    4. 'd' → logprob: -18.875
    5. 'de' → logprob: -18.875
    6. '```' → logprob: -20.375
    7. ':def' → logprob: -22.0
    8. 'ndef' → logprob: -22.375
    9. '	def' → logprob: -22.875
    10. '  
' → logprob: -23.125

Token 641: ' LI' (ID: 14875)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.10689467936754227
    2. 'LD' → logprob: -2.7318947315216064
    3. 'LI' → logprob: -3.4818947315216064
    4. 'I' → logprob: -6.856894493103027
    5. 'LS' → logprob: -6.856894493103027
    6. 'LN' → logprob: -7.231894493103027
    7. 'LIN' → logprob: -7.481894493103027
    8. 'D' → logprob: -7.481894493103027
    9. 'DI' → logprob: -7.731894493103027
    10. 'LL' → logprob: -8.856894493103027

Token 642: '_' (ID: 62)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5974909067153931
    2. '():' → logprob: -1.222490906715393
    3. '_d' → logprob: -2.4724907875061035
    4. '0' → logprob: -3.7224907875061035
    5. '_dec' → logprob: -4.4724907875061035
    6. 'D' → logprob: -4.7224907875061035
    7. 'de' → logprob: -4.8474907875061035
    8. '_de' → logprob: -5.7224907875061035
    9. '(d' → logprob: -6.0974907875061035
    10. '()' → logprob: -6.0974907875061035

Token 643: '():
' (ID: 8595)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7385100722312927
    2. '0' → logprob: -1.3635101318359375
    3. 'de' → logprob: -2.2385101318359375
    4. 'dec' → logprob: -2.3635101318359375
    5. 'minus' → logprob: -4.3635101318359375
    6. '()' → logprob: -4.4885101318359375
    7. 'z' → logprob: -4.6135101318359375
    8. '1' → logprob: -5.3635101318359375
    9. 'D' → logprob: -5.4885101318359375
    10. '():' → logprob: -5.7385101318359375

Token 644: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06346102803945541
    2. '():
' → logprob: -2.8134610652923584
    3. '()' → logprob: -7.188460826873779
    4. '   ' → logprob: -7.438460826873779
    5. '):' → logprob: -9.563461303710938
    6. '):
' → logprob: -10.188461303710938
    7. '():
' → logprob: -11.188461303710938
    8. 'def' → logprob: -11.688461303710938
    9. ' ():' → logprob: -11.688461303710938
    10. 'return' → logprob: -12.313461303710938

Token 645: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009160569868981838
    2. ' return' → logprob: -5.50916051864624
    3. '():' → logprob: -5.50916051864624
    4. '   ' → logprob: -8.134160995483398
    5. ':return' → logprob: -8.384160995483398
    6. '():
' → logprob: -8.634160995483398
    7. '):' → logprob: -8.634160995483398
    8. 'def' → logprob: -9.759160995483398
    9. '):
' → logprob: -10.009160995483398
    10. '()' → logprob: -10.759160995483398

Token 646: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.002133013680577278
    2. '[list' → logprob: -6.252132892608643
    3. ' list' → logprob: -8.5021333694458
    4. ' [' → logprob: -14.5021333694458
    5. '[' → logprob: -14.6271333694458
    6. '[l' → logprob: -16.127132415771484
    7. '[i' → logprob: -16.627132415771484
    8. '[x' → logprob: -17.002132415771484
    9. '	list' → logprob: -17.377132415771484
    10. 'li' → logprob: -17.627132415771484

Token 647: 'int' (ID: 491)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07919721305370331
    2. 'int' → logprob: -2.5791971683502197
    3. 'a' → logprob: -8.32919692993164
    4. 'i' → logprob: -9.70419692993164
    5. 'c' → logprob: -13.70419692993164
    6. 'e' → logprob: -13.82919692993164
    7. 'b' → logprob: -14.07919692993164
    8. 'v' → logprob: -14.07919692993164
    9. 'k' → logprob: -15.32919692993164
    10. '(int' → logprob: -15.32919692993164

Token 648: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.20477260649204254
    2. '(sys' → logprob: -1.7047725915908813
    3. '(i' → logprob: -6.079772472381592
    4. '(s' → logprob: -6.954772472381592
    5. '(a' → logprob: -10.07977294921875
    6. '(_)' → logprob: -10.57977294921875
    7. '(input' → logprob: -11.07977294921875
    8. '(' → logprob: -11.82977294921875
    9. '(n' → logprob: -12.20477294921875
    10. '(c' → logprob: -13.20477294921875

Token 649: ')-' (ID: 14080)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.14443565905094147
    2. '()' → logprob: -3.2694356441497803
    3. '()-' → logprob: -3.3944356441497803
    4. '(x' → logprob: -3.5194356441497803
    5. '())' → logprob: -3.8944356441497803
    6. ')-' → logprob: -4.894435882568359
    7. ')' → logprob: -5.769435882568359
    8. '(s' → logprob: -6.269435882568359
    9. '(input' → logprob: -9.14443588256836
    10. 'sys' → logprob: -10.01943588256836

Token 650: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002185472520068288
    2. ' ' → logprob: -6.127185344696045
    3. ')' → logprob: -16.127185821533203
    4. '  ' → logprob: -16.752185821533203
    5. '```' → logprob: -17.252185821533203
    6. ' for' → logprob: -17.377185821533203
    7. 'int' → logprob: -17.752185821533203
    8. ' )' → logprob: -17.877185821533203
    9. ' sys' → logprob: -18.127185821533203
    10. 's' → logprob: -18.502185821533203

Token 651: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17729100584983826
    2. ' for' → logprob: -1.9272910356521606
    3. '()' → logprob: -4.177290916442871
    4. ')' → logprob: -6.927290916442871
    5. '(' → logprob: -7.927290916442871
    6. '(x' → logprob: -8.427290916442871
    7. ' ' → logprob: -12.052290916442871
    8. 'x' → logprob: -12.552290916442871
    9. ' (' → logprob: -12.927290916442871
    10. '	for' → logprob: -13.302290916442871

Token 652: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0024758970830589533
    2. ' x' → logprob: -6.002475738525391
    3. 'sys' → logprob: -15.25247573852539
    4. ' sys' → logprob: -18.50247573852539
    5. ' ' → logprob: -19.62747573852539
    6. ' ' → logprob: -19.87747573852539
    7. '	x' → logprob: -19.87747573852539
    8. '
' → logprob: -20.50247573852539
    9. 'in' → logprob: -21.00247573852539
    10. '  ' → logprob: -21.62747573852539

Token 653: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12698101997375488
    2. ' in' → logprob: -2.126981019973755
    3. 'x' → logprob: -10.126980781555176
    4. 'import' → logprob: -12.376980781555176
    5. 'n' → logprob: -13.251980781555176
    6. 'inx' → logprob: -13.626980781555176
    7. ',' → logprob: -13.876980781555176
    8. ' ' → logprob: -13.876980781555176
    9. 'In' → logprob: -14.501980781555176
    10. 's' → logprob: -14.626980781555176

Token 654: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -4.5491004129871726e-05
    2. ' sys' → logprob: -10.000045776367188
    3. '(sys' → logprob: -17.625045776367188
    4. '	sys' → logprob: -17.625045776367188
    5. '=sys' → logprob: -17.875045776367188
    6. 'Sys' → logprob: -20.000045776367188
    7. 'system' → logprob: -20.250045776367188
    8. 'SYS' → logprob: -20.250045776367188
    9. 'input' → logprob: -20.375045776367188
    10. '.sys' → logprob: -20.875045776367188

Token 655: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0008294018916785717
    2. 'stdin' → logprob: -7.125829219818115
    3. '(stdin' → logprob: -11.000829696655273
    4. '.readline' → logprob: -12.625829696655273
    5. '.stdout' → logprob: -12.875829696655273
    6. '.' → logprob: -13.500829696655273
    7. 'sys' → logprob: -15.000829696655273
    8. '=sys' → logprob: -15.250829696655273
    9. 'import' → logprob: -15.625829696655273
    10. '.argv' → logprob: -15.750829696655273

Token 656: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.9361264946837764e-07
    2. '.' → logprob: -16.375
    3. ' readline' → logprob: -18.375
    4. '.readlines' → logprob: -19.25
    5. '.stdin' → logprob: -20.375
    6. ' .' → logprob: -21.375
    7. '().' → logprob: -21.5
    8. '.read' → logprob: -21.5
    9. '].' → logprob: -22.0
    10. '```' → logprob: -22.125

Token 657: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1472419600977446e-06
    2. '()' → logprob: -14.000000953674316
    3. ' ().' → logprob: -15.250000953674316
    4. '(' → logprob: -17.625001907348633
    5. '.split' → logprob: -19.000001907348633
    6. '.' → logprob: -19.125001907348633
    7. ' .' → logprob: -19.875001907348633
    8. '().__' → logprob: -22.250001907348633
    9. '()).' → logprob: -22.250001907348633
    10. ' ' → logprob: -22.750001907348633

Token 658: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.8444881536415778e-05
    2. 'strip' → logprob: -10.500028610229492
    3. ' split' → logprob: -14.750028610229492
    4. 'rstrip' → logprob: -14.875028610229492
    5. 'decode' → logprob: -16.375028610229492
    6. '.split' → logprob: -17.250028610229492
    7. 'read' → logprob: -17.625028610229492
    8. '().' → logprob: -19.250028610229492
    9. '(split' → logprob: -19.625028610229492
    10. 'spl' → logprob: -20.375028610229492

Token 659: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -7.600714161526412e-05
    2. '()' → logprob: -9.500076293945312
    3. ']' → logprob: -14.125076293945312
    4. '(' → logprob: -16.000076293945312
    5. ']()' → logprob: -16.250076293945312
    6. '())' → logprob: -16.750076293945312
    7. ' ()' → logprob: -16.750076293945312
    8. '()]
' → logprob: -17.000076293945312
    9. '()][' → logprob: -18.500076293945312
    10. '()],' → logprob: -18.875076293945312

Token 660: ']

' (ID: 3144)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.002568164374679327
    2. ']' → logprob: -6.002568244934082
    3. '()' → logprob: -9.502568244934082
    4. ']()' → logprob: -11.002568244934082
    5. '()]
' → logprob: -14.752568244934082
    6. ')]' → logprob: -15.127568244934082
    7. '(' → logprob: -15.377568244934082
    8. ' ]' → logprob: -15.502568244934082
    9. '())' → logprob: -16.252567291259766
    10. ' ()' → logprob: -17.877567291259766

Token 661: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13270385563373566
    2. '#' → logprob: -2.1327037811279297
    3. '<|end|>' → logprob: -5.38270378112793
    4. '<|end|>' → logprob: -8.00770378112793
    5. '```' → logprob: -8.75770378112793
    6. ':' → logprob: -9.13270378112793
    7. ')' → logprob: -9.25770378112793
    8. '
' → logprob: -9.50770378112793
    9. '\' → logprob: -9.63270378112793
    10. '()' → logprob: -10.13270378112793

Token 662: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0025493851862847805
    2. 'D' → logprob: -7.252549171447754
    3. 'S' → logprob: -7.377549171447754
    4. 'I' → logprob: -7.377549171447754
    5. '#' → logprob: -8.377549171447754
    6. 'input' → logprob: -9.252549171447754
    7. 'L' → logprob: -9.752549171447754
    8. 'LI' → logprob: -10.502549171447754
    9. 'LS' → logprob: -10.627549171447754
    10. 'N' → logprob: -10.752549171447754

Token 663: ' qui' (ID: 2780)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006628761766478419
    2. ' def' → logprob: -7.500662803649902
    3. '#' → logprob: -10.125662803649902
    4. '()' → logprob: -11.000662803649902
    5. '
' → logprob: -11.250662803649902
    6. '(
' → logprob: -11.250662803649902
    7. 'de' → logprob: -12.000662803649902
    8. '(' → logprob: -12.625662803649902
    9. '()
' → logprob: -12.750662803649902
    10. 'ndef' → logprob: -13.375662803649902

Token 664: ' lit' (ID: 11980)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04021967574954033
    2. 'input' → logprob: -3.665219783782959
    3. 'read' → logprob: -4.665219783782959
    4. 's' → logprob: -6.540219783782959
    5. 'reads' → logprob: -7.040219783782959
    6. 'int' → logprob: -7.290219783782959
    7. ' def' → logprob: -7.540219783782959
    8. 'print' → logprob: -8.6652193069458
    9. 'return' → logprob: -9.0402193069458
    10. ' input' → logprob: -9.6652193069458

Token 665: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009796464815735817
    2. '():' → logprob: -5.634796619415283
    3. 'a' → logprob: -5.884796619415283
    4. 'def' → logprob: -7.384796619415283
    5. '():
' → logprob: -7.884796619415283
    6. 's' → logprob: -8.134796142578125
    7. '().' → logprob: -8.134796142578125
    8. 'sys' → logprob: -8.384796142578125
    9. 'int' → logprob: -8.509796142578125
    10. 'n' → logprob: -8.759796142578125

Token 666: ' ligne' (ID: 19583)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.2507157623767853
    2. 'single' → logprob: -2.750715732574463
    3. 'string' → logprob: -2.875715732574463
    4. 'int' → logprob: -3.000715732574463
    5. '()' → logprob: -3.625715732574463
    6. 'str' → logprob: -4.875715732574463
    7. 'ligne' → logprob: -5.375715732574463
    8. 'char' → logprob: -5.375715732574463
    9. 's' → logprob: -6.625715732574463
    10. 'raw' → logprob: -6.625715732574463

Token 667: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00046630011638626456
    2. 'def' → logprob: -8.250466346740723
    3. '().' → logprob: -9.500466346740723
    4. '()
' → logprob: -9.875466346740723
    5. '=' → logprob: -10.125466346740723
    6. ' =' → logprob: -11.000466346740723
    7. '()

' → logprob: -12.375466346740723
    8. '()`' → logprob: -12.625466346740723
    9. '#' → logprob: -13.000466346740723
    10. '();' → logprob: -13.625466346740723

Token 668: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.002564480062574148
    2. '(sys' → logprob: -6.752564430236816
    3. 'input' → logprob: -7.377564430236816
    4. '()' → logprob: -8.002564430236816
    5. '=sys' → logprob: -8.502564430236816
    6. ' sys' → logprob: -9.002564430236816
    7. 'l' → logprob: -9.752564430236816
    8. 'la' → logprob: -10.627564430236816
    9. '```' → logprob: -12.252564430236816
    10. 'import' → logprob: -12.252564430236816

Token 669: ''entrée' (ID: 115820)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.8242058753967285
    2. 'input' → logprob: -1.3242058753967285
    3. 'stdin' → logprob: -1.5742058753967285
    4. 'standard' → logprob: -3.1992058753967285
    5. '=sys' → logprob: -4.0742058753967285
    6. '_input' → logprob: -5.0742058753967285
    7. 'entrée' → logprob: -5.5742058753967285
    8. '(stdin' → logprob: -5.5742058753967285
    9. 'import' → logprob: -5.9492058753967285
    10. ''entrée' → logprob: -5.9492058753967285

Token 670: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06546960026025772
    2. 'standard' → logprob: -3.31546950340271
    3. '().' → logprob: -3.69046950340271
    4. 'def' → logprob: -7.690469741821289
    5. 'sys' → logprob: -7.815469741821289
    6. '```' → logprob: -8.815469741821289
    7. 'std' → logprob: -8.940469741821289
    8. '()
' → logprob: -9.190469741821289
    9. ' standard' → logprob: -9.440469741821289
    10. 'stdin' → logprob: -9.440469741821289

Token 671: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.054215263575315475
    2. '()' → logprob: -3.6792151927948
    3. '():' → logprob: -3.9292151927948
    4. '():
' → logprob: -5.179215431213379
    5. '().' → logprob: -7.054215431213379
    6. ':' → logprob: -7.179215431213379
    7. '()
' → logprob: -8.429215431213379
    8. ',' → logprob: -8.679215431213379
    9. ' def' → logprob: -9.929215431213379
    10. ' =' → logprob: -10.054215431213379

Token 672: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0031729566399008036
    2. ' def' → logprob: -6.128172874450684
    3. 'sys' → logprob: -7.378172874450684
    4. 's' → logprob: -8.503172874450684
    5. '   ' → logprob: -10.003172874450684
    6. 'str' → logprob: -10.253172874450684
    7. 'return' → logprob: -10.378172874450684
    8. ' sys' → logprob: -11.503172874450684
    9. 'strip' → logprob: -11.503172874450684
    10. 'lambda' → logprob: -12.378172874450684

Token 673: ' coupe' (ID: 71780)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.011232435703277588
    2. 'rstrip' → logprob: -4.511232376098633
    3. 'split' → logprob: -8.886232376098633
    4. ' strip' → logprob: -10.136232376098633
    5. '.strip' → logprob: -12.511232376098633
    6. 'return' → logprob: -13.636232376098633
    7. 'str' → logprob: -14.511232376098633
    8. '_strip' → logprob: -14.886232376098633
    9. 'r' → logprob: -15.136232376098633
    10. 'input' → logprob: -15.636232376098633

Token 674: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21217967569828033
    2. 'en' → logprob: -1.9621796607971191
    3. '<|end|>' → logprob: -4.212179660797119
    4. '().' → logprob: -4.462179660797119
    5. ' en' → logprob: -4.837179660797119
    6. 'rstrip' → logprob: -6.337179660797119
    7. ')' → logprob: -6.462179660797119
    8. '()[' → logprob: -6.587179660797119
    9. '.rstrip' → logprob: -6.712179660797119
    10. ',' → logprob: -7.087179660797119

Token 675: ' morceaux' (ID: 133321)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.27656787633895874
    2. 'string' → logprob: -2.5265679359436035
    3. 'chain' → logprob: -2.7765679359436035
    4. 'm' → logprob: -3.1515679359436035
    5. 'str' → logprob: -3.5265679359436035
    6. 'car' → logprob: -5.0265679359436035
    7. 'liste' → logprob: -5.5265679359436035
    8. 'list' → logprob: -5.7765679359436035
    9. 'tokens' → logprob: -6.0265679359436035
    10. 'cha' → logprob: -6.0265679359436035

Token 676: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08681399375200272
    2. 'def' → logprob: -3.2118139266967773
    3. ',' → logprob: -3.8368139266967773
    4. '(),' → logprob: -5.586813926696777
    5. '=' → logprob: -5.711813926696777
    6. '().' → logprob: -5.961813926696777
    7. 'str' → logprob: -6.086813926696777
    8. '   ' → logprob: -6.586813926696777
    9. '(' → logprob: -6.711813926696777
    10. '()
' → logprob: -6.836813926696777

Token 677: ' 
' (ID: 793)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0017772804712876678
    2. '#' → logprob: -6.501777172088623
    3. ' def' → logprob: -8.751777648925781
    4. 'return' → logprob: -9.251777648925781
    5. '@return' → logprob: -12.376777648925781
    6. 'returns' → logprob: -12.501777648925781
    7. 'str' → logprob: -13.251777648925781
    8. '   ' → logprob: -13.251777648925781
    9. 'strip' → logprob: -13.626777648925781
    10. 'lambda' → logprob: -13.626777648925781

Token 678: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001761272142175585
    2. '#' → logprob: -8.750176429748535
    3. ' def' → logprob: -11.000176429748535
    4. 'return' → logprob: -14.875176429748535
    5. 'str' → logprob: -15.375176429748535
    6. 'and' → logprob: -16.12517547607422
    7. 'et' → logprob: -16.50017547607422
    8. '
' → logprob: -16.75017547607422
    9. 'dé' → logprob: -17.25017547607422
    10. 'returns' → logprob: -17.62517547607422

Token 679: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.030544418841600418
    2. 'return' → logprob: -3.9055445194244385
    3. 'str' → logprob: -5.030544281005859
    4. 'strip' → logprob: -6.905544281005859
    5. 'ret' → logprob: -7.030544281005859
    6. 'returns' → logprob: -7.530544281005859
    7. ' retourne' → logprob: -7.780544281005859
    8. 'et' → logprob: -8.28054428100586
    9. 'ren' → logprob: -9.15554428100586
    10. ' return' → logprob: -10.53054428100586

Token 680: ' transforme' (ID: 184109)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5219753980636597
    2. 'ret' → logprob: -1.2719753980636597
    3. ' retourne' → logprob: -2.646975517272949
    4. 'ren' → logprob: -3.271975517272949
    5. ' return' → logprob: -4.771975517272949
    6. 'def' → logprob: -5.896975517272949
    7. 'returns' → logprob: -6.146975517272949
    8. 'strip' → logprob: -6.896975517272949
    9. ' ren' → logprob: -7.021975517272949
    10. ' retour' → logprob: -7.521975517272949

Token 681: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.827853262424469
    2. 'str' → logprob: -1.2028532028198242
    3. ' la' → logprob: -2.327853202819824
    4. 'la' → logprob: -2.577853202819824
    5. ' str' → logprob: -4.077853202819824
    6. ' en' → logprob: -4.327853202819824
    7. 'lambda' → logprob: -4.827853202819824
    8. ' les' → logprob: -4.952853202819824
    9. ' lambda' → logprob: -4.952853202819824
    10. '(str' → logprob: -4.952853202819824

Token 682: ' morceau' (ID: 160026)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.6203482151031494
    2. 'x' → logprob: -1.2453482151031494
    3. 'str' → logprob: -2.9953482151031494
    4. '(x' → logprob: -3.2453482151031494
    5. '(token' → logprob: -3.6203482151031494
    6. ' morceau' → logprob: -4.24534797668457
    7. '<|end|>' → logprob: -4.62034797668457
    8. ' token' → logprob: -5.12034797668457
    9. 'string' → logprob: -5.74534797668457
    10. 'élé' → logprob: -5.87034797668457

Token 683: ' en' (ID: 469)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.7589181661605835
    2. '(str' → logprob: -1.3839181661605835
    3. 'en' → logprob: -2.258918285369873
    4. 'def' → logprob: -3.133918285369873
    5. '=str' → logprob: -3.258918285369873
    6. '()' → logprob: -3.633918285369873
    7. '(' → logprob: -3.758918285369873
    8. 'into' → logprob: -4.258918285369873
    9. ' en' → logprob: -5.383918285369873
    10. '=' → logprob: -5.633918285369873

Token 684: ' flott' (ID: 108700)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.006448796018958092
    2. 'float' → logprob: -5.131448745727539
    3. 'string' → logprob: -8.506448745727539
    4. 'chaine' → logprob: -8.756448745727539
    5. ' str' → logprob: -9.006448745727539
    6. 'une' → logprob: -10.756448745727539
    7. ' float' → logprob: -12.381448745727539
    8. ' une' → logprob: -12.881448745727539
    9. 'int' → logprob: -13.256448745727539
    10. 'stri' → logprob: -13.631448745727539

Token 685: 'ant' (ID: 493)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.00636089313775301
    2. 'ot' → logprob: -5.13136100769043
    3. '(float' → logprob: -9.38136100769043
    4. 'at' → logprob: -9.50636100769043
    5. 'float' → logprob: -9.88136100769043
    6. 'loat' → logprob: -9.88136100769043
    7. 'oit' → logprob: -10.13136100769043
    8. 'oint' → logprob: -10.25636100769043
    9. 'ost' → logprob: -11.13136100769043
    10. 't' → logprob: -11.25636100769043

Token 686: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015068859793245792
    2. '()
' → logprob: -7.501506805419922
    3. '()' → logprob: -7.751506805419922
    4. '():
' → logprob: -8.251506805419922
    5. ' def' → logprob: -9.501506805419922
    6. ':' → logprob: -9.876506805419922
    7. '():' → logprob: -10.376506805419922
    8. ':
' → logprob: -10.626506805419922
    9. '.
' → logprob: -11.376506805419922
    10. '   ' → logprob: -11.376506805419922

Token 687: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -19.125
    3. '```' → logprob: -21.75
    4. '
' → logprob: -22.0
    5. 'd' → logprob: -23.0
    6. 'import' → logprob: -23.25
    7. '	def' → logprob: -23.625
    8. 'de' → logprob: -24.75
    9. '  
' → logprob: -24.75
    10. '\' → logprob: -24.75

Token 688: ' LF' (ID: 107653)
  Prédit: 'LF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LF' → logprob: -0.0175181832164526
    2. ' LF' → logprob: -4.267518043518066
    3. 'F' → logprob: -6.017518043518066
    4. 'L' → logprob: -7.892518043518066
    5. 'LD' → logprob: -8.142518043518066
    6. 'Lf' → logprob: -9.017518043518066
    7. 'FL' → logprob: -10.017518043518066
    8. 'LI' → logprob: -10.642518043518066
    9. 'LS' → logprob: -11.142518043518066
    10. '

' → logprob: -11.642518043518066

Token 689: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0031844829209148884
    2. '():
' → logprob: -5.7531843185424805
    3. ' ():' → logprob: -12.62818431854248
    4. '()' → logprob: -12.75318431854248
    5. '():
' → logprob: -14.50318431854248
    6. '():

' → logprob: -17.128185272216797
    7. '(' → logprob: -18.753185272216797
    8. '().' → logprob: -19.378185272216797
    9. '();' → logprob: -20.003185272216797
    10. ' ()' → logprob: -20.253185272216797

Token 690: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.011312591843307018
    2. '():
' → logprob: -4.511312484741211
    3. '()' → logprob: -8.761312484741211
    4. '   ' → logprob: -9.761312484741211
    5. ' ():' → logprob: -10.761312484741211
    6. 'def' → logprob: -11.386312484741211
    7. ':' → logprob: -11.511312484741211
    8. '):' → logprob: -12.261312484741211
    9. '():
' → logprob: -13.011312484741211
    10. 'return' → logprob: -15.136312484741211

Token 691: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -8.458980300929397e-05
    2. ' return' → logprob: -9.75008487701416
    3. '   ' → logprob: -10.75008487701416
    4. 'def' → logprob: -12.25008487701416
    5. '	return' → logprob: -18.125083923339844
    6. 'float' → logprob: -18.875083923339844
    7. ' ' → logprob: -19.625083923339844
    8. '
' → logprob: -20.375083923339844
    9. ':return' → logprob: -20.625083923339844
    10. ')return' → logprob: -21.625083923339844

Token 692: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00033558503491804004
    2. ' list' → logprob: -8.000335693359375
    3. 'map' → logprob: -16.125335693359375
    4. 'float' → logprob: -17.250335693359375
    5. '	list' → logprob: -21.750335693359375
    6. '[' → logprob: -21.875335693359375
    7. 'List' → logprob: -22.375335693359375
    8. 'f' → logprob: -22.625335693359375
    9. 'li' → logprob: -23.125335693359375
    10. '(list' → logprob: -23.750335693359375

Token 693: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -3.7697225252486533e-06
    2. ' float' → logprob: -12.500003814697266
    3. 'flo' → logprob: -18.000003814697266
    4. '	float' → logprob: -20.250003814697266
    5. '```' → logprob: -21.375003814697266
    6. '
' → logprob: -21.500003814697266
    7. '(float' → logprob: -21.625003814697266
    8. 'map' → logprob: -21.875003814697266
    9. '   ' → logprob: -22.250003814697266
    10. '=float' → logprob: -22.750003814697266

Token 694: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.1279553291387856e-05
    2. '(' → logprob: -11.625011444091797
    3. '(s' → logprob: -13.625011444091797
    4. '(sys' → logprob: -14.625011444091797
    5. ' (' → logprob: -14.750011444091797
    6. '(i' → logprob: -15.625011444091797
    7. 'x' → logprob: -17.000011444091797
    8. ']' → logprob: -18.000011444091797
    9. '(token' → logprob: -18.875011444091797
    10. '(y' → logprob: -18.875011444091797

Token 695: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.19259560108184814
    2. ')' → logprob: -2.0675954818725586
    3. 'for' → logprob: -3.3175954818725586
    4. ' for' → logprob: -4.442595481872559
    5. ',' → logprob: -8.067595481872559
    6. '(' → logprob: -9.317595481872559
    7. '())' → logprob: -9.567595481872559
    8. '(x' → logprob: -9.692595481872559
    9. 'sys' → logprob: -9.817595481872559
    10. '(sys' → logprob: -10.567595481872559

Token 696: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48016607761383057
    2. ' for' → logprob: -1.3551660776138306
    3. '()' → logprob: -2.105165958404541
    4. '().' → logprob: -7.105165958404541
    5. '(sys' → logprob: -8.4801664352417
    6. 'sys' → logprob: -8.7301664352417
    7. ')' → logprob: -9.1051664352417
    8. ' sys' → logprob: -9.3551664352417
    9. '.' → logprob: -9.8551664352417
    10. '.split' → logprob: -10.3551664352417

Token 697: ' x' (ID: 1215)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3425559997558594
    2. ' sys' → logprob: -1.3425559997558594
    3. 'x' → logprob: -3.5925559997558594
    4. ' x' → logprob: -6.842555999755859
    5. '(sys' → logprob: -8.59255599975586
    6. '=sys' → logprob: -9.96755599975586
    7. '_' → logprob: -11.34255599975586
    8. 'in' → logprob: -11.96755599975586
    9. '	sys' → logprob: -12.09255599975586
    10. ' in' → logprob: -12.09255599975586

Token 698: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08704347908496857
    2. 'in' → logprob: -2.587043523788452
    3. '(' → logprob: -5.462043285369873
    4. '(sys' → logprob: -5.712043285369873
    5. '=sys' → logprob: -7.962043285369873
    6. 'sys' → logprob: -9.462043762207031
    7. 'import' → logprob: -10.462043762207031
    8. '=' → logprob: -10.462043762207031
    9. '(x' → logprob: -10.712043762207031
    10. '()' → logprob: -10.837043762207031

Token 699: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.01815614476799965
    2. ' sys' → logprob: -4.018156051635742
    3. '(sys' → logprob: -12.018156051635742
    4. '	sys' → logprob: -16.393156051635742
    5. '=sys' → logprob: -16.893156051635742
    6. '.sys' → logprob: -17.893156051635742
    7. '/sys' → logprob: -19.518156051635742
    8. '
' → logprob: -19.518156051635742
    9. ' ' → logprob: -19.768156051635742
    10. 's' → logprob: -19.893156051635742

Token 700: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.03978857025504112
    2. '().' → logprob: -3.2897884845733643
    3. '.readline' → logprob: -6.914788722991943
    4. 'stdin' → logprob: -7.914788722991943
    5. '(stdin' → logprob: -8.164788246154785
    6. '.stdout' → logprob: -10.039788246154785
    7. 'sys' → logprob: -10.914788246154785
    8. '=sys' → logprob: -12.039788246154785
    9. '()' → logprob: -12.164788246154785
    10. 'd' → logprob: -12.289788246154785

Token 701: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.011055837385356426
    2. '().' → logprob: -4.511055946350098
    3. 'sys' → logprob: -12.511055946350098
    4. '()[' → logprob: -13.511055946350098
    5. '()' → logprob: -13.636055946350098
    6. 'read' → logprob: -13.886055946350098
    7. '(sys' → logprob: -15.386055946350098
    8. '.read' → logprob: -15.761055946350098
    9. '().__' → logprob: -15.761055946350098
    10. ' readline' → logprob: -15.761055946350098

Token 702: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9361264946837764e-07
    2. '()' → logprob: -16.375
    3. ' ().' → logprob: -19.0
    4. '.split' → logprob: -19.125
    5. '(' → logprob: -20.25
    6. '()].' → logprob: -20.875
    7. '()[' → logprob: -22.0
    8. '.' → logprob: -22.875
    9. '()
' → logprob: -22.875
    10. ' .' → logprob: -23.25

Token 703: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00014942926645744592
    2. 'strip' → logprob: -9.000149726867676
    3. 'read' → logprob: -11.000149726867676
    4. 'decode' → logprob: -12.125149726867676
    5. 'rstrip' → logprob: -12.625149726867676
    6. ' split' → logprob: -14.500149726867676
    7. '.split' → logprob: -16.62514877319336
    8. '(split' → logprob: -17.87514877319336
    9. '().' → logprob: -18.12514877319336
    10. 'spl' → logprob: -18.12514877319336

Token 704: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -4.127333340875339e-06
    2. '()' → logprob: -12.500003814697266
    3. '()]
' → logprob: -15.875003814697266
    4. ']' → logprob: -16.000003814697266
    5. '())' → logprob: -17.625003814697266
    6. ']()' → logprob: -17.750003814697266
    7. '(' → logprob: -19.500003814697266
    8. '()][' → logprob: -19.625003814697266
    9. '()].' → logprob: -19.875003814697266
    10. '()],' → logprob: -20.375003814697266

Token 705: ']

' (ID: 3144)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.003236417192965746
    2. ']' → logprob: -5.753236293792725
    3. ']()' → logprob: -10.253236770629883
    4. ')]' → logprob: -11.378236770629883
    5. '()' → logprob: -11.378236770629883
    6. '()]
' → logprob: -15.003236770629883
    7. ' ]' → logprob: -16.503236770629883
    8. '())' → logprob: -16.628236770629883
    9. '`]' → logprob: -17.378236770629883
    10. '[]' → logprob: -17.753236770629883

Token 706: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.14381691813468933
    2. 'def' → logprob: -2.0188169479370117
    3. '
' → logprob: -7.393816947937012
    4. '<|end|>' → logprob: -8.393816947937012
    5. '```' → logprob: -8.768816947937012
    6. 'import' → logprob: -10.143816947937012
    7. '<|end|>' → logprob: -10.518816947937012
    8. '\' → logprob: -10.893816947937012
    9. '  
' → logprob: -11.768816947937012
    10. '

' → logprob: -11.893816947937012

Token 707: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00022117885237094015
    2. '#' → logprob: -10.000221252441406
    3. 'LF' → logprob: -10.125221252441406
    4. 'import' → logprob: -10.625221252441406
    5. 'input' → logprob: -11.250221252441406
    6. 'from' → logprob: -11.375221252441406
    7. 'S' → logprob: -11.375221252441406
    8. 'I' → logprob: -11.625221252441406
    9. 'D' → logprob: -11.625221252441406
    10. 'LS' → logprob: -11.875221252441406

Token 708: ' qui' (ID: 2780)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0014178573619574308
    2. '#' → logprob: -6.876417636871338
    3. '()' → logprob: -8.251418113708496
    4. ' def' → logprob: -9.501418113708496
    5. '()
' → logprob: -11.126418113708496
    6. ' that' → logprob: -11.251418113708496
    7. 'that' → logprob: -12.751418113708496
    8. '():
' → logprob: -13.001418113708496
    9. '=' → logprob: -13.251418113708496
    10. '(
' → logprob: -13.376418113708496

Token 709: ' lit' (ID: 11980)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21372060477733612
    2. 'reads' → logprob: -2.7137205600738525
    3. 'S' → logprob: -3.5887205600738525
    4. ' def' → logprob: -3.8387205600738525
    5. 's' → logprob: -4.088720798492432
    6. ' reads' → logprob: -4.213720798492432
    7. 'input' → logprob: -5.088720798492432
    8. 'LS' → logprob: -5.088720798492432
    9. 'read' → logprob: -5.213720798492432
    10. 'returns' → logprob: -5.338720798492432

Token 710: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.27855053544044495
    2. 'une' → logprob: -2.278550624847412
    3. 'a' → logprob: -2.778550624847412
    4. ' une' → logprob: -3.403550624847412
    5. '<|end|>' → logprob: -3.653550624847412
    6. 'un' → logprob: -5.403550624847412
    7. 'def' → logprob: -5.653550624847412
    8. 'des' → logprob: -6.153550624847412
    9. 'la' → logprob: -6.528550624847412
    10. '#' → logprob: -6.653550624847412

Token 711: ' ligne' (ID: 19583)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.24648801982402802
    2. 'ligne' → logprob: -1.7464879751205444
    3. 'string' → logprob: -4.371488094329834
    4. ' line' → logprob: -4.871488094329834
    5. 'str' → logprob: -4.996488094329834
    6. 'l' → logprob: -5.246488094329834
    7. ' ligne' → logprob: -5.621488094329834
    8. 'chaine' → logprob: -6.246488094329834
    9. '()' → logprob: -6.621488094329834
    10. 's' → logprob: -6.996488094329834

Token 712: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04469984769821167
    2. 'def' → logprob: -4.544699668884277
    3. '().' → logprob: -4.669699668884277
    4. ' =' → logprob: -5.169699668884277
    5. '()[' → logprob: -5.419699668884277
    6. '#' → logprob: -5.794699668884277
    7. '=' → logprob: -6.044699668884277
    8. '<|end|>' → logprob: -6.169699668884277
    9. '[]' → logprob: -6.669699668884277
    10. '<|end|>' → logprob: -6.919699668884277

Token 713: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3577025830745697
    2. 'l' → logprob: -1.232702612876892
    3. '(sys' → logprob: -5.232702732086182
    4. '=sys' → logprob: -6.607702732086182
    5. ' sys' → logprob: -6.982702732086182
    6. ' l' → logprob: -7.482702732086182
    7. '()' → logprob: -8.107702255249023
    8. 'la' → logprob: -8.607702255249023
    9. '#' → logprob: -9.107702255249023
    10. 'input' → logprob: -9.232702255249023

Token 714: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.9431768655776978
    2. '=sys' → logprob: -1.0681768655776978
    3. 'input' → logprob: -2.443176746368408
    4. 'sys' → logprob: -3.068176746368408
    5. 'stdin' → logprob: -3.568176746368408
    6. '(stdin' → logprob: -3.818176746368408
    7. '_input' → logprob: -3.818176746368408
    8. 'entrée' → logprob: -3.943176746368408
    9. '(sys' → logprob: -4.068176746368408
    10. '_sys' → logprob: -4.943176746368408

Token 715: ' standard' (ID: 7024)
  Prédit: 'standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'standard' → logprob: -0.2978960871696472
    2. 'sys' → logprob: -2.297896146774292
    3. '()' → logprob: -2.797896146774292
    4. '=sys' → logprob: -2.797896146774292
    5. '(sys' → logprob: -3.797896146774292
    6. ' standard' → logprob: -5.922895908355713
    7. '#' → logprob: -6.172895908355713
    8. '().' → logprob: -6.297895908355713
    9. 'def' → logprob: -6.922895908355713
    10. '=' → logprob: -7.172895908355713

Token 716: ' et' (ID: 859)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.32972875237464905
    2. 'def' → logprob: -1.5797287225723267
    3. '()' → logprob: -3.079728841781616
    4. '():
' → logprob: -3.704728841781616
    5. ':' → logprob: -6.329728603363037
    6. '().' → logprob: -6.454728603363037
    7. '#' → logprob: -8.454729080200195
    8. ' =' → logprob: -8.704729080200195
    9. '=' → logprob: -8.829729080200195
    10. '()
' → logprob: -9.454729080200195

Token 717: ' la' (ID: 557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7890109419822693
    2. ' retourne' → logprob: -1.164011001586914
    3. 'ret' → logprob: -1.789011001586914
    4. ' return' → logprob: -3.664011001586914
    5. 'rstrip' → logprob: -4.289011001586914
    6. 'ren' → logprob: -4.289011001586914
    7. ' ren' → logprob: -5.914011001586914
    8. 'strip' → logprob: -6.039011001586914
    9. 'int' → logprob: -6.414011001586914
    10. 'r' → logprob: -6.664011001586914

Token 718: ' coupe' (ID: 71780)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.5886327624320984
    2. 'rstrip' → logprob: -0.8386327624320984
    3. 'returns' → logprob: -5.338632583618164
    4. 'str' → logprob: -6.588632583618164
    5. 'return' → logprob: -6.588632583618164
    6. 's' → logprob: -6.713632583618164
    7. ' returns' → logprob: -7.088632583618164
    8. 'r' → logprob: -7.088632583618164
    9. '.strip' → logprob: -7.463632583618164
    10. 'def' → logprob: -8.338632583618164

Token 719: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7460281252861023
    2. ' en' → logprob: -1.496028184890747
    3. 'en' → logprob: -1.871028184890747
    4. 'def' → logprob: -2.621028184890747
    5. '[]' → logprob: -3.746028184890747
    6. '<|end|>' → logprob: -4.371027946472168
    7. ' =' → logprob: -4.621027946472168
    8. '   ' → logprob: -4.621027946472168
    9. '().' → logprob: -5.746027946472168
    10. '#' → logprob: -6.246027946472168

Token 720: ' morceaux' (ID: 133321)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.9530344009399414
    2. 'tokens' → logprob: -1.0780344009399414
    3. 'm' → logprob: -2.0780344009399414
    4. ' morceaux' → logprob: -2.9530344009399414
    5. 'pieces' → logprob: -3.4530344009399414
    6. 'parts' → logprob: -3.5780344009399414
    7. 'chunks' → logprob: -4.828034400939941
    8. 'string' → logprob: -4.828034400939941
    9. 'str' → logprob: -4.953034400939941
    10. 'chars' → logprob: -5.578034400939941

Token 721: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03507281467318535
    2. '()' → logprob: -3.7850728034973145
    3. '():' → logprob: -4.7850728034973145
    4. '#' → logprob: -6.6600728034973145
    5. '():
' → logprob: -7.5350728034973145
    6. ':' → logprob: -7.7850728034973145
    7. '().' → logprob: -8.035073280334473
    8. '()
' → logprob: -8.410073280334473
    9. ',' → logprob: -8.660073280334473
    10. '=' → logprob: -8.910073280334473

Token 722: 'sur' (ID: 26617)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00048179292934946716
    2. ' def' → logprob: -8.375481605529785
    3. 'return' → logprob: -8.500481605529785
    4. '   ' → logprob: -10.375481605529785
    5. ')' → logprob: -12.250481605529785
    6. ' return' → logprob: -12.375481605529785
    7. 'str' → logprob: -12.625481605529785
    8. '#' → logprob: -12.750481605529785
    9. '```' → logprob: -14.875481605529785
    10. '[]' → logprob: -15.000481605529785

Token 723: ' les' (ID: 1341)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8160508275032043
    2. ' espace' → logprob: -2.1910507678985596
    3. ' espaces' → logprob: -2.1910507678985596
    4. 'esp' → logprob: -2.4410507678985596
    5. ' )' → logprob: -2.8160507678985596
    6. ''espace' → logprob: -3.5660507678985596
    7. ')' → logprob: -3.8160507678985596
    8. '"' → logprob: -3.8160507678985596
    9. ' ' → logprob: -4.191051006317139
    10. 'space' → logprob: -4.191051006317139

Token 724: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.14893531799316406
    2. ' espaces' → logprob: -3.023935317993164
    3. '\n' → logprob: -3.273935317993164
    4. ' \' → logprob: -3.398935317993164
    5. 'spaces' → logprob: -5.398935317993164
    6. '"\' → logprob: -5.398935317993164
    7. '\' → logprob: -6.273935317993164
    8. 'return' → logprob: -6.398935317993164
    9. ''\' → logprob: -6.773935317993164
    10. 'es' → logprob: -7.273935317993164

Token 725: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026529952883720398
    2. 'def' → logprob: -4.651529788970947
    3. ')
' → logprob: -4.776529788970947
    4. ',' → logprob: -5.401529788970947
    5. '   ' → logprob: -6.901529788970947
    6. '()' → logprob: -7.151529788970947
    7. '):
' → logprob: -7.651529788970947
    8. ').' → logprob: -7.901529788970947
    9. '())' → logprob: -8.276530265808105
    10. '()
' → logprob: -8.901530265808105

Token 726: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. ' def' → logprob: -16.375
    3. 'd' → logprob: -20.125
    4. 'de' → logprob: -20.625
    5. '```' → logprob: -20.75
    6. '
' → logprob: -21.0
    7. '	def' → logprob: -21.625
    8. '#' → logprob: -22.25
    9. '  
' → logprob: -22.375
    10. '    
' → logprob: -22.5

Token 727: ' LS' (ID: 60790)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.0403417348861694
    2. 'S' → logprob: -1.0403417348861694
    3. 'LS' → logprob: -1.5403417348861694
    4. 'I' → logprob: -3.290341854095459
    5. 'input' → logprob: -3.290341854095459
    6. 'LI' → logprob: -6.165341854095459
    7. 'SS' → logprob: -7.540341854095459
    8. 'IS' → logprob: -8.1653413772583
    9. 'IN' → logprob: -8.7903413772583
    10. 'l' → logprob: -8.7903413772583

Token 728: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00036667886888608336
    2. '():
' → logprob: -8.0003662109375
    3. '()' → logprob: -10.5003662109375
    4. ' ():' → logprob: -12.6253662109375
    5. '():
' → logprob: -14.7503662109375
    6. '():

' → logprob: -16.8753662109375
    7. 'def' → logprob: -18.5003662109375
    8. ' ()' → logprob: -19.3753662109375
    9. '().' → logprob: -19.3753662109375
    10. '(' → logprob: -19.5003662109375

Token 729: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2842981517314911
    2. '():
' → logprob: -2.0342981815338135
    3. 'def' → logprob: -2.1592981815338135
    4. '()' → logprob: -7.159297943115234
    5. '   ' → logprob: -7.909297943115234
    6. ':' → logprob: -9.409297943115234
    7. ':
' → logprob: -11.159297943115234
    8. '():
' → logprob: -11.409297943115234
    9. 'return' → logprob: -11.784297943115234
    10. ' def' → logprob: -11.909297943115234

Token 730: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.023599492385983467
    2. 'def' → logprob: -3.77359938621521
    3. ' return' → logprob: -8.523599624633789
    4. '   ' → logprob: -8.773599624633789
    5. 'sys' → logprob: -15.273599624633789
    6. '	return' → logprob: -15.648599624633789
    7. ' def' → logprob: -18.14859962463379
    8. '```' → logprob: -18.27359962463379
    9. '  ' → logprob: -20.52359962463379
    10. 'import' → logprob: -20.89859962463379

Token 731: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0007119550718925893
    2. ' sys' → logprob: -7.250711917877197
    3. 'list' → logprob: -13.250712394714355
    4. '(sys' → logprob: -15.000712394714355
    5. '	sys' → logprob: -19.25071144104004
    6. ' list' → logprob: -20.00071144104004
    7. '=sys' → logprob: -20.00071144104004
    8. 'input' → logprob: -21.12571144104004
    9. '.sys' → logprob: -21.75071144104004
    10. '[' → logprob: -22.37571144104004

Token 732: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00026634239475242794
    2. '.stdout' → logprob: -8.250266075134277
    3. '.' → logprob: -12.500266075134277
    4. '.argv' → logprob: -14.500266075134277
    5. '.std' → logprob: -14.750266075134277
    6. 'stdin' → logprob: -14.875266075134277
    7. '.readline' → logprob: -16.625267028808594
    8. '.stderr' → logprob: -17.500267028808594
    9. '(stdin' → logprob: -19.250267028808594
    10. '.st' → logprob: -19.875267028808594

Token 733: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00012439649435691535
    2. '.stdin' → logprob: -9.000123977661133
    3. '.stdout' → logprob: -14.500123977661133
    4. 'stdin' → logprob: -15.000123977661133
    5. '.' → logprob: -16.125123977661133
    6. 'stdout' → logprob: -18.875123977661133
    7. ' readline' → logprob: -19.125123977661133
    8. '.readlines' → logprob: -19.625123977661133
    9. '(stdin' → logprob: -20.000123977661133
    10. '().' → logprob: -20.000123977661133

Token 734: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.4121114822482923e-06
    2. '()' → logprob: -12.625003814697266
    3. ' ().' → logprob: -18.125003814697266
    4. '(' → logprob: -19.250003814697266
    5. '.strip' → logprob: -19.875003814697266
    6. '.' → logprob: -20.500003814697266
    7. '("").' → logprob: -21.875003814697266
    8. '.rstrip' → logprob: -22.750003814697266
    9. '[:-' → logprob: -23.125003814697266
    10. '('').' → logprob: -23.250003814697266

Token 735: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.20158018171787262
    2. 'rstrip' → logprob: -1.7015801668167114
    3. 'split' → logprob: -8.701580047607422
    4. 'str' → logprob: -15.826580047607422
    5. 'decode' → logprob: -15.951580047607422
    6. 'rs' → logprob: -16.076580047607422
    7. 'read' → logprob: -16.326580047607422
    8. ' strip' → logprob: -16.326580047607422
    9. '.rstrip' → logprob: -18.451580047607422
    10. 'rst' → logprob: -19.701580047607422

Token 736: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.4021237802808173e-05
    2. '()
' → logprob: -12.125014305114746
    3. '()\' → logprob: -12.250014305114746
    4. '(' → logprob: -13.375014305114746
    5. '()]' → logprob: -14.125014305114746
    6. '()

' → logprob: -14.250014305114746
    7. '()[' → logprob: -15.125014305114746
    8. '()`' → logprob: -15.875014305114746
    9. ' ()' → logprob: -16.25001335144043
    10. '().' → logprob: -16.25001335144043

Token 737: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.44334059953689575
    2. '#' → logprob: -1.068340539932251
    3. '
' → logprob: -4.94334077835083
    4. 'class' → logprob: -5.31834077835083
    5. 'import' → logprob: -6.69334077835083
    6. '\' → logprob: -7.81834077835083
    7. '\n' → logprob: -8.193340301513672
    8. '<|end|>' → logprob: -8.818340301513672
    9. '<|end|>' → logprob: -9.443340301513672
    10. '  
' → logprob: -9.443340301513672

Token 738: ' Avant' (ID: 88245)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003994103986769915
    2. '#' → logprob: -5.878993988037109
    3. 'class' → logprob: -7.878993988037109
    4. 'from' → logprob: -7.878993988037109
    5. 'input' → logprob: -8.75399398803711
    6. 'import' → logprob: -9.00399398803711
    7. 'D' → logprob: -9.87899398803711
    8. 'print' → logprob: -10.50399398803711
    9. 'S' → logprob: -11.00399398803711
    10. 'd' → logprob: -11.75399398803711

Token 739: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06134900450706482
    2. ':' → logprob: -2.9363489151000977
    3. '#' → logprob: -5.936348915100098
    4. ' =' → logprob: -7.186348915100098
    5. '=' → logprob: -7.686348915100098
    6. '()' → logprob: -7.936348915100098
    7. 'import' → logprob: -7.936348915100098
    8. '_' → logprob: -8.061348915100098
    9. 'de' → logprob: -8.561348915100098
    10. '():' → logprob: -8.561348915100098

Token 740: ''utiliser' (ID: 133355)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3656478822231293
    2. 'fin' → logprob: -1.8656479120254517
    3. '#' → logprob: -3.240647792816162
    4. 'r' → logprob: -3.490647792816162
    5. 'crire' → logprob: -4.115647792816162
    6. 'import' → logprob: -4.740647792816162
    7. 'main' → logprob: -4.865647792816162
    8. 'print' → logprob: -4.990647792816162
    9. 'f' → logprob: -5.240647792816162
    10. 'e' → logprob: -5.615647792816162

Token 741: ' "' (ID: 392)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04626783728599548
    2. '#' → logprob: -4.171267986297607
    3. 'sys' → logprob: -4.296267986297607
    4. 'print' → logprob: -4.671267986297607
    5. 'input' → logprob: -6.046267986297607
    6. 'class' → logprob: -7.421267986297607
    7. 'for' → logprob: -7.421267986297607
    8. '[]' → logprob: -7.546267986297607
    9. 'int' → logprob: -7.796267986297607
    10. 'import' → logprob: -8.04626750946045

Token 742: 'I' (ID: 40)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8621730208396912
    2. 'def' → logprob: -0.9871730208396912
    3. 'sys' → logprob: -2.237173080444336
    4. 'int' → logprob: -3.237173080444336
    5. 'print' → logprob: -3.487173080444336
    6. '#' → logprob: -4.862173080444336
    7. 'main' → logprob: -5.112173080444336
    8. 'map' → logprob: -5.362173080444336
    9. 'list' → logprob: -6.237173080444336
    10. 'range' → logprob: -6.737173080444336

Token 743: '",' (ID: 672)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.9023186564445496
    2. 'n' → logprob: -0.9023186564445496
    3. '()' → logprob: -2.6523187160491943
    4. 'nt' → logprob: -2.9023187160491943
    5. '()"' → logprob: -2.9023187160491943
    6. 'nit' → logprob: -6.402318477630615
    7. '"' → logprob: -6.402318477630615
    8. 'NT' → logprob: -7.152318477630615
    9. '():' → logprob: -7.527318477630615
    10. 'ndef' → logprob: -7.527318477630615

Token 744: ' on' (ID: 402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00022833107504993677
    2. '#' → logprob: -8.625227928161621
    3. ' def' → logprob: -10.750227928161621
    4. '
' → logprob: -10.750227928161621
    5. 'I' → logprob: -13.250227928161621
    6. '  
' → logprob: -13.875227928161621
    7. 'de' → logprob: -14.125227928161621
    8. '```' → logprob: -14.500227928161621
    9. ' 
' → logprob: -14.750227928161621
    10. '
' → logprob: -15.250227928161621

Token 745: ' lit' (ID: 11980)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.457622766494751
    2. 'def' → logprob: -1.707622766494751
    3. 'n' → logprob: -2.082622766494751
    4. 'mp' → logprob: -3.582622766494751
    5. 'ndef' → logprob: -3.707622766494751
    6. '#' → logprob: -5.957622528076172
    7. 'import' → logprob: -6.332622528076172
    8. ' =' → logprob: -6.582622528076172
    9. 'nt' → logprob: -6.832622528076172
    10. '=' → logprob: -6.832622528076172

Token 746: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9770087003707886
    2. 'def' → logprob: -1.3520087003707886
    3. 'nt' → logprob: -1.6020087003707886
    4. ' =' → logprob: -2.102008819580078
    5. 'n' → logprob: -3.727008819580078
    6. 'une' → logprob: -5.602008819580078
    7. '=' → logprob: -5.602008819580078
    8. 'ndef' → logprob: -6.227008819580078
    9. 'int' → logprob: -6.977008819580078
    10. 'l' → logprob: -7.102008819580078

Token 747: ' ligne' (ID: 19583)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.067185878753662
    2. 'ligne' → logprob: -1.567185878753662
    3. 'nt' → logprob: -1.817185878753662
    4. ' =' → logprob: -2.442185878753662
    5. '=' → logprob: -2.442185878753662
    6. '()' → logprob: -3.067185878753662
    7. 'def' → logprob: -4.067185878753662
    8. 'l' → logprob: -4.442185878753662
    9. 'int' → logprob: -4.692185878753662
    10. '#' → logprob: -5.692185878753662

Token 748: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03670741990208626
    2. 'def' → logprob: -3.4117074012756348
    3. '()
' → logprob: -5.911707401275635
    4. '()

' → logprob: -9.036707878112793
    5. '=' → logprob: -9.411707878112793
    6. ' =' → logprob: -9.786707878112793
    7. 'n' → logprob: -10.411707878112793
    8. '().' → logprob: -11.536707878112793
    9. 'nt' → logprob: -11.786707878112793
    10. '()`' → logprob: -11.786707878112793

Token 749: ' puis' (ID: 18766)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000591278774663806
    2. '
' → logprob: -8.250591278076172
    3. 'int' → logprob: -8.750591278076172
    4. 'I' → logprob: -9.250591278076172
    5. ' def' → logprob: -10.375591278076172
    6. '#' → logprob: -11.375591278076172
    7. 'lambda' → logprob: -11.875591278076172
    8. 'sys' → logprob: -12.000591278076172
    9. 'return' → logprob: -12.875591278076172
    10. 'then' → logprob: -12.875591278076172

Token 750: ' on' (ID: 402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005588700296357274
    2. 'int' → logprob: -7.625558853149414
    3. 'I' → logprob: -10.375558853149414
    4. '
' → logprob: -10.875558853149414
    5. ' def' → logprob: -11.125558853149414
    6. 'dé' → logprob: -14.125558853149414
    7. '```' → logprob: -14.500558853149414
    8. 'n' → logprob: -14.625558853149414
    9. 'lambda' → logprob: -14.875558853149414
    10. '=int' → logprob: -14.875558853149414

Token 751: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32467925548553467
    2. 'n' → logprob: -1.8246792554855347
    3. 'nt' → logprob: -2.449679374694824
    4. ' =' → logprob: -4.824679374694824
    5. 'ndef' → logprob: -5.074679374694824
    6. 'int' → logprob: -5.199679374694824
    7. '=' → logprob: -5.949679374694824
    8. 'I' → logprob: -6.199679374694824
    9. '=int' → logprob: -6.949679374694824
    10. 'return' → logprob: -7.574679374694824

Token 752: ' convert' (ID: 8452)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33265194296836853
    2. 'n' → logprob: -2.0826518535614014
    3. 'nt' → logprob: -2.4576518535614014
    4. '=' → logprob: -3.8326518535614014
    5. 'int' → logprob: -3.8326518535614014
    6. '=int' → logprob: -4.8326520919799805
    7. 'return' → logprob: -4.9576520919799805
    8. ' =' → logprob: -5.5826520919799805
    9. 'ndef' → logprob: -6.0826520919799805
    10. '#' → logprob: -6.4576520919799805

Token 753: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.00010068230039905757
    2. 't' → logprob: -9.250101089477539
    3. 'i' → logprob: -12.500101089477539
    4. 'et' → logprob: -15.500101089477539
    5. 'def' → logprob: -15.750101089477539
    6. 'e' → logprob: -16.25010108947754
    7. 'ît' → logprob: -16.50010108947754
    8. ' it' → logprob: -16.50010108947754
    9. '
' → logprob: -17.12510108947754
    10. 'It' → logprob: -17.25010108947754

Token 754: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40403372049331665
    2. '()' → logprob: -1.1540336608886719
    3. 'en' → logprob: -4.654033660888672
    4. 'int' → logprob: -5.404033660888672
    5. '()
' → logprob: -6.779033660888672
    6. ' =' → logprob: -7.654033660888672
    7. '```' → logprob: -7.779033660888672
    8. '=' → logprob: -8.404033660888672
    9. ' en' → logprob: -8.529033660888672
    10. ' def' → logprob: -9.154033660888672

Token 755: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0003673940955195576
    2. 'ent' → logprob: -8.625367164611816
    3. ' int' → logprob: -8.750367164611816
    4. 'integer' → logprob: -11.375367164611816
    5. '=int' → logprob: -12.125367164611816
    6. ' entier' → logprob: -12.625367164611816
    7. '[int' → logprob: -12.750367164611816
    8. 'l' → logprob: -13.250367164611816
    9. 'n' → logprob: -13.375367164611816
    10. '<int' → logprob: -14.625367164611816

Token 756: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1160349458805285e-05
    2. 'I' → logprob: -11.500011444091797
    3. '
' → logprob: -14.750011444091797
    4. ' def' → logprob: -14.875011444091797
    5. 'de' → logprob: -16.250011444091797
    6. '=' → logprob: -17.125011444091797
    7. ' =' → logprob: -17.500011444091797
    8. '  
' → logprob: -17.500011444091797
    9. 'd' → logprob: -17.750011444091797
    10. '```' → logprob: -17.875011444091797

Token 757: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3425219549390022e-05
    2. 'I' → logprob: -11.25001335144043
    3. '```' → logprob: -15.50001335144043
    4. ' def' → logprob: -15.87501335144043
    5. '
' → logprob: -18.75001335144043
    6. '  
' → logprob: -19.12501335144043
    7. '``' → logprob: -19.12501335144043
    8. ' 
' → logprob: -20.87501335144043
    9. '\' → logprob: -21.25001335144043
    10. '`' → logprob: -21.25001335144043

Token 758: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0549076683819294
    2. ' I' → logprob: -2.9299075603485107
    3. 'int' → logprob: -11.05490779876709
    4. 'input' → logprob: -12.30490779876709
    5. 'def' → logprob: -12.80490779876709
    6. ' input' → logprob: -13.67990779876709
    7. '
' → logprob: -14.92990779876709
    8. ' int' → logprob: -15.17990779876709
    9. ' ' → logprob: -15.80490779876709
    10. '_I' → logprob: -15.92990779876709

Token 759: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0011445031268522143
    2. '()' → logprob: -7.2511444091796875
    3. '():
' → logprob: -7.7511444091796875
    4. ' ():' → logprob: -12.501144409179688
    5. '():
' → logprob: -15.501144409179688
    6. '(' → logprob: -15.626144409179688
    7. 'n' → logprob: -16.251144409179688
    8. ' ()' → logprob: -16.626144409179688
    9. 'nt' → logprob: -16.751144409179688
    10. '():

' → logprob: -17.501144409179688

Token 760: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16519805788993835
    2. ' return' → logprob: -2.5401980876922607
    3. '   ' → logprob: -2.6651980876922607
    4. '()' → logprob: -5.915197849273682
    5. '():' → logprob: -7.290197849273682
    6. ':return' → logprob: -8.79019832611084
    7. ':' → logprob: -9.79019832611084
    8. 'int' → logprob: -10.16519832611084
    9. '(' → logprob: -10.16519832611084
    10. '	return' → logprob: -10.66519832611084

Token 761: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -9.996708104154095e-05
    2. ' return' → logprob: -9.250100135803223
    3. '   ' → logprob: -12.500100135803223
    4. 'int' → logprob: -17.250099182128906
    5. '    
' → logprob: -18.000099182128906
    6. '	return' → logprob: -18.875099182128906
    7. 'ret' → logprob: -19.000099182128906
    8. '
' → logprob: -19.250099182128906
    9. 'try' → logprob: -20.750099182128906
    10. '  ' → logprob: -21.000099182128906

Token 762: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007099286303855479
    2. ' int' → logprob: -7.2507100105285645
    3. '(int' → logprob: -19.625709533691406
    4. '	int' → logprob: -19.750709533691406
    5. '[int' → logprob: -20.375709533691406
    6. '   ' → logprob: -21.875709533691406
    7. '=int' → logprob: -22.750709533691406
    8. '<int' → logprob: -22.750709533691406
    9. ' ' → logprob: -23.375709533691406
    10. ' ' → logprob: -23.750709533691406

Token 763: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -8.113290095934644e-05
    2. '(' → logprob: -9.500081062316895
    3. 'sys' → logprob: -12.000081062316895
    4. ' sys' → logprob: -17.12508201599121
    5. '=sys' → logprob: -17.62508201599121
    6. '(input' → logprob: -17.75008201599121
    7. '(Sys' → logprob: -18.75008201599121
    8. '	sys' → logprob: -19.37508201599121
    9. '(
' → logprob: -20.75008201599121
    10. '(system' → logprob: -20.75008201599121

Token 764: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.2352385965641588e-05
    2. '.stdout' → logprob: -12.250012397766113
    3. '.' → logprob: -12.375012397766113
    4. 'stdin' → logprob: -13.375012397766113
    5. '.std' → logprob: -13.875012397766113
    6. '.readline' → logprob: -14.875012397766113
    7. '.argv' → logprob: -15.375012397766113
    8. '(stdin' → logprob: -15.625012397766113
    9. ' .' → logprob: -16.375011444091797
    10. ' stdin' → logprob: -16.500011444091797

Token 765: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.029536394402384758
    2. '.stdin' → logprob: -3.654536485671997
    3. '().' → logprob: -6.154536247253418
    4. 'stdin' → logprob: -6.904536247253418
    5. '(stdin' → logprob: -9.529536247253418
    6. '()' → logprob: -11.779536247253418
    7. 'line' → logprob: -12.029536247253418
    8. '.read' → logprob: -12.154536247253418
    9. 'input' → logprob: -13.029536247253418
    10. '.' → logprob: -13.529536247253418

Token 766: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011851104907691479
    2. '().' → logprob: -4.5118513107299805
    3. '()' → logprob: -7.1368513107299805
    4. ' ())' → logprob: -12.13685131072998
    5. ')' → logprob: -14.01185131072998
    6. '())
' → logprob: -14.38685131072998
    7. '();)' → logprob: -14.51185131072998
    8. '())

' → logprob: -15.63685131072998
    9. '(' → logprob: -16.511850357055664
    10. '()))' → logprob: -16.511850357055664

Token 767: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07766939699649811
    2. '#' → logprob: -3.077669382095337
    3. '<|end|>' → logprob: -3.952669382095337
    4. 'def' → logprob: -5.202669620513916
    5. '

' → logprob: -6.452669620513916
    6. '\n' → logprob: -7.077669620513916
    7. '<|end|>' → logprob: -7.952669620513916
    8. '  
' → logprob: -8.202669143676758
    9. ' 
' → logprob: -8.577669143676758
    10. '' → logprob: -8.952669143676758

Token 768: ' Pare' (ID: 62462)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07979362457990646
    2. '#' → logprob: -2.579793691635132
    3. 'class' → logprob: -7.829793453216553
    4. 'import' → logprob: -8.204793930053711
    5. 'from' → logprob: -8.704793930053711
    6. '@' → logprob: -11.954793930053711
    7. '  
' → logprob: -12.079793930053711
    8. 'print' → logprob: -12.329793930053711
    9. '\' → logprob: -12.454793930053711
    10. '"""' → logprob: -12.579793930053711

Token 769: 'il' (ID: 311)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8629146814346313
    2. 'def' → logprob: -1.4879146814346313
    3. 'nt' → logprob: -1.6129146814346313
    4. 'r' → logprob: -2.237914562225342
    5. 'f' → logprob: -3.987914562225342
    6. 'st' → logprob: -4.487914562225342
    7. 'd' → logprob: -5.862914562225342
    8. '#' → logprob: -6.112914562225342
    9. 'ss' → logprob: -6.487914562225342
    10. 'nd' → logprob: -6.737914562225342

Token 770: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005787769798189402
    2. 'def' → logprob: -5.7557878494262695
    3. '(' → logprob: -6.2557878494262695
    4. '()
' → logprob: -8.00578784942627
    5. '#' → logprob: -8.38078784942627
    6. '()

' → logprob: -10.50578784942627
    7. '(
' → logprob: -10.88078784942627
    8. '()\' → logprob: -11.38078784942627
    9. ')' → logprob: -11.63078784942627
    10. ' ()' → logprob: -11.88078784942627

Token 771: ' mais' (ID: 2899)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.096126576769166e-05
    2. '#' → logprob: -10.625041007995605
    3. ' def' → logprob: -11.750041007995605
    4. 'int' → logprob: -13.250041007995605
    5. '
' → logprob: -13.625041007995605
    6. 'D' → logprob: -13.750041007995605
    7. 'd' → logprob: -14.125041007995605
    8. 'S' → logprob: -14.250041007995605
    9. 'N' → logprob: -14.625041007995605
    10. '```' → logprob: -15.125041007995605

Token 772: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0009579126490280032
    2. '#' → logprob: -7.12595796585083
    3. ' def' → logprob: -9.625957489013672
    4. 'int' → logprob: -10.500957489013672
    5. 'for' → logprob: -10.750957489013672
    6. '
' → logprob: -11.125957489013672
    7. 'sys' → logprob: -11.500957489013672
    8. 'lambda' → logprob: -12.000957489013672
    9. 'float' → logprob: -13.875957489013672
    10. 'import' → logprob: -13.875957489013672

Token 773: ' un' (ID: 537)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07238985598087311
    2. 'S' → logprob: -3.947389841079712
    3. 'F' → logprob: -4.322390079498291
    4. 'Q' → logprob: -4.822390079498291
    5. 'float' → logprob: -4.947390079498291
    6. 'sys' → logprob: -5.197390079498291
    7. 'M' → logprob: -5.447390079498291
    8. 'L' → logprob: -5.947390079498291
    9. 'int' → logprob: -6.072390079498291
    10. 's' → logprob: -6.447390079498291

Token 774: ' nombre' (ID: 9733)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24641871452331543
    2. 'S' → logprob: -2.4964187145233154
    3. 's' → logprob: -2.7464187145233154
    4. 'L' → logprob: -3.6214187145233154
    5. 'M' → logprob: -3.7464187145233154
    6. 'F' → logprob: -4.8714189529418945
    7. 'D' → logprob: -5.6214189529418945
    8. 'N' → logprob: -5.7464189529418945
    9. 'Q' → logprob: -6.3714189529418945
    10. 'n' → logprob: -6.9964189529418945

Token 775: ' flott' (ID: 108700)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21637636423110962
    2. '()' → logprob: -1.9663763046264648
    3. 's' → logprob: -3.341376304626465
    4. 'de' → logprob: -5.091376304626465
    5. ' =' → logprob: -5.966376304626465
    6. '=' → logprob: -6.341376304626465
    7. 'd' → logprob: -6.591376304626465
    8. 'a' → logprob: -6.716376304626465
    9. 'à' → logprob: -6.966376304626465
    10. '_' → logprob: -7.091376304626465

Token 776: 'ant' (ID: 493)
  Prédit: 'loat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'loat' → logprob: -0.0047959499061107635
    2. 'def' → logprob: -6.254796028137207
    3. '()' → logprob: -6.504796028137207
    4. 'oint' → logprob: -8.004796028137207
    5. 'o' → logprob: -8.129796028137207
    6. 'loating' → logprob: -8.254796028137207
    7. 'lo' → logprob: -8.879796028137207
    8. 'LOAT' → logprob: -8.879796028137207
    9. '=float' → logprob: -10.004796028137207
    10. '```' → logprob: -10.504796028137207

Token 777: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.173704271830502e-06
    2. ' def' → logprob: -13.25000286102295
    3. '()' → logprob: -14.25000286102295
    4. '()
' → logprob: -15.37500286102295
    5. 'd' → logprob: -15.75000286102295
    6. 'F' → logprob: -15.75000286102295
    7. 'f' → logprob: -16.500003814697266
    8. '(
' → logprob: -17.375003814697266
    9. '(' → logprob: -18.125003814697266
    10. 'D' → logprob: -18.500003814697266

Token 778: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00026217024424113333
    2. 'F' → logprob: -8.250262260437012
    3. ' def' → logprob: -14.250262260437012
    4. 'D' → logprob: -16.000261306762695
    5. '
' → logprob: -17.000261306762695
    6. '```' → logprob: -17.125261306762695
    7. '#' → logprob: -18.125261306762695
    8. 'f' → logprob: -19.000261306762695
    9. '	def' → logprob: -19.375261306762695
    10. 'd' → logprob: -19.750261306762695

Token 779: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -1.7432603272027336e-06
    2. ' F' → logprob: -13.625001907348633
    3. 'IF' → logprob: -15.500001907348633
    4. 'FD' → logprob: -15.625001907348633
    5. 'f' → logprob: -16.875001907348633
    6. 'D' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.000001907348633
    8. 'LF' → logprob: -18.125001907348633
    9. '_F' → logprob: -18.250001907348633
    10. 'FF' → logprob: -18.625001907348633

Token 780: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00010831133840838447
    2. '():
' → logprob: -9.25010871887207
    3. '()' → logprob: -11.37510871887207
    4. '():
' → logprob: -14.50010871887207
    5. ' ():' → logprob: -16.25010871887207
    6. '():

' → logprob: -16.87510871887207
    7. '(' → logprob: -17.12510871887207
    8. 'def' → logprob: -18.25010871887207
    9. '()>' → logprob: -19.00010871887207
    10. '()">' → logprob: -20.25010871887207

Token 781: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0013926156098023057
    2. '():
' → logprob: -7.251392841339111
    3. '()' → logprob: -7.376392841339111
    4. '):' → logprob: -10.501392364501953
    5. 'return' → logprob: -11.126392364501953
    6. ' ():' → logprob: -12.001392364501953
    7. '(' → logprob: -12.751392364501953
    8. '():
' → logprob: -13.126392364501953
    9. ':' → logprob: -13.626392364501953
    10. ')' → logprob: -14.876392364501953

Token 782: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.9623810658231378e-05
    2. 'def' → logprob: -11.500020027160645
    3. ' return' → logprob: -11.750020027160645
    4. 'float' → logprob: -13.625020027160645
    5. '   ' → logprob: -15.000020027160645
    6. 'eturn' → logprob: -20.125019073486328
    7. '
' → logprob: -20.375019073486328
    8. 'ret' → logprob: -21.375019073486328
    9. 'import' → logprob: -21.625019073486328
    10. ' ' → logprob: -21.625019073486328

Token 783: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00012451570364646614
    2. 'loat' → logprob: -9.00012493133545
    3. ' float' → logprob: -13.75012493133545
    4. '	float' → logprob: -19.125123977661133
    5. '(float' → logprob: -20.000123977661133
    6. '=float' → logprob: -20.625123977661133
    7. 'lo' → logprob: -21.125123977661133
    8. 'flo' → logprob: -22.000123977661133
    9. 'f' → logprob: -22.125123977661133
    10. 'fl' → logprob: -22.375123977661133

Token 784: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0001025895617203787
    2. '(' → logprob: -9.250102996826172
    3. '()' → logprob: -12.500102996826172
    4. 'sys' → logprob: -13.375102996826172
    5. '=sys' → logprob: -14.625102996826172
    6. ' (' → logprob: -15.000102996826172
    7. '(Sys' → logprob: -15.500102996826172
    8. '(s' → logprob: -16.250102996826172
    9. '(System' → logprob: -16.375102996826172
    10. '(stdin' → logprob: -17.625102996826172

Token 785: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00016623330884613097
    2. '.readline' → logprob: -9.375165939331055
    3. '(stdin' → logprob: -10.000165939331055
    4. '.stdout' → logprob: -10.875165939331055
    5. 'stdin' → logprob: -11.500165939331055
    6. '.' → logprob: -12.750165939331055
    7. '.std' → logprob: -13.375165939331055
    8. '().' → logprob: -13.750165939331055
    9. ' .' → logprob: -14.625165939331055
    10. '.strptime' → logprob: -15.000165939331055

Token 786: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.017607200890779495
    2. '.stdin' → logprob: -4.14260721206665
    3. 'stdin' → logprob: -6.64260721206665
    4. '(stdin' → logprob: -8.642606735229492
    5. '().' → logprob: -10.142606735229492
    6. '()' → logprob: -10.517606735229492
    7. '.stdout' → logprob: -11.892606735229492
    8. '.' → logprob: -12.142606735229492
    9. '())' → logprob: -12.642606735229492
    10. 'sys' → logprob: -13.267606735229492

Token 787: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005263645201921463
    2. '()' → logprob: -5.255263805389404
    3. ')' → logprob: -11.380263328552246
    4. ' ())' → logprob: -11.630263328552246
    5. '().' → logprob: -12.255263328552246
    6. '())
' → logprob: -13.380263328552246
    7. '()]' → logprob: -14.130263328552246
    8. '(' → logprob: -14.255263328552246
    9. '();)' → logprob: -14.255263328552246
    10. '()[' → logprob: -14.755263328552246

Token 788: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.24896621704101562
    2. 'def' → logprob: -1.6239662170410156
    3. '
' → logprob: -3.9989662170410156
    4. '<|end|>' → logprob: -6.373966217041016
    5. 'class' → logprob: -6.998966217041016
    6. '\' → logprob: -6.998966217041016
    7. '\n' → logprob: -7.123966217041016
    8. 'import' → logprob: -8.498966217041016
    9. '<|end|>' → logprob: -9.498966217041016
    10. '```' → logprob: -9.623966217041016

Token 789: ' Retour' (ID: 146830)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.021420560777187347
    2. '#' → logprob: -3.896420478820801
    3. 'from' → logprob: -7.396420478820801
    4. 'class' → logprob: -8.6464204788208
    5. 'D' → logprob: -10.1464204788208
    6. 'import' → logprob: -11.0214204788208
    7. 'S' → logprob: -12.3964204788208
    8. ' def' → logprob: -12.7714204788208
    9. 'T' → logprob: -13.0214204788208
    10. '"""' → logprob: -13.3964204788208

Token 790: 'ne' (ID: 611)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24314633011817932
    2. 'n' → logprob: -1.993146300315857
    3. ' ' → logprob: -3.2431464195251465
    4. 'ner' → logprob: -4.1181464195251465
    5. '<|end|>' → logprob: -5.2431464195251465
    6. 'u' → logprob: -5.7431464195251465
    7. 'ndef' → logprob: -5.8681464195251465
    8. ' #' → logprob: -5.9931464195251465
    9. ' def' → logprob: -6.1181464195251465
    10. 'ur' → logprob: -6.4931464195251465

Token 791: ' simplement' (ID: 45065)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36585479974746704
    2. 'None' → logprob: -2.9908547401428223
    3. 'sys' → logprob: -3.1158547401428223
    4. 'True' → logprob: -3.3658547401428223
    5. ' sys' → logprob: -3.6158547401428223
    6. 'abs' → logprob: -3.7408547401428223
    7. 'inf' → logprob: -3.8658547401428223
    8. 'lambda' → logprob: -3.8658547401428223
    9. ' None' → logprob: -4.365854740142822
    10. ' def' → logprob: -4.615854740142822

Token 792: ' l' (ID: 305)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.19432111084461212
    2. ' None' → logprob: -2.0693211555480957
    3. 'sys' → logprob: -3.1943211555480957
    4. ' sys' → logprob: -5.444321155548096
    5. 'True' → logprob: -5.944321155548096
    6. 'lambda' → logprob: -7.319321155548096
    7. '[]' → logprob: -7.694321155548096
    8. ' True' → logprob: -8.194320678710938
    9. 'inf' → logprob: -8.319320678710938
    10. '()' → logprob: -9.069320678710938

Token 793: ''entrée' (ID: 115820)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.01620117388665676
    2. 'a' → logprob: -4.766201019287109
    3. 'ine' → logprob: -5.891201019287109
    4. 'ength' → logprob: -6.516201019287109
    5. 'e' → logprob: -7.016201019287109
    6. 'ist' → logprob: -7.391201019287109
    7. 'es' → logprob: -7.516201019287109
    8. 'ast' → logprob: -7.516201019287109
    9. ''en' → logprob: -8.39120101928711
    10. 'iste' → logprob: -9.26620101928711

Token 794: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0027891844511032104
    2. '().' → logprob: -6.12778902053833
    3. 'def' → logprob: -8.377789497375488
    4. '()
' → logprob: -9.127789497375488
    5. 's' → logprob: -9.252789497375488
    6. '=' → logprob: -10.252789497375488
    7. '();' → logprob: -10.877789497375488
    8. '#' → logprob: -11.877789497375488
    9. '()\' → logprob: -11.877789497375488
    10. '()<' → logprob: -12.002789497375488

Token 795: ' l' (ID: 305)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4175393581390381
    2. 'sys' → logprob: -1.417539358139038
    3. 'l' → logprob: -2.542539358139038
    4. 'la' → logprob: -4.417539596557617
    5. ')' → logprob: -5.292539596557617
    6. 's' → logprob: -7.292539596557617
    7. 'string' → logprob: -7.542539596557617
    8. 'chaine' → logprob: -7.667539596557617
    9. '=sys' → logprob: -8.292539596557617
    10. ' sys' → logprob: -8.417539596557617

Token 796: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.3739444613456726
    2. 'a' → logprob: -1.8739445209503174
    3. 'input' → logprob: -1.9989445209503174
    4. 'e' → logprob: -4.873944282531738
    5. 'sys' → logprob: -4.998944282531738
    6. '()' → logprob: -5.748944282531738
    7. '’utilisateur' → logprob: -6.748944282531738
    8. 'util' → logprob: -7.248944282531738
    9. 'user' → logprob: -7.248944282531738
    10. 'es' → logprob: -7.373944282531738

Token 797: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1730964332818985
    2. '()' → logprob: -1.9230964183807373
    3. 'input' → logprob: -4.798096656799316
    4. 's' → logprob: -6.923096656799316
    5. '=' → logprob: -7.173096656799316
    6. ' =' → logprob: -7.548096656799316
    7. '().' → logprob: -7.673096656799316
    8. 'lambda' → logprob: -8.423096656799316
    9. '()
' → logprob: -8.423096656799316
    10. '=lambda' → logprob: -8.673096656799316

Token 798: 'ligne' (ID: 94660)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06306792050600052
    2. 'sys' → logprob: -2.81306791305542
    3. '().' → logprob: -8.563068389892578
    4. ').' → logprob: -8.688068389892578
    5. 'def' → logprob: -8.688068389892578
    6. '()' → logprob: -8.688068389892578
    7. 'input' → logprob: -8.688068389892578
    8. '=sys' → logprob: -9.438068389892578
    9. 'lambda' → logprob: -9.688068389892578
    10. '())' → logprob: -11.063068389892578

Token 799: ' l' (ID: 305)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3375629484653473
    2. '()' → logprob: -1.337562918663025
    3. ')' → logprob: -4.2125630378723145
    4. '=' → logprob: -5.3375630378723145
    5. ' =' → logprob: -6.2125630378723145
    6. '())' → logprob: -6.5875630378723145
    7. '=sys' → logprob: -7.8375630378723145
    8. ').' → logprob: -8.712562561035156
    9. '.rstrip' → logprob: -9.587562561035156
    10. '.strip' → logprob: -9.712562561035156

Token 800: 'ue' (ID: 466)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.03444347903132439
    2. 'strip' → logprob: -4.159443378448486
    3. 'igne' → logprob: -5.284443378448486
    4. 'e' → logprob: -5.784443378448486
    5. '#' → logprob: -6.284443378448486
    6. '.strip' → logprob: -6.784443378448486
    7. 'a' → logprob: -7.034443378448486
    8. '()' → logprob: -7.034443378448486
    9. '=input' → logprob: -7.159443378448486
    10. 'input' → logprob: -7.409443378448486

Token 801: '),' (ID: 936)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.1022191047668457
    2. ')' → logprob: -2.9772191047668457
    3. '()' → logprob: -3.6022191047668457
    4. '())' → logprob: -3.9772191047668457
    5. ').' → logprob: -9.227218627929688
    6. '=' → logprob: -9.727218627929688
    7. 'rstrip' → logprob: -10.602218627929688
    8. '.rstrip' → logprob: -11.227218627929688
    9. '()).' → logprob: -11.602218627929688
    10. ' =' → logprob: -11.727218627929688

Token 802: ' sous' (ID: 14487)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006302380934357643
    2. 'sys' → logprob: -5.756302356719971
    3. 'sans' → logprob: -6.881302356719971
    4. 'strip' → logprob: -7.131302356719971
    5. 'rstrip' → logprob: -7.631302356719971
    6. 'raw' → logprob: -8.506302833557129
    7. 'str' → logprob: -8.631302833557129
    8. 'r' → logprob: -9.631302833557129
    9. '```' → logprob: -10.006302833557129
    10. '   ' → logprob: -10.131302833557129

Token 803: ' forme' (ID: 27450)
  Prédit: 'forme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forme' → logprob: -0.10262174904346466
    2. 'chaine' → logprob: -2.8526217937469482
    3. 'form' → logprob: -4.102621555328369
    4. ' forme' → logprob: -4.352621555328369
    5. 'str' → logprob: -4.977621555328369
    6. 'la' → logprob: -6.852621555328369
    7. 'sa' → logprob: -7.102621555328369
    8. 'cha' → logprob: -7.602621555328369
    9. 'format' → logprob: -7.602621555328369
    10. 'forma' → logprob: -8.727622032165527

Token 804: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48899737000465393
    2. '=str' → logprob: -1.8639973402023315
    3. 'de' → logprob: -2.488997459411621
    4. '()' → logprob: -2.613997459411621
    5. 'str' → logprob: -3.488997459411621
    6. 'strip' → logprob: -4.613997459411621
    7. 'raw' → logprob: -5.238997459411621
    8. ' =' → logprob: -5.363997459411621
    9. 'rstrip' → logprob: -5.363997459411621
    10. '=sys' → logprob: -5.863997459411621

Token 805: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.24792128801345825
    2. 'str' → logprob: -2.2479212284088135
    3. 'string' → logprob: -2.2479212284088135
    4. 'cha' → logprob: -4.997921466827393
    5. ' chaîne' → logprob: -6.872921466827393
    6. 'texte' → logprob: -7.872921466827393
    7. 'une' → logprob: -8.872920989990234
    8. ' chaine' → logprob: -11.122920989990234
    9. 'chain' → logprob: -12.122920989990234
    10. 's' → logprob: -12.622920989990234

Token 806: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11841922253370285
    2. '()' → logprob: -2.2434191703796387
    3. '()
' → logprob: -5.243419170379639
    4. '=' → logprob: -9.743419647216797
    5. 's' → logprob: -9.993419647216797
    6. '()`' → logprob: -10.118419647216797
    7. '():' → logprob: -10.618419647216797
    8. '()

' → logprob: -10.993419647216797
    9. '()\' → logprob: -10.993419647216797
    10. '().' → logprob: -11.243419647216797

Token 807: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005338519695214927
    2. 'input' → logprob: -8.000534057617188
    3. 'D' → logprob: -9.250534057617188
    4. 'S' → logprob: -9.375534057617188
    5. 's' → logprob: -11.750534057617188
    6. ' def' → logprob: -13.125534057617188
    7. 'd' → logprob: -13.250534057617188
    8. 'I' → logprob: -13.500534057617188
    9. 'lambda' → logprob: -13.500534057617188
    10. '```' → logprob: -13.875534057617188

Token 808: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.01865518093109131
    2. 'input' → logprob: -4.018655300140381
    3. 's' → logprob: -8.268654823303223
    4. 'raw' → logprob: -8.518654823303223
    5. ' S' → logprob: -11.143654823303223
    6. ' input' → logprob: -11.643654823303223
    7. 'SI' → logprob: -11.893654823303223
    8. 'Input' → logprob: -12.643654823303223
    9. 'L' → logprob: -12.768654823303223
    10. 'get' → logprob: -13.393654823303223

Token 809: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00036406738217920065
    2. '():
' → logprob: -8.000364303588867
    3. ' ():' → logprob: -10.625364303588867
    4. '()' → logprob: -12.375364303588867
    5. '():
' → logprob: -16.500364303588867
    6. '().' → logprob: -18.250364303588867
    7. 'def' → logprob: -18.750364303588867
    8. '(' → logprob: -19.125364303588867
    9. '():

' → logprob: -19.250364303588867
    10. ' ()' → logprob: -19.625364303588867

Token 810: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0897553339600563
    2. '   ' → logprob: -2.7147552967071533
    3. '():
' → logprob: -4.714755535125732
    4. 'return' → logprob: -4.839755535125732
    5. '()' → logprob: -6.589755535125732
    6. 'def' → logprob: -7.089755535125732
    7. ':' → logprob: -8.589755058288574
    8. ':return' → logprob: -8.839755058288574
    9. ' return' → logprob: -9.464755058288574
    10. '):' → logprob: -9.964755058288574

Token 811: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.981667537620524e-06
    2. ' return' → logprob: -13.500001907348633
    3. '   ' → logprob: -14.500001907348633
    4. 'sys' → logprob: -19.000001907348633
    5. ':return' → logprob: -20.500001907348633
    6. 'def' → logprob: -20.750001907348633
    7. '```' → logprob: -20.750001907348633
    8. '	return' → logprob: -21.000001907348633
    9. ')return' → logprob: -21.250001907348633
    10. '
' → logprob: -21.625001907348633

Token 812: ' input' (ID: 3422)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.6240566083070007e-06
    2. ' sys' → logprob: -13.500001907348633
    3. 'input' → logprob: -16.250001907348633
    4. '(sys' → logprob: -19.000001907348633
    5. '	sys' → logprob: -21.375001907348633
    6. '=sys' → logprob: -21.375001907348633
    7. 'str' → logprob: -21.500001907348633
    8. 's' → logprob: -23.375001907348633
    9. '.sys' → logprob: -23.375001907348633
    10. '
' → logprob: -24.000001907348633

Token 813: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006295174825936556
    2. '().' → logprob: -7.375629425048828
    3. ' ()' → logprob: -13.750629425048828
    4. '()
' → logprob: -14.250629425048828
    5. '()

' → logprob: -15.750629425048828
    6. '())' → logprob: -15.750629425048828
    7. '()</' → logprob: -15.875629425048828
    8. '()]' → logprob: -16.125629425048828
    9. '()`' → logprob: -16.125629425048828
    10. '（）' → logprob: -16.375629425048828

Token 814: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 815: ' Aff' (ID: 13741)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004193913657218218
    2. '#' → logprob: -5.6291937828063965
    3. 'class' → logprob: -8.004194259643555
    4. 'from' → logprob: -8.879194259643555
    5. 'd' → logprob: -9.754194259643555
    6. 'import' → logprob: -10.254194259643555
    7. '```' → logprob: -12.504194259643555
    8. 'D' → logprob: -12.754194259643555
    9. '
' → logprob: -12.879194259643555
    10. '\' → logprob: -12.879194259643555

Token 816: 'iche' (ID: 7509)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34601911902427673
    2. 'iche' → logprob: -1.8460191488265991
    3. '#' → logprob: -2.3460190296173096
    4. 'ichage' → logprob: -3.9710190296173096
    5. 'icher' → logprob: -4.096019268035889
    6. 'ich' → logprob: -6.096019268035889
    7. ' def' → logprob: -7.721019268035889
    8. 'ic' → logprob: -8.34601879119873
    9. '```' → logprob: -8.84601879119873
    10. 'ine' → logprob: -9.59601879119873

Token 817: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1401102989912033
    2. 'def' → logprob: -2.3901102542877197
    3. '()' → logprob: -3.6401102542877197
    4. 's' → logprob: -5.515110492706299
    5. '("")' → logprob: -5.890110492706299
    6. '("' → logprob: -6.640110492706299
    7. '<|end|>' → logprob: -6.765110492706299
    8. '(
' → logprob: -6.890110492706299
    9. '(s' → logprob: -7.890110492706299
    10. 'a' → logprob: -8.01511001586914

Token 818: ' valeur' (ID: 41664)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34543341398239136
    2. 'def' → logprob: -2.345433473587036
    3. ')' → logprob: -2.595433473587036
    4. '<|end|>' → logprob: -3.095433473587036
    5. '()' → logprob: -3.970433473587036
    6. 'n' → logprob: -4.345433235168457
    7. '(
' → logprob: -4.720433235168457
    8. 'newline' → logprob: -5.095433235168457
    9. 'r' → logprob: -5.970433235168457
    10. '("")' → logprob: -6.095433235168457

Token 819: ' "' (ID: 392)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004520788788795471
    2. 'def' → logprob: -5.629520893096924
    3. '()' → logprob: -7.754520893096924
    4. '(
' → logprob: -8.004520416259766
    5. 's' → logprob: -10.379520416259766
    6. '("")' → logprob: -10.504520416259766
    7. ' (' → logprob: -11.754520416259766
    8. '("' → logprob: -11.754520416259766
    9. '(value' → logprob: -12.004520416259766
    10. 'print' → logprob: -12.004520416259766

Token 820: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009667905978858471
    2. ')' → logprob: -6.384667873382568
    3. '(""' → logprob: -6.384667873382568
    4. '(
' → logprob: -7.009667873382568
    5. '("""' → logprob: -7.134667873382568
    6. 's' → logprob: -7.134667873382568
    7. '(end' → logprob: -7.259667873382568
    8. '(x' → logprob: -7.384667873382568
    9. '(s' → logprob: -7.384667873382568
    10. '("' → logprob: -7.884667873382568

Token 821: '"' (ID: 1)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.07240871340036392
    2. '(' → logprob: -3.572408676147461
    3. '(tr' → logprob: -4.322408676147461
    4. '"' → logprob: -4.822408676147461
    5. 'tring' → logprob: -4.822408676147461
    6. '()' → logprob: -5.572408676147461
    7. '(s' → logprob: -6.072408676147461
    8. 'trip' → logprob: -7.322408676147461
    9. '("")' → logprob: -7.322408676147461
    10. '""' → logprob: -7.572408676147461

Token 822: ' en' (ID: 469)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.14705565571784973
    2. '(' → logprob: -2.1470556259155273
    3. 'def' → logprob: -4.022055625915527
    4. 'print' → logprob: -6.647055625915527
    5. '(print' → logprob: -8.022055625915527
    6. '(
' → logprob: -8.772055625915527
    7. ' (' → logprob: -9.147055625915527
    8. 's' → logprob: -10.272055625915527
    9. ',' → logprob: -10.897055625915527
    10. ':' → logprob: -11.647055625915527

Token 823: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15197402238845825
    2. 'fin' → logprob: -3.0269739627838135
    3. 'une' → logprob: -3.4019739627838135
    4. 'chaine' → logprob: -4.651974201202393
    5. 'sys' → logprob: -4.651974201202393
    6. '```' → logprob: -4.901974201202393
    7. 'def' → logprob: -5.526974201202393
    8. 'python' → logprob: -5.651974201202393
    9. 'end' → logprob: -5.901974201202393
    10. 'utf' → logprob: -6.026974201202393

Token 824: 'çant' (ID: 78714)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6943598389625549
    2. 'print' → logprob: -1.3193597793579102
    3. 'def' → logprob: -2.31935977935791
    4. 't' → logprob: -2.94435977935791
    5. '"' → logprob: -4.44435977935791
    6. 'ont' → logprob: -4.94435977935791
    7. 'ile' → logprob: -5.06935977935791
    8. 'e' → logprob: -5.19435977935791
    9. '```' → logprob: -5.19435977935791
    10. 'unction' → logprob: -5.44435977935791

Token 825: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9503642916679382
    2. '(s' → logprob: -1.325364351272583
    3. 'end' → logprob: -2.075364351272583
    4. '()' → logprob: -2.325364351272583
    5. '("")' → logprob: -3.075364351272583
    6. '(end' → logprob: -3.450364351272583
    7. '("",' → logprob: -3.825364351272583
    8. '('',' → logprob: -4.700364112854004
    9. '(""' → logprob: -5.325364112854004
    10. '(str' → logprob: -6.200364112854004

Token 826: ' flush' (ID: 37790)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.17128928005695343
    2. 'flush' → logprob: -2.0462892055511475
    3. 'sep' → logprob: -4.296289443969727
    4. 'print' → logprob: -4.921289443969727
    5. '```' → logprob: -6.546289443969727
    6. 'fin' → logprob: -6.671289443969727
    7. ' end' → logprob: -7.046289443969727
    8. 's' → logprob: -8.171289443969727
    9. 'file' → logprob: -8.296289443969727
    10. ')' → logprob: -8.546289443969727

Token 827: ' du' (ID: 1462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5778624415397644
    2. '(s' → logprob: -0.8278624415397644
    3. '(True' → logprob: -7.45286226272583
    4. '(print' → logprob: -7.57786226272583
    5. '(end' → logprob: -7.82786226272583
    6. ' (' → logprob: -8.702862739562988
    7. '()' → logprob: -9.452862739562988
    8. '(False' → logprob: -10.327862739562988
    9. 'print' → logprob: -10.327862739562988
    10. '(
' → logprob: -10.952862739562988

Token 828: ' buffer' (ID: 8573)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.4887159466743469
    2. ' True' → logprob: -0.9887159466743469
    3. '=True' → logprob: -4.238716125488281
    4. '(True' → logprob: -9.738716125488281
    5. 'sys' → logprob: -11.238716125488281
    6. 'stdout' → logprob: -11.363716125488281
    7. 'print' → logprob: -11.488716125488281
    8. 's' → logprob: -11.863716125488281
    9. '=sys' → logprob: -13.238716125488281
    10. ' sys' → logprob: -13.738716125488281

Token 829: ' d' (ID: 272)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.10886383801698685
    2. 'def' → logprob: -2.7338638305664062
    3. 'print' → logprob: -3.9838638305664062
    4. '(' → logprob: -4.233863830566406
    5. '(print' → logprob: -5.358863830566406
    6. 'flush' → logprob: -8.858863830566406
    7. ' (' → logprob: -9.483863830566406
    8. ',' → logprob: -10.733863830566406
    9. '(def' → logprob: -10.733863830566406
    10. '(end' → logprob: -10.858863830566406

Token 830: ''aff' (ID: 53397)
  Prédit: '=sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=sys' → logprob: -0.5545169115066528
    2. 'stdout' → logprob: -1.6795169115066528
    3. 'print' → logprob: -1.9295169115066528
    4. 'output' → logprob: -3.5545167922973633
    5. 'e' → logprob: -3.6795167922973633
    6. '=True' → logprob: -4.804516792297363
    7. '```' → logprob: -4.929516792297363
    8. '`' → logprob: -5.179516792297363
    9. ' stdout' → logprob: -5.554516792297363
    10. '=' → logprob: -6.054516792297363

Token 831: 'ichage' (ID: 118475)
  Prédit: 'ichage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.03637181594967842
    2. 'lush' → logprob: -3.6613717079162598
    3. 'ich' → logprob: -5.28637170791626
    4. 'in' → logprob: -6.91137170791626
    5. 'iche' → logprob: -6.91137170791626
    6. 'l' → logprob: -7.16137170791626
    7. 'n' → logprob: -7.53637170791626
    8. 'lux' → logprob: -7.66137170791626
    9. 'lu' → logprob: -8.411372184753418
    10. 'lage' → logprob: -8.411372184753418

Token 832: '.' (ID: 13)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6988328695297241
    2. '(s' → logprob: -0.6988328695297241
    3. '(' → logprob: -5.948832988739014
    4. 'print' → logprob: -5.948832988739014
    5. '(print' → logprob: -7.948832988739014
    6. '(def' → logprob: -9.823832511901855
    7. ' def' → logprob: -11.698832511901855
    8. '```' → logprob: -11.698832511901855
    9. ' (' → logprob: -12.198832511901855
    10. '(
' → logprob: -12.198832511901855

Token 833: ' Ut' (ID: 21952)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.7432603272027336e-06
    2. ' def' → logprob: -13.875001907348633
    3. '
' → logprob: -15.250001907348633
    4. 'print' → logprob: -15.500001907348633
    5. '```' → logprob: -15.625001907348633
    6. '(def' → logprob: -16.000001907348633
    7. 'd' → logprob: -17.125001907348633
    8. ')' → logprob: -18.500001907348633
    9. ':def' → logprob: -18.500001907348633
    10. 'de' → logprob: -19.000001907348633

Token 834: 'ile' (ID: 554)
  Prédit: 'lush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lush' → logprob: -0.4065869152545929
    2. 'r' → logprob: -1.6565868854522705
    3. '(s' → logprob: -3.4065868854522705
    4. 'print' → logprob: -3.5315868854522705
    5. 'l' → logprob: -3.6565868854522705
    6. 'f' → logprob: -4.65658712387085
    7. '.flush' → logprob: -4.90658712387085
    8. 'unc' → logprob: -5.03158712387085
    9. 'ile' → logprob: -5.28158712387085
    10. 'er' → logprob: -6.15658712387085

Token 835: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28714311122894287
    2. '(s' → logprob: -1.5371431112289429
    3. '()' → logprob: -3.5371432304382324
    4. '(end' → logprob: -5.662143230438232
    5. '(print' → logprob: -7.287143230438232
    6. 'print' → logprob: -8.287142753601074
    7. '(
' → logprob: -8.287142753601074
    8. 'end' → logprob: -8.412142753601074
    9. 'flush' → logprob: -8.787142753601074
    10. ',' → logprob: -9.162142753601074

Token 836: ' inter' (ID: 993)
  Prédit: ' flush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flush' → logprob: -0.5121446251869202
    2. 'flush' → logprob: -1.0121445655822754
    3. 'sys' → logprob: -4.387144565582275
    4. ' sys' → logprob: -4.637144565582275
    5. 'print' → logprob: -5.387144565582275
    6. 'import' → logprob: -5.637144565582275
    7. ' debug' → logprob: -6.387144565582275
    8. 'debug' → logprob: -6.637144565582275
    9. ' interactive' → logprob: -6.637144565582275
    10. 's' → logprob: -7.137144565582275

Token 837: 'agir' (ID: 105832)
  Prédit: 'preter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'preter' → logprob: -0.45586299896240234
    2. 'act' → logprob: -2.3308629989624023
    3. 'rupt' → logprob: -2.4558629989624023
    4. 'active' → logprob: -2.7058629989624023
    5. 'face' → logprob: -2.9558629989624023
    6. 'pr' → logprob: -4.330862998962402
    7. 'agir' → logprob: -4.330862998962402
    8. 'rom' → logprob: -4.705862998962402
    9. 'activ' → logprob: -5.455862998962402
    10. '```' → logprob: -5.705862998962402

Token 838: ' avec' (ID: 3937)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.062340278178453445
    2. 'with' → logprob: -3.437340259552002
    3. '(' → logprob: -4.062340259552002
    4. 's' → logprob: -5.437340259552002
    5. 'print' → logprob: -5.437340259552002
    6. 'flush' → logprob: -7.687340259552002
    7. '(print' → logprob: -7.812340259552002
    8. 'def' → logprob: -7.812340259552002
    9. ' with' → logprob: -8.06234073638916
    10. ' (' → logprob: -8.56234073638916

Token 839: ' des' (ID: 731)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.38647180795669556
    2. 'print' → logprob: -1.8864717483520508
    3. 's' → logprob: -2.136471748352051
    4. 'stdout' → logprob: -3.511471748352051
    5. 'flush' → logprob: -4.011471748352051
    6. 'end' → logprob: -6.511471748352051
    7. ' sys' → logprob: -7.011471748352051
    8. 'input' → logprob: -8.38647174835205
    9. ' flush' → logprob: -9.01147174835205
    10. 'stderr' → logprob: -10.13647174835205

Token 840: ' jug' (ID: 18737)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.39641058444976807
    2. 'flush' → logprob: -1.896410584449768
    3. 'sys' → logprob: -2.7714104652404785
    4. ' flush' → logprob: -3.5214104652404785
    5. 'input' → logprob: -3.8964104652404785
    6. 'program' → logprob: -4.2714104652404785
    7. 'stdout' → logprob: -4.3964104652404785
    8. 's' → logprob: -4.8964104652404785
    9. ' sys' → logprob: -5.2714104652404785
    10. 'end' → logprob: -5.5214104652404785

Token 841: 'es' (ID: 268)
  Prédit: 'ge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ge' → logprob: -0.07701710611581802
    2. 'e' → logprob: -3.327017068862915
    3. 'd' → logprob: -4.452017307281494
    4. 'ges' → logprob: -4.952017307281494
    5. 'es' → logprob: -5.077017307281494
    6. 'eurs' → logprob: -5.827017307281494
    7. 'g' → logprob: -6.452017307281494
    8. 'gments' → logprob: -6.702017307281494
    9. 'dg' → logprob: -6.702017307281494
    10. 'de' → logprob: -6.827017307281494

Token 842: ' autom' (ID: 5099)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.050158195197582245
    2. '(' → logprob: -3.0501582622528076
    3. 's' → logprob: -7.6751580238342285
    4. ' (' → logprob: -7.8001580238342285
    5. 'print' → logprob: -8.175158500671387
    6. 'def' → logprob: -8.675158500671387
    7. '(print' → logprob: -8.675158500671387
    8. '(
' → logprob: -10.800158500671387
    9. '()' → logprob: -11.425158500671387
    10. 'flush' → logprob: -11.550158500671387

Token 843: 'atiques' (ID: 31318)
  Prédit: 'eurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eurs' → logprob: -0.01121887844055891
    2. 'e' → logprob: -5.261219024658203
    3. 'eur' → logprob: -5.886219024658203
    4. 'r' → logprob: -7.886219024658203
    5. 'er' → logprob: -7.886219024658203
    6. 'es' → logprob: -8.011219024658203
    7. 'teurs' → logprob: -8.511219024658203
    8. 'def' → logprob: -8.636219024658203
    9. '```' → logprob: -8.636219024658203
    10. 'ents' → logprob: -8.761219024658203

Token 844: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5591439604759216
    2. '(s' → logprob: -1.0591440200805664
    3. 'print' → logprob: -2.6841440200805664
    4. '(' → logprob: -4.809144020080566
    5. '(print' → logprob: -5.309144020080566
    6. 's' → logprob: -10.059144020080566
    7. '(
' → logprob: -10.184144020080566
    8. '(def' → logprob: -10.309144020080566
    9. 'import' → logprob: -11.309144020080566
    10. '```' → logprob: -11.684144020080566

Token 845: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0280383548888494e-06
    2. ' def' → logprob: -14.375000953674316
    3. 'print' → logprob: -15.250000953674316
    4. '```' → logprob: -16.500001907348633
    5. '(def' → logprob: -19.375001907348633
    6. ':def' → logprob: -19.625001907348633
    7. 'd' → logprob: -19.750001907348633
    8. '	def' → logprob: -20.125001907348633
    9. '
' → logprob: -20.125001907348633
    10. 'de' → logprob: -20.375001907348633

Token 846: ' pf' (ID: 27291)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0033232688438147306
    2. 'p' → logprob: -6.003323078155518
    3. ' print' → logprob: -7.378323078155518
    4. 'pr' → logprob: -8.878323554992676
    5. 'flush' → logprob: -9.628323554992676
    6. 'P' → logprob: -12.003323554992676
    7. ' flush' → logprob: -13.378323554992676
    8. 'Print' → logprob: -13.878323554992676
    9. 'printf' → logprob: -14.003323554992676
    10. 'prt' → logprob: -14.003323554992676

Token 847: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.3542756736278534
    2. 'r' → logprob: -1.2292757034301758
    3. '(' → logprob: -5.479275703430176
    4. 'print' → logprob: -7.604275703430176
    5. '(r' → logprob: -8.229275703430176
    6. ' (' → logprob: -8.604275703430176
    7. '("' → logprob: -8.854275703430176
    8. 'lush' → logprob: -8.854275703430176
    9. 'flush' → logprob: -9.229275703430176
    10. '('' → logprob: -9.854275703430176

Token 848: '):
' (ID: 1883)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0018706903792917728
    2. '(' → logprob: -6.626870632171631
    3. '):' → logprob: -8.626871109008789
    4. '):
' → logprob: -9.126871109008789
    5. '(msg' → logprob: -9.501871109008789
    6. '(string' → logprob: -9.626871109008789
    7. '(*' → logprob: -10.626871109008789
    8. '(str' → logprob: -11.126871109008789
    9. '(txt' → logprob: -11.501871109008789
    10. 'print' → logprob: -11.626871109008789

Token 849: '   ' (ID: 271)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.4194515347480774
    2. 'print' → logprob: -2.4194514751434326
    3. '(print' → logprob: -2.4194514751434326
    4. ' print' → logprob: -2.6694514751434326
    5. ':' → logprob: -2.9194514751434326
    6. '(' → logprob: -3.6694514751434326
    7. '   ' → logprob: -4.794451713562012
    8. '():' → logprob: -5.294451713562012
    9. '):' → logprob: -7.544451713562012
    10. '(p' → logprob: -7.794451713562012

Token 850: ' return' (ID: 622)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0024756586644798517
    2. ' print' → logprob: -6.002475738525391
    3. '   ' → logprob: -17.00247573852539
    4. 'import' → logprob: -18.62747573852539
    5. '	print' → logprob: -18.75247573852539
    6. '_print' → logprob: -20.12747573852539
    7. '(print' → logprob: -20.37747573852539
    8. 'sys' → logprob: -20.37747573852539
    9. 'prin' → logprob: -20.62747573852539
    10. 'pr' → logprob: -20.75247573852539

Token 851: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014168919064104557
    2. ' print' → logprob: -4.264168739318848
    3. '(print' → logprob: -12.139168739318848
    4. 'pr' → logprob: -17.889169692993164
    5. '	print' → logprob: -18.514169692993164
    6. '_print' → logprob: -18.764169692993164
    7. '__' → logprob: -18.889169692993164
    8. ' (' → logprob: -18.889169692993164
    9. '(' → logprob: -19.139169692993164
    10. '   ' → logprob: -19.264169692993164

Token 852: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0015083164907991886
    2. '(' → logprob: -6.5015082359313965
    3. '(f' → logprob: -13.126508712768555
    4. 's' → logprob: -13.626508712768555
    5. ' (' → logprob: -13.626508712768555
    6. '(...' → logprob: -14.126508712768555
    7. '((' → logprob: -14.626508712768555
    8. '(
' → logprob: -15.751508712768555
    9. '()' → logprob: -16.376508712768555
    10. '(string' → logprob: -17.126508712768555

Token 853: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005318254698067904
    2. ',end' → logprob: -8.125532150268555
    3. ' ,' → logprob: -9.000532150268555
    4. '(),' → logprob: -9.750532150268555
    5. 'flush' → logprob: -10.000532150268555
    6. ',s' → logprob: -12.750532150268555
    7. ' flush' → logprob: -13.375532150268555
    8. ',f' → logprob: -13.375532150268555
    9. ')' → logprob: -14.750532150268555
    10. '(' → logprob: -15.000532150268555

Token 854: ' flush' (ID: 37790)
  Prédit: 'flush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flush' → logprob: -0.005233882926404476
    2. ' flush' → logprob: -5.2552337646484375
    3. 'end' → logprob: -16.755233764648438
    4. ' ' → logprob: -17.755233764648438
    5. '.flush' → logprob: -18.130233764648438
    6. '_flush' → logprob: -18.255233764648438
    7. '  ' → logprob: -18.505233764648438
    8. '   ' → logprob: -19.005233764648438
    9. 'fl' → logprob: -19.630233764648438
    10. 'Flush' → logprob: -20.255233764648438

Token 855: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.005233763717114925
    2. '=' → logprob: -5.2552337646484375
    3. '=T' → logprob: -18.755233764648438
    4. '=False' → logprob: -18.880233764648438
    5. '=
' → logprob: -19.755233764648438
    6. ' =' → logprob: -20.505233764648438
    7. '(True' → logprob: -21.880233764648438
    8. '=

' → logprob: -22.130233764648438
    9. '＝' → logprob: -22.380233764648438
    10. ')=' → logprob: -22.505233764648438

Token 856: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.75
    3. '))' → logprob: -16.75
    4. '())' → logprob: -17.5
    5. ')`' → logprob: -18.0
    6. '()' → logprob: -18.25
    7. ')#' → logprob: -18.625
    8. ')
' → logprob: -18.625
    9. '),' → logprob: -19.75
    10. ',)' → logprob: -20.125

Token 857: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10184482485055923
    2. '#' → logprob: -2.3518447875976562
    3. 'class' → logprob: -7.351844787597656
    4. '<|end|>' → logprob: -7.476844787597656
    5. '
' → logprob: -8.851844787597656
    6. 'import' → logprob: -9.226844787597656
    7. '```' → logprob: -9.601844787597656
    8. '\' → logprob: -10.601844787597656
    9. '<|end|>' → logprob: -10.601844787597656
    10. '  
' → logprob: -11.101844787597656

Token 858: ' Aff' (ID: 13741)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08132249861955643
    2. 'd' → logprob: -3.081322431564331
    3. '#' → logprob: -3.456322431564331
    4. '@' → logprob: -8.45632266998291
    5. 'class' → logprob: -8.58132266998291
    6. 'from' → logprob: -9.08132266998291
    7. 'import' → logprob: -9.70632266998291
    8. '\' → logprob: -10.70632266998291
    9. 'D' → logprob: -11.08132266998291
    10. '
' → logprob: -11.70632266998291

Token 859: 'iche' (ID: 7509)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.021199652925133705
    2. '#' → logprob: -4.396199703216553
    3. 'ort' → logprob: -6.271199703216553
    4. '_def' → logprob: -7.021199703216553
    5. '__' → logprob: -7.271199703216553
    6. '_' → logprob: -7.271199703216553
    7. 'ine' → logprob: -7.396199703216553
    8. '()' → logprob: -7.771199703216553
    9. '```' → logprob: -8.021199226379395
    10. 'or' → logprob: -8.021199226379395

Token 860: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8280035257339478
    2. '()' → logprob: -1.7030035257339478
    3. 's' → logprob: -2.203003406524658
    4. '(s' → logprob: -2.328003406524658
    5. '<|end|>' → logprob: -3.078003406524658
    6. 'def' → logprob: -3.203003406524658
    7. '("' → logprob: -3.578003406524658
    8. '#' → logprob: -3.953003406524658
    9. '("")' → logprob: -4.203003406524658
    10. '('' → logprob: -5.578003406524658

Token 861: ' valeur' (ID: 41664)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9609506726264954
    2. '#' → logprob: -1.5859506130218506
    3. 's' → logprob: -1.7109506130218506
    4. '(' → logprob: -1.9609506130218506
    5. '(s' → logprob: -2.9609506130218506
    6. '()' → logprob: -4.08595085144043
    7. ')' → logprob: -4.96095085144043
    8. 'f' → logprob: -6.46095085144043
    9. '...' → logprob: -6.71095085144043
    10. '("' → logprob: -6.71095085144043

Token 862: ' "' (ID: 392)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2752586603164673
    2. '(s' → logprob: -1.9002586603164673
    3. '("' → logprob: -3.0252585411071777
    4. '("")' → logprob: -3.9002585411071777
    5. '('' → logprob: -4.775258541107178
    6. '(
' → logprob: -5.275258541107178
    7. 's' → logprob: -5.275258541107178
    8. 'def' → logprob: -7.400258541107178
    9. '("("' → logprob: -7.400258541107178
    10. '<|end|>' → logprob: -7.525258541107178

Token 863: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8205459117889404
    2. '(s' → logprob: -0.9455459117889404
    3. '(' → logprob: -2.5705459117889404
    4. '("")' → logprob: -3.1955459117889404
    5. '()' → logprob: -3.6955459117889404
    6. '("' → logprob: -4.4455461502075195
    7. '('' → logprob: -5.9455461502075195
    8. ')' → logprob: -6.0705461502075195
    9. '(n' → logprob: -6.6955461502075195
    10. '(sum' → logprob: -7.1955461502075195

Token 864: '"' (ID: 1)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4060635566711426
    2. ',' → logprob: -1.1560635566711426
    3. '(s' → logprob: -4.281063556671143
    4. '(' → logprob: -6.281063556671143
    5. ',s' → logprob: -6.531063556671143
    6. ',end' → logprob: -6.656063556671143
    7. ',)' → logprob: -8.906063079833984
    8. ' ,' → logprob: -9.656063079833984
    9. '(end' → logprob: -9.656063079833984
    10. 'end' → logprob: -9.781063079833984

Token 865: ' mais' (ID: 2899)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6143404245376587
    2. '()' → logprob: -0.9893404245376587
    3. '(s' → logprob: -2.489340305328369
    4. ',' → logprob: -6.739340305328369
    5. 'end' → logprob: -7.489340305328369
    6. 'def' → logprob: -7.614340305328369
    7. ')' → logprob: -7.864340305328369
    8. '("")' → logprob: -7.989340305328369
    9. '(end' → logprob: -8.114340782165527
    10. '(
' → logprob: -8.239340782165527

Token 866: ' dans' (ID: 2671)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.07492359727621078
    2. '(end' → logprob: -3.574923515319824
    3. 'without' → logprob: -3.949923515319824
    4. ',' → logprob: -4.574923515319824
    5. ',end' → logprob: -5.199923515319824
    6. ' end' → logprob: -5.324923515319824
    7. 'sans' → logprob: -7.074923515319824
    8. ' without' → logprob: -7.199923515319824
    9. '()' → logprob: -7.199923515319824
    10. '(s' → logprob: -7.449923515319824

Token 867: ' le' (ID: 505)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0667509213089943
    2. '(end' → logprob: -2.941751003265381
    3. '(s' → logprob: -5.441751003265381
    4. 's' → logprob: -5.441751003265381
    5. '()' → logprob: -6.191751003265381
    6. '(' → logprob: -7.816751003265381
    7. ' end' → logprob: -8.941750526428223
    8. '("",' → logprob: -9.816750526428223
    9. '("")' → logprob: -9.816750526428223
    10. '("' → logprob: -9.941750526428223

Token 868: ' flux' (ID: 36547)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.001026258571073413
    2. 'same' → logprob: -8.251026153564453
    3. 'def' → logprob: -8.501026153564453
    4. ' end' → logprob: -9.376026153564453
    5. '(end' → logprob: -9.751026153564453
    6. 'f' → logprob: -9.876026153564453
    7. ',end' → logprob: -10.126026153564453
    8. 's' → logprob: -10.126026153564453
    9. 'en' → logprob: -10.376026153564453
    10. ',' → logprob: -10.501026153564453

Token 869: ' d' (ID: 272)
  Prédit: '=sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=sys' → logprob: -0.6879217624664307
    2. '=' → logprob: -1.0629217624664307
    3. 'end' → logprob: -2.0629217624664307
    4. 'sys' → logprob: -4.437921524047852
    5. '(end' → logprob: -5.312921524047852
    6. '=end' → logprob: -6.062921524047852
    7. '(sys' → logprob: -6.187921524047852
    8. '()' → logprob: -7.312921524047852
    9. 'stdout' → logprob: -7.687921524047852
    10. 'stderr' → logprob: -7.937921524047852

Token 870: '’er' (ID: 102779)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.24301880598068237
    2. 'stderr' → logprob: -2.243018865585327
    3. 'e' → logprob: -2.743018865585327
    4. '=sys' → logprob: -3.743018865585327
    5. 'sys' → logprob: -4.743018627166748
    6. ''er' → logprob: -5.993018627166748
    7. 'l' → logprob: -6.118018627166748
    8. 'stdout' → logprob: -6.618018627166748
    9. 'é' → logprob: -6.618018627166748
    10. 'error' → logprob: -6.868018627166748

Token 871: 'reur' (ID: 56784)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.21598808467388153
    2. 'e' → logprob: -2.8409881591796875
    3. 'stderr' → logprob: -2.8409881591796875
    4. 'r' → logprob: -3.2159881591796875
    5. ''er' → logprob: -4.3409881591796875
    6. 'rror' → logprob: -5.2159881591796875
    7. 'error' → logprob: -5.5909881591796875
    8. 'reur' → logprob: -5.5909881591796875
    9. '=sys' → logprob: -5.8409881591796875
    10. 'stdout' → logprob: -6.2159881591796875

Token 872: ' standard' (ID: 7024)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.37983042001724243
    2. 'def' → logprob: -1.8798303604125977
    3. '(' → logprob: -2.1298303604125977
    4. ',' → logprob: -4.379830360412598
    5. '(stderr' → logprob: -4.504830360412598
    6. '(file' → logprob: -5.504830360412598
    7. 'import' → logprob: -5.629830360412598
    8. '(sys' → logprob: -5.879830360412598
    9. '()' → logprob: -6.129830360412598
    10. '(error' → logprob: -6.629830360412598

Token 873: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.6466563940048218
    2. '(' → logprob: -0.7716563940048218
    3. '(stderr' → logprob: -5.146656513214111
    4. 'def' → logprob: -6.146656513214111
    5. ',' → logprob: -6.146656513214111
    6. '(file' → logprob: -6.771656513214111
    7. '()' → logprob: -7.896656513214111
    8. '(
' → logprob: -8.021656036376953
    9. '(sys' → logprob: -8.021656036376953
    10. '(e' → logprob: -8.146656036376953

Token 874: 'stderr' (ID: 96670)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.06492434442043304
    2. ')' → logprob: -3.0649242401123047
    3. 'sys' → logprob: -5.064924240112305
    4. 'end' → logprob: -5.814924240112305
    5. '(file' → logprob: -6.439924240112305
    6. 's' → logprob: -6.689924240112305
    7. ',' → logprob: -6.939924240112305
    8. ' file' → logprob: -7.189924240112305
    9. 'stderr' → logprob: -7.689924240112305
    10. 'import' → logprob: -7.814924240112305

Token 875: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1279602348804474
    2. ',' → logprob: -2.127960205078125
    3. 'def' → logprob: -8.252960205078125
    4. ',s' → logprob: -8.502960205078125
    5. '):' → logprob: -8.877960205078125
    6. ',)' → logprob: -9.377960205078125
    7. '(s' → logprob: -9.502960205078125
    8. ')
' → logprob: -9.752960205078125
    9. 'import' → logprob: -10.127960205078125
    10. ')s' → logprob: -10.377960205078125

Token 876: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.896309739408025e-07
    2. 'import' → logprob: -14.250000953674316
    3. ' def' → logprob: -16.125
    4. '```' → logprob: -19.875
    5. 'from' → logprob: -21.5
    6. 'd' → logprob: -22.0
    7. '	def' → logprob: -22.375
    8. '#' → logprob: -22.5
    9. 'debug' → logprob: -22.875
    10. 'print' → logprob: -23.0

Token 877: ' pe' (ID: 1045)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.017598770558834076
    2. 'pe' → logprob: -4.392598628997803
    3. 'ef' → logprob: -6.267598628997803
    4. 'print' → logprob: -6.642598628997803
    5. 'ep' → logprob: -7.517598628997803
    6. 'debug' → logprob: -7.767598628997803
    7. 'def' → logprob: -8.017599105834961
    8. ' e' → logprob: -8.142599105834961
    9. 'fe' → logprob: -9.142599105834961
    10. 'per' → logprob: -10.017599105834961

Token 878: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.04164339229464531
    2. 'r' → logprob: -3.6666433811187744
    3. 'f' → logprob: -5.1666436195373535
    4. 'rror' → logprob: -5.6666436195373535
    5. '(' → logprob: -5.9166436195373535
    6. '(r' → logprob: -5.9166436195373535
    7. 'rr' → logprob: -8.791643142700195
    8. 'p' → logprob: -8.916643142700195
    9. 'print' → logprob: -9.041643142700195
    10. 's' → logprob: -9.291643142700195

Token 879: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023313960060477257
    2. '):
' → logprob: -3.7733139991760254
    3. ')' → logprob: -10.148313522338867
    4. '(s' → logprob: -10.648313522338867
    5. '):
' → logprob: -12.648313522338867
    6. '):

' → logprob: -13.398313522338867
    7. ' ):' → logprob: -14.898313522338867
    8. '(' → logprob: -15.523313522338867
    9. 's' → logprob: -16.023313522338867
    10. ')：' → logprob: -17.148313522338867

Token 880: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0766632929444313
    2. 'return' → logprob: -3.0766632556915283
    3. 'print' → logprob: -3.8266632556915283
    4. '(s' → logprob: -5.826663494110107
    5. '):' → logprob: -7.076663494110107
    6. ' return' → logprob: -7.201663494110107
    7. ':' → logprob: -7.576663494110107
    8. 'def' → logprob: -7.701663494110107
    9. '():' → logprob: -9.57666301727295
    10. '=' → logprob: -9.82666301727295

Token 881: ' return' (ID: 622)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0527615025639534
    2. 'return' (adapté à ' return') → logprob: -3.0527615547180176
    3. 'import' → logprob: -5.552761554718018
    4. 'sys' → logprob: -8.17776107788086
    5. '   ' → logprob: -12.67776107788086
    6. 'e' → logprob: -13.55276107788086
    7. ' print' → logprob: -13.92776107788086
    8. '```' → logprob: -14.30276107788086
    9. ' return' → logprob: -14.67776107788086
    10. 'file' → logprob: -15.05276107788086

Token 882: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.088346359931165e-07
    2. ' print' → logprob: -14.000000953674316
    3. 'sys' → logprob: -19.375
    4. 'file' → logprob: -19.75
    5. '(print' → logprob: -21.375
    6. 'lambda' → logprob: -22.125
    7. 'printer' → logprob: -23.375
    8. '```' → logprob: -23.375
    9. '	print' → logprob: -23.5
    10. 'fprintf' → logprob: -23.5

Token 883: '(str' (ID: 7946)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00033713103039190173
    2. '(' → logprob: -8.000337600708008
    3. 's' → logprob: -14.375337600708008
    4. '(...' → logprob: -14.625337600708008
    5. '(
' → logprob: -15.125337600708008
    6. ' (' → logprob: -15.500337600708008
    7. '((' → logprob: -16.500337600708008
    8. '(f' → logprob: -17.375337600708008
    9. '(stderr' → logprob: -17.625337600708008
    10. '(e' → logprob: -18.000337600708008

Token 884: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -3.292907877039397e-06
    2. 's' → logprob: -13.12500286102295
    3. '(' → logprob: -13.62500286102295
    4. ' (' → logprob: -17.000003814697266
    5. ')' → logprob: -18.250003814697266
    6. '(
' → logprob: -18.875003814697266
    7. '#' → logprob: -19.625003814697266
    8. '(e' → logprob: -19.750003814697266
    9. '(...' → logprob: -20.000003814697266
    10. 'e' → logprob: -20.250003814697266

Token 885: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4207877516746521
    2. '(),' → logprob: -1.5457878112792969
    3. '(s' → logprob: -2.170787811279297
    4. '),' → logprob: -4.670787811279297
    5. '(sys' → logprob: -5.795787811279297
    6. ',s' → logprob: -6.545787811279297
    7. ',file' → logprob: -7.045787811279297
    8. '(' → logprob: -7.795787811279297
    9. '=sys' → logprob: -7.795787811279297
    10. '(file' → logprob: -9.045787811279297

Token 886: ' file' (ID: 1974)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.0003457136917859316
    2. 'flush' → logprob: -8.000346183776855
    3. ' file' → logprob: -11.500346183776855
    4. ' flush' → logprob: -16.25034523010254
    5. 'fil' → logprob: -17.12534523010254
    6. 'fl' → logprob: -20.00034523010254
    7. 'end' → logprob: -21.12534523010254
    8. 'f' → logprob: -21.62534523010254
    9. '	file' → logprob: -22.12534523010254
    10. 'fi' → logprob: -22.25034523010254

Token 887: '=sys' (ID: 149200)
  Prédit: '=sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=sys' → logprob: -4.36574100604048e-06
    2. 'sys' → logprob: -12.625004768371582
    3. ' =' → logprob: -14.375004768371582
    4. '=' → logprob: -15.125004768371582
    5. '(sys' → logprob: -17.375003814697266
    6. '=subprocess' → logprob: -17.875003814697266
    7. '	sys' → logprob: -18.000003814697266
    8. 's' → logprob: -18.500003814697266
    9. ' sys' → logprob: -18.500003814697266
    10. '=s' → logprob: -20.125003814697266

Token 888: '.stderr' (ID: 87058)
  Prédit: '.stderr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stderr' → logprob: -2.7014437364414334e-05
    2. '.stdout' → logprob: -11.25002670288086
    3. '.' → logprob: -12.00002670288086
    4. 'stderr' → logprob: -12.25002670288086
    5. '=sys' → logprob: -13.25002670288086
    6. '.stdin' → logprob: -14.87502670288086
    7. '(stderr' → logprob: -15.25002670288086
    8. '.__' → logprob: -15.62502670288086
    9. ' .' → logprob: -15.62502670288086
    10. '.std' → logprob: -16.62502670288086

Token 889: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.171581091824919e-05
    2. ',' → logprob: -9.62507152557373
    3. ' )' → logprob: -13.37507152557373
    4. '())' → logprob: -13.37507152557373
    5. ',)' → logprob: -14.00007152557373
    6. '=sys' → logprob: -14.62507152557373
    7. '))' → logprob: -15.00007152557373
    8. '),' → logprob: -15.62507152557373
    9. ')#' → logprob: -16.000072479248047
    10. '=' → logprob: -16.000072479248047

Token 890: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3146961033344269
    2. '<|end|>' → logprob: -1.9396960735321045
    3. '#' → logprob: -2.1896960735321045
    4. 'class' → logprob: -5.564696311950684
    5. '
' → logprob: -5.689696311950684
    6. 'import' → logprob: -6.064696311950684
    7. '```' → logprob: -6.439696311950684
    8. '<|end|>' → logprob: -6.439696311950684
    9. '

' → logprob: -7.564696311950684
    10. '\n' → logprob: -9.314696311950684

Token 891: ' Pr' (ID: 2284)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.021137671545147896
    2. 'class' → logprob: -4.021137714385986
    3. '#' → logprob: -6.021137714385986
    4. 'from' → logprob: -8.021137237548828
    5. 'import' → logprob: -8.521137237548828
    6. '@' → logprob: -11.396137237548828
    7. '#!/' → logprob: -12.021137237548828
    8. '
' → logprob: -13.521137237548828
    9. '@dat' → logprob: -13.521137237548828
    10. '\' → logprob: -13.646137237548828

Token 892: 'end' (ID: 419)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06577649712562561
    2. 'ef' → logprob: -3.0657765865325928
    3. '#' → logprob: -4.940776348114014
    4. 'def' → logprob: -5.565776348114014
    5. 'int' → logprob: -6.065776348114014
    6. 'ass' → logprob: -7.065776348114014
    7. 'e' → logprob: -7.440776348114014
    8. 'rf' → logprob: -7.690776348114014
    9. 'rof' → logprob: -7.815776348114014
    10. 'er' → logprob: -8.565776824951172

Token 893: ' une' (ID: 2463)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1365032196044922
    2. 'a' → logprob: -1.2615032196044922
    3. 'un' → logprob: -2.011503219604492
    4. 'une' → logprob: -2.386503219604492
    5. ' une' → logprob: -3.136503219604492
    6. ' un' → logprob: -3.636503219604492
    7. 's' → logprob: -3.886503219604492
    8. 'n' → logprob: -3.886503219604492
    9. 'l' → logprob: -4.511503219604492
    10. 'le' → logprob: -4.511503219604492

Token 894: ' sé' (ID: 7462)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.5581914782524109
    2. 'def' → logprob: -1.9331915378570557
    3. 's' → logprob: -2.8081915378570557
    4. 'str' → logprob: -2.8081915378570557
    5. 'list' → logprob: -3.1831915378570557
    6. ')' → logprob: -4.058191299438477
    7. 'sequence' → logprob: -4.058191299438477
    8. '):' → logprob: -4.308191299438477
    9. ',' → logprob: -4.433191299438477
    10. '=' → logprob: -4.558191299438477

Token 895: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.00793167669326067
    2. 'rie' → logprob: -5.007931709289551
    3. 'r' → logprob: -6.882931709289551
    4. '#' → logprob: -9.38293170928955
    5. 'q' → logprob: -10.38293170928955
    6. 'QUENCE' → logprob: -10.50793170928955
    7. 'quences' → logprob: -11.13293170928955
    8. 'par' → logprob: -12.25793170928955
    9. '```' → logprob: -12.63293170928955
    10. 't' → logprob: -12.75793170928955

Token 896: ' "' (ID: 392)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.069371223449707
    2. ',' → logprob: -1.819371223449707
    3. '<|end|>' → logprob: -2.069371223449707
    4. 's' → logprob: -2.194371223449707
    5. '(s' → logprob: -2.694371223449707
    6. 'def' → logprob: -3.194371223449707
    7. '(sequence' → logprob: -3.319371223449707
    8. '(seq' → logprob: -3.819371223449707
    9. ')' → logprob: -4.319371223449707
    10. '(iter' → logprob: -4.444371223449707

Token 897: 'a' (ID: 64)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.6532675623893738
    2. 'a' → logprob: -1.2782676219940186
    3. 's' → logprob: -1.7782676219940186
    4. '(seq' → logprob: -4.2782673835754395
    5. 'lst' → logprob: -5.5282673835754395
    6. 'l' → logprob: -5.7782673835754395
    7. 'x' → logprob: -6.4032673835754395
    8. ')' → logprob: -6.6532673835754395
    9. 'iter' → logprob: -6.6532673835754395
    10. ' seq' → logprob: -7.0282673835754395

Token 898: '"' (ID: 1)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3053903877735138
    2. '):' → logprob: -1.8053903579711914
    3. 's' → logprob: -3.1803903579711914
    4. ')' → logprob: -3.1803903579711914
    5. '):
' → logprob: -4.805390357971191
    6. '"' → logprob: -5.930390357971191
    7. 'rray' → logprob: -7.305390357971191
    8. ',b' → logprob: -7.430390357971191
    9. ',s' → logprob: -7.430390357971191
    10. ',n' → logprob: -7.805390357971191

Token 899: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.053212497383356094
    2. ',a' → logprob: -3.6782124042510986
    3. ')' → logprob: -4.178212642669678
    4. ' ,' → logprob: -5.553212642669678
    5. '):' → logprob: -5.678212642669678
    6. 'def' → logprob: -6.803212642669678
    7. 'a' → logprob: -7.678212642669678
    8. '):
' → logprob: -7.928212642669678
    9. '[::-' → logprob: -8.80321216583252
    10. ':' → logprob: -8.92821216583252

Token 900: ' une' (ID: 2463)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28349176049232483
    2. 'returns' → logprob: -2.033491849899292
    3. 'l' → logprob: -3.033491849899292
    4. 'r' → logprob: -4.033491611480713
    5. ' def' → logprob: -4.908491611480713
    6. 'a' → logprob: -5.158491611480713
    7. 'ret' → logprob: -5.283491611480713
    8. 'x' → logprob: -5.408491611480713
    9. ' returns' → logprob: -5.908491611480713
    10. 'la' → logprob: -6.033491611480713

Token 901: ' chaîne' (ID: 89288)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.7217849493026733
    2. 'def' → logprob: -1.9717849493026733
    3. ' key' → logprob: -2.471785068511963
    4. 'k' → logprob: -2.846785068511963
    5. 'sep' → logprob: -3.346785068511963
    6. 'separator' → logprob: -3.346785068511963
    7. 'b' → logprob: -3.846785068511963
    8. 'token' → logprob: -4.221785068511963
    9. 'start' → logprob: -4.346785068511963
    10. 'predicate' → logprob: -4.471785068511963

Token 902: ' "' (ID: 392)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3111764192581177
    2. 'a' → logprob: -1.5611764192581177
    3. '(s' → logprob: -1.5611764192581177
    4. ',' → logprob: -2.061176300048828
    5. '(a' → logprob: -2.561176300048828
    6. '(' → logprob: -3.061176300048828
    7. 'def' → logprob: -4.061176300048828
    8. 'del' → logprob: -5.436176300048828
    9. '   ' → logprob: -5.686176300048828
    10. 'delimiter' → logprob: -5.936176300048828

Token 903: 'sep' (ID: 46643)
  Prédit: 'sep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.035960786044597626
    2. 's' → logprob: -3.4109606742858887
    3. 'b' → logprob: -7.410960674285889
    4. '"' → logprob: -7.410960674285889
    5. 'join' → logprob: -7.910960674285889
    6. 'separator' → logprob: -9.035961151123047
    7. 'd' → logprob: -9.160961151123047
    8. 'delimiter' → logprob: -9.535961151123047
    9. ' sep' → logprob: -9.910961151123047
    10. '"s' → logprob: -10.410961151123047

Token 904: '"' (ID: 1)
  Prédit: '=""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=""' → logprob: -0.415181964635849
    2. '="' → logprob: -1.5401819944381714
    3. '=",' → logprob: -3.165181875228882
    4. '=''' → logprob: -3.415181875228882
    5. '=None' → logprob: -4.040182113647461
    6. '=' → logprob: -4.665182113647461
    7. '='' → logprob: -5.040182113647461
    8. '="",' → logprob: -5.415182113647461
    9. '="""' → logprob: -5.790182113647461
    10. '=',' → logprob: -6.165182113647461

Token 905: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15565459430217743
    2. 'def' → logprob: -2.4056546688079834
    3. '=' → logprob: -3.4056546688079834
    4. '(separator' → logprob: -4.905654430389404
    5. '=[]' → logprob: -5.905654430389404
    6. '):' → logprob: -6.030654430389404
    7. ')' → logprob: -6.280654430389404
    8. '(' → logprob: -7.280654430389404
    9. 'separator' → logprob: -7.530654430389404
    10. ',se' → logprob: -7.780654430389404

Token 906: 'sé' (ID: 73483)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1651974618434906
    2. '"' → logprob: -2.2901973724365234
    3. '='' → logprob: -3.4151973724365234
    4. '="' → logprob: -4.415197372436523
    5. '=' → logprob: -6.540197372436523
    6. ')' → logprob: -6.540197372436523
    7. 'sep' → logprob: -6.540197372436523
    8. 'def' → logprob: -7.915197372436523
    9. '=None' → logprob: -8.165197372436523
    10. '=',' → logprob: -8.415197372436523

Token 907: 'par' (ID: 796)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002610974188428372
    2. 'parator' → logprob: -8.375261306762695
    3. 'par' → logprob: -10.500261306762695
    4. 'PARATOR' → logprob: -13.250261306762695
    5. 'pard' → logprob: -15.125261306762695
    6. 'pa' → logprob: -15.125261306762695
    7. 'perator' → logprob: -15.375261306762695
    8. 'pal' → logprob: -16.500261306762695
    9. 'pr' → logprob: -16.750261306762695
    10. 'para' → logprob: -17.250261306762695

Token 908: 'ateur' (ID: 12477)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06667832285165787
    2. 'ar' → logprob: -3.316678285598755
    3. 'p' → logprob: -4.191678524017334
    4. 'ateur' → logprob: -5.441678524017334
    5. 'par' → logprob: -5.441678524017334
    6. 'ator' → logprob: -6.691678524017334
    7. 'parator' → logprob: -6.691678524017334
    8. 'rate' → logprob: -7.566678524017334
    9. 'a' → logprob: -7.816678524017334
    10. '=' → logprob: -8.441678047180176

Token 909: ').' (ID: 741)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14788565039634705
    2. '='' → logprob: -2.27288556098938
    3. ')' → logprob: -4.147885799407959
    4. '="' → logprob: -4.772885799407959
    5. '=',' → logprob: -5.147885799407959
    6. ' =' → logprob: -6.772885799407959
    7. '=",' → logprob: -7.022885799407959
    8. ',' → logprob: -7.522885799407959
    9. '):' → logprob: -7.897885799407959
    10. '=None' → logprob: -8.0228853225708

Token 910: ' Convert' (ID: 15629)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010673471260815859
    2. ' def' → logprob: -6.876067161560059
    3. ')' → logprob: -11.001067161560059
    4. 'join' → logprob: -12.001067161560059
    5. ',' → logprob: -13.001067161560059
    6. ' =' → logprob: -13.376067161560059
    7. ' join' → logprob: -13.501067161560059
    8. '=' → logprob: -13.876067161560059
    9. '.join' → logprob: -13.876067161560059
    10. 'return' → logprob: -14.126067161560059

Token 911: 'it' (ID: 278)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.42575472593307495
    2. 'e' → logprob: -1.5507547855377197
    3. 'a' → logprob: -2.3007547855377197
    4. 'er' → logprob: -5.175754547119141
    5. '(e' → logprob: -5.550754547119141
    6. ' a' → logprob: -5.675754547119141
    7. '(' → logprob: -5.800754547119141
    8. 'def' → logprob: -5.925754547119141
    9. 's' → logprob: -5.925754547119141
    10. 'ize' → logprob: -6.425754547119141

Token 912: ' chaque' (ID: 21194)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22855785489082336
    2. '(a' → logprob: -1.603557825088501
    3. ' a' → logprob: -6.60355806350708
    4. 'map' → logprob: -7.72855806350708
    5. 'def' → logprob: -7.97855806350708
    6. '(' → logprob: -8.228557586669922
    7. 'list' → logprob: -9.103557586669922
    8. 'str' → logprob: -9.603557586669922
    9. '(str' → logprob: -9.603557586669922
    10. ' (' → logprob: -9.603557586669922

Token 913: ' élément' (ID: 99627)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9707520008087158
    2. 'str' → logprob: -1.5957520008087158
    3. 'elem' → logprob: -2.095752000808716
    4. 'element' → logprob: -2.345752000808716
    5. 'a' → logprob: -2.595752000808716
    6. 'token' → logprob: -2.845752000808716
    7. '(x' → logprob: -3.845752000808716
    8. 'item' → logprob: -3.970752000808716
    9. '(str' → logprob: -5.220751762390137
    10. '(a' → logprob: -5.595751762390137

Token 914: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5473499894142151
    2. '(str' → logprob: -1.0473499298095703
    3. '(a' → logprob: -2.7973499298095703
    4. 'to' → logprob: -5.29734992980957
    5. 'a' → logprob: -6.42234992980957
    6. 'str' → logprob: -6.92234992980957
    7. '(
' → logprob: -7.29734992980957
    8. '(lambda' → logprob: -8.29734992980957
    9. ',' → logprob: -8.79734992980957
    10. 'into' → logprob: -9.04734992980957

Token 915: ' "' (ID: 392)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0020445059053599834
    2. 'str' → logprob: -6.627044677734375
    3. ' a' → logprob: -7.752044677734375
    4. 'map' → logprob: -8.252044677734375
    5. ' str' → logprob: -11.002044677734375
    6. ' map' → logprob: -11.752044677734375
    7. '
' → logprob: -13.252044677734375
    8. '```' → logprob: -14.502044677734375
    9. 'list' → logprob: -14.877044677734375
    10. '(a' → logprob: -16.252044677734375

Token 916: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0014989104820415378
    2. 'str' → logprob: -7.501498699188232
    3. 'map' → logprob: -7.501498699188232
    4. ' a' → logprob: -7.876498699188232
    5. ' map' → logprob: -11.87649917602539
    6. ' str' → logprob: -12.25149917602539
    7. '```' → logprob: -14.37649917602539
    8. '(a' → logprob: -15.37649917602539
    9. ')a' → logprob: -15.75149917602539
    10. 'list' → logprob: -15.87649917602539

Token 917: '"' (ID: 1)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.14129436016082764
    2. ')' → logprob: -2.891294479370117
    3. 'into' → logprob: -3.641294479370117
    4. ',' → logprob: -3.766294479370117
    5. 'def' → logprob: -4.766294479370117
    6. ' to' → logprob: -5.016294479370117
    7. '(str' → logprob: -5.766294479370117
    8. 'str' → logprob: -6.266294479370117
    9. ' into' → logprob: -6.266294479370117
    10. '_to' → logprob: -6.641294479370117

Token 918: ' en' (ID: 469)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.15850824117660522
    2. 'into' → logprob: -2.15850830078125
    3. ' into' → logprob: -4.78350830078125
    4. 'def' → logprob: -5.15850830078125
    5. '_to' → logprob: -5.28350830078125
    6. ' to' → logprob: -5.40850830078125
    7. ',' → logprob: -5.53350830078125
    8. 'str' → logprob: -6.78350830078125
    9. '=' → logprob: -7.15850830078125
    10. ')' → logprob: -7.53350830078125

Token 919: ' chaîne' (ID: 89288)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0002655079588294029
    2. ' str' → logprob: -8.250265121459961
    3. 'string' → logprob: -12.375265121459961
    4. '(str' → logprob: -18.00026512145996
    5. '	str' → logprob: -18.50026512145996
    6. '=str' → logprob: -18.75026512145996
    7. '```' → logprob: -18.87526512145996
    8. 'stri' → logprob: -19.00026512145996
    9. 's' → logprob: -19.37526512145996
    10. '
' → logprob: -19.50026512145996

Token 920: ',
' (ID: 412)
  Prédit: '(se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(se' → logprob: -0.03931692615151405
    2. '(' → logprob: -3.9143168926239014
    3. '(a' → logprob: -5.0393171310424805
    4. '(separator' → logprob: -6.0393171310424805
    5. 'sep' → logprob: -6.2893171310424805
    6. '(
' → logprob: -6.4143171310424805
    7. 'a' → logprob: -6.4143171310424805
    8. ',' → logprob: -6.7893171310424805
    9. '(s' → logprob: -7.2893171310424805
    10. '(str' → logprob: -7.7893171310424805

Token 921: '#' (ID: 2)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.18498258292675018
    2. ' sep' → logprob: -1.8099825382232666
    3. 'def' → logprob: -5.434982776641846
    4. 'join' → logprob: -8.059982299804688
    5. ' join' → logprob: -8.809982299804688
    6. ' def' → logprob: -8.934982299804688
    7. 's' → logprob: -9.309982299804688
    8. 'separator' → logprob: -9.559982299804688
    9. ' s' → logprob: -10.059982299804688
    10. '   ' → logprob: -11.184982299804688

Token 922: ' puis' (ID: 18766)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.12888379395008087
    2. ' sep' → logprob: -2.1288838386535645
    3. 'separator' → logprob: -7.0038838386535645
    4. 'end' → logprob: -7.7538838386535645
    5. 'join' → logprob: -7.7538838386535645
    6. 'return' → logprob: -10.003883361816406
    7. ' end' → logprob: -10.128883361816406
    8. ' join' → logprob: -10.253883361816406
    9. ' separator' → logprob: -10.628883361816406
    10. 'def' → logprob: -11.378883361816406

Token 923: ' les' (ID: 1341)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.003001358127221465
    2. ' sep' → logprob: -6.0030012130737305
    3. 'print' → logprob: -7.6280012130737305
    4. 'join' → logprob: -11.50300121307373
    5. '.sep' → logprob: -11.50300121307373
    6. 'return' → logprob: -11.75300121307373
    7. 'separator' → logprob: -12.25300121307373
    8. '_sep' → logprob: -13.00300121307373
    9. ' print' → logprob: -13.50300121307373
    10. 'se' → logprob: -13.50300121307373

Token 924: ' concat' (ID: 73950)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.32360175251960754
    2. 'join' → logprob: -1.5736017227172852
    3. '.join' → logprob: -2.698601722717285
    4. 'sep' → logprob: -7.073601722717285
    5. '.print' → logprob: -7.698601722717285
    6. 'joined' → logprob: -8.073601722717285
    7. 'def' → logprob: -8.823601722717285
    8. 'return' → logprob: -10.448601722717285
    9. '.write' → logprob: -10.823601722717285
    10. ' print' → logprob: -10.948601722717285

Token 925: 'ène' (ID: 22902)
  Prédit: 'ène'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ène' → logprob: -0.024467578157782555
    2. 'éné' → logprob: -4.649467468261719
    3. 'ene' → logprob: -5.649467468261719
    4. 'énez' → logprob: -6.149467468261719
    5. 'ené' → logprob: -6.149467468261719
    6. 'en' → logprob: -6.774467468261719
    7. 'én' → logprob: -6.899467468261719
    8. '"' → logprob: -6.899467468261719
    9. 'é' → logprob: -7.024467468261719
    10. 'e' → logprob: -7.274467468261719

Token 926: ' avec' (ID: 3937)
  Prédit: '(se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(se' → logprob: -0.11231368035078049
    2. '(' → logprob: -2.362313747406006
    3. '(a' → logprob: -5.362313747406006
    4. '(
' → logprob: -5.862313747406006
    5. 'sep' → logprob: -5.862313747406006
    6. '('' → logprob: -7.612313747406006
    7. '(separator' → logprob: -8.487313270568848
    8. '(join' → logprob: -8.737313270568848
    9. '(s' → logprob: -8.862313270568848
    10. 'a' → logprob: -8.987313270568848

Token 927: ' le' (ID: 505)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -7.719917630311102e-05
    2. ' sep' → logprob: -9.500077247619629
    3. 'separator' → logprob: -13.625077247619629
    4. 'str' → logprob: -14.500077247619629
    5. 'se' → logprob: -14.750077247619629
    6. '_sep' → logprob: -16.500076293945312
    7. 'sept' → logprob: -16.625076293945312
    8. '.sep' → logprob: -18.500076293945312
    9. 'Sep' → logprob: -19.000076293945312
    10. '"' → logprob: -19.250076293945312

Token 928: ' sépar' (ID: 97160)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -1.3902033970225602e-05
    2. 'separator' → logprob: -11.750014305114746
    3. ' sep' → logprob: -12.125014305114746
    4. 'str' → logprob: -15.250014305114746
    5. 'se' → logprob: -16.00001335144043
    6. 'sept' → logprob: -17.37501335144043
    7. '
' → logprob: -17.37501335144043
    8. '_sep' → logprob: -19.25001335144043
    9. 's' → logprob: -19.62501335144043
    10. ' separator' → logprob: -20.12501335144043

Token 929: 'ateur' (ID: 12477)
  Prédit: 'ator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -0.524755597114563
    2. 'ateur' → logprob: -0.899755597114563
    3. 'sep' → logprob: -7.149755477905273
    4. 'separator' → logprob: -8.649755477905273
    5. 'ate' → logprob: -8.774755477905273
    6. 'acteur' → logprob: -9.274755477905273
    7. 'parator' → logprob: -9.399755477905273
    8. 'eur' → logprob: -10.024755477905273
    9. 'at' → logprob: -10.149755477905273
    10. 'a' → logprob: -10.149755477905273

Token 930: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6395801305770874
    2. '(se' → logprob: -2.014580249786377
    3. ',' → logprob: -2.889580249786377
    4. '(separator' → logprob: -3.014580249786377
    5. '(' → logprob: -3.139580249786377
    6. '.join' → logprob: -3.264580249786377
    7. ')' → logprob: -3.264580249786377
    8. '(
' → logprob: -3.389580249786377
    9. 'sep' → logprob: -3.514580249786377
    10. '.' → logprob: -4.514580249786377

Token 931: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.180258191714529e-06
    2. ' def' → logprob: -12.250008583068848
    3. '"' → logprob: -13.125008583068848
    4. ''' → logprob: -14.750008583068848
    5. ')' → logprob: -15.250008583068848
    6. '   ' → logprob: -15.375008583068848
    7. 'join' → logprob: -15.750008583068848
    8. 'str' → logprob: -16.25000762939453
    9. 'return' → logprob: -16.37500762939453
    10. '```' → logprob: -17.62500762939453

Token 932: ' JA' (ID: 84944)
  Prédit: 'join'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.02403869479894638
    2. 'print' → logprob: -4.399038791656494
    3. 's' → logprob: -6.149038791656494
    4. 'a' → logprob: -6.274038791656494
    5. 'pr' → logprob: -6.774038791656494
    6. 'ja' → logprob: -6.899038791656494
    7. 'as' → logprob: -7.024038791656494
    8. 'seq' → logprob: -7.274038791656494
    9. 'j' → logprob: -7.524038791656494
    10. 'joins' → logprob: -7.649038791656494

Token 933: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5673544406890869
    2. '('' → logprob: -1.442354440689087
    3. '(s' → logprob: -3.442354440689087
    4. 'M' → logprob: -3.692354440689087
    5. '(*' → logprob: -4.317354202270508
    6. 'C' → logprob: -4.692354202270508
    7. '(a' → logprob: -4.692354202270508
    8. '("' → logprob: -4.817354202270508
    9. '(r' → logprob: -5.067354202270508
    10. 'R' → logprob: -5.067354202270508

Token 934: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02238507941365242
    2. ',a' → logprob: -4.022385120391846
    3. ',se' → logprob: -6.522385120391846
    4. ',s' → logprob: -6.897385120391846
    5. '):' → logprob: -7.272385120391846
    6. '(a' → logprob: -8.522384643554688
    7. 'sep' → logprob: -8.897384643554688
    8. '):
' → logprob: -9.272384643554688
    9. ',l' → logprob: -9.397384643554688
    10. ',str' → logprob: -9.397384643554688

Token 935: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -7.493430894101039e-05
    2. ' sep' → logprob: -9.500075340270996
    3. ' ' → logprob: -18.25007438659668
    4. '   ' → logprob: -18.25007438659668
    5. ')' → logprob: -18.37507438659668
    6. '
' → logprob: -20.00007438659668
    7. '.sep' → logprob: -20.12507438659668
    8. 'sec' → logprob: -20.37507438659668
    9. 'Sep' → logprob: -20.50007438659668
    10. 'SEP' → logprob: -20.62507438659668

Token 936: '):
' (ID: 1883)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '='' → logprob: -0.374659925699234
    2. '="' → logprob: -1.6246598958969116
    3. '=' → logprob: -2.999660015106201
    4. '=',' → logprob: -3.124660015106201
    5. '=",' → logprob: -4.249660015106201
    6. '=None' → logprob: -5.374660015106201
    7. '='.' → logprob: -7.374660015106201
    8. '=r' → logprob: -8.124659538269043
    9. '=".' → logprob: -8.249659538269043
    10. 'r' → logprob: -8.249659538269043

Token 937: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.41191190481185913
    2. ' return' → logprob: -1.286911964416504
    3. '   ' → logprob: -3.036911964416504
    4. '):' → logprob: -5.286911964416504
    5. ':return' → logprob: -5.536911964416504
    6. '	return' → logprob: -5.911911964416504
    7. 'def' → logprob: -7.536911964416504
    8. '):
' → logprob: -7.786911964416504
    9. ':' → logprob: -7.786911964416504
    10. ')' → logprob: -8.786911964416504

Token 938: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -5.836499985889532e-05
    2. ' return' → logprob: -9.7500581741333
    3. '	return' → logprob: -20.375059127807617
    4. ':return' → logprob: -20.750059127807617
    5. 'eturn' → logprob: -21.125059127807617
    6. ')return' → logprob: -21.125059127807617
    7. '   ' → logprob: -23.000059127807617
    8. '{return' → logprob: -24.250059127807617
    9. '_return' → logprob: -24.875059127807617
    10. 'ret' → logprob: -25.750059127807617

Token 939: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -1.4617256056226324e-05
    2. ' sep' → logprob: -11.500014305114746
    3. 'str' → logprob: -12.375014305114746
    4. 'se' → logprob: -15.500014305114746
    5. 'sept' → logprob: -17.500015258789062
    6. 'separator' → logprob: -18.750015258789062
    7. '.sep' → logprob: -20.250015258789062
    8. ' ' → logprob: -20.500015258789062
    9. '	' → logprob: -20.625015258789062
    10. '_sep' → logprob: -20.625015258789062

Token 940: '.join' (ID: 11004)
  Prédit: '.join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.join' → logprob: -0.03805893659591675
    2. '.' → logprob: -3.2880589962005615
    3. 'join' → logprob: -11.41305923461914
    4. ' .' → logprob: -12.53805923461914
    5. '.j' → logprob: -13.66305923461914
    6. '"' → logprob: -14.41305923461914
    7. '.Join' → logprob: -14.78805923461914
    8. ').' → logprob: -15.78805923461914
    9. '''.' → logprob: -15.78805923461914
    10. '<|end|>' → logprob: -16.41305923461914

Token 941: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.3557441234588623
    2. '(str' → logprob: -1.8557441234588623
    3. 'map' → logprob: -2.1057441234588623
    4. 'str' → logprob: -4.105744361877441
    5. '[str' → logprob: -5.355744361877441
    6. ' map' → logprob: -9.980744361877441
    7. '([' → logprob: -11.605744361877441
    8. '	map' → logprob: -14.355744361877441
    9. '.map' → logprob: -14.605744361877441
    10. 'a' → logprob: -14.730744361877441

Token 942: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.16023407876491547
    2. 'str' → logprob: -1.9102340936660767
    3. '```' → logprob: -12.535234451293945
    4. '=str' → logprob: -12.660234451293945
    5. '[str' → logprob: -13.660234451293945
    6. ' str' → logprob: -13.660234451293945
    7. '	str' → logprob: -14.535234451293945
    8. ',str' → logprob: -16.035234451293945
    9. '
' → logprob: -16.410234451293945
    10. '   ' → logprob: -17.035234451293945

Token 943: ',' (ID: 11)
  Prédit: ',a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.31760522723197937
    2. '(a' → logprob: -1.6926052570343018
    3. ',' → logprob: -2.4426052570343018
    4. 'a' → logprob: -6.817605018615723
    5. ' ,' → logprob: -10.942605018615723
    6. ' a' → logprob: -11.442605018615723
    7. '(' → logprob: -12.317605018615723
    8. ',
' → logprob: -13.442605018615723
    9. '#a' → logprob: -13.567605018615723
    10. ')a' → logprob: -13.567605018615723

Token 944: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.306760805164231e-05
    2. ' a' → logprob: -11.25001335144043
    3. ')a' → logprob: -20.00001335144043
    4. '	a' → logprob: -20.12501335144043
    5. '(a' → logprob: -21.37501335144043
    6. '[a' → logprob: -22.25001335144043
    7. '_a' → logprob: -22.87501335144043
    8. 'а' → logprob: -23.00001335144043
    9. '#a' → logprob: -23.25001335144043
    10. ',a' → logprob: -23.50001335144043

Token 945: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -1.9862216504407115e-05
    2. ')' → logprob: -12.000020027160645
    3. '()))' → logprob: -12.375020027160645
    4. ' ))' → logprob: -12.500020027160645
    5. ')))' → logprob: -12.625020027160645
    6. '))
' → logprob: -13.375020027160645
    7. '));' → logprob: -15.125020027160645
    8. '))+' → logprob: -15.750020027160645
    9. ' ' → logprob: -16.750019073486328
    10. '))

' → logprob: -16.875019073486328

Token 946: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16715990006923676
    2. '#' → logprob: -2.1671597957611084
    3. '<|end|>' → logprob: -4.1671600341796875
    4. '
' → logprob: -4.4171600341796875
    5. '```' → logprob: -5.1671600341796875
    6. '(' → logprob: -6.7921600341796875
    7. '\n' → logprob: -6.7921600341796875
    8. '(
' → logprob: -6.9171600341796875
    9. ')' → logprob: -7.4171600341796875
    10. '[' → logprob: -7.7921600341796875

Token 947: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001347615267150104
    2. '#' → logprob: -7.001347541809082
    3. 'class' → logprob: -8.001347541809082
    4. 'from' → logprob: -9.501347541809082
    5. 'import' → logprob: -11.001347541809082
    6. '@' → logprob: -12.501347541809082
    7. 'd' → logprob: -12.751347541809082
    8. 'de' → logprob: -13.751347541809082
    9. '"""' → logprob: -15.501347541809082
    10. '\' → logprob: -15.751347541809082

Token 948: ' une' (ID: 2463)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4368569850921631
    2. 'def' → logprob: -2.436856985092163
    3. ' a' → logprob: -2.561856985092163
    4. ' def' → logprob: -3.436856985092163
    5. 'i' → logprob: -3.811856985092163
    6. ' s' → logprob: -3.936856985092163
    7. ' l' → logprob: -4.061857223510742
    8. ' i' → logprob: -4.186857223510742
    9. 's' → logprob: -4.561857223510742
    10. ' la' → logprob: -4.686857223510742

Token 949: ' liste' (ID: 31719)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24771519005298615
    2. 'a' → logprob: -1.9977152347564697
    3. '_' → logprob: -4.247714996337891
    4. '#' → logprob: -4.622714996337891
    5. ' def' → logprob: -4.747714996337891
    6. ' a' → logprob: -5.122714996337891
    7. 's' → logprob: -5.247714996337891
    8. ' s' → logprob: -5.622714996337891
    9. 't' → logprob: -5.747714996337891
    10. 'i' → logprob: -5.747714996337891

Token 950: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4709510803222656
    2. 'a' → logprob: -1.8459510803222656
    3. '(a' → logprob: -1.9709510803222656
    4. ' =' → logprob: -3.2209510803222656
    5. '[a' → logprob: -4.720951080322266
    6. ',' → logprob: -4.970951080322266
    7. '=' → logprob: -5.720951080322266
    8. '[' → logprob: -6.345951080322266
    9. 'of' → logprob: -6.345951080322266
    10. '#' → logprob: -6.345951080322266

Token 951: ' listes' (ID: 179198)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7181404232978821
    2. 'a' → logprob: -0.8431404232978821
    3. 'def' → logprob: -3.0931403636932373
    4. 'ints' → logprob: -4.718140602111816
    5. 'range' → logprob: -4.968140602111816
    6. 'list' → logprob: -5.093140602111816
    7. 'str' → logprob: -5.468140602111816
    8. 'strings' → logprob: -6.343140602111816
    9. 'lst' → logprob: -6.343140602111816
    10. 'l' → logprob: -6.718140602111816

Token 952: ' "' (ID: 392)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005012801848351955
    2. '(a' → logprob: -5.3800129890441895
    3. '#' → logprob: -8.755012512207031
    4. ' def' → logprob: -9.755012512207031
    5. 'a' → logprob: -9.880012512207031
    6. '(L' → logprob: -11.005012512207031
    7. '(l' → logprob: -11.130012512207031
    8. '(
' → logprob: -11.505012512207031
    9. '(def' → logprob: -11.505012512207031
    10. '(lst' → logprob: -11.755012512207031

Token 953: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004919327795505524
    2. 'L' → logprob: -6.879919528961182
    3. 'A' → logprob: -7.004919528961182
    4. 'ls' → logprob: -7.004919528961182
    5. 'l' → logprob: -7.129919528961182
    6. 'lst' → logprob: -7.129919528961182
    7. 'aa' → logprob: -9.254919052124023
    8. 'x' → logprob: -9.504919052124023
    9. 'll' → logprob: -9.879919052124023
    10. 'lists' → logprob: -10.004919052124023

Token 954: '",' (ID: 672)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.1715140342712402
    2. ',' → logprob: -1.2965140342712402
    3. 'def' → logprob: -2.0465140342712402
    4. '):
' → logprob: -2.0465140342712402
    5. '",' → logprob: -3.5465140342712402
    6. '":' → logprob: -3.9215140342712402
    7. '[' → logprob: -4.42151403427124
    8. ',"' → logprob: -4.42151403427124
    9. '(",' → logprob: -4.67151403427124
    10. ')' → logprob: -4.79651403427124

Token 955: ' entre' (ID: 3853)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00033879990223795176
    2. '#' → logprob: -8.000338554382324
    3. ' def' → logprob: -12.625338554382324
    4. '
' → logprob: -17.37533950805664
    5. 'return' → logprob: -17.37533950805664
    6. 'from' → logprob: -18.87533950805664
    7. ' #' → logprob: -19.62533950805664
    8. 'for' → logprob: -20.37533950805664
    9. ' déf' → logprob: -20.37533950805664
    10. ')' → logprob: -20.75033950805664

Token 956: 'lace' (ID: 29578)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.060667797923088074
    2. 'a' → logprob: -3.5606677532196045
    3. '[]' → logprob: -4.185667991638184
    4. 'lambda' → logprob: -6.185667991638184
    5. 'cro' → logprob: -6.310667991638184
    6. '[' → logprob: -6.560667991638184
    7. 'for' → logprob: -7.060667991638184
    8. 's' → logprob: -7.310667991638184
    9. 'les' → logprob: -7.310667991638184
    10. 'l' → logprob: -7.435667991638184

Token 957: ' les' (ID: 1341)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2400527149438858
    2. '(*' → logprob: -2.3650527000427246
    3. '(a' → logprob: -2.7400527000427246
    4. '*' → logprob: -3.9900527000427246
    5. 'a' → logprob: -4.115052700042725
    6. '[a' → logprob: -5.865052700042725
    7. 's' → logprob: -6.240052700042725
    8. 't' → logprob: -6.240052700042725
    9. 'for' → logprob: -6.615052700042725
    10. '[' → logprob: -6.740052700042725

Token 958: ' valeurs' (ID: 73668)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.44405993819236755
    2. '*' → logprob: -1.44405996799469
    3. '*a' → logprob: -3.1940598487854004
    4. 'list' → logprob: -3.5690598487854004
    5. 'zip' → logprob: -4.1940598487854
    6. 'map' → logprob: -4.9440598487854
    7. '*[' → logprob: -5.0690598487854
    8. '[a' → logprob: -5.3190598487854
    9. 'it' → logprob: -5.4440598487854
    10. 'elem' → logprob: -5.9440598487854

Token 959: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04025929421186447
    2. ' =' → logprob: -4.04025936126709
    3. '(*' → logprob: -4.54025936126709
    4. '(a' → logprob: -5.54025936126709
    5. '=' → logprob: -5.79025936126709
    6. '*' → logprob: -6.79025936126709
    7. 'a' → logprob: -6.91525936126709
    8. '[a' → logprob: -7.16525936126709
    9. '[' → logprob: -8.04025936126709
    10. '#' → logprob: -8.54025936126709

Token 960: ' chaque' (ID: 21194)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.702583909034729
    2. '*' → logprob: -1.577583909034729
    3. 'it' → logprob: -1.702583909034729
    4. 'a' → logprob: -2.3275837898254395
    5. '*a' → logprob: -4.0775837898254395
    6. '
' → logprob: -7.9525837898254395
    7. '*[' → logprob: -8.577584266662598
    8. '```' → logprob: -8.702584266662598
    9. ' zip' → logprob: -8.827584266662598
    10. 'map' → logprob: -8.952584266662598

Token 961: ' sous' (ID: 14487)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3782458007335663
    2. 's' → logprob: -2.0032458305358887
    3. 'sub' → logprob: -2.8782458305358887
    4. 'l' → logprob: -3.1282458305358887
    5. 'liste' → logprob: -3.7532458305358887
    6. 'lst' → logprob: -3.8782458305358887
    7. 'row' → logprob: -4.253245830535889
    8. 'ligne' → logprob: -4.628245830535889
    9. '```' → logprob: -6.128245830535889
    10. 'range' → logprob: -6.378245830535889

Token 962: '-l' (ID: 2887)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5922949910163879
    2. 'list' → logprob: -0.9672949910163879
    3. 'liste' → logprob: -3.092294931411743
    4. '[' → logprob: -5.092295169830322
    5. '[a' → logprob: -5.342295169830322
    6. 'range' → logprob: -6.467295169830322
    7. '[
' → logprob: -6.592295169830322
    8. 'l' → logprob: -6.717295169830322
    9. '[]' → logprob: -6.717295169830322
    10. 'for' → logprob: -6.967295169830322

Token 963: 'iste' (ID: 4872)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4700922966003418
    2. 'ist' → logprob: -1.0950922966003418
    3. 'iste' → logprob: -3.470092296600342
    4. 'st' → logprob: -4.970092296600342
    5. 'e' → logprob: -7.220092296600342
    6. '[' → logprob: -7.720092296600342
    7. '[a' → logprob: -8.2200927734375
    8. 'ists' → logprob: -8.5950927734375
    9. 'is' → logprob: -8.7200927734375
    10. 'ine' → logprob: -9.2200927734375

Token 964: ' avec' (ID: 3937)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003963347524404526
    2. ' =' → logprob: -6.878963470458984
    3. '=' → logprob: -7.503963470458984
    4. 'a' → logprob: -7.628963470458984
    5. '(*' → logprob: -7.753963470458984
    6. '#' → logprob: -7.878963470458984
    7. '(a' → logprob: -8.128963470458984
    8. ',' → logprob: -8.378963470458984
    9. 'zip' → logprob: -8.628963470458984
    10. '*' → logprob: -8.878963470458984

Token 965: ' "' (ID: 392)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9283168315887451
    2. 'dd' → logprob: -2.053316831588745
    3. '"\' → logprob: -2.178316831588745
    4. 'range' → logprob: -2.428316831588745
    5. '"' → logprob: -2.928316831588745
    6. ''\' → logprob: -3.053316831588745
    7. 'it' → logprob: -3.678316831588745
    8. 'zip' → logprob: -3.678316831588745
    9. '
' → logprob: -3.928316831588745
    10. '[a' → logprob: -4.178317070007324

Token 966: 't' (ID: 83)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.857244074344635
    2. '"' → logprob: -1.6072440147399902
    3. '"\' → logprob: -2.4822440147399902
    4. ''\' → logprob: -2.4822440147399902
    5. '',' → logprob: -2.8572440147399902
    6. 'a' → logprob: -3.3572440147399902
    7. ''a' → logprob: -3.8572440147399902
    8. '",' → logprob: -3.8572440147399902
    9. '','' → logprob: -3.8572440147399902
    10. '","' → logprob: -4.60724401473999

Token 967: '",' (ID: 672)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.11743141710758209
    2. 'sep' → logprob: -3.492431402206421
    3. 'ep' → logprob: -3.742431402206421
    4. '"' → logprob: -4.617431640625
    5. '"\' → logprob: -4.992431640625
    6. 'a' → logprob: -4.992431640625
    7. 'e' → logprob: -5.117431640625
    8. 'abs' → logprob: -5.617431640625
    9. ''\' → logprob: -5.867431640625
    10. 'o' → logprob: -6.242431640625

Token 968: ' puis' (ID: 18766)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.2633696496486664
    2. 'def' → logprob: -1.5133696794509888
    3. ' sep' → logprob: -4.763369560241699
    4. ' def' → logprob: -6.138369560241699
    5. '
' → logprob: -8.0133695602417
    6. 'return' → logprob: -8.8883695602417
    7. '#' → logprob: -9.8883695602417
    8. 'separator' → logprob: -10.3883695602417
    9. ' 
' → logprob: -11.0133695602417
    10. 't' → logprob: -11.1383695602417

Token 969: ' chaque' (ID: 21194)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.0083384420722723
    2. 'return' → logprob: -5.633338451385498
    3. ''\' → logprob: -6.383338451385498
    4. 'def' → logprob: -6.883338451385498
    5. 't' → logprob: -7.383338451385498
    6. ' sep' → logprob: -7.758338451385498
    7. '"\' → logprob: -7.758338451385498
    8. '
' → logprob: -8.75833797454834
    9. '\n' → logprob: -8.88333797454834
    10. '#' → logprob: -9.50833797454834

Token 970: ' bloc' (ID: 51218)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7643992304801941
    2. ''\' → logprob: -1.5143992900848389
    3. 'sub' → logprob: -2.764399290084839
    4. 'a' → logprob: -3.014399290084839
    5. 's' → logprob: -3.139399290084839
    6. '"\' → logprob: -3.764399290084839
    7. 'sep' → logprob: -3.764399290084839
    8. '
' → logprob: -4.01439905166626
    9. 't' → logprob: -4.26439905166626
    10. '('\' → logprob: -4.38939905166626

Token 971: ' avec' (ID: 3937)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6391699910163879
    2. 'sep' → logprob: -1.2641699314117432
    3. ' with' → logprob: -3.014169931411743
    4. 'avec' → logprob: -3.139169931411743
    5. ' avec' → logprob: -3.639169931411743
    6. 'with' → logprob: -3.889169931411743
    7. ' t' → logprob: -4.389170169830322
    8. '(t' → logprob: -5.014170169830322
    9. 'se' → logprob: -5.264170169830322
    10. '
' → logprob: -5.514170169830322

Token 972: ' "' (ID: 392)
  Prédit: '"\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"\' → logprob: -0.2510550916194916
    2. ''\' → logprob: -1.751055121421814
    3. '\n' → logprob: -3.7510550022125244
    4. 't' → logprob: -3.8760550022125244
    5. 'n' → logprob: -7.0010552406311035
    6. '\
' → logprob: -7.7510552406311035
    7. 'sep' → logprob: -7.7510552406311035
    8. '("\' → logprob: -7.8760552406311035
    9. '"' → logprob: -7.8760552406311035
    10. '
' → logprob: -8.126054763793945

Token 973: 's' (ID: 82)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.18772056698799133
    2. '"\' → logprob: -2.437720537185669
    3. 'n' → logprob: -3.312720537185669
    4. 't' → logprob: -4.312720775604248
    5. ''\' → logprob: -4.312720775604248
    6. 'sep' → logprob: -4.312720775604248
    7. '"' → logprob: -5.687720775604248
    8. '"""
' → logprob: -7.437720775604248
    9. 'newline' → logprob: -7.437720775604248
    10. '\
' → logprob: -8.18772029876709

Token 974: '".
' (ID: 26880)
  Prédit: 'ep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ep' → logprob: -0.04674972593784332
    2. '")' → logprob: -4.046749591827393
    3. ')' → logprob: -4.546749591827393
    4. 'e' → logprob: -4.921749591827393
    5. '"' → logprob: -5.171749591827393
    6. '">' → logprob: -7.171749591827393
    7. '<|end|>' → logprob: -7.921749591827393
    8. 'p' → logprob: -8.42175006866455
    9. '">\' → logprob: -8.54675006866455
    10. '"""' → logprob: -8.67175006866455

Token 975: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -17.125
    3. '
' → logprob: -20.375
    4. 'return' → logprob: -21.625
    5. '```' → logprob: -22.0
    6. 'ndef' → logprob: -24.5
    7. '#' → logprob: -24.625
    8. '_def' → logprob: -24.75
    9. 't' → logprob: -24.875
    10. '    
' → logprob: -25.0

Token 976: ' J' (ID: 643)
  Prédit: 'JA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'JA' → logprob: -0.32604965567588806
    2. 'def' → logprob: -2.576049566268921
    3. 'JT' → logprob: -2.576049566268921
    4. 'JS' → logprob: -3.826049566268921
    5. 'J' → logprob: -3.826049566268921
    6. 'JL' → logprob: -3.951049566268921
    7. 'JB' → logprob: -4.3260498046875
    8. 'JD' → logprob: -4.7010498046875
    9. 'JJ' → logprob: -4.9510498046875
    10. 'JI' → logprob: -5.0760498046875

Token 977: 'AA' (ID: 8857)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0030125302728265524
    2. '(a' → logprob: -5.878012657165527
    3. 'a' → logprob: -8.878012657165527
    4. ' A' → logprob: -10.878012657165527
    5. '(A' → logprob: -10.878012657165527
    6. '(' → logprob: -11.753012657165527
    7. '```' → logprob: -12.253012657165527
    8. 'S' → logprob: -12.503012657165527
    9. 'T' → logprob: -13.003012657165527
    10. 'N' → logprob: -13.253012657165527

Token 978: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.080963092041202e-06
    2. 'def' → logprob: -12.625004768371582
    3. '(' → logprob: -14.125004768371582
    4. ' (' → logprob: -14.875004768371582
    5. 'a' → logprob: -15.250004768371582
    6. '(
' → logprob: -16.1250057220459
    7. '(A' → logprob: -16.3750057220459
    8. '((' → logprob: -16.5000057220459
    9. '(t' → logprob: -16.7500057220459
    10. '(...' → logprob: -18.1250057220459

Token 979: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02989870309829712
    2. ',a' → logprob: -3.5298986434936523
    3. ',s' → logprob: -9.779898643493652
    4. ' ,' → logprob: -10.029898643493652
    5. 'a' → logprob: -10.654898643493652
    6. ',
' → logprob: -12.279898643493652
    7. ',A' → logprob: -12.654898643493652
    8. 'def' → logprob: -12.904898643493652
    9. '(a' → logprob: -13.029898643493652
    10. ',t' → logprob: -13.154898643493652

Token 980: ' s' (ID: 265)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.18985499441623688
    2. 't' → logprob: -2.3148550987243652
    3. ' sep' → logprob: -3.0648550987243652
    4. ' t' → logprob: -3.6898550987243652
    5. 's' → logprob: -6.064855098724365
    6. ' s' → logprob: -8.689854621887207
    7. '	t' → logprob: -12.814854621887207
    8. ' ' → logprob: -12.814854621887207
    9. '.sep' → logprob: -13.314854621887207
    10. '_sep' → logprob: -13.689854621887207

Token 981: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0054353391751646996
    2. '=' → logprob: -6.380435466766357
    3. '=',' → logprob: -6.505435466766357
    4. ',a' → logprob: -7.255435466766357
    5. '=",' → logprob: -7.255435466766357
    6. ',t' → logprob: -7.880435466766357
    7. ',",' → logprob: -8.2554349899292
    8. ',
' → logprob: -10.0054349899292
    9. '=None' → logprob: -10.8804349899292
    10. 't' → logprob: -11.0054349899292

Token 982: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03804366663098335
    2. ' t' → logprob: -3.288043737411499
    3. '	t' → logprob: -13.788043975830078
    4. 'sep' → logprob: -13.788043975830078
    5. ' ' → logprob: -16.663043975830078
    6. '`t' → logprob: -17.288043975830078
    7. ' sep' → logprob: -17.663043975830078
    8. '   ' → logprob: -18.038043975830078
    9. '  ' → logprob: -18.538043975830078
    10. ' ' → logprob: -18.663043975830078

Token 983: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07904389500617981
    2. '):
' → logprob: -2.5790438652038574
    3. ')' → logprob: -9.204044342041016
    4. '):
' → logprob: -10.829044342041016
    5. '):

' → logprob: -11.079044342041016
    6. '=' → logprob: -12.329044342041016
    7. ' ):' → logprob: -12.454044342041016
    8. ')=' → logprob: -12.704044342041016
    9. 'def' → logprob: -12.829044342041016
    10. ',' → logprob: -13.579044342041016

Token 984: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.002076505683362484
    2. ' return' → logprob: -6.252076625823975
    3. '   ' → logprob: -9.252076148986816
    4. 'def' → logprob: -10.002076148986816
    5. '	return' → logprob: -12.502076148986816
    6. 't' → logprob: -13.502076148986816
    7. 'sep' → logprob: -14.127076148986816
    8. '=' → logprob: -14.627076148986816
    9. 'eturn' → logprob: -15.877076148986816
    10. ')' → logprob: -16.502077102661133

Token 985: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00033593899570405483
    2. ' return' → logprob: -8.000335693359375
    3. 'def' → logprob: -14.875335693359375
    4. 't' → logprob: -16.125335693359375
    5. '   ' → logprob: -18.000335693359375
    6. '	return' → logprob: -19.000335693359375
    7. 's' → logprob: -19.125335693359375
    8. '
' → logprob: -19.250335693359375
    9. ' ' → logprob: -19.250335693359375
    10. 'sep' → logprob: -20.750335693359375

Token 986: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0015624772058799863
    2. 't' → logprob: -6.501562595367432
    3. ' s' → logprob: -9.876562118530273
    4. 'sep' → logprob: -12.126562118530273
    5. '(s' → logprob: -12.876562118530273
    6. ' t' → logprob: -15.001562118530273
    7. '(t' → logprob: -15.626562118530273
    8. '{s' → logprob: -16.376562118530273
    9. 'str' → logprob: -17.001562118530273
    10. '	s' → logprob: -17.126562118530273

Token 987: '.join' (ID: 11004)
  Prédit: '.join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.join' → logprob: -0.0008352391887456179
    2. '.' → logprob: -7.125835418701172
    3. 'sep' → logprob: -10.750835418701172
    4. '.sep' → logprob: -12.500835418701172
    5. 'join' → logprob: -12.875835418701172
    6. 't' → logprob: -12.875835418701172
    7. ' .' → logprob: -14.875835418701172
    8. '.t' → logprob: -15.625835418701172
    9. '(join' → logprob: -17.000835418701172
    10. ').' → logprob: -17.500835418701172

Token 988: '(t' (ID: 2025)
  Prédit: '(J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(J' → logprob: -0.6990579962730408
    2. '([' → logprob: -1.4490580558776855
    3. '(t' → logprob: -1.8240580558776855
    4. '(map' → logprob: -2.5740580558776855
    5. '[t' → logprob: -3.6990580558776855
    6. '[' → logprob: -5.8240580558776855
    7. '[J' → logprob: -7.0740580558776855
    8. 't' → logprob: -7.3240580558776855
    9. 'map' → logprob: -7.8240580558776855
    10. '(' → logprob: -7.9490580558776855

Token 989: '.join' (ID: 11004)
  Prédit: '.join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.join' → logprob: -4.334533878136426e-05
    2. 'join' → logprob: -10.125042915344238
    3. '.' → logprob: -13.625042915344238
    4. '(join' → logprob: -14.250042915344238
    5. '.map' → logprob: -14.625042915344238
    6. ').' → logprob: -15.375042915344238
    7. ' .' → logprob: -15.750042915344238
    8. ')' → logprob: -16.000043869018555
    9. '.j' → logprob: -16.125043869018555
    10. '[j' → logprob: -16.750043869018555

Token 990: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.029997505247592926
    2. 'map' → logprob: -3.5299975872039795
    3. '(str' → logprob: -8.404997825622559
    4. ' map' → logprob: -12.029997825622559
    5. 'str' → logprob: -12.154997825622559
    6. 'a' → logprob: -12.779997825622559
    7. '(list' → logprob: -13.029997825622559
    8. '(' → logprob: -13.154997825622559
    9. '	map' → logprob: -13.154997825622559
    10. 'list' → logprob: -13.779997825622559

Token 991: '(str' (ID: 7946)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.31328749656677246
    2. '(str' → logprob: -1.3132874965667725
    3. '[str' → logprob: -11.563287734985352
    4. 's' → logprob: -12.313287734985352
    5. '	str' → logprob: -12.688287734985352
    6. ' str' → logprob: -12.813287734985352
    7. '=str' → logprob: -13.438287734985352
    8. 'stra' → logprob: -13.938287734985352
    9. 'a' → logprob: -14.563287734985352
    10. 'stri' → logprob: -14.688287734985352

Token 992: ',' (ID: 11)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.8030638098716736
    2. ',' → logprob: -1.1780638694763184
    3. ',x' → logprob: -1.8030638694763184
    4. 'x' → logprob: -3.0530638694763184
    5. 'row' → logprob: -4.303063869476318
    6. '(row' → logprob: -5.178063869476318
    7. ',row' → logprob: -5.428063869476318
    8. ')' → logprob: -6.428063869476318
    9. 'b' → logprob: -6.803063869476318
    10. 'l' → logprob: -7.053063869476318

Token 993: ' b' (ID: 287)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.019045788794755936
    2. 'row' → logprob: -4.519045829772949
    3. 'b' → logprob: -5.894045829772949
    4. 'r' → logprob: -6.394045829772949
    5. 'l' → logprob: -6.644045829772949
    6. 'line' → logprob: -7.394045829772949
    7. 'sub' → logprob: -7.644045829772949
    8. 'y' → logprob: -7.644045829772949
    9. 'e' → logprob: -8.76904582977295
    10. 'v' → logprob: -9.64404582977295

Token 994: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7093638777732849
    2. 'a' → logprob: -1.4593639373779297
    3. '(a' → logprob: -1.8343639373779297
    4. ')' → logprob: -2.3343639373779297
    5. ',a' → logprob: -5.20936393737793
    6. ')a' → logprob: -5.20936393737793
    7. 'b' → logprob: -6.45936393737793
    8. '),' → logprob: -6.70936393737793
    9. ',' → logprob: -6.70936393737793
    10. '(b' → logprob: -7.70936393737793

Token 995: ' for' (ID: 395)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.46082019805908203
    2. '(b' → logprob: -1.085820198059082
    3. 'for' → logprob: -3.710820198059082
    4. ')' → logprob: -5.460820198059082
    5. ' for' → logprob: -6.335820198059082
    6. 'a' → logprob: -7.210820198059082
    7. '(' → logprob: -8.210820198059082
    8. 'b' → logprob: -9.960820198059082
    9. ' (' → logprob: -10.710820198059082
    10. '```' → logprob: -12.210820198059082

Token 996: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.493430894101039e-05
    2. ' b' → logprob: -9.500075340270996
    3. '	b' → logprob: -21.75007438659668
    4. 'a' → logprob: -22.25007438659668
    5. ')b' → logprob: -24.37507438659668
    6. '(b' → logprob: -25.25007438659668
    7. ' ' → logprob: -25.87507438659668
    8. ' ' → logprob: -26.12507438659668
    9. '$b' → logprob: -26.37507438659668
    10. ' б' → logprob: -26.50007438659668

Token 997: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.8117983937263489
    2. ' in' → logprob: -0.9367983937263489
    3. 'a' → logprob: -1.811798334121704
    4. ' a' → logprob: -7.311798572540283
    5. '(a' → logprob: -11.186798095703125
    6. ' ' → logprob: -12.061798095703125
    7. 'import' → logprob: -12.811798095703125
    8. ')a' → logprob: -13.311798095703125
    9. 'b' → logprob: -13.436798095703125
    10. '  ' → logprob: -13.561798095703125

Token 998: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.9027791495318525e-05
    2. ' a' → logprob: -10.875019073486328
    3. '	a' → logprob: -18.500019073486328
    4. '
' → logprob: -19.625019073486328
    5. '   ' → logprob: -20.250019073486328
    6. '[a' → logprob: -20.375019073486328
    7. ')a' → logprob: -20.500019073486328
    8. '(a' → logprob: -20.500019073486328
    9. 'а' → logprob: -21.625019073486328
    10. ' ' → logprob: -21.750019073486328

Token 999: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7252845029579476e-05
    2. ' )' → logprob: -11.125027656555176
    3. ')a' → logprob: -12.375027656555176
    4. '))' → logprob: -12.500027656555176
    5. '())' → logprob: -13.625027656555176
    6. '])' → logprob: -14.500027656555176
    7. ')b' → logprob: -14.500027656555176
    8. 'in' → logprob: -14.750027656555176
    9. 'def' → logprob: -15.000027656555176
    10. ')return' → logprob: -15.125027656555176

Token 1000: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14745371043682098
    2. '#' → logprob: -2.022453784942627
    3. '<|end|>' → logprob: -6.022453784942627
    4. '```' → logprob: -7.397453784942627
    5. 'import' → logprob: -7.772453784942627
    6. '
' → logprob: -7.897453784942627
    7. 'class' → logprob: -8.022453308105469
    8. '<|end|>' → logprob: -8.897453308105469
    9. '\' → logprob: -9.897453308105469
    10. '\n' → logprob: -9.897453308105469

Token 1001: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005069260485470295
    2. '#' → logprob: -5.630069255828857
    3. 'class' → logprob: -6.630069255828857
    4. 'from' → logprob: -9.380069732666016
    5. 'import' → logprob: -10.255069732666016
    6. '@' → logprob: -10.880069732666016
    7. 'd' → logprob: -12.380069732666016
    8. '
' → logprob: -14.130069732666016
    9. 'de' → logprob: -14.130069732666016
    10. '"""' → logprob: -14.755069732666016

Token 1002: ' principale' (ID: 68926)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0020722290500998497
    2. '#' → logprob: -7.002072334289551
    3. 'max' → logprob: -8.00207233428955
    4. 'range' → logprob: -8.25207233428955
    5. 'abs' → logprob: -9.87707233428955
    6. 'g' → logprob: -9.87707233428955
    7. '=' → logprob: -10.12707233428955
    8. ' def' → logprob: -10.12707233428955
    9. 'pow' → logprob: -10.12707233428955
    10. 'min' → logprob: -10.37707233428955

Token 1003: ' du' (ID: 1462)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20502308011054993
    2. '():' → logprob: -1.7050230503082275
    3. '():
' → logprob: -5.705023288726807
    4. '()' → logprob: -8.455022811889648
    5. ' def' → logprob: -10.455022811889648
    6. ':def' → logprob: -11.330022811889648
    7. ':' → logprob: -11.830022811889648
    8. 'de' → logprob: -12.080022811889648
    9. '()
' → logprob: -12.580022811889648
    10. '(
' → logprob: -13.455022811889648

Token 1004: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.288936972618103
    2. 'script' → logprob: -1.788936972618103
    3. 'code' → logprob: -2.9139370918273926
    4. 'program' → logprob: -3.7889370918273926
    5. ' programme' → logprob: -5.663937091827393
    6. ' script' → logprob: -5.913937091827393
    7. ' code' → logprob: -7.913937091827393
    8. 'module' → logprob: -9.413936614990234
    9. '#' → logprob: -9.663936614990234
    10. 'def' → logprob: -10.288936614990234

Token 1005: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003490069881081581
    2. '():' → logprob: -5.753489971160889
    3. '():
' → logprob: -8.378490447998047
    4. '()' → logprob: -9.753490447998047
    5. '()
' → logprob: -11.753490447998047
    6. ' def' → logprob: -12.128490447998047
    7. ':def' → logprob: -12.128490447998047
    8. 'de' → logprob: -13.003490447998047
    9. ':' → logprob: -13.128490447998047
    10. '
' → logprob: -14.003490447998047

Token 1006: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -21.375
    3. '
' → logprob: -21.625
    4. 'de' → logprob: -22.125
    5. ':def' → logprob: -24.0
    6. 'd' → logprob: -24.375
    7. '```' → logprob: -24.375
    8. 'ndef' → logprob: -25.75
    9. '(def' → logprob: -26.875
    10. '\' → logprob: -27.375

Token 1007: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07889342308044434
    2. 'main' → logprob: -2.5788934230804443
    3. '	main' → logprob: -13.078893661499023
    4. ' solve' → logprob: -13.953893661499023
    5. 'solve' → logprob: -14.578893661499023
    6. 'm' → logprob: -16.703893661499023
    7. '_main' → logprob: -16.703893661499023
    8. ' solution' → logprob: -17.703893661499023
    9. ' ma' → logprob: -18.078893661499023
    10. '(main' → logprob: -19.078893661499023

Token 1008: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.372294698550832e-06
    2. ' ():' → logprob: -12.250009536743164
    3. '():
' → logprob: -12.750009536743164
    4. '()' → logprob: -13.375009536743164
    5. '():
' → logprob: -18.625009536743164
    6. '(' → logprob: -19.625009536743164
    7. '():

' → logprob: -20.500009536743164
    8. '(":' → logprob: -20.875009536743164
    9. ' ()' → logprob: -21.125009536743164
    10. '().' → logprob: -21.250009536743164

Token 1009: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012376103550195694
    2. '(' → logprob: -7.501237392425537
    3. '    ' → logprob: -8.626237869262695
    4. ':' → logprob: -9.626237869262695
    5. '()' → logprob: -9.626237869262695
    6. '    
' → logprob: -9.876237869262695
    7. '(n' → logprob: -10.001237869262695
    8. 'n' → logprob: -10.001237869262695
    9. '```' → logprob: -10.126237869262695
    10. '   ' → logprob: -10.376237869262695

Token 1010: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.016206922009587288
    2. '   ' → logprob: -4.766206741333008
    3. ' n' → logprob: -5.016206741333008
    4. 'N' → logprob: -7.516206741333008
    5. 't' → logprob: -8.891206741333008
    6. 'h' → logprob: -9.766206741333008
    7. '	n' → logprob: -10.141206741333008
    8. ' pass' → logprob: -10.266206741333008
    9. 'pass' → logprob: -10.266206741333008
    10. ' ' → logprob: -11.141206741333008

Token 1011: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007788205053657293
    2. 'N' → logprob: -5.507788181304932
    3. '   ' → logprob: -5.632788181304932
    4. 'a' → logprob: -10.25778865814209
    5. ' n' → logprob: -10.75778865814209
    6. 't' → logprob: -11.13278865814209
    7. '#' → logprob: -11.38278865814209
    8. 'h' → logprob: -11.50778865814209
    9. '	n' → logprob: -11.63278865814209
    10. 'pass' → logprob: -12.00778865814209

Token 1012: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5723022818565369
    2. 'n' → logprob: -1.3223023414611816
    3. '()' → logprob: -1.8223023414611816
    4. '():' → logprob: -5.322302341461182
    5. 'N' → logprob: -7.447302341461182
    6. ' =' → logprob: -7.572302341461182
    7. '();' → logprob: -8.447301864624023
    8. '()
' → logprob: -8.447301864624023
    9. '	n' → logprob: -8.697301864624023
    10. '=' → logprob: -9.197301864624023

Token 1013: ' deux' (ID: 10301)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009157383814454079
    2. 'N' → logprob: -4.884157180786133
    3. '   ' → logprob: -7.759157180786133
    4. '()' → logprob: -8.009157180786133
    5. 'I' → logprob: -8.134157180786133
    6. ' n' → logprob: -8.884157180786133
    7. 'l' → logprob: -8.884157180786133
    8. 't' → logprob: -9.759157180786133
    9. ' ' → logprob: -10.884157180786133
    10. 'x' → logprob: -10.884157180786133

Token 1014: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.25692126154899597
    2. ' ent' → logprob: -1.8819212913513184
    3. ' nombres' → logprob: -3.5069212913513184
    4. ' integers' → logprob: -4.006921291351318
    5. 'int' → logprob: -4.506921291351318
    6. 'nombre' → logprob: -5.506921291351318
    7. 'inte' → logprob: -5.506921291351318
    8. ' ' → logprob: -5.756921291351318
    9. 'ints' → logprob: -6.756921291351318
    10. 'n' → logprob: -6.881921291351318

Token 1015: 'iers' (ID: 11012)
  Prédit: 'rees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rees' → logprob: -0.530921220779419
    2. 'iers' → logprob: -1.655921220779419
    3. 't' → logprob: -1.905921220779419
    4. 'ières' → logprob: -3.030921220779419
    5. 'ries' → logprob: -5.53092098236084
    6. 'er' → logprob: -5.53092098236084
    7. 'rée' → logprob: -6.03092098236084
    8. 'es' → logprob: -6.40592098236084
    9. 'r' → logprob: -6.40592098236084
    10. 're' → logprob: -6.65592098236084

Token 1016: ' à' (ID: 1221)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05647583678364754
    2. '():' → logprob: -2.931475877761841
    3. '(),' → logprob: -6.806475639343262
    4. ' ()' → logprob: -8.056475639343262
    5. ' =' → logprob: -10.306475639343262
    6. ',' → logprob: -10.806475639343262
    7. ':' → logprob: -10.931475639343262
    8. '().' → logprob: -11.431475639343262
    9. '   ' → logprob: -11.556475639343262
    10. '();' → logprob: -11.556475639343262

Token 1017: ' partir' (ID: 12100)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16442780196666718
    2. 'l' → logprob: -2.0394277572631836
    3. 'la' → logprob: -4.289427757263184
    4. '=' → logprob: -6.789427757263184
    5. ')' → logprob: -7.289427757263184
    6. 'c' → logprob: -7.539427757263184
    7. 'input' → logprob: -7.539427757263184
    8. ' =' → logprob: -7.664427757263184
    9. 'part' → logprob: -7.789427757263184
    10. 's' → logprob: -8.039427757263184

Token 1018: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019915630109608173
    2. '   ' → logprob: -6.3769917488098145
    3. 'de' → logprob: -9.501991271972656
    4. 'la' → logprob: -9.501991271972656
    5. '()
' → logprob: -10.501991271972656
    6. ' ()' → logprob: -10.626991271972656
    7. ' la' → logprob: -10.876991271972656
    8. 'def' → logprob: -11.126991271972656
    9. 'une' → logprob: -11.626991271972656
    10. '().' → logprob: -12.001991271972656

Token 1019: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.18625707924365997
    2. 'input' → logprob: -2.4362571239471436
    3. 'la' → logprob: -2.9362571239471436
    4. 'l' → logprob: -3.9362571239471436
    5. 'I' → logprob: -4.9362568855285645
    6. 'stdin' → logprob: -6.8112568855285645
    7. 'une' → logprob: -7.0612568855285645
    8. 'L' → logprob: -8.436257362365723
    9. 'LI' → logprob: -9.311257362365723
    10. '   ' → logprob: -9.311257362365723

Token 1020: ''entrée' (ID: 115820)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -1.11887788772583
    2. '=sys' → logprob: -1.24387788772583
    3. '()' → logprob: -1.86887788772583
    4. 'input' → logprob: -2.11887788772583
    5. 'sys' → logprob: -2.99387788772583
    6. '(stdin' → logprob: -4.11887788772583
    7. 'e' → logprob: -4.74387788772583
    8. '   ' → logprob: -5.24387788772583
    9. 'entrée' → logprob: -5.36887788772583
    10. 'in' → logprob: -5.86887788772583

Token 1021: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7461274266242981
    2. '():' → logprob: -0.7461274266242981
    3. '   ' → logprob: -3.9961273670196533
    4. ' =' → logprob: -4.246127605438232
    5. '=' → logprob: -4.621127605438232
    6. ':' → logprob: -5.496127605438232
    7. 'def' → logprob: -5.996127605438232
    8. '():
' → logprob: -6.871127605438232
    9. '()
' → logprob: -7.246127605438232
    10. '):' → logprob: -9.121127128601074

Token 1022: ' :
' (ID: 10039)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6438397765159607
    2. '   ' → logprob: -0.8938397765159607
    3. ':' → logprob: -3.1438398361206055
    4. '()' → logprob: -4.2688398361206055
    5. 'a' → logprob: -5.0188398361206055
    6. 'n' → logprob: -7.1438398361206055
    7. '():
' → logprob: -8.268839836120605
    8. ' :' → logprob: -8.768839836120605
    9. 'x' → logprob: -8.768839836120605
    10. ' =' → logprob: -9.393839836120605

Token 1023: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14605285227298737
    2. 'a' → logprob: -2.521052837371826
    3. 'n' → logprob: -3.021052837371826
    4. 'h' → logprob: -5.646052837371826
    5. 'A' → logprob: -6.646052837371826
    6. ' n' → logprob: -7.396052837371826
    7. 'N' → logprob: -8.021053314208984
    8. ' a' → logprob: -8.021053314208984
    9. 'x' → logprob: -8.396053314208984
    10. ' ' → logprob: -9.271053314208984

Token 1024: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.22513246536254883
    2. 'h' → logprob: -2.350132465362549
    3. 'a' → logprob: -2.725132465362549
    4. 'N' → logprob: -3.350132465362549
    5. 'H' → logprob: -5.475132465362549
    6. '   ' → logprob: -7.100132465362549
    7. 'x' → logprob: -8.10013198852539
    8. 'A' → logprob: -8.72513198852539
    9. ' n' → logprob: -9.72513198852539
    10. 'r' → logprob: -10.72513198852539

Token 1025: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0095691978931427
    2. '=' → logprob: -4.88456916809082
    3. ',n' → logprob: -6.75956916809082
    4. ',k' → logprob: -8.00956916809082
    5. ' =' → logprob: -8.88456916809082
    6. ',m' → logprob: -9.00956916809082
    7. ',s' → logprob: -10.00956916809082
    8. ',q' → logprob: -10.63456916809082
    9. ',p' → logprob: -10.75956916809082
    10. ',x' → logprob: -11.00956916809082

Token 1026: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0018840155098587275
    2. ' m' → logprob: -6.5018839836120605
    3. 'k' → logprob: -7.8768839836120605
    4. ' k' → logprob: -13.751884460449219
    5. 'q' → logprob: -14.251884460449219
    6. 'x' → logprob: -15.876884460449219
    7. '=' → logprob: -16.75188446044922
    8. ' ' → logprob: -16.87688446044922
    9. 'd' → logprob: -16.87688446044922
    10. ' =' → logprob: -17.00188446044922

Token 1027: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00033558503491804004
    2. ' =' → logprob: -8.000335693359375
    3. '=input' → logprob: -17.500335693359375
    4. '=n' → logprob: -18.375335693359375
    5. '=sys' → logprob: -18.375335693359375
    6. '=int' → logprob: -18.500335693359375
    7. '=

' → logprob: -18.875335693359375
    8. '＝' → logprob: -19.000335693359375
    9. ',' → logprob: -19.125335693359375
    10. ')=' → logprob: -19.500335693359375

Token 1028: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.0070980084128677845
    2. ' LI' → logprob: -5.007098197937012
    3. 'I' → logprob: -7.882098197937012
    4. ' I' → logprob: -13.382098197937012
    5. 'map' → logprob: -13.507098197937012
    6. ' ' → logprob: -14.132098197937012
    7. ' map' → logprob: -14.382098197937012
    8. 'L' → logprob: -15.007098197937012
    9. 'Li' → logprob: -15.257098197937012
    10. '   ' → logprob: -15.632098197937012

Token 1029: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001907855912577361
    2. '   ' → logprob: -8.875190734863281
    3. ')' → logprob: -11.125190734863281
    4. '()
' → logprob: -11.125190734863281
    5. '();' → logprob: -12.375190734863281
    6. '(' → logprob: -12.375190734863281
    7. ',' → logprob: -12.500190734863281
    8. ' ()' → logprob: -12.750190734863281
    9. '())' → logprob: -13.000190734863281
    10. '[]' → logprob: -13.750190734863281

Token 1030: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8360704779624939
    2. '<|end|>' → logprob: -1.0860705375671387
    3. '
' → logprob: -1.5860705375671387
    4. '    
' → logprob: -4.336070537567139
    5. ')' → logprob: -5.586070537567139
    6. '<|end|>' → logprob: -5.961070537567139
    7. '.' → logprob: -7.086070537567139
    8. '  
' → logprob: -7.336070537567139
    9. ' ' → logprob: -7.461070537567139
    10. '  ' → logprob: -7.586070537567139

Token 1031: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41964539885520935
    2. '
' → logprob: -1.9196454286575317
    3. '<|end|>' → logprob: -1.9196454286575317
    4. '    
' → logprob: -3.794645309448242
    5. ')' → logprob: -5.044645309448242
    6. '#' → logprob: -5.544645309448242
    7. '  ' → logprob: -5.919645309448242
    8. '.' → logprob: -6.044645309448242
    9. ' ' → logprob: -6.169645309448242
    10. '<|end|>' → logprob: -6.419645309448242

Token 1032: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2545483410358429
    2. '#' → logprob: -2.7545483112335205
    3. 'graph' → logprob: -2.8795483112335205
    4. '<|end|>' → logprob: -3.6295483112335205
    5. 'a' → logprob: -4.1295485496521
    6. 'n' → logprob: -4.3795485496521
    7. ' graph' → logprob: -4.6295485496521
    8. '
' → logprob: -4.8795485496521
    9. '    
' → logprob: -5.0045485496521
    10. 's' → logprob: -5.7545485496521

Token 1033: ' est' (ID: 893)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0101369833573699
    2. ',m' → logprob: -4.63513708114624
    3. '   ' → logprob: -8.510136604309082
    4. ',
' → logprob: -9.260136604309082
    5. ' ,' → logprob: -10.385136604309082
    6. ',n' → logprob: -11.010136604309082
    7. 'm' → logprob: -11.135136604309082
    8. ')' → logprob: -12.135136604309082
    9. 'def' → logprob: -12.885136604309082
    10. '<|end|>' → logprob: -13.010136604309082

Token 1034: ' typ' (ID: 5378)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8412829637527466
    2. 'int' → logprob: -1.0912829637527466
    3. ' n' → logprob: -2.591282844543457
    4. 'le' → logprob: -2.966282844543457
    5. 'l' → logprob: -3.341282844543457
    6. 'la' → logprob: -3.841282844543457
    7. 'm' → logprob: -4.091282844543457
    8. 'len' → logprob: -4.591282844543457
    9. ' le' → logprob: -5.341282844543457
    10. ' la' → logprob: -5.466282844543457

Token 1035: 'iquement' (ID: 83934)
  Prédit: 'iquement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iquement' → logprob: -0.018881211057305336
    2. 'e' → logprob: -4.143881320953369
    3. 'é' → logprob: -5.893881320953369
    4. 'quement' → logprob: -10.643880844116211
    5. 'iqué' → logprob: -10.768880844116211
    6. 'ique' → logprob: -10.893880844116211
    7. 'edef' → logprob: -12.518880844116211
    8. 'ed' → logprob: -13.018880844116211
    9. 'ical' → logprob: -13.268880844116211
    10. 'ée' → logprob: -13.268880844116211

Token 1036: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.4360690414905548
    2. ' le' → logprob: -1.9360690116882324
    3. 'len' → logprob: -2.0610690116882324
    4. 'la' → logprob: -3.5610690116882324
    5. 'l' → logprob: -3.8110690116882324
    6. 'nombre' → logprob: -4.686069011688232
    7. 'n' → logprob: -4.936069011688232
    8. ',' → logprob: -5.686069011688232
    9. ' len' → logprob: -5.936069011688232
    10. 'int' → logprob: -5.936069011688232

Token 1037: ' taille' (ID: 41644)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.28180211782455444
    2. 'tail' → logprob: -1.9068021774291992
    3. 'number' → logprob: -2.531802177429199
    4. ' number' → logprob: -5.281802177429199
    5. ' nombre' → logprob: -5.906802177429199
    6. 'int' → logprob: -6.031802177429199
    7. '#' → logprob: -6.156802177429199
    8. 'len' → logprob: -7.281802177429199
    9. 'n' → logprob: -7.656802177429199
    10. 'nb' → logprob: -7.656802177429199

Token 1038: ' d' (ID: 272)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32768794894218445
    2. '   ' → logprob: -1.4526879787445068
    3. 'de' → logprob: -3.952687978744507
    4. 'du' → logprob: -4.702687740325928
    5. 'd' → logprob: -5.202687740325928
    6. '#' → logprob: -6.452687740325928
    7. 'des' → logprob: -6.702687740325928
    8. 'n' → logprob: -6.827687740325928
    9. ',
' → logprob: -6.952687740325928
    10. '(n' → logprob: -7.077687740325928

Token 1039: ''un' (ID: 9788)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4887189567089081
    2. 'l' → logprob: -1.7387189865112305
    3. 'a' → logprob: -1.8637189865112305
    4. 'n' → logprob: -3.8637189865112305
    5. 'une' → logprob: -4.4887189865112305
    6. 'e' → logprob: -5.7387189865112305
    7. 'sys' → logprob: -6.2387189865112305
    8. 'un' → logprob: -6.3637189865112305
    9. '(n' → logprob: -6.3637189865112305
    10. '(sys' → logprob: -6.3637189865112305

Token 1040: ' interval' (ID: 17116)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.6543700695037842
    2. 'table' → logprob: -1.1543700695037842
    3. 'graph' → logprob: -2.029370069503784
    4. 'liste' → logprob: -4.279370307922363
    5. '#' → logprob: -5.279370307922363
    6. 'range' → logprob: -5.904370307922363
    7. 'g' → logprob: -6.029370307922363
    8. '```' → logprob: -6.404370307922363
    9. 'grid' → logprob: -6.904370307922363
    10. 'tab' → logprob: -7.029370307922363

Token 1041: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.09800015389919281
    2. 'val' → logprob: -2.9730000495910645
    3. 'v' → logprob: -3.3480000495910645
    4. 'e' → logprob: -6.2230000495910645
    5. 'vale' → logprob: -6.2230000495910645
    6. 've' → logprob: -6.8480000495910645
    7. '#' → logprob: -7.3480000495910645
    8. 'al' → logprob: -8.348000526428223
    9. ',' → logprob: -8.598000526428223
    10. '   ' → logprob: -8.848000526428223

Token 1042: ' général' (ID: 30475)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09150782972574234
    2. ',' → logprob: -2.466507911682129
    3. '    
' → logprob: -7.341507911682129
    4. '<|end|>' → logprob: -7.341507911682129
    5. '  ' → logprob: -8.216507911682129
    6. '    ' → logprob: -8.716507911682129
    7. ';' → logprob: -8.716507911682129
    8. '
' → logprob: -8.841507911682129
    9. ')' → logprob: -8.966507911682129
    10. ' ' → logprob: -9.216507911682129

Token 1043: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11315407603979111
    2. '   ' → logprob: -2.238154172897339
    3. ' ,' → logprob: -9.363154411315918
    4. 'm' → logprob: -9.363154411315918
    5. ',
' → logprob: -9.863154411315918
    6. ',m' → logprob: -10.613154411315918
    7. ';' → logprob: -10.863154411315918
    8. '    
' → logprob: -11.238154411315918
    9. '
' → logprob: -11.363154411315918
    10. '#' → logprob: -11.488154411315918

Token 1044: ' m' (ID: 284)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05311697721481323
    2. ' k' → logprob: -3.803117036819458
    3. ' p' → logprob: -4.928116798400879
    4. ' m' → logprob: -5.053116798400879
    5. 'm' → logprob: -5.803116798400879
    6. 'k' → logprob: -6.178116798400879
    7. ' ' → logprob: -6.303116798400879
    8. ' #' → logprob: -6.303116798400879
    9. '    ' → logprob: -6.428116798400879
    10. ' s' → logprob: -6.928116798400879

Token 1045: ' le' (ID: 505)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13044887781143188
    2. ' =' → logprob: -2.630448818206787
    3. ',' → logprob: -3.005448818206787
    4. '   ' → logprob: -7.880448818206787
    5. '=int' → logprob: -9.130449295043945
    6. ')' → logprob: -9.880449295043945
    7. ',n' → logprob: -10.005449295043945
    8. '=n' → logprob: -10.380449295043945
    9. 'n' → logprob: -10.505449295043945
    10. '#' → logprob: -10.880449295043945

Token 1046: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.012603833340108395
    2. 'number' → logprob: -4.637603759765625
    3. ' nombre' → logprob: -6.262603759765625
    4. 'n' → logprob: -7.762603759765625
    5. 'nb' → logprob: -8.637603759765625
    6. '#' → logprob: -10.012603759765625
    7. 'nbr' → logprob: -10.012603759765625
    8. 'int' → logprob: -10.512603759765625
    9. 'max' → logprob: -10.762603759765625
    10. '...' → logprob: -10.887603759765625

Token 1047: ' d' (ID: 272)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.032515048980713
    2. '   ' → logprob: -1.282515048980713
    3. 'of' → logprob: -2.157515048980713
    4. 'de' → logprob: -2.407515048980713
    5. 'des' → logprob: -2.657515048980713
    6. ' =' → logprob: -3.282515048980713
    7. ' of' → logprob: -4.532515048980713
    8. 'd' → logprob: -4.907515048980713
    9. ',' → logprob: -5.657515048980713
    10. ')' → logprob: -5.657515048980713

Token 1048: ''inter' (ID: 55731)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.7519220113754272
    2. 'interval' → logprob: -2.376922130584717
    3. ')' → logprob: -3.126922130584717
    4. 'élé' → logprob: -3.126922130584717
    5. 'queries' → logprob: -3.251922130584717
    6. 'inter' → logprob: -3.251922130584717
    7. 'items' → logprob: -3.501922130584717
    8. 'points' → logprob: -3.501922130584717
    9. 'restr' → logprob: -3.501922130584717
    10. 'ranges' → logprob: -4.251922130584717

Token 1049: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.02055228315293789
    2. 'val' → logprob: -4.520552158355713
    3. 'vals' → logprob: -5.145552158355713
    4. 'sections' → logprob: -6.395552158355713
    5. 'ventions' → logprob: -7.520552158355713
    6. '```' → logprob: -7.645552158355713
    7. '#' → logprob: -8.145552635192871
    8. 'vall' → logprob: -8.645552635192871
    9. 's' → logprob: -9.520552635192871
    10. 'n' → logprob: -9.770552635192871

Token 1050: 'alles' (ID: 28825)
  Prédit: 'alles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alles' → logprob: -0.004750984255224466
    2. 'v' → logprob: -6.004751205444336
    3. 'aux' → logprob: -8.004751205444336
    4. 'all' → logprob: -8.129751205444336
    5. 'val' → logprob: -8.254751205444336
    6. '#' → logprob: -8.379751205444336
    7. 'al' → logprob: -8.504751205444336
    8. 'a' → logprob: -8.879751205444336
    9. 'alle' → logprob: -9.004751205444336
    10. 'ales' → logprob: -9.129751205444336

Token 1051: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012614079751074314
    2. '<|end|>' → logprob: -5.3876142501831055
    3. ',' → logprob: -5.7626142501831055
    4. ')' → logprob: -6.2626142501831055
    5. '    
' → logprob: -7.3876142501831055
    6. '[]' → logprob: -7.5126142501831055
    7. '
' → logprob: -7.8876142501831055
    8. '<|end|>' → logprob: -8.387614250183105
    9. 'n' → logprob: -8.512614250183105
    10. '    ' → logprob: -9.387614250183105

Token 1052: ' considérer' (ID: 172894)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.14939884841442108
    2. 'trait' → logprob: -3.5243988037109375
    3. 'g' → logprob: -3.8993988037109375
    4. 'contin' → logprob: -4.8993988037109375
    5. 'aj' → logprob: -5.0243988037109375
    6. 'import' → logprob: -5.1493988037109375
    7. 'tr' → logprob: -5.2743988037109375
    8. 'inter' → logprob: -5.2743988037109375
    9. 'lit' → logprob: -5.2743988037109375
    10. 'li' → logprob: -5.5243988037109375

Token 1053: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024330295622348785
    2. '
' → logprob: -4.399330139160156
    3. '    
' → logprob: -4.774330139160156
    4. '<|end|>' → logprob: -5.899330139160156
    5. '<|end|>' → logprob: -9.149330139160156
    6. ')' → logprob: -9.149330139160156
    7. '.' → logprob: -9.399330139160156
    8. 'n' → logprob: -10.024330139160156
    9. ',' → logprob: -10.149330139160156
    10. '    ' → logprob: -10.399330139160156

Token 1054: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0067770653404295444
    2. 'interval' → logprob: -5.256777286529541
    3. 'ranges' → logprob: -6.881777286529541
    4. 'r' → logprob: -8.506776809692383
    5. 'segments' → logprob: -9.256776809692383
    6. '    
' → logprob: -9.256776809692383
    7. 'inter' → logprob: -10.381776809692383
    8. 'a' → logprob: -10.506776809692383
    9. ' intervals' → logprob: -11.381776809692383
    10. 's' → logprob: -11.631776809692383

Token 1055: ' #' (ID: 1069)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.039104294031858444
    2. 'segments' → logprob: -4.664104461669922
    3. 'arr' → logprob: -4.789104461669922
    4. '   ' → logprob: -5.164104461669922
    5. 'ints' → logprob: -6.164104461669922
    6. 'ranges' → logprob: -6.164104461669922
    7. 'a' → logprob: -6.289104461669922
    8. 'im' → logprob: -6.539104461669922
    9. 'events' → logprob: -6.664104461669922
    10. 'dp' → logprob: -6.914104461669922

Token 1056: ' Lecture' (ID: 106534)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.05457180365920067
    2. 'segments' → logprob: -4.429571628570557
    3. 'arr' → logprob: -4.929571628570557
    4. 'a' → logprob: -5.804571628570557
    5. 'ints' → logprob: -5.804571628570557
    6. 'ranges' → logprob: -5.804571628570557
    7. 'events' → logprob: -5.804571628570557
    8. 'im' → logprob: -5.804571628570557
    9. 'lst' → logprob: -6.429571628570557
    10. 'dp' → logprob: -6.429571628570557

Token 1057: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4969690144062042
    2. 'des' → logprob: -1.1219689846038818
    3. ' des' → logprob: -3.371968984603882
    4. 'de' → logprob: -4.371969223022461
    5. '()' → logprob: -5.371969223022461
    6. '_des' → logprob: -5.496969223022461
    7. 'd' → logprob: -5.871969223022461
    8. 'm' → logprob: -6.621969223022461
    9. ' de' → logprob: -6.746969223022461
    10. 'for' → logprob: -7.371969223022461

Token 1058: ' m' (ID: 284)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.24362286925315857
    2. '[]' → logprob: -1.868622899055481
    3. 'inter' → logprob: -4.243622779846191
    4. 'pairs' → logprob: -4.618622779846191
    5. '[]
' → logprob: -4.868622779846191
    6. 'ranges' → logprob: -4.993622779846191
    7. '[' → logprob: -5.368622779846191
    8. 'a' → logprob: -5.493622779846191
    9. 'arr' → logprob: -5.743622779846191
    10. '[
' → logprob: -6.493622779846191

Token 1059: ' interv' (ID: 37413)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.9276503324508667
    2. ' tuples' → logprob: -1.8026503324508667
    3. ' lines' → logprob: -1.9276503324508667
    4. 'interval' → logprob: -2.8026504516601562
    5. '[' → logprob: -3.0526504516601562
    6. '_inter' → logprob: -3.3026504516601562
    7. ' =' → logprob: -4.177650451660156
    8. ' lignes' → logprob: -4.177650451660156
    9. '_' → logprob: -4.302650451660156
    10. '_lines' → logprob: -4.677650451660156

Token 1060: 'alles' (ID: 28825)
  Prédit: 'alles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alles' → logprob: -0.0019007938681170344
    2. 'als' → logprob: -7.126900672912598
    3. 'al' → logprob: -7.626900672912598
    4. 'ales' → logprob: -8.501900672912598
    5. 'alls' → logprob: -8.626900672912598
    6. '   ' → logprob: -9.876900672912598
    7. 'aux' → logprob: -9.876900672912598
    8. '#' → logprob: -10.001900672912598
    9. '```' → logprob: -11.126900672912598
    10. 'all' → logprob: -11.376900672912598

Token 1061: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002527149161323905
    2. 'interval' → logprob: -6.127527236938477
    3. '
' → logprob: -9.377527236938477
    4. ' intervals' → logprob: -9.627527236938477
    5. '    
' → logprob: -9.752527236938477
    6. 'for' → logprob: -10.377527236938477
    7. 'a' → logprob: -10.502527236938477
    8. 'ranges' → logprob: -11.252527236938477
    9. ' =' → logprob: -11.377527236938477
    10. 's' → logprob: -11.627527236938477

Token 1062: ' chaque' (ID: 21194)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.30929890275001526
    2. '   ' → logprob: -2.0592989921569824
    3. ' intervals' → logprob: -2.3092989921569824
    4. 'ints' → logprob: -4.434298992156982
    5. 'ranges' → logprob: -4.559298992156982
    6. 'segments' → logprob: -4.934298992156982
    7. 'a' → logprob: -6.059298992156982
    8. 'int' → logprob: -6.184298992156982
    9. 'inter' → logprob: -7.309298992156982
    10. 'arr' → logprob: -7.684298992156982

Token 1063: ' interval' (ID: 17116)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.42463308572769165
    2. 'interval' → logprob: -2.049633026123047
    3. ' =' → logprob: -2.674633026123047
    4. '=' → logprob: -3.799633026123047
    5. '_inter' → logprob: -3.799633026123047
    6. '[' → logprob: -4.049633026123047
    7. ' _' → logprob: -4.299633026123047
    8. 'inter' → logprob: -4.424633026123047
    9. '(interval' → logprob: -4.799633026123047
    10. ' interval' → logprob: -4.924633026123047

Token 1064: 'le' (ID: 282)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.649444580078125
    2. 'al' → logprob: -0.899444580078125
    3. 'e' → logprob: -4.149444580078125
    4. 'vale' → logprob: -4.274444580078125
    5. 'ale' → logprob: -4.399444580078125
    6. 'v' → logprob: -4.524444580078125
    7. 'le' → logprob: -5.149444580078125
    8. 'alle' → logprob: -5.524444580078125
    9. '#' → logprob: -5.899444580078125
    10. '   ' → logprob: -7.149444580078125

Token 1065: ' étant' (ID: 47869)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07931108772754669
    2. ' =' → logprob: -2.5793111324310303
    3. '=[]' → logprob: -8.70431137084961
    4. '_' → logprob: -9.07931137084961
    5. '=[' → logprob: -10.07931137084961
    6. '[' → logprob: -10.57931137084961
    7. 's' → logprob: -10.82931137084961
    8. '_=' → logprob: -10.95431137084961
    9. '[:]' → logprob: -11.82931137084961
    10. '=[
' → logprob: -12.45431137084961

Token 1066: ' un' (ID: 537)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.0005557744298130274
    2. 'tuple' → logprob: -7.875555992126465
    3. ' LI' → logprob: -9.500555992126465
    4. '(' → logprob: -10.250555992126465
    5. '(L' → logprob: -10.250555992126465
    6. 'li' → logprob: -10.875555992126465
    7. '[' → logprob: -12.500555992126465
    8. '()' → logprob: -13.375555992126465
    9. '(tuple' → logprob: -13.750555992126465
    10. '[]' → logprob: -14.375555992126465

Token 1067: ' trip' (ID: 8831)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.6611010432243347
    2. 'LI' → logprob: -0.7861010432243347
    3. 'list' → logprob: -4.1611008644104
    4. ' LI' → logprob: -5.0361008644104
    5. 'li' → logprob: -5.6611008644104
    6. 'pair' → logprob: -7.1611008644104
    7. ' tuple' → logprob: -7.2861008644104
    8. 't' → logprob: -7.5361008644104
    9. 'tu' → logprob: -9.036101341247559
    10. 'interval' → logprob: -9.911101341247559

Token 1068: 'let' (ID: 1347)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.011128936894237995
    2. 'let' → logprob: -4.511128902435303
    3. 'lets' → logprob: -10.886129379272461
    4. 'def' → logprob: -11.386129379272461
    5. 'lé' → logprob: -11.886129379272461
    6. 'l' → logprob: -12.011129379272461
    7. '[]' → logprob: -12.386129379272461
    8. 'les' → logprob: -12.511129379272461
    9. '#' → logprob: -12.511129379272461
    10. 'la' → logprob: -12.636129379272461

Token 1069: ' [' (ID: 723)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17411957681179047
    2. ' =' → logprob: -3.174119472503662
    3. '[]' → logprob: -3.549119472503662
    4. ':' → logprob: -3.799119472503662
    5. '(n' → logprob: -3.924119472503662
    6. 'for' → logprob: -4.174119472503662
    7. '=' → logprob: -4.549119472503662
    8. '[n' → logprob: -5.049119472503662
    9. '[' → logprob: -5.924119472503662
    10. 'n' → logprob: -6.549119472503662

Token 1070: 'l' (ID: 75)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5087059736251831
    2. '*n' → logprob: -1.883705973625183
    3. 'int' → logprob: -2.3837060928344727
    4. 'n' → logprob: -3.3837060928344727
    5. 'LI' → logprob: -3.7587060928344727
    6. ']' → logprob: -3.8837060928344727
    7. ']*' → logprob: -4.133706092834473
    8. 'I' → logprob: -4.508706092834473
    9. '0' → logprob: -4.508706092834473
    10. '*l' → logprob: -4.758706092834473

Token 1071: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009953108616173267
    2. ',r' → logprob: -4.759953022003174
    3. ',u' → logprob: -7.509953022003174
    4. ',m' → logprob: -7.634953022003174
    5. ',n' → logprob: -9.134953498840332
    6. ' ,' → logprob: -10.634953498840332
    7. ',f' → logprob: -10.759953498840332
    8. ',p' → logprob: -10.884953498840332
    9. ',
' → logprob: -10.884953498840332
    10. ',i' → logprob: -11.009953498840332

Token 1072: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.676292231422849e-05
    2. ' r' → logprob: -11.125017166137695
    3. '
' → logprob: -13.875017166137695
    4. '   ' → logprob: -14.750017166137695
    5. '```' → logprob: -15.625017166137695
    6. '    
' → logprob: -16.500017166137695
    7. 'u' → logprob: -16.875017166137695
    8. '  
' → logprob: -17.375017166137695
    9. '

' → logprob: -17.375017166137695
    10. 'd' → logprob: -17.500017166137695

Token 1073: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002538296685088426
    2. ',n' → logprob: -8.750253677368164
    3. ' ,' → logprob: -10.875253677368164
    4. ',m' → logprob: -11.750253677368164
    5. ',l' → logprob: -11.750253677368164
    6. ',x' → logprob: -12.000253677368164
    7. ',r' → logprob: -12.125253677368164
    8. ',c' → logprob: -12.500253677368164
    9. 's' → logprob: -12.625253677368164
    10. ']' → logprob: -12.625253677368164

Token 1074: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.34530559182167053
    2. 'v' → logprob: -1.7203055620193481
    3. 'x' → logprob: -2.9703056812286377
    4. 'w' → logprob: -3.0953056812286377
    5. 'd' → logprob: -4.970305442810059
    6. 't' → logprob: -5.720305442810059
    7. 'p' → logprob: -6.095305442810059
    8. 'val' → logprob: -6.720305442810059
    9. 'k' → logprob: -7.470305442810059
    10. 's' → logprob: -7.845305442810059

Token 1075: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001977287931367755
    2. ']
' → logprob: -6.501977443695068
    3. ']:' → logprob: -8.12697696685791
    4. '],' → logprob: -10.25197696685791
    5. ']:
' → logprob: -10.25197696685791
    6. ']
' → logprob: -10.50197696685791
    7. ']=' → logprob: -10.50197696685791
    8. '])' → logprob: -11.12697696685791
    9. ' ]' → logprob: -11.25197696685791
    10. 's' → logprob: -12.12697696685791

Token 1076: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006175859831273556
    2. 'interval' → logprob: -5.131175994873047
    3. ' intervals' → logprob: -9.131175994873047
    4. 'ranges' → logprob: -9.881175994873047
    5. '    
' → logprob: -10.631175994873047
    6. 'inter' → logprob: -11.131175994873047
    7. '```' → logprob: -11.256175994873047
    8. 'arr' → logprob: -12.131175994873047
    9. 'a' → logprob: -12.506175994873047
    10. '
' → logprob: -12.506175994873047

Token 1077: ' #' (ID: 1069)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.45116278529167175
    2. '   ' → logprob: -1.5761628150939941
    3. 'r' → logprob: -3.076162815093994
    4. 'a' → logprob: -3.326162815093994
    5. 'ranges' → logprob: -3.951162815093994
    6. 'segments' → logprob: -4.451162815093994
    7. 'ints' → logprob: -4.701162815093994
    8. 'rs' → logprob: -5.326162815093994
    9. 'arr' → logprob: -5.326162815093994
    10. 'I' → logprob: -5.451162815093994

Token 1078: ' On' (ID: 2160)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.21380233764648438
    2. '   ' → logprob: -2.9638023376464844
    3. 'a' → logprob: -3.8388023376464844
    4. 'ranges' → logprob: -3.8388023376464844
    5. 'r' → logprob: -3.9638023376464844
    6. 'segments' → logprob: -4.338802337646484
    7. 'ints' → logprob: -4.588802337646484
    8. 'I' → logprob: -4.963802337646484
    9. 'arr' → logprob: -4.963802337646484
    10. 'lst' → logprob: -5.463802337646484

Token 1079: ' les' (ID: 1341)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.6666098833084106
    2. '=' → logprob: -1.4166098833084106
    3. ' =' → logprob: -1.7916098833084106
    4. 'for' → logprob: -3.416609764099121
    5. 'ranges' → logprob: -4.541609764099121
    6. 'r' → logprob: -4.916609764099121
    7. '=[]' → logprob: -5.541609764099121
    8. ' intervals' → logprob: -5.666609764099121
    9. '_=' → logprob: -5.791609764099121
    10. 's' → logprob: -5.916609764099121

Token 1080: ' trie' (ID: 139428)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09020496159791946
    2. '=[]' → logprob: -2.715204954147339
    3. ' =' → logprob: -4.340205192565918
    4. '=[]
' → logprob: -6.465205192565918
    5. 'for' → logprob: -6.590205192565918
    6. 'n' → logprob: -6.715205192565918
    7. '=[' → logprob: -7.965205192565918
    8. 's' → logprob: -8.215205192565918
    9. '#' → logprob: -8.340205192565918
    10. 'a' → logprob: -8.590205192565918

Token 1081: ' par' (ID: 686)
  Prédit: '(key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.22207413613796234
    2. 'key' → logprob: -2.347074031829834
    3. '()' → logprob: -3.097074031829834
    4. '(lambda' → logprob: -3.472074031829834
    5. '(' → logprob: -4.347074031829834
    6. '   ' → logprob: -5.722074031829834
    7. '(reverse' → logprob: -5.847074031829834
    8. '(interval' → logprob: -6.097074031829834
    9. '(
' → logprob: -6.722074031829834
    10. 'def' → logprob: -7.097074031829834

Token 1082: ' trois' (ID: 25564)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.28527289628982544
    2. 'key' → logprob: -1.4102728366851807
    3. '(lambda' → logprob: -6.03527307510376
    4. '=lambda' → logprob: -6.78527307510376
    5. ' lambda' → logprob: -8.035272598266602
    6. 'l' → logprob: -8.910272598266602
    7. 'operator' → logprob: -10.785272598266602
    8. 'item' → logprob: -10.910272598266602
    9. ' key' → logprob: -11.035272598266602
    10. 'x' → logprob: -11.160272598266602

Token 1083: ' critères' (ID: 105569)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -1.065994381904602
    2. '(lambda' → logprob: -1.440994381904602
    3. '(key' → logprob: -1.690994381904602
    4. '()' → logprob: -2.0659942626953125
    5. 'sort' → logprob: -3.1909942626953125
    6. '(' → logprob: -4.0659942626953125
    7. 'sorted' → logprob: -4.3159942626953125
    8. 'lambda' → logprob: -4.6909942626953125
    9. '(
' → logprob: -6.0659942626953125
    10. '[' → logprob: -6.1909942626953125

Token 1084: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47548186779022217
    2. ',' → logprob: -1.6004818677902222
    3. ' =' → logprob: -3.1004819869995117
    4. '=' → logprob: -3.3504819869995117
    5. 'key' → logprob: -3.6004819869995117
    6. 'sorted' → logprob: -3.9754819869995117
    7. '(key' → logprob: -4.225481986999512
    8. 'def' → logprob: -4.725481986999512
    9. '(lambda' → logprob: -5.225481986999512
    10. ':' → logprob: -5.225481986999512

Token 1085: ' '' (ID: 461)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.20996712148189545
    2. 'key' → logprob: -2.3349671363830566
    3. 'l' → logprob: -2.5849671363830566
    4. ' lambda' → logprob: -5.334967136383057
    5. 'li' → logprob: -5.584967136383057
    6. ' key' → logprob: -5.709967136383057
    7. '(lambda' → logprob: -5.834967136383057
    8. '   ' → logprob: -6.709967136383057
    9. 'L' → logprob: -7.334967136383057
    10. 'LI' → logprob: -9.084966659545898

Token 1086: 'l' (ID: 75)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.18312589824199677
    2. 'l' → logprob: -1.8081258535385132
    3. 'x' → logprob: -6.933125972747803
    4. '(lambda' → logprob: -6.933125972747803
    5. 'key' → logprob: -7.808125972747803
    6. ' lambda' → logprob: -7.808125972747803
    7. 'c' → logprob: -8.433125495910645
    8. 'r' → logprob: -8.808125495910645
    9. '```' → logprob: -9.683125495910645
    10. 'lam' → logprob: -10.058125495910645

Token 1087: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.040461376309394836
    2. '=lambda' → logprob: -4.040461540222168
    3. ')' → logprob: -5.415461540222168
    4. ',
' → logprob: -5.665461540222168
    5. '',' → logprob: -5.665461540222168
    6. '),' → logprob: -5.790461540222168
    7. ',key' → logprob: -6.040461540222168
    8. '=' → logprob: -6.665461540222168
    9. ','' → logprob: -7.040461540222168
    10. 'def' → logprob: -7.165461540222168

Token 1088: ' cro' (ID: 11270)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09253348410129547
    2. '=' → logprob: -2.592533588409424
    3. '=lambda' → logprob: -5.217533588409424
    4. ',key' → logprob: -6.092533588409424
    5. ')' → logprob: -6.342533588409424
    6. ' =' → logprob: -6.592533588409424
    7. '),' → logprob: -7.842533588409424
    8. ',
' → logprob: -7.967533588409424
    9. ',n' → logprob: -8.217533111572266
    10. ',l' → logprob: -8.217533111572266

Token 1089: 'issant' (ID: 31359)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -1.231259822845459
    2. 'rt' → logprob: -1.481259822845459
    3. '=' → logprob: -2.481259822845459
    4. 'nt' → logprob: -3.356259822845459
    5. 'mp' → logprob: -3.481259822845459
    6. 'm' → logprob: -3.481259822845459
    7. '(lambda' → logprob: -3.606259822845459
    8. 'r' → logprob: -3.606259822845459
    9. ',' → logprob: -3.856259822845459
    10. 'ms' → logprob: -4.356259822845459

Token 1090: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008546375669538975
    2. '   ' → logprob: -4.883546352386475
    3. ',
' → logprob: -7.133546352386475
    4. '
' → logprob: -10.008546829223633
    5. ';' → logprob: -10.008546829223633
    6. ',l' → logprob: -11.258546829223633
    7. '),' → logprob: -12.133546829223633
    8. 'and' → logprob: -12.508546829223633
    9. ' ,' → logprob: -12.633546829223633
    10. '_,' → logprob: -12.633546829223633

Token 1091: ' puis' (ID: 18766)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005455143749713898
    2. ' r' → logprob: -5.380455017089844
    3. '   ' → logprob: -7.255455017089844
    4. 'lambda' → logprob: -9.380455017089844
    5. 'c' → logprob: -10.505455017089844
    6. 'l' → logprob: -12.255455017089844
    7. 'key' → logprob: -12.755455017089844
    8. ' lambda' → logprob: -12.880455017089844
    9. '(r' → logprob: -13.630455017089844
    10. '  ' → logprob: -13.880455017089844

Token 1092: ' '' (ID: 461)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02632201462984085
    2. 'lambda' → logprob: -3.77632212638855
    3. 'c' → logprob: -6.776321887969971
    4. '   ' → logprob: -7.276321887969971
    5. ''r' → logprob: -7.776321887969971
    6. '(lambda' → logprob: -7.901321887969971
    7. ' r' → logprob: -8.776322364807129
    8. 'l' → logprob: -9.401322364807129
    9. ''' → logprob: -9.401322364807129
    10. '(r' → logprob: -10.026322364807129

Token 1093: 'c' (ID: 66)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002129087457433343
    2. 'c' → logprob: -7.127129077911377
    3. ''r' → logprob: -7.377129077911377
    4. 'lambda' → logprob: -8.002129554748535
    5. ''' → logprob: -8.627129554748535
    6. ' r' → logprob: -8.877129554748535
    7. '(r' → logprob: -11.377129554748535
    8. '[r' → logprob: -12.002129554748535
    9. 'm' → logprob: -12.252129554748535
    10. '(lambda' → logprob: -12.627129554748535

Token 1094: ''' (ID: 6)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.48611125349998474
    2. ',' → logprob: -1.1111112833023071
    3. ''' → logprob: -3.1111111640930176
    4. '=lambda' → logprob: -5.986111164093018
    5. ',c' → logprob: -6.611111164093018
    6. '=' → logprob: -6.736111164093018
    7. ','' → logprob: -6.861111164093018
    8. '),' → logprob: -7.611111164093018
    9. '=',' → logprob: -7.611111164093018
    10. ''),' → logprob: -7.611111164093018

Token 1095: ' cro' (ID: 11270)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07322479039430618
    2. 'asc' → logprob: -2.9482247829437256
    3. 'cro' → logprob: -4.823225021362305
    4. ')' → logprob: -6.073225021362305
    5. '),' → logprob: -6.448225021362305
    6. '=' → logprob: -6.448225021362305
    7. '   ' → logprob: -7.073225021362305
    8. ',c' → logprob: -7.573225021362305
    9. '#' → logprob: -7.698225021362305
    10. 'c' → logprob: -7.948225021362305

Token 1096: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.004534080624580383
    2. 'issing' → logprob: -6.3795342445373535
    3. 'is' → logprob: -7.6295342445373535
    4. 'ing' → logprob: -8.129533767700195
    5. 'issent' → logprob: -8.129533767700195
    6. 'r' → logprob: -8.254533767700195
    7. 'ressant' → logprob: -8.629533767700195
    8. 'cro' → logprob: -8.754533767700195
    9. 'issants' → logprob: -8.879533767700195
    10. 'issante' → logprob: -9.129533767700195

Token 1097: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40002360939979553
    2. '   ' → logprob: -1.1500235795974731
    3. ',
' → logprob: -4.650023460388184
    4. 'sorted' → logprob: -6.525023460388184
    5. '
' → logprob: -6.775023460388184
    6. ')
' → logprob: -8.275023460388184
    7. ')' → logprob: -8.775023460388184
    8. 'sort' → logprob: -9.275023460388184
    9. '.sort' → logprob: -10.025023460388184
    10. '),' → logprob: -10.025023460388184

Token 1098: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5596799850463867
    2. ' puis' → logprob: -1.5596799850463867
    3. 'r' → logprob: -2.0596799850463867
    4. 'then' → logprob: -3.4346799850463867
    5. ',' → logprob: -3.5596799850463867
    6. ' then' → logprob: -4.809679985046387
    7. '#' → logprob: -5.184679985046387
    8. ' r' → logprob: -5.809679985046387
    9. 'l' → logprob: -5.934679985046387
    10. '
' → logprob: -6.184679985046387

Token 1099: ' '' (ID: 461)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005779477301985025
    2. ' r' → logprob: -5.255779266357422
    3. ''r' → logprob: -7.880779266357422
    4. '   ' → logprob: -9.130779266357422
    5. ''' → logprob: -10.880779266357422
    6. '(r' → logprob: -11.880779266357422
    7. '[r' → logprob: -11.880779266357422
    8. '	r' → logprob: -12.380779266357422
    9. ' '' → logprob: -12.630779266357422
    10. '
' → logprob: -12.755779266357422

Token 1100: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -8.232493564719334e-05
    2. ' r' → logprob: -9.875082015991211
    3. ''r' → logprob: -11.250082015991211
    4. '   ' → logprob: -12.000082015991211
    5. '
' → logprob: -12.500082015991211
    6. '	r' → logprob: -13.625082015991211
    7. '[r' → logprob: -13.750082015991211
    8. 'm' → logprob: -13.875082015991211
    9. '
' → logprob: -14.125082015991211
    10. 'b' → logprob: -14.375082015991211

Token 1101: ''' (ID: 6)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cro' → logprob: -0.2607569396495819
    2. ',' → logprob: -1.6357569694519043
    3. ')' → logprob: -4.260756969451904
    4. 'asc' → logprob: -5.260756969451904
    5. ',c' → logprob: -6.135756969451904
    6. ' cro' → logprob: -6.510756969451904
    7. '=' → logprob: -6.510756969451904
    8. 'c' → logprob: -6.635756969451904
    9. '),' → logprob: -7.135756969451904
    10. '(c' → logprob: -7.260756969451904

Token 1102: ' décro' (ID: 176854)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35315677523612976
    2. ' =' → logprob: -1.6031568050384521
    3. '()' → logprob: -3.103156805038452
    4. 'sorted' → logprob: -3.978156805038452
    5. '.sort' → logprob: -4.478156566619873
    6. 'sort' → logprob: -5.603156566619873
    7. ')' → logprob: -5.603156566619873
    8. '().' → logprob: -5.978156566619873
    9. '   ' → logprob: -6.478156566619873
    10. '_sorted' → logprob: -6.478156566619873

Token 1103: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.21070590615272522
    2. 'r' → logprob: -2.8357059955596924
    3. 'cro' → logprob: -3.3357059955596924
    4. 'is' → logprob: -3.5857059955596924
    5. 'isant' → logprob: -4.460705757141113
    6. 'c' → logprob: -4.835705757141113
    7. 'cres' → logprob: -4.835705757141113
    8. 'istant' → logprob: -4.835705757141113
    9. 'ressant' → logprob: -4.960705757141113
    10. 'endant' → logprob: -5.210705757141113

Token 1104: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09134944528341293
    2. 'interval' → logprob: -3.3413493633270264
    3. 'sorted' → logprob: -3.8413493633270264
    4. ' =' → logprob: -4.0913496017456055
    5. '
' → logprob: -5.0913496017456055
    6. 'inter' → logprob: -6.0913496017456055
    7. '=' → logprob: -6.3413496017456055
    8. 'def' → logprob: -7.0913496017456055
    9. '(interval' → logprob: -7.2163496017456055
    10. ',' → logprob: -7.8413496017456055

Token 1105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.650661051273346
    2. 'interval' → logprob: -0.775661051273346
    3. 'inter' → logprob: -5.525660991668701
    4. 'arr' → logprob: -6.025660991668701
    5. 'a' → logprob: -6.150660991668701
    6. ' intervals' → logprob: -6.275660991668701
    7. ' =' → logprob: -6.650660991668701
    8. '```' → logprob: -6.650660991668701
    9. 'A' → logprob: -7.525660991668701
    10. '    
' → logprob: -7.775660991668701

Token 1106: ' l' (ID: 305)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.9000903964042664
    2. 'a' → logprob: -1.5250904560089111
    3. '   ' → logprob: -3.025090456008911
    4. 'r' → logprob: -3.150090456008911
    5. 'ints' → logprob: -3.650090456008911
    6. 'ab' → logprob: -3.900090456008911
    7. 'lr' → logprob: -4.025090217590332
    8. 'ranges' → logprob: -4.025090217590332
    9. 'arr' → logprob: -4.150090217590332
    10. 'x' → logprob: -4.275090217590332

Token 1107: 'rc' (ID: 2366)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17526453733444214
    2. 's' → logprob: -2.425264596939087
    3. ' =' → logprob: -2.925264596939087
    4. 'ist' → logprob: -5.175264358520508
    5. '=' → logprob: -5.925264358520508
    6. 'ists' → logprob: -6.300264358520508
    7. 'interval' → logprob: -6.300264358520508
    8. 'st' → logprob: -6.425264358520508
    9. '   ' → logprob: -7.300264358520508
    10. 'm' → logprob: -7.300264358520508

Token 1108: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14292524755001068
    2. ' =' → logprob: -2.017925262451172
    3. '   ' → logprob: -9.642925262451172
    4. 's' → logprob: -9.892925262451172
    5. '=[]' → logprob: -9.892925262451172
    6. '()' → logprob: -10.892925262451172
    7. 'sorted' → logprob: -10.892925262451172
    8. '.sort' → logprob: -11.267925262451172
    9. ' ' → logprob: -11.767925262451172
    10. '=list' → logprob: -11.892925262451172

Token 1109: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.029191670939326286
    2. '[' → logprob: -3.654191732406616
    3. 'LL' → logprob: -6.029191493988037
    4. ' sorted' → logprob: -8.654191970825195
    5. 'LI' → logprob: -8.654191970825195
    6. ' [' → logprob: -9.654191970825195
    7. '(sorted' → logprob: -10.779191970825195
    8. '[L' → logprob: -11.279191970825195
    9. 'LS' → logprob: -11.654191970825195
    10. '   ' → logprob: -11.904191970825195

Token 1110: '([' (ID: 5194)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.1252363920211792
    2. '([' → logprob: -2.5002365112304688
    3. '(' → logprob: -3.3752365112304688
    4. '(m' → logprob: -7.625236511230469
    5. '((' → logprob: -8.125236511230469
    6. '(list' → logprob: -8.625236511230469
    7. '([(' → logprob: -9.000236511230469
    8. '[' → logprob: -9.375236511230469
    9. '[L' → logprob: -9.500236511230469
    10. '(sys' → logprob: -9.875236511230469

Token 1111: 'LI' (ID: 14313)
  Prédit: 'LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.00011069540778407827
    2. 'list' → logprob: -9.500110626220703
    3. 'tuple' → logprob: -10.250110626220703
    4. ' LI' → logprob: -15.250110626220703
    5. 'li' → logprob: -16.375110626220703
    6. 'L' → logprob: -17.875110626220703
    7. '(L' → logprob: -17.875110626220703
    8. 'LIST' → logprob: -18.125110626220703
    9. 'map' → logprob: -18.500110626220703
    10. '[' → logprob: -19.250110626220703

Token 1112: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.020013758912682533
    2. '()]' → logprob: -4.020013809204102
    3. '()],' → logprob: -6.395013809204102
    4. '()
' → logprob: -9.520013809204102
    5. '())' → logprob: -9.770013809204102
    6. '(),' → logprob: -10.270013809204102
    7. ' ()' → logprob: -11.770013809204102
    8. '()[' → logprob: -12.520013809204102
    9. '()])
' → logprob: -12.770013809204102
    10. '()]
' → logprob: -12.895013809204102

Token 1113: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002086143009364605
    2. 'for' → logprob: -6.502086162567139
    3. '(),' → logprob: -8.37708568572998
    4. '()
' → logprob: -9.25208568572998
    5. ')' → logprob: -9.62708568572998
    6. ' for' → logprob: -10.00208568572998
    7. '()]' → logprob: -10.00208568572998
    8. ',' → logprob: -10.37708568572998
    9. '())' → logprob: -11.00208568572998
    10. '(' → logprob: -11.00208568572998

Token 1114: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00031401283922605217
    2. '_in' → logprob: -9.250313758850098
    3. '_i' → logprob: -9.375313758850098
    4. ' _' → logprob: -10.250313758850098
    5. '_range' → logprob: -10.375313758850098
    6. '_j' → logprob: -10.875313758850098
    7. ' in' → logprob: -11.000313758850098
    8. '
' → logprob: -11.500313758850098
    9. '_
' → logprob: -12.625313758850098
    10. 'in' → logprob: -13.125313758850098

Token 1115: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4571340084075928
    2. 'in' → logprob: -1.0821340084075928
    3. ' in' → logprob: -4.082134246826172
    4. '_' → logprob: -5.457134246826172
    5. ' range' → logprob: -5.707134246826172
    6. 'i' → logprob: -5.832134246826172
    7. '_range' → logprob: -8.707134246826172
    8. '_in' → logprob: -9.457134246826172
    9. ' ' → logprob: -9.582134246826172
    10. '  ' → logprob: -9.832134246826172

Token 1116: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.9292415749514475e-05
    2. ' range' → logprob: -10.250039100646973
    3. '_range' → logprob: -13.000039100646973
    4. '_' → logprob: -13.500039100646973
    5. '
' → logprob: -16.12504005432129
    6. '	range' → logprob: -16.50004005432129
    7. '   ' → logprob: -17.62504005432129
    8. '(range' → logprob: -17.62504005432129
    9. ' ' → logprob: -19.62504005432129
    10. 'rang' → logprob: -20.00004005432129

Token 1117: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3133217394351959
    2. '(m' → logprob: -1.3133217096328735
    3. ' m' → logprob: -10.438322067260742
    4. '(' → logprob: -10.813322067260742
    5. ' (' → logprob: -11.938322067260742
    6. '	m' → logprob: -12.688322067260742
    7. ')m' → logprob: -14.188322067260742
    8. '(
' → logprob: -15.563322067260742
    9. '   ' → logprob: -17.063322067260742
    10. ',m' → logprob: -17.438322067260742

Token 1118: ')],' (ID: 60559)
  Prédit: ')],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')],' → logprob: -0.12443461269140244
    2. ')])' → logprob: -2.24943470954895
    3. '])' → logprob: -4.749434471130371
    4. '],' → logprob: -6.374434471130371
    5. ')]' → logprob: -7.249434471130371
    6. ')' → logprob: -8.874434471130371
    7. ']),' → logprob: -9.374434471130371
    8. ']])' → logprob: -9.874434471130371
    9. '()],' → logprob: -10.249434471130371
    10. ']' → logprob: -10.249434471130371

Token 1119: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.00862876046448946
    2. ' key' → logprob: -4.758628845214844
    3. 'reverse' → logprob: -11.633628845214844
    4. ')' → logprob: -12.508628845214844
    5. '(key' → logprob: -14.133628845214844
    6. '	key' → logprob: -15.008628845214844
    7. ',key' → logprob: -15.008628845214844
    8. '   ' → logprob: -16.508628845214844
    9. '_key' → logprob: -16.508628845214844
    10. 'm' → logprob: -16.758628845214844

Token 1120: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -6.392202976712724e-06
    2. '=' → logprob: -12.000006675720215
    3. 'lambda' → logprob: -16.1250057220459
    4. ' =' → logprob: -18.2500057220459
    5. '=
' → logprob: -19.1250057220459
    6. '=(' → logprob: -20.0000057220459
    7. '(lambda' → logprob: -20.2500057220459
    8. '=item' → logprob: -21.0000057220459
    9. '=l' → logprob: -21.3750057220459
    10. '=str' → logprob: -22.3750057220459

Token 1121: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.3148956298828125
    2. 'x' → logprob: -1.3148956298828125
    3. '=lambda' → logprob: -6.8148956298828125
    4. ' lambda' → logprob: -7.8148956298828125
    5. '(lambda' → logprob: -9.439895629882812
    6. ' x' → logprob: -10.689895629882812
    7. 'l' → logprob: -11.189895629882812
    8. 'a' → logprob: -12.814895629882812
    9. 'λ' → logprob: -13.189895629882812
    10. 'item' → logprob: -13.564895629882812

Token 1122: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038360210601240396
    2. ':(' → logprob: -7.875383377075195
    3. '(x' → logprob: -13.375383377075195
    4. '(' → logprob: -13.500383377075195
    5. '=(' → logprob: -15.250383377075195
    6. ' :' → logprob: -16.000383377075195
    7. ':
' → logprob: -16.625383377075195
    8. ':x' → logprob: -16.750383377075195
    9. '=' → logprob: -17.125383377075195
    10. ' :(' → logprob: -17.875383377075195

Token 1123: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.005056094843894243
    2. '(lambda' → logprob: -5.505055904388428
    3. '(' → logprob: -7.005055904388428
    4. ' (' → logprob: -9.630056381225586
    5. 'lambda' → logprob: -13.630056381225586
    6. 'x' → logprob: -13.880056381225586
    7. '(
' → logprob: -14.005056381225586
    8. '   ' → logprob: -14.255056381225586
    9. '(l' → logprob: -15.630056381225586
    10. '(int' → logprob: -15.755056381225586

Token 1124: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.45848218582978e-06
    2. '(x' → logprob: -13.37500286102295
    3. ' x' → logprob: -14.00000286102295
    4. '   ' → logprob: -20.500001907348633
    5. '	x' → logprob: -21.125001907348633
    6. ' (' → logprob: -22.000001907348633
    7. '(' → logprob: -22.250001907348633
    8. ' ' → logprob: -22.750001907348633
    9. '  ' → logprob: -23.000001907348633
    10. '{x' → logprob: -23.125001907348633

Token 1125: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023396654054522514
    2. 'x' → logprob: -3.7733967304229736
    3. '0' → logprob: -8.898396492004395
    4. '(x' → logprob: -11.898396492004395
    5. ':' → logprob: -12.898396492004395
    6. ' x' → logprob: -13.523396492004395
    7. '(' → logprob: -13.898396492004395
    8. ':x' → logprob: -14.023396492004395
    9. '[x' → logprob: -14.398396492004395
    10. '[
' → logprob: -14.398396492004395

Token 1126: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.500000953674316
    3. ' ' → logprob: -15.125000953674316
    4. '
' → logprob: -16.625001907348633
    5. '1' → logprob: -17.250001907348633
    6. 'x' → logprob: -18.500001907348633
    7. '   ' → logprob: -19.062501907348633
    8. '012' → logprob: -19.250001907348633
    9. '۰' → logprob: -19.312501907348633
    10. '000' → logprob: -19.750001907348633

Token 1127: '],' (ID: 2155)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011796683247666806
    2. ',' → logprob: -9.125118255615234
    3. '0' → logprob: -12.625118255615234
    4. 'x' → logprob: -13.750118255615234
    5. '))' → logprob: -13.750118255615234
    6. '
' → logprob: -14.125118255615234
    7. '[
' → logprob: -14.875118255615234
    8. ',x' → logprob: -15.125118255615234
    9. ' ,' → logprob: -15.375118255615234
    10. ')),' → logprob: -15.500118255615234

Token 1128: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002036595979006961
    2. ' x' → logprob: -8.500204086303711
    3. '   ' → logprob: -17.12520408630371
    4. '(x' → logprob: -17.62520408630371
    5. '    ' → logprob: -18.12520408630371
    6. '1' → logprob: -18.87520408630371
    7. ' ' → logprob: -19.00020408630371
    8. '  ' → logprob: -19.62520408630371
    9. ')x' → logprob: -19.87520408630371
    10. '	x' → logprob: -20.37520408630371

Token 1129: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001137947037932463
    2. '1' → logprob: -9.125113487243652
    3. ',' → logprob: -13.250113487243652
    4. '2' → logprob: -13.375113487243652
    5. '[
' → logprob: -14.375113487243652
    6. ' [' → logprob: -15.000113487243652
    7. '
' → logprob: -15.375113487243652
    8. '#' → logprob: -16.37511444091797
    9. 'import' → logprob: -17.00011444091797
    10. ':' → logprob: -17.12511444091797

Token 1130: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0549309179186821
    2. '2' → logprob: -2.9299309253692627
    3. '[' → logprob: -10.179930686950684
    4. '
' → logprob: -13.179930686950684
    5. '0' → logprob: -13.429930686950684
    6. ' ' → logprob: -13.554930686950684
    7. '```' → logprob: -13.679930686950684
    8. '   ' → logprob: -14.054930686950684
    9. '-' → logprob: -14.617430686950684
    10. '(' → logprob: -14.992430686950684

Token 1131: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001665065879933536
    2. ',x' → logprob: -6.626665115356445
    3. '))' → logprob: -8.501665115356445
    4. ',-' → logprob: -9.376665115356445
    5. ' ,' → logprob: -10.376665115356445
    6. ',
' → logprob: -12.251665115356445
    7. ',l' → logprob: -12.501665115356445
    8. ')))' → logprob: -12.626665115356445
    9. ',n' → logprob: -13.626665115356445
    10. ',len' → logprob: -13.751665115356445

Token 1132: ' -' (ID: 533)
  Prédit: '-x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-x' → logprob: -0.002235662890598178
    2. '-' → logprob: -6.2522358894348145
    3. ' -' → logprob: -8.502235412597656
    4. '-int' → logprob: -10.002235412597656
    5. '-m' → logprob: -11.252235412597656
    6. '-l' → logprob: -12.627235412597656
    7. '-f' → logprob: -12.877235412597656
    8. '-xl' → logprob: -13.002235412597656
    9. '-re' → logprob: -13.127235412597656
    10. '-q' → logprob: -13.127235412597656

Token 1133: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9361264946837764e-07
    2. ' x' → logprob: -15.625
    3. '(x' → logprob: -21.0
    4. ')x' → logprob: -22.125
    5. '	x' → logprob: -22.125
    6. '   ' → logprob: -22.25
    7. '$x' → logprob: -24.5
    8. '1' → logprob: -25.0
    9. ''x' → logprob: -25.5
    10. '{x' → logprob: -25.625

Token 1134: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008106820285320282
    2. '1' → logprob: -5.133106708526611
    3. '0' → logprob: -6.133106708526611
    4. '][' → logprob: -12.88310718536377
    5. 'x' → logprob: -13.00810718536377
    6. '```' → logprob: -15.38310718536377
    7. '2' → logprob: -15.75810718536377
    8. '#' → logprob: -15.88310718536377
    9. '[
' → logprob: -16.133106231689453
    10. '``' → logprob: -16.383106231689453

Token 1135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013355977134779096
    2. '0' → logprob: -6.626335620880127
    3. '2' → logprob: -11.626335144042969
    4. '[' → logprob: -14.626335144042969
    5. '3' → logprob: -16.37633514404297
    6. '```' → logprob: -16.87633514404297
    7. '   ' → logprob: -17.12633514404297
    8. '
' → logprob: -17.37633514404297
    9. ' ' → logprob: -17.37633514404297
    10. '``' → logprob: -18.50133514404297

Token 1136: ']))

' (ID: 92947)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -4.215330409351736e-05
    2. ' ))' → logprob: -11.250041961669922
    3. ')' → logprob: -11.375041961669922
    4. ')))' → logprob: -11.750041961669922
    5. '   ' → logprob: -12.500041961669922
    6. '))
' → logprob: -12.750041961669922
    7. ')),' → logprob: -13.875041961669922
    8. '),' → logprob: -14.625041961669922
    9. '));' → logprob: -14.875041961669922
    10. '()))' → logprob: -15.375041961669922

Token 1137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03249816969037056
    2. '
' → logprob: -4.157498359680176
    3. '```' → logprob: -5.032498359680176
    4. '    
' → logprob: -5.782498359680176
    5. ':' → logprob: -6.282498359680176
    6. ')' → logprob: -6.532498359680176
    7. 'for' → logprob: -6.907498359680176
    8. '  
' → logprob: -7.782498359680176
    9. '<|end|>' → logprob: -7.907498359680176
    10. '.' → logprob: -8.032498359680176

Token 1138: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5482231378555298
    2. 'dp' → logprob: -1.9232231378555298
    3. 'best' → logprob: -2.1732230186462402
    4. '    
' → logprob: -3.6732230186462402
    5. 'min' → logprob: -3.9232230186462402
    6. '#' (adapté à ' #') → logprob: -4.04822301864624
    7. 'cost' → logprob: -4.29822301864624
    8. 'ans' → logprob: -4.42322301864624
    9. 'max' → logprob: -4.42322301864624
    10. '
' → logprob: -4.79822301864624

Token 1139: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6041464805603027
    2. 'best' → logprob: -1.7291464805603027
    3. '#' → logprob: -2.7291464805603027
    4. 'min' → logprob: -2.7291464805603027
    5. 'ans' → logprob: -2.9791464805603027
    6. 'left' → logprob: -4.229146480560303
    7. 'res' → logprob: -4.729146480560303
    8. 'max' → logprob: -4.854146480560303
    9. 'l' → logprob: -4.979146480560303
    10. 'cost' → logprob: -4.979146480560303

Token 1140: ' ajoute' (ID: 91611)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1166536808013916
    2. 'dp' → logprob: -1.7416536808013916
    3. 'inf' → logprob: -2.2416536808013916
    4. 'c' → logprob: -2.9916536808013916
    5. 'cost' → logprob: -2.9916536808013916
    6. ' =' → logprob: -3.1166536808013916
    7. 's' → logprob: -3.3666536808013916
    8. '=' → logprob: -3.6166536808013916
    9. 'from' → logprob: -3.8666536808013916
    10. 'dist' → logprob: -4.6166534423828125

Token 1141: ' à' (ID: 1221)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.3556565046310425
    2. 'inf' → logprob: -1.9806565046310425
    3. 'un' → logprob: -2.230656623840332
    4. '[' → logprob: -2.355656623840332
    5. '([],' → logprob: -2.355656623840332
    6. 'n' → logprob: -3.230656623840332
    7. '([]' → logprob: -3.230656623840332
    8. 'l' → logprob: -3.355656623840332
    9. 'a' → logprob: -3.480656623840332
    10. '([' → logprob: -3.730656623840332

Token 1142: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.33897289633750916
    2. '[' → logprob: -2.213972806930542
    3. '[(' → logprob: -2.588972806930542
    4. 'inf' → logprob: -3.088972806930542
    5. '[]' → logprob: -4.463973045349121
    6. '[
' → logprob: -4.588973045349121
    7. '0' → logprob: -4.838973045349121
    8. 'n' → logprob: -4.838973045349121
    9. '[-' → logprob: -5.088973045349121
    10. '[n' → logprob: -5.213973045349121

Token 1143: ' fin' (ID: 2131)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2882520258426666
    2. '[]
' → logprob: -2.538252115249634
    3. '[]' → logprob: -2.788252115249634
    4. 'result' → logprob: -3.788252115249634
    5. '[
' → logprob: -4.163251876831055
    6. 'import' → logprob: -4.538251876831055
    7. '...' → logprob: -4.788251876831055
    8. '[' → logprob: -5.038251876831055
    9. '```' → logprob: -5.413251876831055
    10. 'collections' → logprob: -5.413251876831055

Token 1144: ' un' (ID: 537)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.7460194826126099
    2. 'l' → logprob: -1.4960194826126099
    3. '([(' → logprob: -2.2460193634033203
    4. '[(' → logprob: -2.9960193634033203
    5. '(l' → logprob: -3.3710193634033203
    6. '[' → logprob: -3.4960193634033203
    7. '([-' → logprob: -3.4960193634033203
    8. '[l' → logprob: -4.87101936340332
    9. '(' → logprob: -4.87101936340332
    10. ',' → logprob: -4.87101936340332

Token 1145: ' interval' (ID: 17116)
  Prédit: 'sent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sent' → logprob: -0.9055807590484619
    2. '[' → logprob: -1.530580759048462
    3. '(' → logprob: -2.155580759048462
    4. '[l' → logprob: -2.405580759048462
    5. '(l' → logprob: -3.155580759048462
    6. '[n' → logprob: -3.280580759048462
    7. '(n' → logprob: -3.280580759048462
    8. '([' → logprob: -4.155580520629883
    9. '[(' → logprob: -5.155580520629883
    10. 'l' → logprob: -5.155580520629883

Token 1146: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.9814177751541138
    2. 'val' → logprob: -1.4814177751541138
    3. 'aire' → logprob: -1.9814177751541138
    4. '(' → logprob: -2.981417655944824
    5. '[' → logprob: -3.481417655944824
    6. ' (' → logprob: -3.606417655944824
    7. 'al' → logprob: -3.731417655944824
    8. 'vale' → logprob: -4.106417655944824
    9. 'naire' → logprob: -4.231417655944824
    10. '(
' → logprob: -4.481417655944824

Token 1147: ' fact' (ID: 2840)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18644210696220398
    2. '[n' → logprob: -2.0614421367645264
    3. ' [' → logprob: -3.5614421367645264
    4. '(' → logprob: -4.686441898345947
    5. '[l' → logprob: -6.436441898345947
    6. '(n' → logprob: -6.561441898345947
    7. '[-' → logprob: -7.061441898345947
    8. ' (' → logprob: -8.061442375183105
    9. '([' → logprob: -8.686442375183105
    10. ' =' → logprob: -8.686442375183105

Token 1148: 'ice' (ID: 603)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7065589427947998
    2. '[' → logprob: -1.2065589427947998
    3. '(None' → logprob: -2.7065589427948
    4. '=' → logprob: -3.3315589427948
    5. 'oire' → logprob: -4.081559181213379
    6. '()' → logprob: -4.206559181213379
    7. '[-' → logprob: -4.206559181213379
    8. '([' → logprob: -4.706559181213379
    9. '[(' → logprob: -5.081559181213379
    10. 'or' → logprob: -5.331559181213379

Token 1149: ' contenant' (ID: 131049)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22857899963855743
    2. ' =' → logprob: -2.353579044342041
    3. '[(' → logprob: -3.728579044342041
    4. '   ' → logprob: -3.853579044342041
    5. '[' → logprob: -3.978579044342041
    6. '=[' → logprob: -4.478579044342041
    7. '.append' → logprob: -4.853579044342041
    8. ' [' → logprob: -5.228579044342041
    9. ' [(' → logprob: -5.478579044342041
    10. '[n' → logprob: -5.853579044342041

Token 1150: ' des' (ID: 731)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.18173916637897491
    2. '(n' → logprob: -2.181739091873169
    3. '[' → logprob: -3.306739091873169
    4. '(' → logprob: -4.181739330291748
    5. 'inf' → logprob: -7.556739330291748
    6. '[l' → logprob: -8.18173885345459
    7. 'n' → logprob: -8.68173885345459
    8. ' (' → logprob: -9.05673885345459
    9. '0' → logprob: -9.30673885345459
    10. ' [' → logprob: -9.43173885345459

Token 1151: ' valeurs' (ID: 73668)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.17689944803714752
    2. '[' → logprob: -2.3018994331359863
    3. '(n' → logprob: -3.1768994331359863
    4. 'n' → logprob: -5.051899433135986
    5. '(' → logprob: -5.176899433135986
    6. '[
' → logprob: -5.301899433135986
    7. 'inf' → logprob: -6.426899433135986
    8. '0' → logprob: -7.051899433135986
    9. ' [' → logprob: -8.426899909973145
    10. '[in' → logprob: -8.551899909973145

Token 1152: ' de' (ID: 334)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.6979714035987854
    2. '[' → logprob: -1.5729713439941406
    3. '(n' → logprob: -1.8229713439941406
    4. '(' → logprob: -2.5729713439941406
    5. 'inf' → logprob: -3.1979713439941406
    6. 'n' → logprob: -4.572971343994141
    7. ' (' → logprob: -6.572971343994141
    8. '(in' → logprob: -6.572971343994141
    9. ' [' → logprob: -7.072971343994141
    10. '0' → logprob: -7.447971343994141

Token 1153: ' "' (ID: 392)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.4194811284542084
    2. '(' → logprob: -1.5444811582565308
    3. 'n' → logprob: -2.669481039047241
    4. 'in' → logprob: -4.29448127746582
    5. '[' → logprob: -4.54448127746582
    6. 'l' → logprob: -4.66948127746582
    7. '(n' → logprob: -5.16948127746582
    8. 'sent' → logprob: -5.16948127746582
    9. '100' → logprob: -6.16948127746582
    10. '[n' → logprob: -6.66948127746582

Token 1154: 'l' (ID: 75)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.40818077325820923
    2. 'n' → logprob: -1.9081807136535645
    3. '(' → logprob: -2.2831807136535645
    4. '10' → logprob: -3.4081807136535645
    5. '0' → logprob: -3.6581807136535645
    6. '(n' → logprob: -5.1581807136535645
    7. '[' → logprob: -5.1581807136535645
    8. '100' → logprob: -5.4081807136535645
    9. 'l' → logprob: -6.5331807136535645
    10. '999' → logprob: -6.6581807136535645

Token 1155: '",' (ID: 672)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34250640869140625
    2. '=' → logprob: -1.3425064086914062
    3. ' =' → logprob: -4.592506408691406
    4. 'n' → logprob: -4.967506408691406
    5. ',n' → logprob: -5.717506408691406
    6. '=n' → logprob: -6.092506408691406
    7. ',
' → logprob: -6.467506408691406
    8. ' ,' → logprob: -6.592506408691406
    9. '0' → logprob: -7.592506408691406
    10. ':' → logprob: -7.967506408691406

Token 1156: ' "' (ID: 392)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.16020147502422333
    2. 'm' → logprob: -2.2852015495300293
    3. '0' → logprob: -4.035201549530029
    4. '[' → logprob: -4.535201549530029
    5. 'inf' → logprob: -4.910201549530029
    6. ' r' → logprob: -5.535201549530029
    7. '[r' → logprob: -6.535201549530029
    8. '100' → logprob: -6.910201549530029
    9. '   ' → logprob: -7.160201549530029
    10. 'sys' → logprob: -7.410201549530029

Token 1157: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.038222797214984894
    2. 'inf' → logprob: -4.288222789764404
    3. 'm' → logprob: -4.413222789764404
    4. '0' → logprob: -4.788222789764404
    5. 'n' → logprob: -6.538222789764404
    6. '100' → logprob: -7.663222789764404
    7. '999' → logprob: -8.038223266601562
    8. 'float' → logprob: -8.413223266601562
    9. ' r' → logprob: -8.663223266601562
    10. '"' → logprob: -8.913223266601562

Token 1158: '",' (ID: 672)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09854374825954437
    2. '",' → logprob: -3.098543643951416
    3. '=' → logprob: -3.598543643951416
    4. '"' → logprob: -4.348543643951416
    5. '0' → logprob: -5.723543643951416
    6. ' =' → logprob: -6.598543643951416
    7. 'n' → logprob: -7.223543643951416
    8. 'et' → logprob: -7.973543643951416
    9. '=[' → logprob: -8.098544120788574
    10. '[' → logprob: -8.098544120788574

Token 1159: ' "' (ID: 392)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3835070729255676
    2. '[' → logprob: -1.6335070133209229
    3. 'm' → logprob: -2.508507013320923
    4. 'inf' → logprob: -3.883507013320923
    5. 'n' → logprob: -4.633507251739502
    6. ',' → logprob: -5.633507251739502
    7. '[m' → logprob: -6.383507251739502
    8. '[n' → logprob: -6.633507251739502
    9. ' ' → logprob: -6.758507251739502
    10. ' [' → logprob: -7.133507251739502

Token 1160: 'c' (ID: 66)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.5093757510185242
    2. '0' → logprob: -1.634375810623169
    3. 'n' → logprob: -2.759375810623169
    4. 'c' → logprob: -3.384375810623169
    5. 'm' → logprob: -3.509375810623169
    6. '"' → logprob: -3.509375810623169
    7. ',' → logprob: -4.13437557220459
    8. '",' → logprob: -4.25937557220459
    9. '100' → logprob: -5.75937557220459
    10. '10' → logprob: -6.00937557220459

Token 1161: '"' (ID: 1)
  Prédit: '=['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.6665592789649963
    2. '=' → logprob: -1.0415592193603516
    3. ' =' → logprob: -2.1665592193603516
    4. '[' → logprob: -4.416559219360352
    5. ',' → logprob: -6.416559219360352
    6. '0' → logprob: -6.666559219360352
    7. ':' → logprob: -7.541559219360352
    8. '=None' → logprob: -7.541559219360352
    9. '```' → logprob: -7.916559219360352
    10. 's' → logprob: -8.041559219360352

Token 1162: ' très' (ID: 9412)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0566522479057312
    2. ' =' → logprob: -3.806652307510376
    3. ',' → logprob: -4.306652069091797
    4. '=' → logprob: -5.056652069091797
    5. '(n' → logprob: -6.306652069091797
    6. '[(' → logprob: -6.431652069091797
    7. '(l' → logprob: -6.431652069091797
    8. 'l' → logprob: -6.431652069091797
    9. '+' → logprob: -6.931652069091797
    10. ':' → logprob: -7.056652069091797

Token 1163: ' grandes' (ID: 16325)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5078918933868408
    2. ',' → logprob: -1.8828918933868408
    3. 'inf' → logprob: -2.007891893386841
    4. 'large' → logprob: -2.257891893386841
    5. ' large' → logprob: -2.507891893386841
    6. '[]' → logprob: -3.382891893386841
    7. ' =' → logprob: -3.382891893386841
    8. 'import' → logprob: -3.507891893386841
    9. '_' → logprob: -3.632891893386841
    10. ' grandes' → logprob: -3.632891893386841

Token 1164: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06073331832885742
    2. '.append' → logprob: -2.9357333183288574
    3. '[(' → logprob: -6.560733318328857
    4. '([(' → logprob: -6.685733318328857
    5. '   ' → logprob: -7.060733318328857
    6. ' =' → logprob: -7.935733318328857
    7. '([' → logprob: -7.935733318328857
    8. ',
' → logprob: -8.310733795166016
    9. ' [(' → logprob: -8.310733795166016
    10. ',[' → logprob: -8.560733795166016

Token 1165: 'pour' (ID: 52723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1431211531162262
    2. '[(' → logprob: -2.8931212425231934
    3. ',' → logprob: -3.2681212425231934
    4. '(' → logprob: -3.5181212425231934
    5. '0' → logprob: -5.643121242523193
    6. '[n' → logprob: -6.393121242523193
    7. ' [' → logprob: -7.143121242523193
    8. ')' → logprob: -7.143121242523193
    9. ' (' → logprob: -7.268121242523193
    10. '100' → logprob: -7.518121242523193

Token 1166: ' blo' (ID: 13098)
  Prédit: ' éviter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' éviter' → logprob: -1.1141257286071777
    2. '#' → logprob: -1.9891257286071777
    3. ' faciliter' → logprob: -1.9891257286071777
    4. ')' → logprob: -2.9891257286071777
    5. ' garantir' → logprob: -3.1141257286071777
    6. 'sent' → logprob: -3.4891257286071777
    7. 'l' → logprob: -3.6141257286071777
    8. ' assurer' → logprob: -3.7391257286071777
    9. 'simpl' → logprob: -3.7391257286071777
    10. 'év' → logprob: -3.9891257286071777

Token 1167: 'quer' (ID: 8054)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.23919624090194702
    2. 'ker' → logprob: -2.239196300506592
    3. 'quer' → logprob: -3.739196300506592
    4. 'uer' → logprob: -4.239196300506592
    5. 'que' → logprob: -4.364196300506592
    6. 'q' → logprob: -4.614196300506592
    7. 'cker' → logprob: -4.614196300506592
    8. '   ' → logprob: -5.239196300506592
    9. 'u' → logprob: -5.489196300506592
    10. 'ant' → logprob: -5.739196300506592

Token 1168: ' les' (ID: 1341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9425072073936462
    2. ')' → logprob: -1.942507266998291
    3. '0' → logprob: -2.067507266998291
    4. 'l' → logprob: -2.567507266998291
    5. 'n' → logprob: -2.817507266998291
    6. '[' → logprob: -3.317507266998291
    7. 'la' → logprob: -3.317507266998291
    8. 'le' → logprob: -3.567507266998291
    9. ',' → logprob: -3.817507266998291
    10. '(n' → logprob: -3.942507266998291

Token 1169: ' bou' (ID: 17573)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2382292747497559
    2. '[' → logprob: -1.4882292747497559
    3. '0' → logprob: -1.9882292747497559
    4. ')' → logprob: -2.488229274749756
    5. ']' → logprob: -3.488229274749756
    6. ' l' → logprob: -3.613229274749756
    7. '[-' → logprob: -3.738229274749756
    8. 'l' → logprob: -3.738229274749756
    9. 'n' → logprob: -3.863229274749756
    10. '_' → logprob: -4.238229274749756

Token 1170: 'cles' (ID: 10934)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.7963951826095581
    2. 'cle' → logprob: -1.171395182609558
    3. 'f' → logprob: -2.6713953018188477
    4. 'nds' → logprob: -2.7963953018188477
    5. 'ff' → logprob: -3.2963953018188477
    6. 'cles' → logprob: -3.5463953018188477
    7. 'n' → logprob: -3.5463953018188477
    8. 'cl' → logprob: -6.046395301818848
    9. 'c' → logprob: -6.421395301818848
    10. 'r' → logprob: -6.921395301818848

Token 1171: ' plus' (ID: 2932)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15501120686531067
    2. ',' → logprob: -2.6550111770629883
    3. ').' → logprob: -3.7800111770629883
    4. '):' → logprob: -4.030011177062988
    5. '[' → logprob: -5.280011177062988
    6. '...' → logprob: -5.530011177062988
    7. '):
' → logprob: -5.780011177062988
    8. 'dans' → logprob: -6.030011177062988
    9. '0' → logprob: -6.405011177062988
    10. 'n' → logprob: -6.530011177062988

Token 1172: ' loin' (ID: 40875)
  Prédit: 'loin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'loin' → logprob: -1.2001255750656128
    2. ')' → logprob: -1.4501255750656128
    3. 'haut' → logprob: -1.8251255750656128
    4. '[]' → logprob: -2.0751256942749023
    5. 't' → logprob: -3.0751256942749023
    6. '+' → logprob: -3.8251256942749023
    7. 'bas' → logprob: -4.075125694274902
    8. ']' → logprob: -4.450125694274902
    9. '```' → logprob: -4.450125694274902
    10. '[' → logprob: -4.950125694274902

Token 1173: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1734851747751236
    2. ',' → logprob: -2.298485279083252
    3. ')
' → logprob: -3.173485279083252
    4. '[' → logprob: -4.298485279083252
    5. ').' → logprob: -7.298485279083252
    6. '(' → logprob: -7.298485279083252
    7. ')`' → logprob: -7.923485279083252
    8. ',[' → logprob: -8.548484802246094
    9. ')
' → logprob: -8.673484802246094
    10. '):' → logprob: -8.923484802246094

Token 1174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6521617770195007
    2. 'l' → logprob: -1.1521618366241455
    3. ' l' → logprob: -2.6521618366241455
    4. '
' → logprob: -2.9021618366241455
    5. '.append' → logprob: -3.5271618366241455
    6. ',' → logprob: -5.652161598205566
    7. '[(' → logprob: -6.777161598205566
    8. ' [(' → logprob: -7.027161598205566
    9. ' +' → logprob: -7.777161598205566
    10. 'append' → logprob: -8.152161598205566

Token 1175: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.17639650404453278
    2. '   ' → logprob: -1.9263964891433716
    3. ' l' → logprob: -4.926396369934082
    4. '.append' → logprob: -4.926396369934082
    5. '
' → logprob: -7.301396369934082
    6. 'append' → logprob: -7.676396369934082
    7. '[' → logprob: -9.551396369934082
    8. ' append' → logprob: -9.551396369934082
    9. '[l' → logprob: -9.676396369934082
    10. '```' → logprob: -9.926396369934082

Token 1176: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.00017517358355689794
    2. '_rc' → logprob: -9.500175476074219
    3. '.append' → logprob: -9.875175476074219
    4. 'r' → logprob: -10.750175476074219
    5. ' =' → logprob: -11.750175476074219
    6. 'rpc' → logprob: -12.625175476074219
    7. 'rcode' → logprob: -12.625175476074219
    8. '=' → logprob: -12.875175476074219
    9. '(rc' → logprob: -13.500175476074219
    10. ' +=' → logprob: -13.625175476074219

Token 1177: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004725602921098471
    2. '.' → logprob: -5.379725456237793
    3. ' .' → logprob: -10.004725456237793
    4. ').' → logprob: -11.254725456237793
    5. '=' → logprob: -11.754725456237793
    6. '.extend' → logprob: -11.754725456237793
    7. '+' → logprob: -11.879725456237793
    8. '   ' → logprob: -12.004725456237793
    9. ' +=' → logprob: -12.004725456237793
    10. '+.' → logprob: -12.129725456237793

Token 1178: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.00012511172099038959
    2. '(' → logprob: -9.62512493133545
    3. '((' → logprob: -9.75012493133545
    4. '[' → logprob: -14.87512493133545
    5. '([-' → logprob: -16.000125885009766
    6. '(([' → logprob: -16.125125885009766
    7. '([(' → logprob: -16.625125885009766
    8. ' ([' → logprob: -17.125125885009766
    9. '[(' → logprob: -17.250125885009766
    10. '([[' → logprob: -19.000125885009766

Token 1179: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.044357579201459885
    2. '10' → logprob: -3.1693575382232666
    3. 'int' → logprob: -7.294357776641846
    4. 'n' → logprob: -7.919357776641846
    5. 'float' → logprob: -8.794357299804688
    6. 'math' → logprob: -9.669357299804688
    7. 'infl' → logprob: -10.294357299804688
    8. 'in' → logprob: -11.419357299804688
    9. 'INF' → logprob: -11.419357299804688
    10. 'sys' → logprob: -11.544357299804688

Token 1180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002157041570171714
    2. ' ,' → logprob: -6.377157211303711
    3. ',
' → logprob: -8.502157211303711
    4. 'inf' → logprob: -8.502157211303711
    5. '+' → logprob: -11.502157211303711
    6. '
' → logprob: -11.877157211303711
    7. ',int' → logprob: -12.127157211303711
    8. ',in' → logprob: -12.252157211303711
    9. ',float' → logprob: -12.877157211303711
    10. ',None' → logprob: -13.127157211303711

Token 1181: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -4.417976379045285e-05
    2. '-inf' → logprob: -10.750043869018555
    3. ' inf' → logprob: -11.125043869018555
    4. '0' → logprob: -11.875043869018555
    5. '-' → logprob: -15.375043869018555
    6. '_inf' → logprob: -15.750043869018555
    7. '.inf' → logprob: -16.000043869018555
    8. '   ' → logprob: -16.500043869018555
    9. ' ' → logprob: -16.500043869018555
    10. ' ' → logprob: -17.125043869018555

Token 1182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010509284038562328
    2. ' ,' → logprob: -9.500104904174805
    3. ',
' → logprob: -11.250104904174805
    4. 'inf' → logprob: -11.500104904174805
    5. '])' → logprob: -13.625104904174805
    6. ',in' → logprob: -14.000104904174805
    7. ',opt' → logprob: -14.000104904174805
    8. ' inf' → logprob: -14.125104904174805
    9. ',None' → logprob: -14.375104904174805
    10. ',int' → logprob: -15.000104904174805

Token 1183: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.00012976066500414163
    2. '0' → logprob: -9.125129699707031
    3. ' inf' → logprob: -11.250129699707031
    4. '-inf' → logprob: -12.375129699707031
    5. '-' → logprob: -14.000129699707031
    6. '1' → logprob: -14.250129699707031
    7. '.inf' → logprob: -15.250129699707031
    8. '100' → logprob: -15.250129699707031
    9. '_inf' → logprob: -15.250129699707031
    10. ' ' → logprob: -15.312629699707031

Token 1184: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -1.259079363080673e-05
    2. '])
' → logprob: -11.750012397766113
    3. ' ])' → logprob: -13.000012397766113
    4. ')])' → logprob: -14.375012397766113
    5. ')' → logprob: -14.750012397766113
    6. '])
' → logprob: -15.125012397766113
    7. ']);' → logprob: -15.500012397766113
    8. ']))' → logprob: -15.625012397766113
    9. ']' → logprob: -15.625012397766113
    10. '])]' → logprob: -15.750012397766113

Token 1185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.357421875
    2. '
' → logprob: -1.857421875
    3. '    
' → logprob: -2.232421875
    4. 'dp' → logprob: -4.732421875
    5. '```' → logprob: -5.357421875
    6. 'ans' → logprob: -5.732421875
    7. 'res' → logprob: -5.857421875
    8. 'best' → logprob: -5.982421875
    9. '#' → logprob: -6.357421875
    10. 'max' → logprob: -6.357421875

Token 1186: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6282878518104553
    2. 'dp' → logprob: -1.2532877922058105
    3. '
' → logprob: -2.3782877922058105
    4. 'best' → logprob: -3.7532877922058105
    5. '    
' → logprob: -3.7532877922058105
    6. '#' (adapté à ' #') → logprob: -4.8782877922058105
    7. 'min' → logprob: -5.2532877922058105
    8. 'max' → logprob: -5.5032877922058105
    9. 'd' → logprob: -5.7532877922058105
    10. 'cur' → logprob: -6.2532877922058105

Token 1187: ' Initial' (ID: 9209)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -1.0510622262954712
    2. 'dp' → logprob: -1.3010622262954712
    3. 'min' → logprob: -2.0510621070861816
    4. 'ans' → logprob: -2.8010621070861816
    5. '#' → logprob: -3.9260621070861816
    6. 'mx' → logprob: -3.9260621070861816
    7. 'mn' → logprob: -4.051062107086182
    8. 'left' → logprob: -4.051062107086182
    9. 'res' → logprob: -4.176062107086182
    10. 'max' → logprob: -4.426062107086182

Token 1188: 'isation' (ID: 6993)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6697792410850525
    2. 'isation' → logprob: -1.6697793006896973
    3. 'max' → logprob: -3.5447793006896973
    4. 'min' → logprob: -3.5447793006896973
    5. 'iser' → logprob: -3.7947793006896973
    6. 'ization' → logprob: -3.9197793006896973
    7. 'val' → logprob: -4.544779300689697
    8. '_min' → logprob: -4.544779300689697
    9. 'isé' → logprob: -4.544779300689697
    10. '_pos' → logprob: -4.669779300689697

Token 1189: ' d' (ID: 272)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4760747253894806
    2. 'best' → logprob: -1.4760746955871582
    3. 'min' → logprob: -3.226074695587158
    4. 'ans' → logprob: -4.226074695587158
    5. 'max' → logprob: -4.226074695587158
    6. 'l' → logprob: -4.476074695587158
    7. '   ' → logprob: -4.601074695587158
    8. 'res' → logprob: -4.976074695587158
    9. 'left' → logprob: -5.101074695587158
    10. 'dist' → logprob: -5.351074695587158

Token 1190: ''un' (ID: 9788)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.6403295993804932
    2. 'n' → logprob: -1.6403295993804932
    3. 'prev' → logprob: -1.8903295993804932
    4. 'a' → logprob: -2.015329599380493
    5. 'ans' → logprob: -2.890329599380493
    6. 'max' → logprob: -3.515329599380493
    7. 'left' → logprob: -3.640329599380493
    8. 'cur' → logprob: -4.015329360961914
    9. ' =' → logprob: -4.015329360961914
    10. 'r' → logprob: -4.015329360961914

Token 1191: ' indice' (ID: 90848)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.8367178440093994
    2. ' =' → logprob: -2.3367178440093994
    3. '[]' → logprob: -2.4617178440093994
    4. '[' → logprob: -2.8367178440093994
    5. 'default' → logprob: -2.8367178440093994
    6. 'deque' → logprob: -2.9617178440093994
    7. '
' → logprob: -3.2117178440093994
    8. '=' → logprob: -3.2117178440093994
    9. 'prev' → logprob: -3.4617178440093994
    10. 'n' → logprob: -3.7117178440093994

Token 1192: ' pour' (ID: 1930)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01023550983518362
    2. ' i' → logprob: -4.88523530960083
    3. 'idx' → logprob: -6.76023530960083
    4. '   ' → logprob: -7.38523530960083
    5. ' =' → logprob: -7.51023530960083
    6. 'cur' → logprob: -9.135235786437988
    7. '=' → logprob: -9.510235786437988
    8. 'pos' → logprob: -10.885235786437988
    9. '
' → logprob: -11.010235786437988
    10. ' idx' → logprob: -11.135235786437988

Token 1193: ' parcour' (ID: 130642)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.26180610060691833
    2. '0' → logprob: -1.5118061304092407
    3. '_' → logprob: -5.886806011199951
    4. 'l' → logprob: -6.261806011199951
    5. ' i' → logprob: -6.261806011199951
    6. '-' → logprob: -6.886806011199951
    7. 'idx' → logprob: -8.26180648803711
    8. 'r' → logprob: -8.38680648803711
    9. 'c' → logprob: -8.38680648803711
    10. ' ' → logprob: -8.76180648803711

Token 1194: 'ir' (ID: 380)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.15518289804458618
    2. 'ation' → logprob: -2.0301828384399414
    3. '   ' → logprob: -5.155182838439941
    4. 'ateur' → logprob: -6.905182838439941
    5. '[]' → logprob: -7.280182838439941
    6. ')' → logprob: -7.655182838439941
    7. '=' → logprob: -7.655182838439941
    8. 'u' → logprob: -8.155182838439941
    9. 'uer' → logprob: -8.155182838439941
    10. '[i' → logprob: -8.280182838439941

Token 1195: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.425856351852417
    2. '0' → logprob: -1.175856351852417
    3. 'range' → logprob: -4.050856590270996
    4. ' l' → logprob: -4.175856590270996
    5. ' range' → logprob: -6.175856590270996
    6. '_' → logprob: -7.050856590270996
    7. ' ' → logprob: -7.675856590270996
    8. ' la' → logprob: -7.925856590270996
    9. '   ' → logprob: -7.925856590270996
    10. 'i' → logprob: -8.550856590270996

Token 1196: ' liste' (ID: 31719)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.019814400002360344
    2. ' l' → logprob: -4.769814491271973
    3. 'range' → logprob: -5.144814491271973
    4. ' range' → logprob: -6.394814491271973
    5. 'i' → logprob: -6.644814491271973
    6. '   ' → logprob: -7.519814491271973
    7. '`' → logprob: -8.269814491271973
    8. '_l' → logprob: -8.394814491271973
    9. '_' → logprob: -8.644814491271973
    10. '```' → logprob: -8.644814491271973

Token 1197: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5856201648712158
    2. ' =' → logprob: -1.4606201648712158
    3. ' i' → logprob: -1.7106201648712158
    4. '=' → logprob: -4.210619926452637
    5. ',' → logprob: -5.585619926452637
    6. '   ' → logprob: -5.585619926452637
    7. '_i' → logprob: -6.585619926452637
    8. '	i' → logprob: -6.710619926452637
    9. 'idx' → logprob: -7.085619926452637
    10. 'l' → logprob: -7.085619926452637

Token 1198: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -2.1888679839321412e-05
    2. 'r' → logprob: -11.125021934509277
    3. '_rc' → logprob: -13.375021934509277
    4. 'rcode' → logprob: -14.250021934509277
    5. ' =' → logprob: -14.500021934509277
    6. '=' → logprob: -14.750021934509277
    7. '```' → logprob: -14.750021934509277
    8. 'erc' → logprob: -15.000021934509277
    9. '   ' → logprob: -15.000021934509277
    10. 'ric' → logprob: -15.500021934509277

Token 1199: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01370161585509777
    2. '   ' → logprob: -4.888701438903809
    3. ' i' → logprob: -5.888701438903809
    4. 'idx' → logprob: -6.513701438903809
    5. '=' → logprob: -7.263701438903809
    6. ' =' → logprob: -7.263701438903809
    7. ',' → logprob: -9.263701438903809
    8. '
' → logprob: -9.388701438903809
    9. '```' → logprob: -9.888701438903809
    10. 'pos' → logprob: -10.013701438903809

Token 1200: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06372950226068497
    2. '   ' → logprob: -2.8137295246124268
    3. '=' → logprob: -7.438729286193848
    4. ' =' → logprob: -7.563729286193848
    5. ' i' → logprob: -8.313729286193848
    6. 'idx' → logprob: -8.438729286193848
    7. '```' → logprob: -9.188729286193848
    8. '
' → logprob: -9.688729286193848
    9. ',' → logprob: -11.563729286193848
    10. '_i' → logprob: -12.563729286193848

Token 1201: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.00927195604890585
    2. 'idx' → logprob: -4.88427209854126
    3. ' i' → logprob: -7.25927209854126
    4. 'j' → logprob: -8.884271621704102
    5. 'cur' → logprob: -9.009271621704102
    6. 'pos' → logprob: -9.009271621704102
    7. 'ind' → logprob: -9.009271621704102
    8. '   ' → logprob: -9.134271621704102
    9. 'id' → logprob: -10.259271621704102
    10. '```' → logprob: -10.259271621704102

Token 1202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47409239411354065
    2. '=' → logprob: -0.9740923643112183
    3. ',' → logprob: -11.474092483520508
    4. ' +=' → logprob: -13.724092483520508
    5. ' ' → logprob: -14.099092483520508
    6. '+=' → logprob: -14.349092483520508
    7. 'n' → logprob: -14.474092483520508
    8. '   ' → logprob: -14.599092483520508
    9. '  ' → logprob: -14.974092483520508
    10. '=i' → logprob: -15.474092483520508

Token 1203: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '1' → logprob: -17.000036239624023
    4. '=' → logprob: -17.750036239624023
    5. '   ' → logprob: -18.375036239624023
    6. '۰' → logprob: -19.250036239624023
    7. '-' → logprob: -19.437536239624023
    8. '	' → logprob: -20.250036239624023
    9. '2' → logprob: -20.562536239624023
    10. '#' → logprob: -20.562536239624023

Token 1204: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '=' → logprob: -17.875
    4. '   ' → logprob: -19.0
    5. '1' → logprob: -19.375
    6. '۰' → logprob: -19.875
    7. '-' → logprob: -20.0
    8. 's' → logprob: -21.1875
    9. '০' → logprob: -21.5625
    10. '०' → logprob: -21.625

Token 1205: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16570615768432617
    2. '   ' → logprob: -2.165706157684326
    3. '    
' → logprob: -4.165706157684326
    4. '<|end|>' → logprob: -5.290706157684326
    5. '\n' → logprob: -5.540706157684326
    6. 'n' → logprob: -5.540706157684326
    7. '  
' → logprob: -6.040706157684326
    8. ',' → logprob: -6.165706157684326
    9. '```' → logprob: -6.665706157684326
    10. '   
' → logprob: -7.165706157684326

Token 1206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5122544765472412
    2. 'res' → logprob: -1.8872544765472412
    3. 'best' → logprob: -3.137254476547241
    4. 'ans' → logprob: -3.762254476547241
    5. 'total' → logprob: -3.762254476547241
    6. 'current' → logprob: -3.887254476547241
    7. 'result' → logprob: -4.01225471496582
    8. 'max' → logprob: -4.01225471496582
    9. '
' → logprob: -4.13725471496582
    10. 'answer' → logprob: -4.26225471496582

Token 1207: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.2662383317947388
    2. 'ans' → logprob: -1.8912383317947388
    3. 'while' → logprob: -2.141238212585449
    4. 'best' → logprob: -2.266238212585449
    5. 'max' → logprob: -3.016238212585449
    6. 'current' → logprob: -3.141238212585449
    7. 'answer' → logprob: -3.391238212585449
    8. 'min' → logprob: -3.516238212585449
    9. '   ' → logprob: -3.516238212585449
    10. 'cur' → logprob: -3.641238212585449

Token 1208: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5140607357025146
    2. 'best' → logprob: -1.7640607357025146
    3. 'res' → logprob: -1.8890607357025146
    4. 'answer' → logprob: -3.3890607357025146
    5. 'while' → logprob: -4.889060974121094
    6. 'dp' → logprob: -5.014060974121094
    7. 'min' → logprob: -5.139060974121094
    8. 'result' → logprob: -5.264060974121094
    9. 'left' → logprob: -5.764060974121094
    10. 'cur' → logprob: -6.014060974121094

Token 1209: ' crée' (ID: 102256)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.22559072077274323
    2. ' while' → logprob: -2.725590705871582
    3. ' =' → logprob: -2.975590705871582
    4. '=' → logprob: -3.600590705871582
    5. 'n' → logprob: -3.975590705871582
    6. '_' → logprob: -4.475590705871582
    7. 'max' → logprob: -4.600590705871582
    8. 'r' → logprob: -5.225590705871582
    9. '#' → logprob: -6.725590705871582
    10. 's' → logprob: -6.975590705871582

Token 1210: ' une' (ID: 2463)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.144005537033081
    2. 'un' → logprob: -1.269005537033081
    3. 'dp' → logprob: -2.144005537033081
    4. 'une' → logprob: -2.894005537033081
    5. '[]' → logprob: -3.019005537033081
    6. 'a' → logprob: -3.394005537033081
    7. ' une' → logprob: -3.519005537033081
    8. ' un' → logprob: -3.894005537033081
    9. ' deux' → logprob: -4.26900577545166
    10. 'res' → logprob: -4.39400577545166

Token 1211: ' liste' (ID: 31719)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04868444800376892
    2. 'default' → logprob: -4.798684597015381
    3. 'd' → logprob: -5.048684597015381
    4. 'deque' → logprob: -5.298684597015381
    5. 'dist' → logprob: -5.673684597015381
    6. 'heap' → logprob: -5.798684597015381
    7. '[]' → logprob: -6.298684597015381
    8. 'res' → logprob: -6.423684597015381
    9. 'lst' → logprob: -6.423684597015381
    10. 'prev' → logprob: -6.548684597015381

Token 1212: ' q' (ID: 2335)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3353092670440674
    2. 'dp' → logprob: -1.7103092670440674
    3. ' =' → logprob: -2.2103092670440674
    4. 'res' → logprob: -2.5853092670440674
    5. 'd' → logprob: -3.2103092670440674
    6. '(' → logprob: -3.2103092670440674
    7. 'de' → logprob: -3.3353092670440674
    8. '(
' → logprob: -3.3353092670440674
    9. '([' → logprob: -3.9603092670440674
    10. '=' → logprob: -3.9603092670440674

Token 1213: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.031320441514253616
    2. '=' → logprob: -3.531320333480835
    3. 'ue' → logprob: -7.281320571899414
    4. '=[]' → logprob: -8.406320571899414
    5. 'u' → logprob: -8.781320571899414
    6. '=[]
' → logprob: -9.156320571899414
    7. ',' → logprob: -9.281320571899414
    8. '[' → logprob: -9.406320571899414
    9. ' ' → logprob: -9.781320571899414
    10. '   ' → logprob: -10.156320571899414

Token 1214: ' tuples' (ID: 112464)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1823849380016327
    2. '[' → logprob: -2.682384967803955
    3. '[(' → logprob: -2.807384967803955
    4. '[m' → logprob: -4.182384967803955
    5. '[[' → logprob: -4.807384967803955
    6. 'inf' → logprob: -5.682384967803955
    7. '0' → logprob: -5.807384967803955
    8. '[]
' → logprob: -6.057384967803955
    9. '[n' → logprob: -6.682384967803955
    10. 'm' → logprob: -6.682384967803955

Token 1215: ' :' (ID: 712)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6690886616706848
    2. ' =' → logprob: -1.79408860206604
    3. '=' → logprob: -1.91908860206604
    4. '[]' → logprob: -2.41908860206604
    5. '=[]' → logprob: -2.66908860206604
    6. '(' → logprob: -5.919088840484619
    7. '([(' → logprob: -6.044088840484619
    8. '[(' → logprob: -6.044088840484619
    9. '[' → logprob: -6.419088840484619
    10. '   ' → logprob: -6.419088840484619

Token 1216: ' chaque' (ID: 21194)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.43744850158691406
    2. '[]' → logprob: -1.312448501586914
    3. '[' → logprob: -3.187448501586914
    4. '(in' → logprob: -4.062448501586914
    5. '()' → logprob: -4.437448501586914
    6. '(' → logprob: -4.812448501586914
    7. 'inf' → logprob: -5.937448501586914
    8. '[]
' → logprob: -7.187448501586914
    9. '(q' → logprob: -7.562448501586914
    10. '(-' → logprob: -7.687448501586914

Token 1217: ' tuple' (ID: 31311)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8641401529312134
    2. '(' → logprob: -1.1141401529312134
    3. ' =' → logprob: -2.114140033721924
    4. '()' → logprob: -3.364140033721924
    5. '[' → logprob: -3.989140033721924
    6. 'q' → logprob: -4.114140033721924
    7. '(
' → logprob: -4.364140033721924
    8. ' (' → logprob: -5.239140033721924
    9. '#' → logprob: -5.489140033721924
    10. '[(' → logprob: -5.489140033721924

Token 1218: ' a' (ID: 261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09384560585021973
    2. ' =' → logprob: -2.7188456058502197
    3. '(' → logprob: -4.968845367431641
    4. '   ' → logprob: -5.843845367431641
    5. '```' → logprob: -6.093845367431641
    6. 'de' → logprob: -6.718845367431641
    7. '=(' → logprob: -6.843845367431641
    8. '[' → logprob: -7.093845367431641
    9. ' est' → logprob: -7.343845367431641
    10. 'q' → logprob: -7.343845367431641

Token 1219: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2435991764068604
    2. ' =' → logprob: -1.4935991764068604
    3. '=' → logprob: -1.7435991764068604
    4. '[' → logprob: -1.8685991764068604
    5. '[]' → logprob: -3.1185991764068604
    6. '(
' → logprob: -4.243598937988281
    7. '   ' → logprob: -4.368598937988281
    8. '[
' → logprob: -4.493598937988281
    9. 'n' → logprob: -4.743598937988281
    10. '(n' → logprob: -4.868598937988281

Token 1220: ' forme' (ID: 27450)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6606442332267761
    2. '0' → logprob: -2.035644292831421
    3. '3' → logprob: -2.660644292831421
    4. '(n' → logprob: -3.285644292831421
    5. 'n' → logprob: -3.285644292831421
    6. '`' → logprob: -3.910644292831421
    7. 'size' → logprob: -4.035644054412842
    8. 'trip' → logprob: -4.285644054412842
    9. 'None' → logprob: -4.410644054412842
    10. 'i' → logprob: -4.410644054412842

Token 1221: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6786277890205383
    2. '()' → logprob: -1.1786277294158936
    3. '[]' → logprob: -2.9286277294158936
    4. '[(' → logprob: -3.4286277294158936
    5. '(False' → logprob: -3.6786277294158936
    6. '(l' → logprob: -4.553627967834473
    7. '([],' → logprob: -4.553627967834473
    8. '(n' → logprob: -4.678627967834473
    9. '[' → logprob: -4.803627967834473
    10. '(-' → logprob: -5.178627967834473

Token 1222: 'position' (ID: 4504)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.22147057950496674
    2. '0' → logprob: -2.971470594406128
    3. '(in' → logprob: -3.221470594406128
    4. '-inf' → logprob: -3.596470594406128
    5. '(' → logprob: -3.971470594406128
    6. '-' → logprob: -4.346470355987549
    7. '(l' → logprob: -4.471470355987549
    8. '(n' → logprob: -4.471470355987549
    9. 'l' → logprob: -5.096470355987549
    10. '(-' → logprob: -5.346470355987549

Token 1223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03863909840583801
    2. '[' → logprob: -4.538639068603516
    3. '=' → logprob: -5.663639068603516
    4. ',i' → logprob: -5.663639068603516
    5. '```' → logprob: -5.788639068603516
    6. '   ' → logprob: -5.788639068603516
    7. ')' → logprob: -6.038639068603516
    8. 'i' → logprob: -6.663639068603516
    9. ' ,' → logprob: -6.788639068603516
    10. ',
' → logprob: -7.038639068603516

Token 1224: ' coût' (ID: 73109)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.7007604241371155
    2. 'c' → logprob: -0.8257604241371155
    3. 'co' → logprob: -3.5757603645324707
    4. '0' → logprob: -4.325760364532471
    5. 'q' → logprob: -5.200760364532471
    6. 'cout' → logprob: -5.825760364532471
    7. ')' → logprob: -5.950760364532471
    8. 'i' → logprob: -6.325760364532471
    9. '1' → logprob: -6.450760364532471
    10. 'length' → logprob: -6.700760364532471

Token 1225: ' minimal' (ID: 19957)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012892824597656727
    2. ')' → logprob: -7.126289367675781
    3. ' ,' → logprob: -9.126289367675781
    4. '   ' → logprob: -9.501289367675781
    5. 'cost' → logprob: -9.876289367675781
    6. ',
' → logprob: -10.001289367675781
    7. '<|end|>' → logprob: -10.376289367675781
    8. ',)' → logprob: -10.626289367675781
    9. ',q' → logprob: -11.001289367675781
    10. '<|end|>' → logprob: -11.001289367675781

Token 1226: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0817510262131691
    2. ')' → logprob: -2.5817511081695557
    3. '_min' → logprob: -7.956750869750977
    4. 'cost' → logprob: -7.956750869750977
    5. ',
' → logprob: -8.206750869750977
    6. '_cost' → logprob: -8.331750869750977
    7. ',)' → logprob: -8.456750869750977
    8. '),' → logprob: -8.706750869750977
    9. 'q' → logprob: -8.831750869750977
    10. '   ' → logprob: -9.331750869750977

Token 1227: ' atteindre' (ID: 95734)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.2059065103530884
    2. 'l' → logprob: -1.7059065103530884
    3. ')' → logprob: -1.9559065103530884
    4. ' couvrir' → logprob: -3.330906391143799
    5. 'une' → logprob: -3.830906391143799
    6. 'i' → logprob: -3.830906391143799
    7. 'cou' → logprob: -3.830906391143799
    8. 'la' → logprob: -4.080906391143799
    9. 'contin' → logprob: -4.080906391143799
    10. 'tr' → logprob: -4.205906391143799

Token 1228: ' cette' (ID: 7696)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6846504211425781
    2. 'l' → logprob: -1.9346504211425781
    3. 'position' → logprob: -2.184650421142578
    4. '0' → logprob: -2.559650421142578
    5. 'n' → logprob: -3.059650421142578
    6. 'q' → logprob: -3.434650421142578
    7. 'inf' → logprob: -3.684650421142578
    8. ' i' → logprob: -4.434650421142578
    9. ',' → logprob: -4.809650421142578
    10. ')' → logprob: -4.809650421142578

Token 1229: ' position' (ID: 4010)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8750495910644531
    2. 'position' → logprob: -1.0000495910644531
    3. ',' → logprob: -2.000049591064453
    4. 'pos' → logprob: -3.500049591064453
    5. '_' → logprob: -4.875049591064453
    6. '),' → logprob: -5.250049591064453
    7. ' )' → logprob: -5.375049591064453
    8. ' position' → logprob: -5.500049591064453
    9. ',
' → logprob: -5.625049591064453
    10. 'point' → logprob: -5.875049591064453

Token 1230: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38996800780296326
    2. ')' → logprob: -1.1399680376052856
    3. '   ' → logprob: -6.514967918395996
    4. ',)' → logprob: -7.389967918395996
    5. '),' → logprob: -8.014967918395996
    6. '[' → logprob: -8.514967918395996
    7. '...' → logprob: -9.889967918395996
    8. ')...' → logprob: -10.014967918395996
    9. ',
' → logprob: -10.139967918395996
    10. '))' → logprob: -10.139967918395996

Token 1231: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5977659225463867
    2. '=' → logprob: -1.3477659225463867
    3. 'q' → logprob: -1.9727659225463867
    4. '[(' → logprob: -4.222765922546387
    5. '=[' → logprob: -4.347765922546387
    6. '([(' → logprob: -4.722765922546387
    7. '=[]' → logprob: -5.597765922546387
    8. ',' → logprob: -6.097765922546387
    9. '=[]
' → logprob: -6.097765922546387
    10. '   ' → logprob: -6.847765922546387

Token 1232: ' #' (ID: 1069)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.4226424992084503
    2. ' =' → logprob: -1.297642469406128
    3. '=' → logprob: -3.297642469406128
    4. '[(' → logprob: -4.172642707824707
    5. ' q' → logprob: -4.797642707824707
    6. ',' → logprob: -5.922642707824707
    7. '   ' → logprob: -6.047642707824707
    8. '[' → logprob: -6.672642707824707
    9. ' [(' → logprob: -7.172642707824707
    10. '([(' → logprob: -7.172642707824707

Token 1233: ' On' (ID: 2160)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.009234863333404064
    2. ' q' → logprob: -5.13423490524292
    3. ' =' → logprob: -6.50923490524292
    4. '=' → logprob: -6.75923490524292
    5. '   ' → logprob: -8.134234428405762
    6. '[(' → logprob: -9.009234428405762
    7. ',' → logprob: -9.259234428405762
    8. '
' → logprob: -10.509234428405762
    9. '=[' → logprob: -11.009234428405762
    10. '#' → logprob: -11.134234428405762

Token 1234: ' part' (ID: 997)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6979296803474426
    2. ' =' → logprob: -0.6979296803474426
    3. 'q' → logprob: -6.322929859161377
    4. '.append' → logprob: -7.072929859161377
    5. '=
' → logprob: -8.072929382324219
    6. 'append' → logprob: -8.197929382324219
    7. 'import' → logprob: -8.322929382324219
    8. '=[' → logprob: -8.572929382324219
    9. '=[]' → logprob: -8.697929382324219
    10. ')' → logprob: -9.322929382324219

Token 1235: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6680213212966919
    2. '   ' → logprob: -1.168021321296692
    3. '=' → logprob: -2.2930212020874023
    4. ' de' → logprob: -3.6680212020874023
    5. 'from' → logprob: -4.043021202087402
    6. ',' → logprob: -5.043021202087402
    7. 'de' → logprob: -5.293021202087402
    8. ' des' → logprob: -5.668021202087402
    9. '    ' → logprob: -5.668021202087402
    10. ' from' → logprob: -5.918021202087402

Token 1236: ' (' (ID: 350)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0004834617720916867
    2. '[' → logprob: -7.875483512878418
    3. ' [(' → logprob: -9.625483512878418
    4. 'q' → logprob: -10.625483512878418
    5. '[-' → logprob: -12.500483512878418
    6. '(' → logprob: -12.875483512878418
    7. '[q' → logprob: -13.000483512878418
    8. '0' → logprob: -13.625483512878418
    9. '[((' → logprob: -13.625483512878418
    10. '[
' → logprob: -14.750483512878418

Token 1237: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11532320827245712
    2. '(' → logprob: -2.240323305130005
    3. '-' → logprob: -6.740323066711426
    4. '(-' → logprob: -7.740323066711426
    5. '(n' → logprob: -8.365323066711426
    6. 'n' → logprob: -8.615323066711426
    7. '1' → logprob: -8.615323066711426
    8. ' ' → logprob: -9.240323066711426
    9. ' (' → logprob: -9.865323066711426
    10. 'inf' → logprob: -9.990323066711426

Token 1238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013524403038900346
    2. '0' → logprob: -9.37513542175293
    3. ',
' → logprob: -10.25013542175293
    4. ' ,' → logprob: -11.37513542175293
    5. ')' → logprob: -14.37513542175293
    6. '<|end|>' → logprob: -14.50013542175293
    7. '```' → logprob: -14.75013542175293
    8. ',

' → logprob: -14.87513542175293
    9. ',
' → logprob: -15.75013542175293
    10. '
' → logprob: -16.00013542175293

Token 1239: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005805905908346176
    2. 'inf' → logprob: -5.255805969238281
    3. ' ' → logprob: -7.880805969238281
    4. '(' → logprob: -8.880805969238281
    5. 'mod' → logprob: -11.255805969238281
    6. '1' → logprob: -11.630805969238281
    7. '-' → logprob: -11.755805969238281
    8. ' inf' → logprob: -12.255805969238281
    9. '-inf' → logprob: -12.630805969238281
    10. ')' → logprob: -12.630805969238281

Token 1240: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00036502102739177644
    2. '),' → logprob: -8.125365257263184
    3. ')
' → logprob: -9.875365257263184
    4. ',' → logprob: -11.625365257263184
    5. '   ' → logprob: -13.125365257263184
    6. ' )' → logprob: -13.625365257263184
    7. '))' → logprob: -14.000365257263184
    8. ')`' → logprob: -14.125365257263184
    9. ')...' → logprob: -14.250365257263184
    10. ').' → logprob: -14.375365257263184

Token 1241: ' indiqu' (ID: 100773)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.0858820676803589
    2. ')' → logprob: -1.9608820676803589
    3. ' [(' → logprob: -2.0858821868896484
    4. ' (' → logprob: -2.3358821868896484
    5. ']' → logprob: -2.4608821868896484
    6. '   ' → logprob: -2.7108821868896484
    7. ' q' → logprob: -2.8358821868896484
    8. 'q' → logprob: -3.4608821868896484
    9. '(' → logprob: -3.7108821868896484
    10. '(q' → logprob: -5.085882186889648

Token 1242: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.5603954195976257
    2. ' que' → logprob: -1.9353954792022705
    3. '(' → logprob: -2.9353954792022705
    4. '   ' → logprob: -3.1853954792022705
    5. 'e' → logprob: -3.1853954792022705
    6. ' (' → logprob: -3.3103954792022705
    7. 'é' → logprob: -3.6853954792022705
    8. 'ent' → logprob: -4.310395240783691
    9. '#' → logprob: -4.435395240783691
    10. 'que' → logprob: -4.685395240783691

Token 1243: ' qu' (ID: 474)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04573686793446541
    2. ' (' → logprob: -3.170736789703369
    3. '1' → logprob: -5.920736789703369
    4. ' ' → logprob: -10.420737266540527
    5. '0' → logprob: -11.920737266540527
    6. ')' → logprob: -12.170737266540527
    7. '    ' → logprob: -13.420737266540527
    8. ',' → logprob: -13.920737266540527
    9. '('' → logprob: -14.045737266540527
    10. '(
' → logprob: -14.295737266540527

Token 1244: ''on' (ID: 25812)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11730432510375977
    2. ' ' → logprob: -2.7423043251037598
    3. ' (' → logprob: -3.8673043251037598
    4. '(' → logprob: -3.8673043251037598
    5. ',' → logprob: -6.49230432510376
    6. '0' → logprob: -6.74230432510376
    7. ')' → logprob: -7.11730432510376
    8. ' (
' → logprob: -8.742303848266602
    9. '(
' → logprob: -8.992303848266602
    10. ' )' → logprob: -9.117303848266602

Token 1245: ' est' (ID: 893)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.4572465419769287
    2. 'position' → logprob: -1.5822465419769287
    3. ' position' → logprob: -2.2072465419769287
    4. ')' → logprob: -2.3322465419769287
    5. ' part' → logprob: -3.0822465419769287
    6. ' )' → logprob: -3.4572465419769287
    7. 'part' → logprob: -3.5822465419769287
    8. 'dé' → logprob: -3.5822465419769287
    9. ' starting' → logprob: -3.9572465419769287
    10. 'à' → logprob: -4.207246780395508

Token 1246: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6563917398452759
    2. ' à' → logprob: -1.7813917398452759
    3. ' au' → logprob: -2.0313916206359863
    4. 'à' → logprob: -2.6563916206359863
    5. ' (' → logprob: -2.6563916206359863
    6. 'au' → logprob: -3.9063916206359863
    7. ',' → logprob: -4.656391620635986
    8. ')' → logprob: -5.281391620635986
    9. ' ' → logprob: -5.906391620635986
    10. ' déjà' → logprob: -7.406391620635986

Token 1247: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.052660178393125534
    2. '(' → logprob: -3.4276602268218994
    3. ' ' → logprob: -4.17765998840332
    4. ' (' → logprob: -5.67765998840332
    5. 'position' → logprob: -10.42765998840332
    6. '0' → logprob: -10.55265998840332
    7. ' position' → logprob: -12.67765998840332
    8. ')' → logprob: -12.80265998840332
    9. '
' → logprob: -12.92765998840332
    10. '(
' → logprob: -12.92765998840332

Token 1248: ' position' (ID: 4010)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.03739595413208
    2. 'position' → logprob: -1.03739595413208
    3. 'prem' → logprob: -2.03739595413208
    4. '1' → logprob: -2.53739595413208
    5. 'dé' → logprob: -3.66239595413208
    6. 'start' → logprob: -4.03739595413208
    7. ' (' → logprob: -4.28739595413208
    8. 'point' → logprob: -5.28739595413208
    9. 'pos' → logprob: -5.66239595413208
    10. ' position' → logprob: -5.78739595413208

Token 1249: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.577747106552124
    2. '1' → logprob: -0.827747106552124
    3. ',' → logprob: -6.952747344970703
    4. ' ,' → logprob: -7.452747344970703
    5. '(' → logprob: -9.827747344970703
    6. ' (' → logprob: -9.952747344970703
    7. ' 
' → logprob: -10.077747344970703
    8. ',
' → logprob: -10.327747344970703
    9. ' =' → logprob: -10.327747344970703
    10. ' ,
' → logprob: -10.327747344970703

Token 1250: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0438322015106678
    2. ' ' → logprob: -3.168832302093506
    3. '(' → logprob: -7.668832302093506
    4. ',' → logprob: -9.043831825256348
    5. '0' → logprob: -9.043831825256348
    6. ' (' → logprob: -9.543831825256348
    7. ' ,' → logprob: -11.168831825256348
    8. ' 
' → logprob: -11.668831825256348
    9. '```' → logprob: -11.918831825256348
    10. ',
' → logprob: -12.043831825256348

Token 1251: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04517292231321335
    2. ')' → logprob: -3.295172929763794
    3. '   ' → logprob: -5.045172691345215
    4. ',
' → logprob: -8.420172691345215
    5. ',)' → logprob: -9.420172691345215
    6. '),' → logprob: -9.795172691345215
    7. ' ,' → logprob: -10.045172691345215
    8. ')
' → logprob: -10.170172691345215
    9. '```' → logprob: -10.420172691345215
    10. ' )' → logprob: -10.420172691345215

Token 1252: ' un' (ID: 537)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0043748170137405396
    2. ' ' → logprob: -5.879374980926514
    3. 'cost' → logprob: -6.754374980926514
    4. 'co' → logprob: -8.379374504089355
    5. ' cost' → logprob: -9.754374504089355
    6. '
' → logprob: -10.754374504089355
    7. ',' → logprob: -10.879374504089355
    8. ' coût' → logprob: -11.129374504089355
    9. ' (' → logprob: -11.379374504089355
    10. '```' → logprob: -11.504374504089355

Token 1253: ' coût' (ID: 73109)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9914721250534058
    2. 'space' → logprob: -1.4914721250534058
    3. ',' → logprob: -2.3664722442626953
    4. ')' → logprob: -2.4914722442626953
    5. ' space' → logprob: -2.9914722442626953
    6. 'cost' → logprob: -3.4914722442626953
    7. 'co' → logprob: -3.4914722442626953
    8. ' ' → logprob: -3.6164722442626953
    9. ' (' → logprob: -3.9914722442626953
    10. '```' → logprob: -4.491472244262695

Token 1254: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36700692772865295
    2. ' minimal' → logprob: -2.11700701713562
    3. '=' → logprob: -2.74200701713562
    4. ',' → logprob: -2.86700701713562
    5. ' =' → logprob: -3.24200701713562
    6. 'minimal' → logprob: -4.117006778717041
    7. '<|end|>' → logprob: -6.242006778717041
    8. ' ,' → logprob: -6.742006778717041
    9. ' nul' → logprob: -6.867006778717041
    10. 'minimum' → logprob: -7.117006778717041

Token 1255: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5176973342895508
    2. '=' → logprob: -1.3926973342895508
    3. 'de' → logprob: -2.392697334289551
    4. ' de' → logprob: -3.142697334289551
    5. ' =' → logprob: -4.142697334289551
    6. ' of' → logprob: -6.017697334289551
    7. 'of' → logprob: -7.017697334289551
    8. 'minimal' → logprob: -7.767697334289551
    9. 'nul' → logprob: -7.892697334289551
    10. 'initial' → logprob: -7.892697334289551

Token 1256: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7289384603500366
    2. ',' → logprob: -1.3539384603500366
    3. ')' → logprob: -1.4789384603500366
    4. ']' → logprob: -3.853938579559326
    5. '
' → logprob: -5.728938579559326
    6. ')
' → logprob: -5.978938579559326
    7. ',
' → logprob: -6.228938579559326
    8. '.' → logprob: -7.728938579559326
    9. ' ,' → logprob: -7.978938579559326
    10. ')]' → logprob: -7.978938579559326

Token 1257: ' (' (ID: 350)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.2153729796409607
    2. '   ' → logprob: -1.7153730392456055
    3. ' q' → logprob: -4.9653730392456055
    4. '
' → logprob: -5.5903730392456055
    5. '	q' → logprob: -6.5903730392456055
    6. '[q' → logprob: -7.2153730392456055
    7. '(q' → logprob: -8.340373039245605
    8. ',q' → logprob: -8.340373039245605
    9. '    
' → logprob: -8.590373039245605
    10. ',' → logprob: -9.715373039245605

Token 1258: 'inf' (ID: 22226)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04400777816772461
    2. '   ' → logprob: -3.4190077781677246
    3. 'q' → logprob: -5.294007778167725
    4. ')
' → logprob: -5.794007778167725
    5. ' )' → logprob: -7.169007778167725
    6. '])' → logprob: -8.419008255004883
    7. ',' → logprob: -8.794008255004883
    8. ']' → logprob: -9.044008255004883
    9. ' ' → logprob: -9.169008255004883
    10. ' q' → logprob: -9.419008255004883

Token 1259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1318112313747406
    2. ',)' → logprob: -2.1318111419677734
    3. ')' → logprob: -5.506811141967773
    4. ',),' → logprob: -8.256811141967773
    5. ',
' → logprob: -8.881811141967773
    6. '+' → logprob: -9.256811141967773
    7. ',),
' → logprob: -9.756811141967773
    8. ',)
' → logprob: -9.881811141967773
    9. ' ,' → logprob: -10.256811141967773
    10. '),' → logprob: -10.381811141967773

Token 1260: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.023265281692147255
    2. '0' → logprob: -3.8982653617858887
    3. ')' → logprob: -6.148265361785889
    4. ' inf' → logprob: -8.14826488494873
    5. '10' → logprob: -8.77326488494873
    6. '-inf' → logprob: -10.39826488494873
    7. ' ' → logprob: -10.89826488494873
    8. '1' → logprob: -10.89826488494873
    9. '100' → logprob: -11.02326488494873
    10. '))' → logprob: -11.52326488494873

Token 1261: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11587042361497879
    2. '),' → logprob: -2.365870475769043
    3. ')])' → logprob: -4.740870475769043
    4. '),
' → logprob: -6.365870475769043
    5. '   ' → logprob: -6.615870475769043
    6. '])' → logprob: -6.740870475769043
    7. '),(' → logprob: -6.740870475769043
    8. '))' → logprob: -7.615870475769043
    9. ')]' → logprob: -7.740870475769043
    10. ')],' → logprob: -9.240870475769043

Token 1262: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12846891582012177
    2. ',' → logprob: -3.0034689903259277
    3. '   ' → logprob: -3.3784689903259277
    4. '])' → logprob: -4.253468990325928
    5. ',
' → logprob: -4.878468990325928
    6. ')
' → logprob: -5.253468990325928
    7. '),' → logprob: -5.503468990325928
    8. ']' → logprob: -6.253468990325928
    9. ')])' → logprob: -6.753468990325928
    10. ')]' → logprob: -6.878468990325928

Token 1263: ' un' (ID: 537)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006453877780586481
    2. ' (' → logprob: -5.506453990936279
    3. 'inf' → logprob: -7.131453990936279
    4. ',' → logprob: -7.631453990936279
    5. '(in' → logprob: -8.006453514099121
    6. 'q' → logprob: -8.881453514099121
    7. '(-' → logprob: -9.256453514099121
    8. ' ajouté' → logprob: -9.256453514099121
    9. ' ' → logprob: -9.381453514099121
    10. ')' → logprob: -9.756453514099121

Token 1264: ' "' (ID: 392)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025603238493204117
    2. 'sent' → logprob: -4.150603294372559
    3. 'q' → logprob: -5.650603294372559
    4. ' (' → logprob: -6.525603294372559
    5. 's' → logprob: -7.650603294372559
    6. 'tuple' → logprob: -7.650603294372559
    7. '(q' → logprob: -7.775603294372559
    8. 'inf' → logprob: -7.900603294372559
    9. ' sentinel' → logprob: -8.025603294372559
    10. 'placeholder' → logprob: -8.275603294372559

Token 1265: 'g' (ID: 70)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23244091868400574
    2. 'sent' → logprob: -2.232440948486328
    3. ' (' → logprob: -3.607440948486328
    4. ' sentinel' → logprob: -3.857440948486328
    5. ',' → logprob: -3.982440948486328
    6. ')' → logprob: -4.982440948486328
    7. 'dummy' → logprob: -6.232440948486328
    8. 'placeholder' → logprob: -6.232440948486328
    9. '('' → logprob: -6.482440948486328
    10. '(-' → logprob: -6.482440948486328

Token 1266: 'arde' (ID: 11236)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7593231201171875
    2. 'heap' → logprob: -2.2593231201171875
    3. '])' → logprob: -2.3843231201171875
    4. ']' → logprob: -3.0093231201171875
    5. ')' → logprob: -3.0093231201171875
    6. '(' → logprob: -3.2593231201171875
    7. 'enerated' → logprob: -3.6343231201171875
    8. ')]' → logprob: -3.8843231201171875
    9. 'enerator' → logprob: -4.0093231201171875
    10. 'ood' → logprob: -4.1343231201171875

Token 1267: '-f' (ID: 3002)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13558824360370636
    2. ',' → logprob: -2.3855881690979004
    3. '_' → logprob: -4.5105881690979
    4. ']' → logprob: -5.0105881690979
    5. '),' → logprob: -5.7605881690979
    6. ' )' → logprob: -5.7605881690979
    7. ')_' → logprob: -6.3855881690979
    8. '_tuple' → logprob: -6.8855881690979
    9. ')]' → logprob: -6.8855881690979
    10. '")' → logprob: -7.2605881690979

Token 1268: 'ou' (ID: 283)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7322863936424255
    2. 'rail' → logprob: -1.1072864532470703
    3. 'ail' → logprob: -2.6072864532470703
    4. 'alse' → logprob: -3.9822864532470703
    5. 'ant' → logprob: -4.10728645324707
    6. 'f' → logprob: -4.10728645324707
    7. 'off' → logprob: -4.60728645324707
    8. 'ile' → logprob: -4.73228645324707
    9. 'uille' → logprob: -5.35728645324707
    10. 'il' → logprob: -5.48228645324707

Token 1269: '".
' (ID: 26880)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055666692554950714
    2. ')' → logprob: -3.30566668510437
    3. '   ' → logprob: -4.930666923522949
    4. '),' → logprob: -5.930666923522949
    5. ',
' → logprob: -6.305666923522949
    6. '])' → logprob: -6.430666923522949
    7. ' ,' → logprob: -6.680666923522949
    8. ')
' → logprob: -7.180666923522949
    9. ']' → logprob: -7.430666923522949
    10. ',(' → logprob: -7.805666923522949

Token 1270: '   ' (ID: 271)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.2554892897605896
    2. '   ' → logprob: -1.5054893493652344
    3. '
' → logprob: -6.380489349365234
    4. ' q' → logprob: -7.255489349365234
    5. '    
' → logprob: -7.630489349365234
    6. '[q' → logprob: -8.880489349365234
    7. '	q' → logprob: -9.005489349365234
    8. '[
' → logprob: -9.130489349365234
    9. ',' → logprob: -9.505489349365234
    10. '[' → logprob: -10.005489349365234

Token 1271: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.00043138445471413434
    2. '   ' → logprob: -7.875431537628174
    3. ' q' → logprob: -10.125431060791016
    4. '
' → logprob: -12.000431060791016
    5. '[(' → logprob: -12.875431060791016
    6. '	q' → logprob: -13.875431060791016
    7. '[q' → logprob: -14.375431060791016
    8. '[
' → logprob: -15.500431060791016
    9. '    
' → logprob: -15.625431060791016
    10. ' ' → logprob: -15.625431060791016

Token 1272: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16033177077770233
    2. ' =' → logprob: -1.9103317260742188
    3. '=[' → logprob: -9.160331726074219
    4. ' =[' → logprob: -13.785331726074219
    5. '=[]' → logprob: -14.035331726074219
    6. '   ' → logprob: -15.285331726074219
    7. '=
' → logprob: -15.785331726074219
    8. ' ' → logprob: -16.16033172607422
    9. '=[[' → logprob: -16.53533172607422
    10. '=[
' → logprob: -16.66033172607422

Token 1273: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -4.320199877838604e-07
    2. ' [(' → logprob: -15.375
    3. 'deque' → logprob: -15.75
    4. '[((' → logprob: -16.75
    5. '[' → logprob: -17.625
    6. '[[' → logprob: -18.5
    7. '([(' → logprob: -19.125
    8. '   ' → logprob: -20.625
    9. 'collections' → logprob: -20.875
    10. '[]
' → logprob: -21.25

Token 1274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.921253225300461e-05
    2. '(' → logprob: -9.750069618225098
    3. ' ' → logprob: -11.500069618225098
    4. '0' → logprob: -15.250069618225098
    5. '   ' → logprob: -15.500069618225098
    6. 'inf' → logprob: -15.750069618225098
    7. ' (' → logprob: -16.75006866455078
    8. '  ' → logprob: -16.87506866455078
    9. '-' → logprob: -17.31256866455078
    10. '１' → logprob: -18.31256866455078

Token 1275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.717296517104842e-05
    2. ' ,' → logprob: -10.625057220458984
    3. '0' → logprob: -11.000057220458984
    4. ',
' → logprob: -11.250057220458984
    5. '<|end|>' → logprob: -14.125057220458984
    6. '
' → logprob: -14.500057220458984
    7. '‌,' → logprob: -14.875057220458984
    8. ',None' → logprob: -15.125057220458984
    9. ',\
' → logprob: -15.875057220458984
    10. '   ' → logprob: -16.000057220458984

Token 1276: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.000006675720215
    3. 'inf' → logprob: -14.750006675720215
    4. '   ' → logprob: -17.12500762939453
    5. '00' → logprob: -18.12500762939453
    6. '-' → logprob: -18.25000762939453
    7. '۰' → logprob: -18.37500762939453
    8. '000' → logprob: -18.37500762939453
    9. '  ' → logprob: -19.12500762939453
    10. '1' → logprob: -19.43750762939453

Token 1277: '),' (ID: 936)
  Prédit: '),('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.45221254229545593
    2. '),' → logprob: -1.0772125720977783
    3. ')]' → logprob: -3.9522125720977783
    4. '),
' → logprob: -6.077212333679199
    5. ')' → logprob: -6.702212333679199
    6. ',' → logprob: -7.827212333679199
    7. ' ),' → logprob: -9.9522123336792
    8. ')],' → logprob: -11.3272123336792
    9. ',(' → logprob: -11.5772123336792
    10. '),

' → logprob: -11.8272123336792

Token 1278: ' (' (ID: 350)
  Prédit: '(in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(in' → logprob: -0.0022084240335971117
    2. ' (' → logprob: -6.252208232879639
    3. '(' → logprob: -8.252208709716797
    4. ')' → logprob: -12.252208709716797
    5. 'inf' → logprob: -12.502208709716797
    6. '((' → logprob: -13.002208709716797
    7. '(i' → logprob: -13.252208709716797
    8. '(n' → logprob: -13.502208709716797
    9. ' ' → logprob: -14.127208709716797
    10. ']' → logprob: -14.127208709716797

Token 1279: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -2.9875325708417222e-05
    2. ' inf' → logprob: -10.500029563903809
    3. '-inf' → logprob: -14.500029563903809
    4. 'math' → logprob: -14.625029563903809
    5. 'float' → logprob: -14.875029563903809
    6. '1' → logprob: -15.500029563903809
    7. '10' → logprob: -15.500029563903809
    8. 'n' → logprob: -16.000030517578125
    9. 'int' → logprob: -16.375030517578125
    10. '
' → logprob: -16.625030517578125

Token 1280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0683535037969705e-05
    2. ' ,' → logprob: -12.12501049041748
    3. ',
' → logprob: -12.75001049041748
    4. ',None' → logprob: -14.25001049041748
    5. ',(' → logprob: -15.12501049041748
    6. '0' → logprob: -15.50001049041748
    7. ',)' → logprob: -15.62501049041748
    8. 'inf' → logprob: -15.75001049041748
    9. ')]' → logprob: -16.250011444091797
    10. ',int' → logprob: -16.375011444091797

Token 1281: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -6.635164754698053e-05
    2. ' inf' → logprob: -9.625066757202148
    3. '0' → logprob: -16.50006675720215
    4. '-inf' → logprob: -17.12506675720215
    5. '.inf' → logprob: -17.62506675720215
    6. 'INF' → logprob: -17.75006675720215
    7. ' ' → logprob: -17.75006675720215
    8. '1' → logprob: -17.75006675720215
    9. 'int' → logprob: -17.87506675720215
    10. '_inf' → logprob: -17.87506675720215

Token 1282: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00017290872347075492
    2. ')' → logprob: -9.12517261505127
    3. ')]
' → logprob: -10.25017261505127
    4. '),' → logprob: -10.62517261505127
    5. ' )' → logprob: -14.00017261505127
    6. ')]

' → logprob: -14.25017261505127
    7. ']' → logprob: -14.62517261505127
    8. '')]' → logprob: -14.87517261505127
    9. ')])' → logprob: -15.00017261505127
    10. ')][' → logprob: -15.12517261505127

Token 1283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10982838273048401
    2. 'while' → logprob: -2.734828472137451
    3. '
' → logprob: -3.859828472137451
    4. '    
' → logprob: -4.484828472137451
    5. '```' → logprob: -5.484828472137451
    6. 'for' → logprob: -7.234828472137451
    7. ' while' → logprob: -7.609828472137451
    8. 'i' → logprob: -8.609827995300293
    9. '	while' → logprob: -8.609827995300293
    10. 'pos' → logprob: -9.109827995300293

Token 1284: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20120446383953094
    2. 'while' → logprob: -2.076204538345337
    3. '
' → logprob: -3.201204538345337
    4. '    
' → logprob: -4.576204299926758
    5. 'for' → logprob: -5.826204299926758
    6. '```' → logprob: -6.576204299926758
    7. ' while' → logprob: -7.076204299926758
    8. 'n' → logprob: -9.326204299926758
    9. ' 
' → logprob: -9.451204299926758
    10. '\n' → logprob: -9.576204299926758

Token 1285: ' Parc' (ID: 68618)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.05713198333978653
    2. 'for' → logprob: -3.0571320056915283
    3. '   ' → logprob: -4.807131767272949
    4. '
' → logprob: -8.68213176727295
    5. '    
' → logprob: -9.55713176727295
    6. 'from' → logprob: -10.43213176727295
    7. 'res' → logprob: -11.30713176727295
    8. 'def' → logprob: -11.43213176727295
    9. '```' → logprob: -11.80713176727295
    10. 'ans' → logprob: -11.93213176727295

Token 1286: 'ours' (ID: 2327)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.28033649921417236
    2. 'ours' → logprob: -1.7803364992141724
    3. '   ' → logprob: -3.155336380004883
    4. 'or' → logprob: -5.280336380004883
    5. 'for' → logprob: -5.530336380004883
    6. 'ur' → logprob: -5.780336380004883
    7. 'r' → logprob: -6.030336380004883
    8. 'i' → logprob: -6.155336380004883
    9. 'oor' → logprob: -6.405336380004883
    10. 'u' → logprob: -6.530336380004883

Token 1287: ' chaque' (ID: 21194)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16323581337928772
    2. 'while' → logprob: -2.163235902786255
    3. ' while' → logprob: -4.663235664367676
    4. ',' → logprob: -4.913235664367676
    5. 'for' → logprob: -5.288235664367676
    6. '    ' → logprob: -5.788235664367676
    7. '_' → logprob: -6.163235664367676
    8. ' =' → logprob: -6.413235664367676
    9. ':' → logprob: -6.663235664367676
    10. '=' → logprob: -7.163235664367676

Token 1288: ' position' (ID: 4010)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06877561658620834
    2. ' l' → logprob: -3.3187756538391113
    3. '(' → logprob: -4.693775653839111
    4. 'interval' → logprob: -5.318775653839111
    5. ' (' → logprob: -5.818775653839111
    6. '(l' → logprob: -6.068775653839111
    7. '   ' → logprob: -6.318775653839111
    8. '_' → logprob: -6.693775653839111
    9. 'i' → logprob: -6.818775653839111
    10. '(
' → logprob: -7.443775653839111

Token 1289: ' "' (ID: 392)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8560949563980103
    2. 'in' → logprob: -1.3560949563980103
    3. ',' → logprob: -1.9810949563980103
    4. ' in' → logprob: -2.4810948371887207
    5. 'for' → logprob: -3.4810948371887207
    6. '
' → logprob: -3.4810948371887207
    7. '=' → logprob: -4.856094837188721
    8. 'while' → logprob: -4.856094837188721
    9. '```' → logprob: -5.731094837188721
    10. '1' → logprob: -6.356094837188721

Token 1290: 'l' (ID: 75)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9994558691978455
    2. ',' → logprob: -1.2494559288024902
    3. 'l' → logprob: -1.7494559288024902
    4. 'pos' → logprob: -2.9994559288024902
    5. 'dans' → logprob: -3.9994559288024902
    6. '_,' → logprob: -4.24945592880249
    7. '   ' → logprob: -4.24945592880249
    8. 'while' → logprob: -4.24945592880249
    9. 'in' → logprob: -4.37445592880249
    10. 'for' → logprob: -4.99945592880249

Token 1291: '"' (ID: 1)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9247097969055176
    2. '[' → logprob: -1.9247097969055176
    3. '   ' → logprob: -1.9247097969055176
    4. ')' → logprob: -2.1747097969055176
    5. ' =' → logprob: -2.5497097969055176
    6. '=' → logprob: -3.1747097969055176
    7. '):' → logprob: -4.299709796905518
    8. ' ,' → logprob: -4.674709796905518
    9. '):
' → logprob: -4.799709796905518
    10. '"' → logprob: -4.799709796905518

Token 1292: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4891429543495178
    2. '=' → logprob: -1.739142894744873
    3. 'in' → logprob: -2.114142894744873
    4. ' in' → logprob: -3.364142894744873
    5. ' =' → logprob: -4.114142894744873
    6. '   ' → logprob: -4.489142894744873
    7. ',l' → logprob: -4.864142894744873
    8. ')' → logprob: -5.239142894744873
    9. 'dans' → logprob: -5.864142894744873
    10. 'for' → logprob: -5.989142894744873

Token 1293: ' ' (ID: 220)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.002186545403674245
    2. 'range' → logprob: -6.3771867752075195
    3. ' l' → logprob: -7.7521867752075195
    4. ' range' → logprob: -10.00218677520752
    5. '   ' → logprob: -13.25218677520752
    6. '[l' → logprob: -13.25218677520752
    7. 'q' → logprob: -14.50218677520752
    8. ')' → logprob: -14.62718677520752
    9. '```' → logprob: -15.00218677520752
    10. ' ' → logprob: -15.06468677520752

Token 1294: '1' (ID: 16)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0031355321407318115
    2. 'range' → logprob: -5.878135681152344
    3. ' l' → logprob: -8.253135681152344
    4. ' range' → logprob: -10.003135681152344
    5. '   ' → logprob: -11.503135681152344
    6. ' ' → logprob: -13.378135681152344
    7. 'q' → logprob: -13.378135681152344
    8. ')' → logprob: -13.503135681152344
    9. '[l' → logprob: -13.628135681152344
    10. ',' → logprob: -14.128135681152344

Token 1295: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04301072657108307
    2. ' in' → logprob: -4.668010711669922
    3. '   ' → logprob: -4.668010711669922
    4. ',n' → logprob: -4.793010711669922
    5. 'in' → logprob: -5.043010711669922
    6. ',l' → logprob: -6.043010711669922
    7. ',
' → logprob: -6.543010711669922
    8. ')' → logprob: -7.168010711669922
    9. ' ,' → logprob: -7.168010711669922
    10. '=' → logprob: -7.793010711669922

Token 1296: 'com' (ID: 639)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6646960973739624
    2. ')' → logprob: -1.0396960973739624
    3. 'n' → logprob: -3.414696216583252
    4. 'à' → logprob: -4.039696216583252
    5. ' à' → logprob: -4.289696216583252
    6. 'm' → logprob: -4.414696216583252
    7. '   ' → logprob: -4.789696216583252
    8. '),' → logprob: -4.914696216583252
    9. ' jusqu' → logprob: -5.164696216583252
    10. '):' → logprob: -5.289696216583252

Token 1297: 'pris' (ID: 102339)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24605441093444824
    2. ',' → logprob: -2.1210544109344482
    3. ')' → logprob: -3.9960544109344482
    4. '):' → logprob: -4.496054649353027
    5. '+' → logprob: -4.621054649353027
    6. '   ' → logprob: -4.871054649353027
    7. ':
' → logprob: -5.121054649353027
    8. '':' → logprob: -5.121054649353027
    9. '  ' → logprob: -5.496054649353027
    10. 'm' → logprob: -5.496054649353027

Token 1298: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3557074964046478
    2. ',' → logprob: -1.2307075262069702
    3. 'à' → logprob: -5.73070764541626
    4. '),' → logprob: -6.35570764541626
    5. ' ,' → logprob: -7.10570764541626
    6. ' à' → logprob: -7.98070764541626
    7. ' )' → logprob: -7.98070764541626
    8. ',n' → logprob: -8.855707168579102
    9. '):
' → logprob: -9.230707168579102
    10. '   ' → logprob: -9.605707168579102

Token 1299: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24659691751003265
    2. 'for' → logprob: -2.4965968132019043
    3. '   ' → logprob: -2.7465968132019043
    4. 'to' → logprob: -3.3715968132019043
    5. 'in' → logprob: -4.496596813201904
    6. ' for' → logprob: -5.746596813201904
    7. ',n' → logprob: -5.746596813201904
    8. ' jusqu' → logprob: -5.871596813201904
    9. ' to' → logprob: -5.996596813201904
    10. ':' → logprob: -5.996596813201904

Token 1300: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003233917523175478
    2. ' n' → logprob: -5.753233909606934
    3. '(n' → logprob: -10.253233909606934
    4. '
' → logprob: -11.503233909606934
    5. '```' → logprob: -12.878233909606934
    6. '10' → logprob: -13.003233909606934
    7. '   ' → logprob: -13.378233909606934
    8. ' ' → logprob: -14.128233909606934
    9. ' (' → logprob: -14.378233909606934
    10. '1' → logprob: -14.378233909606934

Token 1301: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8415810465812683
    2. ',' → logprob: -0.8415810465812683
    3. '(' → logprob: -2.216581106185913
    4. ' +' → logprob: -4.591580867767334
    5. 'in' → logprob: -5.216580867767334
    6. '1' → logprob: -5.341580867767334
    7. ' in' → logprob: -5.966580867767334
    8. '(n' → logprob: -6.466580867767334
    9. ',n' → logprob: -7.216580867767334
    10. ' ,' → logprob: -7.341580867767334

Token 1302: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14682316780090332
    2. '1' → logprob: -2.6468231678009033
    3. 'n' → logprob: -2.8968231678009033
    4. '```' → logprob: -5.271822929382324
    5. ' +' → logprob: -5.521822929382324
    6. ')' → logprob: -8.021822929382324
    7. '
' → logprob: -8.146822929382324
    8. ' n' → logprob: -9.146822929382324
    9. '`' → logprob: -9.146822929382324
    10. '+
' → logprob: -9.271822929382324

Token 1303: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.041245512664318085
    2. ':
' → logprob: -3.666245460510254
    3. '   ' → logprob: -5.041245460510254
    4. ' :' → logprob: -6.041245460510254
    5. ',' → logprob: -6.166245460510254
    6. '):' → logprob: -6.416245460510254
    7. 'for' → logprob: -7.291245460510254
    8. ' for' → logprob: -8.041245460510254
    9. '+' → logprob: -8.291245460510254
    10. ')' → logprob: -8.416245460510254

Token 1304: 'ex' (ID: 490)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6201336979866028
    2. '):' → logprob: -1.370133638381958
    3. ',' → logprob: -2.995133638381958
    4. ')' → logprob: -2.995133638381958
    5. '1' → logprob: -2.995133638381958
    6. '):
' → logprob: -3.745133638381958
    7. 'n' → logprob: -3.870133638381958
    8. ':' → logprob: -5.370133876800537
    9. ' +' → logprob: -5.495133876800537
    10. '```' → logprob: -6.745133876800537

Token 1305: 'cl' (ID: 565)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5574081540107727
    2. '```' → logprob: -1.432408094406128
    3. '=' → logprob: -3.182408094406128
    4. '+' → logprob: -3.182408094406128
    5. ',' → logprob: -3.432408094406128
    6. '`' → logprob: -3.682408094406128
    7. ':' → logprob: -4.557408332824707
    8. '):' → logprob: -4.682408332824707
    9. '``' → logprob: -5.057408332824707
    10. '...' → logprob: -5.557408332824707

Token 1306: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0829484686255455
    2. 'us' → logprob: -2.5829484462738037
    3. ')' → logprob: -6.082948684692383
    4. '```' → logprob: -8.207948684692383
    5. '=' → logprob: -8.332948684692383
    6. 'ud' → logprob: -9.082948684692383
    7. 'ude' → logprob: -9.082948684692383
    8. '#' → logprob: -9.082948684692383
    9. '1' → logprob: -9.707948684692383
    10. '   ' → logprob: -9.707948684692383

Token 1307: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0381584167480469
    2. ',' → logprob: -1.0381584167480469
    3. '+' → logprob: -1.9131584167480469
    4. '):' → logprob: -2.538158416748047
    5. '):
' → logprob: -3.163158416748047
    6. 'n' → logprob: -4.788158416748047
    7. ',
' → logprob: -5.413158416748047
    8. ',n' → logprob: -6.038158416748047
    9. '1' → logprob: -6.663158416748047
    10. '(n' → logprob: -6.788158416748047

Token 1308: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08539815992116928
    2. ':' → logprob: -2.7103981971740723
    3. '
' → logprob: -5.460398197174072
    4. 'for' → logprob: -5.460398197174072
    5. ':
' → logprob: -5.835398197174072
    6. ' for' → logprob: -5.960398197174072
    7. ',' → logprob: -7.210398197174072
    8. '    
' → logprob: -8.585397720336914
    9. '```' → logprob: -9.335397720336914
    10. ' :' → logprob: -9.585397720336914

Token 1309: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.48630768060684204
    2. '   ' → logprob: -0.986307680606842
    3. ' for' → logprob: -4.486307621002197
    4. '
' → logprob: -7.111307621002197
    5. '```' → logprob: -10.486308097839355
    6. '    
' → logprob: -10.861308097839355
    7. '	for' → logprob: -11.611308097839355
    8. ',' → logprob: -12.361308097839355
    9. 'range' → logprob: -12.861308097839355
    10. ' 
' → logprob: -13.111308097839355

Token 1310: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.32760089635849
    2. 'x' → logprob: -1.9526009559631348
    3. 'pos' → logprob: -2.5776009559631348
    4. 'i' → logprob: -3.2026009559631348
    5. 'cur' → logprob: -5.327600955963135
    6. 'p' → logprob: -5.577600955963135
    7. 'L' → logprob: -5.827600955963135
    8. '_l' → logprob: -6.327600955963135
    9. 'j' → logprob: -7.327600955963135
    10. 'k' → logprob: -7.702600955963135

Token 1311: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3567863702774048
    2. 'in' → logprob: -1.2317863702774048
    3. ',' → logprob: -4.856786251068115
    4. ')' → logprob: -8.856786727905273
    5. ',in' → logprob: -9.231786727905273
    6. ' ,' → logprob: -9.606786727905273
    7. '+' → logprob: -9.731786727905273
    8. '_in' → logprob: -10.606786727905273
    9. '   ' → logprob: -10.606786727905273
    10. ' ' → logprob: -10.856786727905273

Token 1312: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001708732801489532
    2. ' range' → logprob: -6.376708507537842
    3. '1' → logprob: -13.251708984375
    4. 'q' → logprob: -13.501708984375
    5. '   ' → logprob: -13.501708984375
    6. ' ' → logprob: -13.876708984375
    7. '(range' → logprob: -14.501708984375
    8. '	range' → logprob: -16.001708984375
    9. '  ' → logprob: -16.251708984375
    10. ' q' → logprob: -16.376708984375

Token 1313: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015270020812749863
    2. '1' → logprob: -6.501526832580566
    3. '   ' → logprob: -11.376526832580566
    4. '2' → logprob: -11.626526832580566
    5. '(
' → logprob: -12.376526832580566
    6. ' (' → logprob: -16.126527786254883
    7. ' ' → logprob: -17.376527786254883
    8. '(n' → logprob: -17.751527786254883
    9. ',' → logprob: -18.001527786254883
    10. '(l' → logprob: -18.001527786254883

Token 1314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.392824874026701e-05
    2. '2' → logprob: -10.50003433227539
    3. '   ' → logprob: -12.87503433227539
    4. 'n' → logprob: -13.25003433227539
    5. ' ' → logprob: -13.25003433227539
    6. '(' → logprob: -16.50003433227539
    7. '0' → logprob: -17.50003433227539
    8. '    ' → logprob: -18.00003433227539
    9. '```' → logprob: -18.43753433227539
    10. '  ' → logprob: -18.56253433227539

Token 1315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05525357648730278
    2. ',n' → logprob: -2.930253505706787
    3. ' ,' → logprob: -8.430253982543945
    4. '+' → logprob: -9.180253982543945
    5. '   ' → logprob: -10.430253982543945
    6. ',l' → logprob: -11.555253982543945
    7. 'n' → logprob: -12.555253982543945
    8. ',
' → logprob: -13.055253982543945
    9. '1' → logprob: -13.680253982543945
    10. ',len' → logprob: -13.805253982543945

Token 1316: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.627176768844947e-05
    2. ' n' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.50009536743164
    4. '	n' → logprob: -18.12509536743164
    5. '
' → logprob: -20.37509536743164
    6. '(n' → logprob: -20.75009536743164
    7. ')n' → logprob: -21.37509536743164
    8. ',n' → logprob: -22.50009536743164
    9. ' ' → logprob: -22.62509536743164
    10. 'm' → logprob: -22.62509536743164

Token 1317: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011550305411219597
    2. '):
' → logprob: -5.511550426483154
    3. ' +' → logprob: -5.761550426483154
    4. ',' → logprob: -5.886550426483154
    5. '):' → logprob: -7.636550426483154
    6. '+
' → logprob: -8.511549949645996
    7. ',n' → logprob: -8.636549949645996
    8. '1' → logprob: -8.761549949645996
    9. '   ' → logprob: -9.011549949645996
    10. ')' → logprob: -9.261549949645996

Token 1318: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5544633865356445
    2. '       ' → logprob: -0.9294633865356445
    3. '
' → logprob: -4.5544633865356445
    4. 'while' → logprob: -4.6794633865356445
    5. ' while' → logprob: -5.6794633865356445
    6. ':' → logprob: -6.4294633865356445
    7. '    
' → logprob: -6.5544633865356445
    8. '        
' → logprob: -7.1794633865356445
    9. '```' → logprob: -7.4294633865356445
    10. ':
' → logprob: -7.9294633865356445

Token 1319: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.10343233495950699
    2. 'c' → logprob: -3.3534324169158936
    3. 'cost' → logprob: -4.6034321784973145
    4. '#' (adapté à ' #') → logprob: -4.7284321784973145
    5. 'cur' → logprob: -4.8534321784973145
    6. 'r' → logprob: -5.1034321784973145
    7. 'min' → logprob: -5.7284321784973145
    8. '       ' → logprob: -5.9784321784973145
    9. 'l' → logprob: -5.9784321784973145
    10. '   ' → logprob: -6.2284321784973145

Token 1320: ' Tant' (ID: 169541)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03274323418736458
    2. 'c' → logprob: -4.407743453979492
    3. 'cost' → logprob: -5.407743453979492
    4. 'cur' → logprob: -5.782743453979492
    5. '#' → logprob: -6.032743453979492
    6. 'pos' → logprob: -6.282743453979492
    7. 'r' → logprob: -7.032743453979492
    8. 'cl' → logprob: -7.032743453979492
    9. 'x' → logprob: -7.032743453979492
    10. 'if' → logprob: -7.657743453979492

Token 1321: ' que' (ID: 661)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0106359720230103
    2. ' q' → logprob: -1.3856359720230103
    3. ' i' → logprob: -1.8856359720230103
    4. 'i' → logprob: -2.7606358528137207
    5. ' len' → logprob: -2.8856358528137207
    6. 'len' → logprob: -3.2606358528137207
    7. '   ' → logprob: -3.2606358528137207
    8. '       ' → logprob: -4.885635852813721
    9. ' not' → logprob: -4.885635852813721
    10. ' True' → logprob: -5.385635852813721

Token 1322: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0016229336615651846
    2. ' i' → logprob: -6.626623153686523
    3. 'l' → logprob: -8.251623153686523
    4. '   ' → logprob: -11.001623153686523
    5. '(i' → logprob: -11.251623153686523
    6. 'q' → logprob: -13.626623153686523
    7. ' l' → logprob: -13.751623153686523
    8. 'len' → logprob: -13.876623153686523
    9. ' ' → logprob: -14.001623153686523
    10. '     ' → logprob: -14.376623153686523

Token 1323: 'rc' (ID: 2366)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6166514158248901
    2. '==' → logprob: -1.7416514158248901
    3. ' <' → logprob: -1.9916514158248901
    4. '<' → logprob: -2.8666515350341797
    5. '>=' → logprob: -3.7416515350341797
    6. ' >=' → logprob: -3.8666515350341797
    7. '<len' → logprob: -3.8666515350341797
    8. 'l' → logprob: -4.61665153503418
    9. '<=' → logprob: -4.74165153503418
    10. ' <=' → logprob: -5.74165153503418

Token 1324: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003208037815056741
    2. 'i' → logprob: -8.250320434570312
    3. '[
' → logprob: -11.000320434570312
    4. '[' → logprob: -11.000320434570312
    5. ' i' → logprob: -12.125320434570312
    6. '```' → logprob: -12.250320434570312
    7. ' and' → logprob: -12.375320434570312
    8. 'and' → logprob: -12.625320434570312
    9. '[q' → logprob: -13.000320434570312
    10. '[j' → logprob: -13.625320434570312

Token 1325: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.22782835364341736
    2. '[' → logprob: -1.6028283834457397
    3. ']' → logprob: -7.102828502655029
    4. 'and' → logprob: -7.602828502655029
    5. ' and' → logprob: -8.227828025817871
    6. ' ][' → logprob: -8.227828025817871
    7. '```' → logprob: -8.977828025817871
    8. '   ' → logprob: -9.602828025817871
    9. '=' → logprob: -10.102828025817871
    10. '
' → logprob: -10.102828025817871

Token 1326: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.125001907348633
    3. '
' → logprob: -15.125001907348633
    4. '#' → logprob: -15.375001907348633
    5. '[' → logprob: -15.500001907348633
    6. '```' → logprob: -15.875001907348633
    7. '   ' → logprob: -16.125001907348633
    8. '][' → logprob: -17.500001907348633
    9. ':' → logprob: -17.625001907348633
    10. '(' → logprob: -17.625001907348633

Token 1327: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -1.2345011234283447
    2. '==' → logprob: -1.3595011234283447
    3. ']' → logprob: -1.4845011234283447
    4. '<=' → logprob: -1.8595011234283447
    5. '[' → logprob: -3.6095011234283447
    6. ']<=' → logprob: -3.6095011234283447
    7. ' ==' → logprob: -4.609500885009766
    8. ' <=' → logprob: -5.859500885009766
    9. '][' → logprob: -6.484500885009766
    10. '```' → logprob: -6.984500885009766

Token 1328: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.33155184984207153
    2. '==' → logprob: -1.3315517902374268
    3. ' ==' → logprob: -4.706552028656006
    4. ' <=' → logprob: -4.706552028656006
    5. '[' → logprob: -10.831551551818848
    6. '```' → logprob: -11.331551551818848
    7. '=' → logprob: -12.081551551818848
    8. ']<=' → logprob: -12.581551551818848
    9. ']==' → logprob: -12.831551551818848
    10. ')<=' → logprob: -12.831551551818848

Token 1329: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0025839817244559526
    2. '=' → logprob: -6.127583980560303
    3. '=l' → logprob: -8.627584457397461
    4. ' l' → logprob: -8.752584457397461
    5. 'n' → logprob: -10.127584457397461
    6. 'inf' → logprob: -11.502584457397461
    7. '=n' → logprob: -12.127584457397461
    8. '	l' → logprob: -13.377584457397461
    9. ' =' → logprob: -14.002584457397461
    10. '=
' → logprob: -14.002584457397461

Token 1330: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15001273155212402
    2. ' and' → logprob: -2.150012731552124
    3. 'and' → logprob: -4.275012969970703
    4. ':
' → logprob: -4.775012969970703
    5. ',' → logprob: -9.275012969970703
    6. ' or' → logprob: -9.525012969970703
    7. '       ' → logprob: -9.775012969970703
    8. ' :' → logprob: -9.775012969970703
    9. '=' → logprob: -10.025012969970703
    10. ')' → logprob: -10.150012969970703

Token 1331: ' on' (ID: 402)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.013109991326928139
    2. '       ' → logprob: -5.263110160827637
    3. ' i' → logprob: -6.013110160827637
    4. '   ' → logprob: -6.138110160827637
    5. '           ' → logprob: -6.263110160827637
    6. ':' → logprob: -7.263110160827637
    7. '	i' → logprob: -8.263110160827637
    8. '```' → logprob: -8.763110160827637
    9. ':
' → logprob: -9.013110160827637
    10. '
' → logprob: -10.763110160827637

Token 1332: ' saute' (ID: 146395)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.05890849977731705
    2. 'i' → logprob: -3.183908462524414
    3. ' +=' → logprob: -5.308908462524414
    4. '[i' → logprob: -5.433908462524414
    5. ' i' → logprob: -5.933908462524414
    6. ']+=' → logprob: -6.683908462524414
    7. '+' → logprob: -7.183908462524414
    8. '=' → logprob: -7.308908462524414
    9. '=i' → logprob: -8.433908462524414
    10. ':' → logprob: -8.433908462524414

Token 1333: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4618068337440491
    2. ':' → logprob: -1.4618067741394043
    3. '   ' → logprob: -3.3368067741394043
    4. ':
' → logprob: -3.7118067741394043
    5. ' i' → logprob: -4.086806774139404
    6. '       ' → logprob: -4.336806774139404
    7. '(i' → logprob: -4.586806774139404
    8. '\n' → logprob: -4.711806774139404
    9. '[i' → logprob: -5.461806774139404
    10. ' :' → logprob: -5.836806774139404

Token 1334: ' interv' (ID: 37413)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3345834016799927
    2. '+' → logprob: -1.4595834016799927
    3. '++' → logprob: -2.209583282470703
    4. '\n' → logprob: -2.334583282470703
    5. 'l' → logprob: -2.834583282470703
    6. '+
' → logprob: -3.084583282470703
    7. ' ' → logprob: -3.334583282470703
    8. ''\' → logprob: -4.209583282470703
    9. ''' → logprob: -4.459583282470703
    10. '(i' → logprob: -4.459583282470703

Token 1335: 'alles' (ID: 28825)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.022630900144577026
    2. '   ' → logprob: -5.14763069152832
    3. 'l' → logprob: -5.52263069152832
    4. '[
' → logprob: -5.77263069152832
    5. 'als' → logprob: -6.02263069152832
    6. '[' → logprob: -6.39763069152832
    7. 'i' → logprob: -6.89763069152832
    8. 'ale' → logprob: -7.02263069152832
    9. ']' → logprob: -7.14763069152832
    10. 'r' → logprob: -7.77263069152832

Token 1336: ' qui' (ID: 2780)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.887708842754364
    2. '[i' → logprob: -0.887708842754364
    3. 'i' → logprob: -2.887708902359009
    4. '       ' → logprob: -3.262708902359009
    5. ' and' → logprob: -3.637708902359009
    6. ':
' → logprob: -3.887708902359009
    7. '   ' → logprob: -4.13770866394043
    8. '.' → logprob: -6.01270866394043
    9. '[' → logprob: -6.01270866394043
    10. ' i' → logprob: -6.01270866394043

Token 1337: ' commencent' (ID: 184941)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.33554351329803467
    2. '[' → logprob: -1.8355435132980347
    3. 'i' → logprob: -2.710543632507324
    4. 'l' → logprob: -3.210543632507324
    5. ' i' → logprob: -5.335543632507324
    6. ' l' → logprob: -5.460543632507324
    7. '[l' → logprob: -5.960543632507324
    8. '<=' → logprob: -6.335543632507324
    9. '   ' → logprob: -6.585543632507324
    10. '       ' → logprob: -7.585543632507324

Token 1338: ' avant' (ID: 13339)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.047886259853839874
    2. '+=' → logprob: -4.547886371612549
    3. ')' → logprob: -4.797886371612549
    4. '=' → logprob: -5.297886371612549
    5. '==' → logprob: -5.422886371612549
    6. '[i' → logprob: -5.672886371612549
    7. '+' → logprob: -6.172886371612549
    8. '>' → logprob: -6.297886371612549
    9. ':
' → logprob: -6.297886371612549
    10. ' +=' → logprob: -6.672886371612549

Token 1339: ' "' (ID: 392)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.014881473034620285
    2. ' l' → logprob: -4.389881610870361
    3. 'i' → logprob: -7.264881610870361
    4. '```' → logprob: -7.639881610870361
    5. '=' → logprob: -8.639881134033203
    6. '   ' → logprob: -8.764881134033203
    7. '`' → logprob: -8.889881134033203
    8. ')' → logprob: -8.889881134033203
    9. ' =' → logprob: -9.264881134033203
    10. '       ' → logprob: -9.389881134033203

Token 1340: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.016049383208155632
    2. ' l' → logprob: -4.141049385070801
    3. '   ' → logprob: -12.0160493850708
    4. '```' → logprob: -12.7660493850708
    5. ' ' → logprob: -13.1410493850708
    6. '	l' → logprob: -13.6410493850708
    7. '       ' → logprob: -14.2660493850708
    8. '    ' → logprob: -14.3910493850708
    9. ' ' → logprob: -15.1410493850708
    10. '_l' → logprob: -15.2660493850708

Token 1341: '"
' (ID: 1092)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08301210403442383
    2. ':
' → logprob: -3.208012104034424
    3. '):' → logprob: -3.958012104034424
    4. '       ' → logprob: -4.208012104034424
    5. ')' → logprob: -6.958012104034424
    6. '):
' → logprob: -6.958012104034424
    7. ']:' → logprob: -6.958012104034424
    8. ' or' → logprob: -7.208012104034424
    9. ' and' → logprob: -8.208011627197266
    10. '           ' → logprob: -8.333011627197266

Token 1342: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.557770311832428
    2. ':' → logprob: -1.5577702522277832
    3. ':
' → logprob: -2.057770252227783
    4. '           ' → logprob: -3.057770252227783
    5. '```' → logprob: -4.057770252227783
    6. '   ' → logprob: -5.182770252227783
    7. ' and' → logprob: -5.432770252227783
    8. ',' → logprob: -5.682770252227783
    9. '\n' → logprob: -5.682770252227783
    10. 'i' → logprob: -6.932770252227783

Token 1343: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.6808058023452759
    2. 'i' → logprob: -1.1808058023452759
    3. '       ' → logprob: -1.8058058023452759
    4. ' while' → logprob: -4.930805683135986
    5. 'if' → logprob: -5.180805683135986
    6. '   ' → logprob: -5.430805683135986
    7. '           ' → logprob: -6.055805683135986
    8. ' i' → logprob: -6.305805683135986
    9. '```' → logprob: -7.930805683135986
    10. 'l' → logprob: -8.930806159973145

Token 1344: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.004995009396225214
    2. 'i' → logprob: -5.379994869232178
    3. ' l' → logprob: -8.004995346069336
    4. '	l' → logprob: -10.879995346069336
    5. ' i' → logprob: -11.379995346069336
    6. '(l' → logprob: -12.129995346069336
    7. '   ' → logprob: -13.004995346069336
    8. '(i' → logprob: -13.629995346069336
    9. ' ' → logprob: -14.504995346069336
    10. '  ' → logprob: -15.379995346069336

Token 1345: 'rc' (ID: 2366)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03474576398730278
    2. 'i' → logprob: -3.909745693206787
    3. '<i' → logprob: -4.784745693206787
    4. '[' → logprob: -6.784745693206787
    5. '<' → logprob: -6.909745693206787
    6. ' <' → logprob: -7.284745693206787
    7. 'l' → logprob: -7.284745693206787
    8. '[l' → logprob: -7.534745693206787
    9. '```' → logprob: -8.159746170043945
    10. '<len' → logprob: -8.284746170043945

Token 1346: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.774276774493046e-05
    2. 'i' → logprob: -11.625038146972656
    3. '][' → logprob: -12.250038146972656
    4. '```' → logprob: -12.250038146972656
    5. '[l' → logprob: -12.375038146972656
    6. '[++' → logprob: -12.625038146972656
    7. '[j' → logprob: -12.750038146972656
    8. '   ' → logprob: -13.250038146972656
    9. '[s' → logprob: -13.750038146972656
    10. '[' → logprob: -13.875038146972656

Token 1347: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3492814004421234
    2. '][' → logprob: -1.2242814302444458
    3. ')[' → logprob: -8.474281311035156
    4. '0' → logprob: -8.849281311035156
    5. '>[' → logprob: -9.349281311035156
    6. ''][' → logprob: -9.849281311035156
    7. '=' → logprob: -10.349281311035156
    8. '"][' → logprob: -10.349281311035156
    9. '[i' → logprob: -10.349281311035156
    10. '()][' → logprob: -10.474281311035156

Token 1348: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.440506407059729e-05
    2. ' ' → logprob: -10.37503433227539
    3. '[' → logprob: -13.50003433227539
    4. '   ' → logprob: -14.87503433227539
    5. '۰' → logprob: -15.50003433227539
    6. '][' → logprob: -15.62503433227539
    7. '1' → logprob: -15.81253433227539
    8. '
' → logprob: -15.87503433227539
    9. '#' → logprob: -16.25003433227539
    10. '(' → logprob: -16.56253433227539

Token 1349: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0393187589943409
    2. ' <' → logprob: -3.289318799972534
    3. '[' → logprob: -7.539318561553955
    4. ')<' → logprob: -8.039319038391113
    5. ')' → logprob: -8.539319038391113
    6. '<i' → logprob: -10.039319038391113
    7. '()<' → logprob: -10.539319038391113
    8. ']<' → logprob: -10.914319038391113
    9. '<
' → logprob: -11.164319038391113
    10. '<int' → logprob: -11.164319038391113

Token 1350: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.25879353284835815
    2. ' <' → logprob: -1.508793592453003
    3. '<i' → logprob: -5.258793354034424
    4. '<len' → logprob: -8.258793830871582
    5. '<p' → logprob: -8.883793830871582
    6. '<int' → logprob: -9.258793830871582
    7. '<s' → logprob: -9.383793830871582
    8. '[' → logprob: -9.383793830871582
    9. '<n' → logprob: -9.383793830871582
    10. '<ll' → logprob: -9.508793830871582

Token 1351: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.001170460251159966
    2. ' l' → logprob: -6.751170635223389
    3. '	l' → logprob: -15.12617015838623
    4. '   ' → logprob: -18.251171112060547
    5. '```' → logprob: -18.751171112060547
    6. ' ' → logprob: -18.876171112060547
    7. ''l' → logprob: -19.751171112060547
    8. ' ' → logprob: -20.251171112060547
    9. '­l' → logprob: -20.751171112060547
    10. '`' → logprob: -20.751171112060547

Token 1352: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.464529424905777
    2. ':' → logprob: -1.8395293951034546
    3. ' and' → logprob: -2.339529514312744
    4. '       ' → logprob: -2.964529514312744
    5. 'i' → logprob: -3.339529514312744
    6. 'and' → logprob: -4.214529514312744
    7. '   ' → logprob: -5.089529514312744
    8. '           ' → logprob: -5.714529514312744
    9. '):
' → logprob: -6.464529514312744
    10. ':i' → logprob: -6.839529514312744

Token 1353: '           ' (ID: 352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05121433362364769
    2. '       ' → logprob: -3.6762142181396484
    3. '           ' → logprob: -4.051214218139648
    4. ' i' → logprob: -5.926214218139648
    5. '   ' → logprob: -6.051214218139648
    6. '```' → logprob: -6.926214218139648
    7. '	i' → logprob: -7.051214218139648
    8. ',i' → logprob: -9.801214218139648
    9. '[i' → logprob: -10.051214218139648
    10. '	       ' → logprob: -10.426214218139648

Token 1354: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.01709604449570179
    2. '       ' → logprob: -4.267096042633057
    3. '           ' → logprob: -6.017096042633057
    4. '   ' → logprob: -7.892096042633057
    5. ' i' → logprob: -9.767096519470215
    6. '	i' → logprob: -9.892096519470215
    7. '```' → logprob: -12.267096519470215
    8. '               ' → logprob: -13.017096519470215
    9. '	   ' → logprob: -14.642096519470215
    10. '(i' → logprob: -14.642096519470215

Token 1355: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0007414919091388583
    2. ' +=' → logprob: -7.250741481781006
    3. '   ' → logprob: -11.500741958618164
    4. ']+=' → logprob: -11.875741958618164
    5. '=' → logprob: -12.500741958618164
    6. '+' → logprob: -12.500741958618164
    7. 'i' → logprob: -12.625741958618164
    8. '```' → logprob: -12.750741958618164
    9. '=i' → logprob: -15.750741958618164
    10. '[i' → logprob: -16.250741958618164

Token 1356: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '   ' → logprob: -22.25
    4. '```' → logprob: -23.875
    5. '۱' → logprob: -24.5
    6. '１' → logprob: -24.625
    7. '+' → logprob: -24.625
    8. '
' → logprob: -25.125
    9. '  ' → logprob: -25.125
    10. ' ' → logprob: -25.5

Token 1357: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -19.0
    4. '```' → logprob: -20.125
    5. '１' → logprob: -21.1875
    6. '  ' → logprob: -21.9375
    7. '۱' → logprob: -22.1875
    8. '#' → logprob: -22.1875
    9. '+' → logprob: -22.4375
    10. '	' → logprob: -22.5

Token 1358: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1359: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024985572323203087
    2. 'while' → logprob: -5.1499857902526855
    3. '```' → logprob: -5.7749857902526855
    4. '#' → logprob: -5.7749857902526855
    5. '
' → logprob: -6.0249857902526855
    6. ' while' → logprob: -6.6499857902526855
    7. ')' → logprob: -6.7749857902526855
    8. '<|end|>' → logprob: -7.0249857902526855
    9. '        
' → logprob: -7.1499857902526855
    10. ' if' → logprob: -7.3999857902526855

Token 1360: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12384549528360367
    2. 'if' → logprob: -2.7488455772399902
    3. 'while' → logprob: -3.1238455772399902
    4. ' if' → logprob: -5.99884557723999
    5. '#' (adapté à ' #') → logprob: -6.49884557723999
    6. '
' → logprob: -6.62384557723999
    7. '```' → logprob: -6.74884557723999
    8. ' while' → logprob: -7.62384557723999
    9. '        
' → logprob: -7.74884557723999
    10. 'l' → logprob: -8.373845100402832

Token 1361: ' Pour' (ID: 13931)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.05162401497364044
    2. 'if' → logprob: -3.676624059677124
    3. '#' → logprob: -3.926624059677124
    4. 'j' → logprob: -6.676623821258545
    5. 'pos' → logprob: -7.051623821258545
    6. 'cur' → logprob: -7.301623821258545
    7. 'cost' → logprob: -7.676623821258545
    8. 'dp' → logprob: -8.051624298095703
    9. 'from' → logprob: -8.426624298095703
    10. 'l' → logprob: -8.926624298095703

Token 1362: ' chaque' (ID: 21194)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4439392387866974
    2. 'j' → logprob: -2.318939208984375
    3. 'pos' → logprob: -2.568939208984375
    4. 'r' → logprob: -2.693939208984375
    5. 'x' → logprob: -4.193939208984375
    6. 'p' → logprob: -4.318939208984375
    7. 'c' → logprob: -4.318939208984375
    8. '_' → logprob: -4.318939208984375
    9. 'while' → logprob: -4.568939208984375
    10. 'interval' → logprob: -5.193939208984375

Token 1363: ' interval' (ID: 17116)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6275982856750488
    2. 'while' → logprob: -1.2525982856750488
    3. ' while' → logprob: -2.252598285675049
    4. ' l' → logprob: -3.377598285675049
    5. 'j' → logprob: -4.002598285675049
    6. 'q' → logprob: -5.377598285675049
    7. 'pos' → logprob: -5.752598285675049
    8. ' j' → logprob: -5.877598285675049
    9. 'if' → logprob: -6.127598285675049
    10. 'i' → logprob: -6.377598285675049

Token 1364: 'le' (ID: 282)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.9093804359436035
    2. 'i' → logprob: -2.0343804359436035
    3. '   ' → logprob: -2.2843804359436035
    4. 'v' → logprob: -2.6593804359436035
    5. 'e' → logprob: -2.7843804359436035
    6. 'l' → logprob: -2.9093804359436035
    7. 'val' → logprob: -3.2843804359436035
    8. '       ' → logprob: -3.7843804359436035
    9. 'ité' → logprob: -4.2843804359436035
    10. '#' → logprob: -4.5343804359436035

Token 1365: ' qui' (ID: 2780)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5681869983673096
    2. 'if' → logprob: -1.4431869983673096
    3. '[i' → logprob: -2.5681869983673096
    4. 'while' → logprob: -3.0681869983673096
    5. 'j' → logprob: -3.4431869983673096
    6. 'i' → logprob: -4.5681867599487305
    7. ';' → logprob: -5.0681867599487305
    8. ' if' → logprob: -5.4431867599487305
    9. '[l' → logprob: -5.8181867599487305
    10. '[j' → logprob: -5.9431867599487305

Token 1366: ' commence' (ID: 44755)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.34956249594688416
    2. '[' → logprob: -2.849562406539917
    3. 'if' → logprob: -2.849562406539917
    4. ';' → logprob: -3.349562406539917
    5. '[l' → logprob: -3.599562406539917
    6. 'while' → logprob: -3.849562406539917
    7. 's' → logprob: -3.974562406539917
    8. ' l' → logprob: -4.224562644958496
    9. '[i' → logprob: -4.224562644958496
    10. ' if' → logprob: -4.724562644958496

Token 1367: ' exactement' (ID: 108701)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7606583833694458
    2. 'at' → logprob: -0.8856583833694458
    3. '[l' → logprob: -3.5106582641601562
    4. 'l' → logprob: -3.5106582641601562
    5. 'i' → logprob: -4.385658264160156
    6. 'à' → logprob: -4.510658264160156
    7. ' at' → logprob: -4.635658264160156
    8. '[j' → logprob: -5.885658264160156
    9. 'while' → logprob: -5.885658264160156
    10. '```' → logprob: -5.885658264160156

Token 1368: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.26293957233428955
    2. ' à' → logprob: -2.012939453125
    3. '==' → logprob: -3.137939453125
    4. 'at' → logprob: -3.387939453125
    5. 'l' → logprob: -5.262939453125
    6. ' ==' → logprob: -5.512939453125
    7. ' at' → logprob: -6.012939453125
    8. 'au' → logprob: -6.137939453125
    9. 'exact' → logprob: -6.637939453125
    10. ' au' → logprob: -6.887939453125

Token 1369: ' "' (ID: 392)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.6060808522743173e-05
    2. ' l' → logprob: -10.625025749206543
    3. '```' → logprob: -13.500025749206543
    4. '[l' → logprob: -16.25002670288086
    5. 'i' → logprob: -17.00002670288086
    6. 'position' → logprob: -17.00002670288086
    7. '`' → logprob: -17.00002670288086
    8. '	l' → logprob: -17.25002670288086
    9. 'q' → logprob: -18.12502670288086
    10. '
' → logprob: -18.12502670288086

Token 1370: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -7.73183855926618e-05
    2. ' l' → logprob: -9.500077247619629
    3. '```' → logprob: -13.500077247619629
    4. '`' → logprob: -14.500077247619629
    5. '[l' → logprob: -15.875077247619629
    6. '   ' → logprob: -15.875077247619629
    7. 'i' → logprob: -16.375078201293945
    8. '	l' → logprob: -16.750078201293945
    9. '_l' → logprob: -17.375078201293945
    10. '``' → logprob: -17.500078201293945

Token 1371: '"
' (ID: 1092)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.770161509513855
    2. ':
' → logprob: -1.020161509513855
    3. ':' → logprob: -2.0201616287231445
    4. ',' → logprob: -3.6451616287231445
    5. ']:
' → logprob: -5.5201616287231445
    6. '):
' → logprob: -5.6451616287231445
    7. ',
' → logprob: -6.2701616287231445
    8. '           ' → logprob: -6.2701616287231445
    9. '=' → logprob: -7.0201616287231445
    10. ' :
' → logprob: -7.1451616287231445

Token 1372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008572137914597988
    2. ':' → logprob: -5.508572101593018
    3. ',' → logprob: -5.633572101593018
    4. '           ' → logprob: -8.383572578430176
    5. '        
' → logprob: -9.008572578430176
    6. ':
' → logprob: -9.383572578430176
    7. ' and' → logprob: -9.883572578430176
    8. '=' → logprob: -10.008572578430176
    9. ' =' → logprob: -10.008572578430176
    10. '   ' → logprob: -10.258572578430176

Token 1373: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0808766558766365
    2. 'j' → logprob: -2.705876588821411
    3. '       ' → logprob: -5.08087682723999
    4. ' while' → logprob: -6.08087682723999
    5. '   ' → logprob: -6.58087682723999
    6. 'for' → logprob: -7.58087682723999
    7. 'if' → logprob: -8.080876350402832
    8. 'k' → logprob: -10.080876350402832
    9. ' j' → logprob: -10.705876350402832
    10. '	while' → logprob: -10.705876350402832

Token 1374: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1277257800102234
    2. 'i' → logprob: -2.127725839614868
    3. ' l' → logprob: -7.627725601196289
    4. ' i' → logprob: -8.252725601196289
    5. '   ' → logprob: -10.752725601196289
    6. '(i' → logprob: -11.377725601196289
    7. '	l' → logprob: -11.752725601196289
    8. '(l' → logprob: -12.752725601196289
    9. ' ' → logprob: -13.252725601196289
    10. ' ' → logprob: -14.002725601196289

Token 1375: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.12774351239204407
    2. '[i' → logprob: -2.1277434825897217
    3. 'c' → logprob: -9.0027437210083
    4. 'i' → logprob: -9.0027437210083
    5. '[' → logprob: -9.2527437210083
    6. '```' → logprob: -9.6277437210083
    7. '][' → logprob: -9.7527437210083
    8. '
' → logprob: -10.0027437210083
    9. '(i' → logprob: -10.2527437210083
    10. '[
' → logprob: -10.2527437210083

Token 1376: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2961512513575144e-05
    2. '[l' → logprob: -12.250022888183594
    3. '```' → logprob: -12.375022888183594
    4. '   ' → logprob: -12.500022888183594
    5. '][' → logprob: -13.000022888183594
    6. 'i' → logprob: -13.000022888183594
    7. '[j' → logprob: -13.625022888183594
    8. ')[' → logprob: -13.750022888183594
    9. ' [' → logprob: -14.375022888183594
    10. '``' → logprob: -14.875022888183594

Token 1377: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01699068956077099
    2. '][' → logprob: -4.391990661621094
    3. '[i' → logprob: -6.016990661621094
    4. ')[' → logprob: -6.516990661621094
    5. '```' → logprob: -8.641990661621094
    6. '()[' → logprob: -8.891990661621094
    7. '==' → logprob: -10.891990661621094
    8. 'and' → logprob: -11.016990661621094
    9. ''][' → logprob: -11.141990661621094
    10. '#' → logprob: -11.141990661621094

Token 1378: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -12.125008583068848
    3. '[' → logprob: -13.375008583068848
    4. '
' → logprob: -15.000008583068848
    5. '   ' → logprob: -15.500008583068848
    6. '```' → logprob: -15.750008583068848
    7. '#' → logprob: -16.06250762939453
    8. '۰' → logprob: -16.43750762939453
    9. '...' → logprob: -16.81250762939453
    10. '==' → logprob: -17.06250762939453

Token 1379: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.8468056321144104
    2. '==' → logprob: -0.9718056321144104
    3. ']' → logprob: -2.0968055725097656
    4. ' ==' → logprob: -2.7218055725097656
    5. ')==' → logprob: -6.096805572509766
    6. ')' → logprob: -6.846805572509766
    7. '```' → logprob: -7.846805572509766
    8. '[' → logprob: -8.346805572509766
    9. '[i' → logprob: -9.971805572509766
    10. '==
' → logprob: -10.096805572509766

Token 1380: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.024846160784363747
    2. ' ==' → logprob: -4.274846076965332
    3. ']==' → logprob: -4.774846076965332
    4. '```' → logprob: -7.024846076965332
    5. ')==' → logprob: -8.024846076965332
    6. '[' → logprob: -8.149846076965332
    7. '()==' → logprob: -8.149846076965332
    8. '==
' → logprob: -8.274846076965332
    9. '=' → logprob: -9.399846076965332
    10. '===' → logprob: -10.899846076965332

Token 1381: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.8206473871250637e-05
    2. ' l' → logprob: -10.500028610229492
    3. '	l' → logprob: -14.625028610229492
    4. '   ' → logprob: -16.750028610229492
    5. '```' → logprob: -17.000028610229492
    6. '`' → logprob: -18.875028610229492
    7. '­l' → logprob: -19.375028610229492
    8. ''l' → logprob: -19.875028610229492
    9. '_l' → logprob: -20.000028610229492
    10. '‌' → logprob: -20.000028610229492

Token 1382: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1620871126651764
    2. ':
' → logprob: -1.912087082862854
    3. ' and' → logprob: -6.5370869636535645
    4. '       ' → logprob: -8.787087440490723
    5. ',' → logprob: -9.912087440490723
    6. '):
' → logprob: -9.912087440490723
    7. '   ' → logprob: -10.287087440490723
    8. 'and' → logprob: -10.412087440490723
    9. '[' → logprob: -10.912087440490723
    10. '):' → logprob: -10.912087440490723

Token 1383: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7940869927406311
    2. '       ' → logprob: -1.2940869331359863
    3. 'c' → logprob: -2.0440869331359863
    4. 'if' → logprob: -3.2940869331359863
    5. 'q' → logprob: -3.9190869331359863
    6. 'r' → logprob: -3.9190869331359863
    7. 'cost' → logprob: -4.044086933135986
    8. 'l' → logprob: -4.544086933135986
    9. 'j' → logprob: -4.919086933135986
    10. ' if' → logprob: -5.169086933135986

Token 1384: ' #' (ID: 1069)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9622112512588501
    2. 'pos' → logprob: -1.71221125125885
    3. 'l' → logprob: -2.2122111320495605
    4. 'while' → logprob: -2.8372111320495605
    5. '_,' → logprob: -2.9622111320495605
    6. 'c' → logprob: -3.0872111320495605
    7. '       ' → logprob: -3.2122111320495605
    8. 'heap' → logprob: -3.4622111320495605
    9. 'p' → logprob: -4.2122111320495605
    10. '   ' → logprob: -4.2122111320495605

Token 1385: ' On' (ID: 2160)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0194917917251587
    2. 'c' → logprob: -1.5194917917251587
    3. 'pos' → logprob: -1.6444917917251587
    4. 'while' → logprob: -2.519491672515869
    5. 'l' → logprob: -2.894491672515869
    6. 'cost' → logprob: -3.644491672515869
    7. 'p' → logprob: -4.519491672515869
    8. 'heap' → logprob: -5.144491672515869
    9. 'idx' → logprob: -5.519491672515869
    10. 'if' → logprob: -5.644491672515869

Token 1386: ' extrait' (ID: 194006)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.46890631318092346
    2. 'l' → logprob: -2.5939064025878906
    3. 'pos' → logprob: -2.9689064025878906
    4. 'c' → logprob: -3.2189064025878906
    5. 'while' → logprob: -3.3439064025878906
    6. '_,' → logprob: -3.3439064025878906
    7. '#' → logprob: -3.4689064025878906
    8. 'import' → logprob: -3.9689064025878906
    9. '   ' → logprob: -4.343906402587891
    10. '=' → logprob: -4.718906402587891

Token 1387: ' "' (ID: 392)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.2799111306667328
    2. 'r' → logprob: -1.6549111604690552
    3. 'l' → logprob: -3.1549110412597656
    4. '   ' → logprob: -4.654911041259766
    5. '__,' → logprob: -8.404911041259766
    6. '(_,' → logprob: -8.404911041259766
    7. '_r' → logprob: -9.529911041259766
    8. ' _,' → logprob: -9.904911041259766
    9. '_l' → logprob: -9.904911041259766
    10. '       ' → logprob: -9.904911041259766

Token 1388: 'r' (ID: 81)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.6026560664176941
    2. 'l' → logprob: -0.9776560664176941
    3. 'r' → logprob: -2.602656126022339
    4. '(_,' → logprob: -6.72765588760376
    5. '_' → logprob: -7.85265588760376
    6. '_l' → logprob: -8.352656364440918
    7. '__,' → logprob: -8.477656364440918
    8. '(l' → logprob: -9.477656364440918
    9. '```' → logprob: -9.977656364440918
    10. ' _,' → logprob: -10.227656364440918

Token 1389: '"' (ID: 1)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01594497822225094
    2. ' =' → logprob: -5.015944957733154
    3. '",' → logprob: -5.015944957733154
    4. '=' → logprob: -6.765944957733154
    5. ',"' → logprob: -7.765944957733154
    6. ' ,' → logprob: -8.140945434570312
    7. '"' → logprob: -8.765945434570312
    8. ',l' → logprob: -9.015945434570312
    9. ',c' → logprob: -9.390945434570312
    10. '           ' → logprob: -9.640945434570312

Token 1390: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5956950783729553
    2. '=' → logprob: -0.8456950783729553
    3. ' =' → logprob: -3.9706950187683105
    4. ',r' → logprob: -7.8456950187683105
    5. '=r' → logprob: -9.345695495605469
    6. ',l' → logprob: -9.595695495605469
    7. '           ' → logprob: -10.345695495605469
    8. 'r' → logprob: -11.345695495605469
    9. '=
' → logprob: -11.595695495605469
    10. ' ,' → logprob: -11.595695495605469

Token 1391: ' "' (ID: 392)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0006607305258512497
    2. ' c' → logprob: -7.5006608963012695
    3. 'l' → logprob: -9.62566089630127
    4. 'cost' → logprob: -10.25066089630127
    5. '
' → logprob: -13.50066089630127
    6. '   ' → logprob: -14.25066089630127
    7. 'lc' → logprob: -14.25066089630127
    8. 'q' → logprob: -14.37566089630127
    9. '	c' → logprob: -14.75066089630127
    10. '```' → logprob: -15.12566089630127

Token 1392: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.547789674485102e-05
    2. ' c' → logprob: -10.375035285949707
    3. 'cost' → logprob: -13.375035285949707
    4. '
' → logprob: -14.000035285949707
    5. '   ' → logprob: -14.250035285949707
    6. '```' → logprob: -14.500035285949707
    7. '       ' → logprob: -15.750035285949707
    8. '           ' → logprob: -15.750035285949707
    9. '	c' → logprob: -16.375036239624023
    10. ')c' → logprob: -16.500036239624023

Token 1393: '"' (ID: 1)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26592060923576355
    2. '=' → logprob: -1.515920639038086
    3. ',' → logprob: -4.890920639038086
    4. ')' → logprob: -6.140920639038086
    5. '"' → logprob: -6.890920639038086
    6. '",' → logprob: -7.140920639038086
    7. '           ' → logprob: -7.515920639038086
    8. ']' → logprob: -7.890920639038086
    9. '=i' → logprob: -8.015920639038086
    10. '```' → logprob: -8.390920639038086

Token 1394: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7683190107345581
    2. ' =' → logprob: -1.018319010734558
    3. '           ' → logprob: -1.893319010734558
    4. '=' → logprob: -4.268319129943848
    5. 'r' → logprob: -5.143319129943848
    6. ',r' → logprob: -6.393319129943848
    7. '               ' → logprob: -7.143319129943848
    8. '   ' → logprob: -7.643319129943848
    9. '=r' → logprob: -7.768319129943848
    10. ';' → logprob: -8.518319129943848

Token 1395: ' cet' (ID: 19505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0015079588629305363
    2. ' l' → logprob: -6.501507759094238
    3. '   ' → logprob: -12.501507759094238
    4. '	l' → logprob: -14.876507759094238
    5. '```' → logprob: -15.001507759094238
    6. '(l' → logprob: -15.376507759094238
    7. '           ' → logprob: -15.376507759094238
    8. '       ' → logprob: -15.751507759094238
    9. '
' → logprob: -16.001508712768555
    10. '`' → logprob: -16.626508712768555

Token 1396: ' interval' (ID: 17116)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.0678076222538948
    2. 'l' → logprob: -2.942807674407959
    3. 'lc' → logprob: -4.442807674407959
    4. '```' → logprob: -7.817807674407959
    5. '[i' → logprob: -8.3178071975708
    6. 'i' → logprob: -8.6928071975708
    7. 'r' → logprob: -8.9428071975708
    8. 'c' → logprob: -10.6928071975708
    9. ']' → logprob: -10.6928071975708
    10. 'rcode' → logprob: -10.9428071975708

Token 1397: 'le' (ID: 282)
  Prédit: 'aire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aire' → logprob: -1.616165280342102
    2. '[' → logprob: -1.741165280342102
    3. 'al' → logprob: -1.991165280342102
    4. '[i' → logprob: -2.1161651611328125
    5. 'val' → logprob: -2.3661651611328125
    6. 'ale' → logprob: -2.7411651611328125
    7. 'l' → logprob: -2.7411651611328125
    8. 'er' → logprob: -3.7411651611328125
    9. '[
' → logprob: -3.8661651611328125
    10. '```' → logprob: -3.9911651611328125

Token 1398: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4560888111591339
    2. ',' → logprob: -1.2060887813568115
    3. '               ' → logprob: -3.4560887813568115
    4. ' =' → logprob: -4.706089019775391
    5. 'r' → logprob: -5.831089019775391
    6. '   ' → logprob: -6.081089019775391
    7. ')' → logprob: -6.081089019775391
    8. ':' → logprob: -6.206089019775391
    9. ';' → logprob: -6.206089019775391
    10. '```' → logprob: -6.706089019775391

Token 1399: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11000887304544449
    2. ',' → logprob: -2.610008955001831
    3. '               ' → logprob: -4.110008716583252
    4. 'r' → logprob: -5.735008716583252
    5. '```' → logprob: -5.860008716583252
    6. ' =' → logprob: -6.360008716583252
    7. '   ' → logprob: -6.485008716583252
    8. '[' → logprob: -7.610008716583252
    9. ',r' → logprob: -7.735008716583252
    10. '<|end|>' → logprob: -7.860008716583252

Token 1400: ' _,' (ID: 18042)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00018971276585943997
    2. '           ' → logprob: -9.000189781188965
    3. '_,' (adapté à ' _,') → logprob: -10.000189781188965
    4. ' r' → logprob: -11.625189781188965
    5. '       ' → logprob: -12.125189781188965
    6. '   ' → logprob: -12.875189781188965
    7. '(r' → logprob: -13.125189781188965
    8. '_r' → logprob: -14.625189781188965
    9. '               ' → logprob: -14.750189781188965
    10. '(_,' → logprob: -15.125189781188965

Token 1401: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.5928495486150496e-05
    2. ' r' → logprob: -11.125016212463379
    3. '```' → logprob: -15.125016212463379
    4. '   ' → logprob: -15.875016212463379
    5. '_,' → logprob: -15.875016212463379
    6. '_r' → logprob: -16.125015258789062
    7. '`' → logprob: -16.250015258789062
    8. '(r' → logprob: -16.375015258789062
    9. '[r' → logprob: -16.500015258789062
    10. '    
' → logprob: -16.750015258789062

Token 1402: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009603794664144516
    2. ',c' → logprob: -4.759603977203369
    3. '=' → logprob: -7.259603977203369
    4. 'c' → logprob: -8.759603500366211
    5. ' ,' → logprob: -9.134603500366211
    6. ',r' → logprob: -11.884603500366211
    7. '           ' → logprob: -13.509603500366211
    8. ',user' → logprob: -13.759603500366211
    9. '_,' → logprob: -14.009603500366211
    10. ' c' → logprob: -14.134603500366211

Token 1403: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004079112783074379
    2. ' c' → logprob: -5.504079341888428
    3. '	c' → logprob: -15.00407886505127
    4. '   ' → logprob: -15.00407886505127
    5. 'cost' → logprob: -17.254079818725586
    6. ' ' → logprob: -17.254079818725586
    7. '```' → logprob: -18.379079818725586
    8. '    ' → logprob: -18.879079818725586
    9. ')c' → logprob: -18.879079818725586
    10. ' ' → logprob: -19.004079818725586

Token 1404: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08897523581981659
    2. ' =' → logprob: -2.463975191116333
    3. '           ' → logprob: -10.463974952697754
    4. '       ' → logprob: -12.838974952697754
    5. '   ' → logprob: -13.088974952697754
    6. ',' → logprob: -14.213974952697754
    7. '=q' → logprob: -14.588974952697754
    8. '               ' → logprob: -15.463974952697754
    9. '=
' → logprob: -15.588974952697754
    10. '        ' → logprob: -15.963974952697754

Token 1405: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0019420842872932553
    2. ' l' → logprob: -6.251942157745361
    3. '   ' → logprob: -11.626941680908203
    4. '	l' → logprob: -14.126941680908203
    5. '           ' → logprob: -14.501941680908203
    6. '[l' → logprob: -14.626941680908203
    7. '*l' → logprob: -14.626941680908203
    8. '       ' → logprob: -14.751941680908203
    9. '```' → logprob: -14.751941680908203
    10. '(l' → logprob: -15.251941680908203

Token 1406: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.021792367100715637
    2. '[i' → logprob: -3.896792411804199
    3. 'i' → logprob: -7.896792411804199
    4. '_rc' → logprob: -8.1467924118042
    5. 'c' → logprob: -8.6467924118042
    6. '][' → logprob: -9.2717924118042
    7. 'r' → logprob: -9.6467924118042
    8. '[' → logprob: -9.8967924118042
    9. '```' → logprob: -10.1467924118042
    10. ']' → logprob: -10.5217924118042

Token 1407: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.91732100979425e-05
    2. 'i' → logprob: -10.375039100646973
    3. ',i' → logprob: -13.500039100646973
    4. '[' → logprob: -13.500039100646973
    5. '[j' → logprob: -13.500039100646973
    6. '```' → logprob: -13.625039100646973
    7. '][' → logprob: -14.375039100646973
    8. '[s' → logprob: -15.125039100646973
    9. '
' → logprob: -15.250039100646973
    10. '   ' → logprob: -15.375039100646973

Token 1408: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24056531488895416
    2. '           ' → logprob: -2.240565299987793
    3. ')' → logprob: -2.740565299987793
    4. ']
' → logprob: -4.240565299987793
    5. ']=' → logprob: -4.740565299987793
    6. '],' → logprob: -5.490565299987793
    7. '[i' → logprob: -5.490565299987793
    8. '       ' → logprob: -5.490565299987793
    9. '[' → logprob: -6.740565299987793
    10. '];' → logprob: -6.990565299987793

Token 1409: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07945390045642853
    2. '
' → logprob: -2.829453945159912
    3. '            
' → logprob: -4.204453945159912
    4. '
' → logprob: -6.954453945159912
    5. '       ' → logprob: -8.079453468322754
    6. ' 
' → logprob: -8.704453468322754
    7. '        
' → logprob: -8.704453468322754
    8. '    
' → logprob: -8.954453468322754
    9. '  
' → logprob: -9.454453468322754
    10. '           
' → logprob: -9.579453468322754

Token 1410: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.780971109867096
    2. '           ' → logprob: -1.7809710502624512
    3. 'while' → logprob: -1.9059710502624512
    4. 'i' (adapté à ' i') → logprob: -2.905971050262451
    5. 'pos' → logprob: -3.405971050262451
    6. 'if' → logprob: -3.530971050262451
    7. 'k' → logprob: -4.030971050262451
    8. '#' → logprob: -4.030971050262451
    9. 'idx' → logprob: -4.030971050262451
    10. 'l' → logprob: -5.030971050262451

Token 1411: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31700947880744934
    2. ' +=' → logprob: -1.317009449005127
    3. '=' → logprob: -6.192009449005127
    4. '+' → logprob: -7.317009449005127
    5. ' =' → logprob: -7.692009449005127
    6. ']+=' → logprob: -8.442009925842285
    7. ',' → logprob: -9.192009925842285
    8. '   ' → logprob: -10.317009925842285
    9. '           ' → logprob: -10.442009925842285
    10. ';' → logprob: -11.067009925842285

Token 1412: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.625009536743164
    4. '```' → logprob: -19.500009536743164
    5. '+' → logprob: -19.750009536743164
    6. '0' → logprob: -19.875009536743164
    7. ' ' → logprob: -20.250009536743164
    8. '2' → logprob: -21.125009536743164
    9. '۱' → logprob: -21.250009536743164
    10. '  ' → logprob: -21.687509536743164

Token 1413: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -18.25
    4. '   ' → logprob: -19.4375
    5. '+' → logprob: -19.6875
    6. '0' → logprob: -20.0625
    7. '2' → logprob: -20.25
    8. '１' → logprob: -20.5625
    9. '
' → logprob: -20.875
    10. '۱' → logprob: -21.0

Token 1414: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7387790679931641
    2. 'while' → logprob: -1.738779067993164
    3. '
' → logprob: -1.988779067993164
    4. '           ' → logprob: -2.113779067993164
    5. 'if' → logprob: -3.863779067993164
    6. '#' → logprob: -3.863779067993164
    7. '```' → logprob: -4.238779067993164
    8. ' while' → logprob: -4.738779067993164
    9. 'j' → logprob: -5.363779067993164
    10. '
' → logprob: -5.988779067993164

Token 1415: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.46485549211502075
    2. '       ' → logprob: -1.589855432510376
    3. 'j' → logprob: -2.964855432510376
    4. 'if' → logprob: -3.339855432510376
    5. 'pos' → logprob: -3.589855432510376
    6. '#' → logprob: -4.464855670928955
    7. '```' → logprob: -4.839855670928955
    8. '           ' → logprob: -4.964855670928955
    9. 'idx' → logprob: -5.089855670928955
    10. 'for' → logprob: -5.214855670928955

Token 1416: ' On' (ID: 2160)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7559245228767395
    2. 'pos' → logprob: -1.5059244632720947
    3. '#' → logprob: -1.8809244632720947
    4. 'import' → logprob: -3.0059244632720947
    5. 'j' → logprob: -3.1309244632720947
    6. 'from' → logprob: -3.5059244632720947
    7. 'idx' → logprob: -4.005924701690674
    8. 'if' → logprob: -5.255924701690674
    9. '       ' → logprob: -6.255924701690674
    10. 'ind' → logprob: -6.255924701690674

Token 1417: ' passe' (ID: 22210)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.650753915309906
    2. '#' → logprob: -1.5257539749145508
    3. '           ' → logprob: -2.525753974914551
    4. '=' → logprob: -2.650753974914551
    5. '
' → logprob: -3.650753974914551
    6. ' while' → logprob: -3.650753974914551
    7. '       ' → logprob: -4.400753974914551
    8. '   ' → logprob: -4.400753974914551
    9. 'j' → logprob: -5.525753974914551
    10. ' =' → logprob: -5.775753974914551

Token 1418: ' à' (ID: 1221)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1435914039611816
    2. 'to' → logprob: -2.2685914039611816
    3. '\t' → logprob: -2.3935914039611816
    4. '		' → logprob: -2.5185914039611816
    5. '<|end|>' → logprob: -2.8935914039611816
    6. '	tab' → logprob: -3.1435914039611816
    7. '#' → logprob: -3.5185914039611816
    8. '   ' → logprob: -3.5185914039611816
    9. '```' → logprob: -3.6435914039611816
    10. '
' → logprob: -3.7685914039611816

Token 1419: ' l' (ID: 305)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02301216498017311
    2. 'l' → logprob: -3.898012161254883
    3. 'i' → logprob: -6.398012161254883
    4. 'la' → logprob: -8.898012161254883
    5. 'le' → logprob: -9.023012161254883
    6. 'q' → logprob: -9.273012161254883
    7. 'the' → logprob: -9.398012161254883
    8. 'r' → logprob: -9.523012161254883
    9. 'c' → logprob: -9.898012161254883
    10. 'token' → logprob: -10.273012161254883

Token 1420: ''' (ID: 6)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4137549102306366
    2. '++' → logprob: -2.663754940032959
    3. 'token' → logprob: -2.788754940032959
    4. '```' → logprob: -2.788754940032959
    5. '+' → logprob: -3.163754940032959
    6. '[i' → logprob: -4.538754940032959
    7. ' siguiente' → logprob: -4.663754940032959
    8. 'next' → logprob: -4.788754940032959
    9. '_token' → logprob: -4.788754940032959
    10. ' suivante' → logprob: -4.913754940032959

Token 1421: 'interval' (ID: 37558)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8881657123565674
    2. 'token' → logprob: -2.1381657123565674
    3. '```' → logprob: -2.2631657123565674
    4. 'continue' → logprob: -2.3881657123565674
    5. 'ligne' → logprob: -2.5131657123565674
    6. '`' → logprob: -3.7631657123565674
    7. 'l' → logprob: -3.8881657123565674
    8. 'next' → logprob: -4.138165473937988
    9. ' suivante' → logprob: -4.388165473937988
    10. '#' → logprob: -4.638165473937988

Token 1422: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.02095978334546089
    2. 'é' → logprob: -5.395959854125977
    3. 'al' → logprob: -5.895959854125977
    4. '   ' → logprob: -6.020959854125977
    5. 'aire' → logprob: -6.395959854125977
    6. 'ère' → logprob: -6.520959854125977
    7. 'er' → logprob: -6.895959854125977
    8. '#' → logprob: -7.020959854125977
    9. 'l' → logprob: -7.395959854125977
    10. ']' → logprob: -7.770959854125977

Token 1423: ' suivant' (ID: 68705)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5455045700073242
    2. '
' → logprob: -1.7955045700073242
    3. '   ' → logprob: -2.045504570007324
    4. '```' → logprob: -3.670504570007324
    5. 'while' → logprob: -4.170504570007324
    6. '            
' → logprob: -4.920504570007324
    7. ' while' → logprob: -4.920504570007324
    8. '
' → logprob: -5.045504570007324
    9. 's' → logprob: -5.045504570007324
    10. '    
' → logprob: -5.295504570007324

Token 1424: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011214871890842915
    2. '       ' → logprob: -5.886214733123779
    3. 'while' → logprob: -6.011214733123779
    4. '```' → logprob: -6.386214733123779
    5. 'token' → logprob: -6.511214733123779
    6. '
' → logprob: -7.886214733123779
    7. 't' → logprob: -8.386215209960938
    8. 'if' → logprob: -8.386215209960938
    9. '   ' → logprob: -8.511215209960938
    10. '            
' → logprob: -8.636215209960938

Token 1425: ' la' (ID: 557)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.4093239903450012
    2. 'continue' → logprob: -1.5343239307403564
    3. 'la' → logprob: -2.9093239307403564
    4. ' continuer' → logprob: -3.9093239307403564
    5. 'l' → logprob: -4.6593241691589355
    6. 'le' → logprob: -5.1593241691589355
    7. 'trait' → logprob: -5.2843241691589355
    8. '#' → logprob: -5.4093241691589355
    9. '_' → logprob: -5.5343241691589355
    10. 'r' → logprob: -5.6593241691589355

Token 1426: ' prochaine' (ID: 78876)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.1848197728395462
    2. 'while' → logprob: -2.9348196983337402
    3. 'continu' → logprob: -3.0598196983337402
    4. '#' → logprob: -4.05981969833374
    5. 'contin' → logprob: -4.30981969833374
    6. 'suite' → logprob: -4.68481969833374
    7. 'pass' → logprob: -4.93481969833374
    8. '```' → logprob: -5.18481969833374
    9. '...' → logprob: -6.05981969833374
    10. 'next' → logprob: -6.18481969833374

Token 1427: ' it' (ID: 480)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.17875272035598755
    2. '   ' → logprob: -2.5537526607513428
    3. 'while' → logprob: -4.053752899169922
    4. '```' → logprob: -4.178752899169922
    5. 'ligne' → logprob: -4.303752899169922
    6. '
' → logprob: -4.303752899169922
    7. ' token' → logprob: -5.678752899169922
    8. '_token' → logprob: -5.803752899169922
    9. '    
' → logprob: -5.928752899169922
    10. ' ' → logprob: -6.053752899169922

Token 1428: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.02761571854352951
    2. 'ation' → logprob: -3.652615785598755
    3. 'er' → logprob: -7.027615547180176
    4. 'ration' → logprob: -8.277615547180176
    5. 'ér' → logprob: -9.902615547180176
    6. 'é' → logprob: -10.652615547180176
    7. 'éra' → logprob: -10.777615547180176
    8. 'token' → logprob: -11.527615547180176
    9. 'ère' → logprob: -11.527615547180176
    10. 'entation' → logprob: -11.777615547180176

Token 1429: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8240702748298645
    2. '           ' → logprob: -0.8240702748298645
    3. 'while' → logprob: -2.5740702152252197
    4. 'if' → logprob: -4.324070453643799
    5. 'q' → logprob: -5.324070453643799
    6. '       ' → logprob: -5.324070453643799
    7. '            
' → logprob: -5.574070453643799
    8. '   ' → logprob: -5.824070453643799
    9. '```' → logprob: -5.949070453643799
    10. '
' → logprob: -5.949070453643799

Token 1430: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1229967549443245
    2. '       ' → logprob: -2.6229968070983887
    3. '
' → logprob: -3.4979968070983887
    4. 'while' → logprob: -5.372996807098389
    5. '```' → logprob: -5.997996807098389
    6. 'pos' → logprob: -6.372996807098389
    7. 'j' → logprob: -6.622996807098389
    8. '            
' → logprob: -7.872996807098389
    9. '
' → logprob: -7.997996807098389
    10. 'idx' → logprob: -8.24799633026123

Token 1431: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6733741760253906
    2. 'while' → logprob: -1.0483741760253906
    3. 'j' → logprob: -2.6733741760253906
    4. 'pos' → logprob: -3.7983741760253906
    5. '#' (adapté à ' #') → logprob: -4.173374176025391
    6. '           ' → logprob: -4.298374176025391
    7. 'idx' → logprob: -4.673374176025391
    8. 'if' → logprob: -6.548374176025391
    9. 'k' → logprob: -6.548374176025391
    10. 'import' → logprob: -6.673374176025391

Token 1432: ' On' (ID: 2160)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7527474761009216
    2. 'pos' → logprob: -1.0027475357055664
    3. '#' → logprob: -3.0027475357055664
    4. 'idx' → logprob: -3.2527475357055664
    5. 'import' → logprob: -3.3777475357055664
    6. 'from' → logprob: -4.002747535705566
    7. 'j' → logprob: -4.752747535705566
    8. 'p' → logprob: -5.752747535705566
    9. 'ind' → logprob: -6.002747535705566
    10. 'cost' → logprob: -6.752747535705566

Token 1433: ' cherche' (ID: 52345)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4231506884098053
    2. '#' → logprob: -1.673150658607483
    3. 'pos' → logprob: -3.0481507778167725
    4. '=' → logprob: -3.5481507778167725
    5. 'j' → logprob: -4.048150539398193
    6. ' while' → logprob: -4.173150539398193
    7. 'idx' → logprob: -4.423150539398193
    8. 'import' → logprob: -4.673150539398193
    9. ' =' → logprob: -5.048150539398193
    10. ' #' → logprob: -5.298150539398193

Token 1434: ' l' (ID: 305)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.39127036929130554
    2. 'bis' → logprob: -2.391270399093628
    3. '           ' → logprob: -2.516270399093628
    4. 'idx' → logprob: -2.641270399093628
    5. 'j' → logprob: -3.391270399093628
    6. 'import' → logprob: -3.641270399093628
    7. '#' → logprob: -5.391270160675049
    8. 'index' → logprob: -6.016270160675049
    9. '       ' → logprob: -6.016270160675049
    10. 'ind' → logprob: -6.016270160675049

Token 1435: ''ind' (ID: 82245)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5656046271324158
    2. 'import' → logprob: -1.4406046867370605
    3. '_,' → logprob: -3.0656046867370605
    4. 'idx' → logprob: -3.6906046867370605
    5. ',' → logprob: -3.9406046867370605
    6. 'eft' → logprob: -4.0656046867370605
    7. 'j' → logprob: -4.1906046867370605
    8. 'r' → logprob: -4.9406046867370605
    9. '   ' → logprob: -5.0656046867370605
    10. '=' → logprob: -5.0656046867370605

Token 1436: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.13827486336231232
    2. 'ice' → logprob: -2.388274908065796
    3. 'import' → logprob: -4.513274669647217
    4. 'x' → logprob: -5.388274669647217
    5. '#' → logprob: -5.763274669647217
    6. '```' → logprob: -6.138274669647217
    7. 'ic' → logprob: -6.263274669647217
    8. '=' → logprob: -6.388274669647217
    9. 'dex' → logprob: -6.638274669647217
    10. 'ices' → logprob: -6.763274669647217

Token 1437: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25788187980651855
    2. ' =' → logprob: -2.3828818798065186
    3. 'pos' → logprob: -2.7578818798065186
    4. 'idx' → logprob: -3.2578818798065186
    5. 'in' → logprob: -4.632882118225098
    6. 'bis' → logprob: -5.007882118225098
    7. 'j' → logprob: -6.257882118225098
    8. 'r' → logprob: -6.257882118225098
    9. 'd' → logprob: -6.507882118225098
    10. 'to' → logprob: -6.632882118225098

Token 1438: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -7.584239938296378e-06
    2. ' q' → logprob: -11.875007629394531
    3. 'bis' → logprob: -14.875007629394531
    4. '[q' → logprob: -16.00000762939453
    5. 'b' → logprob: -17.50000762939453
    6. '```' → logprob: -17.75000762939453
    7. '   ' → logprob: -18.12500762939453
    8. '
' → logprob: -18.12500762939453
    9. '	q' → logprob: -18.12500762939453
    10. 'ql' → logprob: -18.25000762939453

Token 1439: ' où' (ID: 15113)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.6348817348480225
    2. 'pos' → logprob: -1.6348817348480225
    3. ' =' → logprob: -2.5098817348480225
    4. '_,' → logprob: -3.6348817348480225
    5. '=' → logprob: -3.6348817348480225
    6. 'idx' → logprob: -3.8848817348480225
    7. '_pos' → logprob: -4.009881973266602
    8. 'dans' → logprob: -4.259881973266602
    9. '_' → logprob: -4.509881973266602
    10. 'r' → logprob: -4.884881973266602

Token 1440: ' se' (ID: 458)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.21231812238693237
    2. 'pos' → logprob: -2.587318181991577
    3. 'q' → logprob: -2.712318181991577
    4. 'idx' → logprob: -3.462318181991577
    5. 'r' → logprob: -4.462317943572998
    6. 'b' → logprob: -6.337317943572998
    7. 'position' → logprob: -7.337317943572998
    8. '(q' → logprob: -7.587317943572998
    9. '#' → logprob: -7.962317943572998
    10. '(pos' → logprob: -7.962317943572998

Token 1441: ' trouve' (ID: 30913)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5091792941093445
    2. 'bis' → logprob: -1.0091793537139893
    3. 'bs' → logprob: -5.25917911529541
    4. '#' → logprob: -6.00917911529541
    5. 'q' → logprob: -6.00917911529541
    6. 'ins' → logprob: -6.13417911529541
    7. 'import' → logprob: -6.25917911529541
    8. 'ra' → logprob: -6.38417911529541
    9. 'rb' → logprob: -6.38417911529541
    10. 's' → logprob: -6.63417911529541

Token 1442: ' un' (ID: 537)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.2234751135110855
    2. 'bis' → logprob: -1.9734750986099243
    3. '(q' → logprob: -3.848475217819214
    4. 'r' → logprob: -4.348474979400635
    5. '(r' → logprob: -4.348474979400635
    6. ' q' → logprob: -5.473474979400635
    7. ' bis' → logprob: -5.848474979400635
    8. '(' → logprob: -5.973474979400635
    9. '   ' → logprob: -6.723474979400635
    10. ' (' → logprob: -6.973474979400635

Token 1443: ' interval' (ID: 17116)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0562766790390015
    2. 'bis' → logprob: -1.4312766790390015
    3. 'position' → logprob: -1.6812766790390015
    4. 'r' → logprob: -2.806276798248291
    5. 'pos' → logprob: -2.806276798248291
    6. '(' → logprob: -3.056276798248291
    7. '```' → logprob: -4.556276798248291
    8. '(q' → logprob: -4.806276798248291
    9. '(r' → logprob: -5.181276798248291
    10. 'b' → logprob: -5.431276798248291

Token 1444: 'le' (ID: 282)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1847988367080688
    2. '=' → logprob: -1.8097988367080688
    3. 'q' → logprob: -2.1847987174987793
    4. ' =' → logprob: -2.4347987174987793
    5. 'bis' → logprob: -2.9347987174987793
    6. '           ' → logprob: -3.1847987174987793
    7. '_,' → logprob: -3.5597987174987793
    8. '   ' → logprob: -3.6847987174987793
    9. 'val' → logprob: -3.9347987174987793
    10. '       ' → logprob: -4.059798717498779

Token 1445: ' couvr' (ID: 129883)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2017555236816406
    2. ' =' → logprob: -1.3267555236816406
    3. 'pos' → logprob: -2.7017555236816406
    4. 'r' → logprob: -2.9517555236816406
    5. 'bis' → logprob: -3.0767555236816406
    6. 'idx' → logprob: -3.3267555236816406
    7. 'to' → logprob: -3.4517555236816406
    8. 'à' → logprob: -3.7017555236816406
    9. '_to' → logprob: -4.076755523681641
    10. '_r' → logprob: -4.076755523681641

Token 1446: 'ant' (ID: 493)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.1001588106155396
    2. 'q' → logprob: -2.10015869140625
    3. '(q' → logprob: -2.35015869140625
    4. 'r' → logprob: -2.60015869140625
    5. 'bis' → logprob: -2.72515869140625
    6. 't' → logprob: -3.35015869140625
    7. 'ert' → logprob: -3.60015869140625
    8. 'e' → logprob: -3.72515869140625
    9. '   ' → logprob: -3.72515869140625
    10. 'ect' → logprob: -3.72515869140625

Token 1447: ' "' (ID: 392)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.1939833164215088
    2. '(q' → logprob: -2.443983316421509
    3. 'bis' → logprob: -3.193983316421509
    4. 'r' → logprob: -4.31898307800293
    5. '(r' → logprob: -4.81898307800293
    6. ' q' → logprob: -4.94398307800293
    7. '(' → logprob: -5.19398307800293
    8. '   ' → logprob: -5.19398307800293
    9. ')' → logprob: -6.69398307800293
    10. '(-' → logprob: -6.81898307800293

Token 1448: 'l' (ID: 75)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5457872748374939
    2. 'r' → logprob: -0.9207872748374939
    3. ' q' → logprob: -4.170787334442139
    4. ' r' → logprob: -5.670787334442139
    5. 'l' → logprob: -6.045787334442139
    6. '   ' → logprob: -8.17078685760498
    7. '```' → logprob: -8.54578685760498
    8. '
' → logprob: -9.04578685760498
    9. '(r' → logprob: -9.29578685760498
    10. '(q' → logprob: -9.67078685760498

Token 1449: '"' (ID: 1)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8339533805847168
    2. '=' → logprob: -1.2089533805847168
    3. ')' → logprob: -2.333953380584717
    4. ',' → logprob: -3.208953380584717
    5. '_' → logprob: -3.583953380584717
    6. 'r' → logprob: -3.833953380584717
    7. 'q' → logprob: -4.833953380584717
    8. 'idx' → logprob: -4.833953380584717
    9. '           ' → logprob: -4.958953380584717
    10. '),' → logprob: -4.958953380584717

Token 1450: ' 
' (ID: 793)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.0755935907363892
    2. ' =' → logprob: -1.2005935907363892
    3. 'pos' → logprob: -1.9505935907363892
    4. '=' → logprob: -2.7005934715270996
    5. '_idx' → logprob: -3.0755934715270996
    6. 'ind' → logprob: -3.8255934715270996
    7. '           ' → logprob: -3.9505934715270996
    8. '_pos' → logprob: -4.3255934715271
    9. 'bis' → logprob: -4.5755934715271
    10. '_index' → logprob: -5.3255934715271

Token 1451: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6213670372962952
    2. '=' → logprob: -1.2463669776916504
    3. 'idx' → logprob: -1.9963669776916504
    4. 'bis' → logprob: -4.12136697769165
    5. 'pos' → logprob: -4.62136697769165
    6. '_' → logprob: -6.12136697769165
    7. '_=' → logprob: -6.24636697769165
    8. 'ind' → logprob: -6.37136697769165
    9. 'j' → logprob: -6.49636697769165
    10. '           ' → logprob: -6.62136697769165

Token 1452: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8524943590164185
    2. 'idx' → logprob: -0.9774943590164185
    3. 'j' → logprob: -2.102494239807129
    4. 'ind' → logprob: -2.977494239807129
    5. 'p' → logprob: -4.727494239807129
    6. 'x' → logprob: -5.352494239807129
    7. 'id' → logprob: -6.477494239807129
    8. ' pos' → logprob: -6.602494239807129
    9. 'k' → logprob: -6.727494239807129
    10. '   ' → logprob: -6.852494239807129

Token 1453: ' bis' (ID: 7204)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7954273819923401
    2. 'idx' → logprob: -1.5454273223876953
    3. 'j' → logprob: -1.6704273223876953
    4. 'ind' → logprob: -2.1704273223876953
    5. 'p' → logprob: -4.045427322387695
    6. 'x' → logprob: -5.170427322387695
    7. 'id' → logprob: -5.670427322387695
    8. 'k' → logprob: -6.170427322387695
    9. '   ' → logprob: -7.045427322387695
    10. '       ' → logprob: -7.170427322387695

Token 1454: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.004652742296457291
    2. 'e' → logprob: -5.379652976989746
    3. 'ec' → logprob: -11.754652976989746
    4. '```' → logprob: -11.754652976989746
    5. '_e' → logprob: -12.629652976989746
    6. 'ectl' → logprob: -13.254652976989746
    7. '_' → logprob: -13.379652976989746
    8. '`' → logprob: -13.504652976989746
    9. '\' → logprob: -13.754652976989746
    10. 'earch' → logprob: -14.004652976989746

Token 1455: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.4425373077392578
    2. '_right' → logprob: -2.067537307739258
    3. '_left' → logprob: -2.192537307739258
    4. '.ins' → logprob: -2.192537307739258
    5. 'q' → logprob: -6.067537307739258
    6. '.q' → logprob: -6.192537307739258
    7. '(q' → logprob: -6.317537307739258
    8. '_ins' → logprob: -7.192537307739258
    9. 'ins' → logprob: -8.192537307739258
    10. '(b' → logprob: -9.192537307739258

Token 1456: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.000474521511932835
    2. 'q' → logprob: -7.750474452972412
    3. 'ist' → logprob: -11.87547492980957
    4. '```' → logprob: -12.12547492980957
    5. '_right' → logprob: -12.25047492980957
    6. '_left' → logprob: -12.25047492980957
    7. 'bis' → logprob: -12.50047492980957
    8. 'right' → logprob: -13.00047492980957
    9. 'ис' → logprob: -13.00047492980957
    10. 'l' → logprob: -13.50047492980957

Token 1457: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.001049838843755424
    2. 'ct' → logprob: -7.376049995422363
    3. 'q' → logprob: -8.751049995422363
    4. '```' → logprob: -9.001049995422363
    5. 'e' → logprob: -9.626049995422363
    6. '_left' → logprob: -11.251049995422363
    7. 'eft' → logprob: -11.626049995422363
    8. '_right' → logprob: -11.876049995422363
    9. 't' → logprob: -12.126049995422363
    10. '(q' → logprob: -12.251049995422363

Token 1458: '_left' (ID: 22189)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.683230996131897
    2. '_right' → logprob: -1.433230996131897
    3. '_left' → logprob: -1.558230996131897
    4. 'q' → logprob: -4.058230876922607
    5. '.b' → logprob: -4.433230876922607
    6. 'right' → logprob: -5.433230876922607
    7. '.ins' → logprob: -5.433230876922607
    8. '.q' → logprob: -6.433230876922607
    9. 'ins' → logprob: -6.433230876922607
    10. 'left' → logprob: -6.558230876922607

Token 1459: ' cherche' (ID: 52345)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.00015240935317706317
    2. '(' → logprob: -9.000152587890625
    3. '(
' → logprob: -10.625152587890625
    4. ' (' → logprob: -13.500152587890625
    5. ')' → logprob: -13.875152587890625
    6. 'q' → logprob: -14.375152587890625
    7. '```' → logprob: -15.125152587890625
    8. '(qu' → logprob: -15.375152587890625
    9. '(

' → logprob: -15.750152587890625
    10. ',q' → logprob: -16.250152587890625

Token 1460: ' le' (ID: 505)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.0001940040965564549
    2. 'q' → logprob: -8.62519359588623
    3. 'import' → logprob: -12.25019359588623
    4. '(' → logprob: -12.87519359588623
    5. '
' → logprob: -13.62519359588623
    6. ')' → logprob: -13.75019359588623
    7. '```' → logprob: -14.12519359588623
    8. '((' → logprob: -14.12519359588623
    9. 'def' → logprob: -14.37519359588623
    10. ' (' → logprob: -14.87519359588623

Token 1461: ' premier' (ID: 15506)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.1441653072834015
    2. 'q' → logprob: -2.019165277481079
    3. ' (' → logprob: -7.394165515899658
    4. ' q' → logprob: -8.0191650390625
    5. '(' → logprob: -8.2691650390625
    6. ')' → logprob: -9.2691650390625
    7. '```' → logprob: -10.1441650390625
    8. 'position' → logprob: -10.3941650390625
    9. '	q' → logprob: -11.0191650390625
    10. ' ' → logprob: -11.0191650390625

Token 1462: ' élément' (ID: 99627)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.00037561915814876556
    2. 'q' → logprob: -8.625375747680664
    3. 'import' → logprob: -8.750375747680664
    4. '(' → logprob: -11.125375747680664
    5. 'position' → logprob: -11.875375747680664
    6. '```' → logprob: -12.125375747680664
    7. '`' → logprob: -13.500375747680664
    8. ')' → logprob: -13.750375747680664
    9. '((' → logprob: -13.875375747680664
    10. '(
' → logprob: -14.000375747680664

Token 1463: ' >=' (ID: 5064)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(q' → logprob: -1.580929347255733e-05
    2. 'import' → logprob: -12.250016212463379
    3. 'q' → logprob: -12.375016212463379
    4. '(' → logprob: -12.875016212463379
    5. '```' → logprob: -13.625016212463379
    6. 'in' → logprob: -13.875016212463379
    7. '(
' → logprob: -14.750016212463379
    8. '((' → logprob: -14.875016212463379
    9. '`' → logprob: -14.875016212463379
    10. ' (' → logprob: -15.625016212463379

Token 1464: ' (' (ID: 350)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.1666540503501892
    2. '(r' → logprob: -2.541654109954834
    3. 'q' → logprob: -3.041654109954834
    4. ' (' → logprob: -3.666654109954834
    5. ' q' → logprob: -7.041654109954834
    6. '(l' → logprob: -8.291653633117676
    7. '   ' → logprob: -8.666653633117676
    8. 'r' → logprob: -9.666653633117676
    9. '(' → logprob: -10.166653633117676
    10. ' ' → logprob: -10.791653633117676

Token 1465: 'l' (ID: 75)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.5483859777450562
    2. 'r' → logprob: -0.9233859777450562
    3. 'l' → logprob: -4.173386096954346
    4. '(l' → logprob: -4.673386096954346
    5. ' (' → logprob: -9.298385620117188
    6. ' r' → logprob: -9.923385620117188
    7. '(' → logprob: -10.798385620117188
    8. ')' → logprob: -11.298385620117188
    9. ' l' → logprob: -12.048385620117188
    10. '   ' → logprob: -12.298385620117188

Token 1466: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.062460459768772125
    2. ')' → logprob: -2.937460422515869
    3. ',)' → logprob: -5.062460422515869
    4. '```' → logprob: -8.312460899353027
    5. ',l' → logprob: -8.562460899353027
    6. ',r' → logprob: -8.812460899353027
    7. '+' → logprob: -9.062460899353027
    8. ',
' → logprob: -9.812460899353027
    9. '   ' → logprob: -9.937460899353027
    10. ',q' → logprob: -9.937460899353027

Token 1467: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31861796975135803
    2. 'c' → logprob: -1.3186179399490356
    3. 'inf' → logprob: -6.443617820739746
    4. ')' → logprob: -6.943617820739746
    5. '(c' → logprob: -6.943617820739746
    6. ')c' → logprob: -7.443617820739746
    7. '-' → logprob: -8.068617820739746
    8. '-c' → logprob: -8.443617820739746
    9. 'l' → logprob: -8.568617820739746
    10. '(' → logprob: -9.068617820739746

Token 1468: '1' (ID: 16)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.04768294095993042
    2. '1' → logprob: -3.547683000564575
    3. '10' → logprob: -4.297682762145996
    4. 'float' → logprob: -6.672682762145996
    5. '100' → logprob: -6.922682762145996
    6. 'int' → logprob: -7.297682762145996
    7. 'c' → logprob: -7.672682762145996
    8. 'math' → logprob: -8.297682762145996
    9. 'eps' → logprob: -8.797682762145996
    10. '999' → logprob: -9.297682762145996

Token 1469: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.186122770188376e-05
    2. ')`' → logprob: -10.250091552734375
    3. '))' → logprob: -11.000091552734375
    4. '),' → logprob: -11.500091552734375
    5. '```' → logprob: -11.750091552734375
    6. ')
' → logprob: -11.875091552734375
    7. '   ' → logprob: -12.500091552734375
    8. ' )' → logprob: -13.125091552734375
    9. '`)' → logprob: -13.250091552734375
    10. ')_' → logprob: -13.500091552734375

Token 1470: ' (' (ID: 350)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.484224408864975
    2. 'q' → logprob: -1.2342244386672974
    3. '(' → logprob: -3.234224319458008
    4. ')' → logprob: -3.734224319458008
    5. '           ' → logprob: -4.859224319458008
    6. '       ' → logprob: -5.109224319458008
    7. '`' → logprob: -5.859224319458008
    8. '_q' → logprob: -6.109224319458008
    9. '   ' → logprob: -6.359224319458008
    10. '```' → logprob: -6.484224319458008

Token 1471: 'le' (ID: 282)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5827785134315491
    2. 'q' → logprob: -0.8327785134315491
    3. '(' → logprob: -6.082778453826904
    4. ' q' → logprob: -6.707778453826904
    5. 'l' → logprob: -6.832778453826904
    6. ' )' → logprob: -7.207778453826904
    7. '(q' → logprob: -7.957778453826904
    8. '`' → logprob: -8.457778930664062
    9. '```' → logprob: -8.707778930664062
    10. ''q' → logprob: -8.957778930664062

Token 1472: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24924509227275848
    2. '```' → logprob: -2.7492451667785645
    3. 'q' → logprob: -3.2492451667785645
    4. '`' → logprob: -3.6242451667785645
    5. 'bis' → logprob: -3.7492451667785645
    6. 'import' → logprob: -5.1242451667785645
    7. '0' → logprob: -5.2492451667785645
    8. 'key' → logprob: -5.3742451667785645
    9. '')' → logprob: -5.4992451667785645
    10. '))' → logprob: -5.4992451667785645

Token 1473: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.9054008084349334e-05
    2. ')' → logprob: -11.000039100646973
    3. 'inf' → logprob: -11.625039100646973
    4. 'bis' → logprob: -11.875039100646973
    5. ',' → logprob: -13.375039100646973
    6. '100' → logprob: -13.625039100646973
    7. '```' → logprob: -14.000039100646973
    8. '999' → logprob: -14.125039100646973
    9. ' ' → logprob: -14.875039100646973
    10. 'float' → logprob: -15.500039100646973

Token 1474: ' n' (ID: 297)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014084660506341606
    2. ')`' → logprob: -9.500141143798828
    3. '),' → logprob: -10.750141143798828
    4. ')
' → logprob: -11.000141143798828
    5. '`)' → logprob: -12.250141143798828
    6. '))' → logprob: -12.375141143798828
    7. '```' → logprob: -12.500141143798828
    8. ')_' → logprob: -13.000141143798828
    9. '   ' → logprob: -13.375141143798828
    10. ',' → logprob: -13.500141143798828

Token 1475: ''est' (ID: 6616)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02218024805188179
    2. ')' → logprob: -4.522180080413818
    3. ',b' → logprob: -5.897180080413818
    4. ',n' → logprob: -6.522180080413818
    5. ',
' → logprob: -6.647180080413818
    6. 'bis' → logprob: -6.772180080413818
    7. ',)' → logprob: -7.022180080413818
    8. 'import' → logprob: -7.272180080413818
    9. '),' → logprob: -7.647180080413818
    10. ',),' → logprob: -8.147180557250977

Token 1476: ' là' (ID: 8052)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.998080313205719
    2. '#' → logprob: -1.6230802536010742
    3. '...' → logprob: -1.9980802536010742
    4. '0' → logprob: -2.373080253601074
    5. 'None' → logprob: -2.998080253601074
    6. 'pas' → logprob: -3.498080253601074
    7. 'bis' → logprob: -3.748080253601074
    8. '1' → logprob: -3.873080253601074
    9. ')>' → logprob: -4.373080253601074
    10. '>' → logprob: -4.748080253601074

Token 1477: ' que' (ID: 661)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6679183840751648
    2. ')' → logprob: -1.1679184436798096
    3. 'pour' → logprob: -1.7929184436798096
    4. ' pour' → logprob: -5.2929182052612305
    5. ',)' → logprob: -6.7929182052612305
    6. 'pas' → logprob: -7.1679182052612305
    7. 'import' → logprob: -7.2929182052612305
    8. 'que' → logprob: -7.7929182052612305
    9. 'for' → logprob: -8.04291820526123
    10. ' )' → logprob: -8.54291820526123

Token 1478: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.648497998714447
    2. ')' → logprob: -0.773497998714447
    3. 'pour' → logprob: -4.523498058319092
    4. ' pour' → logprob: -6.398498058319092
    5. ',)' → logprob: -7.023498058319092
    6. 'for' → logprob: -7.648498058319092
    7. '),' → logprob: -7.773498058319092
    8. ' )' → logprob: -8.148497581481934
    9. 'à' → logprob: -8.148497581481934
    10. ',
' → logprob: -8.898497581481934

Token 1479: ' l' (ID: 305)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9289960861206055
    2. 'q' → logprob: -1.9289960861206055
    3. 'l' → logprob: -2.3039960861206055
    4. 'bis' → logprob: -2.3039960861206055
    5. ',' → logprob: -3.3039960861206055
    6. 'maint' → logprob: -3.3039960861206055
    7. 'ind' → logprob: -3.9289960861206055
    8. 'placer' → logprob: -4.0539960861206055
    9. '0' → logprob: -4.0539960861206055
    10. 'qual' → logprob: -4.3039960861206055

Token 1480: ''ordre' (ID: 124753)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019315233454108238
    2. 'bis' → logprob: -4.644315242767334
    3. '))' → logprob: -5.894315242767334
    4. ',' → logprob: -6.394315242767334
    5. '_' → logprob: -6.644315242767334
    6. '),' → logprob: -7.519315242767334
    7. '')' → logprob: -7.894315242767334
    8. ' )' → logprob: -8.519314765930176
    9. ')_' → logprob: -8.519314765930176
    10. ')])' → logprob: -8.644314765930176

Token 1481: ' lex' (ID: 37772)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6666762828826904
    2. '```' → logprob: -1.5416762828826904
    3. 'bis' → logprob: -2.4166762828826904
    4. ',' → logprob: -3.1666762828826904
    5. '`' → logprob: -3.5416762828826904
    6. '`)' → logprob: -3.9166762828826904
    7. '.b' → logprob: -4.0416765213012695
    8. ')`' → logprob: -4.2916765213012695
    9. '``' → logprob: -4.6666765213012695
    10. '(' → logprob: -4.7916765213012695

Token 1482: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.5990080833435059
    2. ')' → logprob: -2.224008083343506
    3. ')
' → logprob: -2.599008083343506
    4. 'b' → logprob: -2.724008083343506
    5. '```' → logprob: -3.099008083343506
    6. 'bis' → logprob: -3.349008083343506
    7. '(' → logprob: -3.849008083343506
    8. '(b' → logprob: -4.474008083343506
    9. '(
' → logprob: -4.474008083343506
    10. '))
' → logprob: -4.474008083343506

Token 1483: 'ographique' (ID: 108012)
  Prédit: 'ographical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ographical' → logprob: -0.24953815340995789
    2. 'graph' → logprob: -2.1245381832122803
    3. 'al' → logprob: -2.8745381832122803
    4. '```' → logprob: -4.124537944793701
    5. ')' → logprob: -4.624537944793701
    6. 'ographic' → logprob: -4.999537944793701
    7. 'ographically' → logprob: -5.999537944793701
    8. 'ographique' → logprob: -6.749537944793701
    9. 'raph' → logprob: -6.999537944793701
    10. 'r' → logprob: -6.999537944793701

Token 1484: ')
' (ID: 446)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.19331558048725128
    2. ')' → logprob: -2.0683155059814453
    3. '(' → logprob: -3.5683155059814453
    4. 'q' → logprob: -4.193315505981445
    5. '```' → logprob: -6.443315505981445
    6. '`' → logprob: -7.068315505981445
    7. ',' → logprob: -7.193315505981445
    8. ')(' → logprob: -7.943315505981445
    9. ',q' → logprob: -8.193315505981445
    10. ')`' → logprob: -8.193315505981445

Token 1485: '           ' (ID: 352)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.7418771386146545
    2. '(q' → logprob: -0.9918771386146545
    3. ')' → logprob: -2.2418770790100098
    4. '(' → logprob: -3.9918770790100098
    5. '```' → logprob: -4.49187707901001
    6. '(
' → logprob: -5.99187707901001
    7. '           ' → logprob: -6.36687707901001
    8. '`' → logprob: -6.36687707901001
    9. ')(' → logprob: -6.49187707901001
    10. '   ' → logprob: -6.61687707901001

Token 1486: ' qi' (ID: 64017)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.737392246723175
    2. 'idx' → logprob: -1.2373921871185303
    3. 'j' → logprob: -2.1123921871185303
    4. 'ind' → logprob: -2.7373921871185303
    5. 'k' → logprob: -3.7373921871185303
    6. 'p' → logprob: -4.987392425537109
    7. 'x' → logprob: -5.487392425537109
    8. 'index' → logprob: -6.112392425537109
    9. '       ' → logprob: -7.112392425537109
    10. ' pos' → logprob: -7.362392425537109

Token 1487: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7430022358894348
    2. ' =' → logprob: -0.7430022358894348
    3. 'nd' → logprob: -3.99300217628479
    4. 'dx' → logprob: -3.99300217628479
    5. 'x' → logprob: -4.618002414703369
    6. 'd' → logprob: -7.743002414703369
    7. 'ex' → logprob: -7.868002414703369
    8. '   ' → logprob: -8.243001937866211
    9. 'n' → logprob: -8.743001937866211
    10. 'dex' → logprob: -9.118001937866211

Token 1488: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.0011703446507453918
    2. ' bis' → logprob: -6.7511701583862305
    3. '```' → logprob: -16.751171112060547
    4. 'b' → logprob: -16.876171112060547
    5. '   ' → logprob: -17.626171112060547
    6. '	b' → logprob: -17.876171112060547
    7. 'bs' → logprob: -19.126171112060547
    8. 'import' → logprob: -20.001171112060547
    9. '`' → logprob: -20.001171112060547
    10. 'bi' → logprob: -20.126171112060547

Token 1489: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.8624639324116288e-06
    2. '```' → logprob: -14.250001907348633
    3. 'q' → logprob: -14.625001907348633
    4. 'e' → logprob: -15.750001907348633
    5. '.b' → logprob: -16.250001907348633
    6. 'sect' → logprob: -16.375001907348633
    7. 'ects' → logprob: -16.500001907348633
    8. '`' → logprob: -16.500001907348633
    9. 'ec' → logprob: -17.000001907348633
    10. '``' → logprob: -17.125001907348633

Token 1490: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.03829829394817352
    2. '.' → logprob: -3.2882983684539795
    3. '_left' → logprob: -9.413298606872559
    4. '.б' → logprob: -10.163298606872559
    5. '.q' → logprob: -10.538298606872559
    6. ' .' → logprob: -11.038298606872559
    7. ').' → logprob: -11.163298606872559
    8. '```' → logprob: -11.413298606872559
    9. '._' → logprob: -11.538298606872559
    10. '.qu' → logprob: -11.913298606872559

Token 1491: 'is' (ID: 276)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.008604409173130989
    2. 'bis' → logprob: -5.258604526519775
    3. 'q' → logprob: -6.508604526519775
    4. 'left' → logprob: -7.258604526519775
    5. '_left' → logprob: -7.883604526519775
    6. 'sect' → logprob: -8.383604049682617
    7. ' bis' → logprob: -8.758604049682617
    8. 'eft' → logprob: -9.008604049682617
    9. 'ct' → logprob: -9.508604049682617
    10. 's' → logprob: -9.883604049682617

Token 1492: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.11328490078449249
    2. 'ct' → logprob: -2.2382848262786865
    3. 'q' → logprob: -8.238285064697266
    4. '```' → logprob: -9.363285064697266
    5. 'n' → logprob: -11.113285064697266
    6. 'с' → logprob: -11.363285064697266
    7. '   ' → logprob: -11.488285064697266
    8. 't' → logprob: -11.613285064697266
    9. '#' → logprob: -11.738285064697266
    10. '`' → logprob: -11.988285064697266

Token 1493: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.3956913948059082
    2. '(q' → logprob: -1.2706913948059082
    3. 'q' → logprob: -3.270691394805908
    4. 'left' → logprob: -5.520691394805908
    5. '_right' → logprob: -7.020691394805908
    6. '.b' → logprob: -7.020691394805908
    7. '[q' → logprob: -7.020691394805908
    8. 'b' → logprob: -7.770691394805908
    9. 'bis' → logprob: -7.770691394805908
    10. '.q' → logprob: -8.52069091796875

Token 1494: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -1.6240566083070007e-06
    2. 'q' → logprob: -13.875001907348633
    3. '   ' → logprob: -15.375001907348633
    4. '[q' → logprob: -15.625001907348633
    5. '```' → logprob: -16.250001907348633
    6. '(
' → logprob: -16.250001907348633
    7. ' (' → logprob: -16.500001907348633
    8. '(' → logprob: -16.500001907348633
    9. 'import' → logprob: -19.000001907348633
    10. ')' → logprob: -19.500001907348633

Token 1495: ',' (ID: 11)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.02192031592130661
    2. ',' → logprob: -3.8969202041625977
    3. ',q' → logprob: -6.646920204162598
    4. 'q' → logprob: -10.146920204162598
    5. ',(' → logprob: -10.896920204162598
    6. '   ' → logprob: -12.146920204162598
    7. '((' → logprob: -12.271920204162598
    8. '```' → logprob: -12.896920204162598
    9. '(' → logprob: -13.021920204162598
    10. ' ,' → logprob: -13.271920204162598

Token 1496: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.00013595925702247769
    2. ' (' → logprob: -9.250136375427246
    3. '   ' → logprob: -11.125136375427246
    4. '(' → logprob: -11.250136375427246
    5. '((' → logprob: -11.375136375427246
    6. '	' → logprob: -14.750136375427246
    7. ' ' → logprob: -16.50013542175293
    8. '[(' → logprob: -17.00013542175293
    9. '(L' → logprob: -17.12513542175293
    10. '(s' → logprob: -17.50013542175293

Token 1497: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.000639765290543437
    2. '(l' → logprob: -7.375639915466309
    3. '   ' → logprob: -12.125639915466309
    4. ' l' → logprob: -12.750639915466309
    5. '	l' → logprob: -12.875639915466309
    6. '[l' → logprob: -13.875639915466309
    7. 'r' → logprob: -15.125639915466309
    8. ')' → logprob: -15.250639915466309
    9. '```' → logprob: -16.000638961791992
    10. ',l' → logprob: -16.375638961791992

Token 1498: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012180940248072147
    2. ',-' → logprob: -7.001218318939209
    3. '-' → logprob: -9.12621784210205
    4. '   ' → logprob: -9.75121784210205
    5. ' ,' → logprob: -10.00121784210205
    6. ',
' → logprob: -10.25121784210205
    7. '           ' → logprob: -11.37621784210205
    8. '```' → logprob: -11.87621784210205
    9. '       ' → logprob: -12.00121784210205
    10. '  ' → logprob: -12.62621784210205

Token 1499: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.4849443838757e-06
    2. '-inf' → logprob: -13.125004768371582
    3. ' -' → logprob: -13.375004768371582
    4. '0' → logprob: -14.000004768371582
    5. '1' → logprob: -17.000003814697266
    6. '-INF' → logprob: -18.625003814697266
    7. '−' → logprob: -19.375003814697266
    8. '-
' → logprob: -19.625003814697266
    9. 'inf' → logprob: -19.750003814697266
    10. 'float' → logprob: -19.875003814697266

Token 1500: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.85235276655294e-05
    2. 'inf' → logprob: -9.375088691711426
    3. 'math' → logprob: -13.750088691711426
    4. '100' → logprob: -14.000088691711426
    5. '999' → logprob: -14.500088691711426
    6. '10' → logprob: -15.000088691711426
    7. 'float' → logprob: -15.000088691711426
    8. 'int' → logprob: -15.375088691711426
    9. ' ' → logprob: -15.500088691711426
    10. 'sys' → logprob: -17.31258773803711

Token 1501: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0020742444321513176
    2. '))
' → logprob: -6.627074241638184
    3. ')' → logprob: -7.252074241638184
    4. '           ' → logprob: -10.752074241638184
    5. '),' → logprob: -12.252074241638184
    6. '))
' → logprob: -12.502074241638184
    7. ')
' → logprob: -13.127074241638184
    8. '))-' → logprob: -13.377074241638184
    9. ')))' → logprob: -13.752074241638184
    10. '       ' → logprob: -13.877074241638184

Token 1502: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5216154456138611
    2. ')' → logprob: -1.1466155052185059
    3. '       ' → logprob: -3.896615505218506
    4. ')
' → logprob: -3.896615505218506
    5. '            
' → logprob: -4.896615505218506
    6. '```' → logprob: -5.021615505218506
    7. '
' → logprob: -5.396615505218506
    8. ')\' → logprob: -5.521615505218506
    9. '),' → logprob: -5.896615505218506
    10. '#' → logprob: -6.396615505218506

Token 1503: ' _,' (ID: 18042)
  Prédit: 'qi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qi' → logprob: -0.6163545250892639
    2. 'if' → logprob: -1.2413544654846191
    3. '           ' → logprob: -2.241354465484619
    4. 'q' → logprob: -3.866354465484619
    5. '#' → logprob: -3.991354465484619
    6. ')' → logprob: -4.741354465484619
    7. 'while' → logprob: -4.866354465484619
    8. 'r' → logprob: -6.241354465484619
    9. ' if' → logprob: -6.491354465484619
    10. 'ql' → logprob: -6.991354465484619

Token 1504: ' cc' (ID: 22988)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.9275227785110474
    2. 'qi' → logprob: -1.8025227785110474
    3. 'qc' → logprob: -1.8025227785110474
    4. 'ci' → logprob: -2.802522659301758
    5. 'cc' → logprob: -3.052522659301758
    6. 'co' → logprob: -3.302522659301758
    7. 'q' → logprob: -3.302522659301758
    8. 'v' → logprob: -4.427522659301758
    9. 'c' → logprob: -4.427522659301758
    10. 'min' → logprob: -4.802522659301758

Token 1505: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869977593421936
    2. ' =' → logprob: -1.1369976997375488
    3. '=q' → logprob: -9.386998176574707
    4. '   ' → logprob: -11.136998176574707
    5. '           ' → logprob: -11.761998176574707
    6. 'q' → logprob: -12.136998176574707
    7. ' ' → logprob: -13.011998176574707
    8. '       ' → logprob: -13.136998176574707
    9. 'cc' → logprob: -13.511998176574707
    10. ')' → logprob: -13.511998176574707

Token 1506: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.627176768844947e-05
    2. ' q' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.75009536743164
    4. '	q' → logprob: -18.25009536743164
    5. '           ' → logprob: -19.25009536743164
    6. '       ' → logprob: -20.12509536743164
    7. '    ' → logprob: -20.12509536743164
    8. '
' → logprob: -20.25009536743164
    9. ' ' → logprob: -20.50009536743164
    10. '(q' → logprob: -20.50009536743164

Token 1507: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012511172099038959
    2. '   ' → logprob: -10.25012493133545
    3. 'qi' → logprob: -10.37512493133545
    4. '=' → logprob: -10.50012493133545
    5. '
' → logprob: -11.50012493133545
    6. '[q' → logprob: -11.75012493133545
    7. '       ' → logprob: -12.25012493133545
    8. '[
' → logprob: -12.62512493133545
    9. '```' → logprob: -13.87512493133545
    10. ' =' → logprob: -14.25012493133545

Token 1508: 'qi' (ID: 35588)
  Prédit: 'qi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qi' → logprob: -0.00010139751975657418
    2. '0' → logprob: -9.375101089477539
    3. ' qi' → logprob: -11.500101089477539
    4. '(' → logprob: -13.000101089477539
    5. '   ' → logprob: -13.875101089477539
    6. '-' → logprob: -14.375101089477539
    7. '1' → logprob: -14.500101089477539
    8. '(q' → logprob: -15.000101089477539
    9. 'max' → logprob: -15.250101089477539
    10. '
' → logprob: -15.625101089477539

Token 1509: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0027642217464745045
    2. ']
' → logprob: -6.8777642250061035
    3. '-' → logprob: -7.0027642250061035
    4. ')' → logprob: -8.377763748168945
    5. '])' → logprob: -8.377763748168945
    6. ')]' → logprob: -9.627763748168945
    7. '           ' → logprob: -9.752763748168945
    8. '<|end|>' → logprob: -10.252763748168945
    9. '][' → logprob: -10.377763748168945
    10. '<|end|>' → logprob: -10.502763748168945

Token 1510: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1395152062177658
    2. ')' → logprob: -2.7645151615142822
    3. '<|end|>' → logprob: -3.1395151615142822
    4. '
' → logprob: -4.514515399932861
    5. '            
' → logprob: -6.014515399932861
    6. '<|end|>' → logprob: -6.014515399932861
    7. '       ' → logprob: -6.139515399932861
    8. ',' → logprob: -6.889515399932861
    9. '#' → logprob: -7.264515399932861
    10. ')
' → logprob: -7.764515399932861

Token 1511: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6654106378555298
    2. ')' → logprob: -0.9154106378555298
    3. '
' → logprob: -3.1654105186462402
    4. ')
' → logprob: -4.29041051864624
    5. 'if' → logprob: -5.29041051864624
    6. '<|end|>' → logprob: -5.41541051864624
    7. '            
' → logprob: -5.66541051864624
    8. ' if' → logprob: -5.79041051864624
    9. '       ' → logprob: -6.04041051864624
    10. ',' → logprob: -6.04041051864624

Token 1512: ' cc' (ID: 22988)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.354179322719574
    2. 'cost' → logprob: -1.4791793823242188
    3. 'cc' → logprob: -2.8541793823242188
    4. 'while' → logprob: -5.479179382324219
    5. 'c' → logprob: -5.729179382324219
    6. 'new' → logprob: -6.604179382324219
    7. 'q' → logprob: -6.729179382324219
    8. 'co' → logprob: -6.979179382324219
    9. 'for' → logprob: -8.104179382324219
    10. 'cur' → logprob: -8.229179382324219

Token 1513: ' :' (ID: 712)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5423479676246643
    2. ',' → logprob: -1.2923479080200195
    3. '<|end|>' → logprob: -2.6673479080200195
    4. ' =' → logprob: -3.5423479080200195
    5. '[' → logprob: -4.6673479080200195
    6. ',q' → logprob: -4.9173479080200195
    7. ')' → logprob: -5.0423479080200195
    8. '#' → logprob: -5.2923479080200195
    9. '```' → logprob: -5.4173479080200195
    10. '<|end|>' → logprob: -5.6673479080200195

Token 1514: ' le' (ID: 505)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.04651045799255371
    2. 'cc' → logprob: -3.1715104579925537
    3. ' q' → logprob: -6.546510696411133
    4. '0' → logprob: -6.546510696411133
    5. 'qc' → logprob: -8.421510696411133
    6. 'cost' → logprob: -8.796510696411133
    7. '```' → logprob: -9.921510696411133
    8. 'qi' → logprob: -10.421510696411133
    9. '[' → logprob: -10.421510696411133
    10. 'c' → logprob: -10.671510696411133

Token 1515: ' coût' (ID: 73109)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5992934703826904
    2. '1' → logprob: -0.9742934703826904
    3. 'co' → logprob: -3.3492934703826904
    4. 'cc' → logprob: -3.5992934703826904
    5. '[' → logprob: -5.5992937088012695
    6. 'q' → logprob: -5.7242937088012695
    7. 'cout' → logprob: -6.7242937088012695
    8. 'c' → logprob: -6.9742937088012695
    9. '0' → logprob: -7.5992937088012695
    10. '```' → logprob: -8.09929370880127

Token 1516: ' minimal' (ID: 19957)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.50044846534729
    2. ',' → logprob: -1.50044846534729
    3. '+' → logprob: -2.50044846534729
    4. ')' → logprob: -3.87544846534729
    5. ' =' → logprob: -3.87544846534729
    6. '+=' → logprob: -4.000448226928711
    7. 'min' → logprob: -5.000448226928711
    8. '           ' → logprob: -5.875448226928711
    9. '_min' → logprob: -6.000448226928711
    10. ',q' → logprob: -6.500448226928711

Token 1517: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6506256461143494
    2. '<|end|>' → logprob: -0.7756256461143494
    3. '<|end|>' → logprob: -4.400625705718994
    4. ',' → logprob: -6.025625705718994
    5. '
' → logprob: -6.900625705718994
    6. '[' → logprob: -7.900625705718994
    7. '           ' → logprob: -8.275625228881836
    8. ')
' → logprob: -8.775625228881836
    9. '[q' → logprob: -9.150625228881836
    10. ' )' → logprob: -9.400625228881836

Token 1518: ' atteindre' (ID: 95734)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.41642090678215027
    2. 'q' → logprob: -1.1664209365844727
    3. 'arr' → logprob: -4.166420936584473
    4. 'at' → logprob: -6.541420936584473
    5. ' atteindre' → logprob: -6.541420936584473
    6. 're' → logprob: -6.541420936584473
    7. 'c' → logprob: -6.666420936584473
    8. 'cou' → logprob: -6.666420936584473
    9. 'acc' → logprob: -6.791420936584473
    10. ' q' → logprob: -7.041420936584473

Token 1519: ' l' (ID: 305)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.22861409187316895
    2. 'l' → logprob: -1.728614091873169
    3. 'r' → logprob: -3.978614091873169
    4. 'la' → logprob: -5.47861385345459
    5. ' q' → logprob: -6.47861385345459
    6. 'qi' → logprob: -6.72861385345459
    7. ' la' → logprob: -8.35361385345459
    8. 'the' → logprob: -8.47861385345459
    9. '(l' → logprob: -8.85361385345459
    10. ' l' → logprob: -8.97861385345459

Token 1520: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2687135934829712
    2. 'l' → logprob: -2.0187134742736816
    3. 'r' → logprob: -3.5187134742736816
    4. ',' → logprob: -3.6437134742736816
    5. '+' → logprob: -4.393713474273682
    6. ']' → logprob: -4.768713474273682
    7. '```' → logprob: -4.893713474273682
    8. 'qi' → logprob: -5.393713474273682
    9. '),' → logprob: -5.518713474273682
    10. '   ' → logprob: -5.768713474273682

Token 1521: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04609527066349983
    2. 'if' → logprob: -3.796095371246338
    3. ' if' → logprob: -5.046095371246338
    4. ',' → logprob: -5.296095371246338
    5. '```' → logprob: -5.796095371246338
    6. 'q' → logprob: -6.296095371246338
    7. '            
' → logprob: -6.421095371246338
    8. '
' → logprob: -6.671095371246338
    9. '       ' → logprob: -7.171095371246338
    10. ',
' → logprob: -7.296095371246338

Token 1522: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3448376953601837
    2. 'cost' → logprob: -2.5948376655578613
    3. 'cc' → logprob: -2.8448376655578613
    4. 'nr' → logprob: -2.9698376655578613
    5. 'new' → logprob: -3.3448376655578613
    6. '           ' → logprob: -3.7198376655578613
    7. 'nc' → logprob: -4.594837665557861
    8. 'heap' → logprob: -5.469837665557861
    9. 'cr' → logprob: -5.719837665557861
    10. '       ' → logprob: -5.719837665557861

Token 1523: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12490745633840561
    2. 'cc' → logprob: -3.3749074935913086
    3. 'cost' → logprob: -3.7499074935913086
    4. 'pos' → logprob: -4.249907493591309
    5. 'cur' → logprob: -4.749907493591309
    6. 'nr' → logprob: -4.999907493591309
    7. 'new' → logprob: -5.499907493591309
    8. 'while' → logprob: -5.499907493591309
    9. 'c' → logprob: -5.999907493591309
    10. 'cr' → logprob: -6.249907493591309

Token 1524: ' prépare' (ID: 150142)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.037236213684082
    2. ' if' → logprob: -1.287236213684082
    3. 'r' → logprob: -2.537236213684082
    4. 'pos' → logprob: -2.537236213684082
    5. 'while' → logprob: -3.787236213684082
    6. ' r' → logprob: -4.037236213684082
    7. 'idx' → logprob: -4.162236213684082
    8. ' =' → logprob: -4.287236213684082
    9. '=' → logprob: -4.412236213684082
    10. ' while' → logprob: -4.412236213684082

Token 1525: ' une' (ID: 2463)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.4816180467605591
    2. '           ' → logprob: -2.2316179275512695
    3. 'new' → logprob: -2.9816179275512695
    4. '(q' → logprob: -3.3566179275512695
    5. 'q' → logprob: -3.7316179275512695
    6. 'pos' → logprob: -3.9816179275512695
    7. '(pos' → logprob: -3.9816179275512695
    8. 'tmp' → logprob: -4.2316179275512695
    9. '(l' → logprob: -4.3566179275512695
    10. 'r' → logprob: -4.4816179275512695

Token 1526: ' nouvelle' (ID: 24562)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3729023039340973
    2. 'while' → logprob: -2.9979023933410645
    3. 'r' → logprob: -3.1229023933410645
    4. '(pos' → logprob: -3.3729023933410645
    5. 'if' → logprob: -3.4979023933410645
    6. 'new' → logprob: -3.4979023933410645
    7. 'candidate' → logprob: -3.9979023933410645
    8. 'j' → logprob: -4.1229023933410645
    9. '(r' → logprob: -4.3729023933410645
    10. 'q' → logprob: -4.4979023933410645

Token 1527: ' transition' (ID: 14463)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9932705760002136
    2. 'tuple' → logprob: -1.4932706356048584
    3. 'entry' → logprob: -1.7432706356048584
    4. 'interval' → logprob: -2.3682706356048584
    5. 'candidate' → logprob: -2.7432706356048584
    6. 'cost' → logprob: -4.118270397186279
    7. 'val' → logprob: -4.743270397186279
    8. 't' → logprob: -4.743270397186279
    9. 'position' → logprob: -4.868270397186279
    10. '_tuple' → logprob: -5.493270397186279

Token 1528: ' vers' (ID: 3640)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08779674023389816
    2. ' if' → logprob: -3.587796688079834
    3. ' (' → logprob: -4.087796688079834
    4. 'if' → logprob: -4.587796688079834
    5. '(' → logprob: -4.962796688079834
    6. ' =' → logprob: -5.712796688079834
    7. 'q' → logprob: -5.712796688079834
    8. '=' → logprob: -6.212796688079834
    9. ',' → logprob: -6.337796688079834
    10. 'new' → logprob: -6.337796688079834

Token 1529: ' la' (ID: 557)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0015391462948173285
    2. ' (' → logprob: -6.50153923034668
    3. 'r' → logprob: -11.12653923034668
    4. '   ' → logprob: -11.50153923034668
    5. '(' → logprob: -12.00153923034668
    6. '(q' → logprob: -13.00153923034668
    7. '(rr' → logprob: -13.12653923034668
    8. '(R' → logprob: -15.37653923034668
    9. ' ' → logprob: -15.62653923034668
    10. '(rc' → logprob: -15.75153923034668

Token 1530: ' position' (ID: 4010)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.00025430647656321526
    2. '(' → logprob: -8.75025463104248
    3. 'r' → logprob: -10.25025463104248
    4. ' (' → logprob: -10.50025463104248
    5. '(
' → logprob: -11.25025463104248
    6. '(rr' → logprob: -11.75025463104248
    7. '(R' → logprob: -13.25025463104248
    8. '(q' → logprob: -13.37525463104248
    9. '(rc' → logprob: -13.50025463104248
    10. '```' → logprob: -13.75025463104248

Token 1531: ' "' (ID: 392)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.06066914647817612
    2. 'r' → logprob: -3.310669183731079
    3. '(' → logprob: -4.0606689453125
    4. ' (' → logprob: -5.4356689453125
    5. '(
' → logprob: -7.4356689453125
    6. ' r' → logprob: -9.1856689453125
    7. ',' → logprob: -10.3106689453125
    8. '   ' → logprob: -10.9356689453125
    9. '(max' → logprob: -12.3106689453125
    10. ',r' → logprob: -12.9356689453125

Token 1532: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0008864453993737698
    2. ' r' → logprob: -7.1258864402771
    3. '   ' → logprob: -9.750886917114258
    4. '(r' → logprob: -11.000886917114258
    5. '```' → logprob: -13.500886917114258
    6. '	r' → logprob: -14.125886917114258
    7. '_r' → logprob: -14.500886917114258
    8. '       ' → logprob: -14.625886917114258
    9. ',' → logprob: -14.625886917114258
    10. 'rr' → logprob: -14.938386917114258

Token 1533: '"' (ID: 1)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09524545818567276
    2. ',
' → logprob: -2.845245361328125
    3. '           ' → logprob: -3.595245361328125
    4. ')' → logprob: -5.845245361328125
    5. '+' → logprob: -7.345245361328125
    6. '),' → logprob: -7.470245361328125
    7. ' ,' → logprob: -8.345245361328125
    8. '       ' → logprob: -8.720245361328125
    9. '		' → logprob: -8.970245361328125
    10. ',q' → logprob: -9.345245361328125

Token 1534: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33495455980300903
    2. '           ' → logprob: -1.7099545001983643
    3. ',
' → logprob: -3.0849545001983643
    4. ',q' → logprob: -4.334954738616943
    5. 'q' → logprob: -4.584954738616943
    6. '#' → logprob: -4.959954738616943
    7. 'if' → logprob: -5.334954738616943
    8. '```' → logprob: -5.459954738616943
    9. ' if' → logprob: -5.584954738616943
    10. '            
' → logprob: -6.459954738616943

Token 1535: ' le' (ID: 505)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5171089172363281
    2. '(r' → logprob: -1.7671089172363281
    3. 'cc' → logprob: -2.392108917236328
    4. '(c' → logprob: -2.642108917236328
    5. '(cc' → logprob: -3.517108917236328
    6. 'cost' → logprob: -4.267108917236328
    7. ' (' → logprob: -4.642108917236328
    8. '(cost' → logprob: -4.767108917236328
    9. 'min' → logprob: -6.017108917236328
    10. ' c' → logprob: -6.517108917236328

Token 1536: ' nouveau' (ID: 23184)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.46250900626182556
    2. 'cost' → logprob: -1.337509036064148
    3. 'cc' → logprob: -2.9625089168548584
    4. '(cost' → logprob: -4.0875091552734375
    5. 'min' → logprob: -4.5875091552734375
    6. '(c' → logprob: -4.9625091552734375
    7. 'co' → logprob: -5.2125091552734375
    8. '(cc' → logprob: -5.3375091552734375
    9. 'minimum' → logprob: -5.7125091552734375
    10. 'new' → logprob: -5.7125091552734375

Token 1537: ' coût' (ID: 73109)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2800341844558716
    2. '(cost' → logprob: -2.405034065246582
    3. 'cost' → logprob: -3.030034065246582
    4. '(' → logprob: -3.030034065246582
    5. '(r' → logprob: -4.030034065246582
    6. ' ,' → logprob: -4.405034065246582
    7. ' (' → logprob: -5.280034065246582
    8. 'token' → logprob: -5.780034065246582
    9. 'c' → logprob: -5.780034065246582
    10. '(c' → logprob: -6.030034065246582

Token 1538: '
' (ID: 198)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.2063281536102295
    2. '(q' → logprob: -1.8313281536102295
    3. 'q' → logprob: -2.2063281536102295
    4. '(' → logprob: -2.2063281536102295
    5. '(r' → logprob: -2.2063281536102295
    6. ',' → logprob: -2.4563281536102295
    7. '           ' → logprob: -2.7063281536102295
    8. ' =' → logprob: -4.456328392028809
    9. '=' → logprob: -4.456328392028809
    10. ')' → logprob: -4.831328392028809

Token 1539: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39164718985557556
    2. ' (' → logprob: -1.891647219657898
    3. ' if' → logprob: -2.8916471004486084
    4. ',' → logprob: -3.6416471004486084
    5. ' =' → logprob: -4.0166473388671875
    6. 'if' → logprob: -4.1416473388671875
    7. 'q' → logprob: -4.6416473388671875
    8. '(' → logprob: -4.6416473388671875
    9. ' q' → logprob: -4.8916473388671875
    10. '   ' → logprob: -5.2666473388671875

Token 1540: ' t' (ID: 260)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(q' → logprob: -1.4812852144241333
    2. 'if' → logprob: -1.7312852144241333
    3. 'new' → logprob: -2.1062850952148438
    4. 'q' → logprob: -2.2312850952148438
    5. '(' → logprob: -2.7312850952148438
    6. '(r' → logprob: -2.8562850952148438
    7. '(n' → logprob: -2.8562850952148438
    8. 'qi' → logprob: -3.3562850952148438
    9. '(t' → logprob: -3.8562850952148438
    10. '(new' → logprob: -3.9812850952148438

Token 1541: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5236804485321045
    2. '=' → logprob: -0.8986804485321045
    3. '=(' → logprob: -9.148680686950684
    4. 'oken' → logprob: -9.273680686950684
    5. 'r' → logprob: -9.648680686950684
    6. ',' → logprob: -10.148680686950684
    7. 'p' → logprob: -10.398680686950684
    8. '_' → logprob: -10.523680686950684
    9. 'ok' → logprob: -10.523680686950684
    10. 't' → logprob: -10.648680686950684

Token 1542: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0001843485952122137
    2. ' (' → logprob: -9.000184059143066
    3. '(rr' → logprob: -10.875184059143066
    4. '   ' → logprob: -11.250184059143066
    5. 'r' → logprob: -11.750184059143066
    6. '(' → logprob: -12.000184059143066
    7. '(cc' → logprob: -12.625184059143066
    8. '(c' → logprob: -12.750184059143066
    9. '((' → logprob: -13.125184059143066
    10. 'cc' → logprob: -13.250184059143066

Token 1543: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.771655115589965e-05
    2. '(r' → logprob: -11.000018119812012
    3. ' r' → logprob: -14.250018119812012
    4. '   ' → logprob: -15.375018119812012
    5. '[r' → logprob: -17.875017166137695
    6. ')' → logprob: -18.000017166137695
    7. '	r' → logprob: -18.000017166137695
    8. '_r' → logprob: -19.250017166137695
    9. ' (' → logprob: -20.250017166137695
    10. 'rr' → logprob: -20.625017166137695

Token 1544: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021512117236852646
    2. ',t' → logprob: -7.002151012420654
    3. ',c' → logprob: -7.127151012420654
    4. ',
' → logprob: -9.127151489257812
    5. ' ,' → logprob: -9.377151489257812
    6. ',(' → logprob: -10.002151489257812
    7. ',q' → logprob: -10.252151489257812
    8. ',),' → logprob: -10.377151489257812
    9. ',r' → logprob: -10.627151489257812
    10. '),' → logprob: -11.127151489257812

Token 1545: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.0018288150895386934
    2. 'c' → logprob: -7.001828670501709
    3. ' cc' → logprob: -7.126828670501709
    4. '(cc' → logprob: -9.876829147338867
    5. 'min' → logprob: -10.376829147338867
    6. ' c' → logprob: -12.126829147338867
    7. 'ccc' → logprob: -12.626829147338867
    8. '_cc' → logprob: -12.876829147338867
    9. '   ' → logprob: -13.001829147338867
    10. '	cc' → logprob: -13.126829147338867

Token 1546: ' +' (ID: 659)
  Prédit: '+c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.4028490483760834
    2. '+' → logprob: -1.1528490781784058
    3. ' +' → logprob: -4.152849197387695
    4. '+t' → logprob: -10.027849197387695
    5. '+
' → logprob: -10.527849197387695
    6. '+r' → logprob: -10.777849197387695
    7. ')' → logprob: -11.027849197387695
    8. '+)' → logprob: -11.902849197387695
    9. '+C' → logprob: -12.027849197387695
    10. ')+' → logprob: -12.402849197387695

Token 1547: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.931863051955588e-05
    2. ' c' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.500059127807617
    4. '	c' → logprob: -15.750059127807617
    5. ')c' → logprob: -16.250059127807617
    6. ' ' → logprob: -16.750059127807617
    7. 'int' → logprob: -17.125059127807617
    8. '1' → logprob: -17.125059127807617
    9. '  ' → logprob: -17.500059127807617
    10. '$c' → logprob: -17.625059127807617

Token 1548: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.803360495017841e-05
    2. ')
' → logprob: -9.500078201293945
    3. ' )' → logprob: -13.000078201293945
    4. ')
' → logprob: -15.000078201293945
    5. ')

' → logprob: -15.750078201293945
    6. '),' → logprob: -16.250078201293945
    7. ')`' → logprob: -16.250078201293945
    8. ')#' → logprob: -16.375078201293945
    9. ');' → logprob: -16.750078201293945
    10. '   ' → logprob: -17.500078201293945

Token 1549: '           ' (ID: 352)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2383787631988525
    2. '           ' → logprob: -1.4883787631988525
    3. 'if' → logprob: -1.8633787631988525
    4. '
' → logprob: -2.3633787631988525
    5. '       ' → logprob: -2.8633787631988525
    6. ',
' → logprob: -3.2383787631988525
    7. ')' → logprob: -3.4883787631988525
    8. '   ' → logprob: -3.9883787631988525
    9. ' if' → logprob: -3.9883787631988525
    10. '```' → logprob: -4.238378524780273

Token 1550: ' #' (ID: 1069)
  Prédit: 'qi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qi' → logprob: -0.29481324553489685
    2. '           ' → logprob: -1.7948132753372192
    3. 'q' → logprob: -3.5448131561279297
    4. 'while' → logprob: -3.7948131561279297
    5. 'if' → logprob: -3.9198131561279297
    6. 'j' → logprob: -4.91981315612793
    7. 'idx' → logprob: -5.79481315612793
    8. 'qt' → logprob: -6.41981315612793
    9. 'ql' → logprob: -6.79481315612793
    10. ' qi' → logprob: -7.41981315612793

Token 1551: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10368115454912186
    2. 'while' → logprob: -2.6036810874938965
    3. 'qi' → logprob: -4.8536810874938965
    4. 'j' → logprob: -5.2286810874938965
    5. 'q' → logprob: -5.6036810874938965
    6. 'pos' → logprob: -5.9786810874938965
    7. 'idx' → logprob: -6.2286810874938965
    8. '#' → logprob: -6.9786810874938965
    9. 'x' → logprob: -7.3536810874938965
    10. '       ' → logprob: -7.9786810874938965

Token 1552: ' recherche' (ID: 24975)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1478564441204071
    2. 'if' → logprob: -2.7728564739227295
    3. ' while' → logprob: -3.1478564739227295
    4. '#' → logprob: -4.77285623550415
    5. 'j' → logprob: -4.77285623550415
    6. 'qi' → logprob: -5.14785623550415
    7. 'q' → logprob: -6.64785623550415
    8. ' if' → logprob: -6.64785623550415
    9. '
' → logprob: -6.89785623550415
    10. 'x' → logprob: -7.14785623550415

Token 1553: ' où' (ID: 15113)
  Prédit: 'qi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qi' → logprob: -1.1185986995697021
    2. 'pos' → logprob: -1.2435986995697021
    3. 'bis' → logprob: -1.3685986995697021
    4. 'idx' → logprob: -2.868598699569702
    5. 'q' → logprob: -3.868598699569702
    6. ' qi' → logprob: -4.368598937988281
    7. 'j' → logprob: -4.618598937988281
    8. '(q' → logprob: -5.618598937988281
    9. '   ' → logprob: -5.743598937988281
    10. ' bis' → logprob: -5.868598937988281

Token 1554: ' ins' (ID: 2215)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5628539323806763
    2. 'bis' → logprob: -1.0628539323806763
    3. 'idx' → logprob: -2.6878538131713867
    4. 'qi' → logprob: -5.437853813171387
    5. 'ind' → logprob: -5.812853813171387
    6. 'q' → logprob: -5.937853813171387
    7. ' bis' → logprob: -6.687853813171387
    8. 'index' → logprob: -6.687853813171387
    9. ' pos' → logprob: -7.062853813171387
    10. ' idx' → logprob: -8.187853813171387

Token 1555: 'érer' (ID: 29097)
  Prédit: 'ert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ert' → logprob: -0.28792804479599
    2. 'sert' → logprob: -1.6629281044006348
    3. 't' → logprob: -3.2879281044006348
    4. 'er' → logprob: -4.037928104400635
    5. 's' → logprob: -5.662928104400635
    6. 'bis' → logprob: -7.412928104400635
    7. 'ser' → logprob: -7.537928104400635
    8. 'ort' → logprob: -8.037927627563477
    9. '```' → logprob: -8.037927627563477
    10. '   ' → logprob: -9.662927627563477

Token 1556: ' ce' (ID: 2357)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.07401704788208008
    2. ' q' → logprob: -2.82401704788208
    3. 'qi' → logprob: -5.69901704788208
    4. 'idx' → logprob: -6.19901704788208
    5. 'bis' → logprob: -6.32401704788208
    6. 'pos' → logprob: -6.44901704788208
    7. ' qi' → logprob: -6.94901704788208
    8. 't' → logprob: -7.44901704788208
    9. '(q' → logprob: -7.69901704788208
    10. ' bis' → logprob: -7.69901704788208

Token 1557: ' nouveau' (ID: 23184)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0022103239316493273
    2. '(t' → logprob: -7.5022101402282715
    3. ' (' → logprob: -7.5022101402282715
    4. ' t' → logprob: -7.6272101402282715
    5. 'r' → logprob: -8.50221061706543
    6. 'token' → logprob: -8.50221061706543
    7. ')' → logprob: -9.37721061706543
    8. '(' → logprob: -9.50221061706543
    9. 'q' → logprob: -11.75221061706543
    10. ',' → logprob: -11.75221061706543

Token 1558: ' tuple' (ID: 31311)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.02433251217007637
    2. 'token' → logprob: -3.7743325233459473
    3. 'r' → logprob: -7.899332523345947
    4. ' token' → logprob: -8.274332046508789
    5. ' t' → logprob: -9.024332046508789
    6. 'position' → logprob: -9.399332046508789
    7. 'ti' → logprob: -10.024332046508789
    8. 'pos' → logprob: -10.149332046508789
    9. 'point' → logprob: -10.274332046508789
    10. 'élé' → logprob: -10.399332046508789

Token 1559: ' (' (ID: 350)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.46405020356178284
    2. ',q' → logprob: -2.33905029296875
    3. ',' → logprob: -2.46405029296875
    4. '(q' → logprob: -2.71405029296875
    5. ')' → logprob: -3.58905029296875
    6. 'in' → logprob: -3.58905029296875
    7. ' in' → logprob: -3.71405029296875
    8. ' q' → logprob: -3.83905029296875
    9. 't' → logprob: -4.46405029296875
    10. ' =' → logprob: -6.08905029296875

Token 1560: 'r' (ID: 81)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.002723917830735445
    2. 'q' → logprob: -6.002723693847656
    3. 'r' → logprob: -8.502723693847656
    4. ' t' → logprob: -10.252723693847656
    5. ')' → logprob: -12.502723693847656
    6. '   ' → logprob: -13.627723693847656
    7. ')t' → logprob: -13.627723693847656
    8. '`t' → logprob: -14.252723693847656
    9. '	t' → logprob: -14.627723693847656
    10. '(t' → logprob: -14.877723693847656

Token 1561: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005381396040320396
    2. ',t' → logprob: -8.250537872314453
    3. ')' → logprob: -8.875537872314453
    4. 't' → logprob: -10.125537872314453
    5. ',
' → logprob: -10.250537872314453
    6. ',)' → logprob: -10.875537872314453
    7. ',q' → logprob: -11.000537872314453
    8. ' ,' → logprob: -11.250537872314453
    9. '           ' → logprob: -12.750537872314453
    10. 'q' → logprob: -13.125537872314453

Token 1562: ' nouveau' (ID: 23184)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0017058902885764837
    2. ' t' → logprob: -6.376706123352051
    3. ')' → logprob: -13.50170612335205
    4. ')t' → logprob: -13.75170612335205
    5. '(t' → logprob: -15.25170612335205
    6. ' ' → logprob: -15.62670612335205
    7. '	t' → logprob: -15.87670612335205
    8. '`t' → logprob: -16.626705169677734
    9. '    ' → logprob: -16.751705169677734
    10. '0' → logprob: -16.751705169677734

Token 1563: ' coût' (ID: 73109)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.02056664600968361
    2. ',' → logprob: -4.145566463470459
    3. 'cost' → logprob: -6.395566463470459
    4. 'co' → logprob: -6.645566463470459
    5. ' t' → logprob: -7.645566463470459
    6. 'cout' → logprob: -8.020566940307617
    7. ')' → logprob: -8.020566940307617
    8. 'c' → logprob: -9.270566940307617
    9. ' coût' → logprob: -9.645566940307617
    10. ',t' → logprob: -9.645566940307617

Token 1564: ' total' (ID: 3609)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029692860320210457
    2. ',' → logprob: -3.6546928882598877
    3. 't' → logprob: -6.654692649841309
    4. ')
' → logprob: -7.279692649841309
    5. 'dans' → logprob: -7.404692649841309
    6. ' dans' → logprob: -7.654692649841309
    7. ',t' → logprob: -9.654692649841309
    8. ')t' → logprob: -9.654692649841309
    9. ',q' → logprob: -9.904692649841309
    10. ' )' → logprob: -10.279692649841309

Token 1565: ' obtenu' (ID: 117330)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009893616661429405
    2. ',' → logprob: -4.759893417358398
    3. ')
' → logprob: -7.384893417358398
    4. 't' → logprob: -8.009893417358398
    5. '),' → logprob: -9.009893417358398
    6. ' dans' → logprob: -9.509893417358398
    7. 'dans' → logprob: -9.634893417358398
    8. ')t' → logprob: -10.884893417358398
    9. ')`' → logprob: -11.759893417358398
    10. ',t' → logprob: -12.134893417358398

Token 1566: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033143021166324615
    2. ',' → logprob: -3.5331430435180664
    3. ')
' → logprob: -6.158143043518066
    4. 't' → logprob: -7.033143043518066
    5. '),' → logprob: -9.283143043518066
    6. ')t' → logprob: -9.908143043518066
    7. 'dans' → logprob: -9.908143043518066
    8. ' dans' → logprob: -10.033143043518066
    9. ',t' → logprob: -10.158143043518066
    10. ',q' → logprob: -10.783143043518066

Token 1567: ' dans' (ID: 2671)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49793541431427
    2. 'q' → logprob: -1.74793541431427
    3. ',q' → logprob: -2.2479352951049805
    4. ')' → logprob: -2.8729352951049805
    5. 'in' → logprob: -3.8729352951049805
    6. ' in' → logprob: -4.3729352951049805
    7. '),' → logprob: -4.7479352951049805
    8. ' =' → logprob: -5.6229352951049805
    9. ',
' → logprob: -5.9979352951049805
    10. '=' → logprob: -6.1229352951049805

Token 1568: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.002806417876854539
    2. ' q' → logprob: -5.877806186676025
    3. '	q' → logprob: -14.252806663513184
    4. '(q' → logprob: -14.377806663513184
    5. 't' → logprob: -15.752806663513184
    6. ')' → logprob: -17.252805709838867
    7. '#' → logprob: -17.252805709838867
    8. 'ql' → logprob: -17.877805709838867
    9. 'the' → logprob: -18.002805709838867
    10. '[q' → logprob: -18.002805709838867

Token 1569: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9506867527961731
    2. '(q' → logprob: -1.2006866931915283
    3. 'q' → logprob: -2.3256866931915283
    4. ',q' → logprob: -2.5756866931915283
    5. ')' → logprob: -2.9506866931915283
    6. '=' → logprob: -3.5756866931915283
    7. ' =' → logprob: -3.9506866931915283
    8. '_q' → logprob: -4.450686931610107
    9. '=q' → logprob: -4.700686931610107
    10. '[q' → logprob: -5.200686931610107

Token 1570: '           ' (ID: 352)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5716862678527832
    2. ',q' → logprob: -1.8216862678527832
    3. ')' → logprob: -1.9466862678527832
    4. '(q' → logprob: -2.696686267852783
    5. 'q' → logprob: -3.321686267852783
    6. '),' → logprob: -4.946686267852783
    7. '           ' → logprob: -5.071686267852783
    8. ' =' → logprob: -6.196686267852783
    9. '[q' → logprob: -6.196686267852783
    10. 'bis' → logprob: -6.321686267852783

Token 1571: ' ti' (ID: 2919)
  Prédit: 'qi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qi' → logprob: -0.8014527559280396
    2. 'pos' → logprob: -1.0514527559280396
    3. 'j' → logprob: -2.42645263671875
    4. 'q' → logprob: -3.05145263671875
    5. 'idx' → logprob: -3.67645263671875
    6. 'p' → logprob: -4.17645263671875
    7. 'pi' → logprob: -4.42645263671875
    8. 'k' → logprob: -5.42645263671875
    9. 'qp' → logprob: -6.42645263671875
    10. 'ti' (adapté à ' ti') → logprob: -6.80145263671875

Token 1572: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132988214492798
    2. ' =' → logprob: -1.3132988214492798
    3. 'i' → logprob: -10.563299179077148
    4. 'q' → logprob: -12.438299179077148
    5. '=i' → logprob: -13.313299179077148
    6. ' ' → logprob: -13.813299179077148
    7. '=q' → logprob: -14.438299179077148
    8. '=_' → logprob: -14.563299179077148
    9. 'x' → logprob: -14.813299179077148
    10. '=
' → logprob: -14.813299179077148

Token 1573: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.0013270224444568157
    2. ' bis' → logprob: -6.626327037811279
    3. 'b' → logprob: -14.001326560974121
    4. 'len' → logprob: -15.251326560974121
    5. '	b' → logprob: -17.501327514648438
    6. '```' → logprob: -17.626327514648438
    7. '   ' → logprob: -17.751327514648438
    8. 'bs' → logprob: -18.001327514648438
    9. '0' → logprob: -18.001327514648438
    10. 'Bis' → logprob: -19.001327514648438

Token 1574: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -7.896309739408025e-07
    2. 'sect' → logprob: -14.625000953674316
    3. 'ct' → logprob: -15.375000953674316
    4. 'e' → logprob: -16.875
    5. 'ectl' → logprob: -18.5
    6. 'ects' → logprob: -18.875
    7. 'ext' → logprob: -19.5
    8. '
' → logprob: -19.625
    9. 'ект' → logprob: -19.75
    10. '```' → logprob: -19.75

Token 1575: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.000591278774663806
    2. '.' → logprob: -7.875591278076172
    3. '.q' → logprob: -8.875591278076172
    4. '_left' → logprob: -10.375591278076172
    5. '.ins' → logprob: -10.375591278076172
    6. '.t' → logprob: -12.625591278076172
    7. '_right' → logprob: -13.875591278076172
    8. '._' → logprob: -14.000591278076172
    9. ' bis' → logprob: -14.250591278076172
    10. 'bis' → logprob: -14.375591278076172

Token 1576: 'is' (ID: 276)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.007967393845319748
    2. 'sect' → logprob: -5.132967472076416
    3. 'is' → logprob: -6.257967472076416
    4. 'bis' → logprob: -9.382966995239258
    5. 's' → logprob: -11.132966995239258
    6. 't' → logprob: -11.632966995239258
    7. '```' → logprob: -12.632966995239258
    8. 'sec' → logprob: -13.007966995239258
    9. 'ct' → logprob: -13.382966995239258
    10. 'left' → logprob: -13.507966995239258

Token 1577: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.4855663721391466e-05
    2. 'sect' → logprob: -11.500015258789062
    3. 't' → logprob: -13.000015258789062
    4. 'ct' → logprob: -13.125015258789062
    5. '_left' → logprob: -15.125015258789062
    6. '```' → logprob: -17.125015258789062
    7. 'ects' → logprob: -17.625015258789062
    8. 'left' → logprob: -18.125015258789062
    9. 'q' → logprob: -18.250015258789062
    10. 'с' → logprob: -18.625015258789062

Token 1578: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.0023203452583402395
    2. '_right' → logprob: -6.502320289611816
    3. 'q' → logprob: -8.127320289611816
    4. '(q' → logprob: -8.252320289611816
    5. '.ins' → logprob: -8.627320289611816
    6. 'left' → logprob: -10.127320289611816
    7. '.q' → logprob: -11.002320289611816
    8. '.b' → logprob: -11.252320289611816
    9. 'ins' → logprob: -12.002320289611816
    10. 'Left' → logprob: -13.502320289611816

Token 1579: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: 0.0
    2. 'q' → logprob: -17.75
    3. '(' → logprob: -18.5
    4. '(
' → logprob: -19.125
    5. '```' → logprob: -19.625
    6. '[q' → logprob: -19.75
    7. ' (' → logprob: -20.5
    8. '	q' → logprob: -21.125
    9. '(qu' → logprob: -21.5
    10. '   ' → logprob: -21.875

Token 1580: ',' (ID: 11)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.002075432799756527
    2. ',' → logprob: -6.2520751953125
    3. '(t' → logprob: -9.5020751953125
    4. ',q' → logprob: -9.6270751953125
    5. 'q' → logprob: -13.0020751953125
    6. '(' → logprob: -13.3770751953125
    7. ')' → logprob: -14.0020751953125
    8. ' (' → logprob: -14.2520751953125
    9. '(
' → logprob: -15.7520751953125
    10. 't' → logprob: -16.2520751953125

Token 1581: ' t' (ID: 260)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.17965847253799438
    2. '(q' → logprob: -2.4296584129333496
    3. '(t' → logprob: -3.0546584129333496
    4. 't' → logprob: -3.5546584129333496
    5. ' q' → logprob: -7.42965841293335
    6. ')' → logprob: -10.804658889770508
    7. '(r' → logprob: -11.179658889770508
    8. ' t' → logprob: -11.804658889770508
    9. ' (' → logprob: -12.429658889770508
    10. '	q' → logprob: -12.429658889770508

Token 1582: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22571401298046112
    2. ')
' → logprob: -1.6007139682769775
    3. ')t' → logprob: -9.100713729858398
    4. ')
' → logprob: -9.475713729858398
    5. '   ' → logprob: -10.225713729858398
    6. '       ' → logprob: -10.850713729858398
    7. ',' → logprob: -10.975713729858398
    8. ')

' → logprob: -11.100713729858398
    9. ')#' → logprob: -11.600713729858398
    10. '```' → logprob: -13.100713729858398

Token 1583: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.37516260147094727
    2. '           ' → logprob: -1.5001626014709473
    3. '       ' → logprob: -2.8751626014709473
    4. ' if' → logprob: -3.7501626014709473
    5. '   ' → logprob: -6.500162601470947
    6. '#' → logprob: -6.500162601470947
    7. 'while' → logprob: -6.875162601470947
    8. '            
' → logprob: -6.875162601470947
    9. '
' → logprob: -7.125162601470947
    10. '        
' → logprob: -7.250162601470947

Token 1584: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0068420604802668095
    2. '           ' → logprob: -5.506842136383057
    3. 'while' → logprob: -6.631842136383057
    4. '#' (adapté à ' #') → logprob: -6.756842136383057
    5. ' if' → logprob: -8.381841659545898
    6. '```' → logprob: -11.131841659545898
    7. '            
' → logprob: -11.756841659545898
    8. 'q' → logprob: -11.756841659545898
    9. '       ' → logprob: -11.881841659545898
    10. 't' → logprob: -12.756841659545898

Token 1585: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003254527400713414
    2. 'while' → logprob: -8.250325202941895
    3. '#' → logprob: -9.750325202941895
    4. '           ' → logprob: -12.250325202941895
    5. ' if' → logprob: -14.750325202941895
    6. '   ' → logprob: -15.375325202941895
    7. '```' → logprob: -15.375325202941895
    8. '       ' → logprob: -16.62532615661621
    9. 'If' → logprob: -17.00032615661621
    10. '#if' → logprob: -17.12532615661621

Token 1586: ' à' (ID: 1221)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.0006320207612589002
    2. ' ti' → logprob: -7.375631809234619
    3. '	ti' → logprob: -13.250632286071777
    4. '   ' → logprob: -13.500632286071777
    5. '           ' → logprob: -14.000632286071777
    6. 'not' → logprob: -14.250632286071777
    7. 't' → logprob: -15.375632286071777
    8. ' not' → logprob: -15.750632286071777
    9. '#' → logprob: -15.875632286071777
    10. ' ' → logprob: -16.25063133239746

Token 1587: ' l' (ID: 305)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -1.5048530030981055e-06
    2. ' ti' → logprob: -13.625001907348633
    3. '	ti' → logprob: -15.750001907348633
    4. 't' → logprob: -16.250001907348633
    5. 'qi' → logprob: -17.875001907348633
    6. 'q' → logprob: -18.000001907348633
    7. '   ' → logprob: -18.625001907348633
    8. 'tii' → logprob: -19.250001907348633
    9. '```' → logprob: -19.250001907348633
    10. 'len' → logprob: -19.375001907348633

Token 1588: ''end' (ID: 133241)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.0004585518909152597
    2. ' ti' → logprob: -8.125458717346191
    3. 'i' → logprob: -10.000458717346191
    4. 'q' → logprob: -10.125458717346191
    5. '	ti' → logprob: -10.125458717346191
    6. 't' → logprob: -11.500458717346191
    7. '```' → logprob: -11.625458717346191
    8. '   ' → logprob: -12.625458717346191
    9. '[' → logprob: -12.875458717346191
    10. '`' → logprob: -13.125458717346191

Token 1589: 'roit' (ID: 22896)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -4.084206375409849e-05
    2. '	ti' → logprob: -10.750041007995605
    3. ' ti' → logprob: -11.375041007995605
    4. 'i' → logprob: -12.500041007995605
    5. '#' → logprob: -13.750041007995605
    6. 'e' → logprob: -13.875041007995605
    7. 't' → logprob: -14.125041007995605
    8. '
' → logprob: -14.875041007995605
    9. '```' → logprob: -14.875041007995605
    10. '0' → logprob: -16.50004005432129

Token 1590: ' où' (ID: 15113)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -7.135819760151207e-05
    2. ' ti' → logprob: -9.62507152557373
    3. '	ti' → logprob: -12.37507152557373
    4. '   ' → logprob: -14.75007152557373
    5. '#' → logprob: -15.37507152557373
    6. ' ' → logprob: -15.87507152557373
    7. '  ' → logprob: -16.250070571899414
    8. '           ' → logprob: -16.875070571899414
    9. '       ' → logprob: -17.000070571899414
    10. 'tii' → logprob: -17.500070571899414

Token 1591: ' on' (ID: 402)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.011053716763854027
    2. 't' → logprob: -4.511053562164307
    3. ' ti' → logprob: -12.761054039001465
    4. '	ti' → logprob: -13.636054039001465
    5. '           ' → logprob: -14.136054039001465
    6. 'tu' → logprob: -15.886054039001465
    7. 'qi' → logprob: -15.886054039001465
    8. '   ' → logprob: -16.01105308532715
    9. 'tii' → logprob: -16.01105308532715
    10. 'q' → logprob: -16.01105308532715

Token 1592: ' veut' (ID: 41653)
  Prédit: 'ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.3765171468257904
    2. 't' → logprob: -2.0015170574188232
    3. 'insert' → logprob: -2.5015170574188232
    4. 'ti' → logprob: -3.0015170574188232
    5. 've' → logprob: -3.1265170574188232
    6. 'veux' → logprob: -7.001517295837402
    7. 'in' → logprob: -7.126517295837402
    8. 'va' → logprob: -8.001517295837402
    9. '#' → logprob: -8.251517295837402
    10. 'aj' → logprob: -9.126517295837402

Token 1593: ' ins' (ID: 2215)
  Prédit: 'ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.03449933975934982
    2. 'in' → logprob: -4.159499168395996
    3. 'ti' → logprob: -4.409499168395996
    4. ' ins' → logprob: -5.784499168395996
    5. 'insert' → logprob: -6.034499168395996
    6. 't' → logprob: -8.034499168395996
    7. '   ' → logprob: -8.909499168395996
    8. '#' → logprob: -9.409499168395996
    9. 'aj' → logprob: -10.034499168395996
    10. 'l' → logprob: -11.034499168395996

Token 1594: 'érer' (ID: 29097)
  Prédit: 'ser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ser' → logprob: -0.4402126967906952
    2. 'sert' → logprob: -1.6902127265930176
    3. 'érer' → logprob: -2.3152127265930176
    4. '```' → logprob: -3.9402127265930176
    5. 'er' → logprob: -4.440212726593018
    6. 's' → logprob: -4.690212726593018
    7. '   ' → logprob: -4.690212726593018
    8. 'ert' → logprob: -4.940212726593018
    9. '
' → logprob: -5.690212726593018
    10. 't' → logprob: -5.940212726593018

Token 1595: ',' (ID: 11)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.005398457404226065
    2. 't' → logprob: -5.255398273468018
    3. ' ti' → logprob: -8.880398750305176
    4. 'q' → logprob: -11.255398750305176
    5. ' t' → logprob: -12.130398750305176
    6. '	ti' → logprob: -12.630398750305176
    7. '   ' → logprob: -13.380398750305176
    8. '(t' → logprob: -14.630398750305176
    9. 'qi' → logprob: -14.755398750305176
    10. '  ' → logprob: -15.005398750305176

Token 1596: ' le' (ID: 505)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.003217164659872651
    2. 'q' → logprob: -6.2532172203063965
    3. ' ti' → logprob: -6.8782172203063965
    4. 't' → logprob: -8.878216743469238
    5. 'len' → logprob: -9.378216743469238
    6. 'qi' → logprob: -11.003216743469238
    7. '	ti' → logprob: -12.003216743469238
    8. ' q' → logprob: -12.003216743469238
    9. '#' → logprob: -13.003216743469238
    10. ' len' → logprob: -14.128216743469238

Token 1597: ' coût' (ID: 73109)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.00038980069803074
    2. 't' → logprob: -7.875389575958252
    3. '#' → logprob: -12.12539005279541
    4. '	ti' → logprob: -13.50039005279541
    5. 'qi' → logprob: -13.75039005279541
    6. 'q' → logprob: -14.00039005279541
    7. ' ti' → logprob: -14.25039005279541
    8. 'if' → logprob: -16.625389099121094
    9. 'len' → logprob: -16.750389099121094
    10. 'tii' → logprob: -17.000389099121094

Token 1598: ' exist' (ID: 4310)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5008423328399658
    2. ' >' → logprob: -1.1258423328399658
    3. 't' → logprob: -3.375842332839966
    4. ' t' → logprob: -3.875842332839966
    5. ' is' → logprob: -5.750842094421387
    6. '           ' → logprob: -6.250842094421387
    7. 'is' → logprob: -6.750842094421387
    8. ' ==' → logprob: -7.000842094421387
    9. 's' → logprob: -7.125842094421387
    10. '(t' → logprob: -7.125842094421387

Token 1599: 'ant' (ID: 493)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9766885042190552
    2. '>' → logprob: -1.1016885042190552
    3. 'eur' → logprob: -2.6016883850097656
    4. 'est' → logprob: -3.3516883850097656
    5. 'e' → logprob: -3.4766883850097656
    6. ' est' → logprob: -3.7266883850097656
    7. ' >' → logprob: -4.351688385009766
    8. 'é' → logprob: -4.601688385009766
    9. '   ' → logprob: -4.726688385009766
    10. 'y' → logprob: -4.726688385009766

Token 1600: ' est' (ID: 893)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4551949203014374
    2. ' >' → logprob: -1.0801949501037598
    3. ' t' → logprob: -5.08019495010376
    4. 't' → logprob: -5.33019495010376
    5. ' is' → logprob: -5.83019495010376
    6. ' ' → logprob: -5.95519495010376
    7. '[' → logprob: -6.45519495010376
    8. '           ' → logprob: -6.70519495010376
    9. ' >=' → logprob: -7.45519495010376
    10. '>=' → logprob: -7.45519495010376

Token 1601: ' plus' (ID: 2932)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.011155937798321247
    2. ' >' → logprob: -4.88615608215332
    3. 'greater' → logprob: -6.26115608215332
    4. 't' → logprob: -7.01115608215332
    5. 'strict' → logprob: -8.63615608215332
    6. '>=' → logprob: -9.63615608215332
    7. 'ti' → logprob: -9.76115608215332
    8. ' greater' → logprob: -10.51115608215332
    9. 'larg' → logprob: -10.63615608215332
    10. '   ' → logprob: -10.63615608215332

Token 1602: ' élevé' (ID: 95488)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.9676135182380676
    2. '>' → logprob: -1.7176134586334229
    3. 'gr' → logprob: -2.217613458633423
    4. 'é' → logprob: -2.342613458633423
    5. ' élevé' → logprob: -2.342613458633423
    6. 'g' → logprob: -3.092613458633423
    7. ' >' → logprob: -3.967613458633423
    8. 't' → logprob: -4.217613697052002
    9. ' grand' → logprob: -4.217613697052002
    10. 'large' → logprob: -4.717613697052002

Token 1603: ',' (ID: 11)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.09747527539730072
    2. ' and' → logprob: -2.847475290298462
    3. 'or' → logprob: -4.347475051879883
    4. 'and' → logprob: -4.472475051879883
    5. '           ' → logprob: -5.097475051879883
    6. ' t' → logprob: -6.472475051879883
    7. '            ' → logprob: -7.222475051879883
    8. '               ' → logprob: -7.972475051879883
    9. '          ' → logprob: -8.097475051879883
    10. ' ' → logprob: -8.222475051879883

Token 1604: ' 
' (ID: 793)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'del' → logprob: -1.2267025709152222
    2. 'q' → logprob: -1.6017025709152222
    3. '               ' → logprob: -1.6017025709152222
    4. ' q' → logprob: -1.8517025709152222
    5. '           ' → logprob: -2.4767026901245117
    6. ':' → logprob: -3.9767026901245117
    7. ' del' → logprob: -4.226702690124512
    8. 't' → logprob: -4.601702690124512
    9. 'if' → logprob: -4.976702690124512
    10. '#' → logprob: -5.601702690124512

Token 1605: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5652310252189636
    2. '               ' → logprob: -0.9402310252189636
    3. ' q' → logprob: -3.8152310848236084
    4. '#' → logprob: -5.440230846405029
    5. 't' → logprob: -6.065230846405029
    6. 'q' → logprob: -6.190230846405029
    7. ':' → logprob: -6.440230846405029
    8. '       ' → logprob: -6.440230846405029
    9. ' t' → logprob: -6.565230846405029
    10. '                   ' → logprob: -6.815230846405029

Token 1606: ' #' (ID: 1069)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6413111090660095
    2. 't' → logprob: -1.8913111686706543
    3. ' q' → logprob: -2.2663111686706543
    4. 'if' → logprob: -2.5163111686706543
    5. '           ' → logprob: -2.8913111686706543
    6. '               ' → logprob: -3.8913111686706543
    7. 'ti' → logprob: -4.141311168670654
    8. '#' (adapté à ' #') → logprob: -4.516311168670654
    9. ':' → logprob: -4.641311168670654
    10. ' if' → logprob: -5.266311168670654

Token 1607: ' et' (ID: 859)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.12405939400196075
    2. ' q' → logprob: -2.3740594387054443
    3. 'del' → logprob: -4.499059200286865
    4. '           ' → logprob: -5.249059200286865
    5. 't' → logprob: -5.749059200286865
    6. ' del' → logprob: -6.624059200286865
    7. '               ' → logprob: -6.749059200286865
    8. '#' → logprob: -7.874059200286865
    9. ':' → logprob: -8.374059677124023
    10. 'ti' → logprob: -8.999059677124023

Token 1608: ' si' (ID: 1784)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9978346228599548
    2. '(q' → logprob: -0.9978346228599548
    3. '(t' → logprob: -1.4978346824645996
    4. 'q' → logprob: -4.2478346824646
    5. 'ti' → logprob: -4.7478346824646
    6. 't' → logprob: -5.1228346824646
    7. '(len' → logprob: -5.4978346824646
    8. ' q' → logprob: -6.2478346824646
    9. ' ti' → logprob: -6.4978346824646
    10. ' t' → logprob: -7.3728346824646

Token 1609: ' la' (ID: 557)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.4658503532409668
    2. ' ti' → logprob: -1.3408503532409668
    3. 't' → logprob: -3.215850353240967
    4. ' (' → logprob: -3.590850353240967
    5. '(t' → logprob: -4.090850353240967
    6. ' t' → logprob: -4.590850353240967
    7. '(q' → logprob: -5.215850353240967
    8. 'q' → logprob: -5.590850353240967
    9. ' q' → logprob: -5.840850353240967
    10. '(' → logprob: -6.215850353240967

Token 1610: ' plage' (ID: 78241)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.18477804958820343
    2. ' ti' → logprob: -2.4347779750823975
    3. 't' → logprob: -2.9347779750823975
    4. 'q' → logprob: -4.434778213500977
    5. ' t' → logprob: -5.309778213500977
    6. ' q' → logprob: -5.809778213500977
    7. 'len' → logprob: -6.184778213500977
    8. ' (' → logprob: -6.309778213500977
    9. '(t' → logprob: -6.559778213500977
    10. '(q' → logprob: -7.059778213500977

Token 1611: ' précédente' (ID: 177319)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.24020572006702423
    2. '[' → logprob: -2.490205764770508
    3. ' ti' → logprob: -2.865205764770508
    4. 't' → logprob: -3.615205764770508
    5. ')' → logprob: -5.240205764770508
    6. 'q' → logprob: -5.365205764770508
    7. ',' → logprob: -5.865205764770508
    8. ' <' → logprob: -5.865205764770508
    9. '#' → logprob: -5.865205764770508
    10. '           ' → logprob: -5.990205764770508

Token 1612: ' couvre' (ID: 137218)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.2797882854938507
    2. ' ti' → logprob: -1.6547882556915283
    3. '[' → logprob: -3.4047882556915283
    4. '	ti' → logprob: -4.654788494110107
    5. '>' → logprob: -5.279788494110107
    6. '==' → logprob: -7.404788494110107
    7. '   ' → logprob: -7.529788494110107
    8. '<' → logprob: -7.654788494110107
    9. ' ==' → logprob: -7.904788494110107
    10. '-ti' → logprob: -8.52978801727295

Token 1613: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1957168579101562
    2. 't' → logprob: -1.1957168579101562
    3. 'q' → logprob: -1.4457168579101562
    4. 'ti' → logprob: -1.9457168579101562
    5. 'l' → logprob: -5.070716857910156
    6. ')' → logprob: -5.195716857910156
    7. ' q' → logprob: -6.820716857910156
    8. '(r' → logprob: -7.570716857910156
    9. 'qi' → logprob: -7.570716857910156
    10. '   ' → logprob: -8.195716857910156

Token 1614: ' point' (ID: 2438)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.29727455973625183
    2. 't' → logprob: -1.4222745895385742
    3. 'ti' → logprob: -4.922274589538574
    4. 'l' → logprob: -5.547274589538574
    5. 'q' → logprob: -6.422274589538574
    6. ' r' → logprob: -6.672274589538574
    7. ' t' → logprob: -7.172274589538574
    8. 'position' → logprob: -7.797274589538574
    9. '```' → logprob: -8.547274589538574
    10. '`' → logprob: -9.547274589538574

Token 1615: ' de' (ID: 334)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.1364325284957886
    2. 'r' → logprob: -1.3864325284957886
    3. 'ti' → logprob: -1.3864325284957886
    4. 'q' → logprob: -2.011432647705078
    5. ')' → logprob: -4.261432647705078
    6. ',' → logprob: -5.261432647705078
    7. 'l' → logprob: -5.386432647705078
    8. ' ti' → logprob: -5.386432647705078
    9. '   ' → logprob: -5.886432647705078
    10. ' q' → logprob: -6.011432647705078

Token 1616: ' départ' (ID: 32693)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3084236681461334
    2. 't' → logprob: -1.933423638343811
    3. 'ti' → logprob: -3.1834237575531006
    4. 'l' → logprob: -3.3084237575531006
    5. 'vue' → logprob: -4.1834235191345215
    6. 'r' → logprob: -4.8084235191345215
    7. 'insert' → logprob: -5.4334235191345215
    8. 'q' → logprob: -5.6834235191345215
    9. 'pos' → logprob: -6.1834235191345215
    10. 'd' → logprob: -6.8084235191345215

Token 1617: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45178818702697754
    2. '+' → logprob: -2.7017881870269775
    3. ':' → logprob: -2.9517881870269775
    4. ' and' → logprob: -2.9517881870269775
    5. ')' → logprob: -3.2017881870269775
    6. 'and' → logprob: -3.8267881870269775
    7. ' et' → logprob: -3.9517881870269775
    8. 'ti' → logprob: -4.076787948608398
    9. ':
' → logprob: -4.201787948608398
    10. '   ' → logprob: -4.576787948608398

Token 1618: ' notre' (ID: 12092)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3519577383995056
    2. 'l' → logprob: -1.4769577980041504
    3. 'q' → logprob: -3.6019577980041504
    4. ' q' → logprob: -4.22695779800415
    5. 'r' → logprob: -4.47695779800415
    6. ' t' → logprob: -5.10195779800415
    7. ' l' → logprob: -5.47695779800415
    8. 'la' → logprob: -5.85195779800415
    9. ' la' → logprob: -6.60195779800415
    10. '`t' → logprob: -8.851957321166992

Token 1619: ' nouvel' (ID: 76298)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.019825609400868416
    2. 'position' → logprob: -4.644825458526611
    3. '```' → logprob: -5.644825458526611
    4. ' t' → logprob: -6.894825458526611
    5. 'interval' → logprob: -7.019825458526611
    6. 'q' → logprob: -7.144825458526611
    7. 'r' → logprob: -7.144825458526611
    8. 'n' → logprob: -8.26982593536377
    9. ' position' → logprob: -8.39482593536377
    10. ' q' → logprob: -8.39482593536377

Token 1620: ' interval' (ID: 17116)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4226774275302887
    2. 'tuple' → logprob: -1.6726773977279663
    3. 'token' → logprob: -2.547677516937256
    4. ' tuple' → logprob: -3.547677516937256
    5. ' t' → logprob: -3.922677516937256
    6. 'uple' → logprob: -4.547677516937256
    7. ' token' → logprob: -4.797677516937256
    8. 'tu' → logprob: -5.672677516937256
    9. 'interval' → logprob: -5.922677516937256
    10. '	t' → logprob: -6.547677516937256

Token 1621: 'le' (ID: 282)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2608907222747803
    2. ')' → logprob: -1.5108907222747803
    3. 't' → logprob: -1.5108907222747803
    4. 'v' → logprob: -3.2608907222747803
    5. 'ion' → logprob: -3.6358907222747803
    6. 'r' → logprob: -3.7608907222747803
    7. 'ce' → logprob: -3.8858907222747803
    8. 'ée' → logprob: -4.010890960693359
    9. '   ' → logprob: -4.135890960693359
    10. 'e' → logprob: -4.135890960693359

Token 1622: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1233993768692017
    2. ':
' → logprob: -1.3733993768692017
    3. ')' → logprob: -2.248399257659912
    4. ' and' → logprob: -2.498399257659912
    5. ' :
' → logprob: -2.498399257659912
    6. '):
' → logprob: -3.748399257659912
    7. '           ' → logprob: -3.873399257659912
    8. '==' → logprob: -3.998399257659912
    9. '[' → logprob: -4.123399257659912
    10. ',' → logprob: -4.373399257659912

Token 1623: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12615206837654114
    2. '           ' → logprob: -3.1261520385742188
    3. ':
' → logprob: -3.7511520385742188
    4. 'and' → logprob: -4.001152038574219
    5. ')' → logprob: -5.001152038574219
    6. ' or' → logprob: -5.001152038574219
    7. ':' → logprob: -5.126152038574219
    8. '               ' → logprob: -6.001152038574219
    9. ' :
' → logprob: -6.001152038574219
    10. '):
' → logprob: -6.126152038574219

Token 1624: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6271818280220032
    2. ' if' → logprob: -1.5021817684173584
    3. '           ' → logprob: -1.5021817684173584
    4. ' and' → logprob: -4.3771820068359375
    5. 'and' → logprob: -6.1271820068359375
    6. '       ' → logprob: -6.2521820068359375
    7. ' or' → logprob: -6.6271820068359375
    8. '               ' → logprob: -7.3771820068359375
    9. '   ' → logprob: -7.7521820068359375
    10. 'or' → logprob: -8.627182006835938

Token 1625: ' q' (ID: 2335)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.0016176922945305705
    2. ' ti' → logprob: -7.001617908477783
    3. 't' → logprob: -7.626617908477783
    4. '   ' → logprob: -8.751617431640625
    5. '	ti' → logprob: -11.126617431640625
    6. 'q' → logprob: -11.251617431640625
    7. '(t' → logprob: -11.876617431640625
    8. ' ' → logprob: -12.001617431640625
    9. 'not' → logprob: -12.376617431640625
    10. 'qi' → logprob: -12.751617431640625

Token 1626: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004552711732685566
    2. 'ti' → logprob: -5.504552841186523
    3. '   ' → logprob: -8.629552841186523
    4. ' ti' → logprob: -9.254552841186523
    5. '```' → logprob: -10.129552841186523
    6. '#' → logprob: -10.879552841186523
    7. '	ti' → logprob: -11.379552841186523
    8. '       ' → logprob: -11.504552841186523
    9. '==' → logprob: -11.629552841186523
    10. '           ' → logprob: -11.754552841186523

Token 1627: 'ti' (ID: 2832)
  Prédit: 'ti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.00021843716967850924
    2. 'qi' → logprob: -9.000218391418457
    3. ' ti' → logprob: -10.125218391418457
    4. '   ' → logprob: -10.375218391418457
    5. '	ti' → logprob: -11.875218391418457
    6. '
' → logprob: -13.250218391418457
    7. '-ti' → logprob: -13.375218391418457
    8. 't' → logprob: -13.625218391418457
    9. ' ' → logprob: -13.625218391418457
    10. '       ' → logprob: -13.625218391418457

Token 1628: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.13795018196105957
    2. '[' → logprob: -2.2629501819610596
    3. '>' → logprob: -4.8879499435424805
    4. '>[' → logprob: -5.2629499435424805
    5. ' ][' → logprob: -5.6379499435424805
    6. '   ' → logprob: -5.7629499435424805
    7. ']' → logprob: -6.6379499435424805
    8. '-' → logprob: -7.1379499435424805
    9. '```' → logprob: -7.3879499435424805
    10. ']>' → logprob: -7.8879499435424805

Token 1629: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007111206650733948
    2. '0' → logprob: -7.250710964202881
    3. '
' → logprob: -13.875711441040039
    4. '::-' → logprob: -16.50071144104004
    5. '-' → logprob: -17.12571144104004
    6. '   ' → logprob: -17.62571144104004
    7. '```' → logprob: -17.62571144104004
    8. '' → logprob: -17.75071144104004
    9. ' ' → logprob: -19.00071144104004
    10. '...' → logprob: -19.06321144104004

Token 1630: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.03042416274547577
    2. ' >' → logprob: -3.530424118041992
    3. ']' → logprob: -7.655424118041992
    4. ']>' → logprob: -8.780424118041992
    5. ' ' → logprob: -11.030424118041992
    6. '   ' → logprob: -12.155424118041992
    7. '">' → logprob: -12.655424118041992
    8. ':' → logprob: -12.905424118041992
    9. '()>' → logprob: -13.155424118041992
    10. ')' → logprob: -13.155424118041992

Token 1631: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.03805491328239441
    2. ' >' → logprob: -3.288054943084717
    3. '>=' → logprob: -12.288054466247559
    4. ' ' → logprob: -12.913054466247559
    5. '   ' → logprob: -13.163054466247559
    6. '>
' → logprob: -14.538054466247559
    7. '()>' → logprob: -14.663054466247559
    8. '>#' → logprob: -14.788054466247559
    9. ' >
' → logprob: -15.163054466247559
    10. '>
' → logprob: -15.288054466247559

Token 1632: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0038304757326841354
    2. 'cc' → logprob: -5.753830432891846
    3. ' t' → logprob: -7.503830432891846
    4. '   ' → logprob: -10.378830909729004
    5. 'tc' → logprob: -10.878830909729004
    6. '	t' → logprob: -11.753830909729004
    7. 'tt' → logprob: -11.878830909729004
    8. 'c' → logprob: -12.003830909729004
    9. '(t' → logprob: -12.128830909729004
    10. ' cc' → logprob: -12.503830909729004

Token 1633: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00034928982495330274
    2. ' [' → logprob: -8.375349044799805
    3. '1' → logprob: -9.125349044799805
    4. '```' → logprob: -12.750349044799805
    5. ' ' → logprob: -13.125349044799805
    6. '   ' → logprob: -13.750349044799805
    7. '[
' → logprob: -14.000349044799805
    8. '][' → logprob: -14.250349044799805
    9. '2' → logprob: -14.875349044799805
    10. ',' → logprob: -15.312849044799805

Token 1634: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. '
' → logprob: -13.750001907348633
    3. '   ' → logprob: -16.125001907348633
    4. '```' → logprob: -16.250001907348633
    5. '[' → logprob: -16.375001907348633
    6. '
' → logprob: -16.750001907348633
    7. ' ' → logprob: -17.000001907348633
    8. '۱' → logprob: -17.250001907348633
    9. '' → logprob: -17.375001907348633
    10. '	' → logprob: -18.187501907348633

Token 1635: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.009629647247493267
    2. 'and' → logprob: -4.884629726409912
    3. ')' → logprob: -6.259629726409912
    4. '):
' → logprob: -10.009629249572754
    5. ' or' → logprob: -11.009629249572754
    6. '           ' → logprob: -11.259629249572754
    7. ' ' → logprob: -11.634629249572754
    8. ' )' → logprob: -12.134629249572754
    9. ':
' → logprob: -12.134629249572754
    10. ':' → logprob: -12.384629249572754

Token 1636: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10053100436925888
    2. 'and' → logprob: -2.3505311012268066
    3. ' or' → logprob: -8.725530624389648
    4. ':
' → logprob: -9.475530624389648
    5. ':' → logprob: -10.350530624389648
    6. '   ' → logprob: -11.475530624389648
    7. '           ' → logprob: -11.600530624389648
    8. ' ' → logprob: -11.725530624389648
    9. 'or' → logprob: -11.975530624389648
    10. '	and' → logprob: -12.225530624389648

Token 1637: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.003496246412396431
    2. '(q' → logprob: -5.753496170043945
    3. 'ti' → logprob: -9.628496170043945
    4. '(' → logprob: -9.878496170043945
    5. '(t' → logprob: -10.003496170043945
    6. '(l' → logprob: -10.128496170043945
    7. ' q' → logprob: -10.128496170043945
    8. 'qi' → logprob: -10.628496170043945
    9. '   ' → logprob: -11.378496170043945
    10. '(i' → logprob: -11.628496170043945

Token 1638: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001138431136496365
    2. '[q' → logprob: -8.001138687133789
    3. '[-' → logprob: -8.376138687133789
    4. 'ti' → logprob: -8.376138687133789
    5. '[t' → logprob: -9.626138687133789
    6. '[max' → logprob: -9.626138687133789
    7. ' [' → logprob: -9.876138687133789
    8. ' ti' → logprob: -10.626138687133789
    9. 't' → logprob: -10.751138687133789
    10. '   ' → logprob: -10.876138687133789

Token 1639: 'ti' (ID: 2832)
  Prédit: 'ti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.0001170132018160075
    2. ' ti' → logprob: -10.250117301940918
    3. '   ' → logprob: -10.875117301940918
    4. '-ti' → logprob: -11.000117301940918
    5. '
' → logprob: -11.250117301940918
    6. 'qi' → logprob: -11.500117301940918
    7. '	ti' → logprob: -11.750117301940918
    8. ' ' → logprob: -12.500117301940918
    9. '-' → logprob: -13.125117301940918
    10. '  ' → logprob: -13.625117301940918

Token 1640: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.043995678424835205
    2. '][' → logprob: -3.6689956188201904
    3. '[' → logprob: -4.7939958572387695
    4. ' -' → logprob: -4.9189958572387695
    5. '   ' → logprob: -7.4189958572387695
    6. 'ti' → logprob: -8.16899585723877
    7. '==' → logprob: -8.41899585723877
    8. ' ][' → logprob: -8.66899585723877
    9. ' ' → logprob: -9.54399585723877
    10. '[-' → logprob: -10.10649585723877

Token 1641: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -12.125007629394531
    3. '0' → logprob: -14.125007629394531
    4. '   ' → logprob: -15.187507629394531
    5. ']' → logprob: -15.625007629394531
    6. '```' → logprob: -15.750007629394531
    7. '...' → logprob: -16.43750762939453
    8. '-' → logprob: -16.62500762939453
    9. '2' → logprob: -16.93750762939453
    10. '][' → logprob: -17.12500762939453

Token 1642: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.026464825496077538
    2. '[' → logprob: -3.6514649391174316
    3. '0' → logprob: -9.901464462280273
    4. ']' → logprob: -10.776464462280273
    5. ' ][' → logprob: -10.776464462280273
    6. '1' → logprob: -10.901464462280273
    7. ')[' → logprob: -11.401464462280273
    8. '```' → logprob: -12.276464462280273
    9. '   ' → logprob: -12.401464462280273
    10. '"][' → logprob: -12.401464462280273

Token 1643: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1875571544806007e-05
    2. '1' → logprob: -11.750011444091797
    3. '[' → logprob: -12.875011444091797
    4. ' ' → logprob: -13.875011444091797
    5. '
' → logprob: -16.500011444091797
    6. '(' → logprob: -17.125011444091797
    7. '۰' → logprob: -17.125011444091797
    8. '...' → logprob: -17.375011444091797
    9. '```' → logprob: -17.375011444091797
    10. '][' → logprob: -17.625011444091797

Token 1644: ']' (ID: 60)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6870930194854736
    2. ' >=' → logprob: -0.9370930194854736
    3. ']>=' → logprob: -2.8120930194854736
    4. ']' → logprob: -3.5620930194854736
    5. '<=' → logprob: -5.1870927810668945
    6. ' <=' → logprob: -5.1870927810668945
    7. '[' → logprob: -6.8120927810668945
    8. '>' → logprob: -6.8120927810668945
    9. ']<=' → logprob: -7.4370927810668945
    10. ')>=' → logprob: -7.8120927810668945

Token 1645: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5428006649017334
    2. '>=' → logprob: -1.1678006649017334
    3. ' <=' → logprob: -2.5428006649017334
    4. ' >=' → logprob: -3.5428006649017334
    5. '==' → logprob: -9.417800903320312
    6. '>' → logprob: -10.042800903320312
    7. 'r' → logprob: -10.292800903320312
    8. '[' → logprob: -10.792800903320312
    9. ' ' → logprob: -11.042800903320312
    10. 't' → logprob: -11.167800903320312

Token 1646: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5795708298683167
    2. 'l' → logprob: -1.4545707702636719
    3. 't' → logprob: -1.5795707702636719
    4. 'q' → logprob: -8.954570770263672
    5. '=' → logprob: -10.079570770263672
    6. '=r' → logprob: -10.829570770263672
    7. '=l' → logprob: -10.954570770263672
    8. ' r' → logprob: -11.079570770263672
    9. ' l' → logprob: -11.204570770263672
    10. ' t' → logprob: -11.454570770263672

Token 1647: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10446969419717789
    2. ':
' → logprob: -2.3544697761535645
    3. ' and' → logprob: -5.9794697761535645
    4. '):' → logprob: -7.3544697761535645
    5. '):
' → logprob: -7.7294697761535645
    6. ')' → logprob: -8.854469299316406
    7. '           ' → logprob: -8.979469299316406
    8. 'and' → logprob: -9.354469299316406
    9. ' :' → logprob: -9.354469299316406
    10. ' :
' → logprob: -10.479469299316406

Token 1648: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012216555187478662
    2. 'q' → logprob: -7.126221656799316
    3. ' q' → logprob: -8.626221656799316
    4. '           ' → logprob: -9.751221656799316
    5. '              ' → logprob: -10.376221656799316
    6. '	           ' → logprob: -10.876221656799316
    7. '```' → logprob: -11.001221656799316
    8. '                       ' → logprob: -11.001221656799316
    9. '                
' → logprob: -11.376221656799316
    10. '   ' → logprob: -11.376221656799316

Token 1649: ' #' (ID: 1069)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.013074349611997604
    2. '           ' → logprob: -5.3880743980407715
    3. 'while' → logprob: -5.3880743980407715
    4. '               ' → logprob: -6.2630743980407715
    5. ' q' → logprob: -6.3880743980407715
    6. '   ' → logprob: -9.388073921203613
    7. '```' → logprob: -9.888073921203613
    8. 'del' → logprob: -10.263073921203613
    9. ' while' → logprob: -10.263073921203613
    10. '#' (adapté à ' #') → logprob: -10.638073921203613

Token 1650: ' Si' (ID: 7832)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.003968097735196352
    2. 'while' → logprob: -5.628968238830566
    3. '               ' → logprob: -8.753968238830566
    4. '           ' → logprob: -9.253968238830566
    5. 'del' → logprob: -9.753968238830566
    6. '#' → logprob: -11.003968238830566
    7. ' q' → logprob: -11.128968238830566
    8. '   ' → logprob: -11.753968238830566
    9. '                   ' → logprob: -11.753968238830566
    10. '```' → logprob: -12.878968238830566

Token 1651: ' l' (ID: 305)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.07669156044721603
    2. 't' → logprob: -3.4516916275024414
    3. ' q' → logprob: -3.5766916275024414
    4. 'ti' → logprob: -4.701691627502441
    5. 'len' → logprob: -6.201691627502441
    6. '               ' → logprob: -6.451691627502441
    7. '                   ' → logprob: -7.451691627502441
    8. ' t' → logprob: -8.076691627502441
    9. 'qi' → logprob: -8.701691627502441
    10. ' ti' → logprob: -9.076691627502441

Token 1652: ''' (ID: 6)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1952158212661743
    2. '[' → logprob: -1.4452158212661743
    3. '                   ' → logprob: -1.8202158212661743
    4. '               ' → logprob: -1.9452158212661743
    5. '           ' → logprob: -2.4452157020568848
    6. ' q' → logprob: -4.320215702056885
    7. '[q' → logprob: -4.445215702056885
    8. '#' → logprob: -4.570215702056885
    9. '       ' → logprob: -5.195215702056885
    10. '=' → logprob: -5.570215702056885

Token 1653: 'interval' (ID: 37558)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.4857129156589508
    2. 't' → logprob: -1.3607128858566284
    3. 'ti' → logprob: -2.485713005065918
    4. ' q' → logprob: -4.110713005065918
    5. 'len' → logprob: -4.235713005065918
    6. ' ti' → logprob: -5.110713005065918
    7. ' t' → logprob: -5.735713005065918
    8. ' len' → logprob: -6.735713005065918
    9. 'en' → logprob: -6.985713005065918
    10. 'r' → logprob: -7.610713005065918

Token 1654: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8334187269210815
    2. '               ' → logprob: -0.9584187269210815
    3. '           ' → logprob: -2.958418846130371
    4. 't' → logprob: -3.083418846130371
    5. 'q' → logprob: -3.083418846130371
    6. '#' → logprob: -4.833418846130371
    7. '                   ' → logprob: -5.208418846130371
    8. 'ist' → logprob: -5.583418846130371
    9. 'val' → logprob: -5.833418846130371
    10. '       ' → logprob: -5.958418846130371

Token 1655: ' arriver' (ID: 78302)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24554744362831116
    2. '               ' → logprob: -2.8705475330352783
    3. 'q' → logprob: -2.9955475330352783
    4. '[t' → logprob: -3.2455475330352783
    5. 't' → logprob: -3.3705475330352783
    6. '[q' → logprob: -4.620547294616699
    7. '                   ' → logprob: -4.870547294616699
    8. 'ti' → logprob: -5.370547294616699
    9. ' q' → logprob: -5.620547294616699
    10. '           ' → logprob: -5.870547294616699

Token 1656: 'ait' (ID: 1271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1357884407043457
    2. 't' → logprob: -1.2607884407043457
    3. 'à' → logprob: -2.0107884407043457
    4. '           ' → logprob: -2.6357884407043457
    5. '               ' → logprob: -2.7607884407043457
    6. 'q' → logprob: -3.1357884407043457
    7. '          ' → logprob: -3.3857884407043457
    8. 'r' → logprob: -4.885788440704346
    9. '              ' → logprob: -4.885788440704346
    10. 'ait' → logprob: -4.885788440704346

Token 1657: ' exactement' (ID: 108701)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.22557158768177032
    2. 'à' → logprob: -2.725571632385254
    3. '                   ' → logprob: -3.475571632385254
    4. '               ' → logprob: -3.475571632385254
    5. ',' → logprob: -4.475571632385254
    6. ' ' → logprob: -4.850571632385254
    7. 't' → logprob: -5.100571632385254
    8. ')' → logprob: -5.100571632385254
    9. '           ' → logprob: -5.225571632385254
    10. '   ' → logprob: -5.225571632385254

Token 1658: ' en' (ID: 469)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.9260033965110779
    2. ' à' → logprob: -1.3010034561157227
    3. 't' → logprob: -2.3010034561157227
    4. '[' → logprob: -3.3010034561157227
    5. 'ti' → logprob: -3.3010034561157227
    6. '(t' → logprob: -3.9260034561157227
    7. '```' → logprob: -3.9260034561157227
    8. '           ' → logprob: -4.051003456115723
    9. ')' → logprob: -4.051003456115723
    10. ',' → logprob: -4.426003456115723

Token 1659: ' r' (ID: 428)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -1.0326521396636963
    2. 't' → logprob: -1.1576521396636963
    3. 'r' → logprob: -1.6576521396636963
    4. 'q' → logprob: -2.4076521396636963
    5. ' t' → logprob: -3.7826521396636963
    6. ' q' → logprob: -4.907651901245117
    7. 'qi' → logprob: -5.157651901245117
    8. ' ti' → logprob: -5.282651901245117
    9. ' r' → logprob: -5.782651901245117
    10. 'position' → logprob: -6.657651901245117

Token 1660: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5667032599449158
    2. 'and' → logprob: -2.4417033195495605
    3. '==' → logprob: -2.9417033195495605
    4. '                   ' → logprob: -2.9417033195495605
    5. ':' → logprob: -3.4417033195495605
    6. '[' → logprob: -3.4417033195495605
    7. ' ==' → logprob: -3.5667033195495605
    8. ')' → logprob: -3.6917033195495605
    9. '               ' → logprob: -3.6917033195495605
    10. ' or' → logprob: -4.1917033195495605

Token 1661: ' on' (ID: 402)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.45636844635009766
    2. ' del' → logprob: -1.8313684463500977
    3. ' q' → logprob: -2.9563684463500977
    4. 'ti' → logprob: -3.2063684463500977
    5. 'q' → logprob: -3.4563684463500977
    6. 'del' → logprob: -3.4563684463500977
    7. '               ' → logprob: -3.8313684463500977
    8. 'continue' → logprob: -4.581368446350098
    9. ' ti' → logprob: -4.956368446350098
    10. '                       ' → logprob: -6.081368446350098

Token 1662: ' le' (ID: 505)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.8096742033958435
    2. '                   ' → logprob: -0.9346742033958435
    3. 'q' → logprob: -3.1846742630004883
    4. '#' → logprob: -3.1846742630004883
    5. ' del' → logprob: -3.3096742630004883
    6. 'continue' → logprob: -4.184674263000488
    7. '               ' → logprob: -5.059674263000488
    8. 'pop' → logprob: -5.559674263000488
    9. ' q' → logprob: -5.684674263000488
    10. '                       ' → logprob: -6.434674263000488

Token 1663: ' met' (ID: 1421)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.232154130935669
    2. 'continue' → logprob: -1.232154130935669
    3. 'del' → logprob: -1.982154130935669
    4. 'insert' → logprob: -2.607154130935669
    5. '               ' → logprob: -3.357154130935669
    6. 'pop' → logprob: -3.482154130935669
    7. 'q' → logprob: -3.607154130935669
    8. '           ' → logprob: -3.982154130935669
    9. '#' → logprob: -3.982154130935669
    10. '```' → logprob: -4.48215389251709

Token 1664: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.1451461762189865
    2. ' à' → logprob: -4.020146369934082
    3. '                   ' → logprob: -4.020146369934082
    4. 't' → logprob: -4.145146369934082
    5. '               ' → logprob: -4.520146369934082
    6. 'in' → logprob: -4.645146369934082
    7. 'ti' → logprob: -4.770146369934082
    8. 'to' → logprob: -4.895146369934082
    9. 'insert' → logprob: -5.020146369934082
    10. 'dans' → logprob: -5.020146369934082

Token 1665: ' jour' (ID: 8379)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.004576680716127157
    2. 'q' → logprob: -6.254576683044434
    3. 'la' → logprob: -6.879576683044434
    4. 'l' → logprob: -7.629576683044434
    5. 'qi' → logprob: -7.629576683044434
    6. 'position' → logprob: -8.504576683044434
    7. 'qt' → logprob: -9.379576683044434
    8. 'r' → logprob: -9.879576683044434
    9. '```' → logprob: -10.504576683044434
    10. 't' → logprob: -10.629576683044434

Token 1666: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47511571645736694
    2. ':' → logprob: -2.1001157760620117
    3. '=' → logprob: -2.3501157760620117
    4. 'q' → logprob: -3.6001157760620117
    5. ' =' → logprob: -3.7251157760620117
    6. '               ' → logprob: -3.9751157760620117
    7. '                   ' → logprob: -3.9751157760620117
    8. '[q' → logprob: -4.100115776062012
    9. ':
' → logprob: -4.475115776062012
    10. ',' → logprob: -4.975115776062012

Token 1667: '               ' (ID: 506)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.40119269490242004
    2. 'q' → logprob: -2.4011926651000977
    3. '                   ' → logprob: -2.6511926651000977
    4. '               ' → logprob: -2.7761926651000977
    5. '[q' → logprob: -3.2761926651000977
    6. '=' → logprob: -3.7761926651000977
    7. ' =' → logprob: -4.151192665100098
    8. ':' → logprob: -5.026192665100098
    9. ' q' → logprob: -5.276192665100098
    10. ':
' → logprob: -5.776192665100098

Token 1668: ' if' (ID: 538)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.02756376937031746
    2. ' q' → logprob: -4.152563571929932
    3. '               ' → logprob: -5.277563571929932
    4. 'if' (adapté à ' if') → logprob: -5.652563571929932
    5. '                   ' → logprob: -6.277563571929932
    6. 'ti' → logprob: -7.777563571929932
    7. ' if' → logprob: -8.15256404876709
    8. '           ' → logprob: -9.90256404876709
    9. '                       ' → logprob: -10.27756404876709
    10. 't' → logprob: -10.40256404876709

Token 1669: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.019219355657696724
    2. 't' → logprob: -4.019219398498535
    3. 'ti' → logprob: -7.269219398498535
    4. 'r' → logprob: -8.644219398498535
    5. ' q' → logprob: -8.644219398498535
    6. ' t' → logprob: -12.394219398498535
    7. 'qi' → logprob: -12.769219398498535
    8. 'qt' → logprob: -13.019219398498535
    9. '`t' → logprob: -13.144219398498535
    10. '           ' → logprob: -13.144219398498535

Token 1670: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010688089241739362
    2. '```' → logprob: -10.375106811523438
    3. '               ' → logprob: -10.625106811523438
    4. '           ' → logprob: -10.875106811523438
    5. '   ' → logprob: -11.750106811523438
    6. '                   ' → logprob: -12.125106811523438
    7. ' [' → logprob: -12.375106811523438
    8. '==' → logprob: -12.750106811523438
    9. 'ti' → logprob: -13.375106811523438
    10. '`' → logprob: -13.500106811523438

Token 1671: 'ti' (ID: 2832)
  Prédit: 'ti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.00010032468708232045
    2. ' ti' → logprob: -9.625100135803223
    3. '	ti' → logprob: -11.500100135803223
    4. '   ' → logprob: -11.875100135803223
    5. '-ti' → logprob: -12.000100135803223
    6. 'qi' → logprob: -13.250100135803223
    7. 't' → logprob: -13.500100135803223
    8. '```' → logprob: -13.750100135803223
    9. '`' → logprob: -14.000100135803223
    10. 'tii' → logprob: -14.125100135803223

Token 1672: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.057350043207407
    2. '][' → logprob: -2.9323501586914062
    3. '```' → logprob: -7.057350158691406
    4. '   ' → logprob: -7.557350158691406
    5. ')[' → logprob: -8.057350158691406
    6. ']==' → logprob: -8.307350158691406
    7. '==' → logprob: -8.682350158691406
    8. '  ' → logprob: -10.432350158691406
    9. '#' → logprob: -10.557350158691406
    10. ' ][' → logprob: -10.682350158691406

Token 1673: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.9040898880339228e-05
    2. '1' → logprob: -10.625028610229492
    3. ' ' → logprob: -12.875028610229492
    4. '   ' → logprob: -14.000028610229492
    5. '```' → logprob: -14.937528610229492
    6. '
' → logprob: -15.250028610229492
    7. '[' → logprob: -15.750028610229492
    8. '  ' → logprob: -16.312528610229492
    9. '][' → logprob: -16.687528610229492
    10. '`' → logprob: -16.750028610229492

Token 1674: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.3660891652107239
    2. '==' → logprob: -1.366089105606079
    3. ']' → logprob: -3.616089105606079
    4. ')==' → logprob: -4.741089344024658
    5. ' ==' → logprob: -4.991089344024658
    6. '[' → logprob: -5.116089344024658
    7. ')' → logprob: -6.991089344024658
    8. '()==' → logprob: -7.241089344024658
    9. '']==' → logprob: -7.741089344024658
    10. '```' → logprob: -7.741089344024658

Token 1675: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.003320426447317004
    2. '>' → logprob: -6.378320217132568
    3. ' ==' → logprob: -6.503320217132568
    4. '>=' → logprob: -10.003320693969727
    5. '!=' → logprob: -10.003320693969727
    6. '=' → logprob: -11.128320693969727
    7. 'r' → logprob: -12.378320693969727
    8. '=r' → logprob: -13.253320693969727
    9. '==
' → logprob: -13.378320693969727
    10. '[' → logprob: -13.503320693969727

Token 1676: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.8889261304575484e-06
    2. ' r' → logprob: -12.625003814697266
    3. 't' → logprob: -14.625003814697266
    4. '	r' → logprob: -16.500003814697266
    5. '   ' → logprob: -17.625003814697266
    6. '_r' → logprob: -21.000003814697266
    7. ' ' → logprob: -21.625003814697266
    8. '' → logprob: -22.125003814697266
    9. '     ' → logprob: -22.250003814697266
    10. '    ' → logprob: -22.250003814697266

Token 1677: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22571827471256256
    2. ':
' → logprob: -1.7257182598114014
    3. '=' → logprob: -4.6007184982299805
    4. '                   ' → logprob: -5.3507184982299805
    5. '[' → logprob: -5.8507184982299805
    6. '==' → logprob: -6.2257184982299805
    7. 'and' → logprob: -6.4757184982299805
    8. ' and' → logprob: -6.9757184982299805
    9. ',' → logprob: -7.6007184982299805
    10. '):
' → logprob: -8.35071849822998

Token 1678: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07534170895814896
    2. 'q' → logprob: -2.9503417015075684
    3. ':' → logprob: -4.700341701507568
    4. ' q' → logprob: -5.575341701507568
    5. '=' → logprob: -6.450341701507568
    6. '=q' → logprob: -6.825341701507568
    7. ':
' → logprob: -6.950341701507568
    8. ' =' → logprob: -6.950341701507568
    9. ':q' → logprob: -6.950341701507568
    10. '[q' → logprob: -7.575341701507568

Token 1679: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.0005577972042374313
    2. ' q' → logprob: -8.000557899475098
    3. '                   ' → logprob: -8.500557899475098
    4. '                       ' → logprob: -11.750557899475098
    5. '```' → logprob: -12.750557899475098
    6. '(q' → logprob: -13.500557899475098
    7. '[q' → logprob: -13.750557899475098
    8. '	q' → logprob: -13.750557899475098
    9. '               ' → logprob: -14.125557899475098
    10. '=q' → logprob: -14.375557899475098

Token 1680: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006652565789408982
    2. '=' → logprob: -7.500665187835693
    3. '.pop' → logprob: -9.375665664672852
    4. 'pop' → logprob: -11.750665664672852
    5. '=[' → logprob: -11.875665664672852
    6. ' =' → logprob: -12.125665664672852
    7. '```' → logprob: -13.375665664672852
    8. '][' → logprob: -14.125665664672852
    9. '__' → logprob: -14.375665664672852
    10. '=
' → logprob: -14.875665664672852

Token 1681: 'ti' (ID: 2832)
  Prédit: 'ti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.000495605927426368
    2. '	ti' → logprob: -8.500495910644531
    3. 'tii' → logprob: -8.750495910644531
    4. '(' → logprob: -9.875495910644531
    5. '   ' → logprob: -10.750495910644531
    6. '1' → logprob: -11.000495910644531
    7. 'tti' → logprob: -11.750495910644531
    8. 'i' → logprob: -12.000495910644531
    9. '(t' → logprob: -12.125495910644531
    10. '(i' → logprob: -12.250495910644531

Token 1682: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8043869137763977
    2. ']=' → logprob: -1.429386854171753
    3. '=' → logprob: -1.804386854171753
    4. ']=(' → logprob: -2.679386854171753
    5. '][' → logprob: -2.804386854171753
    6. '[' → logprob: -4.179387092590332
    7. '=(' → logprob: -6.554387092590332
    8. ' =' → logprob: -7.304387092590332
    9. '   ' → logprob: -7.804387092590332
    10. '=[' → logprob: -8.179387092590332

Token 1683: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01607108674943447
    2. ' =' → logprob: -4.641071319580078
    3. '=q' → logprob: -5.266071319580078
    4. '=(' → logprob: -7.016071319580078
    5. '=t' → logprob: -8.516071319580078
    6. '=list' → logprob: -11.266071319580078
    7. '=min' → logprob: -11.891071319580078
    8. '=[' → logprob: -12.516071319580078
    9. '=s' → logprob: -13.891071319580078
    10. '=((' → logprob: -13.891071319580078

Token 1684: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.011268390342593193
    2. '(r' → logprob: -4.511268615722656
    3. ' t' → logprob: -9.511268615722656
    4. '(' → logprob: -9.636268615722656
    5. 'r' → logprob: -9.761268615722656
    6. ' (' → logprob: -11.261268615722656
    7. '(t' → logprob: -11.761268615722656
    8. '   ' → logprob: -13.636268615722656
    9. '(R' → logprob: -14.386268615722656
    10. '(q' → logprob: -15.886268615722656

Token 1685: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6373778581619263
    2. 'else' → logprob: -0.7623778581619263
    3. ' else' → logprob: -5.512377738952637
    4. '                   ' → logprob: -7.637377738952637
    5. 'elif' → logprob: -9.387377738952637
    6. 'continue' → logprob: -9.762377738952637
    7. '<|end|>' → logprob: -10.012377738952637
    8. '           ' → logprob: -10.387377738952637
    9. '			' → logprob: -12.137377738952637
    10. '                       ' → logprob: -12.637377738952637

Token 1686: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022355234250426292
    2. 'else' → logprob: -3.897355318069458
    3. '                   ' → logprob: -6.522355079650879
    4. ' else' → logprob: -8.397355079650879
    5. 'elif' → logprob: -10.397355079650879
    6. '			' → logprob: -10.522355079650879
    7. '           ' → logprob: -10.647355079650879
    8. '                ' → logprob: -11.522355079650879
    9. 'continue' → logprob: -12.147355079650879
    10. '```' → logprob: -12.647355079650879

Token 1687: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03808417171239853
    2. 'else' (adapté à ' else') → logprob: -3.2880842685699463
    3. ' else' → logprob: -10.538084030151367
    4. '			' → logprob: -11.413084030151367
    5. 'elif' → logprob: -13.038084030151367
    6. '                   ' → logprob: -13.538084030151367
    7. '           ' → logprob: -14.913084030151367
    8. '```' → logprob: -15.038084030151367
    9. 't' → logprob: -15.288084030151367
    10. '	else' → logprob: -16.038084030151367

Token 1688: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5368871092796326
    2. '                   ' → logprob: -1.0368871688842773
    3. ' q' → logprob: -3.0368871688842773
    4. 'q' → logprob: -5.411887168884277
    5. '                       ' → logprob: -5.911887168884277
    6. '   ' → logprob: -6.411887168884277
    7. '		           ' → logprob: -7.036887168884277
    8. '#' → logprob: -7.786887168884277
    9. '	           ' → logprob: -7.786887168884277
    10. '	q' → logprob: -8.161887168884277

Token 1689: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04845449700951576
    2. '                   ' → logprob: -3.173454523086548
    3. 'q' → logprob: -6.048454284667969
    4. ' q' → logprob: -6.173454284667969
    5. '                       ' → logprob: -7.923454284667969
    6. '   ' → logprob: -8.298454284667969
    7. '```' → logprob: -8.673454284667969
    8. '	           ' → logprob: -9.923454284667969
    9. '		           ' → logprob: -10.173454284667969
    10. '	q' → logprob: -10.548454284667969

Token 1690: ' #' (ID: 1069)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.007047702558338642
    2. ' q' → logprob: -5.007047653198242
    3. '           ' → logprob: -9.007047653198242
    4. '                   ' → logprob: -9.382047653198242
    5. '	q' → logprob: -9.882047653198242
    6. '```' → logprob: -10.257047653198242
    7. '               ' → logprob: -10.632047653198242
    8. '   ' → logprob: -11.757047653198242
    9. '`' → logprob: -13.507047653198242
    10. '                       ' → logprob: -13.632047653198242

Token 1691: ' Sinon' (ID: 154924)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.08966749906539917
    2. ' q' → logprob: -2.464667558670044
    3. '           ' → logprob: -7.839667320251465
    4. '                   ' → logprob: -9.089667320251465
    5. '```' → logprob: -9.464667320251465
    6. '               ' → logprob: -9.714667320251465
    7. '	q' → logprob: -9.964667320251465
    8. '#' → logprob: -11.839667320251465
    9. 'import' → logprob: -11.964667320251465
    10. '   ' → logprob: -12.214667320251465

Token 1692: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5884065628051758
    2. ' q' → logprob: -0.8384065628051758
    3. 'q' → logprob: -5.088406562805176
    4. '               ' → logprob: -5.963406562805176
    5. '                       ' → logprob: -5.963406562805176
    6. '   ' → logprob: -7.213406562805176
    7. ' insert' → logprob: -9.588406562805176
    8. '	q' → logprob: -9.838406562805176
    9. '           ' → logprob: -9.963406562805176
    10. 'insert' → logprob: -10.338406562805176

Token 1693: ' on' (ID: 402)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.3918507993221283
    2. ' q' → logprob: -1.1418508291244507
    3. '                   ' → logprob: -5.39185094833374
    4. '	q' → logprob: -8.891850471496582
    5. '               ' → logprob: -9.016850471496582
    6. '           ' → logprob: -9.516850471496582
    7. '   ' → logprob: -10.266850471496582
    8. '                       ' → logprob: -10.766850471496582
    9. '```' → logprob: -11.641850471496582
    10. '       ' → logprob: -12.391850471496582

Token 1694: ' ins' (ID: 2215)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.698115348815918
    2. 'insert' → logprob: -0.698115348815918
    3. '.insert' → logprob: -5.448115348815918
    4. ' q' → logprob: -8.198115348815918
    5. 'ins' → logprob: -8.198115348815918
    6. 'INSERT' → logprob: -10.573115348815918
    7. '_insert' → logprob: -10.948115348815918
    8. '                   ' → logprob: -11.573115348815918
    9. '```' → logprob: -11.698115348815918
    10. 'import' → logprob: -11.823115348815918

Token 1695: 'ère' (ID: 4346)
  Prédit: 'ert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ert' → logprob: -0.007220868952572346
    2. 'sert' → logprob: -5.00722074508667
    3. '```' → logprob: -8.257221221923828
    4. 'ort' → logprob: -9.757221221923828
    5. '``' → logprob: -9.757221221923828
    6. ' ert' → logprob: -10.007221221923828
    7. '#' → logprob: -11.007221221923828
    8. 'ерт' → logprob: -11.007221221923828
    9. '' → logprob: -11.757221221923828
    10. 'erti' → logprob: -12.007221221923828

Token 1696: ' le' (ID: 505)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.12209507077932358
    2. 't' → logprob: -2.3720951080322266
    3. ' q' → logprob: -4.247095108032227
    4. '                   ' → logprob: -5.747095108032227
    5. '(q' → logprob: -6.622095108032227
    6. '(t' → logprob: -6.997095108032227
    7. '           ' → logprob: -7.122095108032227
    8. '               ' → logprob: -7.497095108032227
    9. ' t' → logprob: -7.747095108032227
    10. '   ' → logprob: -10.247095108032227

Token 1697: ' nouvel' (ID: 76298)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.004361402243375778
    2. 'q' → logprob: -5.629361629486084
    3. 'token' → logprob: -7.629361629486084
    4. ' t' → logprob: -9.004361152648926
    5. ' q' → logprob: -9.754361152648926
    6. '                   ' → logprob: -11.004361152648926
    7. '(t' → logprob: -11.379361152648926
    8. 'new' → logprob: -11.629361152648926
    9. 'insert' → logprob: -11.879361152648926
    10. '```' → logprob: -12.004361152648926

Token 1698: ' interval' (ID: 17116)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.057553768157958984
    2. 'token' → logprob: -3.682553768157959
    3. ' t' → logprob: -3.807553768157959
    4. ' token' → logprob: -5.932553768157959
    5. 'tuple' → logprob: -6.182553768157959
    6. ' tuple' → logprob: -6.557553768157959
    7. '```' → logprob: -7.057553768157959
    8. '(t' → logprob: -8.307554244995117
    9. 'élé' → logprob: -8.682554244995117
    10. 'q' → logprob: -8.807554244995117

Token 1699: 'le' (ID: 282)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.9017284512519836
    2. 'val' → logprob: -1.6517283916473389
    3. 'ale' → logprob: -2.151728391647339
    4. 'q' → logprob: -2.526728391647339
    5. 'vale' → logprob: -2.776728391647339
    6. 't' → logprob: -3.401728391647339
    7. 'uple' → logprob: -4.276728630065918
    8. 'u' → logprob: -4.401728630065918
    9. '(t' → logprob: -4.526728630065918
    10. 'ule' → logprob: -4.651728630065918

Token 1700: ' à' (ID: 1221)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5203765034675598
    2. '                   ' → logprob: -1.645376443862915
    3. '(q' → logprob: -1.895376443862915
    4. ' q' → logprob: -3.395376443862915
    5. ',q' → logprob: -4.895376682281494
    6. ',' → logprob: -5.145376682281494
    7. '               ' → logprob: -5.770376682281494
    8. '```' → logprob: -5.895376682281494
    9. 'insert' → logprob: -6.395376682281494
    10. ')' → logprob: -6.770376682281494

Token 1701: ' la' (ID: 557)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -2.2007883671903983e-05
    2. '	ti' → logprob: -11.125021934509277
    3. ' ti' → logprob: -11.875021934509277
    4. 'qi' → logprob: -15.875021934509277
    5. 'tii' → logprob: -16.500022888183594
    6. '```' → logprob: -19.125022888183594
    7. '
' → logprob: -19.375022888183594
    8. '-ti' → logprob: -19.625022888183594
    9. 'fi' → logprob: -19.750022888183594
    10. 'tti' → logprob: -19.750022888183594

Token 1702: ' bonne' (ID: 24450)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -4.008129963040119e-06
    2. '	ti' → logprob: -12.625003814697266
    3. ' ti' → logprob: -15.500003814697266
    4. 'position' → logprob: -15.875003814697266
    5. '```' → logprob: -16.375003814697266
    6. 'ти' → logprob: -16.625003814697266
    7. 'i' → logprob: -17.000003814697266
    8. 'fi' → logprob: -17.125003814697266
    9. 'tii' → logprob: -17.375003814697266
    10. 'indice' → logprob: -17.500003814697266

Token 1703: ' place' (ID: 2475)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.020008033141493797
    2. 'ti' → logprob: -4.145008087158203
    3. 'index' → logprob: -6.645008087158203
    4. 'place' → logprob: -6.645008087158203
    5. 'pos' → logprob: -7.895008087158203
    6. 'indice' → logprob: -7.895008087158203
    7. ' position' → logprob: -8.145008087158203
    8. '```' → logprob: -8.645008087158203
    9. '   ' → logprob: -9.395008087158203
    10. 'idx' → logprob: -10.770008087158203

Token 1704: '
' (ID: 198)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.4795742630958557
    2. 'q' → logprob: -1.104574203491211
    3. '                   ' → logprob: -3.979574203491211
    4. '```' → logprob: -4.229574203491211
    5. ' q' → logprob: -4.729574203491211
    6. '               ' → logprob: -5.854574203491211
    7. '           ' → logprob: -6.979574203491211
    8. '(t' → logprob: -7.104574203491211
    9. ',q' → logprob: -7.354574203491211
    10. '(' → logprob: -7.604574203491211

Token 1705: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6286225914955139
    2. '               ' → logprob: -1.6286225318908691
    3. ' q' → logprob: -1.6286225318908691
    4. 'q' → logprob: -2.628622531890869
    5. '```' → logprob: -7.003622531890869
    6. 'insert' → logprob: -8.128623008728027
    7. '           ' → logprob: -8.253623008728027
    8. '(q' → logprob: -9.128623008728027
    9. ',q' → logprob: -9.253623008728027
    10. '   ' → logprob: -9.503623008728027

Token 1706: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.0005538671393878758
    2. ' q' → logprob: -7.500554084777832
    3. '                   ' → logprob: -14.750554084777832
    4. '	q' → logprob: -15.750554084777832
    5. '```' → logprob: -15.750554084777832
    6. '   ' → logprob: -16.500553131103516
    7. '           ' → logprob: -16.625553131103516
    8. 'insert' → logprob: -16.875553131103516
    9. '               ' → logprob: -17.375553131103516
    10. '                       ' → logprob: -18.250553131103516

Token 1707: '.insert' (ID: 13222)
  Prédit: '.insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.insert' → logprob: -0.1270500123500824
    2. '.' → logprob: -2.1270499229431152
    3. 'insert' → logprob: -9.627050399780273
    4. '_insert' → logprob: -10.377050399780273
    5. '.append' → logprob: -11.752050399780273
    6. '​.' → logprob: -12.752050399780273
    7. ' .' → logprob: -13.002050399780273
    8. '.Insert' → logprob: -13.127050399780273
    9. '‌.' → logprob: -13.627050399780273
    10. '=' → logprob: -13.627050399780273

Token 1708: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.00010306637705070898
    2. '(' → logprob: -10.000102996826172
    3. 'ti' → logprob: -10.500102996826172
    4. '	ti' → logprob: -10.500102996826172
    5. '(te' → logprob: -14.000102996826172
    6. '(ii' → logprob: -14.875102996826172
    7. ' ti' → logprob: -15.500102996826172
    8. ' (' → logprob: -15.500102996826172
    9. '(tt' → logprob: -15.750102996826172
    10. '(q' → logprob: -15.875102996826172

Token 1709: 'i' (ID: 72)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.03004886955022812
    2. 'i' → logprob: -3.5300488471984863
    3. '	ti' → logprob: -8.780049324035645
    4. ',' → logprob: -9.780049324035645
    5. ' ti' → logprob: -10.280049324035645
    6. '(' → logprob: -10.905049324035645
    7. '   ' → logprob: -12.155049324035645
    8. '(i' → logprob: -12.280049324035645
    9. 'ii' → logprob: -12.530049324035645
    10. ')' → logprob: -12.530049324035645

Token 1710: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33549022674560547
    2. ',t' → logprob: -1.3354902267456055
    3. '(t' → logprob: -3.8354902267456055
    4. '           ' → logprob: -8.835490226745605
    5. ' ,' → logprob: -9.335490226745605
    6. '               ' → logprob: -9.460490226745605
    7. '(' → logprob: -9.960490226745605
    8. '   ' → logprob: -11.710490226745605
    9. '```' → logprob: -12.210490226745605
    10. '                   ' → logprob: -12.335490226745605

Token 1711: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.003178544342517853
    2. ' t' → logprob: -5.753178596496582
    3. '   ' → logprob: -14.753178596496582
    4. '`t' → logprob: -15.753178596496582
    5. '	t' → logprob: -15.878178596496582
    6. '           ' → logprob: -16.253177642822266
    7. '(t' → logprob: -16.878177642822266
    8. ')t' → logprob: -18.253177642822266
    9. ' ' → logprob: -18.503177642822266
    10. '    ' → logprob: -19.003177642822266

Token 1712: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006388116744346917
    2. ')
' → logprob: -7.500638961791992
    3. '<|end|>' → logprob: -10.375638961791992
    4. '           ' → logprob: -10.500638961791992
    5. ')#' → logprob: -11.875638961791992
    6. '               ' → logprob: -12.625638961791992
    7. '),' → logprob: -12.875638961791992
    8. ',' → logprob: -13.250638961791992
    9. '<|end|>' → logprob: -13.500638961791992
    10. '#' → logprob: -13.500638961791992

Token 1713: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38023898005485535
    2. '<|end|>' → logprob: -1.7552390098571777
    3. '
' → logprob: -2.6302390098571777
    4. '               ' → logprob: -3.0052390098571777
    5. '                   ' → logprob: -5.130239009857178
    6. '            
' → logprob: -5.255239009857178
    7. '		' → logprob: -6.005239009857178
    8. '       ' → logprob: -6.005239009857178
    9. '```' → logprob: -6.505239009857178
    10. '<|end|>' → logprob: -7.005239009857178

Token 1714: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5644983649253845
    2. 'j' → logprob: -1.5644984245300293
    3. 'while' → logprob: -2.1894984245300293
    4. '#' (adapté à ' #') → logprob: -2.4394984245300293
    5. '               ' → logprob: -4.564498424530029
    6. 'ti' → logprob: -5.689498424530029
    7. '            
' → logprob: -6.314498424530029
    8. 'idx' → logprob: -6.439498424530029
    9. 'del' → logprob: -6.814498424530029
    10. ' while' → logprob: -6.939498424530029

Token 1715: ' On' (ID: 2160)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6629489660263062
    2. '#' → logprob: -1.6629489660263062
    3. 'j' → logprob: -1.6629489660263062
    4. '           ' → logprob: -2.9129490852355957
    5. 'ti' → logprob: -3.1629490852355957
    6. 'k' → logprob: -6.412949085235596
    7. 'del' → logprob: -6.537949085235596
    8. 'tj' → logprob: -6.662949085235596
    9. 'jj' → logprob: -6.662949085235596
    10. 'idx' → logprob: -7.162949085235596

Token 1716: ' retire' (ID: 48410)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6128507852554321
    2. 'while' → logprob: -1.6128507852554321
    3. '           ' → logprob: -2.1128506660461426
    4. 'ti' → logprob: -3.1128506660461426
    5. 'j' → logprob: -3.6128506660461426
    6. ' while' → logprob: -3.7378506660461426
    7. ' #' → logprob: -4.237850666046143
    8. '               ' → logprob: -5.112850666046143
    9. 'del' → logprob: -5.362850666046143
    10. ' ti' → logprob: -5.612850666046143

Token 1717: ' tous' (ID: 10688)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.012823467142879963
    2. ' ti' → logprob: -4.512823581695557
    3. '	ti' → logprob: -6.762823581695557
    4. '   ' → logprob: -7.887823581695557
    5. 'qi' → logprob: -8.512823104858398
    6. 'q' → logprob: -11.137823104858398
    7. ' qi' → logprob: -11.637823104858398
    8. 'while' → logprob: -12.512823104858398
    9. ' q' → logprob: -12.512823104858398
    10. ' while' → logprob: -13.137823104858398

Token 1718: ' les' (ID: 1341)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.3640478551387787
    2. ' ti' → logprob: -1.364047884941101
    3. 'range' → logprob: -3.4890477657318115
    4. ' range' → logprob: -5.614048004150391
    5. '	ti' → logprob: -5.739048004150391
    6. 'qi' → logprob: -5.864048004150391
    7. '   ' → logprob: -6.489048004150391
    8. '(t' → logprob: -6.489048004150391
    9. 'q' → logprob: -6.614048004150391
    10. '[' → logprob: -6.989048004150391

Token 1719: ' interv' (ID: 37413)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.00711398757994175
    2. ' ti' → logprob: -5.007113933563232
    3. '	ti' → logprob: -8.50711441040039
    4. '   ' → logprob: -9.25711441040039
    5. 'while' → logprob: -10.38211441040039
    6. '[' → logprob: -10.88211441040039
    7. 'tii' → logprob: -11.25711441040039
    8. 't' → logprob: -11.88211441040039
    9. '
' → logprob: -12.00711441040039
    10. '#' → logprob: -12.38211441040039

Token 1720: 'alles' (ID: 28825)
  Prédit: 'alles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alles' → logprob: -0.14629973471164703
    2. 'al' → logprob: -2.2712998390197754
    3. '   ' → logprob: -4.271299839019775
    4. 'ales' → logprob: -4.396299839019775
    5. 'als' → logprob: -5.646299839019775
    6. '```' → logprob: -6.521299839019775
    7. '       ' → logprob: -8.021299362182617
    8. 'a' → logprob: -8.396299362182617
    9. 'aliers' → logprob: -8.896299362182617
    10. 'ale' → logprob: -9.271299362182617

Token 1721: ' dont' (ID: 11562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0019373197574168444
    2. '	ti' → logprob: -7.501937389373779
    3. '   ' → logprob: -7.626937389373779
    4. '                   ' → logprob: -8.626936912536621
    5. '               ' → logprob: -8.751936912536621
    6. '#' → logprob: -9.001936912536621
    7. '```' → logprob: -9.251936912536621
    8. 'ti' → logprob: -9.501936912536621
    9. '           ' → logprob: -9.501936912536621
    10. '       ' → logprob: -10.001936912536621

Token 1722: ' le' (ID: 505)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.02372918836772442
    2. 'q' → logprob: -3.898729085922241
    3. 'qi' → logprob: -6.27372932434082
    4. '```' → logprob: -7.14872932434082
    5. ' ti' → logprob: -8.27372932434082
    6. '   ' → logprob: -9.77372932434082
    7. 'len' → logprob: -10.02372932434082
    8. ' q' → logprob: -10.39872932434082
    9. '	ti' → logprob: -10.52372932434082
    10. '``' → logprob: -10.89872932434082

Token 1723: ' coût' (ID: 73109)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.009988159872591496
    2. 'index' → logprob: -6.009988307952881
    3. 'cost' → logprob: -6.009988307952881
    4. 'i' → logprob: -6.384988307952881
    5. '#' → logprob: -7.134988307952881
    6. 'qi' → logprob: -7.134988307952881
    7. ' ti' → logprob: -8.009987831115723
    8. '   ' → logprob: -8.509987831115723
    9. 'idx' → logprob: -8.884987831115723
    10. 'tii' → logprob: -8.884987831115723

Token 1724: ' qui' (ID: 2780)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1095597743988037
    2. '>' → logprob: -1.2345597743988037
    3. 's' → logprob: -1.8595597743988037
    4. 'sup' → logprob: -2.4845597743988037
    5. 'ti' → logprob: -3.4845597743988037
    6. '	ti' → logprob: -3.8595597743988037
    7. '>#' → logprob: -3.8595597743988037
    8. '```' → logprob: -3.9845597743988037
    9. ' #' → logprob: -4.984560012817383
    10. ' supérieur' → logprob: -5.359560012817383

Token 1725: ' préc' (ID: 20129)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.1804143786430359
    2. 's' → logprob: -3.0554144382476807
    3. ' est' → logprob: -3.1804144382476807
    4. '>' → logprob: -3.4304144382476807
    5. '#' → logprob: -4.055414199829102
    6. 'q' → logprob: -4.555414199829102
    7. 'ex' → logprob: -5.555414199829102
    8. 't' → logprob: -5.930414199829102
    9. 'sup' → logprob: -6.180414199829102
    10. ' dépasse' → logprob: -6.930414199829102

Token 1726: 'ède' (ID: 48404)
  Prédit: 'ède'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ède' → logprob: -0.00015908108616713434
    2. 'ede' → logprob: -10.12515926361084
    3. 'èdent' → logprob: -10.62515926361084
    4. '#' → logprob: -10.75015926361084
    5. 'è' → logprob: -10.87515926361084
    6. 'é' → logprob: -11.12515926361084
    7. '[' → logprob: -11.87515926361084
    8. 'édé' → logprob: -12.00015926361084
    9. '```' → logprob: -12.00015926361084
    10. 'éd' → logprob: -13.12515926361084

Token 1727: ' celui' (ID: 27857)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.8454616665840149
    2. 'q' → logprob: -1.5954616069793701
    3. '```' → logprob: -2.22046160697937
    4. '	ti' → logprob: -2.59546160697937
    5. '[' → logprob: -3.09546160697937
    6. '>' → logprob: -3.09546160697937
    7. ' q' → logprob: -3.84546160697937
    8. '               ' → logprob: -4.595461845397949
    9. ' >' → logprob: -5.095461845397949
    10. 's' → logprob: -5.220461845397949

Token 1728: '-ci' (ID: 27301)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.51510089635849
    2. 's' → logprob: -1.5151009559631348
    3. '	ti' → logprob: -2.6401009559631348
    4. '[' → logprob: -2.8901009559631348
    5. 'ti' → logprob: -3.7651009559631348
    6. '[t' → logprob: -5.515100955963135
    7. '```' → logprob: -5.515100955963135
    8. '[token' → logprob: -5.890100955963135
    9. 't' → logprob: -6.015100955963135
    10. '[i' → logprob: -6.140100955963135

Token 1729: ' est' (ID: 893)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.1308586597442627
    2. ' ==' → logprob: -1.2558586597442627
    3. '==' → logprob: -1.3808586597442627
    4. '[' → logprob: -3.0058586597442627
    5. ' >' → logprob: -3.2558586597442627
    6. '                   ' → logprob: -4.630858421325684
    7. '               ' → logprob: -4.755858421325684
    8. 's' → logprob: -5.005858421325684
    9. 'is' → logprob: -5.755858421325684
    10. '[t' → logprob: -5.755858421325684

Token 1730: ' pire' (ID: 94963)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.03012104518711567
    2. '>=' → logprob: -4.030120849609375
    3. ' >' → logprob: -5.280120849609375
    4. 'q' → logprob: -6.655120849609375
    5. 'ti' → logprob: -6.905120849609375
    6. '>T' → logprob: -7.655120849609375
    7. 't' → logprob: -7.655120849609375
    8. '[' → logprob: -8.030120849609375
    9. '```' → logprob: -8.030120849609375
    10. '>#' → logprob: -8.155120849609375

Token 1731: ',
' (ID: 412)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4076160788536072
    2. ' while' → logprob: -2.032616138458252
    3. 'while' → logprob: -2.657616138458252
    4. '                   ' → logprob: -3.157616138458252
    5. '                ' → logprob: -4.157616138458252
    6. ' =' → logprob: -4.282616138458252
    7. '=' → logprob: -4.782616138458252
    8. '	while' → logprob: -4.907616138458252
    9. '              ' → logprob: -5.032616138458252
    10. ',' → logprob: -5.157616138458252

Token 1732: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.105721354484558
    2. '           ' → logprob: -1.730721354484558
    3. ' while' → logprob: -1.730721354484558
    4. '       ' → logprob: -2.8557214736938477
    5. '	while' → logprob: -2.8557214736938477
    6. 'while' → logprob: -3.2307214736938477
    7. '                ' → logprob: -3.6057214736938477
    8. '                   ' → logprob: -3.7307214736938477
    9. '	' → logprob: -4.605721473693848
    10. '	           ' → logprob: -4.605721473693848

Token 1733: ' #' (ID: 1069)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.14473667740821838
    2. 'while' → logprob: -2.1447367668151855
    3. 'ti' → logprob: -5.7697367668151855
    4. ' ti' → logprob: -6.5197367668151855
    5. '                   ' → logprob: -6.6447367668151855
    6. 'hile' → logprob: -6.6447367668151855
    7. '    ' → logprob: -7.0197367668151855
    8. '#' (adapté à ' #') → logprob: -7.0197367668151855
    9. '   ' → logprob: -7.0197367668151855
    10. '               ' → logprob: -7.1447367668151855

Token 1734: ' pour' (ID: 1930)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6980587840080261
    2. ' while' → logprob: -1.448058843612671
    3. '               ' → logprob: -2.323058843612671
    4. 'ti' → logprob: -3.073058843612671
    5. '                   ' → logprob: -3.323058843612671
    6. '           ' → logprob: -3.323058843612671
    7. '                ' → logprob: -4.823058605194092
    8. '       ' → logprob: -4.948058605194092
    9. '	while' → logprob: -5.573058605194092
    10. '	ti' → logprob: -5.573058605194092

Token 1735: ' conserver' (ID: 116877)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.7628002166748047
    2. 'maint' → logprob: -1.7628002166748047
    3. '#' → logprob: -2.1378002166748047
    4. ' i' → logprob: -2.2628002166748047
    5. 'ti' → logprob: -2.6378002166748047
    6. ' ti' → logprob: -2.8878002166748047
    7. 'while' → logprob: -2.8878002166748047
    8. '   ' → logprob: -3.2628002166748047
    9. ' while' → logprob: -3.5128002166748047
    10. ' garantir' → logprob: -3.7628002166748047

Token 1736: ' la' (ID: 557)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.006711701396852732
    2. '	ti' → logprob: -5.506711483001709
    3. ' ti' → logprob: -6.131711483001709
    4. '
' → logprob: -8.006711959838867
    5. 'tsi' → logprob: -10.756711959838867
    6. 'tii' → logprob: -10.881711959838867
    7. '-ti' → logprob: -11.131711959838867
    8. 'True' → logprob: -11.381711959838867
    9. 't' → logprob: -11.506711959838867
    10. '#' → logprob: -12.006711959838867

Token 1737: ' structure' (ID: 8866)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3823712170124054
    2. '#' → logprob: -1.882371187210083
    3. '```' → logprob: -2.507371187210083
    4. 'best' → logprob: -4.132371425628662
    5. ' while' → logprob: -4.757371425628662
    6. 'valid' → logprob: -4.882371425628662
    7. 'i' → logprob: -5.007371425628662
    8. 'bonne' → logprob: -5.257371425628662
    9. 'position' → logprob: -5.632371425628662
    10. 'pos' → logprob: -5.632371425628662

Token 1738: ' de' (ID: 334)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2432556003332138
    2. ' while' → logprob: -1.743255615234375
    3. '               ' → logprob: -4.243255615234375
    4. '[' → logprob: -4.618255615234375
    5. '```' → logprob: -5.243255615234375
    6. '#' → logprob: -5.993255615234375
    7. '                   ' → logprob: -6.118255615234375
    8. '	while' → logprob: -6.743255615234375
    9. '           ' → logprob: -6.993255615234375
    10. '   ' → logprob: -7.118255615234375

Token 1739: ' la' (ID: 557)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5494917035102844
    2. 'qual' → logprob: -1.5494916439056396
    3. '#' → logprob: -2.5494916439056396
    4. 'la' → logprob: -2.9244916439056396
    5. ' q' → logprob: -3.0494916439056396
    6. 'l' → logprob: -4.674491882324219
    7. '```' → logprob: -5.549491882324219
    8. ' qualité' → logprob: -5.674491882324219
    9. 'cro' → logprob: -6.299491882324219
    10. 'optimal' → logprob: -6.674491882324219

Token 1740: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.03717811405658722
    2. ' liste' → logprob: -3.6621780395507812
    3. 'file' → logprob: -5.287178039550781
    4. 'list' → logprob: -5.537178039550781
    5. '#' → logprob: -7.037178039550781
    6. 'q' → logprob: -8.412178039550781
    7. 'code' → logprob: -8.662178039550781
    8. 'co' → logprob: -9.287178039550781
    9. 'queue' → logprob: -9.412178039550781
    10. 'sorted' → logprob: -9.787178039550781

Token 1741: ' q' (ID: 2335)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7891575694084167
    2. 'while' → logprob: -1.0391576290130615
    3. '           ' → logprob: -2.6641576290130615
    4. ' while' → logprob: -2.6641576290130615
    5. '                   ' → logprob: -3.1641576290130615
    6. '[' → logprob: -5.914157390594482
    7. '#' → logprob: -6.414157390594482
    8. ',' → logprob: -6.664157390594482
    9. '                ' → logprob: -7.289157390594482
    10. '              ' → logprob: -7.414157390594482

Token 1742: ' ord' (ID: 6608)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.669909656047821
    2. '           ' → logprob: -1.4199097156524658
    3. '               ' → logprob: -2.669909715652466
    4. 'while' → logprob: -3.169909715652466
    5. '
' → logprob: -3.419909715652466
    6. ' =' → logprob: -3.794909715652466
    7. '	while' → logprob: -4.169909477233887
    8. ',' → logprob: -4.794909477233887
    9. ':' → logprob: -4.794909477233887
    10. '                   ' → logprob: -4.919909477233887

Token 1743: 'onnée' (ID: 91161)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8634656071662903
    2. 'def' → logprob: -1.4884655475616455
    3. '       ' → logprob: -2.1134655475616455
    4. '           ' → logprob: -2.8634655475616455
    5. '  ' → logprob: -3.6134655475616455
    6. '          ' → logprob: -3.9884655475616455
    7. '    ' → logprob: -4.238465785980225
    8. '      ' → logprob: -4.238465785980225
    9. '        ' → logprob: -4.363465785980225
    10. '     ' → logprob: -4.488465785980225

Token 1744: ' avec' (ID: 3937)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.4469112753868103
    2. 'while' → logprob: -2.696911334991455
    3. '               ' → logprob: -2.696911334991455
    4. '                   ' → logprob: -2.946911334991455
    5. '[' → logprob: -3.196911334991455
    6. ' and' → logprob: -3.321911334991455
    7. '           ' → logprob: -3.696911334991455
    8. ':
' → logprob: -3.821911334991455
    9. ',' → logprob: -4.696911334991455
    10. '```' → logprob: -4.696911334991455

Token 1745: ' les' (ID: 1341)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.6309492588043213
    2. 'co' → logprob: -1.3809492588043213
    3. 'cro' → logprob: -2.1309492588043213
    4. '#' → logprob: -3.8809492588043213
    5. 'les' → logprob: -4.005949020385742
    6. 'la' → logprob: -4.380949020385742
    7. 'le' → logprob: -4.505949020385742
    8. 'de' → logprob: -4.755949020385742
    9. ' des' → logprob: -4.755949020385742
    10. 'une' → logprob: -5.380949020385742

Token 1746: ' meilleurs' (ID: 52561)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.012444310821592808
    2. 'cout' → logprob: -5.387444496154785
    3. 'indices' → logprob: -5.887444496154785
    4. ' coûts' → logprob: -6.512444496154785
    5. 'c' → logprob: -7.137444496154785
    6. '#' → logprob: -7.137444496154785
    7. 'cost' → logprob: -7.512444496154785
    8. 'positions' → logprob: -8.137444496154785
    9. 'val' → logprob: -8.762444496154785
    10. '```' → logprob: -9.387444496154785

Token 1747: ' coûts' (ID: 116912)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.8685691356658936
    2. ' coûts' → logprob: -1.3685691356658936
    3. 'cout' → logprob: -1.7435691356658936
    4. 'c' → logprob: -2.2435691356658936
    5. 'indices' → logprob: -3.6185691356658936
    6. 'cost' → logprob: -5.493569374084473
    7. ' cout' → logprob: -5.618569374084473
    8. 't' → logprob: -6.368569374084473
    9. 'i' → logprob: -6.493569374084473
    10. '#' → logprob: -6.618569374084473

Token 1748: ' uniquement' (ID: 65527)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.42322516441345215
    2. '           ' → logprob: -2.048225164413452
    3. '                   ' → logprob: -2.548225164413452
    4. ' while' → logprob: -3.423225164413452
    5. '```' → logprob: -3.923225164413452
    6. ',' → logprob: -4.173225402832031
    7. '[' → logprob: -4.423225402832031
    8. ' =' → logprob: -5.048225402832031
    9. '              ' → logprob: -5.048225402832031
    10. ' and' → logprob: -5.173225402832031

Token 1749: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03441503643989563
    2. '           ' → logprob: -4.409415245056152
    3. ' while' → logprob: -4.909415245056152
    4. '                   ' → logprob: -5.409415245056152
    5. '	           ' → logprob: -6.659415245056152
    6. ' and' → logprob: -6.784415245056152
    7. '              ' → logprob: -7.034415245056152
    8. '<|end|>' → logprob: -7.159415245056152
    9. '```' → logprob: -7.284415245056152
    10. ',' → logprob: -7.284415245056152

Token 1750: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9472084641456604
    2. '               ' → logprob: -0.9472084641456604
    3. ' while' → logprob: -1.5722084045410156
    4. '                   ' → logprob: -5.197208404541016
    5. '```' → logprob: -5.197208404541016
    6. 'while' → logprob: -6.197208404541016
    7. '            ' → logprob: -7.322208404541016
    8. '       ' → logprob: -7.947208404541016
    9. ' ' → logprob: -8.072208404541016
    10. '                       ' → logprob: -8.447208404541016

Token 1751: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.4052462577819824
    2. ' while' → logprob: -1.2802462577819824
    3. '           ' → logprob: -2.9052462577819824
    4. '	while' → logprob: -8.03024673461914
    5. '```' → logprob: -9.15524673461914
    6. 'j' → logprob: -11.53024673461914
    7. '   ' → logprob: -11.78024673461914
    8. '		' → logprob: -12.15524673461914
    9. ' ' → logprob: -12.40524673461914
    10. '``' → logprob: -12.53024673461914

Token 1752: ' q' (ID: 2335)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.006148719694465399
    2. ' ti' → logprob: -5.131148815155029
    3. 'len' → logprob: -9.256148338317871
    4. 'q' → logprob: -9.381148338317871
    5. '	ti' → logprob: -11.381148338317871
    6. '   ' → logprob: -11.506148338317871
    7. ' q' → logprob: -12.131148338317871
    8. ' len' → logprob: -12.381148338317871
    9. 't' → logprob: -12.881148338317871
    10. 'True' → logprob: -13.131148338317871

Token 1753: '[' (ID: 58)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.6432421207427979
    2. '[' → logprob: -0.8932421207427979
    3. 'ti' → logprob: -3.768242120742798
    4. '	ti' → logprob: -4.643241882324219
    5. ' and' → logprob: -5.268241882324219
    6. '   ' → logprob: -5.518241882324219
    7. '     ' → logprob: -5.643241882324219
    8. 'len' → logprob: -5.643241882324219
    9. '       ' → logprob: -6.018241882324219
    10. 'and' → logprob: -6.393241882324219

Token 1754: 'ti' (ID: 2832)
  Prédit: 'ti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.02197152189910412
    2. '1' → logprob: -4.021971702575684
    3. 'qi' → logprob: -7.146971702575684
    4. 'len' → logprob: -7.146971702575684
    5. '-' → logprob: -7.396971702575684
    6. '   ' → logprob: -7.646971702575684
    7. ' ti' → logprob: -8.271971702575684
    8. 'i' → logprob: -9.271971702575684
    9. 'q' → logprob: -9.271971702575684
    10. '```' → logprob: -9.646971702575684

Token 1755: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14000563323497772
    2. '][' → logprob: -2.140005588531494
    3. ' +' → logprob: -4.640005588531494
    4. '[' → logprob: -6.390005588531494
    5. '   ' → logprob: -7.015005588531494
    6. '-' → logprob: -8.390006065368652
    7. '<' → logprob: -8.515006065368652
    8. '>' → logprob: -9.765006065368652
    9. ' ' → logprob: -10.140006065368652
    10. ']' → logprob: -10.515006065368652

Token 1756: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001294030516874045
    2. '][' → logprob: -9.875129699707031
    3. '0' → logprob: -10.875129699707031
    4. '2' → logprob: -11.125129699707031
    5. '   ' → logprob: -11.375129699707031
    6. ' ' → logprob: -11.375129699707031
    7. '+' → logprob: -12.625129699707031
    8. '-' → logprob: -12.750129699707031
    9. 'ti' → logprob: -12.750129699707031
    10. '(' → logprob: -12.875129699707031

Token 1757: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0020023921970278025
    2. '[' → logprob: -7.002002239227295
    3. ']' → logprob: -7.752002239227295
    4. ' ][' → logprob: -7.752002239227295
    5. '   ' → logprob: -9.252002716064453
    6. ')][' → logprob: -10.752002716064453
    7. '>' → logprob: -11.002002716064453
    8. ')[' → logprob: -11.127002716064453
    9. '()][' → logprob: -11.377002716064453
    10. '"][' → logprob: -11.627002716064453

Token 1758: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.756989700486884e-05
    2. '0' → logprob: -9.37508773803711
    3. '
' → logprob: -14.12508773803711
    4. ' ' → logprob: -14.37508773803711
    5. ']' → logprob: -15.81258773803711
    6. '][' → logprob: -15.87508773803711
    7. '   ' → logprob: -15.93758773803711
    8. '[' → logprob: -16.00008773803711
    9. '' → logprob: -16.25008773803711
    10. '۱' → logprob: -16.25008773803711

Token 1759: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1622966229915619
    2. ' >' → logprob: -1.9122966527938843
    3. ']' → logprob: -6.912296772003174
    4. ']>' → logprob: -7.162296772003174
    5. '    ' → logprob: -9.412296295166016
    6. ' ' → logprob: -9.412296295166016
    7. '   ' → logprob: -9.537296295166016
    8. '>=' → logprob: -11.037296295166016
    9. ']>=' → logprob: -11.537296295166016
    10. '  ' → logprob: -11.912296295166016

Token 1760: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.08971021324396133
    2. ' >' → logprob: -2.464710235595703
    3. '>=' → logprob: -7.214710235595703
    4. ' >=' → logprob: -10.589710235595703
    5. '   ' → logprob: -12.714710235595703
    6. ' ' → logprob: -13.089710235595703
    7. '>
' → logprob: -14.089710235595703
    8. '    ' → logprob: -14.589710235595703
    9. '()>' → logprob: -14.589710235595703
    10. ']>' → logprob: -14.839710235595703

Token 1761: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.15033411979675293
    2. 'q' → logprob: -2.025334119796753
    3. ' t' → logprob: -5.150334358215332
    4. ' q' → logprob: -6.400334358215332
    5. '   ' → logprob: -8.900334358215332
    6. '	t' → logprob: -11.400334358215332
    7. ' ' → logprob: -12.025334358215332
    8. '    ' → logprob: -12.025334358215332
    9. '	q' → logprob: -12.400334358215332
    10. '  ' → logprob: -12.900334358215332

Token 1762: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.126521035796031e-05
    2. '1' → logprob: -9.500091552734375
    3. '```' → logprob: -12.125091552734375
    4. 'i' → logprob: -12.500091552734375
    5. ' [' → logprob: -12.750091552734375
    6. '[i' → logprob: -13.750091552734375
    7. '][' → logprob: -14.625091552734375
    8. '`' → logprob: -15.125091552734375
    9. '[
' → logprob: -15.125091552734375
    10. '#' → logprob: -15.125091552734375

Token 1763: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -13.00000286102295
    3. ' ' → logprob: -14.25000286102295
    4. '   ' → logprob: -16.000003814697266
    5. '```' → logprob: -17.687503814697266
    6. ']' → logprob: -17.937503814697266
    7. '' → logprob: -18.250003814697266
    8. '۱' → logprob: -18.562503814697266
    9. '１' → logprob: -18.750003814697266
    10. '
' → logprob: -18.750003814697266

Token 1764: ']:
' (ID: 22152)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.18078885972499847
    2. ':
' → logprob: -2.18078875541687
    3. 'and' → logprob: -3.55578875541687
    4. ':' → logprob: -3.93078875541687
    5. '):
' → logprob: -6.055788993835449
    6. '   ' → logprob: -6.680788993835449
    7. '       ' → logprob: -8.93078899383545
    8. ' :
' → logprob: -9.05578899383545
    9. ')' → logprob: -9.43078899383545
    10. '():
' → logprob: -9.80578899383545

Token 1765: '                   ' (ID: 699)
  Prédit: ' del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' del' → logprob: -0.34277406334877014
    2. ' q' → logprob: -1.8427740335464478
    3. '   ' → logprob: -2.5927741527557373
    4. '                   ' → logprob: -3.5927741527557373
    5. '           ' → logprob: -4.967773914337158
    6. 'q' → logprob: -5.717773914337158
    7. '```' → logprob: -5.717773914337158
    8. '       ' → logprob: -5.967773914337158
    9. 'del' → logprob: -6.217773914337158
    10. '	q' → logprob: -6.342773914337158

Token 1766: ' del' (ID: 1083)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' (adapté à ' del') → logprob: -0.06610103696584702
    2. '                   ' → logprob: -3.56610107421875
    3. ' del' → logprob: -3.69110107421875
    4. 'q' → logprob: -5.19110107421875
    5. '   ' → logprob: -5.69110107421875
    6. ' q' → logprob: -6.81610107421875
    7. '	del' → logprob: -7.69110107421875
    8. '                       ' → logprob: -8.44110107421875
    9. '	q' → logprob: -11.44110107421875
    10. '               ' → logprob: -11.69110107421875

Token 1767: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0788973867893219
    2. ' q' → logprob: -2.578897476196289
    3. '	q' → logprob: -11.953897476196289
    4. '   ' → logprob: -13.953897476196289
    5. '[q' → logprob: -15.953897476196289
    6. '                   ' → logprob: -16.45389747619629
    7. '    ' → logprob: -18.20389747619629
    8. '(q' → logprob: -18.20389747619629
    9. '?q' → logprob: -18.20389747619629
    10. '```' → logprob: -18.57889747619629

Token 1768: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012511172099038959
    2. 'ti' → logprob: -9.00012493133545
    3. '   ' → logprob: -13.87512493133545
    4. 'q' → logprob: -14.75012493133545
    5. '[q' → logprob: -16.125125885009766
    6. '	ti' → logprob: -16.375125885009766
    7. ' ti' → logprob: -16.625125885009766
    8. 'qi' → logprob: -16.750125885009766
    9. 't' → logprob: -17.750125885009766
    10. '[t' → logprob: -17.875125885009766

Token 1769: 'ti' (ID: 2832)
  Prédit: 'ti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -2.2200749754119897e-06
    2. ' ti' → logprob: -13.500001907348633
    3. '	ti' → logprob: -14.375001907348633
    4. 'tii' → logprob: -16.250001907348633
    5. '(t' → logprob: -17.875001907348633
    6. '   ' → logprob: -18.500001907348633
    7. '(' → logprob: -18.625001907348633
    8. '-ti' → logprob: -18.875001907348633
    9. 'tti' → logprob: -19.500001907348633
    10. 'qi' → logprob: -20.250001907348633

Token 1770: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.15441757265944e-05
    2. ' -' → logprob: -10.375031471252441
    3. '1' → logprob: -16.000032424926758
    4. '[' → logprob: -16.750032424926758
    5. '```' → logprob: -17.625032424926758
    6. '   ' → logprob: -17.750032424926758
    7. '−' → logprob: -18.375032424926758
    8. '0' → logprob: -18.875032424926758
    9. ']-' → logprob: -18.875032424926758
    10. ']' → logprob: -20.000032424926758

Token 1771: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -13.375003814697266
    3. '   ' → logprob: -14.687503814697266
    4. '```' → logprob: -14.687503814697266
    5. '2' → logprob: -15.125003814697266
    6. 'ti' → logprob: -16.312503814697266
    7. 'i' → logprob: -16.687503814697266
    8. '...' → logprob: -17.375003814697266
    9. '0' → logprob: -17.437503814697266
    10. '-' → logprob: -17.750003814697266

Token 1772: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.8828707804204896e-05
    2. ' ]' → logprob: -11.000048637390137
    3. ']
' → logprob: -11.750048637390137
    4. '<|end|>' → logprob: -11.750048637390137
    5. ')]' → logprob: -12.500048637390137
    6. '1' → logprob: -13.000048637390137
    7. ')' → logprob: -13.250048637390137
    8. '`]' → logprob: -13.875048637390137
    9. '()]' → logprob: -14.125048637390137
    10. '                   ' → logprob: -14.375048637390137

Token 1773: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1774: ' ti' (ID: 2919)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' (adapté à ' ti') → logprob: -0.0008996733813546598
    2. '   ' → logprob: -7.250899791717529
    3. '                   ' → logprob: -8.875899314880371
    4. '	ti' → logprob: -10.125899314880371
    5. 'tii' → logprob: -12.500899314880371
    6. '               ' → logprob: -13.125899314880371
    7. '           ' → logprob: -13.875899314880371
    8. 't' → logprob: -14.375899314880371
    9. '                           ' → logprob: -14.750899314880371
    10. '  ' → logprob: -14.875899314880371

Token 1775: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.28579527139663696
    2. '-' → logprob: -1.5357952117919922
    3. ' -=' → logprob: -3.410795211791992
    4. '   ' → logprob: -8.410795211791992
    5. '=' → logprob: -10.785795211791992
    6. '```' → logprob: -11.660795211791992
    7. '	' → logprob: -11.910795211791992
    8. '+=' → logprob: -12.410795211791992
    9. '−' → logprob: -12.535795211791992
    10. '    ' → logprob: -12.535795211791992

Token 1776: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. 'ti' → logprob: -17.625
    4. '   ' → logprob: -19.5
    5. '```' → logprob: -19.5
    6. '2' → logprob: -20.375
    7. '0' → logprob: -20.5
    8. '１' → logprob: -21.375
    9. '-' → logprob: -21.625
    10. '۱' → logprob: -21.9375

Token 1777: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '2' → logprob: -18.5
    4. '   ' → logprob: -19.25
    5. '```' → logprob: -20.0
    6. '0' → logprob: -20.375
    7. '  ' → logprob: -21.875
    8. '3' → logprob: -22.0
    9. '-' → logprob: -22.25
    10. '#' → logprob: -22.3125

Token 1778: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1779: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1780: ' On' (ID: 2160)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1781: ' rec' (ID: 1369)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12293024361133575
    2. '-=' → logprob: -3.6229302883148193
    3. ' +=' → logprob: -4.24793004989624
    4. '#' → logprob: -4.24793004989624
    5. 'ti' → logprob: -4.74793004989624
    6. 'continue' → logprob: -4.87293004989624
    7. '=' → logprob: -4.99793004989624
    8. 'i' → logprob: -5.37293004989624
    9. ')' → logprob: -5.49793004989624
    10. '
' → logprob: -5.62293004989624

Token 1782: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.44967448711395264
    2. 'alc' → logprob: -1.8246744871139526
    3. 'ulate' → logprob: -2.324674606323242
    4. 'uler' → logprob: -3.574674606323242
    5. 'ul' → logprob: -3.824674606323242
    6. 'al' → logprob: -4.449674606323242
    7. 'omp' → logprob: -4.699674606323242
    8. 'alculate' → logprob: -4.949674606323242
    9. 'cule' → logprob: -5.199674606323242
    10. 'ede' → logprob: -5.949674606323242

Token 1783: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1784: ' continuer' (ID: 75597)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.005997878964990377
    2. 'contin' → logprob: -6.755997657775879
    3. '0' → logprob: -7.130997657775879
    4. 'continue' → logprob: -7.255997657775879
    5. '...' → logprob: -7.630997657775879
    6. 't' → logprob: -7.880997657775879
    7. ' ti' → logprob: -8.005997657775879
    8. ' continuer' → logprob: -8.005997657775879
    9. '	ti' → logprob: -8.130997657775879
    10. 'while' → logprob: -8.630997657775879

Token 1785: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1786: ' vér' (ID: 42524)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0887536108493805
    2. 'while' → logprob: -2.7137537002563477
    3. 'supp' → logprob: -5.463753700256348
    4. ' vér' → logprob: -5.713753700256348
    5. 'check' → logprob: -6.213753700256348
    6. 'loop' → logprob: -7.088753700256348
    7. 'compar' → logprob: -7.213753700256348
    8. 'tri' → logprob: -7.338753700256348
    9. 'comparison' → logprob: -7.338753700256348
    10. ' while' → logprob: -7.338753700256348

Token 1787: 'ification' (ID: 3166)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.528685986995697
    2. 'ification' → logprob: -0.903685986995697
    3. 'ti' → logprob: -6.153686046600342
    4. 'fi' → logprob: -7.653686046600342
    5. 'ifie' → logprob: -7.653686046600342
    6. 'i' → logprob: -7.778686046600342
    7. '```' → logprob: -7.778686046600342
    8. 'f' → logprob: -7.778686046600342
    9. 'si' → logprob: -9.278685569763184
    10. '#' → logprob: -9.278685569763184

Token 1788: ' si' (ID: 1784)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1789: ' besoin' (ID: 27703)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.08176487684249878
    2. ' ti' → logprob: -2.5817649364471436
    3. 'True' → logprob: -6.7067646980285645
    4. '	ti' → logprob: -6.8317646980285645
    5. 't' → logprob: -8.331765174865723
    6. 'true' → logprob: -9.581765174865723
    7. ' True' → logprob: -9.706765174865723
    8. ' not' → logprob: -10.081765174865723
    9. 'not' → logprob: -10.206765174865723
    10. ' ' → logprob: -11.456765174865723

Token 1790: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1791: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1792: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046868946403265
    2. 'return' → logprob: -3.9218690395355225
    3. '
' → logprob: -4.046868801116943
    4. '    
' → logprob: -5.421868801116943
    5. 'if' → logprob: -6.796868801116943
    6. '```' → logprob: -7.171868801116943
    7. ' return' → logprob: -7.421868801116943
    8. 'print' → logprob: -8.171869277954102
    9. 'pf' → logprob: -8.671869277954102
    10. '	return' → logprob: -8.671869277954102

Token 1793: ' À' (ID: 27643)
  Prédit: 'pf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pf' → logprob: -1.1150189638137817
    2. '   ' → logprob: -1.2400189638137817
    3. 'res' → logprob: -1.6150189638137817
    4. 'if' → logprob: -2.115018844604492
    5. 'ans' → logprob: -4.490018844604492
    6. '#' → logprob: -4.490018844604492
    7. 'pe' → logprob: -4.615018844604492
    8. 'cost' → logprob: -4.990018844604492
    9. 'r' → logprob: -5.240018844604492
    10. 'ret' → logprob: -5.490018844604492

Token 1794: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.689161479473114
    2. 'print' → logprob: -1.3141615390777588
    3. '#' → logprob: -2.189161539077759
    4. '   ' → logprob: -2.814161539077759
    5. 'pf' → logprob: -3.439161539077759
    6. ' la' → logprob: -4.43916130065918
    7. 'l' → logprob: -5.56416130065918
    8. 'pe' → logprob: -5.81416130065918
    9. 'return' → logprob: -6.68916130065918
    10. 'fin' → logprob: -6.68916130065918

Token 1795: ' fin' (ID: 2131)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04351120442152023
    2. '#' → logprob: -3.293511152267456
    3. 'return' → logprob: -6.293511390686035
    4. '   ' → logprob: -6.793511390686035
    5. 'ti' → logprob: -7.543511390686035
    6. 'bis' → logprob: -8.043511390686035
    7. 'fi' → logprob: -8.418511390686035
    8. 'final' → logprob: -8.543511390686035
    9. 'q' → logprob: -9.168511390686035
    10. 'if' → logprob: -9.543511390686035

Token 1796: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035706115886569023
    2. '
' → logprob: -6.878570556640625
    3. 'print' → logprob: -7.128570556640625
    4. '#' → logprob: -8.128570556640625
    5. '    
' → logprob: -8.128570556640625
    6. 'return' → logprob: -8.128570556640625
    7. 'pf' → logprob: -8.503570556640625
    8. 'pe' → logprob: -8.628570556640625
    9. 'if' → logprob: -8.628570556640625
    10. 'idx' → logprob: -9.378570556640625

Token 1797: ' on' (ID: 402)
  Prédit: 'pf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pf' → logprob: -0.013890329748392105
    2. 'pe' → logprob: -5.138890266418457
    3. 'return' → logprob: -5.763890266418457
    4. '   ' → logprob: -6.013890266418457
    5. 'print' → logprob: -6.513890266418457
    6. 'if' → logprob: -7.763890266418457
    7. 'res' → logprob: -8.388890266418457
    8. '#' → logprob: -9.763890266418457
    9. ' pf' → logprob: -10.263890266418457
    10. 'ans' → logprob: -10.888890266418457

Token 1798: ' cherche' (ID: 52345)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.6399102807044983
    2. 'pf' → logprob: -0.8899102807044983
    3. '   ' → logprob: -3.1399102210998535
    4. 'return' → logprob: -4.7649102210998535
    5. 'print' → logprob: -4.8899102210998535
    6. '#' → logprob: -7.7649102210998535
    7. '
' → logprob: -7.7649102210998535
    8. 'if' → logprob: -7.8899102210998535
    9. '_,' → logprob: -7.8899102210998535
    10. ',' → logprob: -8.514910697937012

Token 1799: ' parmi' (ID: 51713)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.30612170696258545
    2. 'print' → logprob: -2.931121826171875
    3. '(q' → logprob: -3.056121826171875
    4. 'res' → logprob: -3.181121826171875
    5. '   ' → logprob: -3.181121826171875
    6. 'qi' → logprob: -3.931121826171875
    7. 'return' → logprob: -4.806121826171875
    8. 'idx' → logprob: -5.181121826171875
    9. 'la' → logprob: -5.306121826171875
    10. 'cost' → logprob: -5.306121826171875

Token 1800: ' les' (ID: 1341)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.008632530458271503
    2. '[q' → logprob: -5.133632659912109
    3. '(q' → logprob: -6.133632659912109
    4. 't' → logprob: -9.00863265991211
    5. 'pos' → logprob: -10.00863265991211
    6. 'x' → logprob: -10.25863265991211
    7. '[' → logprob: -10.63363265991211
    8. '[x' → logprob: -10.75863265991211
    9. 'qi' → logprob: -10.75863265991211
    10. '[j' → logprob: -11.00863265991211

Token 1801: ' entr' (ID: 7072)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00837237760424614
    2. 'r' → logprob: -6.3833723068237305
    3. '(q' → logprob: -6.5083723068237305
    4. 'cost' → logprob: -7.3833723068237305
    5. '#' → logprob: -7.5083723068237305
    6. 't' → logprob: -7.5083723068237305
    7. 'res' → logprob: -7.7583723068237305
    8. 'qi' → logprob: -7.8833723068237305
    9. '(_,' → logprob: -8.25837230682373
    10. '_' → logprob: -8.38337230682373

Token 1802: 'ées' (ID: 5161)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ry' → logprob: -1.4988994598388672
    2. 'q' → logprob: -1.6238994598388672
    3. 'r' → logprob: -1.7488994598388672
    4. 'rée' → logprob: -2.248899459838867
    5. 'ries' → logprob: -2.498899459838867
    6. 't' → logprob: -2.623899459838867
    7. 're' → logprob: -3.498899459838867
    8. '   ' → logprob: -3.498899459838867
    9. 'ite' → logprob: -4.623899459838867
    10. '(' → logprob: -5.123899459838867

Token 1803: ' de' (ID: 334)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.4387706518173218
    2. 'in' → logprob: -2.3137707710266113
    3. '   ' → logprob: -3.0637707710266113
    4. 'res' → logprob: -3.3137707710266113
    5. '(q' → logprob: -3.3137707710266113
    6. 'dans' → logprob: -3.6887707710266113
    7. 'pos' → logprob: -3.9387707710266113
    8. 'for' → logprob: -4.313770771026611
    9. '_' → logprob: -4.313770771026611
    10. '#' → logprob: -4.563770771026611

Token 1804: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.008129963040119e-06
    2. ' q' → logprob: -12.875003814697266
    3. '#' → logprob: -14.125003814697266
    4. '[q' → logprob: -14.250003814697266
    5. 'ql' → logprob: -17.750003814697266
    6. 'j' → logprob: -18.000003814697266
    7. '(q' → logprob: -18.125003814697266
    8. '
' → logprob: -18.500003814697266
    9. '```' → logprob: -18.625003814697266
    10. '[' → logprob: -18.750003814697266

Token 1805: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7561543583869934
    2. '[-' → logprob: -1.3811542987823486
    3. 'le' → logprob: -2.3811542987823486
    4. ' la' → logprob: -3.1311542987823486
    5. 'the' → logprob: -3.3811542987823486
    6. '   ' → logprob: -4.256154537200928
    7. '(-' → logprob: -4.631154537200928
    8. 'q' → logprob: -4.756154537200928
    9. 'où' → logprob: -5.006154537200928
    10. ',' → logprob: -5.131154537200928

Token 1806: ' dernière' (ID: 39497)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.069895625114441
    2. 'co' → logprob: -1.819895625114441
    3. 'cost' → logprob: -2.6948957443237305
    4. 'print' → logprob: -2.8198957443237305
    5. '#' → logprob: -2.9448957443237305
    6. 'pos' → logprob: -2.9448957443237305
    7. 'minimum' → logprob: -3.1948957443237305
    8. 'q' → logprob: -3.5698957443237305
    9. 'qi' → logprob: -3.8198957443237305
    10. 'best' → logprob: -3.9448957443237305

Token 1807: ' position' (ID: 4010)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.694079577922821
    2. 'position' → logprob: -1.8190796375274658
    3. 'val' → logprob: -2.069079637527466
    4. '=' → logprob: -3.444079637527466
    5. ' =' → logprob: -3.819079637527466
    6. 'cost' → logprob: -4.194079399108887
    7. 'pour' → logprob: -4.319079399108887
    8. 'qui' → logprob: -4.444079399108887
    9. '
' → logprob: -4.569079399108887
    10. 'co' → logprob: -4.569079399108887

Token 1808: ' atte' (ID: 43312)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6287223696708679
    2. ',' → logprob: -1.2537224292755127
    3. ' =' → logprob: -2.3787224292755127
    4. 'pos' → logprob: -3.2537224292755127
    5. '_,' → logprob: -4.253722190856934
    6. '   ' → logprob: -5.253722190856934
    7. 'cost' → logprob: -5.753722190856934
    8. 'où' → logprob: -6.003722190856934
    9. 'val' → logprob: -6.503722190856934
    10. 'for' → logprob: -6.503722190856934

Token 1809: 'inte' (ID: 18750)
  Prédit: 'inte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.0002969703928101808
    2. 'nte' → logprob: -8.375296592712402
    3. 'indre' → logprob: -10.500296592712402
    4. 'te' → logprob: -10.875296592712402
    5. '#' → logprob: -12.250296592712402
    6. 'nd' → logprob: -12.625296592712402
    7. 'intes' → logprob: -13.000296592712402
    8. 'ign' → logprob: -13.750296592712402
    9. 'n' → logprob: -13.875296592712402
    10. 'int' → logprob: -14.125296592712402

Token 1810: '
' (ID: 198)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.1137923002243042
    2. 'ans' → logprob: -1.2387923002243042
    3. 'for' → logprob: -2.4887924194335938
    4. 'res' → logprob: -2.6137924194335938
    5. '   ' → logprob: -2.9887924194335938
    6. ',' → logprob: -3.6137924194335938
    7. 'min' → logprob: -3.7387924194335938
    8. 'idx' → logprob: -4.238792419433594
    9. 'p' → logprob: -4.363792419433594
    10. 'best' → logprob: -4.738792419433594

Token 1811: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7281787395477295
    2. 'pos' → logprob: -1.8531787395477295
    3. ',' → logprob: -2.2281787395477295
    4. 'return' → logprob: -2.3531787395477295
    5. ' =' → logprob: -2.6031787395477295
    6. '=' → logprob: -3.9781787395477295
    7. 'res' → logprob: -4.478178977966309
    8. 'idx' → logprob: -4.478178977966309
    9. 'print' → logprob: -4.603178977966309
    10. 'result' → logprob: -4.728178977966309

Token 1812: ' t' (ID: 260)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.2961286306381226
    2. '   ' → logprob: -1.5461286306381226
    3. 'return' → logprob: -1.6711286306381226
    4. 'res' → logprob: -2.296128749847412
    5. 'ans' → logprob: -2.796128749847412
    6. 'pf' → logprob: -3.171128749847412
    7. 'for' → logprob: -3.296128749847412
    8. 'print' → logprob: -3.421128749847412
    9. 'idx' → logprob: -4.046128749847412
    10. 'r' → logprob: -5.421128749847412

Token 1813: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009818419814109802
    2. ' =' → logprob: -4.6348185539245605
    3. ',' → logprob: -10.384818077087402
    4. '=
' → logprob: -12.384818077087402
    5. '=(' → logprob: -12.384818077087402
    6. '=_' → logprob: -12.509818077087402
    7. 'i' → logprob: -12.759818077087402
    8. '=i' → logprob: -13.509818077087402
    9. '```' → logprob: -13.884818077087402
    10. 't' → logprob: -14.009818077087402

Token 1814: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.005115869455039501
    2. ' q' → logprob: -5.630115985870361
    3. 'min' → logprob: -7.005115985870361
    4. 'max' → logprob: -7.630115985870361
    5. 'next' → logprob: -10.130115509033203
    6. ' min' → logprob: -10.380115509033203
    7. 'bis' → logprob: -10.755115509033203
    8. ' max' → logprob: -11.880115509033203
    9. 'sorted' → logprob: -12.255115509033203
    10. '[q' → logprob: -12.505115509033203

Token 1815: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -3.3213025744771585e-05
    2. '[len' → logprob: -10.750033378601074
    3. '[' → logprob: -11.500033378601074
    4. '   ' → logprob: -14.000033378601074
    5. '```' → logprob: -15.625033378601074
    6. '[min' → logprob: -16.125032424926758
    7. '][-' → logprob: -16.125032424926758
    8. '-' → logprob: -16.250032424926758
    9. '
' → logprob: -16.375032424926758
    10. '.pop' → logprob: -17.000032424926758

Token 1816: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00043460296001285315
    2. '1' → logprob: -7.750434398651123
    3. '3' → logprob: -12.625434875488281
    4. ' ' → logprob: -14.750434875488281
    5. '(' → logprob: -16.37543487548828
    6. '-' → logprob: -17.62543487548828
    7. '4' → logprob: -17.62543487548828
    8. '２' → logprob: -17.62543487548828
    9. '5' → logprob: -17.87543487548828
    10. '``' → logprob: -18.50043487548828

Token 1817: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17565593123435974
    2. '][' → logprob: -2.3006558418273926
    3. ']
' → logprob: -2.8006558418273926
    4. ']

' → logprob: -10.17565631866455
    5. '0' → logprob: -10.80065631866455
    6. '[' → logprob: -11.05065631866455
    7. '][-' → logprob: -11.42565631866455
    8. '];' → logprob: -12.05065631866455
    9. ']
' → logprob: -12.05065631866455
    10. '
' → logprob: -12.17565631866455

Token 1818: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9195042252540588
    2. '[' → logprob: -1.169504165649414
    3. '
' → logprob: -1.419504165649414
    4. 'print' → logprob: -3.669504165649414
    5. ' if' → logprob: -4.419504165649414
    6. '   ' → logprob: -5.294504165649414
    7. 'return' → logprob: -7.044504165649414
    8. ',' → logprob: -7.044504165649414
    9. '\n' → logprob: -7.294504165649414
    10. '    
' → logprob: -7.419504165649414

Token 1819: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14656394720077515
    2. 'print' → logprob: -2.77156400680542
    3. 'if' → logprob: -2.77156400680542
    4. ' if' → logprob: -5.52156400680542
    5. 'return' → logprob: -5.77156400680542
    6. '
' → logprob: -6.27156400680542
    7. '   ' → logprob: -7.39656400680542
    8. '\n' → logprob: -7.52156400680542
    9. '#' → logprob: -8.146563529968262
    10. '[' → logprob: -8.646563529968262

Token 1820: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6762528419494629
    2. 'if' → logprob: -0.8012528419494629
    3. 'return' → logprob: -3.676252841949463
    4. 'pf' → logprob: -4.176252841949463
    5. '   ' → logprob: -6.801252841949463
    6. '
' → logprob: -8.176252365112305
    7. 'p' → logprob: -9.301252365112305
    8. 'pe' → logprob: -9.426252365112305
    9. '```' → logprob: -9.426252365112305
    10. ' if' → logprob: -9.551252365112305

Token 1821: ' regarde' (ID: 115760)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19762057065963745
    2. 'if' → logprob: -2.3226206302642822
    3. 'pos' → logprob: -3.4476206302642822
    4. 'return' → logprob: -3.5726206302642822
    5. 'result' → logprob: -5.322620391845703
    6. 'res' → logprob: -5.947620391845703
    7. 'cost' → logprob: -5.947620391845703
    8. '#' → logprob: -6.072620391845703
    9. 'try' → logprob: -6.572620391845703
    10. 'r' → logprob: -6.697620391845703

Token 1822: ' l' (ID: 305)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3587142825126648
    2. 'if' → logprob: -2.3587143421173096
    3. '[' → logprob: -2.6087143421173096
    4. '-' → logprob: -3.3587143421173096
    5. '
' → logprob: -3.3587143421173096
    6. '0' → logprob: -4.1087141036987305
    7. 'q' → logprob: -4.6087141036987305
    8. '[-' → logprob: -4.6087141036987305
    9. '[q' → logprob: -5.3587141036987305
    10. '(-' → logprob: -5.6087141036987305

Token 1823: ''avant' (ID: 161711)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02314438857138157
    2. ']' → logprob: -4.523144245147705
    3. '0' → logprob: -5.023144245147705
    4. '#' → logprob: -5.773144245147705
    5. '1' → logprob: -7.773144245147705
    6. '
' → logprob: -7.773144245147705
    7. '][' → logprob: -7.898144245147705
    8. '```' → logprob: -8.148144721984863
    9. ']
' → logprob: -8.898144721984863
    10. '-
' → logprob: -9.273144721984863

Token 1824: ' dernier' (ID: 27982)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15652529895305634
    2. '(' → logprob: -2.1565253734588623
    3. '(-' → logprob: -3.7815253734588623
    4. '-' → logprob: -5.281525135040283
    5. ' (' → logprob: -7.406525135040283
    6. '-(' → logprob: -8.156525611877441
    7. ' (-' → logprob: -9.281525611877441
    8. ' -' → logprob: -9.531525611877441
    9. 't' → logprob: -10.531525611877441
    10. '(-(' → logprob: -10.781525611877441

Token 1825: ' car' (ID: 1669)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.8940303325653076
    2. 'position' → logprob: -1.5190303325653076
    3. 'print' → logprob: -2.2690303325653076
    4. 'element' → logprob: -2.6440303325653076
    5. '
' → logprob: -2.8940303325653076
    6. '[' → logprob: -3.1440303325653076
    7. 't' → logprob: -3.6440303325653076
    8. 'pos' → logprob: -3.8940303325653076
    9. '#' → logprob: -4.394030570983887
    10. '<|end|>' → logprob: -5.144030570983887

Token 1826: ' le' (ID: 505)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00306624174118042
    2. 'q' → logprob: -6.003066062927246
    3. ' t' → logprob: -7.503066062927246
    4. ' q' → logprob: -11.003066062927246
    5. '
' → logprob: -11.628066062927246
    6. 'len' → logprob: -12.253066062927246
    7. 'print' → logprob: -12.378066062927246
    8. '#' → logprob: -13.503066062927246
    9. '_' → logprob: -14.253066062927246
    10. '...' → logprob: -14.628066062927246

Token 1827: ' dernier' (ID: 27982)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.7701044678688049
    2. '-' → logprob: -0.8951044678688049
    3. 'q' → logprob: -3.14510440826416
    4. 'inf' → logprob: -3.39510440826416
    5. '(-' → logprob: -3.77010440826416
    6. '#' → logprob: -3.89510440826416
    7. '-inf' → logprob: -5.77010440826416
    8. '...' → logprob: -6.77010440826416
    9. '
' → logprob: -6.89510440826416
    10. '```' → logprob: -7.64510440826416

Token 1828: ' est' (ID: 893)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.4868442416191101
    2. '#' → logprob: -2.236844301223755
    3. '
' → logprob: -2.736844301223755
    4. '[' → logprob: -2.861844301223755
    5. ' is' → logprob: -3.611844301223755
    6. 't' → logprob: -3.611844301223755
    7. '][' → logprob: -3.861844301223755
    8. ' est' → logprob: -4.111844062805176
    9. 'est' → logprob: -4.736844062805176
    10. 'token' → logprob: -4.861844062805176

Token 1829: ' (' (ID: 350)
  Prédit: '(in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(in' → logprob: -0.00018220659694634378
    2. '(' → logprob: -8.625182151794434
    3. ' (' → logprob: -13.125182151794434
    4. '(IN' → logprob: -14.875182151794434
    5. '[' → logprob: -16.62518310546875
    6. '[in' → logprob: -17.37518310546875
    7. '   ' → logprob: -17.75018310546875
    8. '[(' → logprob: -18.00018310546875
    9. '```' → logprob: -18.62518310546875
    10. '(len' → logprob: -18.75018310546875

Token 1830: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.006722352933138609
    2. '(in' → logprob: -5.006722450256348
    3. '(' → logprob: -12.631722450256348
    4. ' inf' → logprob: -13.381722450256348
    5. ' (' → logprob: -14.631722450256348
    6. '10' → logprob: -14.881722450256348
    7. '```' → logprob: -15.256722450256348
    8. '-inf' → logprob: -15.506722450256348
    9. '.inf' → logprob: -15.631722450256348
    10. 'in' → logprob: -15.756722450256348

Token 1831: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022153646568767726
    2. 'inf' → logprob: -8.500221252441406
    3. ' ,' → logprob: -11.375221252441406
    4. '```' → logprob: -13.125221252441406
    5. '
' → logprob: -13.375221252441406
    6. ',
' → logprob: -13.625221252441406
    7. ' inf' → logprob: -14.750221252441406
    8. 'import' → logprob: -15.500221252441406
    9. '_inf' → logprob: -15.875221252441406
    10. ')' → logprob: -16.000221252441406

Token 1832: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.9027791495318525e-05
    2. ' inf' → logprob: -10.875019073486328
    3. '_inf' → logprob: -18.125019073486328
    4. '-inf' → logprob: -18.875019073486328
    5. ',' → logprob: -19.000019073486328
    6. '
' → logprob: -19.000019073486328
    7. '.inf' → logprob: -19.125019073486328
    8. ' ' → logprob: -20.000019073486328
    9. '```' → logprob: -20.250019073486328
    10. ' инф' → logprob: -20.500019073486328

Token 1833: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2542540431022644
    2. ')
' → logprob: -1.5042541027069092
    3. ')[' → logprob: -6.75425386428833
    4. ')
' → logprob: -7.37925386428833
    5. '   ' → logprob: -8.379254341125488
    6. ')

' → logprob: -8.379254341125488
    7. ')`
' → logprob: -11.254254341125488
    8. ' )' → logprob: -11.379254341125488
    9. ')#' → logprob: -11.629254341125488
    10. ' )
' → logprob: -11.629254341125488

Token 1834: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7578350901603699
    2. 'if' → logprob: -1.1328351497650146
    3. '
' → logprob: -1.6328351497650146
    4. ' if' → logprob: -4.3828349113464355
    5. '    
' → logprob: -7.6328349113464355
    6. 'return' → logprob: -7.8828349113464355
    7. '```' → logprob: -9.257835388183594
    8. 'r' → logprob: -9.632835388183594
    9. ',' → logprob: -10.257835388183594
    10. '#' → logprob: -10.257835388183594

Token 1835: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4006495773792267
    2. '   ' → logprob: -1.5256495475769043
    3. 'pf' → logprob: -2.4006495475769043
    4. 'return' → logprob: -4.400649547576904
    5. 'print' → logprob: -5.400649547576904
    6. '```' → logprob: -5.775649547576904
    7. '
' → logprob: -6.775649547576904
    8. ' if' → logprob: -7.525649547576904
    9. 'pe' → logprob: -9.025650024414062
    10. '    
' → logprob: -9.275650024414062

Token 1836: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7017879486083984
    2. 'pf' → logprob: -1.0767879486083984
    3. 'if' → logprob: -1.8267879486083984
    4. '```' → logprob: -6.326787948608398
    5. 'return' → logprob: -7.826787948608398
    6. 'print' → logprob: -8.576787948608398
    7. '
' → logprob: -9.451787948608398
    8. ' if' → logprob: -9.701787948608398
    9. '    
' → logprob: -9.951787948608398
    10. '``' → logprob: -9.951787948608398

Token 1837: ' la' (ID: 557)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.001326433615759015
    2. ' t' → logprob: -6.626326560974121
    3. '   ' → logprob: -15.001326560974121
    4. ' ' → logprob: -16.501325607299805
    5. '(t' → logprob: -16.626325607299805
    6. '`t' → logprob: -17.876325607299805
    7. '  ' → logprob: -18.251325607299805
    8. '	t' → logprob: -18.376325607299805
    9. ' ' → logprob: -19.001325607299805
    10. '0' → logprob: -20.001325607299805

Token 1838: ' position' (ID: 4010)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.027409518137574196
    2. ' t' → logprob: -3.652409553527832
    3. 'position' → logprob: -8.402409553527832
    4. 'q' → logprob: -8.652409553527832
    5. '1' → logprob: -9.152409553527832
    6. '0' → logprob: -9.277409553527832
    7. ' position' → logprob: -10.027409553527832
    8. ' ' → logprob: -10.152409553527832
    9. 'prem' → logprob: -10.152409553527832
    10. ' q' → logprob: -10.277409553527832

Token 1839: ' atte' (ID: 43312)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.19604267179965973
    2. '[' → logprob: -2.196042776107788
    3. '0' → logprob: -3.071042776107788
    4. ' t' → logprob: -5.571042537689209
    5. ':=' → logprob: -5.821042537689209
    6. '1' → logprob: -6.321042537689209
    7. 'q' → logprob: -6.571042537689209
    8. '=' → logprob: -6.571042537689209
    9. '
' → logprob: -6.696042537689209
    10. '   ' → logprob: -7.071042537689209

Token 1840: 'inte' (ID: 18750)
  Prédit: 'inte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.0003685861302074045
    2. 'int' → logprob: -9.250368118286133
    3. 't' → logprob: -9.500368118286133
    4. 'nte' → logprob: -9.875368118286133
    5. 'te' → logprob: -10.250368118286133
    6. 'ign' → logprob: -10.750368118286133
    7. 'ind' → logprob: -11.125368118286133
    8. 'v' → logprob: -11.250368118286133
    9. 'ints' → logprob: -11.250368118286133
    10. 'ig' → logprob: -11.750368118286133

Token 1841: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6596609354019165
    2. 't' → logprob: -1.1596609354019165
    3. ' ==' → logprob: -2.659660816192627
    4. '>=' → logprob: -3.284660816192627
    5. '<' → logprob: -3.784660816192627
    6. ' <' → logprob: -4.909660816192627
    7. '<t' → logprob: -5.034660816192627
    8. ' t' → logprob: -5.284660816192627
    9. 'est' → logprob: -5.409660816192627
    10. ' >=' → logprob: -5.659660816192627

Token 1842: ' strict' (ID: 12035)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.29448801279067993
    2. 't' → logprob: -2.169487953186035
    3. '>=' → logprob: -2.669487953186035
    4. '<n' → logprob: -3.044487953186035
    5. ' n' → logprob: -4.794487953186035
    6. '<t' → logprob: -5.169487953186035
    7. 'q' → logprob: -6.169487953186035
    8. ' >=' → logprob: -6.669487953186035
    9. '==' → logprob: -6.669487953186035
    10. ' <' → logprob: -6.669487953186035

Token 1843: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.0002285694790771231
    2. 'ly' → logprob: -8.500228881835938
    3. 'lement' → logprob: -11.500228881835938
    4. 'ément' → logprob: -11.500228881835938
    5. 'ment' → logprob: -13.500228881835938
    6. 'emment' → logprob: -14.125228881835938
    7. 'rement' → logprob: -14.875228881835938
    8. '<' → logprob: -15.000228881835938
    9. 'EMENT' → logprob: -15.000228881835938
    10. 'ements' → logprob: -15.125228881835938

Token 1844: ' avant' (ID: 13339)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.006492019630968571
    2. 'n' → logprob: -6.6314921379089355
    3. '<' → logprob: -6.7564921379089355
    4. '>' → logprob: -7.0064921379089355
    5. ' >=' → logprob: -7.0064921379089355
    6. '<n' → logprob: -8.006491661071777
    7. 't' → logprob: -8.006491661071777
    8. '==' → logprob: -8.006491661071777
    9. 'inf' → logprob: -8.256491661071777
    10. '```' → logprob: -8.256491661071777

Token 1845: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000556012790184468
    2. ' n' → logprob: -7.500555992126465
    3. '   ' → logprob: -14.125555992126465
    4. '1' → logprob: -14.750555992126465
    5. '```' → logprob: -15.000555992126465
    6. '=' → logprob: -15.375555992126465
    7. '(n' → logprob: -15.500555992126465
    8. ' ' → logprob: -15.625555992126465
    9. '=n' → logprob: -15.625555992126465
    10. '	n' → logprob: -15.750555992126465

Token 1846: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6023871302604675
    2. ' or' → logprob: -1.3523871898651123
    3. 'and' → logprob: -2.3523871898651123
    4. ':' → logprob: -3.1023871898651123
    5. 'or' → logprob: -3.2273871898651123
    6. '   ' → logprob: -4.727386951446533
    7. ':
' → logprob: -5.727386951446533
    8. ',' → logprob: -7.852386951446533
    9. 'if' → logprob: -7.977386951446533
    10. '==' → logprob: -8.102387428283691

Token 1847: ' c' (ID: 274)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.1396290063858032
    2. 'print' → logprob: -1.1396290063858032
    3. '   ' → logprob: -1.3896290063858032
    4. 'if' → logprob: -2.6396288871765137
    5. '
' → logprob: -4.264628887176514
    6. ' return' → logprob: -4.389628887176514
    7. 'pf' → logprob: -5.014628887176514
    8. ' print' → logprob: -6.389628887176514
    9. ' if' → logprob: -6.764628887176514
    10. 'inf' → logprob: -6.889628887176514

Token 1848: ''est' (ID: 6616)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.23094049096107483
    2. '   ' → logprob: -2.355940580368042
    3. '#' → logprob: -3.730940580368042
    4. 'print' → logprob: -3.730940580368042
    5. 'on' → logprob: -3.855940580368042
    6. 'om' → logprob: -4.855940341949463
    7. ':' → logprob: -4.980940341949463
    8. '=' → logprob: -5.230940341949463
    9. '       ' → logprob: -6.105940341949463
    10. 'ould' → logprob: -6.230940341949463

Token 1849: ' qu' (ID: 474)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.471440851688385
    2. 'False' → logprob: -1.2214407920837402
    3. '-' → logprob: -3.2214407920837402
    4. '   ' → logprob: -4.09644079208374
    5. 'True' → logprob: -4.97144079208374
    6. 'print' → logprob: -5.34644079208374
    7. 'None' → logprob: -5.97144079208374
    8. ' False' → logprob: -6.22144079208374
    9. '-inf' → logprob: -6.34644079208374
    10. '       ' → logprob: -6.97144079208374

Token 1850: ''on' (ID: 25812)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.3432564735412598
    2. ' q' → logprob: -1.3432564735412598
    3. '   ' → logprob: -2.0932564735412598
    4. ' t' → logprob: -2.7182564735412598
    5. 'n' → logprob: -2.9682564735412598
    6. 'True' → logprob: -3.2182564735412598
    7. ' n' → logprob: -3.2182564735412598
    8. 'False' → logprob: -3.2182564735412598
    9. ' True' → logprob: -3.7182564735412598
    10. 'q' → logprob: -3.7182564735412598

Token 1851: ' ne' (ID: 453)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2417532503604889
    2. 'print' → logprob: -2.366753339767456
    3. ' n' → logprob: -2.991753339767456
    4. 'pe' → logprob: -3.741753339767456
    5. '#' → logprob: -4.491753101348877
    6. 'ne' → logprob: -4.491753101348877
    7. '   ' → logprob: -5.241753101348877
    8. 'return' → logprob: -5.366753101348877
    9. '```' → logprob: -5.491753101348877
    10. 'im' → logprob: -6.116753101348877

Token 1852: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.09604628384113312
    2. 'a' → logprob: -2.846046209335327
    3. ' peut' → logprob: -3.971046209335327
    4. 'l' → logprob: -4.971046447753906
    5. 'pour' → logprob: -5.596046447753906
    6. 'p' → logprob: -6.971046447753906
    7. 'par' → logprob: -7.221046447753906
    8. ' peux' → logprob: -7.596046447753906
    9. 'pas' → logprob: -7.596046447753906
    10. ' pourra' → logprob: -7.846046447753906

Token 1853: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.0005610156804323196
    2. ' pas' → logprob: -7.750561237335205
    3. 'atte' → logprob: -10.000560760498047
    4. '```' → logprob: -10.500560760498047
    5. '#' → logprob: -10.625560760498047
    6. '   ' → logprob: -11.750560760498047
    7. 'plus' → logprob: -12.625560760498047
    8. 'at' → logprob: -12.625560760498047
    9. 'pass' → logprob: -12.750560760498047
    10. '       ' → logprob: -13.500560760498047

Token 1854: ' construire' (ID: 92473)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.038643911480903625
    2. 'print' → logprob: -3.4136438369750977
    3. ' atteindre' → logprob: -5.788643836975098
    4. 'at' → logprob: -8.163643836975098
    5. 'arr' → logprob: -8.538643836975098
    6. 'contin' → logprob: -8.663643836975098
    7. 'l' → logprob: -8.788643836975098
    8. 'aller' → logprob: -8.913643836975098
    9. ' at' → logprob: -9.288643836975098
    10. 'le' → logprob: -9.413643836975098

Token 1855: ' une' (ID: 2463)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5361642837524414
    2. 'n' → logprob: -1.0361642837524414
    3. '(' → logprob: -3.9111642837524414
    4. 'la' → logprob: -4.661164283752441
    5. 'une' → logprob: -5.286164283752441
    6. '(t' → logprob: -5.411164283752441
    7. 't' → logprob: -5.411164283752441
    8. '```' → logprob: -5.411164283752441
    9. 'le' → logprob: -5.536164283752441
    10. 'un' → logprob: -5.536164283752441

Token 1856: ' solution' (ID: 7578)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' → logprob: -0.002279434585943818
    2. 'che' → logprob: -7.127279281616211
    3. 'sol' → logprob: -8.127279281616211
    4. ' solution' → logprob: -8.127279281616211
    5. 'chaine' → logprob: -8.252279281616211
    6. 'suite' → logprob: -9.127279281616211
    7. 's' → logprob: -10.002279281616211
    8. '#' → logprob: -10.127279281616211
    9. 'cou' → logprob: -10.127279281616211
    10. 'ligne' → logprob: -10.127279281616211

Token 1857: ' complète' (ID: 75660)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15290729701519012
    2. 'if' → logprob: -2.277907371520996
    3. ' if' → logprob: -3.777907371520996
    4. '       ' → logprob: -4.402907371520996
    5. ':
' → logprob: -6.527907371520996
    6. ':' → logprob: -7.152907371520996
    7. '
' → logprob: -7.777907371520996
    8. '    
' → logprob: -7.777907371520996
    9. ')
' → logprob: -8.902907371520996
    10. ')' → logprob: -8.902907371520996

Token 1858: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6485984921455383
    2. '   ' → logprob: -1.2735984325408936
    3. 'if' → logprob: -1.7735984325408936
    4. 'return' → logprob: -4.898598670959473
    5. ' if' → logprob: -5.023598670959473
    6. ':' → logprob: -5.648598670959473
    7. 'raise' → logprob: -5.773598670959473
    8. ' or' → logprob: -6.273598670959473
    9. ':
' → logprob: -6.773598670959473
    10. 'or' → logprob: -7.148598670959473

Token 1859: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30676329135894775
    2. 'if' → logprob: -2.056763172149658
    3. '
' → logprob: -3.181763172149658
    4. ' if' → logprob: -3.431763172149658
    5. ' or' → logprob: -3.431763172149658
    6. '       ' → logprob: -4.431763172149658
    7. '\n' → logprob: -5.306763172149658
    8. 'or' → logprob: -5.431763172149658
    9. '    
' → logprob: -6.181763172149658
    10. ':
' → logprob: -6.181763172149658

Token 1860: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4758054316043854
    2. 'if' (adapté à ' if') → logprob: -0.975805401802063
    3. ' if' → logprob: -6.725805282592773
    4. '```' → logprob: -7.600805282592773
    5. '	if' → logprob: -11.100805282592773
    6. '
' → logprob: -12.350805282592773
    7. '       ' → logprob: -12.600805282592773
    8. '``' → logprob: -12.850805282592773
    9. '    
' → logprob: -13.850805282592773
    10. 'return' → logprob: -14.850805282592773

Token 1861: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0011849920265376568
    2. ' t' → logprob: -6.751184940338135
    3. '   ' → logprob: -11.126185417175293
    4. '`t' → logprob: -16.251184463500977
    5. '	t' → logprob: -17.626184463500977
    6. ' ' → logprob: -19.001184463500977
    7. ' ' → logprob: -19.376184463500977
    8. '  ' → logprob: -19.376184463500977
    9. '
' → logprob: -20.251184463500977
    10. '   ' → logprob: -21.251184463500977

Token 1862: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010771531378850341
    2. '   ' → logprob: -9.500107765197754
    3. '```' → logprob: -11.750107765197754
    4. '[
' → logprob: -12.250107765197754
    5. 't' → logprob: -12.375107765197754
    6. '
' → logprob: -12.500107765197754
    7. '()[' → logprob: -12.625107765197754
    8. '_[' → logprob: -14.125107765197754
    9. ' [' → logprob: -14.250107765197754
    10. '<' → logprob: -14.250107765197754

Token 1863: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. '1' → logprob: -14.125001907348633
    3. ' ' → logprob: -14.500001907348633
    4. '```' → logprob: -15.000001907348633
    5. '
' → logprob: -15.500001907348633
    6. '[' → logprob: -15.625001907348633
    7. '   ' → logprob: -16.562501907348633
    8. '۰' → logprob: -17.687501907348633
    9. '`' → logprob: -17.750001907348633
    10. '
' → logprob: -18.250001907348633

Token 1864: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.017819177359342575
    2. ' <' → logprob: -4.267819404602051
    3. '<n' → logprob: -6.142819404602051
    4. '<int' → logprob: -8.39281940460205
    5. '[' → logprob: -8.39281940460205
    6. '<size' → logprob: -9.01781940460205
    7. '>=' → logprob: -9.14281940460205
    8. ')' → logprob: -9.39281940460205
    9. '<num' → logprob: -9.39281940460205
    10. ']' → logprob: -9.76781940460205

Token 1865: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.00685805082321167
    2. ' <' → logprob: -5.006857872009277
    3. '<n' → logprob: -9.381857872009277
    4. '<int' → logprob: -10.631857872009277
    5. '<size' → logprob: -12.006857872009277
    6. '<num' → logprob: -12.381857872009277
    7. '>=' → logprob: -12.506857872009277
    8. '<len' → logprob: -12.506857872009277
    9. '<class' → logprob: -13.131857872009277
    10. '<th' → logprob: -13.256857872009277

Token 1866: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005530327325686812
    2. ' n' → logprob: -7.500553131103516
    3. '	n' → logprob: -17.750553131103516
    4. '   ' → logprob: -19.375553131103516
    5. ' ' → logprob: -21.000553131103516
    6. '```' → logprob: -21.125553131103516
    7. '
' → logprob: -21.500553131103516
    8. ' ' → logprob: -21.750553131103516
    9. ')n' → logprob: -22.000553131103516
    10. '  ' → logprob: -22.375553131103516

Token 1867: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3357885181903839
    2. ':
' → logprob: -1.3357884883880615
    3. '       ' → logprob: -3.9607884883880615
    4. ':return' → logprob: -5.835788726806641
    5. ' or' → logprob: -8.96078872680664
    6. '   ' → logprob: -9.83578872680664
    7. '):
' → logprob: -10.21078872680664
    8. ':
' → logprob: -10.33578872680664
    9. ' and' → logprob: -11.83578872680664
    10. '):' → logprob: -11.96078872680664

Token 1868: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001915191882289946
    2. '   ' → logprob: -6.626914978027344
    3. '```' → logprob: -8.001914978027344
    4. '	' → logprob: -9.376914978027344
    5. 'return' → logprob: -9.501914978027344
    6. 'pf' → logprob: -10.251914978027344
    7. '	   ' → logprob: -11.251914978027344
    8. ' return' → logprob: -11.501914978027344
    9. '``' → logprob: -11.751914978027344
    10. '	return' → logprob: -12.251914978027344

Token 1869: ' return' (ID: 622)
  Prédit: 'pf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pf' → logprob: -0.015382727608084679
    2. 'print' → logprob: -4.640382766723633
    3. 'return' (adapté à ' return') → logprob: -6.015382766723633
    4. '   ' → logprob: -6.265382766723633
    5. '       ' → logprob: -7.140382766723633
    6. '```' → logprob: -7.765382766723633
    7. ' pf' → logprob: -11.015382766723633
    8. '``' → logprob: -11.390382766723633
    9. '           ' → logprob: -11.515382766723633
    10. '        
' → logprob: -12.640382766723633

Token 1870: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02283378504216671
    2. '-inf' → logprob: -4.522833824157715
    3. ' -' → logprob: -5.022833824157715
    4. 'print' → logprob: -6.397833824157715
    5. '   ' → logprob: -7.022833824157715
    6. '
' → logprob: -7.022833824157715
    7. '-print' → logprob: -7.022833824157715
    8. 'inf' → logprob: -8.272833824157715
    9. '       ' → logprob: -8.397833824157715
    10. 'None' → logprob: -9.647833824157715

Token 1871: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. 'inf' → logprob: -15.75
    3. ' ' → logprob: -17.75
    4. '2' → logprob: -19.125
    5. 'print' → logprob: -19.75
    6. '
' → logprob: -20.75
    7. '9' → logprob: -21.125
    8. '111' → logprob: -21.125
    9. '```' → logprob: -21.25
    10. '   ' → logprob: -21.25

Token 1872: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04095147177577019
    2. '
' → logprob: -3.5409514904022217
    3. '<|end|>' → logprob: -5.665951251983643
    4. '    
' → logprob: -5.915951251983643
    5. ')' → logprob: -6.290951251983643
    6. '       ' → logprob: -6.790951251983643
    7. 'else' → logprob: -8.0409517288208
    8. '	' → logprob: -8.7909517288208
    9. '   
' → logprob: -8.7909517288208
    10. ')
' → logprob: -9.0409517288208

Token 1873: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32221660017967224
    2. '   ' → logprob: -1.3222166299819946
    3. '    
' → logprob: -5.572216510772705
    4. 'else' → logprob: -6.947216510772705
    5. '       ' → logprob: -7.572216510772705
    6. ' 
' → logprob: -7.697216510772705
    7. '
' → logprob: -7.697216510772705
    8. ')' → logprob: -7.697216510772705
    9. '<|end|>' → logprob: -7.822216510772705
    10. '   
' → logprob: -8.197216987609863

Token 1874: ' Cas' (ID: 8066)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.12958690524101257
    2. '   ' → logprob: -2.254586935043335
    3. '
' → logprob: -4.379586696624756
    4. ' t' → logprob: -6.129586696624756
    5. 'else' → logprob: -7.879586696624756
    6. 'return' → logprob: -8.004587173461914
    7. '    
' → logprob: -8.629587173461914
    8. '\n' → logprob: -8.629587173461914
    9. ' 
' → logprob: -8.754587173461914
    10. ')' → logprob: -8.754587173461914

Token 1875: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1876: ''im' (ID: 44488)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.24157081544399261
    2. 'é' → logprob: -3.2415707111358643
    3. 'ef' → logprob: -3.4915707111358643
    4. 'None' → logprob: -3.7415707111358643
    5. ''é' → logprob: -3.8665707111358643
    6. 'im' → logprob: -4.241570949554443
    7. ''in' → logprob: -4.241570949554443
    8. 'éf' → logprob: -4.491570949554443
    9. 'istance' → logprob: -4.866570949554443
    10. ''arrêt' → logprob: -5.116570949554443

Token 1877: 'poss' (ID: 67395)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.06324642896652222
    2. 'p' → logprob: -3.063246488571167
    3. 'poss' → logprob: -4.688246250152588
    4. 'port' → logprob: -5.438246250152588
    5. 'pl' → logprob: -8.313246726989746
    6. 'pass' → logprob: -8.313246726989746
    7. '_possible' → logprob: -8.938246726989746
    8. 'plant' → logprob: -10.063246726989746
    9. 'pot' → logprob: -10.188246726989746
    10. 'pression' → logprob: -10.188246726989746

Token 1878: 'ibilité' (ID: 44186)
  Prédit: 'ible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ible' → logprob: -0.7320168614387512
    2. 'able' → logprob: -1.8570168018341064
    3. 'isible' → logprob: -1.8570168018341064
    4. 'é' → logprob: -3.3570168018341064
    5. 'ile' → logprob: -3.3570168018341064
    6. 'is' → logprob: -3.6070168018341064
    7. 'iable' → logprob: -4.2320170402526855
    8. 'sible' → logprob: -4.2320170402526855
    9. 'ble' → logprob: -4.7320170402526855
    10. 'let' → logprob: -4.9820170402526855

Token 1879: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1556355059146881
    2. '
' → logprob: -2.2806355953216553
    3. '<|end|>' → logprob: -4.280635356903076
    4. '    
' → logprob: -5.030635356903076
    5. 'return' → logprob: -5.280635356903076
    6. 'else' → logprob: -5.280635356903076
    7. 't' → logprob: -6.280635356903076
    8. '       ' → logprob: -6.405635356903076
    9. ')' → logprob: -6.405635356903076
    10. ' else' → logprob: -6.655635356903076

Token 1880: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010139225982129574
    2. 'return' → logprob: -5.385138988494873
    3. '
' → logprob: -5.760138988494873
    4. '    
' → logprob: -6.510138988494873
    5. 'else' → logprob: -8.135139465332031
    6. '       ' → logprob: -8.885139465332031
    7. 't' → logprob: -9.135139465332031
    8. ' return' → logprob: -9.510139465332031
    9. '	return' → logprob: -10.385139465332031
    10. '```' → logprob: -10.385139465332031

Token 1881: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16082018613815308
    2. 't' → logprob: -1.9108202457427979
    3. 'print' → logprob: -7.910820007324219
    4. ' return' → logprob: -8.910820007324219
    5. 'else' → logprob: -10.535820007324219
    6. ' t' → logprob: -11.160820007324219
    7. '   ' → logprob: -11.410820007324219
    8. '```' → logprob: -11.410820007324219
    9. '{return' → logprob: -11.660820007324219
    10. '`t' → logprob: -12.285820007324219

Token 1882: ' Sinon' (ID: 154924)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -5.538490950129926e-05
    2. '   ' → logprob: -10.250055313110352
    3. ' return' → logprob: -11.500055313110352
    4. 'pf' → logprob: -12.625055313110352
    5. 'print' → logprob: -12.750055313110352
    6. 't' → logprob: -13.125055313110352
    7. 'def' → logprob: -14.125055313110352
    8. '    
' → logprob: -14.750055313110352
    9. '```' → logprob: -15.250055313110352
    10. '
' → logprob: -15.625055313110352

Token 1883: ',' (ID: 11)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03412635251879692
    2. '   ' → logprob: -3.5341262817382812
    3. 't' → logprob: -5.784126281738281
    4. ' return' → logprob: -6.659126281738281
    5. ' t' → logprob: -12.534126281738281
    6. '       ' → logprob: -13.284126281738281
    7. '	return' → logprob: -13.784126281738281
    8. '
' → logprob: -14.909126281738281
    9. '```' → logprob: -14.909126281738281
    10. 'pf' → logprob: -15.159126281738281

Token 1884: ' on' (ID: 402)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00013858173042535782
    2. ' return' → logprob: -9.000138282775879
    3. '   ' → logprob: -12.000138282775879
    4. 't' → logprob: -12.250138282775879
    5. 'pf' → logprob: -12.625138282775879
    6. 'print' → logprob: -14.000138282775879
    7. '	return' → logprob: -17.750139236450195
    8. '```' → logprob: -19.125139236450195
    9. 'ret' → logprob: -19.250139236450195
    10. '    
' → logprob: -19.750139236450195

Token 1885: ' retourne' (ID: 178818)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009918992407619953
    2. ' return' → logprob: -5.259919166564941
    3. '   ' → logprob: -5.384919166564941
    4. 'def' → logprob: -9.884919166564941
    5. '	return' → logprob: -11.634919166564941
    6. 'pf' → logprob: -12.384919166564941
    7. '#' → logprob: -12.384919166564941
    8. 'ret' → logprob: -12.759919166564941
    9. '```' → logprob: -12.759919166564941
    10. '
' → logprob: -13.259919166564941

Token 1886: ' le' (ID: 505)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.8624639324116288e-06
    2. ' t' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.125001907348633
    4. 'return' → logprob: -17.750001907348633
    5. '`t' → logprob: -18.250001907348633
    6. '(t' → logprob: -21.375001907348633
    7. 'print' → logprob: -22.500001907348633
    8. 'int' → logprob: -22.875001907348633
    9. '	t' → logprob: -23.375001907348633
    10. 'q' → logprob: -23.875001907348633

Token 1887: ' coût' (ID: 73109)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.004505604039877653
    2. ' t' → logprob: -6.254505634307861
    3. '1' → logprob: -6.504505634307861
    4. 'q' → logprob: -7.504505634307861
    5. '0' → logprob: -8.254505157470703
    6. '[' → logprob: -9.129505157470703
    7. 's' → logprob: -9.629505157470703
    8. ' q' → logprob: -11.379505157470703
    9. 'print' → logprob: -11.379505157470703
    10. 'cost' → logprob: -11.379505157470703

Token 1888: ' minimal' (ID: 19957)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.02359495498239994
    2. 'return' → logprob: -3.898594856262207
    3. ' t' → logprob: -6.273594856262207
    4. '(t' → logprob: -6.898594856262207
    5. ' return' → logprob: -9.398594856262207
    6. '   ' → logprob: -10.773594856262207
    7. 's' → logprob: -11.148594856262207
    8. '[t' → logprob: -11.148594856262207
    9. '[' → logprob: -12.023594856262207
    10. '`t' → logprob: -12.273594856262207

Token 1889: ' pour' (ID: 1930)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0624728724360466
    2. '(t' → logprob: -3.3124728202819824
    3. 'return' → logprob: -4.312472820281982
    4. ' t' → logprob: -5.062472820281982
    5. '   ' → logprob: -6.812472820281982
    6. '(' → logprob: -6.937472820281982
    7. '```' → logprob: -7.062472820281982
    8. ' return' → logprob: -7.812472820281982
    9. '(
' → logprob: -8.31247329711914
    10. '`' → logprob: -8.43747329711914

Token 1890: ' atteindre' (ID: 95734)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.6378504633903503
    2. 't' → logprob: -0.7628504633903503
    3. 'arr' → logprob: -6.262850284576416
    4. 'at' → logprob: -7.012850284576416
    5. 're' → logprob: -7.262850284576416
    6. ' atteindre' → logprob: -7.512850284576416
    7. 'return' → logprob: -8.012850761413574
    8. '   ' → logprob: -8.262850761413574
    9. 'par' → logprob: -9.262850761413574
    10. 'acc' → logprob: -9.262850761413574

Token 1891: ' la' (ID: 557)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3872189521789551
    2. 'n' → logprob: -1.137218952178955
    3. 'q' → logprob: -8.387218475341797
    4. ' n' → logprob: -9.887218475341797
    5. ' t' → logprob: -10.262218475341797
    6. '   ' → logprob: -10.887218475341797
    7. '`t' → logprob: -11.762218475341797
    8. '```' → logprob: -12.887218475341797
    9. '0' → logprob: -13.012218475341797
    10. '
' → logprob: -13.887218475341797

Token 1892: ' fin' (ID: 2131)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0052422950975596905
    2. 'point' → logprob: -5.630242347717285
    3. 'position' → logprob: -6.630242347717285
    4. 't' → logprob: -9.255242347717285
    5. 'nth' → logprob: -10.255242347717285
    6. 'niveau' → logprob: -10.630242347717285
    7. '```' → logprob: -10.630242347717285
    8. 'dern' → logprob: -10.755242347717285
    9. 'pos' → logprob: -11.130242347717285
    10. ' n' → logprob: -11.380242347717285

Token 1893: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39342594146728516
    2. 't' → logprob: -1.1434259414672852
    3. 'return' → logprob: -5.768425941467285
    4. ' t' → logprob: -6.143425941467285
    5. '(t' → logprob: -7.518425941467285
    6. '```' → logprob: -7.768425941467285
    7. '(' → logprob: -8.643425941467285
    8. ' return' → logprob: -9.768425941467285
    9. '
' → logprob: -10.768425941467285
    10. '[' → logprob: -11.268425941467285

Token 1894: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20673952996730804
    2. '   ' → logprob: -1.9567395448684692
    3. 't' → logprob: -3.2067394256591797
    4. ' return' → logprob: -5.45673942565918
    5. ' t' → logprob: -7.33173942565918
    6. ':return' → logprob: -11.20673942565918
    7. '{return' → logprob: -11.70673942565918
    8. '(t' → logprob: -12.08173942565918
    9. '	return' → logprob: -12.33173942565918
    10. '```' → logprob: -12.70673942565918

Token 1895: ' return' (ID: 622)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.589372992515564
    2. 'return' (adapté à ' return') → logprob: -0.839372992515564
    3. '   ' → logprob: -4.3393731117248535
    4. ' return' → logprob: -8.839372634887695
    5. ' t' → logprob: -8.964372634887695
    6. '```' → logprob: -11.089372634887695
    7. '`t' → logprob: -12.964372634887695
    8. '{return' → logprob: -13.214372634887695
    9. '
' → logprob: -13.339372634887695
    10. ':return' → logprob: -13.589372634887695

Token 1896: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -7.941850526549388e-06
    2. ' t' → logprob: -11.750007629394531
    3. '`t' → logprob: -19.75000762939453
    4. 'q' → logprob: -21.50000762939453
    5. '   ' → logprob: -21.75000762939453
    6. '	t' → logprob: -22.62500762939453
    7. '(t' → logprob: -24.12500762939453
    8. '
' → logprob: -26.00000762939453
    9. 'int' → logprob: -26.25000762939453
    10. ' ' → logprob: -26.25000762939453

Token 1897: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. ' [' → logprob: -15.000000953674316
    3. '][' → logprob: -16.5
    4. '1' → logprob: -16.5
    5. '```' → logprob: -16.625
    6. '0' → logprob: -17.25
    7. '\[' → logprob: -18.625
    8. '   ' → logprob: -18.625
    9. '()[' → logprob: -18.75
    10. '(' → logprob: -19.0

Token 1898: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005937566980719566
    2. '0' → logprob: -5.130937576293945
    3. '-' → logprob: -11.755937576293945
    4. ']' → logprob: -14.880937576293945
    5. '
' → logprob: -16.318437576293945
    6. '2' → logprob: -16.568437576293945
    7. '' → logprob: -16.693437576293945
    8. '１' → logprob: -16.755937576293945
    9. '[' → logprob: -16.880937576293945
    10. ')' → logprob: -16.943437576293945

Token 1899: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011892046313732862
    2. '<|end|>' → logprob: -9.50011920928955
    3. '}' → logprob: -10.37511920928955
    4. ')
' → logprob: -12.37511920928955
    5. '```' → logprob: -12.75011920928955
    6. ' )' → logprob: -13.37511920928955
    7. '<|end|>' → logprob: -14.25011920928955
    8. '#' → logprob: -14.37511920928955
    9. ')#' → logprob: -14.75011920928955
    10. '()' → logprob: -15.00011920928955

Token 1900: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00628970330581069
    2. '<|end|>' → logprob: -5.506289482116699
    3. '```' → logprob: -6.881289482116699
    4. 'print' → logprob: -7.256289482116699
    5. '
' → logprob: -8.5062894821167
    6. ' if' → logprob: -8.8812894821167
    7. '#' → logprob: -9.3812894821167
    8. '  
' → logprob: -12.0062894821167
    9. 'pf' → logprob: -12.1312894821167
    10. '<|end|>' → logprob: -12.3812894821167

Token 1901: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.134509021649137e-05
    2. 'print' → logprob: -10.50006103515625
    3. 'pf' → logprob: -11.25006103515625
    4. '```' → logprob: -11.62506103515625
    5. '
' → logprob: -12.25006103515625
    6. '#' → logprob: -12.62506103515625
    7. ' if' → logprob: -12.87506103515625
    8. '  
' → logprob: -15.25006103515625
    9. '#if' → logprob: -15.37506103515625
    10. '@if' → logprob: -15.62506103515625

Token 1902: ' ex' (ID: 513)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.045823566731997e-05
    2. ' if' → logprob: -11.000020027160645
    3. '__' → logprob: -13.250020027160645
    4. '_if' → logprob: -14.250020027160645
    5. '=' → logprob: -15.125020027160645
    6. '
' → logprob: -15.250020027160645
    7. ':' → logprob: -15.625020027160645
    8. '#' → logprob: -15.625020027160645
    9. '```' → logprob: -16.12502098083496
    10. ':
' → logprob: -16.62502098083496

Token 1903: 'éc' (ID: 5675)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3040611147880554
    2. 'ecute' → logprob: -1.8040611743927002
    3. 'ec' → logprob: -2.5540611743927
    4. 'ecut' → logprob: -4.804060935974121
    5. 'éc' → logprob: -5.304060935974121
    6. 'ecutable' → logprob: -6.054060935974121
    7. 'ecution' → logprob: -6.554060935974121
    8. 'e' → logprob: -7.304060935974121
    9. '__' → logprob: -7.679060935974121
    10. 'ecu' → logprob: -8.054060935974121

Token 1904: 'ute' (ID: 1331)
  Prédit: 'ecute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ecute' → logprob: -0.9456861615180969
    2. 'if' → logprob: -1.1956861019134521
    3. 'éc' → logprob: -1.5706861019134521
    4. 'ec' → logprob: -2.320686101913452
    5. 'e' → logprob: -6.320686340332031
    6. 'é' → logprob: -7.445686340332031
    7. 'ecut' → logprob: -8.320686340332031
    8. 'cute' → logprob: -9.195686340332031
    9. 'écution' → logprob: -9.820686340332031
    10. 'écut' → logprob: -9.820686340332031

Token 1905: ' la' (ID: 557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07238531857728958
    2. 'main' → logprob: -3.072385311126709
    3. '__' → logprob: -3.947385311126709
    4. '```' → logprob: -5.572385311126709
    5. '
' → logprob: -8.197385787963867
    6. '\
' → logprob: -10.322385787963867
    7. '(main' → logprob: -10.322385787963867
    8. '``' → logprob: -10.697385787963867
    9. '__
' → logprob: -11.572385787963867
    10. ' if' → logprob: -11.697385787963867

Token 1906: ' fonction' (ID: 17610)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.023914270102977753
    2. 'main' → logprob: -4.273914337158203
    3. '__' → logprob: -4.648914337158203
    4. '```' → logprob: -9.898914337158203
    5. ' if' → logprob: -10.273914337158203
    6. ' main' → logprob: -11.023914337158203
    7. '__
' → logprob: -11.648914337158203
    8. 'def' → logprob: -11.898914337158203
    9. '`
' → logprob: -12.398914337158203
    10. '`' → logprob: -12.898914337158203

Token 1907: ' principale' (ID: 68926)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009171441197395325
    2. '()' → logprob: -5.134171485900879
    3. '()
' → logprob: -5.884171485900879
    4. 'main' → logprob: -8.259171485900879
    5. 'print' → logprob: -9.134171485900879
    6. ' if' → logprob: -10.509171485900879
    7. '():
' → logprob: -11.134171485900879
    8. '()

' → logprob: -11.634171485900879
    9. '__' → logprob: -11.759171485900879
    10. '
' → logprob: -11.759171485900879

Token 1908: ' et' (ID: 859)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003282048273831606
    2. '
' → logprob: -5.753282070159912
    3. ' if' → logprob: -10.003281593322754
    4. 'print' → logprob: -11.128281593322754
    5. '```' → logprob: -11.253281593322754
    6. 'main' → logprob: -12.253281593322754
    7. '    
' → logprob: -12.253281593322754
    8. '  
' → logprob: -12.378281593322754
    9. '()
' → logprob: -12.753281593322754
    10. '(
' → logprob: -13.253281593322754

Token 1909: ' on' (ID: 402)
  Prédit: 'pf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pf' → logprob: -0.1346832662820816
    2. 'print' → logprob: -2.38468337059021
    3. 'if' → logprob: -3.38468337059021
    4. '```' → logprob: -14.384683609008789
    5. ' pf' → logprob: -15.384683609008789
    6. 'p' → logprob: -18.50968360900879
    7. ' if' → logprob: -19.25968360900879
    8. 'assert' → logprob: -19.38468360900879
    9. 'exit' → logprob: -19.50968360900879
    10. 'pr' → logprob: -19.63468360900879

Token 1910: ' affiche' (ID: 127479)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1496511846780777
    2. 'print' → logprob: -2.024651288986206
    3. 'pf' → logprob: -5.149651050567627
    4. '```' → logprob: -7.274651050567627
    5. ' if' → logprob: -7.774651050567627
    6. ' print' → logprob: -10.899651527404785
    7. '``' → logprob: -11.774651527404785
    8. '
' → logprob: -13.274651527404785
    9. ' pf' → logprob: -13.399651527404785
    10. 'pr' → logprob: -13.774651527404785

Token 1911: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003816703101620078
    2. 'pf' → logprob: -6.003816604614258
    3. '(p' → logprob: -7.003816604614258
    4. '(print' → logprob: -7.753816604614258
    5. '```' → logprob: -13.503816604614258
    6. 'p' → logprob: -14.003816604614258
    7. ' print' → logprob: -15.378816604614258
    8. ' pf' → logprob: -16.128816604614258
    9. 'printf' → logprob: -17.253816604614258
    10. '_pf' → logprob: -17.878816604614258

Token 1912: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5183945894241333
    2. 'print' → logprob: -2.2683944702148438
    3. 'main' → logprob: -2.3933944702148438
    4. 'pf' → logprob: -2.6433944702148438
    5. '()' → logprob: -2.7683944702148438
    6. '(main' → logprob: -3.6433944702148438
    7. '(p' → logprob: -4.143394470214844
    8. '(' → logprob: -4.143394470214844
    9. '(result' → logprob: -5.393394470214844
    10. '(print' → logprob: -5.518394470214844

Token 1913: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31404373049736023
    2. 'pf' → logprob: -1.5640437602996826
    3. 'if' → logprob: -2.8140437602996826
    4. '```' → logprob: -8.439043998718262
    5. '
' → logprob: -10.564043998718262
    6. 'p' → logprob: -12.189043998718262
    7. '``' → logprob: -12.689043998718262
    8. '\' → logprob: -12.814043998718262
    9. '_pf' → logprob: -13.314043998718262
    10. ' pf' → logprob: -13.439043998718262

Token 1914: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7253249883651733
    2. 'if' → logprob: -0.9753249883651733
    3. 'pf' → logprob: -1.9753249883651733
    4. '```' → logprob: -9.975324630737305
    5. '``' → logprob: -17.350324630737305
    6. '
' → logprob: -17.725324630737305
    7. '  
' → logprob: -17.850324630737305
    8. ' pf' → logprob: -17.975324630737305
    9. '    
' → logprob: -18.350324630737305
    10. ' if' → logprob: -18.475324630737305

Token 1915: '(main' (ID: 48921)
  Prédit: '(main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(main' → logprob: -1.700132997939363e-05
    2. '(' → logprob: -11.000017166137695
    3. 'main' → logprob: -16.000017166137695
    4. '(Main' → logprob: -16.125017166137695
    5. '()' → logprob: -17.125017166137695
    6. ' (' → logprob: -19.125017166137695
    7. '(
' → logprob: -19.125017166137695
    8. '(max' → logprob: -19.375017166137695
    9. '((' → logprob: -19.875017166137695
    10. '(int' → logprob: -20.250017166137695

Token 1916: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -4.572941179503687e-05
    2. '()' → logprob: -10.000045776367188
    3. ' ())' → logprob: -16.125045776367188
    4. '())
' → logprob: -16.500045776367188
    5. '();)' → logprob: -16.750045776367188
    6. ')' → logprob: -17.875045776367188
    7. '())

' → logprob: -18.750045776367188
    8. '()))' → logprob: -18.875045776367188
    9. '()]' → logprob: -19.375045776367188
    10. '().' → logprob: -20.375045776367188


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1914
Tokens correctement prédits (1ère position, stricte): 435
Tokens correctement prédits (1ère position, avec adaptation): 459
Tokens correctement prédits (top 10): 1005
Précision stricte (1ère position): 22.73%
Précision adaptée (1ère position): 23.98%
Précision (top 10): 52.51%
================================================================================
