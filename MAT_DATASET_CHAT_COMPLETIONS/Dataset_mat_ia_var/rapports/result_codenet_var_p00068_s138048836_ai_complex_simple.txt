================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:48:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin
from functools import reduce
from itertools import repeat, islice, chain, starmap, tee, permutations

def norm(v): 
    return sum(map(lambda x: x**2, v))**0.5

def unit(v): 
    n = norm(v)
    return list(map(lambda x: x/n, v)) if n else v

def cos_angle(u, v):
    return (sum(map(lambda x, y: x*y, u, v)) / (norm(u)*norm(v))) if norm(u)*norm(v) else 0

def next_point(points, p, direction, cmp_op):
    idx = [i for i in range(len(points)) if points[i][1] >= p[1] and points[i]!=p]
    if not idx: return None
    candidates = [points[i] for i in idx]
    v_base = [1, 0] if direction == "r" else [-1, 0]
    vlist = [[q[0]-p[0], q[1]-p[1]] for q in candidates]
    cosines = list(starmap(lambda v: v[0]/norm(v) if norm(v) else -2 if direction == "r" else 2, zip(vlist)))
    composite = list(zip(candidates, cosines))
    reducer = (lambda a,b: a if cmp_op(a[1], b[1]) else b)
    return reduce(reducer, composite)[0] if composite else None

def hull(points, direction):
    import operator as op
    cmp_op = op.ge if direction=="r" else op.le
    p = points[0]
    output = [p]
    lookup = set()
    while p!=points[-1]:
        q = next_point(points, p, direction, cmp_op)
        output.append(q)
        p = q
    return output

def chunk(n, iterable):
    it = iter(iterable)
    return list(islice(it, n))

while True:
    line = next(stdin).strip()
    if not line:
        continue
    n = int(line)
    if n==0:
        break
    d = list(starmap(lambda a,b: [float(a), float(b)], *tee((s for s in (l.strip().split(",") for l in islice(stdin, n))), 1)))
    d.sort(key=lambda x: x[1])
    h1 = hull(d, "r")
    h2 = hull(d, "l")
    print(len(d) - ( len(h1 + h2) - 2))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -1.1663661003112793
    2. 'path' → logprob: -1.5413661003112793
    3. 'stdin' → logprob: -1.5413661003112793
    4. 'stdout' → logprob: -2.0413661003112793
    5. 'exit' → logprob: -2.6663661003112793
    6. 'modules' → logprob: -3.7913661003112793
    7. '*' → logprob: -4.916366100311279
    8. 'version' → logprob: -5.041366100311279
    9. '.stdin' → logprob: -5.666366100311279
    10. 'stderr' → logprob: -5.791366100311279

Token 4: '
' (ID: 198)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.3334103226661682
    2. 'import' → logprob: -1.3334102630615234
    3. ' as' → logprob: -4.833410263061523
    4. ',' → logprob: -5.833410263061523
    5. '<|end|>' → logprob: -6.083410263061523
    6. 'newline' → logprob: -6.833410263061523
    7. 'stdin' → logprob: -7.083410263061523
    8. 'from' → logprob: -7.333410263061523
    9. ':' → logprob: -7.458410263061523
    10. 'print' → logprob: -7.583410263061523

Token 5: 'from' (ID: 2845)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.23650051653385162
    2. 'import' → logprob: -1.6115005016326904
    3. ' as' → logprob: -5.1115007400512695
    4. '<|end|>' → logprob: -5.7365007400512695
    5. ',' → logprob: -6.9865007400512695
    6. ' import' → logprob: -8.23650074005127
    7. 'from' → logprob: -9.36150074005127
    8. ' ' → logprob: -9.73650074005127
    9. '```' → logprob: -9.86150074005127
    10. '.' → logprob: -9.86150074005127

Token 6: ' functools' (ID: 142636)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.3942541182041168
    2. 'import' → logprob: -1.5192540884017944
    3. ' import' → logprob: -3.519254207611084
    4. ' os' → logprob: -4.019254207611084
    5. 'sys' → logprob: -4.019254207611084
    6. 'datetime' → logprob: -4.644254207611084
    7. 'random' → logprob: -4.894254207611084
    8. 'stdout' → logprob: -5.269254207611084
    9. 'time' → logprob: -5.519254207611084
    10. 'collections' → logprob: -5.644254207611084

Token 7: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0011711753904819489
    2. ' import' → logprob: -6.751171112060547
    3. 'from' → logprob: -15.251171112060547
    4. '-import' → logprob: -15.251171112060547
    5. '.import' → logprob: -15.251171112060547
    6. 'Import' → logprob: -15.751171112060547
    7. ''import' → logprob: -17.126171112060547
    8. '	import' → logprob: -17.376171112060547
    9. '```' → logprob: -17.876171112060547
    10. '_import' → logprob: -18.001171112060547

Token 8: ' reduce' (ID: 10389)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.001956348307430744
    2. 'wrap' → logprob: -7.001956462860107
    3. 'reduce' → logprob: -7.751956462860107
    4. 'cache' → logprob: -8.00195598602295
    5. 'partial' → logprob: -8.50195598602295
    6. 'cached' → logprob: -10.00195598602295
    7. 'cmp' → logprob: -11.37695598602295
    8. ' l' → logprob: -12.12695598602295
    9. 'import' → logprob: -12.25195598602295
    10. '_l' → logprob: -13.25195598602295

Token 9: '
' (ID: 198)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.8389462828636169
    2. 'import' → logprob: -1.2139463424682617
    3. 'def' → logprob: -1.8389463424682617
    4. '<|end|>' → logprob: -2.7139463424682617
    5. 'from' → logprob: -3.7139463424682617
    6. '```' → logprob: -5.213946342468262
    7. ' as' → logprob: -5.963946342468262
    8. '<|end|>' → logprob: -6.088946342468262
    9. ' ' → logprob: -6.213946342468262
    10. '__' → logprob: -7.088946342468262

Token 10: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6386991143226624
    2. 'def' → logprob: -1.1386990547180176
    3. 'as' → logprob: -2.2636990547180176
    4. 'from' → logprob: -3.1386990547180176
    5. 'print' → logprob: -6.138699054718018
    6. '#' → logprob: -7.138699054718018
    7. ',' → logprob: -8.013699531555176
    8. '<|end|>' → logprob: -8.013699531555176
    9. ' as' → logprob: -8.638699531555176
    10. 'class' → logprob: -9.513699531555176

Token 11: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.9250945448875427
    2. ' operator' → logprob: -1.0500946044921875
    3. ' typing' → logprob: -2.4250946044921875
    4. 'operator' → logprob: -2.9250946044921875
    5. 'typing' → logprob: -3.1750946044921875
    6. ' math' → logprob: -3.9250946044921875
    7. ' import' → logprob: -4.0500946044921875
    8. 'math' → logprob: -4.5500946044921875
    9. 'collections' → logprob: -4.8000946044921875
    10. ' collections' → logprob: -5.1750946044921875

Token 12: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0005549400229938328
    2. ' import' → logprob: -7.500555038452148
    3. '.import' → logprob: -13.250555038452148
    4. '-import' → logprob: -16.25055503845215
    5. 'from' → logprob: -16.75055503845215
    6. '	import' → logprob: -17.12555503845215
    7. 'Import' → logprob: -18.25055503845215
    8. ''import' → logprob: -18.25055503845215
    9. '_import' → logprob: -18.50055503845215
    10. '.' → logprob: -18.62555503845215

Token 13: ' repeat' (ID: 22962)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.6502826809883118
    2. 'product' → logprob: -1.400282621383667
    3. 'chain' → logprob: -1.650282621383667
    4. 'cycle' → logprob: -3.900282621383667
    5. 'count' → logprob: -4.400282859802246
    6. 'comb' → logprob: -5.775282859802246
    7. 'zip' → logprob: -6.775282859802246
    8. 'import' → logprob: -7.025282859802246
    9. 'compress' → logprob: -7.025282859802246
    10. 'group' → logprob: -8.400282859802246

Token 14: ',' (ID: 11)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.5884050130844116
    2. 'import' → logprob: -1.3384050130844116
    3. 'from' → logprob: -2.588405132293701
    4. 'def' → logprob: -3.088405132293701
    5. '<|end|>' → logprob: -3.463405132293701
    6. '#' → logprob: -5.088405132293701
    7. ' ' → logprob: -5.588405132293701
    8. ' as' → logprob: -5.588405132293701
    9. '<|end|>' → logprob: -6.213405132293701
    10. '\n' → logprob: -6.213405132293701

Token 15: ' is' (ID: 382)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.2146521508693695
    2. 'chain' → logprob: -2.5896520614624023
    3. 'count' → logprob: -2.9646520614624023
    4. 'zip' → logprob: -2.9646520614624023
    5. 'product' → logprob: -4.964652061462402
    6. 'com' → logprob: -5.464652061462402
    7. 'acc' → logprob: -7.089652061462402
    8. 'filter' → logprob: -7.464652061462402
    9. 'map' → logprob: -7.714652061462402
    10. 'st' → logprob: -7.839652061462402

Token 16: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.2911521792411804
    2. '_' → logprob: -2.416152238845825
    3. 'ert' → logprob: -3.291152238845825
    4. 'pect' → logprob: -3.666152238845825
    5. '_iter' → logprob: -4.291152000427246
    6. 'ertools' → logprob: -4.791152000427246
    7. 'from' → logprob: -5.541152000427246
    8. 'plit' → logprob: -5.541152000427246
    9. 'close' → logprob: -5.541152000427246
    10. 'olve' → logprob: -5.791152000427246

Token 17: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6912962198257446
    2. 'import' → logprob: -1.3162962198257446
    3. 'as' → logprob: -1.6912962198257446
    4. 'from' → logprob: -3.441296100616455
    5. ',' → logprob: -5.691296100616455
    6. '#' → logprob: -5.816296100616455
    7. '<|end|>' → logprob: -5.941296100616455
    8. ' ' → logprob: -6.441296100616455
    9. ' as' → logprob: -6.816296100616455
    10. '  
' → logprob: -7.816296100616455

Token 18: ' chain' (ID: 13464)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.6307173371315002
    2. 'count' → logprob: -1.0057172775268555
    3. 'chain' → logprob: -2.5057172775268555
    4. 'zip' → logprob: -4.2557172775268555
    5. 'product' → logprob: -5.7557172775268555
    6. 'tee' → logprob: -6.6307172775268555
    7. 'com' → logprob: -7.7557172775268555
    8. 'acc' → logprob: -8.005717277526855
    9. 'filter' → logprob: -8.005717277526855
    10. 'map' → logprob: -9.130717277526855

Token 19: ',' (ID: 11)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.1844189614057541
    2. 'def' → logprob: -2.3094189167022705
    3. 'import' → logprob: -3.3094189167022705
    4. 'from' → logprob: -4.05941915512085
    5. ' as' → logprob: -5.05941915512085
    6. '<|end|>' → logprob: -5.93441915512085
    7. ',' → logprob: -6.55941915512085
    8. '#' → logprob: -6.68441915512085
    9. '```' → logprob: -7.18441915512085
    10. ' ' → logprob: -7.55941915512085

Token 20: ' st' (ID: 420)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.0623832941055298
    2. 'cycle' → logprob: -1.1873832941055298
    3. 'zip' → logprob: -2.0623831748962402
    4. 'count' → logprob: -2.4373831748962402
    5. 'product' → logprob: -2.4373831748962402
    6. 'compress' → logprob: -3.9373831748962402
    7. 'filter' → logprob: -4.06238317489624
    8. 'tee' → logprob: -4.93738317489624
    9. 'take' → logprob: -7.06238317489624
    10. 'acc' → logprob: -7.31238317489624

Token 21: 'arm' (ID: 2218)
  Prédit: 'ream'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ream' → logprob: -0.3093136250972748
    2. 'ring' → logprob: -2.4343135356903076
    3. 'art' → logprob: -2.6843135356903076
    4. 'arm' → logprob: -3.3093135356903076
    5. 'range' → logprob: -4.184313774108887
    6. 'map' → logprob: -4.684313774108887
    7. 'ri' → logprob: -5.309313774108887
    8. 'ate' → logprob: -5.434313774108887
    9. 'r' → logprob: -5.434313774108887
    10. 'ar' → logprob: -5.559313774108887

Token 22: 'ap' (ID: 403)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.23204797506332397
    2. 'ap' → logprob: -1.6070480346679688
    3. 'e' → logprob: -6.232048034667969
    4. 'itter' → logprob: -6.857048034667969
    5. 'iter' → logprob: -7.357048034667969
    6. 't' → logprob: -7.607048034667969
    7. 'ax' → logprob: -8.107048034667969
    8. 'en' → logprob: -8.107048034667969
    9. 'in' → logprob: -8.482048034667969
    10. 'ed' → logprob: -8.482048034667969

Token 23: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.824521005153656
    2. 'as' → logprob: -1.1995210647583008
    3. 'def' → logprob: -1.5745210647583008
    4. 'from' → logprob: -3.074521064758301
    5. '<|end|>' → logprob: -5.949521064758301
    6. ' as' → logprob: -6.574521064758301
    7. '#' → logprob: -6.949521064758301
    8. ',' → logprob: -7.074521064758301
    9. ' ' → logprob: -8.3245210647583
    10. 'print' → logprob: -9.3245210647583

Token 24: ' tee' (ID: 44157)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.7364399433135986
    2. 'zip' → logprob: -1.4864399433135986
    3. 'com' → logprob: -2.1114399433135986
    4. 'cycle' → logprob: -3.2364399433135986
    5. 'filter' → logprob: -3.4864399433135986
    6. 'tee' → logprob: -3.6114399433135986
    7. 'acc' → logprob: -3.7364399433135986
    8. 'count' → logprob: -3.8614399433135986
    9. 'compress' → logprob: -4.1114397048950195
    10. 'pair' → logprob: -4.9864397048950195

Token 25: ',' (ID: 11)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.5263561010360718
    2. 'import' → logprob: -1.5263561010360718
    3. 'def' → logprob: -2.1513562202453613
    4. 'from' → logprob: -2.7763562202453613
    5. ',' → logprob: -4.776356220245361
    6. ' as' → logprob: -6.026356220245361
    7. '<|end|>' → logprob: -6.901356220245361
    8. '#' → logprob: -7.276356220245361
    9. 'As' → logprob: -9.151355743408203
    10. ' ' → logprob: -9.151355743408203

Token 26: ' permutations' (ID: 174595)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -1.2617995738983154
    2. 'com' → logprob: -1.7617995738983154
    3. 'product' → logprob: -1.8867995738983154
    4. 'filter' → logprob: -1.8867995738983154
    5. 'count' → logprob: -2.6367995738983154
    6. 'zip' → logprob: -2.7617995738983154
    7. 'acc' → logprob: -2.8867995738983154
    8. 'compress' → logprob: -3.3867995738983154
    9. 'pair' → logprob: -5.3867998123168945
    10. 'group' → logprob: -5.6367998123168945

Token 27: '

' (ID: 279)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'as' → logprob: -1.080536127090454
    2. 'import' → logprob: -1.330536127090454
    3. 'from' → logprob: -1.330536127090454
    4. 'def' → logprob: -2.330536127090454
    5. ',' → logprob: -3.455536127090454
    6. ' as' → logprob: -6.705535888671875
    7. '#' → logprob: -7.080535888671875
    8. '<|end|>' → logprob: -7.955535888671875
    9. ' ' → logprob: -9.455535888671875
    10. 'class' → logprob: -9.580535888671875

Token 28: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03707117214798927
    2. 'from' → logprob: -3.5370712280273438
    3. '#' → logprob: -5.537071228027344
    4. 'import' → logprob: -5.787071228027344
    5. 'class' → logprob: -9.037071228027344
    6. 'print' → logprob: -10.037071228027344
    7. '<|end|>' → logprob: -10.412071228027344
    8. 'as' → logprob: -10.787071228027344
    9. '__' → logprob: -11.662071228027344
    10. '```' → logprob: -11.787071228027344

Token 29: ' norm' (ID: 7882)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8520089387893677
    2. ' my' → logprob: -1.6020089387893677
    3. ' func' → logprob: -2.477008819580078
    4. 'function' → logprob: -2.977008819580078
    5. ' f' → logprob: -3.102008819580078
    6. 'my' → logprob: -3.352008819580078
    7. ' function' → logprob: -3.352008819580078
    8. 'f' → logprob: -3.727008819580078
    9. 'func' → logprob: -4.477008819580078
    10. ' def' → logprob: -4.477008819580078

Token 30: '(v' (ID: 6932)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3943282961845398
    2. '(' → logprob: -2.0193283557891846
    3. '()' → logprob: -2.0193283557891846
    4. '():
' → logprob: -4.0193281173706055
    5. '(_' → logprob: -4.6443281173706055
    6. 'mal' → logprob: -5.5193281173706055
    7. '(m' → logprob: -5.6443281173706055
    8. 'm' → logprob: -5.7693281173706055
    9. '(x' → logprob: -5.8943281173706055
    10. '(e' → logprob: -6.0193281173706055

Token 31: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019856581464409828
    2. '):
' → logprob: -4.0198564529418945
    3. ')' → logprob: -6.6448564529418945
    4. ':' → logprob: -8.894856452941895
    5. '):

' → logprob: -8.894856452941895
    6. ',' → logprob: -10.644856452941895
    7. '   ' → logprob: -10.769856452941895
    8. '):
' → logprob: -11.144856452941895
    9. 'ector' → logprob: -11.144856452941895
    10. ')):' → logprob: -11.144856452941895

Token 32: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0564331205387134e-05
    2. 'return' → logprob: -12.00001049041748
    3. '  ' → logprob: -12.87501049041748
    4. ' return' → logprob: -14.12501049041748
    5. 'pass' → logprob: -14.75001049041748
    6. ' ' → logprob: -15.00001049041748
    7. '    ' → logprob: -15.50001049041748
    8. '	return' → logprob: -15.75001049041748
    9. '   ' → logprob: -17.375011444091797
    10. '       ' → logprob: -17.500011444091797

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.908022285439074e-05
    2. 'return' → logprob: -10.250059127807617
    3. '  ' → logprob: -11.625059127807617
    4. 'pass' → logprob: -12.000059127807617
    5. ' ' → logprob: -12.375059127807617
    6. ' return' → logprob: -13.500059127807617
    7. '    ' → logprob: -14.125059127807617
    8. '	return' → logprob: -14.750059127807617
    9. '```' → logprob: -14.750059127807617
    10. '   ' → logprob: -14.875059127807617

Token 34: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18175606429576874
    2. 'return' (adapté à ' return') → logprob: -1.8067560195922852
    3. 'pass' → logprob: -6.306756019592285
    4. 'v' → logprob: -10.181756019592285
    5. '  ' → logprob: -10.181756019592285
    6. ' return' → logprob: -10.306756019592285
    7. ' ' → logprob: -10.681756019592285
    8. '	return' → logprob: -11.056756019592285
    9. 'def' → logprob: -11.056756019592285
    10. '#' → logprob: -12.306756019592285

Token 35: ' sum' (ID: 4215)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.2003090381622314
    2. '(v' → logprob: -1.2003090381622314
    3. '   ' → logprob: -1.7003090381622314
    4. ' ' → logprob: -2.5753090381622314
    5. ' v' → logprob: -3.2003090381622314
    6. 'sum' → logprob: -3.4503090381622314
    7. 'sqrt' → logprob: -4.200308799743652
    8. ' (' → logprob: -4.575308799743652
    9. '(' → logprob: -4.700308799743652
    10. '  ' → logprob: -5.075308799743652

Token 36: '(map' (ID: 16946)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.07323520630598068
    2. '(' → logprob: -2.698235273361206
    3. '(x' → logprob: -7.698235034942627
    4. '(n' → logprob: -7.823235034942627
    5. '()' → logprob: -8.198235511779785
    6. '(_)' → logprob: -8.198235511779785
    7. '(...)' → logprob: -8.448235511779785
    8. '(lambda' → logprob: -8.573235511779785
    9. '(np' → logprob: -8.823235511779785
    10. '(`' → logprob: -9.073235511779785

Token 37: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.03582322597503662
    2. '(' → logprob: -3.535823345184326
    3. '(re' → logprob: -6.535823345184326
    4. '(v' → logprob: -6.660823345184326
    5. '(sum' → logprob: -7.785823345184326
    6. '(len' → logprob: -7.785823345184326
    7. '(list' → logprob: -7.910823345184326
    8. '(int' → logprob: -7.910823345184326
    9. '(func' → logprob: -7.910823345184326
    10. '(float' → logprob: -8.035822868347168

Token 38: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.64839569455944e-05
    2. ':' → logprob: -9.500076293945312
    3. ' x' → logprob: -13.875076293945312
    4. ':x' → logprob: -15.375076293945312
    5. 'v' → logprob: -15.500076293945312
    6. 'a' → logprob: -16.250076293945312
    7. 'abs' → logprob: -17.500076293945312
    8. 'f' → logprob: -17.625076293945312
    9. 'c' → logprob: -17.750076293945312
    10. 'n' → logprob: -18.375076293945312

Token 39: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.9361264946837764e-07
    2. ':x' → logprob: -16.375
    3. '：' → logprob: -18.125
    4. ':def' → logprob: -18.125
    5. ':**' → logprob: -18.5
    6. ':return' → logprob: -18.625
    7. ',' → logprob: -18.625
    8. ':v' → logprob: -18.75
    9. ':`' → logprob: -18.875
    10. ':n' → logprob: -19.125

Token 40: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2014172375202179
    2. 'abs' → logprob: -1.7014172077178955
    3. ' abs' → logprob: -12.701416969299316
    4. ' x' → logprob: -15.201416969299316
    5. '(abs' → logprob: -15.701416969299316
    6. 'v' → logprob: -15.826416969299316
    7. 'fabs' → logprob: -16.451417922973633
    8. 'ABS' → logprob: -16.576417922973633
    9. '|' → logprob: -16.826417922973633
    10. '.abs' → logprob: -17.326417922973633

Token 41: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00019305046589579433
    2. '*' → logprob: -8.750192642211914
    3. ' **' → logprob: -11.250192642211914
    4. '*x' → logprob: -11.500192642211914
    5. '*v' → logprob: -12.750192642211914
    6. '***' → logprob: -13.250192642211914
    7. '**,' → logprob: -13.500192642211914
    8. ':' → logprob: -13.875192642211914
    9. ')**' → logprob: -14.250192642211914
    10. '.norm' → logprob: -14.250192642211914

Token 42: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -16.375
    3. '3' → logprob: -19.0
    4. '(' → logprob: -19.125
    5. '1' → logprob: -20.0
    6. '²' → logprob: -21.25
    7. ' ' → logprob: -21.375
    8. 'x' → logprob: -21.625
    9. 'p' → logprob: -22.25
    10. 'norm' → logprob: -22.5

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.465036105713807e-06
    2. ',v' → logprob: -11.875007629394531
    3. ',n' → logprob: -16.50000762939453
    4. ' ,' → logprob: -16.50000762939453
    5. ',x' → logprob: -16.50000762939453
    6. ',
' → logprob: -17.12500762939453
    7. '**,' → logprob: -17.12500762939453
    8. '**' → logprob: -17.62500762939453
    9. '+' → logprob: -18.37500762939453
    10. 'v' → logprob: -18.62500762939453

Token 44: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.128163257315464e-07
    2. ' v' → logprob: -15.625
    3. '	v' → logprob: -18.375
    4. '(v' → logprob: -18.625
    5. ')v' → logprob: -19.625
    6. '[v' → logprob: -20.25
    7. '$v' → logprob: -20.5
    8. 'norm' → logprob: -20.875
    9. '.v' → logprob: -20.875
    10. '   ' → logprob: -20.875

Token 45: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0006272526225075126
    2. '),' → logprob: -7.875627040863037
    3. ')' → logprob: -9.500627517700195
    4. '))
' → logprob: -9.625627517700195
    5. ')**' → logprob: -10.000627517700195
    6. '))

' → logprob: -10.875627517700195
    7. ')),' → logprob: -12.000627517700195
    8. ')):' → logprob: -12.125627517700195
    9. ')).' → logprob: -12.250627517700195
    10. '));' → logprob: -12.250627517700195

Token 46: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0004156568902544677
    2. ')**' → logprob: -8.750415802001953
    3. '   ' → logprob: -9.750415802001953
    4. ')' → logprob: -9.750415802001953
    5. 'def' → logprob: -9.750415802001953
    6. ' **' → logprob: -10.000415802001953
    7. '```' → logprob: -10.875415802001953
    8. '}' → logprob: -11.875415802001953
    9. 'return' → logprob: -13.125415802001953
    10. '**)' → logprob: -13.250415802001953

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.375
    3. '.' → logprob: -18.125
    4. ' ' → logprob: -20.5
    5. '   ' → logprob: -21.125
    6. '1' → logprob: -22.625
    7. '       ' → logprob: -23.625
    8. '**' → logprob: -23.625
    9. '`' → logprob: -23.875
    10. '00' → logprob: -24.0

Token 48: '.' (ID: 13)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18839481472969055
    2. '1' → logprob: -2.438394784927368
    3. '.' → logprob: -2.688394784927368
    4. '5' → logprob: -4.688395023345947
    5. '0' → logprob: -5.563395023345947
    6. '   ' → logprob: -6.313395023345947
    7. '3' → logprob: -7.938395023345947
    8. '**' → logprob: -8.063394546508789
    9. '4' → logprob: -8.438394546508789
    10. '  ' → logprob: -9.313394546508789

Token 49: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: 0.0
    2. 'five' → logprob: -18.25
    3. 'sqrt' → logprob: -19.375
    4. '五' → logprob: -19.375
    5. '500' → logprob: -19.625
    6. ' fifth' → logprob: -20.375
    7. ' ' → logprob: -20.375
    8. '1' → logprob: -20.375
    9. ' пят' → logprob: -20.5
    10. '５' → logprob: -20.625

Token 50: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6489235758781433
    2. 'def' → logprob: -0.7739235758781433
    3. '<|end|>' → logprob: -4.273923397064209
    4. '<|end|>' → logprob: -7.898923397064209
    5. ')' → logprob: -8.023923873901367
    6. '```' → logprob: -8.023923873901367
    7. 'print' → logprob: -8.273923873901367
    8. '  ' → logprob: -8.648923873901367
    9. '}' → logprob: -9.023923873901367
    10. 'return' → logprob: -9.273923873901367

Token 51: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02351216785609722
    2. '   ' → logprob: -3.773512125015259
    3. 'print' → logprob: -9.27351188659668
    4. 'return' → logprob: -10.14851188659668
    5. '```' → logprob: -10.52351188659668
    6. '<|end|>' → logprob: -10.64851188659668
    7. ' def' → logprob: -10.89851188659668
    8. 'class' → logprob: -11.52351188659668
    9. 'v' → logprob: -12.02351188659668
    10. ' ' → logprob: -12.27351188659668

Token 52: ' unit' (ID: 7670)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.19880399107933044
    2. 'norm' → logprob: -2.4488039016723633
    3. 'proj' → logprob: -3.5738039016723633
    4. 'unit' → logprob: -3.5738039016723633
    5. 'project' → logprob: -4.198803901672363
    6. 'dot' → logprob: -4.698803901672363
    7. 'angle' → logprob: -5.698803901672363
    8. 'dist' → logprob: -5.823803901672363
    9. 'scale' → logprob: -6.448803901672363
    10. 'projection' → logprob: -6.823803901672363

Token 53: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0003704933915287256
    2. '_vector' → logprob: -8.125370025634766
    3. '(vector' → logprob: -10.500370025634766
    4. '_v' → logprob: -11.375370025634766
    5. 'vector' → logprob: -11.500370025634766
    6. '(vec' → logprob: -11.625370025634766
    7. '(' → logprob: -12.500370025634766
    8. '(n' → logprob: -13.000370025634766
    9. '_vectors' → logprob: -13.125370025634766
    10. '_vect' → logprob: -13.375370025634766

Token 54: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00014168102643452585
    2. '):
' → logprob: -9.000142097473145
    3. ')' → logprob: -11.375142097473145
    4. ')):' → logprob: -12.875142097473145
    5. '):

' → logprob: -13.500142097473145
    6. ''):' → logprob: -14.125142097473145
    7. ':' → logprob: -14.125142097473145
    8. '   ' → logprob: -15.000142097473145
    9. '):
' → logprob: -15.500142097473145
    10. '[]):' → logprob: -15.750142097473145

Token 55: ' 
' (ID: 793)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.38717928528785706
    2. '   ' → logprob: -1.1371792554855347
    3. ' return' → logprob: -8.137179374694824
    4. '	return' → logprob: -11.637179374694824
    5. 'def' → logprob: -12.512179374694824
    6. '  ' → logprob: -14.012179374694824
    7. ':return' → logprob: -14.012179374694824
    8. '{return' → logprob: -14.887179374694824
    9. 'v' → logprob: -15.262179374694824
    10. 'returns' → logprob: -15.637179374694824

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019299437990412116
    2. 'return' → logprob: -6.251929759979248
    3. ' return' → logprob: -14.251930236816406
    4. '  ' → logprob: -14.876930236816406
    5. '	return' → logprob: -15.376930236816406
    6. '   ' → logprob: -17.001930236816406
    7. '   ' → logprob: -17.126930236816406
    8. ' ' → logprob: -18.251930236816406
    9. '    ' → logprob: -18.376930236816406
    10. '\t' → logprob: -18.876930236816406

Token 57: ' n' (ID: 297)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -4.320199877838604e-07
    2. ' return' → logprob: -15.0
    3. 'returns' → logprob: -17.75
    4. 'v' → logprob: -18.125
    5. '   ' → logprob: -18.375
    6. '	return' → logprob: -18.75
    7. 'def' → logprob: -20.125
    8. '{return' → logprob: -20.875
    9. 'returned' → logprob: -21.0
    10. 'Return' → logprob: -21.125

Token 58: ' =' (ID: 314)
  Prédit: 'orm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orm' → logprob: -0.15028713643550873
    2. '=' → logprob: -2.27528715133667
    3. 'ormal' → logprob: -3.90028715133667
    4. ' =' → logprob: -4.27528715133667
    5. 'or' → logprob: -6.65028715133667
    6. 'orma' → logprob: -7.02528715133667
    7. '   ' → logprob: -8.775286674499512
    8. 'return' → logprob: -9.275286674499512
    9. 'орм' → logprob: -9.775286674499512
    10. '  ' → logprob: -10.775286674499512

Token 59: ' norm' (ID: 7882)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -3.531315314830863e-06
    2. ' norm' → logprob: -12.750003814697266
    3. 'nor' → logprob: -14.375003814697266
    4. '_norm' → logprob: -17.250003814697266
    5. '.norm' → logprob: -17.500003814697266
    6. 'normal' → logprob: -17.625003814697266
    7. 'normalize' → logprob: -18.000003814697266
    8. '   ' → logprob: -18.500003814697266
    9. '(norm' → logprob: -19.375003814697266
    10. 'n' → logprob: -20.000003814697266

Token 60: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -6.704273118884885e-07
    2. '(n' → logprob: -14.625000953674316
    3. '(' → logprob: -16.375
    4. '(u' → logprob: -20.0
    5. 'v' → logprob: -20.125
    6. '(a' → logprob: -21.0
    7. '(e' → logprob: -21.625
    8. '(V' → logprob: -21.625
    9. '(m' → logprob: -21.75
    10. '(i' → logprob: -22.0

Token 61: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029768766835331917
    2. ')
' → logprob: -3.529768705368042
    3. ')

' → logprob: -11.529768943786621
    4. '   ' → logprob: -12.529768943786621
    5. '))' → logprob: -13.904768943786621
    6. ')
' → logprob: -13.904768943786621
    7. ')**' → logprob: -14.404768943786621
    8. ').' → logprob: -14.404768943786621
    9. ')}' → logprob: -15.404768943786621
    10. ')/' → logprob: -15.529768943786621

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.098748053773306e-05
    2. 'return' → logprob: -9.75006103515625
    3. 'if' → logprob: -13.25006103515625
    4. '  ' → logprob: -14.25006103515625
    5. '       ' → logprob: -16.37506103515625
    6. ' return' → logprob: -16.50006103515625
    7. ' ' → logprob: -16.62506103515625
    8. '	return' → logprob: -17.75006103515625
    9. '    ' → logprob: -18.37506103515625
    10. '     ' → logprob: -20.75006103515625

Token 63: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00035048185964114964
    2. 'if' → logprob: -8.000350952148438
    3. '   ' → logprob: -11.125350952148438
    4. ' return' → logprob: -15.250350952148438
    5. '	return' → logprob: -18.250350952148438
    6. 'returns' → logprob: -18.250350952148438
    7. 'print' → logprob: -19.750350952148438
    8. 'Return' → logprob: -20.125350952148438
    9. 'returned' → logprob: -20.500350952148438
    10. 're' → logprob: -21.125350952148438

Token 64: ' list' (ID: 1562)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.028056161478161812
    2. 'n' → logprob: -4.2780561447143555
    3. '[v' → logprob: -4.6530561447143555
    4. '[n' → logprob: -5.9030561447143555
    5. '(v' → logprob: -7.1530561447143555
    6. ' v' → logprob: -7.7780561447143555
    7. '[' → logprob: -8.653056144714355
    8. 'tuple' → logprob: -9.278056144714355
    9. '(n' → logprob: -10.403056144714355
    10. ' n' → logprob: -11.403056144714355

Token 65: '(map' (ID: 16946)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02041458711028099
    2. '(' → logprob: -4.770414352416992
    3. '(n' → logprob: -4.770414352416992
    4. '(v' → logprob: -6.270414352416992
    5. '(...)' → logprob: -7.645414352416992
    6. '()`' → logprob: -8.395414352416992
    7. '().' → logprob: -9.520414352416992
    8. '()(' → logprob: -9.520414352416992
    9. '(_)' → logprob: -9.645414352416992
    10. '([]' → logprob: -10.020414352416992

Token 66: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.008770326152443886
    2. '(' → logprob: -4.75877046585083
    3. '(float' → logprob: -10.383769989013672
    4. '(None' → logprob: -10.508769989013672
    5. '(int' → logprob: -10.883769989013672
    6. '(n' → logprob: -12.008769989013672
    7. '(function' → logprob: -12.133769989013672
    8. '(l' → logprob: -12.258769989013672
    9. '(func' → logprob: -12.258769989013672
    10. '(f' → logprob: -12.383769989013672

Token 67: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.750436007976532e-05
    2. ':' → logprob: -10.25003719329834
    3. ' x' → logprob: -13.25003719329834
    4. 'y' → logprob: -16.125038146972656
    5. ':x' → logprob: -16.375038146972656
    6. 'v' → logprob: -17.875038146972656
    7. 'a' → logprob: -19.750038146972656
    8. 'c' → logprob: -19.875038146972656
    9. '(x' → logprob: -19.875038146972656
    10. '_x' → logprob: -20.375038146972656

Token 68: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: 0.0
    2. ':/' → logprob: -18.375
    3. ':x' → logprob: -19.875
    4. ':n' → logprob: -19.875
    5. ':return' → logprob: -20.875
    6. '：' → logprob: -21.0
    7. '/' → logprob: -21.125
    8. ' :' → logprob: -21.625
    9. '/:' → logprob: -22.875
    10. ':
' → logprob: -23.25

Token 69: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.5048530030981055e-06
    2. ' x' → logprob: -13.500001907348633
    3. '(x' → logprob: -21.250001907348633
    4. '	x' → logprob: -22.500001907348633
    5. '   ' → logprob: -22.625001907348633
    6. 'n' → logprob: -22.750001907348633
    7. '_x' → logprob: -23.625001907348633
    8. ' ' → logprob: -23.750001907348633
    9. '$x' → logprob: -23.750001907348633
    10. '"x' → logprob: -24.250001907348633

Token 70: '/n' (ID: 18292)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5760629177093506
    2. '/n' → logprob: -0.8260629177093506
    3. ' /' → logprob: -9.07606315612793
    4. '/N' → logprob: -12.82606315612793
    5. '/(' → logprob: -13.57606315612793
    6. '/v' → logprob: -14.20106315612793
    7. '/m' → logprob: -14.32606315612793
    8. '/x' → logprob: -14.45106315612793
    9. '/o' → logprob: -14.57606315612793
    10. '/or' → logprob: -14.95106315612793

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031018999870866537
    2. ' if' → logprob: -6.003101825714111
    3. 'if' → logprob: -7.378101825714111
    4. ' ,' → logprob: -14.37810230255127
    5. ',x' → logprob: -15.87810230255127
    6. '，如果' → logprob: -15.87810230255127
    7. '如果' → logprob: -16.253101348876953
    8. ',v' → logprob: -17.003101348876953
    9. ',
' → logprob: -17.253101348876953
    10. '),' → logprob: -17.378101348876953

Token 72: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.9361264946837764e-07
    2. ' v' → logprob: -15.625
    3. '	v' → logprob: -21.75
    4. '(v' → logprob: -22.5
    5. '$v' → logprob: -23.5
    6. '_v' → logprob: -23.625
    7. '.v' → logprob: -24.0
    8. '   ' → logprob: -24.75
    9. '*v' → logprob: -24.875
    10. ')v' → logprob: -24.875

Token 73: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -2.3319124011322856e-05
    2. 'if' → logprob: -11.750022888183594
    3. '))
' → logprob: -12.375022888183594
    4. ' if' → logprob: -12.500022888183594
    5. '))

' → logprob: -12.625022888183594
    6. ')' → logprob: -13.250022888183594
    7. ')))' → logprob: -13.500022888183594
    8. ' ))' → logprob: -15.125022888183594
    9. ')).' → logprob: -15.625022888183594
    10. '))


' → logprob: -16.125022888183594

Token 74: ' if' (ID: 538)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001470822375267744
    2. '   ' → logprob: -6.626471042633057
    3. ' def' → logprob: -10.126470565795898
    4. '```' → logprob: -10.501470565795898
    5. '#' → logprob: -11.501470565795898
    6. ' 

' → logprob: -11.626470565795898
    7. 'return' → logprob: -12.126470565795898
    8. 'print' → logprob: -12.126470565795898
    9. '  

' → logprob: -12.126470565795898
    10. 'if' → logprob: -12.126470565795898

Token 75: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002187972189858556
    2. ' n' → logprob: -6.127188205718994
    3. '   ' → logprob: -13.502187728881836
    4. '  ' → logprob: -14.127187728881836
    5. '	n' → logprob: -15.627187728881836
    6. '(n' → logprob: -16.127187728881836
    7. '    ' → logprob: -16.252187728881836
    8. 'not' → logprob: -16.377187728881836
    9. '_n' → logprob: -16.377187728881836
    10. 'len' → logprob: -16.752187728881836

Token 76: ' else' (ID: 1203)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.017593970522284508
    2. 'else' → logprob: -4.767593860626221
    3. '>' → logprob: -5.267593860626221
    4. '==' → logprob: -5.892593860626221
    5. ' !=' → logprob: -6.892593860626221
    6. ' else' → logprob: -12.517594337463379
    7. '<>' → logprob: -13.142594337463379
    8. ' >' → logprob: -14.017594337463379
    9. ' ==' → logprob: -14.392594337463379
    10. '\xe2\x89' → logprob: -15.017594337463379

Token 77: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00012558852904476225
    2. ' v' → logprob: -9.250125885009766
    3. '[v' → logprob: -10.875125885009766
    4. '[]' → logprob: -12.375125885009766
    5. '   ' → logprob: -12.750125885009766
    6. '0' → logprob: -13.875125885009766
    7. '       ' → logprob: -14.750125885009766
    8. '	v' → logprob: -14.875125885009766
    9. '(v' → logprob: -15.125125885009766
    10. 'list' → logprob: -15.250125885009766

Token 78: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024239545688033104
    2. '   ' → logprob: -3.7742395401000977
    3. 'return' → logprob: -8.024239540100098
    4. '<|end|>' → logprob: -8.524239540100098
    5. '```' → logprob: -8.524239540100098
    6. '<|end|>' → logprob: -10.524239540100098
    7. ' def' → logprob: -10.649239540100098
    8. '#' → logprob: -10.649239540100098
    9. ')' → logprob: -10.774239540100098
    10. ' ' → logprob: -10.774239540100098

Token 79: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.660315895918757e-05
    2. '   ' → logprob: -9.625076293945312
    3. ' def' → logprob: -12.875076293945312
    4. '#' → logprob: -13.000076293945312
    5. '```' → logprob: -13.875076293945312
    6. '<|end|>' → logprob: -14.000076293945312
    7. 'print' → logprob: -14.125076293945312
    8. 'return' → logprob: -14.125076293945312
    9. '<|end|>' → logprob: -14.625076293945312
    10. 'import' → logprob: -14.875076293945312

Token 80: ' cos' (ID: 8974)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.9781378507614136
    2. 'scale' → logprob: -1.8531378507614136
    3. 'dot' → logprob: -1.8531378507614136
    4. 'project' → logprob: -2.478137969970703
    5. 'cross' → logprob: -2.603137969970703
    6. 'normalize' → logprob: -3.103137969970703
    7. 'zero' → logprob: -3.853137969970703
    8. 'add' → logprob: -4.103137969970703
    9. 'norm' → logprob: -4.103137969970703
    10. 'transform' → logprob: -4.603137969970703

Token 81: '_angle' (ID: 51505)
  Prédit: '(theta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(theta' → logprob: -0.21010595560073853
    2. '(' → logprob: -2.8351058959960938
    3. '(t' → logprob: -3.7101058959960938
    4. '(angle' → logprob: -3.8351058959960938
    5. '(v' → logprob: -3.9601058959960938
    6. '(x' → logprob: -4.335105895996094
    7. '(n' → logprob: -4.460105895996094
    8. 'ine' → logprob: -5.585105895996094
    9. '(a' → logprob: -5.585105895996094
    10. '(...)' → logprob: -5.585105895996094

Token 82: '(u' (ID: 17057)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0033571321982890368
    2. '(' → logprob: -7.12835693359375
    3. '(a' → logprob: -7.12835693359375
    4. '(angle' → logprob: -8.00335693359375
    5. '(theta' → logprob: -8.12835693359375
    6. '(x' → logprob: -8.50335693359375
    7. '(_:' → logprob: -8.62835693359375
    8. '(_' → logprob: -9.12835693359375
    9. '(p' → logprob: -9.12835693359375
    10. '(:' → logprob: -9.75335693359375

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.652451464906335e-05
    2. ',v' → logprob: -12.250016212463379
    3. ',u' → logprob: -12.250016212463379
    4. ',a' → logprob: -13.375016212463379
    5. 'def' → logprob: -13.500016212463379
    6. '1' → logprob: -13.750016212463379
    7. ',n' → logprob: -14.375016212463379
    8. ' ,' → logprob: -14.625016212463379
    9. ',d' → logprob: -15.000016212463379
    10. 'a' → logprob: -15.250016212463379

Token 84: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.7697225252486533e-06
    2. ' v' → logprob: -12.500003814697266
    3. '	v' → logprob: -19.875003814697266
    4. 'u' → logprob: -20.125003814697266
    5. '_v' → logprob: -20.875003814697266
    6. '.v' → logprob: -21.125003814697266
    7. ')v' → logprob: -21.250003814697266
    8. '   ' → logprob: -21.500003814697266
    9. ',v' → logprob: -22.125003814697266
    10. '$v' → logprob: -22.375003814697266

Token 85: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00011105302110081539
    2. '):
' → logprob: -9.250110626220703
    3. ',' → logprob: -12.000110626220703
    4. '):

' → logprob: -12.750110626220703
    5. ')' → logprob: -12.875110626220703
    6. ')):' → logprob: -13.375110626220703
    7. '):
' → logprob: -14.750110626220703
    8. '   ' → logprob: -14.750110626220703
    9. ''):' → logprob: -15.000110626220703
    10. '"):' → logprob: -15.875110626220703

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00014299227041192353
    2. 'return' → logprob: -8.875143051147461
    3. '  ' → logprob: -13.125143051147461
    4. ' return' → logprob: -14.000143051147461
    5. '	return' → logprob: -16.37514305114746
    6. ' ' → logprob: -16.75014305114746
    7. '   ' → logprob: -16.87514305114746
    8. '   ' → logprob: -17.00014305114746
    9. '    ' → logprob: -17.62514305114746
    10. '返回' → logprob: -19.12514305114746

Token 87: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0017935856012627482
    2. '   ' → logprob: -6.501793384552002
    3. 'dot' → logprob: -8.25179386138916
    4. ' return' → logprob: -10.50179386138916
    5. 'from' → logprob: -13.87679386138916
    6. '	return' → logprob: -14.37679386138916
    7. '  ' → logprob: -14.50179386138916
    8. 'sum' → logprob: -14.62679386138916
    9. 'returns' → logprob: -16.501792907714844
    10. ' ' → logprob: -17.251792907714844

Token 88: ' (' (ID: 350)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.009571205824613571
    2. 'reduce' → logprob: -4.759571075439453
    3. 'dot' → logprob: -7.509571075439453
    4. '(sum' → logprob: -8.009571075439453
    5. ' sum' → logprob: -9.634571075439453
    6. '1' → logprob: -12.884571075439453
    7. '.sum' → logprob: -13.634571075439453
    8. 'max' → logprob: -14.009571075439453
    9. '.reduce' → logprob: -14.009571075439453
    10. '   ' → logprob: -14.134571075439453

Token 89: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.03058581054210663
    2. 'reduce' → logprob: -3.530585765838623
    3. 'dot' → logprob: -7.280585765838623
    4. 'u' → logprob: -9.155586242675781
    5. '(sum' → logprob: -11.530586242675781
    6. ' sum' → logprob: -11.530586242675781
    7. '   ' → logprob: -11.655586242675781
    8. 'unit' → logprob: -12.905586242675781
    9. 'n' → logprob: -13.405586242675781
    10. '1' → logprob: -13.530586242675781

Token 90: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.01248563826084137
    2. '(' → logprob: -5.012485504150391
    3. '(re' → logprob: -5.887485504150391
    4. '(lambda' → logprob: -7.387485504150391
    5. '(u' → logprob: -7.512485504150391
    6. '(v' → logprob: -7.637485504150391
    7. '(x' → logprob: -8.26248550415039
    8. '(dot' → logprob: -8.63748550415039
    9. '(c' → logprob: -8.76248550415039
    10. '(a' → logprob: -9.38748550415039

Token 91: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -9.610702363715973e-06
    2. '(' → logprob: -12.500009536743164
    3. 'lambda' → logprob: -13.000009536743164
    4. '=lambda' → logprob: -13.500009536743164
    5. '(re' → logprob: -14.875009536743164
    6. '(func' → logprob: -15.375009536743164
    7. '(operator' → logprob: -16.000009536743164
    8. '(len' → logprob: -16.125009536743164
    9. '(l' → logprob: -16.250009536743164
    10. '(function' → logprob: -16.375009536743164

Token 92: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.607391408877447e-05
    2. ':' → logprob: -10.375036239624023
    3. ' x' → logprob: -12.750036239624023
    4. ':x' → logprob: -13.625036239624023
    5. 'a' → logprob: -15.000036239624023
    6. '(x' → logprob: -15.625036239624023
    7. '*x' → logprob: -16.000036239624023
    8. 'u' → logprob: -17.250036239624023
    9. '_x' → logprob: -17.500036239624023
    10. 'y' → logprob: -18.000036239624023

Token 93: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3663626305060461e-05
    2. ',' → logprob: -11.25001335144043
    3. ',y' → logprob: -14.87501335144043
    4. ':y' → logprob: -16.25001335144043
    5. '1' → logprob: -16.87501335144043
    6. ':x' → logprob: -17.12501335144043
    7. '*:' → logprob: -17.12501335144043
    8. ' :' → logprob: -17.87501335144043
    9. 'y' → logprob: -18.37501335144043
    10. ':,' → logprob: -18.62501335144043

Token 94: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.251091377227567e-05
    2. ':' → logprob: -10.250042915344238
    3. ' y' → logprob: -12.750042915344238
    4. 'lambda' → logprob: -12.875042915344238
    5. '   ' → logprob: -14.125042915344238
    6. ':y' → logprob: -14.250042915344238
    7. '	y' → logprob: -16.250041961669922
    8. '_y' → logprob: -17.875041961669922
    9. 'y's' → logprob: -18.000041961669922
    10. 'yu' → logprob: -18.250041961669922

Token 95: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: 0.0
    2. ':x' → logprob: -18.0
    3. ' :' → logprob: -20.25
    4. '：' → logprob: -21.75
    5. '):' → logprob: -21.75
    6. ',' → logprob: -22.375
    7. ':z' → logprob: -23.0
    8. ':**' → logprob: -23.125
    9. ':return' → logprob: -23.25
    10. ':y' → logprob: -23.375

Token 96: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9361264946837764e-07
    2. ' x' → logprob: -15.875
    3. '   ' → logprob: -20.375
    4. '(x' → logprob: -21.875
    5. '	x' → logprob: -22.375
    6. '_x' → logprob: -23.25
    7. '  ' → logprob: -23.375
    8. 'u' → logprob: -23.375
    9. '$x' → logprob: -23.625
    10. ' ' → logprob: -23.75

Token 97: '*y' (ID: 83575)
  Prédit: '*y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*y' → logprob: -0.257903516292572
    2. '*' → logprob: -1.5079035758972168
    3. ' *' → logprob: -5.132903575897217
    4. '*x' → logprob: -10.382903099060059
    5. '\' → logprob: -11.757903099060059
    6. '**' → logprob: -12.757903099060059
    7. '*v' → logprob: -13.007903099060059
    8. '*cos' → logprob: -13.007903099060059
    9. '*z' → logprob: -13.132903099060059
    10. '*np' → logprob: -13.132903099060059

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002043748099822551
    2. ')' → logprob: -9.125204086303711
    3. '/' → logprob: -10.000204086303711
    4. '))' → logprob: -11.500204086303711
    5. '/u' → logprob: -12.000204086303711
    6. ' /' → logprob: -12.250204086303711
    7. '/v' → logprob: -12.250204086303711
    8. '))/(' → logprob: -12.875204086303711
    9. '```' → logprob: -13.250204086303711
    10. ',v' → logprob: -13.250204086303711

Token 99: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -7.896309739408025e-07
    2. 'unit' → logprob: -14.500000953674316
    3. ' u' → logprob: -15.750000953674316
    4. '(u' → logprob: -18.25
    5. '   ' → logprob: -19.0
    6. '	u' → logprob: -19.25
    7. 'v' → logprob: -19.5
    8. 'repeat' → logprob: -20.25
    9. 'zip' → logprob: -20.375
    10. 'is' → logprob: -20.5

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6286106983898208e-05
    2. ',v' → logprob: -11.125016212463379
    3. ' ,' → logprob: -13.875016212463379
    4. ',u' → logprob: -15.375016212463379
    5. ',
' → logprob: -15.750016212463379
    6. ',y' → logprob: -16.000017166137695
    7. '(),' → logprob: -17.625017166137695
    8. '，' → logprob: -18.125017166137695
    9. '',' → logprob: -18.250017166137695
    10. ',z' → logprob: -18.375017166137695

Token 101: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.9361264946837764e-07
    2. ' v' → logprob: -16.125
    3. '	v' → logprob: -21.125
    4. '   ' → logprob: -22.25
    5. '(v' → logprob: -23.5
    6. ')v' → logprob: -23.75
    7. '$v' → logprob: -23.75
    8. '.v' → logprob: -24.0
    9. 'u' → logprob: -24.375
    10. '_v' → logprob: -25.0

Token 102: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0004013561410829425
    2. '))/' → logprob: -8.000401496887207
    3. '))/(' → logprob: -10.125401496887207
    4. ')))' → logprob: -10.750401496887207
    5. ')' → logprob: -12.750401496887207
    6. '))*' → logprob: -14.125401496887207
    7. ' ))' → logprob: -15.875401496887207
    8. '))))' → logprob: -15.875401496887207
    9. '))+' → logprob: -16.00040054321289
    10. '()))' → logprob: -16.00040054321289

Token 103: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.010875320062041283
    2. ' /' → logprob: -5.010875225067139
    3. ')' → logprob: -6.385875225067139
    4. '/s' → logprob: -6.510875225067139
    5. '/(' → logprob: -7.760875225067139
    6. '/n' → logprob: -8.510875701904297
    7. '   ' → logprob: -8.885875701904297
    8. ')/(' → logprob: -9.885875701904297
    9. '/c' → logprob: -10.635875701904297
    10. ')/' → logprob: -10.760875701904297

Token 104: ' (' (ID: 350)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.005282376892864704
    2. '(norm' → logprob: -5.255282402038574
    3. ' norm' → logprob: -11.005282402038574
    4. 'max' → logprob: -11.255282402038574
    5. '(' → logprob: -11.755282402038574
    6. '(n' → logprob: -12.755282402038574
    7. 'nor' → logprob: -12.755282402038574
    8. '.norm' → logprob: -12.880282402038574
    9. 'n' → logprob: -13.380282402038574
    10. '_norm' → logprob: -14.880282402038574

Token 105: 'norm' (ID: 30970)
  Prédit: 'norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.0007293514790944755
    2. '(norm' → logprob: -7.250729560852051
    3. 'n' → logprob: -11.62572956085205
    4. '(n' → logprob: -12.25072956085205
    5. ' norm' → logprob: -13.25072956085205
    6. '(' → logprob: -13.75072956085205
    7. 'unit' → logprob: -14.12572956085205
    8. 'nor' → logprob: -14.25072956085205
    9. 'max' → logprob: -14.62572956085205
    10. '.norm' → logprob: -15.00072956085205

Token 106: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.00033546582562848926
    2. '(v' → logprob: -8.000335693359375
    3. '(ui' → logprob: -21.625335693359375
    4. '(o' → logprob: -21.875335693359375
    5. '(un' → logprob: -21.875335693359375
    6. '(unit' → logprob: -22.125335693359375
    7. '(n' → logprob: -22.500335693359375
    8. '(' → logprob: -22.500335693359375
    9. '(a' → logprob: -22.750335693359375
    10. ' u' → logprob: -22.875335693359375

Token 107: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000111768240458332
    2. ')*' → logprob: -9.25011157989502
    3. ')**' → logprob: -11.37511157989502
    4. '))' → logprob: -13.12511157989502
    5. '**' → logprob: -14.50011157989502
    6. '}' → logprob: -14.50011157989502
    7. ')*(' → logprob: -14.75011157989502
    8. ')v' → logprob: -15.12511157989502
    9. '),' → logprob: -16.000112533569336
    10. ']' → logprob: -16.375112533569336

Token 108: 'norm' (ID: 30970)
  Prédit: 'norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -2.2200749754119897e-06
    2. ' norm' → logprob: -13.250001907348633
    3. 'n' → logprob: -15.125001907348633
    4. 'nor' → logprob: -16.750001907348633
    5. '.norm' → logprob: -17.250001907348633
    6. '(norm' → logprob: -18.500001907348633
    7. '_norm' → logprob: -18.625001907348633
    8. 'normal' → logprob: -19.000001907348633
    9. 'nom' → logprob: -21.125001907348633
    10. 'nat' → logprob: -21.375001907348633

Token 109: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.9361264946837764e-07
    2. '(u' → logprob: -16.25
    3. '(n' → logprob: -23.125
    4. '(V' → logprob: -23.75
    5. '(' → logprob: -23.875
    6. '/v' → logprob: -24.875
    7. '(vm' → logprob: -25.25
    8. '(a' → logprob: -25.375
    9. '	v' → logprob: -25.875
    10. '(w' → logprob: -25.875

Token 110: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.00014323067443910986
    2. '))' → logprob: -9.500143051147461
    3. '))).' → logprob: -10.000143051147461
    4. '))))' → logprob: -10.750143051147461
    5. ')))
' → logprob: -14.875143051147461
    6. '')))' → logprob: -15.000143051147461
    7. '())))' → logprob: -15.125143051147461
    8. '")))' → logprob: -15.375143051147461
    9. ')))

' → logprob: -15.875143051147461
    10. '))),' → logprob: -16.50014305114746

Token 111: ' if' (ID: 538)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02988273836672306
    2. '   ' → logprob: -3.6548826694488525
    3. '```' → logprob: -6.529882907867432
    4. '<|end|>' → logprob: -7.154882907867432
    5. '#' → logprob: -7.279882907867432
    6. 'return' → logprob: -9.279882431030273
    7. 'if' → logprob: -9.404882431030273
    8. ')' → logprob: -9.529882431030273
    9. '**' → logprob: -9.779882431030273
    10. 'import' → logprob: -9.904882431030273

Token 112: ' norm' (ID: 7882)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03326225280761719
    2. 'norm' → logprob: -3.783262252807617
    3. ' n' → logprob: -4.658262252807617
    4. 'not' → logprob: -8.158262252807617
    5. ' norm' → logprob: -9.408262252807617
    6. '(n' → logprob: -9.908262252807617
    7. 'u' → logprob: -10.533262252807617
    8. 'len' → logprob: -10.783262252807617
    9. 'v' → logprob: -13.033262252807617
    10. ' not' → logprob: -13.283262252807617

Token 113: '(u' (ID: 17057)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.47407710552215576
    2. '(u' → logprob: -0.9740771055221558
    3. '(n' → logprob: -17.349077224731445
    4. '(o' → logprob: -19.349077224731445
    5. '(' → logprob: -19.474077224731445
    6. '(ui' → logprob: -19.474077224731445
    7. '(e' → logprob: -19.599077224731445
    8. '(a' → logprob: -19.974077224731445
    9. '(w' → logprob: -20.099077224731445
    10. '(x' → logprob: -20.349077224731445

Token 114: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034871045500040054
    2. ')*' → logprob: -6.3784871101379395
    3. 'and' → logprob: -6.5034871101379395
    4. ')!=' → logprob: -9.628486633300781
    5. ' and' → logprob: -10.128486633300781
    6. '*' → logprob: -10.378486633300781
    7. ')**' → logprob: -10.628486633300781
    8. '>' → logprob: -10.753486633300781
    9. ')>' → logprob: -10.753486633300781
    10. ')v' → logprob: -10.878486633300781

Token 115: 'norm' (ID: 30970)
  Prédit: 'norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -1.9361264946837764e-07
    2. ' norm' → logprob: -15.625
    3. '.norm' → logprob: -17.25
    4. 'nor' → logprob: -18.5
    5. '_norm' → logprob: -18.875
    6. '(norm' → logprob: -18.875
    7. 'normal' → logprob: -20.25
    8. 'n' → logprob: -21.375
    9. 'nom' → logprob: -21.375
    10. 'nat' → logprob: -22.75

Token 116: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.011047814972698689
    2. '(u' → logprob: -4.511047840118408
    3. '(n' → logprob: -18.01104736328125
    4. '(o' → logprob: -19.26104736328125
    5. '(a' → logprob: -19.76104736328125
    6. '(' → logprob: -19.88604736328125
    7. '(iv' → logprob: -19.88604736328125
    8. '(w' → logprob: -20.01104736328125
    9. '(i' → logprob: -20.26104736328125
    10. '(e' → logprob: -20.38604736328125

Token 117: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3438327843905427e-05
    2. ')!=' → logprob: -10.75002384185791
    3. 'else' → logprob: -13.87502384185791
    4. '）' → logprob: -14.87502384185791
    5. ')>' → logprob: -15.37502384185791
    6. '))' → logprob: -16.125022888183594
    7. '')' → logprob: -16.250022888183594
    8. '>' → logprob: -17.000022888183594
    9. '())' → logprob: -17.500022888183594
    10. '")' → logprob: -17.875022888183594

Token 118: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.10263486951589584
    2. '!=' → logprob: -2.352634906768799
    3. '>' → logprob: -6.352634906768799
    4. ' else' → logprob: -7.727634906768799
    5. '==' → logprob: -8.47763442993164
    6. ' !=' → logprob: -10.35263442993164
    7. '>=' → logprob: -14.72763442993164
    8. '0' → logprob: -15.22763442993164
    9. 'elif' → logprob: -15.35263442993164
    10. 'not' → logprob: -15.60263442993164

Token 119: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.85104202805087e-05
    2. 'None' → logprob: -9.500078201293945
    3. '1' → logprob: -12.625078201293945
    4. 'float' → logprob: -15.375078201293945
    5. ' None' → logprob: -16.875078201293945
    6. ' ' → logprob: -17.375078201293945
    7. 'nan' → logprob: -20.250078201293945
    8. 'Na' → logprob: -20.500078201293945
    9. 'none' → logprob: -21.000078201293945
    10. '   ' → logprob: -21.750078201293945

Token 120: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006857485859654844
    2. 'None' → logprob: -7.375685691833496
    3. '1' → logprob: -9.750685691833496
    4. 'float' → logprob: -14.625685691833496
    5. 'Na' → logprob: -15.500685691833496
    6. 'nan' → logprob: -15.625685691833496
    7. ' None' → logprob: -15.750685691833496
    8. 'none' → logprob: -19.250686645507812
    9. 'Nan' → logprob: -19.750686645507812
    10. '#' → logprob: -19.875686645507812

Token 121: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03578193485736847
    2. '   ' → logprob: -3.5357818603515625
    3. '<|end|>' → logprob: -5.4107818603515625
    4. '```' → logprob: -6.7857818603515625
    5. 'return' → logprob: -9.035781860351562
    6. '}' → logprob: -9.660781860351562
    7. '<|end|>' → logprob: -9.785781860351562
    8. ' def' → logprob: -10.535781860351562
    9. '**' → logprob: -11.035781860351562
    10. ':def' → logprob: -11.035781860351562

Token 122: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00030281138606369495
    2. '   ' → logprob: -8.500303268432617
    3. '```' → logprob: -9.750303268432617
    4. '<|end|>' → logprob: -11.500303268432617
    5. ':def' → logprob: -11.625303268432617
    6. ' def' → logprob: -11.625303268432617
    7. 'return' → logprob: -12.125303268432617
    8. 'if' → logprob: -13.125303268432617
    9. 'print' → logprob: -13.250303268432617
    10. 'import' → logprob: -14.500303268432617

Token 123: ' next' (ID: 2613)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cos' → logprob: -0.0064367069862782955
    2. 'sin' → logprob: -5.631436824798584
    3. 'dot' → logprob: -7.006436824798584
    4. 'norm' → logprob: -7.756436824798584
    5. 'unit' → logprob: -8.006436347961426
    6. 'angle' → logprob: -8.006436347961426
    7. 'cross' → logprob: -8.131436347961426
    8. 'normalize' → logprob: -8.881436347961426
    9. 'acos' → logprob: -10.256436347961426
    10. 'per' → logprob: -10.631436347961426

Token 124: '_point' (ID: 15466)
  Prédit: '_token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_token' → logprob: -0.0018798507517203689
    2. 'token' → logprob: -7.251879692077637
    3. '(' → logprob: -8.376879692077637
    4. '()' → logprob: -8.626879692077637
    5. '_' → logprob: -8.876879692077637
    6. '_def' → logprob: -9.001879692077637
    7. '(token' → logprob: -9.376879692077637
    8. '_angle' → logprob: -9.751879692077637
    9. '_t' → logprob: -10.001879692077637
    10. 'Token' → logprob: -10.126879692077637

Token 125: '(points' (ID: 72131)
  Prédit: '(:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(:' → logprob: -0.12675127387046814
    2. '():' → logprob: -2.376751184463501
    3. '(_:' → logprob: -4.62675142288208
    4. '(' → logprob: -5.12675142288208
    5. '(u' → logprob: -5.12675142288208
    6. '(_' → logprob: -6.37675142288208
    7. '(...' → logprob: -7.37675142288208
    8. '(':' → logprob: -7.62675142288208
    9. '(":' → logprob: -8.251750946044922
    10. '(v' → logprob: -8.501750946044922

Token 126: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0634237751364708
    2. ',' → logprob: -3.4384238719940186
    3. ':' → logprob: -3.5634238719940186
    4. '):
' → logprob: -7.0634236335754395
    5. 'def' → logprob: -10.688424110412598
    6. '):

' → logprob: -10.688424110412598
    7. ':,' → logprob: -10.938424110412598
    8. ':def' → logprob: -11.188424110412598
    9. ',:' → logprob: -11.563424110412598
    10. '   ' → logprob: -11.688424110412598

Token 127: ' p' (ID: 275)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.4028448462486267
    2. 'current' → logprob: -1.9028449058532715
    3. 'index' → logprob: -2.5278449058532715
    4. 'new' → logprob: -3.2778449058532715
    5. 'start' → logprob: -4.0278449058532715
    6. 'n' → logprob: -4.1528449058532715
    7. 'target' → logprob: -5.4028449058532715
    8. 'dim' → logprob: -5.5278449058532715
    9. 'next' → logprob: -5.6528449058532715
    10. 'curr' → logprob: -6.0278449058532715

Token 128: ',' (ID: 11)
  Prédit: 'oints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.3113388121128082
    2. '):' → logprob: -1.4363387823104858
    3. ',' → logprob: -3.8113389015197754
    4. 'oint' → logprob: -5.811338901519775
    5. '):
' → logprob: -5.936338901519775
    6. ')' → logprob: -7.061338901519775
    7. 'ar' → logprob: -8.436338424682617
    8. '...' → logprob: -9.061338424682617
    9. ':' → logprob: -9.061338424682617
    10. '),' → logprob: -9.436338424682617

Token 129: ' direction' (ID: 9262)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.37490057945251465
    2. 'k' → logprob: -2.3749005794525146
    3. 'd' → logprob: -2.4999005794525146
    4. '):' → logprob: -2.8749005794525146
    5. 'index' → logprob: -4.124900817871094
    6. 'p' → logprob: -4.499900817871094
    7. 't' → logprob: -4.874900817871094
    8. 'q' → logprob: -4.999900817871094
    9. 'c' → logprob: -5.249900817871094
    10. 'r' → logprob: -5.499900817871094

Token 130: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009332557674497366
    2. ',' → logprob: -7.6259331703186035
    3. '):
' → logprob: -8.125933647155762
    4. ')' → logprob: -9.125933647155762
    5. '):

' → logprob: -11.250933647155762
    6. ')):' → logprob: -11.750933647155762
    7. '=None' → logprob: -12.250933647155762
    8. 's' → logprob: -12.750933647155762
    9. '):
' → logprob: -13.125933647155762
    10. ':' → logprob: -13.125933647155762

Token 131: ' cmp' (ID: 57822)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.40865248441696167
    2. 'distance' → logprob: -1.6586525440216064
    3. 'length' → logprob: -2.5336525440216064
    4. 'steps' → logprob: -2.7836525440216064
    5. 'dist' → logprob: -6.783652305603027
    6. 'm' → logprob: -7.408652305603027
    7. 'n' → logprob: -7.408652305603027
    8. 't' → logprob: -7.783652305603027
    9. 'd' → logprob: -8.408652305603027
    10. 'size' → logprob: -9.158652305603027

Token 132: '_op' (ID: 20111)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1598912626504898
    2. '):
' → logprob: -3.284891366958618
    3. ')' → logprob: -3.534891366958618
    4. '   ' → logprob: -4.284891128540039
    5. '               ' → logprob: -4.909891128540039
    6. '           ' → logprob: -5.284891128540039
    7. ',' → logprob: -5.284891128540039
    8. '```' → logprob: -5.284891128540039
    9. '_' → logprob: -5.409891128540039
    10. '=None' → logprob: -5.534891128540039

Token 133: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002908296650275588
    2. ',' → logprob: -6.752908229827881
    3. '):
' → logprob: -6.877908229827881
    4. ')' → logprob: -7.877908229827881
    5. '=None' → logprob: -9.377908706665039
    6. '=' → logprob: -9.752908706665039
    7. '):

' → logprob: -9.877908706665039
    8. ':' → logprob: -10.127908706665039
    9. '   ' → logprob: -10.377908706665039
    10. ''):' → logprob: -10.877908706665039

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.747814349073451e-05
    2. 'return' → logprob: -11.250017166137695
    3. '  ' → logprob: -12.875017166137695
    4. ' ' → logprob: -14.125017166137695
    5. '```' → logprob: -15.125017166137695
    6. '       ' → logprob: -15.375017166137695
    7. '    ' → logprob: -15.500017166137695
    8. ' return' → logprob: -15.625017166137695
    9. 'def' → logprob: -16.000017166137695
    10. '	return' → logprob: -16.125017166137695

Token 135: ' idx' (ID: 14016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006565217860043049
    2. 'return' → logprob: -5.131565093994141
    3. 'pass' → logprob: -8.00656509399414
    4. 'if' → logprob: -8.25656509399414
    5. 'for' → logprob: -11.25656509399414
    6. 'def' → logprob: -11.50656509399414
    7. '#' → logprob: -12.25656509399414
    8. '  ' → logprob: -12.38156509399414
    9. 'points' → logprob: -12.88156509399414
    10. '```' → logprob: -13.38156509399414

Token 136: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.565165638923645
    2. ' =' → logprob: -1.065165638923645
    3. '   ' → logprob: -2.5651655197143555
    4. '+=' → logprob: -4.6901655197143555
    5. 'def' → logprob: -7.9401655197143555
    6. ' +=' → logprob: -8.690165519714355
    7. '+' → logprob: -9.065165519714355
    8. ':' → logprob: -9.440165519714355
    9. ' ' → logprob: -10.065165519714355
    10. '  ' → logprob: -10.190165519714355

Token 137: ' [' (ID: 723)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.6350400447845459
    2. '0' → logprob: -1.260040044784546
    3. 'next' → logprob: -2.260040044784546
    4. 'len' → logprob: -2.635040044784546
    5. 'None' → logprob: -5.385040283203125
    6. 'list' → logprob: -6.010040283203125
    7. ' ' → logprob: -7.260040283203125
    8. 'min' → logprob: -7.635040283203125
    9. 'reduce' → logprob: -7.885040283203125
    10. 'sum' → logprob: -8.510040283203125

Token 138: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.45799705386161804
    2. '0' → logprob: -1.7079970836639404
    3. 'p' → logprob: -2.9579970836639404
    4. 'len' → logprob: -3.2079970836639404
    5. 'points' → logprob: -3.3329970836639404
    6. 'x' → logprob: -3.9579970836639404
    7. '*' → logprob: -4.207996845245361
    8. 'point' → logprob: -4.332996845245361
    9. 'None' → logprob: -5.832996845245361
    10. 'idx' → logprob: -6.332996845245361

Token 139: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007550701266154647
    2. ' for' → logprob: -7.2507548332214355
    3. '+' → logprob: -10.875755310058594
    4. 'in' → logprob: -11.500755310058594
    5. '   ' → logprob: -12.375755310058594
    6. 'if' → logprob: -12.500755310058594
    7. ']' → logprob: -14.000755310058594
    8. '-' → logprob: -14.000755310058594
    9. 'from' → logprob: -14.000755310058594
    10. 'range' → logprob: -14.125755310058594

Token 140: ' i' (ID: 575)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.03787025064229965
    2. ' in' → logprob: -3.537870168685913
    3. 'i' → logprob: -5.162870407104492
    4. '   ' → logprob: -6.412870407104492
    5. 'x' → logprob: -8.287870407104492
    6. ' i' → logprob: -8.787870407104492
    7. 'point' → logprob: -9.912870407104492
    8. ' ' → logprob: -10.287870407104492
    9. '_in' → logprob: -10.287870407104492
    10. 'p' → logprob: -10.912870407104492

Token 141: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0033242227509617805
    2. 'n' → logprob: -5.753324031829834
    3. ' in' → logprob: -8.878324508666992
    4. 'range' → logprob: -12.753324508666992
    5. 'nd' → logprob: -13.503324508666992
    6. 'if' → logprob: -14.628324508666992
    7. 'In' → logprob: -14.628324508666992
    8. 'for' → logprob: -14.878324508666992
    9. '_in' → logprob: -14.878324508666992
    10. 'not' → logprob: -15.253324508666992

Token 142: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.771655115589965e-05
    2. 'enumer' → logprob: -11.500018119812012
    3. 'points' → logprob: -12.625018119812012
    4. ' range' → logprob: -13.250018119812012
    5. 'repeat' → logprob: -13.375018119812012
    6. '(range' → logprob: -14.500018119812012
    7. 'chain' → logprob: -15.500018119812012
    8. '	range' → logprob: -16.625017166137695
    9. 'ranges' → logprob: -17.250017166137695
    10. 'Range' → logprob: -17.500017166137695

Token 143: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.006877222564071417
    2. '(points' → logprob: -5.006877422332764
    3. '(' → logprob: -9.006876945495605
    4. '(range' → logprob: -10.756876945495605
    5. '(length' → logprob: -12.631876945495605
    6. '(point' → logprob: -12.756876945495605
    7. '(p' → logprob: -13.006876945495605
    8. '(idx' → logprob: -13.006876945495605
    9. '(max' → logprob: -13.256876945495605
    10. '(num' → logprob: -13.506876945495605

Token 144: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: 0.0
    2. '(point' → logprob: -18.375
    3. '(p' → logprob: -19.25
    4. ' points' → logprob: -20.375
    5. '	points' → logprob: -20.375
    6. '(' → logprob: -20.875
    7. 'points' → logprob: -21.25
    8. '.points' → logprob: -21.375
    9. '(po' → logprob: -22.5
    10. '(posts' → logprob: -22.875

Token 145: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -4.008129963040119e-06
    2. ')' → logprob: -13.000003814697266
    3. ')]' → logprob: -14.125003814697266
    4. '))]
' → logprob: -14.875003814697266
    5. ')))' → logprob: -15.125003814697266
    6. ' ))' → logprob: -16.500003814697266
    7. '))-' → logprob: -16.875003814697266
    8. ')-' → logprob: -17.375003814697266
    9. ')):' → logprob: -18.125003814697266
    10. '))}
' → logprob: -18.375003814697266

Token 146: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0002334568416699767
    2. ' if' → logprob: -8.50023365020752
    3. '   ' → logprob: -10.75023365020752
    4. 'for' → logprob: -13.37523365020752
    5. '           ' → logprob: -13.87523365020752
    6. ' ' → logprob: -14.00023365020752
    7. '               ' → logprob: -14.00023365020752
    8. '       ' → logprob: -14.12523365020752
    9. '  ' → logprob: -14.37523365020752
    10. '	if' → logprob: -15.00023365020752

Token 147: ' points' (ID: 5571)
  Prédit: 'cmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cmp' → logprob: -5.371605948312208e-05
    2. ' cmp' → logprob: -10.125053405761719
    3. '   ' → logprob: -11.500053405761719
    4. 'not' → logprob: -12.875053405761719
    5. 'cpp' → logprob: -15.500053405761719
    6. '_cmp' → logprob: -15.875053405761719
    7. 'cm' → logprob: -15.875053405761719
    8. 'cnt' → logprob: -15.875053405761719
    9. 'CMP' → logprob: -16.50005340576172
    10. 'compare' → logprob: -16.75005340576172

Token 148: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006949799135327339
    2. '[p' → logprob: -5.0069499015808105
    3. '[idx' → logprob: -8.506949424743652
    4. '[' → logprob: -11.006949424743652
    5. '[j' → logprob: -11.881949424743652
    6. '[index' → logprob: -12.506949424743652
    7. '==' → logprob: -14.131949424743652
    8. '[ii' → logprob: -14.256949424743652
    9. '(i' → logprob: -14.381949424743652
    10. '```' → logprob: -14.631949424743652

Token 149: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009231308358721435
    2. ']==' → logprob: -7.250923156738281
    3. '][' → logprob: -8.500923156738281
    4. '].' → logprob: -12.000923156738281
    5. ']!=' → logprob: -13.625923156738281
    6. ']]' → logprob: -14.000923156738281
    7. ']=='' → logprob: -14.750923156738281
    8. '])' → logprob: -15.500923156738281
    9. ']
' → logprob: -16.12592315673828
    10. ']}' → logprob: -16.37592315673828

Token 150: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.728878378868103
    2. 'cmp' → logprob: -1.353878378868103
    3. 'direction' → logprob: -1.478878378868103
    4. 'p' → logprob: -3.6038784980773926
    5. '1' → logprob: -6.353878498077393
    6. 'idx' → logprob: -6.478878498077393
    7. 'dir' → logprob: -7.478878498077393
    8. '`' → logprob: -10.103878021240234
    9. 'index' → logprob: -10.228878021240234
    10. ':' → logprob: -10.353878021240234

Token 151: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00018613664724398404
    2. ']>' → logprob: -9.2501859664917
    3. ']==' → logprob: -9.8751859664917
    4. '][' → logprob: -10.2501859664917
    5. '].' → logprob: -13.5001859664917
    6. ']>=' → logprob: -14.0001859664917
    7. ']]' → logprob: -14.6251859664917
    8. ']<' → logprob: -15.0001859664917
    9. ']<=' → logprob: -16.250186920166016
    10. ']=='' → logprob: -16.625186920166016

Token 152: ' >=' (ID: 5064)
  Prédit: 'cmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cmp' → logprob: -0.094889797270298
    2. '>' → logprob: -2.4698898792266846
    3. '==' → logprob: -5.7198896408081055
    4. '<' → logprob: -6.4698896408081055
    5. '>=' → logprob: -7.0948896408081055
    6. ' cmp' → logprob: -9.344889640808105
    7. '<=' → logprob: -9.344889640808105
    8. 'CMP' → logprob: -10.719889640808105
    9. 'direction' → logprob: -11.094889640808105
    10. '_cmp' → logprob: -11.219889640808105

Token 153: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00048310417332686484
    2. 'points' → logprob: -7.87548303604126
    3. '0' → logprob: -9.875483512878418
    4. ' p' → logprob: -10.750483512878418
    5. 'direction' → logprob: -10.750483512878418
    6. 'cmp' → logprob: -11.750483512878418
    7. 'point' → logprob: -14.750483512878418
    8. '   ' → logprob: -16.8754825592041
    9. ' points' → logprob: -17.5004825592041
    10. '(p' → logprob: -17.6254825592041

Token 154: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2200749754119897e-06
    2. '][' → logprob: -13.125001907348633
    3. ']' → logprob: -16.000001907348633
    4. '(' → logprob: -17.625001907348633
    5. '[i' → logprob: -17.750001907348633
    6. '\[' → logprob: -18.375001907348633
    7. '0' → logprob: -18.625001907348633
    8. ')][' → logprob: -18.625001907348633
    9. '```' → logprob: -18.875001907348633
    10. ''][' → logprob: -19.625001907348633

Token 155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '0' → logprob: -13.625000953674316
    3. '2' → logprob: -17.375001907348633
    4. '１' → logprob: -18.500001907348633
    5. '][' → logprob: -18.875001907348633
    6. '[' → logprob: -19.500001907348633
    7. '```' → logprob: -19.750001907348633
    8. '   ' → logprob: -20.250001907348633
    9. ' ' → logprob: -20.250001907348633
    10. '`' → logprob: -21.125001907348633

Token 156: ']' (ID: 60)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.002184999408200383
    2. ']' → logprob: -6.502184867858887
    3. ']][' → logprob: -7.502184867858887
    4. ']]
' → logprob: -10.252184867858887
    5. '])' → logprob: -10.627184867858887
    6. ']].' → logprob: -11.002184867858887
    7. ']])' → logprob: -11.127184867858887
    8. '])]' → logprob: -11.127184867858887
    9. ']]]' → logprob: -11.252184867858887
    10. ']]

' → logprob: -12.002184867858887

Token 157: ' and' (ID: 326)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030154822394251823
    2. 'and' → logprob: -4.030154705047607
    3. ']
' → logprob: -4.905154705047607
    4. '][' → logprob: -5.655154705047607
    5. ' and' → logprob: -7.780154705047607
    6. '   ' → logprob: -8.780155181884766
    7. 'if' → logprob: -9.030155181884766
    8. ']

' → logprob: -9.155155181884766
    9. '].' → logprob: -9.280155181884766
    10. '       ' → logprob: -10.905155181884766

Token 158: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0019367238273844123
    2. ' points' → logprob: -6.251936912536621
    3. 'p' → logprob: -13.251936912536621
    4. '   ' → logprob: -13.501936912536621
    5. '	points' → logprob: -14.001936912536621
    6. 'point' → logprob: -14.126936912536621
    7. '(points' → logprob: -14.126936912536621
    8. 'cmp' → logprob: -14.126936912536621
    9. '    ' → logprob: -14.501936912536621
    10. '  ' → logprob: -14.876936912536621

Token 159: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.038464173674583435
    2. '[' → logprob: -3.288464069366455
    3. '[idx' → logprob: -8.038464546203613
    4. '[p' → logprob: -9.413464546203613
    5. '[j' → logprob: -11.913464546203613
    6. '[ii' → logprob: -12.038464546203613
    7. '[index' → logprob: -13.038464546203613
    8. '[(' → logprob: -14.288464546203613
    9. '[a' → logprob: -15.038464546203613
    10. '[k' → logprob: -15.288464546203613

Token 160: ']!=' (ID: 85780)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -2.5822400857578032e-05
    2. '[' → logprob: -10.875025749206543
    3. ']' → logprob: -12.250025749206543
    4. ''][' → logprob: -14.250025749206543
    5. ']][' → logprob: -15.375025749206543
    6. '()][' → logprob: -15.375025749206543
    7. '].[' → logprob: -15.500025749206543
    8. '].' → logprob: -15.750025749206543
    9. '])[' → logprob: -16.00002670288086
    10. '"][' → logprob: -16.37502670288086

Token 161: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: 0.0
    2. ' p' → logprob: -18.375
    3. '(p' → logprob: -24.625
    4. '	p' → logprob: -25.125
    5. '<p' → logprob: -25.375
    6. 'points' → logprob: -26.0
    7. 'pp' → logprob: -26.0
    8. '.p' → logprob: -26.375
    9. '$p' → logprob: -26.75
    10. '*p' → logprob: -26.875

Token 162: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6498082876205444
    2. '][' → logprob: -0.8998082876205444
    3. ']
' → logprob: -2.649808406829834
    4. ']

' → logprob: -8.149807929992676
    5. '[' → logprob: -9.274807929992676
    6. ')][' → logprob: -10.399807929992676
    7. '][:' → logprob: -10.524807929992676
    8. ')' → logprob: -10.649807929992676
    9. '].' → logprob: -10.899807929992676
    10. ')[' → logprob: -11.274807929992676

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.629921436891891e-05
    2. '       ' → logprob: -11.00002670288086
    3. 'return' → logprob: -12.25002670288086
    4. '  ' → logprob: -12.50002670288086
    5. '    ' → logprob: -14.75002670288086
    6. ' ' → logprob: -15.12502670288086
    7. '           ' → logprob: -16.12502670288086
    8. '               ' → logprob: -16.12502670288086
    9. '    
' → logprob: -17.12502670288086
    10. '     ' → logprob: -17.25002670288086

Token 164: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32679879665374756
    2. 'return' → logprob: -1.3267987966537476
    3. 'idx' → logprob: -4.576798915863037
    4. 'sorted' → logprob: -6.576798915863037
    5. 'if' (adapté à ' if') → logprob: -6.951798915863037
    6. 'points' → logprob: -8.451798439025879
    7. 'direction' → logprob: -8.576798439025879
    8. 'sort' → logprob: -8.576798439025879
    9. '       ' → logprob: -10.201798439025879
    10. 'cmp' → logprob: -10.201798439025879

Token 165: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.33246174454689026
    2. ' idx' → logprob: -1.4574617147445679
    3. 'not' → logprob: -3.0824618339538574
    4. ' len' → logprob: -6.082461833953857
    5. 'idx' → logprob: -6.582461833953857
    6. ':' → logprob: -8.2074613571167
    7. '(idx' → logprob: -9.8324613571167
    8. '  ' → logprob: -10.0824613571167
    9. ' ' → logprob: -10.2074613571167
    10. '   ' → logprob: -10.4574613571167

Token 166: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.03804631531238556
    2. ' idx' → logprob: -3.288046360015869
    3. '(idx' → logprob: -12.538045883178711
    4. '.idx' → logprob: -14.913045883178711
    5. '_idx' → logprob: -15.038045883178711
    6. '[idx' → logprob: -15.038045883178711
    7. '	idx' → logprob: -15.038045883178711
    8. '  ' → logprob: -18.66304588317871
    9. 'index' → logprob: -18.78804588317871
    10. 'len' → logprob: -19.28804588317871

Token 167: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.73052782076411e-05
    2. ':
' → logprob: -9.750067710876465
    3. ':return' → logprob: -12.375067710876465
    4. ':`' → logprob: -12.625067710876465
    5. ':

' → logprob: -14.375067710876465
    6. ':**' → logprob: -15.375067710876465
    7. ' or' → logprob: -16.37506675720215
    8. ' :' → logprob: -16.37506675720215
    9. ':</' → logprob: -16.50006675720215
    10. ':
' → logprob: -16.87506675720215

Token 168: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016630828380584717
    2. 'return' → logprob: -4.14163064956665
    3. '   ' → logprob: -7.51663064956665
    4. ' return' → logprob: -10.766631126403809
    5. '     ' → logprob: -11.516631126403809
    6. '```' → logprob: -12.016631126403809
    7. 'pass' → logprob: -12.391631126403809
    8. '      ' → logprob: -12.766631126403809
    9. '               ' → logprob: -13.266631126403809
    10. '        ' → logprob: -13.391631126403809

Token 169: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0007211300544440746
    2. ' None' → logprob: -7.375720977783203
    3. '   ' → logprob: -9.750720977783203
    4. 'none' → logprob: -11.375720977783203
    5. '[]' → logprob: -11.500720977783203
    6. '_none' → logprob: -11.625720977783203
    7. 'null' → logprob: -13.125720977783203
    8. '(None' → logprob: -14.000720977783203
    9. '```' → logprob: -14.125720977783203
    10. 'return' → logprob: -14.250720977783203

Token 170: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002668757690116763
    2. 'return' → logprob: -6.627668857574463
    3. '```' → logprob: -6.877668857574463
    4. '    
' → logprob: -8.377668380737305
    5. '       ' → logprob: -10.752668380737305
    6. '``' → logprob: -11.377668380737305
    7. '  ' → logprob: -11.502668380737305
    8. '  
' → logprob: -11.752668380737305
    9. ' return' → logprob: -12.252668380737305
    10. '`' → logprob: -12.252668380737305

Token 171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00043734462815336883
    2. '```' → logprob: -8.00043773651123
    3. 'return' → logprob: -9.37543773651123
    4. '``' → logprob: -12.12543773651123
    5. '       ' → logprob: -12.37543773651123
    6. '  ' → logprob: -12.62543773651123
    7. '    
' → logprob: -13.37543773651123
    8. '`' → logprob: -13.75043773651123
    9. '    ' → logprob: -14.62543773651123
    10. ' return' → logprob: -14.75043773651123

Token 172: ' candidates' (ID: 18116)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012783801183104515
    2. 'return' → logprob: -4.762784004211426
    3. 'idx' → logprob: -6.012784004211426
    4. 'next' → logprob: -7.512784004211426
    5. 'point' → logprob: -7.762784004211426
    6. 'p' → logprob: -8.387784004211426
    7. 'sorted' → logprob: -8.512784004211426
    8. 'closest' → logprob: -9.262784004211426
    9. 'points' → logprob: -9.387784004211426
    10. 'n' → logprob: -10.637784004211426

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009792448952794075
    2. '=' → logprob: -4.634792327880859
    3. '   ' → logprob: -11.00979232788086
    4. '=[]' → logprob: -11.88479232788086
    5. ' ' → logprob: -12.50979232788086
    6. '  ' → logprob: -13.00979232788086
    7. '=list' → logprob: -13.13479232788086
    8. ',' → logprob: -13.88479232788086
    9. '=[' → logprob: -14.38479232788086
    10. '    ' → logprob: -14.38479232788086

Token 174: ' [' (ID: 723)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.07923895865678787
    2. '[' → logprob: -3.7042388916015625
    3. 'sorted' → logprob: -3.7042388916015625
    4. 'list' → logprob: -4.0792388916015625
    5. 'is' → logprob: -4.7042388916015625
    6. ' points' → logprob: -7.7042388916015625
    7. '   ' → logprob: -8.954238891601562
    8. '[list' → logprob: -9.329238891601562
    9. ' [' → logprob: -9.704238891601562
    10. 'chain' → logprob: -10.079238891601562

Token 175: 'points' (ID: 14011)
  Prédit: 'points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -7.398067828034982e-05
    2. '   ' → logprob: -10.25007438659668
    3. ' points' → logprob: -11.00007438659668
    4. 'point' → logprob: -11.25007438659668
    5. 'p' → logprob: -12.12507438659668
    6. '(points' → logprob: -14.00007438659668
    7. '       ' → logprob: -14.25007438659668
    8. '	points' → logprob: -14.50007438659668
    9. 'i' → logprob: -14.62507438659668
    10. '               ' → logprob: -15.12507438659668

Token 176: '[i' (ID: 1768)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.5762020349502563
    2. '[i' → logprob: -0.8262020349502563
    3. '[j' → logprob: -8.326202392578125
    4. '[index' → logprob: -12.451202392578125
    5. '[ix' → logprob: -12.451202392578125
    6. '[ii' → logprob: -12.576202392578125
    7. '[' → logprob: -12.701202392578125
    8. '(idx' → logprob: -13.701202392578125
    9. '[k' → logprob: -13.826202392578125
    10. '[min' → logprob: -14.076202392578125

Token 177: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004097516182810068
    2. '][' → logprob: -5.5040974617004395
    3. ']]' → logprob: -11.504097938537598
    4. ')' → logprob: -12.754097938537598
    5. '].' → logprob: -13.379097938537598
    6. ']][' → logprob: -13.504097938537598
    7. 'for' → logprob: -14.254097938537598
    8. '   ' → logprob: -14.379097938537598
    9. ']
' → logprob: -14.504097938537598
    10. '[' → logprob: -15.504097938537598

Token 178: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000553151941858232
    2. ' for' → logprob: -7.500553131103516
    3. '	for' → logprob: -15.625553131103516
    4. '   ' → logprob: -16.500553131103516
    5. 'if' → logprob: -19.125553131103516
    6. '[' → logprob: -19.875553131103516
    7. ' ' → logprob: -20.000553131103516
    8. '  ' → logprob: -20.125553131103516
    9. '.for' → logprob: -20.250553131103516
    10. 'fo' → logprob: -20.875553131103516

Token 179: ' i' (ID: 575)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0943937748670578
    2. 'i' → logprob: -2.469393730163574
    3. ' in' → logprob: -5.469393730163574
    4. ' i' → logprob: -7.344393730163574
    5. 'idx' → logprob: -8.219393730163574
    6. 'point' → logprob: -9.844393730163574
    7. 'x' → logprob: -10.219393730163574
    8. 'c' → logprob: -10.219393730163574
    9. '   ' → logprob: -10.344393730163574
    10. 'j' → logprob: -10.469393730163574

Token 180: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.5928495486150496e-05
    2. ' in' → logprob: -11.125016212463379
    3. 'if' → logprob: -14.500016212463379
    4. 'not' → logprob: -15.875016212463379
    5. 'idx' → logprob: -16.125015258789062
    6. 'for' → logprob: -16.250015258789062
    7. 'of' → logprob: -16.875015258789062
    8. '=' → logprob: -16.875015258789062
    9. 'from' → logprob: -17.000015258789062
    10. 'In' → logprob: -17.750015258789062

Token 181: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.1472419600977446e-06
    2. ' idx' → logprob: -14.500000953674316
    3. 'index' → logprob: -14.625000953674316
    4. 'range' → logprob: -17.000001907348633
    5. 'indices' → logprob: -17.375001907348633
    6. '.idx' → logprob: -17.375001907348633
    7. '[idx' → logprob: -17.625001907348633
    8. '(idx' → logprob: -17.750001907348633
    9. 'sorted' → logprob: -18.375001907348633
    10. 'c' → logprob: -18.875001907348633

Token 182: ']
' (ID: 1592)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06285703927278519
    2. ']' → logprob: -3.312857151031494
    3. ']
' → logprob: -4.187857151031494
    4. ' if' → logprob: -4.687857151031494
    5. ']

' → logprob: -9.562856674194336
    6. '   ' → logprob: -10.937856674194336
    7. '][:' → logprob: -11.312856674194336
    8. 'for' → logprob: -12.062856674194336
    9. '	if' → logprob: -12.562856674194336
    10. '][' → logprob: -12.562856674194336

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.9361264946837764e-07
    2. '  ' → logprob: -16.375
    3. 'return' → logprob: -18.0
    4. 'c' → logprob: -18.625
    5. '       ' → logprob: -18.75
    6. '    ' → logprob: -19.25
    7. 'def' → logprob: -20.0
    8. '    
' → logprob: -20.25
    9. ' ' → logprob: -20.5
    10. 'sorted' → logprob: -20.5

Token 184: ' v' (ID: 323)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005390280392020941
    2. 'c' → logprob: -5.255390167236328
    3. 'return' → logprob: -9.130390167236328
    4. 'sorted' → logprob: -10.380390167236328
    5. '  ' → logprob: -11.755390167236328
    6. 'if' → logprob: -13.255390167236328
    7. 'sort' → logprob: -13.755390167236328
    8. 'direction' → logprob: -13.755390167236328
    9. 'closest' → logprob: -14.005390167236328
    10. ' ' → logprob: -14.130390167236328

Token 185: '_base' (ID: 17096)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09211880713701248
    2. ' =' → logprob: -2.467118740081787
    3. '   ' → logprob: -6.092118740081787
    4. '  ' → logprob: -8.717119216918945
    5. ' ' → logprob: -8.967119216918945
    6. '=d' → logprob: -9.092119216918945
    7. '=c' → logprob: -9.217119216918945
    8. 'ectors' → logprob: -9.592119216918945
    9. 'ector' → logprob: -9.717119216918945
    10. '    ' → logprob: -9.717119216918945

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6232390999794006
    2. '=' → logprob: -0.8732390999794006
    3. '   ' → logprob: -3.123239040374756
    4. ',' → logprob: -7.123239040374756
    5. ' ' → logprob: -7.873239040374756
    6. '  ' → logprob: -8.373239517211914
    7. '    ' → logprob: -8.748239517211914
    8. '=v' → logprob: -8.873239517211914
    9. '       ' → logprob: -9.373239517211914
    10. '```' → logprob: -9.873239517211914

Token 187: ' [' (ID: 723)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.011624076403677464
    2. 'c' → logprob: -4.511623859405518
    3. ' unit' → logprob: -8.386624336242676
    4. 'direction' → logprob: -9.011624336242676
    5. 'norm' → logprob: -9.136624336242676
    6. ' candidates' → logprob: -10.386624336242676
    7. '   ' → logprob: -10.511624336242676
    8. 'candidate' → logprob: -11.136624336242676
    9. 'units' → logprob: -11.386624336242676
    10. '(unit' → logprob: -11.761624336242676

Token 188: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10546989738941193
    2. 'c' → logprob: -2.4804699420928955
    3. 'direction' → logprob: -4.605469703674316
    4. 'points' → logprob: -5.855469703674316
    5. 'p' → logprob: -6.480469703674316
    6. 'x' → logprob: -7.480469703674316
    7. '   ' → logprob: -7.730469703674316
    8. 'v' → logprob: -8.605469703674316
    9. 'd' → logprob: -8.855469703674316
    10. 'candidate' → logprob: -8.980469703674316

Token 189: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05693832039833069
    2. ']' → logprob: -3.431938409805298
    3. ',' → logprob: -4.181938171386719
    4. '0' → logprob: -5.931938171386719
    5. '].' → logprob: -6.431938171386719
    6. '.]' → logprob: -6.431938171386719
    7. '-' → logprob: -7.306938171386719
    8. '   ' → logprob: -7.431938171386719
    9. '1' → logprob: -9.431938171386719
    10. '],' → logprob: -9.681938171386719

Token 190: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001882823125924915
    2. '1' → logprob: -8.625187873840332
    3. '-' → logprob: -12.250187873840332
    4. ' ' → logprob: -12.875187873840332
    5. '2' → logprob: -13.875187873840332
    6. '   ' → logprob: -16.12518882751465
    7. 'direction' → logprob: -16.25018882751465
    8. 'c' → logprob: -16.62518882751465
    9. '3' → logprob: -17.75018882751465
    10. '  ' → logprob: -17.87518882751465

Token 191: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00030602619517594576
    2. '1' → logprob: -8.125306129455566
    3. '-' → logprob: -12.125306129455566
    4. '2' → logprob: -12.875306129455566
    5. 'direction' → logprob: -13.375306129455566
    6. 'c' → logprob: -15.625306129455566
    7. 'len' → logprob: -15.625306129455566
    8. ' ' → logprob: -16.12530517578125
    9. '3' → logprob: -16.37530517578125
    10. '   ' → logprob: -17.75030517578125

Token 192: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0023606636095792055
    2. '   ' → logprob: -6.252360820770264
    3. ']
' → logprob: -8.252360343933105
    4. ',' → logprob: -9.502360343933105
    5. ')]' → logprob: -10.502360343933105
    6. ']}' → logprob: -10.502360343933105
    7. ']

' → logprob: -11.627360343933105
    8. ')' → logprob: -11.627360343933105
    9. ' ]' → logprob: -12.752360343933105
    10. '],' → logprob: -12.752360343933105

Token 193: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012458281125873327
    2. '    
' → logprob: -7.251245975494385
    3. 'c' → logprob: -8.001245498657227
    4. 'v' → logprob: -8.876245498657227
    5. ';' → logprob: -10.501245498657227
    6. 'for' → logprob: -11.751245498657227
    7. '#' → logprob: -11.751245498657227
    8. '  ' → logprob: -12.501245498657227
    9. 'return' → logprob: -13.126245498657227
    10. 'def' → logprob: -13.501245498657227

Token 194: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.005257952958345413
    2. 'cmp' → logprob: -5.630258083343506
    3. 'p' → logprob: -7.380258083343506
    4. 'c' → logprob: -8.255257606506348
    5. 'dir' → logprob: -8.755257606506348
    6. ' direction' → logprob: -8.755257606506348
    7. '   ' → logprob: -8.880257606506348
    8. 'not' → logprob: -9.505257606506348
    9. 'v' → logprob: -9.630257606506348
    10. 'idx' → logprob: -10.130257606506348

Token 195: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00032604875741526484
    2. 'else' → logprob: -8.125326156616211
    3. ' ==' → logprob: -10.625326156616211
    4. '=='' → logprob: -13.750326156616211
    5. ' else' → logprob: -13.750326156616211
    6. '>' → logprob: -14.250326156616211
    7. '[' → logprob: -14.375326156616211
    8. '==-' → logprob: -14.375326156616211
    9. '!=' → logprob: -14.500326156616211
    10. '=="' → logprob: -14.750326156616211

Token 196: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.025646815076470375
    2. '1' → logprob: -4.275646686553955
    3. '"' → logprob: -5.275646686553955
    4. '0' → logprob: -6.025646686553955
    5. ''h' → logprob: -6.275646686553955
    6. ''E' → logprob: -7.275646686553955
    7. ''e' → logprob: -8.400647163391113
    8. ''x' → logprob: -8.400647163391113
    9. ''H' → logprob: -8.650647163391113
    10. ''s' → logprob: -9.400647163391113

Token 197: 'r' (ID: 81)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.4840996563434601
    2. 'clock' → logprob: -1.8590996265411377
    3. 'up' → logprob: -2.3590996265411377
    4. 'horizontal' → logprob: -2.7340996265411377
    5. 'left' → logprob: -3.2340996265411377
    6. 'x' → logprob: -4.234099864959717
    7. 'east' → logprob: -5.734099864959717
    8. '"' → logprob: -5.984099864959717
    9. 'north' → logprob: -6.359099864959717
    10. 'counter' → logprob: -6.734099864959717

Token 198: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3138347268104553
    2. 'ight' → logprob: -1.3138346672058105
    3. '"`' → logprob: -8.188835144042969
    4. '"""' → logprob: -8.813835144042969
    5. '""' → logprob: -10.688835144042969
    6. 'ght' → logprob: -11.188835144042969
    7. ''"' → logprob: -11.313835144042969
    8. 'igh' → logprob: -11.438835144042969
    9. 'igth' → logprob: -11.688835144042969
    10. 'IGHT' → logprob: -11.938835144042969

Token 199: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.004014411009848118
    2. ':' → logprob: -5.879014492034912
    3. '   ' → logprob: -7.504014492034912
    4. ' else' → logprob: -7.879014492034912
    5. 'elif' → logprob: -8.504014015197754
    6. '       ' → logprob: -10.504014015197754
    7. ':
' → logprob: -11.379014015197754
    8. ':return' → logprob: -11.879014015197754
    9. 'return' → logprob: -12.254014015197754
    10. 'or' → logprob: -12.754014015197754

Token 200: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.005415653809905052
    2. '[' → logprob: -5.505415439605713
    3. '   ' → logprob: -6.755415439605713
    4. ' [-' → logprob: -8.755415916442871
    5. '       ' → logprob: -12.005415916442871
    6. '  ' → logprob: -13.130415916442871
    7. '    ' → logprob: -13.255415916442871
    8. '([-' → logprob: -13.880415916442871
    9. '     ' → logprob: -14.130415916442871
    10. ' [' → logprob: -14.255415916442871

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -20.625
    3. '2' → logprob: -21.625
    4. '１' → logprob: -21.875
    5. '   ' → logprob: -23.625
    6. '0' → logprob: -23.875
    7. '۱' → logprob: -24.25
    8. '10' → logprob: -24.375
    9. '१' → logprob: -24.75
    10. '100' → logprob: -25.0

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.128163257315464e-07
    2. ' ,' → logprob: -15.875
    3. 'if' → logprob: -17.125
    4. '1' → logprob: -17.5
    5. '，' → logprob: -17.5
    6. '0' → logprob: -17.875
    7. '`,' → logprob: -18.25
    8. '```' → logprob: -18.25
    9. ',
' → logprob: -18.75
    10. '.' → logprob: -18.875

Token 203: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.875
    3. '1' → logprob: -22.375
    4. '   ' → logprob: -24.75
    5. '０' → logprob: -26.25
    6. '       ' → logprob: -27.0
    7. '00' → logprob: -27.125
    8. '۰' → logprob: -27.375
    9. '2' → logprob: -27.5
    10. '	' → logprob: -28.125

Token 204: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -22.375
    3. '1' → logprob: -22.625
    4. '０' → logprob: -26.125
    5. '   ' → logprob: -26.625
    6. '2' → logprob: -27.375
    7. '۰' → logprob: -27.5
    8. '       ' → logprob: -28.125
    9. '00' → logprob: -28.125
    10. '	' → logprob: -29.125

Token 205: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6628172993659973
    2. ']
' → logprob: -0.7878172993659973
    3. '   ' → logprob: -3.5378172397613525
    4. ']

' → logprob: -8.537817001342773
    5. '       ' → logprob: -8.662817001342773
    6. '](' → logprob: -9.912817001342773
    7. '].' → logprob: -10.537817001342773
    8. ']}' → logprob: -10.662817001342773
    9. ']]
' → logprob: -10.662817001342773
    10. ']
' → logprob: -10.787817001342773

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2664456789934775e-06
    2. '       ' → logprob: -14.750000953674316
    3. '  ' → logprob: -15.125000953674316
    4. '    
' → logprob: -15.125000953674316
    5. '```' → logprob: -15.875000953674316
    6. 'c' → logprob: -16.625001907348633
    7. '    ' → logprob: -17.250001907348633
    8. 'return' → logprob: -17.500001907348633
    9. '``' → logprob: -18.500001907348633
    10. ' ' → logprob: -18.875001907348633

Token 207: ' v' (ID: 323)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004057978745549917
    2. 'v' (adapté à ' v') → logprob: -5.754057884216309
    3. 'c' → logprob: -8.379057884216309
    4. 'angle' → logprob: -8.879057884216309
    5. 'n' → logprob: -9.254057884216309
    6. 'd' → logprob: -9.879057884216309
    7. 'cos' → logprob: -10.004057884216309
    8. 'angles' → logprob: -10.254057884216309
    9. 'base' → logprob: -10.379057884216309
    10. '  ' → logprob: -10.379057884216309

Token 208: 'list' (ID: 2641)
  Prédit: '_base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_base' → logprob: -0.000356199947418645
    2. ' =' → logprob: -8.875356674194336
    3. '_c' → logprob: -10.000356674194336
    4. '_direction' → logprob: -10.375356674194336
    5. '_temp' → logprob: -10.875356674194336
    6. '_next' → logprob: -11.250356674194336
    7. '_candidate' → logprob: -11.250356674194336
    8. '_' → logprob: -11.625356674194336
    9. '=' → logprob: -12.125356674194336
    10. '   ' → logprob: -12.125356674194336

Token 209: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06293270736932755
    2. '   ' → logprob: -3.4379327297210693
    3. ' =' → logprob: -3.5629327297210693
    4. '=[]' → logprob: -8.187932968139648
    5. '.append' → logprob: -9.562932968139648
    6. '  ' → logprob: -9.937932968139648
    7. ' ' → logprob: -10.562932968139648
    8. '=list' → logprob: -10.937932968139648
    9. '=v' → logprob: -11.312932968139648
    10. '    ' → logprob: -11.312932968139648

Token 210: ' [[' (ID: 9237)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.044627122581005096
    2. '[' → logprob: -3.7946271896362305
    3. 'is' → logprob: -4.5446271896362305
    4. 'st' → logprob: -6.0446271896362305
    5. '[list' → logprob: -6.1696271896362305
    6. 'chain' → logprob: -6.4196271896362305
    7. 'repeat' → logprob: -6.7946271896362305
    8. 'unit' → logprob: -7.2946271896362305
    9. '   ' → logprob: -7.2946271896362305
    10. '[]' → logprob: -7.4196271896362305

Token 211: 'q' (ID: 80)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.30152326822280884
    2. '0' → logprob: -1.926523208618164
    3. 'c' → logprob: -2.801523208618164
    4. '1' → logprob: -3.176523208618164
    5. 'x' → logprob: -5.176523208618164
    6. 'p' → logprob: -5.551523208618164
    7. 'cos' → logprob: -7.176523208618164
    8. '-' → logprob: -8.051523208618164
    9. '*' → logprob: -8.176523208618164
    10. '   ' → logprob: -8.301523208618164

Token 212: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.290784560609609e-05
    2. '[i' → logprob: -10.500072479248047
    3. '   ' → logprob: -11.125072479248047
    4. 'for' → logprob: -11.250072479248047
    5. ' for' → logprob: -11.375072479248047
    6. ',' → logprob: -13.375072479248047
    7. '       ' → logprob: -14.375072479248047
    8. '[q' → logprob: -14.500072479248047
    9. '  ' → logprob: -14.750072479248047
    10. '-' → logprob: -15.250072479248047

Token 213: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026169343618676066
    2. '1' → logprob: -8.250261306762695
    3. '2' → logprob: -14.875261306762695
    4. 'x' → logprob: -19.500261306762695
    5. ' ' → logprob: -19.750261306762695
    6. '3' → logprob: -20.125261306762695
    7. ']' → logprob: -20.375261306762695
    8. '-' → logprob: -20.750261306762695
    9. 'i' → logprob: -21.125261306762695
    10. '   ' → logprob: -21.125261306762695

Token 214: ']-' (ID: 27107)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '],' → logprob: -0.011493740603327751
    2. ']' → logprob: -4.636493682861328
    3. '][' → logprob: -7.136493682861328
    4. ']+' → logprob: -7.886493682861328
    5. '],[' → logprob: -8.261493682861328
    6. '+' → logprob: -9.386493682861328
    7. '   ' → logprob: -9.636493682861328
    8. ']]' → logprob: -10.511493682861328
    9. '],
' → logprob: -11.011493682861328
    10. '].' → logprob: -11.011493682861328

Token 215: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.7432603272027336e-06
    2. ' p' → logprob: -13.625001907348633
    3. 'q' → logprob: -14.500001907348633
    4. 'v' → logprob: -18.250001907348633
    5. '<p' → logprob: -20.250001907348633
    6. '   ' → logprob: -20.375001907348633
    7. '	p' → logprob: -20.500001907348633
    8. 'points' → logprob: -20.875001907348633
    9. '(p' → logprob: -21.125001907348633
    10. 'c' → logprob: -21.375001907348633

Token 216: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '\[' → logprob: -16.875
    3. '0' → logprob: -18.375
    4. '(' → logprob: -19.375
    5. '_[' → logprob: -19.875
    6. '[q' → logprob: -20.625
    7. '   ' → logprob: -20.75
    8. ' [' → logprob: -20.875
    9. '()[' → logprob: -20.875
    10. '][' → logprob: -21.0

Token 217: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '1' → logprob: -18.25
    3. ' ' → logprob: -20.75
    4. '۰' → logprob: -21.625
    5. '０' → logprob: -21.625
    6. '00' → logprob: -23.5
    7. '০' → logprob: -23.75
    8. '٠' → logprob: -23.75
    9. '   ' → logprob: -23.875
    10. '	' → logprob: -24.375

Token 218: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0010793721303343773
    2. ']]' → logprob: -7.501079559326172
    3. ']' → logprob: -7.876079559326172
    4. '],[' → logprob: -9.626079559326172
    5. ']][' → logprob: -10.626079559326172
    6. '][' → logprob: -10.751079559326172
    7. '],
' → logprob: -11.251079559326172
    8. ']],' → logprob: -11.751079559326172
    9. '```' → logprob: -12.751079559326172
    10. ']-' → logprob: -12.876079559326172

Token 219: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.246537173457909e-06
    2. ' q' → logprob: -12.500003814697266
    3. '(q' → logprob: -15.125003814697266
    4. '	q' → logprob: -16.000003814697266
    5. '   ' → logprob: -17.500003814697266
    6. '.q' → logprob: -19.625003814697266
    7. '       ' → logprob: -20.000003814697266
    8. '*q' → logprob: -20.000003814697266
    9. '$q' → logprob: -20.375003814697266
    10. '-q' → logprob: -20.500003814697266

Token 220: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '\[' → logprob: -15.75
    3. '   ' → logprob: -17.125
    4. '][' → logprob: -17.375
    5. '```' → logprob: -17.875
    6. ''[' → logprob: -18.25
    7. '_[' → logprob: -18.625
    8. '()[' → logprob: -18.625
    9. ''][' → logprob: -19.0
    10. '(' → logprob: -19.0

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -22.125
    3. '0' → logprob: -22.375
    4. '１' → logprob: -22.5
    5. '   ' → logprob: -23.625
    6. ' ' → logprob: -23.875
    7. '১' → logprob: -25.0
    8. '१' → logprob: -25.25
    9. '۱' → logprob: -25.75
    10. '```' → logprob: -25.875

Token 222: ']-' (ID: 27107)
  Prédit: ']-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']-' → logprob: -0.006272528320550919
    2. ']' → logprob: -5.506272315979004
    3. '][' → logprob: -6.131272315979004
    4. ']]' → logprob: -12.006272315979004
    5. ']][' → logprob: -12.506272315979004
    6. ']+' → logprob: -13.131272315979004
    7. '[' → logprob: -13.506272315979004
    8. '-' → logprob: -14.006272315979004
    9. ']*' → logprob: -14.006272315979004
    10. ']}' → logprob: -14.756272315979004

Token 223: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: 0.0
    2. ' p' → logprob: -19.375
    3. '	p' → logprob: -22.25
    4. '<p' → logprob: -23.5
    5. '$p' → logprob: -24.25
    6. ')p' → logprob: -24.375
    7. 'q' → logprob: -24.875
    8. '(p' → logprob: -25.5
    9. '.p' → logprob: -25.625
    10. '*p' → logprob: -26.375

Token 224: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '_[' → logprob: -17.25
    3. ''[' → logprob: -17.625
    4. '\[' → logprob: -17.875
    5. '()[' → logprob: -18.375
    6. '   ' → logprob: -18.625
    7. ' [' → logprob: -18.875
    8. '][' → logprob: -19.125
    9. '"[' → logprob: -19.625
    10. '[i' → logprob: -19.625

Token 225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '[' → logprob: -19.25
    3. '１' → logprob: -20.0
    4. ' ' → logprob: -21.625
    5. '   ' → logprob: -22.0
    6. '2' → logprob: -22.125
    7. '(' → logprob: -22.75
    8. '१' → logprob: -23.0
    9. 'y' → logprob: -23.375
    10. '১' → logprob: -23.375

Token 226: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -7.004696090007201e-05
    2. ']]]' → logprob: -10.000069618225098
    3. '])]' → logprob: -11.500069618225098
    4. ']' → logprob: -11.500069618225098
    5. ']]
' → logprob: -13.500069618225098
    6. ']}' → logprob: -14.250069618225098
    7. ']])' → logprob: -14.625069618225098
    8. ']][' → logprob: -14.750069618225098
    9. ')]' → logprob: -15.375069618225098
    10. '```' → logprob: -15.500069618225098

Token 227: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15676768124103546
    2. 'for' → logprob: -2.1567676067352295
    3. ',' → logprob: -4.406767845153809
    4. '   ' → logprob: -4.656767845153809
    5. ']
' → logprob: -5.031767845153809
    6. ' for' → logprob: -7.531767845153809
    7. '       ' → logprob: -8.531767845153809
    8. ']

' → logprob: -8.781767845153809
    9. 'v' → logprob: -9.531767845153809
    10. '           ' → logprob: -10.156767845153809

Token 228: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00784214399755001
    2. 'v' → logprob: -4.882842063903809
    3. 'c' → logprob: -9.507842063903809
    4. 'p' → logprob: -9.632842063903809
    5. 'in' → logprob: -9.757842063903809
    6. ' q' → logprob: -10.882842063903809
    7. '   ' → logprob: -12.257842063903809
    8. 'i' → logprob: -13.132842063903809
    9. 'vq' → logprob: -13.507842063903809
    10. 'points' → logprob: -13.757842063903809

Token 229: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.018219366669654846
    2. ' in' → logprob: -4.893219470977783
    3. 'def' → logprob: -5.518219470977783
    4. '   ' → logprob: -5.643219470977783
    5. '[' → logprob: -6.393219470977783
    6. '_in' → logprob: -7.893219470977783
    7. '=' → logprob: -8.143218994140625
    8. '```' → logprob: -8.643218994140625
    9. '  ' → logprob: -9.643218994140625
    10. '    ' → logprob: -9.643218994140625

Token 230: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1994775377388578e-05
    2. ' candidates' → logprob: -11.500012397766113
    3. 'cand' → logprob: -13.375012397766113
    4. '_candidates' → logprob: -15.125012397766113
    5. '   ' → logprob: -17.500011444091797
    6. 'Candidates' → logprob: -17.750011444091797
    7. 'chain' → logprob: -17.875011444091797
    8. 'candidate' → logprob: -18.375011444091797
    9. ' candidats' → logprob: -19.500011444091797
    10. ' candidatos' → logprob: -20.625011444091797

Token 231: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.37257179617881775
    2. ']
' → logprob: -1.2475718259811401
    3. '   ' → logprob: -3.7475717067718506
    4. ']

' → logprob: -8.62257194519043
    5. '       ' → logprob: -10.62257194519043
    6. ',' → logprob: -10.99757194519043
    7. '].' → logprob: -11.49757194519043
    8. ']
' → logprob: -12.24757194519043
    9. 'if' → logprob: -12.87257194519043
    10. '.]' → logprob: -12.99757194519043

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.128163257315464e-07
    2. '  ' → logprob: -15.625
    3. '       ' → logprob: -16.375
    4. 'def' → logprob: -17.125
    5. 'return' → logprob: -17.5
    6. '    ' → logprob: -18.25
    7. '    
' → logprob: -18.875
    8. ' ' → logprob: -19.25
    9. 'n' → logprob: -19.625
    10. '```' → logprob: -19.875

Token 233: ' cos' (ID: 8974)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00024156268045771867
    2. 'v' → logprob: -8.62524127960205
    3. 'angles' → logprob: -11.00024127960205
    4. 'sorted' → logprob: -11.50024127960205
    5. 'cos' (adapté à ' cos') → logprob: -11.75024127960205
    6. 'return' → logprob: -12.00024127960205
    7. '  ' → logprob: -12.25024127960205
    8. 'n' → logprob: -12.37524127960205
    9. 'norm' → logprob: -12.50024127960205
    10. 'angle' → logprob: -13.00024127960205

Token 234: 'ines' (ID: 2028)
  Prédit: '_angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.0138455331325531
    2. '_' → logprob: -4.513845443725586
    3. '_angles' → logprob: -6.638845443725586
    4. '_ang' → logprob: -8.263845443725586
    5. '_cos' → logprob: -8.388845443725586
    6. '(angle' → logprob: -9.138845443725586
    7. '.angle' → logprob: -9.138845443725586
    8. '<|end|>' → logprob: -9.638845443725586
    9. '<|end|>' → logprob: -9.763845443725586
    10. 'Angle' → logprob: -10.013845443725586

Token 235: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29144421219825745
    2. '   ' → logprob: -1.916444182395935
    3. ' =' → logprob: -2.2914443016052246
    4. '=[]' → logprob: -6.791444301605225
    5. '[]' → logprob: -7.166444301605225
    6. '_' → logprob: -7.416444301605225
    7. '=list' → logprob: -8.291443824768066
    8. '```' → logprob: -8.291443824768066
    9. '.append' → logprob: -8.416443824768066
    10. 'cos' → logprob: -8.666443824768066

Token 236: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03366229683160782
    2. 'st' → logprob: -3.5336623191833496
    3. 'map' → logprob: -5.78366231918335
    4. '[' → logprob: -7.15866231918335
    5. '[list' → logprob: -10.408661842346191
    6. ' list' → logprob: -11.783661842346191
    7. 'cos' → logprob: -12.408661842346191
    8. '   ' → logprob: -12.658661842346191
    9. '(list' → logprob: -14.408661842346191
    10. ' st' → logprob: -14.533661842346191

Token 237: '(st' (ID: 4065)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04023868590593338
    2. '(map' → logprob: -3.915238618850708
    3. '(' → logprob: -4.290238857269287
    4. '(c' → logprob: -5.790238857269287
    5. '```' → logprob: -7.165238857269287
    6. '=' → logprob: -7.290238857269287
    7. '    ' → logprob: -9.415238380432129
    8. '<' → logprob: -9.415238380432129
    9. 'def' → logprob: -9.540238380432129
    10. '.map' → logprob: -9.790238380432129

Token 238: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -0.004221689887344837
    2. '_arm' → logprob: -5.7542219161987305
    3. ' arm' → logprob: -8.25422191619873
    4. 'armat' → logprob: -8.62922191619873
    5. 'ar' → logprob: -9.50422191619873
    6. '   ' → logprob: -9.75422191619873
    7. '.arm' → logprob: -10.00422191619873
    8. 'art' → logprob: -10.12922191619873
    9. 'арм' → logprob: -10.12922191619873
    10. 'aram' → logprob: -10.12922191619873

Token 239: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -1.4974866644479334e-05
    2. 'apped' → logprob: -11.750015258789062
    3. 'ап' → logprob: -13.125015258789062
    4. 'map' → logprob: -13.250015258789062
    5. 'aps' → logprob: -13.500015258789062
    6. 'AP' → logprob: -14.250015258789062
    7. 'app' → logprob: -15.500015258789062
    8. 'ape' → logprob: -15.625015258789062
    9. 'a' → logprob: -15.750015258789062
    10. 'aped' → logprob: -16.000015258789062

Token 240: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.016585109755396843
    2. '(' → logprob: -4.766584873199463
    3. '(c' → logprob: -4.891584873199463
    4. '(func' → logprob: -8.891585350036621
    5. '((' → logprob: -9.891585350036621
    6. '=lambda' → logprob: -10.141585350036621
    7. '(function' → logprob: -11.016585350036621
    8. '(
' → logprob: -11.266585350036621
    9. '(`' → logprob: -11.266585350036621
    10. '(co' → logprob: -11.266585350036621

Token 241: ' v' (ID: 323)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5114312767982483
    2. 'cos' → logprob: -1.0114312171936035
    3. ':' → logprob: -3.7614312171936035
    4. 'a' → logprob: -4.8864312171936035
    5. 'c' → logprob: -5.3864312171936035
    6. 'u' → logprob: -6.7614312171936035
    7. 'v' → logprob: -10.761431694030762
    8. 'q' → logprob: -10.886431694030762
    9. 'f' → logprob: -10.886431694030762
    10. 'angle' → logprob: -11.511431694030762

Token 242: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5808079242706299
    2. ':' → logprob: -0.8308079242706299
    3. '1' → logprob: -5.330807685852051
    4. ',u' → logprob: -12.20580768585205
    5. '_a' → logprob: -12.58080768585205
    6. 'u' → logprob: -13.70580768585205
    7. '_' → logprob: -13.83080768585205
    8. ',_' → logprob: -13.83080768585205
    9. ':u' → logprob: -14.20580768585205
    10. '0' → logprob: -14.70580768585205

Token 243: ' v' (ID: 323)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cos' → logprob: -0.000318065780447796
    2. '   ' → logprob: -8.25031852722168
    3. ' cos' → logprob: -10.00031852722168
    4. '       ' → logprob: -12.00031852722168
    5. '           ' → logprob: -13.12531852722168
    6. '               ' → logprob: -14.25031852722168
    7. '     ' → logprob: -14.37531852722168
    8. '         ' → logprob: -14.75031852722168
    9. '    ' → logprob: -14.87531852722168
    10. '          ' → logprob: -15.00031852722168

Token 244: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6466795206069946
    2. '/' → logprob: -0.8966795206069946
    3. '/v' → logprob: -3.771679401397705
    4. '   ' → logprob: -4.146679401397705
    5. '/n' → logprob: -4.646679401397705
    6. ',' → logprob: -5.146679401397705
    7. '/c' → logprob: -6.271679401397705
    8. '**' → logprob: -6.271679401397705
    9. 'v' → logprob: -6.271679401397705
    10. ' /' → logprob: -6.771679401397705

Token 245: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013867855304852128
    2. '1' → logprob: -6.751386642456055
    3. ':' → logprob: -8.501386642456055
    4. ':],' → logprob: -12.126386642456055
    5. 'v' → logprob: -12.751386642456055
    6. ':]' → logprob: -13.001386642456055
    7. '2' → logprob: -13.876386642456055
    8. ':,' → logprob: -15.126386642456055
    9. '],' → logprob: -15.251386642456055
    10. ']' → logprob: -15.376386642456055

Token 246: ']/' (ID: 18500)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.29180067777633667
    2. '],' → logprob: -1.9168007373809814
    3. ']*' → logprob: -2.6668007373809814
    4. ']/' → logprob: -3.6668007373809814
    5. '][' → logprob: -4.791800498962402
    6. '].' → logprob: -6.166800498962402
    7. '**' → logprob: -8.666800498962402
    8. ']*(' → logprob: -8.666800498962402
    9. ']-' → logprob: -9.291800498962402
    10. ']+' → logprob: -10.541800498962402

Token 247: 'norm' (ID: 30970)
  Prédit: 'norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.00542585039511323
    2. 'v' → logprob: -5.255425930023193
    3. '(norm' → logprob: -9.380425453186035
    4. '(' → logprob: -9.755425453186035
    5. '(v' → logprob: -11.005425453186035
    6. 'n' → logprob: -11.255425453186035
    7. ' norm' → logprob: -11.505425453186035
    8. 'max' → logprob: -12.755425453186035
    9. '.norm' → logprob: -12.880425453186035
    10. 'nor' → logprob: -13.755425453186035

Token 248: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: 0.0
    2. '(c' → logprob: -21.0
    3. '(u' → logprob: -21.25
    4. '(n' → logprob: -22.375
    5. '(q' → logprob: -22.625
    6. '(' → logprob: -22.875
    7. '(p' → logprob: -23.0
    8. '(a' → logprob: -23.375
    9. '(e' → logprob: -23.5
    10. '(b' → logprob: -23.625

Token 249: ')' (ID: 8)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00034273360506631434
    2. ')' → logprob: -8.00034236907959
    3. ')**' → logprob: -12.37534236907959
    4. '[' → logprob: -13.62534236907959
    5. ')*' → logprob: -14.37534236907959
    6. '),
' → logprob: -14.87534236907959
    7. '):' → logprob: -15.00034236907959
    8. '**' → logprob: -15.62534236907959
    9. ').' → logprob: -16.375343322753906
    10. 'if' → logprob: -16.500343322753906

Token 250: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008230268955230713
    2. 'if' → logprob: -4.883230209350586
    3. ' if' → logprob: -7.383230209350586
    4. '   ' → logprob: -14.508230209350586
    5. ',
' → logprob: -14.508230209350586
    6. '**' → logprob: -15.133230209350586
    7. ':' → logprob: -15.508230209350586
    8. ',v' → logprob: -15.508230209350586
    9. '*' → logprob: -16.133230209350586
    10. ' ,' → logprob: -16.258230209350586

Token 251: ' norm' (ID: 7882)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.020066920667886734
    2. 'n' → logprob: -4.270066738128662
    3. 'v' → logprob: -5.145066738128662
    4. 'not' → logprob: -10.27006721496582
    5. 'len' → logprob: -11.27006721496582
    6. ' norm' → logprob: -12.27006721496582
    7. 'normal' → logprob: -13.14506721496582
    8. 'cos' → logprob: -13.39506721496582
    9. 'normalize' → logprob: -14.14506721496582
    10. '_norm' → logprob: -14.77006721496582

Token 252: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: 0.0
    2. '(u' → logprob: -18.625
    3. '(n' → logprob: -20.25
    4. '(a' → logprob: -21.875
    5. '(e' → logprob: -21.875
    6. '(c' → logprob: -22.25
    7. '(b' → logprob: -22.5
    8. '(' → logprob: -22.75
    9. 'v' → logprob: -22.75
    10. '(p' → logprob: -23.125

Token 253: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.370294846012257e-05
    2. ')>' → logprob: -10.625043869018555
    3. ')!=' → logprob: -11.000043869018555
    4. '):' → logprob: -13.375043869018555
    5. ')==' → logprob: -13.875043869018555
    6. ')=' → logprob: -16.750043869018555
    7. '))' → logprob: -17.000043869018555
    8. ')>=' → logprob: -17.125043869018555
    9. 'else' → logprob: -17.500043869018555
    10. ')**' → logprob: -17.625043869018555

Token 254: ' else' (ID: 1203)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.13265791535377502
    2. 'else' → logprob: -2.382658004760742
    3. '!=' → logprob: -3.632658004760742
    4. '==' → logprob: -5.382658004760742
    5. '>=' → logprob: -7.257658004760742
    6. '<' → logprob: -9.132658004760742
    7. '<=' → logprob: -10.132658004760742
    8. ' >' → logprob: -11.257658004760742
    9. ' else' → logprob: -11.382658004760742
    10. 'and' → logprob: -12.632658004760742

Token 255: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8670179997570813e-05
    2. 'v' → logprob: -11.125019073486328
    3. '1' → logprob: -12.500019073486328
    4. ' ' → logprob: -15.500019073486328
    5. 'None' → logprob: -17.875019073486328
    6. 'float' → logprob: -18.750019073486328
    7. '   ' → logprob: -19.250019073486328
    8. 'cos' → logprob: -19.375019073486328
    9. '(v' → logprob: -20.375019073486328
    10. 'zero' → logprob: -20.750019073486328

Token 256: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00040421701851300895
    2. 'v' → logprob: -8.500404357910156
    3. 'float' → logprob: -8.625404357910156
    4. '0' → logprob: -11.000404357910156
    5. 'norm' → logprob: -13.000404357910156
    6. '999' → logprob: -13.875404357910156
    7. '100' → logprob: -14.250404357910156
    8. 'math' → logprob: -15.375404357910156
    9. 'n' → logprob: -15.875404357910156
    10. 'cos' → logprob: -16.500404357910156

Token 257: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010676169040380046
    2. ':' → logprob: -9.375106811523438
    3. '   ' → logprob: -11.375106811523438
    4. '.' → logprob: -12.375106811523438
    5. '0' → logprob: -13.375106811523438
    6. '2' → logprob: -13.750106811523438
    7. ',
' → logprob: -14.125106811523438
    8. ',-' → logprob: -14.625106811523438
    9. '-' → logprob: -14.750106811523438
    10. ',None' → logprob: -15.125106811523438

Token 258: ' direction' (ID: 9262)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.14601175487041473
    2. 'v' → logprob: -2.0210118293762207
    3. 'len' → logprob: -6.521011829376221
    4. 'n' → logprob: -6.771011829376221
    5. 'not' → logprob: -7.521011829376221
    6. 'True' → logprob: -10.146011352539062
    7. 'direction' → logprob: -10.521011352539062
    8. 'cos' → logprob: -11.021011352539062
    9. '   ' → logprob: -11.021011352539062
    10. '  ' → logprob: -11.271011352539062

Token 259: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00018113377154804766
    2. '=="' → logprob: -8.750181198120117
    3. '=='' → logprob: -11.250181198120117
    4. ' ==' → logprob: -12.375181198120117
    5. '!=' → logprob: -12.875181198120117
    6. 'else' → logprob: -13.000181198120117
    7. '==-' → logprob: -15.000181198120117
    8. '==
' → logprob: -16.000181198120117
    9. '   ' → logprob: -16.250181198120117
    10. 'is' → logprob: -18.375181198120117

Token 260: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00020461321400944144
    2. ''r' → logprob: -8.625205039978027
    3. ''' → logprob: -11.500205039978027
    4. '"x' → logprob: -12.500205039978027
    5. '"s' → logprob: -13.625205039978027
    6. '"text' → logprob: -13.625205039978027
    7. '"path' → logprob: -13.875205039978027
    8. '"user' → logprob: -14.000205039978027
    9. '"d' → logprob: -14.000205039978027
    10. ' "' → logprob: -14.250205039978027

Token 261: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4746498167514801
    2. 'l' → logprob: -0.9746497869491577
    3. '"' → logprob: -7.474649906158447
    4. 'c' → logprob: -13.849649429321289
    5. 'u' → logprob: -13.974649429321289
    6. 'L' → logprob: -14.599649429321289
    7. ' r' → logprob: -14.974649429321289
    8. '"L' → logprob: -15.224649429321289
    9. '“' → logprob: -15.349649429321289
    10. 'n' → logprob: -15.349649429321289

Token 262: '"' (ID: 1)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0012486852938309312
    2. ' else' → logprob: -7.626248836517334
    3. '"' → logprob: -8.876248359680176
    4. 'elif' → logprob: -8.876248359680176
    5. ''' → logprob: -9.001248359680176
    6. ':' → logprob: -9.126248359680176
    7. '   ' → logprob: -9.251248359680176
    8. '`' → logprob: -10.376248359680176
    9. '':' → logprob: -10.751248359680176
    10. '":' → logprob: -10.751248359680176

Token 263: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -7.028536492725834e-05
    2. ' else' → logprob: -9.875070571899414
    3. ':' → logprob: -11.125070571899414
    4. 'elif' → logprob: -12.875070571899414
    5. '   ' → logprob: -14.000070571899414
    6. 'otherwise' → logprob: -15.875070571899414
    7. 'or' → logprob: -16.000070571899414
    8. 'and' → logprob: -16.000070571899414
    9. '	else' → logprob: -16.500070571899414
    10. 'return' → logprob: -16.625070571899414

Token 264: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16136397421360016
    2. '2' → logprob: -1.911363959312439
    3. '0' → logprob: -7.4113640785217285
    4. '1' → logprob: -7.5363640785217285
    5. '+' → logprob: -14.66136360168457
    6. ' -' → logprob: -14.91136360168457
    7. 'v' → logprob: -15.28636360168457
    8. 'float' → logprob: -15.53636360168457
    9. ' ' → logprob: -15.66136360168457
    10. '   ' → logprob: -16.53636360168457

Token 265: '2' (ID: 17)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2537226378917694
    2. '2' → logprob: -1.5037226676940918
    3. '1' → logprob: -6.753722667694092
    4. '0' → logprob: -7.378722667694092
    5. '+' → logprob: -15.128722190856934
    6. 'float' → logprob: -15.503722190856934
    7. ' -' → logprob: -15.628722190856934
    8. 'v' → logprob: -16.00372314453125
    9. ' ' → logprob: -16.50372314453125
    10. '3' → logprob: -16.75372314453125

Token 266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4655311405658722
    2. ':' → logprob: -1.0905311107635498
    3. 'else' → logprob: -3.34053111076355
    4. '   ' → logprob: -8.340531349182129
    5. '0' → logprob: -8.840531349182129
    6. ':
' → logprob: -9.215531349182129
    7. ':return' → logprob: -9.590531349182129
    8. ' else' → logprob: -10.090531349182129
    9. ':,' → logprob: -10.590531349182129
    10. 'elif' → logprob: -10.840531349182129

Token 267: ' zip' (ID: 16216)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.5048530030981055e-06
    2. ' v' → logprob: -14.250001907348633
    3. 'cos' → logprob: -14.250001907348633
    4. '   ' → logprob: -16.875001907348633
    5. '  ' → logprob: -17.500001907348633
    6. '[v' → logprob: -17.875001907348633
    7. 'norm' → logprob: -18.000001907348633
    8. '	v' → logprob: -18.250001907348633
    9. '*v' → logprob: -18.250001907348633
    10. '    ' → logprob: -18.500001907348633

Token 268: '(v' (ID: 6932)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.576592206954956
    2. '(v' → logprob: -0.826592206954956
    3. '(' → logprob: -8.076592445373535
    4. '(*' → logprob: -9.326592445373535
    5. '(re' → logprob: -9.701592445373535
    6. '(zip' → logprob: -10.576592445373535
    7. '(points' → logprob: -10.701592445373535
    8. '(q' → logprob: -10.701592445373535
    9. '((' → logprob: -11.076592445373535
    10. '(a' → logprob: -11.201592445373535

Token 269: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -4.370294846012257e-05
    2. '[' → logprob: -10.125043869018555
    3. ',' → logprob: -13.250043869018555
    4. '))' → logprob: -14.000043869018555
    5. 'base' → logprob: -14.875043869018555
    6. '_list' → logprob: -15.750043869018555
    7. ' list' → logprob: -16.000043869018555
    8. 'lists' → logprob: -16.500043869018555
    9. '[list' → logprob: -16.625043869018555
    10. 'lista' → logprob: -16.750043869018555

Token 270: ')))
' (ID: 12562)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06571654975414276
    2. '[' → logprob: -3.315716505050659
    3. ')):' → logprob: -4.065716743469238
    4. '))' → logprob: -5.690716743469238
    5. '):' → logprob: -6.315716743469238
    6. ')):
' → logprob: -6.440716743469238
    7. '),' → logprob: -6.690716743469238
    8. '   ' → logprob: -7.940716743469238
    9. '[i' → logprob: -8.065716743469238
    10. '[:-' → logprob: -8.190716743469238

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00213657901622355
    2. ')' → logprob: -6.627136707305908
    3. 'return' → logprob: -7.752136707305908
    4. 'def' → logprob: -9.00213623046875
    5. 'cos' → logprob: -9.00213623046875
    6. '       ' → logprob: -10.50213623046875
    7. ',' → logprob: -10.87713623046875
    8. '```' → logprob: -11.00213623046875
    9. '  ' → logprob: -11.25213623046875
    10. 'v' → logprob: -11.37713623046875

Token 272: ' composite' (ID: 40773)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11858154833316803
    2. 'cos' → logprob: -2.493581533432007
    3. 'return' → logprob: -3.618581533432007
    4. 'sorted' → logprob: -6.993581771850586
    5. 'c' → logprob: -7.118581771850586
    6. 'v' → logprob: -8.493581771850586
    7. 'max' → logprob: -9.118581771850586
    8. 'if' → logprob: -9.618581771850586
    9. 'min' → logprob: -9.743581771850586
    10. '  ' → logprob: -9.993581771850586

Token 273: ' =' (ID: 314)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -0.7216882109642029
    2. '=' → logprob: -1.4716882705688477
    3. '   ' → logprob: -1.9716882705688477
    4. '_cos' → logprob: -2.9716882705688477
    5. '=list' → logprob: -4.096688270568848
    6. ' =' → logprob: -4.221688270568848
    7. '=[]' → logprob: -4.721688270568848
    8. 'list' → logprob: -5.221688270568848
    9. 'sum' → logprob: -5.346688270568848
    10. '_sum' → logprob: -5.346688270568848

Token 274: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.48521876335144043
    2. 'chain' → logprob: -1.3602187633514404
    3. 'reduce' → logprob: -2.7352187633514404
    4. 'sum' → logprob: -2.8602187633514404
    5. '   ' → logprob: -6.3602190017700195
    6. '[' → logprob: -6.4852190017700195
    7. 'cos' → logprob: -7.1102190017700195
    8. 'max' → logprob: -7.6102190017700195
    9. 'zip' → logprob: -7.7352190017700195
    10. '[list' → logprob: -8.73521900177002

Token 275: '(zip' (ID: 87520)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5761632323265076
    2. '   ' → logprob: -2.2011632919311523
    3. '```' → logprob: -2.3261632919311523
    4. '=' → logprob: -2.5761632919311523
    5. '[' → logprob: -3.0761632919311523
    6. '[:]' → logprob: -3.2011632919311523
    7. '`' → logprob: -4.201163291931152
    8. '(`' → logprob: -4.701163291931152
    9. '``' → logprob: -5.201163291931152
    10. '(c' → logprob: -5.326163291931152

Token 276: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.39349421858787537
    2. '(com' → logprob: -1.3934942483901978
    3. '(' → logprob: -2.893494129180908
    4. '   ' → logprob: -4.893494129180908
    5. '((' → logprob: -5.018494129180908
    6. '(*' → logprob: -5.768494129180908
    7. '(v' → logprob: -6.643494129180908
    8. '(co' → logprob: -7.018494129180908
    9. '(`' → logprob: -8.143494606018066
    10. '(**' → logprob: -8.268494606018066

Token 277: 'andidates' (ID: 38168)
  Prédit: 'andidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -0.35422012209892273
    2. 'os' → logprob: -1.2292201519012451
    3. 'andidate' → logprob: -5.854219913482666
    4. 'om' → logprob: -6.479219913482666
    5. 'and' → logprob: -6.979219913482666
    6. 'omp' → logprob: -8.854220390319824
    7. 'andid' → logprob: -9.229220390319824
    8. 'ос' → logprob: -10.229220390319824
    9. 'o' → logprob: -10.604220390319824
    10. 'andi' → logprob: -10.854220390319824

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.339278580620885e-06
    2. '   ' → logprob: -13.750001907348633
    3. ',c' → logprob: -14.875001907348633
    4. '[' → logprob: -15.375001907348633
    5. ' ,' → logprob: -15.750001907348633
    6. '，' → logprob: -16.375001907348633
    7. '`,' → logprob: -16.625001907348633
    8. '),' → logprob: -16.875001907348633
    9. '[],' → logprob: -16.875001907348633
    10. ',,' → logprob: -17.000001907348633

Token 279: ' cos' (ID: 8974)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -3.054500666621607e-06
    2. ' cos' → logprob: -12.87500286102295
    3. 'com' → logprob: -15.50000286102295
    4. 'co' → logprob: -16.500003814697266
    5. '*cos' → logprob: -16.625003814697266
    6. '.cos' → logprob: -17.500003814697266
    7. 'cas' → logprob: -17.750003814697266
    8. 'cou' → logprob: -18.500003814697266
    9. '_cos' → logprob: -18.500003814697266
    10. 'cons' → logprob: -19.000003814697266

Token 280: 'ines' (ID: 2028)
  Prédit: 'ines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ines' → logprob: -0.04114048555493355
    2. 'ine' → logprob: -3.416140556335449
    3. 'inees' → logprob: -6.416140556335449
    4. '[i' → logprob: -6.791140556335449
    5. 'INES' → logprob: -7.291140556335449
    6. 'i' → logprob: -7.416140556335449
    7. '[' → logprob: -7.666140556335449
    8. '(i' → logprob: -7.666140556335449
    9. '(' → logprob: -8.41614055633545
    10. '**' → logprob: -8.66614055633545

Token 281: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.13429144024848938
    2. '))
' → logprob: -2.509291410446167
    3. '   ' → logprob: -3.134291410446167
    4. '))

' → logprob: -7.634291648864746
    5. ',' → logprob: -9.259291648864746
    6. ')' → logprob: -9.634291648864746
    7. '))
' → logprob: -10.509291648864746
    8. ',))
' → logprob: -10.634291648864746
    9. '[' → logprob: -10.884291648864746
    10. '[:-' → logprob: -11.384291648864746

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.2842308680992573e-05
    2. 'com' → logprob: -10.750022888183594
    3. '  ' → logprob: -14.750022888183594
    4. 'def' → logprob: -15.000022888183594
    5. 'c' → logprob: -15.375022888183594
    6. '    ' → logprob: -16.500022888183594
    7. '```' → logprob: -16.500022888183594
    8. '       ' → logprob: -16.625022888183594
    9. 'sorted' → logprob: -16.875022888183594
    10. ' composite' → logprob: -17.125022888183594

Token 283: ' reducer' (ID: 64878)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023517875000834465
    2. 'com' → logprob: -3.7735178470611572
    3. 'sorted' → logprob: -8.273517608642578
    4. '  ' → logprob: -11.523517608642578
    5. 'sort' → logprob: -12.648517608642578
    6. ' composite' → logprob: -13.148517608642578
    7. '    ' → logprob: -14.523517608642578
    8. ' ' → logprob: -15.148517608642578
    9. 'c' → logprob: -15.273517608642578
    10. 'return' → logprob: -15.398517608642578

Token 284: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06353844702243805
    2. ' =' → logprob: -2.8135385513305664
    3. '=lambda' → logprob: -7.313538551330566
    4. '   ' → logprob: -8.063538551330566
    5. '=list' → logprob: -8.188538551330566
    6. 'def' → logprob: -9.063538551330566
    7. '=max' → logprob: -10.438538551330566
    8. '=`' → logprob: -10.938538551330566
    9. '```' → logprob: -10.938538551330566
    10. '=com' → logprob: -11.063538551330566

Token 285: ' (' (ID: 350)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.00042447797022759914
    2. 'lambda' → logprob: -7.875424385070801
    3. 'chain' → logprob: -10.5004243850708
    4. ' reduce' → logprob: -11.8754243850708
    5. 'max' → logprob: -13.0004243850708
    6. 'st' → logprob: -13.2504243850708
    7. 'sorted' → logprob: -13.7504243850708
    8. 'sort' → logprob: -13.8754243850708
    9. 'partial' → logprob: -14.6254243850708
    10. 're' → logprob: -14.8754243850708

Token 286: 'lambda' (ID: 35280)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.00874150451272726
    2. 'lambda' → logprob: -4.75874137878418
    3. 'chain' → logprob: -9.88374137878418
    4. 'sorted' → logprob: -9.88374137878418
    5. 'sort' → logprob: -12.13374137878418
    6. 're' → logprob: -12.25874137878418
    7. 'key' → logprob: -13.13374137878418
    8. 'max' → logprob: -13.38374137878418
    9. ' reduce' → logprob: -13.38374137878418
    10. 'repeat' → logprob: -13.75874137878418

Token 287: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05464155599474907
    2. 'reduce' → logprob: -3.9296414852142334
    3. 'c' → logprob: -4.0546417236328125
    4. 'f' → logprob: -5.8046417236328125
    5. 'com' → logprob: -5.8046417236328125
    6. 're' → logprob: -5.8046417236328125
    7. 'a' → logprob: -5.8046417236328125
    8. 'r' → logprob: -6.6796417236328125
    9. ':' → logprob: -6.9296417236328125
    10. 'v' → logprob: -7.3046417236328125

Token 288: ',b' (ID: 17568)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003894257126376033
    2. ',' → logprob: -5.628894329071045
    3. 'x' → logprob: -10.128893852233887
    4. 'nd' → logprob: -10.128893852233887
    5. 'def' → logprob: -10.253893852233887
    6. '=' → logprob: -10.628893852233887
    7. 'n' → logprob: -10.753893852233887
    8. ':return' → logprob: -11.253893852233887
    9. ':a' → logprob: -11.253893852233887
    10. 'a' → logprob: -11.503893852233887

Token 289: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00041243841405957937
    2. ':a' → logprob: -7.875412464141846
    3. ':return' → logprob: -11.375411987304688
    4. '):' → logprob: -11.875411987304688
    5. '   ' → logprob: -12.125411987304688
    6. 'a' → logprob: -13.125411987304688
    7. ' :' → logprob: -13.375411987304688
    8. ',' → logprob: -14.125411987304688
    9. '=' → logprob: -14.500411987304688
    10. ':x' → logprob: -14.750411987304688

Token 290: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005606057588011026
    2. 'b' → logprob: -5.630606174468994
    3. 'reduce' → logprob: -6.630606174468994
    4. '(a' → logprob: -7.755606174468994
    5. 'max' → logprob: -8.755605697631836
    6. 'cos' → logprob: -10.005605697631836
    7. ' a' → logprob: -11.505605697631836
    8. '(' → logprob: -11.755605697631836
    9. '(b' → logprob: -11.880605697631836
    10. 'sum' → logprob: -11.880605697631836

Token 291: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1269814521074295
    2. ' if' → logprob: -2.126981496810913
    3. '+' → logprob: -11.251981735229492
    4. '+b' → logprob: -11.251981735229492
    5. '[' → logprob: -11.626981735229492
    6. '如果' → logprob: -12.251981735229492
    7. '*' → logprob: -12.876981735229492
    8. '	if' → logprob: -13.126981735229492
    9. ' +' → logprob: -13.126981735229492
    10. '**' → logprob: -13.626981735229492

Token 292: ' cmp' (ID: 57822)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04726323485374451
    2. 'cos' → logprob: -3.6722631454467773
    3. 'b' → logprob: -3.9222631454467773
    4. '(a' → logprob: -7.922263145446777
    5. 'norm' → logprob: -8.547263145446777
    6. 'not' → logprob: -9.172263145446777
    7. 'cmp' → logprob: -9.672263145446777
    8. '   ' → logprob: -9.672263145446777
    9. ' a' → logprob: -10.172263145446777
    10. 'reduce' → logprob: -10.297263145446777

Token 293: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -4.8351892473874614e-05
    2. '_a' → logprob: -11.625048637390137
    3. '_oper' → logprob: -11.625048637390137
    4. '_ops' → logprob: -12.000048637390137
    5. '_operator' → logprob: -12.500048637390137
    6. '_OP' → logprob: -12.625048637390137
    7. '_b' → logprob: -12.875048637390137
    8. '_' → logprob: -12.875048637390137
    9. '_o' → logprob: -13.500048637390137
    10. '_operation' → logprob: -13.875048637390137

Token 294: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6896511912345886
    2. '(b' → logprob: -1.1896512508392334
    3. 'a' → logprob: -1.6896512508392334
    4. 'b' → logprob: -4.689651012420654
    5. 'else' → logprob: -9.064651489257812
    6. '==' → logprob: -11.189651489257812
    7. '(' → logprob: -12.439651489257812
    8. '<a' → logprob: -12.814651489257812
    9. '>' → logprob: -13.064651489257812
    10. '<=' → logprob: -13.314651489257812

Token 295: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2575719654560089
    2. ',b' → logprob: -1.5075719356536865
    3. '[' → logprob: -5.507572174072266
    4. '>' → logprob: -7.007572174072266
    5. '>b' → logprob: -7.882572174072266
    6. '<b' → logprob: -8.882572174072266
    7. ',<' → logprob: -10.132572174072266
    8. ',a' → logprob: -10.507572174072266
    9. '<' → logprob: -10.882572174072266
    10. '>=' → logprob: -11.257572174072266

Token 296: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2519305646419525
    2. '0' → logprob: -1.501930594444275
    3. '2' → logprob: -13.501930236816406
    4. '3' → logprob: -17.751930236816406
    5. 'cos' → logprob: -19.001930236816406
    6. '<' → logprob: -19.251930236816406
    7. ' ' → logprob: -19.626930236816406
    8. '4' → logprob: -20.126930236816406
    9. '   ' → logprob: -20.751930236816406
    10. '5' → logprob: -21.376930236816406

Token 297: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011101466603577137
    2. ']>' → logprob: -4.511101245880127
    3. ']>=' → logprob: -10.261101722717285
    4. ']<' → logprob: -11.136101722717285
    5. '])' → logprob: -13.136101722717285
    6. ']<=' → logprob: -13.886101722717285
    7. '>' → logprob: -14.886101722717285
    8. '].' → logprob: -15.136101722717285
    9. ']==' → logprob: -15.261101722717285
    10. '][' → logprob: -15.511101722717285

Token 298: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: 0.0
    2. ' b' → logprob: -20.25
    3. '   ' → logprob: -23.875
    4. '           ' → logprob: -25.5
    5. '       ' → logprob: -25.75
    6. '	b' → logprob: -25.875
    7. '(b' → logprob: -25.875
    8. '               ' → logprob: -26.75
    9. 'б' → logprob: -27.375
    10. 'c' → logprob: -27.5

Token 299: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. ')[' → logprob: -18.25
    3. '\[' → logprob: -19.375
    4. '   ' → logprob: -20.625
    5. '```' → logprob: -20.625
    6. ' [' → logprob: -21.0
    7. '()[' → logprob: -21.0
    8. '_[' → logprob: -21.625
    9. '<' → logprob: -22.0
    10. '[i' → logprob: -22.375

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '１' → logprob: -17.375
    3. '१' → logprob: -17.625
    4. '   ' → logprob: -17.875
    5. '১' → logprob: -18.25
    6. '`' → logprob: -18.625
    7. ' ' → logprob: -18.625
    8. '```' → logprob: -19.25
    9. '۱' → logprob: -19.5
    10. '١' → logprob: -20.125

Token 301: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0012541614705696702
    2. ')' → logprob: -6.751254081726074
    3. '})' → logprob: -9.751254081726074
    4. ']' → logprob: -11.501254081726074
    5. '>)' → logprob: -12.376254081726074
    6. '`)' → logprob: -12.501254081726074
    7. ''])' → logprob: -13.251254081726074
    8. '))' → logprob: -13.501254081726074
    9. ')])' → logprob: -13.626254081726074
    10. '```' → logprob: -13.626254081726074

Token 302: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00030424181022681296
    2. ' else' → logprob: -8.125304222106934
    3. 'a' → logprob: -12.125304222106934
    4. '>=' → logprob: -14.125304222106934
    5. 'elif' → logprob: -14.250304222106934
    6. '>' → logprob: -14.500304222106934
    7. 'otherwise' → logprob: -14.875304222106934
    8. '   ' → logprob: -15.875304222106934
    9. '	else' → logprob: -15.875304222106934
    10. 'or' → logprob: -16.37530517578125

Token 303: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: 0.0
    2. ' b' → logprob: -18.625
    3. '(b' → logprob: -23.5
    4. '   ' → logprob: -24.5
    5. '	b' → logprob: -24.625
    6. 'б' → logprob: -25.5
    7. '           ' → logprob: -25.5
    8. ' б' → logprob: -25.5
    9. '               ' → logprob: -26.125
    10. 'c' → logprob: -26.5

Token 304: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014764610677957535
    2. '   ' → logprob: -4.264764785766602
    3. ')
' → logprob: -7.889764785766602
    4. '       ' → logprob: -9.139764785766602
    5. '[' → logprob: -10.139764785766602
    6. ')

' → logprob: -10.889764785766602
    7. ' )' → logprob: -11.264764785766602
    8. '```' → logprob: -11.389764785766602
    9. ')a' → logprob: -11.889764785766602
    10. '           ' → logprob: -11.889764785766602

Token 305: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.896309739408025e-07
    2. '  ' → logprob: -14.750000953674316
    3. '       ' → logprob: -15.875000953674316
    4. '    ' → logprob: -16.5
    5. 'return' → logprob: -17.25
    6. '```' → logprob: -17.75
    7. '    
' → logprob: -17.875
    8. 'def' → logprob: -18.375
    9. ' ' → logprob: -18.375
    10. 'com' → logprob: -18.5

Token 306: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012582997791469097
    2. 'return' (adapté à ' return') → logprob: -4.512582778930664
    3. 'reduce' → logprob: -7.012582778930664
    4. 'com' → logprob: -7.762582778930664
    5. 'max' → logprob: -8.887582778930664
    6. 're' → logprob: -10.137582778930664
    7. '  ' → logprob: -11.512582778930664
    8. 'result' → logprob: -12.262582778930664
    9. 'sorted' → logprob: -12.387582778930664
    10. 'c' → logprob: -13.262582778930664

Token 307: ' reduce' (ID: 10389)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.16035836935043335
    2. 'reduce' → logprob: -1.9103584289550781
    3. 'redu' → logprob: -10.035358428955078
    4. '   ' → logprob: -10.660358428955078
    5. 'max' → logprob: -10.785358428955078
    6. 'list' → logprob: -11.535358428955078
    7. ' reducer' → logprob: -11.785358428955078
    8. 'red' → logprob: -11.910358428955078
    9. '(re' → logprob: -12.285358428955078
    10. 'com' → logprob: -12.410358428955078

Token 308: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.3325425088405609
    2. '(com' → logprob: -1.4575425386428833
    3. '(' → logprob: -3.4575424194335938
    4. '(lambda' → logprob: -4.207542419433594
    5. '(c' → logprob: -6.582542419433594
    6. '(`' → logprob: -7.207542419433594
    7. '(r' → logprob: -8.082542419433594
    8. '(...)' → logprob: -8.707542419433594
    9. '(de' → logprob: -9.332542419433594
    10. '(a' → logprob: -9.457542419433594

Token 309: 'ducer' (ID: 47743)
  Prédit: 'ducer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ducer' → logprob: -0.011988811194896698
    2. 'eder' → logprob: -5.386988639831543
    3. 'e' → logprob: -6.136988639831543
    4. 'eturn' → logprob: -6.261988639831543
    5. 'educ' → logprob: -7.136988639831543
    6. 'ed' → logprob: -7.136988639831543
    7. 'edict' → logprob: -9.136988639831543
    8. 'eter' → logprob: -9.136988639831543
    9. 'uc' → logprob: -9.261988639831543
    10. 'ductor' → logprob: -9.261988639831543

Token 310: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002953015500679612
    2. '   ' → logprob: -8.250295639038086
    3. ' composite' → logprob: -11.625295639038086
    4. 'com' → logprob: -12.125295639038086
    5. ')(' → logprob: -12.250295639038086
    6. ')' → logprob: -12.375295639038086
    7. '(com' → logprob: -13.000295639038086
    8. '```' → logprob: -13.125295639038086
    9. ',c' → logprob: -13.500295639038086
    10. '),' → logprob: -13.750295639038086

Token 311: ' composite' (ID: 40773)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -2.2007883671903983e-05
    2. 'lambda' → logprob: -11.375021934509277
    3. ' composite' → logprob: -11.500021934509277
    4. '(com' → logprob: -16.000022888183594
    5. '   ' → logprob: -16.500022888183594
    6. '=com' → logprob: -16.625022888183594
    7. 'c' → logprob: -17.250022888183594
    8. '	com' → logprob: -17.250022888183594
    9. '<com' → logprob: -17.250022888183594
    10. 'composition' → logprob: -17.750022888183594

Token 312: ')[' (ID: 13637)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024500500410795212
    2. ')[' → logprob: -4.149500370025635
    3. '[' → logprob: -5.274500370025635
    4. '   ' → logprob: -6.024500370025635
    5. '))' → logprob: -7.774500370025635
    6. ')}' → logprob: -9.024500846862793
    7. ')`' → logprob: -9.274500846862793
    8. ',' → logprob: -9.399500846862793
    9. ')**' → logprob: -9.899500846862793
    10. '```' → logprob: -10.524500846862793

Token 313: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '1' → logprob: -17.875
    3. ' ' → logprob: -22.125
    4. '０' → logprob: -22.875
    5. '۰' → logprob: -25.125
    6. '2' → logprob: -25.5
    7. '०' → logprob: -26.125
    8. '০' → logprob: -26.125
    9. '00' → logprob: -26.25
    10. '   ' → logprob: -27.125

Token 314: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00918006245046854
    2. '   ' → logprob: -5.259180068969727
    3. ']' → logprob: -6.509180068969727
    4. '})' → logprob: -6.884180068969727
    5. '])' → logprob: -7.009180068969727
    6. '`)' → logprob: -8.259180068969727
    7. '```' → logprob: -9.509180068969727
    8. '）' → logprob: -9.634180068969727
    9. '}' → logprob: -10.134180068969727
    10. '')' → logprob: -10.759180068969727

Token 315: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.362993985414505
    2. '```' → logprob: -1.2379939556121826
    3. 'def' → logprob: -4.987994194030762
    4. '`' → logprob: -5.612994194030762
    5. 'return' → logprob: -6.612994194030762
    6. '}' → logprob: -7.362994194030762
    7. '}`' → logprob: -7.487994194030762
    8. '       ' → logprob: -7.737994194030762
    9. '``' → logprob: -7.737994194030762
    10. 'c' → logprob: -9.362994194030762

Token 316: ' composite' (ID: 40773)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.2219867706298828
    2. 'cos' → logprob: -2.721986770629883
    3. 'len' → logprob: -3.096986770629883
    4. 'idx' → logprob: -3.596986770629883
    5. 'norm' → logprob: -3.596986770629883
    6. 'cmp' → logprob: -4.221986770629883
    7. 'c' → logprob: -4.221986770629883
    8. 'not' → logprob: -5.971986770629883
    9. '(com' → logprob: -8.221986770629883
    10. 'points' → logprob: -8.846986770629883

Token 317: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00258196284994483
    2. ' else' → logprob: -6.00258207321167
    3. 'return' → logprob: -10.252581596374512
    4. 'elif' → logprob: -10.752581596374512
    5. 'is' → logprob: -11.502581596374512
    6. 'and' → logprob: -11.877581596374512
    7. '   ' → logprob: -12.002581596374512
    8. '!=' → logprob: -12.002581596374512
    9. ':' → logprob: -12.752581596374512
    10. '==' → logprob: -13.002581596374512

Token 318: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -5.157039049663581e-05
    2. ' None' → logprob: -9.875051498413086
    3. '_none' → logprob: -17.375051498413086
    4. 'null' → logprob: -17.500051498413086
    5. '_None' → logprob: -17.875051498413086
    6. 'none' → logprob: -18.000051498413086
    7. '(None' → logprob: -18.125051498413086
    8. '.None' → logprob: -18.875051498413086
    9. '=None' → logprob: -20.125051498413086
    10. 'Nothing' → logprob: -20.500051498413086

Token 319: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.24797309935092926
    2. '   ' → logprob: -1.622973084449768
    3. '`' → logprob: -4.6229729652404785
    4. 'return' → logprob: -5.4979729652404785
    5. 'def' → logprob: -6.1229729652404785
    6. '}`' → logprob: -6.3729729652404785
    7. '}' → logprob: -6.7479729652404785
    8. '``' → logprob: -6.8729729652404785
    9. '<|end|>' → logprob: -7.1229729652404785
    10. 'None' → logprob: -7.9979729652404785

Token 320: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17817561328411102
    2. 'return' → logprob: -2.803175687789917
    3. 'def' → logprob: -3.053175687789917
    4. '```' → logprob: -3.053175687789917
    5. 'cos' → logprob: -6.178175449371338
    6. '`' → logprob: -6.178175449371338
    7. 'None' → logprob: -7.178175449371338
    8. 'c' → logprob: -7.303175449371338
    9. '       ' → logprob: -7.803175449371338
    10. 'if' → logprob: -7.928175449371338

Token 321: ' hull' (ID: 74912)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.014000488445162773
    2. 'norm' → logprob: -4.514000415802002
    3. 'cos' → logprob: -6.264000415802002
    4. 'unit' → logprob: -7.139000415802002
    5. 'normalize' → logprob: -9.63900089263916
    6. 'get' → logprob: -10.51400089263916
    7. 'point' → logprob: -11.01400089263916
    8. 'normal' → logprob: -11.13900089263916
    9. 'closest' → logprob: -11.13900089263916
    10. 'find' → logprob: -11.51400089263916

Token 322: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.08495303243398666
    2. '(' → logprob: -2.8349530696868896
    3. '(p' → logprob: -4.4599528312683105
    4. '():' → logprob: -6.0849528312683105
    5. '_points' → logprob: -6.0849528312683105
    6. '()' → logprob: -6.5849528312683105
    7. '(...' → logprob: -7.2099528312683105
    8. '(...)' → logprob: -7.4599528312683105
    9. '(_' → logprob: -7.5849528312683105
    10. '(point' → logprob: -7.5849528312683105

Token 323: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05785432085394859
    2. ':' → logprob: -3.932854413986206
    3. '):
' → logprob: -4.057854175567627
    4. ',' → logprob: -4.057854175567627
    5. '   ' → logprob: -6.432854175567627
    6. 'def' → logprob: -9.057854652404785
    7. '):

' → logprob: -9.182854652404785
    8. ''):' → logprob: -9.932854652404785
    9. '[]):' → logprob: -10.057854652404785
    10. ':def' → logprob: -10.557854652404785

Token 324: ' direction' (ID: 9262)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12007731944322586
    2. '):' → logprob: -2.87007737159729
    3. '   ' → logprob: -3.37007737159729
    4. 'h' → logprob: -4.995077133178711
    5. '):
' → logprob: -5.370077133178711
    6. 'direction' → logprob: -6.370077133178711
    7. 'points' → logprob: -6.495077133178711
    8. 'v' → logprob: -6.995077133178711
    9. 'cmp' → logprob: -7.370077133178711
    10. 'c' → logprob: -7.370077133178711

Token 325: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09112442284822464
    2. '):
' → logprob: -2.5911245346069336
    3. ',' → logprob: -4.591124534606934
    4. '   ' → logprob: -6.966124534606934
    5. ')' → logprob: -7.841124534606934
    6. '):

' → logprob: -8.091124534606934
    7. '"):' → logprob: -8.216124534606934
    8. '):
' → logprob: -10.216124534606934
    9. '":' → logprob: -10.591124534606934
    10. ''):' → logprob: -11.716124534606934

Token 326: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2233183042553719e-05
    2. '```' → logprob: -12.375012397766113
    3. 'pass' → logprob: -12.625012397766113
    4. '  ' → logprob: -12.750012397766113
    5. 'return' → logprob: -13.875012397766113
    6. '    ' → logprob: -14.875012397766113
    7. ' ' → logprob: -15.500012397766113
    8. 'def' → logprob: -15.875012397766113
    9. '       ' → logprob: -16.250011444091797
    10. '    
' → logprob: -17.875011444091797

Token 327: ' import' (ID: 1588)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6274585127830505
    2. 'return' → logprob: -0.8774585127830505
    3. 'pass' → logprob: -3.0024585723876953
    4. 'def' → logprob: -8.002458572387695
    5. 'if' → logprob: -9.002458572387695
    6. '#' → logprob: -11.127458572387695
    7. 'points' → logprob: -11.252458572387695
    8. 'c' → logprob: -11.377458572387695
    9. '  ' → logprob: -11.627458572387695
    10. ' ' → logprob: -12.252458572387695

Token 328: ' operator' (ID: 11019)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.5473634600639343
    2. 'numpy' → logprob: -1.422363519668579
    3. 'random' → logprob: -2.672363519668579
    4. 'sys' → logprob: -2.672363519668579
    5. 'copy' → logprob: -4.29736328125
    6. 'mat' → logprob: -5.42236328125
    7. 'collections' → logprob: -5.54736328125
    8. 'h' → logprob: -5.54736328125
    9. 'heap' → logprob: -6.17236328125
    10. 'cmath' → logprob: -6.79736328125

Token 329: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021759546361863613
    2. 'def' → logprob: -6.752175807952881
    3. 'import' → logprob: -8.002176284790039
    4. 'operator' → logprob: -8.127176284790039
    5. '    ' → logprob: -9.752176284790039
    6. 'as' → logprob: -9.752176284790039
    7. '    
' → logprob: -9.877176284790039
    8. '  ' → logprob: -9.877176284790039
    9. '```' → logprob: -10.127176284790039
    10. '#' → logprob: -11.502176284790039

Token 330: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0034979116171598434
    2. 'opr' → logprob: -6.628498077392578
    3. 'ops' → logprob: -7.128498077392578
    4. 'opt' → logprob: -7.378498077392578
    5. 'oper' → logprob: -8.753498077392578
    6. 'opp' → logprob: -8.753498077392578
    7. 'operator' → logprob: -8.878498077392578
    8. 'ope' → logprob: -9.253498077392578
    9. 'opf' → logprob: -9.878498077392578
    10. 'o' → logprob: -10.628498077392578

Token 331: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006428572814911604
    2. 'def' → logprob: -7.500642776489258
    3. '```' → logprob: -10.250642776489258
    4. '  ' → logprob: -11.000642776489258
    5. '    ' → logprob: -11.250642776489258
    6. '<|end|>' → logprob: -11.625642776489258
    7. '    
' → logprob: -12.125642776489258
    8. '       ' → logprob: -12.875642776489258
    9. 'n' → logprob: -13.375642776489258
    10. ' ' → logprob: -13.625642776489258

Token 332: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2352385965641588e-05
    2. '```' → logprob: -11.875012397766113
    3. 'def' → logprob: -12.750012397766113
    4. '  ' → logprob: -14.000012397766113
    5. '       ' → logprob: -14.125012397766113
    6. 'return' → logprob: -14.750012397766113
    7. '    ' → logprob: -15.125012397766113
    8. '    
' → logprob: -15.750012397766113
    9. '``' → logprob: -16.500011444091797
    10. '     ' → logprob: -16.875011444091797

Token 333: ' cmp' (ID: 57822)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.5649528298527e-05
    2. 'return' → logprob: -9.750075340270996
    3. 'def' → logprob: -11.375075340270996
    4. '       ' → logprob: -13.000075340270996
    5. '  ' → logprob: -13.500075340270996
    6. 'h' → logprob: -14.250075340270996
    7. '```' → logprob: -14.375075340270996
    8. 'n' → logprob: -15.375075340270996
    9. '    ' → logprob: -15.625075340270996
    10. '    
' → logprob: -16.000076293945312

Token 334: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -5.574251918005757e-05
    2. '   ' → logprob: -11.250055313110352
    3. '=' → logprob: -11.875055313110352
    4. ' =' → logprob: -12.000055313110352
    5. '-op' → logprob: -12.625055313110352
    6. '_operator' → logprob: -12.750055313110352
    7. '	op' → logprob: -12.750055313110352
    8. '_fn' → logprob: -12.875055313110352
    9. '_func' → logprob: -13.375055313110352
    10. '_OP' → logprob: -13.375055313110352

Token 335: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.228561349213123e-05
    2. ' =' → logprob: -9.875052452087402
    3. '   ' → logprob: -14.500052452087402
    4. '=lambda' → logprob: -15.750052452087402
    5. 'op' → logprob: -17.500051498413086
    6. ' ' → logprob: -18.000051498413086
    7. '==' → logprob: -18.250051498413086
    8. '=np' → logprob: -18.375051498413086
    9. '  ' → logprob: -18.625051498413086
    10. '=`' → logprob: -18.625051498413086

Token 336: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.2664456789934775e-06
    2. 'get' → logprob: -14.125000953674316
    3. ' op' → logprob: -15.000000953674316
    4. '{"' → logprob: -16.000001907348633
    5. '(op' → logprob: -18.500001907348633
    6. 'lambda' → logprob: -18.625001907348633
    7. 'ops' → logprob: -18.875001907348633
    8. '_op' → logprob: -19.125001907348633
    9. '	op' → logprob: -19.125001907348633
    10. '{'' → logprob: -19.250001907348633

Token 337: '.ge' (ID: 24062)
  Prédit: '.lt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lt' → logprob: -0.3760230243206024
    2. '.gt' → logprob: -1.6260230541229248
    3. '.le' → logprob: -2.626023054122925
    4. '.ge' → logprob: -3.126023054122925
    5. '.eq' → logprob: -7.876022815704346
    6. 'lt' → logprob: -11.001023292541504
    7. '.l' → logprob: -11.251023292541504
    8. '.item' → logprob: -11.751023292541504
    9. '.less' → logprob: -12.001023292541504
    10. '.mul' → logprob: -12.126023292541504

Token 338: ' if' (ID: 538)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.2861742973327637
    2. 'lt' → logprob: -1.9111742973327637
    3. 'nt' → logprob: -2.1611742973327637
    4. 'def' → logprob: -2.2861742973327637
    5. 'lambda' → logprob: -2.7861742973327637
    6. 'x' → logprob: -3.2861742973327637
    7. 'operator' → logprob: -3.4111742973327637
    8. 'n' → logprob: -3.5361742973327637
    9. 'q' → logprob: -3.6611742973327637
    10. 'op' → logprob: -3.7861742973327637

Token 339: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -1.2664456789934775e-06
    2. ' direction' → logprob: -14.125000953674316
    3. '(direction' → logprob: -15.000000953674316
    4. '.direction' → logprob: -16.125001907348633
    5. '_direction' → logprob: -17.625001907348633
    6. '   ' → logprob: -18.125001907348633
    7. '  ' → logprob: -18.375001907348633
    8. 'direct' → logprob: -18.500001907348633
    9. 'directive' → logprob: -18.625001907348633
    10. 'dir' → logprob: -19.375001907348633

Token 340: '=="' (ID: 24027)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -2.0219828002154827e-05
    2. '=="' → logprob: -11.375020027160645
    3. ' ==' → logprob: -11.750020027160645
    4. '=='' → logprob: -14.125020027160645
    5. '==
' → logprob: -16.50002098083496
    6. '==-' → logprob: -17.75002098083496
    7. '   ' → logprob: -18.87502098083496
    8. '!=' → logprob: -19.25002098083496
    9. '=' → logprob: -19.37502098083496
    10. 'else' → logprob: -19.75002098083496

Token 341: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003273968119174242
    2. 'l' → logprob: -5.753273963928223
    3. '"' → logprob: -9.253273963928223
    4. 'left' → logprob: -15.753273963928223
    5. ' r' → logprob: -15.878273963928223
    6. 'g' → logprob: -16.37827491760254
    7. 'c' → logprob: -17.00327491760254
    8. 'right' → logprob: -17.25327491760254
    9. '"L' → logprob: -17.50327491760254
    10. 'lt' → logprob: -17.87827491760254

Token 342: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005158215761184692
    2. 'else' → logprob: -5.630158424377441
    3. '":' → logprob: -6.505158424377441
    4. ' else' → logprob: -11.005158424377441
    5. '":
' → logprob: -11.130158424377441
    6. '":"' → logprob: -11.630158424377441
    7. ''' → logprob: -12.380158424377441
    8. 'elif' → logprob: -12.380158424377441
    9. '"`' → logprob: -13.505158424377441
    10. 'el' → logprob: -13.630158424377441

Token 343: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0013915427261963487
    2. '   ' → logprob: -6.751391410827637
    3. ' else' → logprob: -9.001391410827637
    4. '       ' → logprob: -9.876391410827637
    5. ':' → logprob: -10.751391410827637
    6. 'elif' → logprob: -11.001391410827637
    7. '           ' → logprob: -13.376391410827637
    8. '               ' → logprob: -13.501391410827637
    9. '	else' → logprob: -13.626391410827637
    10. '```' → logprob: -14.376391410827637

Token 344: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.1472419600977446e-06
    2. ' op' → logprob: -13.750000953674316
    3. '	op' → logprob: -18.250001907348633
    4. '.op' → logprob: -20.125001907348633
    5. '_op' → logprob: -20.375001907348633
    6. '   ' → logprob: -20.375001907348633
    7. 'operator' → logprob: -20.500001907348633
    8. '-op' → logprob: -21.250001907348633
    9. '(op' → logprob: -21.500001907348633
    10. 'Op' → logprob: -22.125001907348633

Token 345: '.le' (ID: 27349)
  Prédit: '.le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.le' → logprob: -0.048717040568590164
    2. '.lt' → logprob: -3.0487170219421387
    3. '.gt' → logprob: -9.048717498779297
    4. '.l' → logprob: -12.923717498779297
    5. 'le' → logprob: -13.048717498779297
    6. '.eq' → logprob: -13.048717498779297
    7. '.ge' → logprob: -13.298717498779297
    8. '.lp' → logprob: -14.048717498779297
    9. '_le' → logprob: -14.798717498779297
    10. '.li' → logprob: -15.048717498779297

Token 346: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0445127372804563e-05
    2. 'return' → logprob: -11.87501049041748
    3. 'def' → logprob: -12.87501049041748
    4. '  ' → logprob: -15.00001049041748
    5. '       ' → logprob: -15.50001049041748
    6. '```' → logprob: -16.000009536743164
    7. '    
' → logprob: -16.625009536743164
    8. '	return' → logprob: -17.750009536743164
    9. '    ' → logprob: -17.750009536743164
    10. ' ' → logprob: -18.125009536743164

Token 347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.749814019713085e-06
    2. 'def' → logprob: -12.000006675720215
    3. 'return' → logprob: -15.750006675720215
    4. '       ' → logprob: -16.00000762939453
    5. '  ' → logprob: -16.00000762939453
    6. '```' → logprob: -16.37500762939453
    7. ' ' → logprob: -18.87500762939453
    8. '    ' → logprob: -19.00000762939453
    9. '	return' → logprob: -19.75000762939453
    10. '    
' → logprob: -19.87500762939453

Token 348: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005800772923976183
    2. 'return' → logprob: -7.500580310821533
    3. 'def' → logprob: -10.625579833984375
    4. '  ' → logprob: -13.875579833984375
    5. 'h' → logprob: -14.000579833984375
    6. 'points' → logprob: -14.625579833984375
    7. '```' → logprob: -15.375579833984375
    8. '       ' → logprob: -16.250579833984375
    9. ' ' → logprob: -16.625579833984375
    10. '    ' → logprob: -17.625579833984375

Token 349: ' =' (ID: 314)
  Prédit: 'oints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.31133708357810974
    2. '   ' → logprob: -1.4363371133804321
    3. ' =' → logprob: -4.436336994171143
    4. '=' → logprob: -4.686336994171143
    5. '    ' → logprob: -5.811336994171143
    6. '  ' → logprob: -6.436336994171143
    7. 'oint' → logprob: -7.436336994171143
    8. 'nts' → logprob: -7.561336994171143
    9. 'r' → logprob: -7.811336994171143
    10. '```' → logprob: -7.811336994171143

Token 350: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.007089242339134216
    2. 'min' → logprob: -5.007089138031006
    3. 'None' → logprob: -8.507089614868164
    4. ' points' → logprob: -9.257089614868164
    5. '(points' → logprob: -10.257089614868164
    6. 'max' → logprob: -11.507089614868164
    7. '   ' → logprob: -11.757089614868164
    8. 'sorted' → logprob: -12.007089614868164
    9. 'next' → logprob: -12.382089614868164
    10. '	points' → logprob: -12.507089614868164

Token 351: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17108897864818573
    2. '.pop' → logprob: -1.9210889339447021
    3. '[-' → logprob: -4.546089172363281
    4. '[len' → logprob: -9.171089172363281
    5. 'pop' → logprob: -9.921089172363281
    6. '[p' → logprob: -11.171089172363281
    7. '   ' → logprob: -12.421089172363281
    8. '```' → logprob: -12.546089172363281
    9. '.sort' → logprob: -12.671089172363281
    10. '0' → logprob: -12.671089172363281

Token 352: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -15.0
    3. '-' → logprob: -19.125
    4. '2' → logprob: -20.5
    5. ' ' → logprob: -21.75
    6. 'direction' → logprob: -22.875
    7. 'len' → logprob: -23.375
    8. '3' → logprob: -23.875
    9. '   ' → logprob: -24.25
    10. '０' → logprob: -24.5

Token 353: ']
' (ID: 1592)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3871229887008667
    2. ']' → logprob: -1.1371229887008667
    3. '[' → logprob: -9.137123107910156
    4. ']
' → logprob: -9.387123107910156
    5. '].' → logprob: -11.262123107910156
    6. ']][' → logprob: -11.637123107910156
    7. '][-' → logprob: -11.887123107910156
    8. ']

' → logprob: -12.012123107910156
    9. ')][' → logprob: -12.137123107910156
    10. '   ' → logprob: -12.387123107910156

Token 354: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.128163257315464e-07
    2. '  ' → logprob: -16.0
    3. 'for' → logprob: -16.25
    4. 'return' → logprob: -18.25
    5. '       ' → logprob: -18.375
    6. '    ' → logprob: -19.125
    7. ' ' → logprob: -20.25
    8. '    
' → logprob: -20.375
    9. 'p' → logprob: -20.5
    10. 'def' → logprob: -21.125

Token 355: ' output' (ID: 4733)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006025138311088085
    2. 'points' → logprob: -5.381025314331055
    3. 'for' → logprob: -6.881025314331055
    4. 'return' → logprob: -8.381025314331055
    5. 'p' → logprob: -9.506025314331055
    6. '  ' → logprob: -10.631025314331055
    7. 'direction' → logprob: -11.381025314331055
    8. 'c' → logprob: -11.381025314331055
    9. 'h' → logprob: -11.881025314331055
    10. 'if' → logprob: -12.506025314331055

Token 356: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061483316123485565
    2. '   ' → logprob: -3.686483383178711
    3. ' =' → logprob: -3.811483383178711
    4. '=[]' → logprob: -5.061483383178711
    5. '.append' → logprob: -5.186483383178711
    6. '[]' → logprob: -8.061483383178711
    7. '=list' → logprob: -9.436483383178711
    8. '```' → logprob: -10.811483383178711
    9. '  ' → logprob: -11.061483383178711
    10. '=`' → logprob: -11.311483383178711

Token 357: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.014738648198544979
    2. '   ' → logprob: -4.3897385597229
    3. ' []' → logprob: -6.3897385597229
    4. 'points' → logprob: -8.389739036560059
    5. '[' → logprob: -9.014739036560059
    6. '[]
' → logprob: -9.014739036560059
    7. '[p' → logprob: -10.514739036560059
    8. 'p' → logprob: -10.639739036560059
    9. '[]}' → logprob: -11.889739036560059
    10. 'list' → logprob: -12.639739036560059

Token 358: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.392202976712724e-06
    2. '   ' → logprob: -12.000006675720215
    3. ' p' → logprob: -15.750006675720215
    4. '       ' → logprob: -17.5000057220459
    5. '(p' → logprob: -19.2500057220459
    6. '	p' → logprob: -19.3750057220459
    7. 'points' → logprob: -19.6250057220459
    8. '     ' → logprob: -20.0000057220459
    9. '  ' → logprob: -20.6250057220459
    10. '           ' → logprob: -20.6250057220459

Token 359: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01862768642604351
    2. ']
' → logprob: -4.018627643585205
    3. ']

' → logprob: -8.393628120422363
    4. '   ' → logprob: -9.518628120422363
    5. ']+' → logprob: -9.768628120422363
    6. ',' → logprob: -9.768628120422363
    7. ')]' → logprob: -11.268628120422363
    8. '](' → logprob: -11.643628120422363
    9. '```' → logprob: -12.018628120422363
    10. '].' → logprob: -12.268628120422363

Token 360: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.128163257315464e-07
    2. '  ' → logprob: -15.875
    3. 'for' → logprob: -16.875
    4. 'while' → logprob: -17.5
    5. 'p' → logprob: -17.875
    6. '    
' → logprob: -18.0
    7. '       ' → logprob: -19.5
    8. '```' → logprob: -19.625
    9. ' ' → logprob: -19.75
    10. '    ' → logprob: -19.875

Token 361: ' lookup' (ID: 37342)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018392755882814527
    2. 'points' → logprob: -7.2518391609191895
    3. 'while' → logprob: -7.7518391609191895
    4. 'p' → logprob: -7.7518391609191895
    5. 'for' → logprob: -8.376839637756348
    6. '  ' → logprob: -10.751839637756348
    7. '    
' → logprob: -12.001839637756348
    8. ' ' → logprob: -13.001839637756348
    9. 'c' → logprob: -13.126839637756348
    10. 'h' → logprob: -13.376839637756348

Token 362: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020185507833957672
    2. ' =' → logprob: -4.020185470581055
    3. '   ' → logprob: -6.270185470581055
    4. '=[]' → logprob: -9.520185470581055
    5. '```' → logprob: -10.895185470581055
    6. '.append' → logprob: -11.520185470581055
    7. '[' → logprob: -12.020185470581055
    8. '[]' → logprob: -12.020185470581055
    9. ' ' → logprob: -12.270185470581055
    10. '  ' → logprob: -12.395185470581055

Token 363: ' set' (ID: 920)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.20956486463546753
    2. 'set' → logprob: -2.2095649242401123
    3. '[]' → logprob: -2.8345649242401123
    4. '{' → logprob: -4.584564685821533
    5. 'points' → logprob: -4.959564685821533
    6. 'dict' → logprob: -7.209564685821533
    7. 'output' → logprob: -7.209564685821533
    8. 'list' → logprob: -7.584564685821533
    9. 'p' → logprob: -7.709564685821533
    10. '{}
' → logprob: -8.334565162658691

Token 364: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010354298865422606
    2. '(output' → logprob: -7.626035213470459
    3. '(' → logprob: -8.751035690307617
    4. '()`' → logprob: -9.126035690307617
    5. '   ' → logprob: -9.501035690307617
    6. '([]' → logprob: -9.876035690307617
    7. '().' → logprob: -10.251035690307617
    8. '(points' → logprob: -10.376035690307617
    9. '(p' → logprob: -10.751035690307617
    10. '()
' → logprob: -11.126035690307617

Token 365: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.1008713702030946e-06
    2. '    
' → logprob: -13.875001907348633
    3. '  ' → logprob: -14.625001907348633
    4. '```' → logprob: -15.250001907348633
    5. 'lookup' → logprob: -16.000001907348633
    6. '       ' → logprob: -16.000001907348633
    7. 'for' → logprob: -16.500001907348633
    8. '    ' → logprob: -17.375001907348633
    9. '``' → logprob: -17.625001907348633
    10. 'while' → logprob: -18.125001907348633

Token 366: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02059502713382244
    2. 'lookup' → logprob: -3.895595073699951
    3. '```' → logprob: -11.020594596862793
    4. '  ' → logprob: -11.770594596862793
    5. 'for' → logprob: -11.895594596862793
    6. '       ' → logprob: -11.895594596862793
    7. 'output' → logprob: -12.020594596862793
    8. 'while' (adapté à ' while') → logprob: -12.645594596862793
    9. 'look' → logprob: -13.895594596862793
    10. 'p' → logprob: -14.020594596862793

Token 367: ' p' (ID: 275)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.7808822989463806
    2. ' True' → logprob: -0.7808822989463806
    3. 'output' → logprob: -3.0308823585510254
    4. 'points' → logprob: -4.530882358551025
    5. ' output' → logprob: -4.905882358551025
    6. 'p' → logprob: -5.530882358551025
    7. ' ' → logprob: -5.530882358551025
    8. '   ' → logprob: -5.905882358551025
    9. ' p' → logprob: -6.155882358551025
    10. ':' → logprob: -7.030882358551025

Token 368: '!=' (ID: 11408)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5324954390525818
    2. 'not' → logprob: -1.0324954986572266
    3. ' in' → logprob: -3.6574954986572266
    4. '!=' → logprob: -3.9074954986572266
    5. ' not' → logprob: -4.657495498657227
    6. '==' → logprob: -7.782495498657227
    7. '[' → logprob: -8.032495498657227
    8. 'is' → logprob: -8.532495498657227
    9. ':' → logprob: -9.282495498657227
    10. ' !=' → logprob: -9.407495498657227

Token 369: 'points' (ID: 14011)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.16916237771511078
    2. 'points' → logprob: -1.919162392616272
    3. 'lookup' → logprob: -4.794162273406982
    4. 'None' → logprob: -7.544162273406982
    5. 'p' → logprob: -10.16916275024414
    6. 'point' → logprob: -11.91916275024414
    7. 'h' → logprob: -12.16916275024414
    8. ' output' → logprob: -12.29416275024414
    9. 'c' → logprob: -12.29416275024414
    10. 'next' → logprob: -12.41916275024414

Token 370: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011381542310118675
    2. '[-' → logprob: -5.26138162612915
    3. ':' → logprob: -5.76138162612915
    4. '[:' → logprob: -7.13638162612915
    5. ':
' → logprob: -7.26138162612915
    6. '[len' → logprob: -7.63638162612915
    7. '   ' → logprob: -7.88638162612915
    8. '[:-' → logprob: -8.386381149291992
    9. '.pop' → logprob: -9.136381149291992
    10. '[p' → logprob: -9.886381149291992

Token 371: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -18.125
    3. '１' → logprob: -18.375
    4. ' ' → logprob: -20.75
    5. '१' → logprob: -21.5
    6. '   ' → logprob: -21.625
    7. '```' → logprob: -22.0
    8. '0' → logprob: -22.0
    9. '۱' → logprob: -22.125
    10. '১' → logprob: -22.5

Token 372: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.02000814862549305
    2. ']:
' → logprob: -4.020008087158203
    3. ']' → logprob: -6.645008087158203
    4. ']):' → logprob: -9.145008087158203
    5. ']:
' → logprob: -9.270008087158203
    6. ']:

' → logprob: -9.395008087158203
    7. ':' → logprob: -9.770008087158203
    8. '']:' → logprob: -9.895008087158203
    9. '):' → logprob: -10.395008087158203
    10. '][' → logprob: -10.395008087158203

Token 373: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001085497424355708
    2. '   ' → logprob: -9.62510871887207
    3. 'p' → logprob: -10.62510871887207
    4. '     ' → logprob: -11.75010871887207
    5. '      ' → logprob: -11.87510871887207
    6. '        ' → logprob: -13.87510871887207
    7. '    ' → logprob: -14.00010871887207
    8. 'output' → logprob: -14.25010871887207
    9. '           ' → logprob: -15.25010871887207
    10. '  ' → logprob: -16.50010871887207

Token 374: ' q' (ID: 2335)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003769555129110813
    2. 'p' → logprob: -5.628769397735596
    3. '   ' → logprob: -8.878769874572754
    4. 'next' → logprob: -11.003769874572754
    5. '     ' → logprob: -12.253769874572754
    6. '      ' → logprob: -12.503769874572754
    7. '           ' → logprob: -12.628769874572754
    8. '        ' → logprob: -14.628769874572754
    9. ' p' → logprob: -14.878769874572754
    10. '    ' → logprob: -15.003769874572754

Token 375: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14073465764522552
    2. ' =' → logprob: -2.3907346725463867
    3. '   ' → logprob: -3.2657346725463867
    4. '=p' → logprob: -7.015734672546387
    5. '       ' → logprob: -8.765734672546387
    6. '=q' → logprob: -9.390734672546387
    7. '    ' → logprob: -9.640734672546387
    8. '  ' → logprob: -9.765734672546387
    9. '     ' → logprob: -10.015734672546387
    10. '=c' → logprob: -10.015734672546387

Token 376: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.1472419600977446e-06
    2. ' next' → logprob: -14.125000953674316
    3. '   ' → logprob: -14.875000953674316
    4. '	next' → logprob: -18.125001907348633
    5. '       ' → logprob: -19.250001907348633
    6. '.next' → logprob: -20.375001907348633
    7. 'Next' → logprob: -21.250001907348633
    8. 'none' → logprob: -21.250001907348633
    9. '(next' → logprob: -21.375001907348633
    10. '_next' → logprob: -21.500001907348633

Token 377: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -5.717296517104842e-05
    2. '_POINT' → logprob: -10.625057220458984
    3. 'Point' → logprob: -11.625057220458984
    4. '_points' → logprob: -12.625057220458984
    5. '       ' → logprob: -12.875057220458984
    6. '_line' → logprob: -13.125057220458984
    7. '   ' → logprob: -13.125057220458984
    8. '_' → logprob: -13.125057220458984
    9. '_Point' → logprob: -13.125057220458984
    10. '_token' → logprob: -13.875057220458984

Token 378: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -5.7292167184641585e-05
    2. '(output' → logprob: -10.000057220458984
    3. '(' → logprob: -12.000057220458984
    4. '(p' → logprob: -13.125057220458984
    5. 'points' → logprob: -13.750057220458984
    6. '(outputs' → logprob: -13.750057220458984
    7. '	points' → logprob: -14.875057220458984
    8. '(point' → logprob: -15.625057220458984
    9. '(c' → logprob: -15.750057220458984
    10. '.points' → logprob: -16.000057220458984

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.896309739408025e-07
    2. '`,' → logprob: -15.875000953674316
    3. 'output' → logprob: -15.875000953674316
    4. '[],' → logprob: -16.125
    5. '[' → logprob: -16.5
    6. ',p' → logprob: -16.75
    7. '   ' → logprob: -17.125
    8. ' ,' → logprob: -17.25
    9. '```' → logprob: -17.375
    10. '),' → logprob: -17.75

Token 380: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.4121114822482923e-06
    2. 'output' → logprob: -13.000003814697266
    3. ' p' → logprob: -13.750003814697266
    4. '   ' → logprob: -16.750003814697266
    5. 'q' → logprob: -18.250003814697266
    6. '       ' → logprob: -18.625003814697266
    7. '	p' → logprob: -19.000003814697266
    8. 'point' → logprob: -21.000003814697266
    9. '(p' → logprob: -21.125003814697266
    10. 'points' → logprob: -21.125003814697266

Token 381: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0280383548888494e-06
    2. ' ,' → logprob: -15.125000953674316
    3. '[' → logprob: -15.500000953674316
    4. '),' → logprob: -15.625000953674316
    5. '   ' → logprob: -17.000001907348633
    6. ',[' → logprob: -17.125001907348633
    7. ',q' → logprob: -17.375001907348633
    8. '`,' → logprob: -17.375001907348633
    9. '，' → logprob: -17.750001907348633
    10. '[],' → logprob: -17.875001907348633

Token 382: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -7.896309739408025e-07
    2. ' direction' → logprob: -14.250000953674316
    3. '.direction' → logprob: -18.0
    4. '(direction' → logprob: -19.625
    5. 'dire' → logprob: -19.625
    6. '_direction' → logprob: -20.125
    7. 'directory' → logprob: -20.5
    8. 'directive' → logprob: -21.875
    9. '方向' → logprob: -22.0
    10. 'dir' → logprob: -22.375

Token 383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.9186317482963204e-05
    2. ',"' → logprob: -10.875049591064453
    3. '),' → logprob: -11.375049591064453
    4. '   ' → logprob: -11.875049591064453
    5. ')' → logprob: -12.625049591064453
    6. ' ,' → logprob: -13.500049591064453
    7. ',)' → logprob: -13.625049591064453
    8. '",' → logprob: -13.875049591064453
    9. '           ' → logprob: -14.125049591064453
    10. '`,' → logprob: -14.250049591064453

Token 384: ' cmp' (ID: 57822)
  Prédit: 'cmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmp' → logprob: -2.45848218582978e-06
    2. ' cmp' → logprob: -13.00000286102295
    3. 'cpp' → logprob: -16.500001907348633
    4. 'cm' → logprob: -17.750001907348633
    5. '_cmp' → logprob: -17.750001907348633
    6. 'CMP' → logprob: -18.125001907348633
    7. 'cmb' → logprob: -18.750001907348633
    8. 'cq' → logprob: -18.750001907348633
    9. 'cnt' → logprob: -18.875001907348633
    10. 'comp' → logprob: -20.625001907348633

Token 385: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -9.372294698550832e-06
    2. '_ops' → logprob: -12.750009536743164
    3. '   ' → logprob: -13.500009536743164
    4. '_operator' → logprob: -13.875009536743164
    5. '_' → logprob: -14.000009536743164
    6. '_OP' → logprob: -14.125009536743164
    7. '	op' → logprob: -14.625009536743164
    8. '-op' → logprob: -14.750009536743164
    9. '_oper' → logprob: -15.750009536743164
    10. ' op' → logprob: -15.875009536743164

Token 386: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9201317429542542
    2. '):
' → logprob: -1.2951316833496094
    3. ')' → logprob: -1.5451316833496094
    4. ')
' → logprob: -2.6701316833496094
    5. '):' → logprob: -3.1701316833496094
    6. '       ' → logprob: -5.920131683349609
    7. '           ' → logprob: -8.92013168334961
    8. '):

' → logprob: -9.67013168334961
    9. ').' → logprob: -9.79513168334961
    10. ')

' → logprob: -10.04513168334961

Token 387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.008129963040119e-06
    2. '   ' → logprob: -12.500003814697266
    3. '           ' → logprob: -15.750003814697266
    4. '      ' → logprob: -16.000003814697266
    5. '     ' → logprob: -17.125003814697266
    6. '        ' → logprob: -17.625003814697266
    7. '        
' → logprob: -19.250003814697266
    8. 'if' → logprob: -19.625003814697266
    9. '```' → logprob: -20.125003814697266
    10. '         ' → logprob: -20.250003814697266

Token 388: ' output' (ID: 4733)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016933739185333252
    2. 'output' (adapté à ' output') → logprob: -4.391933917999268
    3. 'p' → logprob: -6.016933917999268
    4. 'if' → logprob: -6.391933917999268
    5. '   ' → logprob: -8.14193344116211
    6. 'print' → logprob: -12.51693344116211
    7. '     ' → logprob: -13.01693344116211
    8. '      ' → logprob: -13.64193344116211
    9. '           ' → logprob: -13.89193344116211
    10. 'lookup' → logprob: -14.26693344116211

Token 389: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0013676194939762354
    2. '.' → logprob: -6.751367568969727
    3. '.extend' → logprob: -9.001367568969727
    4. '.push' → logprob: -10.751367568969727
    5. 'append' → logprob: -11.001367568969727
    6. '.pop' → logprob: -11.001367568969727
    7. '.add' → logprob: -12.001367568969727
    8. '.ap' → logprob: -12.376367568969727
    9. '.Append' → logprob: -13.501367568969727
    10. '+=' → logprob: -13.501367568969727

Token 390: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.00012570773833431304
    2. '(p' → logprob: -9.000125885009766
    3. '(' → logprob: -14.250125885009766
    4. '       ' → logprob: -14.625125885009766
    5. '(c' → logprob: -15.750125885009766
    6. '   ' → logprob: -15.750125885009766
    7. '((' → logprob: -16.125125885009766
    8. '(m' → logprob: -16.250125885009766
    9. '(z' → logprob: -16.375125885009766
    10. '(g' → logprob: -16.375125885009766

Token 391: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07963423430919647
    2. ')
' → logprob: -2.579634189605713
    3. '   ' → logprob: -8.079634666442871
    4. '       ' → logprob: -8.454634666442871
    5. ')

' → logprob: -8.579634666442871
    6. ')
' → logprob: -11.829634666442871
    7. ')`' → logprob: -12.079634666442871
    8. '))' → logprob: -12.329634666442871
    9. '```' → logprob: -12.454634666442871
    10. ').' → logprob: -12.954634666442871

Token 392: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3134145438671112
    2. '       ' → logprob: -1.3134145736694336
    3. 'return' → logprob: -8.938414573669434
    4. 'p' → logprob: -11.688414573669434
    5. 'if' → logprob: -11.688414573669434
    6. '     ' → logprob: -13.063414573669434
    7. '  ' → logprob: -14.313414573669434
    8. '    ' → logprob: -14.563414573669434
    9. '      ' → logprob: -14.563414573669434
    10. '```' → logprob: -14.688414573669434

Token 393: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.012848653830587864
    2. '       ' → logprob: -4.387848854064941
    3. 'if' → logprob: -8.262848854064941
    4. 'lookup' → logprob: -9.762848854064941
    5. '   ' → logprob: -11.512848854064941
    6. 'q' → logprob: -11.762848854064941
    7. ' p' → logprob: -13.012848854064941
    8. 'print' → logprob: -14.262848854064941
    9. '      ' → logprob: -14.387848854064941
    10. '     ' → logprob: -14.387848854064941

Token 394: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018606040626764297
    2. ' =' → logprob: -4.268606185913086
    3. '=q' → logprob: -5.518606185913086
    4. '=p' → logprob: -8.018606185913086
    5. '   ' → logprob: -10.768606185913086
    6. '=`' → logprob: -11.893606185913086
    7. '=c' → logprob: -12.143606185913086
    8. '=t' → logprob: -12.143606185913086
    9. '       ' → logprob: -12.393606185913086
    10. '=None' → logprob: -12.393606185913086

Token 395: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. ' q' → logprob: -16.625
    3. '(q' → logprob: -18.75
    4. '	q' → logprob: -18.75
    5. 'qx' → logprob: -20.75
    6. '*q' → logprob: -20.875
    7. '$q' → logprob: -21.25
    8. '.q' → logprob: -21.5
    9. '=q' → logprob: -22.375
    10. '-q' → logprob: -22.5

Token 396: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08925743401050568
    2. '       ' → logprob: -2.4642574787139893
    3. 'return' → logprob: -8.71425724029541
    4. '```' → logprob: -10.21425724029541
    5. 'def' → logprob: -10.83925724029541
    6. '     ' → logprob: -10.96425724029541
    7. 'if' → logprob: -10.96425724029541
    8. '  ' → logprob: -11.58925724029541
    9. '        
' → logprob: -11.83925724029541
    10. '    
' → logprob: -11.96425724029541

Token 397: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036068400368094444
    2. '       ' → logprob: -5.628606796264648
    3. 'return' → logprob: -12.253606796264648
    4. '```' → logprob: -13.753606796264648
    5. '  ' → logprob: -14.878606796264648
    6. 'def' → logprob: -15.753606796264648
    7. '     ' → logprob: -15.878606796264648
    8. 'if' → logprob: -16.00360679626465
    9. '    ' → logprob: -16.50360679626465
    10. '           ' → logprob: -16.75360679626465

Token 398: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32065775990486145
    2. 'return' (adapté à ' return') → logprob: -1.320657730102539
    3. '       ' → logprob: -4.945657730102539
    4. 'lookup' → logprob: -8.820657730102539
    5. 'if' → logprob: -10.195657730102539
    6. 'output' → logprob: -11.070657730102539
    7. '```' → logprob: -11.320657730102539
    8. 'q' → logprob: -11.570657730102539
    9. '	return' → logprob: -11.945657730102539
    10. ' return' → logprob: -12.070657730102539

Token 399: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -4.246537173457909e-06
    2. 'list' → logprob: -13.125003814697266
    3. ' output' → logprob: -13.500003814697266
    4. '.output' → logprob: -14.750003814697266
    5. '$output' → logprob: -15.750003814697266
    6. '	output' → logprob: -15.875003814697266
    7. '_output' → logprob: -16.125003814697266
    8. '(output' → logprob: -16.750003814697266
    9. 'Output' → logprob: -17.125003814697266
    10. '   ' → logprob: -17.375003814697266

Token 400: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1059539318084717
    2. '<|end|>' → logprob: -1.1059539318084717
    3. '```' → logprob: -1.1059539318084717
    4. 'def' → logprob: -5.980954170227051
    5. '`' → logprob: -6.855954170227051
    6. '<|end|>' → logprob: -6.855954170227051
    7. '       ' → logprob: -7.355954170227051
    8. 'q' → logprob: -7.730954170227051
    9. 'None' → logprob: -8.10595417022705
    10. '``' → logprob: -8.23095417022705

Token 401: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17609357833862305
    2. '```' → logprob: -2.301093578338623
    3. 'q' → logprob: -3.426093578338623
    4. '<|end|>' → logprob: -3.926093578338623
    5. 'None' → logprob: -5.926093578338623
    6. '       ' → logprob: -6.301093578338623
    7. 'return' → logprob: -6.301093578338623
    8. '  ' → logprob: -7.926093578338623
    9. '`' → logprob: -7.926093578338623
    10. 'def' → logprob: -8.051094055175781

Token 402: ' chunk' (ID: 23958)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -7.896309739408025e-07
    2. 'conv' → logprob: -14.250000953674316
    3. 'norm' → logprob: -18.25
    4. 'get' → logprob: -18.25
    5. 'hill' → logprob: -18.75
    6. 'hul' → logprob: -18.875
    7. 'polygon' → logprob: -19.25
    8. 'main' → logprob: -20.0
    9. 'find' → logprob: -20.5
    10. '_h' → logprob: -20.75

Token 403: '(n' (ID: 2406)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.03936266154050827
    2. '(' → logprob: -4.03936243057251
    3. '_size' → logprob: -5.53936243057251
    4. '(chunk' → logprob: -6.03936243057251
    5. '(p' → logprob: -6.16436243057251
    6. '(_' → logprob: -6.16436243057251
    7. '(size' → logprob: -6.28936243057251
    8. 'def' → logprob: -7.03936243057251
    9. '(tokens' → logprob: -7.41436243057251
    10. '_' → logprob: -7.66436243057251

Token 404: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1663351207971573
    2. ',' → logprob: -2.416335105895996
    3. '):
' → logprob: -2.791335105895996
    4. ':' → logprob: -6.666335105895996
    5. 'def' → logprob: -7.041335105895996
    6. '   ' → logprob: -8.541335105895996
    7. '):

' → logprob: -9.041335105895996
    8. ')' → logprob: -9.416335105895996
    9. '):
' → logprob: -10.291335105895996
    10. '```' → logprob: -10.791335105895996

Token 405: ' iterable' (ID: 113880)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.002910192823037505
    2. 'l' → logprob: -7.252910137176514
    3. 'items' → logprob: -7.502910137176514
    4. 'm' → logprob: -7.877910137176514
    5. '   ' → logprob: -8.377910614013672
    6. 'def' → logprob: -8.502910614013672
    7. 'list' → logprob: -8.752910614013672
    8. 'p' → logprob: -9.127910614013672
    9. 'lst' → logprob: -9.252910614013672
    10. '):' → logprob: -9.877910614013672

Token 406: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005459881853312254
    2. '):
' → logprob: -5.255459785461426
    3. ',' → logprob: -9.380459785461426
    4. '):

' → logprob: -9.380459785461426
    5. ')' → logprob: -10.630459785461426
    6. '   ' → logprob: -11.255459785461426
    7. '):
' → logprob: -11.380459785461426
    8. ')):' → logprob: -12.630459785461426
    9. ':' → logprob: -13.630459785461426
    10. '),' → logprob: -14.505459785461426

Token 407: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1041145626222715e-05
    2. 'return' → logprob: -11.875011444091797
    3. '```' → logprob: -13.000011444091797
    4. '  ' → logprob: -13.375011444091797
    5. '    ' → logprob: -16.375011444091797
    6. '``' → logprob: -16.875011444091797
    7. '       ' → logprob: -17.000011444091797
    8. '	return' → logprob: -17.375011444091797
    9. ' return' → logprob: -17.500011444091797
    10. ' ' → logprob: -17.625011444091797

Token 408: ' it' (ID: 480)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6932363510131836
    2. 'return' → logprob: -0.6932363510131836
    3. 'for' → logprob: -10.193236351013184
    4. 'def' → logprob: -10.818236351013184
    5. 'while' → logprob: -11.443236351013184
    6. ' return' → logprob: -11.943236351013184
    7. '  ' → logprob: -12.568236351013184
    8. ' ' → logprob: -12.943236351013184
    9. 'if' → logprob: -13.193236351013184
    10. 'yield' → logprob: -13.193236351013184

Token 409: ' =' (ID: 314)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4231562316417694
    2. ' =' → logprob: -1.9231562614440918
    3. '=' → logprob: -2.173156261444092
    4. 'ertools' → logprob: -2.798156261444092
    5. 'ers' → logprob: -4.423156261444092
    6. 'ert' → logprob: -5.298156261444092
    7. 'err' → logprob: -7.298156261444092
    8. 'erti' → logprob: -7.673156261444092
    9. ':=' → logprob: -7.798156261444092
    10. 'ems' → logprob: -7.798156261444092

Token 410: ' iter' (ID: 10621)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.322812020778656
    2. 'iter' → logprob: -1.3228120803833008
    3. 'tee' → logprob: -4.697812080383301
    4. 'chain' → logprob: -8.6978120803833
    5. 'ite' → logprob: -9.1978120803833
    6. 'it' → logprob: -10.1978120803833
    7. 'zip' → logprob: -11.0728120803833
    8. 'repeat' → logprob: -11.1978120803833
    9. ' tee' → logprob: -11.1978120803833
    10. 'iterator' → logprob: -11.8228120803833

Token 411: '(iter' (ID: 61014)
  Prédit: '(iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(iter' → logprob: -0.008204967714846134
    2. '(chunk' → logprob: -5.258204936981201
    3. 'able' → logprob: -6.383204936981201
    4. '(inter' → logprob: -8.38320541381836
    5. 'ables' → logprob: -8.50820541381836
    6. '(it' → logprob: -8.88320541381836
    7. 'atable' → logprob: -9.00820541381836
    8. '(chain' → logprob: -9.00820541381836
    9. '(range' → logprob: -10.00820541381836
    10. '(' → logprob: -10.00820541381836

Token 412: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -1.1637164789135568e-05
    2. 'ables' → logprob: -12.250011444091797
    3. 'ABLE' → logprob: -12.875011444091797
    4. ' able' → logprob: -13.750011444091797
    5. '-able' → logprob: -13.875011444091797
    6. 'abl' → logprob: -14.625011444091797
    7. 'ab' → logprob: -14.750011444091797
    8. 'atable' → logprob: -15.125011444091797
    9. 'a' → logprob: -15.500011444091797
    10. 'Able' → logprob: -15.625011444091797

Token 413: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0081187654286623
    2. ')' → logprob: -4.883118629455566
    3. '   ' → logprob: -7.633118629455566
    4. ')

' → logprob: -11.133118629455566
    5. ')
' → logprob: -12.133118629455566
    6. '       ' → logprob: -13.133118629455566
    7. '```' → logprob: -13.383118629455566
    8. ').' → logprob: -13.758118629455566
    9. '))
' → logprob: -14.383118629455566
    10. '           ' → logprob: -14.758118629455566

Token 414: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.41866585687967e-06
    2. 'return' → logprob: -11.750008583068848
    3. '  ' → logprob: -15.125008583068848
    4. '       ' → logprob: -16.50000762939453
    5. ' ' → logprob: -16.62500762939453
    6. '    ' → logprob: -17.87500762939453
    7. 'while' → logprob: -18.75000762939453
    8. ' return' → logprob: -19.00000762939453
    9. '	return' → logprob: -19.37500762939453
    10. '     ' → logprob: -19.62500762939453

Token 415: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.103752501308918
    2. '   ' → logprob: -2.603752613067627
    3. 'while' → logprob: -3.853752613067627
    4. 'for' → logprob: -5.728752613067627
    5. 'result' → logprob: -11.103752136230469
    6. 'chunk' → logprob: -11.103752136230469
    7. '	return' → logprob: -11.353752136230469
    8. 'chunks' → logprob: -11.603752136230469
    9. 'try' → logprob: -11.728752136230469
    10. ' return' → logprob: -11.728752136230469

Token 416: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.01160698663443327
    2. 'is' → logprob: -4.6366071701049805
    3. '[list' → logprob: -7.2616071701049805
    4. 'iter' → logprob: -8.01160717010498
    5. '[' → logprob: -8.13660717010498
    6. '(list' → logprob: -8.38660717010498
    7. 'zip' → logprob: -9.01160717010498
    8. 'tuple' → logprob: -9.88660717010498
    9. '   ' → logprob: -10.13660717010498
    10. 'chain' → logprob: -11.13660717010498

Token 417: '(is' (ID: 16171)
  Prédit: '(it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(it' → logprob: -0.0031613188330084085
    2. '(map' → logprob: -6.628161430358887
    3. '(iter' → logprob: -7.003161430358887
    4. '(chunk' → logprob: -8.003161430358887
    5. '(' → logprob: -8.253161430358887
    6. '(zip' → logprob: -8.753161430358887
    7. '(chain' → logprob: -9.878161430358887
    8. '(iterator' → logprob: -10.628161430358887
    9. '(ch' → logprob: -11.628161430358887
    10. '(next' → logprob: -12.253161430358887

Token 418: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.00013274075172375888
    2. 'liced' → logprob: -9.00013256072998
    3. 'lic' → logprob: -13.00013256072998
    4. 'li' → logprob: -13.25013256072998
    5. 'l' → logprob: -13.25013256072998
    6. 'slice' → logprob: -14.12513256072998
    7. 'lices' → logprob: -14.25013256072998
    8. 'lide' → logprob: -14.37513256072998
    9. 'licing' → logprob: -14.75013256072998
    10. '(slice' → logprob: -16.000133514404297

Token 419: '(it' (ID: 29445)
  Prédit: '(it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(it' → logprob: -2.339278580620885e-06
    2. '(iter' → logprob: -13.000001907348633
    3. '(chunk' → logprob: -16.750001907348633
    4. '(It' → logprob: -17.625001907348633
    5. 'it' → logprob: -18.375001907348633
    6. '(' → logprob: -18.500001907348633
    7. '(ch' → logprob: -18.625001907348633
    8. '(chain' → logprob: -19.125001907348633
    9. '(range' → logprob: -19.250001907348633
    10. '(iterator' → logprob: -19.500001907348633

Token 420: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2842308680992573e-05
    2. ',n' → logprob: -11.125022888183594
    3. '   ' → logprob: -12.750022888183594
    4. ' ,' → logprob: -13.000022888183594
    5. '，' → logprob: -14.500022888183594
    6. '  ' → logprob: -14.500022888183594
    7. '(),' → logprob: -14.500022888183594
    8. '```' → logprob: -15.375022888183594
    9. '`,' → logprob: -15.500022888183594
    10. '    ' → logprob: -15.750022888183594

Token 421: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0280383548888494e-06
    2. ' n' → logprob: -13.875000953674316
    3. '   ' → logprob: -20.750001907348633
    4. '	n' → logprob: -20.875001907348633
    5. '(n' → logprob: -21.125001907348633
    6. '_n' → logprob: -22.125001907348633
    7. ' н' → logprob: -22.625001907348633
    8. '  ' → logprob: -22.625001907348633
    9. '$n' → logprob: -23.000001907348633
    10. '-n' → logprob: -23.250001907348633

Token 422: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -1.3663626305060461e-05
    2. '))
' → logprob: -12.62501335144043
    3. ')' → logprob: -12.87501335144043
    4. ')).' → logprob: -13.25001335144043
    5. '));' → logprob: -13.62501335144043
    6. '```' → logprob: -13.87501335144043
    7. ')))' → logprob: -14.00001335144043
    8. '))

' → logprob: -14.12501335144043
    9. '   ' → logprob: -14.75001335144043
    10. ' ))' → logprob: -15.25001335144043

Token 423: 'while' (ID: 7032)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0378701351583004
    2. '   ' → logprob: -3.537870168685913
    3. '```' → logprob: -5.162869930267334
    4. 'return' → logprob: -6.287869930267334
    5. 'n' → logprob: -8.912870407104492
    6. '       ' → logprob: -9.537870407104492
    7. '`' → logprob: -9.787870407104492
    8. 'if' → logprob: -10.787870407104492
    9. 'print' → logprob: -10.787870407104492
    10. '    ' → logprob: -10.787870407104492

Token 424: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.15295948088169098
    2. 'stdin' → logprob: -2.2779595851898193
    3. ' True' → logprob: -3.2779595851898193
    4. 'p' → logprob: -7.15295934677124
    5. '1' → logprob: -8.277959823608398
    6. 'not' → logprob: -8.777959823608398
    7. '(True' → logprob: -9.027959823608398
    8. ' stdin' → logprob: -9.402959823608398
    9. 'true' → logprob: -9.777959823608398
    10. '.stdin' → logprob: -10.527959823608398

Token 425: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038384052459150553
    2. ':
' → logprob: -8.000383377075195
    3. '   ' → logprob: -10.500383377075195
    4. ':`' → logprob: -12.000383377075195
    5. ':

' → logprob: -12.500383377075195
    6. ':\' → logprob: -12.750383377075195
    7. '::' → logprob: -12.875383377075195
    8. ':<' → logprob: -13.875383377075195
    9. ':**' → logprob: -14.000383377075195
    10. ' :' → logprob: -14.375383377075195

Token 426: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019956084433943033
    2. 'line' → logprob: -6.37699556350708
    3. 'points' → logprob: -9.001996040344238
    4. ' line' → logprob: -9.626996040344238
    5. 'input' → logprob: -10.376996040344238
    6. 'point' → logprob: -11.001996040344238
    7. '  ' → logprob: -11.126996040344238
    8. ' ' → logprob: -11.251996040344238
    9. 'stdin' → logprob: -11.501996040344238
    10. 'p' → logprob: -12.876996040344238

Token 427: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.6352102756500244
    2. '   ' → logprob: -1.3852102756500244
    3. 'points' → logprob: -1.7602102756500244
    4. 'input' → logprob: -3.7602102756500244
    5. 'data' → logprob: -4.135210037231445
    6. 'lines' → logprob: -5.510210037231445
    7. 'inputs' → logprob: -6.010210037231445
    8. 'stdin' → logprob: -7.010210037231445
    9. 'p' → logprob: -8.135210037231445
    10. 'point' → logprob: -8.260210037231445

Token 428: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9616292715072632
    2. '.strip' → logprob: -1.2116292715072632
    3. ' =' → logprob: -1.9616292715072632
    4. '=' → logprob: -2.0866293907165527
    5. '.readline' → logprob: -3.5866293907165527
    6. '.rstrip' → logprob: -3.8366293907165527
    7. '=input' → logprob: -6.461629390716553
    8. '   ' → logprob: -7.461629390716553
    9. '.split' → logprob: -7.711629390716553
    10. '.read' → logprob: -7.961629390716553

Token 429: ' next' (ID: 2613)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -3.368984107510187e-05
    2. ' stdin' → logprob: -10.500033378601074
    3. '.stdin' → logprob: -12.375033378601074
    4. '(stdin' → logprob: -14.125033378601074
    5. 'input' → logprob: -14.625033378601074
    6. 'stdout' → logprob: -14.750033378601074
    7. 'std' → logprob: -15.250033378601074
    8. 'getline' → logprob: -18.00003433227539
    9. 'stderr' → logprob: -18.12503433227539
    10. 'STD' → logprob: -19.12503433227539

Token 430: '(stdin' (ID: 176594)
  Prédit: '(stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.03629192337393761
    2. '_token' → logprob: -4.28629207611084
    3. '(token' → logprob: -4.78629207611084
    4. '(line' → logprob: -5.28629207611084
    5. '()' → logprob: -5.78629207611084
    6. '_point' → logprob: -6.41129207611084
    7. '(st' → logprob: -7.28629207611084
    8. 'stdin' → logprob: -7.78629207611084
    9. '_line' → logprob: -7.91129207611084
    10. '(' → logprob: -8.03629207611084

Token 431: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21990148723125458
    2. '.readline' → logprob: -2.0949015617370605
    3. ').' → logprob: -2.7199015617370605
    4. '.read' → logprob: -5.5949015617370605
    5. '   ' → logprob: -5.7199015617370605
    6. '.readlines' → logprob: -7.8449015617370605
    7. '.strip' → logprob: -7.9699015617370605
    8. ')
' → logprob: -8.844901084899902
    9. '.line' → logprob: -9.094901084899902
    10. '.' → logprob: -9.219901084899902

Token 432: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.10023374110460281
    2. 'rstrip' → logprob: -2.600233793258667
    3. '.strip' → logprob: -3.975233793258667
    4. '   ' → logprob: -6.600233554840088
    5. 'line' → logprob: -7.600233554840088
    6. '.rstrip' → logprob: -7.725233554840088
    7. 'split' → logprob: -11.100234031677246
    8. 'replace' → logprob: -11.975234031677246
    9. '       ' → logprob: -12.100234031677246
    10. ' strip' → logprob: -12.600234031677246

Token 433: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00011021859245374799
    2. '()
' → logprob: -10.000110626220703
    3. '().' → logprob: -10.125110626220703
    4. '()`' → logprob: -11.125110626220703
    5. '()(' → logprob: -13.375110626220703
    6. '())' → logprob: -13.500110626220703
    7. '()

' → logprob: -13.500110626220703
    8. '   ' → logprob: -14.125110626220703
    9. 'd' → logprob: -14.125110626220703
    10. '(' → logprob: -14.125110626220703

Token 434: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013580904342234135
    2. 'if' → logprob: -6.7513580322265625
    3. 'line' → logprob: -9.876358032226562
    4. '  ' → logprob: -10.126358032226562
    5. '       ' → logprob: -10.501358032226562
    6. 'points' → logprob: -10.751358032226562
    7. '```' → logprob: -11.501358032226562
    8. ' ' → logprob: -11.626358032226562
    9. '    ' → logprob: -11.876358032226562
    10. 'print' → logprob: -12.626358032226562

Token 435: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25674617290496826
    2. 'points' → logprob: -1.6317461729049683
    3. '   ' → logprob: -3.631746292114258
    4. 'print' → logprob: -5.756746292114258
    5. 'line' → logprob: -7.381746292114258
    6. 'data' → logprob: -9.256746292114258
    7. 'tokens' → logprob: -9.256746292114258
    8. 'break' → logprob: -9.631746292114258
    9. 'lines' → logprob: -9.631746292114258
    10. '       ' → logprob: -9.756746292114258

Token 436: ' not' (ID: 625)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -9.662937372922897e-05
    2. 'not' → logprob: -9.375096321105957
    3. ' line' → logprob: -11.375096321105957
    4. '	line' → logprob: -15.625096321105957
    5. '(line' → logprob: -16.250097274780273
    6. '#line' → logprob: -16.625097274780273
    7. 'len' → logprob: -17.000097274780273
    8. '.line' → logprob: -17.500097274780273
    9. '=line' → logprob: -18.000097274780273
    10. '-line' → logprob: -18.500097274780273

Token 437: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.9361264946837764e-07
    2. ' line' → logprob: -15.625
    3. '	line' → logprob: -19.25
    4. '(line' → logprob: -19.5
    5. '.line' → logprob: -21.0
    6. '#line' → logprob: -21.375
    7. 'lines' → logprob: -21.75
    8. '-line' → logprob: -22.125
    9. 'lin' → logprob: -22.5
    10. 'Line' → logprob: -22.75

Token 438: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.245724504580721e-05
    2. ':
' → logprob: -9.375092506408691
    3. ':return' → logprob: -12.000092506408691
    4. ':`' → logprob: -14.500092506408691
    5. '.strip' → logprob: -15.000092506408691
    6. ':

' → logprob: -15.375092506408691
    7. '.startswith' → logprob: -16.250091552734375
    8. ':end' → logprob: -16.750091552734375
    9. 'break' → logprob: -16.750091552734375
    10. ':
' → logprob: -17.500091552734375

Token 439: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012894016690552235
    2. 'break' → logprob: -6.751289367675781
    3. '     ' → logprob: -10.001289367675781
    4. 'continue' → logprob: -10.251289367675781
    5. '   ' → logprob: -10.626289367675781
    6. '      ' → logprob: -11.376289367675781
    7. '        ' → logprob: -14.376289367675781
    8. ':' → logprob: -14.501289367675781
    9. ' break' → logprob: -14.501289367675781
    10. 'return' → logprob: -15.001289367675781

Token 440: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -1.6286106983898208e-05
    2. 'continue' (adapté à ' continue') → logprob: -11.125016212463379
    3. ' break' → logprob: -13.500016212463379
    4. '	break' → logprob: -17.250017166137695
    5. 'Break' → logprob: -17.875017166137695
    6. '   ' → logprob: -18.500017166137695
    7. 'return' → logprob: -19.875017166137695
    8. 'print' → logprob: -20.375017166137695
    9. 'breaking' → logprob: -20.500017166137695
    10. '       ' → logprob: -20.750017166137695

Token 441: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.106736039626412e-05
    2. 'line' → logprob: -11.125031471252441
    3. '       ' → logprob: -11.625031471252441
    4. '  ' → logprob: -12.750031471252441
    5. '```' → logprob: -13.625031471252441
    6. '    ' → logprob: -13.750031471252441
    7. '<|end|>' → logprob: -14.125031471252441
    8. ' ' → logprob: -15.250031471252441
    9. 'for' → logprob: -15.625031471252441
    10. '     ' → logprob: -15.625031471252441

Token 442: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.4272752852994017e-05
    2. '       ' → logprob: -10.75002384185791
    3. 'points' → logprob: -13.12502384185791
    4. '  ' → logprob: -14.50002384185791
    5. '    ' → logprob: -16.125024795532227
    6. 'line' → logprob: -16.500024795532227
    7. '```' → logprob: -17.000024795532227
    8. '     ' → logprob: -17.375024795532227
    9. ' ' → logprob: -18.375024795532227
    10. 'lines' → logprob: -18.750024795532227

Token 443: ' n' (ID: 297)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.3871006369590759
    2. '   ' → logprob: -1.1371006965637207
    3. 'data' → logprob: -9.637100219726562
    4. '       ' → logprob: -10.137100219726562
    5. 'tokens' → logprob: -10.262100219726562
    6. 'lines' → logprob: -10.387100219726562
    7. 'point' → logprob: -11.512100219726562
    8. 'line' → logprob: -11.637100219726562
    9. 'inputs' → logprob: -11.637100219726562
    10. 'values' → logprob: -12.137100219726562

Token 444: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5500588417053223
    2. ' =' → logprob: -0.9250588417053223
    3. '=int' → logprob: -3.8000588417053223
    4. '   ' → logprob: -5.550058841705322
    5. '=len' → logprob: -9.050058364868164
    6. ',' → logprob: -10.300058364868164
    7. ' ' → logprob: -10.300058364868164
    8. '=float' → logprob: -10.675058364868164
    9. '  ' → logprob: -11.300058364868164
    10. '    ' → logprob: -11.300058364868164

Token 445: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.8624639324116288e-06
    2. ' int' → logprob: -13.250001907348633
    3. 'len' → logprob: -16.875001907348633
    4. '<int' → logprob: -17.250001907348633
    5. '=int' → logprob: -17.750001907348633
    6. '(int' → logprob: -18.125001907348633
    7. ''int' → logprob: -20.125001907348633
    8. '[int' → logprob: -20.250001907348633
    9. 'intval' → logprob: -20.250001907348633
    10. 'line' → logprob: -20.375001907348633

Token 446: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -3.128163257315464e-07
    2. '(input' → logprob: -15.625
    3. 'line' → logprob: -16.625
    4. '(' → logprob: -17.125
    5. '(next' → logprob: -17.375
    6. ' line' → logprob: -18.25
    7. '(stdin' → logprob: -18.25
    8. '=line' → logprob: -18.625
    9. '(lines' → logprob: -19.25
    10. '	line' → logprob: -19.375

Token 447: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052164576947689056
    2. '.strip' → logprob: -3.0521645545959473
    3. ')
' → logprob: -5.677164554595947
    4. '.rstrip' → logprob: -9.677165031433105
    5. 'strip' → logprob: -10.677165031433105
    6. ').' → logprob: -10.802165031433105
    7. ')

' → logprob: -11.052165031433105
    8. '.split' → logprob: -11.177165031433105
    9. '   ' → logprob: -12.177165031433105
    10. '.readline' → logprob: -12.927165031433105

Token 448: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.128163257315464e-07
    2. '  ' → logprob: -16.125
    3. 'points' → logprob: -16.125
    4. '       ' → logprob: -18.625
    5. '    ' → logprob: -19.0
    6. 'line' → logprob: -20.0
    7. ' ' → logprob: -21.125
    8. '    
' → logprob: -21.75
    9. '```' → logprob: -22.0
    10. '     ' → logprob: -22.375

Token 449: ' if' (ID: 538)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.011057726107537746
    2. '   ' → logprob: -4.5110578536987305
    3. 'pts' → logprob: -13.26105785369873
    4. 'p' → logprob: -13.88605785369873
    5. ' points' → logprob: -13.88605785369873
    6. '	points' → logprob: -13.88605785369873
    7. 'lines' → logprob: -14.26105785369873
    8. 'a' → logprob: -14.38605785369873
    9. 'point' → logprob: -14.38605785369873
    10. 'line' → logprob: -14.76105785369873

Token 450: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04949653893709183
    2. ' n' → logprob: -3.049496650695801
    3. 'not' → logprob: -7.424496650695801
    4. 'line' → logprob: -8.4244966506958
    5. '   ' → logprob: -10.1744966506958
    6. ' not' → logprob: -10.1744966506958
    7. '  ' → logprob: -12.0494966506958
    8. ' line' → logprob: -12.5494966506958
    9. ' ' → logprob: -13.1744966506958
    10. '(n' → logprob: -13.5494966506958

Token 451: '==' (ID: 560)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.12135086208581924
    2. '<' → logprob: -2.3713507652282715
    3. '==' → logprob: -3.8713507652282715
    4. ' <=' → logprob: -9.74635124206543
    5. '>=' → logprob: -11.12135124206543
    6. '>' → logprob: -11.24635124206543
    7. ' ==' → logprob: -13.12135124206543
    8. '≤' → logprob: -13.24635124206543
    9. ' <' → logprob: -13.87135124206543
    10. '!=' → logprob: -14.37135124206543

Token 452: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4974866644479334e-05
    2. '1' → logprob: -11.125015258789062
    3. '-' → logprob: -15.750015258789062
    4. '2' → logprob: -18.125015258789062
    5. '10' → logprob: -18.375015258789062
    6. ' ' → logprob: -18.750015258789062
    7. '3' → logprob: -19.750015258789062
    8. '100' → logprob: -20.500015258789062
    9. '5' → logprob: -20.875015258789062
    10. '4' → logprob: -21.500015258789062

Token 453: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07903002202510834
    2. ':
' → logprob: -2.5790300369262695
    3. ':return' → logprob: -9.07903003692627
    4. 'break' → logprob: -10.70403003692627
    5. ':

' → logprob: -13.45403003692627
    6. '   ' → logprob: -13.70403003692627
    7. ':
' → logprob: -14.57903003692627
    8. 'return' → logprob: -14.82903003692627
    9. ':\' → logprob: -16.204029083251953
    10. '       ' → logprob: -16.204029083251953

Token 454: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010199354437645525
    2. 'break' → logprob: -9.250102043151855
    3. '     ' → logprob: -12.875102043151855
    4. '   ' → logprob: -13.375102043151855
    5. '      ' → logprob: -13.875102043151855
    6. 'continue' → logprob: -14.625102043151855
    7. 'return' → logprob: -15.000102043151855
    8. ' break' → logprob: -17.00010108947754
    9. '        ' → logprob: -17.25010108947754
    10. 'print' → logprob: -17.37510108947754

Token 455: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.00026741522015072405
    2. '       ' → logprob: -8.250267028808594
    3. ' break' → logprob: -12.250267028808594
    4. 'print' → logprob: -14.375267028808594
    5. 'return' → logprob: -15.000267028808594
    6. 'Break' → logprob: -15.750267028808594
    7. '	break' → logprob: -16.000267028808594
    8. 'continue' → logprob: -16.500267028808594
    9. '           ' → logprob: -17.500267028808594
    10. '   ' → logprob: -17.625267028808594

Token 456: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.153795766294934e-06
    2. 'points' → logprob: -12.500005722045898
    3. '       ' → logprob: -13.375005722045898
    4. '  ' → logprob: -14.500005722045898
    5. 'line' → logprob: -16.0000057220459
    6. '    ' → logprob: -16.8750057220459
    7. '	points' → logprob: -17.2500057220459
    8. ' ' → logprob: -17.5000057220459
    9. '```' → logprob: -18.2500057220459
    10. 'n' → logprob: -18.5000057220459

Token 457: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4140441635390744e-05
    2. 'points' → logprob: -11.250014305114746
    3. '  ' → logprob: -14.750014305114746
    4. 'line' → logprob: -14.875014305114746
    5. '       ' → logprob: -15.000014305114746
    6. ' ' → logprob: -17.87501335144043
    7. '	points' → logprob: -17.87501335144043
    8. '    ' → logprob: -17.87501335144043
    9. '```' → logprob: -18.25001335144043
    10. 'lines' → logprob: -18.50001335144043

Token 458: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011714138090610504
    2. 'points' → logprob: -6.751171588897705
    3. '  ' → logprob: -14.376171112060547
    4. 'line' → logprob: -15.876171112060547
    5. '	points' → logprob: -15.876171112060547
    6. '       ' → logprob: -16.251171112060547
    7. ' points' → logprob: -16.626171112060547
    8. 'lines' → logprob: -17.126171112060547
    9. 'p' → logprob: -18.001171112060547
    10. '    ' → logprob: -18.126171112060547

Token 459: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10402342677116394
    2. 'ef' → logprob: -2.6040234565734863
    3. 'irection' → logprob: -4.479023456573486
    4. ' =' → logprob: -4.479023456573486
    5. 'irections' → logprob: -8.104022979736328
    6. '=line' → logprob: -8.479022979736328
    7. '='' → logprob: -8.604022979736328
    8. '=d' → logprob: -8.729022979736328
    9. '=[]' → logprob: -8.854022979736328
    10. 'irect' → logprob: -8.854022979736328

Token 460: ' list' (ID: 1562)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.114891767501831
    2. 'next' → logprob: -1.114891767501831
    3. 'stdin' → logprob: -1.614891767501831
    4. 'list' → logprob: -2.114891767501831
    5. 'input' → logprob: -4.36489200592041
    6. 'float' → logprob: -5.86489200592041
    7. '[next' → logprob: -5.98989200592041
    8. '[int' → logprob: -6.11489200592041
    9. '[]' → logprob: -6.61489200592041
    10. 'tuple' → logprob: -7.48989200592041

Token 461: '(st' (ID: 4065)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6977381706237793
    2. '=' → logprob: -1.5727381706237793
    3. '()' → logprob: -1.9477381706237793
    4. '.append' → logprob: -3.0727381706237793
    5. '([]' → logprob: -3.5727381706237793
    6. '(map' → logprob: -3.5727381706237793
    7. '=[]' → logprob: -4.572738170623779
    8. ' =' → logprob: -5.822738170623779
    9. '(range' → logprob: -5.822738170623779
    10. '[:]' → logprob: -5.822738170623779

Token 462: 'arm' (ID: 2218)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.093977212905884
    2. 'din' → logprob: -2.218977212905884
    3. 'ream' → logprob: -2.468977212905884
    4. 'andard' → logprob: -2.718977212905884
    5. 'art' → logprob: -2.843977212905884
    6. 'import' → logprob: -2.968977212905884
    7. 'd' → logprob: -3.218977212905884
    8. 'arm' → logprob: -3.343977212905884
    9. '```' → logprob: -3.593977212905884
    10. 'ring' → logprob: -3.718977212905884

Token 463: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.0007887827814556658
    2. ' ap' → logprob: -8.250788688659668
    3. 'apped' → logprob: -8.250788688659668
    4. 'aped' → logprob: -8.875788688659668
    5. 'ап' → logprob: -9.625788688659668
    6. 'ape' → logprob: -11.625788688659668
    7. 'a' → logprob: -11.875788688659668
    8. '	ap' → logprob: -12.250788688659668
    9. 'AP' → logprob: -12.375788688659668
    10. 'Ap' → logprob: -12.875788688659668

Token 464: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0005419504595920444
    2. '(' → logprob: -7.625542163848877
    3. '(tuple' → logprob: -11.125541687011719
    4. '(int' → logprob: -11.625541687011719
    5. '(func' → logprob: -12.000541687011719
    6. '((' → logprob: -12.750541687011719
    7. '(list' → logprob: -13.125541687011719
    8. '=lambda' → logprob: -13.125541687011719
    9. '(function' → logprob: -13.250541687011719
    10. '(parse' → logprob: -13.375541687011719

Token 465: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.565583348274231
    2. 'range' → logprob: -1.565583348274231
    3. 'lambda' → logprob: -2.0655832290649414
    4. ':' → logprob: -2.5655832290649414
    5. 'map' → logprob: -4.690583229064941
    6. 'float' → logprob: -5.440583229064941
    7. 'int' → logprob: -5.690583229064941
    8. 'list' → logprob: -7.565583229064941
    9. 'tuple' → logprob: -7.690583229064941
    10. '   ' → logprob: -8.190583229064941

Token 466: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018156733363866806
    2. ':' → logprob: -4.0181565284729
    3. ',a' → logprob: -13.018157005310059
    4. ',b' → logprob: -13.893157005310059
    5. ',d' → logprob: -13.893157005310059
    6. ',*' → logprob: -14.643157005310059
    7. 'a' → logprob: -14.768157005310059
    8. ',x' → logprob: -14.893157005310059
    9. ',:' → logprob: -14.893157005310059
    10. ':a' → logprob: -15.393157005310059

Token 467: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016110755677800626
    2. ',' → logprob: -8.750161170959473
    3. ':a' → logprob: -13.000161170959473
    4. ' :' → logprob: -16.125160217285156
    5. ':x' → logprob: -16.875160217285156
    6. ',:' → logprob: -17.000160217285156
    7. '   ' → logprob: -17.250160217285156
    8. ':,' → logprob: -17.750160217285156
    9. ':**' → logprob: -17.750160217285156
    10. ':`' → logprob: -17.875160217285156

Token 468: ' [' (ID: 723)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.026359057053923607
    2. '(int' → logprob: -4.4013590812683105
    3. 'a' → logprob: -5.0263590812683105
    4. '(' → logprob: -5.1513590812683105
    5. '(float' → logprob: -7.7763590812683105
    6. ' (' → logprob: -8.151358604431152
    7. '(b' → logprob: -8.151358604431152
    8. 'int' → logprob: -8.276358604431152
    9. 'float' → logprob: -9.401358604431152
    10. 'tuple' → logprob: -11.026358604431152

Token 469: 'float' (ID: 7829)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5891194343566895
    2. 'int' → logprob: -0.8391194343566895
    3. 'float' → logprob: -4.3391194343566895
    4. '0' → logprob: -11.714118957519531
    5. '(a' → logprob: -11.714118957519531
    6. '[a' → logprob: -11.714118957519531
    7. '[int' → logprob: -12.089118957519531
    8. '(int' → logprob: -12.214118957519531
    9. ' int' → logprob: -12.339118957519531
    10. 'b' → logprob: -12.464118957519531

Token 470: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.869017852295656e-06
    2. '(b' → logprob: -12.125006675720215
    3. '(float' → logprob: -14.375006675720215
    4. '(int' → logprob: -14.375006675720215
    5. 'a' → logprob: -16.50000762939453
    6. '(x' → logprob: -17.75000762939453
    7. '(map' → logprob: -17.75000762939453
    8. '(input' → logprob: -17.75000762939453
    9. '(eval' → logprob: -17.75000762939453
    10. '(line' → logprob: -17.87500762939453

Token 471: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06038079410791397
    2. ',b' → logprob: -3.185380697250366
    3. '),' → logprob: -4.310380935668945
    4. '`,' → logprob: -6.435380935668945
    5. ',float' → logprob: -6.810380935668945
    6. '},' → logprob: -7.560380935668945
    7. ',a' → logprob: -8.435380935668945
    8. '],' → logprob: -9.310380935668945
    9. ' ,' → logprob: -9.685380935668945
    10. '.strip' → logprob: -10.310380935668945

Token 472: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0009122979827225208
    2. ' float' → logprob: -7.000912189483643
    3. '(float' → logprob: -14.7509126663208
    4. '	float' → logprob: -15.3759126663208
    5. '       ' → logprob: -17.500911712646484
    6. '.float' → logprob: -17.750911712646484
    7. '         ' → logprob: -17.875911712646484
    8. '=float' → logprob: -18.000911712646484
    9. '   ' → logprob: -18.125911712646484
    10. 'b' → logprob: -18.250911712646484

Token 473: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -3.128163257315464e-07
    2. '(a' → logprob: -15.25
    3. '(d' → logprob: -19.125
    4. '(c' → logprob: -19.25
    5. '(float' → logprob: -19.75
    6. '(' → logprob: -19.875
    7. 'b' → logprob: -20.125
    8. '(B' → logprob: -20.5
    9. '	b' → logprob: -21.375
    10. ' (' → logprob: -21.75

Token 474: ')],' (ID: 60559)
  Prédit: ')],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')],' → logprob: -0.13456250727176666
    2. ')]' → logprob: -2.5095624923706055
    3. '),' → logprob: -3.7595624923706055
    4. ')])' → logprob: -4.2595624923706055
    5. ']),' → logprob: -5.3845624923706055
    6. '])' → logprob: -7.2595624923706055
    7. ')],
' → logprob: -7.5095624923706055
    8. ')' → logprob: -7.6345624923706055
    9. ')][' → logprob: -8.509562492370605
    10. '],' → logprob: -9.009562492370605

Token 475: ' *' (ID: 425)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.971858024597168
    2. 'chunk' → logprob: -1.096858024597168
    3. 'chain' → logprob: -1.346858024597168
    4. 'repeat' → logprob: -4.596858024597168
    5. 'zip' → logprob: -4.721858024597168
    6. 'next' → logprob: -4.846858024597168
    7. 'chunks' → logprob: -8.846858024597168
    8. 'line' → logprob: -9.096858024597168
    9. '[' → logprob: -9.221858024597168
    10. 'map' → logprob: -9.346858024597168

Token 476: 'tee' (ID: 11140)
  Prédit: 'tee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tee' → logprob: -0.06532688438892365
    2. 'zip' → logprob: -3.5653269290924072
    3. 'chunk' → logprob: -3.6903269290924072
    4. 'repeat' → logprob: -5.065326690673828
    5. 'chain' → logprob: -5.690326690673828
    6. 'te' → logprob: -9.315326690673828
    7. '[' → logprob: -9.565326690673828
    8. 'chunks' → logprob: -10.190326690673828
    9. ' tee' → logprob: -10.440326690673828
    10. 'map' → logprob: -10.940326690673828

Token 477: '((' (ID: 2054)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.5535028576850891
    2. '(line' → logprob: -1.3035027980804443
    3. '(zip' → logprob: -2.4285027980804443
    4. '((' → logprob: -4.428503036499023
    5. '(iter' → logprob: -4.553503036499023
    6. '(chain' → logprob: -4.803503036499023
    7. '(input' → logprob: -5.178503036499023
    8. '(map' → logprob: -5.303503036499023
    9. '(lines' → logprob: -5.678503036499023
    10. '(st' → logprob: -5.803503036499023

Token 478: 's' (ID: 82)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.0007373234839178622
    2. 'chain' → logprob: -7.375737190246582
    3. 'map' → logprob: -10.250737190246582
    4. '(stdin' → logprob: -10.375737190246582
    5. 'line' → logprob: -11.375737190246582
    6. 'repeat' → logprob: -11.625737190246582
    7. ' stdin' → logprob: -12.000737190246582
    8. '.stdin' → logprob: -12.250737190246582
    9. 'input' → logprob: -12.250737190246582
    10. 'stdout' → logprob: -12.500737190246582

Token 479: ' for' (ID: 395)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.7302606701850891
    2. '.split' → logprob: -0.9802606701850891
    3. 'plit' → logprob: -2.4802606105804443
    4. 'for' → logprob: -3.3552606105804443
    5. 't' → logprob: -4.855260848999023
    6. 'trip' → logprob: -5.855260848999023
    7. '.stdin' → logprob: -5.855260848999023
    8. '.rstrip' → logprob: -5.855260848999023
    9. 'tr' → logprob: -6.230260848999023
    10. '.readline' → logprob: -6.605260848999023

Token 480: ' s' (ID: 265)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.028732044622302055
    2. 'line' → logprob: -4.028731822967529
    3. 'in' → logprob: -4.778731822967529
    4. 'chain' → logprob: -6.903731822967529
    5. '.stdin' → logprob: -8.528732299804688
    6. '(stdin' → logprob: -8.653732299804688
    7. 'split' → logprob: -8.778732299804688
    8. ' stdin' → logprob: -8.903732299804688
    9. 'input' → logprob: -9.528732299804688
    10. 'stdout' → logprob: -9.903732299804688

Token 481: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.001015779678709805
    2. ' in' → logprob: -7.126015663146973
    3. '   ' → logprob: -10.001015663146973
    4. 'plit' → logprob: -10.251015663146973
    5. 't' → logprob: -10.876015663146973
    6. 'e' → logprob: -10.876015663146973
    7. 'from' → logprob: -11.001015663146973
    8. 'In' → logprob: -11.501015663146973
    9. 'ince' → logprob: -12.126015663146973
    10. 'to' → logprob: -12.251015663146973

Token 482: ' (' (ID: 350)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -2.8325677703833207e-05
    2. '(stdin' → logprob: -11.375028610229492
    3. ' stdin' → logprob: -11.750028610229492
    4. '.stdin' → logprob: -12.125028610229492
    5. 'chain' → logprob: -13.750028610229492
    6. 'repeat' → logprob: -13.750028610229492
    7. 'stdout' → logprob: -14.000028610229492
    8. 'std' → logprob: -15.500028610229492
    9. 'iter' → logprob: -17.250028610229492
    10. 'split' → logprob: -17.375028610229492

Token 483: 'l' (ID: 75)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -2.0219828002154827e-05
    2. 'stdout' → logprob: -11.750020027160645
    3. ' stdin' → logprob: -11.875020027160645
    4. '.stdin' → logprob: -13.125020027160645
    5. '(stdin' → logprob: -13.375020027160645
    6. 'line' → logprob: -14.625020027160645
    7. 'chain' → logprob: -14.625020027160645
    8. 'repeat' → logprob: -15.000020027160645
    9. 'input' → logprob: -15.750020027160645
    10. 'std' → logprob: -16.00002098083496

Token 484: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.4260551929473877
    2. '.split' → logprob: -1.6760551929473877
    3. 'plit' → logprob: -3.0510551929473877
    4. 'tr' → logprob: -3.5510551929473877
    5. 'trip' → logprob: -3.5510551929473877
    6. 'in' → logprob: -4.051054954528809
    7. '.readline' → logprob: -4.301054954528809
    8. '.rstrip' → logprob: -5.176054954528809
    9. 'strip' → logprob: -5.301054954528809
    10. 'for' → logprob: -5.551054954528809

Token 485: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.007527124602347612
    2. '()' → logprob: -5.7575273513793945
    3. 'ge' → logprob: -7.0075273513793945
    4. 'ed' → logprob: -7.3825273513793945
    5. '   ' → logprob: -7.5075273513793945
    6. 't' → logprob: -7.6325273513793945
    7. 'ged' → logprob: -7.8825273513793945
    8. 'g' → logprob: -8.007527351379395
    9. 'd' → logprob: -8.507527351379395
    10. '())' → logprob: -8.757527351379395

Token 486: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.41866585687967e-06
    2. 'strip' → logprob: -11.750008583068848
    3. 'rstrip' → logprob: -14.500008583068848
    4. ' split' → logprob: -18.50000762939453
    5. '.split' → logprob: -18.62500762939453
    6. 'replace' → logprob: -19.00000762939453
    7. 'spl' → logprob: -19.37500762939453
    8. 'Split' → logprob: -21.50000762939453
    9. '_split' → logprob: -22.00000762939453
    10. 'read' → logprob: -22.25000762939453

Token 487: '(",' (ID: 23824)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004382059443742037
    2. '('\' → logprob: -6.129382133483887
    3. '("\' → logprob: -7.504382133483887
    4. '())' → logprob: -7.629382133483887
    5. '(',' → logprob: -7.879382133483887
    6. 'lines' → logprob: -8.254382133483887
    7. '(",' → logprob: -8.379382133483887
    8. '()))' → logprob: -9.254382133483887
    9. '(','' → logprob: -9.504382133483887
    10. '()`' → logprob: -10.004382133483887

Token 488: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7051433324813843
    2. '")' → logprob: -0.9551433324813843
    3. '       ' → logprob: -3.705143451690674
    4. '```' → logprob: -3.830143451690674
    5. '           ' → logprob: -3.955143451690674
    6. '   ' → logprob: -3.955143451690674
    7. '               ' → logprob: -4.705143451690674
    8. 'strip' → logprob: -5.580143451690674
    9. '"' → logprob: -5.830143451690674
    10. '``' → logprob: -5.830143451690674

Token 489: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04106830060482025
    2. '               ' → logprob: -4.416068077087402
    3. '           ' → logprob: -4.541068077087402
    4. '       ' → logprob: -5.041068077087402
    5. ')' → logprob: -5.541068077087402
    6. '   ' → logprob: -5.666068077087402
    7. '                   ' → logprob: -6.416068077087402
    8. ' for' → logprob: -7.666068077087402
    9. '             ' → logprob: -8.666068077087402
    10. '                 ' → logprob: -8.791068077087402

Token 490: ' l' (ID: 305)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4871305227279663
    2. 'stdin' → logprob: -1.1121305227279663
    3. 'in' → logprob: -2.987130641937256
    4. 'l' → logprob: -5.987130641937256
    5. 'lines' → logprob: -6.487130641937256
    6. ' stdin' → logprob: -7.612130641937256
    7. 'input' → logprob: -7.737130641937256
    8. '       ' → logprob: -8.362130165100098
    9. 's' → logprob: -8.612130165100098
    10. 'stdout' → logprob: -8.612130165100098

Token 491: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.11821229010820389
    2. 'ine' → logprob: -2.3682122230529785
    3. ' in' → logprob: -4.1182122230529785
    4. '   ' → logprob: -7.2432122230529785
    5. '       ' → logprob: -8.993212699890137
    6. 'ines' → logprob: -8.993212699890137
    7. 'i' → logprob: -9.118212699890137
    8. '     ' → logprob: -9.618212699890137
    9. '           ' → logprob: -10.243212699890137
    10. 'e' → logprob: -10.243212699890137

Token 492: ' is' (ID: 382)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.0007420878973789513
    2. ' stdin' → logprob: -7.250741958618164
    3. '.stdin' → logprob: -10.750741958618164
    4. '(stdin' → logprob: -11.500741958618164
    5. 'stdout' → logprob: -15.500741958618164
    6. 'next' → logprob: -16.250741958618164
    7. 'sys' → logprob: -16.250741958618164
    8. 'std' → logprob: -16.625741958618164
    9. 'input' → logprob: -17.000741958618164
    10. '   ' → logprob: -17.125741958618164

Token 493: 'lice' (ID: 7321)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.200944721698761
    2. 'lice' → logprob: -2.575944662094116
    3. 'stdin' → logprob: -2.700944662094116
    4. '.stdin' → logprob: -4.950944900512695
    5. 'ince' → logprob: -5.575944900512695
    6. '(stdin' → logprob: -5.700944900512695
    7. 'tan' → logprob: -5.950944900512695
    8. 'td' → logprob: -6.075944900512695
    9. 'tin' → logprob: -6.450944900512695
    10. 'liced' → logprob: -6.575944900512695

Token 494: '(stdin' (ID: 176594)
  Prédit: '(stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.0006149819819256663
    2. '(stdout' → logprob: -8.375615119934082
    3. '(sys' → logprob: -8.875615119934082
    4. '(line' → logprob: -9.250615119934082
    5. '(lines' → logprob: -9.875615119934082
    6. '(st' → logprob: -10.625615119934082
    7. '(iter' → logprob: -11.375615119934082
    8. '(std' → logprob: -11.500615119934082
    9. '(range' → logprob: -11.750615119934082
    10. '.stdin' → logprob: -11.875615119934082

Token 495: ',' (ID: 11)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.8112112283706665
    2. '))' → logprob: -1.0612112283706665
    3. ')))' → logprob: -2.311211109161377
    4. ')' → logprob: -3.436211109161377
    5. '.read' → logprob: -3.686211109161377
    6. '))))' → logprob: -3.936211109161377
    7. '.readline' → logprob: -4.311211109161377
    8. ').' → logprob: -5.436211109161377
    9. ')),' → logprob: -5.936211109161377
    10. '))),' → logprob: -6.311211109161377

Token 496: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.246537173457909e-06
    2. '0' → logprob: -13.000003814697266
    3. ' n' → logprob: -13.250003814697266
    4. 'd' → logprob: -15.875003814697266
    5. '(n' → logprob: -17.875003814697266
    6. '   ' → logprob: -18.000003814697266
    7. 'None' → logprob: -18.125003814697266
    8. 'range' → logprob: -18.750003814697266
    9. 'int' → logprob: -19.500003814697266
    10. '	n' → logprob: -20.125003814697266

Token 497: '))),' (ID: 85891)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.14567795395851135
    2. '))))' → logprob: -2.7706780433654785
    3. '))),' → logprob: -3.3956780433654785
    4. ')))' → logprob: -4.0206780433654785
    5. ')),' → logprob: -4.6456780433654785
    6. ')):' → logprob: -5.1456780433654785
    7. ')))),' → logprob: -5.3956780433654785
    8. ')):
' → logprob: -7.7706780433654785
    9. ')))))
' → logprob: -7.8956780433654785
    10. '))))
' → logprob: -8.64567756652832

Token 498: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07309526205062866
    2. 'n' → logprob: -3.3230953216552734
    3. '3' → logprob: -4.948095321655273
    4. '1' → logprob: -5.073095321655273
    5. 'range' → logprob: -5.448095321655273
    6. 'key' → logprob: -5.698095321655273
    7. 'repeat' → logprob: -5.698095321655273
    8. 'count' → logprob: -5.948095321655273
    9. 'max' → logprob: -6.948095321655273
    10. 'num' → logprob: -7.073095321655273

Token 499: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10486650466918945
    2. 'n' → logprob: -2.6048665046691895
    3. '1' → logprob: -4.4798665046691895
    4. '3' → logprob: -5.1048665046691895
    5. 'max' → logprob: -5.6048665046691895
    6. 'stop' → logprob: -7.3548665046691895
    7. 'count' → logprob: -7.7298665046691895
    8. '100' → logprob: -7.8548665046691895
    9. 'fill' → logprob: -7.8548665046691895
    10. 'repeat' → logprob: -7.8548665046691895

Token 500: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.14026986062526703
    2. '   ' → logprob: -3.3902697563171387
    3. '))),' → logprob: -3.3902697563171387
    4. ')),' → logprob: -3.6402697563171387
    5. ')))' → logprob: -4.640269756317139
    6. '))))' → logprob: -4.890269756317139
    7. '               ' → logprob: -5.390269756317139
    8. '       ' → logprob: -5.640269756317139
    9. '           ' → logprob: -5.640269756317139
    10. ')))),' → logprob: -6.390269756317139

Token 501: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003653645282611251
    2. 'points' → logprob: -5.628653526306152
    3. '  ' → logprob: -11.253653526306152
    4. 'h' → logprob: -11.253653526306152
    5. 'chunk' → logprob: -11.503653526306152
    6. 'd' → logprob: -12.003653526306152
    7. '	points' → logprob: -12.753653526306152
    8. 'output' → logprob: -13.253653526306152
    9. 'chunks' → logprob: -13.628653526306152
    10. '    ' → logprob: -13.753653526306152

Token 502: ' d' (ID: 272)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.06294804066419601
    2. '   ' → logprob: -3.062947988510132
    3. 'd' (adapté à ' d') → logprob: -4.937948226928711
    4. 'points' → logprob: -5.437948226928711
    5. 'output' → logprob: -6.312948226928711
    6. 'print' → logprob: -7.687948226928711
    7. 'result' → logprob: -8.187948226928711
    8. 'r' → logprob: -10.562948226928711
    9. 'a' → logprob: -10.937948226928711
    10. 'c' → logprob: -11.187948226928711

Token 503: '.sort' (ID: 19551)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.017081163823604584
    2. ' =' → logprob: -4.392081260681152
    3. '=[]' → logprob: -5.892081260681152
    4. '.append' → logprob: -7.142081260681152
    5. '=list' → logprob: -8.267081260681152
    6. '   ' → logprob: -8.517081260681152
    7. '=d' → logprob: -9.267081260681152
    8. '=a' → logprob: -9.642081260681152
    9. '=`' → logprob: -9.892081260681152
    10. '=np' → logprob: -10.017081260681152

Token 504: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10641036927700043
    2. '(' → logprob: -2.481410264968872
    3. 'd' → logprob: -4.231410503387451
    4. '(d' → logprob: -6.981410503387451
    5. '(...)' → logprob: -7.856410503387451
    6. '(lambda' → logprob: -7.981410503387451
    7. '()`' → logprob: -8.606410026550293
    8. '([]' → logprob: -8.981410026550293
    9. '(_)' → logprob: -9.481410026550293
    10. '(.)' → logprob: -9.731410026550293

Token 505: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.4744844436645508
    2. '=' → logprob: -0.9744844436645508
    3. '=len' → logprob: -9.59948444366455
    4. '=list' → logprob: -9.97448444366455
    5. '=_' → logprob: -9.97448444366455
    6. '=dict' → logprob: -10.34948444366455
    7. '=(' → logprob: -10.72448444366455
    8. '   ' → logprob: -10.72448444366455
    9. '=item' → logprob: -10.84948444366455
    10. '=d' → logprob: -11.22448444366455

Token 506: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2584203779697418
    2. ':' → logprob: -1.5084203481674194
    3. 'float' → logprob: -6.258420467376709
    4. 'd' → logprob: -7.258420467376709
    5. 'lambda' → logprob: -7.258420467376709
    6. 'f' → logprob: -7.633420467376709
    7. 'tuple' → logprob: -7.758420467376709
    8. 'k' → logprob: -7.883420467376709
    9. ':list' → logprob: -8.00841999053955
    10. 's' → logprob: -8.13341999053955

Token 507: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.869017852295656e-06
    2. ':x' → logprob: -12.000006675720215
    3. ':key' → logprob: -15.500006675720215
    4. '   ' → logprob: -15.625006675720215
    5. '=lambda' → logprob: -16.87500762939453
    6. '):' → logprob: -17.00000762939453
    7. ':[' → logprob: -17.00000762939453
    8. ':return' → logprob: -17.12500762939453
    9. '[' → logprob: -17.62500762939453
    10. ':list' → logprob: -17.75000762939453

Token 508: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001613459608051926
    2. '(x' → logprob: -8.750161170959473
    3. ' x' → logprob: -12.750161170959473
    4. '(' → logprob: -17.75016212463379
    5. '[x' → logprob: -19.12516212463379
    6. 'float' → logprob: -19.37516212463379
    7. '	x' → logprob: -19.87516212463379
    8. '{x' → logprob: -20.12516212463379
    9. '-x' → logprob: -20.37516212463379
    10. '$x' → logprob: -20.37516212463379

Token 509: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '```' → logprob: -18.25
    3. '\[' → logprob: -18.375
    4. '[::-' → logprob: -19.875
    5. '   ' → logprob: -20.625
    6. '(' → logprob: -20.75
    7. '0' → logprob: -20.75
    8. '`' → logprob: -20.875
    9. ')' → logprob: -21.25
    10. '<' → logprob: -21.875

Token 510: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015096203424036503
    2. '1' → logprob: -6.501509666442871
    3. '[' → logprob: -11.876509666442871
    4. ' ' → logprob: -16.251508712768555
    5. '   ' → logprob: -16.501508712768555
    6. '```' → logprob: -17.126508712768555
    7. '2' → logprob: -17.626508712768555
    8. '(' → logprob: -17.751508712768555
    9. '<' → logprob: -17.876508712768555
    10. '`' → logprob: -18.001508712768555

Token 511: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0016733952797949314
    2. ']' → logprob: -7.876673221588135
    3. '],' → logprob: -7.876673221588135
    4. '])[' → logprob: -7.876673221588135
    5. '])
' → logprob: -8.251673698425293
    6. ']))' → logprob: -9.376673698425293
    7. '][' → logprob: -9.626673698425293
    8. ']);' → logprob: -10.126673698425293
    9. '])

' → logprob: -10.751673698425293
    10. ']])' → logprob: -11.251673698425293

Token 512: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027267748955637217
    2. 'h' → logprob: -6.0027265548706055
    3. 'd' → logprob: -9.502726554870605
    4. 'points' → logprob: -9.502726554870605
    5. 'output' → logprob: -10.252726554870605
    6. 'r' → logprob: -10.877726554870605
    7. 'a' → logprob: -11.752726554870605
    8. 'p' → logprob: -11.877726554870605
    9. 'result' → logprob: -12.127726554870605
    10. '  ' → logprob: -12.377726554870605

Token 513: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.0280744768679142
    2. 'points' → logprob: -4.903074264526367
    3. '   ' → logprob: -5.153074264526367
    4. 'output' → logprob: -5.528074264526367
    5. 'p' → logprob: -5.653074264526367
    6. 'd' → logprob: -5.778074264526367
    7. 'c' → logprob: -6.778074264526367
    8. 'r' → logprob: -7.403074264526367
    9. 'a' → logprob: -7.528074264526367
    10. 'result' → logprob: -7.778074264526367

Token 514: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4563042223453522
    2. '   ' → logprob: -1.7063041925430298
    3. '=' → logprob: -1.8313041925430298
    4. 'ull' → logprob: -4.58130407333374
    5. '  ' → logprob: -5.20630407333374
    6. '=d' → logprob: -5.33130407333374
    7. '=h' → logprob: -5.95630407333374
    8. '    ' → logprob: -7.70630407333374
    9. ' ' → logprob: -7.83130407333374
    10. '=u' → logprob: -8.456304550170898

Token 515: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7898811101913452
    2. ' =' → logprob: -0.9148811101913452
    3. '   ' → logprob: -2.0398812294006348
    4. '=h' → logprob: -4.664881229400635
    5. 'd' → logprob: -6.539881229400635
    6. 'h' → logprob: -6.539881229400635
    7. '  ' → logprob: -6.664881229400635
    8. '=d' → logprob: -7.414881229400635
    9. ' ' → logprob: -7.539881229400635
    10. '    ' → logprob: -9.414880752563477

Token 516: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.981667537620524e-06
    2. ' hull' → logprob: -13.250001907348633
    3. 'hul' → logprob: -16.625001907348633
    4. '   ' → logprob: -19.125001907348633
    5. '	h' → logprob: -19.250001907348633
    6. 'hud' → logprob: -19.750001907348633
    7. 'chunk' → logprob: -19.875001907348633
    8. 'hill' → logprob: -20.250001907348633
    9. '[h' → logprob: -20.375001907348633
    10. '<h' → logprob: -20.625001907348633

Token 517: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -6.988221684878226e-06
    2. '(' → logprob: -12.125006675720215
    3. '(points' → logprob: -14.500006675720215
    4. '(h' → logprob: -14.625006675720215
    5. '(b' → logprob: -15.625006675720215
    6. '   ' → logprob: -16.50000762939453
    7. 'd' → logprob: -16.75000762939453
    8. '(e' → logprob: -16.75000762939453
    9. '(c' → logprob: -17.12500762939453
    10. '(f' → logprob: -17.37500762939453

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013512482109945267
    2. ',d' → logprob: -9.37513542175293
    3. ')' → logprob: -10.50013542175293
    4. '[' → logprob: -11.87513542175293
    5. 'd' → logprob: -11.87513542175293
    6. '   ' → logprob: -13.00013542175293
    7. '[d' → logprob: -13.00013542175293
    8. ' ,' → logprob: -13.87513542175293
    9. '),' → logprob: -14.12513542175293
    10. '[:' → logprob: -14.37513542175293

Token 519: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -4.429896944202483e-05
    2. ''r' → logprob: -10.625043869018555
    3. ' "' → logprob: -12.000043869018555
    4. '"h' → logprob: -12.625043869018555
    5. '"x' → logprob: -12.875043869018555
    6. '"user' → logprob: -13.500043869018555
    7. '"text' → logprob: -13.625043869018555
    8. '"d' → logprob: -14.000043869018555
    9. '“' → logprob: -14.000043869018555
    10. ''' → logprob: -14.750043869018555

Token 520: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: 0.0
    2. ' r' → logprob: -16.75
    3. 'l' → logprob: -17.625
    4. '"' → logprob: -20.875
    5. 'h' → logprob: -22.625
    6. 'R' → logprob: -23.125
    7. '	r' → logprob: -23.375
    8. 'g' → logprob: -24.0
    9. '_r' → logprob: -24.0
    10. 'd' → logprob: -24.125

Token 521: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -2.2007883671903983e-05
    2. '")
' → logprob: -12.125021934509277
    3. '}")' → logprob: -12.375021934509277
    4. '"' → logprob: -12.500021934509277
    5. ')")' → logprob: -13.000021934509277
    6. '')' → logprob: -13.500021934509277
    7. ')' → logprob: -13.500021934509277
    8. '"))' → logprob: -14.250021934509277
    9. '\")' → logprob: -14.375021934509277
    10. '```' → logprob: -14.750021934509277

Token 522: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032038541976362467
    2. 'h' → logprob: -5.753203868865967
    3. 'd' → logprob: -11.253203392028809
    4. 'print' → logprob: -11.378203392028809
    5. '  ' → logprob: -13.753203392028809
    6. ' h' → logprob: -15.128203392028809
    7. 'output' → logprob: -15.878203392028809
    8. '       ' → logprob: -16.253204345703125
    9. '    ' → logprob: -16.378204345703125
    10. '```' → logprob: -16.753204345703125

Token 523: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.0007104054093360901
    2. '   ' → logprob: -7.250710487365723
    3. ' h' → logprob: -15.250710487365723
    4. 'print' → logprob: -15.375710487365723
    5. '	h' → logprob: -18.750709533691406
    6. 'd' → logprob: -19.000709533691406
    7. '  ' → logprob: -20.000709533691406
    8. '<h' → logprob: -20.125709533691406
    9. 'output' → logprob: -21.000709533691406
    10. '_h' → logprob: -21.125709533691406

Token 524: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12972722947597504
    2. '   ' → logprob: -2.7547271251678467
    3. ' =' → logprob: -3.5047271251678467
    4. '_' → logprob: -4.504727363586426
    5. '=' → logprob: -4.629727363586426
    6. '2' → logprob: -6.504727363586426
    7. '_output' → logprob: -6.629727363586426
    8. '  ' → logprob: -6.879727363586426
    9. '    ' → logprob: -7.379727363586426
    10. ' ' → logprob: -7.629727363586426

Token 525: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06170826777815819
    2. '   ' → logprob: -3.3117082118988037
    3. ' =' → logprob: -3.8117082118988037
    4. '=h' → logprob: -6.686708450317383
    5. '  ' → logprob: -11.436708450317383
    6. '=d' → logprob: -12.061708450317383
    7. ' ' → logprob: -12.436708450317383
    8. '    ' → logprob: -12.686708450317383
    9. '=`' → logprob: -13.561708450317383
    10. '=f' → logprob: -14.436708450317383

Token 526: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.6240566083070007e-06
    2. ' hull' → logprob: -13.375001907348633
    3. 'hul' → logprob: -18.250001907348633
    4. 'chunk' → logprob: -19.500001907348633
    5. '   ' → logprob: -19.625001907348633
    6. 'hill' → logprob: -19.875001907348633
    7. 'Hull' → logprob: -19.875001907348633
    8. '	h' → logprob: -20.375001907348633
    9. 'ch' → logprob: -20.750001907348633
    10. '<h' → logprob: -21.000001907348633

Token 527: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.75
    3. '(b' → logprob: -18.125
    4. '(h' → logprob: -18.75
    5. '(c' → logprob: -18.875
    6. '(e' → logprob: -19.25
    7. '(de' → logprob: -20.125
    8. '(a' → logprob: -20.375
    9. '(f' → logprob: -20.625
    10. '   ' → logprob: -21.375

Token 528: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.688212614681106e-05
    2. '[::-' → logprob: -11.000017166137695
    3. ',"' → logprob: -16.250017166137695
    4. '[:' → logprob: -19.625017166137695
    5. ' ,' → logprob: -19.750017166137695
    6. ',d' → logprob: -20.000017166137695
    7. '[:-' → logprob: -20.000017166137695
    8. '.reverse' → logprob: -20.375017166137695
    9. '[' → logprob: -20.875017166137695
    10. '[],' → logprob: -21.250017166137695

Token 529: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0008285674848593771
    2. ' "' → logprob: -7.500828742980957
    3. '"L' → logprob: -8.375828742980957
    4. '"h' → logprob: -11.000828742980957
    5. '“' → logprob: -11.750828742980957
    6. '"d' → logprob: -12.500828742980957
    7. '"log' → logprob: -12.875828742980957
    8. '"x' → logprob: -13.000828742980957
    9. '"a' → logprob: -13.250828742980957
    10. '"text' → logprob: -13.375828742980957

Token 530: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.981667537620524e-06
    2. '"' → logprob: -13.250001907348633
    3. ' l' → logprob: -16.375001907348633
    4. '"L' → logprob: -16.625001907348633
    5. 'r' → logprob: -19.000001907348633
    6. 'h' → logprob: -19.250001907348633
    7. 'L' → logprob: -19.500001907348633
    8. ''l' → logprob: -19.750001907348633
    9. '.l' → logprob: -20.125001907348633
    10. '_l' → logprob: -20.250001907348633

Token 531: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.004047886934131384
    2. '}")' → logprob: -6.254047870635986
    3. ')")' → logprob: -6.379047870635986
    4. '.")' → logprob: -8.754048347473145
    5. '")
' → logprob: -9.129048347473145
    6. ')' → logprob: -9.754048347473145
    7. '"' → logprob: -11.254048347473145
    8. '+")' → logprob: -11.254048347473145
    9. 'h' → logprob: -11.754048347473145
    10. '”)' → logprob: -12.004048347473145

Token 532: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028437452856451273
    2. 'print' → logprob: -5.877843856811523
    3. 'h' → logprob: -10.377843856811523
    4. 'd' → logprob: -12.252843856811523
    5. '```' → logprob: -13.627843856811523
    6. '  ' → logprob: -14.127843856811523
    7. 'output' → logprob: -14.502843856811523
    8. 'result' → logprob: -16.002843856811523
    9. '       ' → logprob: -16.502843856811523
    10. '    ' → logprob: -16.627843856811523

Token 533: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.942633330821991
    2. 'h' → logprob: -1.1926333904266357
    3. '   ' → logprob: -1.4426333904266357
    4. 'output' → logprob: -2.8176333904266357
    5. 'd' → logprob: -4.567633152008057
    6. 'result' → logprob: -7.942633152008057
    7. 'return' → logprob: -9.317633628845215
    8. '#' → logprob: -11.442633628845215
    9. 'out' → logprob: -11.692633628845215
    10. 'import' → logprob: -11.942633628845215

Token 534: '(len' (ID: 14990)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14616245031356812
    2. '(h' → logprob: -2.896162509918213
    3. '(' → logprob: -3.396162509918213
    4. '("' → logprob: -4.021162509918213
    5. '(f' → logprob: -5.021162509918213
    6. '('' → logprob: -5.271162509918213
    7. '(d' → logprob: -5.396162509918213
    8. '   ' → logprob: -6.021162509918213
    9. '("")' → logprob: -6.021162509918213
    10. '('.')' → logprob: -6.271162509918213

Token 535: '(d' (ID: 2572)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00011903966515092179
    2. '(d' → logprob: -9.37511920928955
    3. '(output' → logprob: -10.87511920928955
    4. '(' → logprob: -12.25011920928955
    5. '(len' → logprob: -12.37511920928955
    6. '(print' → logprob: -13.87511920928955
    7. '(H' → logprob: -14.12511920928955
    8. '(a' → logprob: -14.62511920928955
    9. '(b' → logprob: -14.87511920928955
    10. '(f' → logprob: -15.12511920928955

Token 536: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.13738404214382172
    2. ')' → logprob: -2.1373839378356934
    3. '),' → logprob: -4.637383937835693
    4. 'd' → logprob: -8.637384414672852
    5. ')d' → logprob: -8.762384414672852
    6. ')-' → logprob: -8.887384414672852
    7. '))
' → logprob: -9.012384414672852
    8. '));' → logprob: -11.137384414672852
    9. '))-' → logprob: -11.262384414672852
    10. ')),' → logprob: -11.262384414672852

Token 537: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05580052360892296
    2. '))' → logprob: -2.930800437927246
    3. ')-' → logprob: -8.055800437927246
    4. '   ' → logprob: -8.805800437927246
    5. 'h' → logprob: -9.055800437927246
    6. '),' → logprob: -9.555800437927246
    7. 'd' → logprob: -9.930800437927246
    8. ')d' → logprob: -9.930800437927246
    9. ')`' → logprob: -10.180800437927246
    10. '-' → logprob: -10.805800437927246

Token 538: ' (' (ID: 350)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.06208173185586929
    2. '(len' → logprob: -2.812081813812256
    3. ' len' → logprob: -9.187081336975098
    4. '=len' → logprob: -12.562081336975098
    5. '(' → logprob: -12.812081336975098
    6. '2' → logprob: -13.062081336975098
    7. 'h' → logprob: -14.437081336975098
    8. '	len' → logprob: -14.437081336975098
    9. 'print' → logprob: -14.562081336975098
    10. '(h' → logprob: -15.062081336975098

Token 539: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.001218451652675867
    2. '(len' → logprob: -6.751218318939209
    3. ' len' → logprob: -10.001218795776367
    4. '   ' → logprob: -13.001218795776367
    5. '	len' → logprob: -15.251218795776367
    6. '=len' → logprob: -15.376218795776367
    7. '2' → logprob: -16.626218795776367
    8. '.len' → logprob: -17.001218795776367
    9. '       ' → logprob: -17.876218795776367
    10. 'length' → logprob: -17.876218795776367

Token 540: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -6.704273118884885e-07
    2. '(d' → logprob: -14.500000953674316
    3. '(' → logprob: -17.25
    4. '(len' → logprob: -18.0
    5. '(print' → logprob: -18.875
    6. '(a' → logprob: -19.125
    7. '(output' → logprob: -19.125
    8. '(b' → logprob: -19.25
    9. '(H' → logprob: -19.375
    10. '(f' → logprob: -19.5

Token 541: '1' (ID: 16)
  Prédit: 'ull'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.004630553536117077
    2. 'ulls' → logprob: -6.0046305656433105
    3. '1' → logprob: -7.0046305656433105
    4. '```' → logprob: -7.8796305656433105
    5. '   ' → logprob: -8.004630088806152
    6. '`' → logprob: -9.629630088806152
    7. '    ' → logprob: -10.254630088806152
    8. 'ULL' → logprob: -10.629630088806152
    9. '  ' → logprob: -10.879630088806152
    10. '\' → logprob: -11.004630088806152

Token 542: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4259644558478612e-05
    2. ')+' → logprob: -11.250014305114746
    3. '+' → logprob: -14.625014305114746
    4. '+)' → logprob: -15.625014305114746
    5. '）' → logprob: -15.750014305114746
    6. ')-' → logprob: -15.875014305114746
    7. '))' → logprob: -16.62501335144043
    8. '')' → logprob: -17.00001335144043
    9. ' +' → logprob: -17.12501335144043
    10. '`' → logprob: -17.50001335144043

Token 543: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00013643606507685035
    2. 'len' → logprob: -9.000136375427246
    3. ' h' → logprob: -11.250136375427246
    4. ' len' → logprob: -16.750137329101562
    5. '   ' → logprob: -18.250137329101562
    6. '	h' → logprob: -19.125137329101562
    7. 'l' → logprob: -20.000137329101562
    8. '.h' → logprob: -21.000137329101562
    9. '_h' → logprob: -21.250137329101562
    10. 'length' → logprob: -21.750137329101562

Token 544: '2' (ID: 17)
  Prédit: 'ull'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.7313340902328491
    2. '1' → logprob: -1.6063340902328491
    3. '2' → logprob: -1.8563340902328491
    4. '   ' → logprob: -2.8563342094421387
    5. '```' → logprob: -2.8563342094421387
    6. '`' → logprob: -4.856334209442139
    7. '``' → logprob: -5.856334209442139
    8. '_' → logprob: -5.918834209442139
    9. '#' → logprob: -5.981334209442139
    10. '  ' → logprob: -6.106334209442139

Token 545: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010008628305513412
    2. ')-' → logprob: -9.375100135803223
    3. ')/' → logprob: -11.750100135803223
    4. '))' → logprob: -12.750100135803223
    5. ')//' → logprob: -13.125100135803223
    6. '[' → logprob: -13.500100135803223
    7. ' )' → logprob: -14.750100135803223
    8. '[:-' → logprob: -16.000099182128906
    9. '}' → logprob: -16.250099182128906
    10. '）' → logprob: -16.625099182128906

Token 546: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3686307370662689
    2. '//' → logprob: -1.2436307668685913
    3. ')' → logprob: -3.9936306476593018
    4. ' -' → logprob: -6.868630886077881
    5. ' //' → logprob: -8.243630409240723
    6. '/' → logprob: -9.618630409240723
    7. '[' → logprob: -9.993630409240723
    8. ')//' → logprob: -10.118630409240723
    9. '>>' → logprob: -10.618630409240723
    10. '))' → logprob: -10.743630409240723

Token 547: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0015339049277827144
    2. '1' → logprob: -6.8765339851379395
    3. ' len' → logprob: -7.7515339851379395
    4. '(len' → logprob: -9.626533508300781
    5. 'h' → logprob: -13.751533508300781
    6. '2' → logprob: -13.876533508300781
    7. ' ' → logprob: -14.376533508300781
    8. '   ' → logprob: -14.501533508300781
    9. '	len' → logprob: -14.501533508300781
    10. 'n' → logprob: -15.001533508300781

Token 548: '2' (ID: 17)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.927930654550437e-05
    2. '(len' → logprob: -11.375029563903809
    3. ' len' → logprob: -11.375029563903809
    4. '1' → logprob: -12.125029563903809
    5. 'h' → logprob: -14.375029563903809
    6. 'length' → logprob: -17.125028610229492
    7. '	len' → logprob: -17.125028610229492
    8. '=len' → logprob: -17.125028610229492
    9. '.len' → logprob: -17.250028610229492
    10. '2' → logprob: -17.625028610229492

Token 549: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00015598179015796632
    2. ')' → logprob: -8.87515640258789
    3. '*' → logprob: -12.50015640258789
    4. ' ))' → logprob: -12.75015640258789
    5. '))
' → logprob: -12.87515640258789
    6. ')))' → logprob: -13.00015640258789
    7. '-' → logprob: -13.62515640258789
    8. 'len' → logprob: -14.50015640258789
    9. '));' → logprob: -14.87515640258789
    10. '))/' → logprob: -15.00015640258789


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 547
Tokens correctement prédits (1ère position, stricte): 188
Tokens correctement prédits (1ère position, avec adaptation): 198
Tokens correctement prédits (top 10): 411
Précision stricte (1ère position): 34.37%
Précision adaptée (1ère position): 36.20%
Précision (top 10): 75.14%
================================================================================
