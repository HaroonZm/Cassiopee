================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    return int(input())

def read_values():
    return list(map(int, input().split()))

def create_empty_dict():
    return {}

def update_dict_count(d, v):
    if v not in d:
        d[v] = 1
    else:
        d[v] += 1

def process_even_indices(V, v1):
    for v in V[::2]:
        update_dict_count(v1, v)

def process_odd_indices(V, v2):
    for v in V[1::2]:
        update_dict_count(v2, v)

def get_sorted_keys_by_values(d):
    return sorted(d, key=lambda x: -d[x])

def get_top_keys(a, count):
    return a[:count]

def add_result_if_distinct(r, k1, k2, N, v1, v2):
    if k1 != k2:
        r.append(N - v1[k1] - v2[k2])

def ensure_result_non_empty(r, N):
    if not r:
        r.append(N // 2)

def compute_min_result(r):
    return min(r)

def main_logic():
    N = read_input()
    V = read_values()
    
    v1 = create_empty_dict()
    v2 = create_empty_dict()
    
    process_even_indices(V, v1)
    process_odd_indices(V, v2)
    
    a1 = get_sorted_keys_by_values(v1)
    a2 = get_sorted_keys_by_values(v2)
    
    r = []
    top_a1 = get_top_keys(a1, 2)
    top_a2 = get_top_keys(a2, 2)
    for k1 in top_a1:
        for k2 in top_a2:
            add_result_if_distinct(r, k1, k2, N, v1, v2)
    
    ensure_result_non_empty(r, N)
    
    print(compute_min_result(r))

main_logic()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036801211535930634
    2. '_' → logprob: -6.503680229187012
    3. '():' → logprob: -6.503680229187012
    4. '(:' → logprob: -7.753680229187012
    5. '(_:' → logprob: -9.128680229187012
    6. '```' → logprob: -10.128680229187012
    7. ' (' → logprob: -10.753680229187012
    8. '(_' → logprob: -10.878680229187012
    9. ':' → logprob: -10.878680229187012
    10. '_:' → logprob: -12.253680229187012

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.988785445690155
    2. '\' → logprob: -1.2387855052947998
    3. '\n' → logprob: -1.3637855052947998
    4. '   ' → logprob: -3.1137855052948
    5. '    
' → logprob: -4.863785266876221
    6. '
' → logprob: -5.113785266876221
    7. ' 
' → logprob: -5.613785266876221
    8. '``' → logprob: -5.863785266876221
    9. ':' → logprob: -6.113785266876221
    10. ''\' → logprob: -6.613785266876221

Token 5: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44198349118232727
    2. '```' → logprob: -2.066983461380005
    3. 'return' (adapté à ' return') → logprob: -2.691983461380005
    4. 'input' → logprob: -3.441983461380005
    5. '    ' → logprob: -3.441983461380005
    6. 'r' → logprob: -3.566983461380005
    7. '\' → logprob: -4.191983699798584
    8. 'x' → logprob: -4.316983699798584
    9. '       ' → logprob: -4.691983699798584
    10. '`' → logprob: -5.191983699798584

Token 6: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15119515359401703
    2. '"' → logprob: -2.9011950492858887
    3. 'input' → logprob: -3.1511950492858887
    4. ' input' → logprob: -3.6511950492858887
    5. ''' → logprob: -4.276195049285889
    6. '  ' → logprob: -6.901195049285889
    7. '(input' → logprob: -8.151195526123047
    8. ' []' → logprob: -8.276195526123047
    9. ' "' → logprob: -8.776195526123047
    10. '(' → logprob: -9.026195526123047

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00037561915814876556
    2. '('' → logprob: -8.625375747680664
    3. ''' → logprob: -10.000375747680664
    4. '```' → logprob: -10.375375747680664
    5. '32' → logprob: -11.250375747680664
    6. ' (' → logprob: -11.250375747680664
    7. '("("' → logprob: -11.250375747680664
    8. '40' → logprob: -11.250375747680664
    9. '(input' → logprob: -11.750375747680664
    10. '<|end|>' → logprob: -11.875375747680664

Token 8: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.23298180103302002
    2. '(' → logprob: -1.85798180103302
    3. '()' → logprob: -3.7329816818237305
    4. ')' → logprob: -3.9829816818237305
    5. '()))' → logprob: -4.9829816818237305
    6. '))' → logprob: -6.9829816818237305
    7. '(()' → logprob: -7.6079816818237305
    8. ' ())' → logprob: -8.23298168182373
    9. '('' → logprob: -8.48298168182373
    10. '(""))' → logprob: -8.60798168182373

Token 9: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7037203907966614
    2. '\n' → logprob: -1.5787203311920166
    3. '#' → logprob: -2.7037203311920166
    4. '
' → logprob: -2.8287203311920166
    5. '```' → logprob: -2.8287203311920166
    6. '<|end|>' → logprob: -3.4537203311920166
    7. '(' → logprob: -4.703720569610596
    8. '\' → logprob: -4.953720569610596
    9. '

' → logprob: -5.078720569610596
    10. 'newline' → logprob: -5.078720569610596

Token 10: ' read' (ID: 1729)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.31437060236930847
    2. ' write' → logprob: -2.439370632171631
    3. ' compute' → logprob: -2.814370632171631
    4. ' process' → logprob: -3.064370632171631
    5. ' main' → logprob: -3.564370632171631
    6. ' add' → logprob: -3.814370632171631
    7. ' factorial' → logprob: -5.064370632171631
    8. ' sum' → logprob: -5.064370632171631
    9. ' read' → logprob: -5.689370632171631
    10. ' ' → logprob: -5.689370632171631

Token 11: '_values' (ID: 20393)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007796602323651314
    2. '_input' → logprob: -5.132796764373779
    3. '_line' → logprob: -6.632796764373779
    4. '_output' → logprob: -8.507796287536621
    5. '_string' → logprob: -9.132796287536621
    6. '(' → logprob: -9.882796287536621
    7. '_data' → logprob: -10.257796287536621
    8. '_value' → logprob: -10.757796287536621
    9. ' _' → logprob: -11.007796287536621
    10. '()' → logprob: -11.257796287536621

Token 12: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005759791936725378
    2. '()' → logprob: -6.1307597160339355
    3. '_' → logprob: -6.5057597160339355
    4. '("("' → logprob: -7.2557597160339355
    5. '```' → logprob: -7.7557597160339355
    6. '():' → logprob: -8.380760192871094
    7. ' (' → logprob: -9.380760192871094
    8. '(_)' → logprob: -9.630760192871094
    9. '(()' → logprob: -9.630760192871094
    10. '(_' → logprob: -10.005760192871094

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02264232374727726
    2. '    ' → logprob: -4.522642135620117
    3. '[' → logprob: -5.647642135620117
    4. '[]' → logprob: -6.647642135620117
    5. '    
' → logprob: -6.647642135620117
    6. '       ' → logprob: -6.897642135620117
    7. '(' → logprob: -7.022642135620117
    8. '()' → logprob: -7.272642135620117
    9. ' return' → logprob: -7.397642135620117
    10. '```' → logprob: -7.772642135620117

Token 14: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053126025944948196
    2. 'values' → logprob: -3.553126096725464
    3. 'return' (adapté à ' return') → logprob: -4.178125858306885
    4. '[]' → logprob: -5.678125858306885
    5. ' values' → logprob: -6.178125858306885
    6. ' return' → logprob: -6.678125858306885
    7. '[' → logprob: -7.178125858306885
    8. 'value' → logprob: -9.803126335144043
    9. ' []' → logprob: -10.303126335144043
    10. 'result' → logprob: -10.428126335144043

Token 15: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.16287517547607422
    2. 'list' → logprob: -2.412875175476074
    3. ' [' → logprob: -3.287875175476074
    4. '[' → logprob: -4.787875175476074
    5. ' []' → logprob: -5.412875175476074
    6. '[list' → logprob: -5.412875175476074
    7. ' map' → logprob: -6.162875175476074
    8. '[int' → logprob: -6.537875175476074
    9. '[input' → logprob: -6.912875175476074
    10. ' ' → logprob: -7.037875175476074

Token 16: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.041806910187006
    2. '(map' → logprob: -3.916806936264038
    3. '(int' → logprob: -4.291806697845459
    4. '(input' → logprob: -5.166806697845459
    5. '(range' → logprob: -6.541806697845459
    6. '(eval' → logprob: -9.166807174682617
    7. '(

' → logprob: -10.791807174682617
    8. ' (' → logprob: -11.416807174682617
    9. '(
' → logprob: -11.791807174682617
    10. '(list' → logprob: -12.041807174682617

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001155697274953127
    2. '(' → logprob: -7.376155853271484
    3. 'int' → logprob: -7.626155853271484
    4. '<int' → logprob: -11.376155853271484
    5. ' int' → logprob: -11.626155853271484
    6. '=int' → logprob: -12.126155853271484
    7. ')' → logprob: -12.626155853271484
    8. ',int' → logprob: -12.751155853271484
    9. '   ' → logprob: -13.001155853271484
    10. '(input' → logprob: -13.126155853271484

Token 18: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.24151472747325897
    2. ',input' → logprob: -1.9915146827697754
    3. ',' → logprob: -2.8665146827697754
    4. 'input' → logprob: -3.9915146827697754
    5. ' input' → logprob: -7.241514682769775
    6. '(' → logprob: -7.366514682769775
    7. ')' → logprob: -7.741514682769775
    8. '))' → logprob: -8.116515159606934
    9. '=input' → logprob: -8.366515159606934
    10. '),' → logprob: -8.616515159606934

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04862188547849655
    2. ' input' → logprob: -3.048621892929077
    3. '(input' → logprob: -11.298622131347656
    4. '   ' → logprob: -11.548622131347656
    5. ',input' → logprob: -12.423622131347656
    6. ' ' → logprob: -12.798622131347656
    7. '	input' → logprob: -13.298622131347656
    8. '=input' → logprob: -13.923622131347656
    9. '<input' → logprob: -14.173622131347656
    10. ')' → logprob: -14.298622131347656

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00041863700607791543
    2. '()' → logprob: -8.125418663024902
    3. '()))' → logprob: -9.125418663024902
    4. '())' → logprob: -12.125418663024902
    5. ' ().' → logprob: -12.875418663024902
    6. '())))' → logprob: -12.875418663024902
    7. '()));' → logprob: -13.875418663024902
    8. '))' → logprob: -13.875418663024902
    9. '()
' → logprob: -14.750418663024902
    10. ')' → logprob: -15.375418663024902

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009177703177556396
    2. 'strip' → logprob: -7.000917911529541
    3. 'rstrip' → logprob: -12.125917434692383
    4. ' split' → logprob: -14.000917434692383
    5. 'spl' → logprob: -18.000917434692383
    6. '(split' → logprob: -18.250917434692383
    7. ')' → logprob: -18.750917434692383
    8. ' ' → logprob: -19.125917434692383
    9. 's' → logprob: -19.375917434692383
    10. '.split' → logprob: -19.625917434692383

Token 22: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.025558385998010635
    2. '()' → logprob: -4.1505584716796875
    3. '())))' → logprob: -5.4005584716796875
    4. '))' → logprob: -5.9005584716796875
    5. '())' → logprob: -6.2755584716796875
    6. ')))' → logprob: -8.150558471679688
    7. '(' → logprob: -10.650558471679688
    8. ')' → logprob: -11.525558471679688
    9. '()))
' → logprob: -11.650558471679688
    10. '()));' → logprob: -12.525558471679688

Token 23: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010362817905843258
    2. 'd' → logprob: -4.76036262512207
    3. '
' → logprob: -7.51036262512207
    4. 'n' → logprob: -7.51036262512207
    5. '

' → logprob: -7.63536262512207
    6. '\' → logprob: -9.88536262512207
    7. '#' → logprob: -10.51036262512207
    8. 'de' → logprob: -11.01036262512207
    9. '```' → logprob: -11.63536262512207
    10. '\n' → logprob: -11.76036262512207

Token 24: ' create' (ID: 2501)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3238999843597412
    2. 'main' → logprob: -2.448899984359741
    3. ' solve' → logprob: -2.448899984359741
    4. 'solve' → logprob: -2.573899984359741
    5. 'calculate' → logprob: -4.82390022277832
    6. ' calculate' → logprob: -4.94890022277832
    7. 'process' → logprob: -5.69890022277832
    8. ' process' → logprob: -5.82390022277832
    9. ' factorial' → logprob: -6.69890022277832
    10. ' compute' → logprob: -7.32390022277832

Token 25: '_empty' (ID: 35051)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.661270260810852
    2. '_' → logprob: -0.786270260810852
    3. '_list' → logprob: -4.9112701416015625
    4. ' _' → logprob: -5.7862701416015625
    5. '_matrix' → logprob: -6.0362701416015625
    6. '_table' → logprob: -6.1612701416015625
    7. '_function' → logprob: -6.1612701416015625
    8. '_tree' → logprob: -6.6612701416015625
    9. '_stack' → logprob: -6.6612701416015625
    10. '_data' → logprob: -7.1612701416015625

Token 26: '_dict' (ID: 11295)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1937517523765564
    2. '_array' → logprob: -2.318751811981201
    3. '_list' → logprob: -2.693751811981201
    4. '_matrix' → logprob: -5.068751811981201
    5. '_table' → logprob: -7.193751811981201
    6. '(' → logprob: -7.693751811981201
    7. '_(' → logprob: -7.818751811981201
    8. ' _' → logprob: -8.193751335144043
    9. '_line' → logprob: -8.443751335144043
    10. '_space' → logprob: -8.443751335144043

Token 27: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.053633105009794235
    2. '()' → logprob: -3.053633213043213
    3. '(' → logprob: -5.928633213043213
    4. '_' → logprob: -6.803633213043213
    5. ' ()' → logprob: -7.678633213043213
    6. ' ():' → logprob: -8.428632736206055
    7. '():
' → logprob: -9.428632736206055
    8. 'ion' → logprob: -9.678632736206055
    9. '()">' → logprob: -10.303632736206055
    10. '_a' → logprob: -11.053632736206055

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07565032690763474
    2. '{}' → logprob: -2.825650215148926
    3. ' {}' → logprob: -4.950650215148926
    4. '()' → logprob: -5.825650215148926
    5. ' return' → logprob: -7.200650215148926
    6. 'return' → logprob: -7.325650215148926
    7. '    ' → logprob: -7.575650215148926
    8. '    
' → logprob: -8.200650215148926
    9. ' ' → logprob: -8.450650215148926
    10. '<|end|>' → logprob: -8.575650215148926

Token 29: ' return' (ID: 622)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.18067769706249237
    2. '{}' → logprob: -2.055677652359009
    3. ' return' → logprob: -4.055677890777588
    4. '   ' → logprob: -4.430677890777588
    5. 'return' (adapté à ' return') → logprob: -5.055677890777588
    6. ' {}\' → logprob: -7.805677890777588
    7. '    ' → logprob: -7.930677890777588
    8. ' ' → logprob: -8.05567741394043
    9. ' {})' → logprob: -8.43067741394043
    10. ' {}
' → logprob: -8.68067741394043

Token 30: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.023343078792095184
    2. ' {}' → logprob: -3.773343086242676
    3. 'dict' → logprob: -9.398343086242676
    4. ' dict' → logprob: -11.648343086242676
    5. 'default' → logprob: -13.273343086242676
    6. ' defaultdict' → logprob: -13.273343086242676
    7. '{})' → logprob: -14.273343086242676
    8. '{' → logprob: -14.773343086242676
    9. '={}' → logprob: -14.898343086242676
    10. ' ' → logprob: -15.023343086242676

Token 31: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009900813922286034
    2. 'd' → logprob: -4.63490104675293
    3. '\' → logprob: -10.00990104675293
    4. '
' → logprob: -10.13490104675293
    5. '

' → logprob: -10.75990104675293
    6. 'n' → logprob: -11.50990104675293
    7. 'class' → logprob: -11.63490104675293
    8. 'a' → logprob: -12.13490104675293
    9. 'de' → logprob: -12.38490104675293
    10. '#' → logprob: -12.63490104675293

Token 32: ' update' (ID: 4027)
  Prédit: ' create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' create' → logprob: -1.1281018257141113
    2. ' process' → logprob: -1.5031018257141113
    3. ' add' → logprob: -1.8781018257141113
    4. ' main' → logprob: -2.2531018257141113
    5. ' calculate' → logprob: -3.2531018257141113
    6. ' insert' → logprob: -3.6281018257141113
    7. ' read' → logprob: -3.7531018257141113
    8. ' update' → logprob: -3.7531018257141113
    9. ' get' → logprob: -4.253101825714111
    10. ' solve' → logprob: -4.753101825714111

Token 33: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.17890216410160065
    2. '_' → logprob: -2.1789021492004395
    3. '(' → logprob: -3.6789021492004395
    4. '_dictionary' → logprob: -3.9289021492004395
    5. '(dict' → logprob: -6.5539021492004395
    6. '_d' → logprob: -7.3039021492004395
    7. '_value' → logprob: -7.3039021492004395
    8. 'dict' → logprob: -7.5539021492004395
    9. '```' → logprob: -8.178902626037598
    10. '(_' → logprob: -8.303902626037598

Token 34: '_count' (ID: 7536)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3503398597240448
    2. '(dict' → logprob: -1.7253398895263672
    3. '(d' → logprob: -2.475339889526367
    4. '(dictionary' → logprob: -4.475339889526367
    5. '(data' → logprob: -4.975339889526367
    6. '(key' → logprob: -5.350339889526367
    7. ' (' → logprob: -5.475339889526367
    8. '(_' → logprob: -7.100339889526367
    9. '(def' → logprob: -7.350339889526367
    10. '_dict' → logprob: -7.350339889526367

Token 35: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008230148814618587
    2. '(d' → logprob: -5.508230209350586
    3. '(dict' → logprob: -6.008230209350586
    4. '(s' → logprob: -7.758230209350586
    5. '(dictionary' → logprob: -8.633230209350586
    6. '(data' → logprob: -8.883230209350586
    7. '(_' → logprob: -9.008230209350586
    8. ' (' → logprob: -9.133230209350586
    9. '(key' → logprob: -9.258230209350586
    10. '(name' → logprob: -9.633230209350586

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004622491542249918
    2. 'ictionary' → logprob: -6.629622459411621
    3. ' ,' → logprob: -6.754622459411621
    4. ')' → logprob: -6.879622459411621
    5. 'ef' → logprob: -7.629622459411621
    6. 'ict' → logprob: -8.504622459411621
    7. '[' → logprob: -9.129622459411621
    8. '   ' → logprob: -10.004622459411621
    9. ',d' → logprob: -10.004622459411621
    10. ',[' → logprob: -10.129622459411621

Token 37: ' v' (ID: 323)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.22562943398952484
    2. 'key' → logprob: -1.600629448890686
    3. ')' → logprob: -9.725629806518555
    4. 'k' → logprob: -10.100629806518555
    5. ' word' → logprob: -10.975629806518555
    6. 'value' → logprob: -11.225629806518555
    7. 'word' → logprob: -11.350629806518555
    8. ' value' → logprob: -11.475629806518555
    9. ' )' → logprob: -11.600629806518555
    10. ' ' → logprob: -11.600629806518555

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3010733127593994
    2. 'al' → logprob: -1.4260733127593994
    3. 'alue' → logprob: -4.55107307434082
    4. '):
' → logprob: -5.17607307434082
    5. ',' → logprob: -6.55107307434082
    6. ')' → logprob: -6.92607307434082
    7. '   ' → logprob: -8.42607307434082
    8. 'a' → logprob: -8.42607307434082
    9. 'ALUE' → logprob: -9.17607307434082
    10. 'alu' → logprob: -9.17607307434082

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06987429410219193
    2. ' d' → logprob: -3.1948742866516113
    3. 'd' → logprob: -3.8198742866516113
    4. ':' → logprob: -6.569874286651611
    5. '[d' → logprob: -6.819874286651611
    6. ' ' → logprob: -7.444874286651611
    7. '  ' → logprob: -8.19487476348877
    8. ' :' → logprob: -8.31987476348877
    9. '(d' → logprob: -8.69487476348877
    10. '    ' → logprob: -8.81987476348877

Token 40: ' if' (ID: 538)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4471442401409149
    2. ' d' → logprob: -1.4471442699432373
    3. '   ' → logprob: -2.5721442699432373
    4. ' if' → logprob: -3.4471442699432373
    5. 'if' (adapté à ' if') → logprob: -4.072144031524658
    6. ' ' → logprob: -11.072144508361816
    7. '```' → logprob: -11.072144508361816
    8. '  ' → logprob: -12.072144508361816
    9. ' return' → logprob: -12.447144508361816
    10. 'return' → logprob: -12.447144508361816

Token 41: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.021044179797172546
    2. 'v' → logprob: -3.8960442543029785
    3. ' ' → logprob: -7.6460442543029785
    4. '	v' → logprob: -11.39604377746582
    5. ' d' → logprob: -12.39604377746582
    6. '  ' → logprob: -13.39604377746582
    7. 'd' → logprob: -13.52104377746582
    8. '   ' → logprob: -13.64604377746582
    9. ' ' → logprob: -13.83354377746582
    10. ' '' → logprob: -13.95854377746582

Token 42: ' not' (ID: 625)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013942873105406761
    2. ' not' → logprob: -5.013942718505859
    3. 'in' → logprob: -5.138942718505859
    4. ' ' → logprob: -7.013942718505859
    5. 'not' → logprob: -8.63894271850586
    6. ' i' → logprob: -9.26394271850586
    7. 'n' → logprob: -9.63894271850586
    8. ' n' → logprob: -10.63894271850586
    9. '   ' → logprob: -10.63894271850586
    10. '  ' → logprob: -11.01394271850586

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00867910124361515
    2. 'in' → logprob: -5.258678913116455
    3. 'd' → logprob: -5.883678913116455
    4. ' d' → logprob: -8.133679389953613
    5. '   ' → logprob: -8.883679389953613
    6. 's' → logprob: -9.133679389953613
    7. ' ' → logprob: -10.633679389953613
    8. '  ' → logprob: -11.258679389953613
    9. 'e' → logprob: -11.383679389953613
    10. ')' → logprob: -11.758679389953613

Token 44: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.02630447782576084
    2. 'd' → logprob: -3.6513044834136963
    3. '	d' → logprob: -13.526304244995117
    4. '<|end|>' → logprob: -13.901304244995117
    5. ')d' → logprob: -14.526304244995117
    6. ' ' → logprob: -15.151304244995117
    7. '_d' → logprob: -15.276304244995117
    8. '>d' → logprob: -15.963804244995117
    9. '```' → logprob: -16.088804244995117
    10. '   ' → logprob: -16.526304244995117

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0041764602065086365
    2. ':
' → logprob: -5.629176616668701
    3. ' :' → logprob: -7.504176616668701
    4. ' :
' → logprob: -11.504176139831543
    5. '):' → logprob: -11.504176139831543
    6. '   ' → logprob: -13.379176139831543
    7. '):
' → logprob: -14.129176139831543
    8. ')' → logprob: -14.379176139831543
    9. ':
' → logprob: -14.379176139831543
    10. ':

' → logprob: -14.754176139831543

Token 46: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06476859748363495
    2. ':
' → logprob: -3.0647685527801514
    3. '   ' → logprob: -4.5647687911987305
    4. '       ' → logprob: -5.5647687911987305
    5. ' :' → logprob: -6.8147687911987305
    6. ' :
' → logprob: -7.8147687911987305
    7. ' ' → logprob: -9.06476879119873
    8. 'd' → logprob: -9.81476879119873
    9. '    ' → logprob: -10.56476879119873
    10. ':d' → logprob: -10.81476879119873

Token 47: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.17180442810058594
    2. '       ' → logprob: -2.171804428100586
    3. 'd' (adapté à ' d') → logprob: -3.171804428100586
    4. '   ' → logprob: -6.921804428100586
    5. ' ' → logprob: -7.421804428100586
    6. '1' → logprob: -9.546804428100586
    7. '0' → logprob: -9.671804428100586
    8. '```' → logprob: -10.546804428100586
    9. ' v' → logprob: -10.671804428100586
    10. '           ' → logprob: -10.671804428100586

Token 48: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.87500286102295
    3. '```' → logprob: -15.00000286102295
    4. 'v' → logprob: -15.12500286102295
    5. '[d' → logprob: -15.37500286102295
    6. '][' → logprob: -16.125001907348633
    7. ']' → logprob: -16.250001907348633
    8. '	v' → logprob: -16.250001907348633
    9. ' [' → logprob: -16.375001907348633
    10. ' v' → logprob: -16.625001907348633

Token 49: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008578622946515679
    2. ']=' → logprob: -7.250857830047607
    3. ' ]' → logprob: -8.875858306884766
    4. '']' → logprob: -12.250858306884766
    5. '=' → logprob: -13.500858306884766
    6. '"]' → logprob: -14.125858306884766
    7. ']+=' → logprob: -15.250858306884766
    8. '   ' → logprob: -15.500858306884766
    9. '`]' → logprob: -15.875858306884766
    10. ':]' → logprob: -15.875858306884766

Token 50: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029768425971269608
    2. ' =' → logprob: -3.529768466949463
    3. ']' → logprob: -11.404767990112305
    4. ']=' → logprob: -12.029767990112305
    5. '[' → logprob: -15.404767990112305
    6. '   ' → logprob: -15.529767990112305
    7. ' ' → logprob: -15.654767990112305
    8. '```' → logprob: -16.779767990112305
    9. ':' → logprob: -16.904767990112305
    10. ')' → logprob: -17.154767990112305

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014192651025950909
    2. '0' → logprob: -4.514192581176758
    3. ' ' → logprob: -5.764192581176758
    4. '   ' → logprob: -13.264192581176758
    5. '<|end|>' → logprob: -15.764192581176758
    6. '  ' → logprob: -16.576692581176758
    7. '    ' → logprob: -17.514192581176758
    8. '```' → logprob: -17.639192581176758
    9. '`' → logprob: -18.826692581176758
    10. '2' → logprob: -19.014192581176758

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00464776111766696
    2. '0' → logprob: -5.379647731781006
    3. ' ' → logprob: -10.504648208618164
    4. '   ' → logprob: -16.254648208618164
    5. '```' → logprob: -18.692148208618164
    6. '  ' → logprob: -19.192148208618164
    7. '`' → logprob: -20.129648208618164
    8. '' → logprob: -20.442148208618164
    9. ' ' → logprob: -20.504648208618164
    10. '１' → logprob: -20.817148208618164

Token 53: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35978424549102783
    2. 'else' → logprob: -1.4847842454910278
    3. ' else' → logprob: -2.6097841262817383
    4. '	else' → logprob: -6.484784126281738
    5. '  ' → logprob: -9.234784126281738
    6. ' ' → logprob: -9.234784126281738
    7. '
' → logprob: -9.484784126281738
    8. '```' → logprob: -9.609784126281738
    9. '    
' → logprob: -9.734784126281738
    10. '<|end|>' → logprob: -9.859784126281738

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29727375507354736
    2. 'else' → logprob: -1.6722737550735474
    3. ' else' → logprob: -2.672273635864258
    4. '	else' → logprob: -8.672273635864258
    5. '    
' → logprob: -10.922273635864258
    6. '       ' → logprob: -10.922273635864258
    7. '```' → logprob: -11.297273635864258
    8. ' ' → logprob: -12.172273635864258
    9. '<|end|>' → logprob: -12.547273635864258
    10. '_else' → logprob: -13.172273635864258

Token 55: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.39213621616363525
    2. 'else' (adapté à ' else') → logprob: -1.1421362161636353
    3. '   ' → logprob: -5.267136096954346
    4. '	else' → logprob: -9.642136573791504
    5. ' ' → logprob: -11.267136573791504
    6. '  ' → logprob: -11.642136573791504
    7. 'e' → logprob: -13.392136573791504
    8. ' ' → logprob: -13.892136573791504
    9. '_else' → logprob: -13.892136573791504
    10. '    ' → logprob: -14.017136573791504

Token 56: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30611249804496765
    2. ':' → logprob: -1.43111252784729
    3. '   ' → logprob: -4.181112289428711
    4. '    ' → logprob: -5.306112289428711
    5. '<|end|>' → logprob: -6.056112289428711
    6. '      ' → logprob: -8.056112289428711
    7. '        ' → logprob: -8.306112289428711
    8. ':
' → logprob: -8.431112289428711
    9. ' ' → logprob: -8.806112289428711
    10. ',' → logprob: -8.931112289428711

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24723660945892334
    2. '    ' → logprob: -1.9972366094589233
    3. ' d' → logprob: -2.997236728668213
    4. 'd' → logprob: -3.747236728668213
    5. '   ' → logprob: -4.872236728668213
    6. '        ' → logprob: -6.747236728668213
    7. ' ' → logprob: -7.872236728668213
    8. '      ' → logprob: -8.747236251831055
    9. '<|end|>' → logprob: -9.122236251831055
    10. '     ' → logprob: -9.247236251831055

Token 58: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.25208455324172974
    2. 'd' (adapté à ' d') → logprob: -1.502084493637085
    3. '    ' → logprob: -9.502084732055664
    4. '   ' → logprob: -10.252084732055664
    5. '       ' → logprob: -10.377084732055664
    6. '        ' → logprob: -12.377084732055664
    7. '	d' → logprob: -12.877084732055664
    8. '1' → logprob: -13.002084732055664
    9. ' ' → logprob: -13.127084732055664
    10. '           ' → logprob: -13.252084732055664

Token 59: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.512236498361744e-07
    2. 'v' → logprob: -15.250000953674316
    3. '[' → logprob: -15.375000953674316
    4. '	v' → logprob: -17.875
    5. '[val' → logprob: -20.5
    6. '[d' → logprob: -21.0
    7. '```' → logprob: -21.25
    8. ' v' → logprob: -21.375
    9. ' [' → logprob: -21.375
    10. '[
' → logprob: -21.625

Token 60: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.042133133858442307
    2. ']+=' → logprob: -3.542133092880249
    3. '+' → logprob: -5.292133331298828
    4. '+=' → logprob: -5.417133331298828
    5. ' ]' → logprob: -6.292133331298828
    6. ']+' → logprob: -8.042133331298828
    7. ' +=' → logprob: -8.042133331298828
    8. '+]' → logprob: -8.167133331298828
    9. '   ' → logprob: -10.542133331298828
    10. '']' → logprob: -10.792133331298828

Token 61: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10944175720214844
    2. ' +=' → logprob: -2.3594417572021484
    3. '+' → logprob: -4.734441757202148
    4. '=' → logprob: -7.859441757202148
    5. ']+=' → logprob: -11.984441757202148
    6. '+='' → logprob: -12.234441757202148
    7. ' +' → logprob: -12.859441757202148
    8. '   ' → logprob: -13.609441757202148
    9. '[' → logprob: -13.859441757202148
    10. ' =' → logprob: -14.359441757202148

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25192907452583313
    2. ' ' → logprob: -1.5019290447235107
    3. ' ' → logprob: -17.001928329467773
    4. '```' → logprob: -20.251928329467773
    5. '１' → logprob: -21.376928329467773
    6. '   ' → logprob: -21.376928329467773
    7. '  ' → logprob: -21.876928329467773
    8. '0' → logprob: -21.876928329467773
    9. '2' → logprob: -22.064428329467773
    10. '<|end|>' → logprob: -22.376928329467773

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -20.375001907348633
    4. '```' → logprob: -21.375001907348633
    5. '  ' → logprob: -23.125001907348633
    6. '１' → logprob: -23.250001907348633
    7. '`' → logprob: -24.187501907348633
    8. '2' → logprob: -24.312501907348633
    9. '۱' → logprob: -24.312501907348633
    10. '3' → logprob: -24.375001907348633

Token 64: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15188463032245636
    2. '\' → logprob: -3.4018845558166504
    3. '\n' → logprob: -3.5268845558166504
    4. '

' → logprob: -3.6518845558166504
    5. 'def' → logprob: -3.6518845558166504
    6. 'newline' → logprob: -4.77688455581665
    7. '<|end|>' → logprob: -5.02688455581665
    8. ' 

' → logprob: -6.02688455581665
    9. ' 
' → logprob: -6.27688455581665
    10. 'n' → logprob: -6.40188455581665

Token 65: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02877861075103283
    2. 'd' → logprob: -4.278778553009033
    3. '
' → logprob: -5.278778553009033
    4. '#' → logprob: -5.653778553009033
    5. '\' → logprob: -6.153778553009033
    6. '<|end|>' → logprob: -6.528778553009033
    7. ' ' → logprob: -7.278778553009033
    8. ' def' → logprob: -8.278779029846191
    9. '```' → logprob: -8.653779029846191
    10. ' 
' → logprob: -8.778779029846191

Token 66: ' process' (ID: 2273)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.7848072648048401
    2. ' main' → logprob: -0.9098072648048401
    3. ' process' → logprob: -2.9098072052001953
    4. ' find' → logprob: -3.1598072052001953
    5. ' calculate' → logprob: -4.534807205200195
    6. 'count' → logprob: -5.284807205200195
    7. ' get' → logprob: -5.284807205200195
    8. ' update' → logprob: -5.784807205200195
    9. ' solve' → logprob: -5.909807205200195
    10. ' max' → logprob: -5.909807205200195

Token 67: '_even' (ID: 186029)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.31337839365005493
    2. '_values' → logprob: -2.31337833404541
    3. '_input' → logprob: -2.68837833404541
    4. '_array' → logprob: -3.43837833404541
    5. '(' → logprob: -3.81337833404541
    6. '_data' → logprob: -3.93837833404541
    7. '_items' → logprob: -4.93837833404541
    8. '_list' → logprob: -5.18837833404541
    9. '_elements' → logprob: -6.18837833404541
    10. '_line' → logprob: -6.43837833404541

Token 68: '_indices' (ID: 43508)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17940913140773773
    2. '(' → logprob: -2.4294090270996094
    3. '_numbers' → logprob: -2.8044090270996094
    4. '_number' → logprob: -4.804409027099609
    5. '_values' → logprob: -6.929409027099609
    6. '(_' → logprob: -6.929409027099609
    7. '_count' → logprob: -7.179409027099609
    8. 's' → logprob: -7.304409027099609
    9. '_sum' → logprob: -7.554409027099609
    10. '_value' → logprob: -7.679409027099609

Token 69: '(V' (ID: 16949)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05613518878817558
    2. '():' → logprob: -2.9311351776123047
    3. '(_' → logprob: -8.556135177612305
    4. '()' → logprob: -8.681135177612305
    5. '(indices' → logprob: -8.681135177612305
    6. '(:' → logprob: -8.806135177612305
    7. '_' → logprob: -8.931135177612305
    8. '(n' → logprob: -9.181135177612305
    9. '_indices' → logprob: -9.681135177612305
    10. '(index' → logprob: -10.931135177612305

Token 70: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0699143186211586
    2. ',' → logprob: -2.8199143409729004
    3. ')' → logprob: -5.3199143409729
    4. ' ):' → logprob: -6.5699143409729
    5. '[' → logprob: -7.1949143409729
    6. 'e' → logprob: -8.444913864135742
    7. 's' → logprob: -8.819913864135742
    8. '):
' → logprob: -8.819913864135742
    9. ' ,' → logprob: -9.319913864135742
    10. ':' → logprob: -10.069913864135742

Token 71: ' v' (ID: 323)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.3087841272354126
    2. ' d' → logprob: -1.4337841272354126
    3. 'd' → logprob: -1.9337841272354126
    4. 'n' → logprob: -1.9337841272354126
    5. ' N' → logprob: -3.058784008026123
    6. 'N' → logprob: -3.683784008026123
    7. ' i' → logprob: -3.933784008026123
    8. ')' → logprob: -4.058784008026123
    9. ' len' → logprob: -4.058784008026123
    10. '   ' → logprob: -4.183784008026123

Token 72: '1' (ID: 16)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5191932916641235
    2. 'al' → logprob: -1.0191932916641235
    3. 'alue' → logprob: -4.144193172454834
    4. ')' → logprob: -4.769193172454834
    5. 's' → logprob: -4.894193172454834
    6. 'a' → logprob: -5.894193172454834
    7. 'als' → logprob: -6.144193172454834
    8. '[' → logprob: -6.894193172454834
    9. '):
' → logprob: -6.894193172454834
    10. '   ' → logprob: -7.269193172454834

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.049231018871068954
    2. ')' → logprob: -4.174231052398682
    3. ',' → logprob: -4.174231052398682
    4. 'al' → logprob: -5.549231052398682
    5. 'alue' → logprob: -5.549231052398682
    6. ')):' → logprob: -6.299231052398682
    7. 's' → logprob: -6.299231052398682
    8. '[' → logprob: -6.924231052398682
    9. '=' → logprob: -7.299231052398682
    10. 'e' → logprob: -7.424231052398682

Token 74: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01088357251137495
    2. '):' → logprob: -5.010883808135986
    3. '   ' → logprob: -6.260883808135986
    4. ' :' → logprob: -7.260883808135986
    5. ':
' → logprob: -7.260883808135986
    6. ')' → logprob: -7.760883808135986
    7. '():' → logprob: -8.885883331298828
    8. '[' → logprob: -9.135883331298828
    9. ' ' → logprob: -10.010883331298828
    10. '(' → logprob: -10.260883331298828

Token 75: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6782883405685425
    2. '   ' → logprob: -0.8032883405685425
    3. 'for' (adapté à ' for') → logprob: -3.303288459777832
    4. ' i' → logprob: -5.553288459777832
    5. ' n' → logprob: -6.303288459777832
    6. 'n' → logprob: -7.303288459777832
    7. ' ' → logprob: -7.803288459777832
    8. '    
' → logprob: -8.678288459777832
    9. ' return' → logprob: -9.178288459777832
    10. '  ' → logprob: -9.178288459777832

Token 76: ' v' (ID: 323)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0018430864438414574
    2. ' ' → logprob: -6.751842975616455
    3. 'i' → logprob: -7.626842975616455
    4. ' idx' → logprob: -9.876843452453613
    5. ' _' → logprob: -10.126843452453613
    6. ' in' → logprob: -10.626843452453613
    7. ' range' → logprob: -10.751843452453613
    8. ' index' → logprob: -10.751843452453613
    9. ' v' → logprob: -11.876843452453613
    10. '   ' → logprob: -12.626843452453613

Token 77: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4802054464817047
    2. ' in' → logprob: -1.1052054166793823
    3. '1' → logprob: -4.230205535888672
    4. ' ' → logprob: -4.980205535888672
    5. ',i' → logprob: -4.980205535888672
    6. 'al' → logprob: -5.355205535888672
    7. ',v' → logprob: -5.605205535888672
    8. 'i' → logprob: -5.980205535888672
    9. 'alue' → logprob: -6.105205535888672
    10. ' ,' → logprob: -6.105205535888672

Token 78: ' V' (ID: 631)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.1760330200195312
    2. ' v' → logprob: -1.3010330200195312
    3. ' V' → logprob: -1.8010330200195312
    4. 'v' → logprob: -2.0510330200195312
    5. 'V' → logprob: -2.8010330200195312
    6. 'range' → logprob: -2.8010330200195312
    7. ' ' → logprob: -7.051033020019531
    8. 'enumer' → logprob: -7.051033020019531
    9. '[' → logprob: -7.551033020019531
    10. ' enumerate' → logprob: -8.051033020019531

Token 79: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13000129163265228
    2. '[' → logprob: -2.1300013065338135
    3. ':
' → logprob: -6.255001068115234
    4. '[v' → logprob: -8.005001068115234
    5. '   ' → logprob: -8.255001068115234
    6. 'v' → logprob: -9.255001068115234
    7. ':v' → logprob: -9.255001068115234
    8. '1' → logprob: -9.505001068115234
    9. '[::-' → logprob: -10.130001068115234
    10. ' if' → logprob: -10.380001068115234

Token 80: '::' (ID: 742)
  Prédit: '::'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::' → logprob: -0.07333379983901978
    2. '0' → logprob: -3.448333740234375
    3. '1' → logprob: -3.948333740234375
    4. ':' → logprob: -4.823333740234375
    5. ' :' → logprob: -5.323333740234375
    6. ' ' → logprob: -5.573333740234375
    7. ' ::' → logprob: -6.448333740234375
    8. '::-' → logprob: -7.948333740234375
    9. '2' → logprob: -8.323333740234375
    10. ':::' → logprob: -8.948333740234375

Token 81: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.85235276655294e-05
    2. ' ' → logprob: -9.375088691711426
    3. '1' → logprob: -13.375088691711426
    4. ']' → logprob: -14.375088691711426
    5. '

' → logprob: -14.500088691711426
    6. '-' → logprob: -14.875088691711426
    7. '   ' → logprob: -15.375088691711426
    8. '  ' → logprob: -16.37508773803711
    9. '```' → logprob: -16.56258773803711
    10. ' -' → logprob: -16.68758773803711

Token 82: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0003413031517993659
    2. ']' → logprob: -8.250341415405273
    3. ':' → logprob: -10.375341415405273
    4. ' ]' → logprob: -11.000341415405273
    5. ']:
' → logprob: -11.000341415405273
    6. '):' → logprob: -12.375341415405273
    7. ']):' → logprob: -12.625341415405273
    8. '],' → logprob: -13.250341415405273
    9. ']:
' → logprob: -13.250341415405273
    10. '   ' → logprob: -13.750341415405273

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13081657886505127
    2. ':' → logprob: -2.1308164596557617
    3. ':
' → logprob: -6.255816459655762
    4. ' if' → logprob: -7.630816459655762
    5. ',' → logprob: -7.755816459655762
    6. '<|end|>' → logprob: -8.630816459655762
    7. ' :' → logprob: -9.130816459655762
    8. '0' → logprob: -9.255816459655762
    9. '):
' → logprob: -9.255816459655762
    10. '   ' → logprob: -9.880816459655762

Token 84: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.8586430549621582
    2. '       ' → logprob: -0.9836430549621582
    3. ' v' → logprob: -2.358643054962158
    4. ' if' → logprob: -2.983643054962158
    5. 'update' (adapté à ' update') → logprob: -3.233643054962158
    6. 'v' → logprob: -4.358643054962158
    7. 'if' → logprob: -5.358643054962158
    8. '           ' → logprob: -9.858642578125
    9. '   ' → logprob: -10.108642578125
    10. '	update' → logprob: -10.546142578125

Token 85: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.000616293225903064
    2. '_d' → logprob: -8.000616073608398
    3. '_' → logprob: -9.125616073608398
    4. '_dic' → logprob: -9.625616073608398
    5. '_dist' → logprob: -10.500616073608398
    6. '_count' → logprob: -10.875616073608398
    7. '_def' → logprob: -11.125616073608398
    8. '_div' → logprob: -11.500616073608398
    9. '_df' → logprob: -11.875616073608398
    10. ' _' → logprob: -12.250616073608398

Token 86: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0009836276294663548
    2. '_dict' → logprob: -7.000983715057373
    3. '_counts' → logprob: -10.125983238220215
    4. '_' → logprob: -11.250983238220215
    5. '_d' → logprob: -11.875983238220215
    6. '```' → logprob: -13.000983238220215
    7. '_cnt' → logprob: -13.375983238220215
    8. '_dist' → logprob: -14.000983238220215
    9. '_val' → logprob: -14.000983238220215
    10. ' _' → logprob: -14.000983238220215

Token 87: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.036117278039455414
    2. '(' → logprob: -3.4111173152923584
    3. '(d' → logprob: -6.161117076873779
    4. '(V' → logprob: -8.286117553710938
    5. '(s' → logprob: -9.911117553710938
    6. ' (' → logprob: -10.786117553710938
    7. '(
' → logprob: -11.786117553710938
    8. '(u' → logprob: -12.536117553710938
    9. '<|end|>' → logprob: -12.536117553710938
    10. '(n' → logprob: -13.036117553710938

Token 88: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5093566179275513
    2. ',v' → logprob: -1.1343566179275513
    3. '1' → logprob: -2.6343564987182617
    4. 'v' → logprob: -6.259356498718262
    5. '(v' → logprob: -6.384356498718262
    6. ' ,' → logprob: -6.884356498718262
    7. ')' → logprob: -7.634356498718262
    8. 's' → logprob: -8.759356498718262
    9. ',d' → logprob: -9.134356498718262
    10. '=v' → logprob: -9.634356498718262

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016047270968556404
    2. ',v' → logprob: -4.141047477722168
    3. '(v' → logprob: -11.766047477722168
    4. ' ,' → logprob: -13.016047477722168
    5. 'v' → logprob: -13.516047477722168
    6. ',V' → logprob: -14.141047477722168
    7. '(' → logprob: -15.141047477722168
    8. ')' → logprob: -15.391047477722168
    9. ',d' → logprob: -16.64104652404785
    10. '`,' → logprob: -16.89104652404785

Token 90: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0031786637846380472
    2. ' v' → logprob: -5.753178596496582
    3. ')v' → logprob: -14.128178596496582
    4. '	v' → logprob: -15.503178596496582
    5. ')' → logprob: -16.7531795501709
    6. '(v' → logprob: -18.6281795501709
    7. '?v' → logprob: -19.0031795501709
    8. '$v' → logprob: -19.2531795501709
    9. '<|end|>' → logprob: -19.5031795501709
    10. '_v' → logprob: -19.5031795501709

Token 91: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9385402993066236e-05
    2. ')
' → logprob: -11.000019073486328
    3. ' )' → logprob: -13.500019073486328
    4. ')v' → logprob: -14.250019073486328
    5. ')

' → logprob: -15.375019073486328
    6. ')return' → logprob: -15.875019073486328
    7. '   ' → logprob: -16.125019073486328
    8. '))' → logprob: -17.250019073486328
    9. ')`' → logprob: -17.500019073486328
    10. ')V' → logprob: -17.750019073486328

Token 92: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08290786296129227
    2. '<|end|>' → logprob: -2.8329079151153564
    3. '
' → logprob: -4.082907676696777
    4. '\' → logprob: -7.207907676696777
    5. '<|end|>' → logprob: -7.582907676696777
    6. '   ' → logprob: -7.582907676696777
    7. ' def' → logprob: -7.707907676696777
    8. ' ' → logprob: -8.082907676696777
    9. '    
' → logprob: -8.207907676696777
    10. '```' → logprob: -8.582907676696777

Token 93: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.03385753184556961
    2. 'process' → logprob: -3.408857583999634
    3. '_process' → logprob: -9.283857345581055
    4. ' ' → logprob: -9.908857345581055
    5. '	process' → logprob: -10.783857345581055
    6. '(process' → logprob: -11.158857345581055
    7. ' proces' → logprob: -11.283857345581055
    8. ' user' → logprob: -12.283857345581055
    9. 'rocess' → logprob: -12.908857345581055
    10. '.process' → logprob: -13.408857345581055

Token 94: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014824047684669495
    2. '_even' → logprob: -4.389823913574219
    3. 'odd' → logprob: -6.264823913574219
    4. '_values' → logprob: -8.764823913574219
    5. '_indices' → logprob: -9.514823913574219
    6. '_od' → logprob: -10.764823913574219
    7. 'even' → logprob: -11.014823913574219
    8. '(V' → logprob: -11.014823913574219
    9. 'def' → logprob: -11.264823913574219
    10. ' _' → logprob: -11.764823913574219

Token 95: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.1252380758523941
    2. 'dd' → logprob: -2.5002381801605225
    3. 'V' → logprob: -4.500237941741943
    4. 'indices' → logprob: -5.000237941741943
    5. 'even' → logprob: -5.000237941741943
    6. 'ven' → logprob: -5.375237941741943
    7. 'd' → logprob: -6.375237941741943
    8. 'od' → logprob: -7.125237941741943
    9. 'o' → logprob: -7.500237941741943
    10. 'range' → logprob: -7.875237941741943

Token 96: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -3.643152740551159e-05
    2. '_indexes' → logprob: -10.500036239624023
    3. '_' → logprob: -12.625036239624023
    4. ' _' → logprob: -13.500036239624023
    5. 'indices' → logprob: -13.875036239624023
    6. 's' → logprob: -14.625036239624023
    7. '_ids' → logprob: -15.000036239624023
    8. '_idxs' → logprob: -15.000036239624023
    9. '```' → logprob: -15.000036239624023
    10. '_values' → logprob: -15.375036239624023

Token 97: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -4.179569077678025e-05
    2. '(' → logprob: -10.125041961669922
    3. '(v' → logprob: -14.000041961669922
    4. '(View' → logprob: -15.125041961669922
    5. '(Vector' → logprob: -15.375041961669922
    6. ' (' → logprob: -16.500041961669922
    7. '(S' → logprob: -17.125041961669922
    8. '(Vue' → logprob: -17.375041961669922
    9. '<|end|>' → logprob: -17.625041961669922
    10. 'def' → logprob: -17.875041961669922

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012948813382536173
    2. ',v' → logprob: -6.87629508972168
    3. ' ,' → logprob: -8.50129508972168
    4. '[' → logprob: -10.12629508972168
    5. '):' → logprob: -11.62629508972168
    6. '   ' → logprob: -12.25129508972168
    7. ',
' → logprob: -13.87629508972168
    8. ')' → logprob: -14.00129508972168
    9. ',[' → logprob: -14.50129508972168
    10. '[],' → logprob: -15.37629508972168

Token 99: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.429162859916687
    2. 'v' → logprob: -1.304162859916687
    3. ' V' → logprob: -3.1791629791259766
    4. 'V' → logprob: -3.6791629791259766
    5. '1' → logprob: -5.054162979125977
    6. ' ' → logprob: -6.179162979125977
    7. '2' → logprob: -7.429162979125977
    8. ')' → logprob: -7.679162979125977
    9. '   ' → logprob: -8.179162979125977
    10. '[' → logprob: -8.866662979125977

Token 100: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.949026571121067e-05
    2. '2' → logprob: -9.750099182128906
    3. '[' → logprob: -10.375099182128906
    4. ')' → logprob: -12.875099182128906
    5. ',' → logprob: -13.000099182128906
    6. 'alue' → logprob: -14.375099182128906
    7. '```' → logprob: -14.375099182128906
    8. '_' → logprob: -14.625099182128906
    9. '=' → logprob: -14.750099182128906
    10. '   ' → logprob: -15.125099182128906

Token 101: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14367619156837463
    2. ',' → logprob: -2.018676280975342
    3. ',v' → logprob: -7.518676280975342
    4. ')' → logprob: -8.268675804138184
    5. '):
' → logprob: -9.768675804138184
    6. '   ' → logprob: -9.893675804138184
    7. ' ):' → logprob: -9.893675804138184
    8. ' ,' → logprob: -10.643675804138184
    9. ',V' → logprob: -12.018675804138184
    10. ':' → logprob: -12.518675804138184

Token 102: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4854748845100403
    2. 'for' → logprob: -0.9854748845100403
    3. '   ' → logprob: -4.485475063323975
    4. '	for' → logprob: -9.735474586486816
    5. ' ' → logprob: -13.110474586486816
    6. '
' → logprob: -16.110475540161133
    7. '```' → logprob: -16.110475540161133
    8. '  ' → logprob: -16.360475540161133
    9. '    
' → logprob: -16.360475540161133
    10. 'def' → logprob: -16.610475540161133

Token 103: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018158724531531334
    2. ' for' → logprob: -4.018158912658691
    3. '   ' → logprob: -11.643158912658691
    4. ' ' → logprob: -17.768157958984375
    5. '	for' → logprob: -18.018157958984375
    6. '```' → logprob: -18.018157958984375
    7. 'def' → logprob: -18.518157958984375
    8. 'or' → logprob: -20.018157958984375
    9. '  ' → logprob: -20.768157958984375
    10. '
' → logprob: -20.768157958984375

Token 104: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.02108060196042061
    2. 'v' → logprob: -3.896080493927002
    3. ' V' → logprob: -7.771080493927002
    4. 'V' → logprob: -9.14608097076416
    5. ' ' → logprob: -12.39608097076416
    6. '	v' → logprob: -13.27108097076416
    7. 'value' → logprob: -13.39608097076416
    8. '   ' → logprob: -14.27108097076416
    9. '_v' → logprob: -14.39608097076416
    10. ' ' → logprob: -14.52108097076416

Token 105: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023373359814286232
    2. 'in' → logprob: -3.7733733654022217
    3. ' ' → logprob: -9.5233736038208
    4. 'v' → logprob: -11.2733736038208
    5. 'V' → logprob: -11.5233736038208
    6. 's' → logprob: -11.7733736038208
    7. '  ' → logprob: -12.2733736038208
    8. '   ' → logprob: -12.3983736038208
    9. '	in' → logprob: -12.7733736038208
    10. 'n' → logprob: -13.0233736038208

Token 106: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.20143720507621765
    2. ' V' → logprob: -1.70143723487854
    3. '[V' → logprob: -11.576436996459961
    4. '(V' → logprob: -11.826436996459961
    5. '[' → logprob: -12.576436996459961
    6. '<V' → logprob: -13.951436996459961
    7. 's' → logprob: -14.201436996459961
    8. '	V' → logprob: -14.576436996459961
    9. ' ' → logprob: -14.576436996459961
    10. '   ' → logprob: -14.701436996459961

Token 107: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1637164789135568e-05
    2. '1' → logprob: -11.375011444091797
    3. '[::-' → logprob: -16.875011444091797
    4. '
' → logprob: -17.125011444091797
    5. '```' → logprob: -17.125011444091797
    6. ' [' → logprob: -17.375011444091797
    7. 'from' → logprob: -17.625011444091797
    8. 's' → logprob: -17.625011444091797
    9. '

' → logprob: -18.000011444091797
    10. '   ' → logprob: -18.375011444091797

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -13.625003814697266
    3. '::' → logprob: -13.875003814697266
    4. '(' → logprob: -14.500003814697266
    5. ' ' → logprob: -14.875003814697266
    6. '   ' → logprob: -15.250003814697266
    7. '::-' → logprob: -16.500003814697266
    8. '
' → logprob: -16.625003814697266
    9. '```' → logprob: -16.875003814697266
    10. ':' → logprob: -17.000003814697266

Token 109: '::' (ID: 742)
  Prédit: '::'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::' → logprob: -6.146429223008454e-05
    2. ':' → logprob: -9.75006103515625
    3. ':]' → logprob: -13.62506103515625
    4. '::
' → logprob: -13.62506103515625
    5. ':::' → logprob: -15.00006103515625
    6. '::

' → logprob: -15.62506103515625
    7. '::_' → logprob: -16.50006103515625
    8. '::-' → logprob: -16.50006103515625
    9. '2' → logprob: -17.87506103515625
    10. ' ::' → logprob: -18.00006103515625

Token 110: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -17.125003814697266
    4. '```' → logprob: -17.875003814697266
    5. '  ' → logprob: -18.687503814697266
    6. '1' → logprob: -18.750003814697266
    7. ']' → logprob: -18.812503814697266
    8. ')' → logprob: -19.000003814697266
    9. '۲' → logprob: -19.062503814697266
    10. '２' → logprob: -19.125003814697266

Token 111: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.02125638723373413
    2. ']:
' → logprob: -3.896256446838379
    3. ']' → logprob: -7.521256446838379
    4. ':' → logprob: -9.271256446838379
    5. ']:
' → logprob: -10.021256446838379
    6. ' ]' → logprob: -10.896256446838379
    7. '       ' → logprob: -11.896256446838379
    8. '   ' → logprob: -12.771256446838379
    9. ']:

' → logprob: -13.146256446838379
    10. '):' → logprob: -13.896256446838379

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13857638835906982
    2. ' update' → logprob: -2.1385765075683594
    3. 'update' → logprob: -4.638576507568359
    4. '   ' → logprob: -6.263576507568359
    5. ' ' → logprob: -13.38857650756836
    6. '	update' → logprob: -13.63857650756836
    7. '.update' → logprob: -14.51357650756836
    8. '      ' → logprob: -14.76357650756836
    9. '     ' → logprob: -15.13857650756836
    10. '    ' → logprob: -15.51357650756836

Token 113: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.011059491895139217
    2. ' update' → logprob: -4.511059284210205
    3. '   ' → logprob: -11.761059761047363
    4. '       ' → logprob: -12.636059761047363
    5. '	update' → logprob: -15.261059761047363
    6. '  ' → logprob: -15.636059761047363
    7. ' ' → logprob: -16.011058807373047
    8. '.update' → logprob: -16.386058807373047
    9. '(update' → logprob: -17.136058807373047
    10. '    ' → logprob: -17.886058807373047

Token 114: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -6.869017852295656e-06
    2. 'dict' → logprob: -12.000006675720215
    3. 'Dict' → logprob: -14.625006675720215
    4. '_DICT' → logprob: -16.50000762939453
    5. '_dic' → logprob: -16.75000762939453
    6. '```' → logprob: -18.25000762939453
    7. '_def' → logprob: -18.37500762939453
    8. '_' → logprob: -18.37500762939453
    9. '"_' → logprob: -18.87500762939453
    10. 'def' → logprob: -19.00000762939453

Token 115: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -5.431207682704553e-05
    2. 'count' → logprob: -9.875054359436035
    3. '2' → logprob: -13.250054359436035
    4. 'Count' → logprob: -14.750054359436035
    5. 'v' → logprob: -15.125054359436035
    6. '_counts' → logprob: -16.00005340576172
    7. '(v' → logprob: -16.50005340576172
    8. 'ount' → logprob: -16.87505340576172
    9. 'update' → logprob: -17.00005340576172
    10. '_COUNT' → logprob: -17.12505340576172

Token 116: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00011045700375689194
    2. '(' → logprob: -9.125110626220703
    3. ' (' → logprob: -13.750110626220703
    4. '```' → logprob: -16.000110626220703
    5. '(d' → logprob: -16.500110626220703
    6. '(var' → logprob: -17.250110626220703
    7. '(s' → logprob: -17.500110626220703
    8. ')v' → logprob: -18.000110626220703
    9. '<|end|>' → logprob: -18.000110626220703
    10. '?v' → logprob: -18.250110626220703

Token 117: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006924115587025881
    2. ',' → logprob: -5.006924152374268
    3. ',v' → logprob: -9.13192367553711
    4. ' ,' → logprob: -9.88192367553711
    5. 'v' → logprob: -10.25692367553711
    6. '   ' → logprob: -12.13192367553711
    7. ' v' → logprob: -12.25692367553711
    8. ' ' → logprob: -13.75692367553711
    9. '  ' → logprob: -14.00692367553711
    10. '```' → logprob: -14.13192367553711

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015192650025710464
    2. ',v' → logprob: -6.501519203186035
    3. ' ,' → logprob: -11.001519203186035
    4. 'v' → logprob: -15.876519203186035
    5. '   ' → logprob: -16.37652015686035
    6. '(v' → logprob: -17.00152015686035
    7. ' v' → logprob: -17.25152015686035
    8. ')' → logprob: -17.25152015686035
    9. '`,' → logprob: -18.75152015686035
    10. ',
' → logprob: -19.00152015686035

Token 119: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.014163628220558167
    2. ' v' → logprob: -4.264163494110107
    3. ')v' → logprob: -15.639163970947266
    4. ')' → logprob: -17.014163970947266
    5. '	v' → logprob: -17.389163970947266
    6. ' ' → logprob: -18.389163970947266
    7. '<|end|>' → logprob: -18.639163970947266
    8. '$v' → logprob: -20.389163970947266
    9. '   ' → logprob: -20.639163970947266
    10. '  ' → logprob: -21.264163970947266

Token 120: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.9153885558771435e-06
    2. ')
' → logprob: -12.125005722045898
    3. ')

' → logprob: -15.125005722045898
    4. '   ' → logprob: -16.0000057220459
    5. ')return' → logprob: -17.3750057220459
    6. ' )' → logprob: -17.5000057220459
    7. '))' → logprob: -18.1250057220459
    8. '`)' → logprob: -18.2500057220459
    9. ')`' → logprob: -18.3750057220459
    10. '<|end|>' → logprob: -18.3750057220459

Token 121: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0012398716062307358
    2. 'n' → logprob: -6.751239776611328
    3. 'N' → logprob: -9.876239776611328
    4. 'd' → logprob: -11.751239776611328
    5. 'ndef' → logprob: -13.001239776611328
    6. '#' → logprob: -13.501239776611328
    7. 'v' → logprob: -13.751239776611328
    8. 'V' → logprob: -13.751239776611328
    9. 'a' → logprob: -13.876239776611328
    10. '```' → logprob: -14.126239776611328

Token 122: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0021136202849447727
    2. ' solve' → logprob: -6.8771138191223145
    3. ' process' → logprob: -7.3771138191223145
    4. 'main' → logprob: -8.252113342285156
    5. ' compute' → logprob: -10.252113342285156
    6. ' calculate' → logprob: -10.377113342285156
    7. ' count' → logprob: -10.752113342285156
    8. ' merge' → logprob: -10.877113342285156
    9. ' find' → logprob: -10.877113342285156
    10. ' combine' → logprob: -11.002113342285156

Token 123: '_sorted' (ID: 104993)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.6473963260650635
    2. '_m' → logprob: -1.6473963260650635
    3. '_unique' → logprob: -1.8973963260650635
    4. '_common' → logprob: -3.2723963260650635
    5. '_value' → logprob: -4.272396087646484
    6. '_values' → logprob: -4.772396087646484
    7. '_sorted' → logprob: -4.897396087646484
    8. '_keys' → logprob: -5.147396087646484
    9. '_' → logprob: -5.147396087646484
    10. '_key' → logprob: -5.397396087646484

Token 124: '_keys' (ID: 29392)
  Prédit: '_keys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_keys' → logprob: -0.43143367767333984
    2. '_items' → logprob: -1.4314336776733398
    3. '_values' → logprob: -3.05643367767334
    4. '_counts' → logprob: -3.93143367767334
    5. '_dict' → logprob: -4.30643367767334
    6. '_list' → logprob: -4.43143367767334
    7. '_pairs' → logprob: -4.68143367767334
    8. '_unique' → logprob: -6.30643367767334
    9. '_candidates' → logprob: -6.30643367767334
    10. '_' → logprob: -6.43143367767334

Token 125: '_by' (ID: 8214)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.16648712754249573
    2. '(' → logprob: -1.9164870977401733
    3. '(dict' → logprob: -5.541487216949463
    4. '(v' → logprob: -7.291487216949463
    5. '(s' → logprob: -7.666487216949463
    6. '(dictionary' → logprob: -8.166486740112305
    7. '(keys' → logprob: -8.291486740112305
    8. '(a' → logprob: -8.416486740112305
    9. '(k' → logprob: -8.916486740112305
    10. '(def' → logprob: -9.541486740112305

Token 126: '_values' (ID: 20393)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.21162772178649902
    2. '_count' → logprob: -1.961627721786499
    3. 'value' → logprob: -3.586627721786499
    4. '_freq' → logprob: -4.336627960205078
    5. '_frequency' → logprob: -5.336627960205078
    6. 'count' → logprob: -5.586627960205078
    7. 'frequency' → logprob: -8.211627960205078
    8. '_length' → logprob: -8.836627960205078
    9. '_values' → logprob: -9.086627960205078
    10. '_dict' → logprob: -9.586627960205078

Token 127: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.009485713206231594
    2. '(' → logprob: -5.134485721588135
    3. '(dict' → logprob: -6.759485721588135
    4. '(dictionary' → logprob: -7.384485721588135
    5. '_count' → logprob: -7.884485721588135
    6. '_by' → logprob: -8.634485244750977
    7. '(s' → logprob: -8.884485244750977
    8. '_reverse' → logprob: -9.009485244750977
    9. '(a' → logprob: -9.134485244750977
    10. '_counts' → logprob: -9.384485244750977

Token 128: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02487662434577942
    2. ',' → logprob: -3.899876594543457
    3. '):
' → logprob: -5.649876594543457
    4. ',d' → logprob: -7.774876594543457
    5. ' ):' → logprob: -8.399876594543457
    6. ')' → logprob: -9.274876594543457
    7. '(d' → logprob: -10.024876594543457
    8. '):
' → logprob: -11.899876594543457
    9. ' ,' → logprob: -12.399876594543457
    10. '   ' → logprob: -12.899876594543457

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010946154361590743
    2. ' return' → logprob: -7.251094818115234
    3. 'return' → logprob: -7.876094818115234
    4. ' sorted' → logprob: -12.876094818115234
    5. 'sorted' → logprob: -13.501094818115234
    6. '(sorted' → logprob: -15.001094818115234
    7. '	return' → logprob: -15.876094818115234
    8. ')' → logprob: -16.001094818115234
    9. ' keys' → logprob: -16.251094818115234
    10. '```' → logprob: -16.626094818115234

Token 130: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003513476112857461
    2. '   ' → logprob: -5.753513336181641
    3. 'sorted' → logprob: -8.25351333618164
    4. ' return' → logprob: -9.50351333618164
    5. '```' → logprob: -15.25351333618164
    6. ' sorted' → logprob: -15.62851333618164
    7. 'def' → logprob: -15.62851333618164
    8. '
' → logprob: -17.00351333618164
    9. '	return' → logprob: -17.12851333618164
    10. ' ' → logprob: -17.50351333618164

Token 131: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.04896043613553047
    2. ' sorted' → logprob: -3.0489604473114014
    3. '[' → logprob: -8.04896068572998
    4. '(sorted' → logprob: -10.17396068572998
    5. ' ' → logprob: -11.92396068572998
    6. ' [' → logprob: -12.42396068572998
    7. '   ' → logprob: -12.92396068572998
    8. '[s' → logprob: -13.92396068572998
    9. '  ' → logprob: -14.17396068572998
    10. '.sorted' → logprob: -15.17396068572998

Token 132: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00014013137842994183
    2. '(' → logprob: -8.875140190124512
    3. '((' → logprob: -16.250139236450195
    4. '(
' → logprob: -16.375139236450195
    5. 'd' → logprob: -16.750139236450195
    6. '(de' → logprob: -18.750139236450195
    7. '(lambda' → logprob: -19.000139236450195
    8. ')d' → logprob: -19.125139236450195
    9. ' (' → logprob: -19.250139236450195
    10. '```' → logprob: -19.625139236450195

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009373087668791413
    2. ',d' → logprob: -8.000937461853027
    3. ',key' → logprob: -8.500937461853027
    4. 'keys' → logprob: -8.875937461853027
    5. 'items' → logprob: -9.250937461853027
    6. 'd' → logprob: -9.750937461853027
    7. '.keys' → logprob: -10.125937461853027
    8. ' ,' → logprob: -10.375937461853027
    9. ' d' → logprob: -11.625937461853027
    10. ')' → logprob: -11.875937461853027

Token 134: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.12166356295347214
    2. 'lambda' → logprob: -2.3716635704040527
    3. 'd' → logprob: -3.8716635704040527
    4. ' key' → logprob: -7.871663570404053
    5. '=lambda' → logprob: -11.496663093566895
    6. ' lambda' → logprob: -11.496663093566895
    7. 'reverse' → logprob: -13.871663093566895
    8. ',key' → logprob: -14.371663093566895
    9. ' d' → logprob: -14.621663093566895
    10. '   ' → logprob: -14.871663093566895

Token 135: '=lambda' (ID: 64865)
  Prédit: '=d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=d' → logprob: -0.07528597861528397
    2. '=lambda' → logprob: -2.8252859115600586
    3. '=' → logprob: -4.325285911560059
    4. 'd' → logprob: -15.325285911560059
    5. '=df' → logprob: -17.200286865234375
    6. '=

' → logprob: -17.575286865234375
    7. '=
' → logprob: -17.825286865234375
    8. '=v' → logprob: -18.450286865234375
    9. '=_' → logprob: -18.575286865234375
    10. 'lambda' → logprob: -18.825286865234375

Token 136: ' x' (ID: 1215)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6355829238891602
    2. 'd' → logprob: -0.7605829238891602
    3. 'v' → logprob: -7.13558292388916
    4. ' v' → logprob: -7.13558292388916
    5. 'x' → logprob: -7.51058292388916
    6. ' x' → logprob: -8.26058292388916
    7. ':d' → logprob: -8.51058292388916
    8. 'lambda' → logprob: -8.63558292388916
    9. ':' → logprob: -9.51058292388916
    10. '	d' → logprob: -10.26058292388916

Token 137: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002448893792461604
    2. ':d' → logprob: -8.375245094299316
    3. ' :' → logprob: -11.250245094299316
    4. 'd' → logprob: -14.125245094299316
    5. ':-' → logprob: -14.375245094299316
    6. ':
' → logprob: -16.625244140625
    7. '_:' → logprob: -19.125244140625
    8. '：' → logprob: -19.250244140625
    9. '   ' → logprob: -19.375244140625
    10. ':v' → logprob: -19.500244140625

Token 138: ' -' (ID: 533)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.38944926857948303
    2. '-d' → logprob: -1.2644492387771606
    3. ' d' → logprob: -3.63944935798645
    4. ' -' → logprob: -4.514449119567871
    5. '-' → logprob: -5.889449119567871
    6. '(-' → logprob: -9.014449119567871
    7. '(d' → logprob: -11.139449119567871
    8. '   ' → logprob: -11.639449119567871
    9. ')d' → logprob: -11.889449119567871
    10. '	d' → logprob: -12.014449119567871

Token 139: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00020354038861114532
    2. ' d' → logprob: -8.500203132629395
    3. '	d' → logprob: -19.12520408630371
    4. ')d' → logprob: -19.12520408630371
    5. '_d' → logprob: -19.62520408630371
    6. '   ' → logprob: -20.37520408630371
    7. '
' → logprob: -20.62520408630371
    8. '(d' → logprob: -21.12520408630371
    9. ' ' → logprob: -21.75020408630371
    10. '[d' → logprob: -21.87520408630371

Token 140: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.4849443838757e-06
    2. '[' → logprob: -12.625004768371582
    3. 'x' → logprob: -14.125004768371582
    4. '[
' → logprob: -15.250004768371582
    5. ' [' → logprob: -17.125003814697266
    6. ' x' → logprob: -17.125003814697266
    7. '[d' → logprob: -17.125003814697266
    8. '(x' → logprob: -17.375003814697266
    9. '{x' → logprob: -18.875003814697266
    10. ')x' → logprob: -18.875003814697266

Token 141: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. '))' → logprob: -12.875004768371582
    3. '})' → logprob: -13.375004768371582
    4. ' )' → logprob: -15.000004768371582
    5. '])' → logprob: -16.250003814697266
    6. ')}' → logprob: -17.375003814697266
    7. '())' → logprob: -17.375003814697266
    8. ')
' → logprob: -17.625003814697266
    9. '}' → logprob: -17.875003814697266
    10. ')return' → logprob: -18.000003814697266

Token 142: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08126799017190933
    2. '()' → logprob: -2.706268072128296
    3. ')' → logprob: -5.206267833709717
    4. '(' → logprob: -6.331267833709717
    5. ':' → logprob: -6.456267833709717
    6. '<|end|>' → logprob: -7.081267833709717
    7. '():' → logprob: -7.456267833709717
    8. '[]' → logprob: -8.206268310546875
    9. '#' → logprob: -8.831268310546875
    10. '[' → logprob: -9.081268310546875

Token 143: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03579171001911163
    2. ' solve' → logprob: -3.6607916355133057
    3. ' def' → logprob: -5.535791873931885
    4. ' process' → logprob: -6.160791873931885
    5. ' find' → logprob: -6.910791873931885
    6. ' calculate' → logprob: -7.410791873931885
    7. 'main' → logprob: -7.785791873931885
    8. ' combine' → logprob: -8.160791397094727
    9. ' get' → logprob: -8.285791397094727
    10. ' compute' → logprob: -8.410791397094727

Token 144: '_top' (ID: 23394)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.5548195838928223
    2. '_max' → logprob: -1.4298195838928223
    3. '_values' → logprob: -2.5548195838928223
    4. '_' → logprob: -2.9298195838928223
    5. '_keys' → logprob: -4.054819583892822
    6. '_min' → logprob: -4.929819583892822
    7. '_unique' → logprob: -5.054819583892822
    8. '_m' → logprob: -5.304819583892822
    9. '_dict' → logprob: -5.679819583892822
    10. '_value' → logprob: -5.804819583892822

Token 145: '_keys' (ID: 29392)
  Prédit: '_key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.587424099445343
    2. '_k' → logprob: -1.7124240398406982
    3. '_keys' → logprob: -2.0874240398406982
    4. '_n' → logprob: -2.5874240398406982
    5. '_value' → logprob: -3.8374240398406982
    6. '_' → logprob: -4.712424278259277
    7. '_two' → logprob: -4.962424278259277
    8. '_element' → logprob: -5.212424278259277
    9. '_values' → logprob: -5.212424278259277
    10. '_three' → logprob: -5.212424278259277

Token 146: '(a' (ID: 6271)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00010306637705070898
    2. '(' → logprob: -9.625102996826172
    3. '(s' → logprob: -11.125102996826172
    4. ' (' → logprob: -11.250102996826172
    5. '(def' → logprob: -12.000102996826172
    6. '(D' → logprob: -14.875102996826172
    7. '(count' → logprob: -15.125102996826172
    8. '(a' → logprob: -15.250102996826172
    9. '(n' → logprob: -15.375102996826172
    10. '(de' → logprob: -15.375102996826172

Token 147: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3558616042137146
    2. ',' → logprob: -1.3558616638183594
    3. 'rray' → logprob: -4.230861663818359
    4. ')' → logprob: -4.480861663818359
    5. '):
' → logprob: -5.230861663818359
    6. 'rr' → logprob: -6.230861663818359
    7. 's' → logprob: -6.355861663818359
    8. '[]):' → logprob: -6.855861663818359
    9. ',d' → logprob: -7.105861663818359
    10. 'r' → logprob: -7.105861663818359

Token 148: ' count' (ID: 3605)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.35382959246635437
    2. 'n' → logprob: -1.3538296222686768
    3. ' k' → logprob: -4.103829383850098
    4. 'b' → logprob: -4.478829383850098
    5. ' n' → logprob: -4.603829383850098
    6. ' b' → logprob: -7.478829383850098
    7. 'count' → logprob: -7.853829383850098
    8. '2' → logprob: -7.978829383850098
    9. 'a' → logprob: -8.728829383850098
    10. '   ' → logprob: -9.228829383850098

Token 149: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025357098784297705
    2. ')' → logprob: -6.252535820007324
    3. '):
' → logprob: -8.127535820007324
    4. '=' → logprob: -8.752535820007324
    5. 's' → logprob: -9.377535820007324
    6. ',' → logprob: -10.002535820007324
    7. 'a' → logprob: -11.752535820007324
    8. ' ):' → logprob: -12.002535820007324
    9. '=None' → logprob: -13.252535820007324
    10. ':' → logprob: -13.627535820007324

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03136676922440529
    2. ' return' → logprob: -3.5313668251037598
    3. ':
' → logprob: -7.28136682510376
    4. 'return' → logprob: -7.28136682510376
    5. ':' → logprob: -9.656366348266602
    6. '	return' → logprob: -9.781366348266602
    7. '):
' → logprob: -10.031366348266602
    8. '[]' → logprob: -11.156366348266602
    9. ':return' → logprob: -11.156366348266602
    10. '[' → logprob: -12.031366348266602

Token 151: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4914701282978058
    2. 'return' (adapté à ' return') → logprob: -1.3664700984954834
    3. 'a' → logprob: -2.7414700984954834
    4. ' a' → logprob: -3.1164700984954834
    5. '   ' → logprob: -3.7414700984954834
    6. '[a' → logprob: -8.366470336914062
    7. '[]
' → logprob: -8.616470336914062
    8. '[]' → logprob: -8.616470336914062
    9. '
' → logprob: -9.616470336914062
    10. '[' → logprob: -10.491470336914062

Token 152: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12694185972213745
    2. ' a' → logprob: -2.1269419193267822
    3. '[a' → logprob: -11.626941680908203
    4. '   ' → logprob: -13.376941680908203
    5. '[' → logprob: -13.876941680908203
    6. 'sorted' → logprob: -14.001941680908203
    7. ' sorted' → logprob: -14.751941680908203
    8. '	a' → logprob: -14.751941680908203
    9. 'list' → logprob: -15.251941680908203
    10. ' list' → logprob: -16.001941680908203

Token 153: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -1.8193366486229934e-05
    2. '[' → logprob: -11.125018119812012
    3. '[:]' → logprob: -13.000018119812012
    4. ' [:' → logprob: -14.375018119812012
    5. '[count' → logprob: -14.750018119812012
    6. '][:' → logprob: -16.625019073486328
    7. '[:-' → logprob: -17.500019073486328
    8. '
' → logprob: -18.375019073486328
    9. 'count' → logprob: -18.625019073486328
    10. '[
' → logprob: -18.625019073486328

Token 154: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -3.7697225252486533e-06
    2. ' count' → logprob: -12.500003814697266
    3. '   ' → logprob: -20.875003814697266
    4. '(count' → logprob: -21.875003814697266
    5. '	count' → logprob: -23.125003814697266
    6. ' ' → logprob: -23.625003814697266
    7. '1' → logprob: -24.000003814697266
    8. '[count' → logprob: -24.500003814697266
    9. '
' → logprob: -24.625003814697266
    10. '5' → logprob: -24.625003814697266

Token 155: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4736459888808895e-05
    2. ']' → logprob: -11.375014305114746
    3. ' )' → logprob: -13.375014305114746
    4. '}' → logprob: -14.125014305114746
    5. ')
' → logprob: -14.625014305114746
    6. '）' → logprob: -15.750014305114746
    7. ')return' → logprob: -16.125015258789062
    8. '<|end|>' → logprob: -16.250015258789062
    9. ')]' → logprob: -17.125015258789062
    10. ' ' → logprob: -17.750015258789062

Token 156: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002238013403257355
    2. 'n' → logprob: -8.625224113464355
    3. 'N' → logprob: -11.500224113464355
    4. '#' → logprob: -11.625224113464355
    5. '```' → logprob: -11.875224113464355
    6. 'count' → logprob: -12.750224113464355
    7. 'for' → logprob: -12.875224113464355
    8. 'a' → logprob: -12.875224113464355
    9. 'print' → logprob: -13.500224113464355
    10. '(n' → logprob: -13.625224113464355

Token 157: ' add' (ID: 1147)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.18234381079673767
    2. 'main' → logprob: -1.80734384059906
    3. 'def' → logprob: -6.93234395980835
    4. ' def' → logprob: -7.55734395980835
    5. ' solve' → logprob: -7.68234395980835
    6. 'solve' → logprob: -8.557343482971191
    7. ' process' → logprob: -9.307343482971191
    8. ' calculate' → logprob: -9.932343482971191
    9. 'calculate' → logprob: -9.932343482971191
    10. ' get' → logprob: -10.057343482971191

Token 158: '_result' (ID: 11623)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.371145248413086
    2. '_values' → logprob: -2.121145248413086
    3. '_new' → logprob: -2.246145248413086
    4. '_' → logprob: -2.371145248413086
    5. '_keys' → logprob: -2.746145248413086
    6. '_s' → logprob: -3.246145248413086
    7. '_elements' → logprob: -3.246145248413086
    8. '_value' → logprob: -3.871145248413086
    9. '_key' → logprob: -4.121145248413086
    10. '_indices' → logprob: -4.371145248413086

Token 159: '_if' (ID: 25821)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7148215174674988
    2. '(result' → logprob: -1.4648215770721436
    3. '(_' → logprob: -2.0898215770721436
    4. '_result' → logprob: -2.4648215770721436
    5. '(s' → logprob: -3.9648215770721436
    6. '_line' → logprob: -4.2148213386535645
    7. '(results' → logprob: -4.5898213386535645
    8. 's' → logprob: -5.3398213386535645
    9. '(Result' → logprob: -5.4648213386535645
    10. '(a' → logprob: -5.5898213386535645

Token 160: '_dist' (ID: 37968)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.477576732635498
    2. '_not' → logprob: -2.102576732635498
    3. '_present' → logprob: -2.102576732635498
    4. '(d' → logprob: -2.602576732635498
    5. '(' → logprob: -2.727576732635498
    6. '_exists' → logprob: -3.102576732635498
    7. '_equal' → logprob: -3.227576732635498
    8. '_unique' → logprob: -3.227576732635498
    9. '_possible' → logprob: -3.227576732635498
    10. '_found' → logprob: -3.602576732635498

Token 161: 'inct' (ID: 11251)
  Prédit: 'inct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inct' → logprob: -0.007614083122462034
    2. '_count' → logprob: -6.1326141357421875
    3. '_keys' → logprob: -6.6326141357421875
    4. 'ict' → logprob: -7.3826141357421875
    5. '_key' → logprob: -7.5076141357421875
    6. '(a' → logprob: -7.7576141357421875
    7. 'ance' → logprob: -8.007614135742188
    8. '(v' → logprob: -8.007614135742188
    9. '(count' → logprob: -8.632614135742188
    10. 'inc' → logprob: -8.632614135742188

Token 162: '(r' (ID: 4729)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.8450597524642944
    2. '(result' → logprob: -0.9700597524642944
    3. '(v' → logprob: -2.345059871673584
    4. '(d' → logprob: -3.345059871673584
    5. '(res' → logprob: -3.720059871673584
    6. '(results' → logprob: -4.845059871673584
    7. '(' → logprob: -4.845059871673584
    8. '(s' → logprob: -4.970059871673584
    9. '(keys' → logprob: -5.970059871673584
    10. '(key' → logprob: -6.220059871673584

Token 163: ',' (ID: 11)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.07111311703920364
    2. 'es' → logprob: -3.571113109588623
    3. '(result' → logprob: -3.571113109588623
    4. 'inct' → logprob: -5.571113109588623
    5. '(es' → logprob: -6.321113109588623
    6. '(e' → logprob: -6.946113109588623
    7. '```' → logprob: -7.196113109588623
    8. ',' → logprob: -7.196113109588623
    9. '(' → logprob: -7.321113109588623
    10. '(results' → logprob: -7.571113109588623

Token 164: ' k' (ID: 372)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4443983733654022
    2. ' v' → logprob: -2.1943984031677246
    3. 'x' → logprob: -2.5693984031677246
    4. 'a' → logprob: -2.5693984031677246
    5. ' a' → logprob: -4.194398403167725
    6. ' val' → logprob: -4.194398403167725
    7. 'value' → logprob: -4.319398403167725
    8. ' x' → logprob: -4.444398403167725
    9. ' value' → logprob: -5.069398403167725
    10. ' key' → logprob: -5.069398403167725

Token 165: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3411834239959717
    2. 'ey' → logprob: -1.3411834239959717
    3. 'eys' → logprob: -3.7161834239959717
    4. '):' → logprob: -6.216183662414551
    5. 's' → logprob: -7.466183662414551
    6. '):
' → logprob: -8.34118366241455
    7. 'y' → logprob: -9.34118366241455
    8. 'e' → logprob: -9.46618366241455
    9. '1' → logprob: -9.59118366241455
    10. ' ,' → logprob: -9.84118366241455

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003682285314425826
    2. ',k' → logprob: -8.625368118286133
    3. ' ,' → logprob: -8.750368118286133
    4. '1' → logprob: -10.625368118286133
    5. ',r' → logprob: -13.625368118286133
    6. ',key' → logprob: -13.625368118286133
    7. 's' → logprob: -13.750368118286133
    8. '):' → logprob: -14.375368118286133
    9. ',v' → logprob: -15.500368118286133
    10. '_,' → logprob: -15.625368118286133

Token 167: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07889562100172043
    2. ' k' → logprob: -2.5788955688476562
    3. ' ' → logprob: -12.953895568847656
    4. 'v' → logprob: -13.328895568847656
    5. '   ' → logprob: -13.953895568847656
    6. '  ' → logprob: -15.203895568847656
    7. ' v' → logprob: -15.453895568847656
    8. '    ' → logprob: -15.828895568847656
    9. '	k' → logprob: -16.203895568847656
    10. ' ' → logprob: -16.703895568847656

Token 168: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007707939948886633
    2. '1' → logprob: -7.375770568847656
    3. 'ey' → logprob: -9.375770568847656
    4. ',' → logprob: -9.875770568847656
    5. ')' → logprob: -12.375770568847656
    6. 'eys' → logprob: -14.000770568847656
    7. '```' → logprob: -14.250770568847656
    8. 'e' → logprob: -14.375770568847656
    9. ' ' → logprob: -15.250770568847656
    10. ',k' → logprob: -15.375770568847656

Token 169: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014320511370897293
    2. ',' → logprob: -4.389320373535156
    3. '):
' → logprob: -6.514320373535156
    4. ')' → logprob: -8.139320373535156
    5. ' ):' → logprob: -11.264320373535156
    6. ',k' → logprob: -11.639320373535156
    7. '   ' → logprob: -11.889320373535156
    8. '):
' → logprob: -13.014320373535156
    9. ' ' → logprob: -13.264320373535156
    10. ' ,' → logprob: -14.264320373535156

Token 170: ' N' (ID: 478)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -1.3839483261108398
    2. 'v' → logprob: -1.6339483261108398
    3. 'k' → logprob: -1.7589483261108398
    4. ' k' → logprob: -1.8839483261108398
    5. ' d' → logprob: -2.25894832611084
    6. 'd' → logprob: -2.38394832611084
    7. ' count' → logprob: -4.38394832611084
    8. 'count' → logprob: -5.50894832611084
    9. ')' → logprob: -5.75894832611084
    10. ' )' → logprob: -6.57144832611084

Token 171: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008356533013284206
    2. ',' → logprob: -5.00835657119751
    3. '):
' → logprob: -6.75835657119751
    4. ')' → logprob: -7.75835657119751
    5. ' ):' → logprob: -10.383356094360352
    6. '   ' → logprob: -12.633356094360352
    7. '=' → logprob: -13.383356094360352
    8. ' ' → logprob: -13.508356094360352
    9. '):
' → logprob: -13.508356094360352
    10. '):

' → logprob: -13.508356094360352

Token 172: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.957657516002655
    2. ' v' → logprob: -1.5826575756072998
    3. 'k' → logprob: -2.7076575756073
    4. 'd' → logprob: -3.2076575756073
    5. 'M' → logprob: -3.4576575756073
    6. 'r' → logprob: -3.4576575756073
    7. ' k' → logprob: -3.7076575756073
    8. ' d' → logprob: -3.8326575756073
    9. ' M' → logprob: -3.9576575756073
    10. ' r' → logprob: -4.395157337188721

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17192982137203217
    2. 'al' → logprob: -2.0469298362731934
    3. '2' → logprob: -4.671929836273193
    4. ')' → logprob: -4.796929836273193
    5. 'alue' → logprob: -5.296929836273193
    6. '):' → logprob: -6.421929836273193
    7. 'als' → logprob: -6.796929836273193
    8. '3' → logprob: -6.921929836273193
    9. 's' → logprob: -7.046929836273193
    10. 'a' → logprob: -8.046929359436035

Token 174: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.26673123240470886
    2. ',' → logprob: -1.5167312622070312
    3. '):
' → logprob: -4.516731262207031
    4. ',k' → logprob: -6.516731262207031
    5. '1' → logprob: -7.141731262207031
    6. ')' → logprob: -7.391731262207031
    7. ' ):' → logprob: -8.766731262207031
    8. '2' → logprob: -8.891731262207031
    9. '[k' → logprob: -9.141731262207031
    10. ' ,' → logprob: -9.516731262207031

Token 175: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.024534817785024643
    2. ' v' → logprob: -3.7745347023010254
    3. 'k' → logprob: -6.774534702301025
    4. ' k' → logprob: -9.774535179138184
    5. '   ' → logprob: -10.274535179138184
    6. 'd' → logprob: -10.649535179138184
    7. 'r' → logprob: -11.899535179138184
    8. ')' → logprob: -12.524535179138184
    9. ' ' → logprob: -12.524535179138184
    10. ' d' → logprob: -12.899535179138184

Token 176: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002931702882051468
    2. '1' → logprob: -5.877931594848633
    3. ')' → logprob: -9.502931594848633
    4. ',' → logprob: -10.377931594848633
    5. '):' → logprob: -11.877931594848633
    6. 'alue' → logprob: -12.002931594848633
    7. ' ' → logprob: -13.377931594848633
    8. 'ALUE' → logprob: -13.877931594848633
    9. '):
' → logprob: -14.002931594848633
    10. '_' → logprob: -14.127931594848633

Token 177: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0372617244720459
    2. '):
' → logprob: -3.412261724472046
    3. ',' → logprob: -5.662261962890625
    4. '):
' → logprob: -9.662261962890625
    5. ')' → logprob: -10.037261962890625
    6. '   ' → logprob: -11.537261962890625
    7. ' ):' → logprob: -12.162261962890625
    8. '):

' → logprob: -12.412261962890625
    9. ',k' → logprob: -13.537261962890625
    10. ' ' → logprob: -13.662261962890625

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000294586323434487
    2. ':' → logprob: -9.00029468536377
    3. ' if' → logprob: -9.62529468536377
    4. ',' → logprob: -10.37529468536377
    5. '):
' → logprob: -10.75029468536377
    6. 'if' → logprob: -11.12529468536377
    7. ':
' → logprob: -11.25029468536377
    8. '):' → logprob: -12.12529468536377
    9. '   ' → logprob: -12.62529468536377
    10. ')' → logprob: -12.75029468536377

Token 179: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9445221424102783
    2. ' if' → logprob: -1.0695221424102783
    3. 'if' (adapté à ' if') → logprob: -1.3195221424102783
    4. 'def' → logprob: -8.3195219039917
    5. 'for' → logprob: -9.1945219039917
    6. ' for' → logprob: -9.4445219039917
    7. ' keys' → logprob: -10.6945219039917
    8. ' v' → logprob: -10.9445219039917
    9. ' def' → logprob: -10.9445219039917
    10. 'count' → logprob: -10.9445219039917

Token 180: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08100342005491257
    2. ' k' → logprob: -2.581003427505493
    3. '(k' → logprob: -6.956003189086914
    4. 'len' → logprob: -8.081003189086914
    5. ' (' → logprob: -8.206003189086914
    6. 'v' → logprob: -8.831003189086914
    7. ' v' → logprob: -9.331003189086914
    8. ' len' → logprob: -9.456003189086914
    9. '   ' → logprob: -9.706003189086914
    10. 'N' → logprob: -9.831003189086914

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. '_' → logprob: -12.000007629394531
    3. '```' → logprob: -14.500007629394531
    4. ' ' → logprob: -15.875007629394531
    5. '[' → logprob: -16.43750762939453
    6. '!=' → logprob: -16.87500762939453
    7. '2' → logprob: -17.37500762939453
    8. '
' → logprob: -17.50000762939453
    9. ' !=' → logprob: -17.93750762939453
    10. ',' → logprob: -18.12500762939453

Token 182: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.35940316319465637
    2. ' !=' → logprob: -1.234403133392334
    3. ' not' → logprob: -4.734403133392334
    4. 'not' → logprob: -6.859403133392334
    5. '==' → logprob: -7.734403133392334
    6. '[' → logprob: -8.859403610229492
    7. ' is' → logprob: -9.109403610229492
    8. 'is' → logprob: -9.484403610229492
    9. ' in' → logprob: -9.609403610229492
    10. 'in' → logprob: -10.109403610229492

Token 183: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.01817791908979416
    2. ' k' → logprob: -4.0181779861450195
    3. 'None' → logprob: -11.39317798614502
    4. '   ' → logprob: -12.26817798614502
    5. ' ' → logprob: -12.39317798614502
    6. ' None' → logprob: -12.76817798614502
    7. '-' → logprob: -13.76817798614502
    8. '
' → logprob: -14.39317798614502
    9. ' -' → logprob: -14.51817798614502
    10. '  ' → logprob: -14.89317798614502

Token 184: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00021486106561496854
    2. '1' → logprob: -8.500214576721191
    3. 'k' → logprob: -11.625214576721191
    4. ' ' → logprob: -13.625214576721191
    5. '_' → logprob: -14.625214576721191
    6. 'f' → logprob: -15.625214576721191
    7. '```' → logprob: -15.625214576721191
    8. '   ' → logprob: -16.562715530395508
    9. 'ey' → logprob: -16.875215530395508
    10. ' k' → logprob: -16.875215530395508

Token 185: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03149106726050377
    2. 'and' → logprob: -3.5314910411834717
    3. ':' → logprob: -7.156491279602051
    4. '   ' → logprob: -7.281491279602051
    5. '       ' → logprob: -9.15649127960205
    6. ':
' → logprob: -9.28149127960205
    7. ' or' → logprob: -10.28149127960205
    8. '	and' → logprob: -11.28149127960205
    9. '    ' → logprob: -12.03149127960205
    10. ' ' → logprob: -12.03149127960205

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026760143227875233
    2. 'r' → logprob: -6.877676010131836
    3. ' and' → logprob: -7.252676010131836
    4. ' r' → logprob: -8.002676010131836
    5. ':' → logprob: -8.752676010131836
    6. '   ' → logprob: -8.877676010131836
    7. 'and' → logprob: -9.252676010131836
    8. ':
' → logprob: -9.502676010131836
    9. '           ' → logprob: -10.502676010131836
    10. '
' → logprob: -10.502676010131836

Token 187: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.26864516735076904
    2. '       ' → logprob: -1.893645167350769
    3. ' r' → logprob: -2.5186452865600586
    4. '           ' → logprob: -5.518645286560059
    5. '   ' → logprob: -8.518645286560059
    6. ' if' → logprob: -10.018645286560059
    7. '               ' → logprob: -10.268645286560059
    8. 'if' → logprob: -10.393645286560059
    9. '
' → logprob: -10.768645286560059
    10. 'for' → logprob: -11.143645286560059

Token 188: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005378306843340397
    2. '.' → logprob: -5.255378246307373
    3. 'append' → logprob: -10.005378723144531
    4. ' .' → logprob: -10.005378723144531
    5. '.add' → logprob: -10.255378723144531
    6. ' +=' → logprob: -12.255378723144531
    7. '.extend' → logprob: -12.755378723144531
    8. '+' → logprob: -13.005378723144531
    9. '.app' → logprob: -13.630378723144531
    10. 'd' → logprob: -13.880378723144531

Token 189: '(N' (ID: 10564)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.07931438833475113
    2. '(' → logprob: -3.5793144702911377
    3. '(k' → logprob: -3.5793144702911377
    4. '(N' → logprob: -3.9543144702911377
    5. '(f' → logprob: -7.454314231872559
    6. '([' → logprob: -7.829314231872559
    7. '(((' → logprob: -8.454314231872559
    8. '(True' → logprob: -11.079314231872559
    9. '(str' → logprob: -11.579314231872559
    10. '(len' → logprob: -11.704314231872559

Token 190: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2254415601491928
    2. '-' → logprob: -2.3504414558410645
    3. ' -' → logprob: -2.7254414558410645
    4. ',' → logprob: -4.2254414558410645
    5. ' )' → logprob: -4.2254414558410645
    6. '-k' → logprob: -5.4754414558410645
    7. '*' → logprob: -5.9754414558410645
    8. ',k' → logprob: -6.8504414558410645
    9. '+' → logprob: -7.7254414558410645
    10. '[' → logprob: -7.8504414558410645

Token 191: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9098715782165527
    2. ' v' → logprob: -1.1598715782165527
    3. ' (' → logprob: -1.9098715782165527
    4. '(v' → logprob: -2.0348715782165527
    5. '(' → logprob: -5.409871578216553
    6. ' max' → logprob: -8.534872055053711
    7. 'max' → logprob: -9.409872055053711
    8. ' ' → logprob: -9.784872055053711
    9. '   ' → logprob: -9.909872055053711
    10. ')' → logprob: -10.097372055053711

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038872790173627436
    2. 'al' → logprob: -8.375389099121094
    3. 'alue' → logprob: -9.125389099121094
    4. '[k' → logprob: -10.250389099121094
    5. '2' → logprob: -12.000389099121094
    6. '[v' → logprob: -12.250389099121094
    7. 'l' → logprob: -14.250389099121094
    8. '[' → logprob: -15.375389099121094
    9. '[key' → logprob: -15.375389099121094
    10. 'k' → logprob: -15.625389099121094

Token 193: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.8624639324116288e-06
    2. '.get' → logprob: -13.375001907348633
    3. 'k' → logprob: -15.750001907348633
    4. '[key' → logprob: -16.500001907348633
    5. '[' → logprob: -17.625001907348633
    6. '[m' → logprob: -19.500001907348633
    7. '[v' → logprob: -20.250001907348633
    8. '.k' → logprob: -21.125001907348633
    9. '[
' → logprob: -21.375001907348633
    10. ' [' → logprob: -21.375001907348633

Token 194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.288163083605468e-05
    2. 'k' → logprob: -9.875052452087402
    3. 's' → logprob: -15.000052452087402
    4. ' k' → logprob: -15.375052452087402
    5. 'r' → logprob: -15.500052452087402
    6. 'ey' → logprob: -15.500052452087402
    7. '2' → logprob: -16.12505340576172
    8. '])' → logprob: -16.37505340576172
    9. '[k' → logprob: -16.62505340576172
    10. ']' → logprob: -16.87505340576172

Token 195: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00042507401667535305
    2. '])' → logprob: -8.375425338745117
    3. ']-' → logprob: -8.875425338745117
    4. '-' → logprob: -11.000425338745117
    5. ' ]' → logprob: -11.125425338745117
    6. ')' → logprob: -11.500425338745117
    7. ']+' → logprob: -12.625425338745117
    8. '])
' → logprob: -13.375425338745117
    9. ']*' → logprob: -13.375425338745117
    10. ' -' → logprob: -13.375425338745117

Token 196: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18038272857666016
    2. '-' → logprob: -1.8053827285766602
    3. ')' → logprob: -8.05538272857666
    4. ' ' → logprob: -8.55538272857666
    5. '   ' → logprob: -9.30538272857666
    6. '  ' → logprob: -11.80538272857666
    7. '[' → logprob: -11.80538272857666
    8. '+' → logprob: -12.05538272857666
    9. ' )' → logprob: -12.80538272857666
    10. '```' → logprob: -13.18038272857666

Token 197: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.018151111900806427
    2. ' v' → logprob: -4.01815128326416
    3. '       ' → logprob: -14.51815128326416
    4. ')v' → logprob: -14.51815128326416
    5. '	v' → logprob: -16.018150329589844
    6. '   ' → logprob: -16.893150329589844
    7. '           ' → logprob: -17.893150329589844
    8. '(v' → logprob: -18.143150329589844
    9. ')' → logprob: -18.393150329589844
    10. '2' → logprob: -18.643150329589844

Token 198: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002787359117064625
    2. '[k' → logprob: -8.75027847290039
    3. 'k' → logprob: -9.12527847290039
    4. '1' → logprob: -12.12527847290039
    5. '[v' → logprob: -13.50027847290039
    6. 'alue' → logprob: -14.18777847290039
    7. '   ' → logprob: -14.50027847290039
    8. ' k' → logprob: -14.93777847290039
    9. ' ' → logprob: -15.06277847290039
    10. '```' → logprob: -15.12527847290039

Token 199: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -7.584239938296378e-06
    2. '[' → logprob: -12.000007629394531
    3. 'k' → logprob: -14.125007629394531
    4. '[key' → logprob: -15.500007629394531
    5. '{k' → logprob: -15.500007629394531
    6. ' [' → logprob: -16.50000762939453
    7. '.get' → logprob: -16.62500762939453
    8. '(k' → logprob: -16.75000762939453
    9. ' k' → logprob: -17.25000762939453
    10. '

' → logprob: -17.50000762939453

Token 200: '2' (ID: 17)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5761179327964783
    2. '2' → logprob: -0.8261179327964783
    3. ' k' → logprob: -8.701117515563965
    4. '[k' → logprob: -11.701117515563965
    5. '```' → logprob: -14.201117515563965
    6. ' ' → logprob: -14.451117515563965
    7. '  ' → logprob: -15.076117515563965
    8. '   ' → logprob: -15.076117515563965
    9. '{k' → logprob: -15.076117515563965
    10. '_k' → logprob: -15.076117515563965

Token 201: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.003158588195219636
    2. ')' → logprob: -6.0031585693359375
    3. ']' → logprob: -7.3781585693359375
    4. ']+' → logprob: -10.628158569335938
    5. '))' → logprob: -11.378158569335938
    6. '])
' → logprob: -12.003158569335938
    7. ')])' → logprob: -12.378158569335938
    8. ' ])' → logprob: -12.378158569335938
    9. ''])' → logprob: -13.378158569335938
    10. ']))' → logprob: -13.878158569335938

Token 202: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34327831864356995
    2. 'else' → logprob: -1.7182782888412476
    3. '<|end|>' → logprob: -2.468278408050537
    4. ' else' → logprob: -3.843278408050537
    5. 'elif' → logprob: -6.718278408050537
    6. ' ' → logprob: -6.968278408050537
    7. '   ' → logprob: -7.093278408050537
    8. ')' → logprob: -7.718278408050537
    9. '#' → logprob: -8.593277931213379
    10. '[' → logprob: -8.718277931213379

Token 203: ' ensure' (ID: 6757)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.09433302283287048
    2. 'main' → logprob: -2.7193329334259033
    3. ' def' → logprob: -4.594333171844482
    4. ' process' → logprob: -5.219333171844482
    5. 'def' → logprob: -5.219333171844482
    6. 'process' → logprob: -6.594333171844482
    7. ' solve' → logprob: -6.969333171844482
    8. ' run' → logprob: -8.094332695007324
    9. 'solve' → logprob: -8.844332695007324
    10. ' compute' → logprob: -9.594332695007324

Token 204: '_result' (ID: 11623)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.3441380560398102
    2. '_unique' → logprob: -1.5941380262374878
    3. '_not' → logprob: -3.7191381454467773
    4. '_key' → logprob: -4.344138145446777
    5. '_dict' → logprob: -4.594138145446777
    6. '_list' → logprob: -4.969138145446777
    7. '_keys' → logprob: -5.344138145446777
    8. '_d' → logprob: -5.719138145446777
    9. '_non' → logprob: -5.719138145446777
    10. '_capacity' → logprob: -6.094138145446777

Token 205: '_non' (ID: 52193)
  Prédit: '_not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_not' → logprob: -1.5269215106964111
    2. '_unique' → logprob: -1.5269215106964111
    3. '_capacity' → logprob: -1.7769215106964111
    4. '_list' → logprob: -2.151921510696411
    5. '_non' → logprob: -2.901921510696411
    6. '_size' → logprob: -3.151921510696411
    7. '_append' → logprob: -3.401921510696411
    8. '(r' → logprob: -3.401921510696411
    9. '_length' → logprob: -3.526921510696411
    10. 's' → logprob: -3.776921510696411

Token 206: '_empty' (ID: 35051)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.0001514557225164026
    2. '_empty' → logprob: -8.875151634216309
    3. 'negative' → logprob: -12.375151634216309
    4. 'def' → logprob: -13.125151634216309
    5. '-empty' → logprob: -13.250151634216309
    6. 'empt' → logprob: -13.375151634216309
    7. 'de' → logprob: -14.500151634216309
    8. ' empty' → logprob: -14.500151634216309
    9. 'emt' → logprob: -14.500151634216309
    10. 'zero' → logprob: -15.500151634216309

Token 207: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -2.629921436891891e-05
    2. 'def' → logprob: -11.25002670288086
    3. '(' → logprob: -11.50002670288086
    4. ' (' → logprob: -13.75002670288086
    5. '(R' → logprob: -14.50002670288086
    6. '(def' → logprob: -14.50002670288086
    7. '(res' → logprob: -15.00002670288086
    8. '(result' → logprob: -15.12502670288086
    9. '(
' → logprob: -16.12502670288086
    10. '((' → logprob: -16.25002670288086

Token 208: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13126035034656525
    2. '):
' → logprob: -2.131260395050049
    3. ',' → logprob: -5.631260395050049
    4. ')' → logprob: -8.38125991821289
    5. '(r' → logprob: -8.63125991821289
    6. ',r' → logprob: -8.75625991821289
    7. '):

' → logprob: -10.13125991821289
    8. '   ' → logprob: -10.25625991821289
    9. '):
' → logprob: -10.25625991821289
    10. '():' → logprob: -11.38125991821289

Token 209: ' N' (ID: 478)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.29335811734199524
    2. 'N' → logprob: -1.4183580875396729
    3. ' r' → logprob: -5.668358325958252
    4. 'k' → logprob: -5.668358325958252
    5. 'v' → logprob: -6.543358325958252
    6. 'result' → logprob: -6.668358325958252
    7. ' N' → logprob: -7.043358325958252
    8. 'default' → logprob: -7.793358325958252
    9. 'd' → logprob: -8.168357849121094
    10. 'res' → logprob: -8.293357849121094

Token 210: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018841347191482782
    2. ',r' → logprob: -6.6268839836120605
    3. '):
' → logprob: -7.8768839836120605
    4. '):' → logprob: -8.876884460449219
    5. '   ' → logprob: -11.251884460449219
    6. ' ,' → logprob: -11.376884460449219
    7. 'r' → logprob: -12.001884460449219
    8. ')' → logprob: -12.751884460449219
    9. ',
' → logprob: -12.876884460449219
    10. '):

' → logprob: -14.626884460449219

Token 211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007425837218761444
    2. 'if' → logprob: -5.382425785064697
    3. ' if' → logprob: -5.882425785064697
    4. '<|end|>' → logprob: -12.757426261901855
    5. '	if' → logprob: -13.007426261901855
    6. '
' → logprob: -13.007426261901855
    7. '    
' → logprob: -13.132426261901855
    8. 'If' → logprob: -13.257426261901855
    9. '```' → logprob: -13.632426261901855
    10. ' ' → logprob: -15.257426261901855

Token 212: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03811538591980934
    2. '   ' → logprob: -3.5381155014038086
    3. ' if' → logprob: -4.788115501403809
    4. '```' → logprob: -14.288115501403809
    5. '	if' → logprob: -14.413115501403809
    6. 'If' → logprob: -14.788115501403809
    7. ' ' → logprob: -15.663115501403809
    8. '
' → logprob: -15.788115501403809
    9. '  ' → logprob: -17.163114547729492
    10. '    ' → logprob: -17.663114547729492

Token 213: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3591529428958893
    2. ' not' → logprob: -1.359152913093567
    3. 'len' → logprob: -3.1091530323028564
    4. ' len' → logprob: -8.484152793884277
    5. '   ' → logprob: -11.859152793884277
    6. '(len' → logprob: -14.484152793884277
    7. ' ' → logprob: -14.734152793884277
    8. '(not' → logprob: -14.984152793884277
    9. '	not' → logprob: -15.359152793884277
    10. '  ' → logprob: -17.109153747558594

Token 214: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.029750604182481766
    2. ' r' → logprob: -3.5297505855560303
    3. '	r' → logprob: -16.90475082397461
    4. '(r' → logprob: -17.27975082397461
    5. '_r' → logprob: -18.52975082397461
    6. '
' → logprob: -19.40475082397461
    7. 'len' → logprob: -19.52975082397461
    8. '   ' → logprob: -19.65475082397461
    9. ' ' → logprob: -19.65475082397461
    10. '$r' → logprob: -20.52975082397461

Token 215: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020748121663928032
    2. ':
' → logprob: -3.8957481384277344
    3. '.append' → logprob: -8.645748138427734
    4. '.' → logprob: -11.645748138427734
    5. 'append' → logprob: -12.020748138427734
    6. ':return' → logprob: -12.020748138427734
    7. ':def' → logprob: -13.270748138427734
    8. '):' → logprob: -13.770748138427734
    9. '>:' → logprob: -13.895748138427734
    10. ':add' → logprob: -14.020748138427734

Token 216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06427082419395447
    2. '   ' → logprob: -3.3142707347869873
    3. ':' → logprob: -4.189270973205566
    4. ':
' → logprob: -4.689270973205566
    5. ' r' → logprob: -6.939270973205566
    6. 'r' → logprob: -7.939270973205566
    7. '):
' → logprob: -9.939270973205566
    8. ',' → logprob: -10.439270973205566
    9. '[' → logprob: -10.814270973205566
    10. ',r' → logprob: -11.189270973205566

Token 217: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.029581543058156967
    2. '   ' → logprob: -3.9045815467834473
    3. '       ' → logprob: -5.404581546783447
    4. ' r' → logprob: -5.404581546783447
    5. '
' → logprob: -13.654581069946289
    6. '           ' → logprob: -13.654581069946289
    7. '	r' → logprob: -13.779581069946289
    8. '  ' → logprob: -14.029581069946289
    9. '```' → logprob: -14.404581069946289
    10. ' ' → logprob: -14.404581069946289

Token 218: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009175319573841989
    2. '.' → logprob: -7.000917434692383
    3. '.app' → logprob: -12.750917434692383
    4. '.ap' → logprob: -13.125917434692383
    5. 'append' → logprob: -14.375917434692383
    6. '.extend' → logprob: -16.125917434692383
    7. '.setdefault' → logprob: -16.625917434692383
    8. ' .' → logprob: -16.625917434692383
    9. '.add' → logprob: -16.750917434692383
    10. '.Append' → logprob: -17.125917434692383

Token 219: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2519614100456238
    2. '(N' → logprob: -1.5019614696502686
    3. '(' → logprob: -10.751961708068848
    4. '0' → logprob: -11.626961708068848
    5. ' N' → logprob: -13.501961708068848
    6. '1' → logprob: -16.25196075439453
    7. '	N' → logprob: -16.75196075439453
    8. '2' → logprob: -16.87696075439453
    9. '   ' → logprob: -16.87696075439453
    10. '(
' → logprob: -17.00196075439453

Token 220: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01117749884724617
    2. '-' → logprob: -4.5111775398254395
    3. ' -' → logprob: -9.136177062988281
    4. ')
' → logprob: -11.386177062988281
    5. '<|end|>' → logprob: -12.136177062988281
    6. ' )' → logprob: -12.886177062988281
    7. ')return' → logprob: -14.761177062988281
    8. '[' → logprob: -14.886177062988281
    9. '<|end|>' → logprob: -15.136177062988281
    10. '-)' → logprob: -15.636177062988281

Token 221: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.875021934509277
    3. '1' → logprob: -13.000021934509277
    4. '0' → logprob: -15.750021934509277
    5. '3' → logprob: -17.00002098083496
    6. '```' → logprob: -17.50002098083496
    7. '   ' → logprob: -17.62502098083496
    8. '

' → logprob: -17.75002098083496
    9. '
' → logprob: -17.87502098083496
    10. '4' → logprob: -18.50002098083496

Token 222: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. '1' → logprob: -15.250027656555176
    4. '   ' → logprob: -17.750028610229492
    5. '```' → logprob: -18.000028610229492
    6. '２' → logprob: -18.750028610229492
    7. '0' → logprob: -19.375028610229492
    8. '
' → logprob: -19.500028610229492
    9. '

' → logprob: -19.750028610229492
    10. '  ' → logprob: -19.875028610229492

Token 223: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.028536492725834e-05
    2. ' )' → logprob: -10.000070571899414
    3. ')
' → logprob: -10.875070571899414
    4. '*' → logprob: -13.375070571899414
    5. '))' → logprob: -13.500070571899414
    6. '+' → logprob: -14.250070571899414
    7. '   ' → logprob: -14.625070571899414
    8. ')return' → logprob: -15.125070571899414
    9. ' +' → logprob: -15.625070571899414
    10. '*)' → logprob: -15.625070571899414

Token 224: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.534558552724775e-05
    2. '<|end|>' → logprob: -10.625025749206543
    3. ' def' → logprob: -14.625025749206543
    4. 'from' → logprob: -15.375025749206543
    5. '#' → logprob: -16.375024795532227
    6. '```' → logprob: -16.500024795532227
    7. '<|end|>' → logprob: -17.125024795532227
    8. '
' → logprob: -17.500024795532227
    9. '[' → logprob: -17.625024795532227
    10. '\' → logprob: -18.125024795532227

Token 225: ' compute' (ID: 23864)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.09548701345920563
    2. 'def' → logprob: -2.720487117767334
    3. ' main' → logprob: -3.720487117767334
    4. 'process' → logprob: -7.720487117767334
    5. ' def' → logprob: -8.345486640930176
    6. 'solve' → logprob: -8.470486640930176
    7. 'calculate' → logprob: -10.595486640930176
    8. 'combine' → logprob: -10.970486640930176
    9. 'run' → logprob: -11.470486640930176
    10. 'read' → logprob: -11.595486640930176

Token 226: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.46413785219192505
    2. '()' → logprob: -2.0891377925872803
    3. '_result' → logprob: -2.4641377925872803
    4. '_changes' → logprob: -3.0891377925872803
    5. '_max' → logprob: -3.5891377925872803
    6. '(N' → logprob: -3.9641377925872803
    7. '_dist' → logprob: -4.464138031005859
    8. '(' → logprob: -4.464138031005859
    9. 'result' → logprob: -5.089138031005859
    10. 'minimal' → logprob: -5.214138031005859

Token 227: '_result' (ID: 11623)
  Prédit: '_changes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_changes' → logprob: -0.3813597857952118
    2. '_operations' → logprob: -1.6313598155975342
    3. '_moves' → logprob: -3.381359815597534
    4. 'imum' → logprob: -4.131359577178955
    5. '_de' → logprob: -4.256359577178955
    6. '_result' → logprob: -4.506359577178955
    7. '_rem' → logprob: -4.506359577178955
    8. '_ops' → logprob: -5.006359577178955
    9. '_sw' → logprob: -5.131359577178955
    10. '_re' → logprob: -5.506359577178955

Token 228: '(r' (ID: 4729)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.12410645931959152
    2. '(' → logprob: -2.8741064071655273
    3. '(r' → logprob: -3.4991064071655273
    4. '():' → logprob: -4.249106407165527
    5. '(V' → logprob: -4.249106407165527
    6. '(n' → logprob: -7.874106407165527
    7. '((' → logprob: -8.499106407165527
    8. '(:' → logprob: -8.749106407165527
    9. '(def' → logprob: -9.374106407165527
    10. 'def' → logprob: -9.374106407165527

Token 229: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10205269604921341
    2. '):
' → logprob: -2.727052688598633
    3. ',' → logprob: -3.477052688598633
    4. ')' → logprob: -8.477052688598633
    5. '):
' → logprob: -8.602052688598633
    6. '   ' → logprob: -8.852052688598633
    7. ' ):' → logprob: -9.352052688598633
    8. ',N' → logprob: -10.477052688598633
    9. '):

' → logprob: -11.477052688598633
    10. ',r' → logprob: -11.727052688598633

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20693302154541016
    2. 'return' → logprob: -1.7069330215454102
    3. ' return' → logprob: -5.20693302154541
    4. '```' → logprob: -11.20693302154541
    5. '
' → logprob: -11.95693302154541
    6. 'def' → logprob: -12.70693302154541
    7. 'if' → logprob: -13.20693302154541
    8. '	return' → logprob: -14.95693302154541
    9. '`' → logprob: -15.20693302154541
    10. 'min' → logprob: -15.83193302154541

Token 231: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0025081203784793615
    2. ' return' → logprob: -6.127508163452148
    3. '   ' → logprob: -8.127508163452148
    4. 'r' → logprob: -10.627508163452148
    5. 'if' → logprob: -13.002508163452148
    6. '```' → logprob: -14.627508163452148
    7. 'def' → logprob: -15.377508163452148
    8. 'min' → logprob: -16.00250816345215
    9. 'import' → logprob: -16.12750816345215
    10. ' ' → logprob: -16.12750816345215

Token 232: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.12693093717098236
    2. ' min' → logprob: -2.1269309520721436
    3. '0' → logprob: -13.251931190490723
    4. '   ' → logprob: -15.001931190490723
    5. 'max' → logprob: -15.251931190490723
    6. '(min' → logprob: -15.501931190490723
    7. ' ' → logprob: -16.126930236816406
    8. '	min' → logprob: -16.251930236816406
    9. '  ' → logprob: -17.251930236816406
    10. 'float' → logprob: -17.626930236816406

Token 233: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.375
    3. '(
' → logprob: -18.75
    4. 'r' → logprob: -19.375
    5. ' (' → logprob: -20.625
    6. '	r' → logprob: -21.75
    7. '()' → logprob: -21.875
    8. '(res' → logprob: -22.0
    9. '(re' → logprob: -22.125
    10. '   ' → logprob: -22.75

Token 234: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.988221684878226e-06
    2. ' )' → logprob: -12.000006675720215
    3. '()' → logprob: -15.125006675720215
    4. '())' → logprob: -15.250006675720215
    5. ')
' → logprob: -15.750006675720215
    6. ' if' → logprob: -16.37500762939453
    7. ' ' → logprob: -17.00000762939453
    8. ')`' → logprob: -17.75000762939453
    9. '   ' → logprob: -17.87500762939453
    10. 'if' → logprob: -18.12500762939453

Token 235: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.128163257315464e-07
    2. ' def' → logprob: -15.625
    3. '#' → logprob: -17.125
    4. '```' → logprob: -17.5
    5. '<|end|>' → logprob: -18.375
    6. 'ndef' → logprob: -20.0
    7. 'if' → logprob: -20.0
    8. '
' → logprob: -20.125
    9. 'n' → logprob: -20.375
    10. '    
' → logprob: -21.0

Token 236: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.04928663372993469
    2. ' main' → logprob: -3.0492866039276123
    3. 'solve' → logprob: -7.674286842346191
    4. 'def' → logprob: -9.174286842346191
    5. 'min' → logprob: -9.299286842346191
    6. ' solve' → logprob: -10.674286842346191
    7. 'solution' → logprob: -13.174286842346191
    8. 'minimal' → logprob: -13.174286842346191
    9. 'process' → logprob: -13.299286842346191
    10. '	main' → logprob: -13.799286842346191

Token 237: '_logic' (ID: 131254)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -3.130576806142926e-05
    2. '():
' → logprob: -10.500031471252441
    3. ' ():' → logprob: -12.875031471252441
    4. '()' → logprob: -13.875031471252441
    5. '(' → logprob: -16.625030517578125
    6. '():
' → logprob: -17.125030517578125
    7. '():

' → logprob: -18.625030517578125
    8. '_' → logprob: -19.250030517578125
    9. '().' → logprob: -19.750030517578125
    10. ':' → logprob: -20.000030517578125

Token 238: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0004452083958312869
    2. '(N' → logprob: -8.125445365905762
    3. '(' → logprob: -9.250445365905762
    4. ' ():' → logprob: -10.750445365905762
    5. '():
' → logprob: -11.375445365905762
    6. '(:' → logprob: -11.625445365905762
    7. '()' → logprob: -11.875445365905762
    8. '(V' → logprob: -12.875445365905762
    9. '()(' → logprob: -15.125445365905762
    10. 'def' → logprob: -15.500445365905762

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005609611514955759
    2. 'N' → logprob: -5.630609512329102
    3. 'n' → logprob: -6.505609512329102
    4. '
' → logprob: -8.505609512329102
    5. ' N' → logprob: -8.505609512329102
    6. '(N' → logprob: -9.630609512329102
    7. '()' → logprob: -11.630609512329102
    8. '(n' → logprob: -11.880609512329102
    9. '	N' → logprob: -11.880609512329102
    10. ' n' → logprob: -12.130609512329102

Token 240: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.018898174166679382
    2. '   ' → logprob: -4.393898010253906
    3. 'n' → logprob: -5.643898010253906
    4. ' N' → logprob: -5.893898010253906
    5. 'import' → logprob: -10.643898010253906
    6. ' n' → logprob: -11.018898010253906
    7. ' ' → logprob: -11.393898010253906
    8. 'def' → logprob: -11.893898010253906
    9. '
' → logprob: -12.393898010253906
    10. 't' → logprob: -13.018898010253906

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023966670036316
    2. '=' → logprob: -1.9102396965026855
    3. ',' → logprob: -11.160239219665527
    4. ' =
' → logprob: -14.035239219665527
    5. ' ' → logprob: -15.660239219665527
    6. '=int' → logprob: -16.285240173339844
    7. ' ,' → logprob: -16.785240173339844
    8. '   ' → logprob: -17.160240173339844
    9. ')' → logprob: -17.285240173339844
    10. ' ' → logprob: -17.285240173339844

Token 242: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.10020699352025986
    2. ' read' → logprob: -2.3502070903778076
    3. '   ' → logprob: -15.100207328796387
    4. '	read' → logprob: -16.97520637512207
    5. '  ' → logprob: -17.85020637512207
    6. '(read' → logprob: -17.97520637512207
    7. ' ' → logprob: -18.85020637512207
    8. '    ' → logprob: -18.97520637512207
    9. 'int' → logprob: -20.22520637512207
    10. ' int' → logprob: -21.35020637512207

Token 243: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.008717277087271214
    2. '_' → logprob: -5.008717060089111
    3. '()' → logprob: -6.258717060089111
    4. '_int' → logprob: -10.50871753692627
    5. '_line' → logprob: -11.75871753692627
    6. '_value' → logprob: -11.88371753692627
    7. '_Input' → logprob: -11.88371753692627
    8. '_integer' → logprob: -12.25871753692627
    9. '_inputs' → logprob: -12.38371753692627
    10. '(' → logprob: -12.50871753692627

Token 244: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06197093799710274
    2. '()
' → logprob: -2.8119709491729736
    3. '()
' → logprob: -13.186970710754395
    4. '()

' → logprob: -13.686970710754395
    5. '()\' → logprob: -15.311970710754395
    6. '()`' → logprob: -17.43697166442871
    7. ' ()' → logprob: -17.68697166442871
    8. '())' → logprob: -17.81197166442871
    9. '   ' → logprob: -17.81197166442871
    10. '();' → logprob: -18.43697166442871

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.670423150062561
    2. 'V' → logprob: -0.795423150062561
    3. ' V' → logprob: -3.2954230308532715
    4. '	V' → logprob: -10.54542350769043
    5. ' ' → logprob: -11.17042350769043
    6. '  ' → logprob: -11.67042350769043
    7. '
' → logprob: -12.17042350769043
    8. '```' → logprob: -12.54542350769043
    9. '    
' → logprob: -13.04542350769043
    10. '    ' → logprob: -13.67042350769043

Token 246: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' (adapté à ' V') → logprob: -0.00041172682540491223
    2. '   ' → logprob: -7.875411510467529
    3. ' V' → logprob: -10.500411987304688
    4. 'A' → logprob: -13.750411987304688
    5. '  ' → logprob: -14.375411987304688
    6. 'values' → logprob: -14.375411987304688
    7. '	V' → logprob: -14.625411987304688
    8. ' ' → logprob: -15.000411987304688
    9. '       ' → logprob: -15.500411987304688
    10. 'if' → logprob: -15.750411987304688

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141959190368652
    2. '=' → logprob: -1.7014195919036865
    3. ',' → logprob: -12.201419830322266
    4. '   ' → logprob: -14.076419830322266
    5. ' ' → logprob: -15.826419830322266
    6. ' =
' → logprob: -15.951419830322266
    7. '=create' → logprob: -16.701419830322266
    8. '.' → logprob: -17.201419830322266
    9. '[' → logprob: -17.576419830322266
    10. ' ' → logprob: -17.701419830322266

Token 248: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.575939953327179
    2. 'read' → logprob: -0.825939953327179
    3. ' list' → logprob: -15.575940132141113
    4. '	read' → logprob: -16.075939178466797
    5. 'list' → logprob: -16.325939178466797
    6. '(read' → logprob: -16.950939178466797
    7. '   ' → logprob: -17.200939178466797
    8. ' ' → logprob: -18.075939178466797
    9. '_read' → logprob: -18.700939178466797
    10. '  ' → logprob: -18.700939178466797

Token 249: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.375000953674316
    3. 'values' → logprob: -15.500000953674316
    4. '_VALUES' → logprob: -17.375
    5. '_value' → logprob: -18.875
    6. 'Values' → logprob: -19.125
    7. ' _' → logprob: -19.25
    8. '(_' → logprob: -19.375
    9. ')_' → logprob: -19.375
    10. ' values' → logprob: -19.625

Token 250: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013906087726354599
    2. '   ' → logprob: -4.388906002044678
    3. '    
' → logprob: -7.013906002044678
    4. 'v' → logprob: -8.263906478881836
    5. '<|end|>' → logprob: -9.138906478881836
    6. '  
' → logprob: -10.388906478881836
    7. '
' → logprob: -11.013906478881836
    8. '	
' → logprob: -11.138906478881836
    9. '()
' → logprob: -11.263906478881836
    10. '

' → logprob: -11.388906478881836

Token 251: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2748229503631592
    2. 'v' → logprob: -1.5248229503631592
    3. '
' → logprob: -4.899823188781738
    4. '	v' → logprob: -5.149823188781738
    5. '    
' → logprob: -5.399823188781738
    6. ' v' → logprob: -5.399823188781738
    7. '    ' → logprob: -9.649823188781738
    8. '	
' → logprob: -9.899823188781738
    9. '   
' → logprob: -10.149823188781738
    10. '```' → logprob: -10.149823188781738

Token 252: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0002724217774812132
    2. '   ' → logprob: -8.250272750854492
    3. ' v' → logprob: -11.625272750854492
    4. 'from' → logprob: -13.250272750854492
    5. '
' → logprob: -16.000272750854492
    6. '#' → logprob: -16.375272750854492
    7. '```' → logprob: -16.500272750854492
    8. '	v' → logprob: -17.000272750854492
    9. '    
' → logprob: -17.125272750854492
    10. ' ' → logprob: -17.250272750854492

Token 253: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -3.047134305234067e-05
    2. 'from' → logprob: -10.875030517578125
    3. '   ' → logprob: -11.625030517578125
    4. ' v' → logprob: -13.750030517578125
    5. 'if' → logprob: -14.375030517578125
    6. '    
' → logprob: -15.750030517578125
    7. 'def' → logprob: -15.750030517578125
    8. '#' → logprob: -15.750030517578125
    9. 'count' → logprob: -16.250030517578125
    10. 'result' → logprob: -16.625030517578125

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -13.312504768371582
    3. '_' → logprob: -14.250004768371582
    4. 'v' → logprob: -14.687504768371582
    5. '```' → logprob: -15.000004768371582
    6. '   ' → logprob: -15.125004768371582
    7. '１' → logprob: -15.437504768371582
    8. '१' → logprob: -15.812504768371582
    9. '১' → logprob: -15.875004768371582
    10. '۱' → logprob: -16.000003814697266

Token 255: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03412347286939621
    2. '=' → logprob: -3.409123420715332
    3. ',' → logprob: -7.659123420715332
    4. ' ' → logprob: -13.284123420715332
    5. ',v' → logprob: -13.909123420715332
    6. '={}' → logprob: -13.909123420715332
    7. ' ,' → logprob: -14.034123420715332
    8. '=create' → logprob: -14.284123420715332
    9. '   ' → logprob: -14.534123420715332
    10. '  ' → logprob: -15.909123420715332

Token 256: ' create' (ID: 2501)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.10128998756408691
    2. '{}' → logprob: -2.351289987564087
    3. ' create' → logprob: -6.851289749145508
    4. ' {}' → logprob: -10.851289749145508
    5. '(create' → logprob: -13.851289749145508
    6. '{}
' → logprob: -14.101289749145508
    7. '{' → logprob: -14.101289749145508
    8. '{})' → logprob: -14.226289749145508
    9. '	create' → logprob: -14.976289749145508
    10. '.create' → logprob: -14.976289749145508

Token 257: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -9.014684110297821e-06
    2. 'empty' → logprob: -11.750008583068848
    3. '_' → logprob: -14.500008583068848
    4. '{}_' → logprob: -15.125008583068848
    5. '__' → logprob: -17.000009536743164
    6. '_emp' → logprob: -17.500009536743164
    7. '_EMPTY' → logprob: -17.625009536743164
    8. 'empt' → logprob: -17.625009536743164
    9. ''_' → logprob: -17.750009536743164
    10. ' _' → logprob: -17.750009536743164

Token 258: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -1.5213274309644476e-05
    2. '_' → logprob: -11.750015258789062
    3. 'dict' → logprob: -12.250015258789062
    4. '_dic' → logprob: -13.750015258789062
    5. '_d' → logprob: -15.125015258789062
    6. ' _' → logprob: -15.500015258789062
    7. '_def' → logprob: -16.000015258789062
    8. '_dist' → logprob: -16.375015258789062
    9. '
' → logprob: -17.125015258789062
    10. 'Dict' → logprob: -17.125015258789062

Token 259: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019301822176203132
    2. '()
' → logprob: -6.251930236816406
    3. '()\' → logprob: -14.376930236816406
    4. '()

' → logprob: -14.626930236816406
    5. '()
' → logprob: -15.001930236816406
    6. '())' → logprob: -15.876930236816406
    7. '();' → logprob: -17.126930236816406
    8. '()`' → logprob: -17.876930236816406
    9. '()]' → logprob: -18.626930236816406
    10. '(),' → logprob: -18.626930236816406

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0726807713508606
    2. 'process' → logprob: -2.822680711746216
    3. ' process' → logprob: -4.822680950164795
    4. 'v' → logprob: -6.197680950164795
    5. ' v' → logprob: -7.822680950164795
    6. '<|end|>' → logprob: -9.822680473327637
    7. '(process' → logprob: -10.197680473327637
    8. '    
' → logprob: -10.197680473327637
    9. '	process' → logprob: -10.822680473327637
    10. ' ' → logprob: -11.947680473327637

Token 261: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.06546758115291595
    2. ' v' → logprob: -2.815467596054077
    3. '   ' → logprob: -5.815467357635498
    4. 'process' → logprob: -7.940467357635498
    5. ' process' → logprob: -8.815467834472656
    6. '	v' → logprob: -12.565467834472656
    7. ' ' → logprob: -12.565467834472656
    8. '  ' → logprob: -14.190467834472656
    9. '    ' → logprob: -15.315467834472656
    10. '    
' → logprob: -16.315467834472656

Token 262: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.599403423024341e-05
    2. '1' → logprob: -10.125065803527832
    3. '=' → logprob: -11.500065803527832
    4. ' =' → logprob: -12.000065803527832
    5. '=v' → logprob: -13.000065803527832
    6. 'process' → logprob: -13.625065803527832
    7. '(v' → logprob: -14.000065803527832
    8. '   ' → logprob: -14.000065803527832
    9. '(process' → logprob: -14.250065803527832
    10. 'v' → logprob: -14.875065803527832

Token 263: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519313097000122
    2. '=' → logprob: -1.5019313097000122
    3. '=create' → logprob: -13.001931190490723
    4. ' ' → logprob: -19.00193214416504
    5. '＝' → logprob: -19.12693214416504
    6. '=}' → logprob: -20.00193214416504
    7. ')' → logprob: -20.62693214416504
    8. 'create' → logprob: -20.75193214416504
    9. '   ' → logprob: -20.75193214416504
    10. '  ' → logprob: -21.25193214416504

Token 264: ' create' (ID: 2501)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.01816023886203766
    2. ' create' → logprob: -4.018160343170166
    3. '{}' → logprob: -11.643159866333008
    4. '(create' → logprob: -14.518159866333008
    5. '.create' → logprob: -14.768159866333008
    6. '	create' → logprob: -15.393159866333008
    7. ' ' → logprob: -15.768159866333008
    8. '=create' → logprob: -16.643159866333008
    9. '   ' → logprob: -17.018159866333008
    10. '  ' → logprob: -17.893159866333008

Token 265: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -0.0019357812125235796
    2. 'empty' → logprob: -6.251935958862305
    3. 'dict' → logprob: -13.251935958862305
    4. '_dict' → logprob: -13.376935958862305
    5. 'Empty' → logprob: -14.001935958862305
    6. '{' → logprob: -14.501935958862305
    7. 'd' → logprob: -14.751935958862305
    8. '_EMPTY' → logprob: -14.751935958862305
    9. '{}_' → logprob: -14.876935958862305
    10. 'm' → logprob: -15.001935958862305

Token 266: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.0052350712940096855
    2. 'dict' → logprob: -5.255235195159912
    3. 'Dict' → logprob: -14.380234718322754
    4. '{' → logprob: -15.505234718322754
    5. ' dict' → logprob: -15.880234718322754
    6. '_DICT' → logprob: -16.25523567199707
    7. '{}' → logprob: -16.38023567199707
    8. 'def' → logprob: -17.75523567199707
    9. 'd' → logprob: -17.88023567199707
    10. '{}_' → logprob: -18.00523567199707

Token 267: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002647927321959287
    2. '()
' → logprob: -8.250265121459961
    3. '()

' → logprob: -12.750265121459961
    4. '()
' → logprob: -14.750265121459961
    5. ' ()' → logprob: -17.00026512145996
    6. '()`' → logprob: -17.12526512145996
    7. ')' → logprob: -17.25026512145996
    8. '()\' → logprob: -17.62526512145996
    9. '()]' → logprob: -17.75026512145996
    10. '())' → logprob: -17.87526512145996

Token 268: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021360117942094803
    2. 'process' → logprob: -4.021359920501709
    3. ' process' → logprob: -5.771359920501709
    4. '	process' → logprob: -10.021360397338867
    5. '    
' → logprob: -11.021360397338867
    6. '<|end|>' → logprob: -11.021360397338867
    7. '(process' → logprob: -11.896360397338867
    8. 'def' → logprob: -12.896360397338867
    9. '.process' → logprob: -14.146360397338867
    10. ')' → logprob: -14.521360397338867

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20519816875457764
    2. 'process' → logprob: -1.7051981687545776
    3. ' process' → logprob: -5.580198287963867
    4. '	process' → logprob: -12.330198287963867
    5. '(process' → logprob: -14.205198287963867
    6. '    
' → logprob: -15.205198287963867
    7. '.process' → logprob: -16.205198287963867
    8. 'proces' → logprob: -16.330198287963867
    9. '_process' → logprob: -16.330198287963867
    10. '   ' → logprob: -16.330198287963867

Token 270: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -5.512236498361744e-07
    2. ' process' → logprob: -14.500000953674316
    3. '   ' → logprob: -18.125
    4. '
' → logprob: -21.625
    5. 'proces' → logprob: -21.625
    6. '	process' → logprob: -21.625
    7. '(process' → logprob: -22.125
    8. '    
' → logprob: -23.375
    9. '.process' → logprob: -23.625
    10. 'processed' → logprob: -23.75

Token 271: '_even' (ID: 186029)
  Prédit: '_even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_even' → logprob: -5.319370302458992e-06
    2. 'even' → logprob: -12.500005722045898
    3. '_' → logprob: -13.500005722045898
    4. '_e' → logprob: -16.1250057220459
    5. '_ev' → logprob: -16.3750057220459
    6. '_en' → logprob: -19.7500057220459
    7. '_equal' → logprob: -19.7500057220459
    8. '_every' → logprob: -19.7500057220459
    9. '_empty' → logprob: -20.7500057220459
    10. 'evenodd' → logprob: -20.8750057220459

Token 272: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -2.45848218582978e-06
    2. 'indices' → logprob: -13.12500286102295
    3. '_' → logprob: -15.62500286102295
    4. 's' → logprob: -15.75000286102295
    5. '(indices' → logprob: -16.875001907348633
    6. '_indexes' → logprob: -17.000001907348633
    7. '"indices' → logprob: -17.375001907348633
    8. '```' → logprob: -18.125001907348633
    9. 'Indices' → logprob: -18.250001907348633
    10. '_positions' → logprob: -18.875001907348633

Token 273: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -2.1008713702030946e-06
    2. ' (' → logprob: -13.375001907348633
    3. '(' → logprob: -14.500001907348633
    4. '(N' → logprob: -17.125001907348633
    5. '(v' → logprob: -20.250001907348633
    6. '   ' → logprob: -20.375001907348633
    7. '(Q' → logprob: -20.500001907348633
    8. '(
' → logprob: -20.750001907348633
    9. '(F' → logprob: -20.750001907348633
    10. ' ' → logprob: -20.875001907348633

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.315936429426074e-05
    2. ' ,' → logprob: -9.875082969665527
    3. ',v' → logprob: -10.375082969665527
    4. '   ' → logprob: -15.000082969665527
    5. ',
' → logprob: -16.750083923339844
    6. 'v' → logprob: -17.375083923339844
    7. ')' → logprob: -17.750083923339844
    8. '```' → logprob: -19.000083923339844
    9. '‌,' → logprob: -19.125083923339844
    10. '(v' → logprob: -19.250083923339844

Token 275: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.001170225441455841
    2. ' v' → logprob: -6.7511701583862305
    3. '	v' → logprob: -20.001171112060547
    4. ')v' → logprob: -21.001171112060547
    5. '   ' → logprob: -22.001171112060547
    6. '_v' → logprob: -22.126171112060547
    7. ')' → logprob: -22.376171112060547
    8. '(v' → logprob: -24.001171112060547
    9. '
' → logprob: -24.126171112060547
    10. 'vi' → logprob: -24.376171112060547

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5570885807392187e-05
    2. ')' → logprob: -11.500015258789062
    3. 'v' → logprob: -12.500015258789062
    4. '2' → logprob: -15.375015258789062
    5. 'r' → logprob: -16.000015258789062
    6. '```' → logprob: -16.000015258789062
    7. 'alue' → logprob: -16.500015258789062
    8. 'l' → logprob: -16.687515258789062
    9. 'al' → logprob: -16.687515258789062
    10. 'w' → logprob: -16.687515258789062

Token 277: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011060434393584728
    2. ')
' → logprob: -4.5110602378845215
    3. '   ' → logprob: -11.63606071472168
    4. ')

' → logprob: -12.63606071472168
    5. ',' → logprob: -15.76106071472168
    6. ')
' → logprob: -15.76106071472168
    7. ' )' → logprob: -16.76106071472168
    8. '),' → logprob: -17.26106071472168
    9. ' ' → logprob: -17.76106071472168
    10. ')v' → logprob: -18.01106071472168

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008628170937299728
    2. 'process' → logprob: -4.7586283683776855
    3. ' process' → logprob: -11.883627891540527
    4. '    
' → logprob: -12.008627891540527
    5. '
' → logprob: -15.008627891540527
    6. '	process' → logprob: -16.008628845214844
    7. '```' → logprob: -16.508628845214844
    8. '(process' → logprob: -17.133628845214844
    9. '_process' → logprob: -18.383628845214844
    10. '  
' → logprob: -18.508628845214844

Token 279: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.00023333763238042593
    2. ' process' → logprob: -8.75023365020752
    3. '   ' → logprob: -9.50023365020752
    4. '	process' → logprob: -17.875232696533203
    5. '(process' → logprob: -20.625232696533203
    6. '
' → logprob: -20.875232696533203
    7. '.process' → logprob: -21.000232696533203
    8. '    
' → logprob: -21.125232696533203
    9. 'proces' → logprob: -22.375232696533203
    10. '  ' → logprob: -22.500232696533203

Token 280: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '_even' → logprob: -16.875
    3. 'odd' → logprob: -20.5
    4. '_od' → logprob: -22.0
    5. '_process' → logprob: -22.375
    6. '```' → logprob: -22.75
    7. '_
' → logprob: -23.25
    8. 'process' → logprob: -23.375
    9. '_two' → logprob: -23.375
    10. '__' → logprob: -23.875

Token 281: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -1.4617256056226324e-05
    2. 'process' → logprob: -11.625014305114746
    3. 'od' → logprob: -12.375014305114746
    4. '_' → logprob: -14.625014305114746
    5. 'even' → logprob: -15.125014305114746
    6. 'v' → logprob: -15.125014305114746
    7. 'o' → logprob: -16.000015258789062
    8. ' odd' → logprob: -16.750015258789062
    9. 'old' → logprob: -17.000015258789062
    10. 'Odd' → logprob: -17.375015258789062

Token 282: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -4.251091377227567e-05
    2. '(v' → logprob: -11.250042915344238
    3. '_' → logprob: -11.625042915344238
    4. '_indexes' → logprob: -12.125042915344238
    5. '(_' → logprob: -12.875042915344238
    6. 'indices' → logprob: -13.000042915344238
    7. '_positions' → logprob: -13.125042915344238
    8. '_dict' → logprob: -13.625042915344238
    9. '_values' → logprob: -13.750042915344238
    10. '_counts' → logprob: -14.125042915344238

Token 283: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.625000953674316
    3. ' (' → logprob: -15.750000953674316
    4. '(v' → logprob: -16.875
    5. '(View' → logprob: -18.875
    6. '```' → logprob: -19.75
    7. '   ' → logprob: -19.875
    8. ',' → logprob: -20.375
    9. ')' → logprob: -21.0
    10. '(
' → logprob: -21.125

Token 284: ',' (ID: 11)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.40370088815689087
    2. ',' → logprob: -1.153700828552246
    3. ',v' → logprob: -4.653700828552246
    4. '(V' → logprob: -5.028700828552246
    5. '(' → logprob: -8.153700828552246
    6. ',V' → logprob: -8.903700828552246
    7. '   ' → logprob: -9.528700828552246
    8. ')' → logprob: -9.778700828552246
    9. 'v' → logprob: -10.528700828552246
    10. ' ,' → logprob: -11.778700828552246

Token 285: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00020354038861114532
    2. ' v' → logprob: -8.500203132629395
    3. '(v' → logprob: -17.62520408630371
    4. ')v' → logprob: -18.12520408630371
    5. '	v' → logprob: -19.37520408630371
    6. '   ' → logprob: -20.12520408630371
    7. ')' → logprob: -20.25020408630371
    8. '[v' → logprob: -20.87520408630371
    9. ',v' → logprob: -21.75020408630371
    10. '
' → logprob: -22.25020408630371

Token 286: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. 'v' → logprob: -15.750000953674316
    4. ')' → logprob: -17.25
    5. ',' → logprob: -17.625
    6. '   ' → logprob: -17.75
    7. '۲' → logprob: -18.25
    8. 'w' → logprob: -18.5
    9. '２' → logprob: -19.125
    10. ' v' → logprob: -19.3125

Token 287: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.519893501419574e-05
    2. '   ' → logprob: -9.75009536743164
    3. ')
' → logprob: -10.75009536743164
    4. ')

' → logprob: -11.75009536743164
    5. '<|end|>' → logprob: -12.25009536743164
    6. 'def' → logprob: -14.50009536743164
    7. ' )' → logprob: -14.62509536743164
    8. '())' → logprob: -15.37509536743164
    9. '<|end|>' → logprob: -15.50009536743164
    10. '()' → logprob: -15.50009536743164

Token 288: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012740246020257473
    2. '    
' → logprob: -4.512740135192871
    3. 'k' → logprob: -7.012740135192871
    4. 'r' → logprob: -8.387740135192871
    5. 'a' → logprob: -9.137740135192871
    6. ' k' → logprob: -9.137740135192871
    7. '
' → logprob: -9.137740135192871
    8. ' r' → logprob: -9.387740135192871
    9. 'v' → logprob: -10.512740135192871
    10. '  
' → logprob: -10.762740135192871

Token 289: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.482954740524292
    2. 'a' → logprob: -2.232954740524292
    3. '   ' → logprob: -2.482954740524292
    4. 'k' → logprob: -2.732954740524292
    5. 's' → logprob: -2.732954740524292
    6. 'sorted' → logprob: -3.482954740524292
    7. 'keys' → logprob: -4.982954978942871
    8. 'v' → logprob: -5.482954978942871
    9. 'res' → logprob: -5.607954978942871
    10. 'top' → logprob: -5.982954978942871

Token 290: ' a' (ID: 261)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5563768148422241
    2. 'a' (adapté à ' a') → logprob: -1.8063768148422241
    3. 's' → logprob: -2.1813769340515137
    4. 'keys' → logprob: -2.5563769340515137
    5. 'sorted' → logprob: -2.9313769340515137
    6. 'v' → logprob: -5.431376934051514
    7. 'sv' → logprob: -5.681376934051514
    8. 'top' → logprob: -5.681376934051514
    9. 'kv' → logprob: -5.806376934051514
    10. 'ks' → logprob: -6.806376934051514

Token 291: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.047044333070516586
    2. '_v' → logprob: -3.672044277191162
    3. ' =' → logprob: -3.922044277191162
    4. 'v' → logprob: -7.547044277191162
    5. 'a' → logprob: -9.42204475402832
    6. '_' → logprob: -9.67204475402832
    7. '=' → logprob: -10.04704475402832
    8. '_keys' → logprob: -11.92204475402832
    9. 's' → logprob: -13.17204475402832
    10. '=v' → logprob: -13.67204475402832

Token 292: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474124014377594
    2. ' =' → logprob: -0.974124014377594
    3. ',' → logprob: -10.09912395477295
    4. 'a' → logprob: -12.97412395477295
    5. '=get' → logprob: -13.59912395477295
    6. '1' → logprob: -13.72412395477295
    7. ' ' → logprob: -15.47412395477295
    8. ' =
' → logprob: -15.59912395477295
    9. '=a' → logprob: -15.72412395477295
    10. 's' → logprob: -15.72412395477295

Token 293: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.01814994215965271
    2. ' get' → logprob: -4.0181498527526855
    3. '(get' → logprob: -19.018150329589844
    4. '[get' → logprob: -19.768150329589844
    5. '	get' → logprob: -20.518150329589844
    6. '.get' → logprob: -20.643150329589844
    7. '_get' → logprob: -20.893150329589844
    8. ' ' → logprob: -21.018150329589844
    9. '=get' → logprob: -21.268150329589844
    10. '   ' → logprob: -21.643150329589844

Token 294: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.00012356207298580557
    2. 'sorted' → logprob: -9.000123977661133
    3. 's' → logprob: -17.125123977661133
    4. 'Sorted' → logprob: -18.000123977661133
    5. 'a' → logprob: -18.125123977661133
    6. '_' → logprob: -18.625123977661133
    7. '(sorted' → logprob: -19.125123977661133
    8. ' sorted' → logprob: -20.125123977661133
    9. 'orted' → logprob: -21.000123977661133
    10. 'get' → logprob: -21.000123977661133

Token 295: '_keys' (ID: 29392)
  Prédit: '_keys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_keys' → logprob: -5.085517113911919e-05
    2. 'keys' → logprob: -10.62505054473877
    3. 'a' → logprob: -11.37505054473877
    4. '(v' → logprob: -11.50005054473877
    5. '(a' → logprob: -13.50005054473877
    6. '_' → logprob: -14.12505054473877
    7. 'Keys' → logprob: -14.25005054473877
    8. '_KEYS' → logprob: -14.37505054473877
    9. 'v' → logprob: -15.25005054473877
    10. 's' → logprob: -15.62505054473877

Token 296: '_by' (ID: 8214)
  Prédit: '_by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -4.320199877838604e-07
    2. '(v' → logprob: -15.25
    3. 'by' → logprob: -15.75
    4. '_BY' → logprob: -19.25
    5. 'By' → logprob: -19.375
    6. '_' → logprob: -19.625
    7. '_of' → logprob: -20.375
    8. 's' → logprob: -20.5
    9. '_b' → logprob: -20.75
    10. 'bys' → logprob: -20.875

Token 297: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.011050417087972164
    2. 'values' → logprob: -4.511050224304199
    3. 'v' → logprob: -13.7610502243042
    4. '(values' → logprob: -14.6360502243042
    5. 'value' → logprob: -14.7610502243042
    6. '(v' → logprob: -16.136051177978516
    7. 'valu' → logprob: -16.261051177978516
    8. 'a' → logprob: -16.261051177978516
    9. 'Values' → logprob: -16.261051177978516
    10. ' values' → logprob: -16.386051177978516

Token 298: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.125000953674316
    3. ' (' → logprob: -15.625000953674316
    4. 'v' → logprob: -17.250001907348633
    5. '(a' → logprob: -18.125001907348633
    6. '```' → logprob: -19.625001907348633
    7. 'a' → logprob: -19.750001907348633
    8. '(d' → logprob: -21.125001907348633
    9. '(b' → logprob: -21.375001907348633
    10. '(
' → logprob: -21.375001907348633

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -17.625
    3. '１' → logprob: -18.875
    4. ')' → logprob: -18.9375
    5. ' ' → logprob: -19.0
    6. '   ' → logprob: -19.4375
    7. '2' → logprob: -19.625
    8. '_' → logprob: -19.75
    9. 'v' → logprob: -19.9375
    10. '
' → logprob: -20.0

Token 300: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005235190503299236
    2. ')
' → logprob: -5.255235195159912
    3. ')
' → logprob: -14.505234718322754
    4. ')a' → logprob: -14.505234718322754
    5. ')

' → logprob: -14.755234718322754
    6. '   ' → logprob: -16.38023567199707
    7. ' )' → logprob: -17.75523567199707
    8. ')#' → logprob: -17.75523567199707
    9. 'a' → logprob: -18.63023567199707
    10. '),' → logprob: -19.00523567199707

Token 301: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.742425799369812
    2. '   ' → logprob: -0.742425799369812
    3. ' a' → logprob: -3.4924259185791016
    4. '    
' → logprob: -4.367425918579102
    5. '
' → logprob: -6.367425918579102
    6. '  
' → logprob: -6.867425918579102
    7. ' 
' → logprob: -7.367425918579102
    8. '[a' → logprob: -8.117425918579102
    9. '	a' → logprob: -8.117425918579102
    10. '<|end|>' → logprob: -8.617425918579102

Token 302: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.008033854886889458
    2. ' a' → logprob: -5.008033752441406
    3. '   ' → logprob: -6.633033752441406
    4. '	a' → logprob: -14.133033752441406
    5. ' ' → logprob: -14.633033752441406
    6. '  ' → logprob: -15.758033752441406
    7. '    
' → logprob: -16.633033752441406
    8. '    ' → logprob: -16.883033752441406
    9. ' 
' → logprob: -18.508033752441406
    10. '
' → logprob: -18.508033752441406

Token 303: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -15.125000953674316
    3. ' ' → logprob: -15.125000953674316
    4. ' =' → logprob: -16.75
    5. '=' → logprob: -17.375
    6. ',' → logprob: -18.25
    7. '₂' → logprob: -18.75
    8. '۲' → logprob: -19.0
    9. '[' → logprob: -19.5
    10. '２' → logprob: -19.625

Token 304: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006715370807796717
    2. '=' → logprob: -5.006715297698975
    3. '=get' → logprob: -18.756715774536133
    4. ' ' → logprob: -18.881715774536133
    5. ' =
' → logprob: -19.256715774536133
    6. ',' → logprob: -19.506715774536133
    7. ' =[' → logprob: -20.131715774536133
    8. ' =)' → logprob: -20.256715774536133
    9. '＝' → logprob: -20.381715774536133
    10. ' ' → logprob: -21.631715774536133

Token 305: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.16022545099258423
    2. ' get' → logprob: -1.9102253913879395
    3. '(get' → logprob: -14.660225868225098
    4. '[get' → logprob: -14.910225868225098
    5. '=get' → logprob: -14.910225868225098
    6. '.get' → logprob: -15.910225868225098
    7. '	get' → logprob: -16.28522491455078
    8. '_get' → logprob: -17.41022491455078
    9. ',get' → logprob: -17.91022491455078
    10. ' ' → logprob: -18.41022491455078

Token 306: '_sorted' (ID: 104993)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.11425667256116867
    2. '_sorted' → logprob: -2.3642566204071045
    3. ' get' → logprob: -4.364256858825684
    4. 'sorted' → logprob: -6.739256858825684
    5. '(get' → logprob: -10.864256858825684
    6. 'a' → logprob: -11.489256858825684
    7. '_get' → logprob: -12.239256858825684
    8. '[get' → logprob: -12.364256858825684
    9. 'Sorted' → logprob: -12.989256858825684
    10. '=get' → logprob: -13.614256858825684

Token 307: '_keys' (ID: 29392)
  Prédit: '_keys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_keys' → logprob: -0.00015872348740231246
    2. 'a' → logprob: -9.000158309936523
    3. 'keys' → logprob: -10.750158309936523
    4. 'sorted' → logprob: -11.625158309936523
    5. '_sorted' → logprob: -13.375158309936523
    6. '_values' → logprob: -14.125158309936523
    7. '(a' → logprob: -14.125158309936523
    8. '_KEYS' → logprob: -14.750158309936523
    9. 's' → logprob: -15.000158309936523
    10. 'get' → logprob: -15.250158309936523

Token 308: '_by' (ID: 8214)
  Prédit: '_by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -0.0026873021852225065
    2. 'by' → logprob: -6.002687454223633
    3. '_keys' → logprob: -9.002687454223633
    4. 'bys' → logprob: -10.002687454223633
    5. 'By' → logprob: -10.877687454223633
    6. '(v' → logprob: -11.252687454223633
    7. 'b' → logprob: -12.252687454223633
    8. 's' → logprob: -13.502687454223633
    9. 'a' → logprob: -13.627687454223633
    10. 'BY' → logprob: -13.877687454223633

Token 309: '_values' (ID: 20393)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.008615872822701931
    2. '_values' → logprob: -4.758615970611572
    3. ' values' → logprob: -14.758615493774414
    4. 'valu' → logprob: -14.758615493774414
    5. 'a' → logprob: -15.758615493774414
    6. 'v' → logprob: -15.883615493774414
    7. 'value' → logprob: -16.258615493774414
    8. '(values' → logprob: -16.383615493774414
    9. '.values' → logprob: -17.133615493774414
    10. 'val' → logprob: -17.383615493774414

Token 310: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.1472419600977446e-06
    2. 'v' → logprob: -14.000000953674316
    3. '(' → logprob: -15.125000953674316
    4. ' (' → logprob: -18.375001907348633
    5. ' v' → logprob: -20.125001907348633
    6. '	v' → logprob: -20.250001907348633
    7. '   ' → logprob: -20.375001907348633
    8. '(
' → logprob: -20.625001907348633
    9. '[v' → logprob: -20.625001907348633
    10. ',v' → logprob: -20.875001907348633

Token 311: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. 'v' → logprob: -14.375000953674316
    3. '(v' → logprob: -15.875000953674316
    4. '   ' → logprob: -17.125
    5. '[v' → logprob: -17.25
    6. ')' → logprob: -17.875
    7. ' ' → logprob: -18.0
    8. '[' → logprob: -18.0
    9. ',' → logprob: -18.125
    10. '```' → logprob: -18.125

Token 312: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ')
' → logprob: -12.87500286102295
    3. '   ' → logprob: -15.75000286102295
    4. ' )' → logprob: -16.750001907348633
    5. ')

' → logprob: -17.000001907348633
    6. ')a' → logprob: -18.625001907348633
    7. ')#' → logprob: -19.500001907348633
    8. ')`' → logprob: -19.625001907348633
    9. ' ' → logprob: -19.750001907348633
    10. '))' → logprob: -20.125001907348633

Token 313: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07255827635526657
    2. 'r' → logprob: -3.6975581645965576
    3. ' for' → logprob: -4.072558403015137
    4. '    
' → logprob: -4.322558403015137
    5. '
' → logprob: -4.697558403015137
    6. 'for' → logprob: -6.447558403015137
    7. 'a' → logprob: -6.822558403015137
    8. ' r' → logprob: -7.197558403015137
    9. '<|end|>' → logprob: -7.197558403015137
    10. '  
' → logprob: -7.947558403015137

Token 314: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.09048464149236679
    2. '   ' → logprob: -2.590484619140625
    3. ' r' → logprob: -5.215484619140625
    4. 'for' → logprob: -5.715484619140625
    5. ' for' → logprob: -5.965484619140625
    6. 'result' → logprob: -8.840484619140625
    7. '    
' → logprob: -10.840484619140625
    8. ' ' → logprob: -11.090484619140625
    9. ' result' → logprob: -11.465484619140625
    10. 'def' → logprob: -11.715484619140625

Token 315: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.022667154669761658
    2. 'for' → logprob: -4.272666931152344
    3. 'result' → logprob: -4.897666931152344
    4. 'res' → logprob: -8.022666931152344
    5. 'a' → logprob: -8.272666931152344
    6. 'results' → logprob: -8.397666931152344
    7. 'if' → logprob: -9.897666931152344
    8. ' r' → logprob: -10.022666931152344
    9. 'count' → logprob: -10.647666931152344
    10. '   ' → logprob: -10.647666931152344

Token 316: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00593235157430172
    2. '=' → logprob: -5.130932331085205
    3. '=[]' → logprob: -13.130932807922363
    4. ' =[' → logprob: -13.505932807922363
    5. ' =
' → logprob: -16.255931854248047
    6. '=[' → logprob: -16.255931854248047
    7. '[' → logprob: -16.630931854248047
    8. ',' → logprob: -16.755931854248047
    9. ' ' → logprob: -17.505931854248047
    10. 's' → logprob: -17.630931854248047

Token 317: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -6.034592388459714e-06
    2. '[]
' → logprob: -12.250005722045898
    3. '[' → logprob: -14.250005722045898
    4. '[]

' → logprob: -14.875005722045898
    5. '[]}' → logprob: -16.1250057220459
    6. ' []' → logprob: -16.5000057220459
    7. '[]>' → logprob: -17.7500057220459
    8. '[],' → logprob: -19.1250057220459
    9. '[]"' → logprob: -19.5000057220459
    10. '[])' → logprob: -19.6250057220459

Token 318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3321429491043091
    2. 'for' → logprob: -1.957142949104309
    3. ' for' → logprob: -1.957142949104309
    4. '	for' → logprob: -9.95714282989502
    5. '    
' → logprob: -10.83214282989502
    6. '<|end|>' → logprob: -11.83214282989502
    7. '
' → logprob: -11.95714282989502
    8. '  ' → logprob: -12.58214282989502
    9. '    ' → logprob: -13.20714282989502
    10. '```' → logprob: -13.20714282989502

Token 319: ' top' (ID: 2344)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004499765345826745
    2. 'if' → logprob: -7.875450134277344
    3. ' for' → logprob: -9.625450134277344
    4. '   ' → logprob: -12.875450134277344
    5. 'count' → logprob: -14.500450134277344
    6. 'max' → logprob: -14.750450134277344
    7. 'top' (adapté à ' top') → logprob: -15.250450134277344
    8. '```' → logprob: -17.250450134277344
    9. ' if' → logprob: -17.750450134277344
    10. '
' → logprob: -17.875450134277344

Token 320: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.9268683195114136
    2. '_count' → logprob: -1.0518683195114136
    3. '_keys' → logprob: -2.051868438720703
    4. '1' → logprob: -2.926868438720703
    5. '_' → logprob: -2.926868438720703
    6. 'a' → logprob: -4.801868438720703
    7. '_counts' → logprob: -4.801868438720703
    8. '_k' → logprob: -6.801868438720703
    9. ' =' → logprob: -7.926868438720703
    10. '_c' → logprob: -8.551868438720703

Token 321: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010652327910065651
    2. 'a' → logprob: -10.375106811523438
    3. '2' → logprob: -10.750106811523438
    4. ' =' → logprob: -10.750106811523438
    5. '=' → logprob: -11.625106811523438
    6. '_' → logprob: -12.375106811523438
    7. '_keys' → logprob: -12.625106811523438
    8. '_a' → logprob: -12.625106811523438
    9. '_count' → logprob: -13.375106811523438
    10. 's' → logprob: -13.625106811523438

Token 322: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023260388523340225
    2. '=' → logprob: -3.7732603549957275
    3. ' ' → logprob: -12.148260116577148
    4. 's' → logprob: -12.273260116577148
    5. ',' → logprob: -12.648260116577148
    6. ' =[' → logprob: -14.648260116577148
    7. '[' → logprob: -15.148260116577148
    8. '[:' → logprob: -15.773260116577148
    9. ' =
' → logprob: -16.14826011657715
    10. ' ,' → logprob: -16.39826011657715

Token 323: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.4992556571960449
    2. 'a' → logprob: -1.499255657196045
    3. ' get' → logprob: -1.999255657196045
    4. ' a' → logprob: -3.374255657196045
    5. '10' → logprob: -11.624256134033203
    6. '(get' → logprob: -12.249256134033203
    7. '[' → logprob: -12.499256134033203
    8. '[a' → logprob: -12.749256134033203
    9. '   ' → logprob: -12.874256134033203
    10. ' ' → logprob: -12.999256134033203

Token 324: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.0001205893131555058
    2. '_sorted' → logprob: -9.125120162963867
    3. '_keys' → logprob: -11.875120162963867
    4. 'top' → logprob: -12.500120162963867
    5. '_' → logprob: -14.875120162963867
    6. 'a' → logprob: -15.750120162963867
    7. 's' → logprob: -16.125120162963867
    8. '_s' → logprob: -16.250120162963867
    9. ' top' → logprob: -16.500120162963867
    10. '_t' → logprob: -16.625120162963867

Token 325: '_keys' (ID: 29392)
  Prédit: '_keys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_keys' → logprob: -1.6240566083070007e-06
    2. 'keys' → logprob: -14.875001907348633
    3. '_KEYS' → logprob: -15.000001907348633
    4. 's' → logprob: -15.375001907348633
    5. '(a' → logprob: -15.500001907348633
    6. 'a' → logprob: -15.750001907348633
    7. '_' → logprob: -15.750001907348633
    8. '```' → logprob: -15.875001907348633
    9. 'Keys' → logprob: -16.000001907348633
    10. '_counts' → logprob: -17.125001907348633

Token 326: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.128163257315464e-07
    2. ' (' → logprob: -15.5
    3. '(' → logprob: -17.625
    4. '   ' → logprob: -20.125
    5. 'a' → logprob: -20.625
    6. '(
' → logprob: -21.875
    7. '(ai' → logprob: -22.0
    8. ' ' → logprob: -23.125
    9. '[a' → logprob: -23.25
    10. ' a' → logprob: -23.375

Token 327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4378848391061183e-05
    2. '(a' → logprob: -11.250014305114746
    3. 'a' → logprob: -14.375014305114746
    4. '(' → logprob: -14.500014305114746
    5. '_' → logprob: -16.000015258789062
    6. ' ' → logprob: -16.875015258789062
    7. ')' → logprob: -17.375015258789062
    8. ' a' → logprob: -17.625015258789062
    9. '   ' → logprob: -18.250015258789062
    10. '```' → logprob: -18.375015258789062

Token 328: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010032468708232045
    2. ' ,' → logprob: -9.625100135803223
    3. '(' → logprob: -10.750100135803223
    4. 'a' → logprob: -11.625100135803223
    5. '   ' → logprob: -12.875100135803223
    6. '2' → logprob: -15.000100135803223
    7. '1' → logprob: -15.375100135803223
    8. ',
' → logprob: -16.12510108947754
    9. ' ' → logprob: -16.37510108947754
    10. '=' → logprob: -16.62510108947754

Token 329: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001378210261464119
    2. ' ' → logprob: -6.626378059387207
    3. 'min' → logprob: -10.001378059387207
    4. ' min' → logprob: -12.376378059387207
    5. '   ' → logprob: -14.001378059387207
    6. '3' → logprob: -14.251378059387207
    7. '4' → logprob: -14.876378059387207
    8. '  ' → logprob: -14.876378059387207
    9. '5' → logprob: -15.751378059387207
    10. '1' → logprob: -16.501379013061523

Token 330: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001791916904039681
    2. 'min' → logprob: -6.376791954040527
    3. '4' → logprob: -10.126791954040527
    4. '3' → logprob: -10.501791954040527
    5. '5' → logprob: -11.376791954040527
    6. 'len' → logprob: -12.501791954040527
    7. ' ' → logprob: -13.626791954040527
    8. '10' → logprob: -13.876791954040527
    9. '(min' → logprob: -13.876791954040527
    10. '(' → logprob: -14.126791954040527

Token 331: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006718690041452646
    2. ')
' → logprob: -5.006718635559082
    3. ')

' → logprob: -13.006718635559082
    4. ')
' → logprob: -13.881718635559082
    5. ' )' → logprob: -16.2567195892334
    6. '),' → logprob: -17.5067195892334
    7. ')#' → logprob: -18.6317195892334
    8. ')`' → logprob: -19.1317195892334
    9. ' )
' → logprob: -19.3817195892334
    10. ')a' → logprob: -19.8817195892334

Token 332: '   ' (ID: 271)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.2565760910511017
    2. ' top' → logprob: -1.5065760612487793
    3. '
' → logprob: -5.506576061248779
    4. ' 
' → logprob: -8.006576538085938
    5. '[top' → logprob: -9.131576538085938
    6. '    
' → logprob: -9.631576538085938
    7. '   ' → logprob: -11.256576538085938
    8. '  
' → logprob: -11.256576538085938
    9. '(top' → logprob: -11.631576538085938
    10. '	top' → logprob: -11.631576538085938

Token 333: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.5759578347206116
    2. 'top' (adapté à ' top') → logprob: -0.8259578347206116
    3. '
' → logprob: -11.950958251953125
    4. ' 
' → logprob: -12.575958251953125
    5. '[top' → logprob: -12.575958251953125
    6. '	top' → logprob: -12.825958251953125
    7. '(top' → logprob: -14.075958251953125
    8. '    
' → logprob: -14.200958251953125
    9. '.top' → logprob: -15.700958251953125
    10. '   ' → logprob: -15.825958251953125

Token 334: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -4.143808109802194e-05
    2. 'a' → logprob: -10.125041007995605
    3. ' a' → logprob: -14.500041007995605
    4. '   ' → logprob: -15.375041007995605
    5. '_' → logprob: -16.125041961669922
    6. ' ' → logprob: -16.250041961669922
    7. '	a' → logprob: -17.000041961669922
    8. ' _' → logprob: -17.250041961669922
    9. '_tokens' → logprob: -17.250041961669922
    10. '_ai' → logprob: -17.500041961669922

Token 335: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.643152740551159e-05
    2. '1' → logprob: -10.250036239624023
    3. 'a' → logprob: -14.875036239624023
    4. '_keys' → logprob: -15.750036239624023
    5. 's' → logprob: -16.125036239624023
    6. 'f' → logprob: -16.625036239624023
    7. 'get' → logprob: -17.125036239624023
    8. '_key' → logprob: -17.500036239624023
    9. '   ' → logprob: -17.625036239624023
    10. '=' → logprob: -17.937536239624023

Token 336: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022463142871857
    2. '=' → logprob: -1.9102246761322021
    3. '=get' → logprob: -14.660224914550781
    4. ' ' → logprob: -18.03522491455078
    5. ')' → logprob: -19.66022491455078
    6. ',' → logprob: -19.78522491455078
    7. '＝' → logprob: -20.78522491455078
    8. 'get' → logprob: -21.16022491455078
    9. ':' → logprob: -21.78522491455078
    10. ' get' → logprob: -22.16022491455078

Token 337: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.3868715465068817
    2. ' get' → logprob: -1.136871576309204
    3. '(get' → logprob: -14.886871337890625
    4. '[get' → logprob: -16.636871337890625
    5. '=get' → logprob: -17.386871337890625
    6. '	get' → logprob: -17.511871337890625
    7. '.get' → logprob: -17.761871337890625
    8. ' ' → logprob: -18.511871337890625
    9. '_get' → logprob: -19.261871337890625
    10. '@get' → logprob: -19.511871337890625

Token 338: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.3097580075263977
    2. 'top' → logprob: -1.559757947921753
    3. '_keys' → logprob: -3.309757947921753
    4. 'get' → logprob: -4.059758186340332
    5. 'a' → logprob: -6.184758186340332
    6. '(a' → logprob: -9.309758186340332
    7. '(get' → logprob: -9.684758186340332
    8. '_sorted' → logprob: -9.684758186340332
    9. '(top' → logprob: -10.559758186340332
    10. '_key' → logprob: -10.684758186340332

Token 339: '_keys' (ID: 29392)
  Prédit: '_keys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_keys' → logprob: -5.796184723294573e-06
    2. 'keys' → logprob: -13.125005722045898
    3. '_KEYS' → logprob: -13.125005722045898
    4. 'a' → logprob: -13.750005722045898
    5. 'Keys' → logprob: -14.500005722045898
    6. 'get' → logprob: -16.3750057220459
    7. '```' → logprob: -18.1250057220459
    8. ' keys' → logprob: -18.3750057220459
    9. 's' → logprob: -18.8750057220459
    10. ' Keys' → logprob: -19.3750057220459

Token 340: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.9361264946837764e-07
    2. 'a' → logprob: -16.375
    3. '(' → logprob: -18.75
    4. ' (' → logprob: -19.75
    5. '(
' → logprob: -21.125
    6. '[a' → logprob: -22.375
    7. '(A' → logprob: -22.5
    8. '/a' → logprob: -22.75
    9. ' a' → logprob: -22.875
    10. '(ai' → logprob: -22.875

Token 341: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00021855637896806002
    2. 'a' → logprob: -9.125218391418457
    3. '(a' → logprob: -9.125218391418457
    4. ' a' → logprob: -14.875218391418457
    5. '(' → logprob: -16.125219345092773
    6. 's' → logprob: -16.875219345092773
    7. ',a' → logprob: -17.125219345092773
    8. '[a' → logprob: -17.500219345092773
    9. ')a' → logprob: -17.500219345092773
    10. ')' → logprob: -17.875219345092773

Token 342: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006084367632865906
    2. ',a' → logprob: -7.875608444213867
    3. 'a' → logprob: -8.500608444213867
    4. '(a' → logprob: -10.750608444213867
    5. ' ,' → logprob: -13.000608444213867
    6. ' a' → logprob: -14.250608444213867
    7. '(' → logprob: -15.250608444213867
    8. '   ' → logprob: -15.875608444213867
    9. ')' → logprob: -16.125608444213867
    10. ',
' → logprob: -17.875608444213867

Token 343: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0025750671047717333
    2. '2' → logprob: -6.502574920654297
    3. ' a' → logprob: -6.877574920654297
    4. ' ' → logprob: -10.252574920654297
    5. '   ' → logprob: -12.627574920654297
    6. '(a' → logprob: -13.127574920654297
    7. '  ' → logprob: -15.127574920654297
    8. ')' → logprob: -15.127574920654297
    9. ')a' → logprob: -15.752574920654297
    10. '[a' → logprob: -16.502574920654297

Token 344: '2' (ID: 17)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31326964497566223
    2. '2' → logprob: -1.3132696151733398
    3. ' a' → logprob: -12.18826961517334
    4. ' ' → logprob: -13.06326961517334
    5. '(a' → logprob: -14.56326961517334
    6. '   ' → logprob: -15.81326961517334
    7. '[a' → logprob: -17.313270568847656
    8. ')' → logprob: -17.688270568847656
    9. 'а' → logprob: -18.063270568847656
    10. '  ' → logprob: -18.063270568847656

Token 345: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.745069499127567e-05
    2. ')
' → logprob: -9.37508773803711
    3. '   ' → logprob: -13.12508773803711
    4. ')

' → logprob: -14.37508773803711
    5. ' )' → logprob: -17.62508773803711
    6. ')
' → logprob: -18.87508773803711
    7. '))' → logprob: -20.12508773803711
    8. ']' → logprob: -20.12508773803711
    9. '),' → logprob: -20.37508773803711
    10. ' ' → logprob: -20.50008773803711

Token 346: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5530057549476624
    2. 'for' → logprob: -1.1780056953430176
    3. ' for' → logprob: -2.1780056953430176
    4. '
' → logprob: -5.928005695343018
    5. '    
' → logprob: -7.053005695343018
    6. '<|end|>' → logprob: -10.428006172180176
    7. '	for' → logprob: -10.553006172180176
    8. '  
' → logprob: -11.678006172180176
    9. '   
' → logprob: -12.178006172180176
    10. 'def' → logprob: -12.303006172180176

Token 347: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16965194046497345
    2. '   ' → logprob: -1.919651985168457
    3. ' for' → logprob: -4.669651985168457
    4. '    
' → logprob: -12.544651985168457
    5. '	for' → logprob: -12.544651985168457
    6. '
' → logprob: -15.669651985168457
    7. 'import' → logprob: -16.29465103149414
    8. 'def' → logprob: -16.41965103149414
    9. '  ' → logprob: -16.54465103149414
    10. '```' → logprob: -16.54465103149414

Token 348: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.20201313495635986
    2. ' k' → logprob: -1.7020131349563599
    3. 'x' → logprob: -8.20201301574707
    4. 'i' → logprob: -8.57701301574707
    5. ' x' → logprob: -9.70201301574707
    6. ' i' → logprob: -9.82701301574707
    7. 'key' → logprob: -12.45201301574707
    8. 'v' → logprob: -12.45201301574707
    9. ' v' → logprob: -12.82701301574707
    10. ' key' → logprob: -12.82701301574707

Token 349: '1' (ID: 16)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2786271274089813
    2. '1' → logprob: -1.5286271572113037
    3. ' in' → logprob: -3.6536271572113037
    4. 'i' → logprob: -8.278627395629883
    5. '_' → logprob: -9.028627395629883
    6. ' ' → logprob: -10.528627395629883
    7. 'k' → logprob: -10.653627395629883
    8. '_in' → logprob: -12.028627395629883
    9. '  ' → logprob: -12.278627395629883
    10. '   ' → logprob: -12.903627395629883

Token 350: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06994444131851196
    2. 'in' → logprob: -2.694944381713867
    3. ',' → logprob: -12.944944381713867
    4. ' ' → logprob: -12.944944381713867
    5. 'import' → logprob: -14.069944381713867
    6. '  ' → logprob: -14.194944381713867
    7. '	in' → logprob: -14.444944381713867
    8. 'k' → logprob: -14.569944381713867
    9. '   ' → logprob: -15.319944381713867
    10. ',in' → logprob: -15.819944381713867

Token 351: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.38688504695892334
    2. ' top' → logprob: -1.1368850469589233
    3. '[top' → logprob: -12.011884689331055
    4. '(top' → logprob: -12.261884689331055
    5. '	top' → logprob: -13.136884689331055
    6. '[' → logprob: -14.136884689331055
    7. ' ' → logprob: -15.511884689331055
    8. '
' → logprob: -17.011884689331055
    9. '   ' → logprob: -17.136884689331055
    10. '_top' → logprob: -17.136884689331055

Token 352: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -3.173704271830502e-06
    2. 'a' → logprob: -13.50000286102295
    3. '_top' → logprob: -14.25000286102295
    4. 'top' → logprob: -14.62500286102295
    5. '_' → logprob: -16.000003814697266
    6. '   ' → logprob: -16.000003814697266
    7. ')' → logprob: -16.250003814697266
    8. '[top' → logprob: -16.375003814697266
    9. '(top' → logprob: -16.750003814697266
    10. '1' → logprob: -16.750003814697266

Token 353: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. 'r' → logprob: -16.625
    3. '2' → logprob: -18.375
    4. '```' → logprob: -18.6875
    5. 'f' → logprob: -19.375
    6. 's' → logprob: -19.5
    7. 'x' → logprob: -19.5625
    8. ' ' → logprob: -19.5625
    9. 'st' → logprob: -19.6875
    10. 'a' → logprob: -19.6875

Token 354: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.5716304410016164e-05
    2. ':
' → logprob: -10.375035285949707
    3. '   ' → logprob: -13.750035285949707
    4. ':**' → logprob: -14.000035285949707
    5. ' in' → logprob: -14.375035285949707
    6. ' :' → logprob: -14.625035285949707
    7. '):' → logprob: -15.125035285949707
    8. ',' → logprob: -15.125035285949707
    9. '<|end|>' → logprob: -15.375035285949707
    10. '.' → logprob: -15.375035285949707

Token 355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26173296570777893
    2. ' for' → logprob: -1.6367329359054565
    3. '   ' → logprob: -3.511733055114746
    4. '<|end|>' → logprob: -5.761733055114746
    5. ':' → logprob: -6.761733055114746
    6. ' ' → logprob: -7.636733055114746
    7. ',' → logprob: -7.761733055114746
    8. ' and' → logprob: -9.261733055114746
    9. ' in' → logprob: -9.386733055114746
    10. '	for' → logprob: -9.511733055114746

Token 356: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0044962274841964245
    2. '   ' → logprob: -5.879496097564697
    3. 'for' (adapté à ' for') → logprob: -6.504496097564697
    4. '<|end|>' → logprob: -9.254496574401855
    5. '       ' → logprob: -10.004496574401855
    6. ' ' → logprob: -10.504496574401855
    7. '	for' → logprob: -10.879496574401855
    8. '  ' → logprob: -13.379496574401855
    9. '    ' → logprob: -13.379496574401855
    10. '<|end|>' → logprob: -14.004496574401855

Token 357: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.07889430224895477
    2. 'k' → logprob: -2.5788943767547607
    3. ' ' → logprob: -13.20389461517334
    4. ' ' → logprob: -13.57889461517334
    5. '	k' → logprob: -14.32889461517334
    6. ',k' → logprob: -15.45389461517334
    7. '_k' → logprob: -15.70389461517334
    8. ' 
' → logprob: -16.516393661499023
    9. ',' → logprob: -16.641393661499023
    10. ' к' → logprob: -16.828893661499023

Token 358: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.26600831747055054
    2. '2' → logprob: -1.5160083770751953
    3. ' in' → logprob: -4.641008377075195
    4. 'k' → logprob: -5.641008377075195
    5. 'in' → logprob: -7.766008377075195
    6. ' k' → logprob: -8.641008377075195
    7. ' ' → logprob: -9.016008377075195
    8. '   ' → logprob: -11.266008377075195
    9. '  ' → logprob: -11.516008377075195
    10. '_' → logprob: -11.766008377075195

Token 359: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028057026211172342
    2. 'in' → logprob: -5.877805709838867
    3. ' ' → logprob: -14.252805709838867
    4. '	in' → logprob: -15.877805709838867
    5. 'top' → logprob: -17.752805709838867
    6. '<|end|>' → logprob: -18.127805709838867
    7. '  ' → logprob: -18.627805709838867
    8. ' ' → logprob: -18.877805709838867
    9. 's' → logprob: -19.127805709838867
    10. 'ins' → logprob: -19.252805709838867

Token 360: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.018152983859181404
    2. ' top' → logprob: -4.018153190612793
    3. '[top' → logprob: -12.893153190612793
    4. '(top' → logprob: -14.393153190612793
    5. '	top' → logprob: -16.518152236938477
    6. 'Top' → logprob: -19.518152236938477
    7. '_top' → logprob: -19.643152236938477
    8. ' ' → logprob: -19.768152236938477
    9. ' топ' → logprob: -19.893152236938477
    10. '.top' → logprob: -20.143152236938477

Token 361: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.006494381930679083
    2. 'a' → logprob: -5.131494522094727
    3. 'top' → logprob: -7.506494522094727
    4. '2' → logprob: -11.256494522094727
    5. '1' → logprob: -14.506494522094727
    6. '(top' → logprob: -14.506494522094727
    7. 'op' → logprob: -14.881494522094727
    8. '[top' → logprob: -15.131494522094727
    9. 'A' → logprob: -15.381494522094727
    10. 'k' → logprob: -15.631494522094727

Token 362: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. '1' → logprob: -14.875000953674316
    3. 'a' → logprob: -15.375000953674316
    4. 'f' → logprob: -16.562501907348633
    5. 'r' → logprob: -17.187501907348633
    6. 'top' → logprob: -17.250001907348633
    7. '```' → logprob: -17.375001907348633
    8. 'x' → logprob: -17.375001907348633
    9. 'is' → logprob: -17.625001907348633
    10. 's' → logprob: -17.625001907348633

Token 363: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009861272992566228
    2. ':
' → logprob: -7.000986099243164
    3. '           ' → logprob: -10.125986099243164
    4. '<|end|>' → logprob: -11.125986099243164
    5. '       ' → logprob: -11.375986099243164
    6. ',' → logprob: -12.875986099243164
    7. ' :' → logprob: -13.500986099243164
    8. '):' → logprob: -14.250986099243164
    9. '   ' → logprob: -14.375986099243164
    10. '<|end|>' → logprob: -14.625986099243164

Token 364: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01126379519701004
    2. '       ' → logprob: -4.511263847351074
    3. '<|end|>' → logprob: -9.011263847351074
    4. '          ' → logprob: -11.011263847351074
    5. '               ' → logprob: -11.136263847351074
    6. '         ' → logprob: -11.261263847351074
    7. '   ' → logprob: -11.761263847351074
    8. ',' → logprob: -11.886263847351074
    9. '<|end|>' → logprob: -12.386263847351074
    10. '	       ' → logprob: -12.386263847351074

Token 365: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' (adapté à ' add') → logprob: -0.5415679812431335
    2. '       ' → logprob: -1.1665680408477783
    3. ' add' → logprob: -2.9165680408477783
    4. '           ' → logprob: -3.0415680408477783
    5. '               ' → logprob: -5.666567802429199
    6. '   ' → logprob: -6.666567802429199
    7. '	add' → logprob: -10.4165678024292
    8. '(add' → logprob: -10.6665678024292
    9. ' ' → logprob: -11.2915678024292
    10. '_add' → logprob: -11.2915678024292

Token 366: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.875
    3. '_r' → logprob: -17.125
    4. 'result' → logprob: -17.25
    5. '_res' → logprob: -17.25
    6. ' _' → logprob: -18.0
    7. '```' → logprob: -18.875
    8. '_results' → logprob: -19.5
    9. '"_' → logprob: -19.5
    10. '   ' → logprob: -19.75

Token 367: '_if' (ID: 25821)
  Prédit: '_if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_if' → logprob: -0.0009542173356749117
    2. '(r' → logprob: -7.0009541511535645
    3. '_result' → logprob: -10.875954627990723
    4. '_to' → logprob: -12.375954627990723
    5. '(' → logprob: -12.375954627990723
    6. '_r' → logprob: -13.000954627990723
    7. '(_' → logprob: -13.125954627990723
    8. '```' → logprob: -13.500954627990723
    9. '_value' → logprob: -13.750954627990723
    10. '_for' → logprob: -13.875954627990723

Token 368: '_dist' (ID: 37968)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0008533471846021712
    2. '_result' → logprob: -7.875853538513184
    3. '_dist' → logprob: -8.625853538513184
    4. 'r' → logprob: -9.125853538513184
    5. 'dist' → logprob: -9.875853538513184
    6. 'result' → logprob: -10.250853538513184
    7. ' r' → logprob: -10.375853538513184
    8. 's' → logprob: -10.750853538513184
    9. 'distinct' → logprob: -11.500853538513184
    10. ' (' → logprob: -11.750853538513184

Token 369: 'inct' (ID: 11251)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.7786772847175598
    2. 'ct' → logprob: -1.278677225112915
    3. 'st' → logprob: -1.778677225112915
    4. 'ist' → logprob: -3.653677225112915
    5. 't' → logprob: -4.403677463531494
    6. 'inct' → logprob: -4.528677463531494
    7. 'k' → logprob: -4.653677463531494
    8. 'r' → logprob: -5.028677463531494
    9. 'ict' → logprob: -5.028677463531494
    10. 'xt' → logprob: -5.653677463531494

Token 370: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.2233183042553719e-05
    2. ' (' → logprob: -11.500012397766113
    3. '(' → logprob: -13.125012397766113
    4. '(
' → logprob: -18.000011444091797
    5. '(re' → logprob: -19.625011444091797
    6. '   ' → logprob: -20.500011444091797
    7. '```' → logprob: -20.500011444091797
    8. '(res' → logprob: -21.125011444091797
    9. '(result' → logprob: -21.375011444091797
    10. ' ' → logprob: -21.375011444091797

Token 371: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02877490222454071
    2. '(k' → logprob: -3.7787749767303467
    3. ',k' → logprob: -5.403774738311768
    4. '(' → logprob: -7.028774738311768
    5. ' ,' → logprob: -9.778775215148926
    6. '(r' → logprob: -9.903775215148926
    7. ',r' → logprob: -11.278775215148926
    8. ')' → logprob: -12.653775215148926
    9. ' (' → logprob: -14.153775215148926
    10. '   ' → logprob: -14.153775215148926

Token 372: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.023245712742209435
    2. ' k' → logprob: -3.7732458114624023
    3. '	k' → logprob: -16.023244857788086
    4. '(k' → logprob: -16.398244857788086
    5. ',k' → logprob: -16.898244857788086
    6. '_k' → logprob: -18.398244857788086
    7. '{k' → logprob: -18.648244857788086
    8. ')' → logprob: -18.773244857788086
    9. ' к' → logprob: -18.898244857788086
    10. '=k' → logprob: -19.523244857788086

Token 373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -16.125
    3. '_' → logprob: -16.25
    4. ',' → logprob: -16.5
    5. ' k' → logprob: -16.625
    6. '```' → logprob: -16.8125
    7. '   ' → logprob: -17.25
    8. ')' → logprob: -17.8125
    9. 'k' → logprob: -17.9375
    10. 'ey' → logprob: -18.25

Token 374: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000632139970548451
    2. ' ,' → logprob: -8.000632286071777
    3. ',k' → logprob: -8.125632286071777
    4. 'k' → logprob: -14.750632286071777
    5. ' k' → logprob: -16.00063133239746
    6. '   ' → logprob: -16.37563133239746
    7. '‌,' → logprob: -16.75063133239746
    8. ',
' → logprob: -17.12563133239746
    9. '<|end|>' → logprob: -18.12563133239746
    10. ')' → logprob: -18.25063133239746

Token 375: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.25193020701408386
    2. ' k' → logprob: -1.5019302368164062
    3. ' ' → logprob: -15.376930236816406
    4. ',k' → logprob: -15.626930236816406
    5. ' ' → logprob: -15.751930236816406
    6. ',' → logprob: -15.751930236816406
    7. '	k' → logprob: -16.376930236816406
    8. ')' → logprob: -16.501930236816406
    9. '_k' → logprob: -17.126930236816406
    10. '<|end|>' → logprob: -17.376930236816406

Token 376: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. 'k' → logprob: -17.625
    4. '۲' → logprob: -17.875
    5. '₂' → logprob: -18.125
    6. '```' → logprob: -18.25
    7. 's' → logprob: -19.0
    8. '２' → logprob: -19.25
    9. ',' → logprob: -19.5
    10. ' k' → logprob: -19.5

Token 377: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019424250058364123
    2. ' ,' → logprob: -8.750194549560547
    3. ',N' → logprob: -10.250194549560547
    4. ')' → logprob: -15.750194549560547
    5. 'N' → logprob: -16.500194549560547
    6. '   ' → logprob: -17.625194549560547
    7. ',n' → logprob: -17.750194549560547
    8. ',
' → logprob: -18.000194549560547
    9. '`,' → logprob: -18.000194549560547
    10. '```' → logprob: -18.125194549560547

Token 378: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005233882926404476
    2. ' N' → logprob: -5.2552337646484375
    3. ' ' → logprob: -17.005233764648438
    4. '   ' → logprob: -17.130233764648438
    5. ')' → logprob: -17.505233764648438
    6. '	N' → logprob: -18.255233764648438
    7. '<|end|>' → logprob: -19.130233764648438
    8. '    ' → logprob: -19.255233764648438
    9. '  ' → logprob: -19.630233764648438
    10. '
' → logprob: -20.005233764648438

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009435407817363739
    2. ' ,' → logprob: -5.134435176849365
    3. ',v' → logprob: -5.759435176849365
    4. '           ' → logprob: -8.634435653686523
    5. 'v' → logprob: -9.759435653686523
    6. '   ' → logprob: -10.259435653686523
    7. '```' → logprob: -10.759435653686523
    8. '               ' → logprob: -11.259435653686523
    9. '                   ' → logprob: -11.634435653686523
    10. ')' → logprob: -11.884435653686523

Token 380: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0015023599844425917
    2. ' v' → logprob: -6.501502513885498
    3. ')v' → logprob: -17.626502990722656
    4. '	v' → logprob: -19.001502990722656
    5. ',v' → logprob: -20.001502990722656
    6. 'vi' → logprob: -20.501502990722656
    7. ')' → logprob: -20.876502990722656
    8. 'vj' → logprob: -21.001502990722656
    9. '?v' → logprob: -21.376502990722656
    10. '_v' → logprob: -21.501502990722656

Token 381: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.750000953674316
    3. ')' → logprob: -16.375
    4. ',' → logprob: -16.625
    5. '2' → logprob: -17.375
    6. '```' → logprob: -17.4375
    7. 'v' → logprob: -18.25
    8. '   ' → logprob: -18.4375
    9. '<|end|>' → logprob: -18.5
    10. 'a' → logprob: -18.75

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.93710636976175e-05
    2. ',v' → logprob: -9.500099182128906
    3. ' ,' → logprob: -10.625099182128906
    4. ',k' → logprob: -16.125099182128906
    5. ',
' → logprob: -16.875099182128906
    6. 'v' → logprob: -17.250099182128906
    7. '   ' → logprob: -17.375099182128906
    8. '[' → logprob: -18.750099182128906
    9. '_,' → logprob: -19.125099182128906
    10. ',y' → logprob: -19.125099182128906

Token 383: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.011047935113310814
    2. ' v' → logprob: -4.511047840118408
    3. '   ' → logprob: -17.01104736328125
    4. '	v' → logprob: -17.38604736328125
    5. ' ' → logprob: -17.76104736328125
    6. ')v' → logprob: -18.26104736328125
    7. '
' → logprob: -18.51104736328125
    8. '  ' → logprob: -19.01104736328125
    9. '    ' → logprob: -19.51104736328125
    10. ')' → logprob: -20.38604736328125

Token 384: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ')' → logprob: -15.5
    3. ' ' → logprob: -17.5
    4. '۲' → logprob: -18.25
    5. '1' → logprob: -18.375
    6. '<|end|>' → logprob: -18.625
    7. '```' → logprob: -18.625
    8. 'z' → logprob: -19.0
    9. '₂' → logprob: -19.25
    10. 'v' → logprob: -19.375

Token 385: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020509003661572933
    2. ')
' → logprob: -8.500205039978027
    3. ')

' → logprob: -13.875205039978027
    4. ' )' → logprob: -15.625205039978027
    5. '   ' → logprob: -16.125205993652344
    6. '           ' → logprob: -16.250205993652344
    7. ')return' → logprob: -17.000205993652344
    8. ')
' → logprob: -17.125205993652344
    9. '       ' → logprob: -17.375205993652344
    10. ')#' → logprob: -17.625205993652344

Token 386: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004369478672742844
    2. 'ensure' → logprob: -6.379369258880615
    3. '
' → logprob: -6.504369258880615
    4. ' if' → logprob: -7.629369258880615
    5. '    
' → logprob: -8.129369735717773
    6. 'if' → logprob: -8.504369735717773
    7. ' ensure' → logprob: -8.879369735717773
    8. '```' → logprob: -10.504369735717773
    9. '            
' → logprob: -12.629369735717773
    10. '.ensure' → logprob: -12.754369735717773

Token 387: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017384406179189682
    2. 'ensure' → logprob: -4.1423845291137695
    3. 'if' → logprob: -6.7673845291137695
    4. ' ensure' → logprob: -9.14238452911377
    5. ' if' → logprob: -10.39238452911377
    6. '
' → logprob: -10.64238452911377
    7. '```' → logprob: -10.76738452911377
    8. '    
' → logprob: -11.51738452911377
    9. '``' → logprob: -13.14238452911377
    10. '  ' → logprob: -14.14238452911377

Token 388: ' ensure' (ID: 6757)
  Prédit: 'ensure'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensure' (adapté à ' ensure') → logprob: -0.20148858428001404
    2. '   ' → logprob: -1.7014886140823364
    3. ' ensure' → logprob: -9.576488494873047
    4. '  ' → logprob: -13.201488494873047
    5. '    
' → logprob: -13.576488494873047
    6. 'ens' → logprob: -13.951488494873047
    7. '```' → logprob: -14.326488494873047
    8. '.ensure' → logprob: -14.701488494873047
    9. ' ' → logprob: -14.951488494873047
    10. 'Ensure' → logprob: -16.076488494873047

Token 389: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -4.320199877838604e-07
    2. 'result' → logprob: -15.0
    3. 'r' → logprob: -17.75
    4. '_results' → logprob: -18.625
    5. '_' → logprob: -18.75
    6. 's' → logprob: -20.0
    7. '_response' → logprob: -20.125
    8. '_res' → logprob: -20.125
    9. '_RESULT' → logprob: -20.125
    10. '_r' → logprob: -20.25

Token 390: '_non' (ID: 52193)
  Prédit: '_non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_non' → logprob: -5.512236498361744e-07
    2. 'non' → logprob: -14.500000953674316
    3. 'Non' → logprob: -18.75
    4. '_NON' → logprob: -19.0
    5. 's' → logprob: -19.125
    6. 'r' → logprob: -19.25
    7. '_no' → logprob: -19.5
    8. ' non' → logprob: -20.25
    9. '_empty' → logprob: -20.5
    10. '_' → logprob: -20.625

Token 391: '_empty' (ID: 35051)
  Prédit: 'pty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pty' → logprob: -0.0005535095697268844
    2. 'm' → logprob: -7.500553607940674
    3. 'pt' → logprob: -15.500553131103516
    4. 'empty' → logprob: -16.250553131103516
    5. 'ty' → logprob: -16.625553131103516
    6. '_empty' → logprob: -17.250553131103516
    7. 't' → logprob: -18.375553131103516
    8. 'py' → logprob: -18.625553131103516
    9. 'p' → logprob: -19.250553131103516
    10. 'PTY' → logprob: -20.125553131103516

Token 392: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -5.157039049663581e-05
    2. '(' → logprob: -9.875051498413086
    3. '(
' → logprob: -17.125051498413086
    4. ' (' → logprob: -18.375051498413086
    5. '(re' → logprob: -19.375051498413086
    6. ',' → logprob: -20.125051498413086
    7. '(res' → logprob: -20.250051498413086
    8. '(return' → logprob: -21.000051498413086
    9. '(rv' → logprob: -21.125051498413086
    10. '(R' → logprob: -21.250051498413086

Token 393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008199051022529602
    2. ')' → logprob: -5.008199214935303
    3. '   ' → logprob: -7.133199214935303
    4. ')
' → logprob: -7.508199214935303
    5. ',r' → logprob: -9.008198738098145
    6. ',
' → logprob: -12.383198738098145
    7. ',N' → logprob: -12.508198738098145
    8. 'r' → logprob: -13.258198738098145
    9. ' ' → logprob: -13.383198738098145
    10. ' ,' → logprob: -13.508198738098145

Token 394: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00861468818038702
    2. ' N' → logprob: -4.758614540100098
    3. '   ' → logprob: -16.008615493774414
    4. '	N' → logprob: -16.883615493774414
    5. ')' → logprob: -17.258615493774414
    6. 'r' → logprob: -17.633615493774414
    7. ' ' → logprob: -18.383615493774414
    8. '  ' → logprob: -20.633615493774414
    9. ',N' → logprob: -20.883615493774414
    10. '>N' → logprob: -20.883615493774414

Token 395: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16024595499038696
    2. ')' → logprob: -1.9102458953857422
    3. '   ' → logprob: -11.035245895385742
    4. ')

' → logprob: -12.285245895385742
    5. ')
' → logprob: -14.535245895385742
    6. ')return' → logprob: -15.160245895385742
    7. ' )
' → logprob: -15.410245895385742
    8. 'return' → logprob: -18.160245895385742
    9. ' )' → logprob: -18.160245895385742
    10. ' ' → logprob: -18.535245895385742

Token 396: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011948877945542336
    2. 'return' → logprob: -5.011949062347412
    3. 'print' → logprob: -5.261949062347412
    4. ' return' → logprob: -10.761948585510254
    5. '    
' → logprob: -12.261948585510254
    6. '```' → logprob: -12.636948585510254
    7. ' print' → logprob: -13.011948585510254
    8. '	return' → logprob: -14.011948585510254
    9. 'result' → logprob: -14.011948585510254
    10. '
' → logprob: -14.511948585510254

Token 397: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3136827349662781
    2. '   ' → logprob: -1.3136827945709229
    3. 'return' → logprob: -8.313682556152344
    4. ' print' → logprob: -9.188682556152344
    5. 'result' → logprob: -9.563682556152344
    6. '```' → logprob: -12.938682556152344
    7. ' return' → logprob: -15.188682556152344
    8. '	print' → logprob: -16.063682556152344
    9. ' result' → logprob: -16.188682556152344
    10. 'r' → logprob: -16.188682556152344

Token 398: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005600620643235743
    2. 'result' → logprob: -7.750560283660889
    3. 'return' → logprob: -9.00055980682373
    4. '   ' → logprob: -13.00055980682373
    5. 'res' → logprob: -13.00055980682373
    6. ' print' → logprob: -13.87555980682373
    7. 'min' → logprob: -14.75055980682373
    8. 'answer' → logprob: -16.750560760498047
    9. '```' → logprob: -17.125560760498047
    10. 'ans' → logprob: -17.500560760498047

Token 399: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.0011815387988463044
    2. '(' → logprob: -6.751181602478027
    3. 'compute' → logprob: -11.501181602478027
    4. '(min' → logprob: -14.126181602478027
    5. ' (' → logprob: -14.876181602478027
    6. ' compute' → logprob: -15.876181602478027
    7. '(
' → logprob: -17.00118064880371
    8. '(comp' → logprob: -19.25118064880371
    9. '((' → logprob: -19.87618064880371
    10. '_compute' → logprob: -20.12618064880371

Token 400: 'pute' (ID: 13605)
  Prédit: 'pute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pute' → logprob: -3.2617008400848135e-05
    2. 'ute' → logprob: -10.875032424926758
    3. 'put' → logprob: -11.250032424926758
    4. 'p' → logprob: -15.000032424926758
    5. 'pte' → logprob: -16.375032424926758
    6. '```' → logprob: -16.375032424926758
    7. '(' → logprob: -17.250032424926758
    8. '_' → logprob: -17.250032424926758
    9. '
' → logprob: -17.750032424926758
    10. '**' → logprob: -18.250032424926758

Token 401: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -9.372294698550832e-06
    2. 'min' → logprob: -11.625009536743164
    3. '_max' → logprob: -15.125009536743164
    4. '_m' → logprob: -17.375009536743164
    5. '_' → logprob: -17.875009536743164
    6. '(min' → logprob: -19.125009536743164
    7. ' _' → logprob: -19.500009536743164
    8. '
' → logprob: -19.750009536743164
    9. '_MIN' → logprob: -19.750009536743164
    10. 'r' → logprob: -20.000009536743164

Token 402: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.0087516784551553e-05
    2. 'result' → logprob: -11.62501049041748
    3. '(result' → logprob: -14.50001049041748
    4. 'r' → logprob: -15.50001049041748
    5. '(r' → logprob: -15.75001049041748
    6. '_res' → logprob: -16.250009536743164
    7. '_r' → logprob: -17.000009536743164
    8. ' result' → logprob: -17.125009536743164
    9. '(_' → logprob: -17.375009536743164
    10. 'Result' → logprob: -18.125009536743164

Token 403: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -13.000003814697266
    3. ' (' → logprob: -13.250003814697266
    4. ')' → logprob: -15.875003814697266
    5. ')(' → logprob: -18.250003814697266
    6. '(
' → logprob: -20.000003814697266
    7. ' )' → logprob: -20.125003814697266
    8. '   ' → logprob: -20.750003814697266
    9. '[r' → logprob: -21.000003814697266
    10. '```' → logprob: -21.000003814697266

Token 404: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007051144260913134
    2. '))' → logprob: -5.00705099105835
    3. '())' → logprob: -8.007051467895508
    4. '()' → logprob: -13.132051467895508
    5. ' )' → logprob: -15.507051467895508
    6. ')))' → logprob: -15.757051467895508
    7. ')
' → logprob: -16.507051467895508
    8. '})' → logprob: -16.507051467895508
    9. '()))' → logprob: -16.632051467895508
    10. ')`' → logprob: -16.757051467895508

Token 405: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.20141655206680298
    2. 'if' → logprob: -1.7014164924621582
    3. ' main' → logprob: -13.576416969299316
    4. '(main' → logprob: -14.326416969299316
    5. '#' → logprob: -14.576416969299316
    6. ' if' → logprob: -14.826416969299316
    7. 'def' → logprob: -14.951416969299316
    8. 'read' → logprob: -15.826416969299316
    9. '```' → logprob: -16.451416015625
    10. 'print' → logprob: -16.951416015625

Token 406: '_logic' (ID: 131254)
  Prédit: '_logic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_logic' → logprob: -0.19288375973701477
    2. '_' → logprob: -1.9428837299346924
    3. '()' → logprob: -3.6928837299346924
    4. '(' → logprob: -5.1928839683532715
    5. 'logic' → logprob: -7.5678839683532715
    6. 'Logic' → logprob: -8.067883491516113
    7. '.' → logprob: -8.192883491516113
    8. '_log' → logprob: -8.942883491516113
    9. '(_)' → logprob: -9.567883491516113
    10. '().' → logprob: -9.942883491516113

Token 407: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0036262006033211946
    2. ')' → logprob: -6.378626346588135
    3. '(' → logprob: -7.378626346588135
    4. '#' → logprob: -7.628626346588135
    5. '<|end|>' → logprob: -7.628626346588135
    6. '```' → logprob: -8.878625869750977
    7. '()
' → logprob: -9.128625869750977
    8. '
' → logprob: -10.128625869750977
    9. '())' → logprob: -11.878625869750977
    10. '(
' → logprob: -12.253625869750977


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 405
Tokens correctement prédits (1ère position, stricte): 197
Tokens correctement prédits (1ère position, avec adaptation): 216
Tokens correctement prédits (top 10): 364
Précision stricte (1ère position): 48.64%
Précision adaptée (1ère position): 53.33%
Précision (top 10): 89.88%
================================================================================
