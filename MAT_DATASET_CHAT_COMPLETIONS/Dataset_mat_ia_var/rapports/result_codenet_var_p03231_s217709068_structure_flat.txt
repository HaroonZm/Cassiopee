================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

import math
import bisect
from collections import defaultdict
from collections import deque
from collections import Counter
from functools import lru_cache

MOD = 10**9+7
INF = float('inf')

N, M = list(map(int, input().split()))
S1 = input().strip()
S2 = input().strip()

a = N
b = M
while b:
    a, b = b, a % b
GCD = a

LCM = N * M // GCD

i = 0
while i < GCD:
    idx1 = i * N // GCD
    idx2 = i * M // GCD
    if S1[idx1] != S2[idx2]:
        print(-1)
        sys.exit()
    i += 1
print(LCM)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0056168390437960625
    2. '.' → logprob: -5.255616664886475
    3. ' (' → logprob: -9.255617141723633
    4. '(
' → logprob: -9.380617141723633
    5. ')' → logprob: -9.755617141723633
    6. '()' → logprob: -10.005617141723633
    7. '[' → logprob: -11.005617141723633
    8. '('' → logprob: -11.130617141723633
    9. ' ' → logprob: -11.630617141723633
    10. '=' → logprob: -11.755617141723633

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.014413704164326191
    2. 'sys' → logprob: -4.264413833618164
    3. ' input' → logprob: -8.514413833618164
    4. 'input' → logprob: -10.389413833618164
    5. ' ' → logprob: -12.014413833618164
    6. '=sys' → logprob: -12.139413833618164
    7. '	sys' → logprob: -12.389413833618164
    8. '(sys' → logprob: -12.889413833618164
    9. ' system' → logprob: -14.514413833618164
    10. ' lambda' → logprob: -16.514413833618164

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00014013137842994183
    2. '[' → logprob: -10.000140190124512
    3. '.readline' → logprob: -10.625140190124512
    4. ' .' → logprob: -10.875140190124512
    5. '.
' → logprob: -11.750140190124512
    6. '.import' → logprob: -12.625140190124512
    7. '.[' → logprob: -12.750140190124512
    8. '.`' → logprob: -12.750140190124512
    9. '.stdin' → logprob: -12.875140190124512
    10. '.)' → logprob: -13.000140190124512

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3585807979106903
    2. '.' → logprob: -1.2335808277130127
    3. '.read' → logprob: -4.608580589294434
    4. '.readlines' → logprob: -9.733580589294434
    5. '```' → logprob: -10.733580589294434
    6. '.Read' → logprob: -11.483580589294434
    7. 'read' → logprob: -12.358580589294434
    8. ' .' → logprob: -12.983580589294434
    9. '().' → logprob: -12.983580589294434
    10. '.write' → logprob: -13.233580589294434

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1419765055179596
    2. '(' → logprob: -2.2669765949249268
    3. '()
' → logprob: -4.266976356506348
    4. '(
' → logprob: -4.766976356506348
    5. '().' → logprob: -6.516976356506348
    6. '
' → logprob: -6.516976356506348
    7. '()\' → logprob: -7.016976356506348
    8. '()

' → logprob: -7.391976356506348
    9. '\' → logprob: -7.516976356506348
    10. '\n' → logprob: -7.641976356506348

Token 9: 'import' (ID: 561)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18130169808864594
    2. '(' → logprob: -1.8063017129898071
    3. '().' → logprob: -6.806301593780518
    4. '()
' → logprob: -8.806302070617676
    5. '(
' → logprob: -10.056302070617676
    6. '()

' → logprob: -10.306302070617676
    7. ')' → logprob: -10.431302070617676
    8. '#' → logprob: -10.431302070617676
    9. 'def' → logprob: -10.681302070617676
    10. 'a' → logprob: -10.681302070617676

Token 10: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0009157438762485981
    2. ' math' → logprob: -7.25091552734375
    3. 'os' → logprob: -8.75091552734375
    4. ' sys' → logprob: -10.37591552734375
    5. ' re' → logprob: -12.37591552734375
    6. ' collections' → logprob: -12.37591552734375
    7. ' random' → logprob: -13.12591552734375
    8. ' json' → logprob: -13.25091552734375
    9. ' itertools' → logprob: -13.62591552734375
    10. '	os' → logprob: -14.75091552734375

Token 11: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.4221726655960083
    2. '
' → logprob: -1.4221726655960083
    3. '(' → logprob: -1.9221726655960083
    4. '\' → logprob: -1.9221726655960083
    5. '\n' → logprob: -2.0471725463867188
    6. '

' → logprob: -3.4221725463867188
    7. '(
' → logprob: -4.047172546386719
    8. 'def' → logprob: -4.672172546386719
    9. 'import' → logprob: -4.672172546386719
    10. '\(' → logprob: -5.672172546386719

Token 12: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9738430976867676
    2. '\' → logprob: -1.3488430976867676
    3. '\n' → logprob: -1.7238430976867676
    4. 'import' → logprob: -2.8488430976867676
    5. '
' → logprob: -3.0988430976867676
    6. '<|end|>' → logprob: -3.8488430976867676
    7. '```' → logprob: -4.473843097686768
    8. '

' → logprob: -4.973843097686768
    9. '' → logprob: -5.473843097686768
    10. '.' → logprob: -5.473843097686768

Token 13: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.13411414623260498
    2. 'os' → logprob: -2.6341142654418945
    3. ' sys' → logprob: -3.7591142654418945
    4. ' random' → logprob: -4.2591142654418945
    5. ' itertools' → logprob: -5.1341142654418945
    6. 'random' → logprob: -5.7591142654418945
    7. ' collections' → logprob: -5.8841142654418945
    8. 'collections' → logprob: -6.6341142654418945
    9. 'sys' → logprob: -7.0091142654418945
    10. 'cmath' → logprob: -7.6341142654418945

Token 14: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -3.531315314830863e-06
    2. 't' → logprob: -13.125003814697266
    3. 'ec' → logprob: -14.625003814697266
    4. 'ected' → logprob: -14.625003814697266
    5. 'e' → logprob: -15.250003814697266
    6. 'ector' → logprob: -16.125003814697266
    7. 'ection' → logprob: -16.750003814697266
    8. 'ectl' → logprob: -17.125003814697266
    9. '```' → logprob: -17.500003814697266
    10. 'ects' → logprob: -18.375003814697266

Token 15: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0218826532363892
    2. '

' → logprob: -1.1468826532363892
    3. '<|end|>' → logprob: -1.3968826532363892
    4. 'import' → logprob: -3.7718825340270996
    5. '\n' → logprob: -4.2718825340271
    6. '\' → logprob: -4.6468825340271
    7. '<|end|>' → logprob: -5.1468825340271
    8. '.' → logprob: -5.3968825340271
    9. 'n' → logprob: -5.7718825340271
    10. '```' → logprob: -5.7718825340271

Token 16: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8889740109443665
    2. '

' → logprob: -0.8889740109443665
    3. 'import' → logprob: -2.7639739513397217
    4. 'def' → logprob: -3.3889739513397217
    5. '<|end|>' → logprob: -3.6389739513397217
    6. '\n' → logprob: -4.013974189758301
    7. '\' → logprob: -4.638974189758301
    8. 'n' → logprob: -4.763974189758301
    9. '' → logprob: -5.638974189758301
    10. 'from' → logprob: -5.763974189758301

Token 17: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.09337882697582245
    2. 'collections' → logprob: -3.093378782272339
    3. ' itertools' → logprob: -3.593378782272339
    4. ' heap' → logprob: -4.218379020690918
    5. 'heap' → logprob: -7.718379020690918
    6. ' typing' → logprob: -7.718379020690918
    7. ' copy' → logprob: -8.468379020690918
    8. ' ' → logprob: -8.718379020690918
    9. ' math' → logprob: -9.093379020690918
    10. ' sys' → logprob: -9.093379020690918

Token 18: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2523530125617981
    2. 'import' → logprob: -1.5023529529571533
    3. '.Counter' → logprob: -9.002352714538574
    4. ' ' → logprob: -9.127352714538574
    5. ' defaultdict' → logprob: -9.252352714538574
    6. '.' → logprob: -9.877352714538574
    7. '	import' → logprob: -11.502352714538574
    8. '```' → logprob: -11.752352714538574
    9. ' Counter' → logprob: -12.002352714538574
    10. ' ' → logprob: -12.627352714538574

Token 19: ' defaultdict' (ID: 107098)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.40273603796958923
    2. ' defaultdict' → logprob: -1.1527360677719116
    3. 'deque' → logprob: -4.152736186981201
    4. ' Counter' → logprob: -11.402735710144043
    5. 'default' → logprob: -12.902735710144043
    6. ' de' → logprob: -13.027735710144043
    7. 'de' → logprob: -13.652735710144043
    8. ' ' → logprob: -14.777735710144043
    9. ' default' → logprob: -15.152735710144043
    10. 'Deque' → logprob: -15.277735710144043

Token 20: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5617969036102295
    2. 'import' → logprob: -1.8117969036102295
    3. '
' → logprob: -2.0617969036102295
    4. 'def' → logprob: -3.3117969036102295
    5. '<|end|>' → logprob: -3.4367969036102295
    6. 'n' → logprob: -3.5617969036102295
    7. ' 

' → logprob: -4.686797142028809
    8. 'd' → logprob: -5.311797142028809
    9. '```' → logprob: -5.811797142028809
    10. 'deque' → logprob: -5.936797142028809

Token 21: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.623012900352478
    2. '

' → logprob: -1.248012900352478
    3. '
' → logprob: -2.2480130195617676
    4. 'from' → logprob: -3.8730130195617676
    5. 'n' → logprob: -4.623013019561768
    6. ' 

' → logprob: -4.748013019561768
    7. 'def' → logprob: -4.873013019561768
    8. '<|end|>' → logprob: -5.498013019561768
    9. 'deque' → logprob: -5.998013019561768
    10. '```' → logprob: -5.998013019561768

Token 22: ' collections' (ID: 22690)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.5948216915130615
    2. ' itertools' → logprob: -0.8448216915130615
    3. 'heap' → logprob: -5.094821929931641
    4. ' typing' → logprob: -5.469821929931641
    5. ' queue' → logprob: -5.594821929931641
    6. ' ' → logprob: -6.469821929931641
    7. ' functools' → logprob: -6.469821929931641
    8. '_' → logprob: -7.469821929931641
    9. ' operator' → logprob: -8.09482192993164
    10. ' math' → logprob: -8.34482192993164

Token 23: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.08425800502300262
    2. ' import' → logprob: -2.7092580795288086
    3. 'port' → logprob: -4.459258079528809
    4. 'abc' → logprob: -7.084258079528809
    5. 'ort' → logprob: -7.334258079528809
    6. 'at' → logprob: -8.459258079528809
    7. 'odule' → logprob: -8.584258079528809
    8. 'a' → logprob: -8.834258079528809
    9. 't' → logprob: -9.334258079528809
    10. 'from' → logprob: -9.459258079528809

Token 24: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.38914188742637634
    2. 'deque' → logprob: -1.1391419172286987
    3. ' Counter' → logprob: -6.514142036437988
    4. 'Counter' → logprob: -7.514142036437988
    5. 'de' → logprob: -8.889142036437988
    6. ' defaultdict' → logprob: -9.889142036437988
    7. ' Ordered' → logprob: -11.264142036437988
    8. 'Ordered' → logprob: -11.639142036437988
    9. ' de' → logprob: -11.889142036437988
    10. 'named' → logprob: -11.889142036437988

Token 25: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6132058501243591
    2. 'import' → logprob: -1.238205909729004
    3. '
' → logprob: -2.238205909729004
    4. '\n' → logprob: -4.238205909729004
    5. 'from' → logprob: -4.363205909729004
    6. 'def' → logprob: -4.613205909729004
    7. 'deque' → logprob: -5.113205909729004
    8. 'n' → logprob: -5.363205909729004
    9. '\' → logprob: -5.738205909729004
    10. '#' → logprob: -6.488205909729004

Token 26: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -1.1364269256591797
    2. 'def' → logprob: -1.3864269256591797
    3. 'import' → logprob: -1.5114269256591797
    4. '
' → logprob: -2.5114269256591797
    5. 'n' → logprob: -2.7614269256591797
    6. 'from' → logprob: -3.2614269256591797
    7. 'class' → logprob: -5.13642692565918
    8. '\' → logprob: -5.63642692565918
    9. '\n' → logprob: -5.63642692565918
    10. 'deque' → logprob: -5.88642692565918

Token 27: ' collections' (ID: 22690)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.2961704730987549
    2. ' itertools' → logprob: -1.5461704730987549
    3. 'heap' → logprob: -3.171170473098755
    4. ' queue' → logprob: -7.796170234680176
    5. ' typing' → logprob: -7.921170234680176
    6. 'it' → logprob: -8.546170234680176
    7. 'queue' → logprob: -9.296170234680176
    8. ' functools' → logprob: -9.671170234680176
    9. '_' → logprob: -10.296170234680176
    10. ' math' → logprob: -10.421170234680176

Token 28: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.498811274766922
    2. 'import' → logprob: -0.9988112449645996
    3. '	import' → logprob: -4.6238112449646
    4. ' ' → logprob: -4.8738112449646
    5. '<|end|>' → logprob: -5.7488112449646
    6. '.' → logprob: -5.8738112449646
    7. '_import' → logprob: -8.373811721801758
    8. '_' → logprob: -8.873811721801758
    9. '.import' → logprob: -9.623811721801758
    10. 'from' → logprob: -9.873811721801758

Token 29: ' Counter' (ID: 32251)
  Prédit: ' Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.5304335355758667
    2. 'Counter' → logprob: -1.0304335355758667
    3. 'Ordered' → logprob: -4.030433654785156
    4. ' Ordered' → logprob: -4.280433654785156
    5. ' defaultdict' → logprob: -4.405433654785156
    6. ' named' → logprob: -5.155433654785156
    7. 'named' → logprob: -5.405433654785156
    8. ' deque' → logprob: -7.780433654785156
    9. 'deque' → logprob: -8.280433654785156
    10. 'Chain' → logprob: -12.030433654785156

Token 30: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7080813050270081
    2. '\n' → logprob: -1.4580812454223633
    3. '<|end|>' → logprob: -2.4580812454223633
    4. 'import' → logprob: -3.0830812454223633
    5. '

' → logprob: -3.3330812454223633
    6. '#' → logprob: -3.3330812454223633
    7. '\' → logprob: -3.5830812454223633
    8. 'n' → logprob: -3.8330812454223633
    9. '' → logprob: -4.458081245422363
    10. 'from' → logprob: -6.208081245422363

Token 31: 'from' (ID: 2845)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9281857013702393
    2. '
' → logprob: -1.3031857013702393
    3. '

' → logprob: -2.5531857013702393
    4. 'd' → logprob: -2.6781857013702393
    5. 'def' → logprob: -2.6781857013702393
    6. '#' → logprob: -2.8031857013702393
    7. '' → logprob: -3.9281857013702393
    8. '\' → logprob: -4.55318546295166
    9. '\n' → logprob: -4.80318546295166
    10. 'a' → logprob: -5.17818546295166

Token 32: ' functools' (ID: 142636)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.10378581285476685
    2. ' heap' → logprob: -2.353785753250122
    3. 'heap' → logprob: -5.853785991668701
    4. ' functools' → logprob: -8.228785514831543
    5. ' typing' → logprob: -8.353785514831543
    6. 'it' → logprob: -8.853785514831543
    7. ' operator' → logprob: -10.978785514831543
    8. 'typing' → logprob: -11.353785514831543
    9. ' math' → logprob: -11.478785514831543
    10. ' ' → logprob: -12.228785514831543

Token 33: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0507829450070858
    2. 'import' → logprob: -3.0507829189300537
    3. ' ' → logprob: -7.175783157348633
    4. '<|end|>' → logprob: -7.425783157348633
    5. '_' → logprob: -7.550783157348633
    6. '_import' → logprob: -9.050783157348633
    7. '	import' → logprob: -10.050783157348633
    8. '.' → logprob: -10.300783157348633
    9. ' ‌' → logprob: -10.300783157348633
    10. ' ' → logprob: -10.925783157348633

Token 34: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.47657305002212524
    2. ' l' → logprob: -0.9765730500221252
    3. 'reduce' → logprob: -6.2265729904174805
    4. ' reduce' → logprob: -7.7265729904174805
    5. 'cmp' → logprob: -10.10157299041748
    6. ' cmp' → logprob: -11.35157299041748
    7. 'partial' → logprob: -11.97657299041748
    8. 'wrap' → logprob: -12.10157299041748
    9. '	l' → logprob: -12.22657299041748
    10. ' wraps' → logprob: -12.97657299041748

Token 35: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.0009273029863834381
    2. 'r' → logprob: -7.000927448272705
    3. 'z' → logprob: -11.500926971435547
    4. 'ruz' → logprob: -12.500926971435547
    5. 'a' → logprob: -15.250926971435547
    6. 'rup' → logprob: -15.375926971435547
    7. 'u' → logprob: -15.500926971435547
    8. 'ruff' → logprob: -15.625926971435547
    9. '1' → logprob: -15.750926971435547
    10. 'ruk' → logprob: -16.125926971435547

Token 36: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.06217080354690552
    2. 'cache' → logprob: -2.8121707439422607
    3. 'c' → logprob: -8.68717098236084
    4. '_c' → logprob: -11.31217098236084
    5. 'Cache' → logprob: -11.93717098236084
    6. '```' → logprob: -12.43717098236084
    7. 'ac' → logprob: -13.43717098236084
    8. '-cache' → logprob: -13.56217098236084
    9. 'ru' → logprob: -13.68717098236084
    10. '_' → logprob: -13.81217098236084

Token 37: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6990622282028198
    2. '

' → logprob: -1.5740622282028198
    3. '\n' → logprob: -2.1990623474121094
    4. '\' → logprob: -3.0740623474121094
    5. '' → logprob: -3.3240623474121094
    6. 'n' → logprob: -3.5740623474121094
    7. 'import' → logprob: -4.074062347412109
    8. '@' → logprob: -4.199062347412109
    9. 'd' → logprob: -4.449062347412109
    10. '#' → logprob: -5.074062347412109

Token 38: 'MOD' (ID: 52135)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.17735090851783752
    2. 'n' → logprob: -2.3023509979248047
    3. '@' → logprob: -3.3023509979248047
    4. '#' → logprob: -4.427350997924805
    5. 'def' → logprob: -4.677350997924805
    6. 'N' → logprob: -6.177350997924805
    7. 'a' → logprob: -7.427350997924805
    8. 'D' → logprob: -7.552350997924805
    9. 'class' → logprob: -8.677350997924805
    10. '\' → logprob: -8.802350997924805

Token 39: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43241122364997864
    2. ' =' → logprob: -1.0574111938476562
    3. ' ' → logprob: -5.682411193847656
    4. '_' → logprob: -8.807411193847656
    5. '<|end|>' → logprob: -9.307411193847656
    6. ' =
' → logprob: -10.682411193847656
    7. ')' → logprob: -11.182411193847656
    8. ',' → logprob: -12.307411193847656
    9. '.' → logprob: -12.932411193847656
    10. '=
' → logprob: -13.057411193847656

Token 40: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07896469533443451
    2. '10' → logprob: -2.5789647102355957
    3. '1' → logprob: -9.703964233398438
    4. '100' → logprob: -11.328964233398438
    5. 'int' → logprob: -14.578964233398438
    6. ' 
' → logprob: -14.828964233398438
    7. ' )' → logprob: -15.453964233398438
    8. '998' → logprob: -15.828964233398438
    9. ' ' → logprob: -15.953964233398438
    10. ' (' → logprob: -16.078964233398438

Token 41: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0004528374411165714
    2. '100' → logprob: -7.750452995300293
    3. '1' → logprob: -10.750452995300293
    4. '998' → logprob: -14.750452995300293
    5. 'int' → logprob: -15.375452995300293
    6. ' ' → logprob: -15.750452995300293
    7. '(' → logprob: -17.125452041625977
    8. '123' → logprob: -19.625452041625977
    9. '１０' → logprob: -19.875452041625977
    10. '109' → logprob: -19.875452041625977

Token 42: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.7122454643249512
    2. '09' → logprob: -0.7122454643249512
    3. '**' → logprob: -4.212245464324951
    4. '000' → logprob: -5.962245464324951
    5. '00' → logprob: -6.837245464324951
    6. '0' → logprob: -8.58724594116211
    7. '009' → logprob: -8.83724594116211
    8. '07' → logprob: -9.46224594116211
    9. '```' → logprob: -11.21224594116211
    10. '+' → logprob: -11.71224594116211

Token 43: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -16.625
    3. '```' → logprob: -20.0
    4. ' ' → logprob: -21.0
    5. '+' → logprob: -21.375
    6. '９' → logprob: -22.25
    7. '10' → logprob: -22.625
    8. '_' → logprob: -22.875
    9. '0' → logprob: -23.375
    10. '
' → logprob: -23.625

Token 44: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.388769103679806e-05
    2. ' +' → logprob: -9.500093460083008
    3. '7' → logprob: -11.375093460083008
    4. '+
' → logprob: -12.000093460083008
    5. '+

' → logprob: -13.875093460083008
    6. '＋' → logprob: -16.000093460083008
    7. '+</' → logprob: -16.625093460083008
    8. '```' → logprob: -17.125093460083008
    9. 'plus' → logprob: -17.625093460083008
    10. '46' → logprob: -17.750093460083008

Token 45: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. '+' → logprob: -15.75
    3. '```' → logprob: -17.875
    4. ' ' → logprob: -18.625
    5. '07' → logprob: -19.125
    6. '9' → logprob: -19.625
    7. '

' → logprob: -19.875
    8. '   ' → logprob: -20.5
    9. '79' → logprob: -21.25
    10. '``' → logprob: -21.75

Token 46: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04975971579551697
    2. '

' → logprob: -3.79975962638855
    3. 'def' → logprob: -4.924759864807129
    4. '' → logprob: -5.049759864807129
    5. '
' → logprob: -5.174759864807129
    6. '\n' → logprob: -5.549759864807129
    7. 'n' → logprob: -6.174759864807129
    8. '\' → logprob: -7.799759864807129
    9. '```' → logprob: -9.174759864807129
    10. '<|end|>' → logprob: -9.549759864807129

Token 47: 'INF' (ID: 64358)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1824977695941925
    2. 'def' → logprob: -2.43249773979187
    3. 'n' → logprob: -3.18249773979187
    4. '

' → logprob: -4.057497978210449
    5. '' → logprob: -4.932497978210449
    6. '\n' → logprob: -5.057497978210449
    7. '
' → logprob: -5.682497978210449
    8. '\' → logprob: -6.307497978210449
    9. '```' → logprob: -7.682497978210449
    10. 'd' → logprob: -7.807497978210449

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020621657371520996
    2. '=' → logprob: -3.8956217765808105
    3. ' ' → logprob: -10.020621299743652
    4. ' =
' → logprob: -11.395621299743652
    5. ')' → logprob: -11.520621299743652
    6. ' =)' → logprob: -12.770621299743652
    7. '<|end|>' → logprob: -13.395621299743652
    8. ',' → logprob: -13.520621299743652
    9. ' )' → logprob: -13.520621299743652
    10. ' =
' → logprob: -13.770621299743652

Token 49: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.672331690788269
    2. '10' → logprob: -1.422331690788269
    3. ' float' → logprob: -1.922331690788269
    4. 'float' → logprob: -2.2973318099975586
    5. '1' → logprob: -6.547331809997559
    6. 'int' → logprob: -9.547331809997559
    7. ' int' → logprob: -10.672331809997559
    8. '100' → logprob: -13.422331809997559
    9. '2' → logprob: -13.547331809997559
    10. ' ' → logprob: -13.672331809997559

Token 50: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.000305310997646302
    2. ''' → logprob: -8.87530517578125
    3. '(' → logprob: -9.25030517578125
    4. ''in' → logprob: -9.75030517578125
    5. '("' → logprob: -12.37530517578125
    6. ''s' → logprob: -13.62530517578125
    7. ''i' → logprob: -13.75030517578125
    8. '32' → logprob: -14.25030517578125
    9. ''a' → logprob: -14.25030517578125
    10. ''t' → logprob: -14.62530517578125

Token 51: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.12485452741384506
    2. 'inf' → logprob: -2.499854564666748
    3. ''' → logprob: -3.624854564666748
    4. ''i' → logprob: -4.999854564666748
    5. ''ins' → logprob: -7.999854564666748
    6. ''im' → logprob: -8.62485408782959
    7. ''ex' → logprob: -8.74985408782959
    8. 'in' → logprob: -8.87485408782959
    9. ''a' → logprob: -9.49985408782959
    10. 'i' → logprob: -9.74985408782959

Token 52: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47408756613731384
    2. '')' → logprob: -0.9740875959396362
    3. '")' → logprob: -12.474087715148926
    4. ')'' → logprob: -13.099087715148926
    5. ''' → logprob: -13.474087715148926
    6. '`)' → logprob: -14.349087715148926
    7. '()' → logprob: -15.349087715148926
    8. '('' → logprob: -15.349087715148926
    9. '')
' → logprob: -15.349087715148926
    10. ' )' → logprob: -15.599087715148926

Token 53: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4097508490085602
    2. 'd' → logprob: -1.4097508192062378
    3. 'n' → logprob: -2.4097509384155273
    4. 'de' → logprob: -7.409750938415527
    5. '
' → logprob: -7.909750938415527
    6. 'class' → logprob: -8.034750938415527
    7. '\' → logprob: -8.284750938415527
    8. 'N' → logprob: -8.284750938415527
    9. 'a' → logprob: -9.034750938415527
    10. '#' → logprob: -9.284750938415527

Token 54: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3914565443992615
    2. ' ' → logprob: -1.7664566040039062
    3. '=' → logprob: -1.8914566040039062
    4. ',' → logprob: -6.641456604003906
    5. '<|end|>' → logprob: -8.141456604003906
    6. ' ,' → logprob: -8.266456604003906
    7. ')' → logprob: -10.016456604003906
    8. '  ' → logprob: -10.266456604003906
    9. ' =)' → logprob: -10.516456604003906
    10. '.' → logprob: -10.641456604003906

Token 55: ' M' (ID: 391)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006501139607280493
    2. ' K' → logprob: -5.881501197814941
    3. 'K' → logprob: -6.006501197814941
    4. 'M' → logprob: -8.006501197814941
    5. ' M' → logprob: -8.381501197814941
    6. 'input' → logprob: -8.756501197814941
    7. '=' → logprob: -8.881501197814941
    8. ' =' → logprob: -9.756501197814941
    9. '_' → logprob: -9.881501197814941
    10. 'space' → logprob: -10.381501197814941

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3134647309780121
    2. '=' → logprob: -1.3134647607803345
    3. ',' → logprob: -8.563465118408203
    4. ' =
' → logprob: -12.563465118408203
    5. '=input' → logprob: -12.563465118408203
    6. ' ' → logprob: -12.938465118408203
    7. '=int' → logprob: -14.313465118408203
    8. ' ,' → logprob: -14.688465118408203
    9. '<|end|>' → logprob: -14.813465118408203
    10. ' =
' → logprob: -15.563465118408203

Token 57: ' list' (ID: 1562)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.201426699757576
    2. 'map' → logprob: -1.7014267444610596
    3. 'input' → logprob: -12.45142650604248
    4. ' ' → logprob: -12.82642650604248
    5. '	map' → logprob: -12.82642650604248
    6. ' input' → logprob: -13.45142650604248
    7. 'm' → logprob: -14.20142650604248
    8. '0' → logprob: -14.82642650604248
    9. 'list' → logprob: -14.95142650604248
    10. ' mapa' → logprob: -15.32642650604248

Token 58: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010881858179345727
    2. '(map' → logprob: -7.3760881423950195
    3. '(input' → logprob: -8.12608814239502
    4. '()' → logprob: -10.12608814239502
    5. '(int' → logprob: -10.25108814239502
    6. '(range' → logprob: -10.25108814239502
    7. '(
' → logprob: -11.12608814239502
    8. '(s' → logprob: -11.87608814239502
    9. '(

' → logprob: -12.00108814239502
    10. '(data' → logprob: -12.62608814239502

Token 59: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2578829824924469
    2. '(' → logprob: -1.5078829526901245
    3. '(str' → logprob: -5.382883071899414
    4. '(lambda' → logprob: -7.257883071899414
    5. '(input' → logprob: -7.507883071899414
    6. ')' → logprob: -11.007883071899414
    7. '(
' → logprob: -11.507883071899414
    8. '<|end|>' → logprob: -11.632883071899414
    9. '(s' → logprob: -11.882883071899414
    10. '(i' → logprob: -12.007883071899414

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47925832867622375
    2. ',input' → logprob: -0.9792582988739014
    3. '(input' → logprob: -5.4792585372924805
    4. '(' → logprob: -7.6042585372924805
    5. 'input' → logprob: -7.7292585372924805
    6. ' ,' → logprob: -10.10425853729248
    7. ',(' → logprob: -12.47925853729248
    8. ' input' → logprob: -12.72925853729248
    9. '(),' → logprob: -12.85425853729248
    10. ',

' → logprob: -13.47925853729248

Token 61: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.38692528009414673
    2. 'input' → logprob: -1.136925220489502
    3. ' ' → logprob: -10.63692569732666
    4. ')' → logprob: -11.26192569732666
    5. '(input' → logprob: -12.63692569732666
    6. ' sys' → logprob: -12.88692569732666
    7. ' i' → logprob: -13.13692569732666
    8. ' )' → logprob: -13.26192569732666
    9. 'sys' → logprob: -13.51192569732666
    10. 'in' → logprob: -13.51192569732666

Token 62: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0006689518922939897
    2. '()' → logprob: -7.500669002532959
    3. '()))' → logprob: -9.3756685256958
    4. '())' → logprob: -10.5006685256958
    5. '(' → logprob: -13.5006685256958
    6. '()));' → logprob: -14.3756685256958
    7. '()
' → logprob: -14.6256685256958
    8. ')' → logprob: -15.0006685256958
    9. ' ().' → logprob: -15.0006685256958
    10. '())))' → logprob: -15.0006685256958

Token 63: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.31959402561187744
    2. 'strip' → logprob: -1.3195940256118774
    3. 'rstrip' → logprob: -5.069593906402588
    4. ')' → logprob: -11.069594383239746
    5. 'read' → logprob: -11.944594383239746
    6. ' strip' → logprob: -13.444594383239746
    7. '(split' → logprob: -13.944594383239746
    8. ' split' → logprob: -14.069594383239746
    9. 's' → logprob: -14.069594383239746
    10. 'rs' → logprob: -15.444594383239746

Token 64: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5855100154876709
    2. '()))' → logprob: -0.8355100154876709
    3. '()' → logprob: -5.21051025390625
    4. '())' → logprob: -5.96051025390625
    5. ')' → logprob: -6.71051025390625
    6. '(' → logprob: -8.33551025390625
    7. ')))' → logprob: -11.71051025390625
    8. '()))
' → logprob: -12.08551025390625
    9. '()));' → logprob: -12.58551025390625
    10. ' ))' → logprob: -12.71051025390625

Token 65: 'S' (ID: 50)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3201713562011719
    2. 'a' → logprob: -1.6951713562011719
    3. 'data' → logprob: -1.8201713562011719
    4. 'A' → logprob: -2.195171356201172
    5. 'd' → logprob: -2.570171356201172
    6. 'graph' → logprob: -3.070171356201172
    7. 'arr' → logprob: -3.445171356201172
    8. ' 
' → logprob: -3.820171356201172
    9. '\n' → logprob: -4.195171356201172
    10. 'array' → logprob: -4.445171356201172

Token 66: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28160786628723145
    2. '=' → logprob: -1.9066078662872314
    3. ',' → logprob: -2.5316078662872314
    4. 's' → logprob: -4.656607627868652
    5. '_' → logprob: -5.156607627868652
    6. ' ' → logprob: -7.781607627868652
    7. ' ,' → logprob: -8.031607627868652
    8. '_list' → logprob: -8.281607627868652
    9. 'paces' → logprob: -8.781607627868652
    10. '.' → logprob: -8.906607627868652

Token 67: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6677961945533752
    2. ' =' → logprob: -1.0427961349487305
    3. ',' → logprob: -2.0427961349487305
    4. 's' → logprob: -5.7927961349487305
    5. '_' → logprob: -6.5427961349487305
    6. '.' → logprob: -9.04279613494873
    7. ' ,' → logprob: -9.41779613494873
    8. '1' → logprob: -9.79279613494873
    9. ')' → logprob: -9.79279613494873
    10. ' ' → logprob: -10.04279613494873

Token 68: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03647710382938385
    2. ' input' → logprob: -3.4114770889282227
    3. '[input' → logprob: -6.536477088928223
    4. 'list' → logprob: -7.161477088928223
    5. '[]' → logprob: -8.036477088928223
    6. 'set' → logprob: -9.536477088928223
    7. ' []' → logprob: -10.411477088928223
    8. ' list' → logprob: -10.411477088928223
    9. '=input' → logprob: -10.411477088928223
    10. '[' → logprob: -10.536477088928223

Token 69: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.1662137806415558
    2. '()' → logprob: -1.9162137508392334
    3. '.strip' → logprob: -5.4162139892578125
    4. '.rstrip' → logprob: -7.1662139892578125
    5. '(' → logprob: -8.041213989257812
    6. '.' → logprob: -8.041213989257812
    7. 'rstrip' → logprob: -10.791213989257812
    8. '.readline' → logprob: -10.791213989257812
    9. '()\' → logprob: -10.916213989257812
    10. '()
' → logprob: -11.291213989257812

Token 70: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.3132665753364563
    2. 'rstrip' → logprob: -1.3132665157318115
    3. 'r' → logprob: -12.68826675415039
    4. 'read' → logprob: -14.06326675415039
    5. 'rst' → logprob: -14.68826675415039
    6. 'split' → logprob: -15.81326675415039
    7. 'rs' → logprob: -16.06326675415039
    8. 'str' → logprob: -16.43826675415039
    9. 'stri' → logprob: -16.93826675415039
    10. 'startswith' → logprob: -17.31326675415039

Token 71: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010203057900071144
    2. '(' → logprob: -7.501020431518555
    3. '()
' → logprob: -7.751020431518555
    4. ')' → logprob: -11.501020431518555
    5. '()\' → logprob: -11.876020431518555
    6. '())' → logprob: -12.376020431518555
    7. '<|end|>' → logprob: -12.626020431518555
    8. ' ()' → logprob: -13.251020431518555
    9. '(
' → logprob: -13.376020431518555
    10. '()

' → logprob: -13.501020431518555

Token 72: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.004148441832512617
    2. ' S' → logprob: -6.754148483276367
    3. '<|end|>' → logprob: -7.129148483276367
    4. '_' → logprob: -7.254148483276367
    5. 's' → logprob: -7.504148483276367
    6. '
' → logprob: -8.129148483276367
    7. ' ' → logprob: -8.879148483276367
    8. ' 
' → logprob: -9.129148483276367
    9. '\n' → logprob: -9.504148483276367
    10. ')' → logprob: -9.879148483276367

Token 73: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.650518920039758e-06
    2. '1' → logprob: -13.625003814697266
    3. '0' → logprob: -14.250003814697266
    4. '_' → logprob: -14.375003814697266
    5. ' =' → logprob: -15.125003814697266
    6. ' ' → logprob: -15.625003814697266
    7. '₂' → logprob: -15.875003814697266
    8. '۲' → logprob: -16.000003814697266
    9. '=' → logprob: -16.250003814697266
    10. '２' → logprob: -16.312503814697266

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804941102862358
    2. '=' → logprob: -3.2880494594573975
    3. ' ' → logprob: -12.038049697875977
    4. '=input' → logprob: -13.413049697875977
    5. '<|end|>' → logprob: -15.163049697875977
    6. 's' → logprob: -16.413049697875977
    7. ' ' → logprob: -16.788049697875977
    8. '=int' → logprob: -17.038049697875977
    9. '.' → logprob: -17.288049697875977
    10. ')' → logprob: -17.288049697875977

Token 75: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10021423548460007
    2. 'input' → logprob: -2.3502142429351807
    3. '=input' → logprob: -12.600214004516602
    4. '(input' → logprob: -13.850214004516602
    5. ' ' → logprob: -14.225214004516602
    6. '	input' → logprob: -14.350214004516602
    7. ' ' → logprob: -14.725214004516602
    8. 's' → logprob: -14.975214004516602
    9. '[input' → logprob: -15.225214004516602
    10. '_input' → logprob: -15.475214004516602

Token 76: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0009224193054251373
    2. '()' → logprob: -7.000922203063965
    3. ' ().' → logprob: -11.750922203063965
    4. '(' → logprob: -14.000922203063965
    5. '().'' → logprob: -14.625922203063965
    6. '().__' → logprob: -14.875922203063965
    7. '.' → logprob: -14.875922203063965
    8. '()).' → logprob: -16.00092315673828
    9. '()?>' → logprob: -16.37592315673828
    10. '<|end|>' → logprob: -16.37592315673828

Token 77: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -2.696889623621246e-06
    2. 'rstrip' → logprob: -13.25000286102295
    3. 'split' → logprob: -14.37500286102295
    4. '.strip' → logprob: -16.000001907348633
    5. ' strip' → logprob: -16.125001907348633
    6. 'stripe' → logprob: -17.000001907348633
    7. '(strip' → logprob: -18.125001907348633
    8. '_strip' → logprob: -18.375001907348633
    9. '```' → logprob: -18.750001907348633
    10. 'stri' → logprob: -18.750001907348633

Token 78: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0036262006033211946
    2. '(' → logprob: -5.628626346588135
    3. ' ()' → logprob: -12.128625869750977
    4. '()`' → logprob: -12.128625869750977
    5. '()
' → logprob: -12.628625869750977
    6. '())' → logprob: -13.253625869750977
    7. ')' → logprob: -13.378625869750977
    8. '`()' → logprob: -13.503625869750977
    9. '()<' → logprob: -14.253625869750977
    10. '()]' → logprob: -14.378625869750977

Token 79: 'a' (ID: 64)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.25021931529045105
    2. 'd' → logprob: -2.1252193450927734
    3. '#' → logprob: -2.5002193450927734
    4. 'a' → logprob: -5.375219345092773
    5. 'A' → logprob: -5.625219345092773
    6. 'DP' → logprob: -5.625219345092773
    7. 'def' → logprob: -5.750219345092773
    8. 'D' → logprob: -6.500219345092773
    9. 'c' → logprob: -8.000219345092773
    10. 'l' → logprob: -8.250219345092773

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5104822516441345
    2. '=' → logprob: -1.7604823112487793
    3. '_' → logprob: -2.5104823112487793
    4. 'rr' → logprob: -3.3854823112487793
    5. '1' → logprob: -3.6354823112487793
    6. 'r' → logprob: -4.260482311248779
    7. 'ns' → logprob: -4.260482311248779
    8. 'd' → logprob: -4.385482311248779
    9. 'p' → logprob: -4.510482311248779
    10. 'c' → logprob: -4.885482311248779

Token 81: ' N' (ID: 478)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.47081488370895386
    2. ' []' → logprob: -1.2208149433135986
    3. ' defaultdict' → logprob: -2.7208149433135986
    4. '[]' → logprob: -4.8458147048950195
    5. 'default' → logprob: -6.3458147048950195
    6. '[' → logprob: -6.5958147048950195
    7. ' ' → logprob: -6.5958147048950195
    8. ' [[]' → logprob: -6.5958147048950195
    9. ' [[' → logprob: -8.59581470489502
    10. ' ['' → logprob: -8.72081470489502

Token 82: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03848883509635925
    2. '-' → logprob: -4.038488864898682
    3. ' +' → logprob: -4.913488864898682
    4. '+b' → logprob: -5.538488864898682
    5. 'b' → logprob: -6.413488864898682
    6. '[' → logprob: -6.663488864898682
    7. '*' → logprob: -6.788488864898682
    8. 's' → logprob: -7.163488864898682
    9. '**' → logprob: -7.288488864898682
    10. '//' → logprob: -7.413488864898682

Token 83: 'b' (ID: 65)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.37990641593933105
    2. '-' → logprob: -1.754906415939331
    3. '+b' → logprob: -2.629906415939331
    4. ' +' → logprob: -3.754906415939331
    5. '=' → logprob: -4.75490665435791
    6. ' -' → logprob: -5.37990665435791
    7. 'b' → logprob: -5.37990665435791
    8. '-b' → logprob: -5.75490665435791
    9. '//' → logprob: -6.00490665435791
    10. 's' → logprob: -6.12990665435791

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08982310444116592
    2. '=' → logprob: -2.464823007583618
    3. ' ' → logprob: -7.464823246002197
    4. ',' → logprob: -8.964822769165039
    5. '+' → logprob: -9.214822769165039
    6. '-' → logprob: -11.214822769165039
    7. ' +=' → logprob: -11.214822769165039
    8. ' +' → logprob: -11.339822769165039
    9. ' ,' → logprob: -11.589822769165039
    10. '=M' → logprob: -12.089822769165039

Token 85: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.04393329098820686
    2. ' M' → logprob: -3.168933391571045
    3. 'N' → logprob: -7.168933391571045
    4. '0' → logprob: -9.668932914733887
    5. ' ' → logprob: -10.168932914733887
    6. ' N' → logprob: -11.043932914733887
    7. 'len' → logprob: -11.793932914733887
    8. 'a' → logprob: -11.918932914733887
    9. '1' → logprob: -12.168932914733887
    10. 'b' → logprob: -12.668932914733887

Token 86: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18888168036937714
    2. '+' → logprob: -2.4388816356658936
    3. '\n' → logprob: -3.3138816356658936
    4. ' 
' → logprob: -3.6888816356658936
    5. '-' → logprob: -5.313881874084473
    6. '*' → logprob: -5.688881874084473
    7. '#' → logprob: -5.938881874084473
    8. ' ' → logprob: -6.063881874084473
    9. '+
' → logprob: -6.063881874084473
    10. '<|end|>' → logprob: -6.438881874084473

Token 87: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15343016386032104
    2. '+' → logprob: -2.528430223464966
    3. '\n' → logprob: -3.653430223464966
    4. '#' → logprob: -4.653429985046387
    5. ' 
' → logprob: -4.903429985046387
    6. '-' → logprob: -5.153429985046387
    7. '*' → logprob: -5.153429985046387
    8. '+
' → logprob: -6.403429985046387
    9. '=' → logprob: -7.028429985046387
    10. ' ' → logprob: -7.278429985046387

Token 88: ' b' (ID: 287)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.011645521968603134
    2. 'a' → logprob: -4.511645317077637
    3. ' b' → logprob: -7.636645317077637
    4. ' ' → logprob: -9.636645317077637
    5. ' not' → logprob: -11.011645317077637
    6. 'b' → logprob: -11.136645317077637
    7. '	a' → logprob: -12.011645317077637
    8. ' N' → logprob: -12.261645317077637
    9. '(a' → logprob: -12.386645317077637
    10. ' (' → logprob: -13.261645317077637

Token 89: ':
' (ID: 734)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.8454208374023438
    2. ':' → logprob: -1.3454208374023438
    3. ' !=' → logprob: -1.3454208374023438
    4. '>' → logprob: -3.0954208374023438
    5. ' >' → logprob: -5.720420837402344
    6. ' :' → logprob: -8.095420837402344
    7. 'and' → logprob: -8.220420837402344
    8. ' and' → logprob: -8.470420837402344
    9. '!' → logprob: -8.595420837402344
    10. ' ' → logprob: -10.095420837402344

Token 90: '   ' (ID: 271)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.55511873960495
    2. 'a' → logprob: -1.1801187992095947
    3. ' ' → logprob: -2.1801187992095947
    4. '<|end|>' → logprob: -6.680118560791016
    5. '   ' → logprob: -7.555118560791016
    6. '    ' → logprob: -7.555118560791016
    7. '	a' → logprob: -7.555118560791016
    8. ' ' → logprob: -7.805118560791016
    9. ',' → logprob: -8.055118560791016
    10. ' 
' → logprob: -8.055118560791016

Token 91: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.020578909665346146
    2. ' a' → logprob: -3.8955788612365723
    3. '	a' → logprob: -10.64557933807373
    4. '   ' → logprob: -12.02057933807373
    5. '    
' → logprob: -12.89557933807373
    6. 'temp' → logprob: -13.77057933807373
    7. '<|end|>' → logprob: -14.39557933807373
    8. '    ' → logprob: -14.52057933807373
    9. ' 
' → logprob: -14.64557933807373
    10. '```' → logprob: -14.64557933807373

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06729505956172943
    2. '%' → logprob: -3.1922950744628906
    3. '%=' → logprob: -4.442295074462891
    4. ' %=' → logprob: -5.067295074462891
    5. ' ,' → logprob: -6.192295074462891
    6. '=' → logprob: -6.317295074462891
    7. '%,' → logprob: -7.067295074462891
    8. '%b' → logprob: -7.692295074462891
    9. ' %' → logprob: -8.06729507446289
    10. ',b' → logprob: -8.19229507446289

Token 93: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16122733056545258
    2. ' b' → logprob: -1.9112273454666138
    3. '<|end|>' → logprob: -6.911227226257324
    4. '%b' → logprob: -13.036227226257324
    5. ' ' → logprob: -13.036227226257324
    6. '<|end|>' → logprob: -13.536227226257324
    7. '%' → logprob: -16.53622817993164
    8. '>b' → logprob: -16.53622817993164
    9. ')b' → logprob: -16.53622817993164
    10. 'a' → logprob: -17.03622817993164

Token 94: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020937025547028
    2. ' =' → logprob: -2.3502094745635986
    3. '%=' → logprob: -13.85020923614502
    4. ',' → logprob: -14.10020923614502
    5. '=

' → logprob: -15.72520923614502
    6. '=b' → logprob: -15.85020923614502
    7. ' %=' → logprob: -15.97520923614502
    8. ' ' → logprob: -16.225210189819336
    9. '=}' → logprob: -16.225210189819336
    10. '=a' → logprob: -16.350210189819336

Token 95: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5759397745132446
    2. ' b' → logprob: -0.8259397745132446
    3. ' ' → logprob: -16.075939178466797
    4. '>b' → logprob: -16.700939178466797
    5. '(b' → logprob: -17.325939178466797
    6. '<|end|>' → logprob: -17.450939178466797
    7. ')b' → logprob: -17.825939178466797
    8. ',' → logprob: -18.075939178466797
    9. '%b' → logprob: -18.075939178466797
    10. '	b' → logprob: -18.825939178466797

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037288223393261433
    2. ' ,' → logprob: -5.628728866577148
    3. 'a' → logprob: -10.128728866577148
    4. ' a' → logprob: -10.128728866577148
    5. ',a' → logprob: -10.128728866577148
    6. ' ' → logprob: -12.128728866577148
    7. ',
' → logprob: -13.378728866577148
    8. '%' → logprob: -14.128728866577148
    9. '<|end|>' → logprob: -14.128728866577148
    10. ' ,
' → logprob: -16.37872886657715

Token 97: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023245826363563538
    2. ' a' → logprob: -3.7732458114624023
    3. ' ' → logprob: -16.27324676513672
    4. '	a' → logprob: -16.27324676513672
    5. '(a' → logprob: -17.27324676513672
    6. '_a' → logprob: -17.89824676513672
    7. '```' → logprob: -18.14824676513672
    8. '`' → logprob: -18.27324676513672
    9. '<|end|>' → logprob: -18.27324676513672
    10. '>a' → logprob: -18.64824676513672

Token 98: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.011768168769776821
    2. '%b' → logprob: -4.761768341064453
    3. ' %' → logprob: -5.761768341064453
    4. '%i' → logprob: -13.636768341064453
    5. '%B' → logprob: -14.761768341064453
    6. '%s' → logprob: -15.011768341064453
    7. '%x' → logprob: -15.261768341064453
    8. 'a' → logprob: -15.261768341064453
    9. 'b' → logprob: -16.261768341064453
    10. '%
' → logprob: -16.261768341064453

Token 99: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.157039049663581e-05
    2. ' b' → logprob: -9.875051498413086
    3. '<|end|>' → logprob: -19.750051498413086
    4. ' ' → logprob: -20.000051498413086
    5. '	b' → logprob: -20.250051498413086
    6. '%b' → logprob: -21.250051498413086
    7. '>b' → logprob: -22.500051498413086
    8. '  ' → logprob: -22.625051498413086
    9. ')b' → logprob: -22.625051498413086
    10. '```' → logprob: -22.750051498413086

Token 100: '
' (ID: 198)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.018522959202528
    2. '
' → logprob: -4.7685227394104
    3. 'a' → logprob: -5.1435227394104
    4. 'print' → logprob: -6.1435227394104
    5. '\' → logprob: -7.5185227394104
    6. '\n' → logprob: -8.518523216247559
    7. ' 
' → logprob: -8.643523216247559
    8. '    
' → logprob: -8.893523216247559
    9. '#' → logprob: -9.018523216247559
    10. 'result' → logprob: -9.018523216247559

Token 101: 'G' (ID: 38)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5240294933319092
    2. 'g' → logprob: -1.1490294933319092
    3. 'a' → logprob: -2.399029493331909
    4. '```' → logprob: -10.024029731750488
    5. '#' → logprob: -10.899029731750488
    6. 'result' → logprob: -11.524029731750488
    7. '    
' → logprob: -12.274029731750488
    8. '
' → logprob: -12.649029731750488
    9. 'ans' → logprob: -12.899029731750488
    10. 'if' → logprob: -13.149029731750488

Token 102: 'CD' (ID: 8257)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0594717375934124
    2. 'CD' → logprob: -3.059471845626831
    3. 'G' → logprob: -4.559471607208252
    4. 'S' → logprob: -9.18447208404541
    5. 'M' → logprob: -9.43447208404541
    6. 'cd' → logprob: -9.93447208404541
    7. '=' → logprob: -10.43447208404541
    8. '#' → logprob: -10.80947208404541
    9. 'D' → logprob: -11.05947208404541
    10. 'N' → logprob: -11.18447208404541

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09663976728916168
    2. '=' → logprob: -2.47163987159729
    3. '_' → logprob: -5.346639633178711
    4. ' ' → logprob: -6.096639633178711
    5. '(a' → logprob: -8.471639633178711
    6. 'a' → logprob: -9.221639633178711
    7. '(' → logprob: -9.346639633178711
    8. ' a' → logprob: -9.846639633178711
    9. '=a' → logprob: -9.846639633178711
    10. ')' → logprob: -10.221639633178711

Token 104: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0485873706638813
    2. ' a' → logprob: -3.0485873222351074
    3. '	a' → logprob: -16.923587799072266
    4. '_a' → logprob: -19.048587799072266
    5. ' ' → logprob: -19.798587799072266
    6. ' ' → logprob: -20.048587799072266
    7. '#a' → logprob: -21.298587799072266
    8. '>a' → logprob: -21.548587799072266
    9. ')a' → logprob: -21.673587799072266
    10. '"a' → logprob: -21.798587799072266

Token 105: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.017310241237282753
    2. '

' → logprob: -4.39231014251709
    3. '<|end|>' → logprob: -5.89231014251709
    4. ' 
' → logprob: -7.26731014251709
    5. '
' → logprob: -7.76731014251709
    6. '#' → logprob: -7.89231014251709
    7. '<|end|>' → logprob: -9.14231014251709
    8. '  
' → logprob: -9.26731014251709
    9. ' 

' → logprob: -9.64231014251709
    10. '```' → logprob: -9.76731014251709

Token 106: 'LC' (ID: 10566)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3423810601234436
    2. 'l' → logprob: -1.8423810005187988
    3. 'DP' → logprob: -3.342381000518799
    4. 'print' → logprob: -3.467381000518799
    5. 'def' → logprob: -3.967381000518799
    6. 'LC' → logprob: -4.092381000518799
    7. 'ans' → logprob: -4.842381000518799
    8. 'L' → logprob: -4.967381000518799
    9. 'if' → logprob: -5.342381000518799
    10. 'for' → logprob: -6.217381000518799

Token 107: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -7.107425062713446e-06
    2. 'D' → logprob: -12.500006675720215
    3. ' M' → logprob: -13.125006675720215
    4. 'CM' → logprob: -14.500006675720215
    5. 'М' → logprob: -15.500006675720215
    6. '```' → logprob: -15.500006675720215
    7. '=' → logprob: -16.12500762939453
    8. ' =' → logprob: -16.37500762939453
    9. '=M' → logprob: -16.37500762939453
    10. '

' → logprob: -17.00000762939453

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026303434744477272
    2. '=' → logprob: -3.65130352973938
    3. ' ' → logprob: -14.0263032913208
    4. ')' → logprob: -14.7763032913208
    5. 's' → logprob: -15.1513032913208
    6. '=int' → logprob: -15.2763032913208
    7. ',' → logprob: -15.6513032913208
    8. ' =)' → logprob: -15.6513032913208
    9. '＝' → logprob: -16.151304244995117
    10. '```' → logprob: -16.151304244995117

Token 109: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.27757567167282104
    2. '(N' → logprob: -1.5275757312774658
    3. ' N' → logprob: -4.152575492858887
    4. ' (' → logprob: -4.652575492858887
    5. '(' → logprob: -10.152575492858887
    6. '(M' → logprob: -12.027575492858887
    7. ' ' → logprob: -12.277575492858887
    8. '   ' → logprob: -13.027575492858887
    9. ' ' → logprob: -13.277575492858887
    10. '```' → logprob: -13.402575492858887

Token 110: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.009775921702384949
    2. '*M' → logprob: -4.7597761154174805
    3. ' *' → logprob: -6.7597761154174805
    4. '*N' → logprob: -14.88477611541748
    5. '*m' → logprob: -15.50977611541748
    6. '*(' → logprob: -15.88477611541748
    7. 'M' → logprob: -15.88477611541748
    8. '*S' → logprob: -16.009775161743164
    9. '*b' → logprob: -16.384775161743164
    10. '**' → logprob: -16.884775161743164

Token 111: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.10021109133958817
    2. ' M' → logprob: -2.3502111434936523
    3. ' ' → logprob: -13.225211143493652
    4. '(M' → logprob: -13.600211143493652
    5. ' (' → logprob: -14.350211143493652
    6. ' ' → logprob: -15.350211143493652
    7. '(' → logprob: -15.975211143493652
    8. 'N' → logprob: -16.100210189819336
    9. '```' → logprob: -16.537710189819336
    10. '	M' → logprob: -16.600210189819336

Token 112: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.2254386842250824
    2. ' //' → logprob: -1.6004387140274048
    3. ' ' → logprob: -11.725439071655273
    4. '
' → logprob: -11.975439071655273
    5. ' ' → logprob: -12.725439071655273
    6. '/' → logprob: -13.100439071655273
    7. '#' → logprob: -13.350439071655273
    8. '//=' → logprob: -13.350439071655273
    9. '```' → logprob: -13.975439071655273
    10. '...' → logprob: -14.350439071655273

Token 113: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -9.088346359931165e-07
    2. ' G' → logprob: -14.250000953674316
    3. 'a' → logprob: -15.250000953674316
    4. '	G' → logprob: -19.25
    5. 'GC' → logprob: -20.75
    6. 'g' → logprob: -21.0
    7. ' ' → logprob: -22.125
    8. '<G' → logprob: -22.125
    9. 'Ｇ' → logprob: -22.5
    10. '.G' → logprob: -22.625

Token 114: 'CD' (ID: 8257)
  Prédit: 'CD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CD' → logprob: -0.030040310695767403
    2. 'C' → logprob: -3.5300402641296387
    3. 'D' → logprob: -8.155040740966797
    4. 'cd' → logprob: -14.030040740966797
    5. 'Cd' → logprob: -14.655040740966797
    6. ' CD' → logprob: -14.780040740966797
    7. 'CT' → logprob: -14.905040740966797
    8. 'DC' → logprob: -15.405040740966797
    9. 'CDF' → logprob: -16.155040740966797
    10. 'CF' → logprob: -17.030040740966797

Token 115: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006284964270889759
    2. 'DP' → logprob: -6.506285190582275
    3. 'ans' → logprob: -6.631285190582275
    4. 'print' → logprob: -7.006285190582275
    5. 'result' → logprob: -7.006285190582275
    6. 'answer' → logprob: -7.631285190582275
    7. ' dp' → logprob: -8.006284713745117
    8. '#' → logprob: -8.631284713745117
    9. 'def' → logprob: -9.506284713745117
    10. 'res' → logprob: -9.756284713745117

Token 116: 'i' (ID: 72)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002130041131749749
    2. 'l' → logprob: -7.752130031585693
    3. 'ans' → logprob: -8.002130508422852
    4. 'def' → logprob: -8.502130508422852
    5. 'if' → logprob: -8.502130508422852
    6. 'res' → logprob: -8.877130508422852
    7. 'for' → logprob: -8.877130508422852
    8. 'result' → logprob: -9.252130508422852
    9. 'count' → logprob: -9.502130508422852
    10. '#' → logprob: -9.627130508422852

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7891428470611572
    2. 'f' → logprob: -1.2891428470611572
    3. '=' → logprob: -1.4141428470611572
    4. 'n' → logprob: -3.9141428470611572
    5. 'nd' → logprob: -5.789142608642578
    6. 'm' → logprob: -6.539142608642578
    7. 'nt' → logprob: -6.789142608642578
    8. ' ' → logprob: -7.789142608642578
    9. 'd' → logprob: -8.039142608642578
    10. 's' → logprob: -8.289142608642578

Token 118: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004117104224860668
    2. ' ' → logprob: -5.504117012023926
    3. '1' → logprob: -10.254117012023926
    4. 'G' → logprob: -14.254117012023926
    5. '(' → logprob: -14.629117012023926
    6. '2' → logprob: -14.879117012023926
    7. '<|end|>' → logprob: -15.004117012023926
    8. 's' → logprob: -15.316617012023926
    9. '```' → logprob: -15.629117012023926
    10. '  ' → logprob: -15.629117012023926

Token 119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00030733743915334344
    2. '1' → logprob: -8.625307083129883
    3. 'G' → logprob: -10.000307083129883
    4. '(' → logprob: -10.750307083129883
    5. ' ' → logprob: -11.125307083129883
    6. 'LC' → logprob: -11.125307083129883
    7. 'S' → logprob: -11.250307083129883
    8. 'a' → logprob: -12.000307083129883
    9. 'i' → logprob: -13.000307083129883
    10. 'j' → logprob: -13.500307083129883

Token 120: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5637672543525696
    2. '
' → logprob: -1.6887671947479248
    3. ' while' → logprob: -2.563767194747925
    4. ' ' → logprob: -2.813767194747925
    5. 'j' → logprob: -3.188767194747925
    6. 'i' → logprob: -4.563767433166504
    7. ',' → logprob: -4.688767433166504
    8. '<|end|>' → logprob: -4.688767433166504
    9. ' 
' → logprob: -5.063767433166504
    10. 's' → logprob: -5.438767433166504

Token 122: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14279679954051971
    2. 'i' → logprob: -2.017796754837036
    3. ' ' → logprob: -9.892796516418457
    4. ' ' → logprob: -10.642796516418457
    5. '	i' → logprob: -11.142796516418457
    6. '(i' → logprob: -12.017796516418457
    7. 'True' → logprob: -12.142796516418457
    8. ' True' → logprob: -12.392796516418457
    9. 'S' → logprob: -13.267796516418457
    10. '   ' → logprob: -13.455296516418457

Token 123: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.31893080472946167
    2. '<' → logprob: -1.3189308643341064
    3. '<N' → logprob: -5.943930625915527
    4. '*' → logprob: -6.443930625915527
    5. ' ' → logprob: -7.443930625915527
    6. ' *' → logprob: -7.818930625915527
    7. '<M' → logprob: -8.193930625915527
    8. '<n' → logprob: -9.943930625915527
    9. '<len' → logprob: -9.943930625915527
    10. '<G' → logprob: -11.193930625915527

Token 124: ' G' (ID: 499)
  Prédit: 'LC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LC' → logprob: -0.5082411170005798
    2. 'N' → logprob: -1.5082411766052246
    3. 'G' → logprob: -1.7582411766052246
    4. 'min' → logprob: -6.258241176605225
    5. 'S' → logprob: -6.883241176605225
    6. 'L' → logprob: -7.758241176605225
    7. ' N' → logprob: -8.008240699768066
    8. 'len' → logprob: -8.133240699768066
    9. ' G' → logprob: -8.258240699768066
    10. 'M' → logprob: -8.633240699768066

Token 125: 'CD' (ID: 8257)
  Prédit: 'CD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CD' → logprob: -0.0019906130619347095
    2. 'CM' → logprob: -6.751990795135498
    3. 'C' → logprob: -7.376990795135498
    4. '1' → logprob: -10.50199031829834
    5. 'N' → logprob: -10.50199031829834
    6. 'L' → logprob: -10.62699031829834
    7. 'cd' → logprob: -11.25199031829834
    8. 'CN' → logprob: -11.25199031829834
    9. 'D' → logprob: -11.62699031829834
    10. 'LD' → logprob: -11.87699031829834

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07145734876394272
    2. ':
' → logprob: -2.6964573860168457
    3. ' and' → logprob: -6.571457386016846
    4. 'and' → logprob: -9.196456909179688
    5. ' :
' → logprob: -11.821456909179688
    6. ' :' → logprob: -11.946456909179688
    7. '   ' → logprob: -13.321456909179688
    8. '):
' → logprob: -13.821456909179688
    9. ':

' → logprob: -14.071456909179688
    10. ':
' → logprob: -15.071456909179688

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02895892970263958
    2. ' if' → logprob: -4.278958797454834
    3. 'if' → logprob: -4.903958797454834
    4. '    
' → logprob: -5.153958797454834
    5. ' ' → logprob: -7.528958797454834
    6. '	if' → logprob: -7.778958797454834
    7. ' 
' → logprob: -9.278959274291992
    8. '
' → logprob: -9.528959274291992
    9. ':' → logprob: -9.903959274291992
    10. '```' → logprob: -9.903959274291992

Token 128: ' idx' (ID: 14016)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006688733585178852
    2. '   ' → logprob: -5.131688594818115
    3. ' if' → logprob: -7.256688594818115
    4. '    
' → logprob: -10.631689071655273
    5. ' ' → logprob: -11.131689071655273
    6. '	if' → logprob: -12.131689071655273
    7. '
' → logprob: -12.881689071655273
    8. '  
' → logprob: -13.256689071655273
    9. '```' → logprob: -13.631689071655273
    10. '  ' → logprob: -13.756689071655273

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08954304456710815
    2. ' =' → logprob: -3.089543104171753
    3. '_s' → logprob: -4.339542865753174
    4. '_S' → logprob: -4.464542865753174
    5. 'S' → logprob: -5.089542865753174
    6. '_' → logprob: -5.214542865753174
    7. '=' → logprob: -5.839542865753174
    8. 's' → logprob: -8.214543342590332
    9. ' ' → logprob: -8.339543342590332
    10. '   ' → logprob: -8.714543342590332

Token 130: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019860202446579933
    2. '=' → logprob: -4.01986026763916
    3. '1' → logprob: -6.89486026763916
    4. ' ' → logprob: -8.39486026763916
    5. 's' → logprob: -8.51986026763916
    6. '_' → logprob: -8.89486026763916
    7. ',' → logprob: -9.51986026763916
    8. 'S' → logprob: -10.89486026763916
    9. '_s' → logprob: -11.14486026763916
    10. '   ' → logprob: -12.26986026763916

Token 131: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2987426519393921
    2. ' i' → logprob: -1.548742651939392
    3. ' (' → logprob: -3.9237427711486816
    4. 'N' → logprob: -4.173742771148682
    5. '(i' → logprob: -5.173742771148682
    6. ' N' → logprob: -5.548742771148682
    7. ' ' → logprob: -7.923742771148682
    8. '(N' → logprob: -8.048742294311523
    9. '  ' → logprob: -9.173742294311523
    10. '   ' → logprob: -9.173742294311523

Token 132: ' *' (ID: 425)
  Prédit: '*N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.1957555115222931
    2. ' *' → logprob: -2.0707554817199707
    3. '*' → logprob: -3.0707554817199707
    4. '*(' → logprob: -5.445755481719971
    5. '   ' → logprob: -7.945755481719971
    6. 'N' → logprob: -8.320755958557129
    7. '    
' → logprob: -8.695755958557129
    8. '
' → logprob: -9.070755958557129
    9. '*n' → logprob: -10.320755958557129
    10. '    ' → logprob: -11.320755958557129

Token 133: ' N' (ID: 478)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.19469678401947021
    2. 'N' → logprob: -2.5696969032287598
    3. ' (' → logprob: -2.8196969032287598
    4. 'LC' → logprob: -3.9446969032287598
    5. '(' → logprob: -4.31969690322876
    6. '(L' → logprob: -5.69469690322876
    7. 'L' → logprob: -6.56969690322876
    8. '(M' → logprob: -6.56969690322876
    9. ' N' → logprob: -6.69469690322876
    10. '   ' → logprob: -8.444696426391602

Token 134: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.00010318557906430215
    2. ' //' → logprob: -9.250102996826172
    3. '#' → logprob: -12.250102996826172
    4. 'G' → logprob: -14.250102996826172
    5. '//=' → logprob: -14.750102996826172
    6. '/G' → logprob: -15.375102996826172
    7. '/' → logprob: -15.500102996826172
    8. '
' → logprob: -15.750102996826172
    9. '```' → logprob: -16.125102996826172
    10. '\/\/' → logprob: -16.250102996826172

Token 135: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0010338802821934223
    2. ' G' → logprob: -6.876033782958984
    3. '	G' → logprob: -15.251033782958984
    4. '<|end|>' → logprob: -15.251033782958984
    5. 'GC' → logprob: -15.376033782958984
    6. '   ' → logprob: -15.751033782958984
    7. ' ' → logprob: -15.751033782958984
    8. 'LC' → logprob: -15.876033782958984
    9. '  ' → logprob: -17.251033782958984
    10. 'GS' → logprob: -18.501033782958984

Token 136: 'CD' (ID: 8257)
  Prédit: 'CD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CD' → logprob: -0.0052354102954268456
    2. 'C' → logprob: -5.255235195159912
    3. 'D' → logprob: -14.00523567199707
    4. 'CDF' → logprob: -15.50523567199707
    5. 'Cd' → logprob: -15.75523567199707
    6. 'CF' → logprob: -16.25523567199707
    7. ' CD' → logprob: -16.50523567199707
    8. 'cd' → logprob: -17.13023567199707
    9. 'CDD' → logprob: -17.25523567199707
    10. 'CL' → logprob: -18.00523567199707

Token 137: '
' (ID: 198)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.7947297692298889
    2. '   ' → logprob: -1.1697297096252441
    3. ' idx' → logprob: -2.169729709625244
    4. '
' → logprob: -2.419729709625244
    5. '    
' → logprob: -4.669729709625244
    6. '	idx' → logprob: -5.169729709625244
    7. '[idx' → logprob: -5.669729709625244
    8. '  ' → logprob: -5.919729709625244
    9. '<|end|>' → logprob: -5.919729709625244
    10. '   
' → logprob: -6.419729709625244

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005986657342873514
    2. '    
' → logprob: -7.750598430633545
    3. '  ' → logprob: -9.875598907470703
    4. ' ' → logprob: -10.375598907470703
    5. '
' → logprob: -10.500598907470703
    6. '   
' → logprob: -11.000598907470703
    7. '    ' → logprob: -11.875598907470703
    8. ' 
' → logprob: -11.875598907470703
    9. '  
' → logprob: -11.875598907470703
    10. '<|end|>' → logprob: -12.250598907470703

Token 139: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.05043548718094826
    2. 'i' → logprob: -3.3004355430603027
    3. '   ' → logprob: -5.050435543060303
    4. ' idx' → logprob: -5.300435543060303
    5. '    
' → logprob: -8.175435066223145
    6. '	idx' → logprob: -8.550435066223145
    7. '
' → logprob: -9.175435066223145
    8. ' i' → logprob: -9.175435066223145
    9. '  ' → logprob: -9.675435066223145
    10. ' 
' → logprob: -9.800435066223145

Token 140: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00551370345056057
    2. '=' → logprob: -5.255513668060303
    3. ' =' → logprob: -8.255514144897461
    4. ' ' → logprob: -11.130514144897461
    5. '   ' → logprob: -12.880514144897461
    6. '1' → logprob: -13.255514144897461
    7. '*' → logprob: -14.755514144897461
    8. '  ' → logprob: -16.00551414489746
    9. '```' → logprob: -16.00551414489746
    10. '0' → logprob: -16.38051414489746

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975141443312168
    2. '=' → logprob: -3.5297513008117676
    3. ' ' → logprob: -14.654751777648926
    4. '=i' → logprob: -15.029751777648926
    5. ' i' → logprob: -15.904751777648926
    6. '   ' → logprob: -18.40475082397461
    7. '＝' → logprob: -18.65475082397461
    8. 'i' → logprob: -18.77975082397461
    9. ' =
' → logprob: -19.77975082397461
    10. ' =)' → logprob: -19.90475082397461

Token 142: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02982386015355587
    2. ' i' → logprob: -3.5298237800598145
    3. '   ' → logprob: -9.529824256896973
    4. ' ' → logprob: -14.904824256896973
    5. '  ' → logprob: -15.529824256896973
    6. '	i' → logprob: -15.779824256896973
    7. '    ' → logprob: -17.529823303222656
    8. '(i' → logprob: -17.654823303222656
    9. '{i' → logprob: -17.904823303222656
    10. '
' → logprob: -18.154823303222656

Token 143: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.011048762127757072
    2. '*' → logprob: -4.511048793792725
    3. ' ' → logprob: -14.136048316955566
    4. ' ' → logprob: -16.136049270629883
    5. '*M' → logprob: -16.136049270629883
    6. '   ' → logprob: -17.011049270629883
    7. '`' → logprob: -17.886049270629883
    8. '**' → logprob: -18.011049270629883
    9. '<|end|>' → logprob: -18.136049270629883
    10. '  ' → logprob: -18.136049270629883

Token 144: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0008052219054661691
    2. ' M' → logprob: -7.125805377960205
    3. '   ' → logprob: -14.500804901123047
    4. ' ' → logprob: -15.750804901123047
    5. '  ' → logprob: -17.250804901123047
    6. '(M' → logprob: -17.500804901123047
    7. '    ' → logprob: -18.125804901123047
    8. '<|end|>' → logprob: -18.125804901123047
    9. '	M' → logprob: -18.250804901123047
    10. '
' → logprob: -18.750804901123047

Token 145: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.03366044908761978
    2. ' //' → logprob: -3.408660411834717
    3. '```' → logprob: -11.783660888671875
    4. '//=' → logprob: -12.158660888671875
    5. '<|end|>' → logprob: -13.783660888671875
    6. ' ' → logprob: -14.908660888671875
    7. '#' → logprob: -15.783660888671875
    8. '<|end|>' → logprob: -16.283660888671875
    9. ' ' → logprob: -16.783660888671875
    10. '...' → logprob: -17.033660888671875

Token 146: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0011718906462192535
    2. ' G' → logprob: -6.751172065734863
    3. '<|end|>' → logprob: -13.626172065734863
    4. 'GC' → logprob: -15.001172065734863
    5. ' ' → logprob: -15.876172065734863
    6. '	G' → logprob: -18.001171112060547
    7. '   ' → logprob: -18.626171112060547
    8. '  ' → logprob: -19.251171112060547
    9. ' gcd' → logprob: -19.251171112060547
    10. '<G' → logprob: -19.251171112060547

Token 147: 'CD' (ID: 8257)
  Prédit: 'CD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CD' → logprob: -0.002195218112319708
    2. 'C' → logprob: -6.127195358276367
    3. 'CM' → logprob: -12.502195358276367
    4. 'CF' → logprob: -12.502195358276367
    5. 'D' → logprob: -13.877195358276367
    6. '<|end|>' → logprob: -15.002195358276367
    7. 'SD' → logprob: -15.252195358276367
    8. 'cd' → logprob: -15.627195358276367
    9. 'CDF' → logprob: -16.127195358276367
    10. 'Ｃ' → logprob: -16.127195358276367

Token 148: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003433296224102378
    2. 'if' → logprob: -8.375343322753906
    3. ' if' → logprob: -9.500343322753906
    4. ' ' → logprob: -11.000343322753906
    5. '    
' → logprob: -11.375343322753906
    6. '
' → logprob: -12.625343322753906
    7. '  
' → logprob: -13.250343322753906
    8. '  ' → logprob: -13.625343322753906
    9. '	if' → logprob: -13.750343322753906
    10. '<|end|>' → logprob: -14.000343322753906

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020389800192788243
    2. '
' → logprob: -9.125204086303711
    3. '    
' → logprob: -10.125204086303711
    4. '  
' → logprob: -11.250204086303711
    5. 'if' → logprob: -11.250204086303711
    6. ' if' → logprob: -11.500204086303711
    7. ' ' → logprob: -12.000204086303711
    8. '<|end|>' → logprob: -12.125204086303711
    9. '   
' → logprob: -13.125204086303711
    10. '  ' → logprob: -13.375204086303711

Token 150: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.31356310844421387
    2. '   ' → logprob: -1.3135631084442139
    3. ' if' → logprob: -8.188563346862793
    4. ' ' → logprob: -11.813563346862793
    5. '	if' → logprob: -11.813563346862793
    6. '    
' → logprob: -12.438563346862793
    7. '
' → logprob: -12.688563346862793
    8. '  ' → logprob: -14.688563346862793
    9. '```' → logprob: -14.688563346862793
    10. 'If' → logprob: -14.938563346862793

Token 151: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.4740809500217438
    2. 'S' → logprob: -0.9740809202194214
    3. ' ' → logprob: -12.849081039428711
    4. '   ' → logprob: -14.224081039428711
    5. '	S' → logprob: -15.349081039428711
    6. '>S' → logprob: -15.974081039428711
    7. '(S' → logprob: -16.22408103942871
    8. '  ' → logprob: -16.97408103942871
    9. 's' → logprob: -17.09908103942871
    10. ' ' → logprob: -17.34908103942871

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -19.25
    3. '2' → logprob: -19.375
    4. ' ' → logprob: -20.0
    5. '１' → logprob: -20.25
    6. '   ' → logprob: -20.5
    7. '१' → logprob: -20.8125
    8. '[' → logprob: -20.8125
    9. '' → logprob: -20.9375
    10. '১' → logprob: -21.25

Token 153: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.2113979209971149e-05
    2. '[' → logprob: -11.375012397766113
    3. '[i' → logprob: -14.750012397766113
    4. '```' → logprob: -16.625011444091797
    5. '[
' → logprob: -17.375011444091797
    6. 'idx' → logprob: -17.375011444091797
    7. '[int' → logprob: -17.500011444091797
    8. ' [' → logprob: -17.750011444091797
    9. '[id' → logprob: -17.875011444091797
    10. '(idx' → logprob: -18.625011444091797

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01133074052631855
    2. '2' → logprob: -4.511330604553223
    3. ']' → logprob: -8.511330604553223
    4. '```' → logprob: -10.386330604553223
    5. '[idx' → logprob: -10.886330604553223
    6. 'idx' → logprob: -11.636330604553223
    7. '][' → logprob: -12.386330604553223
    8. ']==' → logprob: -12.511330604553223
    9. '(idx' → logprob: -12.948830604553223
    10. '   ' → logprob: -13.448830604553223

Token 155: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.27010777592658997
    2. ' !=' → logprob: -1.6451077461242676
    3. ']!=' → logprob: -3.5201077461242676
    4. ']' → logprob: -4.270107746124268
    5. ')!=' → logprob: -10.020108222961426
    6. ' ]' → logprob: -10.270108222961426
    7. '()!=' → logprob: -10.895108222961426
    8. '   ' → logprob: -11.520108222961426
    9. ' ' → logprob: -12.020108222961426
    10. '!==' → logprob: -12.270108222961426

Token 156: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.00219557574018836
    2. ' !=' → logprob: -6.127195358276367
    3. ']!=' → logprob: -12.502195358276367
    4. '!==' → logprob: -12.752195358276367
    5. ')!=' → logprob: -13.127195358276367
    6. '()!=' → logprob: -13.627195358276367
    7. '!=(' → logprob: -14.877195358276367
    8. '==' → logprob: -16.877195358276367
    9. '=' → logprob: -16.877195358276367
    10. '```' → logprob: -17.002195358276367

Token 157: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.20163249969482422
    2. 'S' → logprob: -1.7016324996948242
    3. ' ' → logprob: -8.451632499694824
    4. '  ' → logprob: -13.451632499694824
    5. ' ' → logprob: -13.576632499694824
    6. ''' → logprob: -13.951632499694824
    7. '<|end|>' → logprob: -14.701632499694824
    8. ''S' → logprob: -15.201632499694824
    9. '_S' → logprob: -15.326632499694824
    10. 's' → logprob: -15.326632499694824

Token 158: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7432603272027336e-06
    2. 'S' → logprob: -14.875001907348633
    3. '[idx' → logprob: -15.187501907348633
    4. '[' → logprob: -15.250001907348633
    5. ' ' → logprob: -15.937501907348633
    6. '```' → logprob: -16.187501907348633
    7. '1' → logprob: -16.375001907348633
    8. '۲' → logprob: -16.625001907348633
    9. 'x' → logprob: -16.750001907348633
    10. '₂' → logprob: -17.187501907348633

Token 159: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.000001907348633
    3. 'idx' → logprob: -17.500001907348633
    4. '[index' → logprob: -17.750001907348633
    5. '[
' → logprob: -18.250001907348633
    6. '(idx' → logprob: -18.500001907348633
    7. '[i' → logprob: -18.625001907348633
    8. '[id' → logprob: -18.750001907348633
    9. ' idx' → logprob: -18.875001907348633
    10. '[ind' → logprob: -19.375001907348633

Token 160: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. 'idx' → logprob: -14.000000953674316
    3. '[idx' → logprob: -16.750001907348633
    4. ']' → logprob: -18.000001907348633
    5. ' ' → logprob: -18.125001907348633
    6. '۲' → logprob: -18.125001907348633
    7. '```' → logprob: -18.125001907348633
    8. '_idx' → logprob: -18.750001907348633
    9. 'index' → logprob: -18.875001907348633
    10. ' idx' → logprob: -19.625001907348633

Token 161: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9995717406272888
    2. '):
' → logprob: -1.1245718002319336
    3. ':' → logprob: -1.3745718002319336
    4. ':
' → logprob: -3.2495718002319336
    5. ')' → logprob: -4.749571800231934
    6. ']:' → logprob: -5.374571800231934
    7. ']:
' → logprob: -6.749571800231934
    8. '   ' → logprob: -7.749571800231934
    9. ']' → logprob: -8.374571800231934
    10. ' ):
' → logprob: -9.374571800231934

Token 162: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7222561836242676
    2. '       ' → logprob: -0.7222561836242676
    3. 'print' → logprob: -3.5972561836242676
    4. ' print' → logprob: -7.222256183624268
    5. '```' → logprob: -8.97225570678711
    6. '
' → logprob: -9.09725570678711
    7. '	print' → logprob: -9.34725570678711
    8. '    
' → logprob: -9.72225570678711
    9. '     ' → logprob: -10.22225570678711
    10. '0' → logprob: -10.59725570678711

Token 163: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00016241880075540394
    2. ' print' → logprob: -8.750162124633789
    3. '```' → logprob: -13.125162124633789
    4. '   ' → logprob: -13.750162124633789
    5. '
' → logprob: -14.750162124633789
    6. '       ' → logprob: -14.875162124633789
    7. '	print' → logprob: -17.00016212463379
    8. '``' → logprob: -17.25016212463379
    9. 'pr' → logprob: -17.87516212463379
    10. '           ' → logprob: -18.12516212463379

Token 164: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02066357247531414
    2. '(-' → logprob: -3.8956634998321533
    3. '("-' → logprob: -9.770663261413574
    4. '(' → logprob: -10.770663261413574
    5. ' -' → logprob: -11.145663261413574
    6. '"-' → logprob: -11.145663261413574
    7. '```' → logprob: -12.770663261413574
    8. '()-' → logprob: -13.020663261413574
    9. '0' → logprob: -13.145663261413574
    10. '``' → logprob: -13.520663261413574

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '18' → logprob: -16.25
    3. '11' → logprob: -16.75
    4. '１' → logprob: -17.5
    5. '```' → logprob: -17.75
    6. '19' → logprob: -18.25
    7. '13' → logprob: -18.625
    8. '17' → logprob: -18.75
    9. '12' → logprob: -19.0
    10. '10' → logprob: -19.125

Token 166: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0492669939994812
    2. ')' → logprob: -3.049267053604126
    3. '       ' → logprob: -7.549266815185547
    4. ')
' → logprob: -9.049266815185547
    5. ')return' → logprob: -11.299266815185547
    6. '   ' → logprob: -12.049266815185547
    7. ')`
' → logprob: -12.299266815185547
    8. ' )
' → logprob: -13.174266815185547
    9. '```' → logprob: -13.299266815185547
    10. '
' → logprob: -13.299266815185547

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017086135921999812
    2. '
' → logprob: -6.501708507537842
    3. '        
' → logprob: -8.876708984375
    4. '    
' → logprob: -10.751708984375
    5. '<|end|>' → logprob: -11.001708984375
    6. '  
' → logprob: -12.126708984375
    7. '```' → logprob: -12.626708984375
    8. 'exit' → logprob: -12.876708984375
    9. ')' → logprob: -13.001708984375
    10. '
' → logprob: -13.001708984375

Token 168: ' sys' (ID: 12228)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.5522580146789551
    2. '
' → logprob: -1.552258014678955
    3. '       ' → logprob: -1.677258014678955
    4. ' exit' → logprob: -4.552258014678955
    5. '        
' → logprob: -5.302258014678955
    6. '	exit' → logprob: -5.552258014678955
    7. 'break' → logprob: -6.802258014678955
    8. ' 
' → logprob: -7.427258014678955
    9. '```' → logprob: -7.427258014678955
    10. '    
' → logprob: -7.427258014678955

Token 169: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -8.506661833962426e-05
    2. '.' → logprob: -10.00008487701416
    3. '.stdout' → logprob: -10.50008487701416
    4. 'exit' → logprob: -11.75008487701416
    5. '	exit' → logprob: -13.37508487701416
    6. '_exit' → logprob: -13.87508487701416
    7. '.ex' → logprob: -14.75008487701416
    8. '.Exit' → logprob: -15.37508487701416
    9. ' exit' → logprob: -15.50008487701416
    10. '.EXIT' → logprob: -15.62508487701416

Token 170: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2519841194152832
    2. '(' → logprob: -1.5019841194152832
    3. '()
' → logprob: -10.501983642578125
    4. '()(' → logprob: -11.001983642578125
    5. '0' → logprob: -12.251983642578125
    6. ' ()' → logprob: -13.126983642578125
    7. '()`' → logprob: -13.376983642578125
    8. '()]' → logprob: -14.376983642578125
    9. '()"' → logprob: -15.126983642578125
    10. '())' → logprob: -15.126983642578125

Token 171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3681827187538147
    2. 'i' → logprob: -1.36818265914917
    3. ' i' → logprob: -3.11818265914917
    4. '
' → logprob: -4.86818265914917
    5. '    
' → logprob: -7.61818265914917
    6. ' ' → logprob: -8.368183135986328
    7. '  
' → logprob: -8.493183135986328
    8. '	i' → logprob: -8.743183135986328
    9. ' 
' → logprob: -8.868183135986328
    10. '  ' → logprob: -9.118183135986328

Token 172: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.041243452578783035
    2. '   ' → logprob: -3.291243553161621
    3. ' i' → logprob: -5.791243553161621
    4. '
' → logprob: -9.166243553161621
    5. '	i' → logprob: -10.791243553161621
    6. ' ' → logprob: -11.791243553161621
    7. '  ' → logprob: -12.166243553161621
    8. '    
' → logprob: -12.666243553161621
    9. '  
' → logprob: -14.166243553161621
    10. ' 
' → logprob: -15.416243553161621

Token 173: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0789036676287651
    2. '+=' → logprob: -2.5789036750793457
    3. ' +=' → logprob: -11.578903198242188
    4. '+
' → logprob: -12.828903198242188
    5. '+="' → logprob: -14.453903198242188
    6. '++' → logprob: -14.453903198242188
    7. '=' → logprob: -15.078903198242188
    8. '+)' → logprob: -15.578903198242188
    9. '+='' → logprob: -15.703903198242188
    10. '+++' → logprob: -16.078903198242188

Token 174: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '```' → logprob: -21.5
    4. '１' → logprob: -22.0
    5. '۱' → logprob: -22.0
    6. '<|end|>' → logprob: -22.25
    7. '   ' → logprob: -22.5
    8. '১' → logprob: -23.375
    9. '१' → logprob: -23.375
    10. '
' → logprob: -23.4375

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.375
    3. '```' → logprob: -20.75
    4. '１' → logprob: -22.75
    5. '۱' → logprob: -23.0
    6. '<|end|>' → logprob: -23.5
    7. '१' → logprob: -23.875
    8. '১' → logprob: -23.875
    9. '   ' → logprob: -24.25
    10. '  ' → logprob: -25.5625

Token 176: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004136460833251476
    2. '
' → logprob: -5.504136562347412
    3. '```' → logprob: -10.379136085510254
    4. '  
' → logprob: -11.129136085510254
    5. '

' → logprob: -12.004136085510254
    6. ' print' → logprob: -13.379136085510254
    7. '    
' → logprob: -13.879136085510254
    8. '``' → logprob: -14.504136085510254
    9. 's' → logprob: -14.754136085510254
    10. '
' → logprob: -14.754136085510254

Token 177: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00011105302110081539
    2. '
' → logprob: -9.625110626220703
    3. '```' → logprob: -10.125110626220703
    4. '  
' → logprob: -13.750110626220703
    5. '``' → logprob: -13.875110626220703
    6. '    
' → logprob: -14.625110626220703
    7. ' print' → logprob: -14.750110626220703
    8. 'pr' → logprob: -14.750110626220703
    9. '#' → logprob: -15.625110626220703
    10. '#print' → logprob: -15.750110626220703

Token 178: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '(L' → logprob: -17.625
    3. ' (' → logprob: -17.875
    4. '((' → logprob: -18.0
    5. '()' → logprob: -18.375
    6. '(int' → logprob: -18.75
    7. '(
' → logprob: -19.25
    8. '(M' → logprob: -19.625
    9. '\(' → logprob: -19.75
    10. '('' → logprob: -20.125

Token 179: 'LC' (ID: 10566)
  Prédit: 'LC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LC' → logprob: -1.3663626305060461e-05
    2. 'LS' → logprob: -12.12501335144043
    3. '(' → logprob: -12.25001335144043
    4. 'LM' → logprob: -13.75001335144043
    5. '{' → logprob: -14.12501335144043
    6. 'L' → logprob: -14.62501335144043
    7. ' ' → logprob: -14.75001335144043
    8. ')' → logprob: -15.25001335144043
    9. 'LL' → logprob: -15.87501335144043
    10. 'LCD' → logprob: -16.00001335144043

Token 180: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -3.128163257315464e-07
    2. ' M' → logprob: -15.5
    3. 'М' → logprob: -19.5
    4. '(M' → logprob: -19.75
    5. '[M' → logprob: -20.25
    6. '<M' → logprob: -20.375
    7. '	M' → logprob: -20.5
    8. ')' → logprob: -20.875
    9. 'Ｍ' → logprob: -21.0
    10. 'm' → logprob: -21.125

Token 181: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ' )' → logprob: -12.750003814697266
    3. ')
' → logprob: -14.000003814697266
    4. '))' → logprob: -17.000003814697266
    5. '`)' → logprob: -18.000003814697266
    6. ')`' → logprob: -18.750003814697266
    7. '）' → logprob: -19.500003814697266
    8. '),' → logprob: -19.500003814697266
    9. '*)' → logprob: -19.750003814697266
    10. ')**' → logprob: -19.875003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 179
Tokens correctement prédits (1ère position, stricte): 79
Tokens correctement prédits (1ère position, avec adaptation): 84
Tokens correctement prédits (top 10): 154
Précision stricte (1ère position): 44.13%
Précision adaptée (1ère position): 46.93%
Précision (top 10): 86.03%
================================================================================
