================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import collections

def solve(n, m, sx, px):
    res = 0
    temp_lst = []
    for i in range(2**n):
        for idx, s in enumerate(sx):
            ssum = sum(s)
            # Je compte un peu à la main ici. Peut-être pas optimal ?
            bits = bin(i & ssum)[2:]
            c = collections.Counter(bits).get('1', 0)
            temp_lst.append(c % 2)
        # pas sûr si c'est la meilleure manière, mais bon
        if temp_lst == px:
            res += 1
        temp_lst = []

    return res

if __name__ == "__main__":
    n, m = map(int, input().split())
    sx = []
    for i in range(m):
        arr = list(map(int, input().split()))
        ls = [0]*n
        # on ignore arr[0] (la taille) ici
        for ti in arr[1:]:
            # on va essayer ça, je crois que c'est bon
            ls[n-ti] = 1 << (ti-1)
        sx.append(ls)
    px = [int(x) for x in input().split()]
    print(solve(n, m, sx, px))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0024107310455292463
    2. '.Counter' → logprob: -6.127410888671875
    3. '```' → logprob: -10.127410888671875
    4. '\' → logprob: -10.377410888671875
    5. '.default' → logprob: -10.377410888671875
    6. ',' → logprob: -11.002410888671875
    7. '\.' → logprob: -11.127410888671875
    8. 'import' → logprob: -11.127410888671875
    9. '.C' → logprob: -12.002410888671875
    10. '_' → logprob: -12.252410888671875

Token 4: ' solve' (ID: 17722)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.5745943188667297
    2. ' ' → logprob: -0.9495943188667297
    3. ' defaultdict' → logprob: -3.324594259262085
    4. 'collections' → logprob: -5.324594497680664
    5. ' counter' → logprob: -6.324594497680664
    6. ' Counter' → logprob: -6.824594497680664
    7. ' space' → logprob: -7.324594497680664
    8. ' itertools' → logprob: -7.449594497680664
    9. ' ' → logprob: -7.824594497680664
    10. '_counter' → logprob: -7.824594497680664

Token 5: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0044907694682478905
    2. '_' → logprob: -5.629490852355957
    3. ':' → logprob: -8.254490852355957
    4. ' (' → logprob: -9.129490852355957
    5. '(:' → logprob: -9.129490852355957
    6. '```' → logprob: -9.129490852355957
    7. '():' → logprob: -9.254490852355957
    8. '(
' → logprob: -10.379490852355957
    9. '(`' → logprob: -10.754490852355957
    10. '_:' → logprob: -11.004490852355957

Token 6: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36737531423568726
    2. '):' → logprob: -1.367375373840332
    3. ')' → logprob: -2.992375373840332
    4. ':' → logprob: -6.117375373840332
    5. ' ,' → logprob: -8.992375373840332
    6. ' ):' → logprob: -9.867375373840332
    7. '=' → logprob: -10.742375373840332
    8. ',n' → logprob: -10.867375373840332
    9. ' )' → logprob: -11.492375373840332
    10. ',)' → logprob: -11.867375373840332

Token 7: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -1.0813533067703247
    2. ' k' → logprob: -1.0813533067703247
    3. ' arr' → logprob: -2.456353187561035
    4. 'k' → logprob: -2.706353187561035
    5. 'm' → logprob: -3.081353187561035
    6. ' a' → logprob: -3.706353187561035
    7. ' s' → logprob: -4.081353187561035
    8. 'arr' → logprob: -4.331353187561035
    9. 'a' → logprob: -5.081353187561035
    10. ' x' → logprob: -5.081353187561035

Token 8: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01012199092656374
    2. ',' → logprob: -5.135121822357178
    3. ')' → logprob: -5.510121822357178
    4. ':' → logprob: -9.010122299194336
    5. ' ):' → logprob: -12.385122299194336
    6. '):
' → logprob: -12.385122299194336
    7. '=' → logprob: -13.510122299194336
    8. ''):' → logprob: -13.510122299194336
    9. '),' → logprob: -14.135122299194336
    10. '*' → logprob: -14.385122299194336

Token 9: ' sx' (ID: 39428)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.6298465132713318
    2. ' graph' → logprob: -2.5048465728759766
    3. ' k' → logprob: -2.6298465728759766
    4. 'edges' → logprob: -2.6298465728759766
    5. 'k' → logprob: -2.8798465728759766
    6. ' grid' → logprob: -3.3798465728759766
    7. ' arr' → logprob: -3.8798465728759766
    8. 'graph' → logprob: -4.004846572875977
    9. 'arr' → logprob: -4.254846572875977
    10. ' a' → logprob: -5.004846572875977

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.575563020305708e-05
    2. '):' → logprob: -10.750065803527832
    3. ',y' → logprob: -11.250065803527832
    4. ',s' → logprob: -11.500065803527832
    5. ' ,' → logprob: -11.750065803527832
    6. 's' → logprob: -12.625065803527832
    7. '_,' → logprob: -12.625065803527832
    8. '=' → logprob: -13.000065803527832
    9. ')' → logprob: -14.500065803527832
    10. 'r' → logprob: -14.750065803527832

Token 11: ' px' (ID: 27003)
  Prédit: 'sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sy' → logprob: -0.03383495286107063
    2. ' sy' → logprob: -3.408834934234619
    3. 's' → logprob: -8.783835411071777
    4. '_sy' → logprob: -11.033835411071777
    5. 'dy' → logprob: -11.658835411071777
    6. 'sx' → logprob: -12.908835411071777
    7. 'sys' → logprob: -13.408835411071777
    8. 'sz' → logprob: -13.783835411071777
    9. 'syz' → logprob: -14.033835411071777
    10. ' ' → logprob: -14.283835411071777

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1656065583229065
    2. ',' → logprob: -1.9156064987182617
    3. ')' → logprob: -5.290606498718262
    4. 's' → logprob: -8.790606498718262
    5. '=' → logprob: -9.790606498718262
    6. ' ):' → logprob: -10.665606498718262
    7. '):
' → logprob: -10.915606498718262
    8. ')):' → logprob: -11.540606498718262
    9. ' ,' → logprob: -11.665606498718262
    10. '_' → logprob: -11.915606498718262

Token 13: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23867984116077423
    2. '   ' → logprob: -1.7386798858642578
    3. ':
' → logprob: -3.488679885864258
    4. '```' → logprob: -5.988679885864258
    5. ' :' → logprob: -6.863679885864258
    6. '    
' → logprob: -8.238679885864258
    7. '    ' → logprob: -8.238679885864258
    8. '\n' → logprob: -8.238679885864258
    9. '``' → logprob: -8.363679885864258
    10. ' ' → logprob: -8.363679885864258

Token 14: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45235756039619446
    2. ' dp' → logprob: -1.577357530593872
    3. 'dp' → logprob: -3.202357530593872
    4. ' counter' → logprob: -4.452357769012451
    5. ' 
' → logprob: -4.577357769012451
    6. ' result' → logprob: -4.827357769012451
    7. 'd' → logprob: -4.827357769012451
    8. '    ' → logprob: -4.952357769012451
    9. '`' → logprob: -4.952357769012451
    10. 'result' → logprob: -5.202357769012451

Token 15: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5893247127532959
    2. ' =' → logprob: -0.8393247127532959
    3. '[' → logprob: -4.839324951171875
    4. '.' → logprob: -5.714324951171875
    5. ' ' → logprob: -7.714324951171875
    6. '_' → logprob: -7.839324951171875
    7. '[:]' → logprob: -7.839324951171875
    8. 'ult' → logprob: -8.089324951171875
    9. 'u' → logprob: -8.714324951171875
    10. ',' → logprob: -9.339324951171875

Token 16: ' ' (ID: 220)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.7102029323577881
    2. 'collections' → logprob: -1.210202932357788
    3. ' []' → logprob: -1.960202932357788
    4. '[]' → logprob: -2.835202932357788
    5. ' [' → logprob: -4.835203170776367
    6. '[' → logprob: -6.960203170776367
    7. '0' → logprob: -7.585203170776367
    8. ' ' → logprob: -8.085203170776367
    9. ' {}' → logprob: -8.335203170776367
    10. ' set' → logprob: -8.585203170776367

Token 17: '0' (ID: 15)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.07494096457958221
    2. '[]' → logprob: -2.6999409198760986
    3. '[' → logprob: -5.949941158294678
    4. '0' → logprob: -6.324941158294678
    5. '{}' → logprob: -8.69994068145752
    6. 'set' → logprob: -9.32494068145752
    7. '[m' → logprob: -9.82494068145752
    8. '{' → logprob: -10.07494068145752
    9. '[n' → logprob: -10.07494068145752
    10. '[s' → logprob: -10.32494068145752

Token 18: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 19: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.2519301176071167
    2. ' ' → logprob: -1.8769301176071167
    3. '   ' → logprob: -1.8769301176071167
    4. '
' → logprob: -2.5019302368164062
    5. ',' → logprob: -2.5019302368164062
    6. '\n' → logprob: -3.1269302368164062
    7. ' for' → logprob: -3.2519302368164062
    8. '' → logprob: -3.3769302368164062
    9. 'for' → logprob: -3.3769302368164062
    10. '  ' → logprob: -4.751930236816406

Token 20: ' temp' (ID: 5484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9595421552658081
    2. ' for' → logprob: -1.084542155265808
    3. 'for' → logprob: -1.334542155265808
    4. ' ' → logprob: -5.959542274475098
    5. ' dp' → logprob: -6.334542274475098
    6. ' queue' → logprob: -6.709542274475098
    7. 'dp' → logprob: -6.709542274475098
    8. 'd' → logprob: -7.209542274475098
    9. ' stack' → logprob: -7.334542274475098
    10. ' p' → logprob: -7.459542274475098

Token 21: '_lst' (ID: 72474)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.30542218685150146
    2. ' =' → logprob: -1.4304221868515015
    3. '=' → logprob: -4.180422306060791
    4. '_count' → logprob: -6.680422306060791
    5. ' ' → logprob: -6.930422306060791
    6. '_val' → logprob: -6.930422306060791
    7. '[' → logprob: -6.930422306060791
    8. '_counter' → logprob: -7.305422306060791
    9. ' _' → logprob: -7.555422306060791
    10. '_counts' → logprob: -7.555422306060791

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011608755216002464
    2. '=' → logprob: -4.511608600616455
    3. '[' → logprob: -7.761608600616455
    4. '[:]' → logprob: -10.386609077453613
    5. '.' → logprob: -10.761609077453613
    6. ' ' → logprob: -10.886609077453613
    7. '[]' → logprob: -11.136609077453613
    8. '  ' → logprob: -11.261609077453613
    9. ')' → logprob: -11.511609077453613
    10. '.append' → logprob: -12.136609077453613

Token 23: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4021601378917694
    2. 'collections' → logprob: -1.2771601676940918
    3. ' []' → logprob: -3.902160167694092
    4. ' collections' → logprob: -4.277160167694092
    5. '[' → logprob: -4.777160167694092
    6. ' [' → logprob: -5.777160167694092
    7. 'list' → logprob: -6.277160167694092
    8. 'px' → logprob: -6.902160167694092
    9. 'deque' → logprob: -6.902160167694092
    10. '[s' → logprob: -7.152160167694092

Token 24: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5712836980819702
    2. 'for' → logprob: -0.9462836980819702
    3. '   ' → logprob: -3.5712838172912598
    4. ' ' → logprob: -5.19628381729126
    5. '<|end|>' → logprob: -5.32128381729126
    6. '
' → logprob: -6.07128381729126
    7. ' 
' → logprob: -6.57128381729126
    8. '	for' → logprob: -6.94628381729126
    9. '\n' → logprob: -6.94628381729126
    10. '    
' → logprob: -7.69628381729126

Token 25: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1832495480775833
    2. ' for' → logprob: -1.808249592781067
    3. '   ' → logprob: -6.308249473571777
    4. ' ' → logprob: -7.183249473571777
    5. 'f' → logprob: -7.558249473571777
    6. '\n' → logprob: -9.433249473571777
    7. '
' → logprob: -9.683249473571777
    8. ' 
' → logprob: -10.058249473571777
    9. '\' → logprob: -10.683249473571777
    10. 'd' → logprob: -10.933249473571777

Token 26: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.060165755450725555
    2. ' _' → logprob: -3.3101656436920166
    3. ' ' → logprob: -4.435165882110596
    4. '_' → logprob: -5.435165882110596
    5. 'i' → logprob: -5.435165882110596
    6. ' x' → logprob: -7.685165882110596
    7. ' range' → logprob: -7.810165882110596
    8. ' in' → logprob: -9.310165405273438
    9. ' p' → logprob: -9.560165405273438
    10. ' px' → logprob: -10.185165405273438

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02337743528187275
    2. 'in' → logprob: -3.7733774185180664
    3. ' ' → logprob: -9.648377418518066
    4. 'n' → logprob: -10.023377418518066
    5. ',' → logprob: -11.773377418518066
    6. '  ' → logprob: -12.398377418518066
    7. '	in' → logprob: -13.148377418518066
    8. 'range' → logprob: -13.648377418518066
    9. '   ' → logprob: -14.148377418518066
    10. ' n' → logprob: -14.210877418518066

Token 28: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.11292335391044617
    2. 'range' → logprob: -2.2379233837127686
    3. ' ' → logprob: -9.487923622131348
    4. ' xrange' → logprob: -11.237923622131348
    5. '	range' → logprob: -12.987923622131348
    6. '   ' → logprob: -12.987923622131348
    7. '  ' → logprob: -13.237923622131348
    8. ' ran' → logprob: -14.112923622131348
    9. '(range' → logprob: -14.362923622131348
    10. ' px' → logprob: -14.612923622131348

Token 29: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3140579164028168
    2. '(' → logprob: -1.3140579462051392
    3. '(m' → logprob: -7.81405782699585
    4. ' (' → logprob: -8.314058303833008
    5. '(s' → logprob: -8.939058303833008
    6. ')' → logprob: -12.564058303833008
    7. '(len' → logprob: -12.939058303833008
    8. '(
' → logprob: -12.939058303833008
    9. ' n' → logprob: -13.939058303833008
    10. '(nx' → logprob: -13.939058303833008

Token 30: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15005898475646973
    2. ' n' → logprob: -2.2750589847564697
    3. 'm' → logprob: -3.4000589847564697
    4. ' m' → logprob: -5.900058746337891
    5. '1' → logprob: -8.40005874633789
    6. '   ' → logprob: -9.77505874633789
    7. '	n' → logprob: -10.15005874633789
    8. '0' → logprob: -10.15005874633789
    9. ')n' → logprob: -10.77505874633789
    10. ' ' → logprob: -11.15005874633789

Token 31: '**' (ID: 410)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02729526348412037
    2. ' ,' → logprob: -3.6522953510284424
    3. ',n' → logprob: -7.652295112609863
    4. ' ' → logprob: -7.902295112609863
    5. 'n' → logprob: -10.027295112609863
    6. ')' → logprob: -10.027295112609863
    7. ' )' → logprob: -11.402295112609863
    8. '   ' → logprob: -11.402295112609863
    9. '*' → logprob: -12.277295112609863
    10. 'm' → logprob: -12.527295112609863

Token 32: 'n' (ID: 77)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2823740243911743
    2. 'n' → logprob: -1.4073740243911743
    3. ' m' → logprob: -7.532373905181885
    4. ' n' → logprob: -7.532373905181885
    5. 'i' → logprob: -10.532374382019043
    6. '16' → logprob: -10.532374382019043
    7. '20' → logprob: -10.657374382019043
    8. '(' → logprob: -11.282374382019043
    9. '(n' → logprob: -11.407374382019043
    10. '31' → logprob: -11.407374382019043

Token 33: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013979760697111487
    2. ' ):' → logprob: -7.251398086547852
    3. ')' → logprob: -7.376398086547852
    4. ':' → logprob: -9.876398086547852
    5. '):
' → logprob: -12.126398086547852
    6. ' )' → logprob: -13.751398086547852
    7. '():' → logprob: -13.876398086547852
    8. ',' → logprob: -14.501398086547852
    9. ' :' → logprob: -15.001398086547852
    10. ']:' → logprob: -15.251398086547852

Token 34: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31095820665359497
    2. ' :' → logprob: -2.18595814704895
    3. ' ' → logprob: -2.31095814704895
    4. '    ' → logprob: -3.43595814704895
    5. '       ' → logprob: -4.310958385467529
    6. '):' → logprob: -5.810958385467529
    7. '   ' → logprob: -6.060958385467529
    8. '[' → logprob: -6.310958385467529
    9. ')' → logprob: -7.810958385467529
    10. ' ):' → logprob: -8.060957908630371

Token 35: ' for' (ID: 395)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.38885658979415894
    2. ' if' → logprob: -2.0138566493988037
    3. '   ' → logprob: -3.2638566493988037
    4. ' ' → logprob: -3.2638566493988037
    5. ')' → logprob: -4.013856410980225
    6. ' for' → logprob: -4.138856410980225
    7. 'if' → logprob: -4.513856410980225
    8. ' temp' → logprob: -4.638856410980225
    9. 'temp' → logprob: -4.763856410980225
    10. 'for' (adapté à ' for') → logprob: -5.388856410980225

Token 36: ' idx' (ID: 14016)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.05162570998072624
    2. ' range' → logprob: -3.9266257286071777
    3. 'j' → logprob: -4.426625728607178
    4. ' px' → logprob: -4.426625728607178
    5. 'range' → logprob: -5.926625728607178
    6. ' ' → logprob: -6.926625728607178
    7. ' p' → logprob: -7.176625728607178
    8. ' s' → logprob: -7.676625728607178
    9. ' xrange' → logprob: -7.801625728607178
    10. ' x' → logprob: -7.801625728607178

Token 37: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023648157715797424
    2. 'in' → logprob: -4.023648262023926
    3. ',' → logprob: -5.398648262023926
    4. ' ,' → logprob: -7.898648262023926
    5. ' ' → logprob: -8.398648262023926
    6. '<|end|>' → logprob: -8.523648262023926
    7. 's' → logprob: -9.648648262023926
    8. '	in' → logprob: -9.898648262023926
    9. '<|end|>' → logprob: -11.023648262023926
    10. '_in' → logprob: -11.898648262023926

Token 38: ' s' (ID: 265)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -1.291587233543396
    2. 'val' → logprob: -1.666587233543396
    3. ' p' → logprob: -2.0415873527526855
    4. 'p' → logprob: -2.1665873527526855
    5. 'x' → logprob: -2.1665873527526855
    6. ' x' → logprob: -3.4165873527526855
    7. 'bit' → logprob: -3.5415873527526855
    8. ' bit' → logprob: -3.6665873527526855
    9. 'v' → logprob: -3.7915873527526855
    10. 'b' → logprob: -4.6665873527526855

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3597589135169983
    2. 'x' → logprob: -1.3597588539123535
    3. 'ymbol' → logprob: -3.2347588539123535
    4. '_val' → logprob: -6.4847588539123535
    5. 't' → logprob: -7.1097588539123535
    6. '_bit' → logprob: -7.4847588539123535
    7. '_char' → logprob: -8.109759330749512
    8. 'e' → logprob: -8.484759330749512
    9. '_value' → logprob: -8.484759330749512
    10. '_i' → logprob: -8.609759330749512

Token 40: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.01815567910671234
    2. 'enumer' → logprob: -4.018155574798584
    3. '```' → logprob: -13.768156051635742
    4. 'en' → logprob: -13.893156051635742
    5. '(en' → logprob: -14.393156051635742
    6. ' en' → logprob: -14.768156051635742
    7. 'ex' → logprob: -14.768156051635742
    8. 'e' → logprob: -14.893156051635742
    9. 'x' → logprob: -14.893156051635742
    10. '.enumer' → logprob: -15.268156051635742

Token 41: '(s' (ID: 1858)
  Prédit: '(px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.44627270102500916
    2. '(s' → logprob: -1.5712727308273315
    3. 'sx' → logprob: -2.571272611618042
    4. 'px' → logprob: -3.071272611618042
    5. ' px' → logprob: -4.071272850036621
    6. ' sx' → logprob: -4.696272850036621
    7. 's' → logprob: -5.946272850036621
    8. '(' → logprob: -8.196272850036621
    9. '(p' → logprob: -9.696272850036621
    10. 'range' → logprob: -10.196272850036621

Token 42: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.531315314830863e-06
    2. '):' → logprob: -13.875003814697266
    3. '[' → logprob: -14.125003814697266
    4. 'y' → logprob: -14.375003814697266
    5. ')' → logprob: -14.875003814697266
    6. '[x' → logprob: -15.000003814697266
    7. ')x' → logprob: -15.125003814697266
    8. '(x' → logprob: -16.875003814697266
    9. 'ex' → logprob: -17.625003814697266
    10. 's' → logprob: -17.625003814697266

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00010902655776590109
    2. ':' → logprob: -9.87510871887207
    3. ' ):' → logprob: -10.25010871887207
    4. '):
' → logprob: -11.12510871887207
    5. '():' → logprob: -13.25010871887207
    6. ')' → logprob: -13.25010871887207
    7. '}:' → logprob: -14.50010871887207
    8. '[' → logprob: -14.75010871887207
    9. ']:' → logprob: -14.75010871887207
    10. '   ' → logprob: -14.87510871887207

Token 44: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7527089715003967
    2. '       ' → logprob: -0.7527089715003967
    3. ':
' → logprob: -4.377708911895752
    4. ' :' → logprob: -4.627708911895752
    5. '        ' → logprob: -4.752708911895752
    6. '):' → logprob: -5.127708911895752
    7. ' if' → logprob: -5.377708911895752
    8. '           ' → logprob: -6.002708911895752
    9. '<|end|>' → logprob: -6.002708911895752
    10. '   ' → logprob: -6.377708911895752

Token 45: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5113476514816284
    2. ' if' → logprob: -1.3863476514816284
    3. '<|end|>' → logprob: -2.636347770690918
    4. ':' → logprob: -3.511347770690918
    5. 'if' → logprob: -3.761347770690918
    6. '    ' → logprob: -5.011347770690918
    7. ')' → logprob: -5.636347770690918
    8. '<|end|>' → logprob: -6.011347770690918
    9. '       ' → logprob: -6.386347770690918
    10. ' :' → logprob: -6.386347770690918

Token 46: 'sum' (ID: 12298)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -1.1382567882537842
    2. ' &' → logprob: -1.1382567882537842
    3. '[' → logprob: -1.5132567882537842
    4. '[i' → logprob: -2.513256788253784
    5. '>>' → logprob: -3.763256788253784
    6. '==' → logprob: -5.388257026672363
    7. '!=' → logprob: -5.513257026672363
    8. '[s' → logprob: -6.138257026672363
    9. '>' → logprob: -6.263257026672363
    10. 'e' → logprob: -6.388257026672363

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0338436365127563
    2. '=' → logprob: -1.2838436365127563
    3. ' +=' → logprob: -1.5338436365127563
    4. '+=' → logprob: -1.9088436365127563
    5. '+' → logprob: -6.033843517303467
    6. ' ' → logprob: -8.158843994140625
    7. ' +' → logprob: -8.783843994140625
    8. 's' → logprob: -9.158843994140625
    9. ')' → logprob: -9.408843994140625
    10. ',' → logprob: -9.658843994140625

Token 48: ' sum' (ID: 4215)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.25302743911743164
    2. 's' → logprob: -2.0030274391174316
    3. ' px' → logprob: -3.8780274391174316
    4. ' (' → logprob: -4.128027439117432
    5. ' i' → logprob: -4.128027439117432
    6. '+' → logprob: -4.378027439117432
    7. '0' → logprob: -5.628027439117432
    8. ' ss' → logprob: -5.753027439117432
    9. ' +' → logprob: -6.003027439117432
    10. 'i' → logprob: -6.253027439117432

Token 49: '(s' (ID: 1858)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.82407146692276
    2. '(' → logprob: -1.1990714073181152
    3. '((' → logprob: -2.4490714073181152
    4. '(px' → logprob: -2.6990714073181152
    5. '([(' → logprob: -3.1990714073181152
    6. '(s' → logprob: -3.5740714073181152
    7. '(int' → logprob: -4.824071407318115
    8. '(temp' → logprob: -5.199071407318115
    9. '[' → logprob: -5.324071407318115
    10. '([
' → logprob: -5.574071407318115

Token 50: ')
' (ID: 446)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.013431191444397
    2. '[x' → logprob: -2.3884310722351074
    3. '[:' → logprob: -2.6384310722351074
    4. 'x' → logprob: -2.6384310722351074
    5. ' if' → logprob: -2.8884310722351074
    6. '[idx' → logprob: -3.2634310722351074
    7. ')' → logprob: -3.3884310722351074
    8. 's' → logprob: -3.3884310722351074
    9. '[j' → logprob: -3.6384310722351074
    10. '[i' → logprob: -3.6384310722351074

Token 51: '           ' (ID: 352)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8553449511528015
    2. '+' → logprob: -1.1053450107574463
    3. '<|end|>' → logprob: -1.7303450107574463
    4. ')' → logprob: -3.7303450107574463
    5. ' ' → logprob: -4.730344772338867
    6. ' if' → logprob: -4.980344772338867
    7. '           ' → logprob: -5.355344772338867
    8. 'if' → logprob: -5.855344772338867
    9. '<|end|>' → logprob: -6.105344772338867
    10. '        ' → logprob: -6.355344772338867

Token 52: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' Je' (ID: 4678)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5215601325035095
    2. 'if' → logprob: -2.1465601921081543
    3. ' ' → logprob: -2.2715601921081543
    4. '<|end|>' → logprob: -2.3965601921081543
    5. ')' → logprob: -3.1465601921081543
    6. '            ' → logprob: -4.646560192108154
    7. ' s' → logprob: -5.021560192108154
    8. ' )' → logprob: -5.271560192108154
    9. ' (' → logprob: -5.271560192108154
    10. '           ' → logprob: -5.521560192108154

Token 54: ' compte' (ID: 19657)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2161887288093567
    2. '#' → logprob: -2.716188669204712
    3. 'st' → logprob: -3.091188669204712
    4. 'm' → logprob: -3.841188669204712
    5. 'ts' → logprob: -4.591188907623291
    6. '    ' → logprob: -4.716188907623291
    7. 'mp' → logprob: -5.091188907623291
    8. '   ' → logprob: -5.466188907623291
    9. ' #' → logprob: -6.091188907623291
    10. 'śli' → logprob: -6.091188907623291

Token 55: ' un' (ID: 537)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' peu' (ID: 9235)
  Prédit: ' peu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peu' → logprob: -0.3008137345314026
    2. 'pe' → logprob: -1.6758136749267578
    3. ' peut' → logprob: -3.050813674926758
    4. ' pe' → logprob: -5.050813674926758
    5. ' peux' → logprob: -5.175813674926758
    6. 'e' → logprob: -5.550813674926758
    7. ' d' → logprob: -6.175813674926758
    8. ' s' → logprob: -6.675813674926758
    9. '```' → logprob: -7.300813674926758
    10. 't' → logprob: -7.300813674926758

Token 57: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4404996633529663
    2. '<|end|>' → logprob: -1.1904996633529663
    3. ' if' → logprob: -4.565499782562256
    4. '<|end|>' → logprob: -4.940499782562256
    5. 'if' → logprob: -5.315499782562256
    6. ')' → logprob: -5.315499782562256
    7. '    ' → logprob: -5.315499782562256
    8. 's' → logprob: -5.690499782562256
    9. '(s' → logprob: -6.565499782562256
    10. '  ' → logprob: -6.690499782562256

Token 58: ' la' (ID: 557)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.24589215219020844
    2. 'l' → logprob: -2.24589204788208
    3. 'la' → logprob: -3.99589204788208
    4. 'plus' → logprob: -4.49589204788208
    5. '```' → logprob: -4.49589204788208
    6. 'pe' → logprob: -4.74589204788208
    7. 'i' → logprob: -4.87089204788208
    8. 'cha' → logprob: -5.12089204788208
    9. 'près' → logprob: -5.24589204788208
    10. 't' → logprob: -5.37089204788208

Token 59: ' main' (ID: 2758)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.6605700254440308
    2. 'fois' → logprob: -2.1605701446533203
    3. 'part' → logprob: -2.4105701446533203
    4. 'pe' → logprob: -3.0355701446533203
    5. 'ligne' → logprob: -3.9105701446533203
    6. 'main' → logprob: -4.03557014465332
    7. 'p' → logprob: -4.03557014465332
    8. 's' → logprob: -4.03557014465332
    9. 'plus' → logprob: -4.78557014465332
    10. '```' → logprob: -4.91057014465332

Token 60: ' ici' (ID: 27994)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: '.' (ID: 13)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5424990057945251
    2. '<|end|>' → logprob: -1.79249906539917
    3. '       ' → logprob: -2.79249906539917
    4. ')' → logprob: -3.41749906539917
    5. '           ' → logprob: -3.54249906539917
    6. '        ' → logprob: -4.04249906539917
    7. ':' → logprob: -4.16749906539917
    8. ' if' → logprob: -4.16749906539917
    9. '            ' → logprob: -4.54249906539917
    10. '    ' → logprob: -4.66749906539917

Token 62: ' Peut' (ID: 116891)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: '-être' (ID: 33599)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.4926665425300598
    2. '-être' → logprob: -0.9926665425300598
    3. '   ' → logprob: -5.742666721343994
    4. 'êt' → logprob: -5.992666721343994
    5. 'êtres' → logprob: -6.617666721343994
    6. ')' → logprob: -6.742666721343994
    7. 's' → logprob: -6.867666721343994
    8. '-il' → logprob: -7.117666721343994
    9. '```' → logprob: -7.242666721343994
    10. 'etre' → logprob: -7.242666721343994

Token 64: ' pas' (ID: 2173)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.802161455154419
    2. '           ' → logprob: -2.177161455154419
    3. 'if' → logprob: -2.177161455154419
    4. 'continue' → logprob: -2.677161455154419
    5. 'pour' → logprob: -2.802161455154419
    6. '...' → logprob: -2.802161455154419
    7. 'for' → logprob: -2.927161455154419
    8. '<|end|>' → logprob: -2.927161455154419
    9. 's' → logprob: -3.052161455154419
    10. ' if' → logprob: -3.552161455154419

Token 65: ' optimal' (ID: 24174)
  Prédit: 'necessary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'necessary' → logprob: -0.9677203297615051
    2. 'necess' → logprob: -1.8427202701568604
    3. '<|end|>' → logprob: -2.3427202701568604
    4. ' nécessaire' → logprob: -2.4677202701568604
    5. 'needed' → logprob: -3.4677202701568604
    6. 'the' → logprob: -3.5927202701568604
    7. ' ' → logprob: -4.0927205085754395
    8. ' necessary' → logprob: -4.2177205085754395
    9. 'plus' → logprob: -4.2177205085754395
    10. 'optim' → logprob: -4.3427205085754395

Token 66: ' ?
' (ID: 19740)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1347407102584839
    2. '<|end|>' → logprob: -1.6347407102584839
    3. ')' → logprob: -2.0097408294677734
    4. '       ' → logprob: -2.2597408294677734
    5. '               ' → logprob: -3.1347408294677734
    6. ' ' → logprob: -3.2597408294677734
    7. ':' → logprob: -3.5097408294677734
    8. '<|end|>' → logprob: -3.6347408294677734
    9. '            ' → logprob: -4.134740829467773
    10. ',' → logprob: -4.384740829467773

Token 67: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' bits' (ID: 18189)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01873849146068096
    2. '=' → logprob: -4.143738269805908
    3. '_set' → logprob: -6.143738269805908
    4. ' ' → logprob: -9.268738746643066
    5. '_' → logprob: -9.268738746643066
    6. 'et' → logprob: -9.518738746643066
    7. 'set' → logprob: -10.018738746643066
    8. ')' → logprob: -10.268738746643066
    9. '_count' → logprob: -10.268738746643066
    10. '=set' → logprob: -10.643738746643066

Token 70: ' bin' (ID: 6958)
  Prédit: ' bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bin' → logprob: -0.4500158429145813
    2. 'bin' → logprob: -1.7000157833099365
    3. ' i' → logprob: -2.9500157833099365
    4. '(bin' → logprob: -3.7000157833099365
    5. '(i' → logprob: -3.8250157833099365
    6. '[i' → logprob: -3.9500157833099365
    7. 'i' → logprob: -4.200016021728516
    8. ' format' → logprob: -4.700016021728516
    9. ' [' → logprob: -4.950016021728516
    10. ' (' → logprob: -4.950016021728516

Token 71: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.463036435074173e-05
    2. '(' → logprob: -10.625024795532227
    3. 'i' → logprob: -16.375024795532227
    4. '((' → logprob: -16.750024795532227
    5. '(x' → logprob: -16.750024795532227
    6. '(s' → logprob: -17.625024795532227
    7. '(I' → logprob: -18.625024795532227
    8. '[i' → logprob: -18.750024795532227
    9. ' (' → logprob: -18.875024795532227
    10. '(
' → logprob: -19.500024795532227

Token 72: ' &' (ID: 827)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.0009019309654831886
    2. ')' → logprob: -7.125901699066162
    3. ' )[' → logprob: -9.62590217590332
    4. '[' → logprob: -11.25090217590332
    5. '')[' → logprob: -11.75090217590332
    6. '")[' → logprob: -13.12590217590332
    7. ')>>' → logprob: -13.62590217590332
    8. '>>' → logprob: -13.75090217590332
    9. '())[' → logprob: -13.87590217590332
    10. ').' → logprob: -14.25090217590332

Token 73: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.48117077350616455
    2. ' (' → logprob: -1.7311707735061646
    3. 's' → logprob: -2.106170654296875
    4. '(' → logprob: -3.356170654296875
    5. ' ((' → logprob: -3.981170654296875
    6. '((' → logprob: -4.106170654296875
    7. '(s' → logprob: -5.481170654296875
    8. ' ' → logprob: -6.856170654296875
    9. '(~' → logprob: -6.856170654296875
    10. '(px' → logprob: -6.856170654296875

Token 74: 'sum' (ID: 12298)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.003924637567251921
    2. 'um' → logprob: -5.87892484664917
    3. 's' → logprob: -7.87892484664917
    4. '[s' → logprob: -8.628924369812012
    5. '[-' → logprob: -8.628924369812012
    6. '[' → logprob: -8.753924369812012
    7. 'sum' → logprob: -9.128924369812012
    8. 'x' → logprob: -9.878924369812012
    9. 'idx' → logprob: -10.753924369812012
    10. 'ss' → logprob: -11.628924369812012

Token 75: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.034689225256443024
    2. ')' → logprob: -3.40968918800354
    3. ').' → logprob: -7.659689426422119
    4. '())[' → logprob: -7.659689426422119
    5. ' )[' → logprob: -10.409688949584961
    6. '[' → logprob: -10.534688949584961
    7. ')(' → logprob: -11.659688949584961
    8. ').__' → logprob: -12.409688949584961
    9. '())' → logprob: -12.534688949584961
    10. ')>>' → logprob: -12.784688949584961

Token 76: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10491243749856949
    2. '3' → logprob: -2.354912519454956
    3. ' ' → logprob: -6.604912281036377
    4. ':' → logprob: -7.229912281036377
    5. '[' → logprob: -7.354912281036377
    6. '1' → logprob: -7.854912281036377
    7. '][' → logprob: -8.604912757873535
    8. '```' → logprob: -8.729912757873535
    9. '7' → logprob: -8.917412757873535
    10. '-' → logprob: -8.917412757873535

Token 77: ':]
' (ID: 61598)
  Prédit: ':].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':].' → logprob: -0.002972710644826293
    2. ':]' → logprob: -5.877972602844238
    3. ':' → logprob: -8.752972602844238
    4. ' :' → logprob: -12.127972602844238
    5. ' :]' → logprob: -12.752972602844238
    6. ':],' → logprob: -13.502972602844238
    7. ':]

' → logprob: -16.127973556518555
    8. '].' → logprob: -17.127973556518555
    9. ':]
' → logprob: -17.752973556518555
    10. ':)' → logprob: -17.752973556518555

Token 78: '           ' (ID: 352)
  Prédit: '.z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.z' → logprob: -0.3041990101337433
    2. '.' → logprob: -1.554198980331421
    3. '.r' → logprob: -3.179198980331421
    4. ').' → logprob: -4.80419921875
    5. '.pad' → logprob: -7.67919921875
    6. ' .' → logprob: -8.67919921875
    7. '().' → logprob: -9.30419921875
    8. '           ' → logprob: -9.42919921875
    9. 'z' → logprob: -9.67919921875
    10. '].' → logprob: -10.30419921875

Token 79: ' c' (ID: 274)
  Prédit: '.z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.z' → logprob: -0.16094310581684113
    2. '.' → logprob: -2.035943031311035
    3. ').' → logprob: -4.535943031311035
    4. '.r' → logprob: -5.285943031311035
    5. 'z' → logprob: -6.910943031311035
    6. ')' → logprob: -8.285943031311035
    7. '].' → logprob: -8.285943031311035
    8. '0' → logprob: -8.285943031311035
    9. ' .' → logprob: -9.035943031311035
    10. '           ' → logprob: -9.410943031311035

Token 80: ' =' (ID: 314)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.1403549313545227
    2. ' =' → logprob: -2.265354871749878
    3. 'ont' → logprob: -5.140355110168457
    4. '=' → logprob: -5.390355110168457
    5. 'ounter' → logprob: -5.515355110168457
    6. 'o' → logprob: -6.265355110168457
    7. 'oun' → logprob: -6.640355110168457
    8. ' ' → logprob: -6.890355110168457
    9. ' +=' → logprob: -6.890355110168457
    10. 'nt' → logprob: -7.390355110168457

Token 81: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.5082001686096191
    2. '0' → logprob: -2.133200168609619
    3. 'collections' → logprob: -2.258200168609619
    4. ' ' → logprob: -2.508200168609619
    5. ' len' → logprob: -3.383200168609619
    6. ' bits' → logprob: -4.133200168609619
    7. 'len' → logprob: -4.133200168609619
    8. ' sum' → logprob: -4.758200168609619
    9. ' int' → logprob: -5.383200168609619
    10. 'int' → logprob: -5.383200168609619

Token 82: '.Counter' (ID: 175403)
  Prédit: '.Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Counter' → logprob: -0.002487787976861
    2. '.' → logprob: -6.002487659454346
    3. '.counter' → logprob: -11.752488136291504
    4. '.default' → logprob: -14.127488136291504
    5. '.Count' → logprob: -14.252488136291504
    6. '.Point' → logprob: -14.502488136291504
    7. '.C' → logprob: -15.002488136291504
    8. '.User' → logprob: -15.127488136291504
    9. '.Bit' → logprob: -15.252488136291504
    10. '.Dot' → logprob: -15.752488136291504

Token 83: '(bits' (ID: 170698)
  Prédit: '(bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bits' → logprob: -0.0004848922253586352
    2. '(' → logprob: -7.750484943389893
    3. '(b' → logprob: -10.875484466552734
    4. '(bit' → logprob: -11.125484466552734
    5. 'bits' → logprob: -11.375484466552734
    6. ' (' → logprob: -12.500484466552734
    7. '(s' → logprob: -13.750484466552734
    8. ' bits' → logprob: -13.875484466552734
    9. '(bin' → logprob: -14.000484466552734
    10. '((' → logprob: -15.125484466552734

Token 84: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000453910295618698
    2. ' )' → logprob: -8.12545394897461
    3. '           ' → logprob: -9.37545394897461
    4. '       ' → logprob: -10.25045394897461
    5. ')
' → logprob: -11.37545394897461
    6. '))' → logprob: -12.50045394897461
    7. '        ' → logprob: -12.75045394897461
    8. '          ' → logprob: -13.00045394897461
    9. '            ' → logprob: -13.12545394897461
    10. '[' → logprob: -13.25045394897461

Token 85: 'get' (ID: 522)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00048119694110937417
    2. 'get' → logprob: -7.875481128692627
    3. ''' → logprob: -9.750481605529785
    4. '1' → logprob: -10.625481605529785
    5. 'Count' → logprob: -12.500481605529785
    6. '```' → logprob: -12.625481605529785
    7. 'm' → logprob: -13.125481605529785
    8. ' count' → logprob: -13.125481605529785
    9. '0' → logprob: -13.250481605529785
    10. 'z' → logprob: -13.500481605529785

Token 86: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0010149452136829495
    2. '("' → logprob: -7.001014709472656
    3. ''' → logprob: -9.876014709472656
    4. '(' → logprob: -9.876014709472656
    5. '"' → logprob: -15.251014709472656
    6. '1' → logprob: -16.001014709472656
    7. ' ('' → logprob: -16.376014709472656
    8. ' ' → logprob: -16.626014709472656
    9. ''s' → logprob: -16.751014709472656
    10. '(
' → logprob: -17.001014709472656

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.584239938296378e-06
    2. '0' → logprob: -12.000007629394531
    3. ' ' → logprob: -13.625007629394531
    4. ''' → logprob: -15.875007629394531
    5. '7' → logprob: -17.87500762939453
    6. '2' → logprob: -17.87500762939453
    7. ')' → logprob: -18.00000762939453
    8. '4' → logprob: -18.00000762939453
    9. ' '' → logprob: -18.06250762939453
    10. '')' → logprob: -18.06250762939453

Token 88: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.18391190469264984
    2. '')' → logprob: -1.808911919593811
    3. ''' → logprob: -5.6839118003845215
    4. ')' → logprob: -7.6839118003845215
    5. ',' → logprob: -8.30891227722168
    6. ''),' → logprob: -11.43391227722168
    7. '','' → logprob: -11.68391227722168
    8. ' ')' → logprob: -11.80891227722168
    9. ' ',' → logprob: -11.93391227722168
    10. ','' → logprob: -12.55891227722168

Token 89: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009765418246388435
    2. ' ' → logprob: -4.634765625
    3. '1' → logprob: -11.884765625
    4. ')' → logprob: -13.009765625
    5. ' ' → logprob: -16.634765625
    6. '2' → logprob: -16.759765625
    7. '<|end|>' → logprob: -17.009765625
    8. '  ' → logprob: -17.322265625
    9. '۰' → logprob: -17.884765625
    10. '   ' → logprob: -18.072265625

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.590104698669165e-05
    2. ' ' → logprob: -9.375085830688477
    3. '1' → logprob: -14.000085830688477
    4. ')' → logprob: -16.250085830688477
    5. '۰' → logprob: -17.312585830688477
    6. '  ' → logprob: -17.500085830688477
    7. '00' → logprob: -18.062585830688477
    8. '   ' → logprob: -18.187585830688477
    9. '<|end|>' → logprob: -18.312585830688477
    10. '2' → logprob: -18.375085830688477

Token 91: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004315036640036851
    2. ' )' → logprob: -8.000431060791016
    3. ')
' → logprob: -9.375431060791016
    4. ',' → logprob: -12.500431060791016
    5. '))' → logprob: -13.000431060791016
    6. ')

' → logprob: -14.250431060791016
    7. '),' → logprob: -14.375431060791016
    8. ')*' → logprob: -14.750431060791016
    9. ')+' → logprob: -14.875431060791016
    10. ')
' → logprob: -15.000431060791016

Token 92: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4329420328140259
    2. ')' → logprob: -2.3079419136047363
    3. ' ' → logprob: -2.3079419136047363
    4. '            ' → logprob: -2.9329419136047363
    5. '<|end|>' → logprob: -2.9329419136047363
    6. '          ' → logprob: -4.682941913604736
    7. '       ' → logprob: -5.182941913604736
    8. ' 
' → logprob: -5.307941913604736
    9. '            
' → logprob: -5.432941913604736
    10. ',' → logprob: -5.807941913604736

Token 93: ' temp' (ID: 5484)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21024739742279053
    2. 'if' → logprob: -2.33524751663208
    3. '           ' → logprob: -3.08524751663208
    4. ')' → logprob: -3.58524751663208
    5. '       ' → logprob: -4.96024751663208
    6. ' ' → logprob: -5.71024751663208
    7. '<|end|>' → logprob: -5.71024751663208
    8. ' c' → logprob: -6.33524751663208
    9. '            ' → logprob: -6.96024751663208
    10. '        ' → logprob: -7.46024751663208

Token 94: '_lst' (ID: 72474)
  Prédit: '_lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lst' → logprob: -0.0001214237418025732
    2. 'lst' → logprob: -10.125121116638184
    3. '_list' → logprob: -10.500121116638184
    4. '.append' → logprob: -11.250121116638184
    5. '_' → logprob: -11.500121116638184
    6. '_res' → logprob: -11.625121116638184
    7. 'res' → logprob: -12.125121116638184
    8. '_cnt' → logprob: -12.375121116638184
    9. 'Lst' → logprob: -13.750121116638184
    10. '_len' → logprob: -13.875121116638184

Token 95: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.016641614958643913
    2. '.' → logprob: -4.141641616821289
    3. ' .' → logprob: -7.516641616821289
    4. '.app' → logprob: -10.391641616821289
    5. '.extend' → logprob: -11.391641616821289
    6. '.ap' → logprob: -12.266641616821289
    7. 'append' → logprob: -12.641641616821289
    8. '<|end|>' → logprob: -12.641641616821289
    9. ').' → logprob: -13.016641616821289
    10. '.Append' → logprob: -13.516641616821289

Token 96: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0026127593591809273
    2. '(' → logprob: -7.002612590789795
    3. '((' → logprob: -7.002612590789795
    4. 'c' → logprob: -8.127613067626953
    5. '(s' → logprob: -8.627613067626953
    6. '(len' → logprob: -9.002613067626953
    7. '(p' → logprob: -9.752613067626953
    8. ' (' → logprob: -10.752613067626953
    9. '(i' → logprob: -10.877613067626953
    10. '(px' → logprob: -10.877613067626953

Token 97: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023238400171976537
    2. ')
' → logprob: -9.000232696533203
    3. ' )' → logprob: -9.750232696533203
    4. '       ' → logprob: -10.500232696533203
    5. '   ' → logprob: -12.250232696533203
    6. '))' → logprob: -12.375232696533203
    7. '+' → logprob: -12.625232696533203
    8. '           ' → logprob: -13.125232696533203
    9. '        ' → logprob: -13.500232696533203
    10. '    ' → logprob: -13.750232696533203

Token 98: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.35806214809417725
    2. 'm' → logprob: -1.7330621480941772
    3. ' ' → logprob: -2.483062267303467
    4. ' m' → logprob: -3.233062267303467
    5. 'p' → logprob: -8.233061790466309
    6. '3' → logprob: -8.483061790466309
    7. ' px' → logprob: -8.608061790466309
    8. 'mx' → logprob: -8.858061790466309
    9. 'px' → logprob: -9.233061790466309
    10. '4' → logprob: -9.733061790466309

Token 99: '2' (ID: 17)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3176593780517578
    2. '2' → logprob: -1.3176593780517578
    3. 'px' → logprob: -6.192659378051758
    4. '3' → logprob: -7.692659378051758
    5. '(m' → logprob: -7.942659378051758
    6. '(' → logprob: -8.067659378051758
    7. 'mx' → logprob: -8.442659378051758
    8. 'p' → logprob: -8.567659378051758
    9. '(px' → logprob: -8.692659378051758
    10. 'len' → logprob: -8.817659378051758

Token 100: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.579495235811919e-05
    2. ')
' → logprob: -10.25009536743164
    3. ' )' → logprob: -10.75009536743164
    4. '       ' → logprob: -10.87509536743164
    5. '))' → logprob: -11.25009536743164
    6. '   ' → logprob: -13.00009536743164
    7. ')))' → logprob: -14.00009536743164
    8. '           ' → logprob: -14.12509536743164
    9. '<|end|>' → logprob: -14.87509536743164
    10. ')return' → logprob: -15.00009536743164

Token 101: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.621798574924469
    2. '<|end|>' → logprob: -0.996798574924469
    3. '   ' → logprob: -2.746798515319824
    4. ' if' → logprob: -4.996798515319824
    5. ' ' → logprob: -5.246798515319824
    6. 'return' → logprob: -5.871798515319824
    7. ')' → logprob: -5.871798515319824
    8. '
' → logprob: -6.246798515319824
    9. '    ' → logprob: -6.496798515319824
    10. '  ' → logprob: -6.621798515319824

Token 103: ' pas' (ID: 2173)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.45575618743896484
    2. 'if' → logprob: -1.0807561874389648
    3. ' temp' → logprob: -5.080756187438965
    4. 'temp' → logprob: -5.080756187438965
    5. ' res' → logprob: -5.455756187438965
    6. '   ' → logprob: -5.705756187438965
    7. '       ' → logprob: -6.205756187438965
    8. 'res' → logprob: -6.455756187438965
    9. ' for' → logprob: -7.580756187438965
    10. '#' → logprob: -8.080756187438965

Token 104: ' sûr' (ID: 46415)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2880449593067169
    2. ' ' → logprob: -2.6630449295043945
    3. ' temp' → logprob: -3.1630449295043945
    4. 'sible' → logprob: -3.5380449295043945
    5. ' s' → logprob: -3.9130449295043945
    6. 'temp' → logprob: -4.4130449295043945
    7. 'for' → logprob: -4.4130449295043945
    8. ' for' → logprob: -4.7880449295043945
    9. '       ' → logprob: -4.7880449295043945
    10. 'er' → logprob: -5.0380449295043945

Token 105: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43826448917388916
    2. '<|end|>' → logprob: -1.3132644891738892
    3. '        ' → logprob: -3.5632643699645996
    4. ' ' → logprob: -3.9382643699645996
    5. '   ' → logprob: -4.5632643699646
    6. '    ' → logprob: -4.5632643699646
    7. '<|end|>' → logprob: -5.1882643699646
    8. '        
' → logprob: -5.1882643699646
    9. ' if' → logprob: -5.8132643699646
    10. ',' → logprob: -8.063264846801758

Token 106: ' c' (ID: 274)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.7027328610420227
    2. ' temp' → logprob: -0.8277328610420227
    3. ' all' → logprob: -3.702732801437378
    4. 'temp' → logprob: -4.327733039855957
    5. 'len' → logprob: -4.327733039855957
    6. ' sum' → logprob: -4.702733039855957
    7. ' res' → logprob: -5.327733039855957
    8. ' any' → logprob: -7.702733039855957
    9. ' ' → logprob: -7.827733039855957
    10. 'sum' → logprob: -7.827733039855957

Token 107: ''est' (ID: 6616)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.9154509902000427
    2. 'omp' → logprob: -1.7904510498046875
    3. ''est' → logprob: -2.4154510498046875
    4. ''' → logprob: -2.4154510498046875
    5. 'ount' → logprob: -2.7904510498046875
    6. 'ounter' → logprob: -3.2904510498046875
    7. 'on' → logprob: -3.2904510498046875
    8. '%' → logprob: -3.4154510498046875
    9. 'orrect' → logprob: -4.1654510498046875
    10. 'lear' → logprob: -4.7904510498046875

Token 108: ' la' (ID: 557)
  Prédit: ' correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' correct' → logprob: -0.31922635436058044
    2. 'correct' → logprob: -1.8192263841629028
    3. 'exact' → logprob: -3.4442262649536133
    4. 'the' → logprob: -4.694226264953613
    5. 'le' → logprob: -4.819226264953613
    6. ' le' → logprob: -5.194226264953613
    7. ' la' → logprob: -5.319226264953613
    8. ' complet' → logprob: -5.444226264953613
    9. ' exact' → logprob: -5.444226264953613
    10. ' ' → logprob: -5.694226264953613

Token 109: ' meilleure' (ID: 52387)
  Prédit: ' bonne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bonne' → logprob: -0.06525027751922607
    2. ' meilleure' → logprob: -3.6902503967285156
    3. 'bonne' → logprob: -5.190250396728516
    4. ' ' → logprob: -5.315250396728516
    5. 'fin' → logprob: -5.565250396728516
    6. ' fin' → logprob: -5.940250396728516
    7. ' good' → logprob: -6.190250396728516
    8. ' suite' → logprob: -6.315250396728516
    9. ' meilleur' → logprob: -6.690250396728516
    10. ' place' → logprob: -6.690250396728516

Token 110: ' manière' (ID: 35013)
  Prédit: 'option'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'option' → logprob: -1.5468021631240845
    2. ' option' → logprob: -2.171802043914795
    3. '   ' → logprob: -2.546802043914795
    4. 'return' → logprob: -2.546802043914795
    5. ' res' → logprob: -2.671802043914795
    6. ' façon' → logprob: -2.796802043914795
    7. ' return' → logprob: -2.796802043914795
    8. 'indent' → logprob: -2.921802043914795
    9. ' solution' → logprob: -3.046802043914795
    10. ' indentation' → logprob: -3.421802043914795

Token 111: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0632665678858757
    2. '<|end|>' → logprob: -3.6882665157318115
    3. '   ' → logprob: -4.063266754150391
    4. ',' → logprob: -5.188266754150391
    5. '        
' → logprob: -5.188266754150391
    6. '<|end|>' → logprob: -6.063266754150391
    7. ' to' → logprob: -6.813266754150391
    8. '    ' → logprob: -6.813266754150391
    9. '        ' → logprob: -7.438266754150391
    10. ' ' → logprob: -7.438266754150391

Token 112: ' mais' (ID: 2899)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03490797430276871
    2. ' res' → logprob: -4.534907817840576
    3. '        
' → logprob: -4.659907817840576
    4. '   ' → logprob: -5.409907817840576
    5. 'res' → logprob: -5.909907817840576
    6. ' temp' → logprob: -6.534907817840576
    7. '           ' → logprob: -7.034907817840576
    8. ' if' → logprob: -7.034907817840576
    9. '        ' → logprob: -7.284907817840576
    10. '    ' → logprob: -7.534907817840576

Token 113: ' bon' (ID: 4846)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.8942882418632507
    2. ' if' → logprob: -1.0192883014678955
    3. ' temp' → logprob: -1.8942883014678955
    4. 'res' → logprob: -3.5192883014678955
    5. '       ' → logprob: -3.8942883014678955
    6. 'temp' → logprob: -4.019288063049316
    7. 'if' → logprob: -4.769288063049316
    8. '           ' → logprob: -7.144288063049316
    9. '   ' → logprob: -7.894288063049316
    10. ' for' → logprob: -8.144288063049316

Token 114: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009030860848724842
    2. ' if' → logprob: -5.134030818939209
    3. '   ' → logprob: -6.759030818939209
    4. '<|end|>' → logprob: -7.259030818939209
    5. '        
' → logprob: -7.884030818939209
    6. 'if' → logprob: -8.259031295776367
    7. '
' → logprob: -8.634031295776367
    8. '           ' → logprob: -9.384031295776367
    9. '    ' → logprob: -9.634031295776367
    10. '        ' → logprob: -9.634031295776367

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11458935588598251
    2. ' if' → logprob: -2.3645894527435303
    3. '<|end|>' → logprob: -5.114589214324951
    4. '   ' → logprob: -5.989589214324951
    5. 'if' → logprob: -6.489589214324951
    6. '        
' → logprob: -6.489589214324951
    7. ' ' → logprob: -6.864589214324951
    8. '    ' → logprob: -7.614589214324951
    9. '
' → logprob: -8.48958969116211
    10. ' 
' → logprob: -8.86458969116211

Token 116: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3912234306335449
    2. 'if' (adapté à ' if') → logprob: -1.141223430633545
    3. '       ' → logprob: -6.266223430633545
    4. ' res' → logprob: -7.141223430633545
    5. ' parity' → logprob: -7.641223430633545
    6. 'res' → logprob: -7.891223430633545
    7. '   ' → logprob: -8.266223907470703
    8. ' temp' → logprob: -8.891223907470703
    9. 'temp' → logprob: -9.266223907470703
    10. ' xor' → logprob: -10.141223907470703

Token 117: ' temp' (ID: 5484)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.39950767159461975
    2. ' all' → logprob: -1.6495076417922974
    3. ' temp' → logprob: -2.399507761001587
    4. ' len' → logprob: -3.649507761001587
    5. 'sum' → logprob: -4.399507522583008
    6. 'all' → logprob: -5.899507522583008
    7. 'temp' → logprob: -6.149507522583008
    8. ' res' → logprob: -6.899507522583008
    9. ' collections' → logprob: -7.524507522583008
    10. ' not' → logprob: -7.899507522583008

Token 118: '_lst' (ID: 72474)
  Prédit: '_lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lst' → logprob: -0.00019936825265176594
    2. 'p' → logprob: -8.625199317932129
    3. 'pl' → logprob: -11.875199317932129
    4. 'lst' → logprob: -12.500199317932129
    5. 'plt' → logprob: -12.875199317932129
    6. 'plist' → logprob: -12.875199317932129
    7. 'per' → logprob: -13.500199317932129
    8. 's' → logprob: -14.625199317932129
    9. 'pr' → logprob: -15.000199317932129
    10. '   ' → logprob: -15.250199317932129

Token 119: ' ==' (ID: 951)
  Prédit: '.count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.7333714365959167
    2. '==' → logprob: -0.9833714365959167
    3. ' ==' → logprob: -1.9833714962005615
    4. '[:]' → logprob: -5.233371257781982
    5. ' not' → logprob: -7.358371257781982
    6. '[' → logprob: -7.358371257781982
    7. ')==' → logprob: -7.733371257781982
    8. '.' → logprob: -8.35837173461914
    9. 'count' → logprob: -8.35837173461914
    10. ']==' → logprob: -8.48337173461914

Token 120: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.4951695501804352
    2. ' px' → logprob: -0.9951695203781128
    3. '[' → logprob: -4.120169639587402
    4. ' [' → logprob: -5.995169639587402
    5. '(px' → logprob: -7.370169639587402
    6. '   ' → logprob: -7.745169639587402
    7. '[p' → logprob: -8.745169639587402
    8. 'py' → logprob: -8.995169639587402
    9. ' list' → logprob: -9.432669639587402
    10. ' ' → logprob: -9.432669639587402

Token 121: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010546035133302212
    2. ':
' → logprob: -4.6355462074279785
    3. ' :' → logprob: -7.5105462074279785
    4. '):' → logprob: -9.63554573059082
    5. ':return' → logprob: -10.26054573059082
    6. '[:' → logprob: -10.38554573059082
    7. '<|end|>' → logprob: -10.76054573059082
    8. '       ' → logprob: -11.13554573059082
    9. '):
' → logprob: -11.38554573059082
    10. ' :
' → logprob: -11.63554573059082

Token 122: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16286200284957886
    2. ':' → logprob: -2.0378620624542236
    3. ':
' → logprob: -4.2878618240356445
    4. ' :' → logprob: -5.7878618240356445
    5. '<|end|>' → logprob: -6.6628618240356445
    6. '               ' → logprob: -7.5378618240356445
    7. ' :
' → logprob: -7.9128618240356445
    8. '
' → logprob: -8.412861824035645
    9. '       ' → logprob: -8.662861824035645
    10. '<|end|>' → logprob: -8.912861824035645

Token 123: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.1607052981853485
    2. ' res' → logprob: -1.910705327987671
    3. '               ' → logprob: -7.910705089569092
    4. '           ' → logprob: -9.16070556640625
    5. '       ' → logprob: -12.28570556640625
    6. '```' → logprob: -13.78570556640625
    7. '
' → logprob: -13.91070556640625
    8. '	res' → logprob: -14.03570556640625
    9. 'return' → logprob: -14.16070556640625
    10. 'break' → logprob: -15.16070556640625

Token 124: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.126935675740242
    2. '+=' → logprob: -2.1269357204437256
    3. ']+=' → logprob: -12.501935958862305
    4. '+' → logprob: -13.626935958862305
    5. '=' → logprob: -13.876935958862305
    6. '   ' → logprob: -14.251935958862305
    7. '    ' → logprob: -15.126935958862305
    8. ' =' → logprob: -16.126935958862305
    9. '```' → logprob: -16.126935958862305
    10. '+="' → logprob: -16.376935958862305

Token 125: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000553151941858232
    2. ' ' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.125553131103516
    4. '```' → logprob: -17.813053131103516
    5. ' ' → logprob: -18.250553131103516
    6. '  ' → logprob: -18.688053131103516
    7. '+' → logprob: -19.125553131103516
    8. '           ' → logprob: -19.375553131103516
    9. '       ' → logprob: -19.500553131103516
    10. '
' → logprob: -19.500553131103516

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -18.000001907348633
    4. '```' → logprob: -19.875001907348633
    5. 'res' → logprob: -20.437501907348633
    6. 'a' → logprob: -20.437501907348633
    7. '       ' → logprob: -20.687501907348633
    8. '           ' → logprob: -20.937501907348633
    9. '  ' → logprob: -21.000001907348633
    10. '１' → logprob: -21.187501907348633

Token 127: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17154407501220703
    2. '
' → logprob: -1.921544075012207
    3. '        
' → logprob: -5.421544075012207
    4. 'return' → logprob: -6.171544075012207
    5. '   ' → logprob: -6.671544075012207
    6. ' return' → logprob: -6.796544075012207
    7. '<|end|>' → logprob: -7.046544075012207
    8. '    
' → logprob: -8.171544075012207
    9. '\n' → logprob: -8.296544075012207
    10. '            
' → logprob: -8.546544075012207

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012440663762390614
    2. '   ' → logprob: -4.8874406814575195
    3. '        
' → logprob: -6.1374406814575195
    4. '
' → logprob: -7.3874406814575195
    5. ' return' → logprob: -7.7624406814575195
    6. '	' → logprob: -7.8874406814575195
    7. 'return' → logprob: -7.8874406814575195
    8. '    
' → logprob: -8.01244068145752
    9. '<|end|>' → logprob: -9.63744068145752
    10. '\n' → logprob: -10.01244068145752

Token 129: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.24526455998420715
    2. 'temp' (adapté à ' temp') → logprob: -1.9952645301818848
    3. '       ' → logprob: -2.6202645301818848
    4. '   ' → logprob: -4.870264530181885
    5. '
' → logprob: -7.245264530181885
    6. ' return' → logprob: -9.245265007019043
    7. 'return' → logprob: -9.870265007019043
    8. ' 
' → logprob: -9.995265007019043
    9. '        
' → logprob: -10.245265007019043
    10. '	temp' → logprob: -10.370265007019043

Token 130: '_lst' (ID: 72474)
  Prédit: '_lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lst' → logprob: -2.1008713702030946e-06
    2. 'lst' → logprob: -13.375001907348633
    3. '_list' → logprob: -15.125001907348633
    4. '_l' → logprob: -16.000001907348633
    5. '_' → logprob: -16.750001907348633
    6. '_rst' → logprob: -17.250001907348633
    7. '_ls' → logprob: -17.250001907348633
    8. 'Lst' → logprob: -17.375001907348633
    9. 'plt' → logprob: -18.625001907348633
    10. '_tmp' → logprob: -18.750001907348633

Token 131: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01863810047507286
    2. '.clear' → logprob: -4.0186381340026855
    3. ' =' → logprob: -7.6436381340026855
    4. '.=' → logprob: -11.893637657165527
    5. '=[]' → logprob: -13.643637657165527
    6. '.' → logprob: -15.018637657165527
    7. 'clear' → logprob: -15.143637657165527
    8. '.Clear' → logprob: -15.518637657165527
    9. '[:]' → logprob: -16.018638610839844
    10. '＝' → logprob: -17.393638610839844

Token 132: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -4.1080467781284824e-05
    2. ' []' → logprob: -10.125041007995605
    3. '[]}' → logprob: -14.875041007995605
    4. '[]>' → logprob: -15.500041007995605
    5. '[]
' → logprob: -15.500041007995605
    6. '[],' → logprob: -15.750041007995605
    7. '[])' → logprob: -17.625041961669922
    8. '[' → logprob: -17.750041961669922
    9. '=[]' → logprob: -17.875041961669922
    10. '[]

' → logprob: -18.125041961669922

Token 133: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.38764071464538574
    2. '   ' → logprob: -1.1376407146453857
    3. ' return' → logprob: -7.387640953063965
    4. '	return' → logprob: -9.512640953063965
    5. ':return' → logprob: -10.512640953063965
    6. '```' → logprob: -11.512640953063965
    7. ')' → logprob: -12.012640953063965
    8. '    
' → logprob: -12.012640953063965
    9. '
' → logprob: -12.012640953063965
    10. 'ret' → logprob: -12.387640953063965

Token 135: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00861456897109747
    2. ' res' → logprob: -4.758614540100098
    3. '(res' → logprob: -20.758615493774414
    4. '	res' → logprob: -20.758615493774414
    5. '$res' → logprob: -23.133615493774414
    6. 'ress' → logprob: -24.133615493774414
    7. '```' → logprob: -24.133615493774414
    8. 'r' → logprob: -24.383615493774414
    9. '
' → logprob: -24.383615493774414
    10. '0' → logprob: -24.633615493774414

Token 136: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: 'if' (ID: 366)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4141940474510193
    2. ')' → logprob: -2.039194107055664
    3. ' ' → logprob: -2.664194107055664
    4. '<|end|>' → logprob: -3.164194107055664
    5. ':' → logprob: -3.914194107055664
    6. '+' → logprob: -3.914194107055664
    7. '_' → logprob: -4.664194107055664
    8. '#' → logprob: -4.789194107055664
    9. '=' → logprob: -5.039194107055664
    10. ',' → logprob: -5.414194107055664

Token 138: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07891258597373962
    2. '__' → logprob: -2.5789124965667725
    3. ' ' → logprob: -10.953912734985352
    4. ' ' → logprob: -13.078912734985352
    5. '_' → logprob: -13.453912734985352
    6. 'name' → logprob: -14.078912734985352
    7. '_name' → logprob: -14.578912734985352
    8. ' _' → logprob: -15.578912734985352
    9. '  ' → logprob: -15.703912734985352
    10. ' name' → logprob: -16.07891273498535

Token 139: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02333666943013668
    2. 'name' → logprob: -4.023336887359619
    3. ' __' → logprob: -6.148336887359619
    4. ' ==' → logprob: -6.273336887359619
    5. '==' → logprob: -7.773336887359619
    6. '.__' → logprob: -8.523336410522461
    7. '__.' → logprob: -9.023336410522461
    8. '_name' → logprob: -9.523336410522461
    9. 'if' → logprob: -9.648336410522461
    10. '__.__' → logprob: -10.023336410522461

Token 140: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.8325677703833207e-05
    2. '___' → logprob: -11.250028610229492
    3. '__.__' → logprob: -11.500028610229492
    4. '____' → logprob: -12.875028610229492
    5. '__.' → logprob: -13.750028610229492
    6. '==' → logprob: -14.750028610229492
    7. '_' → logprob: -15.125028610229492
    8. 'name' → logprob: -15.750028610229492
    9. '__
' → logprob: -15.750028610229492
    10. '```' → logprob: -15.875028610229492

Token 141: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004612287972122431
    2. ' ==' → logprob: -5.879612445831299
    3. '==' → logprob: -6.504612445831299
    4. '__.__' → logprob: -8.25461196899414
    5. '__.' → logprob: -10.62961196899414
    6. '.__' → logprob: -11.50461196899414
    7. '.' → logprob: -11.50461196899414
    8. '=="' → logprob: -13.75461196899414
    9. ' __' → logprob: -14.37961196899414
    10. '___' → logprob: -14.50461196899414

Token 142: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.011100166477262974
    2. ''' → logprob: -4.5111002922058105
    3. ' "__' → logprob: -9.886099815368652
    4. '__' → logprob: -13.886099815368652
    5. ' '__' → logprob: -15.011099815368652
    6. '"name' → logprob: -17.26110076904297
    7. '("__' → logprob: -17.51110076904297
    8. '"class' → logprob: -17.63610076904297
    9. '"user' → logprob: -17.88610076904297
    10. ''"' → logprob: -18.01110076904297

Token 143: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.1875571544806007e-05
    2. 'name' → logprob: -11.500011444091797
    3. '__' → logprob: -13.625011444091797
    4. ' main' → logprob: -15.125011444091797
    5. '_main' → logprob: -15.500011444091797
    6. '主' → logprob: -18.750011444091797
    7. 'Main' → logprob: -19.375011444091797
    8. 'ma' → logprob: -19.500011444091797
    9. '__":
' → logprob: -19.625011444091797
    10. '"' → logprob: -20.000011444091797

Token 144: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.25322210788726807
    2. '__' → logprob: -1.503222107887268
    3. '__':
' → logprob: -7.1282219886779785
    4. '__:' → logprob: -7.6282219886779785
    5. '__
' → logprob: -14.003222465515137
    6. '__.' → logprob: -14.003222465515137
    7. '__["' → logprob: -14.628222465515137
    8. '__
' → logprob: -15.003222465515137
    9. '():
' → logprob: -15.128222465515137
    10. '__((' → logprob: -16.12822151184082

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7023537158966064
    2. ' n' → logprob: -1.0773537158966064
    3. 'n' → logprob: -2.3273537158966064
    4. 'import' → logprob: -3.3273537158966064
    5. '(n' → logprob: -3.8273537158966064
    6. ' import' → logprob: -5.702353477478027
    7. 'input' → logprob: -6.077353477478027
    8. '	n' → logprob: -6.827353477478027
    9. ' input' → logprob: -7.202353477478027
    10. '```' → logprob: -7.702353477478027

Token 146: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.30049633979797363
    2. ' n' → logprob: -1.4254963397979736
    3. 'import' → logprob: -4.5504961013793945
    4. ' import' → logprob: -4.8004961013793945
    5. '   ' → logprob: -8.675496101379395
    6. ' input' → logprob: -9.050496101379395
    7. 'input' → logprob: -10.175496101379395
    8. 't' → logprob: -11.800496101379395
    9. '	n' → logprob: -11.925496101379395
    10. '```' → logprob: -11.925496101379395

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08415477722883224
    2. ' =' → logprob: -2.5841548442840576
    3. ' ,' → logprob: -5.9591546058654785
    4. '=' → logprob: -5.9591546058654785
    5. ' ' → logprob: -10.209155082702637
    6. '   ' → logprob: -11.084155082702637
    7. ')' → logprob: -12.084155082702637
    8. '  ' → logprob: -12.209155082702637
    9. '<|end|>' → logprob: -12.334155082702637
    10. 's' → logprob: -12.459155082702637

Token 148: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6931767463684082
    2. ' m' → logprob: -0.6931767463684082
    3. ' ' → logprob: -10.69317626953125
    4. ' =' → logprob: -12.56817626953125
    5. '=' → logprob: -13.44317626953125
    6. '  ' → logprob: -14.19317626953125
    7. '    ' → logprob: -14.56817626953125
    8. '<|end|>' → logprob: -15.81817626953125
    9. '*m' → logprob: -15.94317626953125
    10. '_m' → logprob: -15.94317626953125

Token 149: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20144960284233093
    2. ' =' → logprob: -1.7014496326446533
    3. ',' → logprob: -10.576449394226074
    4. '=input' → logprob: -11.576449394226074
    5. ')' → logprob: -15.201449394226074
    6. '=
' → logprob: -15.576449394226074
    7. '=int' → logprob: -15.576449394226074
    8. ' =
' → logprob: -16.07645034790039
    9. ' ' → logprob: -16.57645034790039
    10. '=

' → logprob: -16.57645034790039

Token 150: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.12701241672039032
    2. ' map' → logprob: -2.1270124912261963
    3. '5' → logprob: -9.627012252807617
    4. ' ' → logprob: -12.252012252807617
    5. '10' → logprob: -12.502012252807617
    6. '7' → logprob: -13.252012252807617
    7. '4' → logprob: -13.252012252807617
    8. '[' → logprob: -13.627012252807617
    9. '3' → logprob: -13.752012252807617
    10. '(map' → logprob: -14.127012252807617

Token 151: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0022988244891166687
    2. '(input' → logprob: -6.502298831939697
    3. '(' → logprob: -7.877298831939697
    4. 'int' → logprob: -8.127298355102539
    5. 'input' → logprob: -9.377298355102539
    6. '(str' → logprob: -10.377298355102539
    7. '=int' → logprob: -13.627298355102539
    8. '```' → logprob: -13.877298355102539
    9. '<int' → logprob: -14.252298355102539
    10. 'list' → logprob: -14.627298355102539

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0969158262014389
    2. ',input' → logprob: -2.4719157218933105
    3. 'input' → logprob: -4.8469157218933105
    4. '(input' → logprob: -9.721916198730469
    5. ' ,' → logprob: -10.971916198730469
    6. ' input' → logprob: -11.721916198730469
    7. ',int' → logprob: -13.096916198730469
    8. '(),' → logprob: -13.971916198730469
    9. '=input' → logprob: -13.971916198730469
    10. '(' → logprob: -14.221916198730469

Token 153: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019286326132714748
    2. ' input' → logprob: -6.251928806304932
    3. '=input' → logprob: -18.626928329467773
    4. '   ' → logprob: -19.376928329467773
    5. '(input' → logprob: -20.501928329467773
    6. '<input' → logprob: -20.876928329467773
    7. 'str' → logprob: -21.126928329467773
    8. '	input' → logprob: -21.126928329467773
    9. ',input' → logprob: -21.501928329467773
    10. 'int' → logprob: -22.126928329467773

Token 154: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00103686039801687
    2. '()' → logprob: -6.876036643981934
    3. '())' → logprob: -12.876036643981934
    4. '().'' → logprob: -15.376036643981934
    5. ' ().' → logprob: -15.501036643981934
    6. '()
' → logprob: -15.501036643981934
    7. '("' → logprob: -15.876036643981934
    8. '()='' → logprob: -16.00103759765625
    9. '());' → logprob: -16.25103759765625
    10. '('' → logprob: -16.25103759765625

Token 155: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.517272024415433e-05
    2. 'strip' → logprob: -9.500075340270996
    3. ' split' → logprob: -15.875075340270996
    4. 'rstrip' → logprob: -17.00007438659668
    5. '(split' → logprob: -17.87507438659668
    6. '().' → logprob: -19.50007438659668
    7. '.split' → logprob: -20.37507438659668
    8. 'spl' → logprob: -21.25007438659668
    9. 'read' → logprob: -21.37507438659668
    10. '```' → logprob: -21.87507438659668

Token 156: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1394435614347458
    2. ')' → logprob: -2.1394436359405518
    3. '()' → logprob: -4.389443397521973
    4. '())
' → logprob: -11.014443397521973
    5. '('' → logprob: -13.014443397521973
    6. '')' → logprob: -13.014443397521973
    7. '(' → logprob: -13.389443397521973
    8. '))' → logprob: -13.639443397521973
    9. '().' → logprob: -13.639443397521973
    10. ' ())' → logprob: -13.764443397521973

Token 157: '   ' (ID: 271)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.3635943830013275
    2. '   ' → logprob: -1.48859441280365
    3. ' sx' → logprob: -2.7385942935943604
    4. 'px' → logprob: -4.9885945320129395
    5. 's' → logprob: -5.1135945320129395
    6. ' px' → logprob: -6.9885945320129395
    7. '	s' → logprob: -8.988594055175781
    8. '    
' → logprob: -9.113594055175781
    9. 'x' → logprob: -9.113594055175781
    10. '```' → logprob: -9.738594055175781

Token 158: ' sx' (ID: 39428)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' (adapté à ' sx') → logprob: -0.0004496189649216831
    2. '   ' → logprob: -8.500449180603027
    3. ' sx' → logprob: -8.625449180603027
    4. 's' → logprob: -10.000449180603027
    5. 'px' → logprob: -11.250449180603027
    6. '```' → logprob: -12.875449180603027
    7. 'import' → logprob: -13.125449180603027
    8. '  ' → logprob: -14.500449180603027
    9. '    
' → logprob: -14.875449180603027
    10. 'mx' → logprob: -15.125449180603027

Token 159: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38696590065956116
    2. ' =' → logprob: -1.1369658708572388
    3. '=[]' → logprob: -9.38696575164795
    4. ',' → logprob: -11.63696575164795
    5. '=[]
' → logprob: -14.88696575164795
    6. '=[' → logprob: -14.88696575164795
    7. '[' → logprob: -15.01196575164795
    8. ' =[' → logprob: -15.51196575164795
    9. 's' → logprob: -15.63696575164795
    10. '＝' → logprob: -15.76196575164795

Token 160: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08594275265932083
    2. '[s' → logprob: -2.8359427452087402
    3. ' [' → logprob: -4.58594274520874
    4. '[]' → logprob: -4.83594274520874
    5. '[array' → logprob: -6.33594274520874
    6. '[int' → logprob: -6.71094274520874
    7. '[str' → logprob: -7.21094274520874
    8. '[input' → logprob: -7.83594274520874
    9. '[list' → logprob: -8.085943222045898
    10. '[col' → logprob: -8.335943222045898

Token 161: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05365626886487007
    2. ' for' → logprob: -3.0536563396453857
    3. '   ' → logprob: -5.303656101226807
    4. '	for' → logprob: -9.678656578063965
    5. '[' → logprob: -11.428656578063965
    6. '[]' → logprob: -12.178656578063965
    7. '[
' → logprob: -13.303656578063965
    8. '[]
' → logprob: -13.928656578063965
    9. '
' → logprob: -14.803656578063965
    10. '[i' → logprob: -15.303656578063965

Token 162: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02976912073791027
    2. ' for' → logprob: -3.5297691822052
    3. '[' → logprob: -11.654768943786621
    4. '   ' → logprob: -12.029768943786621
    5. ' [' → logprob: -12.779768943786621
    6. '[s' → logprob: -15.279768943786621
    7. 'range' → logprob: -15.404768943786621
    8. '[
' → logprob: -16.029769897460938
    9. '[i' → logprob: -16.154769897460938
    10. 's' → logprob: -16.279769897460938

Token 163: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -3.607391408877447e-05
    2. ' _' → logprob: -10.375036239624023
    3. '_i' → logprob: -12.375036239624023
    4. '_j' → logprob: -15.250036239624023
    5. '_range' → logprob: -15.500036239624023
    6. '_in' → logprob: -16.375036239624023
    7. 'i' → logprob: -17.750036239624023
    8. '_s' → logprob: -17.750036239624023
    9. '_=' → logprob: -18.250036239624023
    10. '_input' → logprob: -18.375036239624023

Token 164: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026707211509346962
    2. 'in' → logprob: -3.651707172393799
    3. '_' → logprob: -8.401707649230957
    4. 'n' → logprob: -8.776707649230957
    5. ' ' → logprob: -11.651707649230957
    6. '   ' → logprob: -12.151707649230957
    7. 'range' → logprob: -12.776707649230957
    8. 's' → logprob: -13.026707649230957
    9. ' _' → logprob: -13.651707649230957
    10. '0' → logprob: -13.651707649230957

Token 165: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019298245897516608
    2. ' range' → logprob: -6.251929759979248
    3. 'm' → logprob: -14.876930236816406
    4. 'in' → logprob: -15.501930236816406
    5. ' ' → logprob: -15.501930236816406
    6. 'r' → logprob: -16.626930236816406
    7. '   ' → logprob: -16.626930236816406
    8. ')' → logprob: -17.001930236816406
    9. 'rang' → logprob: -17.001930236816406
    10. '0' → logprob: -17.126930236816406

Token 166: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.003191970521584153
    2. 'm' → logprob: -5.753191947937012
    3. '(' → logprob: -11.503191947937012
    4. ' m' → logprob: -12.628191947937012
    5. 'range' → logprob: -14.753191947937012
    6. '(int' → logprob: -15.628191947937012
    7. '(range' → logprob: -16.128192901611328
    8. '	m' → logprob: -16.503192901611328
    9. '(n' → logprob: -16.753192901611328
    10. ' (' → logprob: -16.753192901611328

Token 167: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05086452513933182
    2. '):' → logprob: -3.1758644580841064
    3. '   ' → logprob: -5.4258646965026855
    4. ')' → logprob: -6.1758646965026855
    5. ':
' → logprob: -7.3008646965026855
    6. ':' → logprob: -8.175864219665527
    7. '():
' → logprob: -8.800864219665527
    8. '):
' → logprob: -8.800864219665527
    9. ',' → logprob: -10.300864219665527
    10. '       ' → logprob: -10.925864219665527

Token 168: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3216935694217682
    2. '   ' → logprob: -1.3216935396194458
    3. ' s' → logprob: -5.196693420410156
    4. '    ' → logprob: -7.321693420410156
    5. 's' → logprob: -7.696693420410156
    6. '	   ' → logprob: -8.446693420410156
    7. '	s' → logprob: -8.571693420410156
    8. 'x' → logprob: -8.946693420410156
    9. ' sx' → logprob: -9.196693420410156
    10. ' x' → logprob: -9.446693420410156

Token 169: ' arr' (ID: 1724)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6823781728744507
    2. '   ' → logprob: -1.6823781728744507
    3. 'sx' → logprob: -1.6823781728744507
    4. ' sx' → logprob: -2.0573782920837402
    5. 'lst' → logprob: -2.1823782920837402
    6. 'list' → logprob: -2.9323782920837402
    7. ' lst' → logprob: -2.9323782920837402
    8. ' list' → logprob: -3.0573782920837402
    9. ' s' → logprob: -4.18237829208374
    10. 'l' → logprob: -5.05737829208374

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08895320445299149
    2. '=' → logprob: -2.4639532566070557
    3. '   ' → logprob: -12.588953018188477
    4. '=input' → logprob: -12.713953018188477
    5. '.append' → logprob: -13.088953018188477
    6. '=list' → logprob: -13.463953018188477
    7. '(' → logprob: -13.963953018188477
    8. ' ' → logprob: -14.463953018188477
    9. '=[]' → logprob: -14.838953018188477
    10. '_' → logprob: -14.963953018188477

Token 171: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0015030752401798964
    2. ' list' → logprob: -6.501502990722656
    3. '[list' → logprob: -14.626502990722656
    4. '   ' → logprob: -15.876502990722656
    5. '[' → logprob: -16.126502990722656
    6. '	list' → logprob: -16.501502990722656
    7. '[]' → logprob: -18.001502990722656
    8. '=list' → logprob: -18.251502990722656
    9. '  ' → logprob: -18.876502990722656
    10. '(list' → logprob: -19.001502990722656

Token 172: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.1008713702030946e-06
    2. 'map' → logprob: -13.500001907348633
    3. '(' → logprob: -14.250001907348633
    4. '(int' → logprob: -17.500001907348633
    5. '.map' → logprob: -19.250001907348633
    6. '()' → logprob: -19.625001907348633
    7. '	map' → logprob: -19.875001907348633
    8. ' map' → logprob: -20.000001907348633
    9. '(range' → logprob: -20.375001907348633
    10. ',map' → logprob: -20.375001907348633

Token 173: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.038065019994974136
    2. 'int' → logprob: -3.288064956665039
    3. ',int' → logprob: -11.413064956665039
    4. '[int' → logprob: -11.913064956665039
    5. ' int' → logprob: -13.163064956665039
    6. '=int' → logprob: -13.538064956665039
    7. ')' → logprob: -14.538064956665039
    8. '<int' → logprob: -14.663064956665039
    9. 'input' → logprob: -14.663064956665039
    10. '```' → logprob: -14.663064956665039

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.194552943110466
    2. ',input' → logprob: -1.9445528984069824
    3. '(input' → logprob: -3.4445528984069824
    4. 'input' → logprob: -7.194552898406982
    5. '(' → logprob: -7.319552898406982
    6. '(),' → logprob: -8.06955337524414
    7. ' ,' → logprob: -9.56955337524414
    8. '=input' → logprob: -11.94455337524414
    9. '   ' → logprob: -12.31955337524414
    10. ',int' → logprob: -12.81955337524414

Token 175: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0004307884373702109
    2. ' input' → logprob: -7.750430583953857
    3. '   ' → logprob: -18.250431060791016
    4. ')' → logprob: -19.500431060791016
    5. ',input' → logprob: -19.750431060791016
    6. '(input' → logprob: -19.875431060791016
    7. 'int' → logprob: -20.000431060791016
    8. '           ' → logprob: -20.000431060791016
    9. ' ' → logprob: -20.500431060791016
    10. '_input' → logprob: -20.625431060791016

Token 176: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.080963092041202e-06
    2. '()' → logprob: -12.375004768371582
    3. '.split' → logprob: -14.875004768371582
    4. '(' → logprob: -15.500004768371582
    5. ' ().' → logprob: -15.875004768371582
    6. '   ' → logprob: -16.1250057220459
    7. ' .' → logprob: -17.2500057220459
    8. '.readline' → logprob: -17.6250057220459
    9. '.' → logprob: -18.1250057220459
    10. 'split' → logprob: -18.1250057220459

Token 177: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011840384686365724
    2. 'strip' → logprob: -6.751183986663818
    3. 'rstrip' → logprob: -11.251184463500977
    4. 'str' → logprob: -15.126184463500977
    5. 'read' → logprob: -15.376184463500977
    6. '(split' → logprob: -15.626184463500977
    7. ' split' → logprob: -16.501184463500977
    8. '.split' → logprob: -17.876184463500977
    9. 'spl' → logprob: -17.876184463500977
    10. 'plit' → logprob: -18.126184463500977

Token 178: '()))
' (ID: 24521)
  Prédit: '()['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.49417126178741455
    2. '()))' → logprob: -0.9941712617874146
    3. '()))
' → logprob: -3.994171142578125
    4. '()' → logprob: -6.744171142578125
    5. '))' → logprob: -9.119171142578125
    6. '())[' → logprob: -9.619171142578125
    7. '[' → logprob: -10.869171142578125
    8. '()))

' → logprob: -11.119171142578125
    9. '(' → logprob: -11.244171142578125
    10. '()
' → logprob: -11.494171142578125

Token 179: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10388795286417007
    2. '   ' → logprob: -2.4788880348205566
    3. '[' → logprob: -5.478888034820557
    4. 'sx' → logprob: -6.103888034820557
    5. '(s' → logprob: -6.228888034820557
    6. '(' → logprob: -6.603888034820557
    7. 's' → logprob: -6.728888034820557
    8. 'arr' → logprob: -7.353888034820557
    9. '[s' → logprob: -7.853888034820557
    10. '(n' → logprob: -7.853888034820557

Token 180: ' ls' (ID: 41498)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.6850027441978455
    2. ' sx' → logprob: -1.1850028038024902
    3. '       ' → logprob: -2.0600028038024902
    4. 'arr' → logprob: -4.31000280380249
    5. ' k' → logprob: -4.43500280380249
    6. '   ' → logprob: -4.43500280380249
    7. 's' → logprob: -4.56000280380249
    8. 'k' → logprob: -5.81000280380249
    9. 'n' → logprob: -6.31000280380249
    10. ' arr' → logprob: -6.56000280380249

Token 181: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29101887345314026
    2. '.append' → logprob: -2.0410189628601074
    3. ' =' → logprob: -3.2910189628601074
    4. 'arr' → logprob: -3.4160189628601074
    5. 't' → logprob: -3.7910189628601074
    6. '_' → logprob: -5.041018962860107
    7. '_arr' → logprob: -5.291018962860107
    8. 'st' → logprob: -5.541018962860107
    9. 'ist' → logprob: -6.291018962860107
    10. 's' → logprob: -6.416018962860107

Token 182: ' [' (ID: 723)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.008771981112658978
    2. '[arr' → logprob: -5.508771896362305
    3. ' arr' → logprob: -5.883771896362305
    4. '[' → logprob: -6.383771896362305
    5. ' [' → logprob: -8.758771896362305
    6. 'list' → logprob: -11.383771896362305
    7. '(arr' → logprob: -11.383771896362305
    8. '	arr' → logprob: -12.008771896362305
    9. '   ' → logprob: -12.258771896362305
    10. '[]' → logprob: -12.758771896362305

Token 183: '0' (ID: 15)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.32288557291030884
    2. 'int' → logprob: -1.947885513305664
    3. 'x' → logprob: -2.322885513305664
    4. '1' → logprob: -4.322885513305664
    5. 'j' → logprob: -4.322885513305664
    6. '0' → logprob: -5.822885513305664
    7. 'idx' → logprob: -6.197885513305664
    8. 'i' → logprob: -7.447885513305664
    9. 'k' → logprob: -7.572885513305664
    10. '(' → logprob: -7.697885513305664

Token 184: ']*' (ID: 18579)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6370896697044373
    2. ']' → logprob: -1.387089729309082
    3. ' for' → logprob: -1.762089729309082
    4. 'if' → logprob: -3.887089729309082
    5. 'for' → logprob: -4.262089729309082
    6. ']*' → logprob: -5.012089729309082
    7. ']*(' → logprob: -5.887089729309082
    8. ']+' → logprob: -6.137089729309082
    9. ',' → logprob: -7.012089729309082
    10. '   ' → logprob: -7.137089729309082

Token 185: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005330758634954691
    2. '(n' → logprob: -5.255330562591553
    3. ' n' → logprob: -9.880331039428711
    4. '(' → logprob: -10.380331039428711
    5. ' (' → logprob: -11.630331039428711
    6. '20' → logprob: -13.755331039428711
    7. '   ' → logprob: -13.880331039428711
    8. 'm' → logprob: -13.880331039428711
    9. '10' → logprob: -14.880331039428711
    10. '(m' → logprob: -15.005331039428711

Token 186: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19983983039855957
    2. '<|end|>' → logprob: -2.4498398303985596
    3. '
' → logprob: -2.5748398303985596
    4. ' for' → logprob: -4.9498395919799805
    5. ' ' → logprob: -5.6998395919799805
    6. '   ' → logprob: -5.6998395919799805
    7. '<|end|>' → logprob: -7.0748395919799805
    8. '[' → logprob: -7.4498395919799805
    9. 'for' → logprob: -7.4498395919799805
    10. '	' → logprob: -7.9498395919799805

Token 187: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 188: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3903809189796448
    2. 'for' → logprob: -1.140380859375
    3. '	for' → logprob: -5.890380859375
    4. '   ' → logprob: -7.265380859375
    5. 'j' → logprob: -11.390380859375
    6. '       ' → logprob: -11.765380859375
    7. ' ' → logprob: -11.890380859375
    8. '\t' → logprob: -13.140380859375
    9. ' j' → logprob: -13.140380859375
    10. '    ' → logprob: -13.515380859375

Token 189: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47416403889656067
    2. 'for' → logprob: -0.9741640090942383
    3. ' j' → logprob: -10.849164009094238
    4. '	for' → logprob: -11.099164009094238
    5. 'indices' → logprob: -11.599164009094238
    6. 'j' → logprob: -11.974164009094238
    7. ' indices' → logprob: -11.974164009094238
    8. ' idx' → logprob: -12.599164009094238
    9. ' _' → logprob: -12.724164009094238
    10. '   ' → logprob: -12.724164009094238

Token 190: ' ignore' (ID: 17887)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11523428559303284
    2. 'for' → logprob: -2.240234375
    3. '   ' → logprob: -7.365234375
    4. ' j' → logprob: -7.740234375
    5. ' ' → logprob: -8.615234375
    6. '       ' → logprob: -8.865234375
    7. '	for' → logprob: -8.865234375
    8. ' t' → logprob: -8.865234375
    9. ' ' → logprob: -9.115234375
    10. '	   ' → logprob: -9.365234375

Token 191: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.4396930932998657
    2. ' _' → logprob: -1.6896930932998657
    3. ' for' → logprob: -1.6896930932998657
    4. '_' → logprob: -1.9396930932998657
    5. 'for' → logprob: -2.689692974090576
    6. ' ' → logprob: -3.064692974090576
    7. 's' → logprob: -4.064692974090576
    8. ' s' → logprob: -4.064692974090576
    9. ' j' → logprob: -4.064692974090576
    10. ' arr' → logprob: -4.189692974090576

Token 192: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23491016030311584
    2. '[arr' → logprob: -2.609910249710083
    3. '<|end|>' → logprob: -2.859910249710083
    4. '[:' → logprob: -3.609910249710083
    5. '[i' → logprob: -3.734910249710083
    6. '[line' → logprob: -5.734910011291504
    7. '[ind' → logprob: -5.734910011291504
    8. '[n' → logprob: -5.859910011291504
    9. '[len' → logprob: -5.984910011291504
    10. '[:-' → logprob: -5.984910011291504

Token 193: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022550527937710285
    2. '1' → logprob: -6.127254962921143
    3. ' ' → logprob: -9.6272554397583
    4. '   ' → logprob: -13.2522554397583
    5. '
' → logprob: -14.2522554397583
    6. '```' → logprob: -14.6272554397583
    7. ':' → logprob: -15.3772554397583
    8. '[' → logprob: -15.5022554397583
    9. '>' → logprob: -15.5022554397583
    10. '  ' → logprob: -16.627254486083984

Token 194: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003463459899649024
    2. ' ]' → logprob: -5.753463268280029
    3. ']
' → logprob: -8.628463745117188
    4. ':]' → logprob: -10.128463745117188
    5. '[' → logprob: -10.753463745117188
    6. ' :]' → logprob: -11.128463745117188
    7. '],' → logprob: -11.753463745117188
    8. '+' → logprob: -12.253463745117188
    9. ' ]
' → logprob: -12.503463745117188
    10. '1' → logprob: -13.128463745117188

Token 195: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4758879244327545
    2. '   ' → logprob: -1.6008878946304321
    3. '
' → logprob: -3.1008880138397217
    4. '<|end|>' → logprob: -3.2258880138397217
    5. 'for' → logprob: -3.4758880138397217
    6. '[' → logprob: -4.350887775421143
    7. ',' → logprob: -4.475887775421143
    8. '	for' → logprob: -4.975887775421143
    9. ' ,' → logprob: -5.100887775421143
    10. ' ' → logprob: -5.350887775421143

Token 196: 'la' (ID: 1675)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6716910600662231
    2. '1' → logprob: -0.9216910600662231
    3. ' )' → logprob: -3.4216909408569336
    4. ' for' → logprob: -3.5466909408569336
    5. 'for' → logprob: -4.046690940856934
    6. '   ' → logprob: -5.671690940856934
    7. '),' → logprob: -6.046690940856934
    8. ' ' → logprob: -6.671690940856934
    9. ')
' → logprob: -6.796690940856934
    10. ' :' → logprob: -7.421690940856934

Token 197: ' taille' (ID: 41644)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.5047752261161804
    2. 'len' → logprob: -2.504775285720825
    3. 'count' → logprob: -2.754775285720825
    4. ' longueur' → logprob: -2.754775285720825
    5. 'first' → logprob: -3.504775285720825
    6. 't' → logprob: -3.754775285720825
    7. 'long' → logprob: -3.754775285720825
    8. 'tail' → logprob: -4.004775047302246
    9. ' first' → logprob: -4.004775047302246
    10. 'prem' → logprob: -4.129775047302246

Token 198: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.057735953480005264
    2. ' )' → logprob: -3.5577359199523926
    3. '),' → logprob: -4.557735919952393
    4. ',' → logprob: -4.682735919952393
    5. '       ' → logprob: -6.057735919952393
    6. ' ,' → logprob: -6.807735919952393
    7. '   ' → logprob: -7.057735919952393
    8. ')
' → logprob: -7.182735919952393
    9. ' ),' → logprob: -7.682735919952393
    10. 's' → logprob: -7.932735919952393

Token 199: ' ici' (ID: 27994)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10328807681798935
    2. 'for' → logprob: -3.103288173675537
    3. '   ' → logprob: -3.228288173675537
    4. '<|end|>' → logprob: -4.978288173675537
    5. '	for' → logprob: -5.353288173675537
    6. ',' → logprob: -6.978288173675537
    7. '       ' → logprob: -8.103287696838379
    8. '    ' → logprob: -8.978287696838379
    9. ' ' → logprob: -8.978287696838379
    10. ' ,' → logprob: -9.103287696838379

Token 200: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2666567265987396
    2. ' for' → logprob: -1.891656756401062
    3. '<|end|>' → logprob: -3.3916566371917725
    4. '   ' → logprob: -3.7666566371917725
    5. ',' → logprob: -4.641656875610352
    6. 'for' → logprob: -5.266656875610352
    7. '	for' → logprob: -5.516656875610352
    8. '	' → logprob: -5.891656875610352
    9. '	   ' → logprob: -6.891656875610352
    10. ' ' → logprob: -7.141656875610352

Token 201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0652608871459961
    2. ' for' → logprob: -2.940260887145996
    3. '   ' → logprob: -5.190260887145996
    4. '<|end|>' → logprob: -6.190260887145996
    5. '	for' → logprob: -6.690260887145996
    6. 'for' → logprob: -7.565260887145996
    7. '	   ' → logprob: -7.815260887145996
    8. '	' → logprob: -8.565260887145996
    9. ' ' → logprob: -9.190260887145996
    10. ',' → logprob: -9.315260887145996

Token 202: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0487254373729229
    2. ' for' → logprob: -3.0487253665924072
    3. '   ' → logprob: -8.923725128173828
    4. '	for' → logprob: -13.173725128173828
    5. ' ' → logprob: -13.673725128173828
    6. '       ' → logprob: -14.048725128173828
    7. 'arr' → logprob: -14.548725128173828
    8. '    ' → logprob: -15.923725128173828
    9. '
' → logprob: -16.298725128173828
    10. '```' → logprob: -16.423725128173828

Token 203: ' ti' (ID: 2919)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.22850796580314636
    2. 'x' → logprob: -1.9785079956054688
    3. ' j' → logprob: -2.8535079956054688
    4. 'a' → logprob: -5.728507995605469
    5. ' x' → logprob: -5.853507995605469
    6. 'v' → logprob: -6.978507995605469
    7. 'e' → logprob: -8.228507995605469
    8. 'idx' → logprob: -8.478507995605469
    9. 'pos' → logprob: -8.853507995605469
    10. ' v' → logprob: -9.228507995605469

Token 204: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007227989844977856
    2. 'in' → logprob: -7.750722885131836
    3. 'n' → logprob: -8.250722885131836
    4. ' ' → logprob: -11.500722885131836
    5. 's' → logprob: -11.625722885131836
    6. 'x' → logprob: -13.125722885131836
    7. 't' → logprob: -13.375722885131836
    8. '   ' → logprob: -13.500722885131836
    9. '    ' → logprob: -13.875722885131836
    10. 'j' → logprob: -14.375722885131836

Token 205: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.014964384026825428
    2. ' arr' → logprob: -4.264964580535889
    3. 'range' → logprob: -7.764964580535889
    4. ' range' → logprob: -7.889964580535889
    5. '	arr' → logprob: -13.63996410369873
    6. '(arr' → logprob: -14.88996410369873
    7. ' ' → logprob: -16.014965057373047
    8. '[arr' → logprob: -16.889965057373047
    9. '_arr' → logprob: -17.139965057373047
    10. '   ' → logprob: -17.139965057373047

Token 206: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006953967968001962
    2. '(' → logprob: -7.87569522857666
    3. '1' → logprob: -8.87569522857666
    4. ' in' → logprob: -9.75069522857666
    5. '[
' → logprob: -10.37569522857666
    6. ':
' → logprob: -10.62569522857666
    7. ':' → logprob: -11.75069522857666
    8. '   ' → logprob: -12.00069522857666
    9. '[i' → logprob: -12.00069522857666
    10. ' [' → logprob: -12.37569522857666

Token 207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022821188031230122
    2. ' ' → logprob: -9.750227928161621
    3. '[' → logprob: -9.875227928161621
    4. '   ' → logprob: -10.125227928161621
    5. 'range' → logprob: -10.250227928161621
    6. '(' → logprob: -10.375227928161621
    7. ' range' → logprob: -12.375227928161621
    8. '       ' → logprob: -13.375227928161621
    9. ':' → logprob: -13.750227928161621
    10. '2' → logprob: -14.000227928161621

Token 208: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000597712118178606
    2. ':n' → logprob: -8.000597953796387
    3. ']:' → logprob: -8.625597953796387
    4. ' :' → logprob: -9.875597953796387
    5. 'n' → logprob: -12.250597953796387
    6. ':]' → logprob: -12.500597953796387
    7. ':-' → logprob: -12.875597953796387
    8. '   ' → logprob: -12.875597953796387
    9. '():' → logprob: -13.375597953796387
    10. ':],' → logprob: -13.500597953796387

Token 209: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.3145920932292938
    2. ']:
' → logprob: -1.3145921230316162
    3. ']' → logprob: -7.564591884613037
    4. ' ]' → logprob: -7.814591884613037
    5. '       ' → logprob: -8.814592361450195
    6. '           ' → logprob: -9.564592361450195
    7. ']:
' → logprob: -9.564592361450195
    8. '   ' → logprob: -10.564592361450195
    9. ':' → logprob: -10.689592361450195
    10. ']:

' → logprob: -11.314592361450195

Token 210: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021832152269780636
    2. '	       ' → logprob: -7.627183437347412
    3. 'ls' → logprob: -8.002182960510254
    4. '       ' → logprob: -8.252182960510254
    5. '<|end|>' → logprob: -8.377182960510254
    6. '               ' → logprob: -8.752182960510254
    7. '```' → logprob: -9.127182960510254
    8. '		' → logprob: -9.377182960510254
    9. ' ls' → logprob: -9.502182960510254
    10. '
' → logprob: -9.752182960510254

Token 211: ' #' (ID: 1069)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.7039071917533875
    2. ' ls' → logprob: -0.8289071917533875
    3. '           ' → logprob: -2.7039072513580322
    4. '               ' → logprob: -6.828907012939453
    5. '       ' → logprob: -8.078907012939453
    6. '   ' → logprob: -8.703907012939453
    7. '(ls' → logprob: -9.453907012939453
    8. '		' → logprob: -10.203907012939453
    9. ' ' → logprob: -10.453907012939453
    10. '                   ' → logprob: -10.828907012939453

Token 212: ' on' (ID: 402)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.07965604215860367
    2. ' ls' → logprob: -2.5796561241149902
    3. '           ' → logprob: -7.20465612411499
    4. '       ' → logprob: -12.204655647277832
    5. '               ' → logprob: -12.454655647277832
    6. '   ' → logprob: -12.954655647277832
    7. '(ls' → logprob: -12.954655647277832
    8. ' ' → logprob: -13.329655647277832
    9. '_ls' → logprob: -13.579655647277832
    10. 'lst' → logprob: -14.454655647277832

Token 213: ' va' (ID: 3423)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1948270797729492
    2. 'ls' → logprob: -1.6948270797729492
    3. '=' → logprob: -1.9448270797729492
    4. 's' → logprob: -2.569827079772949
    5. ' for' → logprob: -2.694827079772949
    6. '[' → logprob: -2.944827079772949
    7. ' =' → logprob: -3.319827079772949
    8. 'for' → logprob: -3.569827079772949
    9. ' ls' → logprob: -3.694827079772949
    10. '0' → logprob: -4.069827079772949

Token 214: ' essayer' (ID: 92713)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.38823264837265015
    2. ' ls' → logprob: -1.388232707977295
    3. '               ' → logprob: -2.888232707977295
    4. '           ' → logprob: -4.263232707977295
    5. '   ' → logprob: -7.763232707977295
    6. '(ls' → logprob: -8.138232231140137
    7. ' for' → logprob: -8.263232231140137
    8. '            ' → logprob: -8.388232231140137
    9. ' ' → logprob: -8.638232231140137
    10. 'lsi' → logprob: -8.763232231140137

Token 215: ' ça' (ID: 13590)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.393472671508789
    2. ' ls' → logprob: -1.518472671508789
    3. 'ls' → logprob: -1.643472671508789
    4. '           ' → logprob: -1.768472671508789
    5. '               ' → logprob: -2.018472671508789
    6. 'to' → logprob: -3.893472671508789
    7. '   ' → logprob: -4.768472671508789
    8. '```' → logprob: -5.768472671508789
    9. ' ' → logprob: -7.268472671508789
    10. '(ls' → logprob: -7.268472671508789

Token 216: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.037475213408470154
    2. '               ' → logprob: -3.662475109100342
    3. ' ls' → logprob: -5.287475109100342
    4. 'ls' → logprob: -5.662475109100342
    5. ',' → logprob: -7.787475109100342
    6. '
' → logprob: -8.2874755859375
    7. '[' → logprob: -8.5374755859375
    8. '       ' → logprob: -8.6624755859375
    9. '            
' → logprob: -8.6624755859375
    10. '(ls' → logprob: -8.9124755859375

Token 217: ' je' (ID: 1264)
  Prédit: ' ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ls' → logprob: -0.630013644695282
    2. '           ' → logprob: -0.880013644695282
    3. 'ls' → logprob: -3.1300137042999268
    4. '               ' → logprob: -4.880013465881348
    5. '            ' → logprob: -8.130013465881348
    6. '		' → logprob: -8.255013465881348
    7. ' for' → logprob: -8.880013465881348
    8. '(ls' → logprob: -8.880013465881348
    9. ' ' → logprob: -9.505013465881348
    10. '                   ' → logprob: -9.880013465881348

Token 218: ' crois' (ID: 65485)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.266487956047058
    2. '=' → logprob: -1.516487956047058
    3. ' +=' → logprob: -1.891487956047058
    4. '           ' → logprob: -2.2664880752563477
    5. 's' → logprob: -2.5164880752563477
    6. '+=' → logprob: -3.8914880752563477
    7. ' for' → logprob: -4.266488075256348
    8. '       ' → logprob: -4.516488075256348
    9. ' s' → logprob: -4.516488075256348
    10. ' ' → logprob: -4.766488075256348

Token 219: ' que' (ID: 661)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004980543162673712
    2. ' ls' → logprob: -6.254980564117432
    3. '       ' → logprob: -6.629980564117432
    4. 'ls' → logprob: -7.129980564117432
    5. '               ' → logprob: -7.879980564117432
    6. '   ' → logprob: -9.379980087280273
    7. '<|end|>' → logprob: -9.379980087280273
    8. ',' → logprob: -9.629980087280273
    9. '
' → logprob: -10.254980087280273
    10. '```' → logprob: -10.379980087280273

Token 220: ' c' (ID: 274)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.42985013127326965
    2. ' ls' → logprob: -1.0548501014709473
    3. '           ' → logprob: -7.554850101470947
    4. '               ' → logprob: -7.554850101470947
    5. '(ls' → logprob: -9.929850578308105
    6. '_ls' → logprob: -10.929850578308105
    7. '            ' → logprob: -12.304850578308105
    8. 'lst' → logprob: -12.304850578308105
    9. 'ms' → logprob: -12.429850578308105
    10. '                   ' → logprob: -12.554850578308105

Token 221: ''est' (ID: 6616)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.033635787665843964
    2. '       ' → logprob: -5.15863561630249
    3. 'ls' → logprob: -5.40863561630249
    4. 's' → logprob: -5.78363561630249
    5. '=' → logprob: -5.90863561630249
    6. '               ' → logprob: -6.03363561630249
    7. ' +=' → logprob: -6.03363561630249
    8. ' =' → logprob: -6.65863561630249
    9. '   ' → logprob: -6.65863561630249
    10. '          ' → logprob: -6.78363561630249

Token 222: ' bon' (ID: 4846)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1105972528457642
    2. '           ' → logprob: -1.1105972528457642
    3. 'ls' → logprob: -1.6105972528457642
    4. ' ls' → logprob: -2.8605971336364746
    5. '0' → logprob: -3.4855971336364746
    6. '               ' → logprob: -3.8605971336364746
    7. ' ' → logprob: -4.735597133636475
    8. '```' → logprob: -6.235597133636475
    9. '(ls' → logprob: -6.360597133636475
    10. '   ' → logprob: -6.485597133636475

Token 223: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04023788124322891
    2. ' ls' → logprob: -4.290237903594971
    3. '       ' → logprob: -4.415237903594971
    4. 'ls' → logprob: -5.165237903594971
    5. '<|end|>' → logprob: -6.415237903594971
    6. '	       ' → logprob: -6.790237903594971
    7. '               ' → logprob: -6.790237903594971
    8. '		' → logprob: -6.915237903594971
    9. '   ' → logprob: -7.915237903594971
    10. '	' → logprob: -8.040237426757812

Token 224: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09108076989650726
    2. ' ls' → logprob: -2.841080665588379
    3. 'ls' → logprob: -3.966080665588379
    4. '		' → logprob: -5.841080665588379
    5. '               ' → logprob: -6.216080665588379
    6. '	       ' → logprob: -6.591080665588379
    7. '		   ' → logprob: -7.591080665588379
    8. '	' → logprob: -7.966080665588379
    9. '       ' → logprob: -7.966080665588379
    10. '(ls' → logprob: -8.091080665588379

Token 225: ' ls' (ID: 41498)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ls' (adapté à ' ls') → logprob: -0.15731358528137207
    2. ' ls' → logprob: -2.407313585281372
    3. '           ' → logprob: -2.907313585281372
    4. '               ' → logprob: -7.782313346862793
    5. '(ls' → logprob: -9.407313346862793
    6. '   ' → logprob: -9.657313346862793
    7. ' for' → logprob: -10.157313346862793
    8. 'for' → logprob: -10.282313346862793
    9. 'lst' → logprob: -10.407313346862793
    10. ' ' → logprob: -10.532313346862793

Token 226: '[n' (ID: 15433)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -5.796184723294573e-06
    2. '[int' → logprob: -13.000005722045898
    3. 'ti' → logprob: -13.125005722045898
    4. '	ti' → logprob: -14.750005722045898
    5. '[t' → logprob: -15.000005722045898
    6. ' [' → logprob: -15.500005722045898
    7. ' ti' → logprob: -16.3750057220459
    8. '[
' → logprob: -16.7500057220459
    9. '[temp' → logprob: -17.0000057220459
    10. '```' → logprob: -17.0000057220459

Token 227: '-ti' (ID: 178416)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22634370625019073
    2. '-ti' → logprob: -2.1013436317443848
    3. ' -' → logprob: -2.6013436317443848
    4. 'ti' → logprob: -5.726343631744385
    5. '-t' → logprob: -5.976343631744385
    6. '	ti' → logprob: -9.476344108581543
    7. ' ' → logprob: -9.851344108581543
    8. ' -=' → logprob: -10.101344108581543
    9. ' ti' → logprob: -10.101344108581543
    10. '-=' → logprob: -10.601344108581543

Token 228: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0026516327634453773
    2. ']=' → logprob: -6.127651691436768
    3. '-' → logprob: -8.00265121459961
    4. ' ]' → logprob: -9.25265121459961
    5. ']+=' → logprob: -10.62765121459961
    6. ' -' → logprob: -12.37765121459961
    7. '=' → logprob: -13.37765121459961
    8. 'n' → logprob: -13.50265121459961
    9. '|' → logprob: -14.00265121459961
    10. '1' → logprob: -14.12765121459961

Token 229: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07287108898162842
    2. ' =' → logprob: -2.697871208190918
    3. ' ^=' → logprob: -6.072871208190918
    4. ' |=' → logprob: -8.072871208190918
    5. '+=' → logprob: -9.072871208190918
    6. ' +=' → logprob: -9.197871208190918
    7. '|' → logprob: -9.697871208190918
    8. ']' → logprob: -11.447871208190918
    9. '^' → logprob: -11.697871208190918
    10. '[' → logprob: -12.072871208190918

Token 230: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.250005722045898
    3. '   ' → logprob: -14.125005722045898
    4. '           ' → logprob: -15.625005722045898
    5. '0' → logprob: -15.750005722045898
    6. '       ' → logprob: -17.0000057220459
    7. '  ' → logprob: -18.3750057220459
    8. 'ls' → logprob: -18.5000057220459
    9. '     ' → logprob: -19.2500057220459
    10. '                   ' → logprob: -19.3750057220459

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '   ' → logprob: -14.500000953674316
    3. '0' → logprob: -15.375000953674316
    4. ' ' → logprob: -15.500000953674316
    5. '           ' → logprob: -17.125001907348633
    6. '
' → logprob: -18.125001907348633
    7. '       ' → logprob: -18.375001907348633
    8. 'ls' → logprob: -18.875001907348633
    9. '  ' → logprob: -19.250001907348633
    10. '     ' → logprob: -19.750001907348633

Token 232: ' <<' (ID: 2256)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 233: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.9343938231468201
    2. 'ti' → logprob: -0.9343938231468201
    3. '(n' → logprob: -1.9343938827514648
    4. '(' → logprob: -2.809393882751465
    5. ' (' → logprob: -5.559393882751465
    6. '0' → logprob: -5.934393882751465
    7. '1' → logprob: -6.559393882751465
    8. ' ti' → logprob: -6.809393882751465
    9. 'n' → logprob: -8.309393882751465
    10. '(s' → logprob: -10.184393882751465

Token 234: 'ti' (ID: 2832)
  Prédit: 'ti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.027387598529458046
    2. '(t' → logprob: -3.6523876190185547
    3. '(n' → logprob: -7.652387619018555
    4. '(' → logprob: -8.027387619018555
    5. 'n' → logprob: -8.277387619018555
    6. ' ti' → logprob: -10.777387619018555
    7. 't' → logprob: -13.152387619018555
    8. '	ti' → logprob: -13.152387619018555
    9. '(m' → logprob: -13.777387619018555
    10. ' (' → logprob: -14.027387619018555

Token 235: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.030170327052474022
    2. ' -' → logprob: -3.530170440673828
    3. ')' → logprob: -7.905170440673828
    4. '-ti' → logprob: -11.155170440673828
    5. 'ti' → logprob: -11.405170440673828
    6. ')-' → logprob: -11.905170440673828
    7. ' )' → logprob: -12.030170440673828
    8. 'n' → logprob: -12.655170440673828
    9. ' ' → logprob: -12.905170440673828
    10. 's' → logprob: -13.280170440673828

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.3213025744771585e-05
    2. '0' → logprob: -11.000033378601074
    3. 'ti' → logprob: -12.000033378601074
    4. ' ' → logprob: -12.125033378601074
    5. '-' → logprob: -12.875033378601074
    6. '2' → logprob: -14.000033378601074
    7. '   ' → logprob: -14.625033378601074
    8. '(' → logprob: -15.250033378601074
    9. '
' → logprob: -16.437532424926758
    10. 'n' → logprob: -16.437532424926758

Token 237: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003218766360078007
    2. '       ' → logprob: -9.000322341918945
    3. ')
' → logprob: -9.000322341918945
    4. ' )' → logprob: -10.375322341918945
    5. '<|end|>' → logprob: -10.875322341918945
    6. '           ' → logprob: -11.250322341918945
    7. '   ' → logprob: -13.000322341918945
    8. '               ' → logprob: -14.000322341918945
    9. ')n' → logprob: -14.125322341918945
    10. ')return' → logprob: -14.250322341918945

Token 238: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 239: ' sx' (ID: 39428)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 240: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.007680446375161409
    2. '.' → logprob: -4.882680416107178
    3. '.app' → logprob: -10.382680892944336
    4. ' .' → logprob: -10.632680892944336
    5. '.extend' → logprob: -11.382680892944336
    6. '.ap' → logprob: -13.007680892944336
    7. '​.' → logprob: -13.382680892944336
    8. 'append' → logprob: -13.507680892944336
    9. '.push' → logprob: -14.257680892944336
    10. '.py' → logprob: -14.507680892944336

Token 241: '(ls' (ID: 128476)
  Prédit: '(ls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ls' → logprob: -0.021094024181365967
    2. 'ls' → logprob: -3.8960940837860107
    3. '(tuple' → logprob: -8.02109432220459
    4. '([' → logprob: -9.39609432220459
    5. '(sum' → logprob: -9.77109432220459
    6. '(' → logprob: -10.14609432220459
    7. 'tuple' → logprob: -10.89609432220459
    8. '(list' → logprob: -11.77109432220459
    9. ' ls' → logprob: -11.89609432220459
    10. 'sum' → logprob: -12.64609432220459

Token 242: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026903904508799314
    2. ')
' → logprob: -6.127690315246582
    3. '<|end|>' → logprob: -9.002690315246582
    4. '   ' → logprob: -9.377690315246582
    5. '[' → logprob: -9.377690315246582
    6. '       ' → logprob: -9.627690315246582
    7. ']' → logprob: -10.252690315246582
    8. '])' → logprob: -10.877690315246582
    9. '[i' → logprob: -11.377690315246582
    10. ')])' → logprob: -11.627690315246582

Token 243: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 244: ' px' (ID: 27003)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 245: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.018151817843317986
    2. ' list' → logprob: -4.018151760101318
    3. '[' → logprob: -13.518152236938477
    4. '[list' → logprob: -14.643152236938477
    5. ' [' → logprob: -17.643152236938477
    6. '[]' → logprob: -17.768152236938477
    7. 'List' → logprob: -18.518152236938477
    8. '=list' → logprob: -18.893152236938477
    9. '(list' → logprob: -19.518152236938477
    10. '.list' → logprob: -21.518152236938477

Token 247: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07920492440462112
    2. 'int' → logprob: -2.57920503616333
    3. ' int' → logprob: -8.829204559326172
    4. '(int' → logprob: -9.579204559326172
    5. ' ' → logprob: -10.079204559326172
    6. '1' → logprob: -10.079204559326172
    7. 'map' → logprob: -12.579204559326172
    8. '   ' → logprob: -12.954204559326172
    9. '[int' → logprob: -12.954204559326172
    10. ']int' → logprob: -13.204204559326172

Token 248: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5170907378196716
    2. '(i' → logprob: -1.0170907974243164
    3. '(input' → logprob: -3.3920907974243164
    4. '()]' → logprob: -5.767090797424316
    5. '(' → logprob: -5.892090797424316
    6. ']' → logprob: -6.267090797424316
    7. '()' → logprob: -9.017090797424316
    8. 'i' → logprob: -9.017090797424316
    9. 'input' → logprob: -9.517090797424316
    10. 'x' → logprob: -9.767090797424316

Token 249: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011543896980583668
    2. ')]' → logprob: -6.87615442276001
    3. '(x' → logprob: -10.126153945922852
    4. ' for' → logprob: -10.876153945922852
    5. ' )' → logprob: -11.376153945922852
    6. 'for' → logprob: -11.376153945922852
    7. ')
' → logprob: -12.001153945922852
    8. '[i' → logprob: -12.376153945922852
    9. '[x' → logprob: -12.501153945922852
    10. '[' → logprob: -12.876153945922852

Token 250: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.582675039768219
    2. 'for' → logprob: -0.832675039768219
    3. '()' → logprob: -5.082674980163574
    4. ')' → logprob: -8.332674980163574
    5. 'input' → logprob: -9.082674980163574
    6. '(' → logprob: -9.332674980163574
    7. 'in' → logprob: -10.957674980163574
    8. ']' → logprob: -11.457674980163574
    9. ' in' → logprob: -11.457674980163574
    10. '=' → logprob: -11.832674980163574

Token 251: ' x' (ID: 1215)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3173900246620178
    2. ' input' → logprob: -1.817389965057373
    3. 'x' → logprob: -2.317389965057373
    4. ' x' → logprob: -4.567389965057373
    5. 'in' → logprob: -7.817389965057373
    6. ' in' → logprob: -8.942390441894531
    7. '_' → logprob: -10.067390441894531
    8. 'range' → logprob: -12.317390441894531
    9. '(x' → logprob: -13.067390441894531
    10. '=input' → logprob: -13.317390441894531

Token 252: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038047224283218384
    2. 'in' → logprob: -3.2880473136901855
    3. 'x' → logprob: -13.038046836853027
    4. 'import' → logprob: -13.413046836853027
    5. 'input' → logprob: -14.163046836853027
    6. 'inx' → logprob: -15.538046836853027
    7. 'n' → logprob: -15.663046836853027
    8. ',' → logprob: -15.663046836853027
    9. ' ' → logprob: -16.163047790527344
    10. 's' → logprob: -16.163047790527344

Token 253: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019286326132714748
    2. ' input' → logprob: -6.251928806304932
    3. 'range' → logprob: -18.876928329467773
    4. '(input' → logprob: -20.376928329467773
    5. '=input' → logprob: -23.126928329467773
    6. '	input' → logprob: -23.751928329467773
    7. ' ' → logprob: -24.376928329467773
    8. ' range' → logprob: -24.376928329467773
    9. 'output' → logprob: -24.751928329467773
    10. '   ' → logprob: -24.876928329467773

Token 254: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.017405379563570023
    2. '.split' → logprob: -4.7674055099487305
    3. ')]' → logprob: -5.0174055099487305
    4. '.' → logprob: -7.1424055099487305
    5. ')' → logprob: -7.7674055099487305
    6. ']' → logprob: -8.14240550994873
    7. '()]' → logprob: -8.26740550994873
    8. 'split' → logprob: -9.14240550994873
    9. ' .' → logprob: -9.64240550994873
    10. '()' → logprob: -10.01740550994873

Token 255: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008619539439678192
    2. 'strip' → logprob: -4.75861930847168
    3. 'rstrip' → logprob: -12.75861930847168
    4. 'read' → logprob: -13.13361930847168
    5. ' split' → logprob: -16.75861930847168
    6. '(split' → logprob: -17.75861930847168
    7. 'replace' → logprob: -18.13361930847168
    8. 'input' → logprob: -18.50861930847168
    9. '.split' → logprob: -20.75861930847168
    10. 'decode' → logprob: -20.88361930847168

Token 256: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0035402015782892704
    2. ')]' → logprob: -6.5035400390625
    3. '())' → logprob: -6.7535400390625
    4. '()' → logprob: -7.2535400390625
    5. ']' → logprob: -8.7535400390625
    6. '()]
' → logprob: -13.0035400390625
    7. ')' → logprob: -15.1285400390625
    8. ']()' → logprob: -15.2535400390625
    9. '()}' → logprob: -15.6285400390625
    10. '')]' → logprob: -15.8785400390625

Token 257: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 258: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00030674142180942
    2. 'result' → logprob: -9.125307083129883
    3. ' print' → logprob: -9.125307083129883
    4. '   ' → logprob: -9.625307083129883
    5. ')' → logprob: -11.750307083129883
    6. 'res' → logprob: -12.500307083129883
    7. '	print' → logprob: -12.750307083129883
    8. 'output' → logprob: -13.375307083129883
    9. '<|end|>' → logprob: -13.375307083129883
    10. '```' → logprob: -13.500307083129883

Token 259: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0018436823738738894
    2. '(' → logprob: -6.626843452453613
    3. 'solve' → logprob: -7.751843452453613
    4. '()' → logprob: -10.001843452453613
    5. '(sol' → logprob: -10.876843452453613
    6. '(solution' → logprob: -11.751843452453613
    7. '(
' → logprob: -12.376843452453613
    8. '(resolve' → logprob: -12.626843452453613
    9. '(res' → logprob: -12.876843452453613
    10. '(sum' → logprob: -13.876843452453613

Token 260: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -7.465036105713807e-06
    2. 'ol' → logprob: -12.500007629394531
    3. '(' → logprob: -13.500007629394531
    4. 'solve' → logprob: -13.500007629394531
    5. 'olv' → logprob: -15.125007629394531
    6. 'olver' → logprob: -15.625007629394531
    7. 'l' → logprob: -15.875007629394531
    8. ')' → logprob: -16.87500762939453
    9. '(x' → logprob: -17.12500762939453
    10. 'ove' → logprob: -17.62500762939453

Token 261: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06206190586090088
    2. '(' → logprob: -2.8120617866516113
    3. ')' → logprob: -10.18706226348877
    4. ' (' → logprob: -10.43706226348877
    5. '(
' → logprob: -11.06206226348877
    6. '((' → logprob: -12.56206226348877
    7. ')(' → logprob: -13.43706226348877
    8. '(len' → logprob: -13.56206226348877
    9. '(None' → logprob: -13.93706226348877
    10. '(s' → logprob: -14.31206226348877

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030284523963928223
    2. ',m' → logprob: -5.878028392791748
    3. ',n' → logprob: -8.628028869628906
    4. ' ,' → logprob: -10.628028869628906
    5. '(n' → logprob: -11.253028869628906
    6. '(m' → logprob: -13.378028869628906
    7. ',p' → logprob: -13.753028869628906
    8. ')' → logprob: -14.003028869628906
    9. '(' → logprob: -14.253028869628906
    10. '   ' → logprob: -14.253028869628906

Token 263: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -7.493430894101039e-05
    2. ' m' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.00007438659668
    4. 'n' → logprob: -17.00007438659668
    5. 'mx' → logprob: -19.12507438659668
    6. '    ' → logprob: -19.62507438659668
    7. '  ' → logprob: -19.62507438659668
    8. ' ' → logprob: -19.75007438659668
    9. '       ' → logprob: -20.37507438659668
    10. '2' → logprob: -20.37507438659668

Token 264: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00047595196519978344
    2. ',n' → logprob: -8.250475883483887
    3. ')' → logprob: -9.125475883483887
    4. ' ,' → logprob: -9.500475883483887
    5. '))' → logprob: -11.125475883483887
    6. ',x' → logprob: -12.125475883483887
    7. ',s' → logprob: -12.500475883483887
    8. '   ' → logprob: -12.500475883483887
    9. '(n' → logprob: -13.625475883483887
    10. ',
' → logprob: -14.375475883483887

Token 265: ' sx' (ID: 39428)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.0004898841143585742
    2. ' sx' → logprob: -7.625489711761475
    3. 'px' → logprob: -14.250490188598633
    4. 's' → logprob: -14.625490188598633
    5. '   ' → logprob: -14.875490188598633
    6. ' ' → logprob: -15.500490188598633
    7. 'collections' → logprob: -16.750490188598633
    8. '  ' → logprob: -17.125490188598633
    9. 'n' → logprob: -17.250490188598633
    10. 'SX' → logprob: -17.875490188598633

Token 266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29225388169288635
    2. '))' → logprob: -1.417253851890564
    3. ')' → logprob: -4.5422539710998535
    4. ',n' → logprob: -8.667253494262695
    5. ',p' → logprob: -9.792253494262695
    6. ',x' → logprob: -10.167253494262695
    7. '))
' → logprob: -10.542253494262695
    8. ',)' → logprob: -10.667253494262695
    9. ')]' → logprob: -11.417253494262695
    10. ')}' → logprob: -11.542253494262695

Token 267: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.0009115827269852161
    2. ' px' → logprob: -7.000911712646484
    3. '(px' → logprob: -16.250911712646484
    4. 'py' → logprob: -19.000911712646484
    5. 'mx' → logprob: -20.375911712646484
    6. '_px' → logprob: -20.500911712646484
    7. ')' → logprob: -20.750911712646484
    8. ' ' → logprob: -21.125911712646484
    9. ':px' → logprob: -21.500911712646484
    10. 'Px' → logprob: -21.625911712646484

Token 268: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.061980459839105606
    2. ')' → logprob: -2.8119804859161377
    3. ')))' → logprob: -12.061980247497559
    4. '))
' → logprob: -12.311980247497559
    5. ')
' → logprob: -14.186980247497559
    6. ')}' → logprob: -14.811980247497559
    7. '])' → logprob: -15.186980247497559
    8. ' )' → logprob: -15.561980247497559
    9. ' ))' → logprob: -15.811980247497559
    10. ')")' → logprob: -15.811980247497559


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 266
Tokens correctement prédits (1ère position, stricte): 91
Tokens correctement prédits (1ère position, avec adaptation): 100
Tokens correctement prédits (top 10): 181
Précision stricte (1ère position): 34.21%
Précision adaptée (1ère position): 37.59%
Précision (top 10): 68.05%
================================================================================
