================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# En hommage à ma passion pour les variables en majuscules et les if ternaires alambiqués !
L, X = [*map(int, input().split())]
fun = lambda a, b: (a // b) ** 3
WEIRD = fun(L, X) + fun(L + (X // 2), X) * (1 if X % 2 == 0 else 0)
print(WEIRD if X % 2 == 0 else fun(L, X))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' En' (ID: 2130)
  → Token d'amorce (pas de prédiction)

Token 2: ' hommage' (ID: 156892)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.029126249253749847
    2. ' à' → logprob: -3.9041261672973633
    3. '_' → logprob: -5.779126167297363
    4. '  ' → logprob: -6.404126167297363
    5. ',' → logprob: -7.029126167297363
    6. 's' → logprob: -7.279126167297363
    7. ' ' → logprob: -8.029126167297363
    8. ' ‌' → logprob: -8.279126167297363
    9. '#' → logprob: -8.654126167297363
    10. ' to' → logprob: -8.654126167297363

Token 4: ' ma' (ID: 831)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.132219672203064
    2. 'la' → logprob: -1.382219672203064
    3. '```' → logprob: -1.882219672203064
    4. 'à' → logprob: -2.5072197914123535
    5. '#' → logprob: -2.8822197914123535
    6. 't' → logprob: -3.0072197914123535
    7. 'nos' → logprob: -4.2572197914123535
    8. 'Nap' → logprob: -4.8822197914123535
    9. 'vous' → logprob: -5.1322197914123535
    10. 'Victor' → logprob: -5.2572197914123535

Token 5: ' passion' (ID: 12066)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.13209840655326843
    2. ' mère' → logprob: -2.257098436355591
    3. 'mé' → logprob: -4.382098197937012
    4. 'fam' → logprob: -5.257098197937012
    5. ' maman' → logprob: -7.507098197937012
    6. '```' → logprob: -8.632098197937012
    7. '   ' → logprob: -8.757098197937012
    8. ' ' → logprob: -9.507098197937012
    9. 'grand' → logprob: -9.632098197937012
    10. 'mam' → logprob: -10.132098197937012

Token 6: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6575847864151001
    2. ',' → logprob: -0.9075847864151001
    3. '\n' → logprob: -4.0325846672058105
    4. '.' → logprob: -4.4075846672058105
    5. '\' → logprob: -4.5325846672058105
    6. ':' → logprob: -4.6575846672058105
    7. ' ' → logprob: -5.1575846672058105
    8. ' #' → logprob: -5.5325846672058105
    9. '!' → logprob: -5.7825846672058105
    10. '```' → logprob: -6.1575846672058105

Token 7: ' les' (ID: 1341)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.914068877696991
    2. 'l' → logprob: -1.5390689373016357
    3. ' la' → logprob: -1.7890689373016357
    4. 'Python' → logprob: -2.1640689373016357
    5. 'le' → logprob: -3.1640689373016357
    6. 'python' → logprob: -3.9140689373016357
    7. ' l' → logprob: -4.039068698883057
    8. 'program' → logprob: -4.914068698883057
    9. ' Python' → logprob: -5.289068698883057
    10. '```' → logprob: -6.164068698883057

Token 8: ' variables' (ID: 13955)
  Prédit: 'je'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'je' → logprob: -0.8584690690040588
    2. 'code' → logprob: -2.358469009399414
    3. 'c' → logprob: -2.733469009399414
    4. 'é' → logprob: -2.983469009399414
    5. 'ch' → logprob: -3.233469009399414
    6. 'program' → logprob: -3.233469009399414
    7. '_' → logprob: -3.358469009399414
    8. ' ' → logprob: -3.983469009399414
    9. 'voy' → logprob: -3.983469009399414
    10. 'python' → logprob: -4.108469009399414

Token 9: ' en' (ID: 469)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.29194411635398865
    2. '_' → logprob: -2.1669440269470215
    3. ',' → logprob: -2.9169440269470215
    4. ' ' → logprob: -3.1669440269470215
    5. 's' → logprob: -4.4169440269470215
    6. '.' → logprob: -5.4169440269470215
    7. ':' → logprob: -5.6669440269470215
    8. 'v' → logprob: -5.9169440269470215
    9. ' #' → logprob: -5.9169440269470215
    10. '\n' → logprob: -5.9169440269470215

Token 10: ' maj' (ID: 15575)
  Prédit: ' programmation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' programmation' → logprob: -0.5266702771186829
    2. 'Python' → logprob: -1.651670217514038
    3. ' Python' → logprob: -2.901670217514038
    4. 'python' → logprob: -3.151670217514038
    5. 'programm' → logprob: -3.776670217514038
    6. 'program' → logprob: -3.901670217514038
    7. ' python' → logprob: -4.151670455932617
    8. ' informatique' → logprob: -4.401670455932617
    9. 'informat' → logprob: -5.401670455932617
    10. '```' → logprob: -5.401670455932617

Token 11: 'us' (ID: 385)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08204790949821472
    2. 'es' → logprob: -3.707047939300537
    3. 'us' → logprob: -3.832047939300537
    4. 'u' → logprob: -4.082047939300537
    5. 'e' → logprob: -4.582047939300537
    6. 'usc' → logprob: -6.082047939300537
    7. '```' → logprob: -7.332047939300537
    8. 'ues' → logprob: -7.707047939300537
    9. 'E' → logprob: -8.082047462463379
    10. '#' → logprob: -8.332047462463379

Token 12: 'cules' (ID: 40805)
  Prédit: 'ES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ES' → logprob: -1.0832109451293945
    2. 'E' → logprob: -1.3332109451293945
    3. 'S' → logprob: -1.9582109451293945
    4. 'es' → logprob: -2.8332109451293945
    5. 'ales' → logprob: -3.2082109451293945
    6. '_es' → logprob: -3.2082109451293945
    7. 'C' → logprob: -3.4582109451293945
    8. 'ALES' → logprob: -3.5832109451293945
    9. '_ES' → logprob: -3.5832109451293945
    10. '```' → logprob: -4.9582109451293945

Token 13: ' et' (ID: 859)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.7269132137298584
    2. 'MA' → logprob: -1.8519132137298584
    3. '```' → logprob: -1.9769132137298584
    4. 'V' → logprob: -2.2269132137298584
    5. 'LET' → logprob: -2.6019132137298584
    6. '_' → logprob: -2.8519132137298584
    7. 'D' → logprob: -2.9769132137298584
    8. 'A' → logprob: -3.1019132137298584
    9. 'CON' → logprob: -3.2269132137298584
    10. 'VARIABLE' → logprob: -3.3519132137298584

Token 14: ' les' (ID: 1341)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8288448452949524
    2. '_l' → logprob: -2.0788447856903076
    3. '_' → logprob: -2.2038447856903076
    4. 'l' → logprob: -2.3288447856903076
    5. 'LE' → logprob: -3.3288447856903076
    6. 'les' → logprob: -3.3288447856903076
    7. '_le' → logprob: -3.9538447856903076
    8. ' l' → logprob: -4.078845024108887
    9. ' #' → logprob: -4.078845024108887
    10. 'leur' → logprob: -4.078845024108887

Token 15: ' if' (ID: 538)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7813056707382202
    2. 'const' → logprob: -1.0313056707382202
    3. 'CON' → logprob: -2.2813057899475098
    4. 'CONST' → logprob: -3.2813057899475098
    5. '_const' → logprob: -4.78130578994751
    6. 'fon' → logprob: -5.28130578994751
    7. '   ' → logprob: -5.78130578994751
    8. ' constantes' → logprob: -5.90630578994751
    9. '```' → logprob: -6.15630578994751
    10. ' CONSTANT' → logprob: -6.15630578994751

Token 16: ' tern' (ID: 81796)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.31921032071113586
    2. '_' → logprob: -2.8192102909088135
    3. '`' → logprob: -2.8192102909088135
    4. ':' → logprob: -3.5692102909088135
    5. 's' → logprob: -3.8192102909088135
    6. '#' → logprob: -4.069210529327393
    7. ',' → logprob: -4.569210529327393
    8. 'I' → logprob: -4.569210529327393
    9. ' ' → logprob: -4.944210529327393
    10. '.' → logprob: -4.944210529327393

Token 17: 'aires' (ID: 8507)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20028632879257202
    2. 'ary' → logprob: -1.8252863883972168
    3. 'ar' → logprob: -4.075286388397217
    4. '?' → logprob: -7.075286388397217
    5. '```' → logprob: -7.325286388397217
    6. 'aire' → logprob: -7.450286388397217
    7. 'naire' → logprob: -7.700286388397217
    8. 's' → logprob: -8.575285911560059
    9. '' → logprob: -9.325285911560059
    10. 'aires' → logprob: -9.450285911560059

Token 18: ' al' (ID: 434)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3578397035598755
    2. ',' → logprob: -1.6078397035598755
    3. '#' → logprob: -2.107839584350586
    4. '```' → logprob: -2.232839584350586
    5. '`' → logprob: -3.107839584350586
    6. ';' → logprob: -3.357839584350586
    7. 'i' → logprob: -3.857839584350586
    8. '.' → logprob: -3.982839584350586
    9. 'C' → logprob: -3.982839584350586
    10. 'E' → logprob: -4.107839584350586

Token 19: 'amb' (ID: 1855)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.1102708578109741
    2. 's' → logprob: -1.6102708578109741
    3. 'a' → logprob: -2.1102709770202637
    4. 'e' → logprob: -2.1102709770202637
    5. 'é' → logprob: -2.7352709770202637
    6. 'l' → logprob: -2.7352709770202637
    7. 'ors' → logprob: -3.2352709770202637
    8. '#' → logprob: -4.610270977020264
    9. 'g' → logprob: -4.735270977020264
    10. 'i' → logprob: -4.985270977020264

Token 20: 'iqu' (ID: 8966)
  Prédit: 'iqu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iqu' → logprob: -0.23408284783363342
    2. 'd' → logprob: -2.4840829372406006
    3. 'ri' → logprob: -3.1090829372406006
    4. 'iques' → logprob: -3.2340829372406006
    5. 'riques' → logprob: -3.7340829372406006
    6. 'iqué' → logprob: -4.8590826988220215
    7. 'dr' → logprob: -5.7340826988220215
    8. 'i' → logprob: -6.2340826988220215
    9. 'igu' → logprob: -6.9840826988220215
    10. 'dq' → logprob: -7.4840826988220215

Token 21: 'és' (ID: 1756)
  Prédit: 'illées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'illées' → logprob: -0.48625364899635315
    2. 'ques' → logprob: -1.6112536191940308
    3. 'ées' → logprob: -2.6112537384033203
    4. 'quées' → logprob: -3.4862537384033203
    5. 'l' → logprob: -3.8612537384033203
    6. 'll' → logprob: -4.36125373840332
    7. 'q' → logprob: -4.36125373840332
    8. 'illés' → logprob: -4.98625373840332
    9. 's' → logprob: -5.86125373840332
    10. 'v' → logprob: -6.23625373840332

Token 22: ' !
' (ID: 27498)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5696806907653809
    2. ',' → logprob: -2.194680690765381
    3. '```' → logprob: -2.194680690765381
    4. '.' → logprob: -2.319680690765381
    5. 'a' → logprob: -2.569680690765381
    6. '#' → logprob: -2.569680690765381
    7. '_' → logprob: -3.194680690765381
    8. ' :' → logprob: -3.444680690765381
    9. '\n' → logprob: -3.569680690765381
    10. 'x' → logprob: -3.569680690765381

Token 23: 'L' (ID: 43)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.19957534968852997
    2. '\n' → logprob: -2.824575424194336
    3. ':' → logprob: -3.824575424194336
    4. '\' → logprob: -3.949575424194336
    5. '.' → logprob: -4.074575424194336
    6. ',' → logprob: -4.324575424194336
    7. '```' → logprob: -4.324575424194336
    8. 'd' → logprob: -5.074575424194336
    9. '`' → logprob: -5.574575424194336
    10. '_' → logprob: -5.949575424194336

Token 24: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5435221195220947
    2. 'e' → logprob: -1.0435221195220947
    3. 'E' → logprob: -3.7935221195220947
    4. 'et' → logprob: -4.793521881103516
    5. 'i' → logprob: -4.918521881103516
    6. 'o' → logprob: -5.543521881103516
    7. '#' → logprob: -5.793521881103516
    8. 'A' → logprob: -6.043521881103516
    9. 'I' → logprob: -6.043521881103516
    10. ''' → logprob: -6.043521881103516

Token 25: ' X' (ID: 2127)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47311002016067505
    2. '=' → logprob: -1.2231099605560303
    3. '_' → logprob: -4.348110198974609
    4. ''' → logprob: -4.348110198974609
    5. ' ' → logprob: -4.348110198974609
    6. ',' → logprob: -4.973110198974609
    7. 'E' → logprob: -4.973110198974609
    8. 'a' → logprob: -5.348110198974609
    9. ')' → logprob: -5.473110198974609
    10. 'I' → logprob: -5.973110198974609

Token 26: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39455321431159973
    2. ' =' → logprob: -1.1445531845092773
    3. ',' → logprob: -4.894553184509277
    4. ')' → logprob: -10.019553184509277
    5. ' ,' → logprob: -10.144553184509277
    6. ' ' → logprob: -10.269553184509277
    7. ' =
' → logprob: -11.394553184509277
    8. 's' → logprob: -11.644553184509277
    9. '_' → logprob: -11.644553184509277
    10. '.' → logprob: -12.769553184509277

Token 27: ' [' (ID: 723)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20949487388134003
    2. '0' → logprob: -2.8344948291778564
    3. '1' → logprob: -3.0844948291778564
    4. '10' → logprob: -3.5844948291778564
    5. '42' → logprob: -5.2094950675964355
    6. '100' → logprob: -5.3344950675964355
    7. '5' → logprob: -5.3344950675964355
    8. ' [],' → logprob: -5.5844950675964355
    9. '3' → logprob: -5.8344950675964355
    10. '[' → logprob: -5.8344950675964355

Token 28: '*' (ID: 9)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5666956305503845
    2. '0' → logprob: -1.5666956901550293
    3. 'i' → logprob: -3.0666956901550293
    4. ']' → logprob: -3.1916956901550293
    5. '10' → logprob: -3.6916956901550293
    6. '3' → logprob: -4.566695690155029
    7. '(' → logprob: -4.566695690155029
    8. '[' → logprob: -4.816695690155029
    9. '100' → logprob: -4.816695690155029
    10. '"' → logprob: -4.941695690155029

Token 29: 'map' (ID: 3726)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011827661655843258
    2. ''' → logprob: -5.26182746887207
    3. '(range' → logprob: -6.26182746887207
    4. ' range' → logprob: -6.38682746887207
    5. '"' → logprob: -6.63682746887207
    6. 'map' → logprob: -7.63682746887207
    7. ''r' → logprob: -7.88682746887207
    8. '[' → logprob: -9.13682746887207
    9. '0' → logprob: -9.38682746887207
    10. 'rang' → logprob: -9.63682746887207

Token 30: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.35890036821365356
    2. '(' → logprob: -1.2339003086090088
    3. '(str' → logprob: -4.983900547027588
    4. '(
' → logprob: -5.858900547027588
    5. '(ord' → logprob: -7.858900547027588
    6. '(lambda' → logprob: -8.98390007019043
    7. 'int' → logprob: -9.60890007019043
    8. '(eval' → logprob: -10.10890007019043
    9. '(float' → logprob: -10.73390007019043
    10. 'str' → logprob: -11.23390007019043

Token 31: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.02427723817527294
    2. 'input' → logprob: -4.274277210235596
    3. '(' → logprob: -5.274277210235596
    4. ')' → logprob: -5.649277210235596
    5. ',input' → logprob: -7.524277210235596
    6. ')]' → logprob: -8.024277687072754
    7. '```' → logprob: -8.524277687072754
    8. '=input' → logprob: -9.399277687072754
    9. ']' → logprob: -9.899277687072754
    10. ',' → logprob: -9.899277687072754

Token 32: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11375356465578079
    2. ' input' → logprob: -2.2387535572052
    3. '(input' → logprob: -7.363753795623779
    4. ',input' → logprob: -9.238753318786621
    5. ')' → logprob: -9.738753318786621
    6. 'open' → logprob: -9.863753318786621
    7. '=input' → logprob: -10.363753318786621
    8. ' open' → logprob: -11.363753318786621
    9. '```' → logprob: -11.738753318786621
    10. '	input' → logprob: -12.488753318786621

Token 33: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.46603766083717346
    2. '()' → logprob: -1.341037631034851
    3. '()]' → logprob: -2.7160377502441406
    4. '().' → logprob: -3.4660377502441406
    5. '(()' → logprob: -4.841037750244141
    6. '(' → logprob: -5.841037750244141
    7. '()))' → logprob: -7.216037750244141
    8. '());' → logprob: -7.216037750244141
    9. '()),' → logprob: -8.21603775024414
    10. ')]' → logprob: -8.71603775024414

Token 34: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0027446041349321604
    2. 'strip' → logprob: -6.002744674682617
    3. 'rstrip' → logprob: -8.627744674682617
    4. ' split' → logprob: -9.502744674682617
    5. 'read' → logprob: -11.627744674682617
    6. ')' → logprob: -13.252744674682617
    7. ' ' → logprob: -13.627744674682617
    8. '(split' → logprob: -14.127744674682617
    9. 'replace' → logprob: -14.127744674682617
    10. 'spl' → logprob: -14.502744674682617

Token 35: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.023262597620487213
    2. '()))' → logprob: -4.2732625007629395
    3. '()' → logprob: -5.0232625007629395
    4. '()]' → logprob: -6.6482625007629395
    5. '(' → logprob: -7.1482625007629395
    6. '('' → logprob: -8.148262977600098
    7. '(()' → logprob: -10.023262977600098
    8. ')]' → logprob: -10.898262977600098
    9. ' ())' → logprob: -11.898262977600098
    10. '())))' → logprob: -11.898262977600098

Token 36: ']
' (ID: 1592)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.009858318604528904
    2. ')])' → logprob: -5.259858131408691
    3. '())' → logprob: -6.134858131408691
    4. ')' → logprob: -6.384858131408691
    5. ')],' → logprob: -7.884858131408691
    6. '()]' → logprob: -8.884858131408691
    7. '()' → logprob: -9.134858131408691
    8. '])' → logprob: -10.509858131408691
    9. '])]' → logprob: -10.759858131408691
    10. ']' → logprob: -11.134858131408691

Token 37: 'fun' (ID: 18142)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9724433422088623
    2. ';' → logprob: -1.8474433422088623
    3. '
' → logprob: -2.4724433422088623
    4. ',' → logprob: -2.9724433422088623
    5. 'for' → logprob: -3.3474433422088623
    6. ' if' → logprob: -3.4724433422088623
    7. 'n' → logprob: -3.5974433422088623
    8. ')' → logprob: -3.7224433422088623
    9. 'x' → logprob: -3.9724433422088623
    10. 's' → logprob: -4.097443580627441

Token 38: ' =' (ID: 314)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05133268982172012
    2. 'ct' → logprob: -3.301332712173462
    3. '(' → logprob: -5.176332473754883
    4. 'ction' → logprob: -5.676332473754883
    5. ' =' → logprob: -6.426332473754883
    6. ' ' → logprob: -7.551332473754883
    7. '_' → logprob: -7.926332473754883
    8. 's' → logprob: -8.176332473754883
    9. '=' → logprob: -8.301332473754883
    10. ')' → logprob: -9.301332473754883

Token 39: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.3541923761367798
    2. '(lambda' → logprob: -1.2291923761367798
    3. ' lambda' → logprob: -6.35419225692749
    4. '(' → logprob: -7.10419225692749
    5. 'X' → logprob: -7.47919225692749
    6. 'max' → logprob: -7.97919225692749
    7. ' (' → logprob: -8.104192733764648
    8. '((' → logprob: -8.604192733764648
    9. '(X' → logprob: -8.604192733764648
    10. '(int' → logprob: -8.604192733764648

Token 40: ' a' (ID: 261)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7596926689147949
    2. 'x' → logprob: -1.634692668914795
    3. ' X' → logprob: -2.259692668914795
    4. 'X' → logprob: -2.884692668914795
    5. ' lambda' → logprob: -3.134692668914795
    6. ' a' → logprob: -3.384692668914795
    7. ' L' → logprob: -3.509692668914795
    8. 'a' → logprob: -4.009692668914795
    9. 'L' → logprob: -4.384692668914795
    10. 'lambda' → logprob: -4.509692668914795

Token 41: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06628311425447464
    2. ':a' → logprob: -3.1912832260131836
    3. ',' → logprob: -4.441283226013184
    4. ',a' → logprob: -5.066283226013184
    5. ' :' → logprob: -5.566283226013184
    6. 'a' → logprob: -8.316283226013184
    7. ',:' → logprob: -8.691283226013184
    8. ':n' → logprob: -9.441283226013184
    9. ',b' → logprob: -9.566283226013184
    10. ':f' → logprob: -9.566283226013184

Token 42: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11879326403141022
    2. ' b' → logprob: -2.243793249130249
    3. 'a' → logprob: -6.243793487548828
    4. 'X' → logprob: -6.993793487548828
    5. 'lambda' → logprob: -7.118793487548828
    6. 'x' → logprob: -7.493793487548828
    7. ' lambda' → logprob: -7.868793487548828
    8. ' a' → logprob: -8.368793487548828
    9. ' X' → logprob: -8.618793487548828
    10. ' ' → logprob: -8.743793487548828

Token 43: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011116202920675278
    2. ':a' → logprob: -5.136116027832031
    3. ' :' → logprob: -5.511116027832031
    4. ':b' → logprob: -7.511116027832031
    5. ':(' → logprob: -9.011116027832031
    6. ',' → logprob: -9.261116027832031
    7. 'a' → logprob: -9.636116027832031
    8. ':f' → logprob: -9.636116027832031
    9. ',:' → logprob: -10.261116027832031
    10. ',a' → logprob: -10.886116027832031

Token 44: ' (' (ID: 350)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6057688593864441
    2. 'a' → logprob: -0.8557688593864441
    3. ' (' → logprob: -4.60576868057251
    4. '(a' → logprob: -4.73076868057251
    5. ' b' → logprob: -6.10576868057251
    6. ' ' → logprob: -6.23076868057251
    7. 'b' → logprob: -6.73076868057251
    8. '(' → logprob: -7.10576868057251
    9. '[a' → logprob: -7.10576868057251
    10. ' max' → logprob: -7.23076868057251

Token 45: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07055128365755081
    2. 'b' → logprob: -3.5705513954162598
    3. ' a' → logprob: -3.5705513954162598
    4. '(a' → logprob: -5.19555139541626
    5. ' b' → logprob: -6.19555139541626
    6. ' (' → logprob: -7.82055139541626
    7. '[a' → logprob: -7.82055139541626
    8. 'max' → logprob: -7.94555139541626
    9. '(' → logprob: -8.070550918579102
    10. '0' → logprob: -8.070550918579102

Token 46: ' //' (ID: 602)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -1.3957823514938354
    2. '+' → logprob: -1.6457823514938354
    3. ' if' → logprob: -1.6457823514938354
    4. '>' → logprob: -2.520782470703125
    5. '*' → logprob: -2.645782470703125
    6. ' +' → logprob: -3.020782470703125
    7. ' %' → logprob: -3.145782470703125
    8. 'if' → logprob: -3.395782470703125
    9. ' >' → logprob: -4.145782470703125
    10. ' *' → logprob: -4.395782470703125

Token 47: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.012794039212167263
    2. ' b' → logprob: -4.512794017791748
    3. '2' → logprob: -7.137794017791748
    4. 'X' → logprob: -8.387794494628906
    5. '(' → logprob: -8.762794494628906
    6. '(b' → logprob: -9.137794494628906
    7. '3' → logprob: -9.512794494628906
    8. ' ' → logprob: -9.512794494628906
    9. 'a' → logprob: -9.637794494628906
    10. ' (' → logprob: -9.762794494628906

Token 48: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5049121975898743
    2. ')' → logprob: -1.7549121379852295
    3. 'if' → logprob: -2.7549121379852295
    4. ',' → logprob: -2.7549121379852295
    5. ' +' → logprob: -3.1299121379852295
    6. '+' → logprob: -3.8799121379852295
    7. ' ' → logprob: -4.629912376403809
    8. '*' → logprob: -4.879912376403809
    9. ' *' → logprob: -5.254912376403809
    10. ' )' → logprob: -5.504912376403809

Token 49: ' **' (ID: 6240)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3936547338962555
    2. 'if' → logprob: -1.518654704093933
    3. ' ' → logprob: -2.5186548233032227
    4. '*' → logprob: -5.143654823303223
    5. ' *' → logprob: -5.518654823303223
    6. ' or' → logprob: -5.643654823303223
    7. '+' → logprob: -6.018654823303223
    8. ',' → logprob: -6.018654823303223
    9. '  ' → logprob: -6.893654823303223
    10. 'or' → logprob: -7.143654823303223

Token 50: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19942410290241241
    2. '3' → logprob: -2.5744240283966064
    3. '(a' → logprob: -3.8244240283966064
    4. 'a' → logprob: -3.9494240283966064
    5. '(L' → logprob: -4.3244242668151855
    6. 'L' → logprob: -4.3244242668151855
    7. '(' → logprob: -4.4494242668151855
    8. 'b' → logprob: -5.0744242668151855
    9. '(X' → logprob: -5.3244242668151855
    10. 'X' → logprob: -5.5744242668151855

Token 51: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.13833487033843994
    2. '3' → logprob: -3.0133347511291504
    3. 'L' → logprob: -3.7633347511291504
    4. '(a' → logprob: -4.26333475112915
    5. 'a' → logprob: -4.63833475112915
    6. '(L' → logprob: -4.88833475112915
    7. 'b' → logprob: -5.01333475112915
    8. 'X' → logprob: -5.13833475112915
    9. '(' → logprob: -6.01333475112915
    10. '(X' → logprob: -6.13833475112915

Token 52: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2223052978515625
    2. ')' → logprob: -1.5973052978515625
    3. '*' → logprob: -1.9723052978515625
    4. ' ' → logprob: -2.0973052978515625
    5. '(' → logprob: -2.4723052978515625
    6. '<|end|>' → logprob: -3.5973052978515625
    7. ' if' → logprob: -3.7223052978515625
    8. 'if' → logprob: -3.7223052978515625
    9. '?' → logprob: -4.0973052978515625
    10. '[' → logprob: -4.7223052978515625

Token 53: 'WE' (ID: 18092)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41511738300323486
    2. 'if' → logprob: -2.1651172637939453
    3. '\n' → logprob: -2.6651172637939453
    4. 'print' → logprob: -3.6651172637939453
    5. '#' → logprob: -4.040117263793945
    6. ' 
' → logprob: -4.040117263793945
    7. ' if' → logprob: -4.290117263793945
    8. '' → logprob: -4.790117263793945
    9. '?' → logprob: -5.040117263793945
    10. ',' → logprob: -5.040117263793945

Token 54: 'IRD' (ID: 86609)
  Prédit: 'IGHT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IGHT' → logprob: -0.16192328929901123
    2. 'IGHTS' → logprob: -2.911923408508301
    3. 'I' → logprob: -3.286923408508301
    4. 'ight' → logprob: -4.411923408508301
    5. 'IRD' → logprob: -4.536923408508301
    6. 'L' → logprob: -4.911923408508301
    7. 'IGH' → logprob: -5.036923408508301
    8. 'D' → logprob: -5.661923408508301
    9. 'AK' → logprob: -5.911923408508301
    10. 'IG' → logprob: -6.536923408508301

Token 55: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04066627845168114
    2. '=' → logprob: -4.415666103363037
    3. ' =' → logprob: -5.665666103363037
    4. ')' → logprob: -6.415666103363037
    5. ' ' → logprob: -6.415666103363037
    6. ' _' → logprob: -6.540666103363037
    7. 'if' → logprob: -6.665666103363037
    8. 'S' → logprob: -6.790666103363037
    9. 'NESS' → logprob: -6.790666103363037
    10. '_FUN' → logprob: -7.040666103363037

Token 56: ' fun' (ID: 2827)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -1.0886198282241821
    2. 'fun' → logprob: -1.7136198282241821
    3. ' (' → logprob: -1.9636198282241821
    4. ' fun' → logprob: -2.0886197090148926
    5. 'L' → logprob: -2.0886197090148926
    6. '(L' → logprob: -3.5886197090148926
    7. '(' → logprob: -4.463619709014893
    8. '(X' → logprob: -4.838619709014893
    9. ' X' → logprob: -4.963619709014893
    10. ' max' → logprob: -4.963619709014893

Token 57: '(L' (ID: 11075)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029035817831754684
    2. '(L' → logprob: -4.404036045074463
    3. '<|end|>' → logprob: -4.529036045074463
    4. '(
' → logprob: -6.404036045074463
    5. '((' → logprob: -7.029036045074463
    6. '(X' → logprob: -7.529036045074463
    7. '(fun' → logprob: -7.779036045074463
    8. ' (' → logprob: -7.904036045074463
    9. ',' → logprob: -9.029035568237305
    10. ' fun' → logprob: -9.029035568237305

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03665122762322426
    2. ' ,' → logprob: -3.411651134490967
    3. ',X' → logprob: -6.286651134490967
    4. 'X' → logprob: -7.661651134490967
    5. ' X' → logprob: -8.286651611328125
    6. '+' → logprob: -9.286651611328125
    7. ' ' → logprob: -9.411651611328125
    8. '-' → logprob: -9.661651611328125
    9. ' -' → logprob: -10.161651611328125
    10. ',L' → logprob: -10.536651611328125

Token 59: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0704810693860054
    2. ' X' → logprob: -2.695481061935425
    3. '2' → logprob: -8.320481300354004
    4. ' ' → logprob: -9.320481300354004
    5. '1' → logprob: -9.445481300354004
    6. '3' → logprob: -9.945481300354004
    7. '7' → logprob: -11.070481300354004
    8. 'L' → logprob: -11.195481300354004
    9. '4' → logprob: -12.007981300354004
    10. 'x' → logprob: -12.070481300354004

Token 60: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021152703266125172
    2. '))' → logprob: -9.500211715698242
    3. ' )' → logprob: -10.250211715698242
    4. ')
' → logprob: -10.625211715698242
    5. 'if' → logprob: -11.125211715698242
    6. ' if' → logprob: -11.625211715698242
    7. ')#' → logprob: -12.000211715698242
    8. '),' → logprob: -12.125211715698242
    9. ')`' → logprob: -12.500211715698242
    10. ')))' → logprob: -12.500211715698242

Token 61: ' +' (ID: 659)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9794398546218872
    2. '%' → logprob: -1.6044398546218872
    3. 'if' → logprob: -1.6044398546218872
    4. '?' → logprob: -1.9794398546218872
    5. '
' → logprob: -3.1044397354125977
    6. '+' → logprob: -4.854439735412598
    7. '<|end|>' → logprob: -5.104439735412598
    8. ' %' → logprob: -5.229439735412598
    9. ' ' → logprob: -5.354439735412598
    10. '*' → logprob: -5.729439735412598

Token 62: ' fun' (ID: 2827)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.19567720592021942
    2. ' fun' → logprob: -2.1956772804260254
    3. ' (' → logprob: -3.8206772804260254
    4. '(' → logprob: -4.195677280426025
    5. '1' → logprob: -4.570677280426025
    6. '(L' → logprob: -4.695677280426025
    7. '(fun' → logprob: -5.820677280426025
    8. ' ' → logprob: -7.070677280426025
    9. '(X' → logprob: -7.195677280426025
    10. 'pow' → logprob: -7.320677280426025

Token 63: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.06848199665546417
    2. '(X' → logprob: -2.943481922149658
    3. '(' → logprob: -4.318481922149658
    4. ' (' → logprob: -10.068482398986816
    5. '((' → logprob: -10.068482398986816
    6. '(l' → logprob: -10.818482398986816
    7. 'X' → logprob: -10.818482398986816
    8. 'L' → logprob: -11.318482398986816
    9. '(B' → logprob: -11.943482398986816
    10. '(
' → logprob: -12.068482398986816

Token 64: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06674322485923767
    2. '-' → logprob: -3.8167431354522705
    3. '+' → logprob: -4.19174337387085
    4. ' -' → logprob: -4.31674337387085
    5. ',X' → logprob: -5.31674337387085
    6. ' +' → logprob: -5.44174337387085
    7. ' ,' → logprob: -6.19174337387085
    8. 'X' → logprob: -7.06674337387085
    9. '-X' → logprob: -7.31674337387085
    10. ',L' → logprob: -8.566742897033691

Token 65: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09152785688638687
    2. 'X' → logprob: -2.7165279388427734
    3. ' X' → logprob: -4.466527938842773
    4. ' ' → logprob: -5.091527938842773
    5. '2' → logprob: -6.091527938842773
    6. '3' → logprob: -7.591527938842773
    7. '(' → logprob: -8.466527938842773
    8. '7' → logprob: -8.841527938842773
    9. ' (' → logprob: -9.091527938842773
    10. 'L' → logprob: -9.591527938842773

Token 66: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.44448426365852356
    2. '1' → logprob: -1.0694842338562012
    3. ' X' → logprob: -5.444484233856201
    4. '2' → logprob: -5.569484233856201
    5. 'L' → logprob: -5.819484233856201
    6. ' ' → logprob: -7.194484233856201
    7. '(' → logprob: -7.319484233856201
    8. '3' → logprob: -7.569484233856201
    9. 'WE' → logprob: -7.694484233856201
    10. ' (' → logprob: -7.944484233856201

Token 67: ' //' (ID: 602)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16262546181678772
    2. '-' → logprob: -2.662625551223755
    3. ' -' → logprob: -3.287625551223755
    4. ' ,' → logprob: -4.162625312805176
    5. '//' → logprob: -4.412625312805176
    6. ' //' → logprob: -5.037625312805176
    7. '>>' → logprob: -6.287625312805176
    8. '+' → logprob: -6.287625312805176
    9. ' +' → logprob: -6.412625312805176
    10. '*' → logprob: -6.912625312805176

Token 68: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.042926106601953506
    2. '3' → logprob: -3.917926073074341
    3. 'L' → logprob: -4.66792631149292
    4. ' ' → logprob: -5.04292631149292
    5. 'X' → logprob: -6.04292631149292
    6. '1' → logprob: -6.41792631149292
    7. '(' → logprob: -7.29292631149292
    8. ' L' → logprob: -8.042925834655762
    9. '4' → logprob: -8.792925834655762
    10. '10' → logprob: -8.792925834655762

Token 69: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10720422118902206
    2. '3' → logprob: -3.1072041988372803
    3. 'L' → logprob: -3.2322041988372803
    4. '1' → logprob: -4.732204437255859
    5. 'X' → logprob: -5.482204437255859
    6. '7' → logprob: -7.357204437255859
    7. '4' → logprob: -7.482204437255859
    8. '5' → logprob: -7.482204437255859
    9. '(' → logprob: -7.482204437255859
    10. '10' → logprob: -7.607204437255859

Token 70: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012365550734102726
    2. '),' → logprob: -4.637365341186523
    3. ' ,' → logprob: -6.137365341186523
    4. ')' → logprob: -8.137365341186523
    5. ',X' → logprob: -9.637365341186523
    6. ' ),' → logprob: -10.262365341186523
    7. ' ' → logprob: -11.887365341186523
    8. ',L' → logprob: -12.137365341186523
    9. '```' → logprob: -12.262365341186523
    10. '   ' → logprob: -12.387365341186523

Token 71: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.06375891715288162
    2. ' X' → logprob: -3.3137588500976562
    3. 'L' → logprob: -4.188758850097656
    4. '2' → logprob: -4.938758850097656
    5. ' L' → logprob: -6.563758850097656
    6. '3' → logprob: -7.563758850097656
    7. ' ' → logprob: -8.188758850097656
    8. '(X' → logprob: -8.313758850097656
    9. '1' → logprob: -8.688758850097656
    10. '(' → logprob: -9.313758850097656

Token 72: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01794259622693062
    2. '))' → logprob: -4.142942428588867
    3. ')))' → logprob: -6.767942428588867
    4. ' )' → logprob: -7.767942428588867
    5. '+' → logprob: -9.892942428588867
    6. ')#' → logprob: -10.767942428588867
    7. ')`' → logprob: -10.892942428588867
    8. '),' → logprob: -11.017942428588867
    9. ')**' → logprob: -11.142942428588867
    10. ')//' → logprob: -11.267942428588867

Token 73: ' *' (ID: 425)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.8560981750488281
    2. '+' → logprob: -1.1060981750488281
    3. '<|end|>' → logprob: -2.356098175048828
    4. ' ' → logprob: -2.856098175048828
    5. '
' → logprob: -3.606098175048828
    6. ')' → logprob: -4.106098175048828
    7. '*' → logprob: -4.231098175048828
    8. '#' → logprob: -4.356098175048828
    9. ' %' → logprob: -5.481098175048828
    10. '-' → logprob: -5.981098175048828

Token 74: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6782712936401367
    2. ' ' → logprob: -1.1782712936401367
    3. '3' → logprob: -1.9282712936401367
    4. '7' → logprob: -4.553271293640137
    5. '8' → logprob: -5.053271293640137
    6. '4' → logprob: -5.303271293640137
    7. ' (' → logprob: -5.428271293640137
    8. '(' → logprob: -5.928271293640137
    9. '6' → logprob: -6.803271293640137
    10. '5' → logprob: -6.928271293640137

Token 75: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0193390846252441
    2. '3' → logprob: -1.7693390846252441
    3. 'L' → logprob: -2.394339084625244
    4. '1' → logprob: -3.019339084625244
    5. 'X' → logprob: -3.019339084625244
    6. ' ' → logprob: -3.144339084625244
    7. '(L' → logprob: -3.269339084625244
    8. '(' → logprob: -3.269339084625244
    9. ' L' → logprob: -3.519339084625244
    10. ' (' → logprob: -3.519339084625244

Token 76: ' if' (ID: 538)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1823606491088867
    2. '%' → logprob: -1.4323606491088867
    3. '+' → logprob: -1.8073606491088867
    4. ' -' → logprob: -2.0573606491088867
    5. ' +' → logprob: -3.1823606491088867
    6. ' %' → logprob: -3.4323606491088867
    7. ' ' → logprob: -4.182360649108887
    8. '*' → logprob: -4.307360649108887
    9. ')' → logprob: -4.307360649108887
    10. '>' → logprob: -4.807360649108887

Token 77: ' X' (ID: 2127)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.5527604818344116
    2. ' (' → logprob: -1.6777604818344116
    3. ' X' → logprob: -2.052760601043701
    4. 'L' → logprob: -3.427760601043701
    5. '(L' → logprob: -3.427760601043701
    6. 'X' → logprob: -4.177760601043701
    7. ' WE' → logprob: -4.927760601043701
    8. '(X' → logprob: -5.302760601043701
    9. 'WE' → logprob: -5.677760601043701
    10. '(' → logprob: -5.927760601043701

Token 78: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.2081704139709473
    2. '>' → logprob: -1.3331704139709473
    3. ' >' → logprob: -1.3331704139709473
    4. ' %' → logprob: -3.2081704139709473
    5. '<' → logprob: -3.9581704139709473
    6. '==' → logprob: -4.333170413970947
    7. ' else' → logprob: -4.333170413970947
    8. ' <' → logprob: -4.333170413970947
    9. '!=' → logprob: -4.333170413970947
    10. ' ' → logprob: -4.458170413970947

Token 79: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6397669315338135
    2. '2' → logprob: -0.7647669315338135
    3. '3' → logprob: -5.139766693115234
    4. '4' → logprob: -7.764766693115234
    5. '1' → logprob: -8.514766693115234
    6. ' (' → logprob: -9.264766693115234
    7. '(' → logprob: -9.514766693115234
    8. '6' → logprob: -9.639766693115234
    9. ' X' → logprob: -9.639766693115234
    10. '10' → logprob: -9.889766693115234

Token 80: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01407571043819189
    2. '3' → logprob: -4.514075756072998
    3. ' ' → logprob: -6.514075756072998
    4. '4' → logprob: -7.139075756072998
    5. '6' → logprob: -8.63907527923584
    6. '7' → logprob: -9.26407527923584
    7. '1' → logprob: -9.51407527923584
    8. '5' → logprob: -9.63907527923584
    9. '10' → logprob: -10.01407527923584
    10. '8' → logprob: -10.13907527923584

Token 81: ' ==' (ID: 951)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3751283586025238
    2. '==' → logprob: -1.5001283884048462
    3. 'else' → logprob: -2.8751282691955566
    4. ' ==' → logprob: -3.7501282691955566
    5. '!=' → logprob: -4.875128269195557
    6. ' !=' → logprob: -6.625128269195557
    7. ' ' → logprob: -7.375128269195557
    8. '>' → logprob: -10.000128746032715
    9. ')' → logprob: -10.125128746032715
    10. '0' → logprob: -11.375128746032715

Token 82: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18908417224884033
    2. ' ' → logprob: -1.8140841722488403
    3. '1' → logprob: -4.689084053039551
    4. '2' → logprob: -10.18908405303955
    5. ' X' → logprob: -10.43908405303955
    6. 'X' → logprob: -11.43908405303955
    7. '  ' → logprob: -12.31408405303955
    8. ' L' → logprob: -12.31408405303955
    9. '3' → logprob: -13.43908405303955
    10. 'L' → logprob: -13.56408405303955

Token 83: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043204713612794876
    2. '2' → logprob: -3.2932047843933105
    3. ' ' → logprob: -5.7932047843933105
    4. '1' → logprob: -6.1682047843933105
    5. 'X' → logprob: -13.793204307556152
    6. '```' → logprob: -13.918204307556152
    7. '3' → logprob: -14.230704307556152
    8. '  ' → logprob: -14.230704307556152
    9. '(' → logprob: -14.793204307556152
    10. '[' → logprob: -15.480704307556152

Token 84: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.03829439356923103
    2. 'else' → logprob: -3.2882943153381348
    3. ')' → logprob: -8.788294792175293
    4. ' ' → logprob: -9.913294792175293
    5. ' )' → logprob: -11.288294792175293
    6. '```' → logprob: -11.413294792175293
    7. '+' → logprob: -12.288294792175293
    8. '-' → logprob: -12.663294792175293
    9. ' els' → logprob: -13.038294792175293
    10. '0' → logprob: -13.038294792175293

Token 85: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.368072271347046
    2. '0' → logprob: -1.368072271347046
    3. '2' → logprob: -1.618072271347046
    4. ' ' → logprob: -2.493072271347046
    5. '(' → logprob: -2.743072271347046
    6. '1' → logprob: -2.743072271347046
    7. '3' → logprob: -2.993072271347046
    8. ' -' → logprob: -4.243072509765625
    9. ' (' → logprob: -4.743072509765625
    10. '(-' → logprob: -5.993072509765625

Token 86: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8824206590652466
    2. '2' → logprob: -1.3824206590652466
    3. '0' → logprob: -1.7574206590652466
    4. '3' → logprob: -2.757420539855957
    5. '1' → logprob: -2.882420539855957
    6. '(' → logprob: -4.132420539855957
    7. ' ' → logprob: -4.507420539855957
    8. '(-' → logprob: -5.382420539855957
    9. ' -' → logprob: -5.757420539855957
    10. 'fun' → logprob: -6.632420539855957

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003685861302074045
    2. ' )' → logprob: -8.250368118286133
    3. '+' → logprob: -10.500368118286133
    4. '))' → logprob: -10.625368118286133
    5. ')
' → logprob: -11.000368118286133
    6. '**' → logprob: -11.625368118286133
    7. '*' → logprob: -12.375368118286133
    8. ')#' → logprob: -12.375368118286133
    9. '0' → logprob: -12.750368118286133
    10. '1' → logprob: -12.875368118286133

Token 88: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03870503976941109
    2. '#' → logprob: -4.538704872131348
    3. '
' → logprob: -4.788704872131348
    4. ')' → logprob: -4.788704872131348
    5. '<|end|>' → logprob: -4.913704872131348
    6. ' print' → logprob: -6.913704872131348
    7. ';' → logprob: -7.538704872131348
    8. '*' → logprob: -8.413704872131348
    9. '\n' → logprob: -8.663704872131348
    10. ' 
' → logprob: -8.663704872131348

Token 89: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00014811802248004824
    2. '((' → logprob: -10.000147819519043
    3. '("("' → logprob: -10.125147819519043
    4. '(`' → logprob: -10.500147819519043
    5. '('' → logprob: -11.625147819519043
    6. '(W' → logprob: -11.750147819519043
    7. '(f' → logprob: -11.750147819519043
    8. '(

' → logprob: -13.000147819519043
    9. '(
' → logprob: -13.375147819519043
    10. '()' → logprob: -14.125147819519043

Token 90: 'WE' (ID: 18092)
  Prédit: 'WE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WE' → logprob: -0.00022415895364247262
    2. '"' → logprob: -8.875224113464355
    3. 'W' → logprob: -10.125224113464355
    4. ''' → logprob: -10.375224113464355
    5. ' WE' → logprob: -12.125224113464355
    6. '"W' → logprob: -12.625224113464355
    7. 'f' → logprob: -12.875224113464355
    8. 'WO' → logprob: -14.875224113464355
    9. 'WD' → logprob: -15.000224113464355
    10. '   ' → logprob: -15.375224113464355

Token 91: 'IRD' (ID: 86609)
  Prédit: 'IRD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IRD' → logprob: -2.2723104848410003e-05
    2. 'IR' → logprob: -11.250022888183594
    3. 'I' → logprob: -12.250022888183594
    4. '1' → logprob: -13.750022888183594
    5. '!' → logprob: -13.875022888183594
    6. ')' → logprob: -14.250022888183594
    7. '\' → logprob: -14.500022888183594
    8. '   ' → logprob: -15.000022888183594
    9. '```' → logprob: -15.625022888183594
    10. 'ARD' → logprob: -16.000022888183594

Token 92: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4617256056226324e-05
    2. '))' → logprob: -11.250014305114746
    3. ')`' → logprob: -14.375014305114746
    4. ' )' → logprob: -14.625014305114746
    5. ')}' → logprob: -15.875014305114746
    6. ')
' → logprob: -16.625015258789062
    7. ')#' → logprob: -16.625015258789062
    8. '#' → logprob: -16.875015258789062
    9. '(' → logprob: -17.000015258789062
    10. '),' → logprob: -17.250015258789062

Token 93: ' X' (ID: 2127)
  Prédit: ' WE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' WE' → logprob: -0.2732929587364197
    2. 'WE' → logprob: -1.6482930183410645
    3. ' L' → logprob: -3.3982930183410645
    4. ' X' → logprob: -4.7732930183410645
    5. 'L' → logprob: -6.5232930183410645
    6. 'X' → logprob: -6.6482930183410645
    7. ' ' → logprob: -6.8982930183410645
    8. ' W' → logprob: -7.6482930183410645
    9. ' not' → logprob: -8.523292541503906
    10. '  ' → logprob: -8.898292541503906

Token 94: ' %' (ID: 1851)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.0133235454559326
    2. ' >' → logprob: -1.3883235454559326
    3. '%' → logprob: -2.0133235454559326
    4. '!=' → logprob: -2.0133235454559326
    5. ' !=' → logprob: -2.8883235454559326
    6. '==' → logprob: -3.7633235454559326
    7. ' else' → logprob: -4.638323783874512
    8. ' %' → logprob: -4.638323783874512
    9. ' ==' → logprob: -5.263323783874512
    10. '>=' → logprob: -5.513323783874512

Token 95: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6326572299003601
    2. '2' → logprob: -0.7576572299003601
    3. '3' → logprob: -10.757657051086426
    4. '6' → logprob: -11.882657051086426
    5. '1' → logprob: -12.007657051086426
    6. '  ' → logprob: -12.257657051086426
    7. '<|end|>' → logprob: -12.632657051086426
    8. '7' → logprob: -12.882657051086426
    9. '```' → logprob: -13.007657051086426
    10. '4' → logprob: -13.007657051086426

Token 96: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0019997733179479837
    2. ' ' → logprob: -6.251999855041504
    3. '1' → logprob: -10.376999855041504
    4. '3' → logprob: -10.501999855041504
    5. '4' → logprob: -12.876999855041504
    6. '0' → logprob: -13.251999855041504
    7. '6' → logprob: -13.251999855041504
    8. '```' → logprob: -13.251999855041504
    9. '<|end|>' → logprob: -14.064499855041504
    10. '  ' → logprob: -14.064499855041504

Token 97: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07791975140571594
    2. ' ==' → logprob: -2.8279197216033936
    3. ' else' → logprob: -4.327919960021973
    4. 'else' → logprob: -6.702919960021973
    5. '!=' → logprob: -6.827919960021973
    6. ' !=' → logprob: -8.702919960021973
    7. '0' → logprob: -9.577919960021973
    8. ' ' → logprob: -9.952919960021973
    9. '==
' → logprob: -11.202919960021973
    10. ')' → logprob: -12.452919960021973

Token 98: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1011737510561943
    2. ' ' → logprob: -2.3511736392974854
    3. '2' → logprob: -7.6011738777160645
    4. '1' → logprob: -7.7261738777160645
    5. '==' → logprob: -11.351173400878906
    6. '=' → logprob: -12.601173400878906
    7. '```' → logprob: -12.726173400878906
    8. ' 
' → logprob: -13.851173400878906
    9. '  ' → logprob: -14.163673400878906
    10. ' ' → logprob: -14.288673400878906

Token 99: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02404463104903698
    2. ' ' → logprob: -4.399044513702393
    3. '2' → logprob: -4.524044513702393
    4. '1' → logprob: -7.399044513702393
    5. '==' → logprob: -12.83654499053955
    6. '3' → logprob: -12.83654499053955
    7. '4' → logprob: -14.46154499053955
    8. '  ' → logprob: -14.46154499053955
    9. '```' → logprob: -14.58654499053955
    10. '10' → logprob: -14.83654499053955

Token 100: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.4292944669723511
    2. 'else' → logprob: -1.054294466972351
    3. ')' → logprob: -8.30429458618164
    4. ' ' → logprob: -8.30429458618164
    5. ' )' → logprob: -10.05429458618164
    6. ' ' → logprob: -11.17929458618164
    7. '```' → logprob: -11.30429458618164
    8. '	else' → logprob: -11.92929458618164
    9. ',' → logprob: -12.42929458618164
    10. ';' → logprob: -12.42929458618164

Token 101: ' fun' (ID: 2827)
  Prédit: 'WE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WE' → logprob: -0.5206146836280823
    2. ' WE' → logprob: -2.1456146240234375
    3. 'fun' → logprob: -2.1456146240234375
    4. ' fun' → logprob: -2.6456146240234375
    5. '0' → logprob: -3.5206146240234375
    6. ' L' → logprob: -4.1456146240234375
    7. 'L' → logprob: -5.0206146240234375
    8. '(' → logprob: -5.0206146240234375
    9. '-' → logprob: -5.0206146240234375
    10. '"' → logprob: -5.2706146240234375

Token 102: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0036323845852166414
    2. '(' → logprob: -5.628632545471191
    3. '(X' → logprob: -11.128632545471191
    4. ')' → logprob: -11.253632545471191
    5. '((' → logprob: -13.128632545471191
    6. '(
' → logprob: -14.128632545471191
    7. ')(' → logprob: -14.253632545471191
    8. '(`' → logprob: -14.878632545471191
    9. ')L' → logprob: -15.378632545471191
    10. 'L' → logprob: -15.628632545471191

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16503453254699707
    2. '(L' → logprob: -2.290034532546997
    3. '(X' → logprob: -3.415034532546997
    4. '+' → logprob: -4.915034294128418
    5. ',L' → logprob: -5.290034294128418
    6. '(' → logprob: -5.665034294128418
    7. ',X' → logprob: -7.165034294128418
    8. ' +' → logprob: -7.290034294128418
    9. ' ,' → logprob: -8.290034294128418
    10. 'X' → logprob: -9.290034294128418

Token 104: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.318281352519989
    2. 'L' → logprob: -1.3182814121246338
    3. ' X' → logprob: -6.318281173706055
    4. ' L' → logprob: -6.443281173706055
    5. '(L' → logprob: -7.193281173706055
    6. '(X' → logprob: -7.943281173706055
    7. '2' → logprob: -8.818281173706055
    8. 'LX' → logprob: -9.568281173706055
    9. '(' → logprob: -9.818281173706055
    10. '3' → logprob: -9.943281173706055

Token 105: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6354900598526001
    2. ')' → logprob: -0.7604900598526001
    3. '+' → logprob: -6.5104899406433105
    4. ')))' → logprob: -7.0104899406433105
    5. '-' → logprob: -8.760490417480469
    6. '*' → logprob: -9.760490417480469
    7. ' )' → logprob: -10.135490417480469
    8. '//' → logprob: -10.385490417480469
    9. ' +' → logprob: -10.385490417480469
    10. ' ))' → logprob: -11.010490417480469


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 103
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 27
Tokens correctement prédits (top 10): 71
Précision stricte (1ère position): 26.21%
Précision adaptée (1ère position): 26.21%
Précision (top 10): 68.93%
================================================================================
