================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import mul

a, b = map(int, (__import__('sys').stdin.readline()).split())

cases = {
    True: lambda: reduce(lambda x, y: x + y, [a, a - 1]),
    False: lambda: None  # Placeholder
}
cases_eq = {
    True: lambda: reduce(mul, [a, 2]),
    False: lambda: reduce(lambda x, y: x + y, [b, b - 1])
}
print([
    cases[a > b](),
    cases_eq[a == b]()
][0 if a > b else 1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.612085223197937
    2. 'wrap' → logprob: -0.862085223197937
    3. 'reduce' → logprob: -3.4870853424072266
    4. 'l' → logprob: -6.112085342407227
    5. ' wraps' → logprob: -6.487085342407227
    6. 'cached' → logprob: -7.612085342407227
    7. 'cache' → logprob: -8.112085342407227
    8. 'cmp' → logprob: -9.237085342407227
    9. '```' → logprob: -9.237085342407227
    10. ' partial' → logprob: -9.612085342407227

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020313309505581856
    2. '(lambda' → logprob: -4.645313262939453
    3. ',' → logprob: -5.895313262939453
    4. '.' → logprob: -6.145313262939453
    5. '\' → logprob: -6.145313262939453
    6. ' (' → logprob: -6.520313262939453
    7. '```' → logprob: -7.520313262939453
    8. '(
' → logprob: -8.645313262939453
    9. ' ' → logprob: -8.645313262939453
    10. '\(' → logprob: -8.770313262939453

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04244441166520119
    2. 'def' → logprob: -3.6674444675445557
    3. '\' → logprob: -4.542444229125977
    4. ',' → logprob: -6.417444229125977
    5. '(
' → logprob: -7.292444229125977
    6. '```' → logprob: -7.542444229125977
    7. '(lambda' → logprob: -7.667444229125977
    8. '\(' → logprob: -7.792444229125977
    9. ' ' → logprob: -8.792444229125977
    10. '\n' → logprob: -8.792444229125977

Token 6: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -1.002150535583496
    2. ' operator' → logprob: -1.252150535583496
    3. ' itertools' → logprob: -1.502150535583496
    4. ' collections' → logprob: -2.127150535583496
    5. ' os' → logprob: -5.877150535583496
    6. 'operator' → logprob: -6.752150535583496
    7. 'math' → logprob: -7.877150535583496
    8. ' typing' → logprob: -8.002150535583496
    9. 'collections' → logprob: -8.127150535583496
    10. ' sys' → logprob: -9.127150535583496

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.041138194501399994
    2. 'import' → logprob: -3.291138172149658
    3. ' ' → logprob: -6.291138172149658
    4. '.' → logprob: -6.791138172149658
    5. ' .' → logprob: -10.166138648986816
    6. '.import' → logprob: -10.166138648986816
    7. '	import' → logprob: -11.416138648986816
    8. '_import' → logprob: -11.916138648986816
    9. '<|end|>' → logprob: -12.541138648986816
    10. ',' → logprob: -12.916138648986816

Token 8: ' mul' (ID: 9975)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.0319061279296875
    2. ' mul' → logprob: -4.4069061279296875
    3. ' import' → logprob: -4.6569061279296875
    4. ' ' → logprob: -5.0319061279296875
    5. 'add' → logprob: -5.9069061279296875
    6. ' item' → logprob: -8.781906127929688
    7. 'import' → logprob: -9.406906127929688
    8. 'mul' → logprob: -9.781906127929688
    9. ' icon' → logprob: -9.781906127929688
    10. ' sub' → logprob: -11.281906127929688

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1261378824710846
    2. '*' → logprob: -2.8761379718780518
    3. '\' → logprob: -3.6261379718780518
    4. '\n' → logprob: -4.501137733459473
    5. '(
' → logprob: -4.751137733459473
    6. ',' → logprob: -5.126137733459473
    7. '`' → logprob: -6.126137733459473
    8. '#' → logprob: -6.501137733459473
    9. 'a' → logprob: -6.751137733459473
    10. '\(' → logprob: -6.876137733459473

Token 10: 'a' (ID: 64)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06188566982746124
    2. '(
' → logprob: -3.1868855953216553
    3. 'def' → logprob: -5.061885833740234
    4. '#' → logprob: -5.561885833740234
    5. '\' → logprob: -6.061885833740234
    6. 'a' → logprob: -6.811885833740234
    7. ',' → logprob: -7.061885833740234
    8. '*' → logprob: -7.436885833740234
    9. 'result' → logprob: -7.436885833740234
    10. '`' → logprob: -7.436885833740234

Token 11: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1909563541412354
    2. '=' → logprob: -1.5659563541412354
    3. '.' → logprob: -1.8159563541412354
    4. 'r' → logprob: -2.4409563541412354
    5. '(' → logprob: -2.5659563541412354
    6. ',' → logprob: -3.3159563541412354
    7. 's' → logprob: -3.4409563541412354
    8. 'b' → logprob: -3.5659563541412354
    9. 'g' → logprob: -4.440956115722656
    10. '*' → logprob: -4.565956115722656

Token 12: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.528412938117981
    2. ' b' → logprob: -0.903412938117981
    3. ' ' → logprob: -5.278412818908691
    4. '  ' → logprob: -10.278412818908691
    5. '_' → logprob: -10.403412818908691
    6. '=' → logprob: -10.653412818908691
    7. 'space' → logprob: -10.778412818908691
    8. ' =' → logprob: -10.778412818908691
    9. '_b' → logprob: -11.778412818908691
    10. ',b' → logprob: -12.153412818908691

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026656251400709152
    2. '=' → logprob: -3.651656150817871
    3. ',' → logprob: -8.276656150817871
    4. ' ' → logprob: -10.526656150817871
    5. ' ,' → logprob: -10.776656150817871
    6. '  ' → logprob: -10.776656150817871
    7. ')' → logprob: -11.026656150817871
    8. '[' → logprob: -12.401656150817871
    9. '<|end|>' → logprob: -12.901656150817871
    10. ' =
' → logprob: -13.276656150817871

Token 14: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.083979532122612
    2. '1' → logprob: -2.708979606628418
    3. '2' → logprob: -5.333979606628418
    4. '5' → logprob: -5.583979606628418
    5. '0' → logprob: -6.083979606628418
    6. '10' → logprob: -6.583979606628418
    7. ' map' → logprob: -7.333979606628418
    8. 'map' → logprob: -7.708979606628418
    9. '3' → logprob: -8.083979606628418
    10. '4' → logprob: -9.333979606628418

Token 15: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04073701798915863
    2. '(lambda' → logprob: -3.5407369136810303
    3. '<|end|>' → logprob: -5.290737152099609
    4. '(int' → logprob: -5.665737152099609
    5. '(str' → logprob: -7.290737152099609
    6. '(range' → logprob: -7.540737152099609
    7. '<|end|>' → logprob: -8.91573715209961
    8. '```' → logprob: -9.04073715209961
    9. '(eval' → logprob: -9.04073715209961
    10. '(input' → logprob: -9.66573715209961

Token 16: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.615432858467102
    2. '(input' → logprob: -1.115432858467102
    3. ')' → logprob: -2.1154327392578125
    4. ',' → logprob: -5.6154327392578125
    5. 'input' → logprob: -6.7404327392578125
    6. '(token' → logprob: -6.8654327392578125
    7. '<|end|>' → logprob: -7.2404327392578125
    8. ' (' → logprob: -7.4904327392578125
    9. '(range' → logprob: -7.7404327392578125
    10. '(user' → logprob: -7.9904327392578125

Token 17: ' (__' (ID: 55342)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07901471108198166
    2. ' input' → logprob: -2.579014778137207
    3. ')' → logprob: -9.204014778137207
    4. '(input' → logprob: -10.954014778137207
    5. ' )' → logprob: -13.079014778137207
    6. ',input' → logprob: -13.204014778137207
    7. '=input' → logprob: -13.704014778137207
    8. '))' → logprob: -14.579014778137207
    9. '	input' → logprob: -15.204014778137207
    10. '```' → logprob: -15.454014778137207

Token 18: 'import' (ID: 561)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.007044151891022921
    2. 'import' → logprob: -5.007044315338135
    3. ' input' → logprob: -9.382043838500977
    4. '(input' → logprob: -9.507043838500977
    5. 'file' → logprob: -9.632043838500977
    6. '_.' → logprob: -11.382043838500977
    7. 'b' → logprob: -11.632043838500977
    8. 'a' → logprob: -11.757043838500977
    9. 'stdin' → logprob: -11.882043838500977
    10. 'iter' → logprob: -12.007043838500977

Token 19: '__('' (ID: 54460)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.47991153597831726
    2. '__('' → logprob: -1.8549115657806396
    3. '(' → logprob: -1.9799115657806396
    4. '('__' → logprob: -3.1049115657806396
    5. '("' → logprob: -4.2299113273620605
    6. '__("' → logprob: -4.6049113273620605
    7. '("__' → logprob: -5.3549113273620605
    8. '("("' → logprob: -5.3549113273620605
    9. ')(__' → logprob: -6.2299113273620605
    10. '(""))' → logprob: -7.2299113273620605

Token 20: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.39825353026390076
    2. 'built' → logprob: -1.1482535600662231
    3. 'math' → logprob: -4.648253440856934
    4. ' built' → logprob: -7.523253440856934
    5. '__' → logprob: -7.648253440856934
    6. 'os' → logprob: -7.648253440856934
    7. 're' → logprob: -9.898253440856934
    8. 'input' → logprob: -10.023253440856934
    9. ' sys' → logprob: -10.148253440856934
    10. 'string' → logprob: -10.773253440856934

Token 21: '').' (ID: 3426)
  Prédit: '.argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.argv' → logprob: -0.36883214116096497
    2. '').' → logprob: -1.2438321113586426
    3. '.stdin' → logprob: -3.9938321113586426
    4. '.' → logprob: -6.993832111358643
    5. '.stdout' → logprob: -8.7438325881958
    6. ').' → logprob: -8.8688325881958
    7. '')' → logprob: -8.9938325881958
    8. 'argv' → logprob: -9.1188325881958
    9. '')).' → logprob: -9.4938325881958
    10. '')['' → logprob: -10.4938325881958

Token 22: 'stdin' (ID: 132953)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.2014697641134262
    2. 'stdin' → logprob: -1.7014697790145874
    3. '.argv' → logprob: -10.451469421386719
    4. '.stdin' → logprob: -11.576469421386719
    5. 'arg' → logprob: -11.826469421386719
    6. 'stderr' → logprob: -12.951469421386719
    7. ' argv' → logprob: -13.076469421386719
    8. 'stdout' → logprob: -13.451469421386719
    9. 'argc' → logprob: -14.201469421386719
    10. 'version' → logprob: -14.326469421386719

Token 23: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.022786248475313187
    2. '.read' → logprob: -3.8977861404418945
    3. '.' → logprob: -6.3977861404418945
    4. ').' → logprob: -7.8977861404418945
    5. '.readlines' → logprob: -9.022786140441895
    6. ')' → logprob: -9.897786140441895
    7. 'read' → logprob: -11.147786140441895
    8. '.)' → logprob: -12.272786140441895
    9. ' readline' → logprob: -12.897786140441895
    10. ' .' → logprob: -13.022786140441895

Token 24: '()).' (ID: 9503)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7087620496749878
    2. '()))' → logprob: -0.9587620496749878
    3. '()' → logprob: -2.4587621688842773
    4. '(),' → logprob: -4.083762168884277
    5. '().' → logprob: -4.708762168884277
    6. ')' → logprob: -4.708762168884277
    7. '()),' → logprob: -6.708762168884277
    8. '(' → logprob: -6.958762168884277
    9. '))' → logprob: -7.583762168884277
    10. '()).' → logprob: -8.208762168884277

Token 25: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.577752947807312
    2. 'split' → logprob: -0.827752947807312
    3. 'rstrip' → logprob: -6.327753067016602
    4. ' split' → logprob: -10.827753067016602
    5. ' strip' → logprob: -12.202753067016602
    6. ')' → logprob: -15.577753067016602
    7. 'read' → logprob: -15.577753067016602
    8. 'spl' → logprob: -15.702753067016602
    9. 'str' → logprob: -16.2027530670166
    10. ' ' → logprob: -16.4527530670166

Token 26: '())

' (ID: 27654)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5187810659408569
    2. ')' → logprob: -1.018781065940857
    3. '())' → logprob: -3.6437811851501465
    4. '()))' → logprob: -4.1437811851501465
    5. '()' → logprob: -6.7687811851501465
    6. '),' → logprob: -8.518780708312988
    7. '(),' → logprob: -9.393780708312988
    8. ')))' → logprob: -9.893780708312988
    9. ''))' → logprob: -10.018780708312988
    10. '(','' → logprob: -10.018780708312988

Token 27: 'cases' (ID: 39373)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6036311984062195
    2. 'product' → logprob: -0.9786311984062195
    3. 'numbers' → logprob: -3.7286312580108643
    4. 'print' → logprob: -3.8536312580108643
    5. 'nums' → logprob: -4.728631019592285
    6. 'n' → logprob: -5.228631019592285
    7. 'c' → logprob: -5.478631019592285
    8. 'factor' → logprob: -5.478631019592285
    9. 'res' → logprob: -6.353631019592285
    10. 'prod' → logprob: -6.728631019592285

Token 28: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.736872136592865
    2. ' =' → logprob: -1.2368721961975098
    3. ')' → logprob: -2.4868721961975098
    4. '[' → logprob: -2.6118721961975098
    5. '_' → logprob: -3.3618721961975098
    6. '[:]' → logprob: -4.61187219619751
    7. ' ' → logprob: -4.98687219619751
    8. ':' → logprob: -5.11187219619751
    9. '(' → logprob: -5.23687219619751
    10. ',' → logprob: -5.98687219619751

Token 29: ' {
' (ID: 405)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.5828604698181152
    2. '[]' → logprob: -0.9578604698181152
    3. '[' → logprob: -3.3328604698181152
    4. ' [' → logprob: -4.582860469818115
    5. '[int' → logprob: -4.582860469818115
    6. '[a' → logprob: -7.832860469818115
    7. 'int' → logprob: -7.832860469818115
    8. 'list' → logprob: -8.082860946655273
    9. 'range' → logprob: -8.832860946655273
    10. ' list' → logprob: -9.457860946655273

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27978333830833435
    2. '0' → logprob: -2.529783248901367
    3. '1' → logprob: -2.779783248901367
    4. ''' → logprob: -3.154783248901367
    5. '(' → logprob: -4.404783248901367
    6. ''a' → logprob: -4.654783248901367
    7. ''+' → logprob: -4.904783248901367
    8. 'a' → logprob: -5.279783248901367
    9. '}' → logprob: -5.654783248901367
    10. '(a' → logprob: -5.779783248901367

Token 31: ' True' (ID: 6432)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.6986591815948486
    2. ''' → logprob: -1.8236591815948486
    3. '   ' → logprob: -1.9486591815948486
    4. ''a' → logprob: -2.0736591815948486
    5. '0' → logprob: -2.3236591815948486
    6. '(' → logprob: -2.5736591815948486
    7. '1' → logprob: -2.9486591815948486
    8. '(a' → logprob: -3.1986591815948486
    9. ''+' → logprob: -3.1986591815948486
    10. ''*' → logprob: -3.8236591815948486

Token 32: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014214749448001385
    2. ' :' → logprob: -4.264214515686035
    3. '   ' → logprob: -10.639214515686035
    4. ':true' → logprob: -12.514214515686035
    5. ':return' → logprob: -12.764214515686035
    6. ' ' → logprob: -13.139214515686035
    7. ':b' → logprob: -13.389214515686035
    8. ',' → logprob: -13.389214515686035
    9. '    ' → logprob: -13.514214515686035
    10. ':false' → logprob: -14.014214515686035

Token 33: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -1.2521958351135254
    2. ' a' → logprob: -1.7521958351135254
    3. 'lambda' → logprob: -2.1271958351135254
    4. ' range' → logprob: -2.8771958351135254
    5. 'a' → logprob: -2.8771958351135254
    6. ' b' → logprob: -3.5021958351135254
    7. '   ' → logprob: -3.6271958351135254
    8. ' ' → logprob: -3.7521958351135254
    9. ' [' → logprob: -3.7521958351135254
    10. ' mul' → logprob: -3.8771958351135254

Token 34: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6010822653770447
    2. ' a' → logprob: -1.3510823249816895
    3. 'x' → logprob: -2.6010823249816895
    4. 'a' → logprob: -2.6010823249816895
    5. ' lambda' → logprob: -4.8510823249816895
    6. ' range' → logprob: -4.9760823249816895
    7. ' b' → logprob: -5.1010823249816895
    8. ' i' → logprob: -5.4760823249816895
    9. 'lambda' → logprob: -5.7260823249816895
    10. ' n' → logprob: -6.1010823249816895

Token 35: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.4971434772014618
    2. ' reduce' → logprob: -1.2471435070037842
    3. 'a' → logprob: -3.247143507003784
    4. 'mul' → logprob: -3.997143507003784
    5. ' a' → logprob: -4.622143268585205
    6. 'b' → logprob: -4.747143268585205
    7. ' b' → logprob: -5.622143268585205
    8. 'print' → logprob: -5.872143268585205
    9. 'pow' → logprob: -5.872143268585205
    10. ' mul' → logprob: -5.872143268585205

Token 36: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31360119581222534
    2. '(m' → logprob: -1.3136012554168701
    3. '(lambda' → logprob: -8.93860149383545
    4. '(
' → logprob: -9.18860149383545
    5. '(operator' → logprob: -9.56360149383545
    6. 'mul' → logprob: -10.81360149383545
    7. '(mult' → logprob: -12.06360149383545
    8. '_mul' → logprob: -13.18860149383545
    9. '(mu' → logprob: -13.18860149383545
    10. '(

' → logprob: -14.06360149383545

Token 37: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.025411266833543777
    2. 'x' → logprob: -3.900411367416382
    3. ' a' → logprob: -6.025411128997803
    4. 'a' → logprob: -7.275411128997803
    5. ' mul' → logprob: -7.525411128997803
    6. ' acc' → logprob: -7.775411128997803
    7. ' ' → logprob: -8.400411605834961
    8. 'mul' → logprob: -8.650411605834961
    9. ',' → logprob: -9.025411605834961
    10. ' ,' → logprob: -9.775411605834961

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010961651569232345
    2. ' ,' → logprob: -7.876096248626709
    3. ',x' → logprob: -8.00109577178955
    4. 'mul' → logprob: -8.25109577178955
    5. ',m' → logprob: -9.75109577178955
    6. '_mul' → logprob: -10.87609577178955
    7. ' x' → logprob: -11.87609577178955
    8. '_,' → logprob: -12.25109577178955
    9. 'x' → logprob: -12.25109577178955
    10. '*,' → logprob: -12.62609577178955

Token 39: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2020658254623413
    2. 'y' → logprob: -1.7020658254623413
    3. ',' → logprob: -8.202065467834473
    4. ' ' → logprob: -8.452065467834473
    5. 'x' → logprob: -10.077065467834473
    6. ',y' → logprob: -10.702065467834473
    7. ' x' → logprob: -11.077065467834473
    8. ' ,' → logprob: -11.577065467834473
    9. 'mul' → logprob: -11.577065467834473
    10. 'a' → logprob: -11.702065467834473

Token 40: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05719852074980736
    2. ':' → logprob: -2.9321985244750977
    3. ' ,' → logprob: -7.307198524475098
    4. ',x' → logprob: -7.307198524475098
    5. ' :' → logprob: -8.182198524475098
    6. ',y' → logprob: -8.307198524475098
    7. 'mul' → logprob: -8.432198524475098
    8. ',m' → logprob: -9.557198524475098
    9. 'multip' → logprob: -11.057198524475098
    10. ':x' → logprob: -11.182198524475098

Token 41: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.38829168677330017
    2. 'x' → logprob: -1.1382917165756226
    3. 'mul' → logprob: -6.763291835784912
    4. ' mul' → logprob: -9.013291358947754
    5. '	x' → logprob: -10.513291358947754
    6. ' ' → logprob: -10.763291358947754
    7. '(x' → logprob: -11.263291358947754
    8. '  ' → logprob: -11.513291358947754
    9. '_mul' → logprob: -11.950791358947754
    10. '   ' → logprob: -12.513291358947754

Token 42: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6373593807220459
    2. ' *' → logprob: -0.7623593807220459
    3. '*y' → logprob: -5.387359619140625
    4. 'mul' → logprob: -10.137359619140625
    5. ' ' → logprob: -10.512359619140625
    6. '*m' → logprob: -10.762359619140625
    7. 'y' → logprob: -11.387359619140625
    8. '_mul' → logprob: -11.512359619140625
    9. ' mul' → logprob: -11.637359619140625
    10. '+' → logprob: -11.637359619140625

Token 43: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5283607244491577
    2. 'y' → logprob: -0.9033607244491577
    3. '1' → logprob: -6.278360843658447
    4. 'mul' → logprob: -6.778360843658447
    5. ' (' → logprob: -7.153360843658447
    6. ' ' → logprob: -7.778360843658447
    7. ' mul' → logprob: -8.028360366821289
    8. 'x' → logprob: -8.778360366821289
    9. '(' → logprob: -9.028360366821289
    10. ' x' → logprob: -9.403360366821289

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0100857587531209
    2. ' ,' → logprob: -5.385085582733154
    3. '*' → logprob: -6.885085582733154
    4. '),' → logprob: -7.010085582733154
    5. ' *' → logprob: -7.260085582733154
    6. ' +' → logprob: -7.385085582733154
    7. 'mul' → logprob: -7.885085582733154
    8. ')' → logprob: -8.010086059570312
    9. '   ' → logprob: -8.010086059570312
    10. '(' → logprob: -8.135086059570312

Token 45: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005698277615010738
    2. ' range' → logprob: -6.005698204040527
    3. '(range' → logprob: -6.380698204040527
    4. '[' → logprob: -7.380698204040527
    5. 'map' → logprob: -7.380698204040527
    6. '[i' → logprob: -10.005698204040527
    7. 'list' → logprob: -10.005698204040527
    8. '[x' → logprob: -10.380698204040527
    9. '[a' → logprob: -10.880698204040527
    10. ')' → logprob: -11.005698204040527

Token 46: 'a' (ID: 64)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5800334215164185
    2. 'i' → logprob: -1.4550334215164185
    3. 'int' → logprob: -1.8300334215164185
    4. 'map' → logprob: -3.955033302307129
    5. 'a' → logprob: -4.705033302307129
    6. ' range' → logprob: -5.455033302307129
    7. 'mul' → logprob: -5.830033302307129
    8. 'x' → logprob: -6.080033302307129
    9. 'pow' → logprob: -6.455033302307129
    10. '(i' → logprob: -6.580033302307129

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0729084387421608
    2. ' ,' → logprob: -3.822908401489258
    3. '*' → logprob: -4.197908401489258
    4. ' +' → logprob: -4.322908401489258
    5. ' *' → logprob: -4.697908401489258
    6. '+' → logprob: -5.572908401489258
    7. '**' → logprob: -6.072908401489258
    8. ' for' → logprob: -6.572908401489258
    9. '+i' → logprob: -7.072908401489258
    10. '*i' → logprob: -7.197908401489258

Token 48: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04459245875477791
    2. ' b' → logprob: -3.2945923805236816
    3. 'a' → logprob: -5.419592380523682
    4. '1' → logprob: -7.294592380523682
    5. 'i' → logprob: -7.419592380523682
    6. ' a' → logprob: -8.04459285736084
    7. '*b' → logprob: -9.04459285736084
    8. ' i' → logprob: -9.41959285736084
    9. ' ' → logprob: -9.66959285736084
    10. '*' → logprob: -10.04459285736084

Token 49: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.4003028869628906
    2. ',' → logprob: -1.5253028869628906
    3. '+' → logprob: -1.7753028869628906
    4. ' *' → logprob: -1.9003028869628906
    5. '*' → logprob: -2.1503028869628906
    6. '*b' → logprob: -3.0253028869628906
    7. '+b' → logprob: -4.650302886962891
    8. '**' → logprob: -4.650302886962891
    9. '*i' → logprob: -4.900302886962891
    10. '-' → logprob: -5.150302886962891

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1833818405866623
    2. 'b' → logprob: -1.8083817958831787
    3. 'i' → logprob: -6.308382034301758
    4. ' b' → logprob: -6.808382034301758
    5. ' ' → logprob: -8.433382034301758
    6. '2' → logprob: -9.058382034301758
    7. ' i' → logprob: -9.808382034301758
    8. 'k' → logprob: -10.433382034301758
    9. 'n' → logprob: -10.558382034301758
    10. '(' → logprob: -10.620882034301758

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7005013227462769
    2. 'b' → logprob: -0.7005013227462769
    3. 'i' → logprob: -5.200501441955566
    4. '2' → logprob: -7.700501441955566
    5. '(b' → logprob: -8.325501441955566
    6. ' b' → logprob: -8.575501441955566
    7. '(i' → logprob: -8.700501441955566
    8. 'k' → logprob: -8.950501441955566
    9. '(' → logprob: -9.450501441955566
    10. '3' → logprob: -9.825501441955566

Token 52: ']),
' (ID: 34147)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11845120042562485
    2. '])' → logprob: -2.4934511184692383
    3. ' ,' → logprob: -4.493451118469238
    4. ']' → logprob: -5.493451118469238
    5. ']),' → logprob: -5.493451118469238
    6. ']))' → logprob: -5.993451118469238
    7. ' ])' → logprob: -6.118451118469238
    8. '],' → logprob: -6.618451118469238
    9. ')' → logprob: -6.868451118469238
    10. ' ]' → logprob: -7.368451118469238

Token 53: '   ' (ID: 271)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.45360246300697327
    2. 'True' → logprob: -1.4536024332046509
    3. '   ' → logprob: -2.9536025524139404
    4. '}' → logprob: -3.4536025524139404
    5. ' }' → logprob: -3.8286025524139404
    6. '    ' → logprob: -4.703602313995361
    7. 'False' → logprob: -5.578602313995361
    8. ')' → logprob: -6.453602313995361
    9. ' False' → logprob: -6.578602313995361
    10. ' },' → logprob: -6.578602313995361

Token 54: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' (adapté à ' False') → logprob: -0.7118533849716187
    2. ' False' → logprob: -0.8368533849716187
    3. ' True' → logprob: -2.961853504180908
    4. 'True' → logprob: -3.836853504180908
    5. '   ' → logprob: -5.961853504180908
    6. '    ' → logprob: -8.83685302734375
    7. ' ' → logprob: -9.58685302734375
    8. '(False' → logprob: -9.96185302734375
    9. '  ' → logprob: -11.21185302734375
    10. '0' → logprob: -11.46185302734375

Token 55: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003361774142831564
    2. ' :' → logprob: -8.000336647033691
    3. ':
' → logprob: -16.250335693359375
    4. ':return' → logprob: -16.375335693359375
    5. '):' → logprob: -16.875335693359375
    6. '   ' → logprob: -17.000335693359375
    7. ',' → logprob: -17.125335693359375
    8. ',:' → logprob: -17.250335693359375
    9. '}:' → logprob: -17.500335693359375
    10. '[' → logprob: -17.500335693359375

Token 56: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.22588102519512177
    2. 'lambda' → logprob: -1.6008809804916382
    3. '(lambda' → logprob: -7.975881099700928
    4. ' lamb' → logprob: -9.72588062286377
    5. '=lambda' → logprob: -11.47588062286377
    6. ' ' → logprob: -11.60088062286377
    7. '   ' → logprob: -12.35088062286377
    8. 'lam' → logprob: -12.47588062286377
    9. 'ambda' → logprob: -12.47588062286377
    10. 'mul' → logprob: -12.53838062286377

Token 57: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010114200413227081
    2. ' :' → logprob: -4.6351141929626465
    3. '():' → logprob: -8.385114669799805
    4. ' lambda' → logprob: -10.260114669799805
    5. '   ' → logprob: -10.760114669799805
    6. ' ():' → logprob: -11.260114669799805
    7. '()' → logprob: -11.635114669799805
    8. ' a' → logprob: -11.635114669799805
    9. 'lambda' → logprob: -11.635114669799805
    10. ' ()' → logprob: -11.760114669799805

Token 58: ' None' (ID: 4662)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.3827265501022339
    2. ' reduce' → logprob: -1.3827265501022339
    3. 'a' → logprob: -3.6327266693115234
    4. 'mul' → logprob: -4.007726669311523
    5. ' a' → logprob: -4.757726669311523
    6. ' mul' → logprob: -6.007726669311523
    7. '(a' → logprob: -6.132726669311523
    8. ' ' → logprob: -6.757726669311523
    9. 'b' → logprob: -6.757726669311523
    10. '0' → logprob: -7.007726669311523

Token 59: ' ' (ID: 220)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00010163593105971813
    2. ',' → logprob: -10.625102043151855
    3. '}
' → logprob: -10.875102043151855
    4. '}

' → logprob: -10.875102043151855
    5. '   ' → logprob: -11.500102043151855
    6. ' }' → logprob: -11.750102043151855
    7. ')' → logprob: -11.875102043151855
    8. '}[' → logprob: -11.875102043151855
    9. '[' → logprob: -13.500102043151855
    10. '})' → logprob: -13.750102043151855

Token 60: ' #' (ID: 1069)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0010229245526716113
    2. ',' → logprob: -7.126022815704346
    3. ')' → logprob: -9.501023292541504
    4. ' }' → logprob: -10.376023292541504
    5. '}

' → logprob: -10.626023292541504
    6. ',
' → logprob: -10.876023292541504
    7. '}
' → logprob: -11.001023292541504
    8. '}[' → logprob: -11.501023292541504
    9. '})' → logprob: -11.751023292541504
    10. '   ' → logprob: -11.751023292541504

Token 61: ' Placeholder' (ID: 175443)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.889461874961853
    2. '+' → logprob: -1.764461874961853
    3. '<|end|>' → logprob: -2.1394619941711426
    4. ' }' → logprob: -2.3894619941711426
    5. ' ' → logprob: -2.7644619941711426
    6. '}' → logprob: -3.1394619941711426
    7. ' )' → logprob: -3.8894619941711426
    8. ')}' → logprob: -4.139461994171143
    9. ',' → logprob: -4.389461994171143
    10. '*' → logprob: -4.764461994171143

Token 62: '
' (ID: 198)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.12751927971839905
    2. '[' → logprob: -2.627519369125366
    3. '[a' → logprob: -3.877519369125366
    4. '(True' → logprob: -5.127519130706787
    5. '()' → logprob: -5.877519130706787
    6. 'True' → logprob: -6.002519130706787
    7. 'if' → logprob: -6.252519130706787
    8. ',' → logprob: -6.252519130706787
    9. '}[' → logprob: -6.252519130706787
    10. '()}' → logprob: -6.752519130706787

Token 63: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00017791526624932885
    2. ',' → logprob: -9.625178337097168
    3. ')' → logprob: -9.875178337097168
    4. ' }' → logprob: -11.125178337097168
    5. '}
' → logprob: -11.125178337097168
    6. '   ' → logprob: -11.875178337097168
    7. '}

' → logprob: -12.125178337097168
    8. '}[' → logprob: -12.500178337097168
    9. '[' → logprob: -12.625178337097168
    10. '},' → logprob: -13.000178337097168

Token 64: 'cases' (ID: 39373)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.9811747670173645
    2. 'a' → logprob: -1.3561747074127197
    3. 'b' → logprob: -1.4811747074127197
    4. 'False' → logprob: -2.8561747074127197
    5. ' True' → logprob: -4.106174945831299
    6. ')' → logprob: -4.231174945831299
    7. 'cases' → logprob: -4.481174945831299
    8. '(True' → logprob: -4.606174945831299
    9. '[' → logprob: -4.981174945831299
    10. '(' → logprob: -5.231174945831299

Token 65: '_eq' (ID: 28373)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.051137201488018036
    2. 'False' → logprob: -3.6761372089385986
    3. 'True' → logprob: -3.9261372089385986
    4. '<|end|>' → logprob: -7.0511369705200195
    5. '(True' → logprob: -7.0511369705200195
    6. 'b' → logprob: -7.4261369705200195
    7. 'a' → logprob: -8.05113697052002
    8. ' True' → logprob: -8.05113697052002
    9. '[a' → logprob: -8.17613697052002
    10. '(False' → logprob: -8.30113697052002

Token 66: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7113810777664185
    2. 'ual' → logprob: -0.7113810777664185
    3. '[' → logprob: -4.961380958557129
    4. 'a' → logprob: -5.711380958557129
    5. 'ua' → logprob: -6.461380958557129
    6. 'uel' → logprob: -6.961380958557129
    7. '[u' → logprob: -7.586380958557129
    8. 'uala' → logprob: -7.586380958557129
    9. '```' → logprob: -7.586380958557129
    10. 'uity' → logprob: -7.836380958557129

Token 67: ' {
' (ID: 405)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -1.3405776023864746
    2. ' {' → logprob: -1.5905776023864746
    3. ' lambda' → logprob: -2.2155776023864746
    4. 'lambda' → logprob: -2.2155776023864746
    5. 'a' → logprob: -2.4655776023864746
    6. ' a' → logprob: -2.8405776023864746
    7. '{
' → logprob: -3.0905776023864746
    8. 'b' → logprob: -3.4655776023864746
    9. ' {
' → logprob: -4.090577602386475
    10. '(lambda' → logprob: -4.340577602386475

Token 68: '   ' (ID: 271)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.0829755067825317
    2. ' True' → logprob: -1.2079755067825317
    3. '   ' → logprob: -1.4579755067825317
    4. 'False' → logprob: -2.207975387573242
    5. ' False' → logprob: -4.082975387573242
    6. '(True' → logprob: -6.457975387573242
    7. 'a' → logprob: -7.082975387573242
    8. ' ' → logprob: -8.582975387573242
    9. '(False' → logprob: -8.832975387573242
    10. '  ' → logprob: -9.332975387573242

Token 69: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' (adapté à ' True') → logprob: -0.5550341010093689
    2. ' True' → logprob: -1.3050341606140137
    3. 'a' → logprob: -2.3050341606140137
    4. 'False' → logprob: -3.5550341606140137
    5. 'b' → logprob: -4.805034160614014
    6. ' a' → logprob: -5.180034160614014
    7. '   ' → logprob: -5.180034160614014
    8. ' False' → logprob: -5.680034160614014
    9. ' b' → logprob: -6.805034160614014
    10. '0' → logprob: -6.930034160614014

Token 70: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001649220648687333
    2. ' :' → logprob: -8.750164985656738
    3. '   ' → logprob: -13.375164985656738
    4. '):' → logprob: -14.000164985656738
    5. 'lambda' → logprob: -14.375164985656738
    6. ':return' → logprob: -14.375164985656738
    7. ')' → logprob: -14.875164985656738
    8. '():' → logprob: -14.875164985656738
    9. ':
' → logprob: -15.625164985656738
    10. '=' → logprob: -15.687664985656738

Token 71: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.17005881667137146
    2. 'lambda' → logprob: -1.9200588464736938
    3. '(lambda' → logprob: -5.670058727264404
    4. ' a' → logprob: -6.920058727264404
    5. 'a' → logprob: -7.170058727264404
    6. ' True' → logprob: -7.795058727264404
    7. ' reduce' → logprob: -7.795058727264404
    8. '   ' → logprob: -7.920058727264404
    9. 'False' → logprob: -8.170059204101562
    10. ' ' → logprob: -8.295059204101562

Token 72: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002742935437709093
    2. ' :' → logprob: -6.127742767333984
    3. 'a' → logprob: -8.502742767333984
    4. '():' → logprob: -8.502742767333984
    5. ' a' → logprob: -10.377742767333984
    6. '()' → logprob: -11.127742767333984
    7. '   ' → logprob: -11.127742767333984
    8. ' ' → logprob: -11.877742767333984
    9. ':return' → logprob: -11.877742767333984
    10. '  ' → logprob: -12.190242767333984

Token 73: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.8603640794754028
    2. ' reduce' → logprob: -1.1103640794754028
    3. 'a' → logprob: -2.2353639602661133
    4. ' a' → logprob: -2.9853639602661133
    5. 'b' → logprob: -3.4853639602661133
    6. ' b' → logprob: -4.235363960266113
    7. 'mul' → logprob: -4.985363960266113
    8. ' ' → logprob: -5.110363960266113
    9. 'None' → logprob: -5.485363960266113
    10. '1' → logprob: -5.610363960266113

Token 74: '(m' (ID: 2145)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.5738896131515503
    2. '(m' → logprob: -1.0738896131515503
    3. '(' → logprob: -2.44888973236084
    4. '(operator' → logprob: -4.82388973236084
    5. 'mul' → logprob: -8.32388973236084
    6. 'lambda' → logprob: -9.69888973236084
    7. '(mu' → logprob: -9.69888973236084
    8. ' (' → logprob: -10.19888973236084
    9. '(l' → logprob: -10.57388973236084
    10. '(
' → logprob: -11.32388973236084

Token 75: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -5.200166469876422e-06
    2. 'mul' → logprob: -13.000004768371582
    3. 'ult' → logprob: -14.000004768371582
    4. 'u' → logprob: -14.000004768371582
    5. '<ul' → logprob: -14.750004768371582
    6. 'ulp' → logprob: -15.500004768371582
    7. 'ultip' → logprob: -15.500004768371582
    8. 'ultiply' → logprob: -16.7500057220459
    9. 'l' → logprob: -16.8750057220459
    10. '[' → logprob: -17.1250057220459

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014248794177547097
    2. ',[' → logprob: -7.876424789428711
    3. '(range' → logprob: -8.126424789428711
    4. 'range' → logprob: -8.376424789428711
    5. 'lambda' → logprob: -8.751424789428711
    6. ' ,' → logprob: -9.251424789428711
    7. '(lambda' → logprob: -9.876424789428711
    8. '[' → logprob: -10.501424789428711
    9. 'a' → logprob: -10.751424789428711
    10. ')' → logprob: -11.001424789428711

Token 77: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6516440510749817
    2. '[a' → logprob: -1.651643991470337
    3. '(range' → logprob: -1.776643991470337
    4. '[b' → logprob: -3.026643991470337
    5. ' range' → logprob: -3.651643991470337
    6. ' [' → logprob: -4.151644229888916
    7. '[' → logprob: -4.776644229888916
    8. '(a' → logprob: -5.026644229888916
    9. '([' → logprob: -5.901644229888916
    10. '[x' → logprob: -6.401644229888916

Token 78: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1304914653301239
    2. 'range' → logprob: -2.2554914951324463
    3. 'i' → logprob: -4.505491256713867
    4. '[a' → logprob: -6.005491256713867
    5. 'x' → logprob: -7.255491256713867
    6. ' a' → logprob: -7.630491256713867
    7. 'list' → logprob: -7.630491256713867
    8. ' range' → logprob: -7.755491256713867
    9. '[i' → logprob: -7.880491256713867
    10. '(a' → logprob: -7.880491256713867

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030343564227223396
    2. ' -' → logprob: -4.780343532562256
    3. ']' → logprob: -4.905343532562256
    4. '-' → logprob: -5.030343532562256
    5. ' +' → logprob: -6.405343532562256
    6. '+' → logprob: -6.530343532562256
    7. ' ,' → logprob: -6.905343532562256
    8. '-i' → logprob: -7.030343532562256
    9. ' for' → logprob: -7.280343532562256
    10. '+i' → logprob: -8.030344009399414

Token 80: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11556345224380493
    2. 'a' → logprob: -2.74056339263916
    3. ' b' → logprob: -3.24056339263916
    4. ' a' → logprob: -5.49056339263916
    5. ' ' → logprob: -7.86556339263916
    6. '   ' → logprob: -7.86556339263916
    7. '(a' → logprob: -8.36556339263916
    8. '  ' → logprob: -9.11556339263916
    9. '    ' → logprob: -9.74056339263916
    10. ' (' → logprob: -10.24056339263916

Token 81: '2' (ID: 17)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.15098994970321655
    2. 'a' → logprob: -2.1509900093078613
    3. ' b' → logprob: -4.025990009307861
    4. ' a' → logprob: -5.400990009307861
    5. '(a' → logprob: -7.025990009307861
    6. ' ' → logprob: -8.650989532470703
    7. ' (' → logprob: -9.650989532470703
    8. '   ' → logprob: -10.025989532470703
    9. '(b' → logprob: -10.150989532470703
    10. '  ' → logprob: -10.275989532470703

Token 82: ']),
' (ID: 34147)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.23241078853607178
    2. '],' → logprob: -1.6074107885360718
    3. ',' → logprob: -6.482410907745361
    4. ']' → logprob: -6.732410907745361
    5. '),' → logprob: -6.982410907745361
    6. '-' → logprob: -7.357410907745361
    7. ')' → logprob: -7.357410907745361
    8. ']))' → logprob: -7.482410907745361
    9. ')])' → logprob: -7.732410907745361
    10. ']),' → logprob: -8.607410430908203

Token 83: '   ' (ID: 271)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.3251563608646393
    2. '   ' → logprob: -1.325156331062317
    3. ' False' → logprob: -4.575156211853027
    4. '}' → logprob: -7.075156211853027
    5. 'True' → logprob: -7.450156211853027
    6. '(False' → logprob: -10.450156211853027
    7. ' True' → logprob: -10.700156211853027
    8. ' ' → logprob: -11.700156211853027
    9. '       ' → logprob: -11.950156211853027
    10. ')' → logprob: -12.075156211853027

Token 84: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' (adapté à ' False') → logprob: -0.3140145540237427
    2. ' False' → logprob: -1.5640145540237427
    3. '   ' → logprob: -2.814014434814453
    4. 'True' → logprob: -9.564014434814453
    5. ' ' → logprob: -9.564014434814453
    6. ' True' → logprob: -10.564014434814453
    7. '}' → logprob: -10.814014434814453
    8. '(False' → logprob: -11.314014434814453
    9. '  ' → logprob: -11.439014434814453
    10. '    ' → logprob: -12.501514434814453

Token 85: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.632542913896032e-05
    2. ' :' → logprob: -10.125046730041504
    3. '=' → logprob: -12.375046730041504
    4. '):' → logprob: -14.875046730041504
    5. '=lambda' → logprob: -15.125046730041504
    6. '   ' → logprob: -15.375046730041504
    7. '=True' → logprob: -16.000045776367188
    8. ':**' → logprob: -16.250045776367188
    9. ')' → logprob: -16.375045776367188
    10. ':return' → logprob: -16.375045776367188

Token 86: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.18138852715492249
    2. 'lambda' → logprob: -1.8063884973526
    3. 'None' → logprob: -7.3063883781433105
    4. ' None' → logprob: -7.6813883781433105
    5. '(lambda' → logprob: -8.056388854980469
    6. ' ' → logprob: -10.056388854980469
    7. '0' → logprob: -10.806388854980469
    8. 'False' → logprob: -10.868888854980469
    9. '    ' → logprob: -11.306388854980469
    10. 'True' → logprob: -11.493888854980469

Token 87: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0026987127494066954
    2. ' :' → logprob: -7.00269889831543
    3. '():' → logprob: -7.00269889831543
    4. '()' → logprob: -7.50269889831543
    5. ' ' → logprob: -9.25269889831543
    6. ' ()' → logprob: -10.25269889831543
    7. ')' → logprob: -11.00269889831543
    8. 'None' → logprob: -11.12769889831543
    9. '0' → logprob: -11.31519889831543
    10. '  ' → logprob: -11.37769889831543

Token 88: ' reduce' (ID: 10389)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5931119918823242
    2. ' None' → logprob: -1.4681119918823242
    3. ' reduce' → logprob: -2.843111991882324
    4. 'reduce' → logprob: -2.968111991882324
    5. 'a' → logprob: -3.593111991882324
    6. '0' → logprob: -3.968111991882324
    7. ' a' → logprob: -4.343111991882324
    8. 'b' → logprob: -4.968111991882324
    9. ' ' → logprob: -5.218111991882324
    10. 'lambda' → logprob: -5.343111991882324

Token 89: '(lambda' (ID: 43341)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.07592780888080597
    2. '(' → logprob: -2.700927734375
    3. '(lambda' → logprob: -5.200927734375
    4. '(operator' → logprob: -8.450927734375
    5. '(
' → logprob: -9.325927734375
    6. 'mul' → logprob: -10.075927734375
    7. ' (' → logprob: -10.325927734375
    8. '(s' → logprob: -10.450927734375
    9. ')' → logprob: -11.450927734375
    10. '(pow' → logprob: -11.575927734375

Token 90: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.03377006575465202
    2. 'x' → logprob: -3.4087700843811035
    3. ' t' → logprob: -10.158769607543945
    4. ' ' → logprob: -10.158769607543945
    5. ' a' → logprob: -11.283769607543945
    6. ' y' → logprob: -11.408769607543945
    7. '  ' → logprob: -12.783769607543945
    8. ' acc' → logprob: -13.096269607543945
    9. 'a' → logprob: -13.346269607543945
    10. 'acc' → logprob: -13.408769607543945

Token 91: ',' (ID: 11)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5559934973716736
    2. ',' → logprob: -1.0559935569763184
    3. ' ,' → logprob: -2.8059935569763184
    4. 'x' → logprob: -4.430993556976318
    5. ' ' → logprob: -5.930993556976318
    6. ' lambda' → logprob: -6.430993556976318
    7. 'lambda' → logprob: -7.930993556976318
    8. ' y' → logprob: -8.05599308013916
    9. ' a' → logprob: -8.43099308013916
    10. 'a' → logprob: -8.55599308013916

Token 92: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3138447403907776
    2. 'y' → logprob: -1.3138446807861328
    3. 'x' → logprob: -8.188844680786133
    4. ' x' → logprob: -8.313844680786133
    5. ' ' → logprob: -10.438844680786133
    6. ',' → logprob: -11.438844680786133
    7. ',y' → logprob: -12.438844680786133
    8. '  ' → logprob: -12.563844680786133
    9. '   ' → logprob: -12.813844680786133
    10. '    ' → logprob: -12.813844680786133

Token 93: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007670864462852478
    2. ' :' → logprob: -5.132670879364014
    3. ',' → logprob: -6.507670879364014
    4. ':x' → logprob: -9.382670402526855
    5. ' x' → logprob: -9.757670402526855
    6. ' ,' → logprob: -10.632670402526855
    7. '   ' → logprob: -10.757670402526855
    8. ',x' → logprob: -10.882670402526855
    9. ' ' → logprob: -11.257670402526855
    10. ':,' → logprob: -12.007670402526855

Token 94: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.48299941420555115
    2. 'x' → logprob: -0.9829994440078735
    3. 'lambda' → logprob: -6.232999324798584
    4. 'a' → logprob: -6.607999324798584
    5. ' lambda' → logprob: -6.732999324798584
    6. ' y' → logprob: -6.732999324798584
    7. 'y' → logprob: -7.107999324798584
    8. ' a' → logprob: -7.107999324798584
    9. ' (' → logprob: -7.982999324798584
    10. 'abs' → logprob: -8.607999801635742

Token 95: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.038186993449926376
    2. '+' → logprob: -3.288187026977539
    3. '+y' → logprob: -9.538187026977539
    4. ' ' → logprob: -10.663187026977539
    5. 'y' → logprob: -11.288187026977539
    6. ' plus' → logprob: -11.788187026977539
    7. ' y' → logprob: -11.913187026977539
    8. ',' → logprob: -12.413187026977539
    9. ' +
' → logprob: -12.413187026977539
    10. ' ' → logprob: -12.663187026977539

Token 96: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.17445865273475647
    2. 'y' → logprob: -1.924458622932434
    3. ' [' → logprob: -5.2994585037231445
    4. '[' → logprob: -5.7994585037231445
    5. '1' → logprob: -6.6744585037231445
    6. ',' → logprob: -6.7994585037231445
    7. ' ' → logprob: -7.0494585037231445
    8. '[y' → logprob: -7.5494585037231445
    9. ' a' → logprob: -7.6744585037231445
    10. 'a' → logprob: -7.7994585037231445

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013774950057268143
    2. ' ,' → logprob: -7.126377582550049
    3. ',y' → logprob: -8.87637710571289
    4. '   ' → logprob: -8.87637710571289
    5. ',[' → logprob: -9.87637710571289
    6. 'y' → logprob: -10.12637710571289
    7. ')' → logprob: -10.62637710571289
    8. ',a' → logprob: -10.62637710571289
    9. '       ' → logprob: -11.12637710571289
    10. '[' → logprob: -11.25137710571289

Token 98: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.16588491201400757
    2. '[a' → logprob: -2.2908849716186523
    3. '[b' → logprob: -3.7908849716186523
    4. '[' → logprob: -4.415884971618652
    5. 'range' → logprob: -4.915884971618652
    6. ' range' → logprob: -5.040884971618652
    7. '   ' → logprob: -6.790884971618652
    8. ' ' → logprob: -7.415884971618652
    9. ' a' → logprob: -8.665884971618652
    10. ' b' → logprob: -9.165884971618652

Token 99: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20647066831588745
    2. 'b' → logprob: -1.7064707279205322
    3. 'i' → logprob: -5.831470489501953
    4. ' a' → logprob: -7.456470489501953
    5. 'range' → logprob: -7.581470489501953
    6. '(a' → logprob: -8.081470489501953
    7. ' b' → logprob: -8.706470489501953
    8. 'x' → logprob: -8.956470489501953
    9. '[a' → logprob: -9.706470489501953
    10. '1' → logprob: -9.956470489501953

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0041540260426700115
    2. ' ,' → logprob: -5.629154205322266
    3. '])' → logprob: -8.379154205322266
    4. '   ' → logprob: -9.254154205322266
    5. ')' → logprob: -9.504154205322266
    6. ',b' → logprob: -10.379154205322266
    7. ' ' → logprob: -10.754154205322266
    8. ',
' → logprob: -10.879154205322266
    9. 'b' → logprob: -11.379154205322266
    10. ')])' → logprob: -11.379154205322266

Token 101: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3811562955379486
    2. 'b' → logprob: -2.0061562061309814
    3. ' a' → logprob: -2.2561562061309814
    4. 'a' → logprob: -3.0061562061309814
    5. '1' → logprob: -4.0061564445495605
    6. ' ' → logprob: -4.7561564445495605
    7. '2' → logprob: -7.1311564445495605
    8. ''' → logprob: -9.381155967712402
    9. ' '' → logprob: -9.381155967712402
    10. '0' → logprob: -9.381155967712402

Token 102: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5975895524024963
    2. '-' → logprob: -0.8475895524024963
    3. '])' → logprob: -4.222589492797852
    4. ',' → logprob: -5.222589492797852
    5. '   ' → logprob: -7.847589492797852
    6. ' ' → logprob: -8.097589492797852
    7. '1' → logprob: -8.847589492797852
    8. ')])' → logprob: -9.097589492797852
    9. '+' → logprob: -9.347589492797852
    10. ' ])' → logprob: -9.472589492797852

Token 103: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033720970153808594
    2. ' ' → logprob: -3.4087209701538086
    3. '2' → logprob: -10.283720970153809
    4. '   ' → logprob: -10.783720970153809
    5. '    ' → logprob: -12.346220970153809
    6. '<|end|>' → logprob: -12.533720970153809
    7. '0' → logprob: -12.971220970153809
    8. '```' → logprob: -13.721220970153809
    9. '  ' → logprob: -13.971220970153809
    10. '	' → logprob: -13.971220970153809

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001058295019902289
    2. ' ' → logprob: -6.876058101654053
    3. '2' → logprob: -11.126058578491211
    4. '   ' → logprob: -12.001058578491211
    5. '  ' → logprob: -13.751058578491211
    6. '<|end|>' → logprob: -13.876058578491211
    7. '3' → logprob: -14.626058578491211
    8. '    ' → logprob: -15.063558578491211
    9. '0' → logprob: -15.188558578491211
    10. '```' → logprob: -15.626058578491211

Token 105: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.007007694337517023
    2. ')' → logprob: -5.257007598876953
    3. ']),' → logprob: -7.007007598876953
    4. '),' → logprob: -7.882007598876953
    5. ')])' → logprob: -8.632007598876953
    6. '   ' → logprob: -9.882007598876953
    7. ' ])' → logprob: -10.007007598876953
    8. '])
' → logprob: -10.382007598876953
    9. ']))' → logprob: -10.507007598876953
    10. '],' → logprob: -10.757007598876953

Token 106: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.001833088113926351
    2. ')' → logprob: -6.376832962036133
    3. '})' → logprob: -9.876832962036133
    4. '}
' → logprob: -10.251832962036133
    5. ')}' → logprob: -10.626832962036133
    6. '}

' → logprob: -12.001832962036133
    7. '   ' → logprob: -12.501832962036133
    8. ' }' → logprob: -12.626832962036133
    9. '[' → logprob: -13.126832962036133
    10. '}[' → logprob: -13.376832962036133

Token 107: 'print' (ID: 1598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.90354984998703
    2. 'result' → logprob: -1.4035499095916748
    3. ':' → logprob: -2.528549909591675
    4. '
' → logprob: -2.903549909591675
    5. 'c' → logprob: -3.028549909591675
    6. ':
' → logprob: -3.778549909591675
    7. ')' → logprob: -3.903549909591675
    8. '#' → logprob: -4.278549671173096
    9. ' if' → logprob: -4.403549671173096
    10. 'n' → logprob: -4.778549671173096

Token 108: '([
' (ID: 18206)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027101054787635803
    2. '(c' → logprob: -3.7771010398864746
    3. '((' → logprob: -6.277101039886475
    4. '('' → logprob: -6.652101039886475
    5. '("("' → logprob: -8.152101516723633
    6. '(a' → logprob: -9.027101516723633
    7. '(case' → logprob: -9.152101516723633
    8. '(True' → logprob: -10.152101516723633
    9. '(`' → logprob: -10.152101516723633
    10. '([' → logprob: -10.902101516723633

Token 109: '   ' (ID: 271)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.005234832875430584
    2. ' cases' → logprob: -5.380234718322754
    3. 'a' → logprob: -8.755234718322754
    4. '   ' → logprob: -9.005234718322754
    5. 'b' → logprob: -10.130234718322754
    6. 'case' → logprob: -10.255234718322754
    7. 'True' → logprob: -10.380234718322754
    8. '(a' → logprob: -10.505234718322754
    9. 'int' → logprob: -10.630234718322754
    10. ' a' → logprob: -10.755234718322754

Token 110: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' (adapté à ' cases') → logprob: -0.003725376445800066
    2. ' cases' → logprob: -5.878725528717041
    3. '   ' → logprob: -8.128725051879883
    4. 'a' → logprob: -8.378725051879883
    5. 'True' → logprob: -9.753725051879883
    6. 'b' → logprob: -10.003725051879883
    7. 'case' → logprob: -10.128725051879883
    8. '(a' → logprob: -10.128725051879883
    9. 'not' → logprob: -10.378725051879883
    10. ' True' → logprob: -10.878725051879883

Token 111: '[a' (ID: 32035)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05293167382478714
    2. '[a' → logprob: -3.177931785583496
    3. 'a' → logprob: -4.927931785583496
    4. 'True' → logprob: -6.552931785583496
    5. '[b' → logprob: -7.427931785583496
    6. '][' → logprob: -9.302931785583496
    7. '[
' → logprob: -9.302931785583496
    8. ' [' → logprob: -9.427931785583496
    9. 'not' → logprob: -9.927931785583496
    10. '   ' → logprob: -9.927931785583496

Token 112: ' >' (ID: 1424)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3107215464115143
    2. ' ==' → logprob: -1.935721516609192
    3. '>' → logprob: -2.3107216358184814
    4. ' >' → logprob: -3.9357216358184814
    5. '!=' → logprob: -6.560721397399902
    6. ']' → logprob: -7.310721397399902
    7. ' !=' → logprob: -7.935721397399902
    8. ' ' → logprob: -8.435721397399902
    9. ' <' → logprob: -8.435721397399902
    10. '<' → logprob: -8.435721397399902

Token 113: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00741069670766592
    2. '1' → logprob: -5.007410526275635
    3. ' b' → logprob: -7.632410526275635
    4. ' ' → logprob: -8.882411003112793
    5. '0' → logprob: -9.632411003112793
    6. '   ' → logprob: -13.507411003112793
    7. 'a' → logprob: -13.507411003112793
    8. '2' → logprob: -13.882411003112793
    9. '10' → logprob: -14.382411003112793
    10. '  ' → logprob: -15.194911003112793

Token 114: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20453402400016785
    2. ']()' → logprob: -2.4545340538024902
    3. '],' → logprob: -2.5795340538024902
    4. '],
' → logprob: -4.07953405380249
    5. '()],' → logprob: -5.95453405380249
    6. '()]' → logprob: -6.45453405380249
    7. '()],
' → logprob: -7.45453405380249
    8. '](' → logprob: -7.95453405380249
    9. '],

' → logprob: -7.95453405380249
    10. '])' → logprob: -7.95453405380249

Token 115: '(),
' (ID: 5757)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.17223653197288513
    2. ',' → logprob: -2.422236442565918
    3. ']' → logprob: -3.422236442565918
    4. ')' → logprob: -3.922236442565918
    5. '],' → logprob: -4.922236442565918
    6. ',
' → logprob: -5.047236442565918
    7. '()' → logprob: -7.297236442565918
    8. ')])' → logprob: -7.422236442565918
    9. ']()' → logprob: -8.172236442565918
    10. '(),' → logprob: -8.297236442565918

Token 116: '   ' (ID: 271)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.38885703682899475
    2. ' cases' → logprob: -1.1388570070266724
    3. '   ' → logprob: -6.263856887817383
    4. '    
' → logprob: -10.638856887817383
    5. 'case' → logprob: -10.888856887817383
    6. '    ' → logprob: -11.888856887817383
    7. ' ' → logprob: -12.138856887817383
    8. ' 
' → logprob: -12.513856887817383
    9. '[
' → logprob: -13.138856887817383
    10. 'c' → logprob: -13.263856887817383

Token 117: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' (adapté à ' cases') → logprob: -0.023256894201040268
    2. ' cases' → logprob: -3.773256778717041
    3. '   ' → logprob: -12.1482572555542
    4. 'case' → logprob: -12.1482572555542
    5. ' ' → logprob: -15.6482572555542
    6. ' case' → logprob: -16.273256301879883
    7. '
' → logprob: -16.523256301879883
    8. '    
' → logprob: -16.648256301879883
    9. '_cases' → logprob: -17.148256301879883
    10. '    ' → logprob: -17.398256301879883

Token 118: '_eq' (ID: 28373)
  Prédit: '_eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eq' → logprob: -0.031215881928801537
    2. '[a' → logprob: -3.5312159061431885
    3. '[_' → logprob: -7.031215667724609
    4. '[b' → logprob: -7.906215667724609
    5. '[' → logprob: -8.78121566772461
    6. '_equals' → logprob: -11.40621566772461
    7. '_equal' → logprob: -11.78121566772461
    8. '_[' → logprob: -11.78121566772461
    9. '_' → logprob: -12.15621566772461
    10. '==' → logprob: -12.78121566772461

Token 119: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0005526751047000289
    2. '[' → logprob: -7.750552654266357
    3. '[b' → logprob: -10.250553131103516
    4. ' [' → logprob: -10.750553131103516
    5. 'a' → logprob: -10.750553131103516
    6. '[(' → logprob: -11.125553131103516
    7. '   ' → logprob: -12.125553131103516
    8. '][' → logprob: -12.375553131103516
    9. ')[' → logprob: -12.375553131103516
    10. ' ' → logprob: -12.500553131103516

Token 120: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14344632625579834
    2. ' ==' → logprob: -2.018446445465088
    3. ' ' → logprob: -8.89344596862793
    4. '=' → logprob: -9.01844596862793
    5. ']' → logprob: -9.01844596862793
    6. ']==' → logprob: -9.01844596862793
    7. '>=' → logprob: -9.89344596862793
    8. '==
' → logprob: -9.89344596862793
    9. '>' → logprob: -10.01844596862793
    10. ')' → logprob: -10.14344596862793

Token 121: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.009782769717276096
    2. ' b' → logprob: -4.634782791137695
    3. 'a' → logprob: -11.634782791137695
    4. ' ' → logprob: -12.134782791137695
    5. '	b' → logprob: -12.134782791137695
    6. '   ' → logprob: -12.384782791137695
    7. ')b' → logprob: -14.134782791137695
    8. ' a' → logprob: -14.509782791137695
    9. '  ' → logprob: -14.884782791137695
    10. ' б' → logprob: -15.259782791137695

Token 122: ']()
' (ID: 95523)
  Prédit: ']()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']()' → logprob: -0.030249550938606262
    2. ']' → logprob: -3.53024959564209
    3. '()]' → logprob: -7.65524959564209
    4. ']()
' → logprob: -10.78024959564209
    5. ' ]' → logprob: -12.90524959564209
    6. '()' → logprob: -14.53024959564209
    7. '   ' → logprob: -15.15524959564209
    8. '>()' → logprob: -15.15524959564209
    9. ')]' → logprob: -15.15524959564209
    10. ' ' → logprob: -15.90524959564209

Token 123: '][' (ID: 2696)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0009423116571269929
    2. ')' → logprob: -7.125942230224609
    3. ']' → logprob: -9.00094223022461
    4. ' ])' → logprob: -12.00094223022461
    5. '])
' → logprob: -12.37594223022461
    6. ')])' → logprob: -13.37594223022461
    7. '))' → logprob: -14.12594223022461
    8. ')]' → logprob: -14.25094223022461
    9. ']))' → logprob: -14.87594223022461
    10. ''])' → logprob: -15.75094223022461

Token 124: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3675190806388855
    2. '-' → logprob: -1.3675191402435303
    3. '])' → logprob: -3.3675191402435303
    4. ')' → logprob: -4.242518901824951
    5. '1' → logprob: -6.617518901824951
    6. ' -' → logprob: -7.117518901824951
    7. ')])' → logprob: -7.492518901824951
    8. ' ' → logprob: -7.742518901824951
    9. ']' → logprob: -8.61751937866211
    10. '2' → logprob: -8.86751937866211

Token 125: ' if' (ID: 538)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.05662960559129715
    2. ')' → logprob: -3.0566296577453613
    3. ']' → logprob: -4.931629657745361
    4. ')])' → logprob: -7.556629657745361
    5. ')]' → logprob: -8.431629180908203
    6. '))' → logprob: -11.181629180908203
    7. ' ])' → logprob: -11.306629180908203
    8. '+' → logprob: -11.681629180908203
    9. ']])' → logprob: -12.431629180908203
    10. ']))' → logprob: -12.431629180908203

Token 126: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023444626480340958
    2. ' a' → logprob: -3.773444652557373
    3. '(a' → logprob: -8.898444175720215
    4. 'b' → logprob: -11.148444175720215
    5. ' not' → logprob: -11.898444175720215
    6. ' (' → logprob: -12.273444175720215
    7. 'True' → logprob: -12.273444175720215
    8. ' ' → logprob: -12.398444175720215
    9. '   ' → logprob: -12.398444175720215
    10. 'not' → logprob: -12.523444175720215

Token 127: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.38991639018058777
    2. '>' → logprob: -1.1399164199829102
    3. '>b' → logprob: -6.38991641998291
    4. ' <=' → logprob: -8.01491641998291
    5. ' ' → logprob: -8.13991641998291
    6. ' >=' → logprob: -8.76491641998291
    7. '>=' → logprob: -9.01491641998291
    8. '<=' → logprob: -9.13991641998291
    9. ' <' → logprob: -9.38991641998291
    10. ' ==' → logprob: -9.63991641998291

Token 128: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.014179613441228867
    2. ' b' → logprob: -4.264179706573486
    3. ' ' → logprob: -11.764179229736328
    4. '0' → logprob: -12.889179229736328
    5. '>b' → logprob: -13.389179229736328
    6. 'a' → logprob: -14.639179229736328
    7. '  ' → logprob: -14.639179229736328
    8. '   ' → logprob: -14.639179229736328
    9. '=' → logprob: -14.639179229736328
    10. '>' → logprob: -15.264179229736328

Token 129: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2254386842250824
    2. ' else' → logprob: -1.6004387140274048
    3. ']' → logprob: -11.350439071655273
    4. '<|end|>' → logprob: -12.350439071655273
    5. '	else' → logprob: -12.475439071655273
    6. ')' → logprob: -13.350439071655273
    7. '```' → logprob: -14.225439071655273
    8. ' ' → logprob: -14.725439071655273
    9. ',' → logprob: -14.850439071655273
    10. 'elses' → logprob: -14.850439071655273

Token 130: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4656579120783135e-05
    2. ' ' → logprob: -10.250044822692871
    3. '-' → logprob: -12.375044822692871
    4. '0' → logprob: -13.625044822692871
    5. '   ' → logprob: -13.625044822692871
    6. 'True' → logprob: -13.750044822692871
    7. '(' → logprob: -15.000044822692871
    8. 'a' → logprob: -15.125044822692871
    9. '(a' → logprob: -16.000043869018555
    10. 'not' → logprob: -16.125043869018555

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9795445849886164e-05
    2. ' ' → logprob: -10.125060081481934
    3. '   ' → logprob: -11.875060081481934
    4. '-' → logprob: -12.500060081481934
    5. '0' → logprob: -12.625060081481934
    6. 'True' → logprob: -12.750060081481934
    7. 'False' → logprob: -14.250060081481934
    8. 'a' → logprob: -14.875060081481934
    9. '  ' → logprob: -15.000060081481934
    10. 'not' → logprob: -15.312560081481934

Token 132: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.04627148061990738
    2. ')' → logprob: -3.171271562576294
    3. ')])' → logprob: -5.921271324157715
    4. ']' → logprob: -8.421271324157715
    5. ')]' → logprob: -8.421271324157715
    6. '))' → logprob: -9.421271324157715
    7. ' ])' → logprob: -10.421271324157715
    8. ']))' → logprob: -11.421271324157715
    9. '])
' → logprob: -12.296271324157715
    10. ' )' → logprob: -12.296271324157715


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 130
Tokens correctement prédits (1ère position, stricte): 47
Tokens correctement prédits (1ère position, avec adaptation): 52
Tokens correctement prédits (top 10): 102
Précision stricte (1ère position): 36.15%
Précision adaptée (1ère position): 40.00%
Précision (top 10): 78.46%
================================================================================
