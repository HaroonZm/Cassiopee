================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

# ユーザ独特の可読性意識: variables japonaisées, italique, indentation atypique

N, M = (lambda: map(int, sys.stdin.readline().split()))()

parente = list(range(N+1))
hauteur = [0]*(N+1)

def racine(ix):
  while parente[ix]!=ix:
    # assignation bizarre pour compresser le chemin
    parente[ix],ix=(parente[parente[ix]], parente[ix])
  return ix

def attacher(u,v):
  X= racine(u)
  Y= racine(v)
  if X==Y: return
  # "préférence": flatten le côté de u systématiquement à moins que v soit plus profond
  if ~(hauteur[X]-hauteur[Y]) < 0:
    parente[X] = Y
  else:
    parente[Y] = X
  if hauteur[X]==hauteur[Y]:
    hauteur[X] += True  # True == 1, expression non-standard

def connecte(q,s):
  return racine(q) is racine(s)

for _:_____ in [[0]]*M:
    a,b,c=[*map(int,sys.stdin.readline().split())]
    attacher(a,b)

# 参考スタイル: for/else anti-pattern
k=0
for i in range(1,N+1):
    racine(i)
else:
    k=len({*parente})-1

print(k)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.042949914932251
    2. '.' → logprob: -1.167949914932251
    3. '<|end|>' → logprob: -2.292949914932251
    4. 'import' → logprob: -2.542949914932251
    5. '' → logprob: -2.542949914932251
    6. '#' → logprob: -3.792949914932251
    7. '\' → logprob: -4.417949676513672
    8. '
' → logprob: -4.792949676513672
    9. 'print' → logprob: -5.042949676513672
    10. ';' → logprob: -5.667949676513672

Token 4: ' �' (ID: 7574)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24100935459136963
    2. ' This' → logprob: -2.86600923538208
    3. ' The' → logprob: -3.74100923538208
    4. ' argparse' → logprob: -3.99100923538208
    5. ' is' → logprob: -4.61600923538208
    6. 'def' → logprob: -4.61600923538208
    7. ' argv' → logprob: -4.86600923538208
    8. ' def' → logprob: -4.99100923538208
    9. 'argv' → logprob: -4.99100923538208
    10. 'This' → logprob: -4.99100923538208

Token 5: '�' (ID: 99)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.031130721792578697
    2. '=' → logprob: -3.906130790710449
    3. '-' → logprob: -5.906130790710449
    4. 'd' → logprob: -6.656130790710449
    5. ' ' → logprob: -6.781130790710449
    6. '_' → logprob: -7.031130790710449
    7. '.' → logprob: -7.406130790710449
    8. '?' → logprob: -7.531130790710449
    9. ',' → logprob: -7.906130790710449
    10. '!' → logprob: -8.03113079071045

Token 6: 'ー' (ID: 3022)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06834995001554489
    2. '=' → logprob: -2.943349838256836
    3. ' ' → logprob: -5.443349838256836
    4. '_' → logprob: -5.943349838256836
    5. '-' → logprob: -6.443349838256836
    6. '```' → logprob: -7.443349838256836
    7. '.' → logprob: -7.568349838256836
    8. 'f' → logprob: -7.693349838256836
    9. ',' → logprob: -8.068349838256836
    10. '!' → logprob: -8.193349838256836

Token 7: 'ザ' (ID: 43759)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04731304198503494
    2. '=' → logprob: -4.297313213348389
    3. '-' → logprob: -4.547313213348389
    4. 'd' → logprob: -5.547313213348389
    5. '.' → logprob: -5.672313213348389
    6. '_' → logprob: -6.547313213348389
    7. ' #' → logprob: -6.672313213348389
    8. '!' → logprob: -6.922313213348389
    9. 'r' → logprob: -7.047313213348389
    10. 'm' → logprob: -7.172313213348389

Token 8: '独' (ID: 45933)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16163967549800873
    2. '#' → logprob: -2.91163969039917
    3. '_' → logprob: -3.16163969039917
    4. 'ー' → logprob: -3.66163969039917
    5. ' #' → logprob: -4.78663969039917
    6. '=' → logprob: -4.91163969039917
    7. '-' → logprob: -6.16163969039917
    8. ':' → logprob: -7.03663969039917
    9. ' _' → logprob: -7.03663969039917
    10. ' `' → logprob: -7.16163969039917

Token 9: '特' (ID: 8176)
  Prédit: 'ー'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ー' → logprob: -0.0018529583467170596
    2. 'ザ' → logprob: -7.251852989196777
    3. '｜
' → logprob: -7.501852989196777
    4. '�' → logprob: -9.501852989196777
    5. '一' → logprob: -9.501852989196777
    6. 'ザー' → logprob: -9.876852989196777
    7. 'ｰ' → logprob: -9.876852989196777
    8. '者' → logprob: -10.376852989196777
    9. '��' → logprob: -10.501852989196777
    10. '```' → logprob: -10.626852989196777

Token 10: 'の' (ID: 3385)
  Prédit: 'ー'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ー' → logprob: -0.5066951513290405
    2. 'の' → logprob: -1.3816951513290405
    3. '#' → logprob: -3.00669527053833
    4. '_' → logprob: -3.88169527053833
    5. ' ' → logprob: -4.13169527053833
    6. 'な' → logprob: -4.38169527053833
    7. '-' → logprob: -5.38169527053833
    8. '�' → logprob: -5.50669527053833
    9. ''' → logprob: -5.75669527053833
    10. '`' → logprob: -5.75669527053833

Token 11: '可' (ID: 6571)
  Prédit: '設定'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '設定' → logprob: -0.877880334854126
    2. 'ー' → logprob: -2.002880334854126
    3. 'メ' → logprob: -2.127880334854126
    4. 'コ' → logprob: -3.252880334854126
    5. '環' → logprob: -3.627880334854126
    6. '情' → logprob: -3.627880334854126
    7. 'コメント' → logprob: -3.752880334854126
    8. '#' → logprob: -4.002880096435547
    9. '言' → logprob: -4.127880096435547
    10. '注' → logprob: -4.127880096435547

Token 12: '読' (ID: 45877)
  Prédit: 'ー'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ー' → logprob: -0.9551761746406555
    2. '```' → logprob: -0.9551761746406555
    3. '#' → logprob: -2.7051761150360107
    4. '字' → logprob: -3.7051761150360107
    5. '``' → logprob: -3.9551761150360107
    6. 'def' → logprob: -4.45517635345459
    7. '様' → logprob: -4.70517635345459
    8. 'し' → logprob: -4.83017635345459
    9. 'ん' → logprob: -4.95517635345459
    10. '変' → logprob: -5.08017635345459

Token 13: '性' (ID: 8360)
  Prédit: '性'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '性' → logprob: -0.10020990669727325
    2. '```' → logprob: -3.100209951400757
    3. 'ビ' → logprob: -3.350209951400757
    4. 'ン' → logprob: -4.975209712982178
    5. 'な' → logprob: -6.100209712982178
    6. '字' → logprob: -7.225209712982178
    7. '�' → logprob: -7.225209712982178
    8. '#' → logprob: -7.350209712982178
    9. '``' → logprob: -7.600209712982178
    10. 'ー' → logprob: -7.725209712982178

Token 14: '意' (ID: 11987)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6531722545623779
    2. '性' → logprob: -1.528172254562378
    3. 'を' → logprob: -2.153172254562378
    4. 'の' → logprob: -3.028172254562378
    5. ',' → logprob: -3.903172254562378
    6. '、' → logprob: -4.028172492980957
    7. '向' → logprob: -4.778172492980957
    8. ' #' → logprob: -4.903172492980957
    9. 'が' → logprob: -5.153172492980957
    10. 'ー' → logprob: -5.153172492980957

Token 15: '識' (ID: 141299)
  Prédit: 'ン'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ン' → logprob: -0.3749416470527649
    2. '性' → logprob: -2.99994158744812
    3. 'を' → logprob: -3.24994158744812
    4. '良' → logprob: -3.62494158744812
    5. '味' → logprob: -3.62494158744812
    6. '```' → logprob: -3.99994158744812
    7. 'の' → logprob: -4.124941825866699
    8. 'ん' → logprob: -4.249941825866699
    9. 'リ' → logprob: -4.624941825866699
    10. '向' → logprob: -4.624941825866699

Token 16: ':' (ID: 25)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08910796046257019
    2. '_' → logprob: -3.4641079902648926
    3. 'の' → logprob: -4.464107990264893
    4. '性' → logprob: -4.839107990264893
    5. ' ' → logprob: -4.964107990264893
    6. ' #' → logprob: -5.089107990264893
    7. 'を' → logprob: -5.214107990264893
    8. '=' → logprob: -6.089107990264893
    9. ',' → logprob: -6.464107990264893
    10. 'def' → logprob: -6.964107990264893

Token 17: ' variables' (ID: 13955)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08479413390159607
    2. ' ' → logprob: -3.209794044494629
    3. ' #' → logprob: -3.459794044494629
    4. '_' → logprob: -5.084794044494629
    5. 'の' → logprob: -7.959794044494629
    6. ' ' → logprob: -8.209794044494629
    7. '　' → logprob: -8.522294044494629
    8. ''' → logprob: -8.709794044494629
    9. '‌' → logprob: -9.209794044494629
    10. 'def' → logprob: -9.272294044494629

Token 18: ' japonais' (ID: 162300)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5588223934173584
    2. '#' → logprob: -1.1838223934173584
    3. ' ' → logprob: -2.8088223934173584
    4. '=' → logprob: -3.3088223934173584
    5. ' =' → logprob: -4.6838226318359375
    6. ' #' → logprob: -5.0588226318359375
    7. ',' → logprob: -5.8088226318359375
    8. '_=' → logprob: -6.5588226318359375
    9. ':' → logprob: -6.8088226318359375
    10. ' _' → logprob: -7.1838226318359375

Token 19: 'ées' (ID: 5161)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3980349600315094
    2. '_' → logprob: -1.398034930229187
    3. ' ' → logprob: -2.7730350494384766
    4. ' #' → logprob: -5.523035049438477
    5. 'の' → logprob: -6.523035049438477
    6. '
' → logprob: -6.773035049438477
    7. 'é' → logprob: -6.898035049438477
    8. '=' → logprob: -7.273035049438477
    9. ' 
' → logprob: -7.273035049438477
    10. '\' → logprob: -7.273035049438477

Token 20: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.14023515582084656
    2. '_' → logprob: -2.390235185623169
    3. ' ' → logprob: -3.890235185623169
    4. ' #' → logprob: -4.89023494720459
    5. 'é' → logprob: -5.26523494720459
    6. '=' → logprob: -7.01523494720459
    7. ':' → logprob: -7.39023494720459
    8. 'の' → logprob: -7.39023494720459
    9. ',' → logprob: -7.64023494720459
    10. 'import' → logprob: -8.64023494720459

Token 21: ' ital' (ID: 38593)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6021530032157898
    2. ' ' → logprob: -2.3521530628204346
    3. '#' → logprob: -2.6021530628204346
    4. '_' → logprob: -2.7271530628204346
    5. ' #' → logprob: -3.4771530628204346
    6. ',' → logprob: -4.2271528244018555
    7. ' spaces' → logprob: -4.2896528244018555
    8. 'spaces' → logprob: -4.4146528244018555
    9. 'é' → logprob: -4.4771528244018555
    10. ' espaces' → logprob: -4.4771528244018555

Token 22: 'ique' (ID: 2222)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.1852309703826904
    2. 'ique' → logprob: -1.4352309703826904
    3. 'c' → logprob: -2.0602309703826904
    4. 'q' → logprob: -2.3102309703826904
    5. 'iques' → logprob: -2.5602309703826904
    6. '#' → logprob: -3.4352309703826904
    7. '```' → logprob: -3.4352309703826904
    8. 'z' → logprob: -3.6852309703826904
    9. 'que' → logprob: -4.1852312088012695
    10. 'i' → logprob: -4.8102312088012695

Token 23: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.42775997519493103
    2. '_' → logprob: -1.1777600049972534
    3. ' ' → logprob: -4.052760124206543
    4. ',' → logprob: -5.177760124206543
    5. 'é' → logprob: -5.427760124206543
    6. ' #' → logprob: -6.677760124206543
    7. 'a' → logprob: -6.927760124206543
    8. 'import' → logprob: -6.927760124206543
    9. ':' → logprob: -6.927760124206543
    10. '' → logprob: -7.052760124206543

Token 24: ' indentation' (ID: 170733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6453391909599304
    2. 'é' → logprob: -1.8953392505645752
    3. '#' → logprob: -2.145339250564575
    4. ' ' → logprob: -2.520339250564575
    5. ' ' → logprob: -3.520339250564575
    6. ',' → logprob: -3.645339250564575
    7. ' #' → logprob: -4.770339012145996
    8. '```' → logprob: -4.770339012145996
    9. 'es' → logprob: -4.895339012145996
    10. ' ' → logprob: -5.145339012145996

Token 25: ' atyp' (ID: 138863)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.31344494223594666
    2. '_' → logprob: -2.0634448528289795
    3. '
' → logprob: -2.8134448528289795
    4. ' ' → logprob: -3.5634448528289795
    5. '\' → logprob: -4.688445091247559
    6. ',' → logprob: -5.188445091247559
    7. '' → logprob: -5.188445091247559
    8. '\n' → logprob: -5.563445091247559
    9. ':' → logprob: -5.688445091247559
    10. 'import' → logprob: -5.813445091247559

Token 26: 'ique' (ID: 2222)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2999157905578613
    2. ' ' → logprob: -1.6749157905578613
    3. '#' → logprob: -2.1749157905578613
    4. ' ' → logprob: -2.4249157905578613
    5. '\t' → logprob: -2.7999157905578613
    6. 'n' → logprob: -3.2999157905578613
    7. '　' → logprob: -3.6749157905578613
    8. '_' → logprob: -3.9249157905578613
    9. '```' → logprob: -4.049915790557861
    10. '=' → logprob: -4.299915790557861

Token 27: '

' (ID: 279)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2875284254550934
    2. '
' → logprob: -2.5375285148620605
    3. '#' → logprob: -3.0375285148620605
    4. ' ' → logprob: -3.0375285148620605
    5. '' → logprob: -3.7875285148620605
    6. 'é' → logprob: -4.1625285148620605
    7. '

' → logprob: -5.0375285148620605
    8. '\' → logprob: -5.1625285148620605
    9. '_
' → logprob: -5.1625285148620605
    10. ' 
' → logprob: -5.5375285148620605

Token 28: 'N' (ID: 45)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12347786128520966
    2. 'é' → logprob: -2.9984779357910156
    3. '#' → logprob: -3.6234779357910156
    4. '\' → logprob: -4.623477935791016
    5. ' ' → logprob: -5.623477935791016
    6. '＿' → logprob: -5.748477935791016
    7. '
' → logprob: -5.998477935791016
    8. 'a' → logprob: -6.248477935791016
    9. 'def' → logprob: -6.248477935791016
    10. '' → logprob: -6.373477935791016

Token 29: ',' (ID: 11)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.7300407290458679
    2. 'o' → logprob: -1.7300407886505127
    3. 'a' → logprob: -2.3550407886505127
    4. 'e' → logprob: -2.7300407886505127
    5. 'b' → logprob: -3.1050407886505127
    6. '_' → logprob: -4.105040550231934
    7. 'u' → logprob: -4.355040550231934
    8. 'ô' → logprob: -4.480040550231934
    9. '　' → logprob: -4.605040550231934
    10. 'ombre' → logprob: -4.730040550231934

Token 30: ' M' (ID: 391)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32423773407936096
    2. ' ' → logprob: -1.9492377042770386
    3. '  ' → logprob: -3.199237823486328
    4. ' ' → logprob: -3.324237823486328
    5. '　' → logprob: -4.199237823486328
    6. ' sys' → logprob: -5.074237823486328
    7. '*' → logprob: -5.949237823486328
    8. ' ‌' → logprob: -5.949237823486328
    9. 'int' → logprob: -6.324237823486328
    10. '_' → logprob: -6.449237823486328

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0238001998513937
    2. '=' → logprob: -3.7738001346588135
    3. ' ' → logprob: -8.023799896240234
    4. '＝' → logprob: -8.523799896240234
    5. ',' → logprob: -11.023799896240234
    6. ' ' → logprob: -12.523799896240234
    7. ' =
' → logprob: -13.148799896240234
    8. ' ,' → logprob: -13.273799896240234
    9. ' \xe2\x89' → logprob: -14.023799896240234
    10. '  ' → logprob: -14.773799896240234

Token 32: ' (' (ID: 350)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.03735923767089844
    2. 'map' → logprob: -3.4123592376708984
    3. ' ' → logprob: -6.162359237670898
    4. ' input' → logprob: -6.787359237670898
    5. ' int' → logprob: -9.037359237670898
    6. '10' → logprob: -9.412359237670898
    7. ' ' → logprob: -9.412359237670898
    8. 'input' → logprob: -9.912359237670898
    9. ' list' → logprob: -10.287359237670898
    10. 'int' → logprob: -10.412359237670898

Token 33: 'lambda' (ID: 35280)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.3877711296081543
    2. ' map' → logprob: -1.2627711296081543
    3. 'int' → logprob: -3.3877711296081543
    4. ' int' → logprob: -5.512771129608154
    5. ' ' → logprob: -9.137771606445312
    6. 'input' → logprob: -9.387771606445312
    7. ' sys' → logprob: -9.637771606445312
    8. ' ' → logprob: -9.762771606445312
    9. 'sys' → logprob: -9.762771606445312
    10. ')' → logprob: -9.887771606445312

Token 34: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.2598665952682495
    2. 'int' → logprob: -2.259866714477539
    3. ' int' → logprob: -2.259866714477539
    4. 'lambda' → logprob: -2.384866714477539
    5. 'x' → logprob: -2.509866714477539
    6. ' sys' → logprob: -2.634866714477539
    7. ':' → logprob: -2.759866714477539
    8. ' lambda' → logprob: -3.259866714477539
    9. ' n' → logprob: -3.384866714477539
    10. ' :' → logprob: -3.884866714477539

Token 35: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.16751253604888916
    2. 'map' → logprob: -1.9175125360488892
    3. 'int' → logprob: -5.7925124168396
    4. ' int' → logprob: -5.9175124168396
    5. ' sys' → logprob: -7.4175124168396
    6. ' list' → logprob: -8.667512893676758
    7. ' tuple' → logprob: -8.917512893676758
    8. ' input' → logprob: -9.167512893676758
    9. ' ' → logprob: -9.167512893676758
    10. 'input' → logprob: -9.417512893676758

Token 36: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03483199328184128
    2. '(' → logprob: -3.409832000732422
    3. '(str' → logprob: -7.034832000732422
    4. '(lambda' → logprob: -8.784832000732422
    5. 'int' → logprob: -9.534832000732422
    6. '<int' → logprob: -10.784832000732422
    7. ' int' → logprob: -11.159832000732422
    8. '(
' → logprob: -11.784832000732422
    9. '（' → logprob: -12.159832000732422
    10. 'str' → logprob: -12.284832000732422

Token 37: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.11337123066186905
    2. '(' → logprob: -2.4883711338043213
    3. ')' → logprob: -4.1133713722229
    4. '(input' → logprob: -5.2383713722229
    5. ' (' → logprob: -7.4883713722229
    6. 'sys' → logprob: -7.4883713722229
    7. ',' → logprob: -7.7383713722229
    8. ')(' → logprob: -8.238370895385742
    9. 'input' → logprob: -8.488370895385742
    10. '=sys' → logprob: -9.613370895385742

Token 38: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.4323827624320984
    2. 'sys' → logprob: -1.3073828220367432
    3. ' input' → logprob: -3.057382822036743
    4. 'input' → logprob: -3.432382822036743
    5. '(sys' → logprob: -7.807382583618164
    6. '	sys' → logprob: -8.807382583618164
    7. '=sys' → logprob: -8.932382583618164
    8. ' ' → logprob: -8.932382583618164
    9. ')' → logprob: -9.057382583618164
    10. ' ' → logprob: -9.682382583618164

Token 39: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.004897854290902615
    2. '.' → logprob: -5.6298980712890625
    3. '.argv' → logprob: -6.7548980712890625
    4. '.stdout' → logprob: -9.504898071289062
    5. '.std' → logprob: -10.754898071289062
    6. ' .' → logprob: -11.129898071289062
    7. '.readline' → logprob: -11.504898071289062
    8. '．' → logprob: -12.254898071289062
    9. '.input' → logprob: -13.754898071289062
    10. '.stderr' → logprob: -14.004898071289062

Token 40: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.011630082502961159
    2. '.' → logprob: -4.511630058288574
    3. '.read' → logprob: -7.761630058288574
    4. '.stdin' → logprob: -9.261630058288574
    5. '.readlines' → logprob: -10.636630058288574
    6. ' .' → logprob: -11.636630058288574
    7. '.)' → logprob: -11.636630058288574
    8. ').' → logprob: -11.636630058288574
    9. '．' → logprob: -12.511630058288574
    10. ')' → logprob: -13.511630058288574

Token 41: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2637976408004761
    2. '())' → logprob: -1.513797640800476
    3. '()' → logprob: -4.638797760009766
    4. '()))' → logprob: -6.263797760009766
    5. ')' → logprob: -10.013797760009766
    6. '()),' → logprob: -10.263797760009766
    7. ' ())' → logprob: -10.388797760009766
    8. '（）' → logprob: -10.638797760009766
    9. '(' → logprob: -11.138797760009766
    10. '(),' → logprob: -11.638797760009766

Token 42: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.060746774077415466
    2. 'split' → logprob: -3.060746669769287
    3. 'rstrip' → logprob: -4.435746669769287
    4. ')' → logprob: -9.185747146606445
    5. ' strip' → logprob: -9.560747146606445
    6. 'read' → logprob: -10.060747146606445
    7. '().' → logprob: -10.935747146606445
    8. '(strip' → logprob: -13.185747146606445
    9. '-strip' → logprob: -13.685747146606445
    10. '.strip' → logprob: -14.435747146606445

Token 43: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1344934105873108
    2. '())' → logprob: -2.134493350982666
    3. '))' → logprob: -5.509493350982666
    4. '()' → logprob: -6.009493350982666
    5. ')' → logprob: -7.884493350982666
    6. '(' → logprob: -8.759493827819824
    7. '()),' → logprob: -8.884493827819824
    8. '())))' → logprob: -9.134493827819824
    9. '()));' → logprob: -9.259493827819824
    10. '()))
' → logprob: -9.634493827819824

Token 44: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005810309085063636
    2. '())' → logprob: -8.000580787658691
    3. ')' → logprob: -9.125580787658691
    4. '(' → logprob: -9.625580787658691
    5. '()
' → logprob: -11.000580787658691
    6. ' ()' → logprob: -11.000580787658691
    7. '().__' → logprob: -11.125580787658691
    8. '();' → logprob: -12.375580787658691
    9. '（）' → logprob: -13.125580787658691
    10. '()]' → logprob: -13.375580787658691

Token 45: 'par' (ID: 796)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19773297011852264
    2. ':' → logprob: -2.572732925415039
    3. '' → logprob: -3.572732925415039
    4. '\n' → logprob: -3.572732925415039
    5. '  
' → logprob: -4.822732925415039
    6. ':
' → logprob: -4.822732925415039
    7. ' 
' → logprob: -5.447732925415039
    8. '```' → logprob: -5.822732925415039
    9. '#' → logprob: -6.072732925415039
    10. ' ' → logprob: -6.072732925415039

Token 46: 'ente' (ID: 1576)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.595195472240448
    2. 'm' → logprob: -1.5951955318450928
    3. 't' → logprob: -1.8451955318450928
    4. 'a' → logprob: -3.4701955318450928
    5. 'ams' → logprob: -3.5951955318450928
    6. '```' → logprob: -4.970195293426514
    7. 'met' → logprob: -6.220195293426514
    8. 'ts' → logprob: -6.220195293426514
    9. 'ms' → logprob: -6.220195293426514
    10. 'ent' → logprob: -6.595195293426514

Token 47: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2623544931411743
    2. 'l' → logprob: -1.8873544931411743
    3. 'n' → logprob: -3.0123543739318848
    4. '=' → logprob: -4.387354373931885
    5. ' =' → logprob: -4.887354373931885
    6. 'nt' → logprob: -5.137354373931885
    7. '```' → logprob: -6.887354373931885
    8. '[' → logprob: -7.512354373931885
    9. 'ls' → logprob: -7.637354373931885
    10. '_map' → logprob: -8.387354850769043

Token 48: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13647370040416718
    2. '[-' → logprob: -2.7614736557006836
    3. ' [' → logprob: -3.1364736557006836
    4. '[list' → logprob: -4.761473655700684
    5. '[int' → logprob: -5.761473655700684
    6. '{}' → logprob: -5.886473655700684
    7. '[n' → logprob: -6.386473655700684
    8. '[]' → logprob: -7.136473655700684
    9. ' [-' → logprob: -7.261473655700684
    10. 'list' → logprob: -7.511473655700684

Token 49: '(range' (ID: 50017)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.523891031742096
    2. '(range' → logprob: -0.898891031742096
    3. '(N' → logprob: -8.64889144897461
    4. '([' → logprob: -9.02389144897461
    5. '(map' → logprob: -9.39889144897461
    6. '(s' → logprob: -9.64889144897461
    7. '（' → logprob: -9.89889144897461
    8. '(n' → logprob: -9.89889144897461
    9. '((' → logprob: -10.14889144897461
    10. '(
' → logprob: -10.39889144897461

Token 50: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.002628684975206852
    2. '(' → logprob: -6.002628803253174
    3. '(n' → logprob: -10.002628326416016
    4. ' (' → logprob: -10.252628326416016
    5. '(M' → logprob: -10.377628326416016
    6. 'N' → logprob: -11.502628326416016
    7. '(
' → logprob: -11.502628326416016
    8. '（' → logprob: -11.627628326416016
    9. ')' → logprob: -13.002628326416016
    10. '((' → logprob: -13.377628326416016

Token 51: '+' (ID: 10)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00268373335711658
    2. '))
' → logprob: -7.127683639526367
    3. ' ))' → logprob: -7.252683639526367
    4. ')' → logprob: -7.502683639526367
    5. '+' → logprob: -7.627683639526367
    6. '))

' → logprob: -9.877683639526367
    7. '))
' → logprob: -11.002683639526367
    8. ' +' → logprob: -11.377683639526367
    9. ' ' → logprob: -11.627683639526367
    10. ' )' → logprob: -11.752683639526367

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031067515374161303
    2. ' ' → logprob: -8.125310897827148
    3. '１' → logprob: -11.625310897827148
    4. '2' → logprob: -12.750310897827148
    5. '  ' → logprob: -15.250310897827148
    6. '```' → logprob: -15.375310897827148
    7. '   ' → logprob: -15.437810897827148
    8. ')' → logprob: -15.687810897827148
    9. '(' → logprob: -15.875310897827148
    10. ' ' → logprob: -16.00031089782715

Token 53: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.009852301329374313
    2. ')' → logprob: -4.634852409362793
    3. ' ))' → logprob: -9.634852409362793
    4. '))
' → logprob: -11.384852409362793
    5. ')))' → logprob: -11.884852409362793
    6. ' )' → logprob: -12.759852409362793
    7. '))

' → logprob: -13.259852409362793
    8. '+' → logprob: -13.509852409362793
    9. '),' → logprob: -13.884852409362793
    10. '])' → logprob: -14.009852409362793

Token 54: 'ha' (ID: 1716)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0594298392534256
    2. '\' → logprob: -4.80942964553833
    3. '' → logprob: -4.93442964553833
    4. 'par' → logprob: -5.18442964553833
    5. 'r' → logprob: -5.43442964553833
    6. '\n' → logprob: -5.93442964553833
    7. 'parent' → logprob: -5.93442964553833
    8. '```' → logprob: -5.93442964553833
    9. ' def' → logprob: -6.05942964553833
    10. ' ' → logprob: -6.18442964553833

Token 55: 'uteur' (ID: 25666)
  Prédit: 'uteur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uteur' → logprob: -0.6099382638931274
    2. 'ute' → logprob: -0.9849382638931274
    3. 'uter' → logprob: -3.109938144683838
    4. 'ut' → logprob: -4.734938144683838
    5. 'ite' → logprob: -5.484938144683838
    6. 'uto' → logprob: -5.734938144683838
    7. 'utte' → logprob: -6.359938144683838
    8. 'uf' → logprob: -6.609938144683838
    9. 'utor' → logprob: -6.734938144683838
    10. 'u' → logprob: -6.734938144683838

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04538619518280029
    2. 's' → logprob: -3.17038631439209
    3. '=' → logprob: -6.17038631439209
    4. ' ' → logprob: -8.29538631439209
    5. '=[]' → logprob: -11.79538631439209
    6. ' s' → logprob: -12.17038631439209
    7. '  ' → logprob: -12.29538631439209
    8. ' ' → logprob: -12.42038631439209
    9. ' =[' → logprob: -12.54538631439209
    10. '＝' → logprob: -13.17038631439209

Token 57: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009817715734243393
    2. ' [' → logprob: -4.634817600250244
    3. '[N' → logprob: -9.759818077087402
    4. '0' → logprob: -13.509818077087402
    5. '[n' → logprob: -14.384818077087402
    6. '[-' → logprob: -14.634818077087402
    7. '   ' → logprob: -15.134818077087402
    8. '[int' → logprob: -15.134818077087402
    9. 'N' → logprob: -15.509818077087402
    10. '[len' → logprob: -16.009817123413086

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000803672184702009
    2. ' ' → logprob: -7.625803470611572
    3. '1' → logprob: -8.12580394744873
    4. '-' → logprob: -12.37580394744873
    5. '2' → logprob: -13.43830394744873
    6. '   ' → logprob: -13.68830394744873
    7. ' ' → logprob: -13.68830394744873
    8. '  ' → logprob: -13.81330394744873
    9. '０' → logprob: -14.06330394744873
    10. '```' → logprob: -14.06330394744873

Token 59: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07960484176874161
    2. ']*(' → logprob: -2.5796048641204834
    3. ']*' → logprob: -7.704604625701904
    4. ' ]' → logprob: -8.579605102539062
    5. ' for' → logprob: -9.704605102539062
    6. ']+' → logprob: -11.954605102539062
    7. 'for' → logprob: -12.579605102539062
    8. '](' → logprob: -13.579605102539062
    9. ')' → logprob: -13.704605102539062
    10. ' ' → logprob: -14.079605102539062

Token 60: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.9623810658231378e-05
    2. ' N' → logprob: -10.875020027160645
    3. '(N' → logprob: -15.625020027160645
    4. ' ' → logprob: -16.125019073486328
    5. '(' → logprob: -16.500019073486328
    6. '	N' → logprob: -16.625019073486328
    7. '   ' → logprob: -17.000019073486328
    8. 'n' → logprob: -17.625019073486328
    9. 'Ｎ' → logprob: -17.625019073486328
    10. '  ' → logprob: -17.875019073486328

Token 61: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.173704271830502e-06
    2. ' +' → logprob: -13.00000286102295
    3. '＋' → logprob: -14.50000286102295
    4. '+
' → logprob: -15.12500286102295
    5. '1' → logprob: -17.125003814697266
    6. '+)' → logprob: -17.250003814697266
    7. '+[' → logprob: -18.125003814697266
    8. ')' → logprob: -18.375003814697266
    9. '```' → logprob: -18.500003814697266
    10. '+

' → logprob: -18.750003814697266

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010437761375214905
    2. '+' → logprob: -9.250103950500488
    3. '<|end|>' → logprob: -12.875103950500488
    4. ' ' → logprob: -13.250103950500488
    5. '```' → logprob: -13.375103950500488
    6. ')' → logprob: -13.875103950500488
    7. '2' → logprob: -14.125103950500488
    8. '   ' → logprob: -16.125104904174805
    9. '[' → logprob: -16.375104904174805
    10. '１' → logprob: -16.375104904174805

Token 63: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7133641196996905e-05
    2. ' )' → logprob: -10.75002670288086
    3. ')
' → logprob: -12.62502670288086
    4. ')

' → logprob: -13.37502670288086
    5. '）' → logprob: -15.37502670288086
    6. '))' → logprob: -16.00002670288086
    7. ')
' → logprob: -16.25002670288086
    8. ')#' → logprob: -16.50002670288086
    9. ')`' → logprob: -16.62502670288086
    10. '),' → logprob: -16.75002670288086

Token 64: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21712882816791534
    2. '
' → logprob: -1.717128872871399
    3. '
' → logprob: -5.217128753662109
    4. '

' → logprob: -5.342128753662109
    5. '' → logprob: -6.217128753662109
    6. 'd' → logprob: -6.842128753662109
    7. ' def' → logprob: -7.967128753662109
    8. ' 
' → logprob: -7.967128753662109
    9. ' 

' → logprob: -7.967128753662109
    10. '```' → logprob: -8.21712875366211

Token 65: ' rac' (ID: 12334)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.1553632616996765
    2. ' trouver' → logprob: -2.9053633213043213
    3. 'find' → logprob: -3.4053633213043213
    4. ' trouve' → logprob: -4.030363082885742
    5. ' union' → logprob: -4.155363082885742
    6. ' ' → logprob: -5.780363082885742
    7. 'tr' → logprob: -6.030363082885742
    8. ' chercher' → logprob: -6.155363082885742
    9. 'union' → logprob: -6.530363082885742
    10. ' trou' → logprob: -6.655363082885742

Token 66: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.00012154294381616637
    2. 'i' → logprob: -10.750121116638184
    3. '```' → logprob: -10.750121116638184
    4. 'in' → logprob: -11.875121116638184
    5. '   ' → logprob: -11.875121116638184
    6. '``' → logprob: -12.000121116638184
    7. 'ines' → logprob: -12.125121116638184
    8. 'oine' → logprob: -12.125121116638184
    9. 'cine' → logprob: -12.500121116638184
    10. 'c' → logprob: -12.625121116638184

Token 67: '(ix' (ID: 183917)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2260969877243042
    2. '(u' → logprob: -1.7260969877243042
    3. '(x' → logprob: -3.9760971069335938
    4. '(a' → logprob: -6.226097106933594
    5. '(p' → logprob: -6.726097106933594
    6. '(v' → logprob: -7.226097106933594
    7. '(s' → logprob: -7.226097106933594
    8. ' (' → logprob: -8.226097106933594
    9. '(parent' → logprob: -8.476097106933594
    10. '(node' → logprob: -8.851097106933594

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010720713064074516
    2. ')' → logprob: -4.635720729827881
    3. '):
' → logprob: -7.135720729827881
    4. ' ):' → logprob: -9.635720252990723
    5. ')：' → logprob: -10.010720252990723
    6. '):
' → logprob: -11.135720252990723
    7. ':' → logprob: -11.635720252990723
    8. '）：' → logprob: -12.010720252990723
    9. '_' → logprob: -12.135720252990723
    10. 'e' → logprob: -13.010720252990723

Token 69: ' ' (ID: 220)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7037304639816284
    2. '   ' → logprob: -1.4537304639816284
    3. '	if' → logprob: -1.9537304639816284
    4. ' :' → logprob: -3.078730583190918
    5. ' if' → logprob: -3.328730583190918
    6. ' ' → logprob: -3.453730583190918
    7. ':
' → logprob: -6.328730583190918
    8. '	while' → logprob: -6.578730583190918
    9. ' ' → logprob: -6.703730583190918
    10. '  ' → logprob: -6.703730583190918

Token 70: ' while' (ID: 2049)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2691558003425598
    2. ' if' → logprob: -1.894155740737915
    3. 'if' → logprob: -3.519155740737915
    4. '	if' → logprob: -4.019155979156494
    5. ':' → logprob: -4.394155979156494
    6. '   ' → logprob: -4.519155979156494
    7. '  ' → logprob: -5.269155979156494
    8. ' :' → logprob: -5.519155979156494
    9. ' while' → logprob: -6.519155979156494
    10. '	while' → logprob: -6.519155979156494

Token 71: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.49419650435447693
    2. 'par' → logprob: -0.9941965341567993
    3. 'ix' → logprob: -4.11919641494751
    4. ' ix' → logprob: -6.36919641494751
    5. '	par' → logprob: -6.36919641494751
    6. '(par' → logprob: -9.369196891784668
    7. ' ' → logprob: -9.744196891784668
    8. '_par' → logprob: -10.369196891784668
    9. '(ix' → logprob: -11.244196891784668
    10. 'Par' → logprob: -12.119196891784668

Token 72: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.00020449401927180588
    2. ' ente' → logprob: -9.125204086303711
    3. 'entee' → logprob: -10.250204086303711
    4. 'ent' → logprob: -10.250204086303711
    5. 'en' → logprob: -11.875204086303711
    6. 'e' → logprob: -12.375204086303711
    7. ' ' → logprob: -12.875204086303711
    8. 'ENTE' → logprob: -13.250204086303711
    9. 'enteel' → logprob: -13.875204086303711
    10. 'ент' → logprob: -14.000204086303711

Token 73: '[ix' (ID: 165910)
  Prédit: '[ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ix' → logprob: -0.003202312160283327
    2. '[' → logprob: -5.753202438354492
    3. 'ix' → logprob: -12.128202438354492
    4. '[i' → logprob: -12.378202438354492
    5. ' [' → logprob: -12.503202438354492
    6. '[ip' → logprob: -12.753202438354492
    7. '[parent' → logprob: -13.878202438354492
    8. 'par' → logprob: -13.878202438354492
    9. '```' → logprob: -14.378202438354492
    10. ' ' → logprob: -14.628202438354492

Token 74: ']!=' (ID: 85780)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01056454423815012
    2. ']!=' → logprob: -4.63556432723999
    3. ' ]' → logprob: -7.76056432723999
    4. '!=' → logprob: -8.635564804077148
    5. ' !=' → logprob: -9.385564804077148
    6. ' ' → logprob: -9.760564804077148
    7. '[' → logprob: -10.635564804077148
    8. ')' → logprob: -11.385564804077148
    9. ')!=' → logprob: -11.635564804077148
    10. '）' → logprob: -12.260564804077148

Token 75: 'ix' (ID: 1128)
  Prédit: 'ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.0036136091221123934
    2. ' ix' → logprob: -5.628613471984863
    3. ' ' → logprob: -12.003613471984863
    4. ' ' → logprob: -13.253613471984863
    5. '[ix' → logprob: -13.378613471984863
    6. 'ixi' → logprob: -13.753613471984863
    7. '_ix' → logprob: -13.878613471984863
    8. '(ix' → logprob: -14.253613471984863
    9. 'ic' → logprob: -14.503613471984863
    10. 'ixe' → logprob: -15.753613471984863

Token 76: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08814725279808044
    2. ':
' → logprob: -2.8381471633911133
    3. ' ' → logprob: -4.338147163391113
    4. '   ' → logprob: -5.213147163391113
    5. ' :' → logprob: -5.338147163391113
    6. ' and' → logprob: -6.838147163391113
    7. ' :
' → logprob: -7.713147163391113
    8. 'ix' → logprob: -8.088147163391113
    9. '  ' → logprob: -8.588147163391113
    10. ' ix' → logprob: -9.213147163391113

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0858674868941307
    2. '
' → logprob: -2.835867404937744
    3. '  
' → logprob: -4.835867404937744
    4. 'ix' → logprob: -5.335867404937744
    5. '    
' → logprob: -5.710867404937744
    6. ' ix' → logprob: -5.960867404937744
    7. ' 
' → logprob: -6.460867404937744
    8. ' ' → logprob: -7.085867404937744
    9. '   ' → logprob: -7.585867404937744
    10. '  ' → logprob: -7.710867404937744

Token 78: ' #' (ID: 1069)
  Prédit: ' ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ix' → logprob: -0.6725655198097229
    2. '   ' → logprob: -1.0475654602050781
    3. 'ix' → logprob: -2.172565460205078
    4. ' ' → logprob: -4.172565460205078
    5. '  ' → logprob: -5.422565460205078
    6. ' ' → logprob: -7.047565460205078
    7. '[ix' → logprob: -7.172565460205078
    8. ' par' → logprob: -7.297565460205078
    9. '
' → logprob: -7.422565460205078
    10. '    ' → logprob: -7.547565460205078

Token 79: ' assign' (ID: 14975)
  Prédit: 'ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.4029429852962494
    2. ' ix' → logprob: -1.6529430150985718
    3. ' ' → logprob: -2.9029428958892822
    4. ' par' → logprob: -3.4029428958892822
    5. '   ' → logprob: -3.7779428958892822
    6. 'par' → logprob: -3.7779428958892822
    7. '  ' → logprob: -5.777943134307861
    8. '    ' → logprob: -7.402943134307861
    9. '	par' → logprob: -7.402943134307861
    10. ' ' → logprob: -7.527943134307861

Token 80: 'ation' (ID: 387)
  Prédit: 'ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.6656584739685059
    2. ' ix' → logprob: -1.5406584739685059
    3. ' ' → logprob: -2.040658473968506
    4. '   ' → logprob: -2.665658473968506
    5. '[ix' → logprob: -3.790658473968506
    6. 'ment' → logprob: -4.415658473968506
    7. ' par' → logprob: -4.790658473968506
    8. '(ix' → logprob: -4.915658473968506
    9. ' =' → logprob: -5.040658473968506
    10. 'er' → logprob: -5.415658473968506

Token 81: ' bizarre' (ID: 61150)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6437288522720337
    2. ' ' → logprob: -1.5187288522720337
    3. ' =' → logprob: -1.6437288522720337
    4. ' ix' → logprob: -3.768728733062744
    5. ',' → logprob: -4.643728733062744
    6. '=' → logprob: -5.018728733062744
    7. 'ix' → logprob: -5.143728733062744
    8. '[ix' → logprob: -5.393728733062744
    9. '  ' → logprob: -5.768728733062744
    10. '    ' → logprob: -6.018728733062744

Token 82: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7237513661384583
    2. '   ' → logprob: -1.2237513065338135
    3. ' =' → logprob: -2.4737513065338135
    4. ' ix' → logprob: -3.0987513065338135
    5. ',' → logprob: -3.2237513065338135
    6. '  ' → logprob: -4.973751544952393
    7. '[ix' → logprob: -4.973751544952393
    8. '    ' → logprob: -4.973751544952393
    9. ' par' → logprob: -5.223751544952393
    10. '     ' → logprob: -5.473751544952393

Token 83: ' comp' (ID: 1050)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -1.4612081050872803
    2. ' par' → logprob: -1.7112081050872803
    3. ' rac' → logprob: -1.9612081050872803
    4. ' racc' → logprob: -2.4612081050872803
    5. 'rac' → logprob: -2.4612081050872803
    6. ' comp' → logprob: -2.7112081050872803
    7. 'r' → logprob: -3.3362081050872803
    8. ' ' → logprob: -3.7112081050872803
    9. ' écr' → logprob: -4.523708343505859
    10. ' compression' → logprob: -4.648708343505859

Token 84: 'resser' (ID: 48872)
  Prédit: 'resser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resser' → logprob: -0.9038000702857971
    2. 'acter' → logprob: -1.5288000106811523
    3. 'r' → logprob: -1.7788000106811523
    4. 'act' → logprob: -3.2788000106811523
    5. 'ar' → logprob: -3.5288000106811523
    6. 'ter' → logprob: -3.5288000106811523
    7. 'ress' → logprob: -3.9038000106811523
    8. 'res' → logprob: -4.528800010681152
    9. 'uter' → logprob: -5.153800010681152
    10. 'rim' → logprob: -5.153800010681152

Token 85: ' le' (ID: 505)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.14343352615833282
    2. ' ' → logprob: -2.6434335708618164
    3. 'par' → logprob: -2.8934335708618164
    4. '   ' → logprob: -6.143433570861816
    5. '	par' → logprob: -6.643433570861816
    6. 'ix' → logprob: -6.768433570861816
    7. '[ix' → logprob: -7.143433570861816
    8. ' ix' → logprob: -7.893433570861816
    9. '  ' → logprob: -8.018433570861816
    10. 'parent' → logprob: -8.893433570861816

Token 86: ' chemin' (ID: 45035)
  Prédit: ' chemin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chemin' → logprob: -0.3983408510684967
    2. 'che' → logprob: -1.6483408212661743
    3. 'par' → logprob: -2.148340940475464
    4. 'path' → logprob: -5.023340702056885
    5. 'parent' → logprob: -5.023340702056885
    6. ' ' → logprob: -6.023340702056885
    7. ' parcours' → logprob: -6.898340702056885
    8. ' par' → logprob: -7.148340702056885
    9. 'ar' → logprob: -8.273341178894043
    10. ' trajet' → logprob: -8.523341178894043

Token 87: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03678349405527115
    2. ' par' → logprob: -4.786783695220947
    3. ' ' → logprob: -5.036783695220947
    4. '[ix' → logprob: -5.911783695220947
    5. '     ' → logprob: -6.036783695220947
    6. ' ix' → logprob: -6.036783695220947
    7. '	par' → logprob: -6.036783695220947
    8. '  ' → logprob: -6.411783695220947
    9. '    ' → logprob: -6.661783695220947
    10. '    
' → logprob: -6.911783695220947

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38293927907943726
    2. ' ' → logprob: -1.757939338684082
    3. ' :' → logprob: -3.507939338684082
    4. '[ix' → logprob: -3.632939338684082
    5. ' ix' → logprob: -3.757939338684082
    6. ':' → logprob: -4.507939338684082
    7. '  ' → logprob: -4.757939338684082
    8. ',' → logprob: -4.882939338684082
    9. 'ix' → logprob: -5.132939338684082
    10. '    ' → logprob: -5.132939338684082

Token 89: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.4158003628253937
    2. 'par' (adapté à ' par') → logprob: -1.1658003330230713
    3. ' ' → logprob: -4.04080057144165
    4. '	par' → logprob: -4.79080057144165
    5. '   ' → logprob: -7.04080057144165
    6. '  ' → logprob: -7.66580057144165
    7. 'ix' → logprob: -7.79080057144165
    8. ' ' → logprob: -8.290800094604492
    9. '    ' → logprob: -8.790800094604492
    10. ' ix' → logprob: -8.915800094604492

Token 90: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.0008614383405074477
    2. 'ent' → logprob: -7.875861644744873
    3. ' ente' → logprob: -7.875861644744873
    4. 'ete' → logprob: -11.125861167907715
    5. 'entee' → logprob: -11.250861167907715
    6. ' ' → logprob: -11.250861167907715
    7. 'en' → logprob: -11.375861167907715
    8. 'e' → logprob: -11.500861167907715
    9. 'enter' → logprob: -12.125861167907715
    10. 'ented' → logprob: -12.125861167907715

Token 91: '[ix' (ID: 165910)
  Prédit: '[ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ix' → logprob: -0.0007300666766241193
    2. '[' → logprob: -7.250730037689209
    3. '[ip' → logprob: -11.500730514526367
    4. ' [' → logprob: -13.250730514526367
    5. '[idx' → logprob: -13.500730514526367
    6. '[I' → logprob: -13.625730514526367
    7. '```' → logprob: -13.750730514526367
    8. '[i' → logprob: -13.750730514526367
    9. '[ind' → logprob: -14.000730514526367
    10. '[ii' → logprob: -14.625730514526367

Token 92: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05027814581990242
    2. ']=' → logprob: -3.1752781867980957
    3. ' ' → logprob: -5.925278186798096
    4. ')' → logprob: -6.050278186798096
    5. '=' → logprob: -6.675278186798096
    6. ' ]' → logprob: -7.300278186798096
    7. ')=' → logprob: -9.300277709960938
    8. ' =' → logprob: -9.550277709960938
    9. ' ' → logprob: -10.175277709960938
    10. '	' → logprob: -11.050277709960938

Token 93: 'ix' (ID: 1128)
  Prédit: ' ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ix' → logprob: -0.349010169506073
    2. 'ix' → logprob: -1.2240102291107178
    3. ' ' → logprob: -8.974010467529297
    4. '_ix' → logprob: -9.099010467529297
    5. '=' → logprob: -9.349010467529297
    6. ' par' → logprob: -9.724010467529297
    7. '[ix' → logprob: -9.849010467529297
    8. 'par' → logprob: -9.974010467529297
    9. ' =' → logprob: -10.349010467529297
    10. 'Ix' → logprob: -11.849010467529297

Token 94: '=(' (ID: 9893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38704589009284973
    2. ' =' → logprob: -1.1370458602905273
    3. '=sys' → logprob: -9.137045860290527
    4. ' ' → logprob: -10.387045860290527
    5. '＝' → logprob: -12.012045860290527
    6. '=os' → logprob: -12.512045860290527
    7. '=ax' → logprob: -12.512045860290527
    8. '=root' → logprob: -12.762045860290527
    9. '=index' → logprob: -12.887045860290527
    10. '=len' → logprob: -13.262045860290527

Token 95: 'par' (ID: 796)
  Prédit: 'par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.12748664617538452
    2. ' par' → logprob: -2.1274867057800293
    3. 'rac' → logprob: -8.627486228942871
    4. '	par' → logprob: -8.877486228942871
    5. ' rac' → logprob: -9.252486228942871
    6. ' ' → logprob: -9.627486228942871
    7. '(par' → logprob: -10.127486228942871
    8. ')' → logprob: -11.877486228942871
    9. 'r' → logprob: -12.127486228942871
    10. 'pr' → logprob: -12.502486228942871

Token 96: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.00011045700375689194
    2. 'ent' → logprob: -9.375110626220703
    3. ' ente' → logprob: -11.750110626220703
    4. 'ete' → logprob: -12.125110626220703
    5. 'enter' → logprob: -12.875110626220703
    6. 'entes' → logprob: -13.000110626220703
    7. 'ents' → logprob: -14.125110626220703
    8. 'te' → logprob: -14.375110626220703
    9. 'e' → logprob: -14.375110626220703
    10. '[' → logprob: -14.625110626220703

Token 97: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.221884101862088e-05
    2. '[ix' → logprob: -9.875092506408691
    3. '(par' → logprob: -10.500092506408691
    4. 'par' → logprob: -12.375092506408691
    5. ' par' → logprob: -12.750092506408691
    6. '[parent' → logprob: -13.250092506408691
    7. ')[' → logprob: -13.375092506408691
    8. '	par' → logprob: -13.875092506408691
    9. ' [' → logprob: -14.625092506408691
    10. ' ' → logprob: -15.000092506408691

Token 98: 'par' (ID: 796)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9120768904685974
    2. '[ix' → logprob: -1.1620769500732422
    3. 'par' → logprob: -1.5370769500732422
    4. 'ix' → logprob: -3.162076950073242
    5. ' par' → logprob: -3.787076950073242
    6. '(par' → logprob: -5.662076950073242
    7. '	par' → logprob: -7.787076950073242
    8. ')' → logprob: -8.412076950073242
    9. ' [' → logprob: -8.537076950073242
    10. ' ix' → logprob: -8.787076950073242

Token 99: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.00020103710994590074
    2. '[ix' → logprob: -9.625201225280762
    3. 'ix' → logprob: -10.250201225280762
    4. '[' → logprob: -10.750201225280762
    5. 'te' → logprob: -10.750201225280762
    6. 'nte' → logprob: -11.250201225280762
    7. 'entes' → logprob: -11.875201225280762
    8. '][' → logprob: -11.875201225280762
    9. 'ete' → logprob: -12.625201225280762
    10. '(ix' → logprob: -13.125201225280762

Token 100: '[ix' (ID: 165910)
  Prédit: '[ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ix' → logprob: -0.00024608144303783774
    2. '[' → logprob: -8.625246047973633
    3. 'ix' → logprob: -10.000246047973633
    4. ']' → logprob: -11.750246047973633
    5. 'Ix' → logprob: -13.125246047973633
    6. ' [' → logprob: -13.250246047973633
    7. '_ix' → logprob: -13.250246047973633
    8. '][' → logprob: -13.500246047973633
    9. '[x' → logprob: -13.500246047973633
    10. ')' → logprob: -13.750246047973633

Token 101: ']],' (ID: 37171)
  Prédit: ']],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']],' → logprob: -0.11050640791654587
    2. '[ix' → logprob: -2.360506296157837
    3. ']])' → logprob: -5.485506534576416
    4. ']' → logprob: -5.860506534576416
    5. ']]' → logprob: -6.110506534576416
    6. ')],' → logprob: -8.110506057739258
    7. '],' → logprob: -8.485506057739258
    8. '])' → logprob: -8.485506057739258
    9. '']],' → logprob: -9.610506057739258
    10. ']),' → logprob: -9.860506057739258

Token 102: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.5760412812232971
    2. ' par' → logprob: -0.8260412812232971
    3. '	par' → logprob: -9.576041221618652
    4. ' ' → logprob: -11.076041221618652
    5. ')' → logprob: -11.826041221618652
    6. ' ' → logprob: -12.076041221618652
    7. '(par' → logprob: -13.451041221618652
    8. '_par' → logprob: -13.826041221618652
    9. 'Par' → logprob: -14.951041221618652
    10. '  ' → logprob: -15.326041221618652

Token 103: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -1.306760805164231e-05
    2. ' ente' → logprob: -11.62501335144043
    3. 'ent' → logprob: -13.00001335144043
    4. 'entes' → logprob: -14.25001335144043
    5. 'en' → logprob: -14.75001335144043
    6. 'ENTE' → logprob: -15.12501335144043
    7. 'enter' → logprob: -15.75001335144043
    8. ' ' → logprob: -16.50001335144043
    9. 'e' → logprob: -16.87501335144043
    10. 'entee' → logprob: -17.25001335144043

Token 104: '[ix' (ID: 165910)
  Prédit: '[ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ix' → logprob: -0.00017755765293259174
    2. '[' → logprob: -9.125177383422852
    3. 'ix' → logprob: -9.750177383422852
    4. 'par' → logprob: -12.250177383422852
    5. '[ind' → logprob: -13.750177383422852
    6. '(ix' → logprob: -14.000177383422852
    7. '[idx' → logprob: -14.500177383422852
    8. '[i' → logprob: -14.625177383422852
    9. '[x' → logprob: -14.750177383422852
    10. ')' → logprob: -15.000177383422852

Token 105: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001507405104348436
    2. ' )' → logprob: -8.875150680541992
    3. '）' → logprob: -12.625150680541992
    4. '])' → logprob: -12.750150680541992
    5. '))' → logprob: -13.500150680541992
    6. ' ' → logprob: -14.125150680541992
    7. '[' → logprob: -14.250150680541992
    8. ')
' → logprob: -14.875150680541992
    9. ')`' → logprob: -14.875150680541992
    10. ']' → logprob: -15.375150680541992

Token 106: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7102468013763428
    2. '
' → logprob: -1.5852468013763428
    3. '<|end|>' → logprob: -1.8352468013763428
    4. ')' → logprob: -2.8352468013763428
    5. '  
' → logprob: -3.2102468013763428
    6. '   ' → logprob: -4.085247039794922
    7. '\n' → logprob: -4.960247039794922
    8. '<|end|>' → logprob: -5.585247039794922
    9. '  ' → logprob: -5.835247039794922
    10. '	return' → logprob: -6.085247039794922

Token 107: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4580879211425781
    2. ')' → logprob: -1.7080879211425781
    3. ' return' → logprob: -3.333087921142578
    4. '<|end|>' → logprob: -3.458087921142578
    5. 'return' → logprob: -4.083087921142578
    6. '\n' → logprob: -4.083087921142578
    7. ':return' → logprob: -4.083087921142578
    8. '  
' → logprob: -4.208087921142578
    9. ' ' → logprob: -4.833087921142578
    10. ' 
' → logprob: -4.958087921142578

Token 108: ' ix' (ID: 44402)
  Prédit: 'ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.2832246422767639
    2. ' ix' → logprob: -1.4082245826721191
    3. ' par' → logprob: -6.533224582672119
    4. 'par' → logprob: -7.533224582672119
    5. ' ' → logprob: -10.408225059509277
    6. '(ix' → logprob: -10.908225059509277
    7. '[ix' → logprob: -11.283225059509277
    8. '_ix' → logprob: -11.783225059509277
    9. ' ' → logprob: -12.033225059509277
    10. 'Ix' → logprob: -13.408225059509277

Token 109: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39879941940307617
    2. '<|end|>' → logprob: -1.2737994194030762
    3. 'def' → logprob: -3.523799419403076
    4. '  
' → logprob: -4.773799419403076
    5. '

' → logprob: -5.523799419403076
    6. ' 
' → logprob: -6.273799419403076
    7. '<|end|>' → logprob: -6.273799419403076
    8. '```' → logprob: -7.148799419403076
    9. ' ' → logprob: -7.398799419403076
    10. '\n' → logprob: -7.398799419403076

Token 110: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27666568756103516
    2. 'def' → logprob: -1.7766656875610352
    3. '<|end|>' → logprob: -3.651665687561035
    4. '

' → logprob: -4.776665687561035
    5. ' ' → logprob: -4.776665687561035
    6. '' → logprob: -4.901665687561035
    7. '  
' → logprob: -5.276665687561035
    8. ' 
' → logprob: -5.401665687561035
    9. '\n' → logprob: -5.776665687561035
    10. '```' → logprob: -6.026665687561035

Token 111: ' att' (ID: 1927)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.3095899820327759
    2. ' union' → logprob: -1.9345899820327759
    3. 'un' → logprob: -3.1845898628234863
    4. ' unite' → logprob: -4.184589862823486
    5. ' unir' → logprob: -4.309589862823486
    6. ' fusion' → logprob: -4.684589862823486
    7. ' rac' → logprob: -4.809589862823486
    8. '_union' → logprob: -5.309589862823486
    9. 'fusion' → logprob: -5.684589862823486
    10. 'rac' → logprob: -5.934589862823486

Token 112: 'acher' (ID: 13652)
  Prédit: 'acher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acher' → logprob: -0.046394724398851395
    2. 'ra' → logprob: -3.9213948249816895
    3. 'r' → logprob: -4.0463948249816895
    4. 'a' → logprob: -6.4213948249816895
    5. 'endr' → logprob: -6.7963948249816895
    6. 'endre' → logprob: -6.9213948249816895
    7. 'ach' → logprob: -7.0463948249816895
    8. 'end' → logprob: -7.2963948249816895
    9. 'rach' → logprob: -7.5463948249816895
    10. 'rac' → logprob: -7.7963948249816895

Token 113: '(u' (ID: 17057)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.1002655029296875
    2. '(u' → logprob: -1.3502655029296875
    3. '(a' → logprob: -1.6002655029296875
    4. '(ix' → logprob: -1.7252655029296875
    5. '(' → logprob: -4.2252655029296875
    6. '(p' → logprob: -5.6002655029296875
    7. ' (' → logprob: -5.6002655029296875
    8. '(b' → logprob: -5.9752655029296875
    9. '(par' → logprob: -7.1002655029296875
    10. '(f' → logprob: -7.2252655029296875

Token 114: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015434370376169682
    2. ',v' → logprob: -4.265434265136719
    3. ' ,' → logprob: -6.890434265136719
    4. ',u' → logprob: -8.765434265136719
    5. ',p' → logprob: -11.015434265136719
    6. '，' → logprob: -11.515434265136719
    7. ',int' → logprob: -11.765434265136719
    8. ',b' → logprob: -11.765434265136719
    9. ',d' → logprob: -11.765434265136719
    10. ',n' → logprob: -11.890434265136719

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005985465249978006
    2. ')' → logprob: -7.500598430633545
    3. '):
' → logprob: -10.375598907470703
    4. ' ):' → logprob: -11.875598907470703
    5. ' ' → logprob: -12.500598907470703
    6. ')：' → logprob: -13.250598907470703
    7. ':' → logprob: -14.125598907470703
    8. '):
' → logprob: -15.250598907470703
    9. 'u' → logprob: -15.375598907470703
    10. ',' → logprob: -15.500598907470703

Token 116: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011640455573797226
    2. ' ru' → logprob: -5.261640548706055
    3. ' u' → logprob: -6.386640548706055
    4. 'u' → logprob: -6.386640548706055
    5. 'ru' → logprob: -6.511640548706055
    6. '  
' → logprob: -8.011640548706055
    7. ' ' → logprob: -8.136640548706055
    8. '   ' → logprob: -8.261640548706055
    9. 'Ru' → logprob: -8.636640548706055
    10. '	u' → logprob: -8.761640548706055

Token 117: ' X' (ID: 2127)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5552806854248047
    2. 'ru' → logprob: -0.9302806854248047
    3. 'pu' → logprob: -4.055280685424805
    4. ' ' → logprob: -4.930280685424805
    5. ' ru' → logprob: -6.430280685424805
    6. 'a' → logprob: -6.555280685424805
    7. 'ur' → logprob: -6.555280685424805
    8. '```' → logprob: -7.180280685424805
    9. '	u' → logprob: -8.180280685424805
    10. ' u' → logprob: -8.305280685424805

Token 118: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7026379108428955
    2. ',r' → logprob: -2.2026379108428955
    3. ',' → logprob: -2.5776379108428955
    4. 'rac' → logprob: -2.8276379108428955
    5. ' =' → logprob: -2.9526379108428955
    6. '=r' → logprob: -2.9526379108428955
    7. '_r' → logprob: -3.0776379108428955
    8. 'r' → logprob: -3.8276379108428955
    9. 'u' → logprob: -3.8276379108428955
    10. ',u' → logprob: -3.8276379108428955

Token 119: ' rac' (ID: 12334)
  Prédit: 'rac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rac' → logprob: -0.026369504630565643
    2. ' rac' → logprob: -3.651369571685791
    3. ' ' → logprob: -10.901369094848633
    4. 'race' → logprob: -11.901369094848633
    5. 'ric' → logprob: -12.151369094848633
    6. 'ra' → logprob: -12.213869094848633
    7. 'r' → logprob: -12.338869094848633
    8. ' ' → logprob: -12.838869094848633
    9. '```' → logprob: -13.088869094848633
    10. 'racial' → logprob: -13.213869094848633

Token 120: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.003212768817320466
    2. 'u' → logprob: -7.003212928771973
    3. 'ute' → logprob: -7.003212928771973
    4. 'ite' → logprob: -8.003212928771973
    5. 'uite' → logprob: -8.628212928771973
    6. '根' → logprob: -9.003212928771973
    7. '```' → logprob: -9.003212928771973
    8. 'iz' → logprob: -9.628212928771973
    9. 'ïne' → logprob: -9.878212928771973
    10. 'inite' → logprob: -10.128212928771973

Token 121: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -7.076218025758862e-05
    2. '(' → logprob: -9.625070571899414
    3. '(v' → logprob: -12.375070571899414
    4. '(U' → logprob: -15.500070571899414
    5. 'u' → logprob: -15.875070571899414
    6. '(
' → logprob: -16.125070571899414
    7. '(x' → logprob: -18.000070571899414
    8. ' (' → logprob: -18.125070571899414
    9. '(user' → logprob: -18.750070571899414
    10. '	u' → logprob: -18.750070571899414

Token 122: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04002143815159798
    2. ')' → logprob: -3.2900214195251465
    3. ')
' → logprob: -6.2900214195251465
    4. ')v' → logprob: -9.415021896362305
    5. ' )
' → logprob: -10.415021896362305
    6. 'v' → logprob: -12.165021896362305
    7. ' ' → logprob: -13.040021896362305
    8. ')

' → logprob: -13.665021896362305
    9. ');' → logprob: -13.665021896362305
    10. ')`
' → logprob: -14.540021896362305

Token 123: ' ' (ID: 220)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.02693409100174904
    2. ' Y' → logprob: -3.7769341468811035
    3. ' ' → logprob: -6.2769341468811035
    4. 'V' → logprob: -7.2769341468811035
    5. 'v' → logprob: -7.5269341468811035
    6. ',' → logprob: -8.151933670043945
    7. ',Y' → logprob: -9.526933670043945
    8. ';' → logprob: -9.901933670043945
    9. '	Y' → logprob: -10.276933670043945
    10. '  ' → logprob: -10.651933670043945

Token 124: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -3.583550642360933e-05
    2. ' Y' → logprob: -10.250036239624023
    3. '	Y' → logprob: -15.250036239624023
    4. ' ' → logprob: -15.750036239624023
    5. 'y' → logprob: -20.250036239624023
    6. ' ' → logprob: -20.250036239624023
    7. 'V' → logprob: -20.375036239624023
    8. ':Y' → logprob: -20.375036239624023
    9. '_Y' → logprob: -20.625036239624023
    10. '  
' → logprob: -20.875036239624023

Token 125: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004889304982498288
    2. ' =' → logprob: -7.625488758087158
    3. '=r' → logprob: -14.375489234924316
    4. '＝' → logprob: -16.25048828125
    5. ')' → logprob: -16.37548828125
    6. '=
' → logprob: -16.37548828125
    7. '=

' → logprob: -17.50048828125
    8. ')=' → logprob: -17.75048828125
    9. ',' → logprob: -18.25048828125
    10. '=}' → logprob: -18.62548828125

Token 126: ' rac' (ID: 12334)
  Prédit: 'rac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rac' → logprob: -0.576038658618927
    2. ' rac' → logprob: -0.826038658618927
    3. ' ' → logprob: -9.951038360595703
    4. ' ' → logprob: -11.201038360595703
    5. '(r' → logprob: -11.326038360595703
    6. 'ra' → logprob: -11.951038360595703
    7. '(' → logprob: -12.076038360595703
    8. 'r' → logprob: -12.201038360595703
    9. 'race' → logprob: -13.201038360595703
    10. '(
' → logprob: -13.576038360595703

Token 127: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.001175820711068809
    2. 'ute' → logprob: -7.251175880432129
    3. 'ote' → logprob: -8.751175880432129
    4. 'u' → logprob: -9.876175880432129
    5. 'ite' → logprob: -9.876175880432129
    6. '根' → logprob: -10.001175880432129
    7. '```' → logprob: -10.376175880432129
    8. 'oot' → logprob: -11.001175880432129
    9. 'uite' → logprob: -11.126175880432129
    10. 'ïne' → logprob: -11.251175880432129

Token 128: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.00000286102295
    3. 'v' → logprob: -15.75000286102295
    4. ' (' → logprob: -16.875001907348633
    5. '(V' → logprob: -18.250001907348633
    6. ' ' → logprob: -18.250001907348633
    7. '(
' → logprob: -18.875001907348633
    8. '[v' → logprob: -19.125001907348633
    9. '(y' → logprob: -19.250001907348633
    10. '	v' → logprob: -20.500001907348633

Token 129: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008635608479380608
    2. ')
' → logprob: -4.758635520935059
    3. ' )' → logprob: -11.383635520935059
    4. ' ' → logprob: -11.883635520935059
    5. ')
' → logprob: -13.633635520935059
    6. ' )
' → logprob: -14.258635520935059
    7. ')

' → logprob: -14.758635520935059
    8. ' ' → logprob: -15.883635520935059
    9. '）' → logprob: -16.508636474609375
    10. ')#' → logprob: -16.758636474609375

Token 130: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14635276794433594
    2. '  
' → logprob: -2.146352767944336
    3. ' if' → logprob: -4.271352767944336
    4. ' ' → logprob: -6.271352767944336
    5. '
' → logprob: -7.021352767944336
    6. ' 
' → logprob: -7.146352767944336
    7. 'if' → logprob: -7.146352767944336
    8. '	if' → logprob: -7.771352767944336
    9. '  ' → logprob: -8.646352767944336
    10. ':
' → logprob: -9.521352767944336

Token 131: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.42515039443969727
    2. ' if' → logprob: -1.1751503944396973
    3. ' ' → logprob: -3.3001503944396973
    4. '  
' → logprob: -7.675150394439697
    5. '	if' → logprob: -9.175149917602539
    6. ' ' → logprob: -9.925149917602539
    7. '```' → logprob: -11.050149917602539
    8. ':
' → logprob: -11.550149917602539
    9. '
' → logprob: -11.550149917602539
    10. ':' → logprob: -12.050149917602539

Token 132: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.03922099620103836
    2. ' X' → logprob: -3.2892210483551025
    3. 'ha' → logprob: -6.789220809936523
    4. ' ' → logprob: -10.789220809936523
    5. ' ha' → logprob: -11.289220809936523
    6. 'Ha' → logprob: -11.789220809936523
    7. ' hauteur' → logprob: -12.414220809936523
    8. '(X' → logprob: -13.039220809936523
    9. '	X' → logprob: -13.414220809936523
    10. ' ' → logprob: -13.914220809936523

Token 133: '==' (ID: 560)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5572678446769714
    2. '==' → logprob: -1.0572679042816162
    3. ' !=' → logprob: -3.057267904281616
    4. ' ==' → logprob: -3.932267904281616
    5. '<' → logprob: -4.557267665863037
    6. ' ' → logprob: -7.182267665863037
    7. ' <' → logprob: -7.682267665863037
    8. '>' → logprob: -7.807267665863037
    9. '=' → logprob: -7.807267665863037
    10. ' ' → logprob: -7.932267665863037

Token 134: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -6.659005157416686e-05
    2. ' Y' → logprob: -9.625066757202148
    3. '	Y' → logprob: -14.750066757202148
    4. ' ' → logprob: -15.875066757202148
    5. '<|end|>' → logprob: -19.12506675720215
    6. 'YPT' → logprob: -19.25006675720215
    7. 'YS' → logprob: -19.37506675720215
    8. '=' → logprob: -19.50006675720215
    9. '```' → logprob: -19.62506675720215
    10. 'YU' → logprob: -19.75006675720215

Token 135: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048944320529699326
    2. ':return' → logprob: -3.0489442348480225
    3. ':
' → logprob: -8.548944473266602
    4. ' :' → logprob: -8.798944473266602
    5. 'return' → logprob: -12.298944473266602
    6. ' return' → logprob: -12.423944473266602
    7. ' ' → logprob: -12.673944473266602
    8. ')return' → logprob: -15.923944473266602
    9. '	return' → logprob: -16.2989444732666
    10. ':
' → logprob: -16.4239444732666

Token 136: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5966001749038696
    2. ' ' → logprob: -0.9716001749038696
    3. 'return' → logprob: -2.97160005569458
    4. ':return' → logprob: -4.34660005569458
    5. '	return' → logprob: -6.09660005569458
    6. '   ' → logprob: -6.47160005569458
    7. ' ' → logprob: -6.47160005569458
    8. '  
' → logprob: -7.34660005569458
    9. '  ' → logprob: -7.97160005569458
    10. '
' → logprob: -9.471600532531738

Token 137: '
' (ID: 198)
  Prédit: '  
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '  
' → logprob: -0.22176694869995117
    2. ' ' → logprob: -1.9717669486999512
    3. '
' → logprob: -2.971766948699951
    4. ' 
' → logprob: -4.971766948699951
    5. '  ' → logprob: -7.471766948699951
    6. '   
' → logprob: -7.971766948699951
    7. 'if' → logprob: -8.97176742553711
    8. '  
  
' → logprob: -9.34676742553711
    9. '    
' → logprob: -9.47176742553711
    10. ' ' → logprob: -9.59676742553711

Token 138: ' ' (ID: 220)
  Prédit: '  
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '  
' → logprob: -0.28928837180137634
    2. '
' → logprob: -1.6642884016036987
    3. ' 
' → logprob: -3.289288282394409
    4. ' ' → logprob: -3.789288282394409
    5. ' ' → logprob: -7.289288520812988
    6. 'if' → logprob: -7.914288520812988
    7. '   
' → logprob: -8.164288520812988
    8. '
' → logprob: -9.039288520812988
    9. ' if' → logprob: -9.289288520812988
    10. '  
  
' → logprob: -9.414288520812988

Token 139: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5847156643867493
    2. 'if' → logprob: -0.9597156643867493
    3. ' ' → logprob: -2.8347156047821045
    4. ' ' → logprob: -7.459715843200684
    5. '  
' → logprob: -8.084715843200684
    6. '	if' → logprob: -9.709715843200684
    7. ' 
' → logprob: -10.834715843200684
    8. '
' → logprob: -11.584715843200684
    9. '  ' → logprob: -11.709715843200684
    10. '```' → logprob: -12.459715843200684

Token 140: ' "' (ID: 392)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.021146079525351524
    2. ' if' → logprob: -3.896146059036255
    3. ' ' → logprob: -7.521146297454834
    4. ' ' → logprob: -10.896145820617676
    5. '
' → logprob: -11.146145820617676
    6. '```' → logprob: -11.396145820617676
    7. '#' → logprob: -12.521145820617676
    8. 'elif' → logprob: -12.896145820617676
    9. '  
' → logprob: -13.146145820617676
    10. '  ' → logprob: -13.146145820617676

Token 141: 'pré' (ID: 192449)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01301951240748167
    2. ' if' → logprob: -4.388019561767578
    3. ' ' → logprob: -7.763019561767578
    4. ' ' → logprob: -10.763019561767578
    5. '#' → logprob: -10.888019561767578
    6. '
' → logprob: -11.388019561767578
    7. '```' → logprob: -11.638019561767578
    8. '  ' → logprob: -12.138019561767578
    9. '  
' → logprob: -12.263019561767578
    10. '	if' → logprob: -12.513019561767578

Token 142: 'férence' (ID: 164207)
  Prédit: 'fér'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fér' → logprob: -0.5354002714157104
    2. 'férence' → logprob: -1.5354002714157104
    3. 'f' → logprob: -1.9104002714157104
    4. 'fé' → logprob: -3.785400390625
    5. 'fix' → logprob: -5.285400390625
    6. 'server' → logprob: -5.535400390625
    7. 'c' → logprob: -5.785400390625
    8. 'fer' → logprob: -5.910400390625
    9. 'ference' → logprob: -6.472900390625
    10. 'servation' → logprob: -6.660400390625

Token 143: '":' (ID: 1243)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.29444921016693115
    2. ' pour' → logprob: -2.6694493293762207
    3. ' ' → logprob: -3.6694493293762207
    4. ' for' → logprob: -3.7944493293762207
    5. 'ha' → logprob: -3.7944493293762207
    6. 'pour' → logprob: -3.7944493293762207
    7. 'de' → logprob: -4.044449329376221
    8. ' d' → logprob: -4.169449329376221
    9. ' hauteur' → logprob: -4.294449329376221
    10. ' du' → logprob: -4.794449329376221

Token 144: ' flatten' (ID: 61445)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6332740187644958
    2. ' if' → logprob: -0.7582740187644958
    3. ' ' → logprob: -7.508274078369141
    4. ' ' → logprob: -9.50827407836914
    5. '```' → logprob: -11.50827407836914
    6. '#' → logprob: -11.75827407836914
    7. '	if' → logprob: -11.88327407836914
    8. 'si' → logprob: -12.38327407836914
    9. '
' → logprob: -12.50827407836914
    10. ' si' → logprob: -12.63327407836914

Token 145: ' le' (ID: 505)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7158572673797607
    2. ' if' → logprob: -0.9658572673797607
    3. ' ' → logprob: -2.2158572673797607
    4. 's' → logprob: -5.71585750579834
    5. ' (' → logprob: -6.09085750579834
    6. 'ha' → logprob: -6.21585750579834
    7. '(' → logprob: -6.59085750579834
    8. ' for' → logprob: -6.59085750579834
    9. '  ' → logprob: -6.71585750579834
    10. '  
' → logprob: -6.71585750579834

Token 146: ' côté' (ID: 33533)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.03481806069612503
    2. 'par' → logprob: -3.784818172454834
    3. 'ar' → logprob: -6.284818172454834
    4. 'haut' → logprob: -6.409818172454834
    5. ' ha' → logprob: -6.784818172454834
    6. '
' → logprob: -6.909818172454834
    7. '#' → logprob: -7.409818172454834
    8. 'if' → logprob: -7.784818172454834
    9. ' arbre' → logprob: -7.784818172454834
    10. 'max' → logprob: -7.909818172454834

Token 147: ' de' (ID: 334)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.0828012079000473
    2. ' ha' → logprob: -3.957801103591919
    3. ' de' → logprob: -4.207801342010498
    4. ' ' → logprob: -4.582801342010498
    5. 'de' → logprob: -5.082801342010498
    6. 'à' → logprob: -5.332801342010498
    7. 'X' → logprob: -5.457801342010498
    8. 'haut' → logprob: -5.957801342010498
    9. '```' → logprob: -6.082801342010498
    10. 'par' → logprob: -6.582801342010498

Token 148: ' u' (ID: 337)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.0947653278708458
    2. 'la' → logprob: -2.7197654247283936
    3. ' hauteur' → logprob: -4.9697651863098145
    4. 'Y' → logprob: -5.2197651863098145
    5. ' la' → logprob: -5.2197651863098145
    6. 'X' → logprob: -6.2197651863098145
    7. ' ' → logprob: -6.7197651863098145
    8. 'l' → logprob: -7.3447651863098145
    9. ' Y' → logprob: -7.5947651863098145
    10. ' ha' → logprob: -7.5947651863098145

Token 149: ' systém' (ID: 88529)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6043371558189392
    2. 'if' → logprob: -0.9793371558189392
    3. ' ' → logprob: -2.604337215423584
    4. 'si' → logprob: -6.854337215423584
    5. 's' → logprob: -7.229337215423584
    6. ' si' → logprob: -7.354337215423584
    7. ',' → logprob: -7.604337215423584
    8. '  ' → logprob: -7.854337215423584
    9. 'u' → logprob: -9.104336738586426
    10. '<|end|>' → logprob: -9.229336738586426

Token 150: 'atiquement' (ID: 91584)
  Prédit: 'atiquement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atiquement' → logprob: -0.003308539278805256
    2. 'atique' → logprob: -5.7533087730407715
    3. 'a' → logprob: -9.628308296203613
    4. 'iquement' → logprob: -10.128308296203613
    5. 'ati' → logprob: -11.878308296203613
    6. 'ique' → logprob: -12.503308296203613
    7. 'quement' → logprob: -12.753308296203613
    8. 'ti' → logprob: -13.003308296203613
    9. 'atiques' → logprob: -13.003308296203613
    10. 'é' → logprob: -13.253308296203613

Token 151: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011789606884121895
    2. ' if' → logprob: -4.761789798736572
    3. '  
' → logprob: -6.511789798736572
    4. '<|end|>' → logprob: -7.011789798736572
    5. 'if' → logprob: -8.261789321899414
    6. '  ' → logprob: -8.511789321899414
    7. ' ' → logprob: -8.761789321899414
    8. ',' → logprob: -10.011789321899414
    9. ' 
' → logprob: -10.511789321899414
    10. '	if' → logprob: -10.636789321899414

Token 152: ' moins' (ID: 15924)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.7004145979881287
    2. 'rac' → logprob: -1.7004146575927734
    3. 'la' → logprob: -2.7004146575927734
    4. ' rac' → logprob: -2.9504146575927734
    5. 'X' → logprob: -3.0754146575927734
    6. 'l' → logprob: -3.4504146575927734
    7. ' hauteur' → logprob: -3.4504146575927734
    8. 'Y' → logprob: -3.5754146575927734
    9. 'u' → logprob: -3.8254146575927734
    10. 'par' → logprob: -4.825414657592773

Token 153: ' que' (ID: 661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08329831063747406
    2. 'que' → logprob: -3.7082982063293457
    3. ' ce' → logprob: -3.9582982063293457
    4. ' que' → logprob: -4.083298206329346
    5. 'qu' → logprob: -4.583298206329346
    6. ' qu' → logprob: -5.458298206329346
    7. '  ' → logprob: -6.333298206329346
    8. 'ce' → logprob: -6.458298206329346
    9. ' ' → logprob: -7.583298206329346
    10. '```' → logprob: -7.958298206329346

Token 154: ' v' (ID: 323)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.006227267440408468
    2. ' hauteur' → logprob: -5.131227493286133
    3. ' ha' → logprob: -9.006227493286133
    4. ' ' → logprob: -9.256227493286133
    5. ' ' → logprob: -11.381227493286133
    6. 'haut' → logprob: -11.381227493286133
    7. '```' → logprob: -11.506227493286133
    8. 'h' → logprob: -11.506227493286133
    9. 'height' → logprob: -11.756227493286133
    10. '(' → logprob: -13.006227493286133

Token 155: ' soit' (ID: 17293)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.40490415692329407
    2. ' ' → logprob: -2.5299041271209717
    3. '<|end|>' → logprob: -3.1549041271209717
    4. ''ha' → logprob: -3.9049041271209717
    5. ' ait' → logprob: -4.029904365539551
    6. '```' → logprob: -4.279904365539551
    7. 's' → logprob: -4.529904365539551
    8. ')' → logprob: -4.592404365539551
    9. ' ha' → logprob: -4.592404365539551
    10. ' soit' → logprob: -4.654904365539551

Token 156: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.3451617360115051
    2. ' plus' → logprob: -1.4701616764068604
    3. 'ha' → logprob: -4.0951619148254395
    4. 'de' → logprob: -4.9701619148254395
    5. '"' → logprob: -5.5951619148254395
    6. 'd' → logprob: -5.8451619148254395
    7. 'l' → logprob: -5.9701619148254395
    8. 'à' → logprob: -5.9701619148254395
    9. ' ' → logprob: -5.9701619148254395
    10. 'la' → logprob: -6.0951619148254395

Token 157: ' profond' (ID: 82671)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.5418455004692078
    2. 'haut' → logprob: -1.2918455600738525
    3. 'grand' → logprob: -3.2918455600738525
    4. 'é' → logprob: -3.5418455600738525
    5. '```' → logprob: -3.9168455600738525
    6. ' élevé' → logprob: -4.166845321655273
    7. 'gr' → logprob: -4.666845321655273
    8. ' haut' → logprob: -4.916845321655273
    9. ' grand' → logprob: -5.416845321655273
    10. ' ' → logprob: -5.666845321655273

Token 158: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021816972643136978
    2. ' if' → logprob: -3.8968169689178467
    3. 'if' → logprob: -7.896817207336426
    4. '  ' → logprob: -8.021817207336426
    5. ',' → logprob: -8.396817207336426
    6. '  
' → logprob: -8.646817207336426
    7. '<|end|>' → logprob: -9.646817207336426
    8. ' ' → logprob: -9.771817207336426
    9. '```' → logprob: -11.521817207336426
    10. '	if' → logprob: -11.896817207336426

Token 159: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05877566337585449
    2. ' if' → logprob: -2.9337756633758545
    3. 'if' → logprob: -5.683775901794434
    4. '```' → logprob: -8.308775901794434
    5. ' ' → logprob: -9.308775901794434
    6. '  
' → logprob: -9.808775901794434
    7. '	if' → logprob: -9.808775901794434
    8. '  ' → logprob: -11.183775901794434
    9. '   ' → logprob: -11.683775901794434
    10. ',' → logprob: -12.183775901794434

Token 160: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.028184352442622185
    2. ' ' → logprob: -4.278184413909912
    3. ' if' → logprob: -4.278184413909912
    4. '```' → logprob: -10.278183937072754
    5. ' ' → logprob: -11.653183937072754
    6. '	if' → logprob: -12.153183937072754
    7. '  
' → logprob: -12.653183937072754
    8. '   ' → logprob: -14.278183937072754
    9. '``' → logprob: -14.403183937072754
    10. 'ha' → logprob: -14.528183937072754

Token 161: ' ~(' (ID: 85491)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.5761427283287048
    2. ' hauteur' → logprob: -0.8261427283287048
    3. ' ' → logprob: -9.326142311096191
    4. 'height' → logprob: -10.076142311096191
    5. 'Ha' → logprob: -10.951142311096191
    6. ' ha' → logprob: -11.326142311096191
    7. ' ' → logprob: -11.701142311096191
    8. 'h' → logprob: -11.701142311096191
    9. '   ' → logprob: -12.076142311096191
    10. '-ha' → logprob: -12.701142311096191

Token 162: 'ha' (ID: 1716)
  Prédit: 'ha'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.0007370850071310997
    2. ' ' → logprob: -8.375737190246582
    3. ' ha' → logprob: -9.000737190246582
    4. 'h' → logprob: -9.375737190246582
    5. '-ha' → logprob: -9.625737190246582
    6. ' hauteur' → logprob: -10.500737190246582
    7. 'haut' → logprob: -10.688237190246582
    8. 'height' → logprob: -10.875737190246582
    9. ')' → logprob: -10.875737190246582
    10. '-' → logprob: -11.188237190246582

Token 163: 'uteur' (ID: 25666)
  Prédit: 'uteur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uteur' → logprob: -2.9875325708417222e-05
    2. 'ute' → logprob: -10.875029563903809
    3. 'ueur' → logprob: -11.750029563903809
    4. 'ut' → logprob: -14.000029563903809
    5. 'teur' → logprob: -14.750029563903809
    6. 'u' → logprob: -14.750029563903809
    7. 'utur' → logprob: -15.375029563903809
    8. 'umeur' → logprob: -15.375029563903809
    9. 'iteur' → logprob: -15.625029563903809
    10. 'uteurs' → logprob: -15.750029563903809

Token 164: '[X' (ID: 118621)
  Prédit: '[X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[X' → logprob: -0.028330838307738304
    2. '[u' → logprob: -3.7783308029174805
    3. '[Y' → logprob: -5.5283308029174805
    4. '[' → logprob: -7.7783308029174805
    5. 'X' → logprob: -7.9033308029174805
    6. '[v' → logprob: -8.77833080291748
    7. '[x' → logprob: -10.77833080291748
    8. '(X' → logprob: -10.77833080291748
    9. ')[' → logprob: -11.02833080291748
    10. 'u' → logprob: -11.52833080291748

Token 165: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4133754372596741
    2. ']<' → logprob: -1.2883753776550293
    3. ']>' → logprob: -3.2883753776550293
    4. ' ]' → logprob: -4.413375377655029
    5. ']>=' → logprob: -4.788375377655029
    6. ']<=' → logprob: -6.538375377655029
    7. '[' → logprob: -6.663375377655029
    8. '])' → logprob: -7.413375377655029
    9. '<' → logprob: -7.413375377655029
    10. ']==' → logprob: -7.788375377655029

Token 166: 'ha' (ID: 1716)
  Prédit: 'ha'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.0015912731178104877
    2. '1' → logprob: -7.251591205596924
    3. ' ha' → logprob: -7.751591205596924
    4. ' hauteur' → logprob: -8.376591682434082
    5. ' ' → logprob: -9.126591682434082
    6. '(' → logprob: -9.751591682434082
    7. 'haut' → logprob: -10.876591682434082
    8. '-ha' → logprob: -11.626591682434082
    9. 'h' → logprob: -12.126591682434082
    10. ' (' → logprob: -12.376591682434082

Token 167: 'uteur' (ID: 25666)
  Prédit: 'uteur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uteur' → logprob: -0.00030436101951636374
    2. 'ut' → logprob: -8.625304222106934
    3. 'ute' → logprob: -9.875304222106934
    4. 'utur' → logprob: -10.625304222106934
    5. 'u' → logprob: -11.125304222106934
    6. 'teur' → logprob: -11.500304222106934
    7. 'uter' → logprob: -11.875304222106934
    8. 'ur' → logprob: -12.000304222106934
    9. 'ueur' → logprob: -12.625304222106934
    10. '[' → logprob: -14.000304222106934

Token 168: '[Y' (ID: 173881)
  Prédit: '[Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[Y' → logprob: -0.0028601549565792084
    2. 'Y' → logprob: -6.252860069274902
    3. '[' → logprob: -7.502860069274902
    4. ')[' → logprob: -9.502860069274902
    5. ' Y' → logprob: -9.877860069274902
    6. '[V' → logprob: -10.127860069274902
    7. ' [' → logprob: -10.252860069274902
    8. ')' → logprob: -10.252860069274902
    9. '[v' → logprob: -10.502860069274902
    10. ' ' → logprob: -10.627860069274902

Token 169: '])' (ID: 4636)
  Prédit: ')>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')>' → logprob: -0.3849283754825592
    2. ')' → logprob: -1.6349283456802368
    3. ')<' → logprob: -2.6349284648895264
    4. '):' → logprob: -3.5099284648895264
    5. ' )' → logprob: -4.259928226470947
    6. '>' → logprob: -5.634928226470947
    7. ' ):' → logprob: -6.509928226470947
    8. ')>=' → logprob: -6.509928226470947
    9. ')<=' → logprob: -7.009928226470947
    10. ' >' → logprob: -7.509928226470947

Token 170: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6919547319412231
    2. ':' → logprob: -1.5669547319412231
    3. '>' → logprob: -1.8169547319412231
    4. ' <' → logprob: -2.4419546127319336
    5. '>=' → logprob: -4.066954612731934
    6. ' >' → logprob: -4.566954612731934
    7. '<=' → logprob: -4.941954612731934
    8. ' >=' → logprob: -6.066954612731934
    9. ' :' → logprob: -6.816954612731934
    10. ' <=' → logprob: -7.191954612731934

Token 171: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18502864241600037
    2. ' ' → logprob: -1.8100286722183228
    3. '1' → logprob: -5.310028553009033
    4. '=' → logprob: -8.935029029846191
    5. ' ' → logprob: -9.810029029846191
    6. '-' → logprob: -10.435029029846191
    7. ' -' → logprob: -11.497529029846191
    8. '2' → logprob: -11.497529029846191
    9. '```' → logprob: -11.560029029846191
    10. '  ' → logprob: -11.560029029846191

Token 172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0924268588423729
    2. ' ' → logprob: -2.5924267768859863
    3. '1' → logprob: -4.342426776885986
    4. '-' → logprob: -8.467427253723145
    5. '=' → logprob: -9.467427253723145
    6. ' -' → logprob: -10.279927253723145
    7. ' ' → logprob: -10.404927253723145
    8. '2' → logprob: -11.529927253723145
    9. '```' → logprob: -11.654927253723145
    10. '  ' → logprob: -11.654927253723145

Token 173: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04790342226624489
    2. ':
' → logprob: -3.422903537750244
    3. ' :' → logprob: -4.422903537750244
    4. ' :
' → logprob: -6.797903537750244
    5. ' ' → logprob: -7.047903537750244
    6. '  ' → logprob: -9.297903060913086
    7. ' or' → logprob: -11.672903060913086
    8. '):' → logprob: -11.672903060913086
    9. '   ' → logprob: -11.797903060913086
    10. '<|end|>' → logprob: -11.922903060913086

Token 174: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9531217217445374
    2. '   ' → logprob: -1.0781216621398926
    3. ' ' → logprob: -1.5781216621398926
    4. ' par' → logprob: -3.8281216621398926
    5. '  ' → logprob: -4.328121662139893
    6. ' :' → logprob: -4.453121662139893
    7. 'ha' → logprob: -5.203121662139893
    8. ':
' → logprob: -5.578121662139893
    9. '  
' → logprob: -5.828121662139893
    10. 'par' → logprob: -5.953121662139893

Token 175: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.930658221244812
    2. 'par' (adapté à ' par') → logprob: -0.930658221244812
    3. ' ' → logprob: -1.680658221244812
    4. '   ' → logprob: -4.180658340454102
    5. '	par' → logprob: -5.680658340454102
    6. '  
' → logprob: -5.930658340454102
    7. '  ' → logprob: -6.180658340454102
    8. ' ' → logprob: -7.805658340454102
    9. '     ' → logprob: -8.618158340454102
    10. 'ha' → logprob: -8.805658340454102

Token 176: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -2.522638169466518e-05
    2. 'ent' → logprob: -11.000024795532227
    3. ' ente' → logprob: -12.125024795532227
    4. 'entee' → logprob: -13.375024795532227
    5. 'enter' → logprob: -14.625024795532227
    6. 'ented' → logprob: -15.000024795532227
    7. 'entes' → logprob: -15.250024795532227
    8. 'ENTE' → logprob: -15.875024795532227
    9. 'ент' → logprob: -16.000024795532227
    10. 'en' → logprob: -16.125024795532227

Token 177: '[X' (ID: 118621)
  Prédit: '[X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[X' → logprob: -0.38767242431640625
    2. '[Y' → logprob: -1.1376724243164062
    3. '[' → logprob: -7.137672424316406
    4. '[u' → logprob: -13.637672424316406
    5. '[T' → logprob: -14.012672424316406
    6. '[v' → logprob: -14.262672424316406
    7. ' [' → logprob: -14.387672424316406
    8. 'X' → logprob: -14.387672424316406
    9. 'Y' → logprob: -14.762672424316406
    10. '[V' → logprob: -14.887672424316406

Token 178: ']' (ID: 60)
  Prédit: ']='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.2741309702396393
    2. ']' → logprob: -1.524130940437317
    3. '=' → logprob: -4.024130821228027
    4. '=v' → logprob: -5.774130821228027
    5. ' =' → logprob: -7.524130821228027
    6. ' ]' → logprob: -9.149130821228027
    7. '=y' → logprob: -9.399130821228027
    8. '],' → logprob: -9.649130821228027
    9. '[' → logprob: -9.899130821228027
    10. '[v' → logprob: -10.024130821228027

Token 179: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0562267042696476
    2. ' =' → logprob: -3.0562267303466797
    3. '=v' → logprob: -4.93122673034668
    4. '=y' → logprob: -7.93122673034668
    5. '=X' → logprob: -10.93122673034668
    6. '=u' → logprob: -12.05622673034668
    7. ',' → logprob: -13.30622673034668
    8. '＝' → logprob: -13.43122673034668
    9. ' ' → logprob: -14.05622673034668
    10. ' Y' → logprob: -14.18122673034668

Token 180: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.00043805985478684306
    2. ' Y' → logprob: -7.750438213348389
    3. '	Y' → logprob: -12.62543773651123
    4. ' ' → logprob: -12.62543773651123
    5. '<|end|>' → logprob: -15.37543773651123
    6. '   ' → logprob: -15.75043773651123
    7. '[Y' → logprob: -16.000438690185547
    8. '  ' → logprob: -16.125438690185547
    9. 'V' → logprob: -17.125438690185547
    10. '`' → logprob: -17.500438690185547

Token 181: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02889094315469265
    2. 'else' → logprob: -4.153891086578369
    3. '   ' → logprob: -4.403891086578369
    4. ' else' → logprob: -7.778891086578369
    5. 'elif' → logprob: -9.778890609741211
    6. 'ha' → logprob: -10.028890609741211
    7. '    
' → logprob: -11.903890609741211
    8. '  
' → logprob: -12.278890609741211
    9. '  ' → logprob: -12.778890609741211
    10. ';' → logprob: -13.278890609741211

Token 182: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0464554987847805
    2. 'else' → logprob: -3.1714553833007812
    3. '   ' → logprob: -6.296455383300781
    4. ' else' → logprob: -6.671455383300781
    5. 'elif' → logprob: -8.296455383300781
    6. '  
' → logprob: -10.421455383300781
    7. '    
' → logprob: -10.921455383300781
    8. ' ' → logprob: -11.546455383300781
    9. 'ha' → logprob: -11.796455383300781
    10. '  ' → logprob: -12.296455383300781

Token 183: ' else' (ID: 1203)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.310146301984787
    2. 'else' → logprob: -1.4351463317871094
    3. ' else' → logprob: -3.5601463317871094
    4. '   ' → logprob: -10.18514633178711
    5. '  ' → logprob: -10.31014633178711
    6. 'ha' → logprob: -10.81014633178711
    7. 'elif' → logprob: -10.93514633178711
    8. '  
' → logprob: -11.06014633178711
    9. '	else' → logprob: -12.06014633178711
    10. ' ' → logprob: -12.31014633178711

Token 184: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01799798384308815
    2. ':
' → logprob: -4.767998218536377
    3. ':' → logprob: -5.142998218536377
    4. ' ' → logprob: -5.892998218536377
    5. '  ' → logprob: -7.642998218536377
    6. '  
' → logprob: -9.767997741699219
    7. ' par' → logprob: -9.892997741699219
    8. ' :
' → logprob: -10.267997741699219
    9. '    
' → logprob: -11.017997741699219
    10. '   ' → logprob: -11.142997741699219

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010507101193070412
    2. 'par' → logprob: -4.635507106781006
    3. ' par' → logprob: -8.260506629943848
    4. '	par' → logprob: -8.385506629943848
    5. ' ' → logprob: -8.885506629943848
    6. '   ' → logprob: -9.635506629943848
    7. '  
' → logprob: -10.760506629943848
    8. '    
' → logprob: -11.260506629943848
    9. '
' → logprob: -11.385506629943848
    10. '  ' → logprob: -12.010506629943848

Token 186: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' (adapté à ' par') → logprob: -0.014572540298104286
    2. '   ' → logprob: -4.514572620391846
    3. ' par' → logprob: -6.389572620391846
    4. ' ' → logprob: -6.639572620391846
    5. '	par' → logprob: -7.889572620391846
    6. '  ' → logprob: -9.639572143554688
    7. '     ' → logprob: -10.014572143554688
    8. '    ' → logprob: -11.139572143554688
    9. '  
' → logprob: -12.264572143554688
    10. '       ' → logprob: -12.264572143554688

Token 187: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -1.843177233240567e-05
    2. 'ent' → logprob: -11.375018119812012
    3. ' ente' → logprob: -13.125018119812012
    4. 'entee' → logprob: -13.625018119812012
    5. 'enter' → logprob: -13.750018119812012
    6. 'en' → logprob: -13.875018119812012
    7. 'ented' → logprob: -14.625018119812012
    8. 'ante' → logprob: -15.250018119812012
    9. 'ENTE' → logprob: -15.750018119812012
    10. 'entes' → logprob: -15.750018119812012

Token 188: '[Y' (ID: 173881)
  Prédit: '[Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[Y' → logprob: -0.0002930366899818182
    2. '[' → logprob: -8.375292778015137
    3. '[v' → logprob: -10.000292778015137
    4. 'Y' → logprob: -12.000292778015137
    5. '[u' → logprob: -12.250292778015137
    6. '   ' → logprob: -13.625292778015137
    7. '[V' → logprob: -13.875292778015137
    8. '```' → logprob: -14.000292778015137
    9. '[X' → logprob: -14.125292778015137
    10. ' ' → logprob: -14.375292778015137

Token 189: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5764491558074951
    2. '=' → logprob: -0.8264491558074951
    3. ' ' → logprob: -8.826449394226074
    4. '[' → logprob: -8.826449394226074
    5. ']' → logprob: -9.201449394226074
    6. '=X' → logprob: -10.076449394226074
    7. '[X' → logprob: -10.576449394226074
    8. ')' → logprob: -10.826449394226074
    9. ']=' → logprob: -10.826449394226074
    10. ' ]' → logprob: -12.951449394226074

Token 190: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889717072248459
    2. ' =' → logprob: -2.57889723777771
    3. '=X' → logprob: -12.453897476196289
    4. ' ' → logprob: -13.203897476196289
    5. '[' → logprob: -13.453897476196289
    6. '＝' → logprob: -15.953897476196289
    7. '[X' → logprob: -16.20389747619629
    8. ')' → logprob: -17.32889747619629
    9. ' ' → logprob: -17.95389747619629
    10. '=
' → logprob: -18.95389747619629

Token 191: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0011709370883181691
    2. ' X' → logprob: -6.751171112060547
    3. ' ' → logprob: -14.376171112060547
    4. '[X' → logprob: -16.501171112060547
    5. '	X' → logprob: -16.626171112060547
    6. '[' → logprob: -18.376171112060547
    7. '<|end|>' → logprob: -18.501171112060547
    8. '>X' → logprob: -18.751171112060547
    9. '(X' → logprob: -19.251171112060547
    10. ' ' → logprob: -19.376171112060547

Token 192: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08438510447740555
    2. 'ha' → logprob: -2.5843851566314697
    3. ' ' → logprob: -5.959384918212891
    4. '  ' → logprob: -6.709384918212891
    5. ' ha' → logprob: -7.834384918212891
    6. '    ' → logprob: -8.08438491821289
    7. '  
' → logprob: -8.33438491821289
    8. '    
' → logprob: -8.83438491821289
    9. '   ' → logprob: -8.83438491821289
    10. '<|end|>' → logprob: -9.58438491821289

Token 193: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005566463340073824
    2. 'ha' → logprob: -6.380566596984863
    3. ' ' → logprob: -6.505566596984863
    4. '    
' → logprob: -6.755566596984863
    5. '  
' → logprob: -7.880566596984863
    6. '   ' → logprob: -8.130566596984863
    7. '
' → logprob: -9.005566596984863
    8. 'if' → logprob: -9.130566596984863
    9. '  ' → logprob: -10.005566596984863
    10. '    ' → logprob: -10.130566596984863

Token 194: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6159218549728394
    2. '  ' → logprob: -1.9909218549728394
    3. '<|end|>' → logprob: -1.9909218549728394
    4. '  
' → logprob: -2.615921974182129
    5. 'ha' → logprob: -3.115921974182129
    6. '   ' → logprob: -3.115921974182129
    7. '
' → logprob: -4.990921974182129
    8. '    ' → logprob: -5.865921974182129
    9. '    
' → logprob: -6.490921974182129
    10. 'return' → logprob: -6.615921974182129

Token 195: ' hauteur' (ID: 72987)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.10036895424127579
    2. ' hauteur' → logprob: -2.3503689765930176
    3. '(' → logprob: -9.97536849975586
    4. 'height' → logprob: -10.22536849975586
    5. ' ' → logprob: -10.72536849975586
    6. ' ha' → logprob: -10.85036849975586
    7. 'haut' → logprob: -11.10036849975586
    8. '-ha' → logprob: -11.97536849975586
    9. 'h' → logprob: -12.97536849975586
    10. 'Ha' → logprob: -13.22536849975586

Token 196: '[X' (ID: 118621)
  Prédit: '[X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[X' → logprob: -0.0006494098342955112
    2. '[' → logprob: -7.500649452209473
    3. 'X' → logprob: -9.375649452209473
    4. '[Y' → logprob: -11.875649452209473
    5. '[u' → logprob: -12.750649452209473
    6. '[x' → logprob: -14.375649452209473
    7. '[
' → logprob: -15.000649452209473
    8. '[A' → logprob: -15.500649452209473
    9. '(X' → logprob: -16.000648498535156
    10. '[P' → logprob: -16.125648498535156

Token 197: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.008464221842586994
    2. ' ==' → logprob: -4.883464336395264
    3. ']==' → logprob: -7.508464336395264
    4. '[' → logprob: -8.258463859558105
    5. '==
' → logprob: -10.883463859558105
    6. '=' → logprob: -11.508463859558105
    7. ']' → logprob: -11.633463859558105
    8. '>' → logprob: -12.258463859558105
    9. ')==' → logprob: -12.758463859558105
    10. '===' → logprob: -13.383463859558105

Token 198: 'ha' (ID: 1716)
  Prédit: 'ha'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ha' → logprob: -3.070975071750581e-05
    2. ' ' → logprob: -10.625030517578125
    3. ' hauteur' → logprob: -12.125030517578125
    4. 'height' → logprob: -14.750030517578125
    5. 'Ha' → logprob: -15.125030517578125
    6. '[' → logprob: -16.375030517578125
    7. '   ' → logprob: -17.000030517578125
    8. ' ' → logprob: -17.000030517578125
    9. '  ' → logprob: -17.250030517578125
    10. ' ha' → logprob: -17.250030517578125

Token 199: 'uteur' (ID: 25666)
  Prédit: 'uteur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uteur' → logprob: -0.0005572011577896774
    2. 'ut' → logprob: -7.8755574226379395
    3. 'ute' → logprob: -9.125556945800781
    4. 'utur' → logprob: -10.125556945800781
    5. 'uter' → logprob: -11.375556945800781
    6. 'teur' → logprob: -12.375556945800781
    7. 'u' → logprob: -12.625556945800781
    8. 'ueur' → logprob: -13.125556945800781
    9. 'ur' → logprob: -13.375556945800781
    10. 'utor' → logprob: -13.875556945800781

Token 200: '[Y' (ID: 173881)
  Prédit: '[Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[Y' → logprob: -0.0019940626807510853
    2. 'Y' → logprob: -6.2519941329956055
    3. '[' → logprob: -9.876994132995605
    4. '	Y' → logprob: -12.001994132995605
    5. ' ' → logprob: -12.501994132995605
    6. ':Y' → logprob: -13.626994132995605
    7. '```' → logprob: -14.126994132995605
    8. '(Y' → logprob: -14.626994132995605
    9. '   ' → logprob: -14.626994132995605
    10. ' Y' → logprob: -14.876994132995605

Token 201: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008380529470741749
    2. ':
' → logprob: -4.88338041305542
    3. ']:' → logprob: -7.75838041305542
    4. ' ' → logprob: -8.758380889892578
    5. ' :' → logprob: -9.758380889892578
    6. '>:' → logprob: -10.133380889892578
    7. '):' → logprob: -11.133380889892578
    8. '>' → logprob: -11.383380889892578
    9. ']:
' → logprob: -11.508380889892578
    10. ':return' → logprob: -11.633380889892578

Token 202: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5238186120986938
    2. '   ' → logprob: -1.5238186120986938
    3. 'ha' → logprob: -1.7738186120986938
    4. ' ha' → logprob: -4.148818492889404
    5. '  ' → logprob: -5.898818492889404
    6. ' hâ' → logprob: -8.023818969726562
    7. ' ' → logprob: -8.398818969726562
    8. '-ha' → logprob: -8.773818969726562
    9. ':
' → logprob: -9.023818969726562
    10. '    ' → logprob: -9.148818969726562

Token 203: ' hauteur' (ID: 72987)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ha' → logprob: -2.0100624169572257e-05
    2. ' ' → logprob: -11.625020027160645
    3. ' ha' → logprob: -11.875020027160645
    4. ' hauteur' → logprob: -13.125020027160645
    5. 'haut' → logprob: -13.750020027160645
    6. '   ' → logprob: -14.000020027160645
    7. '  ' → logprob: -16.25002098083496
    8. ''ha' → logprob: -16.62502098083496
    9. 'Ha' → logprob: -17.12502098083496
    10. 'height' → logprob: -17.12502098083496

Token 204: '[X' (ID: 118621)
  Prédit: '[X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[X' → logprob: -0.015558566898107529
    2. '[' → logprob: -4.26555871963501
    3. '[Y' → logprob: -6.64055871963501
    4. 'X' → logprob: -9.890558242797852
    5. '[...]' → logprob: -12.140558242797852
    6. '[
' → logprob: -12.265558242797852
    7. '[u' → logprob: -12.390558242797852
    8. '[I' → logprob: -12.515558242797852
    9. '[N' → logprob: -13.015558242797852
    10. '```' → logprob: -13.015558242797852

Token 205: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16129855811595917
    2. ']+=' → logprob: -1.9112985134124756
    3. ' +=' → logprob: -7.161298751831055
    4. ']' → logprob: -8.161298751831055
    5. '+' → logprob: -12.036298751831055
    6. '[' → logprob: -12.911298751831055
    7. '=' → logprob: -13.536298751831055
    8. '   ' → logprob: -14.536298751831055
    9. '+='' → logprob: -14.661298751831055
    10. ']+' → logprob: -14.911298751831055

Token 206: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.003186743939295411
    2. ' +=' → logprob: -5.7531867027282715
    3. ']+=' → logprob: -11.75318717956543
    4. '=' → logprob: -14.75318717956543
    5. '+' → logprob: -14.87818717956543
    6. '[' → logprob: -15.12818717956543
    7. '+='' → logprob: -16.50318717956543
    8. '+=(' → logprob: -16.87818717956543
    9. '   ' → logprob: -17.25318717956543
    10. '+="' → logprob: -17.37818717956543

Token 207: ' True' (ID: 6432)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -18.12500762939453
    4. '  ' → logprob: -18.87500762939453
    5. '１' → logprob: -19.00000762939453
    6. ' ' → logprob: -20.00000762939453
    7. '
' → logprob: -20.75000762939453
    8. '+' → logprob: -20.87500762939453
    9. '```' → logprob: -21.00000762939453
    10. '۱' → logprob: -21.12500762939453

Token 208: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 209: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 210: ' True' (ID: 6432)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02975500375032425
    2. ' ' → logprob: -3.529755115509033
    3. ' ' → logprob: -12.404754638671875
    4. '   ' → logprob: -15.654754638671875
    5. ' True' → logprob: -15.904754638671875
    6. 'True' → logprob: -16.029754638671875
    7. '<|end|>' → logprob: -17.279754638671875
    8. '  ' → logprob: -17.404754638671875
    9. '１' → logprob: -18.154754638671875
    10. '0' → logprob: -18.279754638671875

Token 211: ' ==' (ID: 951)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 212: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '１' → logprob: -18.000261306762695
    4. ' ' → logprob: -18.375261306762695
    5. '  ' → logprob: -18.500261306762695
    6. '```' → logprob: -19.000261306762695
    7. '   ' → logprob: -19.125261306762695
    8. '۱' → logprob: -19.250261306762695
    9. '#' → logprob: -19.625261306762695
    10. 'True' → logprob: -19.812761306762695

Token 213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. ' ' → logprob: -17.875059127807617
    4. '```' → logprob: -18.625059127807617
    5. '１' → logprob: -18.625059127807617
    6. '  ' → logprob: -19.125059127807617
    7. '
' → logprob: -19.750059127807617
    8. '' → logprob: -19.750059127807617
    9. '#' → logprob: -19.875059127807617
    10. '0' → logprob: -20.000059127807617

Token 214: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 215: ' expression' (ID: 12973)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 216: ' non' (ID: 2893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 217: '-standard' (ID: 108271)
  Prédit: 'idi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idi' → logprob: -0.49997371435165405
    2. 'bool' → logprob: -1.6249737739562988
    3. 'int' → logprob: -2.749973773956299
    4. ' idi' → logprob: -3.374973773956299
    5. 'b' → logprob: -3.499973773956299
    6. ' convention' → logprob: -4.124973773956299
    7. '0' → logprob: -4.249973773956299
    8. 'standard' → logprob: -4.499973773956299
    9. ' bool' → logprob: -5.499973773956299
    10. 'v' → logprob: -5.749973773956299

Token 218: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 219: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: ' connect' (ID: 4837)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4571017026901245
    2. ' main' → logprob: -1.0821017026901245
    3. 'sys' → logprob: -4.957101821899414
    4. ' sys' → logprob: -4.957101821899414
    5. 'solve' → logprob: -5.207101821899414
    6. 'att' → logprob: -6.332101821899414
    7. 'range' → logprob: -6.457101821899414
    8. 'input' → logprob: -7.082101821899414
    9. ' solve' → logprob: -7.582101821899414
    10. 'r' → logprob: -8.207101821899414

Token 221: 'e' (ID: 68)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6057868003845215
    2. 'ed' → logprob: -1.2307868003845215
    3. 'é' → logprob: -2.4807868003845215
    4. '(u' → logprob: -3.6057868003845215
    5. '(' → logprob: -3.8557868003845215
    6. 'e' → logprob: -4.6057868003845215
    7. 'ion' → logprob: -4.8557868003845215
    8. '(e' → logprob: -4.9807868003845215
    9. '(ed' → logprob: -6.3557868003845215
    10. 'ée' → logprob: -7.1057868003845215

Token 222: '(q' (ID: 21479)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.17458289861679077
    2. '(' → logprob: -2.0495829582214355
    3. 'd' → logprob: -3.9245829582214355
    4. 'e' → logprob: -5.9245829582214355
    5. '?' → logprob: -6.1745829582214355
    6. '(e' → logprob: -6.2995829582214355
    7. '(d' → logprob: -6.9245829582214355
    8. ' (' → logprob: -7.0495829582214355
    9. 's' → logprob: -7.2995829582214355
    10. 'é' → logprob: -7.5495829582214355

Token 223: ',s' (ID: 20379)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.19990085065364838
    2. '):' → logprob: -3.1999008655548096
    3. '):
' → logprob: -3.4499008655548096
    4. '(u' → logprob: -3.6999008655548096
    5. ')' → logprob: -4.1999006271362305
    6. 'ue' → logprob: -4.3249006271362305
    7. 'uer' → logprob: -4.4499006271362305
    8. ',' → logprob: -4.9499006271362305
    9. 'e' → logprob: -5.1999006271362305
    10. 'é' → logprob: -5.3249006271362305

Token 224: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18937364220619202
    2. 'u' → logprob: -2.314373731613159
    3. '):
' → logprob: -2.814373731613159
    4. ')' → logprob: -4.68937349319458
    5. 'e' → logprob: -6.56437349319458
    6. '):
' → logprob: -6.56437349319458
    7. '(u' → logprob: -7.43937349319458
    8. 'ur' → logprob: -8.439373970031738
    9. '):

' → logprob: -9.064373970031738
    10. 'er' → logprob: -9.064373970031738

Token 225: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01051429845392704
    2. ' X' → logprob: -5.260514259338379
    3. 'X' → logprob: -6.510514259338379
    4. ' u' → logprob: -6.635514259338379
    5. '   ' → logprob: -7.010514259338379
    6. ' if' → logprob: -8.010514259338379
    7. 'u' → logprob: -8.135514259338379
    8. ' return' → logprob: -8.260514259338379
    9. '  ' → logprob: -9.135514259338379
    10. ' for' → logprob: -9.385514259338379

Token 226: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.49029403924942017
    2. ' ' → logprob: -1.1152939796447754
    3. ' return' → logprob: -2.8652939796447754
    4. 'if' → logprob: -7.240293979644775
    5. '	return' → logprob: -7.615293979644775
    6. 'print' → logprob: -7.990293979644775
    7. '   ' → logprob: -7.990293979644775
    8. 'u' → logprob: -8.365294456481934
    9. 'for' → logprob: -8.865294456481934
    10. 'X' → logprob: -8.990294456481934

Token 227: ' rac' (ID: 12334)
  Prédit: 'rac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rac' → logprob: -0.6334021091461182
    2. ' rac' → logprob: -0.7584021091461182
    3. 'r' → logprob: -7.633401870727539
    4. ' ' → logprob: -8.383401870727539
    5. '(r' → logprob: -10.508401870727539
    6. ' ' → logprob: -10.508401870727539
    7. 'ra' → logprob: -11.008401870727539
    8. '  ' → logprob: -12.508401870727539
    9. '(' → logprob: -12.883401870727539
    10. '	r' → logprob: -13.508401870727539

Token 228: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.000293751887511462
    2. 'ute' → logprob: -8.500293731689453
    3. 'inte' → logprob: -10.625293731689453
    4. 'ines' → logprob: -11.375293731689453
    5. 'te' → logprob: -11.625293731689453
    6. 'inez' → logprob: -12.000293731689453
    7. 'une' → logprob: -12.625293731689453
    8. 'uste' → logprob: -12.625293731689453
    9. 'uite' → logprob: -12.750293731689453
    10. 'iné' → logprob: -12.875293731689453

Token 229: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.00035786881926469505
    2. '(s' → logprob: -8.375357627868652
    3. '(' → logprob: -9.000357627868652
    4. '(u' → logprob: -13.125357627868652
    5. '((' → logprob: -14.125357627868652
    6. ' (' → logprob: -14.250357627868652
    7. '(
' → logprob: -15.875357627868652
    8. '[q' → logprob: -15.875357627868652
    9. 'q' → logprob: -16.37535858154297
    10. '(query' → logprob: -17.00035858154297

Token 230: ')' (ID: 8)
  Prédit: ')=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')==' → logprob: -0.1129477396607399
    2. ')' → logprob: -2.237947702407837
    3. ' )' → logprob: -9.237947463989258
    4. '(s' → logprob: -11.987947463989258
    5. '==' → logprob: -12.112947463989258
    6. ']==' → logprob: -12.237947463989258
    7. ')!=' → logprob: -12.737947463989258
    8. ' ' → logprob: -12.862947463989258
    9. ')=' → logprob: -13.487947463989258
    10. '）' → logprob: -13.737947463989258

Token 231: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.010107244364917278
    2. ' ==' → logprob: -5.135107040405273
    3. '()==' → logprob: -5.510107040405273
    4. ')==' → logprob: -9.510107040405273
    5. ' ' → logprob: -11.260107040405273
    6. ']==' → logprob: -11.260107040405273
    7. '=' → logprob: -11.510107040405273
    8. '()' → logprob: -12.510107040405273
    9. '==
' → logprob: -12.760107040405273
    10. 's' → logprob: -12.885107040405273

Token 232: ' rac' (ID: 12334)
  Prédit: 'rac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rac' → logprob: -0.030466722324490547
    2. ' rac' → logprob: -3.5304667949676514
    3. ' ' → logprob: -7.280466556549072
    4. '  ' → logprob: -11.03046703338623
    5. ' ' → logprob: -13.03046703338623
    6. '   ' → logprob: -13.15546703338623
    7. '==' → logprob: -13.53046703338623
    8. '==
' → logprob: -14.03046703338623
    9. '     ' → logprob: -14.15546703338623
    10. 'r' → logprob: -14.28046703338623

Token 233: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.015033903531730175
    2. 'ote' → logprob: -5.140033721923828
    3. 'inte' → logprob: -6.765033721923828
    4. 'u' → logprob: -7.015033721923828
    5. 'root' → logprob: -7.015033721923828
    6. 'ute' → logprob: -7.265033721923828
    7. 'ot' → logprob: -7.265033721923828
    8. '   ' → logprob: -7.265033721923828
    9. 'e' → logprob: -7.390033721923828
    10. 'ite' → logprob: -7.765033721923828

Token 234: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0002466774603817612
    2. 's' → logprob: -9.25024700164795
    3. '(' → logprob: -9.37524700164795
    4. ' (' → logprob: -10.37524700164795
    5. ' s' → logprob: -10.75024700164795
    6. ' ' → logprob: -11.37524700164795
    7. '(
' → logprob: -14.37524700164795
    8. '(q' → logprob: -15.12524700164795
    9. '((' → logprob: -16.125246047973633
    10. ' ' → logprob: -16.250246047973633

Token 235: ')

' (ID: 1029)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16225780546665192
    2. ')' → logprob: -2.0372579097747803
    3. '()' → logprob: -4.162257671356201
    4. ' ())' → logprob: -6.162257671356201
    5. ' ' → logprob: -7.037257671356201
    6. '(q' → logprob: -7.787257671356201
    7. ' )' → logprob: -8.41225814819336
    8. '())
' → logprob: -9.28725814819336
    9. '(' → logprob: -10.41225814819336
    10. ' ()' → logprob: -11.28725814819336

Token 236: 'for' (ID: 1938)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3553045988082886
    2. '()' → logprob: -1.4803045988082886
    3. ')' → logprob: -1.6053045988082886
    4. '(' → logprob: -1.8553045988082886
    5. '[' → logprob: -2.480304718017578
    6. '<|end|>' → logprob: -3.105304718017578
    7. '[]' → logprob: -4.730304718017578
    8. '_' → logprob: -5.230304718017578
    9. '  ' → logprob: -5.980304718017578
    10. ' (' → logprob: -6.355304718017578

Token 237: ' _:' (ID: 133568)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.043267276138067245
    2. '_' → logprob: -3.168267250061035
    3. ' i' → logprob: -8.668267250061035
    4. ' ' → logprob: -9.668267250061035
    5. ' range' → logprob: -11.418267250061035
    6. ' __' → logprob: -11.668267250061035
    7. ' ' → logprob: -12.668267250061035
    8. '_i' → logprob: -13.043267250061035
    9. ' in' → logprob: -13.168267250061035
    10. ' ▁' → logprob: -14.168267250061035

Token 238: '_____' (ID: 174531)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.138070210814476
    2. ' range' → logprob: -2.1380701065063477
    3. '_' → logprob: -4.513070106506348
    4. ' ' → logprob: -10.138070106506348
    5. 'in' → logprob: -10.888070106506348
    6. 'rang' → logprob: -11.138070106506348
    7. ' in' → logprob: -11.263070106506348
    8. ' _' → logprob: -11.763070106506348
    9. ' ' → logprob: -12.638070106506348
    10. '0' → logprob: -12.888070106506348

Token 239: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29111894965171814
    2. ' _' → logprob: -2.041118860244751
    3. 'range' → logprob: -3.166118860244751
    4. ' ' → logprob: -3.291118860244751
    5. ' range' → logprob: -3.416118860244751
    6. ' in' → logprob: -4.91611909866333
    7. 'in' → logprob: -7.29111909866333
    8. '0' → logprob: -7.79111909866333
    9. ' ' → logprob: -8.041118621826172
    10. 'for' → logprob: -8.416118621826172

Token 240: ' [[' (ID: 9237)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014181602746248245
    2. ' range' → logprob: -4.264181613922119
    3. '_' → logprob: -12.139181137084961
    4. 'rang' → logprob: -12.889181137084961
    5. ' ' → logprob: -13.014181137084961
    6. 'iter' → logprob: -13.264181137084961
    7. '```' → logprob: -14.014181137084961
    8. '__' → logprob: -14.264181137084961
    9. 'r' → logprob: -14.389181137084961
    10. 'sys' → logprob: -14.389181137084961

Token 241: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006284609902650118
    2. '0' → logprob: -5.506284713745117
    3. ' range' → logprob: -6.381284713745117
    4. '_' → logprob: -8.256284713745117
    5. 'sys' → logprob: -9.256284713745117
    6. ' ' → logprob: -10.131284713745117
    7. 'rang' → logprob: -11.006284713745117
    8. '1' → logprob: -11.256284713745117
    9. '```' → logprob: -11.631284713745117
    10. 'par' → logprob: -11.631284713745117

Token 242: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -1.4694269895553589
    2. '0' → logprob: -1.8444269895553589
    3. ' ' → logprob: -1.8444269895553589
    4. ']' → logprob: -2.0944271087646484
    5. '1' → logprob: -2.2194271087646484
    6. '_' → logprob: -2.7194271087646484
    7. ' ]' → logprob: -2.7194271087646484
    8. ' ]]' → logprob: -3.5944271087646484
    9. ']>' → logprob: -4.469427108764648
    10. ']]:
' → logprob: -4.719427108764648

Token 243: '*' (ID: 9)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.040436189621686935
    2. ' _' → logprob: -3.665436267852783
    3. ' ' → logprob: -4.915436267852783
    4. '_:' → logprob: -5.790436267852783
    5. ' :' → logprob: -6.165436267852783
    6. ':' → logprob: -7.040436267852783
    7. ' _:' → logprob: -9.040435791015625
    8. '    ' → logprob: -9.165435791015625
    9. '__' → logprob: -9.790435791015625
    10. '  ' → logprob: -9.790435791015625

Token 244: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0006902746972627938
    2. ' M' → logprob: -7.625690460205078
    3. ' ' → logprob: -9.375690460205078
    4. 'N' → logprob: -10.250690460205078
    5. 'int' → logprob: -10.500690460205078
    6. '   ' → logprob: -10.750690460205078
    7. '  ' → logprob: -11.500690460205078
    8. '1' → logprob: -12.375690460205078
    9. '    ' → logprob: -12.375690460205078
    10. '(M' → logprob: -12.750690460205078

Token 245: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043353695422410965
    2. ' :' → logprob: -3.293353796005249
    3. ' ' → logprob: -6.04335355758667
    4. ':
' → logprob: -6.16835355758667
    5. '   ' → logprob: -7.91835355758667
    6. ' :
' → logprob: -7.91835355758667
    7. '  ' → logprob: -10.043354034423828
    8. '_:' → logprob: -11.793354034423828
    9. '    ' → logprob: -11.918354034423828
    10. '_' → logprob: -11.918354034423828

Token 246: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1237507089972496
    2. '   ' → logprob: -3.623750686645508
    3. '  ' → logprob: -3.748750686645508
    4. ' _' → logprob: -3.748750686645508
    5. '    ' → logprob: -4.498750686645508
    6. '_' → logprob: -4.748750686645508
    7. ' line' → logprob: -5.248750686645508
    8. ' input' → logprob: -5.748750686645508
    9. ' q' → logprob: -5.873750686645508
    10. ' s' → logprob: -6.248750686645508

Token 247: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.121259093284607
    2. ' ' → logprob: -1.371259093284607
    3. '_' → logprob: -1.621259093284607
    4. 'input' → logprob: -2.6212592124938965
    5. ' _' → logprob: -2.8712592124938965
    6. ' input' → logprob: -3.3712592124938965
    7. ' sys' → logprob: -4.4962592124938965
    8. '    ' → logprob: -4.8712592124938965
    9. '__' → logprob: -4.9962592124938965
    10. 'sys' → logprob: -5.1212592124938965

Token 248: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5521529316902161
    2. ',b' → logprob: -0.9271529316902161
    3. ' ,' → logprob: -3.9271528720855713
    4. 'b' → logprob: -5.17715311050415
    5. ' b' → logprob: -6.05215311050415
    6. ' ' → logprob: -7.17715311050415
    7. ',v' → logprob: -10.302152633666992
    8. ',s' → logprob: -10.552152633666992
    9. ',n' → logprob: -11.177152633666992
    10. '  ' → logprob: -11.302152633666992

Token 249: ',c' (ID: 22261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16222324967384338
    2. ' =' → logprob: -2.1622233390808105
    3. '=sys' → logprob: -3.4122233390808105
    4. ',' → logprob: -7.2872233390808105
    5. ' ' → logprob: -7.7872233390808105
    6. '=input' → logprob: -8.787222862243652
    7. '=int' → logprob: -9.287222862243652
    8. ',b' → logprob: -9.662222862243652
    9. ',a' → logprob: -9.662222862243652
    10. ',s' → logprob: -9.912222862243652

Token 250: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08216190338134766
    2. ' =' → logprob: -2.5821619033813477
    3. '=sys' → logprob: -5.832161903381348
    4. ' ' → logprob: -8.457161903381348
    5. '=input' → logprob: -10.082161903381348
    6. '=s' → logprob: -11.207161903381348
    7. '=list' → logprob: -11.332161903381348
    8. '=_' → logprob: -11.457161903381348
    9. '=int' → logprob: -11.582161903381348
    10. '=*' → logprob: -11.957161903381348

Token 251: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6542448997497559
    2. 'int' → logprob: -1.0292448997497559
    3. 'map' → logprob: -2.154244899749756
    4. ' map' → logprob: -5.154244899749756
    5. ' int' → logprob: -7.654244899749756
    6. ' *' → logprob: -8.029245376586914
    7. ' ' → logprob: -9.154245376586914
    8. ']int' → logprob: -10.404245376586914
    9. '```' → logprob: -11.029245376586914
    10. '*_' → logprob: -11.279245376586914

Token 252: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.007651584688574076
    2. ' map' → logprob: -4.8826518058776855
    3. '(map' → logprob: -10.132651329040527
    4. 'sys' → logprob: -13.257651329040527
    5. '	map' → logprob: -13.757651329040527
    6. ' ' → logprob: -14.007651329040527
    7. ' ' → logprob: -14.007651329040527
    8. 'int' → logprob: -14.507651329040527
    9. '   ' → logprob: -16.007652282714844
    10. '  ' → logprob: -16.132652282714844

Token 253: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001148313982412219
    2. '(' → logprob: -6.876148223876953
    3. 'int' → logprob: -9.501148223876953
    4. ',int' → logprob: -11.376148223876953
    5. ']int' → logprob: -11.501148223876953
    6. ' (' → logprob: -11.626148223876953
    7. '[int' → logprob: -12.501148223876953
    8. '(
' → logprob: -13.001148223876953
    9. '<int' → logprob: -13.126148223876953
    10. ' int' → logprob: -13.876148223876953

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05592486262321472
    2. '(sys' → logprob: -2.930924892425537
    3. '(' → logprob: -8.305924415588379
    4. ',(' → logprob: -8.805924415588379
    5. '(),' → logprob: -8.930924415588379
    6. ' ,' → logprob: -9.055924415588379
    7. ',input' → logprob: -9.180924415588379
    8. 'sys' → logprob: -9.430924415588379
    9. ',s' → logprob: -9.555924415588379
    10. '=sys' → logprob: -9.930924415588379

Token 255: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0023021509405225515
    2. ' sys' → logprob: -6.127302169799805
    3. 'input' → logprob: -9.502302169799805
    4. '(sys' → logprob: -10.377302169799805
    5. ')' → logprob: -12.002302169799805
    6. '	sys' → logprob: -13.627302169799805
    7. '=sys' → logprob: -13.627302169799805
    8. ' input' → logprob: -14.502302169799805
    9. '   ' → logprob: -14.502302169799805
    10. ' ' → logprob: -14.752302169799805

Token 256: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00071386230411008
    2. 'stdin' → logprob: -7.25071382522583
    3. '.' → logprob: -13.000714302062988
    4. ' stdin' → logprob: -14.375714302062988
    5. '.std' → logprob: -14.625714302062988
    6. '(stdin' → logprob: -15.250714302062988
    7. '```' → logprob: -16.000713348388672
    8. '.stdout' → logprob: -16.250713348388672
    9. '.argv' → logprob: -16.500713348388672
    10. 'std' → logprob: -17.875713348388672

Token 257: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.000846671755425632
    2. '().' → logprob: -7.250846862792969
    3. '.' → logprob: -9.000846862792969
    4. '.stdin' → logprob: -11.625846862792969
    5. ').' → logprob: -14.250846862792969
    6. ' ' → logprob: -14.250846862792969
    7. ' .' → logprob: -14.375846862792969
    8. '.readlines' → logprob: -14.375846862792969
    9. '.read' → logprob: -14.375846862792969
    10. ')' → logprob: -14.625846862792969

Token 258: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.7697225252486533e-06
    2. '()' → logprob: -13.250003814697266
    3. ' ().' → logprob: -13.750003814697266
    4. ' ' → logprob: -14.500003814697266
    5. '.split' → logprob: -16.000003814697266
    6. '.readline' → logprob: -16.750003814697266
    7. '(' → logprob: -16.875003814697266
    8. '())' → logprob: -17.375003814697266
    9. '().__' → logprob: -17.500003814697266
    10. '()
' → logprob: -18.000003814697266

Token 259: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.3438327843905427e-05
    2. 'strip' → logprob: -11.25002384185791
    3. ' split' → logprob: -11.50002384185791
    4. 'rstrip' → logprob: -15.75002384185791
    5. ' ' → logprob: -16.750022888183594
    6. 'spl' → logprob: -17.250022888183594
    7. '```' → logprob: -17.375022888183594
    8. '.split' → logprob: -17.750022888183594
    9. '(split' → logprob: -17.875022888183594
    10. ')' → logprob: -18.250022888183594

Token 260: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003600071184337139
    2. ')]' → logprob: -5.753600120544434
    3. '()' → logprob: -8.128600120544434
    4. '()]' → logprob: -10.003600120544434
    5. '()))' → logprob: -10.003600120544434
    6. ')' → logprob: -10.753600120544434
    7. '()),' → logprob: -12.253600120544434
    8. ' ())' → logprob: -12.628600120544434
    9. ')])' → logprob: -12.878600120544434
    10. '(' → logprob: -13.003600120544434

Token 261: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8892460465431213
    2. ')]' → logprob: -1.0142459869384766
    3. ']' → logprob: -1.5142459869384766
    4. ' ' → logprob: -5.389245986938477
    5. '   ' → logprob: -7.514245986938477
    6. '])' → logprob: -8.264245986938477
    7. ' )' → logprob: -8.389245986938477
    8. ' ]' → logprob: -8.639245986938477
    9. ')])' → logprob: -8.889245986938477
    10. ')
' → logprob: -9.014245986938477

Token 262: '   ' (ID: 271)
  Prédit: '  
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '  
' → logprob: -0.8656374216079712
    2. '   ' → logprob: -1.2406374216079712
    3. '
' → logprob: -2.1156373023986816
    4. ' ' → logprob: -2.3656373023986816
    5. '    
' → logprob: -3.6156373023986816
    6. '<|end|>' → logprob: -3.7406373023986816
    7. '  ' → logprob: -4.990637302398682
    8. ' 
' → logprob: -4.990637302398682
    9. '   
' → logprob: -5.615637302398682
    10. ' if' → logprob: -6.115637302398682

Token 263: ' att' (ID: 1927)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5422993898391724
    2. '   ' → logprob: -1.5422993898391724
    3. 'if' → logprob: -1.6672993898391724
    4. '  
' → logprob: -2.292299270629883
    5. ' if' → logprob: -2.292299270629883
    6. ' 
' → logprob: -2.792299270629883
    7. '<|end|>' → logprob: -2.792299270629883
    8. '    
' → logprob: -3.542299270629883
    9. '    ' → logprob: -4.667299270629883
    10. '  ' → logprob: -4.917299270629883

Token 264: 'acher' (ID: 13652)
  Prédit: 'acher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acher' → logprob: -9.014684110297821e-06
    2. 'a' → logprob: -11.875008583068848
    3. 'cher' → logprob: -14.250008583068848
    4. 'ache' → logprob: -14.875008583068848
    5. 'atcher' → logprob: -15.125008583068848
    6. 'ach' → logprob: -15.875008583068848
    7. 'acheter' → logprob: -16.000009536743164
    8. '(' → logprob: -16.250009536743164
    9. 'aching' → logprob: -16.875009536743164
    10. 'achers' → logprob: -16.875009536743164

Token 265: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00023476807109545916
    2. '(' → logprob: -8.375234603881836
    3. '(
' → logprob: -13.000234603881836
    4. '<|end|>' → logprob: -14.250234603881836
    5. ' (' → logprob: -14.625234603881836
    6. 'a' → logprob: -15.000234603881836
    7. '(ab' → logprob: -15.625234603881836
    8. '(u' → logprob: -16.625234603881836
    9. '((' → logprob: -16.875234603881836
    10. '(abs' → logprob: -17.375234603881836

Token 266: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.014328856952488422
    2. ',' → logprob: -4.389328956604004
    3. ' ,' → logprob: -6.389328956604004
    4. ',c' → logprob: -9.139328956604004
    5. ' ' → logprob: -11.014328956604004
    6. 'b' → logprob: -11.889328956604004
    7. ',a' → logprob: -12.514328956604004
    8. '   ' → logprob: -13.764328956604004
    9. ' b' → logprob: -13.889328956604004
    10. ',
' → logprob: -14.889328956604004

Token 267: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020051265601068735
    2. ')
' → logprob: -6.252005100250244
    3. ' if' → logprob: -10.252005577087402
    4. 'if' → logprob: -11.502005577087402
    5. ')c' → logprob: -11.752005577087402
    6. ' )' → logprob: -12.002005577087402
    7. ' ' → logprob: -12.252005577087402
    8. ')#' → logprob: -12.377005577087402
    9. '<|end|>' → logprob: -12.752005577087402
    10. ')

' → logprob: -13.252005577087402

Token 268: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.062369734048843384
    2. '<|end|>' → logprob: -3.5623698234558105
    3. '  ' → logprob: -4.8123698234558105
    4. '   ' → logprob: -5.4373698234558105
    5. '  
' → logprob: -5.4373698234558105
    6. '[' → logprob: -5.6873698234558105
    7. '    ' → logprob: -5.8123698234558105
    8. ' 
' → logprob: -6.3123698234558105
    9. '[]' → logprob: -7.0623698234558105
    10. '\' → logprob: -7.1873698234558105

Token 269: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0250764898955822
    2. '<|end|>' → logprob: -4.150076389312744
    3. '  ' → logprob: -5.775076389312744
    4. '  
' → logprob: -6.775076389312744
    5. ' 
' → logprob: -7.400076389312744
    6. '[' → logprob: -7.525076389312744
    7. '(' → logprob: -7.650076389312744
    8. ')' → logprob: -7.775076389312744
    9. ' )' → logprob: -7.900076389312744
    10. '#' → logprob: -7.900076389312744

Token 270: '参考' (ID: 38175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02443406917154789
    2. '<|end|>' → logprob: -4.5244340896606445
    3. '[' → logprob: -5.7744340896606445
    4. ')' → logprob: -6.1494340896606445
    5. '  ' → logprob: -6.7744340896606445
    6. '(' → logprob: -6.8994340896606445
    7. ''' → logprob: -6.8994340896606445
    8. '   ' → logprob: -7.3994340896606445
    9. ' )' → logprob: -7.3994340896606445
    10. '  
' → logprob: -8.024434089660645

Token 271: 'スタ' (ID: 63355)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 272: 'イル' (ID: 78239)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4441254436969757
    2. ')' → logprob: -2.8191254138946533
    3. 'r' → logprob: -3.1941254138946533
    4. '#' → logprob: -3.4441254138946533
    5. 'for' → logprob: -3.4441254138946533
    6. 's' → logprob: -3.8191254138946533
    7. 'connect' → logprob: -4.069125652313232
    8. 'print' → logprob: -4.069125652313232
    9. '...' → logprob: -4.319125652313232
    10. ' for' → logprob: -4.694125652313232

Token 273: ':' (ID: 25)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31645193696022034
    2. '<|end|>' → logprob: -2.0664520263671875
    3. '   ' → logprob: -2.3164520263671875
    4. '  ' → logprob: -4.1914520263671875
    5. '[' → logprob: -4.8164520263671875
    6. '#' → logprob: -5.6914520263671875
    7. '    ' → logprob: -6.0664520263671875
    8. '  
' → logprob: -6.3164520263671875
    9. ')' → logprob: -6.5664520263671875
    10. '```' → logprob: -6.5664520263671875

Token 274: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16186214983463287
    2. '<|end|>' → logprob: -3.1618621349334717
    3. ' for' → logprob: -3.4118621349334717
    4. ' ' → logprob: -3.4118621349334717
    5. '#' → logprob: -4.161862373352051
    6. 'print' → logprob: -4.661862373352051
    7. '```' → logprob: -4.911862373352051
    8. 'a' → logprob: -6.911862373352051
    9. '  
' → logprob: -6.911862373352051
    10. '   ' → logprob: -7.036862373352051

Token 275: '/' (ID: 14)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.776642918586731
    2. ' ' → logprob: -1.776642918586731
    3. ' _' → logprob: -2.1516427993774414
    4. ' i' → logprob: -2.4016427993774414
    5. ' a' → logprob: -3.0266427993774414
    6. 'a' → logprob: -3.0266427993774414
    7. 'i' → logprob: -3.7766427993774414
    8. '<|end|>' → logprob: -4.151642799377441
    9. '  ' → logprob: -5.526642799377441
    10. 'for' → logprob: -6.526642799377441

Token 276: 'else' (ID: 2807)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2253681868314743
    2. ' _' → logprob: -1.8503681421279907
    3. ' in' → logprob: -4.100368022918701
    4. ' ' → logprob: -4.475368022918701
    5. ' for' → logprob: -6.100368022918701
    6. ' a' → logprob: -6.225368022918701
    7. ' s' → logprob: -6.350368022918701
    8. 'in' → logprob: -6.350368022918701
    9. ' if' → logprob: -6.850368022918701
    10. 'a' → logprob: -6.975368022918701

Token 277: ' anti' (ID: 10329)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19549888372421265
    2. ' for' → logprob: -1.8204989433288574
    3. '<|end|>' → logprob: -5.070498943328857
    4. ' ' → logprob: -5.320498943328857
    5. '```' → logprob: -6.570498943328857
    6. '
' → logprob: -6.945498943328857
    7. '  
' → logprob: -7.070498943328857
    8. '   ' → logprob: -8.9454984664917
    9. ' ' → logprob: -9.1954984664917
    10. ')' → logprob: -9.3204984664917

Token 278: '-pattern' (ID: 173980)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022664932534098625
    2. ':
' → logprob: -4.147665023803711
    3. '
' → logprob: -6.647665023803711
    4. '```' → logprob: -6.647665023803711
    5. ' for' → logprob: -6.772665023803711
    6. ' ' → logprob: -7.147665023803711
    7. ' if' → logprob: -7.522665023803711
    8. ' :' → logprob: -7.772665023803711
    9. 'for' → logprob: -8.772665023803711
    10. ':

' → logprob: -8.897665023803711

Token 279: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.513578474521637
    2. '
' → logprob: -1.7635784149169922
    3. ' for' → logprob: -2.138578414916992
    4. '<|end|>' → logprob: -2.513578414916992
    5. ' ' → logprob: -4.013578414916992
    6. '  
' → logprob: -5.013578414916992
    7. '```' → logprob: -5.888578414916992
    8. ' 
' → logprob: -7.638578414916992
    9. '<|end|>' → logprob: -7.763578414916992
    10. 'if' → logprob: -8.013578414916992

Token 280: 'k' (ID: 74)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008193492889404297
    2. ' for' → logprob: -4.883193492889404
    3. '<|end|>' → logprob: -8.133193969726562
    4. '
' → logprob: -9.633193969726562
    5. 'if' → logprob: -9.883193969726562
    6. '```' → logprob: -10.008193969726562
    7. 'f' → logprob: -10.633193969726562
    8. ' ' → logprob: -10.758193969726562
    9. '  
' → logprob: -10.883193969726562
    10. 'else' → logprob: -11.383193969726562

Token 281: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7527354955673218
    2. '=' → logprob: -1.0027354955673218
    3. ',' → logprob: -2.2527356147766113
    4. ' ,' → logprob: -3.0027356147766113
    5. 'ey' → logprob: -6.377735614776611
    6. '=int' → logprob: -6.502735614776611
    7. ' ' → logprob: -7.002735614776611
    8. ' in' → logprob: -7.377735614776611
    9. '＝' → logprob: -8.252735137939453
    10. ',k' → logprob: -8.502735137939453

Token 282: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07668393850326538
    2. '1' → logprob: -3.82668399810791
    3. 'N' → logprob: -3.95168399810791
    4. ' ' → logprob: -4.07668399810791
    5. 'rac' → logprob: -4.82668399810791
    6. 'M' → logprob: -6.45168399810791
    7. 'len' → logprob: -6.45168399810791
    8. ' N' → logprob: -6.95168399810791
    9. '-' → logprob: -7.07668399810791
    10. 'par' → logprob: -7.95168399810791

Token 283: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12022224068641663
    2. ' for' → logprob: -2.245222330093384
    3. '
' → logprob: -5.495222091674805
    4. '<|end|>' → logprob: -6.245222091674805
    5. ' ' → logprob: -6.995222091674805
    6. ';' → logprob: -9.370222091674805
    7. ',' → logprob: -9.495222091674805
    8. '#' → logprob: -9.745222091674805
    9. '	for' → logprob: -10.995222091674805
    10. '  
' → logprob: -11.120222091674805

Token 284: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005656321067363024
    2. ' for' → logprob: -5.7556562423706055
    3. '
' → logprob: -6.3806562423706055
    4. 'k' → logprob: -7.7556562423706055
    5. 'while' → logprob: -8.880656242370605
    6. 'range' → logprob: -9.255656242370605
    7. '<|end|>' → logprob: -10.630656242370605
    8. 'N' → logprob: -11.505656242370605
    9. '0' → logprob: -11.630656242370605
    10. 'i' → logprob: -11.630656242370605

Token 285: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09740486741065979
    2. ' i' → logprob: -2.472404956817627
    3. 'x' → logprob: -6.097404956817627
    4. 'k' → logprob: -6.222404956817627
    5. '_' → logprob: -6.472404956817627
    6. '_i' → logprob: -7.722404956817627
    7. 'a' → logprob: -8.347404479980469
    8. 'u' → logprob: -8.347404479980469
    9. 'v' → logprob: -8.472404479980469
    10. '(i' → logprob: -8.722404479980469

Token 286: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5771798491477966
    2. ' in' → logprob: -0.8271798491477966
    3. ' ' → logprob: -6.952179908752441
    4. ',' → logprob: -8.577179908752441
    5. ',_' → logprob: -11.202179908752441
    6. '	in' → logprob: -11.577179908752441
    7. 'range' → logprob: -11.577179908752441
    8. '　' → logprob: -11.702179908752441
    9. '  ' → logprob: -11.702179908752441
    10. '1' → logprob: -11.827179908752441

Token 287: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12703698873519897
    2. ' range' → logprob: -2.1270370483398438
    3. ' ' → logprob: -9.877037048339844
    4. 'rang' → logprob: -10.877037048339844
    5. '	range' → logprob: -11.627037048339844
    6. '(range' → logprob: -12.252037048339844
    7. '   ' → logprob: -12.377037048339844
    8. 'r' → logprob: -12.627037048339844
    9. '  ' → logprob: -12.752037048339844
    10. 'ra' → logprob: -13.127037048339844

Token 288: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002679463941603899
    2. '1' → logprob: -6.127679347991943
    3. '(N' → logprob: -7.752679347991943
    4. ' ' → logprob: -10.502679824829102
    5. 'N' → logprob: -11.377679824829102
    6. ' (' → logprob: -11.502679824829102
    7. '2' → logprob: -12.752679824829102
    8. ',' → logprob: -13.252679824829102
    9. '(n' → logprob: -13.252679824829102
    10. '   ' → logprob: -13.252679824829102

Token 289: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008909993804991245
    2. 'N' → logprob: -4.758910179138184
    3. '2' → logprob: -8.883910179138184
    4. ' ' → logprob: -8.883910179138184
    5. '(' → logprob: -11.883910179138184
    6. ' N' → logprob: -12.008910179138184
    7. '   ' → logprob: -13.258910179138184
    8. 'len' → logprob: -14.008910179138184
    9. '  ' → logprob: -14.633910179138184
    10. 'k' → logprob: -14.758910179138184

Token 290: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7189515829086304
    2. ',N' → logprob: -0.7189515829086304
    3. ' ,' → logprob: -3.71895170211792
    4. ',n' → logprob: -6.96895170211792
    5. ',k' → logprob: -8.843951225280762
    6. ',len' → logprob: -9.968951225280762
    7. ' ' → logprob: -10.718951225280762
    8. 'N' → logprob: -11.468951225280762
    9. ',
' → logprob: -11.843951225280762
    10. '   ' → logprob: -11.968951225280762

Token 291: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00404385244473815
    2. ' +' → logprob: -6.129044055938721
    3. '):
' → logprob: -6.379044055938721
    4. '):' → logprob: -9.004043579101562
    5. '+
' → logprob: -11.379043579101562
    6. '＋' → logprob: -11.504043579101562
    7. ' ' → logprob: -12.129043579101562
    8. ' ):
' → logprob: -12.254043579101562
    9. ')' → logprob: -13.629043579101562
    10. ',' → logprob: -14.004043579101562

Token 292: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000488811288960278
    2. ' ' → logprob: -7.625488758087158
    3. '１' → logprob: -14.750489234924316
    4. '   ' → logprob: -16.12548828125
    5. '```' → logprob: -16.25048828125
    6. ')' → logprob: -16.37548828125
    7. '):
' → logprob: -16.37548828125
    8. '
' → logprob: -16.87548828125
    9. '2' → logprob: -17.12548828125
    10. '  ' → logprob: -17.25048828125

Token 293: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5783124566078186
    2. '):' → logprob: -0.8283124566078186
    3. ')' → logprob: -6.453312397003174
    4. ':' → logprob: -8.328312873840332
    5. ' ' → logprob: -8.453312873840332
    6. ' ):
' → logprob: -8.453312873840332
    7. ' ):' → logprob: -9.328312873840332
    8. '):
' → logprob: -11.203312873840332
    9. ':
' → logprob: -11.828312873840332
    10. '   ' → logprob: -11.953312873840332

Token 294: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09679268300533295
    2. '   ' → logprob: -2.596792697906494
    3. ' if' → logprob: -5.096792697906494
    4. ' for' → logprob: -5.471792697906494
    5. '  ' → logprob: -5.721792697906494
    6. '  
' → logprob: -6.221792697906494
    7. 'for' → logprob: -7.221792697906494
    8. 'if' → logprob: -7.846792697906494
    9. '<|end|>' → logprob: -8.346792221069336
    10. ' ' → logprob: -8.846792221069336

Token 295: ' rac' (ID: 12334)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15888682007789612
    2. 'for' → logprob: -2.4088869094848633
    3. '   ' → logprob: -3.6588869094848633
    4. ' if' → logprob: -4.033886909484863
    5. ' ' → logprob: -5.158886909484863
    6. ' for' → logprob: -5.533886909484863
    7. 'par' → logprob: -6.408886909484863
    8. 'k' → logprob: -6.658886909484863
    9. ' par' → logprob: -8.408886909484863
    10. ' k' → logprob: -8.658886909484863

Token 296: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.0009312293259426951
    2. 'ute' → logprob: -7.250931262969971
    3. 'u' → logprob: -10.750930786132812
    4. 'ines' → logprob: -10.750930786132812
    5. '```' → logprob: -11.000930786132812
    6. '   ' → logprob: -11.125930786132812
    7. 'inte' → logprob: -11.125930786132812
    8. 'uite' → logprob: -11.250930786132812
    9. 'i' → logprob: -11.375930786132812
    10. 'ite' → logprob: -11.500930786132812

Token 297: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -7.195421494543552e-05
    2. '(' → logprob: -9.87507152557373
    3. 'i' → logprob: -12.00007152557373
    4. '(N' → logprob: -12.62507152557373
    5. '(k' → logprob: -12.75007152557373
    6. '(par' → logprob: -13.37507152557373
    7. ',i' → logprob: -13.50007152557373
    8. 'par' → logprob: -13.75007152557373
    9. ' ' → logprob: -14.12507152557373
    10. '=i' → logprob: -14.37507152557373

Token 298: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10919371247291565
    2. ')==' → logprob: -2.859193801879883
    3. ')!=' → logprob: -3.609193801879883
    4. '==' → logprob: -4.484193801879883
    5. '!=' → logprob: -5.984193801879883
    6. '()!=' → logprob: -6.609193801879883
    7. ' )' → logprob: -6.859193801879883
    8. '()==' → logprob: -6.984193801879883
    9. ' ==' → logprob: -7.609193801879883
    10. '()' → logprob: -7.859193801879883

Token 299: 'else' (ID: 2807)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 300: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5050738453865051
    2. ':
' → logprob: -1.0050737857818604
    3. ' :' → logprob: -4.5050740242004395
    4. '   ' → logprob: -4.7550740242004395
    5. ' :
' → logprob: -5.2550740242004395
    6. ' ' → logprob: -5.2550740242004395
    7. '    ' → logprob: -9.130073547363281
    8. '  ' → logprob: -9.505073547363281
    9. ' ' → logprob: -9.505073547363281
    10. ':\' → logprob: -10.380073547363281

Token 301: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5781450867652893
    2. '   ' → logprob: -1.4531450271606445
    3. ' k' → logprob: -1.7031450271606445
    4. 'k' → logprob: -4.8281450271606445
    5. ' for' → logprob: -5.0781450271606445
    6. ' print' → logprob: -5.7031450271606445
    7. ' ' → logprob: -6.3281450271606445
    8. ' pass' → logprob: -6.9531450271606445
    9. '  ' → logprob: -7.0781450271606445
    10. 'print' → logprob: -8.203145027160645

Token 302: ' k' (ID: 372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7016851305961609
    2. '   ' → logprob: -1.0766851902008057
    3. 'k' (adapté à ' k') → logprob: -2.5766851902008057
    4. 'print' → logprob: -3.0766851902008057
    5. ' k' → logprob: -4.451684951782227
    6. 'for' → logprob: -4.701684951782227
    7. ' for' → logprob: -4.951684951782227
    8. ' print' → logprob: -5.826684951782227
    9. ' ' → logprob: -6.201684951782227
    10. 'pass' → logprob: -6.326684951782227

Token 303: '=len' (ID: 114011)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19745051860809326
    2. ' =' → logprob: -2.447450637817383
    3. '+=' → logprob: -2.697450637817383
    4. ' +=' → logprob: -3.947450637817383
    5. '=k' → logprob: -5.697450637817383
    6. '=len' → logprob: -6.447450637817383
    7. ' ' → logprob: -7.697450637817383
    8. '=max' → logprob: -8.697450637817383
    9. '=int' → logprob: -9.697450637817383
    10. '=sum' → logprob: -9.822450637817383

Token 304: '({' (ID: 3972)
  Prédit: '(set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.04069557785987854
    2. '({' → logprob: -3.6656956672668457
    3. '(par' → logprob: -4.290695667266846
    4. '(' → logprob: -8.040695190429688
    5. '([' → logprob: -8.540695190429688
    6. '(list' → logprob: -10.415695190429688
    7. '{' → logprob: -11.415695190429688
    8. '(
' → logprob: -11.665695190429688
    9. '((' → logprob: -11.665695190429688
    10. '({
' → logprob: -12.540695190429688

Token 305: '*' (ID: 9)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.022522157058119774
    2. ' par' → logprob: -4.27252197265625
    3. 'rac' → logprob: -4.89752197265625
    4. ' rac' → logprob: -8.27252197265625
    5. ' ' → logprob: -8.77252197265625
    6. '(par' → logprob: -9.02252197265625
    7. 'p' → logprob: -9.39752197265625
    8. 'r' → logprob: -9.96002197265625
    9. '	par' → logprob: -10.02252197265625
    10. '   ' → logprob: -10.71002197265625

Token 306: 'par' (ID: 796)
  Prédit: 'par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.0038104073610156775
    2. '(par' → logprob: -6.253810405731201
    3. 'map' → logprob: -7.003810405731201
    4. 'rac' → logprob: -7.753810405731201
    5. '[' → logprob: -8.12881088256836
    6. ' par' → logprob: -8.75381088256836
    7. '(' → logprob: -10.87881088256836
    8. ' ' → logprob: -11.00381088256836
    9. '	par' → logprob: -11.37881088256836
    10. '   ' → logprob: -11.50381088256836

Token 307: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -7.660315895918757e-05
    2. '[' → logprob: -9.875076293945312
    3. 'ent' → logprob: -11.625076293945312
    4. '{' → logprob: -13.250076293945312
    5. 'r' → logprob: -13.375076293945312
    6. 'ante' → logprob: -13.375076293945312
    7. 'par' → logprob: -13.625076293945312
    8. 'te' → logprob: -13.875076293945312
    9. '[r' → logprob: -14.000076293945312
    10. 'ete' → logprob: -14.125076293945312

Token 308: '})' (ID: 9263)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47450000047683716
    2. '})' → logprob: -0.9745000004768372
    3. '[i' → logprob: -9.099499702453613
    4. '(' → logprob: -9.724499702453613
    5. ')' → logprob: -9.974499702453613
    6. '[:' → logprob: -10.099499702453613
    7. '});' → logprob: -10.224499702453613
    8. ' })' → logprob: -10.349499702453613
    9. '}))' → logprob: -10.599499702453613
    10. '})
' → logprob: -11.224499702453613

Token 309: '-' (ID: 12)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 310: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005296798190101981
    2. ' ' → logprob: -7.750529766082764
    3. 'k' → logprob: -10.250529289245605
    4. '2' → logprob: -10.250529289245605
    5. 'N' → logprob: -11.125529289245605
    6. '(' → logprob: -12.625529289245605
    7. ' k' → logprob: -13.125529289245605
    8. '   ' → logprob: -13.250529289245605
    9. ' N' → logprob: -13.375529289245605
    10. '(N' → logprob: -14.125529289245605

Token 311: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 312: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 313: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.014165629632771015
    2. '(' → logprob: -4.26416540145874
    3. ' (' → logprob: -13.639165878295898
    4. '((' → logprob: -14.889165878295898
    5. '(
' → logprob: -15.264165878295898
    6. 'k' → logprob: -15.889165878295898
    7. '('' → logprob: -16.0141658782959
    8. '()' → logprob: -16.1391658782959
    9. '(q' → logprob: -17.7641658782959
    10. '(len' → logprob: -18.0141658782959

Token 314: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.537868779967539e-06
    2. ' )' → logprob: -11.875008583068848
    3. ')
' → logprob: -13.500008583068848
    4. '）' → logprob: -16.25000762939453
    5. ')`' → logprob: -16.37500762939453
    6. '))' → logprob: -17.75000762939453
    7. ')#' → logprob: -17.75000762939453
    8. '`)' → logprob: -18.75000762939453
    9. '')' → logprob: -18.87500762939453
    10. ')

' → logprob: -19.37500762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 312
Tokens correctement prédits (1ère position, stricte): 109
Tokens correctement prédits (1ère position, avec adaptation): 110
Tokens correctement prédits (top 10): 208
Précision stricte (1ère position): 34.94%
Précision adaptée (1ère position): 35.26%
Précision (top 10): 66.67%
================================================================================
